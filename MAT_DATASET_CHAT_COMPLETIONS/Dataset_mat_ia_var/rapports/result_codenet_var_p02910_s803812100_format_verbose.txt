================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:44:31
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def is_string_valid_based_on_character_positions(input_string):
    
    for character_index in range(len(input_string)):
        
        current_character = input_string[character_index]
        
        if character_index % 2 == 0:
            allowed_characters_at_even_indices = ['R', 'U', 'D']
            if current_character not in allowed_characters_at_even_indices:
                return "No"
        else:
            allowed_characters_at_odd_indices = ['L', 'U', 'D']
            if current_character not in allowed_characters_at_odd_indices:
                return "No"
    
    return "Yes"


user_input_string = input()

print(is_string_valid_based_on_character_positions(user_input_string))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' is' (ID: 382)
  → Token d'amorce (pas de prédiction)

Token 2: '_string' (ID: 8609)
  → Token d'amorce (pas de prédiction)

Token 3: '_valid' (ID: 23321)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2269420474767685
    2. '_' → logprob: -1.6019420623779297
    3. '(_' → logprob: -7.72694206237793
    4. ' (' → logprob: -8.10194206237793
    5. '```' → logprob: -8.35194206237793
    6. '(a' → logprob: -9.60194206237793
    7. '('_' → logprob: -9.85194206237793
    8. '_(' → logprob: -9.85194206237793
    9. '_token' → logprob: -10.22694206237793
    10. '_a' → logprob: -10.47694206237793

Token 4: '_based' (ID: 167300)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0022539799101650715
    2. '_' → logprob: -6.252254009246826
    3. '(:' → logprob: -9.252253532409668
    4. '(_:' → logprob: -9.502253532409668
    5. '```' → logprob: -9.752253532409668
    6. '(_' → logprob: -10.752253532409668
    7. '():' → logprob: -10.877253532409668
    8. ':' → logprob: -11.377253532409668
    9. '_:' → logprob: -12.002253532409668
    10. '(a' → logprob: -12.127253532409668

Token 5: '_on' (ID: 10053)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5662710070610046
    2. '_on' → logprob: -1.3162710666656494
    3. 'on' → logprob: -1.8162710666656494
    4. '(' → logprob: -7.06627082824707
    5. '```' → logprob: -9.06627082824707
    6. '__' → logprob: -9.44127082824707
    7. ' on' → logprob: -9.69127082824707
    8. '_(' → logprob: -9.81627082824707
    9. '(_' → logprob: -10.06627082824707
    10. '_for' → logprob: -10.19127082824707

Token 6: '_character' (ID: 99888)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5629348754882812
    2. '_length' → logprob: -1.0629348754882812
    3. '_type' → logprob: -3.8129348754882812
    4. '_input' → logprob: -4.187934875488281
    5. '_string' → logprob: -4.812934875488281
    6. 'length' → logprob: -5.437934875488281
    7. '```' → logprob: -5.687934875488281
    8. '(' → logprob: -6.062934875488281
    9. '_space' → logprob: -6.312934875488281
    10. '_parent' → logprob: -6.437934875488281

Token 7: '_positions' (ID: 93193)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7236080169677734
    2. '(' → logprob: -0.8486080169677734
    3. '_' → logprob: -2.5986080169677734
    4. '_count' → logprob: -5.098608016967773
    5. '```' → logprob: -6.223608016967773
    6. '(s' → logprob: -6.348608016967773
    7. '_s' → logprob: -6.723608016967773
    8. '(_' → logprob: -8.223608016967773
    9. '_(' → logprob: -8.473608016967773
    10. '_:' → logprob: -8.598608016967773

Token 8: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0017024369444698095
    2. '(:' → logprob: -6.876702308654785
    3. '():' → logprob: -8.376702308654785
    4. '(_:' → logprob: -8.376702308654785
    5. ':' → logprob: -9.626702308654785
    6. '_' → logprob: -10.001702308654785
    7. '```' → logprob: -10.501702308654785
    8. '(_' → logprob: -11.126702308654785
    9. ' (' → logprob: -11.126702308654785
    10. '_:' → logprob: -11.376702308654785

Token 9: '_string' (ID: 8609)
  Prédit: '_string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -0.31894451379776
    2. ')' → logprob: -1.9439444541931152
    3. '_' → logprob: -2.8189444541931152
    4. ')_' → logprob: -3.3189444541931152
    5. '):' → logprob: -4.943944454193115
    6. '_token' → logprob: -5.443944454193115
    7. '_name' → logprob: -5.568944454193115
    8. '_str' → logprob: -5.568944454193115
    9. 's' → logprob: -5.568944454193115
    10. 'string' → logprob: -5.818944454193115

Token 10: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.17691512405872345
    2. ')' → logprob: -2.176915168762207
    3. '(' → logprob: -4.051915168762207
    4. '[' → logprob: -4.301915168762207
    5. ':' → logprob: -4.801915168762207
    6. ',' → logprob: -4.926915168762207
    7. '```' → logprob: -7.551915168762207
    8. ''):' → logprob: -7.926915168762207
    9. '():' → logprob: -8.176915168762207
    10. ' ' → logprob: -8.551915168762207

Token 11: '    
' (ID: 1944)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3472592532634735
    2. ':' → logprob: -1.722259283065796
    3. '(:' → logprob: -2.472259283065796
    4. '```' → logprob: -4.097259044647217
    5. '():' → logprob: -4.722259044647217
    6. '   ' → logprob: -6.972259044647217
    7. ''' → logprob: -7.097259044647217
    8. '(":' → logprob: -7.597259044647217
    9. ':return' → logprob: -7.847259044647217
    10. '`' → logprob: -7.972259044647217

Token 12: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07315222173929214
    2. '```' → logprob: -2.6981523036956787
    3. '    ' → logprob: -7.0731520652771
    4. '       ' → logprob: -7.3231520652771
    5. '``' → logprob: -7.6981520652771
    6. ' indentation' → logprob: -8.073152542114258
    7. 'indent' → logprob: -8.573152542114258
    8. '    
' → logprob: -8.948152542114258
    9. ' ' → logprob: -9.323152542114258
    10. ' if' → logprob: -9.698152542114258

Token 13: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1893596351146698
    2. 'i' → logprob: -2.314359664916992
    3. '```' → logprob: -3.939359664916992
    4. 'if' → logprob: -4.814359664916992
    5. 'valid' → logprob: -4.814359664916992
    6. 'for' (adapté à ' for') → logprob: -5.064359664916992
    7. ' ' → logprob: -5.189359664916992
    8. ' if' → logprob: -5.564359664916992
    9. 'return' → logprob: -5.689359664916992
    10. ' for' → logprob: -6.064359664916992

Token 14: ' character' (ID: 5855)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.819533109664917
    2. ' ' → logprob: -1.069533109664917
    3. ' char' → logprob: -1.694533109664917
    4. ' i' → logprob: -3.569533109664917
    5. ' token' → logprob: -6.694533348083496
    6. 'c' → logprob: -6.819533348083496
    7. ' character' → logprob: -7.569533348083496
    8. 'char' → logprob: -8.444533348083496
    9. ' )' → logprob: -8.819533348083496
    10. '_' → logprob: -8.819533348083496

Token 15: '_index' (ID: 7748)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016671981662511826
    2. 'in' → logprob: -4.516672134399414
    3. ' ' → logprob: -6.016672134399414
    4. '_' → logprob: -6.266672134399414
    5. '_in' → logprob: -7.641672134399414
    6. '  ' → logprob: -8.391672134399414
    7. 's' → logprob: -8.891672134399414
    8. ',' → logprob: -9.141672134399414
    9. ' ,' → logprob: -9.516672134399414
    10. '<|end|>' → logprob: -10.266672134399414

Token 16: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.026538770645856857
    2. 'in' → logprob: -3.776538848876953
    3. ' ' → logprob: -6.026538848876953
    4. ' ,' → logprob: -8.901538848876953
    5. '   ' → logprob: -9.026538848876953
    6. ',' → logprob: -9.026538848876953
    7. '  ' → logprob: -9.151538848876953
    8. '    ' → logprob: -9.276538848876953
    9. '<|end|>' → logprob: -9.401538848876953
    10. ' =' → logprob: -10.276538848876953

Token 17: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0033681849017739296
    2. 'range' → logprob: -5.753368377685547
    3. ' input' → logprob: -8.628368377685547
    4. ' ' → logprob: -11.878368377685547
    5. 'input' → logprob: -13.753368377685547
    6. ' len' → logprob: -14.253368377685547
    7. ' xrange' → logprob: -14.628368377685547
    8. '	range' → logprob: -14.628368377685547
    9. '(range' → logprob: -14.753368377685547
    10. '```' → logprob: -15.378368377685547

Token 18: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.5760104656219482
    2. '(' → logprob: -0.8260104656219482
    3. ' (' → logprob: -9.701010704040527
    4. '(length' → logprob: -12.076010704040527
    5. 'len' → logprob: -13.076010704040527
    6. '(
' → logprob: -14.451010704040527
    7. ' len' → logprob: -14.951010704040527
    8. '(strlen' → logprob: -15.076010704040527
    9. '(

' → logprob: -16.07600975036621
    10. '<len' → logprob: -16.45100975036621

Token 19: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.001938750152476132
    2. '(' → logprob: -6.251938819885254
    3. ' (' → logprob: -12.001938819885254
    4. 'input' → logprob: -13.251938819885254
    5. '(
' → logprob: -14.251938819885254
    6. ')' → logprob: -14.626938819885254
    7. '=input' → logprob: -14.876938819885254
    8. '(

' → logprob: -15.376938819885254
    9. ' input' → logprob: -16.001937866210938
    10. '(in' → logprob: -16.001937866210938

Token 20: '_string' (ID: 8609)
  Prédit: '_string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -3.4121114822482923e-06
    2. '_' → logprob: -13.375003814697266
    3. 'string' → logprob: -13.625003814697266
    4. '_strings' → logprob: -16.000003814697266
    5. ')_' → logprob: -16.500003814697266
    6. ')' → logprob: -16.625003814697266
    7. '_s' → logprob: -16.875003814697266
    8. 'String' → logprob: -16.875003814697266
    9. '```' → logprob: -16.875003814697266
    10. ' _' → logprob: -17.125003814697266

Token 21: ')):
' (ID: 22530)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.010221821255981922
    2. '))' → logprob: -5.3852219581604
    3. '):' → logprob: -5.8852219581604
    4. ')):
' → logprob: -6.5102219581604
    5. ')' → logprob: -6.7602219581604
    6. ' ' → logprob: -9.510221481323242
    7. ' ))' → logprob: -10.510221481323242
    8. ')):
' → logprob: -10.760221481323242
    9. '   ' → logprob: -11.760221481323242
    10. ' ):' → logprob: -12.010221481323242

Token 22: '        
' (ID: 3564)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5060358047485352
    2. ':' → logprob: -1.2560358047485352
    3. ' :' → logprob: -3.256035804748535
    4. '    ' → logprob: -3.506035804748535
    5. ' ' → logprob: -4.381035804748535
    6. '   ' → logprob: -5.006035804748535
    7. '[' → logprob: -5.381035804748535
    8. ')' → logprob: -5.506035804748535
    9. '):' → logprob: -5.506035804748535
    10. '(' → logprob: -6.006035804748535

Token 23: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8806944489479065
    2. ' if' → logprob: -1.2556943893432617
    3. '    ' → logprob: -1.6306943893432617
    4. '   ' → logprob: -3.6306943893432617
    5. ' ' → logprob: -3.8806943893432617
    6. 'if' → logprob: -3.8806943893432617
    7. 'i' → logprob: -5.130694389343262
    8. '```' → logprob: -5.130694389343262
    9. 'c' → logprob: -5.380694389343262
    10. '_' → logprob: -6.130694389343262

Token 24: ' current' (ID: 2208)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6583550572395325
    2. ' if' → logprob: -0.7833550572395325
    3. '   ' → logprob: -4.658355236053467
    4. 'character' → logprob: -5.533355236053467
    5. '       ' → logprob: -5.908355236053467
    6. 'char' → logprob: -5.908355236053467
    7. 'current' (adapté à ' current') → logprob: -6.408355236053467
    8. '```' → logprob: -6.533355236053467
    9. 'c' → logprob: -7.158355236053467
    10. ' character' → logprob: -7.283355236053467

Token 25: '_character' (ID: 99888)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.017148079350590706
    2. '_character' → logprob: -4.142148017883301
    3. '_char' → logprob: -7.517148017883301
    4. '_string' → logprob: -8.1421480178833
    5. '_token' → logprob: -8.5171480178833
    6. ' _' → logprob: -10.3921480178833
    7. '_space' → logprob: -11.1421480178833
    8. 'character' → logprob: -11.5171480178833
    9. ' ' → logprob: -12.0171480178833
    10. ')' → logprob: -12.5171480178833

Token 26: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3839796781539917
    2. '=' → logprob: -1.8839796781539917
    3. ' ==' → logprob: -2.6339797973632812
    4. '_' → logprob: -3.3839797973632812
    5. ')' → logprob: -3.8839797973632812
    6. '<|end|>' → logprob: -4.008979797363281
    7. ' ' → logprob: -4.508979797363281
    8. '==' → logprob: -5.758979797363281
    9. 's' → logprob: -6.383979797363281
    10. '<|end|>' → logprob: -7.008979797363281

Token 27: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.0067161982879042625
    2. 'input' → logprob: -5.006716251373291
    3. '=input' → logprob: -14.881715774536133
    4. ' ' → logprob: -15.881715774536133
    5. '	input' → logprob: -16.131715774536133
    6. ' ' → logprob: -16.381715774536133
    7. '_input' → logprob: -16.631715774536133
    8. '(input' → logprob: -16.881715774536133
    9. ' current' → logprob: -17.256715774536133
    10. ',input' → logprob: -17.631715774536133

Token 28: '_string' (ID: 8609)
  Prédit: '_string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -7.350386295001954e-05
    2. 'string' → logprob: -9.875073432922363
    3. '_character' → logprob: -11.250073432922363
    4. 'String' → logprob: -12.875073432922363
    5. '_' → logprob: -12.875073432922363
    6. '```' → logprob: -13.250073432922363
    7. '_char' → logprob: -14.250073432922363
    8. '_token' → logprob: -15.125073432922363
    9. '_s' → logprob: -15.375073432922363
    10. '_str' → logprob: -15.375073432922363

Token 29: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.008675076998770237
    2. '[current' → logprob: -4.7586750984191895
    3. '```' → logprob: -10.883674621582031
    4. '[
' → logprob: -11.008674621582031
    5. '[token' → logprob: -11.758674621582031
    6. ' [' → logprob: -12.633674621582031
    7. '   ' → logprob: -12.883674621582031
    8. '[column' → logprob: -13.258674621582031
    9. ' ' → logprob: -13.508674621582031
    10. '[first' → logprob: -14.008674621582031

Token 30: 'character' (ID: 38245)
  Prédit: 'character'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'character' → logprob: -0.0003360582049936056
    2. ' character' → logprob: -8.000335693359375
    3. '_character' → logprob: -14.500335693359375
    4. '(character' → logprob: -17.125335693359375
    5. ')' → logprob: -17.500335693359375
    6. ' ' → logprob: -18.750335693359375
    7. '.character' → logprob: -19.125335693359375
    8. 'Character' → logprob: -19.500335693359375
    9. 'current' → logprob: -19.625335693359375
    10. '   ' → logprob: -19.875335693359375

Token 31: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.00019102399528492242
    2. 'index' → logprob: -9.750190734863281
    3. ']_' → logprob: -9.875190734863281
    4. ']' → logprob: -10.250190734863281
    5. ')]' → logprob: -10.875190734863281
    6. '])' → logprob: -11.125190734863281
    7. '_]' → logprob: -12.625190734863281
    8. ')' → logprob: -13.250190734863281
    9. '_' → logprob: -13.625190734863281
    10. 'Index' → logprob: -13.875190734863281

Token 32: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01652425155043602
    2. ')' → logprob: -4.891524314880371
    3. ')]' → logprob: -4.891524314880371
    4. '])' → logprob: -7.391524314880371
    5. '+' → logprob: -7.516524314880371
    6. ' ]' → logprob: -9.391524314880371
    7. ']
' → logprob: -10.141524314880371
    8. ' +' → logprob: -10.391524314880371
    9. ')])' → logprob: -10.891524314880371
    10. '   ' → logprob: -11.266524314880371

Token 33: '        
' (ID: 3564)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.45986440777778625
    2. '        
' → logprob: -1.2098643779754639
    3. ':' → logprob: -3.709864377975464
    4. '        ' → logprob: -4.459864616394043
    5. ' ' → logprob: -5.084864616394043
    6. '```' → logprob: -5.084864616394043
    7. '<|end|>' → logprob: -5.834864616394043
    8. '
' → logprob: -5.834864616394043
    9. '         
' → logprob: -5.959864616394043
    10. '       
' → logprob: -6.209864616394043

Token 34: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.31445178389549255
    2. '        
' → logprob: -1.814451813697815
    3. '        ' → logprob: -2.8144516944885254
    4. '```' → logprob: -4.314451694488525
    5. '         
' → logprob: -4.439451694488525
    6. 'if' → logprob: -5.189451694488525
    7. ' 
' → logprob: -5.814451694488525
    8. ' if' → logprob: -6.189451694488525
    9. 'n' → logprob: -6.439451694488525
    10. ' ' → logprob: -6.564451694488525

Token 35: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.016005979850888252
    2. ' if' → logprob: -4.391005992889404
    3. '   ' → logprob: -6.391005992889404
    4. '       ' → logprob: -7.016005992889404
    5. 'i' → logprob: -7.516005992889404
    6. '```' → logprob: -8.141005516052246
    7. ' ' → logprob: -10.766005516052246
    8. '#' → logprob: -11.016005516052246
    9. '           ' → logprob: -11.266005516052246
    10. ' i' → logprob: -11.641005516052246

Token 36: ' character' (ID: 5855)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.12315276265144348
    2. 'current' → logprob: -3.373152732849121
    3. ' character' → logprob: -3.498152732849121
    4. ' not' → logprob: -3.498152732849121
    5. ' ' → logprob: -4.748152732849121
    6. ' input' → logprob: -4.748152732849121
    7. 'character' → logprob: -5.748152732849121
    8. 'input' → logprob: -7.998152732849121
    9. 'not' → logprob: -9.248152732849121
    10. ' len' → logprob: -10.748152732849121

Token 37: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.0032039734069257975
    2. '_' → logprob: -5.753203868865967
    3. ' _' → logprob: -12.003204345703125
    4. 's' → logprob: -12.003204345703125
    5. '_indices' → logprob: -13.003204345703125
    6. '_position' → logprob: -13.378204345703125
    7. '```' → logprob: -13.503204345703125
    8. '_idx' → logprob: -13.878204345703125
    9. '_s' → logprob: -14.003204345703125
    10. '_indexes' → logprob: -14.128204345703125

Token 38: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.6502528190612793
    2. ' ==' → logprob: -1.5252528190612793
    3. ' ' → logprob: -1.7752528190612793
    4. '%' → logprob: -3.2752528190612793
    5. '==' → logprob: -3.7752528190612793
    6. ' >' → logprob: -4.275252819061279
    7. ' <' → logprob: -4.775252819061279
    8. ' >=' → logprob: -6.400252819061279
    9. '>' → logprob: -6.650252819061279
    10. ' <=' → logprob: -6.650252819061279

Token 39: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.20174270868301392
    2. ' ' → logprob: -1.7017426490783691
    3. '3' → logprob: -8.201743125915527
    4. '4' → logprob: -11.326743125915527
    5. '5' → logprob: -11.451743125915527
    6. '7' → logprob: -12.139243125915527
    7. '10' → logprob: -12.264243125915527
    8. '```' → logprob: -12.389243125915527
    9. '==' → logprob: -12.514243125915527
    10. '6' → logprob: -13.076743125915527

Token 40: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.003644257318228483
    2. '3' → logprob: -6.3786444664001465
    3. ' ' → logprob: -6.6286444664001465
    4. '5' → logprob: -8.378643989562988
    5. '4' → logprob: -8.878643989562988
    6. '7' → logprob: -9.378643989562988
    7. '10' → logprob: -9.378643989562988
    8. '11' → logprob: -11.253643989562988
    9. '6' → logprob: -11.378643989562988
    10. '8' → logprob: -11.878643989562988

Token 41: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.28291890025138855
    2. ' ==' → logprob: -1.407918930053711
    3. '0' → logprob: -7.532918930053711
    4. '=' → logprob: -7.657918930053711
    5. '!=' → logprob: -8.032918930053711
    6. ' !=' → logprob: -8.532918930053711
    7. ' ' → logprob: -8.907918930053711
    8. '<|end|>' → logprob: -10.157918930053711
    9. ')==' → logprob: -11.032918930053711
    10. ')' → logprob: -11.032918930053711

Token 42: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1808544248342514
    2. '0' → logprob: -1.8058544397354126
    3. '1' → logprob: -6.805854320526123
    4. '=' → logprob: -14.180854797363281
    5. '<|end|>' → logprob: -14.930854797363281
    6. '==' → logprob: -15.305854797363281
    7. ' ' → logprob: -15.805854797363281
    8. '2' → logprob: -16.74335479736328
    9. '```' → logprob: -16.80585479736328
    10. '...' → logprob: -17.18085479736328

Token 43: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.023290783166885376
    2. ' ' → logprob: -3.8982908725738525
    3. '1' → logprob: -5.898290634155273
    4. '<|end|>' → logprob: -14.585790634155273
    5. '```' → logprob: -15.710790634155273
    6. '۰' → logprob: -16.773290634155273
    7. '01' → logprob: -17.210790634155273
    8. ' ' → logprob: -17.273290634155273
    9. '==' → logprob: -17.335790634155273
    10. '=' → logprob: -18.085790634155273

Token 44: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06835062056779861
    2. ' and' → logprob: -3.4433505535125732
    3. ' :' → logprob: -3.4433505535125732
    4. ' ' → logprob: -6.693350791931152
    5. 'and' → logprob: -7.193350791931152
    6. ' ==' → logprob: -9.943350791931152
    7. ':
' → logprob: -10.318350791931152
    8. '<|end|>' → logprob: -10.693350791931152
    9. '=' → logprob: -11.318350791931152
    10. ' :
' → logprob: -11.818350791931152

Token 45: '           ' (ID: 352)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10453391075134277
    2. ' and' → logprob: -3.2295339107513428
    3. '        ' → logprob: -3.8545339107513428
    4. '           ' → logprob: -4.229534149169922
    5. '       ' → logprob: -4.479534149169922
    6. ':' → logprob: -5.479534149169922
    7. ' if' → logprob: -6.479534149169922
    8. '            ' → logprob: -6.729534149169922
    9. 'and' → logprob: -6.979534149169922
    10. ' not' → logprob: -7.854534149169922

Token 46: ' allowed' (ID: 9279)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.29558584094047546
    2. 'if' → logprob: -1.4205858707427979
    3. '           ' → logprob: -4.420585632324219
    4. '            
' → logprob: -7.045585632324219
    5. ' ' → logprob: -7.795585632324219
    6. '       ' → logprob: -8.045585632324219
    7. '               ' → logprob: -8.420585632324219
    8. ' continue' → logprob: -9.045585632324219
    9. '                
' → logprob: -9.670585632324219
    10. '   ' → logprob: -10.045585632324219

Token 47: '_char' (ID: 23398)
  Prédit: '_chars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_chars' → logprob: -0.6708285808563232
    2. '_' → logprob: -1.2958285808563232
    3. '_char' → logprob: -1.7958285808563232
    4. '_character' → logprob: -3.2958285808563232
    5. '_letters' → logprob: -5.795828819274902
    6. ' =' → logprob: -6.045828819274902
    7. '=' → logprob: -6.170828819274902
    8. '<|end|>' → logprob: -7.045828819274902
    9. '_lower' → logprob: -7.545828819274902
    10. '_=' → logprob: -7.545828819274902

Token 48: 'acters' (ID: 8385)
  Prédit: 'acters'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acters' → logprob: -0.00015335931675508618
    2. 'aters' → logprob: -9.500153541564941
    3. 's' → logprob: -10.125153541564941
    4. 'ers' → logprob: -11.250153541564941
    5. 'acter' → logprob: -11.250153541564941
    6. 'ters' → logprob: -12.250153541564941
    7. '=' → logprob: -12.875153541564941
    8. '```' → logprob: -13.500153541564941
    9. 'arters' → logprob: -14.000153541564941
    10. 'ar' → logprob: -14.125153541564941

Token 49: '_at' (ID: 8254)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04301620274782181
    2. '=' → logprob: -3.168016195297241
    3. ' ==' → logprob: -12.54301643371582
    4. ' ' → logprob: -12.66801643371582
    5. 's' → logprob: -13.41801643371582
    6. ' ='' → logprob: -13.41801643371582
    7. '<|end|>' → logprob: -13.66801643371582
    8. ')' → logprob: -14.04301643371582
    9. '==' → logprob: -14.41801643371582
    10. ':' → logprob: -14.41801643371582

Token 50: '_even' (ID: 186029)
  Prédit: '_even'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_even' → logprob: -0.12504947185516357
    2. ' ' → logprob: -4.125049591064453
    3. '_current' → logprob: -4.250049591064453
    4. ' current' → logprob: -4.250049591064453
    5. '_positions' → logprob: -4.500049591064453
    6. 'even' → logprob: -4.500049591064453
    7. 'current' → logprob: -4.625049591064453
    8. '_position' → logprob: -5.000049591064453
    9. '_index' → logprob: -5.000049591064453
    10. ' =' → logprob: -5.250049591064453

Token 51: '_indices' (ID: 43508)
  Prédit: '_positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_positions' → logprob: -0.17549891769886017
    2. ' =' → logprob: -2.1754989624023438
    3. '=' → logprob: -3.8004989624023438
    4. '_indices' → logprob: -4.425498962402344
    5. '_indexes' → logprob: -5.175498962402344
    6. '_index' → logprob: -6.175498962402344
    7. 'positions' → logprob: -6.425498962402344
    8. '_' → logprob: -6.675498962402344
    9. 's' → logprob: -7.175498962402344
    10. '_position' → logprob: -7.550498962402344

Token 52: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04304760321974754
    2. '=' → logprob: -3.1680476665496826
    3. ' ' → logprob: -11.043047904968262
    4. ' +=' → logprob: -11.418047904968262
    5. '+=' → logprob: -12.418047904968262
    6. ' =
' → logprob: -12.793047904968262
    7. '           ' → logprob: -12.918047904968262
    8. ' ==' → logprob: -13.293047904968262
    9. ' ='' → logprob: -13.543047904968262
    10. '.append' → logprob: -14.418047904968262

Token 53: ' ['' (ID: 5140)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.41650086641311646
    2. ' "' → logprob: -1.2915008068084717
    3. ''' → logprob: -3.7915008068084717
    4. ' '' → logprob: -4.291501045227051
    5. ' set' → logprob: -4.916501045227051
    6. ' {'' → logprob: -4.916501045227051
    7. 'set' → logprob: -5.541501045227051
    8. '['' → logprob: -5.666501045227051
    9. ' ['' → logprob: -6.416501045227051
    10. ''s' → logprob: -6.416501045227051

Token 54: 'R' (ID: 49)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2115165889263153
    2. ''a' → logprob: -2.0865166187286377
    3. ''' → logprob: -3.0865166187286377
    4. ''A' → logprob: -5.336516380310059
    5. 'A' → logprob: -5.461516380310059
    6. 'v' → logprob: -5.961516380310059
    7. ''e' → logprob: -6.211516380310059
    8. 'c' → logprob: -6.336516380310059
    9. 'x' → logprob: -7.211516380310059
    10. ''s' → logprob: -7.211516380310059

Token 55: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.11000417172908783
    2. '','' → logprob: -2.985004186630249
    3. 'A' → logprob: -3.860004186630249
    4. 'B' → logprob: -5.11000394821167
    5. 'a' → logprob: -5.36000394821167
    6. 'G' → logprob: -5.48500394821167
    7. 'e' → logprob: -5.61000394821167
    8. 'R' → logprob: -5.86000394821167
    9. 'P' → logprob: -6.61000394821167
    10. ''' → logprob: -6.61000394821167

Token 56: ' '' (ID: 461)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'G' → logprob: -1.4204970598220825
    2. ''' → logprob: -1.5454970598220825
    3. ''S' → logprob: -2.045496940612793
    4. 'S' → logprob: -2.920496940612793
    5. 'B' → logprob: -2.920496940612793
    6. 'L' → logprob: -3.545496940612793
    7. ''L' → logprob: -3.670496940612793
    8. ''D' → logprob: -3.795496940612793
    9. ''A' → logprob: -3.795496940612793
    10. ''N' → logprob: -3.920496940612793

Token 57: 'U' (ID: 52)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.9500328302383423
    2. 'B' → logprob: -2.2000327110290527
    3. 'L' → logprob: -2.2000327110290527
    4. 'S' → logprob: -2.8250327110290527
    5. 'W' → logprob: -3.2000327110290527
    6. 'Y' → logprob: -3.2000327110290527
    7. 'D' → logprob: -3.5750327110290527
    8. 'A' → logprob: -3.5750327110290527
    9. 'C' → logprob: -3.5750327110290527
    10. 'U' → logprob: -3.9500327110290527

Token 58: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -1.1367268562316895
    2. 'N' → logprob: -1.5117268562316895
    3. 'L' → logprob: -1.8867268562316895
    4. 'S' → logprob: -2.2617268562316895
    5. '']' → logprob: -2.3867268562316895
    6. 'P' → logprob: -3.5117268562316895
    7. ''' → logprob: -3.8867268562316895
    8. 'M' → logprob: -4.8867268562316895
    9. ''N' → logprob: -5.0117268562316895
    10. ',' → logprob: -5.1367268562316895

Token 59: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5174037218093872
    2. ''S' → logprob: -1.8924037218093872
    3. ' '' → logprob: -2.0174036026000977
    4. ''D' → logprob: -3.6424036026000977
    5. ''T' → logprob: -3.7674036026000977
    6. ''L' → logprob: -4.017403602600098
    7. ''N' → logprob: -4.267403602600098
    8. ''A' → logprob: -4.892403602600098
    9. ''I' → logprob: -5.142403602600098
    10. ''C' → logprob: -5.142403602600098

Token 60: 'D' (ID: 35)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.959172785282135
    2. 'D' → logprob: -1.3341727256774902
    3. 'S' → logprob: -2.8341727256774902
    4. 'B' → logprob: -2.8341727256774902
    5. 'P' → logprob: -3.0841727256774902
    6. 'I' → logprob: -3.0841727256774902
    7. 'E' → logprob: -3.5841727256774902
    8. 'N' → logprob: -3.8341727256774902
    9. 'F' → logprob: -4.20917272567749
    10. 'G' → logprob: -4.20917272567749

Token 61: '']
' (ID: 9756)
  Prédit: '']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '']' → logprob: -0.10742168873548508
    2. '',' → logprob: -2.357421636581421
    3. ''' → logprob: -5.482421875
    4. '']
' → logprob: -6.607421875
    5. ']' → logprob: -7.482421875
    6. 'I' → logprob: -8.482421875
    7. '']
' → logprob: -8.857421875
    8. ' ']' → logprob: -8.857421875
    9. 'A' → logprob: -9.232421875
    10. ',' → logprob: -9.357421875

Token 62: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.017331337556242943
    2. '            
' → logprob: -4.142331123352051
    3. '                
' → logprob: -8.26733112335205
    4. '               ' → logprob: -8.39233112335205
    5. '<|end|>' → logprob: -8.51733112335205
    6. 'elif' → logprob: -9.39233112335205
    7. '       ' → logprob: -9.64233112335205
    8. ' if' → logprob: -9.76733112335205
    9. 'if' → logprob: -9.76733112335205
    10. 'else' → logprob: -9.89233112335205

Token 63: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.6089075207710266
    2. '           ' → logprob: -1.1089074611663818
    3. ' if' → logprob: -2.108907461166382
    4. '            
' → logprob: -5.858907699584961
    5. '               ' → logprob: -6.858907699584961
    6. ' ' → logprob: -8.858907699584961
    7. 'continue' → logprob: -8.858907699584961
    8. '            ' → logprob: -8.858907699584961
    9. '<|end|>' → logprob: -9.233907699584961
    10. '                
' → logprob: -9.358907699584961

Token 64: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.0010579373920336366
    2. 'current' → logprob: -6.876058101654053
    3. ' not' → logprob: -10.876057624816895
    4. ' ' → logprob: -12.376057624816895
    5. '	current' → logprob: -14.501057624816895
    6. ' ' → logprob: -14.501057624816895
    7. 'urrent' → logprob: -14.751057624816895
    8. '(current' → logprob: -16.37605857849121
    9. 'not' → logprob: -16.50105857849121
    10. ' input' → logprob: -16.62605857849121

Token 65: '_character' (ID: 99888)
  Prédit: '_character'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_character' → logprob: -0.00011486753646750003
    2. '_' → logprob: -9.375114440917969
    3. 'character' → logprob: -10.500114440917969
    4. '_char' → logprob: -13.375114440917969
    5. ' _' → logprob: -14.750114440917969
    6. '_CHARACTER' → logprob: -14.875114440917969
    7. ' character' → logprob: -16.87511444091797
    8. '_current' → logprob: -17.00011444091797
    9. 'Character' → logprob: -17.25011444091797
    10. '_string' → logprob: -17.50011444091797

Token 66: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.0013282144209370017
    2. 'not' → logprob: -6.626327991485596
    3. ' ' → logprob: -13.751328468322754
    4. ' in' → logprob: -14.501328468322754
    5. '	not' → logprob: -14.751328468322754
    6. '<|end|>' → logprob: -16.126327514648438
    7. ' no' → logprob: -16.501327514648438
    8. ')' → logprob: -17.126327514648438
    9. '<|end|>' → logprob: -18.001327514648438
    10. '_not' → logprob: -18.126327514648438

Token 67: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00928376242518425
    2. 'in' → logprob: -5.009283542633057
    3. '<|end|>' → logprob: -6.259283542633057
    4. ' ' → logprob: -8.509284019470215
    5. '<|end|>' → logprob: -8.884284019470215
    6. 'to' → logprob: -9.884284019470215
    7. '            ' → logprob: -10.009284019470215
    8. 'allowed' → logprob: -10.009284019470215
    9. ' to' → logprob: -10.634284019470215
    10. '	in' → logprob: -11.134284019470215

Token 68: ' allowed' (ID: 9279)
  Prédit: ' allowed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' allowed' → logprob: -0.016039881855249405
    2. 'allowed' → logprob: -4.141039848327637
    3. '_allowed' → logprob: -12.516039848327637
    4. ' permitted' → logprob: -14.016039848327637
    5. '.allowed' → logprob: -15.016039848327637
    6. ' ' → logprob: -15.391039848327637
    7. ' allowable' → logprob: -15.391039848327637
    8. 'Allowed' → logprob: -15.766039848327637
    9. 'allow' → logprob: -17.016040802001953
    10. ' ' → logprob: -17.391040802001953

Token 69: '_char' (ID: 23398)
  Prédit: '_char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -0.0003241414960939437
    2. '_character' → logprob: -8.125324249267578
    3. '_' → logprob: -10.750324249267578
    4. 'characters' → logprob: -12.875324249267578
    5. ' _' → logprob: -13.375324249267578
    6. '_allowed' → logprob: -14.375324249267578
    7. '_chars' → logprob: -14.500324249267578
    8. '```' → logprob: -15.125324249267578
    9. '_c' → logprob: -15.375324249267578
    10. '_car' → logprob: -16.000324249267578

Token 70: 'acters' (ID: 8385)
  Prédit: 'acters'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acters' → logprob: -0.012287236750125885
    2. 'ar' → logprob: -4.512287139892578
    3. 'ers' → logprob: -7.887287139892578
    4. 'ectors' → logprob: -8.012287139892578
    5. 'aters' → logprob: -8.512287139892578
    6. 'ars' → logprob: -9.387287139892578
    7. 'ot' → logprob: -10.012287139892578
    8. 'characters' → logprob: -10.137287139892578
    9. 'arters' → logprob: -10.387287139892578
    10. 'ect' → logprob: -10.512287139892578

Token 71: '_at' (ID: 8254)
  Prédit: '_at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_at' → logprob: -0.00027587503427639604
    2. 'at' → logprob: -8.250275611877441
    3. ')' → logprob: -12.625275611877441
    4. '_' → logprob: -12.750275611877441
    5. ' at' → logprob: -13.125275611877441
    6. ':' → logprob: -13.625275611877441
    7. '	at' → logprob: -14.125275611877441
    8. 'At' → logprob: -14.125275611877441
    9. '[' → logprob: -14.250275611877441
    10. '   ' → logprob: -14.250275611877441

Token 72: '_even' (ID: 186029)
  Prédit: '_even'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_even' → logprob: -0.04300855100154877
    2. 'even' → logprob: -3.16800856590271
    3. ' even' → logprob: -13.043008804321289
    4. '_' → logprob: -13.793008804321289
    5. '_allowed' → logprob: -14.043008804321289
    6. '```' → logprob: -14.293008804321289
    7. 'e' → logprob: -14.668008804321289
    8. 'evenodd' → logprob: -14.918008804321289
    9. 'ven' → logprob: -15.043008804321289
    10. '[' → logprob: -15.043008804321289

Token 73: '_indices' (ID: 43508)
  Prédit: '_indices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_indices' → logprob: -0.6525744199752808
    2. '_char' → logprob: -0.7775744199752808
    3. 'indices' → logprob: -4.02757453918457
    4. 'characters' → logprob: -6.77757453918457
    5. '           ' → logprob: -8.15257453918457
    6. '_character' → logprob: -8.77757453918457
    7. '_positions' → logprob: -9.02757453918457
    8. '       ' → logprob: -9.65257453918457
    9. '```' → logprob: -10.40257453918457
    10. 'char' → logprob: -10.77757453918457

Token 74: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01114992517977953
    2. ':
' → logprob: -4.761149883270264
    3. ':return' → logprob: -6.886149883270264
    4. '               ' → logprob: -7.011149883270264
    5. '           ' → logprob: -7.636149883270264
    6. '):' → logprob: -9.511150360107422
    7. ' or' → logprob: -11.136150360107422
    8. '):
' → logprob: -11.261150360107422
    9. ' :' → logprob: -11.636150360107422
    10. ' and' → logprob: -12.886150360107422

Token 75: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1824268400669098
    2. ':' → logprob: -1.9324268102645874
    3. '           ' → logprob: -4.307426929473877
    4. ':return' → logprob: -5.432426929473877
    5. ':
' → logprob: -6.307426929473877
    6. ' return' → logprob: -7.182426929473877
    7. 'return' → logprob: -7.807426929473877
    8. ' :' → logprob: -7.932426929473877
    9. '                
' → logprob: -8.432426452636719
    10. '            
' → logprob: -8.932426452636719

Token 76: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.13418741524219513
    2. '               ' → logprob: -2.5091874599456787
    3. 'return' (adapté à ' return') → logprob: -3.6341874599456787
    4. '           ' → logprob: -4.2591872215271
    5. '                ' → logprob: -6.2591872215271
    6. '            ' → logprob: -7.5091872215271
    7. ' 
' → logprob: -7.5091872215271
    8. ' ' → logprob: -8.009187698364258
    9. '                   ' → logprob: -9.384187698364258
    10. '   ' → logprob: -9.509187698364258

Token 77: ' "' (ID: 392)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.01815006136894226
    2. ' False' → logprob: -4.0181498527526855
    3. 'True' → logprob: -16.393150329589844
    4. 'None' → logprob: -18.393150329589844
    5. '(False' → logprob: -19.768150329589844
    6. 'F' → logprob: -19.893150329589844
    7. ' True' → logprob: -20.393150329589844
    8. 'false' → logprob: -21.143150329589844
    9. ' None' → logprob: -21.643150329589844
    10. ' ' → logprob: -21.643150329589844

Token 78: 'No' (ID: 3160)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0016581593081355095
    2. ' False' → logprob: -6.626657962799072
    3. 'Invalid' → logprob: -8.25165843963623
    4. '"' → logprob: -10.00165843963623
    5. 'F' → logprob: -12.25165843963623
    6. 'false' → logprob: -12.50165843963623
    7. 'invalid' → logprob: -12.75165843963623
    8. 'INVALID' → logprob: -12.87665843963623
    9. 'True' → logprob: -13.50165843963623
    10. 'FALSE' → logprob: -13.62665843963623

Token 79: '"
' (ID: 1092)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.00015586259542033076
    2. '"
' → logprob: -9.375155448913574
    3. 't' → logprob: -11.000155448913574
    4. ' "' → logprob: -11.250155448913574
    5. '\n' → logprob: -11.500155448913574
    6. 'n' → logprob: -12.000155448913574
    7. 'def' → logprob: -12.125155448913574
    8. '"\' → logprob: -12.875155448913574
    9. ' valid' → logprob: -13.250155448913574
    10. 'string' → logprob: -13.500155448913574

Token 80: '       ' (ID: 309)
  Prédit: '        
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '        
' → logprob: -0.6496042609214783
    2. '       ' → logprob: -0.7746042609214783
    3. '
' → logprob: -5.399604320526123
    4. '            
' → logprob: -5.524604320526123
    5. '    
' → logprob: -6.399604320526123
    6. '<|end|>' → logprob: -6.524604320526123
    7. '    ' → logprob: -7.149604320526123
    8. '   ' → logprob: -7.149604320526123
    9. '        ' → logprob: -7.774604320526123
    10. '        
        
' → logprob: -8.024603843688965

Token 81: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20610231161117554
    2. ' else' → logprob: -2.3311023712158203
    3. 'else' (adapté à ' else') → logprob: -2.5811023712158203
    4. '        
' → logprob: -5.08110237121582
    5. '   ' → logprob: -5.70610237121582
    6. '    ' → logprob: -6.70610237121582
    7. '<|end|>' → logprob: -7.33110237121582
    8. '        ' → logprob: -7.95610237121582
    9. 'elif' → logprob: -7.95610237121582
    10. ' elif' → logprob: -8.20610237121582

Token 82: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0010072042932733893
    2. ':
' → logprob: -7.126007080078125
    3. '           ' → logprob: -9.126007080078125
    4. ' :' → logprob: -10.126007080078125
    5. '       ' → logprob: -10.376007080078125
    6. '        ' → logprob: -11.251007080078125
    7. '{' → logprob: -12.626007080078125
    8. '<|end|>' → logprob: -13.251007080078125
    9. ':

' → logprob: -14.251007080078125
    10. '    ' → logprob: -14.251007080078125

Token 83: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11286116391420364
    2. '        ' → logprob: -2.987861156463623
    3. '            ' → logprob: -3.487861156463623
    4. '            
' → logprob: -4.862861156463623
    5. '       ' → logprob: -5.112861156463623
    6. ' ' → logprob: -5.612861156463623
    7. '        
' → logprob: -5.862861156463623
    8. '```' → logprob: -6.487861156463623
    9. '    ' → logprob: -6.987861156463623
    10. ' ' → logprob: -7.487861156463623

Token 84: ' allowed' (ID: 9279)
  Prédit: 'allowed'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'allowed' (adapté à ' allowed') → logprob: -0.25000274181365967
    2. ' allowed' → logprob: -1.6250027418136597
    3. '           ' → logprob: -3.875002861022949
    4. ' return' → logprob: -6.625002861022949
    5. 'return' → logprob: -7.000002861022949
    6. '            
' → logprob: -7.500002861022949
    7. ' if' → logprob: -8.62500286102295
    8. 'if' → logprob: -9.25000286102295
    9. '   ' → logprob: -9.87500286102295
    10. '       ' → logprob: -10.00000286102295

Token 85: '_char' (ID: 23398)
  Prédit: '_char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -0.0056032114662230015
    2. '_' → logprob: -5.380603313446045
    3. '_chars' → logprob: -7.255603313446045
    4. '_character' → logprob: -8.630602836608887
    5. '<|end|>' → logprob: -9.880602836608887
    6. '_c' → logprob: -11.880602836608887
    7. ' _' → logprob: -12.255602836608887
    8. '```' → logprob: -12.380602836608887
    9. '_code' → logprob: -12.630602836608887
    10. '_s' → logprob: -12.630602836608887

Token 86: 'acters' (ID: 8385)
  Prédit: 'acters'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acters' → logprob: -0.0020983952563256025
    2. 'ar' → logprob: -6.252098560333252
    3. 'ers' → logprob: -9.502098083496094
    4. 'aters' → logprob: -10.252098083496094
    5. 'arters' → logprob: -10.877098083496094
    6. 'ters' → logprob: -10.877098083496094
    7. 'er' → logprob: -11.752098083496094
    8. 'characters' → logprob: -12.377098083496094
    9. 'ars' → logprob: -12.877098083496094
    10. 'actors' → logprob: -13.377098083496094

Token 87: '_at' (ID: 8254)
  Prédit: '_at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_at' → logprob: -0.016674213111400604
    2. ' =' → logprob: -4.766674041748047
    3. '_' → logprob: -5.016674041748047
    4. '_a' → logprob: -7.766674041748047
    5. '=' → logprob: -8.016674041748047
    6. ' ' → logprob: -8.641674041748047
    7. ' at' → logprob: -9.141674041748047
    8. 'at' → logprob: -9.266674041748047
    9. ' _' → logprob: -9.266674041748047
    10. 's' → logprob: -9.516674041748047

Token 88: '_' (ID: 62)
  Prédit: '_even'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_even' → logprob: -0.0825200229883194
    2. 'odd' → logprob: -3.082520008087158
    3. 'even' → logprob: -3.832520008087158
    4. '_' → logprob: -4.832520008087158
    5. '['' → logprob: -5.707520008087158
    6. '[' → logprob: -9.457520484924316
    7. '[]' → logprob: -9.957520484924316
    8. 'e' → logprob: -9.957520484924316
    9. '```' → logprob: -10.332520484924316
    10. 's' → logprob: -10.457520484924316

Token 89: 'odd' (ID: 18303)
  Prédit: 'even'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'even' → logprob: -0.022653046995401382
    2. 'odd' → logprob: -4.272653102874756
    3. '_even' → logprob: -5.147653102874756
    4. 'ven' → logprob: -6.147653102874756
    5. '['' → logprob: -8.647652626037598
    6. 'index' → logprob: -9.272652626037598
    7. 'end' → logprob: -9.647652626037598
    8. 'evenodd' → logprob: -10.647652626037598
    9. '[]' → logprob: -11.022652626037598
    10. '[' → logprob: -11.147652626037598

Token 90: '_indices' (ID: 43508)
  Prédit: '_char'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -0.014466460794210434
    2. '_indices' → logprob: -4.264466285705566
    3. '_chars' → logprob: -8.889466285705566
    4. '_positions' → logprob: -9.514466285705566
    5. '_indexes' → logprob: -10.514466285705566
    6. 's' → logprob: -11.014466285705566
    7. '_' → logprob: -11.514466285705566
    8. ' _' → logprob: -11.764466285705566
    9. '_at' → logprob: -12.264466285705566
    10. '_s' → logprob: -12.264466285705566

Token 91: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018200282007455826
    2. '=' → logprob: -4.018200397491455
    3. '_' → logprob: -10.018199920654297
    4. ' ' → logprob: -13.143199920654297
    5. ')' → logprob: -14.268199920654297
    6. '=['' → logprob: -14.518199920654297
    7. ' _' → logprob: -14.643199920654297
    8. '=[]' → logprob: -14.768199920654297
    9. ' +=' → logprob: -15.143199920654297
    10. '<|end|>' → logprob: -15.393199920654297

Token 92: ' ['' (ID: 5140)
  Prédit: ' [''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ['' → logprob: -0.4744883179664612
    2. '['' → logprob: -0.9744883179664612
    3. '[' → logprob: -8.349488258361816
    4. ' [' → logprob: -9.349488258361816
    5. '["' → logprob: -10.849488258361816
    6. ' '' → logprob: -10.849488258361816
    7. '['_' → logprob: -11.099488258361816
    8. ''' → logprob: -11.849488258361816
    9. ' ' → logprob: -11.974488258361816
    10. ' ["' → logprob: -12.349488258361816

Token 93: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.016440417617559433
    2. 'R' → logprob: -4.891440391540527
    3. 'U' → logprob: -5.516440391540527
    4. 'D' → logprob: -5.891440391540527
    5. '0' → logprob: -8.016440391540527
    6. 'C' → logprob: -8.391440391540527
    7. 'S' → logprob: -8.578940391540527
    8. 'A' → logprob: -8.641440391540527
    9. 'F' → logprob: -8.828940391540527
    10. '1' → logprob: -9.078940391540527

Token 94: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.001619003596715629
    2. ''' → logprob: -6.7516188621521
    3. '','' → logprob: -8.626619338989258
    4. ' ',' → logprob: -9.001619338989258
    5. '']' → logprob: -9.501619338989258
    6. ',' → logprob: -9.876619338989258
    7. 'A' → logprob: -13.001619338989258
    8. '",' → logprob: -13.001619338989258
    9. ''A' → logprob: -13.501619338989258
    10. 'a' → logprob: -14.001619338989258

Token 95: ' '' (ID: 461)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.9904943108558655
    2. ''' → logprob: -1.1154942512512207
    3. ' R' → logprob: -1.6154942512512207
    4. ' '' → logprob: -2.4904942512512207
    5. ''U' → logprob: -5.490494251251221
    6. 'C' → logprob: -5.865494251251221
    7. ''D' → logprob: -6.240494251251221
    8. ''A' → logprob: -6.240494251251221
    9. ' ' → logprob: -6.615494251251221
    10. ''C' → logprob: -6.615494251251221

Token 96: 'U' (ID: 52)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.09060899913311005
    2. 'U' → logprob: -3.090609073638916
    3. 'D' → logprob: -3.340609073638916
    4. 'L' → logprob: -5.840609073638916
    5. 'S' → logprob: -7.215609073638916
    6. 'A' → logprob: -7.715609073638916
    7. 'F' → logprob: -7.840609073638916
    8. 'O' → logprob: -7.840609073638916
    9. 'I' → logprob: -8.215608596801758
    10. 'B' → logprob: -9.215608596801758

Token 97: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.010218867100775242
    2. '']' → logprob: -4.635219097137451
    3. ''' → logprob: -7.885219097137451
    4. '','' → logprob: -10.010218620300293
    5. ',' → logprob: -11.135218620300293
    6. 'D' → logprob: -11.885218620300293
    7. ' ',' → logprob: -11.885218620300293
    8. '']
' → logprob: -12.135218620300293
    9. ']' → logprob: -12.635218620300293
    10. '",' → logprob: -13.885218620300293

Token 98: ' '' (ID: 461)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.8001573085784912
    2. ''' → logprob: -1.0501573085784912
    3. ''D' → logprob: -2.050157308578491
    4. 'D' → logprob: -2.675157308578491
    5. ' '' → logprob: -6.67515754699707
    6. ' R' → logprob: -6.80015754699707
    7. ''S' → logprob: -8.42515754699707
    8. '`' → logprob: -9.42515754699707
    9. ''d' → logprob: -9.55015754699707
    10. ' ' → logprob: -9.55015754699707

Token 99: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.1271209716796875
    2. 'R' → logprob: -2.1271209716796875
    3. 'L' → logprob: -8.752120971679688
    4. 'U' → logprob: -12.127120971679688
    5. ''' → logprob: -12.252120971679688
    6. 'd' → logprob: -12.252120971679688
    7. ' D' → logprob: -12.627120971679688
    8. ''D' → logprob: -13.002120971679688
    9. 'DR' → logprob: -13.314620971679688
    10. 'F' → logprob: -13.439620971679688

Token 100: '']
' (ID: 9756)
  Prédit: '']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '']
' → logprob: -0.4749080240726471
    2. '']' → logprob: -0.9749079942703247
    3. ']
' → logprob: -7.724907875061035
    4. ']' → logprob: -7.974907875061035
    5. '']
' → logprob: -10.349907875061035
    6. '           ' → logprob: -12.724907875061035
    7. ''' → logprob: -12.724907875061035
    8. '']

' → logprob: -13.474907875061035
    9. '"]' → logprob: -13.599907875061035
    10. '"]
' → logprob: -13.599907875061035

Token 101: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0009414771921001375
    2. ' if' → logprob: -7.750941276550293
    3. '            
' → logprob: -8.500941276550293
    4. '            ' → logprob: -9.250941276550293
    5. '               ' → logprob: -9.625941276550293
    6. '          ' → logprob: -10.125941276550293
    7. '<|end|>' → logprob: -10.875941276550293
    8. ' ' → logprob: -11.250941276550293
    9. '```' → logprob: -11.500941276550293
    10. ' 
' → logprob: -11.500941276550293

Token 102: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.2551257312297821
    2. ' if' → logprob: -1.5051257610321045
    3. '           ' → logprob: -5.755125522613525
    4. '       ' → logprob: -11.255125999450684
    5. ' ' → logprob: -11.755125999450684
    6. '   ' → logprob: -13.505125999450684
    7. '  ' → logprob: -14.380125999450684
    8. '               ' → logprob: -14.505125999450684
    9. '          ' → logprob: -14.630125999450684
    10. '```' → logprob: -15.005125999450684

Token 103: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.0001239196863025427
    2. 'current' → logprob: -9.000123977661133
    3. ' ' → logprob: -15.000123977661133
    4. ' not' → logprob: -16.750123977661133
    5. 'urrent' → logprob: -18.000123977661133
    6. '(current' → logprob: -18.125123977661133
    7. '	current' → logprob: -18.500123977661133
    8. ' ' → logprob: -19.125123977661133
    9. '_current' → logprob: -19.375123977661133
    10. '$current' → logprob: -19.375123977661133

Token 104: '_character' (ID: 99888)
  Prédit: '_character'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_character' → logprob: -0.001503313542343676
    2. 'character' → logprob: -6.5015034675598145
    3. '_char' → logprob: -15.251502990722656
    4. '_string' → logprob: -15.376502990722656
    5. ' character' → logprob: -15.626502990722656
    6. ' _' → logprob: -15.751502990722656
    7. '_' → logprob: -15.751502990722656
    8. '_CHARACTER' → logprob: -15.876502990722656
    9. 'Character' → logprob: -19.501502990722656
    10. '_current' → logprob: -20.251502990722656

Token 105: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.00017982252757064998
    2. 'not' → logprob: -8.6251802444458
    3. '	not' → logprob: -16.250179290771484
    4. ' ' → logprob: -17.000179290771484
    5. '<|end|>' → logprob: -17.375179290771484
    6. ' no' → logprob: -19.125179290771484
    7. ' ' → logprob: -19.625179290771484
    8. '_not' → logprob: -19.750179290771484
    9. ' in' → logprob: -21.500179290771484
    10. '<|end|>' → logprob: -21.750179290771484

Token 106: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004930362105369568
    2. 'in' → logprob: -5.62993049621582
    3. '<|end|>' → logprob: -6.62993049621582
    4. ' ' → logprob: -12.25493049621582
    5. '<|end|>' → logprob: -13.87993049621582
    6. ' not' → logprob: -14.12993049621582
    7. '_in' → logprob: -14.87993049621582
    8. 'to' → logprob: -14.87993049621582
    9. ' to' → logprob: -15.12993049621582
    10. ')' → logprob: -15.25493049621582

Token 107: ' allowed' (ID: 9279)
  Prédit: ' allowed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' allowed' → logprob: -0.31326770782470703
    2. 'allowed' → logprob: -1.313267707824707
    3. '_allowed' → logprob: -12.438267707824707
    4. ' ' → logprob: -14.563267707824707
    5. 'allow' → logprob: -14.813267707824707
    6. '.allowed' → logprob: -14.813267707824707
    7. ' allowable' → logprob: -15.438267707824707
    8. ' ' → logprob: -15.438267707824707
    9. 'Allowed' → logprob: -15.813267707824707
    10. ' permitted' → logprob: -16.18826675415039

Token 108: '_char' (ID: 23398)
  Prédit: '_char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -0.00016718693950679153
    2. 'characters' → logprob: -9.625166893005371
    3. '_allowed' → logprob: -10.000166893005371
    4. '_character' → logprob: -10.375166893005371
    5. 'allowed' → logprob: -10.875166893005371
    6. '_' → logprob: -12.750166893005371
    7. '_chars' → logprob: -14.250166893005371
    8. '```' → logprob: -14.250166893005371
    9. 'in' → logprob: -14.875166893005371
    10. ' _' → logprob: -15.375166893005371

Token 109: 'acters' (ID: 8385)
  Prédit: 'acters'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acters' → logprob: -0.00018935515254270285
    2. 'ar' → logprob: -9.125189781188965
    3. '_char' → logprob: -10.625189781188965
    4. 'characters' → logprob: -10.875189781188965
    5. '_allowed' → logprob: -11.750189781188965
    6. 'acter' → logprob: -11.875189781188965
    7. '```' → logprob: -12.500189781188965
    8. 'allowed' → logprob: -12.875189781188965
    9. 'act' → logprob: -13.000189781188965
    10. 'o' → logprob: -13.250189781188965

Token 110: '_at' (ID: 8254)
  Prédit: '_at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_at' → logprob: -0.00012475410767365247
    2. 'at' → logprob: -9.00012493133545
    3. '_allowed' → logprob: -14.37512493133545
    4. ' at' → logprob: -16.000123977661133
    5. '	at' → logprob: -16.625123977661133
    6. '_a' → logprob: -16.875123977661133
    7. 'allowed' → logprob: -16.875123977661133
    8. ')' → logprob: -16.875123977661133
    9. '[' → logprob: -17.000123977661133
    10. '   ' → logprob: -17.250123977661133

Token 111: '_' (ID: 62)
  Prédit: 'allowed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'allowed' → logprob: -0.0025615072809159756
    2. '_allowed' → logprob: -6.627561569213867
    3. 'odd' → logprob: -6.752561569213867
    4. ' allowed' → logprob: -10.502561569213867
    5. '_' → logprob: -11.377561569213867
    6. '```' → logprob: -11.752561569213867
    7. ' ' → logprob: -12.502561569213867
    8. 'owed' → logprob: -13.127561569213867
    9. 'od' → logprob: -13.377561569213867
    10. 'allow' → logprob: -13.877561569213867

Token 112: 'odd' (ID: 18303)
  Prédit: 'odd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'odd' → logprob: -0.024018671363592148
    2. 'allowed' → logprob: -3.7740187644958496
    3. 'od' → logprob: -7.39901876449585
    4. '_allowed' → logprob: -10.274018287658691
    5. 'even' → logprob: -10.899018287658691
    6. ' odd' → logprob: -11.024018287658691
    7. 'old' → logprob: -11.274018287658691
    8. 'ood' → logprob: -11.399018287658691
    9. '_' → logprob: -12.149018287658691
    10. '```' → logprob: -12.399018287658691

Token 113: '_indices' (ID: 43508)
  Prédit: '_indices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_indices' → logprob: -0.002941209590062499
    2. 'indices' → logprob: -5.877941131591797
    3. '           ' → logprob: -9.752941131591797
    4. '_char' → logprob: -11.002941131591797
    5. '       ' → logprob: -11.127941131591797
    6. '```' → logprob: -11.752941131591797
    7. '               ' → logprob: -11.877941131591797
    8. '_index' → logprob: -11.877941131591797
    9. '_indexes' → logprob: -11.877941131591797
    10. '_positions' → logprob: -12.627941131591797

Token 114: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04570930823683739
    2. ':
' → logprob: -3.1707093715667725
    3. ':return' → logprob: -6.920709133148193
    4. '               ' → logprob: -7.045709133148193
    5. '):' → logprob: -7.420709133148193
    6. '):
' → logprob: -9.045709609985352
    7. '           ' → logprob: -9.170709609985352
    8. '       ' → logprob: -11.670709609985352
    9. ' :' → logprob: -12.295709609985352
    10. '():
' → logprob: -12.545709609985352

Token 115: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.02936786226928234
    2. ' return' → logprob: -4.154367923736572
    3. '           ' → logprob: -4.904367923736572
    4. 'return' → logprob: -5.154367923736572
    5. '```' → logprob: -11.154367446899414
    6. ':return' → logprob: -11.279367446899414
    7. '       ' → logprob: -11.404367446899414
    8. '              ' → logprob: -12.029367446899414
    9. '   ' → logprob: -12.779367446899414
    10. ' ' → logprob: -13.154367446899414

Token 116: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.07930678874254227
    2. 'return' (adapté à ' return') → logprob: -2.5793068408966064
    3. '               ' → logprob: -8.079306602478027
    4. '           ' → logprob: -9.579306602478027
    5. ' ' → logprob: -10.704306602478027
    6. '	return' → logprob: -12.079306602478027
    7. '   ' → logprob: -12.204306602478027
    8. '       ' → logprob: -12.829306602478027
    9. ' ' → logprob: -14.329306602478027
    10. ':return' → logprob: -14.954306602478027

Token 117: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.023676680400967598
    2. ' "' → logprob: -3.898676633834839
    3. '"No' → logprob: -5.773676872253418
    4. ''' → logprob: -11.273676872253418
    5. ' ' → logprob: -11.898676872253418
    6. ' ' → logprob: -14.648676872253418
    7. '""' → logprob: -15.523676872253418
    8. ' None' → logprob: -15.523676872253418
    9. '"N' → logprob: -15.523676872253418
    10. 'None' → logprob: -16.0236759185791

Token 118: 'No' (ID: 3160)
  Prédit: '"No'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"No' → logprob: -0.478333443403244
    2. 'No' → logprob: -0.9783334732055664
    3. '"' → logprob: -5.478333473205566
    4. '"N' → logprob: -10.478333473205566
    5. ''' → logprob: -10.853333473205566
    6. ' No' → logprob: -11.853333473205566
    7. 'N' → logprob: -12.103333473205566
    8. 'Yes' → logprob: -12.353333473205566
    9. '“No' → logprob: -13.728333473205566
    10. '```' → logprob: -13.728333473205566

Token 119: '"
' (ID: 1092)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09619680047035217
    2. '    
' → logprob: -2.4711968898773193
    3. '
' → logprob: -4.97119665145874
    4. '        
' → logprob: -9.346197128295898
    5. '       ' → logprob: -9.596197128295898
    6. ')' → logprob: -10.346197128295898
    7. '  
' → logprob: -10.846197128295898
    8. 'return' → logprob: -11.096197128295898
    9. '    
    
' → logprob: -11.221197128295898
    10. '   
' → logprob: -11.471197128295898

Token 120: '    
' (ID: 1944)
  Prédit: '    
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    
' → logprob: -0.3915553689002991
    2. '   ' → logprob: -1.1415553092956543
    3. '
' → logprob: -5.641555309295654
    4. '  
' → logprob: -8.016555786132812
    5. '        
' → logprob: -8.141555786132812
    6. '   
' → logprob: -8.516555786132812
    7. ' 
' → logprob: -8.641555786132812
    8. 'return' → logprob: -9.516555786132812
    9. '```' → logprob: -11.016555786132812
    10. '    
    
' → logprob: -11.641555786132812

Token 121: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0036376076750457287
    2. 'return' → logprob: -6.003637790679932
    3. '    
' → logprob: -6.878637790679932
    4. ' return' → logprob: -9.003637313842773
    5. '```' → logprob: -13.003637313842773
    6. '
' → logprob: -13.253637313842773
    7. '  
' → logprob: -13.253637313842773
    8. '        
' → logprob: -13.753637313842773
    9. '   
' → logprob: -14.378637313842773
    10. '       ' → logprob: -14.878637313842773

Token 122: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.25285804271698
    2. '   ' → logprob: -1.50285804271698
    3. '    
' → logprob: -7.1278581619262695
    4. ' return' → logprob: -9.37785816192627
    5. '```' → logprob: -10.62785816192627
    6. '	return' → logprob: -12.25285816192627
    7. '  
' → logprob: -12.37785816192627
    8. '        
' → logprob: -12.75285816192627
    9. '
' → logprob: -13.50285816192627
    10. '`' → logprob: -13.87785816192627

Token 123: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.03811183571815491
    2. ' "' → logprob: -3.288111925125122
    3. '"No' → logprob: -9.788111686706543
    4. ' ' → logprob: -11.913111686706543
    5. ''' → logprob: -12.413111686706543
    6. ' ' → logprob: -12.788111686706543
    7. '"I' → logprob: -16.03811264038086
    8. ' '' → logprob: -16.28811264038086
    9. ' 
' → logprob: -16.78811264038086
    10. '"You' → logprob: -17.03811264038086

Token 124: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -1.3856492842023727e-06
    2. '"' → logprob: -13.625000953674316
    3. 'Ye' → logprob: -16.125001907348633
    4. ' Yes' → logprob: -18.250001907348633
    5. 'No' → logprob: -18.375001907348633
    6. 'YES' → logprob: -18.750001907348633
    7. '```' → logprob: -18.875001907348633
    8. '"""' → logprob: -19.250001907348633
    9. 'Ok' → logprob: -20.125001907348633
    10. 'yes' → logprob: -20.625001907348633

Token 125: '"


' (ID: 36470)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 126: 'user' (ID: 1428)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.054124586284160614
    2. 'a' → logprob: -4.179124355316162
    3. '```' → logprob: -4.304124355316162
    4. '<|end|>' → logprob: -5.429124355316162
    5. 'R' → logprob: -5.679124355316162
    6. ')' → logprob: -6.179124355316162
    7. '\n' → logprob: -6.429124355316162
    8. '\' → logprob: -6.429124355316162
    9. 'r' → logprob: -6.679124355316162
    10. ' ' → logprob: -6.804124355316162

Token 127: '_input' (ID: 12507)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8434000015258789
    2. '(' → logprob: -1.343400001525879
    3. ')' → logprob: -1.593400001525879
    4. '```' → logprob: -3.593400001525879
    5. '\' → logprob: -3.718400001525879
    6. '\n' → logprob: -4.593400001525879
    7. ':' → logprob: -4.593400001525879
    8. ''' → logprob: -4.718400001525879
    9. '<|end|>' → logprob: -5.093400001525879
    10. 'a' → logprob: -5.218400001525879

Token 128: '_string' (ID: 8609)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6458154916763306
    2. ' =' → logprob: -0.7708154916763306
    3. '(' → logprob: -4.770815372467041
    4. '[' → logprob: -6.645815372467041
    5. ' ' → logprob: -6.645815372467041
    6. '_' → logprob: -7.020815372467041
    7. ')' → logprob: -7.770815372467041
    8. ']' → logprob: -9.0208158493042
    9. '[:]' → logprob: -9.2708158493042
    10. ',' → logprob: -9.3958158493042

Token 129: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38712239265441895
    2. '=' → logprob: -1.137122392654419
    3. ' ' → logprob: -9.13712215423584
    4. ')' → logprob: -9.38712215423584
    5. '_' → logprob: -10.76212215423584
    6. ':' → logprob: -11.51212215423584
    7. '<|end|>' → logprob: -12.01212215423584
    8. ',' → logprob: -12.76212215423584
    9. '=input' → logprob: -12.76212215423584
    10. ']' → logprob: -12.88712215423584

Token 130: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.6383859515190125
    2. ' input' → logprob: -0.7633859515190125
    3. '"' → logprob: -5.888385772705078
    4. ' "' → logprob: -6.013385772705078
    5. '""' → logprob: -8.388385772705078
    6. ' ""' → logprob: -8.513385772705078
    7. '=input' → logprob: -10.638385772705078
    8. '(input' → logprob: -10.888385772705078
    9. ''' → logprob: -11.013385772705078
    10. ' ' → logprob: -11.263385772705078

Token 131: '()

' (ID: 5874)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02092066965997219
    2. '()' → logprob: -3.895920753479004
    3. '("("' → logprob: -8.270920753479004
    4. '("' → logprob: -9.770920753479004
    5. '('' → logprob: -10.520920753479004
    6. '("")' → logprob: -11.020920753479004
    7. '(">' → logprob: -11.520920753479004
    8. '(
' → logprob: -12.395920753479004
    9. '("""' → logprob: -12.520920753479004
    10. '(

' → logprob: -13.895920753479004

Token 132: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -5.0020742492051795e-05
    2. '
' → logprob: -10.125049591064453
    3. ' print' → logprob: -12.000049591064453
    4. 'result' → logprob: -12.625049591064453
    5. '(print' → logprob: -15.625049591064453
    6. 'output' → logprob: -15.875049591064453
    7. '```' → logprob: -16.500049591064453
    8. 'pr' → logprob: -17.500049591064453
    9. ' 
' → logprob: -17.625049591064453
    10. '
' → logprob: -18.375049591064453

Token 133: '(is' (ID: 16171)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03895249962806702
    2. '(is' → logprob: -3.288952589035034
    3. '("("' → logprob: -7.038952350616455
    4. '('' → logprob: -10.538952827453613
    5. '(
' → logprob: -12.663952827453613
    6. '(

' → logprob: -14.413952827453613
    7. ' (' → logprob: -14.413952827453613
    8. '("(' → logprob: -14.663952827453613
    9. '("' → logprob: -14.913952827453613
    10. '(f' → logprob: -14.913952827453613

Token 134: '_string' (ID: 8609)
  Prédit: '_string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -3.054500666621607e-06
    2. '_str' → logprob: -13.62500286102295
    3. '_' → logprob: -13.87500286102295
    4. '_strings' → logprob: -14.75000286102295
    5. '_String' → logprob: -15.50000286102295
    6. '_s' → logprob: -16.375003814697266
    7. 'string' → logprob: -16.750003814697266
    8. ' _' → logprob: -17.375003814697266
    9. '_STRING' → logprob: -18.000003814697266
    10. ')' → logprob: -18.250003814697266

Token 135: '_valid' (ID: 23321)
  Prédit: '_valid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_valid' → logprob: -8.804671233519912e-05
    2. '_string' → logprob: -9.37508773803711
    3. '_' → logprob: -13.62508773803711
    4. '_invalid' → logprob: -14.00008773803711
    5. '_val' → logprob: -15.12508773803711
    6. '```' → logprob: -15.87508773803711
    7. ')_' → logprob: -16.00008773803711
    8. 'valid' → logprob: -16.12508773803711
    9. '_input' → logprob: -16.25008773803711
    10. '_str' → logprob: -16.50008773803711

Token 136: '_based' (ID: 167300)
  Prédit: '_based'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_based' → logprob: -5.512236498361744e-07
    2. '_b' → logprob: -15.875000953674316
    3. '_' → logprob: -16.625
    4. ')_' → logprob: -16.75
    5. '_bas' → logprob: -16.875
    6. 'based' → logprob: -17.875
    7. '_valid' → logprob: -18.0
    8. 'Based' → logprob: -18.125
    9. '_basis' → logprob: -18.375
    10. ' _' → logprob: -18.375

Token 137: '_on' (ID: 10053)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.005559590179473162
    2. '_on' → logprob: -5.75555944442749
    3. 'ed' → logprob: -7.63055944442749
    4. '_string' → logprob: -7.88055944442749
    5. '```' → logprob: -8.005559921264648
    6. 'd' → logprob: -8.130559921264648
    7. 's' → logprob: -8.630559921264648
    8. 'string' → logprob: -9.130559921264648
    9. 'ased' → logprob: -9.130559921264648
    10. 'sed' → logprob: -9.130559921264648

Token 138: '_character' (ID: 99888)
  Prédit: '_character'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_character' → logprob: -0.0010788989020511508
    2. 'character' → logprob: -7.001079082489014
    3. '_string' → logprob: -8.751078605651855
    4. '_char' → logprob: -12.001078605651855
    5. 'string' → logprob: -13.126078605651855
    6. '_user' → logprob: -14.126078605651855
    7. 'user' → logprob: -16.251079559326172
    8. '_' → logprob: -17.376079559326172
    9. '_input' → logprob: -18.126079559326172
    10. 'input' → logprob: -18.126079559326172

Token 139: '_positions' (ID: 93193)
  Prédit: '_positions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_positions' → logprob: -3.7385154428193346e-05
    2. 'positions' → logprob: -10.25003719329834
    3. 's' → logprob: -13.87503719329834
    4. '_position' → logprob: -14.75003719329834
    5. '_' → logprob: -14.87503719329834
    6. '_locations' → logprob: -16.375038146972656
    7. 'string' → logprob: -16.875038146972656
    8. 'Positions' → logprob: -16.875038146972656
    9. ' positions' → logprob: -17.125038146972656
    10. '```' → logprob: -17.250038146972656

Token 140: '(user' (ID: 7195)
  Prédit: '(user'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(user' → logprob: -0.0005014431662857533
    2. '(' → logprob: -7.62550163269043
    3. '(input' → logprob: -11.50050163269043
    4. ')' → logprob: -13.50050163269043
    5. 'user' → logprob: -13.87550163269043
    6. '(
' → logprob: -15.25050163269043
    7. ' (' → logprob: -15.75050163269043
    8. ',user' → logprob: -16.00050163269043
    9. '(User' → logprob: -16.25050163269043
    10. '_user' → logprob: -16.37550163269043

Token 141: '_input' (ID: 12507)
  Prédit: '_string'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -0.47412940859794617
    2. '_input' → logprob: -0.9741294384002686
    3. '_' → logprob: -10.474129676818848
    4. '_user' → logprob: -11.474129676818848
    5. '_str' → logprob: -12.099129676818848
    6. 'string' → logprob: -12.099129676818848
    7. '_strings' → logprob: -14.224129676818848
    8. ' _' → logprob: -14.349129676818848
    9. ')' → logprob: -15.099129676818848
    10. 'input' → logprob: -15.724129676818848

Token 142: '_string' (ID: 8609)
  Prédit: '_string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -2.5776860184123507e-06
    2. 'string' → logprob: -13.25000286102295
    3. '_str' → logprob: -15.12500286102295
    4. '_' → logprob: -16.000001907348633
    5. 'String' → logprob: -16.500001907348633
    6. ')_' → logprob: -16.625001907348633
    7. '_s' → logprob: -17.250001907348633
    8. ')' → logprob: -17.250001907348633
    9. '_strings' → logprob: -17.250001907348633
    10. '_String' → logprob: -18.000001907348633

Token 143: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.25193020701408386
    2. ')' → logprob: -1.5019302368164062
    3. ')))' → logprob: -14.876930236816406
    4. '))
' → logprob: -15.501930236816406
    5. '())' → logprob: -15.501930236816406
    6. ')
' → logprob: -15.626930236816406
    7. ' )' → logprob: -16.501930236816406
    8. '])' → logprob: -16.626930236816406
    9. '()))' → logprob: -17.001930236816406
    10. ' ))' → logprob: -17.001930236816406


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 141
Tokens correctement prédits (1ère position, stricte): 75
Tokens correctement prédits (1ère position, avec adaptation): 80
Tokens correctement prédits (top 10): 120
Précision stricte (1ère position): 53.19%
Précision adaptée (1ère position): 56.74%
Précision (top 10): 85.11%
================================================================================
