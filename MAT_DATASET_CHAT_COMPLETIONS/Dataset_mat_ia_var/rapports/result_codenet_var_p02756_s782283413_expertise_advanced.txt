================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:23:27
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from collections import deque
import sys

def main():
    S = deque(sys.stdin.readline().strip())
    Q = int(sys.stdin.readline())
    reversed_flag = False

    for _ in range(Q):
        inp = sys.stdin.readline().split()
        if inp[0] == "1":
            reversed_flag = not reversed_flag
        else:
            F, C = int(inp[1]), inp[2]
            if (F == 1) ^ reversed_flag:
                S.appendleft(C)
            else:
                S.append(C)

    output = ''.join(reversed(S)) if reversed_flag else ''.join(S)
    print(output)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' collections' (ID: 22690)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' deque' (ID: 90347)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'default' → logprob: -1.0092992782592773
    2. 'deque' → logprob: -1.1342992782592773
    3. 'abc' → logprob: -2.0092992782592773
    4. 'Counter' → logprob: -2.5092992782592773
    5. ' defaultdict' → logprob: -2.5092992782592773
    6. ' Counter' → logprob: -5.259299278259277
    7. 'named' → logprob: -5.384299278259277
    8. ' abc' → logprob: -5.884299278259277
    9. '```' → logprob: -6.384299278259277
    10. ' deque' → logprob: -6.509299278259277

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01551173534244299
    2. '.' → logprob: -4.515511512756348
    3. '\(' → logprob: -6.015511512756348
    4. '\' → logprob: -7.640511512756348
    5. '[' → logprob: -7.765511512756348
    6. '```' → logprob: -8.265511512756348
    7. ',' → logprob: -8.765511512756348
    8. '\[' → logprob: -8.890511512756348
    9. 'import' → logprob: -9.015511512756348
    10. 'newline' → logprob: -9.390511512756348

Token 5: 'import' (ID: 561)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2967621088027954
    2. 'd' → logprob: -2.046761989593506
    3. '\' → logprob: -3.796761989593506
    4. '\n' → logprob: -3.796761989593506
    5. 'a' → logprob: -4.296761989593506
    6. '[' → logprob: -4.546761989593506
    7. '(
' → logprob: -4.671761989593506
    8. ',' → logprob: -4.796761989593506
    9. '
' → logprob: -4.796761989593506
    10. '.' → logprob: -5.296761989593506

Token 6: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.027491630986332893
    2. ' os' → logprob: -4.027491569519043
    3. ' collections' → logprob: -5.152491569519043
    4. ' queue' → logprob: -6.027491569519043
    5. ' re' → logprob: -8.027491569519043
    6. ' itertools' → logprob: -8.402491569519043
    7. ' heap' → logprob: -9.152491569519043
    8. 'sys' → logprob: -9.277491569519043
    9. ' threading' → logprob: -9.402491569519043
    10. ' ' → logprob: -9.777491569519043

Token 7: '

' (ID: 279)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.19545447826385498
    2. '\' → logprob: -2.3204545974731445
    3. '
' → logprob: -3.1954545974731445
    4. '```' → logprob: -4.9454545974731445
    5. 'newline' → logprob: -5.0704545974731445
    6. 'for' → logprob: -5.0704545974731445
    7. '.' → logprob: -5.5704545974731445
    8. 'input' → logprob: -5.6954545974731445
    9. 'import' → logprob: -5.6954545974731445
    10. '.readline' → logprob: -6.3204545974731445

Token 8: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.056332848966121674
    2. '=' → logprob: -4.306333065032959
    3. 'for' → logprob: -4.431333065032959
    4. '\' → logprob: -4.931333065032959
    5. '```' → logprob: -5.306333065032959
    6. '.readline' → logprob: -5.431333065032959
    7. '\n' → logprob: -5.931333065032959
    8. '[' → logprob: -6.556333065032959
    9. 'def' → logprob: -6.681333065032959
    10. '`' → logprob: -6.806333065032959

Token 9: ' main' (ID: 2758)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.21727254986763
    2. ' process' → logprob: -2.3422725200653076
    3. ' bfs' → logprob: -3.0922725200653076
    4. ' main' → logprob: -3.9672725200653076
    5. ' read' → logprob: -4.717272758483887
    6. ' ' → logprob: -4.842272758483887
    7. ' breadth' → logprob: -6.467272758483887
    8. ' shortest' → logprob: -6.592272758483887
    9. ' deque' → logprob: -6.842272758483887
    10. ' BFS' → logprob: -6.967272758483887

Token 10: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0513334684073925
    2. '():' → logprob: -3.051333427429199
    3. '(:' → logprob: -6.426333427429199
    4. ':' → logprob: -7.301333427429199
    5. ' (' → logprob: -9.4263334274292
    6. '(":' → logprob: -9.6763334274292
    7. '(
' → logprob: -9.8013334274292
    8. '```' → logprob: -10.0513334274292
    9. '(`' → logprob: -10.3013334274292
    10. '):' → logprob: -10.5513334274292

Token 11: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.053678520023822784
    2. '    ' → logprob: -3.928678512573242
    3. 'input' → logprob: -4.928678512573242
    4. ' readline' → logprob: -5.303678512573242
    5. ' ' → logprob: -5.553678512573242
    6. ' input' → logprob: -5.928678512573242
    7. 'a' → logprob: -6.303678512573242
    8. 'n' → logprob: -6.803678512573242
    9. '(' → logprob: -6.928678512573242
    10. '[' → logprob: -7.178678512573242

Token 12: ' S' (ID: 336)
  Prédit: ' queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' queue' → logprob: -0.6925958395004272
    2. ' input' → logprob: -1.9425958395004272
    3. ' n' → logprob: -2.067595958709717
    4. '   ' → logprob: -2.192595958709717
    5. ' data' → logprob: -4.067595958709717
    6. ' stack' → logprob: -4.192595958709717
    7. ' deque' → logprob: -4.317595958709717
    8. 'input' → logprob: -4.692595958709717
    9. ' ' → logprob: -4.692595958709717
    10. 'queue' → logprob: -4.817595958709717

Token 13: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02188042551279068
    2. '=' → logprob: -4.021880626678467
    3. '.' → logprob: -6.271880626678467
    4. '[' → logprob: -7.021880626678467
    5. ' ' → logprob: -7.771880626678467
    6. '.append' → logprob: -8.771880149841309
    7. ',' → logprob: -9.771880149841309
    8. '  ' → logprob: -10.021880149841309
    9. '_' → logprob: -10.146880149841309
    10. '   ' → logprob: -10.271880149841309

Token 14: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.8786934614181519
    2. 'input' → logprob: -1.6286934614181519
    3. ' deque' → logprob: -2.1286935806274414
    4. ' input' → logprob: -2.1286935806274414
    5. ' sys' → logprob: -2.3786935806274414
    6. 'sys' → logprob: -3.1286935806274414
    7. 'list' → logprob: -5.003693580627441
    8. ' list' → logprob: -5.128693580627441
    9. 'de' → logprob: -7.628693580627441
    10. ' ' → logprob: -8.503693580627441

Token 15: '(sys' (ID: 41042)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02306842803955078
    2. '(S' → logprob: -4.398068428039551
    3. '()' → logprob: -5.398068428039551
    4. '([' → logprob: -5.648068428039551
    5. '(sys' → logprob: -7.148068428039551
    6. '('' → logprob: -7.398068428039551
    7. '([]' → logprob: -8.02306842803955
    8. '(s' → logprob: -8.64806842803955
    9. '(list' → logprob: -9.27306842803955
    10. '(['' → logprob: -9.52306842803955

Token 16: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.002318203216418624
    2. '.argv' → logprob: -6.502318382263184
    3. '.' → logprob: -7.127318382263184
    4. '.std' → logprob: -12.252318382263184
    5. '.stdout' → logprob: -12.627318382263184
    6. ' .' → logprob: -13.377318382263184
    7. '.readline' → logprob: -13.502318382263184
    8. '.input' → logprob: -14.002318382263184
    9. '.st' → logprob: -14.877318382263184
    10. '.standard' → logprob: -15.627318382263184

Token 17: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0023678012657910585
    2. '.read' → logprob: -6.252367973327637
    3. '.' → logprob: -8.127367973327637
    4. '.readlines' → logprob: -9.377367973327637
    5. ')' → logprob: -10.127367973327637
    6. '().' → logprob: -11.377367973327637
    7. ' .' → logprob: -12.377367973327637
    8. '())' → logprob: -13.752367973327637
    9. '.Read' → logprob: -14.752367973327637
    10. '.)' → logprob: -14.752367973327637

Token 18: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.36996543407440186
    2. '()' → logprob: -1.8699654340744019
    3. '().' → logprob: -1.8699654340744019
    4. '(' → logprob: -7.119965553283691
    5. ' ())' → logprob: -9.369965553283691
    6. '()[' → logprob: -10.244965553283691
    7. '();)' → logprob: -11.244965553283691
    8. '()]' → logprob: -11.494965553283691
    9. ')' → logprob: -11.744965553283691
    10. ' ()' → logprob: -12.494965553283691

Token 19: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.1602257490158081
    2. 'rstrip' → logprob: -1.910225749015808
    3. 'pop' → logprob: -14.660225868225098
    4. 'read' → logprob: -14.785225868225098
    5. ' strip' → logprob: -15.160225868225098
    6. 'split' → logprob: -15.410225868225098
    7. 'decode' → logprob: -15.910225868225098
    8. 'rst' → logprob: -16.53522491455078
    9. 'rs' → logprob: -16.66022491455078
    10. '```' → logprob: -17.41022491455078

Token 20: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.011266385205090046
    2. '()' → logprob: -5.136266231536865
    3. ')' → logprob: -5.386266231536865
    4. '()))' → logprob: -7.386266231536865
    5. '))' → logprob: -9.636266708374023
    6. '(' → logprob: -10.136266708374023
    7. ' ())' → logprob: -11.636266708374023
    8. '())
' → logprob: -12.886266708374023
    9. '().' → logprob: -13.261266708374023
    10. '('' → logprob: -13.636266708374023

Token 21: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14050938189029694
    2. ')' → logprob: -3.1405093669891357
    3. 'while' → logprob: -3.8905093669891357
    4. '<|end|>' → logprob: -4.140509605407715
    5. ' while' → logprob: -4.515509605407715
    6. ' ' → logprob: -4.765509605407715
    7. ':' → logprob: -5.015509605407715
    8. '    
' → logprob: -5.390509605407715
    9. 'if' → logprob: -5.640509605407715
    10. ' if' → logprob: -5.890509605407715

Token 22: ' Q' (ID: 1486)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47032439708709717
    2. ')' → logprob: -2.2203245162963867
    3. ' while' → logprob: -2.4703245162963867
    4. 'while' → logprob: -2.8453245162963867
    5. ' ' → logprob: -2.9703245162963867
    6. ',' → logprob: -4.095324516296387
    7. ':' → logprob: -4.220324516296387
    8. '[' → logprob: -4.595324516296387
    9. ' if' → logprob: -5.220324516296387
    10. 'if' → logprob: -5.470324516296387

Token 23: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6333515048027039
    2. '=' → logprob: -0.7583515048027039
    3. '.' → logprob: -8.50835132598877
    4. '=int' → logprob: -8.88335132598877
    5. ')' → logprob: -9.00835132598877
    6. ' ' → logprob: -9.13335132598877
    7. '_' → logprob: -9.50835132598877
    8. '<|end|>' → logprob: -10.25835132598877
    9. '   ' → logprob: -11.00835132598877
    10. '[' → logprob: -11.25835132598877

Token 24: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.5759468078613281
    2. 'int' → logprob: -0.8259468078613281
    3. ' ' → logprob: -12.200946807861328
    4. '=int' → logprob: -13.950946807861328
    5. '(int' → logprob: -14.575946807861328
    6. '[int' → logprob: -15.075946807861328
    7. '<int' → logprob: -16.075946807861328
    8. 'deque' → logprob: -16.200946807861328
    9. '   ' → logprob: -16.575946807861328
    10. '  ' → logprob: -16.700946807861328

Token 25: '(sys' (ID: 41042)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03850443661212921
    2. '(sys' → logprob: -3.2885043621063232
    3. '('' → logprob: -9.163504600524902
    4. '(S' → logprob: -9.663504600524902
    5. '()' → logprob: -9.788504600524902
    6. ' (' → logprob: -9.913504600524902
    7. '(Sys' → logprob: -10.413504600524902
    8. '(System' → logprob: -10.538504600524902
    9. '(
' → logprob: -10.663504600524902
    10. '(ord' → logprob: -10.913504600524902

Token 26: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.47578489780426025
    2. '.readline' → logprob: -1.1007848978042603
    3. '.' → logprob: -3.1007847785949707
    4. '.read' → logprob: -8.350785255432129
    5. '.stdout' → logprob: -8.475785255432129
    6. '.argv' → logprob: -8.850785255432129
    7. '.std' → logprob: -9.850785255432129
    8. '.randint' → logprob: -10.100785255432129
    9. '.token' → logprob: -10.475785255432129
    10. ' .' → logprob: -10.725785255432129

Token 27: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0017430083826184273
    2. '.' → logprob: -6.751742839813232
    3. '.read' → logprob: -7.626742839813232
    4. '.stdin' → logprob: -9.87674331665039
    5. ')' → logprob: -11.37674331665039
    6. '().' → logprob: -12.62674331665039
    7. ' readline' → logprob: -12.87674331665039
    8. 'input' → logprob: -13.37674331665039
    9. 'read' → logprob: -13.37674331665039
    10. '.readlines' → logprob: -13.37674331665039

Token 28: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0036611182149499655
    2. '()' → logprob: -5.628661155700684
    3. '().' → logprob: -10.628661155700684
    4. ')' → logprob: -10.753661155700684
    5. ' ())' → logprob: -12.003661155700684
    6. '())
' → logprob: -12.253661155700684
    7. '()))' → logprob: -12.878661155700684
    8. '())

' → logprob: -14.378661155700684
    9. '();)' → logprob: -14.878661155700684
    10. '()
' → logprob: -15.378661155700684

Token 29: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4990743398666382
    2. '<|end|>' → logprob: -1.7490743398666382
    3. 'for' → logprob: -2.2490744590759277
    4. ' for' → logprob: -2.6240744590759277
    5. ' ' → logprob: -3.8740744590759277
    6. '
' → logprob: -4.999074459075928
    7. '  ' → logprob: -5.999074459075928
    8. '<|end|>' → logprob: -6.249074459075928
    9. '\n' → logprob: -6.374074459075928
    10. '    ' → logprob: -6.499074459075928

Token 30: ' reversed' (ID: 57184)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.14654089510440826
    2. ' for' → logprob: -2.271540880203247
    3. '   ' → logprob: -3.521540880203247
    4. '<|end|>' → logprob: -6.646541118621826
    5. ' ' → logprob: -6.896541118621826
    6. '  ' → logprob: -8.146540641784668
    7. '    ' → logprob: -8.521540641784668
    8. '	for' → logprob: -8.646540641784668
    9. '```' → logprob: -9.146540641784668
    10. '    
' → logprob: -9.396540641784668

Token 31: '_flag' (ID: 25269)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0580744743347168
    2. '_flag' → logprob: -3.058074474334717
    3. '_=' → logprob: -5.433074474334717
    4. '_state' → logprob: -6.808074474334717
    5. ' =' → logprob: -7.058074474334717
    6. '=' → logprob: -7.183074474334717
    7. '_space' → logprob: -8.058074951171875
    8. '()' → logprob: -8.308074951171875
    9. '_token' → logprob: -8.558074951171875
    10. '_str' → logprob: -9.058074951171875

Token 32: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00462841521948576
    2. '=' → logprob: -5.3796281814575195
    3. ' ' → logprob: -12.62962818145752
    4. '_' → logprob: -12.62962818145752
    5. '  ' → logprob: -15.00462818145752
    6. ')' → logprob: -15.12962818145752
    7. ' =)' → logprob: -15.75462818145752
    8. '=False' → logprob: -16.004629135131836
    9. ' ' → logprob: -16.129629135131836
    10. ',' → logprob: -16.254629135131836

Token 33: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.2519300878047943
    2. ' False' → logprob: -1.5019301176071167
    3. '0' → logprob: -14.126930236816406
    4. '(False' → logprob: -15.751930236816406
    5. '=False' → logprob: -16.751930236816406
    6. 'True' → logprob: -17.376930236816406
    7. ' True' → logprob: -17.876930236816406
    8. ' ' → logprob: -18.376930236816406
    9. '   ' → logprob: -19.001930236816406
    10. 'F' → logprob: -19.376930236816406

Token 34: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 35: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.794521689414978
    2. '   ' → logprob: -1.169521689414978
    3. ' for' → logprob: -1.544521689414978
    4. '\n' → logprob: -4.169521808624268
    5. '
' → logprob: -6.169521808624268
    6. '    
' → logprob: -6.544521808624268
    7. '<|end|>' → logprob: -6.669521808624268
    8. '\' → logprob: -7.044521808624268
    9. '	for' → logprob: -7.169521808624268
    10. ' ' → logprob: -7.169521808624268

Token 36: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0031932818237692118
    2. ' for' → logprob: -5.753193378448486
    3. '   ' → logprob: -11.128192901611328
    4. ' ' → logprob: -14.753192901611328
    5. '	for' → logprob: -15.753192901611328
    6. '<|end|>' → logprob: -15.878192901611328
    7. '    ' → logprob: -16.003192901611328
    8. 'while' → logprob: -17.628192901611328
    9. '```' → logprob: -18.003192901611328
    10. '  ' → logprob: -18.378192901611328

Token 37: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.10925623029470444
    2. ' ' → logprob: -2.4842562675476074
    3. ' i' → logprob: -3.9842562675476074
    4. '_' → logprob: -6.984256267547607
    5. ' in' → logprob: -8.48425579071045
    6. ' q' → logprob: -8.73425579071045
    7. ' range' → logprob: -8.85925579071045
    8. ' line' → logprob: -11.10925579071045
    9. ' Q' → logprob: -11.10925579071045
    10. ' I' → logprob: -11.23425579071045

Token 38: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.4765932559967041
    2. ' in' → logprob: -0.9765932559967041
    3. 'range' → logprob: -7.101593017578125
    4. ' ' → logprob: -7.351593017578125
    5. 'n' → logprob: -8.101593017578125
    6. '_' → logprob: -8.476593017578125
    7. 's' → logprob: -8.976593017578125
    8. '(' → logprob: -9.476593017578125
    9. '<|end|>' → logprob: -9.851593017578125
    10. 'Q' → logprob: -10.101593017578125

Token 39: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0064847953617572784
    2. ' range' → logprob: -5.1314849853515625
    3. '(range' → logprob: -7.6314849853515625
    4. 'Q' → logprob: -9.881484985351562
    5. '(' → logprob: -11.256484985351562
    6. '	range' → logprob: -13.506484985351562
    7. '_range' → logprob: -13.756484985351562
    8. ' xrange' → logprob: -13.881484985351562
    9. '```' → logprob: -14.256484985351562
    10. ')' → logprob: -14.381484985351562

Token 40: '(Q' (ID: 14437)
  Prédit: '(Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Q' → logprob: -0.014208877459168434
    2. '(' → logprob: -4.264208793640137
    3. ' (' → logprob: -10.139208793640137
    4. '(int' → logprob: -13.514208793640137
    5. '(len' → logprob: -14.014208793640137
    6. ')' → logprob: -14.139208793640137
    7. ' Q' → logprob: -14.389208793640137
    8. '(Qt' → logprob: -14.764208793640137
    9. '(range' → logprob: -14.764208793640137
    10. 'Q' → logprob: -14.889208793640137

Token 41: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0015721142990514636
    2. ')' → logprob: -6.626572132110596
    3. ':' → logprob: -8.501571655273438
    4. ' ):' → logprob: -10.876571655273438
    5. '):
' → logprob: -11.376571655273438
    6. '   ' → logprob: -12.126571655273438
    7. ',' → logprob: -12.251571655273438
    8. '():' → logprob: -14.626571655273438
    9. ' )' → logprob: -15.251571655273438
    10. ' ' → logprob: -15.251571655273438

Token 42: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006143153645098209
    2. '<|end|>' → logprob: -5.506143093109131
    3. '   ' → logprob: -6.506143093109131
    4. '    ' → logprob: -8.756143569946289
    5. '<|end|>' → logprob: -8.881143569946289
    6. '        
' → logprob: -9.256143569946289
    7. ' ' → logprob: -10.381143569946289
    8. '```' → logprob: -10.506143569946289
    9. '     ' → logprob: -10.881143569946289
    10. ':' → logprob: -11.006143569946289

Token 43: ' inp' (ID: 64450)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.14968986809253693
    2. '       ' → logprob: -2.6496899127960205
    3. 'line' → logprob: -3.7746899127960205
    4. ' parts' → logprob: -4.024689674377441
    5. '   ' → logprob: -4.774689674377441
    6. ' tokens' → logprob: -5.274689674377441
    7. ' input' → logprob: -5.524689674377441
    8. 'tokens' → logprob: -6.024689674377441
    9. ' query' → logprob: -6.899689674377441
    10. 'parts' → logprob: -7.149689674377441

Token 44: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1612381786108017
    2. '=' → logprob: -1.911238193511963
    3. '_' → logprob: -8.161237716674805
    4. 's' → logprob: -8.411237716674805
    5. '_line' → logprob: -9.161237716674805
    6. '_tokens' → logprob: -9.286237716674805
    7. ' ' → logprob: -9.786237716674805
    8. '_=' → logprob: -10.161237716674805
    9. '=line' → logprob: -10.286237716674805
    10. '[' → logprob: -10.536237716674805

Token 45: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.34688878059387207
    2. ' sys' → logprob: -1.346888780593872
    3. 'list' → logprob: -3.971888780593872
    4. 'input' → logprob: -4.471888542175293
    5. ' input' → logprob: -6.471888542175293
    6. ' list' → logprob: -6.721888542175293
    7. '=sys' → logprob: -10.596888542175293
    8. '(sys' → logprob: -11.221888542175293
    9. 'tuple' → logprob: -11.846888542175293
    10. '	sys' → logprob: -12.846888542175293

Token 46: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0003728774609044194
    2. 'stdin' → logprob: -8.125372886657715
    3. '.stdout' → logprob: -9.875372886657715
    4. '.argv' → logprob: -11.125372886657715
    5. 'in' → logprob: -12.250372886657715
    6. '.readline' → logprob: -12.500372886657715
    7. '.std' → logprob: -14.750372886657715
    8. '```' → logprob: -15.000372886657715
    9. '   ' → logprob: -15.375372886657715
    10. '.in' → logprob: -15.625372886657715

Token 47: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -1.5048530030981055e-06
    2. '.' → logprob: -13.625001907348633
    3. '.readlines' → logprob: -16.375001907348633
    4. ' readline' → logprob: -16.500001907348633
    5. 'read' → logprob: -16.875001907348633
    6. '.read' → logprob: -17.750001907348633
    7. '.stdin' → logprob: -18.750001907348633
    8. '```' → logprob: -19.500001907348633
    9. '().' → logprob: -20.000001907348633
    10. ' .' → logprob: -20.500001907348633

Token 48: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.31328341364860535
    2. '()' → logprob: -1.3132834434509277
    3. '())' → logprob: -11.93828296661377
    4. '()`' → logprob: -12.81328296661377
    5. '()).' → logprob: -12.93828296661377
    6. ' ()' → logprob: -13.31328296661377
    7. '(' → logprob: -13.43828296661377
    8. '()
' → logprob: -13.81328296661377
    9. '（）' → logprob: -13.93828296661377
    10. '()]' → logprob: -14.18828296661377

Token 49: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.16468515992164612
    2. 'split' → logprob: -1.9146851301193237
    3. 'rstrip' → logprob: -5.414685249328613
    4. ' split' → logprob: -15.789685249328613
    5. ' strip' → logprob: -15.914685249328613
    6. 'rs' → logprob: -17.039684295654297
    7. 'startswith' → logprob: -17.664684295654297
    8. '```' → logprob: -18.539684295654297
    9. 'str' → logprob: -19.289684295654297
    10. 'spl' → logprob: -19.414684295654297

Token 50: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03690287470817566
    2. '(' → logprob: -3.411902904510498
    3. '('' → logprob: -5.786902904510498
    4. '("("' → logprob: -9.78690242767334
    5. '```' → logprob: -10.78690242767334
    6. '()
' → logprob: -10.78690242767334
    7. '(
' → logprob: -11.03690242767334
    8. '())' → logprob: -11.41190242767334
    9. '()`' → logprob: -11.78690242767334
    10. '(`' → logprob: -11.91190242767334

Token 51: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016841838136315346
    2. '   ' → logprob: -4.266841888427734
    3. '[' → logprob: -6.891841888427734
    4. '<|end|>' → logprob: -7.641841888427734
    5. '    ' → logprob: -8.141841888427734
    6. ' ' → logprob: -8.141841888427734
    7. '```' → logprob: -8.391841888427734
    8. '        
' → logprob: -9.141841888427734
    9. ' if' → logprob: -9.266841888427734
    10. '  ' → logprob: -10.766841888427734

Token 52: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.31720733642578125
    2. ' if' → logprob: -1.6922073364257812
    3. '       ' → logprob: -2.4422073364257812
    4. '   ' → logprob: -8.067207336425781
    5. 't' → logprob: -9.067207336425781
    6. 'i' → logprob: -9.067207336425781
    7. '    ' → logprob: -9.817207336425781
    8. ' ' → logprob: -9.942207336425781
    9. ' i' → logprob: -11.442207336425781
    10. '```' → logprob: -11.442207336425781

Token 53: ' inp' (ID: 64450)
  Prédit: ' inp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' inp' → logprob: -0.04969698563218117
    2. 'inp' → logprob: -3.049696922302246
    3. ' len' → logprob: -7.049696922302246
    4. ' ' → logprob: -9.299696922302246
    5. '(inp' → logprob: -9.799696922302246
    6. ' Q' → logprob: -10.424696922302246
    7. ' not' → logprob: -10.424696922302246
    8. 'len' → logprob: -10.674696922302246
    9. ' (' → logprob: -12.299696922302246
    10. ' ' → logprob: -13.799696922302246

Token 54: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.682846287731081e-05
    2. ' [' → logprob: -9.625066757202148
    3. ' ==' → logprob: -15.500066757202148
    4. ' ' → logprob: -15.750066757202148
    5. '\[' → logprob: -15.875066757202148
    6. '```' → logprob: -16.00006675720215
    7. '==' → logprob: -16.37506675720215
    8. '[-' → logprob: -16.87506675720215
    9. '[
' → logprob: -17.62506675720215
    10. ' `[' → logprob: -18.37506675720215

Token 55: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003034074034076184
    2. ' ' → logprob: -8.750303268432617
    3. '[' → logprob: -9.250303268432617
    4. '1' → logprob: -10.000303268432617
    5. '(' → logprob: -13.875303268432617
    6. ']' → logprob: -14.250303268432617
    7. '][' → logprob: -14.875303268432617
    8. '```' → logprob: -15.375303268432617
    9. ':' → logprob: -15.625303268432617
    10. '==' → logprob: -15.812803268432617

Token 56: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.9866566061973572
    2. ' ==' → logprob: -0.9866566061973572
    3. '==' → logprob: -1.486656665802002
    4. ']==' → logprob: -4.111656665802002
    5. ')' → logprob: -5.111656665802002
    6. ' ]' → logprob: -5.736656665802002
    7. '[' → logprob: -7.361656665802002
    8. ' ' → logprob: -7.486656665802002
    9. '=' → logprob: -7.611656665802002
    10. '']' → logprob: -8.486656188964844

Token 57: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.1609102189540863
    2. '==' → logprob: -1.9109102487564087
    3. ' ' → logprob: -7.910910129547119
    4. '=' → logprob: -9.285910606384277
    5. '[' → logprob: -10.035910606384277
    6. '=="' → logprob: -10.160910606384277
    7. ' =' → logprob: -10.285910606384277
    8. '=='' → logprob: -10.410910606384277
    9. '===' → logprob: -10.910910606384277
    10. ')' → logprob: -11.660910606384277

Token 58: ' "' (ID: 392)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.1393469125032425
    2. ' '' → logprob: -2.1393468379974365
    3. '"' → logprob: -4.639347076416016
    4. ' "' → logprob: -6.889347076416016
    5. ''A' → logprob: -7.139347076416016
    6. ' ' → logprob: -7.639347076416016
    7. '1' → logprob: -9.014347076416016
    8. ''a' → logprob: -9.139347076416016
    9. ''I' → logprob: -10.264347076416016
    10. '"A' → logprob: -10.639347076416016

Token 59: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006188414059579372
    2. '"' → logprob: -6.25618839263916
    3. '2' → logprob: -6.25618839263916
    4. ''' → logprob: -6.38118839263916
    5. ' ' → logprob: -8.63118839263916
    6. '```' → logprob: -9.50618839263916
    7. 'a' → logprob: -9.63118839263916
    8. '")' → logprob: -9.88118839263916
    9. 'reverse' → logprob: -10.00618839263916
    10. 'r' → logprob: -10.50618839263916

Token 60: '":
' (ID: 9213)
  Prédit: '":'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":' → logprob: -0.00037359268753789365
    2. '"' → logprob: -8.125373840332031
    3. ':' → logprob: -9.875373840332031
    4. '":
' → logprob: -10.875373840332031
    5. '":
' → logprob: -12.250373840332031
    6. '"):' → logprob: -14.375373840332031
    7. ' ":' → logprob: -15.000373840332031
    8. '):' → logprob: -15.000373840332031
    9. '":"' → logprob: -15.250373840332031
    10. '(":' → logprob: -15.500373840332031

Token 61: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010574605548754334
    2. ' reversed' → logprob: -7.8760576248168945
    3. '           ' → logprob: -8.251057624816895
    4. '   ' → logprob: -8.501057624816895
    5. 're' → logprob: -9.626057624816895
    6. ':' → logprob: -10.251057624816895
    7. '      ' → logprob: -11.126057624816895
    8. '[::-' → logprob: -11.126057624816895
    9. '        
' → logprob: -11.376057624816895
    10. '<|end|>' → logprob: -11.501057624816895

Token 62: ' reversed' (ID: 57184)
  Prédit: ' reversed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' reversed' → logprob: -0.3937528133392334
    2. '           ' → logprob: -2.1437528133392334
    3. '       ' → logprob: -2.3937528133392334
    4. '   ' → logprob: -2.6437528133392334
    5. 're' → logprob: -3.1437528133392334
    6. '	re' → logprob: -7.1437530517578125
    7. '    ' → logprob: -7.8937530517578125
    8. '
' → logprob: -8.393753051757812
    9. '=re' → logprob: -8.518753051757812
    10. ' reversible' → logprob: -8.643753051757812

Token 63: '_flag' (ID: 25269)
  Prédit: '_flag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_flag' → logprob: -6.988221684878226e-06
    2. '_' → logprob: -12.125006675720215
    3. ' _' → logprob: -14.625006675720215
    4. '_f' → logprob: -15.500006675720215
    5. '_toggle' → logprob: -15.500006675720215
    6. 'flag' → logprob: -15.875006675720215
    7. '_flags' → logprob: -16.00000762939453
    8. '_FLAG' → logprob: -16.62500762939453
    9. 'Flag' → logprob: -16.62500762939453
    10. '_token' → logprob: -16.75000762939453

Token 64: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0006341627449728549
    2. '=' → logprob: -7.37563419342041
    3. ' ^=' → logprob: -11.87563419342041
    4. ' ' → logprob: -14.87563419342041
    5. '=!' → logprob: -15.50063419342041
    6. ' =)' → logprob: -17.625633239746094
    7. ' ' → logprob: -18.125633239746094
    8. ' !=' → logprob: -18.750633239746094
    9. '   ' → logprob: -18.875633239746094
    10. 'not' → logprob: -19.250633239746094

Token 65: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.03365446254611015
    2. 'not' → logprob: -3.4086544513702393
    3. '!' → logprob: -12.28365421295166
    4. ' ' → logprob: -13.40865421295166
    5. '   ' → logprob: -14.15865421295166
    6. '	not' → logprob: -14.53365421295166
    7. ' ' → logprob: -14.65865421295166
    8. '(not' → logprob: -15.03365421295166
    9. ' no' → logprob: -15.90865421295166
    10. ' !' → logprob: -16.033655166625977

Token 66: ' reversed' (ID: 57184)
  Prédit: ' reversed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' reversed' → logprob: -0.25193288922309875
    2. 're' → logprob: -1.5019328594207764
    3. '	re' → logprob: -13.376933097839355
    4. ' ' → logprob: -14.501933097839355
    5. 'reverse' → logprob: -14.876933097839355
    6. ' ' → logprob: -15.251933097839355
    7. '(re' → logprob: -15.376933097839355
    8. '_re' → logprob: -16.00193214416504
    9. ' reversible' → logprob: -16.00193214416504
    10. ' reverted' → logprob: -16.00193214416504

Token 67: '_flag' (ID: 25269)
  Prédit: '_flag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_flag' → logprob: -0.000443420372903347
    2. 'ed' → logprob: -8.250443458557129
    3. 'd' → logprob: -8.750443458557129
    4. '_' → logprob: -11.250443458557129
    5. 'flag' → logprob: -12.375443458557129
    6. '_f' → logprob: -13.375443458557129
    7. ' _' → logprob: -13.875443458557129
    8. '_d' → logprob: -13.875443458557129
    9. '_flags' → logprob: -13.875443458557129
    10. '_FLAG' → logprob: -14.625443458557129

Token 68: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10278848558664322
    2. 'elif' → logprob: -2.9777884483337402
    3. '<|end|>' → logprob: -3.6027884483337402
    4. ' elif' → logprob: -4.60278844833374
    5. '
' → logprob: -5.22778844833374
    6. ' else' → logprob: -6.72778844833374
    7. 'else' → logprob: -6.97778844833374
    8. '<|end|>' → logprob: -7.22778844833374
    9. '	elif' → logprob: -8.102788925170898
    10. '   ' → logprob: -8.352788925170898

Token 69: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010690399445593357
    2. 'elif' → logprob: -4.635690212249756
    3. ' elif' → logprob: -7.135690212249756
    4. 'else' → logprob: -10.260690689086914
    5. ' else' → logprob: -11.010690689086914
    6. '   ' → logprob: -11.010690689086914
    7. '```' → logprob: -11.010690689086914
    8. '[' → logprob: -11.385690689086914
    9. '	elif' → logprob: -11.760690689086914
    10. '<|end|>' → logprob: -12.260690689086914

Token 70: ' else' (ID: 1203)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.3104996979236603
    2. ' elif' → logprob: -1.810499668121338
    3. '       ' → logprob: -2.310499668121338
    4. 'else' (adapté à ' else') → logprob: -5.935499668121338
    5. ' else' → logprob: -6.560499668121338
    6. '	elif' → logprob: -10.060500144958496
    7. '   ' → logprob: -10.810500144958496
    8. 'el' → logprob: -12.435500144958496
    9. '    ' → logprob: -12.560500144958496
    10. '```' → logprob: -13.560500144958496

Token 71: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00044103997061029077
    2. ' :' → logprob: -8.37544059753418
    3. ':
' → logprob: -9.25044059753418
    4. ' if' → logprob: -9.87544059753418
    5. 'if' → logprob: -10.00044059753418
    6. '[' → logprob: -12.50044059753418
    7. ',' → logprob: -12.62544059753418
    8. 'If' → logprob: -13.25044059753418
    9. '       ' → logprob: -13.50044059753418
    10. '：' → logprob: -13.75044059753418

Token 72: '           ' (ID: 352)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6764542460441589
    2. '        ' → logprob: -1.3014543056488037
    3. '           ' → logprob: -1.9264543056488037
    4. 'if' → logprob: -3.5514543056488037
    5. '       ' → logprob: -4.051454067230225
    6. ' ' → logprob: -4.176454067230225
    7. '    ' → logprob: -5.676454067230225
    8. '            ' → logprob: -5.676454067230225
    9. ' ' → logprob: -7.051454067230225
    10. '         ' → logprob: -7.176454067230225

Token 73: ' F' (ID: 454)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7343814373016357
    2. 'if' → logprob: -1.3593814373016357
    3. ' t' → logprob: -1.9843814373016357
    4. ' a' → logprob: -2.8593814373016357
    5. ' f' → logprob: -4.359381675720215
    6. 'a' → logprob: -4.609381675720215
    7. 't' → logprob: -4.734381675720215
    8. 'f' → logprob: -4.984381675720215
    9. '   ' → logprob: -5.234381675720215
    10. ' A' → logprob: -5.359381675720215

Token 74: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04707413166761398
    2. 'rom' → logprob: -3.79707407951355
    3. ',' → logprob: -4.172074317932129
    4. ' ' → logprob: -6.047074317932129
    5. '=' → logprob: -6.422074317932129
    6. '   ' → logprob: -6.797074317932129
    7. 'or' → logprob: -7.047074317932129
    8. '  ' → logprob: -7.547074317932129
    9. 'i' → logprob: -8.547074317932129
    10. 'lag' → logprob: -8.922074317932129

Token 75: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.7657483220100403
    2. 'c' → logprob: -1.1407482624053955
    3. 'p' → logprob: -1.8907482624053955
    4. 'f' → logprob: -3.7657482624053955
    5. ' C' → logprob: -4.890748500823975
    6. 'b' → logprob: -5.140748500823975
    7. '_,' → logprob: -5.265748500823975
    8. 'T' → logprob: -5.640748500823975
    9. 'a' → logprob: -5.890748500823975
    10. ' ' → logprob: -6.015748500823975

Token 76: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14369890093803406
    2. '=' → logprob: -2.0186989307403564
    3. ',' → logprob: -6.893698692321777
    4. '=int' → logprob: -12.643698692321777
    5. ' ' → logprob: -12.768698692321777
    6. '=input' → logprob: -13.893698692321777
    7. ' ,' → logprob: -14.893698692321777
    8. 's' → logprob: -15.143698692321777
    9. '=line' → logprob: -15.268698692321777
    10. '  ' → logprob: -15.518698692321777

Token 77: ' int' (ID: 677)
  Prédit: ' inp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' inp' → logprob: -0.4486914873123169
    2. 'inp' → logprob: -1.073691487312317
    3. ' int' → logprob: -4.448691368103027
    4. 'int' → logprob: -4.823691368103027
    5. '(inp' → logprob: -11.073691368103027
    6. 'input' → logprob: -11.698691368103027
    7. '   ' → logprob: -11.948691368103027
    8. ' input' → logprob: -11.948691368103027
    9. ' ' → logprob: -12.448691368103027
    10. ' in' → logprob: -12.761191368103027

Token 78: '(inp' (ID: 141645)
  Prédit: '(inp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(inp' → logprob: -4.203409844194539e-05
    2. '(' → logprob: -10.125041961669922
    3. '(instr' → logprob: -14.000041961669922
    4. 'inp' → logprob: -14.125041961669922
    5. ' inp' → logprob: -15.375041961669922
    6. '(inv' → logprob: -16.875041961669922
    7. '(i' → logprob: -17.500041961669922
    8. ' (' → logprob: -17.500041961669922
    9. ')' → logprob: -17.750041961669922
    10. '(
' → logprob: -17.750041961669922

Token 79: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.320199877838604e-07
    2. '1' → logprob: -15.625
    3. '[
' → logprob: -16.25
    4. '```' → logprob: -17.5
    5. ')' → logprob: -17.875
    6. ' [' → logprob: -19.0
    7. '   ' → logprob: -19.125
    8. '\[' → logprob: -19.375
    9. ')[' → logprob: -19.625
    10. '[-' → logprob: -20.375

Token 80: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.522638169466518e-05
    2. ' ' → logprob: -11.125024795532227
    3. '[' → logprob: -12.375024795532227
    4. '2' → logprob: -12.750024795532227
    5. '   ' → logprob: -12.875024795532227
    6. ']' → logprob: -15.625024795532227
    7. ')' → logprob: -16.000024795532227
    8. '][' → logprob: -16.250024795532227
    9. '])' → logprob: -16.500024795532227
    10. '  ' → logprob: -16.625024795532227

Token 81: ']),' (ID: 19560)
  Prédit: ']),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']),' → logprob: -0.20251601934432983
    2. '),' → logprob: -1.7025160789489746
    3. ')' → logprob: -8.077515602111816
    4. '])' → logprob: -8.327515602111816
    5. '],' → logprob: -8.327515602111816
    6. ' ),' → logprob: -8.952515602111816
    7. ')],' → logprob: -9.577515602111816
    8. ']' → logprob: -10.077515602111816
    9. ' ' → logprob: -11.077515602111816
    10. '']),' → logprob: -11.452515602111816

Token 82: ' inp' (ID: 64450)
  Prédit: ' inp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' inp' → logprob: -0.3132641315460205
    2. 'inp' → logprob: -1.3132641315460205
    3. '(inp' → logprob: -13.688263893127441
    4. ' ' → logprob: -14.188263893127441
    5. ' in' → logprob: -15.938263893127441
    6. 'input' → logprob: -16.688264846801758
    7. ' input' → logprob: -16.688264846801758
    8. ' ' → logprob: -16.688264846801758
    9. 'Inp' → logprob: -17.063264846801758
    10. ' 
' → logprob: -17.438264846801758

Token 83: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.704273118884885e-07
    2. '2' → logprob: -14.500000953674316
    3. '```' → logprob: -16.0
    4. '[-' → logprob: -17.5
    5. '[
' → logprob: -17.875
    6. ' [' → logprob: -17.875
    7. '(' → logprob: -18.375
    8. '3' → logprob: -18.875
    9. '1' → logprob: -19.125
    10. '-' → logprob: -19.25

Token 84: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.650518920039758e-06
    2. ' ' → logprob: -13.000003814697266
    3. '[' → logprob: -14.125003814697266
    4. '   ' → logprob: -14.750003814697266
    5. ']' → logprob: -16.250003814697266
    6. '```' → logprob: -16.625003814697266
    7. '-' → logprob: -17.000003814697266
    8. '``' → logprob: -17.875003814697266
    9. '
' → logprob: -18.125003814697266
    10. '1' → logprob: -18.250003814697266

Token 85: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -8.44706009957008e-05
    2. ' ]' → logprob: -10.00008487701416
    3. ']
' → logprob: -10.87508487701416
    4. ')' → logprob: -11.25008487701416
    5. '])' → logprob: -12.87508487701416
    6. '']' → logprob: -13.00008487701416
    7. ')]' → logprob: -14.25008487701416
    8. ']

' → logprob: -14.50008487701416
    9. ']
' → logprob: -14.50008487701416
    10. '[' → logprob: -14.75008487701416

Token 86: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.21264614164829254
    2. '       ' → logprob: -1.7126461267471313
    3. '
' → logprob: -5.337646007537842
    4. ' if' → logprob: -5.587646007537842
    5. '   ' → logprob: -6.962646007537842
    6. 'if' → logprob: -7.712646007537842
    7. '        
' → logprob: -7.837646007537842
    8. '<|end|>' → logprob: -8.462646484375
    9. '  
' → logprob: -9.212646484375
    10. ' 
' → logprob: -9.212646484375

Token 87: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.07898177206516266
    2. ' if' → logprob: -2.578981876373291
    3. '           ' → logprob: -9.953981399536133
    4. '   ' → logprob: -10.578981399536133
    5. '       ' → logprob: -11.203981399536133
    6. ' ' → logprob: -13.078981399536133
    7. '```' → logprob: -13.828981399536133
    8. '    ' → logprob: -13.953981399536133
    9. '
' → logprob: -14.078981399536133
    10. 'If' → logprob: -15.453981399536133

Token 88: ' (' (ID: 350)
  Prédit: ' reversed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' reversed' → logprob: -0.4123738706111908
    2. ' (' → logprob: -1.9123739004135132
    3. ' not' → logprob: -2.1623737812042236
    4. ' F' → logprob: -2.6623737812042236
    5. 'F' → logprob: -6.537374019622803
    6. '(' → logprob: -6.912374019622803
    7. '(re' → logprob: -7.037374019622803
    8. 're' → logprob: -7.412374019622803
    9. '(not' → logprob: -7.787374019622803
    10. '(F' → logprob: -7.912374019622803

Token 89: 'F' (ID: 37)
  Prédit: ' reversed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' reversed' → logprob: -1.2791748046875
    2. 're' → logprob: -1.4041748046875
    3. ' F' → logprob: -1.6541748046875
    4. ' not' → logprob: -1.9041748046875
    5. 'F' → logprob: -2.6541748046875
    6. ' (' → logprob: -3.4041748046875
    7. 'not' → logprob: -3.9041748046875
    8. '(re' → logprob: -4.9041748046875
    9. '(F' → logprob: -6.4041748046875
    10. '(not' → logprob: -6.6541748046875

Token 90: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.033650193363428116
    2. '==' → logprob: -3.4086501598358154
    3. ' ' → logprob: -12.658650398254395
    4. '1' → logprob: -14.783650398254395
    5. ')==' → logprob: -15.783650398254395
    6. '=' → logprob: -15.908650398254395
    7. '```' → logprob: -16.533649444580078
    8. ')' → logprob: -16.533649444580078
    9. ',' → logprob: -16.658649444580078
    10. ' !=' → logprob: -16.658649444580078

Token 91: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.22541995346546173
    2. ' ' → logprob: -1.6004199981689453
    3. '2' → logprob: -12.725419998168945
    4. '  ' → logprob: -13.475419998168945
    5. ')' → logprob: -13.600419998168945
    6. '<|end|>' → logprob: -14.600419998168945
    7. '(' → logprob: -15.225419998168945
    8. ' (' → logprob: -15.225419998168945
    9. '   ' → logprob: -15.600419998168945
    10. '```' → logprob: -15.725419998168945

Token 92: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -12.87500286102295
    3. '   ' → logprob: -17.250001907348633
    4. '2' → logprob: -17.500001907348633
    5. '  ' → logprob: -19.125001907348633
    6. '```' → logprob: -19.500001907348633
    7. '１' → logprob: -20.000001907348633
    8. '(' → logprob: -20.750001907348633
    9. ')' → logprob: -21.125001907348633
    10. '3' → logprob: -22.375001907348633

Token 93: ')' (ID: 8)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.002600387902930379
    2. 'and' → logprob: -6.377600193023682
    3. ')' → logprob: -7.127600193023682
    4. ' ' → logprob: -9.75260066986084
    5. '):' → logprob: -11.12760066986084
    6. ' )' → logprob: -11.37760066986084
    7. '):
' → logprob: -12.50260066986084
    8. '   ' → logprob: -12.75260066986084
    9. '    ' → logprob: -13.62760066986084
    10. '  ' → logprob: -14.50260066986084

Token 94: ' ^' (ID: 7602)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.045884765684604645
    2. ':' → logprob: -3.670884847640991
    3. ' ==' → logprob: -4.170884609222412
    4. 'and' → logprob: -5.920884609222412
    5. '==' → logprob: -7.295884609222412
    6. ' ' → logprob: -8.04588508605957
    7. ' :' → logprob: -9.29588508605957
    8. ':
' → logprob: -9.67088508605957
    9. ')' → logprob: -10.79588508605957
    10. '):' → logprob: -10.79588508605957

Token 95: ' reversed' (ID: 57184)
  Prédit: ' reversed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' reversed' → logprob: -0.020763184875249863
    2. 're' → logprob: -3.8957631587982178
    3. ' not' → logprob: -8.895763397216797
    4. 'not' → logprob: -10.520763397216797
    5. ' (' → logprob: -10.645763397216797
    6. ' ' → logprob: -11.895763397216797
    7. ' reverse' → logprob: -11.895763397216797
    8. '(re' → logprob: -12.145763397216797
    9. 'reverse' → logprob: -12.395763397216797
    10. ' reversible' → logprob: -12.770763397216797

Token 96: '_flag' (ID: 25269)
  Prédit: '_flag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_flag' → logprob: -9.968312951968983e-06
    2. 'flag' → logprob: -11.625009536743164
    3. '_' → logprob: -14.875009536743164
    4. '_flags' → logprob: -15.250009536743164
    5. '_f' → logprob: -16.000009536743164
    6. '_token' → logprob: -16.250009536743164
    7. '_FLAG' → logprob: -16.875009536743164
    8. 'Flag' → logprob: -17.125009536743164
    9. '```' → logprob: -17.375009536743164
    10. ' flag' → logprob: -17.500009536743164

Token 97: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005620885640382767
    2. ':
' → logprob: -7.8755621910095215
    3. ' :' → logprob: -8.750561714172363
    4. '):' → logprob: -11.375561714172363
    5. ' ==' → logprob: -12.000561714172363
    6. '==' → logprob: -12.625561714172363
    7. '=' → logprob: -14.000561714172363
    8. ' :
' → logprob: -14.875561714172363
    9. '():' → logprob: -15.000561714172363
    10. '):
' → logprob: -15.125561714172363

Token 98: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0252796970307827
    2. ' S' → logprob: -4.400279521942139
    3. ':' → logprob: -4.650279521942139
    4. 'S' → logprob: -6.775279521942139
    5. '           ' → logprob: -7.525279521942139
    6. ':
' → logprob: -7.650279521942139
    7. '):
' → logprob: -8.275279998779297
    8. '              ' → logprob: -8.525279998779297
    9. ')' → logprob: -8.900279998779297
    10. '):' → logprob: -9.525279998779297

Token 99: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' (adapté à ' S') → logprob: -0.4810894727706909
    2. ' S' → logprob: -0.9810894727706909
    3. '                   ' → logprob: -5.8560895919799805
    4. '           ' → logprob: -6.2310895919799805
    5. '               ' → logprob: -6.3560895919799805
    6. '   ' → logprob: -8.10608959197998
    7. 's' → logprob: -10.23108959197998
    8. ' ' → logprob: -11.10608959197998
    9. '  ' → logprob: -11.60608959197998
    10. '```' → logprob: -11.60608959197998

Token 100: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.001048412173986435
    2. '.' → logprob: -7.126048564910889
    3. 'append' → logprob: -8.37604808807373
    4. '.p' → logprob: -12.00104808807373
    5. '.app' → logprob: -12.50104808807373
    6. ' .' → logprob: -13.25104808807373
    7. '.extend' → logprob: -14.62604808807373
    8. 'appen' → logprob: -14.75104808807373
    9. ' append' → logprob: -15.62604808807373
    10. '_append' → logprob: -15.62604808807373

Token 101: 'left' (ID: 4530)
  Prédit: 'left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -5.512236498361744e-07
    2. '(C' → logprob: -15.500000953674316
    3. 'lef' → logprob: -15.500000953674316
    4. 'le' → logprob: -16.875
    5. 'Left' → logprob: -18.125
    6. 'right' → logprob: -19.5
    7. 'l' → logprob: -19.5
    8. 'LEFT' → logprob: -20.25
    9. ' left' → logprob: -20.625
    10. '_left' → logprob: -21.125

Token 102: '(C' (ID: 5559)
  Prédit: '(C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(C' → logprob: -9.662937372922897e-05
    2. '(' → logprob: -9.250096321105957
    3. '(c' → logprob: -15.250096321105957
    4. ' (' → logprob: -15.625096321105957
    5. '((' → logprob: -16.500097274780273
    6. '(
' → logprob: -19.375097274780273
    7. '('' → logprob: -21.125097274780273
    8. '(F' → logprob: -21.125097274780273
    9. '(CC' → logprob: -21.125097274780273
    10. '(CType' → logprob: -21.500097274780273

Token 103: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20155736804008484
    2. ')
' → logprob: -1.7015573978424072
    3. ')
' → logprob: -9.451557159423828
    4. '           ' → logprob: -9.826557159423828
    5. 'else' → logprob: -12.951557159423828
    6. ' )' → logprob: -13.201557159423828
    7. '               ' → logprob: -13.201557159423828
    8. '       ' → logprob: -13.326557159423828
    9. ' )
' → logprob: -13.326557159423828
    10. ' else' → logprob: -14.201557159423828

Token 104: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01348947174847126
    2. 'else' → logprob: -5.013489246368408
    3. ' else' → logprob: -5.013489246368408
    4. '               ' → logprob: -9.888489723205566
    5. '<|end|>' → logprob: -10.513489723205566
    6. '```' → logprob: -11.263489723205566
    7. '          ' → logprob: -12.263489723205566
    8. '       ' → logprob: -13.263489723205566
    9. '	       ' → logprob: -13.763489723205566
    10. '            
' → logprob: -13.888489723205566

Token 105: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.13639776408672333
    2. '           ' → logprob: -2.6363978385925293
    3. ' else' → logprob: -2.8863978385925293
    4. '       ' → logprob: -9.261397361755371
    5. '               ' → logprob: -12.261397361755371
    6. '          ' → logprob: -12.761397361755371
    7. '	else' → logprob: -13.136397361755371
    8. '```' → logprob: -13.511397361755371
    9. '   ' → logprob: -14.011397361755371
    10. '	       ' → logprob: -14.136397361755371

Token 106: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0014592852676287293
    2. ':' → logprob: -6.626459121704102
    3. ':
' → logprob: -9.251459121704102
    4. ' S' → logprob: -11.626459121704102
    5. '              ' → logprob: -11.626459121704102
    6. '           ' → logprob: -12.251459121704102
    7. 'S' → logprob: -12.501459121704102
    8. '       ' → logprob: -13.126459121704102
    9. ',' → logprob: -13.501459121704102
    10. ':S' → logprob: -13.751459121704102

Token 107: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.02160467579960823
    2. 'S' → logprob: -4.271604537963867
    3. ' S' → logprob: -5.271604537963867
    4. '   ' → logprob: -6.521604537963867
    5. '           ' → logprob: -7.771604537963867
    6. '       ' → logprob: -8.271604537963867
    7. ' ' → logprob: -9.396604537963867
    8. '              ' → logprob: -11.146604537963867
    9. '```' → logprob: -11.521604537963867
    10. 's' → logprob: -12.646604537963867

Token 108: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' (adapté à ' S') → logprob: -0.02976854331791401
    2. ' S' → logprob: -3.529768466949463
    3. '               ' → logprob: -11.279768943786621
    4. '   ' → logprob: -13.154768943786621
    5. '           ' → logprob: -13.154768943786621
    6. ' ' → logprob: -13.904768943786621
    7. 's' → logprob: -15.404768943786621
    8. '  ' → logprob: -16.279767990112305
    9. '       ' → logprob: -16.529767990112305
    10. '_S' → logprob: -16.529767990112305

Token 109: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -1.5451681974809617e-05
    2. '.' → logprob: -11.375015258789062
    3. ').' → logprob: -13.250015258789062
    4. '`.' → logprob: -14.625015258789062
    5. '.app' → logprob: -14.875015258789062
    6. '.setdefault' → logprob: -15.000015258789062
    7. ' .' → logprob: -15.125015258789062
    8. '.extend' → logprob: -15.875015258789062
    9. '>.' → logprob: -16.125015258789062
    10. '.enqueue' → logprob: -16.250015258789062

Token 110: '(C' (ID: 5559)
  Prédit: '(C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(C' → logprob: -0.0789194256067276
    2. 'right' → logprob: -2.5789194107055664
    3. 'left' → logprob: -10.453919410705566
    4. ' right' → logprob: -15.078919410705566
    5. '(right' → logprob: -15.828919410705566
    6. '(S' → logprob: -16.328920364379883
    7. 'Right' → logprob: -16.453920364379883
    8. 'C' → logprob: -16.828920364379883
    9. '(c' → logprob: -16.953920364379883
    10. '[C' → logprob: -17.203920364379883

Token 111: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -6.2729995988775045e-06
    2. '())' → logprob: -12.625006675720215
    3. ' )' → logprob: -14.125006675720215
    4. ')
' → logprob: -14.125006675720215
    5. ')`' → logprob: -14.500006675720215
    6. '(C' → logprob: -14.750006675720215
    7. '))' → logprob: -15.125006675720215
    8. '()' → logprob: -15.375006675720215
    9. '`)' → logprob: -17.3750057220459
    10. '(' → logprob: -17.5000057220459

Token 112: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5766187906265259
    2. 'print' → logprob: -0.8266187906265259
    3. 'if' → logprob: -7.951618671417236
    4. ' print' → logprob: -8.951619148254395
    5. 'for' → logprob: -9.076619148254395
    6. '```' → logprob: -10.201619148254395
    7. '<|end|>' → logprob: -11.076619148254395
    8. '    
' → logprob: -11.326619148254395
    9. '       ' → logprob: -11.826619148254395
    10. '
' → logprob: -13.076619148254395

Token 113: ' output' (ID: 4733)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.029954928904771805
    2. 'print' → logprob: -3.5299549102783203
    3. ' if' → logprob: -8.90495491027832
    4. 'result' → logprob: -9.90495491027832
    5. '   ' → logprob: -11.65495491027832
    6. '```' → logprob: -12.15495491027832
    7. 'output' (adapté à ' output') → logprob: -13.15495491027832
    8. 'answer' → logprob: -14.02995491027832
    9. ' print' → logprob: -14.15495491027832
    10. '    
' → logprob: -15.15495491027832

Token 114: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5948817133903503
    2. '=' → logprob: -0.8448817133903503
    3. '_' → logprob: -4.094881534576416
    4. '_str' → logprob: -6.969881534576416
    5. 'print' → logprob: -7.844881534576416
    6. '_=' → logprob: -8.719882011413574
    7. '_string' → logprob: -8.969882011413574
    8. '()' → logprob: -8.969882011413574
    9. 's' → logprob: -8.969882011413574
    10. '_s' → logprob: -9.719882011413574

Token 115: ' ''.' (ID: 105941)
  Prédit: '''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''.' → logprob: -0.07846380025148392
    2. 'list' → logprob: -3.3284637928009033
    3. '""' → logprob: -4.203464031219482
    4. '''' → logprob: -5.078464031219482
    5. 'S' → logprob: -5.328464031219482
    6. '"' → logprob: -5.328464031219482
    7. ' ''.' → logprob: -5.453464031219482
    8. ' list' → logprob: -6.078464031219482
    9. ' "".' → logprob: -6.578464031219482
    10. '[]' → logprob: -8.203463554382324

Token 116: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -1.282920129597187e-05
    2. 'jo' → logprob: -11.500012397766113
    3. 'j' → logprob: -13.625012397766113
    4. '```' → logprob: -14.375012397766113
    5. ' join' → logprob: -14.625012397766113
    6. '(join' → logprob: -16.00001335144043
    7. '''.' → logprob: -17.00001335144043
    8. '`' → logprob: -17.12501335144043
    9. '   ' → logprob: -17.25001335144043
    10. ' ' → logprob: -17.25001335144043

Token 117: '(re' (ID: 8178)
  Prédit: '(S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.00031091354321688414
    2. '(' → logprob: -8.125310897827148
    3. '(list' → logprob: -11.875310897827148
    4. '((' → logprob: -12.625310897827148
    5. 'S' → logprob: -13.000310897827148
    6. '(s' → logprob: -14.375310897827148
    7. '([' → logprob: -14.625310897827148
    8. ')' → logprob: -15.000310897827148
    9. '()' → logprob: -15.375310897827148
    10. '([]' → logprob: -15.875310897827148

Token 118: 'versed' (ID: 76479)
  Prédit: 'versed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'versed' → logprob: -0.0028807148337364197
    2. 'verse' → logprob: -6.002880573272705
    3. 'S' → logprob: -8.502881050109863
    4. '[S' → logprob: -9.252881050109863
    5. '(S' → logprob: -10.002881050109863
    6. 'nder' → logprob: -11.002881050109863
    7. 'v' → logprob: -11.627881050109863
    8. 'verted' → logprob: -11.877881050109863
    9. 'ver' → logprob: -12.877881050109863
    10. 'turned' → logprob: -12.877881050109863

Token 119: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -5.319370302458992e-06
    2. 'S' → logprob: -13.375005722045898
    3. 'Flag' → logprob: -13.625005722045898
    4. ')' → logprob: -14.000005722045898
    5. '(' → logprob: -14.250005722045898
    6. 'if' → logprob: -15.500005722045898
    7. 'flag' → logprob: -15.625005722045898
    8. '(s' → logprob: -15.750005722045898
    9. ')(' → logprob: -15.750005722045898
    10. ' (' → logprob: -16.5000057220459

Token 120: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17807896435260773
    2. '))' → logprob: -1.9280790090560913
    3. ' if' → logprob: -4.053079128265381
    4. 'if' → logprob: -8.178078651428223
    5. ' )' → logprob: -10.803078651428223
    6. ')))' → logprob: -11.803078651428223
    7. '()' → logprob: -12.928078651428223
    8. '))
' → logprob: -12.928078651428223
    9. ' ))' → logprob: -12.928078651428223
    10. '})' → logprob: -13.178078651428223

Token 121: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5280745029449463
    2. ' if' → logprob: -0.9030745029449463
    3. '<|end|>' → logprob: -6.153074264526367
    4. '
' → logprob: -6.403074264526367
    5. '   ' → logprob: -7.528074264526367
    6. 'print' → logprob: -8.903074264526367
    7. '```' → logprob: -9.153074264526367
    8. '	if' → logprob: -9.153074264526367
    9. '    
' → logprob: -9.403074264526367
    10. '[' → logprob: -9.778074264526367

Token 122: ' reversed' (ID: 57184)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.005234713666141033
    2. ' reversed' → logprob: -5.255234718322754
    3. 'not' → logprob: -15.255234718322754
    4. '   ' → logprob: -15.380234718322754
    5. '(re' → logprob: -15.880234718322754
    6. 'reverse' → logprob: -16.255233764648438
    7. ' ' → logprob: -16.380233764648438
    8. ' not' → logprob: -16.880233764648438
    9. '	re' → logprob: -16.880233764648438
    10. '=re' → logprob: -19.130233764648438

Token 123: '_flag' (ID: 25269)
  Prédit: '_flag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_flag' → logprob: -2.339278580620885e-06
    2. 'flag' → logprob: -13.750001907348633
    3. '```' → logprob: -14.750001907348633
    4. '_token' → logprob: -14.875001907348633
    5. '_flags' → logprob: -15.875001907348633
    6. '_FLAG' → logprob: -16.125001907348633
    7. '_' → logprob: -16.875001907348633
    8. 'Flag' → logprob: -17.250001907348633
    9. '_code' → logprob: -17.250001907348633
    10. '_f' → logprob: -17.625001907348633

Token 124: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.048623356968164444
    2. ' else' → logprob: -3.0486233234405518
    3. '	else' → logprob: -10.423623085021973
    4. '_else' → logprob: -12.673623085021973
    5. '<|end|>' → logprob: -13.298623085021973
    6. ' ' → logprob: -14.673623085021973
    7. 'elses' → logprob: -15.423623085021973
    8. '[]' → logprob: -15.798623085021973
    9. '   ' → logprob: -16.04862403869629
    10. '
' → logprob: -16.29862403869629

Token 125: ' ''.' (ID: 105941)
  Prédit: '''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''.' → logprob: -0.062085993587970734
    2. ' ''.' → logprob: -2.8120861053466797
    3. 'S' → logprob: -10.31208610534668
    4. '''' → logprob: -10.31208610534668
    5. ''S' → logprob: -11.43708610534668
    6. '   ' → logprob: -11.43708610534668
    7. ''s' → logprob: -11.81208610534668
    8. ' S' → logprob: -12.06208610534668
    9. ' ' → logprob: -12.06208610534668
    10. '  ' → logprob: -12.81208610534668

Token 126: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -0.0001017551330733113
    2. '''.' → logprob: -9.375102043151855
    3. '```' → logprob: -11.875102043151855
    4. '.join' → logprob: -12.875102043151855
    5. 'output' → logprob: -13.000102043151855
    6. '''' → logprob: -14.250102043151855
    7. ' join' → logprob: -14.375102043151855
    8. 'jo' → logprob: -14.375102043151855
    9. 'string' → logprob: -14.375102043151855
    10. ''.' → logprob: -14.375102043151855

Token 127: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -3.8889261304575484e-06
    2. '(' → logprob: -13.000003814697266
    3. 'S' → logprob: -13.375003814697266
    4. '(s' → logprob: -16.750003814697266
    5. '(
' → logprob: -19.125003814697266
    6. ' (' → logprob: -20.000003814697266
    7. '```' → logprob: -20.750003814697266
    8. 's' → logprob: -21.500003814697266
    9. ')(' → logprob: -21.750003814697266
    10. '[S' → logprob: -21.750003814697266

Token 128: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.754368223482743e-05
    2. ')
' → logprob: -9.625067710876465
    3. ')return' → logprob: -14.625067710876465
    4. ' )' → logprob: -14.750067710876465
    5. '())' → logprob: -15.750067710876465
    6. '   ' → logprob: -16.12506675720215
    7. '<|end|>' → logprob: -16.12506675720215
    8. ')`' → logprob: -16.75006675720215
    9. '))' → logprob: -16.87506675720215
    10. ')

' → logprob: -17.12506675720215

Token 129: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.16085481643676758
    2. '   ' → logprob: -1.9108548164367676
    3. ' print' → logprob: -7.410854816436768
    4. '	print' → logprob: -11.53585433959961
    5. '    
' → logprob: -12.16085433959961
    6. '
' → logprob: -12.41085433959961
    7. '```' → logprob: -12.53585433959961
    8. '<|end|>' → logprob: -13.41085433959961
    9. '(print' → logprob: -14.03585433959961
    10. '#print' → logprob: -14.91085433959961

Token 130: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0006710976012982428
    2. '   ' → logprob: -8.00067138671875
    3. ' print' → logprob: -8.00067138671875
    4. '```' → logprob: -15.12567138671875
    5. '	print' → logprob: -16.50067138671875
    6. '
' → logprob: -17.62567138671875
    7. '    
' → logprob: -19.50067138671875
    8. ' ' → logprob: -19.62567138671875
    9. '#print' → logprob: -20.12567138671875
    10. '  ' → logprob: -20.12567138671875

Token 131: '(output' (ID: 22485)
  Prédit: '(output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(output' → logprob: -3.643152740551159e-05
    2. '(' → logprob: -10.250036239624023
    3. 'output' → logprob: -14.000036239624023
    4. '()' → logprob: -16.625036239624023
    5. ' (' → logprob: -16.750036239624023
    6. '(
' → logprob: -17.000036239624023
    7. '(input' → logprob: -17.875036239624023
    8. '(open' → logprob: -19.000036239624023
    9. '(Output' → logprob: -19.250036239624023
    10. '(object' → logprob: -20.000036239624023

Token 132: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. ' )' → logprob: -15.125
    3. ')
' → logprob: -16.75
    4. '())' → logprob: -17.375
    5. '()' → logprob: -17.5
    6. ')`' → logprob: -17.875
    7. '))' → logprob: -18.0
    8. '`)' → logprob: -18.875
    9. '')' → logprob: -19.375
    10. '）' → logprob: -20.0

Token 133: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.03476613759994507
    2. '```' → logprob: -4.53476619720459
    3. '\n' → logprob: -4.78476619720459
    4. '
' → logprob: -4.78476619720459
    5. '<|end|>' → logprob: -5.78476619720459
    6. '#' → logprob: -6.65976619720459
    7. '\' → logprob: -6.78476619720459
    8. ' if' → logprob: -7.15976619720459
    9. 'main' → logprob: -8.53476619720459
    10. '<|end|>' → logprob: -9.78476619720459

Token 134: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.04859418421983719
    2. '__' → logprob: -3.0485942363739014
    3. '_' → logprob: -12.79859447479248
    4. ' ' → logprob: -13.04859447479248
    5. '_name' → logprob: -14.42359447479248
    6. ' ' → logprob: -14.67359447479248
    7. ' _' → logprob: -15.04859447479248
    8. '___' → logprob: -15.42359447479248
    9. 'name' → logprob: -15.79859447479248
    10. ' name' → logprob: -16.798593521118164

Token 135: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.009268643334507942
    2. ' __' → logprob: -4.884268760681152
    3. ' ==' → logprob: -6.509268760681152
    4. '==' → logprob: -9.134268760681152
    5. '<|end|>' → logprob: -11.759268760681152
    6. 'name' → logprob: -12.259268760681152
    7. '_' → logprob: -12.259268760681152
    8. '___' → logprob: -12.384268760681152
    9. '__':
' → logprob: -12.384268760681152
    10. '__.__' → logprob: -12.509268760681152

Token 136: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00012856863031629473
    2. '__.__' → logprob: -9.000128746032715
    3. '__.' → logprob: -12.500128746032715
    4. '==' → logprob: -13.875128746032715
    5. '__["' → logprob: -15.875128746032715
    6. '____' → logprob: -16.0001277923584
    7. '___' → logprob: -16.1251277923584
    8. '__
' → logprob: -17.0001277923584
    9. '```' → logprob: -17.3751277923584
    10. '_' → logprob: -18.3751277923584

Token 137: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.1939658224582672
    2. '==' → logprob: -1.9439657926559448
    3. ' ==' → logprob: -3.4439659118652344
    4. '=="' → logprob: -7.193965911865234
    5. '__.__' → logprob: -8.443965911865234
    6. '=='' → logprob: -8.943965911865234
    7. '.__' → logprob: -10.318965911865234
    8. '_' → logprob: -10.568965911865234
    9. '___' → logprob: -11.068965911865234
    10. '__.' → logprob: -11.068965911865234

Token 138: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.02981390617787838
    2. ''' → logprob: -3.5298140048980713
    3. '__' → logprob: -9.904813766479492
    4. ' "__' → logprob: -11.529813766479492
    5. '"user' → logprob: -13.529813766479492
    6. '"_' → logprob: -13.654813766479492
    7. ' '__' → logprob: -15.154813766479492
    8. '"name' → logprob: -15.779813766479492
    9. ''_' → logprob: -16.029813766479492
    10. ''"' → logprob: -16.154813766479492

Token 139: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.003905399702489376
    2. '__' → logprob: -5.878905296325684
    3. '"' → logprob: -7.378905296325684
    4. 'name' → logprob: -8.253905296325684
    5. ' main' → logprob: -9.378905296325684
    6. ''' → logprob: -9.628905296325684
    7. '_main' → logprob: -10.003905296325684
    8. '_MAIN' → logprob: -12.378905296325684
    9. '__":
' → logprob: -12.503905296325684
    10. 'MAIN' → logprob: -12.878905296325684

Token 140: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.06702107936143875
    2. '__' → logprob: -2.817021131515503
    3. '__':
' → logprob: -5.317020893096924
    4. '__.' → logprob: -9.442021369934082
    5. '__.__' → logprob: -10.692021369934082
    6. '__["' → logprob: -11.067021369934082
    7. '__:' → logprob: -11.317021369934082
    8. '__
' → logprob: -13.567021369934082
    9. '__[' → logprob: -14.567021369934082
    10. '.' → logprob: -14.942021369934082

Token 141: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.4796644449234009
    2. ' main' → logprob: -0.9796644449234009
    3. '   ' → logprob: -5.354664325714111
    4. '	main' → logprob: -7.104664325714111
    5. '_main' → logprob: -10.97966480255127
    6. '    
' → logprob: -12.85466480255127
    7. '(main' → logprob: -13.72966480255127
    8. ' ' → logprob: -13.97966480255127
    9. '  ' → logprob: -14.47966480255127
    10. '.main' → logprob: -14.85466480255127

Token 142: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -3.128163257315464e-07
    2. ' main' → logprob: -15.25
    3. '	main' → logprob: -20.625
    4. '   ' → logprob: -21.125
    5. '.main' → logprob: -25.5
    6. '_main' → logprob: -25.75
    7. '(main' → logprob: -26.125
    8. 'import' → logprob: -26.5
    9. ' ' → logprob: -26.5
    10. '  ' → logprob: -27.375

Token 143: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00010103991371579468
    2. '(' → logprob: -9.375101089477539
    3. '()
' → logprob: -11.125101089477539
    4. '()`' → logprob: -15.125101089477539
    5. ' ()' → logprob: -15.500101089477539
    6. '();' → logprob: -15.625101089477539
    7. '()

' → logprob: -15.750101089477539
    8. '(
' → logprob: -16.00010108947754
    9. '()">' → logprob: -16.00010108947754
    10. '())' → logprob: -16.62510108947754


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 141
Tokens correctement prédits (1ère position, stricte): 70
Tokens correctement prédits (1ère position, avec adaptation): 78
Tokens correctement prédits (top 10): 127
Précision stricte (1ère position): 49.65%
Précision adaptée (1ère position): 55.32%
Précision (top 10): 90.07%
================================================================================
