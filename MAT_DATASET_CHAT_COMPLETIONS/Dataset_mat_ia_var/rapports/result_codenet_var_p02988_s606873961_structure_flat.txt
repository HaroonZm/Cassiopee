================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:53:34
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n = int(input())
p = [int(a) for a in input().split()]
cnt = 0

i = 0
while i < n - 2:
    x = p[i]
    y = p[i+1]
    z = p[i+2]
    if (y > x and y < z) or (y < x and y > z):
        cnt += 1
    i += 1

print(cnt)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.000444850797066465
    2. ''' → logprob: -8.500444412231445
    3. '('' → logprob: -9.375444412231445
    4. '(n' → logprob: -10.000444412231445
    5. '```' → logprob: -10.375444412231445
    6. '`' → logprob: -10.750444412231445
    7. '("("' → logprob: -11.125444412231445
    8. '(
' → logprob: -11.125444412231445
    9. ')' → logprob: -11.875444412231445
    10. '()' → logprob: -12.250444412231445

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11869344860315323
    2. ')' → logprob: -2.2436933517456055
    3. '()' → logprob: -5.3686933517456055
    4. '())' → logprob: -7.4936933517456055
    5. '(
' → logprob: -8.243693351745605
    6. '```' → logprob: -9.993693351745605
    7. '(

' → logprob: -10.368693351745605
    8. '('' → logprob: -10.493693351745605
    9. ''' → logprob: -10.618693351745605
    10. '(n' → logprob: -10.868693351745605

Token 5: 'p' (ID: 79)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7040315866470337
    2. 'if' → logprob: -1.4540315866470337
    3. 'for' → logprob: -2.329031467437744
    4. 's' → logprob: -2.454031467437744
    5. 'f' → logprob: -4.329031467437744
    6. ' ' → logprob: -4.454031467437744
    7. 'x' → logprob: -4.829031467437744
    8. ')' → logprob: -4.954031467437744
    9. 'a' → logprob: -4.954031467437744
    10. ''' → logprob: -5.079031467437744

Token 6: ' =' (ID: 314)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.07644929736852646
    2. '[' → logprob: -4.326449394226074
    3. 'u' → logprob: -4.701449394226074
    4. 'e' → logprob: -4.951449394226074
    5. ' =' → logprob: -5.201449394226074
    6. 'i' → logprob: -5.201449394226074
    7. 'a' → logprob: -5.326449394226074
    8. '+' → logprob: -5.451449394226074
    9. '_' → logprob: -5.451449394226074
    10. '=' → logprob: -5.701449394226074

Token 7: ' [' (ID: 723)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1379836797714233
    2. 'int' → logprob: -1.1379836797714233
    3. '0' → logprob: -2.012983798980713
    4. ' int' → logprob: -2.637983798980713
    5. 'n' → logprob: -2.887983798980713
    6. ' ' → logprob: -3.137983798980713
    7. ' n' → logprob: -4.137983798980713
    8. 'input' → logprob: -4.637983798980713
    9. '[]' → logprob: -4.762983798980713
    10. '2' → logprob: -5.137983798980713

Token 8: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.22688238322734833
    2. '0' → logprob: -1.9768823385238647
    3. ']' → logprob: -2.8518824577331543
    4. ']int' → logprob: -5.601882457733154
    5. 'list' → logprob: -6.726882457733154
    6. '(int' → logprob: -6.726882457733154
    7. '()]' → logprob: -8.601881980895996
    8. 'tuple' → logprob: -8.976881980895996
    9. ' int' → logprob: -9.601881980895996
    10. 'float' → logprob: -9.601881980895996

Token 9: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1239083930850029
    2. '(input' → logprob: -2.873908281326294
    3. '(x' → logprob: -2.873908281326294
    4. '(i' → logprob: -6.123908519744873
    5. '()]' → logprob: -7.623908519744873
    6. '()' → logprob: -7.873908519744873
    7. ']' → logprob: -8.498908042907715
    8. '(a' → logprob: -8.873908042907715
    9. '(p' → logprob: -9.748908042907715
    10. '(n' → logprob: -10.623908042907715

Token 10: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005436192732304335
    2. ')]' → logprob: -8.875543594360352
    3. '())' → logprob: -9.000543594360352
    4. 'input' → logprob: -9.125543594360352
    5. '(input' → logprob: -9.125543594360352
    6. '()' → logprob: -10.375543594360352
    7. '(' → logprob: -11.875543594360352
    8. '(x' → logprob: -11.875543594360352
    9. ')])' → logprob: -12.875543594360352
    10. 'for' → logprob: -13.125543594360352

Token 11: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5511043071746826
    2. '(input' → logprob: -1.3011043071746826
    3. 'for' → logprob: -2.8011043071746826
    4. 'input' → logprob: -3.3011043071746826
    5. '()' → logprob: -3.4261043071746826
    6. '(' → logprob: -4.926104545593262
    7. ' for' → logprob: -5.301104545593262
    8. ']' → logprob: -5.926104545593262
    9. ')]' → logprob: -5.926104545593262
    10. '(x' → logprob: -6.551104545593262

Token 12: ' a' (ID: 261)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.0043382602743804455
    2. 'input' → logprob: -5.504338264465332
    3. '(input' → logprob: -8.629338264465332
    4. ' range' → logprob: -10.129338264465332
    5. ' ' → logprob: -10.379338264465332
    6. ' a' → logprob: -13.004338264465332
    7. '=input' → logprob: -13.004338264465332
    8. '_input' → logprob: -13.379338264465332
    9. ' the' → logprob: -14.129338264465332
    10. '(' → logprob: -14.129338264465332

Token 13: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05508764088153839
    2. 'in' → logprob: -2.9300875663757324
    3. 'a' → logprob: -9.43008804321289
    4. 'input' → logprob: -9.55508804321289
    5. ' ' → logprob: -10.30508804321289
    6. 'n' → logprob: -12.43008804321289
    7. '  ' → logprob: -12.80508804321289
    8. '_' → logprob: -13.18008804321289
    9. ' input' → logprob: -13.18008804321289
    10. '	in' → logprob: -13.30508804321289

Token 14: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.20142999291419983
    2. ' input' → logprob: -1.7014299631118774
    3. 'range' → logprob: -11.326430320739746
    4. ' range' → logprob: -12.701430320739746
    5. '(input' → logprob: -13.451430320739746
    6. '=input' → logprob: -16.70142936706543
    7. '	input' → logprob: -17.70142936706543
    8. ' ' → logprob: -17.70142936706543
    9. '<input' → logprob: -17.95142936706543
    10. ')' → logprob: -17.95142936706543

Token 15: '().' (ID: 1454)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.27850106358528137
    2. '()' → logprob: -1.528501033782959
    3. '().' → logprob: -4.278501033782959
    4. '())' → logprob: -4.403501033782959
    5. '(' → logprob: -9.528501510620117
    6. '()].' → logprob: -10.903501510620117
    7. ')]' → logprob: -11.278501510620117
    8. '()][' → logprob: -12.653501510620117
    9. ']()' → logprob: -12.903501510620117
    10. '()],' → logprob: -13.153501510620117

Token 16: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0003452368837315589
    2. 'strip' → logprob: -8.000345230102539
    3. 'rstrip' → logprob: -11.625345230102539
    4. ' split' → logprob: -14.125345230102539
    5. 'spl' → logprob: -16.62534523010254
    6. '(split' → logprob: -16.62534523010254
    7. 's' → logprob: -19.50034523010254
    8. ')' → logprob: -19.62534523010254
    9. 'replace' → logprob: -19.87534523010254
    10. 'plit' → logprob: -20.37534523010254

Token 17: '()]
' (ID: 67155)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.053463391959667206
    2. '())' → logprob: -3.6784634590148926
    3. '(' → logprob: -3.9284634590148926
    4. '()' → logprob: -5.053463459014893
    5. '('' → logprob: -7.553463459014893
    6. ')]' → logprob: -9.053462982177734
    7. ']' → logprob: -9.803462982177734
    8. '')]' → logprob: -11.678462982177734
    9. '()]
' → logprob: -12.553462982177734
    10. '()][' → logprob: -12.553462982177734

Token 18: 'cnt' (ID: 33160)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.6540206074714661
    2. 's' → logprob: -1.5290205478668213
    3. 'c' → logprob: -2.2790205478668213
    4. 'm' → logprob: -3.1540205478668213
    5. ']' → logprob: -3.6540205478668213
    6. 'd' → logprob: -3.9040205478668213
    7. '.' → logprob: -4.7790207862854
    8. '#' → logprob: -4.9040207862854
    9. 'for' → logprob: -5.0290207862854
    10. 'i' → logprob: -5.0290207862854

Token 19: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.16368204355239868
    2. '_' → logprob: -1.913681983947754
    3. '=' → logprob: -6.538681983947754
    4. 's' → logprob: -7.163681983947754
    5. '(' → logprob: -7.413681983947754
    6. '\[' → logprob: -8.538681983947754
    7. '[p' → logprob: -8.663681983947754
    8. ']' → logprob: -9.913681983947754
    9. '_p' → logprob: -10.413681983947754
    10. 'p' → logprob: -10.538681983947754

Token 20: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8723021745681763
    2. '{}' → logprob: -1.2473021745681763
    3. '[' → logprob: -2.1223020553588867
    4. ' {}' → logprob: -2.3723020553588867
    5. ' ' → logprob: -2.8723020553588867
    6. ' [' → logprob: -3.9973020553588867
    7. '{' → logprob: -5.122302055358887
    8. ' {' → logprob: -7.247302055358887
    9. ' []' → logprob: -10.997302055358887
    10. ' defaultdict' → logprob: -10.997302055358887

Token 21: '0' (ID: 15)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.07055739313364029
    2. '[' → logprob: -3.3205573558807373
    3. '0' → logprob: -3.5705573558807373
    4. '{' → logprob: -5.570557594299316
    5. 'dict' → logprob: -10.695557594299316
    6. '{}
' → logprob: -11.820557594299316
    7. ' {}' → logprob: -12.820557594299316
    8. '[p' → logprob: -13.070557594299316
    9. '{}

' → logprob: -13.320557594299316
    10. '{}\' → logprob: -13.320557594299316

Token 22: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6488503217697144
    2. '
' → logprob: -1.3988503217697144
    3. ' for' → logprob: -1.6488503217697144
    4. '\n' → logprob: -3.648850440979004
    5. ' 
' → logprob: -4.898850440979004
    6. '' → logprob: -6.898850440979004
    7. '<|end|>' → logprob: -6.898850440979004
    8. '\' → logprob: -7.148850440979004
    9. ' ' → logprob: -7.773850440979004
    10. 'i' → logprob: -7.898850440979004

Token 23: 'i' (ID: 72)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00045736716128885746
    2. ' for' → logprob: -7.750457286834717
    3. 'i' → logprob: -11.250457763671875
    4. '
' → logprob: -11.500457763671875
    5. 'f' → logprob: -13.500457763671875
    6. 'n' → logprob: -14.125457763671875
    7. '```' → logprob: -14.375457763671875
    8. '\n' → logprob: -15.750457763671875
    9. 'r' → logprob: -16.000457763671875
    10. 'p' → logprob: -16.375457763671875

Token 24: ' =' (ID: 314)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4704791009426117
    2. 'n' → logprob: -1.720479130744934
    3. '=' → logprob: -2.4704790115356445
    4. ' =' → logprob: -2.8454790115356445
    5. 'f' → logprob: -3.4704790115356445
    6. ' n' → logprob: -4.9704790115356445
    7. ' +=' → logprob: -4.9704790115356445
    8. '+' → logprob: -5.4704790115356445
    9. 's' → logprob: -6.9704790115356445
    10. '  ' → logprob: -7.2204790115356445

Token 25: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07970843464136124
    2. '0' → logprob: -2.5797083377838135
    3. '1' → logprob: -7.329708576202393
    4. ' n' → logprob: -8.954708099365234
    5. '2' → logprob: -11.079708099365234
    6. 'n' → logprob: -12.329708099365234
    7. ' p' → logprob: -12.704708099365234
    8. ' len' → logprob: -12.829708099365234
    9. ' cnt' → logprob: -13.517208099365234
    10. ' i' → logprob: -13.704708099365234

Token 26: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.027255011722445488
    2. ' ' → logprob: -3.902255058288574
    3. '1' → logprob: -5.027255058288574
    4. '2' → logprob: -9.402255058288574
    5. 'n' → logprob: -10.277255058288574
    6. ' n' → logprob: -11.777255058288574
    7. 'p' → logprob: -12.652255058288574
    8. ' p' → logprob: -13.777255058288574
    9. '-' → logprob: -13.902255058288574
    10. '3' → logprob: -14.277255058288574

Token 27: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 28: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.6147010326385498
    2. '<|end|>' → logprob: -1.7397010326385498
    3. ' while' → logprob: -1.9897010326385498
    4. '
' → logprob: -2.48970103263855
    5. ' ' → logprob: -3.11470103263855
    6. ':' → logprob: -5.239701271057129
    7. ' 
' → logprob: -5.864701271057129
    8. '<|end|>' → logprob: -5.989701271057129
    9. ')' → logprob: -6.614701271057129
    10. '```' → logprob: -7.114701271057129

Token 29: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0024446197785437107
    2. 'i' → logprob: -6.252444744110107
    3. ' ' → logprob: -7.627444744110107
    4. ' n' → logprob: -11.12744426727295
    5. ' cnt' → logprob: -12.50244426727295
    6. ' ' → logprob: -12.62744426727295
    7. ')' → logprob: -13.50244426727295
    8. ' p' → logprob: -13.87744426727295
    9. '	i' → logprob: -14.00244426727295
    10. 'cnt' → logprob: -14.37744426727295

Token 30: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.10478460043668747
    2. '<' → logprob: -2.3547844886779785
    3. ' <=' → logprob: -5.4797844886779785
    4. ' ' → logprob: -8.729784965515137
    5. '<=' → logprob: -8.854784965515137
    6. '<n' → logprob: -10.729784965515137
    7. ' !=' → logprob: -10.979784965515137
    8. '<len' → logprob: -10.979784965515137
    9. ' <
' → logprob: -11.479784965515137
    10. '+' → logprob: -11.604784965515137

Token 31: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.06382088363170624
    2. 'n' → logprob: -2.8138208389282227
    3. ' len' → logprob: -6.688820838928223
    4. 'len' → logprob: -8.063820838928223
    5. ' ' → logprob: -8.188820838928223
    6. '  ' → logprob: -12.313820838928223
    7. '   ' → logprob: -12.438820838928223
    8. '	n' → logprob: -13.813820838928223
    9. '1' → logprob: -14.188820838928223
    10. '(n' → logprob: -14.313820838928223

Token 32: ' -' (ID: 533)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004694037605077028
    2. ' :' → logprob: -5.629693984985352
    3. ':
' → logprob: -7.129693984985352
    4. ' and' → logprob: -9.254693984985352
    5. '   ' → logprob: -9.254693984985352
    6. ' ' → logprob: -10.129693984985352
    7. ' :
' → logprob: -10.754693984985352
    8. ':**' → logprob: -11.004693984985352
    9. 'and' → logprob: -12.754693984985352
    10. '```' → logprob: -13.004693984985352

Token 33: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003887130646035075
    2. ' ' → logprob: -6.128887176513672
    3. '2' → logprob: -6.378887176513672
    4. '3' → logprob: -13.128887176513672
    5. '  ' → logprob: -14.941387176513672
    6. '   ' → logprob: -15.191387176513672
    7. '-' → logprob: -15.503887176513672
    8. '１' → logprob: -15.691387176513672
    9. ' ' → logprob: -16.441387176513672
    10. '```' → logprob: -16.816387176513672

Token 34: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0033198304008692503
    2. '2' → logprob: -5.75331974029541
    3. ' ' → logprob: -8.87831974029541
    4. '3' → logprob: -13.25331974029541
    5. '１' → logprob: -15.56581974029541
    6. '   ' → logprob: -16.128320693969727
    7. '  ' → logprob: -16.253320693969727
    8. '-' → logprob: -16.378320693969727
    9. '```' → logprob: -16.440820693969727
    10. '4' → logprob: -17.065820693969727

Token 35: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09605484455823898
    2. ' and' → logprob: -2.471054792404175
    3. ':
' → logprob: -5.471055030822754
    4. 'and' → logprob: -6.721055030822754
    5. ' :' → logprob: -6.846055030822754
    6. ' ' → logprob: -7.721055030822754
    7. '   ' → logprob: -9.221055030822754
    8. ' :
' → logprob: -9.846055030822754
    9. ' if' → logprob: -12.596055030822754
    10. '  ' → logprob: -13.221055030822754

Token 36: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0248959269374609
    2. ' ' → logprob: -4.149896144866943
    3. ' and' → logprob: -5.774896144866943
    4. ' if' → logprob: -6.024896144866943
    5. '    ' → logprob: -6.274896144866943
    6. ':' → logprob: -7.774896144866943
    7. '    
' → logprob: -8.399895668029785
    8. '     
' → logprob: -8.649895668029785
    9. '```' → logprob: -8.774895668029785
    10. '  ' → logprob: -9.149895668029785

Token 37: ' x' (ID: 1215)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7041566371917725
    2. ' if' → logprob: -0.7041566371917725
    3. 'if' → logprob: -5.579156875610352
    4. ' ' → logprob: -5.704156875610352
    5. '    ' → logprob: -6.329156875610352
    6. '       ' → logprob: -6.454156875610352
    7. ' i' → logprob: -9.329156875610352
    8. '	if' → logprob: -9.454156875610352
    9. ' \' → logprob: -9.579156875610352
    10. ' and' → logprob: -9.829156875610352

Token 38: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.017462069168686867
    2. '=' → logprob: -4.142462253570557
    3. ' ==' → logprob: -6.892462253570557
    4. ',' → logprob: -8.267461776733398
    5. ' +=' → logprob: -9.767461776733398
    6. '+' → logprob: -10.267461776733398
    7. '==' → logprob: -10.642461776733398
    8. ' +' → logprob: -11.392461776733398
    9. ' ' → logprob: -11.642461776733398
    10. '   ' → logprob: -12.517461776733398

Token 39: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.11389537900686264
    2. ' p' → logprob: -2.2388954162597656
    3. 'i' → logprob: -7.863895416259766
    4. '   ' → logprob: -8.363895416259766
    5. ' i' → logprob: -9.113895416259766
    6. '(p' → logprob: -9.238895416259766
    7. 'abs' → logprob: -9.738895416259766
    8. ' ' → logprob: -10.113895416259766
    9. 'a' → logprob: -10.113895416259766
    10. '0' → logprob: -10.988895416259766

Token 40: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.1424973713001236e-05
    2. '[' → logprob: -10.625031471252441
    3. ' [' → logprob: -12.875031471252441
    4. '[x' → logprob: -12.875031471252441
    5. '[j' → logprob: -14.125031471252441
    6. 'i' → logprob: -14.625031471252441
    7. '   ' → logprob: -15.625031471252441
    8. '[I' → logprob: -15.750031471252441
    9. ' ' → logprob: -16.250030517578125
    10. '```' → logprob: -16.500030517578125

Token 41: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.015721576288342476
    2. '+' → logprob: -4.390721797943115
    3. ']
' → logprob: -7.015721797943115
    4. ' +' → logprob: -7.140721797943115
    5. ' ]' → logprob: -7.515721797943115
    6. ']+' → logprob: -7.640721797943115
    7. ']==' → logprob: -8.140721321105957
    8. '[' → logprob: -10.515721321105957
    9. '[i' → logprob: -10.640721321105957
    10. '-' → logprob: -10.890721321105957

Token 42: '   ' (ID: 271)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2695859670639038
    2. ' ' → logprob: -1.3945859670639038
    3. '   ' → logprob: -1.5195859670639038
    4. ' ,' → logprob: -3.0195860862731934
    5. ' if' → logprob: -3.1445860862731934
    6. 'if' → logprob: -3.3945860862731934
    7. '+' → logprob: -3.5195860862731934
    8. ' and' → logprob: -4.144586086273193
    9. ' =' → logprob: -4.394586086273193
    10. '<|end|>' → logprob: -4.519586086273193

Token 43: ' y' (ID: 342)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.751450777053833
    2. 'if' → logprob: -1.251450777053833
    3. '   ' → logprob: -2.376450777053833
    4. ' ' → logprob: -2.876450777053833
    5. ',' → logprob: -3.126450777053833
    6. 'y' (adapté à ' y') → logprob: -4.751450538635254
    7. '+' → logprob: -4.876450538635254
    8. '    ' → logprob: -5.501450538635254
    9. ' ,' → logprob: -5.501450538635254
    10. 'x' → logprob: -5.626450538635254

Token 44: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0019320894498378038
    2. '=' → logprob: -6.251932144165039
    3. ',' → logprob: -12.626932144165039
    4. ' ' → logprob: -16.12693214416504
    5. 'a' → logprob: -17.87693214416504
    6. '=p' → logprob: -18.37693214416504
    7. ')' → logprob: -18.75193214416504
    8. '<|end|>' → logprob: -19.00193214416504
    9. '.' → logprob: -19.25193214416504
    10. '  ' → logprob: -19.25193214416504

Token 45: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.3135197162628174
    2. 'p' → logprob: -1.3135197162628174
    3. '   ' → logprob: -8.688519477844238
    4. ' ' → logprob: -10.188519477844238
    5. 'x' → logprob: -10.938519477844238
    6. '    ' → logprob: -11.313519477844238
    7. ' x' → logprob: -11.938519477844238
    8. '	p' → logprob: -12.313519477844238
    9. 'y' → logprob: -13.063519477844238
    10. ' y' → logprob: -13.313519477844238

Token 46: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.133198283147067e-05
    2. '[' → logprob: -10.250051498413086
    3. '```' → logprob: -11.750051498413086
    4. '[j' → logprob: -13.250051498413086
    5. 'i' → logprob: -13.750051498413086
    6. '[
' → logprob: -14.000051498413086
    7. '[I' → logprob: -14.125051498413086
    8. '[++' → logprob: -14.250051498413086
    9. '   ' → logprob: -14.500051498413086
    10. '\[' → logprob: -14.500051498413086

Token 47: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.018334772437810898
    2. ' +' → logprob: -4.018334865570068
    3. ']' → logprob: -8.64333438873291
    4. ']+' → logprob: -12.89333438873291
    5. '+]' → logprob: -13.39333438873291
    6. '+i' → logprob: -13.76833438873291
    7. '   ' → logprob: -13.76833438873291
    8. '1' → logprob: -14.64333438873291
    9. '+j' → logprob: -14.64333438873291
    10. '-' → logprob: -14.64333438873291

Token 48: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.026633964851498604
    2. '2' → logprob: -3.6516339778900146
    3. ' ' → logprob: -8.026634216308594
    4. '   ' → logprob: -13.339134216308594
    5. '```' → logprob: -13.589134216308594
    6. '0' → logprob: -13.901634216308594
    7. ']' → logprob: -14.026634216308594
    8. '  ' → logprob: -14.901634216308594
    9. '3' → logprob: -15.464134216308594
    10. ')' → logprob: -15.651634216308594

Token 49: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0004378214362077415
    2. ' ]' → logprob: -8.37543773651123
    3. '+' → logprob: -9.62543773651123
    4. '<|end|>' → logprob: -10.25043773651123
    5. ')' → logprob: -10.37543773651123
    6. ']
' → logprob: -10.50043773651123
    7. '   ' → logprob: -10.62543773651123
    8. '']' → logprob: -11.75043773651123
    9. ' +' → logprob: -13.25043773651123
    10. ')]' → logprob: -13.37543773651123

Token 50: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5507156252861023
    2. '   ' → logprob: -1.175715684890747
    3. '<|end|>' → logprob: -2.800715684890747
    4. '    ' → logprob: -4.050715446472168
    5. ' 
' → logprob: -4.300715446472168
    6. '  ' → logprob: -4.300715446472168
    7. '  
' → logprob: -6.175715446472168
    8. ' and' → logprob: -6.425715446472168
    9. '<|end|>' → logprob: -7.050715446472168
    10. '   
' → logprob: -7.175715446472168

Token 51: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' (adapté à ' z') → logprob: -0.057271137833595276
    2. ' z' → logprob: -3.0572712421417236
    3. '   ' → logprob: -4.9322710037231445
    4. ' ' → logprob: -7.4322710037231445
    5. ' if' → logprob: -7.6822710037231445
    6. 'if' → logprob: -8.932271003723145
    7. ' and' → logprob: -9.307271003723145
    8. '```' → logprob: -10.057271003723145
    9. '  ' → logprob: -10.182271003723145
    10. '    ' → logprob: -10.807271003723145

Token 52: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0076079354621469975
    2. '=' → logprob: -4.882607936859131
    3. ' ' → logprob: -13.382607460021973
    4. '<|end|>' → logprob: -16.25760841369629
    5. ')' → logprob: -16.75760841369629
    6. '   ' → logprob: -17.00760841369629
    7. ',' → logprob: -17.00760841369629
    8. '=p' → logprob: -17.25760841369629
    9. ' =)' → logprob: -18.75760841369629
    10. ' =
' → logprob: -19.00760841369629

Token 53: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.023250484839081764
    2. 'p' → logprob: -3.7732505798339844
    3. ' ' → logprob: -12.898250579833984
    4. ' ' → logprob: -13.898250579833984
    5. '`' → logprob: -15.648250579833984
    6. '	p' → logprob: -15.898250579833984
    7. 'x' → logprob: -16.148250579833984
    8. '&p' → logprob: -16.398250579833984
    9. '```' → logprob: -16.710750579833984
    10. '    ' → logprob: -16.710750579833984

Token 54: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.2020991056924686e-05
    2. '[' → logprob: -10.375032424926758
    3. '```' → logprob: -14.750032424926758
    4. '   ' → logprob: -16.125032424926758
    5. ' [' → logprob: -16.250032424926758
    6. '\[' → logprob: -17.125032424926758
    7. '[I' → logprob: -17.375032424926758
    8. '[
' → logprob: -17.500032424926758
    9. '[++' → logprob: -17.750032424926758
    10. 'i' → logprob: -17.875032424926758

Token 55: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -7.147740689106286e-05
    2. ' +' → logprob: -9.75007152557373
    3. ']' → logprob: -12.00007152557373
    4. ']+' → logprob: -12.50007152557373
    5. '+]' → logprob: -13.37507152557373
    6. '2' → logprob: -14.50007152557373
    7. '   ' → logprob: -15.00007152557373
    8. '+
' → logprob: -15.25007152557373
    9. '+"]' → logprob: -15.87507152557373
    10. '-' → logprob: -16.125070571899414

Token 56: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.894790981779806e-05
    2. ' ' → logprob: -10.125048637390137
    3. '1' → logprob: -12.687548637390137
    4. '3' → logprob: -13.187548637390137
    5. '```' → logprob: -13.625048637390137
    6. '   ' → logprob: -14.562548637390137
    7. '0' → logprob: -15.312548637390137
    8. ')' → logprob: -15.312548637390137
    9. '
' → logprob: -15.687548637390137
    10. '  ' → logprob: -15.875048637390137

Token 57: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5234650373458862
    2. ']' → logprob: -0.8984650373458862
    3. '])' → logprob: -9.648465156555176
    4. ')]' → logprob: -9.773465156555176
    5. ' ]' → logprob: -9.898465156555176
    6. ')
' → logprob: -10.023465156555176
    7. ' )' → logprob: -10.023465156555176
    8. '   ' → logprob: -10.773465156555176
    9. '']' → logprob: -11.023465156555176
    10. ']
' → logprob: -11.273465156555176

Token 58: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9567291736602783
    2. '\n' → logprob: -1.7067291736602783
    3. ' 
' → logprob: -1.8317291736602783
    4. ' ' → logprob: -2.7067291736602783
    5. '   
' → logprob: -2.9567291736602783
    6. '```' → logprob: -3.2067291736602783
    7. ':' → logprob: -3.5817291736602783
    8. '  
' → logprob: -4.081728935241699
    9. '    
' → logprob: -4.081728935241699
    10. ':
' → logprob: -4.831728935241699

Token 59: ' if' (ID: 538)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.617829442024231
    2. ' 
' → logprob: -1.992829442024231
    3. '   ' → logprob: -2.1178293228149414
    4. ' ' → logprob: -3.1178293228149414
    5. '```' → logprob: -3.1178293228149414
    6. '   
' → logprob: -3.8678293228149414
    7. '  
' → logprob: -3.8678293228149414
    8. '\' → logprob: -4.242829322814941
    9. '     
' → logprob: -4.617829322814941
    10. ' if' → logprob: -4.617829322814941

Token 60: ' (' (ID: 350)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.030977262184023857
    2. 'x' → logprob: -4.155977249145508
    3. ' (' → logprob: -4.280977249145508
    4. ' ' → logprob: -7.530977249145508
    5. '(' → logprob: -8.030977249145508
    6. '(x' → logprob: -9.280977249145508
    7. ' y' → logprob: -11.155977249145508
    8. ' p' → logprob: -11.780977249145508
    9. ' ' → logprob: -12.030977249145508
    10. ' not' → logprob: -12.280977249145508

Token 61: 'y' (ID: 88)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.1047198548913002
    2. ' x' → logprob: -2.354719877243042
    3. '(x' → logprob: -5.729719638824463
    4. ' (' → logprob: -6.979719638824463
    5. '   ' → logprob: -9.604720115661621
    6. 'y' → logprob: -9.604720115661621
    7. '(' → logprob: -9.854720115661621
    8. ' y' → logprob: -9.979720115661621
    9. ' ' → logprob: -10.104720115661621
    10. 'z' → logprob: -11.229720115661621

Token 62: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.48875394463539124
    2. ' <' → logprob: -1.6137539148330688
    3. ' ==' → logprob: -1.9887539148330688
    4. '>' → logprob: -3.8637540340423584
    5. ' -' → logprob: -4.238753795623779
    6. '<' → logprob: -4.863753795623779
    7. '==' → logprob: -5.863753795623779
    8. '-' → logprob: -6.863753795623779
    9. ' +' → logprob: -6.988753795623779
    10. ')' → logprob: -7.488753795623779

Token 63: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.07139518857002258
    2. ' x' → logprob: -2.6963951587677
    3. 'z' → logprob: -6.946395397186279
    4. ' ' → logprob: -8.321394920349121
    5. ' z' → logprob: -9.196394920349121
    6. '=' → logprob: -9.946394920349121
    7. 'max' → logprob: -10.571394920349121
    8. '	x' → logprob: -11.321394920349121
    9. ' max' → logprob: -11.446394920349121
    10. '=x' → logprob: -11.446394920349121

Token 64: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.00882705021649599
    2. 'and' → logprob: -4.883827209472656
    3. ')' → logprob: -7.133827209472656
    4. ' ' → logprob: -8.133827209472656
    5. ' >' → logprob: -10.008827209472656
    6. ' )' → logprob: -10.133827209472656
    7. '>' → logprob: -10.508827209472656
    8. '    ' → logprob: -11.883827209472656
    9. ' a' → logprob: -12.883827209472656
    10. ' or' → logprob: -12.883827209472656

Token 65: ' y' (ID: 342)
  Prédit: ' z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' z' → logprob: -0.2219586968421936
    2. 'z' → logprob: -2.221958637237549
    3. ' y' → logprob: -2.471958637237549
    4. 'y' → logprob: -5.346958637237549
    5. ' x' → logprob: -7.221958637237549
    6. ' ' → logprob: -7.721958637237549
    7. 'x' → logprob: -8.596959114074707
    8. '	z' → logprob: -10.221959114074707
    9. ' ' → logprob: -10.596959114074707
    10. ')' → logprob: -11.159459114074707

Token 66: ' <' (ID: 464)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.09175464510917664
    2. '>' → logprob: -2.466754674911499
    3. ' <' → logprob: -5.96675443649292
    4. '<' → logprob: -8.716754913330078
    5. ' ' → logprob: -10.091754913330078
    6. '<|end|>' → logprob: -10.966754913330078
    7. ')' → logprob: -11.591754913330078
    8. ' and' → logprob: -11.716754913330078
    9. 'and' → logprob: -12.591754913330078
    10. ' >
' → logprob: -13.841754913330078

Token 67: ' z' (ID: 579)
  Prédit: ' z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' z' → logprob: -0.47430360317230225
    2. 'z' → logprob: -0.9743036031723022
    3. ' ' → logprob: -8.724303245544434
    4. 'x' → logprob: -11.349303245544434
    5. ' x' → logprob: -11.474303245544434
    6. '	z' → logprob: -11.849303245544434
    7. '>' → logprob: -11.974303245544434
    8. ')' → logprob: -12.224303245544434
    9. ' p' → logprob: -12.599303245544434
    10. '```' → logprob: -12.724303245544434

Token 68: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04951253533363342
    2. ' )' → logprob: -3.0495126247406006
    3. ' and' → logprob: -7.1745123863220215
    4. '):' → logprob: -9.42451286315918
    5. ' or' → logprob: -9.92451286315918
    6. ' ):' → logprob: -11.29951286315918
    7. 'and' → logprob: -11.79951286315918
    8. '    ' → logprob: -12.92451286315918
    9. ' ' → logprob: -12.92451286315918
    10. '   ' → logprob: -13.04951286315918

Token 69: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.0014845087425783277
    2. 'or' → logprob: -7.126484394073486
    3. ' ' → logprob: -8.251484870910645
    4. '   ' → logprob: -8.626484870910645
    5. ':' → logprob: -9.501484870910645
    6. '    ' → logprob: -9.751484870910645
    7. '	or' → logprob: -10.251484870910645
    8. ' and' → logprob: -10.876484870910645
    9. ' :' → logprob: -11.126484870910645
    10. ')' → logprob: -11.501484870910645

Token 70: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.00634513795375824
    2. '(y' → logprob: -5.256345272064209
    3. ' y' → logprob: -6.881345272064209
    4. '(' → logprob: -9.75634479522705
    5. ' ' → logprob: -10.88134479522705
    6. ' ' → logprob: -13.13134479522705
    7. '(x' → logprob: -13.50634479522705
    8. '<|end|>' → logprob: -14.63134479522705
    9. '(z' → logprob: -14.63134479522705
    10. '   ' → logprob: -14.75634479522705

Token 71: 'y' (ID: 88)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.08961855620145798
    2. 'y' → logprob: -2.464618444442749
    3. ' z' → logprob: -8.089618682861328
    4. 'z' → logprob: -8.464618682861328
    5. 'x' → logprob: -9.714618682861328
    6. ' x' → logprob: -9.714618682861328
    7. ' ' → logprob: -11.214618682861328
    8. '(y' → logprob: -11.464618682861328
    9. ' (' → logprob: -12.714618682861328
    10. '   ' → logprob: -13.214618682861328

Token 72: ' <' (ID: 464)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.02370939776301384
    2. ' <' → logprob: -3.773709297180176
    3. '>' → logprob: -7.773709297180176
    4. ' ' → logprob: -10.523709297180176
    5. '<|end|>' → logprob: -12.023709297180176
    6. '<' → logprob: -12.148709297180176
    7. ')' → logprob: -13.523709297180176
    8. ' >
' → logprob: -13.773709297180176
    9. ' ' → logprob: -14.023709297180176
    10. ' ==' → logprob: -14.273709297180176

Token 73: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.08909246325492859
    2. ' x' → logprob: -2.464092493057251
    3. 'z' → logprob: -9.089092254638672
    4. ' z' → logprob: -10.839092254638672
    5. ' ' → logprob: -11.089092254638672
    6. '<|end|>' → logprob: -12.589092254638672
    7. '	x' → logprob: -14.214092254638672
    8. 's' → logprob: -15.839092254638672
    9. '>x' → logprob: -15.839092254638672
    10. ')x' → logprob: -16.089092254638672

Token 74: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0025000330060720444
    2. 'and' → logprob: -6.002500057220459
    3. ' ' → logprob: -10.8774995803833
    4. ')' → logprob: -12.8774995803833
    5. '<|end|>' → logprob: -14.6274995803833
    6. ' )' → logprob: -14.7524995803833
    7. '	and' → logprob: -14.8774995803833
    8. '>' → logprob: -15.0024995803833
    9. ' ' → logprob: -15.2524995803833
    10. '   ' → logprob: -15.2524995803833

Token 75: ' y' (ID: 342)
  Prédit: ' z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' z' → logprob: -0.5418299436569214
    2. ' y' → logprob: -0.9168299436569214
    3. 'z' → logprob: -4.291830062866211
    4. 'y' → logprob: -5.416830062866211
    5. ' x' → logprob: -7.916830062866211
    6. 'x' → logprob: -10.541830062866211
    7. ' ' → logprob: -11.666830062866211
    8. '	z' → logprob: -12.666830062866211
    9. '>' → logprob: -13.291830062866211
    10. '    ' → logprob: -13.791830062866211

Token 76: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.0016622049733996391
    2. '>' → logprob: -6.501662254333496
    3. ' ' → logprob: -8.876662254333496
    4. ' <' → logprob: -11.376662254333496
    5. ')' → logprob: -12.501662254333496
    6. ' >
' → logprob: -13.126662254333496
    7. ' ' → logprob: -14.876662254333496
    8. ' )' → logprob: -15.001662254333496
    9. ' >

' → logprob: -15.001662254333496
    10. '  ' → logprob: -15.376662254333496

Token 77: ' z' (ID: 579)
  Prédit: ' z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' z' → logprob: -0.26209577918052673
    2. 'z' → logprob: -1.7620958089828491
    3. ' x' → logprob: -3.2620956897735596
    4. 'x' → logprob: -3.8870956897735596
    5. ' ' → logprob: -10.51209545135498
    6. '	z' → logprob: -10.76209545135498
    7. ' y' → logprob: -12.63709545135498
    8. '```' → logprob: -12.63709545135498
    9. ')' → logprob: -13.13709545135498
    10. 'y' → logprob: -13.51209545135498

Token 78: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0027606526855379343
    2. ')' → logprob: -6.002760887145996
    3. ' ):' → logprob: -8.877760887145996
    4. '):
' → logprob: -9.502760887145996
    5. ':' → logprob: -9.627760887145996
    6. '   ' → logprob: -12.627760887145996
    7. ' )' → logprob: -14.752760887145996
    8. ''):' → logprob: -15.377760887145996
    9. ')：' → logprob: -15.752760887145996
    10. ' ' → logprob: -15.877760887145996

Token 79: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00630759634077549
    2. '   ' → logprob: -5.506307601928711
    3. '    ' → logprob: -7.256307601928711
    4. '\n' → logprob: -8.006307601928711
    5. '        
' → logprob: -8.131307601928711
    6. '    
' → logprob: -8.506307601928711
    7. 'i' → logprob: -9.131307601928711
    8. '```' → logprob: -9.256307601928711
    9. '     ' → logprob: -9.631307601928711
    10. ' i' → logprob: -10.006307601928711

Token 80: ' cnt' (ID: 27340)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2358092963695526
    2. ' i' → logprob: -2.485809326171875
    3. 'i' → logprob: -2.610809326171875
    4. '       ' → logprob: -3.860809326171875
    5. ' cnt' → logprob: -4.235809326171875
    6. 'cnt' (adapté à ' cnt') → logprob: -4.610809326171875
    7. '    
' → logprob: -6.110809326171875
    8. '    ' → logprob: -6.610809326171875
    9. '```' → logprob: -6.610809326171875
    10. ' 
' → logprob: -7.110809326171875

Token 81: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.5651428699493408
    2. '+=' → logprob: -1.1901428699493408
    3. '+' → logprob: -2.065142869949341
    4. ' +' → logprob: -7.440142631530762
    5. '=' → logprob: -10.065142631530762
    6. '+='' → logprob: -10.565142631530762
    7. '++' → logprob: -10.690142631530762
    8. '+="' → logprob: -11.315142631530762
    9. '+++' → logprob: -11.440142631530762
    10. ' ' → logprob: -11.565142631530762

Token 82: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0036003058776259422
    2. ' ' → logprob: -5.628600120544434
    3. '2' → logprob: -16.12860107421875
    4. '   ' → logprob: -16.75360107421875
    5. ' ' → logprob: -17.75360107421875
    6. '  ' → logprob: -18.75360107421875
    7. '3' → logprob: -19.12860107421875
    8. '１' → logprob: -19.25360107421875
    9. '```' → logprob: -19.37860107421875
    10. '0' → logprob: -19.50360107421875

Token 83: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.200166469876422e-06
    2. ' ' → logprob: -12.250004768371582
    3. '2' → logprob: -15.000004768371582
    4. '１' → logprob: -17.5000057220459
    5. '3' → logprob: -18.1250057220459
    6. '   ' → logprob: -19.4375057220459
    7. '0' → logprob: -19.5000057220459
    8. 'i' → logprob: -20.0000057220459
    9. '۱' → logprob: -20.2500057220459
    10. '```' → logprob: -20.3750057220459

Token 84: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30071118474006653
    2. '
' → logprob: -1.5507111549377441
    3. '\n' → logprob: -3.675711154937744
    4. '    
' → logprob: -4.425711154937744
    5. '  
' → logprob: -5.550711154937744
    6. '       ' → logprob: -6.550711154937744
    7. ' 
' → logprob: -6.675711154937744
    8. 'i' → logprob: -6.925711154937744
    9. '   
' → logprob: -7.300711154937744
    10. '
' → logprob: -8.300711631774902

Token 85: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12374323606491089
    2. '
' → logprob: -2.3737432956695557
    3. '    
' → logprob: -5.248743057250977
    4. ' i' → logprob: -5.373743057250977
    5. 'i' → logprob: -5.623743057250977
    6. '\n' → logprob: -5.998743057250977
    7. '	i' → logprob: -5.998743057250977
    8. ' 
' → logprob: -6.498743057250977
    9. '  
' → logprob: -6.623743057250977
    10. '   
' → logprob: -7.373743057250977

Token 86: ' i' (ID: 575)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11146456748247147
    2. ' i' → logprob: -2.486464500427246
    3. 'i' (adapté à ' i') → logprob: -3.861464500427246
    4. '    
' → logprob: -7.611464500427246
    5. ' 
' → logprob: -8.236464500427246
    6. '	i' → logprob: -8.236464500427246
    7. '
' → logprob: -9.486464500427246
    8. '\n' → logprob: -10.236464500427246
    9. '```' → logprob: -10.736464500427246
    10. ' ' → logprob: -11.361464500427246

Token 87: ' +=' (ID: 2757)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.012631841003894806
    2. '+=' → logprob: -4.762631893157959
    3. ' +=' → logprob: -5.637631893157959
    4. ' +' → logprob: -7.762631893157959
    5. '<|end|>' → logprob: -11.7626314163208
    6. '++' → logprob: -12.2626314163208
    7. '+++' → logprob: -13.0126314163208
    8. '+='' → logprob: -13.3876314163208
    9. '1' → logprob: -13.5126314163208
    10. '=' → logprob: -13.8876314163208

Token 88: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007360121817328036
    2. '3' → logprob: -7.500736236572266
    3. ' ' → logprob: -8.750736236572266
    4. '2' → logprob: -10.625736236572266
    5. '   ' → logprob: -15.125736236572266
    6. '  ' → logprob: -16.875736236572266
    7. '```' → logprob: -17.000736236572266
    8. '１' → logprob: -17.750736236572266
    9. '0' → logprob: -18.750736236572266
    10. '`' → logprob: -19.063236236572266

Token 89: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.73446003627032e-05
    2. '3' → logprob: -9.500097274780273
    3. '2' → logprob: -11.000097274780273
    4. ' ' → logprob: -12.125097274780273
    5. '   ' → logprob: -15.875097274780273
    6. '```' → logprob: -16.812597274780273
    7. '  ' → logprob: -17.312597274780273
    8. '１' → logprob: -17.687597274780273
    9. '0' → logprob: -19.062597274780273
    10. '`' → logprob: -19.187597274780273

Token 90: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2984616160392761
    2. '
' → logprob: -1.423461675643921
    3. '#' → logprob: -5.048461437225342
    4. 'p' → logprob: -6.173461437225342
    5. '\n' → logprob: -6.173461437225342
    6. ')' → logprob: -6.423461437225342
    7. '  
' → logprob: -6.423461437225342
    8. '<|end|>' → logprob: -7.173461437225342
    9. ' 
' → logprob: -7.548461437225342
    10. 'n' → logprob: -7.673461437225342

Token 91: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.008129766210913658
    2. '
' → logprob: -5.383129596710205
    3. 'p' → logprob: -5.883129596710205
    4. '\n' → logprob: -8.383130073547363
    5. 'pr' → logprob: -8.758130073547363
    6. '#' → logprob: -9.258130073547363
    7. '  
' → logprob: -9.758130073547363
    8. 'n' → logprob: -10.133130073547363
    9. '\' → logprob: -10.508130073547363
    10. ' 
' → logprob: -10.508130073547363

Token 92: '(cnt' (ID: 102125)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002197717549279332
    2. '(cnt' → logprob: -6.127197742462158
    3. '('' → logprob: -12.627197265625
    4. '(`' → logprob: -13.002197265625
    5. ' (' → logprob: -13.252197265625
    6. '("("' → logprob: -13.252197265625
    7. '((' → logprob: -14.252197265625
    8. '(c' → logprob: -14.252197265625
    9. '(
' → logprob: -14.502197265625
    10. '(count' → logprob: -15.002197265625

Token 93: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.650518920039758e-06
    2. ' )' → logprob: -12.625003814697266
    3. '))' → logprob: -15.500003814697266
    4. ')`' → logprob: -16.875003814697266
    5. ')
' → logprob: -17.250003814697266
    6. '+' → logprob: -18.000003814697266
    7. '')' → logprob: -18.250003814697266
    8. ')}' → logprob: -18.750003814697266
    9. '`)' → logprob: -18.750003814697266
    10. '()' → logprob: -19.125003814697266


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 91
Tokens correctement prédits (1ère position, stricte): 40
Tokens correctement prédits (1ère position, avec adaptation): 41
Tokens correctement prédits (top 10): 80
Précision stricte (1ère position): 43.96%
Précision adaptée (1ère position): 45.05%
Précision (top 10): 87.91%
================================================================================
