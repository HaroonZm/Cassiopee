================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:59:47
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def read_input():
    import sys
    input = sys.stdin.readline
    n, m = parse_nm(input)
    ks = read_ks(m, input)
    p = read_p(input)
    return n, m, ks, p

def parse_nm(input):
    return list(map(int, input().rstrip('\n').split()))

def read_ks(m, input):
    return [parse_ks_line(input) for _ in range(m)]

def parse_ks_line(input):
    return list(map(int, input().rstrip('\n').split()))

def read_p(input):
    return list(map(int, input().rstrip('\n').split()))

def generate_switch_states(n):
    import itertools
    return itertools.product([True, False], repeat=n)

def evaluate_switch_state(v, ks, p):
    for j, vv in enumerate(ks):
        cnt = count_on_switches(v, vv)
        if not is_correct_parity(cnt, p[j]):
            return False
    return True

def count_on_switches(v, vv):
    count = 0
    for i in range(vv[0]):
        idx = get_switch_index(vv, i)
        if is_switch_on(v, idx):
            count += 1
    return count

def get_switch_index(vv, i):
    return vv[i+1] - 1

def is_switch_on(v, idx):
    return v[idx]

def is_correct_parity(cnt, expected_parity):
    return cnt % 2 == expected_parity

def increment_counter_if_valid(v, ks, p, a_cnt):
    if evaluate_switch_state(v, ks, p):
        a_cnt[0] += 1

def solve_logic(n, m, ks, p):
    a_cnt = [0]
    for v in generate_switch_states(n):
        increment_counter_if_valid(v, ks, p, a_cnt)
    return a_cnt[0]

def print_result(result):
    print(result)

def slove():
    n, m, ks, p = read_input()
    result = solve_logic(n, m, ks, p)
    print_result(result)

if __name__ == '__main__':
    slove()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' read' (ID: 1729)
  → Token d'amorce (pas de prédiction)

Token 2: '_input' (ID: 12507)
  → Token d'amorce (pas de prédiction)

Token 3: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002494683489203453
    2. '_' → logprob: -6.877494812011719
    3. '():' → logprob: -7.127494812011719
    4. '(:' → logprob: -8.252494812011719
    5. '```' → logprob: -8.877494812011719
    6. '(_:' → logprob: -9.377494812011719
    7. ':' → logprob: -9.752494812011719
    8. ' (' → logprob: -10.002494812011719
    9. '(_' → logprob: -10.877494812011719
    10. '()' → logprob: -12.502494812011719

Token 4: '   ' (ID: 271)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.988785445690155
    2. '\' → logprob: -1.2387855052947998
    3. '\n' → logprob: -1.3637855052947998
    4. '   ' → logprob: -3.1137855052948
    5. '    
' → logprob: -4.863785266876221
    6. '
' → logprob: -5.113785266876221
    7. ' 
' → logprob: -5.613785266876221
    8. '``' → logprob: -5.863785266876221
    9. ':' → logprob: -6.113785266876221
    10. ''\' → logprob: -6.613785266876221

Token 5: ' import' (ID: 1588)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.636720597743988
    2. '   ' → logprob: -1.5117206573486328
    3. 'input' → logprob: -2.136720657348633
    4. 'r' → logprob: -3.386720657348633
    5. '```' → logprob: -3.636720657348633
    6. 'x' → logprob: -4.136720657348633
    7. 'data' → logprob: -4.136720657348633
    8. 'text' → logprob: -4.761720657348633
    9. 'n' → logprob: -5.261720657348633
    10. 'pass' → logprob: -5.386720657348633

Token 6: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.028830036520957947
    2. ' os' → logprob: -3.778830051422119
    3. ' csv' → logprob: -5.903830051422119
    4. ' ' → logprob: -6.778830051422119
    5. ' input' → logprob: -7.153830051422119
    6. ' json' → logprob: -7.653830051422119
    7. ' io' → logprob: -9.153829574584961
    8. ' pandas' → logprob: -9.278829574584961
    9. ' math' → logprob: -9.528829574584961
    10. ' numpy' → logprob: -10.653829574584961

Token 7: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3410748541355133
    2. '   ' → logprob: -2.5910749435424805
    3. '.readline' → logprob: -3.0910749435424805
    4. '\' → logprob: -3.0910749435424805
    5. '```' → logprob: -3.2160749435424805
    6. '\n' → logprob: -3.3410749435424805
    7. 'newline' → logprob: -4.3410749435424805
    8. '[' → logprob: -4.8410749435424805
    9. ' ' → logprob: -4.9660749435424805
    10. '    ' → logprob: -5.7160749435424805

Token 8: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05714302510023117
    2. '.readline' → logprob: -4.807143211364746
    3. '\n' → logprob: -5.057143211364746
    4. '    
' → logprob: -5.307143211364746
    5. '    ' → logprob: -5.432143211364746
    6. '\' → logprob: -5.432143211364746
    7. '```' → logprob: -5.682143211364746
    8. 'return' → logprob: -5.932143211364746
    9. '       ' → logprob: -5.932143211364746
    10. ' ' → logprob: -6.057143211364746

Token 9: ' input' (ID: 3422)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10812510550022125
    2. 'data' → logprob: -2.8581252098083496
    3. 'input' (adapté à ' input') → logprob: -4.23312520980835
    4. ' ' → logprob: -4.60812520980835
    5. 'return' → logprob: -4.73312520980835
    6. 'for' → logprob: -5.85812520980835
    7. '    ' → logprob: -6.48312520980835
    8. '       ' → logprob: -6.85812520980835
    9. ' for' → logprob: -7.10812520980835
    10. 'n' → logprob: -7.23312520980835

Token 10: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6321156024932861
    2. '(' → logprob: -0.8821156024932861
    3. '_data' → logprob: -3.632115602493286
    4. '_' → logprob: -4.507115364074707
    5. '_line' → logprob: -4.507115364074707
    6. '.' → logprob: -7.007115364074707
    7. ' =' → logprob: -7.382115364074707
    8. ')' → logprob: -7.507115364074707
    9. '_str' → logprob: -7.757115364074707
    10. 'data' → logprob: -7.882115364074707

Token 11: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.4740878641605377
    2. ' sys' → logprob: -0.9740878343582153
    3. '=sys' → logprob: -12.349087715148926
    4. '(sys' → logprob: -12.599087715148926
    5. '	sys' → logprob: -12.849087715148926
    6. 'input' → logprob: -14.974087715148926
    7. '_sys' → logprob: -16.224088668823242
    8. 'lambda' → logprob: -16.974088668823242
    9. ' ' → logprob: -17.224088668823242
    10. ' input' → logprob: -17.474088668823242

Token 12: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.014847763814032078
    2. '.readline' → logprob: -4.264847755432129
    3. '.read' → logprob: -7.764847755432129
    4. '.stdin' → logprob: -8.639847755432129
    5. ' .' → logprob: -10.264847755432129
    6. '.Read' → logprob: -11.639847755432129
    7. '.​' → logprob: -11.889847755432129
    8. '().' → logprob: -12.514847755432129
    9. '​.' → logprob: -12.639847755432129
    10. '.get' → logprob: -12.764847755432129

Token 13: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.09385614097118378
    2. '.' → logprob: -2.8438560962677
    3. '.read' → logprob: -3.4688560962677
    4. 'read' → logprob: -8.718855857849121
    5. '.readlines' → logprob: -10.343855857849121
    6. '.Read' → logprob: -10.593855857849121
    7. ' readline' → logprob: -13.218855857849121
    8. '_read' → logprob: -13.343855857849121
    9. '```' → logprob: -13.468855857849121
    10. '().' → logprob: -13.718855857849121

Token 14: '
' (ID: 198)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.004681576509028673
    2. '(' → logprob: -5.754681587219238
    3. '()
' → logprob: -7.254681587219238
    4. '()\' → logprob: -8.129681587219238
    5. ' ()' → logprob: -8.879681587219238
    6. '().' → logprob: -8.879681587219238
    7. ')' → logprob: -9.504681587219238
    8. '(
' → logprob: -10.379681587219238
    9. '())' → logprob: -10.379681587219238
    10. '()`' → logprob: -11.254681587219238

Token 15: '   ' (ID: 271)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.02390519343316555
    2. '(' → logprob: -3.7739052772521973
    3. '()
' → logprob: -8.273904800415039
    4. '   ' → logprob: -9.398904800415039
    5. '(
' → logprob: -9.523904800415039
    6. ' ' → logprob: -9.648904800415039
    7. ' ()' → logprob: -10.023904800415039
    8. '().' → logprob: -10.148904800415039
    9. 'return' → logprob: -10.898904800415039
    10. '()\' → logprob: -10.898904800415039

Token 16: ' n' (ID: 297)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0013135707704350352
    2. '(' → logprob: -6.75131368637085
    3. '().' → logprob: -9.626313209533691
    4. '()
' → logprob: -11.001313209533691
    5. '   ' → logprob: -11.126313209533691
    6. ')' → logprob: -11.251313209533691
    7. '())' → logprob: -11.751313209533691
    8. 'return' → logprob: -11.876313209533691
    9. ' ()' → logprob: -12.001313209533691
    10. 'def' → logprob: -13.376313209533691

Token 17: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6529350280761719
    2. '=' → logprob: -1.0279350280761719
    3. ')' → logprob: -2.777935028076172
    4. ' ' → logprob: -3.902935028076172
    5. '_' → logprob: -4.027935028076172
    6. '(' → logprob: -5.027935028076172
    7. '()' → logprob: -5.777935028076172
    8. '.' → logprob: -6.027935028076172
    9. ' )' → logprob: -6.652935028076172
    10. '_space' → logprob: -6.777935028076172

Token 18: ' m' (ID: 284)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -1.1384800672531128
    2. ' m' → logprob: -1.5134800672531128
    3. ' ' → logprob: -1.7634800672531128
    4. 'input' → logprob: -2.2634801864624023
    5. ' =' → logprob: -2.3884801864624023
    6. 'm' → logprob: -3.1384801864624023
    7. '=' → logprob: -3.5134801864624023
    8. '=input' → logprob: -4.138480186462402
    9. '  ' → logprob: -7.513480186462402
    10. '_' → logprob: -8.263480186462402

Token 19: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06261184066534042
    2. '=' → logprob: -2.8126118183135986
    3. ',' → logprob: -7.437612056732178
    4. ' ,' → logprob: -10.31261157989502
    5. ' ' → logprob: -12.06261157989502
    6. ')' → logprob: -12.18761157989502
    7. '<|end|>' → logprob: -12.43761157989502
    8. ' =
' → logprob: -12.93761157989502
    9. ' =",' → logprob: -13.93761157989502
    10. '    ' → logprob: -14.18761157989502

Token 20: ' parse' (ID: 8420)
  Prédit: ' map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.015375682152807713
    2. 'map' → logprob: -4.26537561416626
    3. ' input' → logprob: -7.01537561416626
    4. 'input' → logprob: -8.140376091003418
    5. ' ' → logprob: -11.265376091003418
    6. ' list' → logprob: -11.890376091003418
    7. ' tuple' → logprob: -14.265376091003418
    8. 'list' → logprob: -14.640376091003418
    9. '	map' → logprob: -14.890376091003418
    10. '  ' → logprob: -15.265376091003418

Token 21: '_nm' (ID: 136334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014198530465364456
    2. '()' → logprob: -5.014198303222656
    3. '_input' → logprob: -5.264198303222656
    4. '_' → logprob: -6.764198303222656
    5. 'r' → logprob: -7.389198303222656
    6. '_line' → logprob: -8.639198303222656
    7. '('' → logprob: -9.514198303222656
    8. ' (' → logprob: -9.889198303222656
    9. '_int' → logprob: -10.764198303222656
    10. ')' → logprob: -11.139198303222656

Token 22: '(input' (ID: 10054)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5761640071868896
    2. '(' → logprob: -0.8261640071868896
    3. '('' → logprob: -8.951164245605469
    4. ')' → logprob: -10.701164245605469
    5. '(
' → logprob: -10.951164245605469
    6. '[' → logprob: -11.326164245605469
    7. '(n' → logprob: -11.826164245605469
    8. ' ()' → logprob: -12.076164245605469
    9. 's' → logprob: -12.326164245605469
    10. ' (' → logprob: -12.576164245605469

Token 23: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2596844732761383
    2. '())' → logprob: -1.759684443473816
    3. '()' → logprob: -2.8846845626831055
    4. '(' → logprob: -7.2596845626831055
    5. ' )' → logprob: -11.634684562683105
    6. '))' → logprob: -11.759684562683105
    7. ' ())' → logprob: -12.884684562683105
    8. '().' → logprob: -13.009684562683105
    9. '[' → logprob: -13.259684562683105
    10. ')`' → logprob: -13.884684562683105

Token 24: '   ' (ID: 271)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.9411032199859619
    2. '(' → logprob: -1.316103219985962
    3. ')' → logprob: -1.316103219985962
    4. '
' → logprob: -4.066102981567383
    5. '   ' → logprob: -4.191102981567383
    6. '(
' → logprob: -4.816102981567383
    7. '()
' → logprob: -4.816102981567383
    8. '\n' → logprob: -5.316102981567383
    9. '\' → logprob: -5.566102981567383
    10. ' ' → logprob: -5.691102981567383

Token 25: ' ks' (ID: 81387)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4831806719303131
    2. ')' → logprob: -1.7331806421279907
    3. '```' → logprob: -3.2331807613372803
    4. '
' → logprob: -3.6081807613372803
    5. '\n' → logprob: -3.8581807613372803
    6. '(' → logprob: -3.8581807613372803
    7. '    
' → logprob: -3.9831807613372803
    8. ' ' → logprob: -4.108180522918701
    9. '\' → logprob: -4.108180522918701
    10. '()' → logprob: -4.733180522918701

Token 26: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3792547881603241
    2. '=' → logprob: -1.6292548179626465
    3. ',' → logprob: -2.2542548179626465
    4. '_' → logprob: -4.6292548179626465
    5. ' ' → logprob: -6.3792548179626465
    6. '[' → logprob: -6.3792548179626465
    7. ')' → logprob: -7.6292548179626465
    8. '.' → logprob: -8.004254341125488
    9. ' ,' → logprob: -8.254254341125488
    10. 's' → logprob: -9.004254341125488

Token 27: ' read' (ID: 1729)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.38594356179237366
    2. ' list' → logprob: -1.7609435319900513
    3. ' [' → logprob: -2.510943651199341
    4. '[]' → logprob: -3.135943651199341
    5. 'list' → logprob: -4.010943412780762
    6. '[' → logprob: -5.885943412780762
    7. ' input' → logprob: -7.010943412780762
    8. '[input' → logprob: -7.010943412780762
    9. '[list' → logprob: -7.885943412780762
    10. 'input' → logprob: -8.510943412780762

Token 28: '_' (ID: 62)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.33368274569511414
    2. '_line' → logprob: -1.8336827754974365
    3. '_' → logprob: -2.9586827754974365
    4. 'line' → logprob: -3.7086827754974365
    5. '_lines' → logprob: -4.583682537078857
    6. '_list' → logprob: -4.708682537078857
    7. 'lines' → logprob: -5.333682537078857
    8. '()' → logprob: -5.333682537078857
    9. '(' → logprob: -5.833682537078857
    10. '_k' → logprob: -5.833682537078857

Token 29: 'ks' (ID: 2484)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -1.3213410377502441
    2. 'ints' → logprob: -1.3213410377502441
    3. 'lines' → logprob: -1.4463410377502441
    4. 'line' → logprob: -1.6963410377502441
    5. 'int' → logprob: -3.946341037750244
    6. 'input' → logprob: -4.196341037750244
    7. 's' → logprob: -5.821341037750244
    8. 'array' → logprob: -6.196341037750244
    9. 'ks' → logprob: -6.321341037750244
    10. 'values' → logprob: -7.071341037750244

Token 30: '(m' (ID: 2145)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6933057308197021
    2. '(input' → logprob: -0.6933057308197021
    3. '()' → logprob: -9.943305969238281
    4. ' (' → logprob: -10.068305969238281
    5. '(read' → logprob: -11.693305969238281
    6. '(
' → logprob: -11.693305969238281
    7. '(in' → logprob: -12.068305969238281
    8. '(line' → logprob: -12.443305969238281
    9. '_input' → logprob: -12.443305969238281
    10. '(data' → logprob: -12.693305969238281

Token 31: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.070975071750581e-05
    2. '()' → logprob: -11.750030517578125
    3. ' )' → logprob: -12.000030517578125
    4. ',' → logprob: -12.000030517578125
    5. '))' → logprob: -13.375030517578125
    6. ')
' → logprob: -13.375030517578125
    7. '[' → logprob: -13.375030517578125
    8. '   ' → logprob: -13.375030517578125
    9. ',)' → logprob: -14.250030517578125
    10. '())' → logprob: -14.750030517578125

Token 32: ' input' (ID: 3422)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.9080882668495178
    2. ' input' → logprob: -0.9080882668495178
    3. 'input' → logprob: -2.283088207244873
    4. ')' → logprob: -3.283088207244873
    5. 'n' → logprob: -3.283088207244873
    6. ' )' → logprob: -4.283088207244873
    7. ')n' → logprob: -6.533088207244873
    8. ' ' → logprob: -7.908088207244873
    9. ' ks' → logprob: -8.908088684082031
    10. '    ' → logprob: -9.720588684082031

Token 33: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1756367712223437e-05
    2. '   ' → logprob: -12.250011444091797
    3. ')
' → logprob: -12.500011444091797
    4. ' )' → logprob: -13.625011444091797
    5. '))' → logprob: -14.500011444091797
    6. '`)' → logprob: -15.000011444091797
    7. ')`' → logprob: -15.500011444091797
    8. '()' → logprob: -15.625011444091797
    9. '')' → logprob: -15.750011444091797
    10. '[' → logprob: -15.750011444091797

Token 34: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020175350829958916
    2. '
' → logprob: -4.895175457000732
    3. ')' → logprob: -5.020175457000732
    4. '<|end|>' → logprob: -5.645175457000732
    5. '    
' → logprob: -6.770175457000732
    6. 'def' → logprob: -7.645175457000732
    7. ' ' → logprob: -8.645174980163574
    8. 'return' → logprob: -9.270174980163574
    9. '    ' → logprob: -9.645174980163574
    10. '  ' → logprob: -9.770174980163574

Token 35: ' p' (ID: 275)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04702317342162132
    2. ')' → logprob: -4.172023296356201
    3. '
' → logprob: -4.547023296356201
    4. 'return' → logprob: -5.047023296356201
    5. '<|end|>' → logprob: -5.047023296356201
    6. '    
' → logprob: -5.797023296356201
    7. 'def' → logprob: -7.047023296356201
    8. ' ' → logprob: -7.172023296356201
    9. ' return' → logprob: -7.922023296356201
    10. 'n' → logprob: -7.922023296356201

Token 36: ' =' (ID: 314)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.005164139438420534
    2. ' =' → logprob: -6.75516414642334
    3. 'ar' → logprob: -7.50516414642334
    4. 'a' → logprob: -7.75516414642334
    5. 'l' → logprob: -7.88016414642334
    6. '=' → logprob: -7.88016414642334
    7. '_' → logprob: -8.13016414642334
    8. 's' → logprob: -8.13016414642334
    9. '_r' → logprob: -8.25516414642334
    10. 'i' → logprob: -9.00516414642334

Token 37: ' read' (ID: 1729)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.2884248197078705
    2. ' [' → logprob: -2.0384247303009033
    3. '[]' → logprob: -2.6634247303009033
    4. ' ' → logprob: -4.538424968719482
    5. ' read' → logprob: -4.913424968719482
    6. '[' → logprob: -5.163424968719482
    7. ' ks' → logprob: -5.163424968719482
    8. ' parse' → logprob: -5.663424968719482
    9. 'read' → logprob: -5.913424968719482
    10. '0' → logprob: -6.163424968719482

Token 38: '_p' (ID: 1359)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.23404209315776825
    2. '_p' → logprob: -2.359042167663574
    3. '_s' → logprob: -4.234042167663574
    4. '_input' → logprob: -4.734042167663574
    5. '_k' → logprob: -4.734042167663574
    6. '_ro' → logprob: -4.859042167663574
    7. '_m' → logprob: -5.359042167663574
    8. '_ids' → logprob: -5.734042167663574
    9. '_output' → logprob: -5.859042167663574
    10. 's' → logprob: -5.984042167663574

Token 39: '(input' (ID: 10054)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9475159645080566
    2. '(' → logprob: -1.4475159645080566
    3. '(m' → logprob: -1.6975159645080566
    4. '_' → logprob: -1.9475159645080566
    5. '(n' → logprob: -3.9475159645080566
    6. '(s' → logprob: -4.822515964508057
    7. '_s' → logprob: -5.072515964508057
    8. '_m' → logprob: -5.822515964508057
    9. '_list' → logprob: -6.197515964508057
    10. '(input' → logprob: -6.322515964508057

Token 40: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.843177233240567e-05
    2. '   ' → logprob: -12.250018119812012
    3. ' )' → logprob: -12.250018119812012
    4. ')
' → logprob: -12.500018119812012
    5. '()' → logprob: -13.500018119812012
    6. '[' → logprob: -13.500018119812012
    7. ')p' → logprob: -14.375018119812012
    8. '))' → logprob: -14.875018119812012
    9. '())' → logprob: -15.125018119812012
    10. ' ' → logprob: -15.625018119812012

Token 41: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08205274492502213
    2. '
' → logprob: -3.207052707672119
    3. '<|end|>' → logprob: -4.082052707672119
    4. ')' → logprob: -4.332052707672119
    5. 'def' → logprob: -5.957052707672119
    6. ' ' → logprob: -6.457052707672119
    7. '    
' → logprob: -6.707052707672119
    8. 'return' → logprob: -7.832052707672119
    9. '```' → logprob: -8.082053184509277
    10. ',' → logprob: -8.332053184509277

Token 42: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030723845586180687
    2. '
' → logprob: -5.030724048614502
    3. ' ' → logprob: -5.280724048614502
    4. '    
' → logprob: -5.530724048614502
    5. '<|end|>' → logprob: -5.530724048614502
    6. ')' → logprob: -6.155724048614502
    7. 'return' (adapté à ' return') → logprob: -6.530724048614502
    8. 'def' → logprob: -6.905724048614502
    9. '\n' → logprob: -6.905724048614502
    10. 'n' → logprob: -6.905724048614502

Token 43: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.11567293852567673
    2. 'n' → logprob: -2.3656728267669678
    3. ' (' → logprob: -4.865673065185547
    4. ' ' → logprob: -5.990673065185547
    5. '(n' → logprob: -6.115673065185547
    6. '(' → logprob: -6.865673065185547
    7. ' None' → logprob: -7.115673065185547
    8. '  ' → logprob: -7.990673065185547
    9. '[n' → logprob: -8.865673065185547
    10. 'None' → logprob: -9.115673065185547

Token 44: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 45: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.22563856840133667
    2. 'm' → logprob: -1.6006386280059814
    3. ' ' → logprob: -8.850638389587402
    4. 'space' → logprob: -10.600638389587402
    5. ' ' → logprob: -11.350638389587402
    6. ''' → logprob: -11.350638389587402
    7. ' p' → logprob: -12.100638389587402
    8. ' space' → logprob: -12.725638389587402
    9. '<|end|>' → logprob: -12.725638389587402
    10. ' ,' → logprob: -12.725638389587402

Token 46: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005049810279160738
    2. '<|end|>' → logprob: -5.505049705505371
    3. ',n' → logprob: -8.005049705505371
    4. ',p' → logprob: -8.130049705505371
    5. ' ,' → logprob: -8.880049705505371
    6. ',
' → logprob: -9.630049705505371
    7. ',m' → logprob: -10.255049705505371
    8. ')' → logprob: -10.755049705505371
    9. '<|end|>' → logprob: -11.005049705505371
    10. ' p' → logprob: -11.630049705505371

Token 47: ' ks' (ID: 81387)
  Prédit: ' ks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ks' → logprob: -0.002279553795233369
    2. 'ks' → logprob: -6.127279758453369
    3. ' Ks' → logprob: -10.252279281616211
    4. ' p' → logprob: -10.752279281616211
    5. 's' → logprob: -11.002279281616211
    6. ' ' → logprob: -12.377279281616211
    7. ' ' → logprob: -12.752279281616211
    8. ' k' → logprob: -12.877279281616211
    9. 'p' → logprob: -13.252279281616211
    10. 'k' → logprob: -13.252279281616211

Token 48: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14199046790599823
    2. '<|end|>' → logprob: -2.3919904232025146
    3. ',p' → logprob: -3.5169904232025146
    4. ',
' → logprob: -5.266990661621094
    5. ',n' → logprob: -6.516990661621094
    6. '
' → logprob: -6.641990661621094
    7. '   ' → logprob: -7.516990661621094
    8. ' ,' → logprob: -7.516990661621094
    9. ' ' → logprob: -8.141990661621094
    10. 'p' → logprob: -8.266990661621094

Token 49: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.014165864326059818
    2. 'p' → logprob: -4.264165878295898
    3. ' ' → logprob: -14.014165878295898
    4. ' ' → logprob: -14.139165878295898
    5. ' ,' → logprob: -15.889165878295898
    6. ''' → logprob: -16.3891658782959
    7. '```' → logprob: -16.5141658782959
    8. ',' → logprob: -16.8891658782959
    9. ',p' → logprob: -17.0141658782959
    10. '32' → logprob: -17.0141658782959

Token 50: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4510861039161682
    2. '<|end|>' → logprob: -2.0760860443115234
    3. '
' → logprob: -2.2010860443115234
    4. '#' → logprob: -2.9510860443115234
    5. '\' → logprob: -3.8260860443115234
    6. '.' → logprob: -4.326086044311523
    7. ')' → logprob: -4.951086044311523
    8. '```' → logprob: -5.076086044311523
    9. '\n' → logprob: -5.451086044311523
    10. 'n' → logprob: -5.951086044311523

Token 51: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.29707077145576477
    2. '
' → logprob: -2.1720707416534424
    3. '#' → logprob: -2.9220707416534424
    4. 'd' → logprob: -3.5470707416534424
    5. '.' → logprob: -3.6720707416534424
    6. '\' → logprob: -4.4220709800720215
    7. '_' → logprob: -5.2970709800720215
    8. '```' → logprob: -5.6720709800720215
    9. '' → logprob: -5.7970709800720215
    10. '<|end|>' → logprob: -5.9220709800720215

Token 52: ' parse' (ID: 8420)
  Prédit: ' parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parse' → logprob: -0.6541035771369934
    2. ' read' → logprob: -0.7791035771369934
    3. ' process' → logprob: -4.779103755950928
    4. ' calculate' → logprob: -5.654103755950928
    5. ' main' → logprob: -6.279103755950928
    6. ' space' → logprob: -6.279103755950928
    7. ' write' → logprob: -6.529103755950928
    8. ' compute' → logprob: -6.654103755950928
    9. ' analyze' → logprob: -7.654103755950928
    10. '_' → logprob: -7.779103755950928

Token 53: '_nm' (ID: 136334)
  Prédit: '_nm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nm' → logprob: -0.0012478509452193975
    2. '_' → logprob: -7.001247882843018
    3. '_n' → logprob: -8.00124740600586
    4. '_nn' → logprob: -15.25124740600586
    5. '_nv' → logprob: -15.25124740600586
    6. '__' → logprob: -15.62624740600586
    7. '_nc' → logprob: -16.37624740600586
    8. '```' → logprob: -16.50124740600586
    9. '_np' → logprob: -16.62624740600586
    10. ' _' → logprob: -16.87624740600586

Token 54: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.5768131017684937
    2. '(' → logprob: -0.8268131017684937
    3. '(line' → logprob: -7.326813220977783
    4. '():' → logprob: -9.201812744140625
    5. ' (' → logprob: -9.951812744140625
    6. '(token' → logprob: -11.076812744140625
    7. '(in' → logprob: -11.951812744140625
    8. '(s' → logprob: -12.201812744140625
    9. '(data' → logprob: -12.326812744140625
    10. '(_' → logprob: -12.576812744140625

Token 55: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04932213947176933
    2. ')' → logprob: -3.4243221282958984
    3. '(' → logprob: -4.299322128295898
    4. '(input' → logprob: -6.549322128295898
    5. ')(' → logprob: -9.174322128295898
    6. ' ):' → logprob: -9.424322128295898
    7. '):
' → logprob: -9.549322128295898
    8. '_input' → logprob: -9.799322128295898
    9. '():' → logprob: -10.049322128295898
    10. '_' → logprob: -10.299322128295898

Token 56: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.09061030298471451
    2. '(' → logprob: -2.8406102657318115
    3. ':' → logprob: -4.215610504150391
    4. '()' → logprob: -4.840610504150391
    5. '   ' → logprob: -5.715610504150391
    6. '):' → logprob: -7.715610504150391
    7. '[:]' → logprob: -8.09061050415039
    8. ' ():' → logprob: -8.46561050415039
    9. ')' → logprob: -8.71561050415039
    10. '_' → logprob: -8.84061050415039

Token 57: ' return' (ID: 622)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.2216057777404785
    2. ' line' → logprob: -1.2216057777404785
    3. ' n' → logprob: -1.3466057777404785
    4. 'line' → logprob: -2.4716057777404785
    5. '   ' → logprob: -3.5966057777404785
    6. 'input' → logprob: -4.5966057777404785
    7. ' return' → logprob: -4.7216057777404785
    8. 'int' → logprob: -5.0966057777404785
    9. 'return' (adapté à ' return') → logprob: -5.7216057777404785
    10. ' input' → logprob: -6.0966057777404785

Token 58: ' list' (ID: 1562)
  Prédit: ' map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.5920330882072449
    2. ' tuple' → logprob: -0.8420330882072449
    3. ' list' → logprob: -5.2170329093933105
    4. 'map' → logprob: -5.2170329093933105
    5. 'tuple' → logprob: -5.3420329093933105
    6. ' int' → logprob: -8.592033386230469
    7. 'list' → logprob: -9.217033386230469
    8. 'int' → logprob: -10.217033386230469
    9. ' input' → logprob: -12.342033386230469
    10. ' [' → logprob: -13.717033386230469

Token 59: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.029882853850722313
    2. '(' → logprob: -3.5298829078674316
    3. '(int' → logprob: -9.029882431030273
    4. '(input' → logprob: -11.904882431030273
    5. '(tuple' → logprob: -13.404882431030273
    6. '(
' → logprob: -13.529882431030273
    7. '(

' → logprob: -14.279882431030273
    8. '(list' → logprob: -14.779882431030273
    9. 'map' → logprob: -14.904882431030273
    10. '(m' → logprob: -15.029882431030273

Token 60: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0005989041528664529
    2. '(' → logprob: -7.500598907470703
    3. 'int' → logprob: -11.375598907470703
    4. ',int' → logprob: -11.375598907470703
    5. '(lambda' → logprob: -12.000598907470703
    6. '<int' → logprob: -12.250598907470703
    7. '(str' → logprob: -12.375598907470703
    8. ')' → logprob: -12.500598907470703
    9. ' int' → logprob: -13.625598907470703
    10. '=int' → logprob: -13.750598907470703

Token 61: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.006826670840382576
    2. '(' → logprob: -5.131826877593994
    3. ',input' → logprob: -7.756826877593994
    4. 'input' → logprob: -8.006826400756836
    5. ' (' → logprob: -9.881826400756836
    6. ')' → logprob: -10.381826400756836
    7. ' input' → logprob: -10.631826400756836
    8. '(
' → logprob: -11.256826400756836
    9. ',' → logprob: -11.506826400756836
    10. '(

' → logprob: -13.131826400756836

Token 62: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.3869728147983551
    2. ' input' → logprob: -1.1369727849960327
    3. '(input' → logprob: -9.886972427368164
    4. ',input' → logprob: -10.261972427368164
    5. ')' → logprob: -12.011972427368164
    6. '   ' → logprob: -12.511972427368164
    7. '[input' → logprob: -13.136972427368164
    8. '	input' → logprob: -13.261972427368164
    9. '=input' → logprob: -13.761972427368164
    10. '_input' → logprob: -14.761972427368164

Token 63: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -6.630610641877865e-06
    2. '()' → logprob: -12.000006675720215
    3. ' ().' → logprob: -15.000006675720215
    4. '.strip' → logprob: -16.5000057220459
    5. '()))' → logprob: -17.6250057220459
    6. '().'' → logprob: -18.2500057220459
    7. '()
' → logprob: -18.8750057220459
    8. '.readline' → logprob: -18.8750057220459
    9. 'strip' → logprob: -19.3750057220459
    10. '(' → logprob: -19.3750057220459

Token 64: 'rstrip' (ID: 180429)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.03813467174768448
    2. 'strip' → logprob: -3.2881345748901367
    3. 'rstrip' → logprob: -9.288134574890137
    4. ' split' → logprob: -15.038134574890137
    5. 'read' → logprob: -15.413134574890137
    6. '(split' → logprob: -16.788135528564453
    7. 'spl' → logprob: -16.913135528564453
    8. ' strip' → logprob: -17.538135528564453
    9. 'rs' → logprob: -19.538135528564453
    10. '```' → logprob: -20.163135528564453

Token 65: '('\' (ID: 24345)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.001924706157296896
    2. '('' → logprob: -6.751924514770508
    3. '('\' → logprob: -7.626924514770508
    4. '()' → logprob: -8.626924514770508
    5. '(' → logprob: -10.626924514770508
    6. ' ().' → logprob: -11.001924514770508
    7. '().'' → logprob: -11.376924514770508
    8. '())' → logprob: -11.626924514770508
    9. '()\' → logprob: -12.001924514770508
    10. '()))' → logprob: -12.126924514770508

Token 66: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00023083435371518135
    2. '\n' → logprob: -8.37523078918457
    3. '
' → logprob: -15.12523078918457
    4. ')' → logprob: -17.12523078918457
    5. ')\' → logprob: -17.50023078918457
    6. 'r' → logprob: -18.37523078918457
    7. 't' → logprob: -18.87523078918457
    8. '0' → logprob: -19.50023078918457
    9. ''\' → logprob: -19.50023078918457
    10. '\' → logprob: -19.75023078918457

Token 67: '').' (ID: 3426)
  Prédit: ').'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.3808046281337738
    2. '').' → logprob: -1.3808046579360962
    3. ')' → logprob: -2.7558045387268066
    4. '()).' → logprob: -7.630804538726807
    5. '')' → logprob: -7.880804538726807
    6. '()' → logprob: -8.130805015563965
    7. '')))' → logprob: -8.880805015563965
    8. ')').' → logprob: -8.880805015563965
    9. ')))' → logprob: -9.130805015563965
    10. '").' → logprob: -9.505805015563965

Token 68: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -3.650518920039758e-06
    2. 'rstrip' → logprob: -13.000003814697266
    3. 'strip' → logprob: -14.000003814697266
    4. ' split' → logprob: -15.375003814697266
    5. 'spl' → logprob: -16.125003814697266
    6. '(split' → logprob: -16.250003814697266
    7. 's' → logprob: -16.875003814697266
    8. '.split' → logprob: -19.375003814697266
    9. '```' → logprob: -19.375003814697266
    10. '   ' → logprob: -19.625003814697266

Token 69: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.18871359527111053
    2. '('' → logprob: -2.438713550567627
    3. '()' → logprob: -2.563713550567627
    4. '())' → logprob: -5.188713550567627
    5. '(' → logprob: -6.313713550567627
    6. '()));' → logprob: -9.313714027404785
    7. '())))' → logprob: -9.438714027404785
    8. '()))
' → logprob: -10.188714027404785
    9. '(','' → logprob: -10.313714027404785
    10. '()),' → logprob: -11.688714027404785

Token 70: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.011180922389030457
    2. '
' → logprob: -4.636180877685547
    3. '

' → logprob: -6.761180877685547
    4. '```' → logprob: -8.886180877685547
    5. '<|end|>' → logprob: -9.761180877685547
    6. ' def' → logprob: -10.136180877685547
    7. '<|end|>' → logprob: -11.886180877685547
    8. '``' → logprob: -12.511180877685547
    9. '
' → logprob: -12.511180877685547
    10. ')' → logprob: -12.636180877685547

Token 71: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.11314651370048523
    2. 'read' → logprob: -2.2381465435028076
    3. ' parse' → logprob: -8.488146781921387
    4. 'parse' → logprob: -9.863146781921387
    5. ' def' → logprob: -10.863146781921387
    6. '_read' → logprob: -10.988146781921387
    7. 'def' → logprob: -11.363146781921387
    8. ' ' → logprob: -12.613146781921387
    9. ' write' → logprob: -12.988146781921387
    10. '	read' → logprob: -13.113146781921387

Token 72: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -2.165027217415627e-05
    2. '_k' → logprob: -11.625021934509277
    3. '```' → logprob: -12.625021934509277
    4. '_ls' → logprob: -13.375021934509277
    5. '_m' → logprob: -13.750021934509277
    6. '_s' → logprob: -14.000021934509277
    7. '__' → logprob: -14.000021934509277
    8. 'ks' → logprob: -14.000021934509277
    9. '_ps' → logprob: -14.250021934509277
    10. '_p' → logprob: -14.875021934509277

Token 73: 'ks' (ID: 2484)
  Prédit: 'ks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ks' → logprob: -3.225939872208983e-05
    2. 'k' → logprob: -10.375032424926758
    3. '_' → logprob: -14.125032424926758
    4. ' ks' → logprob: -16.000032424926758
    5. '.ks' → logprob: -16.625032424926758
    6. 'm' → logprob: -16.750032424926758
    7. '_k' → logprob: -17.000032424926758
    8. 'kst' → logprob: -17.875032424926758
    9. 'kms' → logprob: -18.125032424926758
    10. 'ms' → logprob: -18.250032424926758

Token 74: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.00976990070194006
    2. '(' → logprob: -4.634769916534424
    3. '(n' → logprob: -12.384769439697266
    4. ' (' → logprob: -12.509769439697266
    5. '(M' → logprob: -13.884769439697266
    6. '(def' → logprob: -14.009769439697266
    7. '```' → logprob: -14.134769439697266
    8. '("("' → logprob: -14.509769439697266
    9. '(s' → logprob: -15.384769439697266
    10. '(mc' → logprob: -15.384769439697266

Token 75: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.004696090007201e-05
    2. ',input' → logprob: -9.750069618225098
    3. ' ,' → logprob: -11.375069618225098
    4. '   ' → logprob: -16.500070571899414
    5. '):' → logprob: -17.125070571899414
    6. '‌,' → logprob: -17.375070571899414
    7. ',n' → logprob: -17.750070571899414
    8. ',m' → logprob: -17.875070571899414
    9. '_,' → logprob: -17.875070571899414
    10. ',index' → logprob: -18.625070571899414

Token 76: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.03804941102862358
    2. 'input' → logprob: -3.2880494594573975
    3. ' ' → logprob: -12.413049697875977
    4. '(input' → logprob: -14.038049697875977
    5. 'Input' → logprob: -14.538049697875977
    6. '<input' → logprob: -14.663049697875977
    7. '_input' → logprob: -14.663049697875977
    8. '  ' → logprob: -14.913049697875977
    9. '	input' → logprob: -14.913049697875977
    10. ',input' → logprob: -15.413049697875977

Token 77: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0002523992152418941
    2. ')' → logprob: -9.000252723693848
    3. '):
' → logprob: -9.000252723693848
    4. ' ):' → logprob: -12.750252723693848
    5. ':' → logprob: -13.250252723693848
    6. ',' → logprob: -15.125252723693848
    7. '(' → logprob: -15.875252723693848
    8. '):
' → logprob: -16.00025177001953
    9. '   ' → logprob: -16.12525177001953
    10. '(m' → logprob: -16.25025177001953

Token 78: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0012738043442368507
    2. 's' → logprob: -7.5012736320495605
    3. '[' → logprob: -8.626274108886719
    4. '    ' → logprob: -9.126274108886719
    5. '(' → logprob: -9.876274108886719
    6. '[]' → logprob: -9.876274108886719
    7. ' ' → logprob: -10.126274108886719
    8. 'ks' → logprob: -10.251274108886719
    9. '```' → logprob: -10.251274108886719
    10. '  ' → logprob: -10.751274108886719

Token 79: ' return' (ID: 622)
  Prédit: 'ks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ks' → logprob: -0.18217015266418457
    2. '   ' → logprob: -2.6821701526641846
    3. ' ks' → logprob: -2.6821701526641846
    4. 'result' → logprob: -4.3071699142456055
    5. ' return' → logprob: -5.3071699142456055
    6. 'return' (adapté à ' return') → logprob: -5.3071699142456055
    7. 'def' → logprob: -5.9321699142456055
    8. ' result' → logprob: -6.0571699142456055
    9. 'k' → logprob: -8.432169914245605
    10. 's' → logprob: -8.557169914245605

Token 80: ' [' (ID: 723)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.011755209416151047
    2. '[' → logprob: -4.761754989624023
    3. '[input' → logprob: -6.011754989624023
    4. '[int' → logprob: -7.761754989624023
    5. '[List' → logprob: -9.386754989624023
    6. '[m' → logprob: -9.761754989624023
    7. ' [' → logprob: -10.136754989624023
    8. '[array' → logprob: -11.261754989624023
    9. '[np' → logprob: -11.386754989624023
    10. '[line' → logprob: -11.386754989624023

Token 81: 'parse' (ID: 4841)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0003009041247423738
    2. ' list' → logprob: -8.500301361083984
    3. 'parse' → logprob: -9.375301361083984
    4. '   ' → logprob: -11.875301361083984
    5. 'map' → logprob: -12.500301361083984
    6. 'tuple' → logprob: -14.625301361083984
    7. ' ' → logprob: -14.875301361083984
    8. 'int' → logprob: -15.000301361083984
    9. '  ' → logprob: -15.375301361083984
    10. '	list' → logprob: -15.750301361083984

Token 82: '_' (ID: 62)
  Prédit: '_nm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nm' → logprob: -0.014445658773183823
    2. '_' → logprob: -4.889445781707764
    3. '_k' → logprob: -5.764445781707764
    4. '_input' → logprob: -5.889445781707764
    5. '(input' → logprob: -8.764445304870605
    6. '_n' → logprob: -9.264445304870605
    7. '_m' → logprob: -9.764445304870605
    8. '_list' → logprob: -10.014445304870605
    9. 'input' → logprob: -10.139445304870605
    10. '_nt' → logprob: -10.264445304870605

Token 83: 'ks' (ID: 2484)
  Prédit: 'nm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nm' → logprob: -0.16162779927253723
    2. '_nm' → logprob: -1.9116277694702148
    3. 'input' → logprob: -6.786627769470215
    4. 'n' → logprob: -9.286627769470215
    5. 'm' → logprob: -9.786627769470215
    6. '```' → logprob: -10.786627769470215
    7. 'int' → logprob: -11.036627769470215
    8. ' nm' → logprob: -11.036627769470215
    9. 'km' → logprob: -11.161627769470215
    10. '_n' → logprob: -11.286627769470215

Token 84: '_line' (ID: 14418)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0011676029535010457
    2. ' (' → logprob: -6.8761677742004395
    3. '(' → logprob: -9.126167297363281
    4. '(m' → logprob: -11.126167297363281
    5. '(i' → logprob: -11.876167297363281
    6. '(in' → logprob: -13.501167297363281
    7. '((' → logprob: -14.126167297363281
    8. '(s' → logprob: -14.376167297363281
    9. '(line' → logprob: -14.626167297363281
    10. '](' → logprob: -15.001167297363281

Token 85: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.000508591765537858
    2. ' (' → logprob: -7.625508785247803
    3. '(' → logprob: -11.000508308410645
    4. '(i' → logprob: -13.000508308410645
    5. '(in' → logprob: -13.875508308410645
    6. '(s' → logprob: -15.250508308410645
    7. ',input' → logprob: -16.25050926208496
    8. '((' → logprob: -16.62550926208496
    9. '](' → logprob: -16.87550926208496
    10. '=input' → logprob: -17.12550926208496

Token 86: ')' (ID: 8)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.006580011919140816
    2. ')' → logprob: -5.381579875946045
    3. '()' → logprob: -6.256579875946045
    4. ' ())' → logprob: -11.381580352783203
    5. '()]' → logprob: -11.506580352783203
    6. '())
' → logprob: -12.131580352783203
    7. ' ' → logprob: -12.381580352783203
    8. ' )' → logprob: -12.506580352783203
    9. '()
' → logprob: -13.131580352783203
    10. '(' → logprob: -14.381580352783203

Token 87: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0017603866290301085
    2. '(' → logprob: -6.376760482788086
    3. '(i' → logprob: -10.626760482788086
    4. '(input' → logprob: -11.501760482788086
    5. 'for' → logprob: -11.751760482788086
    6. ' ()' → logprob: -12.126760482788086
    7. ' for' → logprob: -12.501760482788086
    8. '()]' → logprob: -13.126760482788086
    9. '(n' → logprob: -14.001760482788086
    10. '()
' → logprob: -14.251760482788086

Token 88: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.060118723660707474
    2. '_' → logprob: -3.5601186752319336
    3. ' ' → logprob: -3.5601186752319336
    4. ' range' → logprob: -6.685118675231934
    5. ' i' → logprob: -9.185118675231934
    6. 'range' → logprob: -9.810118675231934
    7. ' ' → logprob: -10.435118675231934
    8. '_range' → logprob: -10.685118675231934
    9. '(' → logprob: -12.935118675231934
    10. ' ‌' → logprob: -12.935118675231934

Token 89: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1604219377040863
    2. 'in' → logprob: -1.9104219675064087
    3. 'range' → logprob: -9.035422325134277
    4. ' ' → logprob: -10.535422325134277
    5. 'i' → logprob: -10.910422325134277
    6. '	in' → logprob: -11.785422325134277
    7. 'm' → logprob: -11.910422325134277
    8. '  ' → logprob: -12.785422325134277
    9. ' _' → logprob: -12.910422325134277
    10. '```' → logprob: -13.660422325134277

Token 90: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.06197597458958626
    2. ' range' → logprob: -2.8119759559631348
    3. '	range' → logprob: -12.436976432800293
    4. ' ' → logprob: -13.561976432800293
    5. '(range' → logprob: -13.811976432800293
    6. 'rang' → logprob: -14.186976432800293
    7. 'ran' → logprob: -14.936976432800293
    8. '  ' → logprob: -15.186976432800293
    9. 'm' → logprob: -15.436976432800293
    10. ' ran' → logprob: -15.686976432800293

Token 91: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.0019357812125235796
    2. '(' → logprob: -6.251935958862305
    3. ' (' → logprob: -11.876935958862305
    4. '(
' → logprob: -16.626935958862305
    5. '(M' → logprob: -17.626935958862305
    6. '(s' → logprob: -18.001935958862305
    7. '(n' → logprob: -18.251935958862305
    8. '((' → logprob: -18.751935958862305
    9. '(mm' → logprob: -18.751935958862305
    10. '(

' → logprob: -19.251935958862305

Token 92: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.004362352192401886
    2. ']' → logprob: -5.6293625831604
    3. ')' → logprob: -7.2543625831604
    4. ' )' → logprob: -10.379362106323242
    5. '()]' → logprob: -11.254362106323242
    6. ' ]' → logprob: -11.879362106323242
    7. ')]
' → logprob: -13.879362106323242
    8. '])' → logprob: -14.504362106323242
    9. '>]' → logprob: -15.004362106323242
    10. '   ' → logprob: -15.379362106323242

Token 93: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.013234581798315048
    2. '
' → logprob: -4.763234615325928
    3. '(
' → logprob: -6.138234615325928
    4. '(' → logprob: -6.763234615325928
    5. '<|end|>' → logprob: -7.388234615325928
    6. ' def' → logprob: -8.01323413848877
    7. '(def' → logprob: -8.88823413848877
    8. '```' → logprob: -9.76323413848877
    9. '[
' → logprob: -10.51323413848877
    10. '

' → logprob: -10.76323413848877

Token 94: ' parse' (ID: 8420)
  Prédit: ' parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parse' → logprob: -0.048837944865226746
    2. 'parse' → logprob: -3.048837900161743
    3. ' def' → logprob: -9.173837661743164
    4. 'def' → logprob: -9.173837661743164
    5. ' read' → logprob: -11.173837661743164
    6. '(parse' → logprob: -11.173837661743164
    7. '_parse' → logprob: -12.048837661743164
    8. '	parse' → logprob: -13.048837661743164
    9. ' ' → logprob: -13.173837661743164
    10. '=parse' → logprob: -13.923837661743164

Token 95: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -6.704273118884885e-07
    2. '_k' → logprob: -14.750000953674316
    3. '_ls' → logprob: -16.375
    4. '__' → logprob: -17.125
    5. '_
' → logprob: -17.375
    6. '_ke' → logprob: -17.5
    7. ' _' → logprob: -17.875
    8. '_
' → logprob: -18.5
    9. 'ks' → logprob: -18.5
    10. '_

' → logprob: -18.75

Token 96: 'ks' (ID: 2484)
  Prédit: 'ks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ks' → logprob: -7.896309739408025e-07
    2. 'k' → logprob: -14.750000953674316
    3. '_' → logprob: -15.625000953674316
    4. ' ks' → logprob: -16.125
    5. '.ks' → logprob: -17.0
    6. 'ksa' → logprob: -19.5
    7. 's' → logprob: -19.75
    8. 'кс' → logprob: -19.75
    9. 'cks' → logprob: -20.125
    10. 'kses' → logprob: -20.25

Token 97: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.0005786505062133074
    2. '_' → logprob: -7.500578880310059
    3. '_l' → logprob: -11.500578880310059
    4. '_li' → logprob: -12.000578880310059
    5. '_lineno' → logprob: -12.625578880310059
    6. '_lin' → logprob: -12.875578880310059
    7. '_Line' → logprob: -13.500578880310059
    8. '_LINE' → logprob: -14.125578880310059
    9. '```' → logprob: -14.750578880310059
    10. ' _' → logprob: -15.125578880310059

Token 98: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.018210580572485924
    2. '(' → logprob: -4.018210411071777
    3. ' (' → logprob: -9.768210411071777
    4. '(in' → logprob: -13.643210411071777
    5. '(import' → logprob: -13.893210411071777
    6. '(output' → logprob: -15.268210411071777
    7. '("("' → logprob: -15.518210411071777
    8. '(
' → logprob: -15.643210411071777
    9. '(inp' → logprob: -15.893210411071777
    10. '(inputs' → logprob: -16.018211364746094

Token 99: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005337405018508434
    2. ')' → logprob: -5.380337238311768
    3. ' ):' → logprob: -8.255337715148926
    4. '():' → logprob: -8.255337715148926
    5. '):
' → logprob: -8.880337715148926
    6. '()' → logprob: -9.880337715148926
    7. '(' → logprob: -13.880337715148926
    8. '）：' → logprob: -14.130337715148926
    9. '):

' → logprob: -14.255337715148926
    10. ' )' → logprob: -14.255337715148926

Token 100: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04909006506204605
    2. '():' → logprob: -3.4240901470184326
    3. '():
' → logprob: -4.9240899085998535
    4. '()' → logprob: -4.9240899085998535
    5. 'return' → logprob: -7.7990899085998535
    6. ' return' → logprob: -8.424090385437012
    7. ':' → logprob: -10.174090385437012
    8. '()
' → logprob: -10.549090385437012
    9. 'def' → logprob: -11.174090385437012
    10. ' ' → logprob: -11.424090385437012

Token 101: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.10533160716295242
    2. '   ' → logprob: -2.3553316593170166
    3. ' return' → logprob: -6.3553314208984375
    4. 'line' → logprob: -6.3553314208984375
    5. 'k' → logprob: -7.4803314208984375
    6. 'ks' → logprob: -8.105331420898438
    7. 'def' → logprob: -8.230331420898438
    8. 'tokens' → logprob: -9.105331420898438
    9. 'lst' → logprob: -9.355331420898438
    10. 'n' → logprob: -10.230331420898438

Token 102: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.4740912914276123
    2. ' list' → logprob: -0.9740912914276123
    3. '[' → logprob: -12.599091529846191
    4. ' [' → logprob: -12.724091529846191
    5. ' ' → logprob: -12.724091529846191
    6. '	list' → logprob: -13.724091529846191
    7. '[]' → logprob: -13.849091529846191
    8. '[list' → logprob: -13.974091529846191
    9. '  ' → logprob: -14.099091529846191
    10. '   ' → logprob: -14.974091529846191

Token 103: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.002957019954919815
    2. '(' → logprob: -5.877956867218018
    3. '(int' → logprob: -8.877957344055176
    4. ' (' → logprob: -11.627957344055176
    5. '(parse' → logprob: -14.127957344055176
    6. '(list' → logprob: -14.127957344055176
    7. ',map' → logprob: -15.002957344055176
    8. '(range' → logprob: -15.252957344055176
    9. '(tuple' → logprob: -15.377957344055176
    10. '(
' → logprob: -15.502957344055176

Token 104: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00020711649267468601
    2. 'int' → logprob: -9.00020694732666
    3. '(' → logprob: -10.12520694732666
    4. '[int' → logprob: -11.12520694732666
    5. '<int' → logprob: -11.25020694732666
    6. ',int' → logprob: -11.62520694732666
    7. '(lambda' → logprob: -12.50020694732666
    8. '=int' → logprob: -13.87520694732666
    9. ']int' → logprob: -13.87520694732666
    10. ' int' → logprob: -14.50020694732666

Token 105: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.11410118639469147
    2. '(' → logprob: -3.1141011714935303
    3. ',' → logprob: -3.2391011714935303
    4. ',input' → logprob: -3.7391011714935303
    5. ')' → logprob: -8.73910140991211
    6. 'input' → logprob: -8.98910140991211
    7. ' (' → logprob: -9.23910140991211
    8. ' input' → logprob: -11.23910140991211
    9. '=input' → logprob: -11.61410140991211
    10. '),' → logprob: -11.61410140991211

Token 106: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.026316901668906212
    2. 'input' → logprob: -3.6513168811798096
    3. '(input' → logprob: -11.27631664276123
    4. ')' → logprob: -14.02631664276123
    5. ',input' → logprob: -14.02631664276123
    6. '[input' → logprob: -14.52631664276123
    7. ' ' → logprob: -14.77631664276123
    8. '	input' → logprob: -14.90131664276123
    9. '=input' → logprob: -15.27631664276123
    10. '_input' → logprob: -15.27631664276123

Token 107: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.054500666621607e-06
    2. '()' → logprob: -12.75000286102295
    3. ' ().' → logprob: -16.750003814697266
    4. '()[' → logprob: -18.750003814697266
    5. ')' → logprob: -18.750003814697266
    6. '.readline' → logprob: -19.125003814697266
    7. '().__' → logprob: -19.250003814697266
    8. '()
' → logprob: -19.250003814697266
    9. ' ' → logprob: -19.875003814697266
    10. '.' → logprob: -19.875003814697266

Token 108: 'rstrip' (ID: 180429)
  Prédit: 'rstrip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rstrip' → logprob: -0.00019305046589579433
    2. 'split' → logprob: -9.125192642211914
    3. 'strip' → logprob: -9.500192642211914
    4. '.rstrip' → logprob: -12.250192642211914
    5. 'read' → logprob: -12.875192642211914
    6. ')' → logprob: -14.375192642211914
    7. 'rs' → logprob: -14.375192642211914
    8. 'rst' → logprob: -15.875192642211914
    9. ' ' → logprob: -16.000192642211914
    10. '```' → logprob: -16.125192642211914

Token 109: '('\' (ID: 24345)
  Prédit: '('\'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('\' → logprob: -0.0009773134952411056
    2. '().' → logprob: -7.250977516174316
    3. '()' → logprob: -8.625977516174316
    4. '(' → logprob: -10.125977516174316
    5. '('' → logprob: -10.500977516174316
    6. '()\' → logprob: -11.750977516174316
    7. ''\' → logprob: -12.000977516174316
    8. '("\' → logprob: -12.875977516174316
    9. '='\' → logprob: -14.125977516174316
    10. '())' → logprob: -14.500977516174316

Token 110: 'n' (ID: 77)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5793003439903259
    2. 'n' → logprob: -0.8293003439903259
    3. ''\' → logprob: -5.829300403594971
    4. ''n' → logprob: -7.829300403594971
    5. '('\' → logprob: -11.704299926757812
    6. ''' → logprob: -13.079299926757812
    7. '
' → logprob: -13.454299926757812
    8. '\' → logprob: -13.954299926757812
    9. '\x' → logprob: -14.329299926757812
    10. '(n' → logprob: -14.454299926757812

Token 111: '').' (ID: 3426)
  Prédit: ').'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.023654093965888023
    2. '').' → logprob: -4.023653984069824
    3. '().' → logprob: -5.398653984069824
    4. ')' → logprob: -7.648653984069824
    5. ' ).' → logprob: -8.523653984069824
    6. '()).' → logprob: -8.773653984069824
    7. '   ' → logprob: -10.148653984069824
    8. '()' → logprob: -10.148653984069824
    9. '").' → logprob: -10.773653984069824
    10. ' ' → logprob: -12.148653984069824

Token 112: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00012833021173719317
    2. ' split' → logprob: -9.125128746032715
    3. 'strip' → logprob: -11.000128746032715
    4. 'rstrip' → logprob: -13.375128746032715
    5. 'spl' → logprob: -14.250128746032715
    6. ')' → logprob: -15.250128746032715
    7. '.split' → logprob: -15.875128746032715
    8. '(split' → logprob: -16.3751277923584
    9. 's' → logprob: -18.3751277923584
    10. '   ' → logprob: -18.5001277923584

Token 113: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.018206482753157616
    2. '()' → logprob: -4.393206596374512
    3. '))' → logprob: -5.893206596374512
    4. '())' → logprob: -6.018206596374512
    5. '())))' → logprob: -8.143206596374512
    6. '(' → logprob: -9.018206596374512
    7. ')))' → logprob: -10.643206596374512
    8. ')' → logprob: -11.018206596374512
    9. '()));' → logprob: -11.268206596374512
    10. '()))
' → logprob: -11.268206596374512

Token 114: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -4.739826181321405e-05
    2. '<|end|>' → logprob: -10.12504768371582
    3. ' def' → logprob: -12.75004768371582
    4. '```' → logprob: -14.12504768371582
    5. '<|end|>' → logprob: -14.12504768371582
    6. '#' → logprob: -14.62504768371582
    7. '    
' → logprob: -14.75004768371582
    8. '\' → logprob: -14.87504768371582
    9. ')' → logprob: -14.87504768371582
    10. '[' → logprob: -15.12504768371582

Token 115: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.29991817474365234
    2. 'read' → logprob: -1.5499181747436523
    3. ' main' → logprob: -3.5499181747436523
    4. ' solve' → logprob: -4.924918174743652
    5. 'main' → logprob: -6.174918174743652
    6. ' calculate' → logprob: -6.299918174743652
    7. ' check' → logprob: -6.674918174743652
    8. 'solve' → logprob: -6.924918174743652
    9. ' compute' → logprob: -7.049918174743652
    10. ' count' → logprob: -7.174918174743652

Token 116: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -2.8325677703833207e-05
    2. 'p' → logprob: -10.875028610229492
    3. '_' → logprob: -12.000028610229492
    4. '(p' → logprob: -13.750028610229492
    5. '_a' → logprob: -14.875028610229492
    6. '(' → logprob: -15.000028610229492
    7. ' p' → logprob: -15.125028610229492
    8. 'def' → logprob: -15.625028610229492
    9. '_s' → logprob: -15.875028610229492
    10. ' _' → logprob: -16.000028610229492

Token 117: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0001605115394340828
    2. '(' → logprob: -8.750160217285156
    3. ' (' → logprob: -14.500160217285156
    4. '=input' → logprob: -14.750160217285156
    5. '(output' → logprob: -15.000160217285156
    6. '(import' → logprob: -15.125160217285156
    7. ',input' → logprob: -15.500160217285156
    8. '(in' → logprob: -16.000160217285156
    9. '(inp' → logprob: -16.750160217285156
    10. '():' → logprob: -16.875160217285156

Token 118: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00030817187507636845
    2. ')' → logprob: -8.6253080368042
    3. '():' → logprob: -9.1253080368042
    4. '):
' → logprob: -11.1253080368042
    5. ' ):' → logprob: -12.3753080368042
    6. '()' → logprob: -14.6253080368042
    7. '   ' → logprob: -16.125308990478516
    8. '(' → logprob: -17.000308990478516
    9. ' ():' → logprob: -17.375308990478516
    10. ':' → logprob: -17.625308990478516

Token 119: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.5584447979927063
    2. '():
' → logprob: -1.4334447383880615
    3. '   ' → logprob: -2.1834447383880615
    4. 'return' → logprob: -3.6834447383880615
    5. 'def' → logprob: -4.058444976806641
    6. '()' → logprob: -4.058444976806641
    7. ' return' → logprob: -5.808444976806641
    8. '(input' → logprob: -5.933444976806641
    9. 'input' → logprob: -6.308444976806641
    10. ' ():' → logprob: -6.308444976806641

Token 120: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.06846250593662262
    2. ' return' → logprob: -2.943462610244751
    3. '   ' → logprob: -4.818462371826172
    4. 'def' → logprob: -5.318462371826172
    5. 'list' → logprob: -8.568462371826172
    6. 'p' → logprob: -9.193462371826172
    7. 'lambda' → logprob: -9.443462371826172
    8. 'import' → logprob: -10.568462371826172
    9. ' p' → logprob: -10.693462371826172
    10. '```' → logprob: -10.943462371826172

Token 121: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.11566709727048874
    2. 'list' → logprob: -2.2406671047210693
    3. ' []' → logprob: -7.36566686630249
    4. ' [' → logprob: -7.36566686630249
    5. ' int' → logprob: -7.86566686630249
    6. 'int' → logprob: -7.99066686630249
    7. '[' → logprob: -8.365667343139648
    8. '[]' → logprob: -8.490667343139648
    9. '[int' → logprob: -8.490667343139648
    10. ' ' → logprob: -9.990667343139648

Token 122: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.005359094589948654
    2. '(' → logprob: -5.255359172821045
    3. '(int' → logprob: -9.255358695983887
    4. '(lambda' → logprob: -11.255358695983887
    5. '(
' → logprob: -12.630358695983887
    6. '<|end|>' → logprob: -12.630358695983887
    7. '(list' → logprob: -13.380358695983887
    8. 'map' → logprob: -13.755358695983887
    9. ' (' → logprob: -13.755358695983887
    10. '_map' → logprob: -14.255358695983887

Token 123: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00011903966515092179
    2. '(' → logprob: -9.50011920928955
    3. '(lambda' → logprob: -10.25011920928955
    4. 'int' → logprob: -12.87511920928955
    5. '[int' → logprob: -13.50011920928955
    6. '<|end|>' → logprob: -13.50011920928955
    7. '<int' → logprob: -13.87511920928955
    8. ',int' → logprob: -14.25011920928955
    9. '(
' → logprob: -14.25011920928955
    10. '=int' → logprob: -14.75011920928955

Token 124: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.010858569294214249
    2. '(' → logprob: -5.260858535766602
    3. ',input' → logprob: -5.635858535766602
    4. ',' → logprob: -6.260858535766602
    5. ' (' → logprob: -9.385858535766602
    6. ')' → logprob: -10.135858535766602
    7. ' input' → logprob: -13.260858535766602
    8. 'input' → logprob: -14.010858535766602
    9. '=input' → logprob: -14.010858535766602
    10. '(inputs' → logprob: -14.385858535766602

Token 125: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.026824891567230225
    2. 'input' → logprob: -3.651824951171875
    3. '(input' → logprob: -8.276824951171875
    4. ')' → logprob: -8.776824951171875
    5. '<|end|>' → logprob: -10.276824951171875
    6. ' ' → logprob: -10.651824951171875
    7. ',input' → logprob: -11.151824951171875
    8. '_input' → logprob: -11.276824951171875
    9. ' (' → logprob: -12.276824951171875
    10. ' )' → logprob: -12.401824951171875

Token 126: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0004969134461134672
    2. '()' → logprob: -7.625496864318848
    3. '()[' → logprob: -12.750496864318848
    4. ' ().' → logprob: -13.250496864318848
    5. '()
' → logprob: -14.125496864318848
    6. '()))' → logprob: -14.375496864318848
    7. '())' → logprob: -14.500496864318848
    8. '(' → logprob: -14.625496864318848
    9. '(()' → logprob: -14.750496864318848
    10. '().__' → logprob: -14.750496864318848

Token 127: 'rstrip' (ID: 180429)
  Prédit: 'rstrip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rstrip' → logprob: -0.13416343927383423
    2. 'read' → logprob: -2.1341633796691895
    3. 'split' → logprob: -5.2591633796691895
    4. 'strip' → logprob: -6.5091633796691895
    5. '.readline' → logprob: -8.884163856506348
    6. 'r' → logprob: -9.509163856506348
    7. '.rstrip' → logprob: -9.634163856506348
    8. 'input' → logprob: -9.759163856506348
    9. ')' → logprob: -9.884163856506348
    10. 'sys' → logprob: -10.134163856506348

Token 128: '('\' (ID: 24345)
  Prédit: '('\'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('\' → logprob: -0.00021331508469302207
    2. '(' → logprob: -9.125213623046875
    3. '('' → logprob: -9.500213623046875
    4. ''\' → logprob: -11.125213623046875
    5. '(
' → logprob: -12.250213623046875
    6. '("\' → logprob: -13.000213623046875
    7. '('.' → logprob: -13.125213623046875
    8. '()' → logprob: -13.625213623046875
    9. '='\' → logprob: -14.000213623046875
    10. ' ('' → logprob: -14.625213623046875

Token 129: 'n' (ID: 77)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.11090435087680817
    2. ''\' → logprob: -2.3609044551849365
    3. ''n' → logprob: -5.110904216766357
    4. 'n' → logprob: -5.485904216766357
    5. '('\' → logprob: -7.735904216766357
    6. ''' → logprob: -11.860904693603516
    7. '-n' → logprob: -12.485904693603516
    8. '\' → logprob: -12.985904693603516
    9. '\u' → logprob: -13.110904693603516
    10. '(n' → logprob: -13.235904693603516

Token 130: '').' (ID: 3426)
  Prédit: '').'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '').' → logprob: -0.030761532485485077
    2. ').' → logprob: -4.28076171875
    3. '')' → logprob: -5.03076171875
    4. ''))' → logprob: -5.78076171875
    5. ')' → logprob: -6.40576171875
    6. '().' → logprob: -6.40576171875
    7. '')))' → logprob: -6.53076171875
    8. ''.' → logprob: -6.78076171875
    9. ''' → logprob: -8.78076171875
    10. '('\' → logprob: -8.90576171875

Token 131: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -9.13388703338569e-06
    2. ' split' → logprob: -12.000009536743164
    3. ')' → logprob: -13.500009536743164
    4. '.split' → logprob: -14.000009536743164
    5. 'rstrip' → logprob: -15.500009536743164
    6. 'strip' → logprob: -15.875009536743164
    7. '(split' → logprob: -16.250009536743164
    8. '))' → logprob: -16.625009536743164
    9. 'decode' → logprob: -16.750009536743164
    10. ').' → logprob: -17.375009536743164

Token 132: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.16952084004878998
    2. '))' → logprob: -1.9195208549499512
    3. '()' → logprob: -4.794520854949951
    4. '())' → logprob: -7.169520854949951
    5. ')' → logprob: -8.669520378112793
    6. '(' → logprob: -10.794520378112793
    7. '()))
' → logprob: -11.544520378112793
    8. '()));' → logprob: -12.544520378112793
    9. '(),' → logprob: -14.169520378112793
    10. ' ))' → logprob: -14.794520378112793

Token 133: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 134: ' generate' (ID: 10419)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.014781296253204346
    2. ' solve' → logprob: -4.889781475067139
    3. 'main' → logprob: -5.014781475067139
    4. 'solve' → logprob: -8.26478099822998
    5. ' calculate' → logprob: -9.26478099822998
    6. ' process' → logprob: -9.63978099822998
    7. ' check' → logprob: -10.26478099822998
    8. ' solution' → logprob: -11.13978099822998
    9. ' compute' → logprob: -11.76478099822998
    10. '_main' → logprob: -12.13978099822998

Token 135: '_switch' (ID: 64715)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.252715826034546
    2. '_p' → logprob: -1.877715826034546
    3. '_code' → logprob: -2.252715826034546
    4. '_com' → logprob: -2.377715826034546
    5. '_array' → logprob: -3.127715826034546
    6. '_output' → logprob: -4.127716064453125
    7. '_config' → logprob: -4.377716064453125
    8. '_codes' → logprob: -4.502716064453125
    9. '_all' → logprob: -4.502716064453125
    10. '_per' → logprob: -4.627716064453125

Token 136: '_states' (ID: 53795)
  Prédit: '_states'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_states' → logprob: -0.661467432975769
    2. '_config' → logprob: -1.036467432975769
    3. '_com' → logprob: -3.2864675521850586
    4. '_state' → logprob: -3.6614675521850586
    5. '_configuration' → logprob: -3.6614675521850586
    6. 'es' → logprob: -4.411467552185059
    7. '_configs' → logprob: -4.911467552185059
    8. '_settings' → logprob: -5.411467552185059
    9. '_comb' → logprob: -6.036467552185059
    10. '_' → logprob: -6.411467552185059

Token 137: '(n' (ID: 2406)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.18854723870754242
    2. ' ():' → logprob: -2.063547134399414
    3. '(n' → logprob: -3.313547134399414
    4. '(' → logprob: -5.313547134399414
    5. ' (' → logprob: -6.313547134399414
    6. '(m' → logprob: -6.938547134399414
    7. '(p' → logprob: -8.063547134399414
    8. '(size' → logprob: -8.938547134399414
    9. ' ()' → logprob: -9.313547134399414
    10. '():
' → logprob: -9.688547134399414

Token 138: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005731586366891861
    2. ',' → logprob: -5.255731582641602
    3. ' ):' → logprob: -8.255731582641602
    4. ')' → logprob: -9.255731582641602
    5. '):
' → logprob: -9.880731582641602
    6. ',n' → logprob: -10.755731582641602
    7. ':' → logprob: -11.380731582641602
    8. '():' → logprob: -11.380731582641602
    9. '_' → logprob: -11.505731582641602
    10. '=' → logprob: -11.880731582641602

Token 139: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013769344426691532
    2. ' return' → logprob: -4.388769149780273
    3. ' states' → logprob: -7.263769149780273
    4. 'return' → logprob: -7.888769149780273
    5. 'states' → logprob: -9.138769149780273
    6. ' for' → logprob: -9.888769149780273
    7. ' from' → logprob: -12.138769149780273
    8. 'import' → logprob: -12.263769149780273
    9. '```' → logprob: -12.638769149780273
    10. 'for' → logprob: -12.888769149780273

Token 140: ' import' (ID: 1588)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5903754234313965
    2. 'return' → logprob: -0.8403754234313965
    3. ' return' → logprob: -5.5903754234313965
    4. 'states' → logprob: -5.5903754234313965
    5. ' for' → logprob: -5.9653754234313965
    6. 'from' → logprob: -6.4653754234313965
    7. 'result' → logprob: -6.8403754234313965
    8. 'yield' → logprob: -7.2153754234313965
    9. '[' → logprob: -7.4653754234313965
    10. '[(' → logprob: -9.090375900268555

Token 141: ' itertools' (ID: 103178)
  Prédit: ' itertools'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.0004195906512904912
    2. 'it' → logprob: -7.875419616699219
    3. ' ' → logprob: -10.375419616699219
    4. ' ' → logprob: -13.000419616699219
    5. '[' → logprob: -13.125419616699219
    6. ' math' → logprob: -13.500419616699219
    7. '   ' → logprob: -14.000419616699219
    8. '  ' → logprob: -14.625419616699219
    9. '```' → logprob: -14.750419616699219
    10. ' copy' → logprob: -15.500419616699219

Token 142: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.044918227940797806
    2. '(' → logprob: -3.2949182987213135
    3. 'for' → logprob: -5.669918060302734
    4. ' for' → logprob: -6.294918060302734
    5. 'return' → logprob: -7.419918060302734
    6. ' return' → logprob: -8.294918060302734
    7. '    
' → logprob: -8.544918060302734
    8. '
' → logprob: -9.169918060302734
    9. '    ' → logprob: -9.794918060302734
    10. '_' → logprob: -10.044918060302734

Token 143: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02888098545372486
    2. '
' → logprob: -4.153881072998047
    3. ' return' → logprob: -5.028881072998047
    4. ' for' → logprob: -5.653881072998047
    5. 'return' → logprob: -6.778881072998047
    6. '    
' → logprob: -7.153881072998047
    7. 'for' → logprob: -7.778881072998047
    8. ' 
' → logprob: -8.778881072998047
    9. ' states' → logprob: -9.778881072998047
    10. '  
' → logprob: -10.278881072998047

Token 144: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.8115152716636658
    2. ' return' → logprob: -1.0615153312683105
    3. '   ' → logprob: -1.6865153312683105
    4. 'for' → logprob: -4.1865153312683105
    5. ' for' → logprob: -4.8115153312683105
    6. 'states' → logprob: -7.0615153312683105
    7. ' states' → logprob: -8.061514854431152
    8. ' ' → logprob: -9.811514854431152
    9. '  ' → logprob: -10.686514854431152
    10. '
' → logprob: -11.186514854431152

Token 145: ' itertools' (ID: 103178)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.37601444125175476
    2. ' itertools' → logprob: -1.3760144710540771
    3. 'list' → logprob: -2.876014471054077
    4. '[' → logprob: -6.001014232635498
    5. 'it' → logprob: -6.876014232635498
    6. ' [' → logprob: -7.251014232635498
    7. '[it' → logprob: -9.376014709472656
    8. '[list' → logprob: -9.751014709472656
    9. '   ' → logprob: -11.501014709472656
    10. '[i' → logprob: -11.501014709472656

Token 146: '.product' (ID: 21166)
  Prédit: '.product'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.product' → logprob: -0.015167883597314358
    2. '.com' → logprob: -4.890167713165283
    3. '.per' → logprob: -5.890167713165283
    4. '.c' → logprob: -6.515167713165283
    5. '.' → logprob: -6.890167713165283
    6. ' .' → logprob: -6.890167713165283
    7. '.chain' → logprob: -7.015167713165283
    8. '.groupby' → logprob: -9.515168190002441
    9. '.products' → logprob: -9.640168190002441
    10. '.prod' → logprob: -9.640168190002441

Token 147: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.0010131607996299863
    2. '(range' → logprob: -7.126013278961182
    3. '(['' → logprob: -8.876012802124023
    4. '(' → logprob: -10.001012802124023
    5. '('' → logprob: -11.376012802124023
    6. '((' → logprob: -11.626012802124023
    7. '[' → logprob: -12.751012802124023
    8. ' ([' → logprob: -16.251012802124023
    9. '(["' → logprob: -16.501012802124023
    10. '({' → logprob: -16.626012802124023

Token 148: 'True' (ID: 4710)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10276439040899277
    2. 'False' → logprob: -2.352764368057251
    3. 'True' → logprob: -5.97776460647583
    4. ' False' → logprob: -10.977764129638672
    5. ' ' → logprob: -13.602764129638672
    6. ' True' → logprob: -14.102764129638672
    7. '[' → logprob: -14.852764129638672
    8. '(False' → logprob: -14.977764129638672
    9. '   ' → logprob: -15.352764129638672
    10. '(' → logprob: -17.227764129638672

Token 149: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.11996734328568e-05
    2. 'False' → logprob: -10.750041007995605
    3. ' ,' → logprob: -10.875041007995605
    4. ',
' → logprob: -14.625041007995605
    5. '(False' → logprob: -16.125041961669922
    6. ' False' → logprob: -16.125041961669922
    7. ',false' → logprob: -17.250041961669922
    8. '‌,' → logprob: -17.500041961669922
    9. ',

' → logprob: -17.750041961669922
    10. ',F' → logprob: -18.500041961669922

Token 150: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.01815076172351837
    2. ' False' → logprob: -4.018150806427002
    3. '(False' → logprob: -14.143150329589844
    4. '=False' → logprob: -16.393150329589844
    5. '   ' → logprob: -18.518150329589844
    6. '.False' → logprob: -18.518150329589844
    7. ' ' → logprob: -19.018150329589844
    8. 'True' → logprob: -19.393150329589844
    9. ']' → logprob: -20.143150329589844
    10. ' ' → logprob: -20.893150329589844

Token 151: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -3.750436007976532e-05
    2. ' ],' → logprob: -10.50003719329834
    3. ']' → logprob: -11.62503719329834
    4. ',' → logprob: -15.25003719329834
    5. ''],' → logprob: -15.50003719329834
    6. '   ' → logprob: -15.87503719329834
    7. '},' → logprob: -16.125038146972656
    8. ' ' → logprob: -16.375038146972656
    9. '),' → logprob: -16.625038146972656
    10. '],
' → logprob: -16.875038146972656

Token 152: ' repeat' (ID: 22962)
  Prédit: 'repeat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'repeat' → logprob: -0.20141518115997314
    2. ' repeat' → logprob: -1.7014151811599731
    3. ' ' → logprob: -13.701415061950684
    4. '   ' → logprob: -15.076415061950684
    5. '  ' → logprob: -16.701416015625
    6. 'rep' → logprob: -16.826416015625
    7. '_repeat' → logprob: -16.951416015625
    8. 'r' → logprob: -17.076416015625
    9. '.repeat' → logprob: -17.076416015625
    10. '[' → logprob: -17.326416015625

Token 153: '=n' (ID: 47985)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.00205557351000607
    2. 'n' → logprob: -6.502055644989014
    3. ' ' → logprob: -8.127055168151855
    4. '=n' → logprob: -8.877055168151855
    5. '(n' → logprob: -9.252055168151855
    6. '	n' → logprob: -11.502055168151855
    7. ')n' → logprob: -12.377055168151855
    8. ' (' → logprob: -12.502055168151855
    9. '_n' → logprob: -13.502055168151855
    10. '=' → logprob: -14.002055168151855

Token 154: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1472419600977446e-06
    2. ')
' → logprob: -14.125000953674316
    3. ' )' → logprob: -15.250000953674316
    4. '))' → logprob: -17.625001907348633
    5. ')

' → logprob: -18.500001907348633
    6. '   ' → logprob: -18.625001907348633
    7. ')#' → logprob: -18.750001907348633
    8. ')`' → logprob: -18.750001907348633
    9. ')return' → logprob: -19.375001907348633
    10. '),' → logprob: -19.500001907348633

Token 155: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07923708111047745
    2. '<|end|>' → logprob: -2.7042369842529297
    3. ')' → logprob: -5.45423698425293
    4. '<|end|>' → logprob: -5.70423698425293
    5. '
' → logprob: -7.57923698425293
    6. ':' → logprob: -8.07923698425293
    7. ' def' → logprob: -8.45423698425293
    8. '(' → logprob: -8.82923698425293
    9. ':def' → logprob: -9.57923698425293
    10. '[' → logprob: -9.95423698425293

Token 156: ' evaluate' (ID: 21646)
  Prédit: ' check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' check' → logprob: -1.0472431182861328
    2. ' count' → logprob: -1.0472431182861328
    3. 'count' → logprob: -2.172243118286133
    4. 'check' → logprob: -2.797243118286133
    5. ' is' → logprob: -3.297243118286133
    6. ' main' → logprob: -3.922243118286133
    7. ' evaluate' → logprob: -4.172243118286133
    8. 'switch' → logprob: -4.922243118286133
    9. ' switch' → logprob: -5.297243118286133
    10. 'is' → logprob: -5.422243118286133

Token 157: '_switch' (ID: 64715)
  Prédit: '_switch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_switch' → logprob: -0.050726518034935
    2. '(' → logprob: -3.6757264137268066
    3. '_states' → logprob: -4.175726413726807
    4. '(s' → logprob: -6.175726413726807
    5. '(p' → logprob: -6.300726413726807
    6. '_p' → logprob: -7.175726413726807
    7. '_s' → logprob: -7.175726413726807
    8. '_state' → logprob: -7.175726413726807
    9. '(states' → logprob: -7.300726413726807
    10. 'switch' → logprob: -7.300726413726807

Token 158: '_state' (ID: 9479)
  Prédit: '_states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_states' → logprob: -0.0002692032721824944
    2. '_state' → logprob: -8.625268936157227
    3. 's' → logprob: -10.250268936157227
    4. 'es' → logprob: -11.000268936157227
    5. '_' → logprob: -11.250268936157227
    6. 'states' → logprob: -11.250268936157227
    7. '(' → logprob: -12.500268936157227
    8. '(states' → logprob: -13.250268936157227
    9. '_s' → logprob: -13.500268936157227
    10. 'state' → logprob: -13.875268936157227

Token 159: '(v' (ID: 6932)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.622416615486145
    2. '(s' → logprob: -1.372416615486145
    3. '(n' → logprob: -1.872416615486145
    4. '(state' → logprob: -3.1224164962768555
    5. '(states' → logprob: -4.4974164962768555
    6. ' (' → logprob: -7.6224164962768555
    7. '(def' → logprob: -8.247416496276855
    8. '(State' → logprob: -10.747416496276855
    9. '(ss' → logprob: -11.122416496276855
    10. '_switch' → logprob: -11.497416496276855

Token 160: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4764724671840668
    2. 'al' → logprob: -1.4764724969863892
    3. 's' → logprob: -2.6014723777770996
    4. 'alue' → logprob: -3.9764723777770996
    5. 'ector' → logprob: -4.1014723777771
    6. 'switch' → logprob: -4.8514723777771
    7. 'ectors' → logprob: -4.9764723777771
    8. 'alid' → logprob: -5.4764723777771
    9. 'n' → logprob: -5.8514723777771
    10. 'state' → logprob: -5.9764723777771

Token 161: ' ks' (ID: 81387)
  Prédit: ' ks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ks' → logprob: -0.5721654295921326
    2. ' p' → logprob: -2.0721654891967773
    3. 'ks' → logprob: -2.1971654891967773
    4. ' k' → logprob: -2.9471654891967773
    5. 'k' → logprob: -3.3221654891967773
    6. 'p' → logprob: -3.8221654891967773
    7. ' switches' → logprob: -3.9471654891967773
    8. ' m' → logprob: -4.072165489196777
    9. ' state' → logprob: -4.322165489196777
    10. ' s' → logprob: -4.697165489196777

Token 162: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008139933459460735
    2. '):' → logprob: -4.8831400871276855
    3. ',n' → logprob: -8.758139610290527
    4. ',state' → logprob: -9.133139610290527
    5. ',v' → logprob: -9.258139610290527
    6. ',s' → logprob: -10.008139610290527
    7. '):
' → logprob: -10.758139610290527
    8. ',p' → logprob: -10.883139610290527
    9. ' ,' → logprob: -11.258139610290527
    10. ')' → logprob: -11.508139610290527

Token 163: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.1428108513355255
    2. ' p' → logprob: -2.017810821533203
    3. '   ' → logprob: -9.892810821533203
    4. ')' → logprob: -10.892810821533203
    5. 's' → logprob: -11.517810821533203
    6. ' ' → logprob: -11.642810821533203
    7. '  ' → logprob: -11.767810821533203
    8. 'v' → logprob: -11.892810821533203
    9. 'k' → logprob: -12.267810821533203
    10. 'ps' → logprob: -12.392810821533203

Token 164: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004278434440493584
    2. '):
' → logprob: -5.504278659820557
    3. ',' → logprob: -8.629278182983398
    4. '):
' → logprob: -12.004278182983398
    5. ')' → logprob: -12.129278182983398
    6. ' ):' → logprob: -12.754278182983398
    7. ':' → logprob: -12.879278182983398
    8. '):

' → logprob: -14.129278182983398
    9. ',n' → logprob: -14.129278182983398
    10. 's' → logprob: -14.504278182983398

Token 165: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9480476379394531
    2. 'result' → logprob: -1.9480476379394531
    3. ' result' → logprob: -1.9480476379394531
    4. ' for' → logprob: -2.448047637939453
    5. 'for' → logprob: -3.198047637939453
    6. ' total' → logprob: -3.198047637939453
    7. 'score' → logprob: -3.198047637939453
    8. 'total' → logprob: -3.448047637939453
    9. 'sum' → logprob: -3.448047637939453
    10. 'count' → logprob: -4.198047637939453

Token 166: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5590416193008423
    2. 'for' (adapté à ' for') → logprob: -1.5590416193008423
    3. '   ' → logprob: -2.0590415000915527
    4. 'result' → logprob: -2.8090415000915527
    5. ' result' → logprob: -3.6840415000915527
    6. 'all' → logprob: -7.184041500091553
    7. '
' → logprob: -7.184041500091553
    8. 'sum' → logprob: -7.184041500091553
    9. 'count' → logprob: -7.934041500091553
    10. 'total' → logprob: -8.184041976928711

Token 167: ' j' (ID: 441)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.06289397925138474
    2. ' i' → logprob: -2.937893867492676
    3. 'j' → logprob: -6.312893867492676
    4. 'k' → logprob: -6.437893867492676
    5. 'idx' → logprob: -6.437893867492676
    6. 's' → logprob: -7.062893867492676
    7. 'switch' → logprob: -7.687893867492676
    8. ' idx' → logprob: -7.937893867492676
    9. 'index' → logprob: -8.062893867492676
    10. '   ' → logprob: -8.687893867492676

Token 168: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4423691928386688
    2. ' in' → logprob: -1.0673692226409912
    3. 'in' → logprob: -4.567368984222412
    4. ' ,' → logprob: -5.817368984222412
    5. ' ' → logprob: -9.06736946105957
    6. 's' → logprob: -10.31736946105957
    7. 'range' → logprob: -11.44236946105957
    8. ',v' → logprob: -11.69236946105957
    9. ',s' → logprob: -12.06736946105957
    10. '0' → logprob: -12.06736946105957

Token 169: ' vv' (ID: 107521)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.18579645454883575
    2. '(k' → logprob: -2.3107964992523193
    3. 's' → logprob: -3.8107964992523193
    4. 'ks' → logprob: -4.56079626083374
    5. 'switch' → logprob: -4.68579626083374
    6. 'subset' → logprob: -5.93579626083374
    7. '(s' → logprob: -6.18579626083374
    8. '(' → logprob: -6.31079626083374
    9. 'key' → logprob: -6.31079626083374
    10. 'vals' → logprob: -6.56079626083374

Token 170: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3578219711780548
    2. 'in' → logprob: -1.2328219413757324
    3. 'v' → logprob: -5.732821941375732
    4. 'alue' → logprob: -5.857821941375732
    5. 'n' → logprob: -6.232821941375732
    6. ',' → logprob: -7.732821941375732
    7. 'al' → logprob: -8.60782241821289
    8. 'a' → logprob: -8.98282241821289
    9. 's' → logprob: -9.73282241821289
    10. 'e' → logprob: -10.67032241821289

Token 171: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.054907552897930145
    2. ' enumerate' → logprob: -2.9299075603485107
    3. 'zip' → logprob: -11.55490779876709
    4. 'v' → logprob: -12.42990779876709
    5. '
' → logprob: -12.55490779876709
    6. '```' → logprob: -13.17990779876709
    7. 'enum' → logprob: -13.80490779876709
    8. '   ' → logprob: -13.92990779876709
    9. ' ' → logprob: -14.05490779876709
    10. 'en' → logprob: -14.55490779876709

Token 172: '(' (ID: 7)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -2.4987974029500037e-05
    2. '(' → logprob: -10.750024795532227
    3. '(k' → logprob: -13.750024795532227
    4. 'v' → logprob: -13.875024795532227
    5. '(p' → logprob: -14.125024795532227
    6. '(zip' → logprob: -14.875024795532227
    7. '((' → logprob: -15.750024795532227
    8. '	v' → logprob: -16.375024795532227
    9. '([' → logprob: -17.375024795532227
    10. '[v' → logprob: -17.625024795532227

Token 173: 'ks' (ID: 2484)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.6047699318733066e-05
    2. ' v' → logprob: -11.250016212463379
    3. 'ks' → logprob: -13.000016212463379
    4. ')v' → logprob: -15.375016212463379
    5. '	v' → logprob: -15.750016212463379
    6. '   ' → logprob: -16.375015258789062
    7. '[v' → logprob: -16.625015258789062
    8. 'vs' → logprob: -16.750015258789062
    9. ')' → logprob: -16.875015258789062
    10. 'k' → logprob: -17.000015258789062

Token 174: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.023412484675645828
    2. '):
' → logprob: -3.7734124660491943
    3. ' ):' → logprob: -10.273412704467773
    4. ':' → logprob: -10.273412704467773
    5. '):
' → logprob: -10.523412704467773
    6. '):

' → logprob: -10.523412704467773
    7. '[' → logprob: -10.898412704467773
    8. ')' → logprob: -11.148412704467773
    9. '   ' → logprob: -12.398412704467773
    10. ' ):
' → logprob: -13.523412704467773

Token 175: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.260260820388794
    2. ':
' → logprob: -1.635260820388794
    3. '):' → logprob: -1.760260820388794
    4. '   ' → logprob: -1.885260820388794
    5. '):
' → logprob: -2.635260820388794
    6. '       ' → logprob: -3.635260820388794
    7. 'v' → logprob: -4.010260581970215
    8. ' if' → logprob: -4.135260581970215
    9. ')' → logprob: -4.385260581970215
    10. '(v' → logprob: -4.510260581970215

Token 176: ' cnt' (ID: 27340)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' True' → logprob: -1.4748053550720215
    2. '   ' → logprob: -1.9748053550720215
    3. ' if' → logprob: -1.9748053550720215
    4. ' sum' → logprob: -2.0998053550720215
    5. 'sum' → logprob: -2.3498053550720215
    6. 'True' → logprob: -2.5998053550720215
    7. 'if' → logprob: -2.8498053550720215
    8. 'v' → logprob: -3.5998053550720215
    9. ' range' → logprob: -3.9748053550720215
    10. ' s' → logprob: -4.5998053550720215

Token 177: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.42928919196128845
    2. '=' → logprob: -1.0542892217636108
    3. 'True' → logprob: -8.429288864135742
    4. '_true' → logprob: -8.679288864135742
    5. ' ' → logprob: -10.054288864135742
    6. '_on' → logprob: -10.304288864135742
    7. '=True' → logprob: -10.679288864135742
    8. 'inue' → logprob: -11.054288864135742
    9. '   ' → logprob: -11.054288864135742
    10. ' True' → logprob: -11.554288864135742

Token 178: ' count' (ID: 3605)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07148253917694092
    2. 'sum' → logprob: -2.8214826583862305
    3. ' sum' → logprob: -5.0714826583862305
    4. ' ' → logprob: -5.9464826583862305
    5. 'False' → logprob: -7.6964826583862305
    6. '   ' → logprob: -9.57148265838623
    7. ' False' → logprob: -10.32148265838623
    8. 'len' → logprob: -12.07148265838623
    9. 'v' → logprob: -12.19648265838623
    10. '  ' → logprob: -12.57148265838623

Token 179: '_on' (ID: 10053)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -1.1229894161224365
    2. 'lambda' → logprob: -1.3729894161224365
    3. 'True' → logprob: -1.6229894161224365
    4. '(True' → logprob: -2.1229894161224365
    5. '(v' → logprob: -3.6229894161224365
    6. 'switch' → logprob: -3.8729894161224365
    7. '(i' → logprob: -4.622989654541016
    8. 'true' → logprob: -4.872989654541016
    9. 'sum' → logprob: -4.997989654541016
    10. '(' → logprob: -4.997989654541016

Token 180: '_switch' (ID: 64715)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.05700036138296127
    2. '([' → logprob: -3.6820003986358643
    3. 's' → logprob: -4.432000160217285
    4. '(s' → logprob: -5.057000160217285
    5. 'switch' → logprob: -5.932000160217285
    6. 'sum' → logprob: -6.057000160217285
    7. '(' → logprob: -6.432000160217285
    8. '(sum' → logprob: -7.682000160217285
    9. '(True' → logprob: -7.932000160217285
    10. '_states' → logprob: -7.932000160217285

Token 181: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.4361509680747986
    2. 's' → logprob: -1.6861510276794434
    3. '(v' → logprob: -1.8111510276794434
    4. '(s' → logprob: -6.936151027679443
    5. '([' → logprob: -7.061151027679443
    6. 'ed' → logprob: -7.311151027679443
    7. 'sum' → logprob: -7.686151027679443
    8. '_states' → logprob: -7.686151027679443
    9. '(' → logprob: -8.186150550842285
    10. 'ses' → logprob: -8.936150550842285

Token 182: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.030150309205055237
    2. '(' → logprob: -3.9051504135131836
    3. '([' → logprob: -5.155150413513184
    4. '(lambda' → logprob: -6.655150413513184
    5. ' (' → logprob: -7.405150413513184
    6. '(s' → logprob: -7.530150413513184
    7. '(True' → logprob: -8.655150413513184
    8. '((' → logprob: -8.655150413513184
    9. '(len' → logprob: -9.030150413513184
    10. '(sum' → logprob: -9.155150413513184

Token 183: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.025671912357211113
    2. ' ,' → logprob: -4.52567195892334
    3. ',j' → logprob: -4.65067195892334
    4. '[j' → logprob: -6.15067195892334
    5. 'j' → logprob: -7.27567195892334
    6. '(),' → logprob: -7.52567195892334
    7. '(j' → logprob: -7.77567195892334
    8. '&' → logprob: -8.40067195892334
    9. ',v' → logprob: -8.65067195892334
    10. ')' → logprob: -8.77567195892334

Token 184: ' vv' (ID: 107521)
  Prédit: 'vv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vv' → logprob: -0.22762738168239594
    2. ' vv' → logprob: -1.6026273965835571
    3. 'jj' → logprob: -6.727627277374268
    4. 'j' → logprob: -7.477627277374268
    5. ' jj' → logprob: -8.852627754211426
    6. 'v' → logprob: -9.102627754211426
    7. 'kk' → logprob: -10.102627754211426
    8. ' j' → logprob: -10.102627754211426
    9. 'ks' → logprob: -10.727627754211426
    10. ' kk' → logprob: -11.227627754211426

Token 185: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0039139497093856335
    2. ' )' → logprob: -6.003913879394531
    3. ')
' → logprob: -7.003913879394531
    4. ',' → logprob: -8.128913879394531
    5. ')>' → logprob: -9.003913879394531
    6. ')==' → logprob: -10.128913879394531
    7. ' ,' → logprob: -11.003913879394531
    8. ' if' → logprob: -12.003913879394531
    9. ')<' → logprob: -12.003913879394531
    10. '):' → logprob: -12.253913879394531

Token 186: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03173152729868889
    2. '<|end|>' → logprob: -4.031731605529785
    3. ')' → logprob: -5.031731605529785
    4. '
' → logprob: -6.281731605529785
    5. ' if' → logprob: -6.656731605529785
    6. ',' → logprob: -7.531731605529785
    7. '<|end|>' → logprob: -7.656731605529785
    8. '        
' → logprob: -7.656731605529785
    9. '()' → logprob: -8.031731605529785
    10. ':' → logprob: -8.156731605529785

Token 187: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.4133665859699249
    2. ' if' → logprob: -1.1633665561676025
    3. '       ' → logprob: -3.6633665561676025
    4. '   ' → logprob: -7.913366794586182
    5. '
' → logprob: -10.538366317749023
    6. ' ' → logprob: -10.663366317749023
    7. '=' → logprob: -10.913366317749023
    8. '           ' → logprob: -11.163366317749023
    9. '	if' → logprob: -11.663366317749023
    10. ')' → logprob: -11.788366317749023

Token 188: ' not' (ID: 625)
  Prédit: ' cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cnt' → logprob: -0.05324064567685127
    2. 'cnt' → logprob: -3.0532405376434326
    3. '(cnt' → logprob: -5.428240776062012
    4. ' (' → logprob: -8.928240776062012
    5. '[cnt' → logprob: -10.303240776062012
    6. '	cnt' → logprob: -10.678240776062012
    7. ' ' → logprob: -10.803240776062012
    8. 'p' → logprob: -11.053240776062012
    9. ' p' → logprob: -11.303240776062012
    10. '(' → logprob: -12.678240776062012

Token 189: ' is' (ID: 382)
  Prédit: ' cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cnt' → logprob: -0.364074170589447
    2. '(cnt' → logprob: -1.4890742301940918
    3. 'cnt' → logprob: -2.739074230194092
    4. ' (' → logprob: -4.239074230194092
    5. '[cnt' → logprob: -8.614073753356934
    6. '(' → logprob: -8.989073753356934
    7. '(count' → logprob: -10.114073753356934
    8. '(c' → logprob: -10.364073753356934
    9. '(p' → logprob: -10.364073753356934
    10. '((' → logprob: -10.864073753356934

Token 190: '_correct' (ID: 77483)
  Prédit: '_on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_on' → logprob: -0.7804209589958191
    2. '_correct' → logprob: -2.030421018600464
    3. '_s' → logprob: -2.530421018600464
    4. '_p' → logprob: -2.655421018600464
    5. '_even' → logprob: -3.030421018600464
    6. '_equal' → logprob: -3.405421018600464
    7. '_valid' → logprob: -3.780421018600464
    8. '_' → logprob: -3.780421018600464
    9. '_switch' → logprob: -4.155420780181885
    10. '_ok' → logprob: -4.280420780181885

Token 191: '_par' (ID: 31329)
  Prédit: '(cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(cnt' → logprob: -0.39257970452308655
    2. '(p' → logprob: -1.3925796747207642
    3. '_state' → logprob: -3.7675797939300537
    4. '_count' → logprob: -4.142579555511475
    5. '(count' → logprob: -4.267579555511475
    6. '(' → logprob: -4.517579555511475
    7. '_switch' → logprob: -6.142579555511475
    8. '_p' → logprob: -6.892579555511475
    9. '_cnt' → logprob: -6.892579555511475
    10. '_value' → logprob: -7.142579555511475

Token 192: 'ity' (ID: 536)
  Prédit: 'ity'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ity' → logprob: -0.0784756988286972
    2. 'ty' → logprob: -3.2034757137298584
    3. 't' → logprob: -3.5784757137298584
    4. 'ent' → logprob: -5.828475475311279
    5. '(j' → logprob: -7.453475475311279
    6. 'it' → logprob: -7.828475475311279
    7. '(v' → logprob: -7.953475475311279
    8. 'r' → logprob: -8.328475952148438
    9. '(' → logprob: -8.578475952148438
    10. 'd' → logprob: -8.703475952148438

Token 193: '(cnt' (ID: 102125)
  Prédit: '(cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cnt' → logprob: -0.0026238122954964638
    2. '(' → logprob: -6.377624034881592
    3. '(count' → logprob: -8.002623558044434
    4. '(c' → logprob: -8.502623558044434
    5. ' (' → logprob: -8.877623558044434
    6. '(p' → logprob: -8.877623558044434
    7. '(cont' → logprob: -10.127623558044434
    8. '((' → logprob: -10.627623558044434
    9. '[cnt' → logprob: -11.877623558044434
    10. '(
' → logprob: -12.252623558044434

Token 194: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02235267125070095
    2. ' ,' → logprob: -3.897352695465088
    3. '(p' → logprob: -7.272352695465088
    4. ',p' → logprob: -7.647352695465088
    5. '==' → logprob: -9.02235221862793
    6. ',v' → logprob: -9.27235221862793
    7. ' ==' → logprob: -9.64735221862793
    8. '(v' → logprob: -9.64735221862793
    9. 'p' → logprob: -9.77235221862793
    10. '(' → logprob: -10.02235221862793

Token 195: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.03374781832098961
    2. ' p' → logprob: -3.408747911453247
    3. '   ' → logprob: -10.033747673034668
    4. ' ' → logprob: -11.283747673034668
    5. '       ' → logprob: -11.533747673034668
    6. '           ' → logprob: -11.533747673034668
    7. '    ' → logprob: -12.533747673034668
    8. '	p' → logprob: -12.783747673034668
    9. ')' → logprob: -12.908747673034668
    10. '<p' → logprob: -13.033747673034668

Token 196: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -5.6457742175552994e-05
    2. '[' → logprob: -10.125056266784668
    3. ',j' → logprob: -12.125056266784668
    4. ' [' → logprob: -12.875056266784668
    5. 'j' → logprob: -13.250056266784668
    6. ',' → logprob: -13.250056266784668
    7. '[
' → logprob: -13.375056266784668
    8. '
' → logprob: -13.750056266784668
    9. ')' → logprob: -14.625056266784668
    10. '   ' → logprob: -15.250056266784668

Token 197: ']):
' (ID: 51989)
  Prédit: ']):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):' → logprob: -0.012663622386753559
    2. '):' → logprob: -5.137663841247559
    3. ']):
' → logprob: -5.762663841247559
    4. '])' → logprob: -6.137663841247559
    5. ']' → logprob: -7.012663841247559
    6. ']:' → logprob: -8.512663841247559
    7. ')' → logprob: -8.762663841247559
    8. '>):' → logprob: -10.137663841247559
    9. ' ):' → logprob: -10.762663841247559
    10. ')):' → logprob: -11.137663841247559

Token 198: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11540807038545609
    2. ':' → logprob: -2.365408182144165
    3. '       ' → logprob: -4.615407943725586
    4. ':
' → logprob: -5.990407943725586
    5. ':return' → logprob: -6.365407943725586
    6. 'return' → logprob: -7.990407943725586
    7. ' return' → logprob: -8.740407943725586
    8. ' :' → logprob: -9.115407943725586
    9. '               ' → logprob: -9.240407943725586
    10. ',' → logprob: -9.365407943725586

Token 199: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.20120231807231903
    2. ' return' → logprob: -1.9512022733688354
    3. '               ' → logprob: -3.451202392578125
    4. '           ' → logprob: -4.826202392578125
    5. '       ' → logprob: -8.201202392578125
    6. '   ' → logprob: -9.576202392578125
    7. '
' → logprob: -9.701202392578125
    8. '	return' → logprob: -11.701202392578125
    9. 'break' → logprob: -12.451202392578125
    10. ':return' → logprob: -13.076202392578125

Token 200: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.011047814972698689
    2. ' False' → logprob: -4.511047840118408
    3. '(False' → logprob: -17.76104736328125
    4. 'None' → logprob: -19.76104736328125
    5. '=False' → logprob: -19.88604736328125
    6. 'True' → logprob: -20.51104736328125
    7. '.False' → logprob: -22.01104736328125
    8. ' ' → logprob: -22.13604736328125
    9. '_false' → logprob: -22.13604736328125
    10. '
' → logprob: -22.51104736328125

Token 201: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.5094070477061905e-05
    2. 'return' → logprob: -11.875015258789062
    3. ' return' → logprob: -12.625015258789062
    4. '
' → logprob: -13.250015258789062
    5. '	return' → logprob: -14.000015258789062
    6. '       ' → logprob: -14.250015258789062
    7. '<|end|>' → logprob: -14.375015258789062
    8. ',' → logprob: -15.375015258789062
    9. '    
' → logprob: -16.125015258789062
    10. '  ' → logprob: -16.250015258789062

Token 202: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00013679367839358747
    2. 'return' → logprob: -9.625136375427246
    3. ' return' → logprob: -10.000136375427246
    4. '	return' → logprob: -11.500136375427246
    5. '
' → logprob: -11.750136375427246
    6. '       ' → logprob: -12.625136375427246
    7. '    
' → logprob: -14.125136375427246
    8. '<|end|>' → logprob: -14.750136375427246
    9. '   ' → logprob: -15.125136375427246
    10. ',' → logprob: -15.125136375427246

Token 203: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.552420973777771
    2. 'return' (adapté à ' return') → logprob: -0.927420973777771
    3. ' return' → logprob: -3.5524210929870605
    4. '	return' → logprob: -9.427420616149902
    5. ' ' → logprob: -9.927420616149902
    6. 'True' → logprob: -10.927420616149902
    7. 'def' → logprob: -10.927420616149902
    8. '
' → logprob: -11.052420616149902
    9. '  ' → logprob: -12.052420616149902
    10. '{return' → logprob: -12.302420616149902

Token 204: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.2014133334159851
    2. ' True' → logprob: -1.7014133930206299
    3. '=True' → logprob: -18.701414108276367
    4. '(True' → logprob: -18.701414108276367
    5. ' ' → logprob: -19.451414108276367
    6. 'False' → logprob: -20.826414108276367
    7. ' ' → logprob: -21.326414108276367
    8. 'true' → logprob: -21.951414108276367
    9. '.True' → logprob: -21.951414108276367
    10. '_true' → logprob: -22.451414108276367

Token 205: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 206: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00019936825265176594
    2. '
' → logprob: -9.375199317932129
    3. ' def' → logprob: -9.750199317932129
    4. '_' → logprob: -10.875199317932129
    5. 'd' → logprob: -11.000199317932129
    6. 'de' → logprob: -11.625199317932129
    7. ':def' → logprob: -13.125199317932129
    8. ')' → logprob: -13.500199317932129
    9. '_def' → logprob: -13.625199317932129
    10. ' 
' → logprob: -13.875199317932129

Token 207: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.5231439471244812
    2. ' count' → logprob: -0.8981439471244812
    3. 'def' → logprob: -11.273143768310547
    4. ' def' → logprob: -12.648143768310547
    5. ' ' → logprob: -14.148143768310547
    6. 'c' → logprob: -14.398143768310547
    7. ' is' → logprob: -14.523143768310547
    8. 'is' → logprob: -14.898143768310547
    9. ' counts' → logprob: -14.898143768310547
    10. 'counts' → logprob: -15.023143768310547

Token 208: '_on' (ID: 10053)
  Prédit: '_on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_on' → logprob: -1.6240566083070007e-06
    2. '_' → logprob: -13.625001907348633
    3. '_switch' → logprob: -15.500001907348633
    4. '_ON' → logprob: -16.125001907348633
    5. '_off' → logprob: -17.750001907348633
    6. '_enabled' → logprob: -18.250001907348633
    7. ' _' → logprob: -18.375001907348633
    8. '_is' → logprob: -18.500001907348633
    9. '_all' → logprob: -18.625001907348633
    10. '_for' → logprob: -18.625001907348633

Token 209: '_switch' (ID: 64715)
  Prédit: '_switch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_switch' → logprob: -0.01417996734380722
    2. 'switch' → logprob: -4.2641801834106445
    3. 's' → logprob: -12.014180183410645
    4. '_' → logprob: -12.639180183410645
    5. '(s' → logprob: -12.639180183410645
    6. 'def' → logprob: -14.139180183410645
    7. '_SWITCH' → logprob: -14.389180183410645
    8. '_sw' → logprob: -14.514180183410645
    9. '(' → logprob: -14.889180183410645
    10. '```' → logprob: -15.014180183410645

Token 210: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.04373475909233093
    2. '_switch' → logprob: -3.1687347888946533
    3. '_states' → logprob: -8.043734550476074
    4. 'switch' → logprob: -8.043734550476074
    5. '_s' → logprob: -10.793734550476074
    6. 's' → logprob: -11.668734550476074
    7. '_indices' → logprob: -11.918734550476074
    8. '_' → logprob: -12.168734550476074
    9. '_indexes' → logprob: -12.168734550476074
    10. '_t' → logprob: -12.168734550476074

Token 211: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.00010473522706888616
    2. '(' → logprob: -9.500104904174805
    3. '(s' → logprob: -10.500104904174805
    4. '(state' → logprob: -13.625104904174805
    5. ' (' → logprob: -14.500104904174805
    6. '(value' → logprob: -15.250104904174805
    7. '(V' → logprob: -16.500104904174805
    8. '(n' → logprob: -16.500104904174805
    9. '(
' → logprob: -16.875104904174805
    10. '(a' → logprob: -17.500104904174805

Token 212: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00022558939235750586
    2. ' ,' → logprob: -8.625226020812988
    3. ',v' → logprob: -10.000226020812988
    4. ',s' → logprob: -14.875226020812988
    5. 's' → logprob: -16.625225067138672
    6. ',
' → logprob: -17.000225067138672
    7. '   ' → logprob: -17.375225067138672
    8. ',val' → logprob: -18.250225067138672
    9. '_,' → logprob: -18.375225067138672
    10. ',value' → logprob: -18.625225067138672

Token 213: ' vv' (ID: 107521)
  Prédit: ' vv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vv' → logprob: -0.3912133574485779
    2. 'vv' → logprob: -1.3912134170532227
    3. ' kk' → logprob: -3.7662134170532227
    4. ' ks' → logprob: -4.266213417053223
    5. 'kk' → logprob: -4.391213417053223
    6. 'ks' → logprob: -4.641213417053223
    7. 'k' → logprob: -5.266213417053223
    8. 'vs' → logprob: -5.391213417053223
    9. 'kv' → logprob: -6.266213417053223
    10. 'switch' → logprob: -6.766213417053223

Token 214: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010278081754222512
    2. ',v' → logprob: -7.501027584075928
    3. ' ,' → logprob: -7.876027584075928
    4. '):' → logprob: -9.376028060913086
    5. '):
' → logprob: -13.001028060913086
    6. '   ' → logprob: -14.001028060913086
    7. ',k' → logprob: -14.126028060913086
    8. ',j' → logprob: -14.251028060913086
    9. ',p' → logprob: -14.251028060913086
    10. 'v' → logprob: -14.751028060913086

Token 215: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04930296540260315
    2. 'cnt' → logprob: -3.2993030548095703
    3. ' cnt' → logprob: -4.79930305480957
    4. 'count' → logprob: -6.42430305480957
    5. 'return' → logprob: -7.54930305480957
    6. ' count' → logprob: -8.17430305480957
    7. 'sum' → logprob: -8.42430305480957
    8. ' return' → logprob: -8.54930305480957
    9. ' sum' → logprob: -10.17430305480957
    10. 'total' → logprob: -10.92430305480957

Token 216: ' count' (ID: 3605)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.47381794452667236
    2. 'sum' → logprob: -1.2238179445266724
    3. 'cnt' → logprob: -2.723817825317383
    4. 'count' (adapté à ' count') → logprob: -4.723817825317383
    5. '   ' → logprob: -5.223817825317383
    6. ' return' → logprob: -5.973817825317383
    7. ' sum' → logprob: -8.223817825317383
    8. ' cnt' → logprob: -8.348817825317383
    9. 'def' → logprob: -8.723817825317383
    10. 'total' → logprob: -9.098817825317383

Token 217: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931624412536621
    2. ' =' → logprob: -0.6931624412536621
    3. ' +=' → logprob: -11.94316291809082
    4. '_' → logprob: -12.31816291809082
    5. '+=' → logprob: -13.69316291809082
    6. '   ' → logprob: -14.31816291809082
    7. ')' → logprob: -14.44316291809082
    8. ' ' → logprob: -14.56816291809082
    9. '_=' → logprob: -14.56816291809082
    10. ',' → logprob: -14.94316291809082

Token 218: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0019806181080639362
    2. ' ' → logprob: -6.376980781555176
    3. 'sum' → logprob: -8.251980781555176
    4. ' sum' → logprob: -11.126980781555176
    5. '   ' → logprob: -12.751980781555176
    6. '  ' → logprob: -16.12697982788086
    7. '1' → logprob: -17.25197982788086
    8. 'len' → logprob: -17.87697982788086
    9. '    ' → logprob: -18.50197982788086
    10. '	sum' → logprob: -18.50197982788086

Token 219: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00024239711638074368
    2. 'sum' → logprob: -8.375242233276367
    3. ' ' → logprob: -11.375242233276367
    4. ' sum' → logprob: -15.500242233276367
    5. 'len' → logprob: -17.250242233276367
    6. '1' → logprob: -17.750242233276367
    7. '   ' → logprob: -18.000242233276367
    8. 's' → logprob: -20.000242233276367
    9. 'v' → logprob: -20.000242233276367
    10. '=' → logprob: -20.312742233276367

Token 220: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.19686266779899597
    2. '
' → logprob: -2.6968626976013184
    3. 'for' → logprob: -2.8218626976013184
    4. '   ' → logprob: -3.4468626976013184
    5. '	for' → logprob: -4.571862697601318
    6. '    
' → logprob: -5.946862697601318
    7. '<|end|>' → logprob: -6.196862697601318
    8. ' 
' → logprob: -6.446862697601318
    9. '	
' → logprob: -7.196862697601318
    10. '  
' → logprob: -7.321862697601318

Token 221: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.46342119574546814
    2. 'for' → logprob: -1.8384212255477905
    3. '   ' → logprob: -2.213421106338501
    4. '
' → logprob: -2.338421106338501
    5. '    
' → logprob: -5.46342134475708
    6. '	for' → logprob: -7.58842134475708
    7. ' 
' → logprob: -7.71342134475708
    8. '  
' → logprob: -8.213420867919922
    9. '	
' → logprob: -8.588420867919922
    10. '   
' → logprob: -8.963420867919922

Token 222: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.4829283058643341
    2. ' for' → logprob: -0.9829282760620117
    3. '   ' → logprob: -4.732928276062012
    4. '	for' → logprob: -11.482928276062012
    5. ' ' → logprob: -14.732928276062012
    6. '  ' → logprob: -15.107928276062012
    7. '    
' → logprob: -15.857928276062012
    8. '    ' → logprob: -15.982928276062012
    9. '
' → logprob: -16.482929229736328
    10. '       ' → logprob: -16.857929229736328

Token 223: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.0502079725265503
    2. 'k' → logprob: -1.5502079725265503
    3. ' idx' → logprob: -2.42520809173584
    4. 'switch' → logprob: -2.42520809173584
    5. ' i' → logprob: -2.67520809173584
    6. 'idx' → logprob: -2.67520809173584
    7. ' switch' → logprob: -2.92520809173584
    8. 'x' → logprob: -3.67520809173584
    9. ' k' → logprob: -4.17520809173584
    10. 's' → logprob: -4.17520809173584

Token 224: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12151376157999039
    2. 'in' → logprob: -2.496513843536377
    3. ',' → logprob: -3.496513843536377
    4. ' ,' → logprob: -6.996513843536377
    5. ',v' → logprob: -7.621513843536377
    6. ' ' → logprob: -8.496513366699219
    7. ',in' → logprob: -10.246513366699219
    8. '	in' → logprob: -10.246513366699219
    9. '_in' → logprob: -11.121513366699219
    10. ',value' → logprob: -11.871513366699219

Token 225: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5763264298439026
    2. 'vv' → logprob: -1.3263263702392578
    3. ' range' → logprob: -2.451326370239258
    4. ' vv' → logprob: -2.451326370239258
    5. 'v' → logprob: -8.701326370239258
    6. 'vvvv' → logprob: -11.201326370239258
    7. ' ' → logprob: -11.451326370239258
    8. '   ' → logprob: -11.826326370239258
    9. ' xrange' → logprob: -12.576326370239258
    10. '	range' → logprob: -12.701326370239258

Token 226: '(v' (ID: 6932)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.07086560130119324
    2. ' len' → logprob: -3.0708656311035156
    3. '(len' → logprob: -3.8208656311035156
    4. '   ' → logprob: -9.195865631103516
    5. '	len' → logprob: -11.320865631103516
    6. ',len' → logprob: -12.195865631103516
    7. '[len' → logprob: -13.445865631103516
    8. '=len' → logprob: -13.945865631103516
    9. '1' → logprob: -14.695865631103516
    10. '  ' → logprob: -14.820865631103516

Token 227: 'v' (ID: 85)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07031607627868652
    2. '):
' → logprob: -2.9453160762786865
    3. '   ' → logprob: -4.820316314697266
    4. 'len' → logprob: -6.320316314697266
    5. ')' → logprob: -6.570316314697266
    6. '[v' → logprob: -7.195316314697266
    7. ' ):' → logprob: -7.195316314697266
    8. ' if' → logprob: -7.945316314697266
    9. ':' → logprob: -8.445316314697266
    10. 'if' → logprob: -8.445316314697266

Token 228: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5294411182403564
    2. '):' → logprob: -0.9044411182403564
    3. '   ' → logprob: -6.029440879821777
    4. '):
' → logprob: -6.029440879821777
    5. ')' → logprob: -7.779440879821777
    6. '0' → logprob: -8.154440879821777
    7. ' ):' → logprob: -8.529440879821777
    8. ' ' → logprob: -9.404440879821777
    9. '1' → logprob: -9.404440879821777
    10. 'len' → logprob: -9.654440879821777

Token 229: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02107558585703373
    2. '1' → logprob: -3.896075487136841
    3. ' ' → logprob: -7.64607572555542
    4. '   ' → logprob: -10.146075248718262
    5. '[' → logprob: -11.646075248718262
    6. ')' → logprob: -13.146075248718262
    7. '])' → logprob: -13.521075248718262
    8. 'len' → logprob: -14.146075248718262
    9. '  ' → logprob: -14.396075248718262
    10. ')]' → logprob: -15.021075248718262

Token 230: ']):
' (ID: 51989)
  Prédit: ']):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):' → logprob: -0.4559547007083893
    2. '+' → logprob: -1.830954670906067
    3. ']' → logprob: -2.0809547901153564
    4. ' +' → logprob: -2.8309547901153564
    5. ']):
' → logprob: -4.955954551696777
    6. ']+' → logprob: -5.205954551696777
    7. '])' → logprob: -5.955954551696777
    8. '],' → logprob: -5.955954551696777
    9. ']-' → logprob: -6.330954551696777
    10. '[' → logprob: -7.080954551696777

Token 231: '       ' (ID: 309)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    ' → logprob: -1.5899754762649536
    2. '   ' → logprob: -1.5899754762649536
    3. ' ' → logprob: -1.8399754762649536
    4. '+' → logprob: -2.214975357055664
    5. ' count' → logprob: -2.464975357055664
    6. 'count' → logprob: -2.714975357055664
    7. '       ' → logprob: -2.839975357055664
    8. ' if' → logprob: -3.714975357055664
    9. ' 
' → logprob: -4.089975357055664
    10. ' ,' → logprob: -4.464975357055664

Token 232: ' idx' (ID: 14016)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.013081413693726063
    2. ' count' → logprob: -5.2630815505981445
    3. 'if' → logprob: -5.2630815505981445
    4. '       ' → logprob: -7.1380815505981445
    5. 'count' → logprob: -7.3880815505981445
    6. '   ' → logprob: -7.5130815505981445
    7. ' ' → logprob: -8.013081550598145
    8. '    ' → logprob: -8.638081550598145
    9. ' i' → logprob: -10.513081550598145
    10. '	if' → logprob: -10.513081550598145

Token 233: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1485801637172699
    2. '=' → logprob: -2.1485800743103027
    3. '+' → logprob: -4.148580074310303
    4. ' +' → logprob: -6.273580074310303
    5. ' +=' → logprob: -6.523580074310303
    6. ' ' → logprob: -7.523580074310303
    7. '+=' → logprob: -7.898580074310303
    8. ' vv' → logprob: -7.898580074310303
    9. '   ' → logprob: -8.398580551147461
    10. '[' → logprob: -8.773580551147461

Token 234: ' get' (ID: 717)
  Prédit: 'vv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vv' → logprob: -0.0097806416451931
    2. ' vv' → logprob: -4.634780406951904
    3. 'i' → logprob: -11.509780883789062
    4. '1' → logprob: -12.384780883789062
    5. '   ' → logprob: -12.509780883789062
    6. '  ' → logprob: -12.634780883789062
    7. 'vvvv' → logprob: -13.884780883789062
    8. 'v' → logprob: -14.009780883789062
    9. ' ' → logprob: -14.134780883789062
    10. 'ii' → logprob: -15.134780883789062

Token 235: '_switch' (ID: 64715)
  Prédit: ' vv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' vv' → logprob: -0.38988032937049866
    2. 'vv' → logprob: -1.1398802995681763
    3. ' i' → logprob: -6.389880180358887
    4. 'i' → logprob: -7.389880180358887
    5. ' ' → logprob: -8.889880180358887
    6. '1' → logprob: -9.264880180358887
    7. ' v' → logprob: -9.514880180358887
    8. 'v' → logprob: -9.639880180358887
    9. '[i' → logprob: -9.639880180358887
    10. '[v' → logprob: -9.764880180358887

Token 236: '_index' (ID: 7748)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -1.33026921749115
    2. '_index' → logprob: -1.45526921749115
    3. '_state' → logprob: -1.70526921749115
    4. '_idx' → logprob: -3.2052693367004395
    5. '_number' → logprob: -3.2052693367004395
    6. 's' → logprob: -3.4552693367004395
    7. ' vv' → logprob: -3.7052693367004395
    8. '_position' → logprob: -3.8302693367004395
    9. '[v' → logprob: -4.0802693367004395
    10. '   ' → logprob: -4.0802693367004395

Token 237: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.014692136086523533
    2. '(' → logprob: -4.889692306518555
    3. ' (' → logprob: -5.139692306518555
    4. '   ' → logprob: -8.014692306518555
    5. '(i' → logprob: -8.264692306518555
    6. '(
' → logprob: -8.639692306518555
    7. '[' → logprob: -9.889692306518555
    8. '  ' → logprob: -10.139692306518555
    9. ' ' → logprob: -10.389692306518555
    10. '    ' → logprob: -10.514692306518555

Token 238: 'v' (ID: 85)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3953171968460083
    2. 'v' → logprob: -2.3953170776367188
    3. '[v' → logprob: -2.7703170776367188
    4. ',v' → logprob: -3.2703170776367188
    5. '[' → logprob: -3.3953170776367188
    6. ' ,' → logprob: -3.6453170776367188
    7. '[i' → logprob: -4.020317077636719
    8. '[j' → logprob: -4.270317077636719
    9. '       ' → logprob: -4.895317077636719
    10. 'vv' → logprob: -5.270317077636719

Token 239: ',' (ID: 11)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.17530134320259094
    2. ',' → logprob: -2.8003013134002686
    3. '[' → logprob: -2.9253013134002686
    4. ',i' → logprob: -3.8003013134002686
    5. ' ,' → logprob: -4.550301551818848
    6. '   ' → logprob: -5.175301551818848
    7. ' [' → logprob: -6.050301551818848
    8. '(i' → logprob: -6.300301551818848
    9. ' i' → logprob: -7.425301551818848
    10. '1' → logprob: -7.550301551818848

Token 240: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.020615343004465103
    2. ' i' → logprob: -3.895615339279175
    3. '   ' → logprob: -10.645615577697754
    4. '1' → logprob: -11.020615577697754
    5. ' ' → logprob: -11.520615577697754
    6. '  ' → logprob: -11.895615577697754
    7. '	i' → logprob: -12.520615577697754
    8. '    ' → logprob: -12.645615577697754
    9. '       ' → logprob: -13.020615577697754
    10. '2' → logprob: -13.145615577697754

Token 241: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.31679561734199524
    2. '+' → logprob: -1.4417955875396729
    3. ' +' → logprob: -3.941795587539673
    4. ')
' → logprob: -4.566795825958252
    5. ' )' → logprob: -5.441795825958252
    6. ')+' → logprob: -7.816795825958252
    7. '   ' → logprob: -8.566795349121094
    8. ' )
' → logprob: -8.691795349121094
    9. '+)' → logprob: -10.191795349121094
    10. '1' → logprob: -10.316795349121094

Token 242: '       ' (ID: 309)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.20651043951511383
    2. ' +' → logprob: -2.331510543823242
    3. '   ' → logprob: -2.956510543823242
    4. ' ' → logprob: -5.081510543823242
    5. '<|end|>' → logprob: -5.081510543823242
    6. 'def' → logprob: -5.581510543823242
    7. '    
' → logprob: -5.831510543823242
    8. ' 
' → logprob: -5.956510543823242
    9. '    ' → logprob: -6.081510543823242
    10. '()+' → logprob: -6.456510543823242

Token 243: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.04776034504175186
    2. 'if' (adapté à ' if') → logprob: -3.422760248184204
    3. ' count' → logprob: -5.047760486602783
    4. '       ' → logprob: -5.672760486602783
    5. 'count' → logprob: -6.297760486602783
    6. ' 
' → logprob: -7.297760486602783
    7. '   ' → logprob: -7.797760486602783
    8. '
' → logprob: -7.797760486602783
    9. '        
' → logprob: -8.547760009765625
    10. '    ' → logprob: -8.547760009765625

Token 244: ' is' (ID: 382)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.043032191693782806
    2. ' v' → logprob: -3.168032169342041
    3. '   ' → logprob: -10.9180326461792
    4. 'idx' → logprob: -12.5430326461792
    5. '(v' → logprob: -13.4180326461792
    6. '  ' → logprob: -13.7930326461792
    7. 'switch' → logprob: -13.7930326461792
    8. '    ' → logprob: -14.0430326461792
    9. '	v' → logprob: -14.1680326461792
    10. '       ' → logprob: -14.1680326461792

Token 245: '_switch' (ID: 64715)
  Prédit: '_on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_on' → logprob: -0.04804692417383194
    2. '_switch' → logprob: -3.298046827316284
    3. 'on' → logprob: -4.923047065734863
    4. 'switch' → logprob: -6.673047065734863
    5. '_sw' → logprob: -8.048047065734863
    6. '_' → logprob: -8.048047065734863
    7. '_true' → logprob: -8.923047065734863
    8. 'On' → logprob: -9.798047065734863
    9. ' switched' → logprob: -9.923047065734863
    10. '_active' → logprob: -10.048047065734863

Token 246: '_on' (ID: 10053)
  Prédit: '_on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_on' → logprob: -0.0004144648555666208
    2. 'on' → logprob: -7.8754143714904785
    3. 'On' → logprob: -10.875414848327637
    4. '_' → logprob: -12.375414848327637
    5. '_ON' → logprob: -13.000414848327637
    6. '```' → logprob: -13.375414848327637
    7. '   ' → logprob: -13.500414848327637
    8. '
' → logprob: -13.875414848327637
    9. ' on' → logprob: -14.500414848327637
    10. '_index' → logprob: -14.750414848327637

Token 247: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.0007970004808157682
    2. '(' → logprob: -7.875796794891357
    3. ' (' → logprob: -8.125797271728516
    4. '(
' → logprob: -10.625797271728516
    5. '   ' → logprob: -11.000797271728516
    6. 'v' → logprob: -11.250797271728516
    7. '
' → logprob: -11.375797271728516
    8. ' v' → logprob: -12.250797271728516
    9. '(idx' → logprob: -12.250797271728516
    10. ')' → logprob: -12.375797271728516

Token 248: ',' (ID: 11)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.03008148819208145
    2. ' v' → logprob: -4.405081272125244
    3. '   ' → logprob: -5.280081272125244
    4. ',v' → logprob: -5.280081272125244
    5. ',' → logprob: -5.655081272125244
    6. '[v' → logprob: -6.780081272125244
    7. 'v' → logprob: -7.030081272125244
    8. ')' → logprob: -8.280081748962402
    9. '       ' → logprob: -8.780081748962402
    10. '	v' → logprob: -8.780081748962402

Token 249: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.0021880913991481066
    2. ' idx' → logprob: -6.127188205718994
    3. '	idx' → logprob: -14.002187728881836
    4. 'index' → logprob: -14.127187728881836
    5. '   ' → logprob: -14.627187728881836
    6. 'v' → logprob: -14.877187728881836
    7. ' ' → logprob: -16.252187728881836
    8. '
' → logprob: -16.502187728881836
    9. '_idx' → logprob: -16.627187728881836
    10. '[idx' → logprob: -16.627187728881836

Token 250: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1798829436302185
    2. '):
' → logprob: -1.8048830032348633
    3. ')' → logprob: -9.929883003234863
    4. '   ' → logprob: -10.554883003234863
    5. ' ):' → logprob: -10.679883003234863
    6. '):
' → logprob: -10.929883003234863
    7. ' ):
' → logprob: -11.679883003234863
    8. '):

' → logprob: -12.054883003234863
    9. '       ' → logprob: -12.429883003234863
    10. ':' → logprob: -14.054883003234863

Token 251: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.36937013268470764
    2. '+' → logprob: -1.7443701028823853
    3. ':
' → logprob: -2.494370222091675
    4. '1' → logprob: -3.869370222091675
    5. ':' → logprob: -4.869369983673096
    6. '          ' → logprob: -5.494369983673096
    7. '+=' → logprob: -5.619369983673096
    8. '       ' → logprob: -6.244369983673096
    9. ' +' → logprob: -6.494369983673096
    10. '               ' → logprob: -6.619369983673096

Token 252: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.20432965457439423
    2. ' count' → logprob: -1.7043296098709106
    3. '               ' → logprob: -6.204329490661621
    4. '           ' → logprob: -7.829329490661621
    5. '
' → logprob: -8.079329490661621
    6. '+' → logprob: -9.704329490661621
    7. '	count' → logprob: -10.579329490661621
    8. '       ' → logprob: -10.829329490661621
    9. '   ' → logprob: -10.954329490661621
    10. '1' → logprob: -11.079329490661621

Token 253: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.5759513974189758
    2. '+=' → logprob: -0.8259513974189758
    3. '=' → logprob: -12.07595157623291
    4. '+' → logprob: -12.95095157623291
    5. ']+=' → logprob: -12.95095157623291
    6. ' =' → logprob: -14.57595157623291
    7. 'count' → logprob: -15.45095157623291
    8. '=count' → logprob: -15.95095157623291
    9. '<|end|>' → logprob: -16.075950622558594
    10. '+="' → logprob: -16.200950622558594

Token 254: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020354038861114532
    2. ' ' → logprob: -8.500203132629395
    3. 'count' → logprob: -18.87520408630371
    4. '   ' → logprob: -19.00020408630371
    5. '
' → logprob: -19.12520408630371
    6. '```' → logprob: -20.25020408630371
    7. ' ' → logprob: -20.75020408630371
    8. 'int' → logprob: -21.00020408630371
    9. '１' → logprob: -21.25020408630371
    10. '0' → logprob: -21.31270408630371

Token 255: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. '
' → logprob: -19.25
    4. '```' → logprob: -20.75
    5. '   ' → logprob: -21.0
    6. 'int' → logprob: -21.0
    7. 'count' → logprob: -21.5
    8. '１' → logprob: -21.75
    9. 'v' → logprob: -22.25
    10. '

' → logprob: -22.375

Token 256: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05895614996552467
    2. '
' → logprob: -3.0589561462402344
    3. ' return' → logprob: -5.933956146240234
    4. '	return' → logprob: -6.058956146240234
    5. 'return' → logprob: -6.308956146240234
    6. '       ' → logprob: -6.308956146240234
    7. '<|end|>' → logprob: -7.433956146240234
    8. '    
' → logprob: -7.683956146240234
    9. '  
' → logprob: -8.308956146240234
    10. ' 
' → logprob: -9.308956146240234

Token 257: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003916564863175154
    2. ' return' → logprob: -6.3789167404174805
    3. 'return' → logprob: -6.7539167404174805
    4. '       ' → logprob: -7.3789167404174805
    5. '	return' → logprob: -8.00391674041748
    6. '
' → logprob: -9.62891674041748
    7. '    
' → logprob: -11.50391674041748
    8. 'def' → logprob: -13.37891674041748
    9. '        
' → logprob: -13.62891674041748
    10. ',' → logprob: -13.75391674041748

Token 258: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.3101925551891327
    2. ' return' → logprob: -1.935192584991455
    3. '   ' → logprob: -2.185192584991455
    4. '	return' → logprob: -4.810192584991455
    5. 'def' → logprob: -7.435192584991455
    6. '       ' → logprob: -8.060192108154297
    7. ' ' → logprob: -8.310192108154297
    8. ':return' → logprob: -8.685192108154297
    9. '
' → logprob: -8.935192108154297
    10. '\n' → logprob: -10.060192108154297

Token 259: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.0024756586644798517
    2. ' count' → logprob: -6.002475738525391
    3. '	count' → logprob: -18.12747573852539
    4. '(count' → logprob: -18.87747573852539
    5. '[count' → logprob: -19.37747573852539
    6. '_count' → logprob: -21.00247573852539
    7. '   ' → logprob: -21.12747573852539
    8. '<count' → logprob: -21.62747573852539
    9. '=count' → logprob: -22.00247573852539
    10. ' ' → logprob: -22.00247573852539

Token 260: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.09062140434980392
    2. '<|end|>' → logprob: -2.5906214714050293
    3. '
' → logprob: -5.590621471405029
    4. '[' → logprob: -6.215621471405029
    5. ' def' → logprob: -7.090621471405029
    6. '    
' → logprob: -7.215621471405029
    7. '<|end|>' → logprob: -7.340621471405029
    8. '   ' → logprob: -7.590621471405029
    9. '\' → logprob: -8.090620994567871
    10. ':' → logprob: -8.340620994567871

Token 261: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.015583331696689129
    2. ':' → logprob: -5.015583515167236
    3. ':def' → logprob: -5.640583515167236
    4. '[' → logprob: -6.140583515167236
    5. '0' → logprob: -7.140583515167236
    6. ' def' → logprob: -7.765583515167236
    7. '```' → logprob: -8.265583038330078
    8. '   ' → logprob: -8.390583038330078
    9. ':
' → logprob: -8.640583038330078
    10. '
' → logprob: -9.140583038330078

Token 262: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.003269568784162402
    2. ' get' → logprob: -5.753269672393799
    3. 'def' → logprob: -9.50326919555664
    4. 'is' → logprob: -11.00326919555664
    5. ' is' → logprob: -15.50326919555664
    6. '_get' → logprob: -16.37826919555664
    7. 'parse' → logprob: -17.00326919555664
    8. 'count' → logprob: -17.12826919555664
    9. ' ' → logprob: -17.25326919555664
    10. '   ' → logprob: -17.25326919555664

Token 263: '_switch' (ID: 64715)
  Prédit: '_switch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_switch' → logprob: -0.0005753128207288682
    2. 'switch' → logprob: -7.500575542449951
    3. '_s' → logprob: -11.500575065612793
    4. '_' → logprob: -11.625575065612793
    5. '_index' → logprob: -14.125575065612793
    6. 's' → logprob: -14.750575065612793
    7. ' switch' → logprob: -15.000575065612793
    8. 'Switch' → logprob: -15.375575065612793
    9. 'def' → logprob: -15.500575065612793
    10. ' ' → logprob: -16.00057601928711

Token 264: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -5.512236498361744e-07
    2. 'index' → logprob: -15.625000953674316
    3. '_indices' → logprob: -15.625000953674316
    4. '_indexes' → logprob: -16.875
    5. '_INDEX' → logprob: -17.125
    6. '_idx' → logprob: -17.5
    7. '_value' → logprob: -17.75
    8. 's' → logprob: -17.75
    9. '```' → logprob: -18.0
    10. 'Index' → logprob: -18.25

Token 265: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -1.5048530030981055e-06
    2. '(' → logprob: -13.625001907348633
    3. '(k' → logprob: -16.625001907348633
    4. '(s' → logprob: -17.500001907348633
    5. ' (' → logprob: -17.875001907348633
    6. '(line' → logprob: -18.500001907348633
    7. '(x' → logprob: -18.750001907348633
    8. '(vc' → logprob: -18.750001907348633
    9. '(V' → logprob: -19.000001907348633
    10. '(
' → logprob: -19.125001907348633

Token 266: 'v' (ID: 85)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.9246523976325989
    2. ',' → logprob: -1.174652338027954
    3. ',v' → logprob: -1.299652338027954
    4. 'v' → logprob: -3.924652338027954
    5. ')(' → logprob: -6.924652576446533
    6. ')' → logprob: -7.674652576446533
    7. 'vv' → logprob: -8.674652099609375
    8. '[v' → logprob: -9.174652099609375
    9. ')v' → logprob: -9.799652099609375
    10. ',
' → logprob: -10.299652099609375

Token 267: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008622847497463226
    2. ',v' → logprob: -4.758622646331787
    3. ' ,' → logprob: -12.258623123168945
    4. ',
' → logprob: -13.258623123168945
    5. '   ' → logprob: -13.508623123168945
    6. 'v' → logprob: -16.133623123168945
    7. ',index' → logprob: -16.508623123168945
    8. ',list' → logprob: -17.008623123168945
    9. ',val' → logprob: -17.133623123168945
    10. '
' → logprob: -17.133623123168945

Token 268: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.008834020234644413
    2. ' i' → logprob: -4.758833885192871
    3. '1' → logprob: -8.508833885192871
    4. '   ' → logprob: -11.508833885192871
    5. ' ' → logprob: -12.758833885192871
    6. '0' → logprob: -13.758833885192871
    7. '    ' → logprob: -13.883833885192871
    8. 'idx' → logprob: -14.008833885192871
    9. '	i' → logprob: -14.633833885192871
    10. 'index' → logprob: -14.883833885192871

Token 269: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04864436760544777
    2. '):
' → logprob: -3.0486443042755127
    3. ')' → logprob: -10.173644065856934
    4. '):
' → logprob: -11.548644065856934
    5. ' ):' → logprob: -12.548644065856934
    6. '   ' → logprob: -12.673644065856934
    7. '):

' → logprob: -13.423644065856934
    8. ' ):
' → logprob: -15.673644065856934
    9. ']:' → logprob: -15.798644065856934
    10. ')：' → logprob: -16.04864501953125

Token 270: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.47734948992729187
    2. '   ' → logprob: -0.9773495197296143
    3. ' return' → logprob: -5.727349281311035
    4. '	return' → logprob: -11.477349281311035
    5. '  ' → logprob: -14.977349281311035
    6. '    ' → logprob: -15.227349281311035
    7. '{return' → logprob: -15.602349281311035
    8. ':return' → logprob: -16.22735023498535
    9. ' ' → logprob: -16.47735023498535
    10. 'v' → logprob: -16.72735023498535

Token 271: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.11424551159143448
    2. 'vv' → logprob: -2.3642454147338867
    3. ' return' → logprob: -4.614245414733887
    4. '   ' → logprob: -5.989245414733887
    5. ' vv' → logprob: -6.489245414733887
    6. 'v' → logprob: -13.239245414733887
    7. '
' → logprob: -13.739245414733887
    8. 'vvvv' → logprob: -14.364245414733887
    9. '	return' → logprob: -14.614245414733887
    10. '    ' → logprob: -14.614245414733887

Token 272: ' vv' (ID: 107521)
  Prédit: ' vv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vv' → logprob: -0.3868715465068817
    2. 'vv' → logprob: -1.136871576309204
    3. 'vvvv' → logprob: -15.386871337890625
    4. '   ' → logprob: -15.761871337890625
    5. ' ' → logprob: -16.136871337890625
    6. 'v' → logprob: -17.761871337890625
    7. 'int' → logprob: -17.761871337890625
    8. '  ' → logprob: -17.761871337890625
    9. '	v' → logprob: -18.136871337890625
    10. ' v' → logprob: -18.386871337890625

Token 273: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.16031481325626373
    2. '[' → logprob: -1.9103147983551025
    3. '1' → logprob: -10.035314559936523
    4. ' [' → logprob: -10.160314559936523
    5. '[
' → logprob: -12.785314559936523
    6. 'i' → logprob: -13.535314559936523
    7. '[I' → logprob: -14.035314559936523
    8. '\[' → logprob: -14.035314559936523
    9. '```' → logprob: -14.160314559936523
    10. '   ' → logprob: -15.035314559936523

Token 274: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.014196410775184631
    2. ' +' → logprob: -4.264196395874023
    3. ']' → logprob: -10.389196395874023
    4. '+]' → logprob: -13.889196395874023
    5. ']+' → logprob: -14.389196395874023
    6. '1' → logprob: -14.764196395874023
    7. '+
' → logprob: -15.889196395874023
    8. '＋' → logprob: -16.389196395874023
    9. ' plus' → logprob: -16.639196395874023
    10. ' +
' → logprob: -17.889196395874023

Token 275: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.0391463193809614e-05
    2. ' ' → logprob: -9.750060081481934
    3. '+' → logprob: -14.625060081481934
    4. '<|end|>' → logprob: -14.750060081481934
    5. '   ' → logprob: -15.250060081481934
    6. '0' → logprob: -15.562560081481934
    7. '  ' → logprob: -16.31256103515625
    8. '۱' → logprob: -16.31256103515625
    9. ' +' → logprob: -17.18756103515625
    10. ')' → logprob: -17.18756103515625

Token 276: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07210296392440796
    2. '<|end|>' → logprob: -2.6971030235290527
    3. ' ]' → logprob: -7.197103023529053
    4. ')' → logprob: -7.197103023529053
    5. '}' → logprob: -7.447103023529053
    6. '<|end|>' → logprob: -9.697102546691895
    7. ']int' → logprob: -12.447102546691895
    8. '']' → logprob: -13.072102546691895
    9. '```' → logprob: -13.072102546691895
    10. ']
' → logprob: -13.197102546691895

Token 277: ' -' (ID: 533)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.43433889746665955
    2. '<|end|>' → logprob: -1.059338927268982
    3. ' def' → logprob: -5.3093390464782715
    4. '<|end|>' → logprob: -7.8093390464782715
    5. ')' → logprob: -9.184338569641113
    6. ' ' → logprob: -9.684338569641113
    7. ' 
' → logprob: -10.309338569641113
    8. '```' → logprob: -10.934338569641113
    9. '  
' → logprob: -11.434338569641113
    10. '[' → logprob: -11.684338569641113

Token 278: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012356207298580557
    2. ' ' → logprob: -9.000123977661133
    3. '<|end|>' → logprob: -16.375123977661133
    4. '0' → logprob: -20.500123977661133
    5. '１' → logprob: -20.500123977661133
    6. '```' → logprob: -20.500123977661133
    7. '۱' → logprob: -22.125123977661133
    8. ' ' → logprob: -22.437623977661133
    9. '১' → logprob: -23.000123977661133
    10. '	' → logprob: -23.375123977661133

Token 279: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '１' → logprob: -20.750001907348633
    4. '```' → logprob: -21.125001907348633
    5. '<|end|>' → logprob: -21.250001907348633
    6. '0' → logprob: -21.875001907348633
    7. '2' → logprob: -22.875001907348633
    8. '১' → logprob: -22.937501907348633
    9. 'for' → logprob: -23.062501907348633
    10. '۱' → logprob: -23.125001907348633

Token 280: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.005466524511575699
    2. '<|end|>' → logprob: -5.380466461181641
    3. ' def' → logprob: -7.130466461181641
    4. ')' → logprob: -10.75546646118164
    5. '<|end|>' → logprob: -11.50546646118164
    6. ' ' → logprob: -12.25546646118164
    7. '
' → logprob: -13.13046646118164
    8. '  
' → logprob: -13.38046646118164
    9. ' 
' → logprob: -13.63046646118164
    10. '    
' → logprob: -14.00546646118164

Token 281: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -4.4849443838757e-06
    2. ' def' → logprob: -12.375004768371582
    3. '	def' → logprob: -16.375003814697266
    4. '```' → logprob: -16.500003814697266
    5. 'ndef' → logprob: -17.625003814697266
    6. '_def' → logprob: -18.125003814697266
    7. '[' → logprob: -18.750003814697266
    8. '-def' → logprob: -19.000003814697266
    9. ':def' → logprob: -19.000003814697266
    10. '   ' → logprob: -19.875003814697266

Token 282: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.04410393163561821
    2. 'def' → logprob: -3.6691038608551025
    3. ' is' → logprob: -4.044104099273682
    4. ' def' → logprob: -9.044103622436523
    5. 'lambda' → logprob: -14.919103622436523
    6. 'switch' → logprob: -15.044103622436523
    7. '```' → logprob: -15.356603622436523
    8. '`' → logprob: -16.106603622436523
    9. ' ' → logprob: -16.294103622436523
    10. 'v' → logprob: -16.294103622436523

Token 283: '_switch' (ID: 64715)
  Prédit: '_switch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_switch' → logprob: -5.676981345459353e-06
    2. 'switch' → logprob: -12.125005722045898
    3. '_' → logprob: -15.875005722045898
    4. 'Switch' → logprob: -18.5000057220459
    5. ' switch' → logprob: -18.6250057220459
    6. '_s' → logprob: -19.2500057220459
    7. '_toggle' → logprob: -19.5000057220459
    8. '_SWITCH' → logprob: -19.6250057220459
    9. '\' → logprob: -20.2500057220459
    10. '_on' → logprob: -20.3750057220459

Token 284: '_on' (ID: 10053)
  Prédit: '_on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_on' → logprob: 0.0
    2. 'on' → logprob: -17.625
    3. '_off' → logprob: -18.75
    4. '_ON' → logprob: -19.375
    5. '_' → logprob: -20.125
    6. ' _' → logprob: -20.625
    7. '_On' → logprob: -20.75
    8. '_switch' → logprob: -20.75
    9. '_is' → logprob: -21.25
    10. '_in' → logprob: -21.25

Token 285: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.01252872496843338
    2. '(' → logprob: -4.387528896331787
    3. ' (' → logprob: -12.262528419494629
    4. '<|end|>' → logprob: -12.262528419494629
    5. '(
' → logprob: -12.387528419494629
    6. '(value' → logprob: -13.012528419494629
    7. 'v' → logprob: -13.137528419494629
    8. 'def' → logprob: -16.012529373168945
    9. '(view' → logprob: -16.012529373168945
    10. '```' → logprob: -16.262529373168945

Token 286: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0017207576893270016
    2. ',v' → logprob: -6.501720905303955
    3. ' ,' → logprob: -9.126720428466797
    4. 'v' → logprob: -9.751720428466797
    5. ' v' → logprob: -10.876720428466797
    6. ',
' → logprob: -11.251720428466797
    7. '(v' → logprob: -11.626720428466797
    8. '   ' → logprob: -12.001720428466797
    9. 'def' → logprob: -13.126720428466797
    10. '
' → logprob: -14.251720428466797

Token 287: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.6947606801986694
    2. ' idx' → logprob: -0.6947606801986694
    3. 'index' → logprob: -6.819760799407959
    4. ' index' → logprob: -8.3197603225708
    5. 'i' → logprob: -8.5697603225708
    6. ')' → logprob: -9.9447603225708
    7. ' i' → logprob: -10.5697603225708
    8. '	idx' → logprob: -12.0697603225708
    9. 'v' → logprob: -13.1947603225708
    10. ' )' → logprob: -13.8197603225708

Token 288: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0019964431412518024
    2. '):
' → logprob: -6.2519965171813965
    3. ')' → logprob: -9.626996040344238
    4. '):

' → logprob: -13.626996040344238
    5. '):
' → logprob: -15.126996040344238
    6. ' ):' → logprob: -15.251996040344238
    7. '   ' → logprob: -17.001996994018555
    8. ':' → logprob: -17.751996994018555
    9. ')**' → logprob: -18.376996994018555
    10. ')：' → logprob: -18.501996994018555

Token 289: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0627460926771164
    2. ' return' → logprob: -2.812746047973633
    3. 'return' → logprob: -7.187746047973633
    4. '	return' → logprob: -10.812746047973633
    5. '    ' → logprob: -14.187746047973633
    6. ')' → logprob: -14.562746047973633
    7. '    
' → logprob: -15.062746047973633
    8. '   ' → logprob: -15.562746047973633
    9. ' ' → logprob: -15.687746047973633
    10. '       ' → logprob: -16.312746047973633

Token 290: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.38697710633277893
    2. ' return' → logprob: -1.1369770765304565
    3. '   ' → logprob: -9.386977195739746
    4. 'v' → logprob: -10.761977195739746
    5. ' v' → logprob: -13.886977195739746
    6. '	return' → logprob: -16.26197624206543
    7. ' ' → logprob: -18.88697624206543
    8. '```' → logprob: -19.01197624206543
    9. '    ' → logprob: -20.01197624206543
    10. '{return' → logprob: -20.13697624206543

Token 291: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.25192907452583313
    2. ' v' → logprob: -1.5019290447235107
    3. '	v' → logprob: -17.251928329467773
    4. ' ' → logprob: -19.876928329467773
    5. '   ' → logprob: -21.251928329467773
    6. '_v' → logprob: -21.626928329467773
    7. '(v' → logprob: -22.126928329467773
    8. '[v' → logprob: -22.376928329467773
    9. ')v' → logprob: -22.626928329467773
    10. '$v' → logprob: -22.626928329467773

Token 292: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -5.319370302458992e-06
    2. '[' → logprob: -12.250005722045898
    3. 'idx' → logprob: -14.875005722045898
    4. '[
' → logprob: -16.5000057220459
    5. ' [' → logprob: -17.0000057220459
    6. '(idx' → logprob: -17.1250057220459
    7. '[index' → logprob: -17.8750057220459
    8. '[i' → logprob: -18.5000057220459
    9. '```' → logprob: -18.5000057220459
    10. ' idx' → logprob: -19.2500057220459

Token 293: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0002844576956704259
    2. ')' → logprob: -8.625284194946289
    3. '<|end|>' → logprob: -10.125284194946289
    4. ' ]' → logprob: -10.250284194946289
    5. ']
' → logprob: -10.875284194946289
    6. ']==' → logprob: -11.750284194946289
    7. ')]' → logprob: -14.000284194946289
    8. '}' → logprob: -14.500284194946289
    9. '<|end|>' → logprob: -15.000284194946289
    10. ']>' → logprob: -15.500284194946289

Token 294: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.16836978495121002
    2. 'if' → logprob: -2.793369770050049
    3. 'result' → logprob: -2.793369770050049
    4. 'n' → logprob: -3.793369770050049
    5. 'for' → logprob: -4.793369770050049
    6. 'valid' → logprob: -7.293369770050049
    7. 'answer' → logprob: -8.418370246887207
    8. 'count' → logprob: -8.668370246887207
    9. 'num' → logprob: -8.918370246887207
    10. '#' → logprob: -9.543370246887207

Token 295: ' is' (ID: 382)
  Prédit: 'evaluate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'evaluate' → logprob: -1.5277043581008911
    2. 'def' → logprob: -1.6527043581008911
    3. 'is' → logprob: -1.7777043581008911
    4. 'count' → logprob: -2.0277042388916016
    5. 'sum' → logprob: -2.0277042388916016
    6. 'main' → logprob: -2.9027042388916016
    7. 'solve' → logprob: -3.5277042388916016
    8. '__' → logprob: -3.6527042388916016
    9. 'find' → logprob: -4.402704238891602
    10. ' sum' → logprob: -5.402704238891602

Token 296: '_correct' (ID: 77483)
  Prédit: '_correct'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_correct' → logprob: -0.011183508671820164
    2. '_switch' → logprob: -4.511183738708496
    3. 'correct' → logprob: -9.386183738708496
    4. '_on' → logprob: -11.261183738708496
    5. '_par' → logprob: -11.386183738708496
    6. '_even' → logprob: -11.636183738708496
    7. 'switch' → logprob: -12.261183738708496
    8. '_valid' → logprob: -12.511183738708496
    9. 'Correct' → logprob: -13.261183738708496
    10. '_' → logprob: -13.261183738708496

Token 297: '_par' (ID: 31329)
  Prédit: '_par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_par' → logprob: -8.2994620242971e-06
    2. 'par' → logprob: -11.750008583068848
    3. '_p' → logprob: -15.125008583068848
    4. '_parallel' → logprob: -17.00000762939453
    5. ' parity' → logprob: -17.25000762939453
    6. '_per' → logprob: -17.75000762939453
    7. '_switch' → logprob: -18.00000762939453
    8. '(par' → logprob: -18.25000762939453
    9. '_pr' → logprob: -18.25000762939453
    10. 'switch' → logprob: -18.25000762939453

Token 298: 'ity' (ID: 536)
  Prédit: 'ity'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ity' → logprob: -1.735893965815194e-05
    2. '```' → logprob: -11.750017166137695
    3. 'it' → logprob: -12.375017166137695
    4. 'i' → logprob: -13.375017166137695
    5. 'def' → logprob: -14.000017166137695
    6. '   ' → logprob: -14.750017166137695
    7. 'ty' → logprob: -15.125017166137695
    8. 't' → logprob: -15.625017166137695
    9. '#' → logprob: -15.750017166137695
    10. '
' → logprob: -16.000017166137695

Token 299: '(cnt' (ID: 102125)
  Prédit: '(cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cnt' → logprob: -0.20150035619735718
    2. '(count' → logprob: -1.701500415802002
    3. '(value' → logprob: -10.201499938964844
    4. '(c' → logprob: -11.201499938964844
    5. '(par' → logprob: -11.701499938964844
    6. '(expected' → logprob: -11.826499938964844
    7. '(num' → logprob: -12.201499938964844
    8. '(' → logprob: -12.326499938964844
    9. '(counter' → logprob: -13.326499938964844
    10. '(val' → logprob: -13.326499938964844

Token 300: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.88418151892256e-05
    2. ' ,' → logprob: -10.375059127807617
    3. ',p' → logprob: -10.625059127807617
    4. 'p' → logprob: -12.750059127807617
    5. '_,' → logprob: -16.125059127807617
    6. ',
' → logprob: -16.375059127807617
    7. ',n' → logprob: -17.750059127807617
    8. '   ' → logprob: -18.000059127807617
    9. ',j' → logprob: -18.000059127807617
    10. ',value' → logprob: -18.000059127807617

Token 301: ' expected' (ID: 5930)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.001977999461814761
    2. ' p' → logprob: -6.251977920532227
    3. 'expected' → logprob: -10.876977920532227
    4. 'par' → logprob: -11.376977920532227
    5. 'val' → logprob: -11.751977920532227
    6. 'target' → logprob: -12.626977920532227
    7. ' expected' → logprob: -13.126977920532227
    8. 'value' → logprob: -14.001977920532227
    9. 'pi' → logprob: -14.001977920532227
    10. 'b' → logprob: -14.126977920532227

Token 302: '_par' (ID: 31329)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1698005348443985
    2. '):
' → logprob: -1.9198005199432373
    3. '_par' → logprob: -5.294800758361816
    4. '_p' → logprob: -5.544800758361816
    5. 'p' → logprob: -8.169800758361816
    6. '):

' → logprob: -8.669800758361816
    7. 'par' → logprob: -10.419800758361816
    8. ')' → logprob: -10.419800758361816
    9. '_value' → logprob: -10.669800758361816
    10. '_' → logprob: -11.044800758361816

Token 303: 'ity' (ID: 536)
  Prédit: 'ity'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ity' → logprob: -4.35837464465294e-05
    2. 'it' → logprob: -11.375043869018555
    3. ')' → logprob: -11.750043869018555
    4. '```' → logprob: -12.000043869018555
    5. 'ty' → logprob: -12.625043869018555
    6. 'def' → logprob: -12.875043869018555
    7. 'i' → logprob: -13.125043869018555
    8. '   ' → logprob: -13.375043869018555
    9. 'try' → logprob: -13.625043869018555
    10. '#' → logprob: -13.875043869018555

Token 304: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004626768175512552
    2. '):
' → logprob: -5.379626750946045
    3. '):
' → logprob: -12.879627227783203
    4. ':' → logprob: -13.379627227783203
    5. '):

' → logprob: -13.879627227783203
    6. ')' → logprob: -14.004627227783203
    7. ' ):' → logprob: -14.754627227783203
    8. '():' → logprob: -16.629627227783203
    9. 'def' → logprob: -17.254627227783203
    10. '=' → logprob: -17.379627227783203

Token 305: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0011621268931776285
    2. ' return' → logprob: -7.251162052154541
    3. 'return' → logprob: -7.751162052154541
    4. '    
' → logprob: -11.6261625289917
    5. '	return' → logprob: -12.1261625289917
    6. ':return' → logprob: -13.1261625289917
    7. '```' → logprob: -13.6261625289917
    8. '{return' → logprob: -13.8761625289917
    9. '    ' → logprob: -14.5011625289917
    10. '       ' → logprob: -14.6261625289917

Token 306: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.47425612807273865
    2. '   ' → logprob: -0.974256157875061
    3. ' return' → logprob: -8.72425651550293
    4. '
' → logprob: -11.47425651550293
    5. '	return' → logprob: -12.09925651550293
    6. '```' → logprob: -15.84925651550293
    7. '{return' → logprob: -15.97425651550293
    8. 'def' → logprob: -16.59925651550293
    9. '    
' → logprob: -16.97425651550293
    10. '  ' → logprob: -17.47425651550293

Token 307: ' cnt' (ID: 27340)
  Prédit: '(cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cnt' → logprob: -0.32934778928756714
    2. 'cnt' → logprob: -1.329347848892212
    3. ' cnt' → logprob: -4.204347610473633
    4. ' (' → logprob: -6.954347610473633
    5. '[cnt' → logprob: -9.829347610473633
    6. '	cnt' → logprob: -11.829347610473633
    7. '(c' → logprob: -12.329347610473633
    8. '   ' → logprob: -12.704347610473633
    9. '(count' → logprob: -13.204347610473633
    10. ' ' → logprob: -14.329347610473633

Token 308: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.10022673010826111
    2. '%' → logprob: -2.350226640701294
    3. ' ' → logprob: -10.850226402282715
    4. ' ' → logprob: -14.350226402282715
    5. '	' → logprob: -17.60022735595703
    6. '％' → logprob: -18.10022735595703
    7. '```' → logprob: -18.72522735595703
    8. '%e' → logprob: -18.72522735595703
    9. '%c' → logprob: -18.85022735595703
    10. '   ' → logprob: -18.97522735595703

Token 309: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.054500666621607e-06
    2. ' ' → logprob: -12.75000286102295
    3. '   ' → logprob: -15.87500286102295
    4. '```' → logprob: -17.375003814697266
    5. '۲' → logprob: -18.250003814697266
    6. '２' → logprob: -18.500003814697266
    7. '  ' → logprob: -18.750003814697266
    8. '=' → logprob: -19.000003814697266
    9. '२' → logprob: -19.250003814697266
    10. '٢' → logprob: -19.500003814697266

Token 310: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.875
    3. '```' → logprob: -17.375
    4. '   ' → logprob: -18.875
    5. '２' → logprob: -20.125
    6. '(' → logprob: -20.125
    7. '{' → logprob: -20.125
    8. '=' → logprob: -20.1875
    9. '۲' → logprob: -20.25
    10. '

' → logprob: -20.625

Token 311: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.07898914813995361
    2. ' ==' → logprob: -2.578989028930664
    3. '=' → logprob: -9.328989028930664
    4. '()==' → logprob: -11.953989028930664
    5. ')==' → logprob: -12.953989028930664
    6. '==
' → logprob: -14.203989028930664
    7. ']==' → logprob: -15.328989028930664
    8. ')' → logprob: -15.578989028930664
    9. '===' → logprob: -16.078989028930664
    10. ' ' → logprob: -16.328989028930664

Token 312: ' expected' (ID: 5930)
  Prédit: 'expected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expected' → logprob: -0.20141363143920898
    2. ' expected' → logprob: -1.701413631439209
    3. '	expected' → logprob: -15.951414108276367
    4. '(expected' → logprob: -15.951414108276367
    5. ' ' → logprob: -17.326414108276367
    6. '   ' → logprob: -17.701414108276367
    7. '
' → logprob: -18.951414108276367
    8. '  ' → logprob: -19.326414108276367
    9. '0' → logprob: -19.576414108276367
    10. '.expected' → logprob: -19.576414108276367

Token 313: '_par' (ID: 31329)
  Prédit: '_par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_par' → logprob: -2.451116051815916e-05
    2. 'par' → logprob: -10.625024795532227
    3. '_' → logprob: -17.125024795532227
    4. '_ph' → logprob: -17.625024795532227
    5. '\' → logprob: -18.375024795532227
    6. '	par' → logprob: -18.500024795532227
    7. 's' → logprob: -19.250024795532227
    8. '_pol' → logprob: -19.250024795532227
    9. '_p' → logprob: -19.375024795532227
    10. ' пар' → logprob: -19.500024795532227

Token 314: 'ity' (ID: 536)
  Prédit: 'ity'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ity' → logprob: -0.014147401787340641
    2. 'ty' → logprob: -4.3891472816467285
    3. 't' → logprob: -7.5141472816467285
    4. 'y' → logprob: -7.8891472816467285
    5. 'try' → logprob: -7.8891472816467285
    6. 'it' → logprob: -8.514147758483887
    7. 'cy' → logprob: -10.139147758483887
    8. 'city' → logprob: -10.889147758483887
    9. '   ' → logprob: -11.264147758483887
    10. 'i' → logprob: -11.639147758483887

Token 315: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4646453261375427
    2. '<|end|>' → logprob: -1.2146453857421875
    3. 'for' → logprob: -3.4646453857421875
    4. '#' → logprob: -3.8396453857421875
    5. 'if' → logprob: -4.5896453857421875
    6. 'n' → logprob: -4.8396453857421875
    7. '<|end|>' → logprob: -6.9646453857421875
    8. '
' → logprob: -7.0896453857421875
    9. 'result' → logprob: -7.5896453857421875
    10. 'valid' → logprob: -7.8396453857421875

Token 316: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.15078379213809967
    2. 'if' → logprob: -2.0257837772369385
    3. 'for' → logprob: -5.275784015655518
    4. 'n' → logprob: -6.275784015655518
    5. '#' → logprob: -7.775784015655518
    6. 'result' → logprob: -8.02578353881836
    7. 'print' → logprob: -8.90078353881836
    8. '<|end|>' → logprob: -9.52578353881836
    9. 'valid' → logprob: -10.02578353881836
    10. '```' → logprob: -10.52578353881836

Token 317: ' increment' (ID: 24032)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.10102592408657074
    2. ' main' → logprob: -2.3510258197784424
    3. 'solve' → logprob: -7.7260260581970215
    4. 'count' → logprob: -8.101025581359863
    5. ' solve' → logprob: -10.101025581359863
    6. ' count' → logprob: -10.976025581359863
    7. 'def' → logprob: -11.226025581359863
    8. 'find' → logprob: -13.476025581359863
    9. ' find' → logprob: -14.101025581359863
    10. 'solution' → logprob: -14.851025581359863

Token 318: '_counter' (ID: 35419)
  Prédit: '_counter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counter' → logprob: -0.8476519584655762
    2. '_switch' → logprob: -1.3476519584655762
    3. '_state' → logprob: -1.4726519584655762
    4. '(counter' → logprob: -3.972651958465576
    5. '(n' → logprob: -4.472651958465576
    6. '(v' → logprob: -4.597651958465576
    7. '(value' → logprob: -4.847651958465576
    8. '(state' → logprob: -4.847651958465576
    9. '_index' → logprob: -4.972651958465576
    10. '(' → logprob: -6.222651958465576

Token 319: '_if' (ID: 25821)
  Prédit: '(counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(counter' → logprob: -0.0062604425475001335
    2. '(' → logprob: -5.881260395050049
    3. '(count' → logprob: -6.631260395050049
    4. '():' → logprob: -7.131260395050049
    5. '(n' → logprob: -7.881260395050049
    6. '(c' → logprob: -8.256260871887207
    7. '(cnt' → logprob: -8.381260871887207
    8. '(s' → logprob: -8.756260871887207
    9. '(state' → logprob: -9.006260871887207
    10. ' (' → logprob: -10.256260871887207

Token 320: '_valid' (ID: 23321)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.7799569964408875
    2. '(condition' → logprob: -1.6549570560455322
    3. '(cnt' → logprob: -2.5299570560455322
    4. '(is' → logprob: -2.5299570560455322
    5. '(count' → logprob: -3.2799570560455322
    6. 'is' → logprob: -3.2799570560455322
    7. 'True' → logprob: -4.029956817626953
    8. 'condition' → logprob: -4.279956817626953
    9. 'switch' → logprob: -4.404956817626953
    10. 'correct' → logprob: -5.029956817626953

Token 321: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.19074119627475739
    2. '(state' → logprob: -2.8157413005828857
    3. '(counter' → logprob: -2.8157413005828857
    4. '(' → logprob: -3.5657413005828857
    5. '(s' → logprob: -4.315741062164307
    6. ' (' → logprob: -5.190741062164307
    7. '(count' → logprob: -5.565741062164307
    8. '(value' → logprob: -7.190741062164307
    9. '(cnt' → logprob: -7.315741062164307
    10. '(c' → logprob: -7.815741062164307

Token 322: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005916363443247974
    2. ' ,' → logprob: -7.62559175491333
    3. '):' → logprob: -9.875591278076172
    4. ',v' → logprob: -10.875591278076172
    5. '):
' → logprob: -11.250591278076172
    6. 's' → logprob: -12.500591278076172
    7. '_,' → logprob: -12.750591278076172
    8. ',s' → logprob: -13.000591278076172
    9. '   ' → logprob: -13.125591278076172
    10. ',count' → logprob: -13.500591278076172

Token 323: ' ks' (ID: 81387)
  Prédit: 'ks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ks' → logprob: -0.2659969925880432
    2. ' ks' → logprob: -1.6409969329833984
    3. 'counter' → logprob: -4.890996932983398
    4. ' counter' → logprob: -5.390996932983398
    5. 'valid' → logprob: -5.515996932983398
    6. 'cnt' → logprob: -6.015996932983398
    7. 'count' → logprob: -6.015996932983398
    8. 'v' → logprob: -6.265996932983398
    9. ' valid' → logprob: -6.515996932983398
    10. ' cnt' → logprob: -6.515996932983398

Token 324: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.685467764735222e-05
    2. ' ,' → logprob: -10.375086784362793
    3. ',j' → logprob: -10.375086784362793
    4. ',p' → logprob: -11.250086784362793
    5. '):' → logprob: -12.125086784362793
    6. '[j' → logprob: -13.000086784362793
    7. '   ' → logprob: -13.625086784362793
    8. '):
' → logprob: -14.125086784362793
    9. ',v' → logprob: -14.750086784362793
    10. 'def' → logprob: -15.750086784362793

Token 325: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0299393143504858
    2. ' p' → logprob: -3.5299394130706787
    3. '   ' → logprob: -10.029939651489258
    4. 'ks' → logprob: -10.279939651489258
    5. 'count' → logprob: -10.904939651489258
    6. ' ' → logprob: -11.404939651489258
    7. '  ' → logprob: -11.404939651489258
    8. 'k' → logprob: -11.654939651489258
    9. 'counter' → logprob: -11.904939651489258
    10. 'v' → logprob: -11.967439651489258

Token 326: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.030889194458723068
    2. '):' → logprob: -3.5308892726898193
    3. ',v' → logprob: -7.65588903427124
    4. '(v' → logprob: -8.155889511108398
    5. '   ' → logprob: -8.905889511108398
    6. ':' → logprob: -9.405889511108398
    7. ' ,' → logprob: -9.655889511108398
    8. 'v' → logprob: -10.405889511108398
    9. '):
' → logprob: -10.530889511108398
    10. 'def' → logprob: -11.405889511108398

Token 327: ' a' (ID: 261)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.799570620059967
    2. 'counter' → logprob: -1.2995705604553223
    3. ' count' → logprob: -2.9245705604553223
    4. 'idx' → logprob: -3.0495705604553223
    5. 'result' → logprob: -3.4245705604553223
    6. ' counter' → logprob: -3.5495705604553223
    7. 'valid' → logprob: -3.7995705604553223
    8. 'cnt' → logprob: -3.9245705604553223
    9. 'index' → logprob: -4.049570560455322
    10. 'j' → logprob: -4.549570560455322

Token 328: '_cnt' (ID: 35412)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.19356748461723328
    2. ',' → logprob: -1.9435675144195557
    3. 'l' → logprob: -4.318567276000977
    4. '):
' → logprob: -4.943567276000977
    5. 'v' → logprob: -5.943567276000977
    6. ',v' → logprob: -6.068567276000977
    7. ',l' → logprob: -6.818567276000977
    8. 'rray' → logprob: -6.943567276000977
    9. 'r' → logprob: -7.193567276000977
    10. 'c' → logprob: -7.318567276000977

Token 329: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04909051954746246
    2. 'ount' → logprob: -3.674090623855591
    3. 't' → logprob: -4.174090385437012
    4. ')' → logprob: -5.299090385437012
    5. ',' → logprob: -6.924090385437012
    6. '):
' → logprob: -7.549090385437012
    7. 'u' → logprob: -8.299090385437012
    8. 'ounter' → logprob: -9.174090385437012
    9. 'nt' → logprob: -9.674090385437012
    10. 'e' → logprob: -10.299090385437012

Token 330: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11434056609869003
    2. ':' → logprob: -2.2393405437469482
    3. '):' → logprob: -7.614340782165527
    4. ',' → logprob: -7.864340782165527
    5. ':
' → logprob: -8.614340782165527
    6. ' :' → logprob: -9.489340782165527
    7. '{' → logprob: -9.614340782165527
    8. '<|end|>' → logprob: -9.614340782165527
    9. ')' → logprob: -10.114340782165527
    10. ' if' → logprob: -10.364340782165527

Token 331: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10627155750989914
    2. 'if' (adapté à ' if') → logprob: -2.356271505355835
    3. 'for' → logprob: -5.231271743774414
    4. ' if' → logprob: -7.856271743774414
    5. 'valid' → logprob: -9.106271743774414
    6. ' for' → logprob: -9.231271743774414
    7. 'result' → logprob: -10.731271743774414
    8. 'def' → logprob: -10.856271743774414
    9. 'count' → logprob: -10.981271743774414
    10. 'n' → logprob: -11.231271743774414

Token 332: ' evaluate' (ID: 21646)
  Prédit: 'evaluate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'evaluate' → logprob: -0.10021702200174332
    2. ' evaluate' → logprob: -2.35021710395813
    3. 'valuate' → logprob: -12.85021686553955
    4. '   ' → logprob: -13.60021686553955
    5. ' ' → logprob: -13.72521686553955
    6. 'e' → logprob: -13.85021686553955
    7. 'is' → logprob: -14.10021686553955
    8. '  ' → logprob: -14.10021686553955
    9. '.evaluate' → logprob: -14.35021686553955
    10. ' is' → logprob: -14.35021686553955

Token 333: '_switch' (ID: 64715)
  Prédit: '_switch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_switch' → logprob: -5.676981345459353e-06
    2. 'switch' → logprob: -12.125005722045898
    3. '_' → logprob: -15.875005722045898
    4. ' switch' → logprob: -17.8750057220459
    5. '_SWITCH' → logprob: -18.6250057220459
    6. 'Switch' → logprob: -18.8750057220459
    7. '(s' → logprob: -19.0000057220459
    8. '_sw' → logprob: -19.1250057220459
    9. '_s' → logprob: -19.3750057220459
    10. '(v' → logprob: -19.6250057220459

Token 334: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -4.127333340875339e-06
    2. '_states' → logprob: -13.125003814697266
    3. 'state' → logprob: -13.125003814697266
    4. '_STATE' → logprob: -18.250003814697266
    5. '_status' → logprob: -18.500003814697266
    6. ' state' → logprob: -19.000003814697266
    7. '_' → logprob: -19.250003814697266
    8. '_State' → logprob: -19.250003814697266
    9. '   ' → logprob: -20.000003814697266
    10. 'State' → logprob: -20.125003814697266

Token 335: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -1.318681188422488e-05
    2. ' (' → logprob: -11.87501335144043
    3. '(' → logprob: -12.00001335144043
    4. '(
' → logprob: -18.50001335144043
    5. ' ' → logprob: -18.75001335144043
    6. ')' → logprob: -19.50001335144043
    7. '   ' → logprob: -19.62501335144043
    8. '
' → logprob: -19.87501335144043
    9. 'v' → logprob: -20.62501335144043
    10. '```' → logprob: -20.62501335144043

Token 336: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001601539261173457
    2. ' ,' → logprob: -8.750160217285156
    3. ',
' → logprob: -14.250160217285156
    4. 'v' → logprob: -15.125160217285156
    5. ')' → logprob: -15.500160217285156
    6. '   ' → logprob: -15.875160217285156
    7. ',v' → logprob: -15.875160217285156
    8. '),' → logprob: -16.812660217285156
    9. '```' → logprob: -17.250160217285156
    10. '=' → logprob: -17.375160217285156

Token 337: ' ks' (ID: 81387)
  Prédit: 'ks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ks' → logprob: -0.0699453204870224
    2. ' ks' → logprob: -2.6949453353881836
    3. '.ks' → logprob: -12.819945335388184
    4. ' ' → logprob: -13.319945335388184
    5. '   ' → logprob: -13.319945335388184
    6. '  ' → logprob: -14.319945335388184
    7. '    ' → logprob: -14.694945335388184
    8. ')' → logprob: -14.944945335388184
    9. 'k' → logprob: -15.194945335388184
    10. 'Ks' → logprob: -15.319945335388184

Token 338: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.9650025428272784e-05
    2. ' ,' → logprob: -10.750040054321289
    3. ',p' → logprob: -11.000040054321289
    4. 'p' → logprob: -14.125040054321289
    5. '   ' → logprob: -14.750040054321289
    6. ',
' → logprob: -15.875040054321289
    7. ')' → logprob: -16.25004005432129
    8. '       ' → logprob: -17.87504005432129
    9. '_,' → logprob: -18.25004005432129
    10. '),' → logprob: -18.50004005432129

Token 339: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.14267948269844055
    2. ' p' → logprob: -2.017679452896118
    3. ',' → logprob: -13.142679214477539
    4. '   ' → logprob: -14.392679214477539
    5. '
' → logprob: -15.017679214477539
    6. ')' → logprob: -15.267679214477539
    7. '<p' → logprob: -15.517679214477539
    8. ',p' → logprob: -15.517679214477539
    9. ' ' → logprob: -15.642679214477539
    10. '	p' → logprob: -15.892679214477539

Token 340: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3672773838043213
    2. '):' → logprob: -1.2422773838043213
    3. '):
' → logprob: -3.9922773838043213
    4. '   ' → logprob: -9.242277145385742
    5. ')' → logprob: -9.992277145385742
    6. ',a' → logprob: -11.117277145385742
    7. '):
' → logprob: -11.242277145385742
    8. ':' → logprob: -11.867277145385742
    9. ' ):' → logprob: -12.367277145385742
    10. ' ,' → logprob: -12.367277145385742

Token 341: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003281452227383852
    2. '   ' → logprob: -7.003281593322754
    3. ':' → logprob: -7.378281593322754
    4. ':
' → logprob: -7.878281593322754
    5. '
' → logprob: -8.128281593322754
    6. 'a' → logprob: -8.378281593322754
    7. '	a' → logprob: -8.753281593322754
    8. '	' → logprob: -8.878281593322754
    9. '	   ' → logprob: -9.003281593322754
    10. ' a' → logprob: -9.128281593322754

Token 342: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.4852491319179535
    2. ' a' → logprob: -0.9852491617202759
    3. '   ' → logprob: -5.110249042510986
    4. '           ' → logprob: -5.860249042510986
    5. ' return' → logprob: -6.860249042510986
    6. 'return' → logprob: -7.110249042510986
    7. '       ' → logprob: -8.110249519348145
    8. '
' → logprob: -10.610249519348145
    9. '	a' → logprob: -10.860249519348145
    10. '               ' → logprob: -12.860249519348145

Token 343: '_cnt' (ID: 35412)
  Prédit: '_cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cnt' → logprob: -8.756989700486884e-05
    2. 'cnt' → logprob: -9.37508773803711
    3. '	cnt' → logprob: -13.50008773803711
    4. '_count' → logprob: -14.75008773803711
    5. '_ct' → logprob: -15.25008773803711
    6. '_counter' → logprob: -15.87508773803711
    7. '   ' → logprob: -15.87508773803711
    8. '_CNT' → logprob: -16.12508773803711
    9. 'Cnt' → logprob: -16.50008773803711
    10. '_cont' → logprob: -16.75008773803711

Token 344: '[' (ID: 58)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.5934434533119202
    2. '+=' → logprob: -0.8434434533119202
    3. '[' → logprob: -4.093443393707275
    4. '+' → logprob: -7.593443393707275
    5. '=' → logprob: -9.343443870544434
    6. ' =' → logprob: -10.343443870544434
    7. ' +' → logprob: -10.843443870544434
    8. '.append' → logprob: -11.843443870544434
    9. '   ' → logprob: -12.468443870544434
    10. ']+=' → logprob: -12.468443870544434

Token 345: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -13.000003814697266
    3. ']' → logprob: -14.000003814697266
    4. ''' → logprob: -15.000003814697266
    5. '
' → logprob: -16.125003814697266
    6. '-' → logprob: -16.625003814697266
    7. '"' → logprob: -17.250003814697266
    8. '

' → logprob: -17.625003814697266
    9. '   ' → logprob: -17.812503814697266
    10. ')' → logprob: -18.250003814697266

Token 346: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00029637437546625733
    2. ']+=' → logprob: -8.125296592712402
    3. ' ]' → logprob: -15.875296592712402
    4. ')' → logprob: -16.250295639038086
    5. ']+' → logprob: -16.375295639038086
    6. '+=' → logprob: -17.875295639038086
    7. '```' → logprob: -18.375295639038086
    8. '']' → logprob: -19.125295639038086
    9. ']
' → logprob: -19.125295639038086
    10. '}' → logprob: -19.125295639038086

Token 347: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.004091224167495966
    2. ' +=' → logprob: -5.504091262817383
    3. ']+=' → logprob: -11.629091262817383
    4. '=' → logprob: -12.754091262817383
    5. '+' → logprob: -14.379091262817383
    6. '[' → logprob: -14.754091262817383
    7. '.' → logprob: -18.879091262817383
    8. '```' → logprob: -19.004091262817383
    9. ')' → logprob: -19.254091262817383
    10. '+=(' → logprob: -19.254091262817383

Token 348: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. '   ' → logprob: -19.75
    4. '１' → logprob: -22.5
    5. '```' → logprob: -22.75
    6. '
' → logprob: -23.25
    7. '  ' → logprob: -23.5
    8. '۱' → logprob: -24.125
    9. ' ' → logprob: -24.125
    10. 'def' → logprob: -25.1875

Token 349: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -16.75
    3. '   ' → logprob: -21.0
    4. '１' → logprob: -21.25
    5. '```' → logprob: -21.625
    6. 'def' → logprob: -22.5
    7. '۱' → logprob: -22.625
    8. 'a' → logprob: -23.375
    9. 'int' → logprob: -23.625
    10. 'v' → logprob: -23.8125

Token 350: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 351: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.11614524573087692
    2. '<|end|>' → logprob: -2.241145133972168
    3. '#' → logprob: -6.366145133972168
    4. '
' → logprob: -7.491145133972168
    5. '<|end|>' → logprob: -7.491145133972168
    6. '```' → logprob: -8.866145133972168
    7. ' def' → logprob: -9.616145133972168
    8. 'n' → logprob: -9.866145133972168
    9. '[' → logprob: -9.991145133972168
    10. 'v' → logprob: -10.116145133972168

Token 352: ' solve' (ID: 17722)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.009588448330760002
    2. ' main' → logprob: -4.759588241577148
    3. 'solve' → logprob: -7.509588241577148
    4. 'count' → logprob: -7.884588241577148
    5. ' solve' → logprob: -11.259588241577148
    6. 'read' → logprob: -11.259588241577148
    7. 'solution' → logprob: -12.009588241577148
    8. 'def' → logprob: -12.009588241577148
    9. ' count' → logprob: -12.509588241577148
    10. 'run' → logprob: -12.759588241577148

Token 353: '_logic' (ID: 131254)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0020938764791935682
    2. '(n' → logprob: -6.25209379196167
    3. ' ():' → logprob: -9.127094268798828
    4. '(' → logprob: -10.627094268798828
    5. '():
' → logprob: -10.877094268798828
    6. '(def' → logprob: -12.252094268798828
    7. '()' → logprob: -12.502094268798828
    8. '(input' → logprob: -13.752094268798828
    9. ' (' → logprob: -13.877094268798828
    10. '()(' → logprob: -14.002094268798828

Token 354: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.5878015160560608
    2. '():' → logprob: -0.8378015160560608
    3. '(' → logprob: -4.587801456451416
    4. '():
' → logprob: -6.587801456451416
    5. '(v' → logprob: -8.962801933288574
    6. '(def' → logprob: -10.462801933288574
    7. ' (' → logprob: -11.212801933288574
    8. '()' → logprob: -11.212801933288574
    9. 'def' → logprob: -11.337801933288574
    10. ' ():' → logprob: -12.087801933288574

Token 355: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.007317567011341e-05
    2. ',m' → logprob: -9.375089645385742
    3. ' ,' → logprob: -12.375089645385742
    4. 'm' → logprob: -14.625089645385742
    5. ',
' → logprob: -15.625089645385742
    6. '):' → logprob: -16.250089645385742
    7. '   ' → logprob: -16.375089645385742
    8. '_,' → logprob: -17.000089645385742
    9. ',n' → logprob: -17.500089645385742
    10. ':' → logprob: -17.750089645385742

Token 356: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.03730284795165062
    2. ' m' → logprob: -3.6623027324676514
    3. 'ks' → logprob: -4.5373029708862305
    4. ' ks' → logprob: -8.41230297088623
    5. 'k' → logprob: -12.28730297088623
    6. 'ms' → logprob: -12.41230297088623
    7. '   ' → logprob: -12.78730297088623
    8. ' ' → logprob: -13.28730297088623
    9. '	m' → logprob: -13.91230297088623
    10. '  ' → logprob: -14.28730297088623

Token 357: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.6240566083070007e-06
    2. ' ,' → logprob: -14.125001907348633
    3. '):' → logprob: -14.875001907348633
    4. ',v' → logprob: -15.500001907348633
    5. ',
' → logprob: -16.500001907348633
    6. ',p' → logprob: -16.750001907348633
    7. '   ' → logprob: -16.875001907348633
    8. ',n' → logprob: -17.375001907348633
    9. '‌,' → logprob: -17.875001907348633
    10. ',a' → logprob: -18.000001907348633

Token 358: ' ks' (ID: 81387)
  Prédit: 'ks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ks' → logprob: -0.004130641929805279
    2. ' ks' → logprob: -5.504130840301514
    3. 'k' → logprob: -10.379130363464355
    4. 'v' → logprob: -11.504130363464355
    5. '   ' → logprob: -13.004130363464355
    6. 'n' → logprob: -13.129130363464355
    7. ' ' → logprob: -13.379130363464355
    8. 'a' → logprob: -13.754130363464355
    9. 'switch' → logprob: -14.254130363464355
    10. ' v' → logprob: -14.379130363464355

Token 359: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.153795766294934e-06
    2. ' ,' → logprob: -12.750005722045898
    3. ',p' → logprob: -12.750005722045898
    4. 'p' → logprob: -15.625005722045898
    5. '   ' → logprob: -16.7500057220459
    6. ',
' → logprob: -17.2500057220459
    7. ',v' → logprob: -18.3750057220459
    8. '):' → logprob: -18.3750057220459
    9. '_,' → logprob: -18.6250057220459
    10. ',n' → logprob: -19.7500057220459

Token 360: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0076065086759626865
    2. ' p' → logprob: -4.882606506347656
    3. '   ' → logprob: -15.507606506347656
    4. ' ' → logprob: -16.382606506347656
    5. '  ' → logprob: -17.507606506347656
    6. ',' → logprob: -17.632606506347656
    7. '    ' → logprob: -18.132606506347656
    8. 'ps' → logprob: -18.445106506347656
    9. '	p' → logprob: -18.632606506347656
    10. ')' → logprob: -18.695106506347656

Token 361: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0001149867384810932
    2. '):
' → logprob: -9.125115394592285
    3. ',' → logprob: -12.500115394592285
    4. '   ' → logprob: -13.750115394592285
    5. ':' → logprob: -14.250115394592285
    6. ')' → logprob: -15.500115394592285
    7. ' ):' → logprob: -15.625115394592285
    8. '):
' → logprob: -15.875115394592285
    9. '}:' → logprob: -17.12511444091797
    10. '():' → logprob: -17.75011444091797

Token 362: '   ' (ID: 271)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.20286351442337036
    2. '   ' → logprob: -1.7028634548187256
    3. 'result' → logprob: -7.202863693237305
    4. 'count' → logprob: -7.702863693237305
    5. ' a' → logprob: -8.952863693237305
    6. 'answer' → logprob: -10.327863693237305
    7. 'total' → logprob: -10.452863693237305
    8. 'ans' → logprob: -10.827863693237305
    9. 'cnt' → logprob: -11.202863693237305
    10. 'def' → logprob: -11.827863693237305

Token 363: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.8789317011833191
    2. 'count' → logprob: -0.8789317011833191
    3. 'result' → logprob: -2.253931760787964
    4. 'ans' → logprob: -3.503931760787964
    5. 'answer' → logprob: -3.753931760787964
    6. 'res' → logprob: -5.753931522369385
    7. 'total' → logprob: -6.003931522369385
    8. 'for' → logprob: -6.253931522369385
    9. '   ' → logprob: -6.503931522369385
    10. 'cnt' → logprob: -6.753931522369385

Token 364: '_cnt' (ID: 35412)
  Prédit: '_cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cnt' → logprob: -3.2378600735682994e-05
    2. 'cnt' → logprob: -10.750032424926758
    3. '_count' → logprob: -12.000032424926758
    4. '   ' → logprob: -13.500032424926758
    5. '_c' → logprob: -14.000032424926758
    6. '_' → logprob: -14.125032424926758
    7. '_counter' → logprob: -15.000032424926758
    8. '_ct' → logprob: -15.125032424926758
    9. '_counts' → logprob: -15.125032424926758
    10. '	cnt' → logprob: -15.125032424926758

Token 365: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08957705646753311
    2. '=' → logprob: -2.4645769596099854
    3. '[' → logprob: -7.9645771980285645
    4. '=[' → logprob: -8.214576721191406
    5. ' =[' → logprob: -10.964576721191406
    6. ',' → logprob: -14.464576721191406
    7. '0' → logprob: -14.964576721191406
    8. '   ' → logprob: -15.214576721191406
    9. ' ' → logprob: -15.214576721191406
    10. ' [' → logprob: -15.589576721191406

Token 366: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.935296834039036e-06
    2. ' [' → logprob: -12.75000286102295
    3. '   ' → logprob: -19.500003814697266
    4. '0' → logprob: -19.875003814697266
    5. '[a' → logprob: -21.125003814697266
    6. '
' → logprob: -22.000003814697266
    7. ' ' → logprob: -22.125003814697266
    8. 'a' → logprob: -23.125003814697266
    9. '([' → logprob: -23.875003814697266
    10. ' ' → logprob: -24.000003814697266

Token 367: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.625
    3. '０' → logprob: -19.75
    4. '۰' → logprob: -19.875
    5. '   ' → logprob: -20.25
    6. '000' → logprob: -20.625
    7. '```' → logprob: -21.25
    8. '00' → logprob: -21.875
    9. '
' → logprob: -22.0
    10. '[' → logprob: -22.125

Token 368: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.04871204495429993
    2. ']' → logprob: -3.0487120151519775
    3. ']
' → logprob: -9.548711776733398
    4. ']

' → logprob: -10.423711776733398
    5. ' ]
' → logprob: -11.048711776733398
    6. '   ' → logprob: -11.923711776733398
    7. ' ]' → logprob: -14.673711776733398
    8. '
' → logprob: -14.923711776733398
    9. ' ' → logprob: -16.2987117767334
    10. ')
' → logprob: -16.6737117767334

Token 369: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.323635995388031
    2. 'for' → logprob: -1.3236360549926758
    3. ' for' → logprob: -4.573636054992676
    4. '	for' → logprob: -16.19863510131836
    5. '
' → logprob: -16.82363510131836
    6. '    
' → logprob: -16.94863510131836
    7. ' ' → logprob: -16.94863510131836
    8. '```' → logprob: -17.44863510131836
    9. '   ' → logprob: -17.44863510131836
    10. '  ' → logprob: -17.57363510131836

Token 370: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -7.822646693966817e-06
    2. '   ' → logprob: -12.250007629394531
    3. ' for' → logprob: -12.750007629394531
    4. 'switch' → logprob: -19.62500762939453
    5. 'states' → logprob: -20.50000762939453
    6. '	for' → logprob: -21.87500762939453
    7. '```' → logprob: -22.12500762939453
    8. 'def' → logprob: -22.37500762939453
    9. 'from' → logprob: -22.37500762939453
    10. 'gen' → logprob: -22.87500762939453

Token 371: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.03922730311751366
    2. ' v' → logprob: -3.289227247238159
    3. 'switch' → logprob: -7.039227485656738
    4. 'state' → logprob: -8.539227485656738
    5. ' switch' → logprob: -9.789227485656738
    6. ' state' → logprob: -10.539227485656738
    7. '_switch' → logprob: -11.914227485656738
    8. 's' → logprob: -12.039227485656738
    9. '_v' → logprob: -12.289227485656738
    10. '	v' → logprob: -12.539227485656738

Token 372: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11290397495031357
    2. 'in' → logprob: -2.2379040718078613
    3. 'n' → logprob: -10.112903594970703
    4. ',' → logprob: -11.487903594970703
    5. '
' → logprob: -11.987903594970703
    6. '   ' → logprob: -12.237903594970703
    7. '	in' → logprob: -12.487903594970703
    8. ' ' → logprob: -12.612903594970703
    9. 'v' → logprob: -13.237903594970703
    10. 's' → logprob: -13.487903594970703

Token 373: ' generate' (ID: 10419)
  Prédit: 'generate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'generate' → logprob: -0.04859452322125435
    2. ' generate' → logprob: -3.0485944747924805
    3. '(generate' → logprob: -11.92359447479248
    4. '   ' → logprob: -14.67359447479248
    5. ' ' → logprob: -17.548595428466797
    6. '.generate' → logprob: -17.673595428466797
    7. '_generate' → logprob: -17.673595428466797
    8. 'enerate' → logprob: -18.423595428466797
    9. '  ' → logprob: -19.173595428466797
    10. 'Generate' → logprob: -19.673595428466797

Token 374: '_switch' (ID: 64715)
  Prédit: '_switch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_switch' → logprob: -0.0031803252641111612
    2. 'switch' → logprob: -5.753180503845215
    3. ' switch' → logprob: -14.128180503845215
    4. '_states' → logprob: -14.253180503845215
    5. '_' → logprob: -15.628180503845215
    6. 's' → logprob: -15.628180503845215
    7. '(n' → logprob: -15.628180503845215
    8. '_SWITCH' → logprob: -16.2531795501709
    9. '_state' → logprob: -16.3781795501709
    10. '_toggle' → logprob: -16.3781795501709

Token 375: '_states' (ID: 53795)
  Prédit: '_states'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_states' → logprob: -7.896309739408025e-07
    2. 'states' → logprob: -14.375000953674316
    3. '_state' → logprob: -15.625000953674316
    4. 'States' → logprob: -17.625
    5. ' states' → logprob: -17.875
    6. 's' → logprob: -19.25
    7. '```' → logprob: -19.375
    8. ' States' → logprob: -19.625
    9. '   ' → logprob: -19.75
    10. ' _' → logprob: -20.25

Token 376: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.1041145626222715e-05
    2. ' (' → logprob: -11.875011444091797
    3. '(' → logprob: -12.500011444091797
    4. 'n' → logprob: -15.750011444091797
    5. '
' → logprob: -17.625011444091797
    6. ',' → logprob: -18.125011444091797
    7. '(
' → logprob: -18.500011444091797
    8. '```' → logprob: -18.625011444091797
    9. ' ' → logprob: -19.000011444091797
    10. '((' → logprob: -19.500011444091797

Token 377: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -9.901345038088039e-05
    2. '):
' → logprob: -9.250099182128906
    3. ' ):' → logprob: -13.125099182128906
    4. ')' → logprob: -14.500099182128906
    5. '   ' → logprob: -15.750099182128906
    6. ':' → logprob: -15.875099182128906
    7. '):
' → logprob: -16.875099182128906
    8. '():' → logprob: -17.250099182128906
    9. '):

' → logprob: -18.625099182128906
    10. ']:' → logprob: -18.750099182128906

Token 378: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0198515597730875
    2. 'increment' → logprob: -4.0198516845703125
    3. ' increment' → logprob: -6.3948516845703125
    4. '
' → logprob: -11.269851684570312
    5. '   ' → logprob: -11.769851684570312
    6. '        
' → logprob: -12.019851684570312
    7. '_increment' → logprob: -13.769851684570312
    8. '.increment' → logprob: -15.019851684570312
    9. 'Increment' → logprob: -15.019851684570312
    10. '```' → logprob: -15.144851684570312

Token 379: ' increment' (ID: 24032)
  Prédit: 'increment'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'increment' (adapté à ' increment') → logprob: -0.025166476145386696
    2. '       ' → logprob: -3.7751665115356445
    3. ' increment' → logprob: -6.2751665115356445
    4. '   ' → logprob: -10.650166511535645
    5. '           ' → logprob: -11.275166511535645
    6. '.increment' → logprob: -16.650165557861328
    7. '
' → logprob: -16.650165557861328
    8. '```' → logprob: -17.650165557861328
    9. '_increment' → logprob: -17.900165557861328
    10. 'Increment' → logprob: -18.400165557861328

Token 380: '_counter' (ID: 35419)
  Prédit: '_counter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counter' → logprob: -4.320199877838604e-07
    2. 'counter' → logprob: -15.625
    3. '```' → logprob: -16.75
    4. ' _' → logprob: -17.625
    5. '(_' → logprob: -17.75
    6. '_c' → logprob: -18.0
    7. '
' → logprob: -18.25
    8. 'a' → logprob: -18.375
    9. 'Counter' → logprob: -18.5
    10. '_count' → logprob: -18.625

Token 381: '_if' (ID: 25821)
  Prédit: '_if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_if' → logprob: -0.0001105762057704851
    2. '_counter' → logprob: -9.125110626220703
    3. 'if' → logprob: -13.625110626220703
    4. 'If' → logprob: -15.000110626220703
    5. '(_' → logprob: -17.500110626220703
    6. '_token' → logprob: -18.125110626220703
    7. '(if' → logprob: -18.375110626220703
    8. '```' → logprob: -18.375110626220703
    9. '_IF' → logprob: -18.500110626220703
    10. '_in' → logprob: -18.625110626220703

Token 382: '_valid' (ID: 23321)
  Prédit: '_valid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_valid' → logprob: -0.31347841024398804
    2. 'valid' → logprob: -1.3134784698486328
    3. 'alid' → logprob: -9.313478469848633
    4. 'v' → logprob: -9.813478469848633
    5. '(v' → logprob: -10.563478469848633
    6. 'Valid' → logprob: -11.313478469848633
    7. 'val' → logprob: -11.938478469848633
    8. ' valid' → logprob: -11.938478469848633
    9. 'a' → logprob: -12.188478469848633
    10. 'al' → logprob: -12.563478469848633

Token 383: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -4.572941179503687e-05
    2. '(' → logprob: -10.125045776367188
    3. ' (' → logprob: -12.125045776367188
    4. '(
' → logprob: -16.875045776367188
    5. '(s' → logprob: -18.500045776367188
    6. '(n' → logprob: -19.500045776367188
    7. '\(' → logprob: -19.750045776367188
    8. ' ' → logprob: -20.000045776367188
    9. '
' → logprob: -20.250045776367188
    10. 'v' → logprob: -20.375045776367188

Token 384: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.8921695047756657e-05
    2. ' ,' → logprob: -10.500028610229492
    3. ',v' → logprob: -14.750028610229492
    4. '(' → logprob: -15.250028610229492
    5. ',
' → logprob: -15.250028610229492
    6. '(v' → logprob: -16.875028610229492
    7. ')' → logprob: -16.875028610229492
    8. '   ' → logprob: -17.000028610229492
    9. ',n' → logprob: -17.250028610229492
    10. '‌,' → logprob: -17.375028610229492

Token 385: ' ks' (ID: 81387)
  Prédit: 'ks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ks' → logprob: -0.038044821470975876
    2. ' ks' → logprob: -3.2880449295043945
    3. '.ks' → logprob: -13.663044929504395
    4. 'Ks' → logprob: -14.413044929504395
    5. '   ' → logprob: -14.788044929504395
    6. 'k' → logprob: -15.038044929504395
    7. ' ' → logprob: -15.288044929504395
    8. 'cks' → logprob: -15.788044929504395
    9. ' Ks' → logprob: -16.038043975830078
    10. '    ' → logprob: -16.163043975830078

Token 386: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005442153196781874
    2. ',p' → logprob: -7.75054407119751
    3. ' ,' → logprob: -9.250544548034668
    4. 'p' → logprob: -11.750544548034668
    5. ',m' → logprob: -11.750544548034668
    6. ',v' → logprob: -14.875544548034668
    7. 'm' → logprob: -15.000544548034668
    8. '   ' → logprob: -15.125544548034668
    9. ',n' → logprob: -15.250544548034668
    10. ' p' → logprob: -15.750544548034668

Token 387: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -2.2007883671903983e-05
    2. 'm' → logprob: -10.750021934509277
    3. ' p' → logprob: -14.625021934509277
    4. '   ' → logprob: -18.875022888183594
    5. 'ps' → logprob: -19.750022888183594
    6. 'a' → logprob: -20.000022888183594
    7. '
' → logprob: -20.250022888183594
    8. ' ' → logprob: -20.750022888183594
    9. 'pm' → logprob: -20.750022888183594
    10. 's' → logprob: -21.250022888183594

Token 388: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.310693111619912e-05
    2. ',a' → logprob: -10.750042915344238
    3. ' ,' → logprob: -10.875042915344238
    4. 'a' → logprob: -14.000042915344238
    5. '   ' → logprob: -14.125042915344238
    6. ')' → logprob: -14.375042915344238
    7. ',
' → logprob: -15.250042915344238
    8. '```' → logprob: -16.000043869018555
    9. '       ' → logprob: -17.125043869018555
    10. '[' → logprob: -17.375043869018555

Token 389: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.011048054322600365
    2. ' a' → logprob: -4.511047840118408
    3. '	a' → logprob: -16.26104736328125
    4. ')a' → logprob: -16.63604736328125
    5. '   ' → logprob: -17.26104736328125
    6. '_a' → logprob: -17.76104736328125
    7. ')' → logprob: -18.13604736328125
    8. '#a' → logprob: -18.51104736328125
    9. '[a' → logprob: -18.63604736328125
    10. '```' → logprob: -19.01104736328125

Token 390: '_cnt' (ID: 35412)
  Prédit: '_cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cnt' → logprob: -0.0001596771035110578
    2. 'cnt' → logprob: -8.75015926361084
    3. 'nt' → logprob: -14.25015926361084
    4. 'Cnt' → logprob: -15.12515926361084
    5. '_CNT' → logprob: -16.625160217285156
    6. '	cnt' → logprob: -16.625160217285156
    7. '_ct' → logprob: -16.750160217285156
    8. '_c' → logprob: -17.000160217285156
    9. '_cont' → logprob: -18.125160217285156
    10. '_' → logprob: -18.250160217285156

Token 391: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.2413245290517807
    2. ')' → logprob: -1.741324543952942
    3. '   ' → logprob: -3.2413244247436523
    4. ')
' → logprob: -11.491324424743652
    5. ')return' → logprob: -14.116324424743652
    6. '
' → logprob: -14.241324424743652
    7. ')

' → logprob: -14.366324424743652
    8. ' ' → logprob: -14.616324424743652
    9. ' )
' → logprob: -15.866324424743652
    10. ')`
' → logprob: -15.991324424743652

Token 392: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0001431114797014743
    2. 'return' → logprob: -8.875143051147461
    3. ' return' → logprob: -12.875143051147461
    4. '
' → logprob: -14.750143051147461
    5. '```' → logprob: -16.37514305114746
    6. '       ' → logprob: -16.50014305114746
    7. '	return' → logprob: -17.12514305114746
    8. '    
' → logprob: -17.37514305114746
    9. 'def' → logprob: -18.50014305114746
    10. '   ' → logprob: -18.87514305114746

Token 393: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06202269345521927
    2. 'return' (adapté à ' return') → logprob: -2.8120226860046387
    3. ' return' → logprob: -9.812023162841797
    4. 'print' → logprob: -16.562023162841797
    5. '	return' → logprob: -16.562023162841797
    6. '
' → logprob: -17.062023162841797
    7. '```' → logprob: -18.187023162841797
    8. ' ' → logprob: -18.562023162841797
    9. '    
' → logprob: -18.687023162841797
    10. '  ' → logprob: -19.187023162841797

Token 394: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3132616877555847
    2. ' a' → logprob: -1.3132617473602295
    3. '   ' → logprob: -19.188261032104492
    4. '	a' → logprob: -19.813261032104492
    5. ' ' → logprob: -20.813261032104492
    6. '_a' → logprob: -21.313261032104492
    7. ' ' → logprob: -21.688261032104492
    8. '(a' → logprob: -22.563261032104492
    9. '[a' → logprob: -22.938261032104492
    10. '  ' → logprob: -23.938261032104492

Token 395: '_cnt' (ID: 35412)
  Prédit: '_cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cnt' → logprob: -2.816093228830141e-06
    2. 'cnt' → logprob: -13.12500286102295
    3. 'a' → logprob: -14.62500286102295
    4. '_CNT' → logprob: -16.250001907348633
    5. 'Cnt' → logprob: -17.375001907348633
    6. '	cnt' → logprob: -17.750001907348633
    7. '_ct' → logprob: -17.875001907348633
    8. '[cnt' → logprob: -18.250001907348633
    9. '_cont' → logprob: -18.375001907348633
    10. '_cn' → logprob: -18.375001907348633

Token 396: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.36574100604048e-06
    2. '<|end|>' → logprob: -13.500004768371582
    3. '0' → logprob: -13.750004768371582
    4. '```' → logprob: -14.375004768371582
    5. ' [' → logprob: -14.625004768371582
    6. '
' → logprob: -14.875004768371582
    7. 'def' → logprob: -15.500004768371582
    8. ' ' → logprob: -16.375003814697266
    9. ')[' → logprob: -16.875003814697266
    10. '   ' → logprob: -17.750003814697266

Token 397: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -17.875
    3. '
' → logprob: -18.75
    4. '[' → logprob: -19.5
    5. '۰' → logprob: -20.125
    6. '   ' → logprob: -20.5
    7. '０' → logprob: -20.875
    8. '```' → logprob: -21.125
    9. '-' → logprob: -21.5
    10. ']' → logprob: -22.125

Token 398: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -6.392202976712724e-06
    2. ')
' → logprob: -12.125006675720215
    3. '}' → logprob: -14.375006675720215
    4. '<|end|>' → logprob: -15.500006675720215
    5. ' )' → logprob: -16.6250057220459
    6. ']' → logprob: -17.6250057220459
    7. ')}' → logprob: -18.3750057220459
    8. ')

' → logprob: -18.7500057220459
    9. ')return' → logprob: -18.7500057220459
    10. '),' → logprob: -18.8750057220459

Token 399: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.015407132916152477
    2. 'if' → logprob: -4.765407085418701
    3. 'n' → logprob: -5.015407085418701
    4. '#' → logprob: -9.01540756225586
    5. 'print' → logprob: -12.14040756225586
    6. '```' → logprob: -12.76540756225586
    7. 'for' → logprob: -13.51540756225586
    8. 'input' → logprob: -14.01540756225586
    9. 'data' → logprob: -14.26540756225586
    10. ' def' → logprob: -14.64040756225586

Token 400: ' print' (ID: 2123)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.07889287173748016
    2. ' main' → logprob: -2.578892946243286
    3. 'read' → logprob: -12.828892707824707
    4. 'run' → logprob: -16.203893661499023
    5. 'solve' → logprob: -16.328893661499023
    6. ' read' → logprob: -16.453893661499023
    7. ' solve' → logprob: -17.328893661499023
    8. '	main' → logprob: -17.703893661499023
    9. '_main' → logprob: -17.953893661499023
    10. 'def' → logprob: -18.828893661499023

Token 401: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -0.14800573885440826
    2. '(' → logprob: -2.273005723953247
    3. '_' → logprob: -4.273005962371826
    4. '_solution' → logprob: -5.148005962371826
    5. '_results' → logprob: -5.773005962371826
    6. '_(' → logprob: -6.023005962371826
    7. '_answer' → logprob: -6.273005962371826
    8. '_s' → logprob: -6.273005962371826
    9. 'result' → logprob: -6.648005962371826
    10. '_output' → logprob: -6.773005962371826

Token 402: '(result' (ID: 8111)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.4855135381221771
    2. '(' → logprob: -0.9855135679244995
    3. '(result' → logprob: -4.735513687133789
    4. '(n' → logprob: -6.485513687133789
    5. '(s' → logprob: -8.235513687133789
    6. '():' → logprob: -8.735513687133789
    7. '()' → logprob: -8.985513687133789
    8. '(print' → logprob: -9.235513687133789
    9. '(def' → logprob: -9.360513687133789
    10. '(value' → logprob: -9.360513687133789

Token 403: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0036791712045669556
    2. '):
' → logprob: -5.628679275512695
    3. ')' → logprob: -9.503679275512695
    4. '(result' → logprob: -13.378679275512695
    5. ':' → logprob: -13.878679275512695
    6. ' ):' → logprob: -14.503679275512695
    7. '):
' → logprob: -14.753679275512695
    8. ',result' → logprob: -14.878679275512695
    9. '   ' → logprob: -15.253679275512695
    10. ',' → logprob: -15.253679275512695

Token 404: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20163415372371674
    2. 'print' → logprob: -1.701634168624878
    3. ' print' → logprob: -8.451634407043457
    4. '```' → logprob: -12.076634407043457
    5. 'def' → logprob: -14.076634407043457
    6. '(print' → logprob: -14.576634407043457
    7. '    ' → logprob: -15.951634407043457
    8. '	print' → logprob: -15.951634407043457
    9. '    
' → logprob: -16.95163345336914
    10. ' ' → logprob: -17.20163345336914

Token 405: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -3.128163257315464e-07
    2. '   ' → logprob: -15.5
    3. '```' → logprob: -17.5
    4. ' print' → logprob: -19.25
    5. 'def' → logprob: -20.625
    6. 'pr' → logprob: -22.375
    7. '
' → logprob: -22.875
    8. 'prin' → logprob: -23.75
    9. '    
' → logprob: -24.25
    10. 'printf' → logprob: -24.375

Token 406: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.011047935113310814
    2. 'result' → logprob: -4.511047840118408
    3. '(' → logprob: -16.01104736328125
    4. ' result' → logprob: -17.63604736328125
    5. ',result' → logprob: -18.13604736328125
    6. '=result' → logprob: -18.63604736328125
    7. '[result' → logprob: -19.63604736328125
    8. 'Result' → logprob: -20.26104736328125
    9. '$result' → logprob: -20.63604736328125
    10. '	result' → logprob: -20.63604736328125

Token 407: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ')
' → logprob: -15.25
    3. ' )' → logprob: -17.375
    4. '())' → logprob: -19.0
    5. '))' → logprob: -19.625
    6. '()' → logprob: -19.875
    7. ')`' → logprob: -20.0
    8. '')' → logprob: -20.125
    9. '),' → logprob: -20.25
    10. ').' → logprob: -21.0

Token 408: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0024863574653863907
    2. 'if' → logprob: -6.002486228942871
    3. 'n' → logprob: -11.502486228942871
    4. '#' → logprob: -15.002486228942871
    5. '```' → logprob: -16.002487182617188
    6. ' def' → logprob: -16.127487182617188
    7. 'for' → logprob: -16.877487182617188
    8. 'ndef' → logprob: -17.002487182617188
    9. 'import' → logprob: -18.502487182617188
    10. ' if' → logprob: -18.627487182617188

Token 409: ' sl' (ID: 1925)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0003357006062287837
    2. ' main' → logprob: -8.000335693359375
    3. 'solve' → logprob: -15.875335693359375
    4. 'run' → logprob: -16.750335693359375
    5. '	main' → logprob: -18.750335693359375
    6. '_main' → logprob: -19.000335693359375
    7. 'read' → logprob: -20.000335693359375
    8. 'process' → logprob: -20.000335693359375
    9. 'def' → logprob: -20.000335693359375
    10. 'solution' → logprob: -20.125335693359375

Token 410: 'ove' (ID: 1048)
  Prédit: 'eep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eep' → logprob: -0.6917848587036133
    2. 'ove' → logprob: -0.8167848587036133
    3. '_main' → logprob: -4.316784858703613
    4. 'ug' → logprob: -4.441784858703613
    5. 'olve' → logprob: -4.816784858703613
    6. 'ow' → logprob: -5.191784858703613
    7. 'ice' → logprob: -5.566784858703613
    8. 'main' → logprob: -5.816784858703613
    9. 'im' → logprob: -6.066784858703613
    10. 'e' → logprob: -6.441784858703613

Token 411: '():
' (ID: 8595)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9764283299446106
    2. 'r' → logprob: -0.9764283299446106
    3. 's' → logprob: -2.476428270339966
    4. '_s' → logprob: -2.601428270339966
    5. 'solve' → logprob: -2.976428270339966
    6. '_logic' → logprob: -4.101428508758545
    7. '(' → logprob: -5.476428508758545
    8. 'n' → logprob: -5.726428508758545
    9. 'def' → logprob: -6.101428508758545
    10. '_solver' → logprob: -6.226428508758545

Token 412: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.056454312056303024
    2. 'def' → logprob: -2.9314544200897217
    3. 'n' → logprob: -6.556454181671143
    4. ' n' → logprob: -9.9314546585083
    5. ' def' → logprob: -9.9314546585083
    6. '    ' → logprob: -11.1814546585083
    7. '    
' → logprob: -11.4314546585083
    8. 'input' → logprob: -11.5564546585083
    9. '
' → logprob: -11.8064546585083
    10. '	n' → logprob: -12.9314546585083

Token 413: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.06082059442996979
    2. '   ' → logprob: -3.3108205795288086
    3. 'def' → logprob: -3.8108205795288086
    4. ' n' → logprob: -7.935820579528809
    5. '	n' → logprob: -11.310820579528809
    6. 'data' → logprob: -12.185820579528809
    7. 'import' → logprob: -12.435820579528809
    8. 'input' → logprob: -12.435820579528809
    9. 'ndef' → logprob: -13.185820579528809
    10. 'args' → logprob: -13.810820579528809

Token 414: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006459566066041589
    2. ',m' → logprob: -7.375646114349365
    3. ' ,' → logprob: -11.250645637512207
    4. '=' → logprob: -13.125645637512207
    5. 'm' → logprob: -13.250645637512207
    6. 'def' → logprob: -13.750645637512207
    7. '   ' → logprob: -14.750645637512207
    8. ',n' → logprob: -15.250645637512207
    9. ',b' → logprob: -15.750645637512207
    10. ' =' → logprob: -16.250646591186523

Token 415: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.4740855395793915
    2. ' m' → logprob: -0.9740855693817139
    3. '<|end|>' → logprob: -11.849085807800293
    4. ' ' → logprob: -14.474085807800293
    5. '	m' → logprob: -15.349085807800293
    6. '   ' → logprob: -15.474085807800293
    7. '  ' → logprob: -16.099084854125977
    8. ',m' → logprob: -16.224084854125977
    9. '_m' → logprob: -16.349084854125977
    10. '    ' → logprob: -16.724084854125977

Token 416: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.412871390581131
    2. '=' → logprob: -1.1628713607788086
    3. ' =' → logprob: -3.6628713607788086
    4. ' ,' → logprob: -12.662871360778809
    5. ',m' → logprob: -14.162871360778809
    6. '   ' → logprob: -14.287871360778809
    7. '<|end|>' → logprob: -14.912871360778809
    8. ')' → logprob: -15.662871360778809
    9. '=m' → logprob: -16.162872314453125
    10. 'm' → logprob: -16.162872314453125

Token 417: ' ks' (ID: 81387)
  Prédit: 'ks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ks' → logprob: -0.011050177738070488
    2. ' ks' → logprob: -4.511050224304199
    3. '.ks' → logprob: -13.5110502243042
    4. 'k' → logprob: -14.6360502243042
    5. 'Ks' → logprob: -15.3860502243042
    6. '   ' → logprob: -15.8860502243042
    7. '  ' → logprob: -16.511049270629883
    8. ' ' → logprob: -17.136049270629883
    9. 'KS' → logprob: -17.636049270629883
    10. ' k' → logprob: -18.636049270629883

Token 418: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16057038307189941
    2. ',' → logprob: -2.0355703830718994
    3. ' =' → logprob: -4.03557014465332
    4. '   ' → logprob: -9.91057014465332
    5. ' ,' → logprob: -12.28557014465332
    6. '  ' → logprob: -13.91057014465332
    7. ' ' → logprob: -14.03557014465332
    8. ',input' → logprob: -14.28557014465332
    9. '=input' → logprob: -14.41057014465332
    10. '    ' → logprob: -14.41057014465332

Token 419: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0031777136027812958
    2. ' p' → logprob: -5.753177642822266
    3. '   ' → logprob: -17.628177642822266
    4. ' ' → logprob: -18.753177642822266
    5. '	p' → logprob: -18.753177642822266
    6. '  ' → logprob: -19.503177642822266
    7. '    ' → logprob: -20.003177642822266
    8. '_p' → logprob: -20.253177642822266
    9. '
' → logprob: -20.503177642822266
    10. '<p' → logprob: -21.128177642822266

Token 420: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07888978719711304
    2. ' =' → logprob: -2.578889846801758
    3. '＝' → logprob: -17.453889846801758
    4. '   ' → logprob: -18.703889846801758
    5. '=

' → logprob: -19.203889846801758
    6. ',' → logprob: -19.453889846801758
    7. '=
' → logprob: -19.578889846801758
    8. ')' → logprob: -19.703889846801758
    9. ' =)' → logprob: -20.078889846801758
    10. ' ' → logprob: -20.078889846801758

Token 421: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.029750484973192215
    2. ' read' → logprob: -3.5297505855560303
    3. '   ' → logprob: -18.52975082397461
    4. '	read' → logprob: -18.77975082397461
    5. '(read' → logprob: -21.77975082397461
    6. '_read' → logprob: -22.40475082397461
    7. '.read' → logprob: -23.15475082397461
    8. '  ' → logprob: -24.02975082397461
    9. 'Read' → logprob: -24.40475082397461
    10. '読' → logprob: -25.27975082397461

Token 422: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -4.263011578586884e-05
    2. '_' → logprob: -10.125042915344238
    3. '_inputs' → logprob: -13.500042915344238
    4. 'input' → logprob: -14.250042915344238
    5. '_output' → logprob: -15.250042915344238
    6. '_in' → logprob: -17.000041961669922
    7. '_
' → logprob: -17.250041961669922
    8. '```' → logprob: -17.500041961669922
    9. '_line' → logprob: -18.125041961669922
    10. ' _' → logprob: -18.125041961669922

Token 423: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.2014472484588623
    2. '()' → logprob: -1.7014472484588623
    3. '()
' → logprob: -10.826447486877441
    4. '   ' → logprob: -11.701447486877441
    5. 'def' → logprob: -12.701447486877441
    6. '()

' → logprob: -13.201447486877441
    7. '()\' → logprob: -14.451447486877441
    8. '():
' → logprob: -16.451446533203125
    9. ' ()
' → logprob: -16.576446533203125
    10. '()`' → logprob: -16.951446533203125

Token 424: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030420009046792984
    2. 'result' → logprob: -3.6554200649261475
    3. '
' → logprob: -5.530419826507568
    4. ' result' → logprob: -9.530420303344727
    5. '    
' → logprob: -10.405420303344727
    6. 'r' → logprob: -11.030420303344727
    7. 'res' → logprob: -11.280420303344727
    8. '	result' → logprob: -12.030420303344727
    9. '```' → logprob: -13.030420303344727
    10. 'n' → logprob: -13.155420303344727

Token 425: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.0002930366899818182
    2. 'r' → logprob: -9.000292778015137
    3. 'res' → logprob: -9.500292778015137
    4. 'print' → logprob: -9.750292778015137
    5. '   ' → logprob: -10.500292778015137
    6. ' result' → logprob: -11.875292778015137
    7. 'return' → logprob: -13.375292778015137
    8. 'answer' → logprob: -15.500292778015137
    9. '
' → logprob: -15.750292778015137
    10. '	result' → logprob: -18.125293731689453

Token 426: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931586861610413
    2. ' =' → logprob: -0.6931586861610413
    3. '_' → logprob: -12.443159103393555
    4. ')' → logprob: -12.943159103393555
    5. ' ' → logprob: -13.068159103393555
    6. ',' → logprob: -14.318159103393555
    7. 's' → logprob: -14.943159103393555
    8. '   ' → logprob: -15.068159103393555
    9. '  ' → logprob: -15.193159103393555
    10. '<|end|>' → logprob: -15.318159103393555

Token 427: ' solve' (ID: 17722)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.038042180240154266
    2. ' solve' → logprob: -3.2880420684814453
    3. 'sol' → logprob: -14.663042068481445
    4. '   ' → logprob: -16.163042068481445
    5. '.solve' → logprob: -16.538042068481445
    6. ' ' → logprob: -16.788042068481445
    7. '  ' → logprob: -17.913042068481445
    8. '
' → logprob: -18.538042068481445
    9. 'sl' → logprob: -18.663042068481445
    10. 'solver' → logprob: -18.788042068481445

Token 428: '_logic' (ID: 131254)
  Prédit: '_logic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_logic' → logprob: -8.65707261255011e-06
    2. '_' → logprob: -12.250008583068848
    3. '_result' → logprob: -13.000008583068848
    4. 'logic' → logprob: -14.000008583068848
    5. '_log' → logprob: -14.875008583068848
    6. '_solution' → logprob: -15.125008583068848
    7. '(n' → logprob: -17.125009536743164
    8. '(_' → logprob: -17.625009536743164
    9. '_(' → logprob: -18.250009536743164
    10. '_lo' → logprob: -18.250009536743164

Token 429: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00016301481809932739
    2. '(' → logprob: -8.875163078308105
    3. ' (' → logprob: -10.750163078308105
    4. '   ' → logprob: -14.125163078308105
    5. '(
' → logprob: -14.250163078308105
    6. '```' → logprob: -15.500163078308105
    7. ' ' → logprob: -17.50016212463379
    8. '(N' → logprob: -18.62516212463379
    9. '
' → logprob: -19.12516212463379
    10. '    
' → logprob: -19.50016212463379

Token 430: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0027946571353822947
    2. ',n' → logprob: -6.0027947425842285
    3. '(n' → logprob: -8.12779426574707
    4. ' ,' → logprob: -11.12779426574707
    5. '(' → logprob: -12.37779426574707
    6. ',
' → logprob: -12.62779426574707
    7. 'n' → logprob: -14.50279426574707
    8. ',m' → logprob: -14.87779426574707
    9. ')' → logprob: -15.25279426574707
    10. '   ' → logprob: -15.75279426574707

Token 431: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -5.836499985889532e-05
    2. ' m' → logprob: -9.7500581741333
    3. ')m' → logprob: -19.375059127807617
    4. '   ' → logprob: -20.250059127807617
    5. '	m' → logprob: -21.000059127807617
    6. ')' → logprob: -21.000059127807617
    7. '```' → logprob: -21.750059127807617
    8. '
' → logprob: -22.750059127807617
    9. 'ms' → logprob: -22.750059127807617
    10. '  ' → logprob: -22.750059127807617

Token 432: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.5776860184123507e-06
    2. ',
' → logprob: -13.62500286102295
    3. ' ,' → logprob: -13.87500286102295
    4. '   ' → logprob: -15.00000286102295
    5. ',n' → logprob: -16.750001907348633
    6. ')' → logprob: -18.125001907348633
    7. '(n' → logprob: -18.250001907348633
    8. '       ' → logprob: -18.500001907348633
    9. '```' → logprob: -18.500001907348633
    10. 'n' → logprob: -18.750001907348633

Token 433: ' ks' (ID: 81387)
  Prédit: 'ks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ks' → logprob: -0.0017916783690452576
    2. ' ks' → logprob: -6.376791477203369
    3. 'p' → logprob: -9.376791954040527
    4. ' p' → logprob: -12.626791954040527
    5. 'k' → logprob: -13.501791954040527
    6. 'n' → logprob: -16.75179100036621
    7. ' ' → logprob: -17.00179100036621
    8. '   ' → logprob: -17.25179100036621
    9. 'Ks' → logprob: -17.37679100036621
    10. '.ks' → logprob: -18.00179100036621

Token 434: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.968312951968983e-06
    2. ',p' → logprob: -12.375009536743164
    3. ' ,' → logprob: -12.875009536743164
    4. 'p' → logprob: -13.500009536743164
    5. ',
' → logprob: -13.750009536743164
    6. ')' → logprob: -15.375009536743164
    7. '   ' → logprob: -15.500009536743164
    8. ',k' → logprob: -15.875009536743164
    9. '
' → logprob: -17.375009536743164
    10. '```' → logprob: -17.375009536743164

Token 435: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0031848405487835407
    2. ' p' → logprob: -5.753184795379639
    3. 'ks' → logprob: -11.878185272216797
    4. 's' → logprob: -15.753185272216797
    5. ' ' → logprob: -16.753185272216797
    6. ' ks' → logprob: -17.253185272216797
    7. 'k' → logprob: -17.378185272216797
    8. '   ' → logprob: -17.378185272216797
    9. '  ' → logprob: -18.628185272216797
    10. 'ps' → logprob: -19.128185272216797

Token 436: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.35195955634117126
    2. ')' → logprob: -1.6019595861434937
    3. '   ' → logprob: -2.351959466934204
    4. ')
' → logprob: -12.476959228515625
    5. '
' → logprob: -13.226959228515625
    6. ' )
' → logprob: -14.351959228515625
    7. ')

' → logprob: -15.476959228515625
    8. ' ' → logprob: -15.601959228515625
    9. '    
' → logprob: -15.726959228515625
    10. 'print' → logprob: -15.726959228515625

Token 437: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16140680015087128
    2. 'print' → logprob: -1.9114067554473877
    3. ' print' → logprob: -6.911406993865967
    4. '
' → logprob: -8.786406517028809
    5. '	print' → logprob: -10.911406517028809
    6. '    
' → logprob: -11.411406517028809
    7. '(print' → logprob: -13.536406517028809
    8. '_print' → logprob: -14.536406517028809
    9. '```' → logprob: -14.536406517028809
    10. '.print' → logprob: -15.161406517028809

Token 438: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0021896373946219683
    2. ' print' → logprob: -6.252189636230469
    3. '   ' → logprob: -8.252189636230469
    4. '
' → logprob: -15.752189636230469
    5. '	print' → logprob: -15.752189636230469
    6. '_print' → logprob: -17.50218963623047
    7. '```' → logprob: -18.12718963623047
    8. '  ' → logprob: -18.37718963623047
    9. '.print' → logprob: -18.75218963623047
    10. 'pr' → logprob: -18.87718963623047

Token 439: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -1.676292231422849e-05
    2. '_' → logprob: -11.125017166137695
    3. '(' → logprob: -13.750017166137695
    4. '(result' → logprob: -14.250017166137695
    5. '_(' → logprob: -16.250017166137695
    6. 'result' → logprob: -17.250017166137695
    7. '(_' → logprob: -17.500017166137695
    8. '_Result' → logprob: -17.625017166137695
    9. '_results' → logprob: -17.750017166137695
    10. '_RESULT' → logprob: -18.125017166137695

Token 440: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.0009130131802521646
    2. '(' → logprob: -7.000913143157959
    3. '(results' → logprob: -14.3759126663208
    4. '(
' → logprob: -15.2509126663208
    5. ' (' → logprob: -15.3759126663208
    6. '(resultado' → logprob: -15.8759126663208
    7. 'result' → logprob: -16.250913619995117
    8. '(res' → logprob: -16.750913619995117
    9. '(Result' → logprob: -17.625913619995117
    10. '(return' → logprob: -17.875913619995117

Token 441: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.392202976712724e-06
    2. ')
' → logprob: -12.125006675720215
    3. '())' → logprob: -14.375006675720215
    4. '()' → logprob: -14.875006675720215
    5. ' )' → logprob: -17.0000057220459
    6. ')

' → logprob: -19.0000057220459
    7. '))' → logprob: -20.0000057220459
    8. ')`' → logprob: -20.1250057220459
    9. '   ' → logprob: -20.3750057220459
    10. '）' → logprob: -20.5000057220459

Token 442: 'if' (ID: 366)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.09805462509393692
    2. 's' → logprob: -2.8480546474456787
    3. 'def' → logprob: -3.5980546474456787
    4. 'f' → logprob: -6.4730544090271
    5. 'n' → logprob: -6.4730544090271
    6. '_' → logprob: -6.5980544090271
    7. 'c' → logprob: -6.8480544090271
    8. 'r' → logprob: -7.0980544090271
    9. '#' → logprob: -7.2230544090271
    10. '_s' → logprob: -7.9730544090271

Token 443: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.12695971131324768
    2. '__' → logprob: -2.126959800720215
    3. 'name' → logprob: -11.376959800720215
    4. ' ' → logprob: -12.001959800720215
    5. '_name' → logprob: -12.001959800720215
    6. '_' → logprob: -12.251959800720215
    7. '___' → logprob: -12.876959800720215
    8. 'Name' → logprob: -15.626959800720215
    9. ' ' → logprob: -15.751959800720215
    10. ' _' → logprob: -16.3769588470459

Token 444: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0034501494374126196
    2. ' __' → logprob: -5.7534499168396
    3. ' ==' → logprob: -8.378450393676758
    4. '_' → logprob: -11.128450393676758
    5. '==' → logprob: -11.253450393676758
    6. '__.' → logprob: -12.628450393676758
    7. '___' → logprob: -13.003450393676758
    8. 'name' → logprob: -13.128450393676758
    9. '_name' → logprob: -13.128450393676758
    10. '__.__' → logprob: -13.378450393676758

Token 445: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -7.896309739408025e-07
    2. '__.__' → logprob: -14.875000953674316
    3. '==' → logprob: -15.625000953674316
    4. '___' → logprob: -16.75
    5. '____' → logprob: -17.0
    6. '__.' → logprob: -17.75
    7. '__('' → logprob: -17.875
    8. '__
' → logprob: -18.25
    9. 'name' → logprob: -18.625
    10. ' ==' → logprob: -18.625

Token 446: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0042422316037118435
    2. '==' → logprob: -5.754242420196533
    3. ' ==' → logprob: -7.004242420196533
    4. '=="' → logprob: -8.879241943359375
    5. '=='' → logprob: -11.254241943359375
    6. '_' → logprob: -13.754241943359375
    7. '__.__' → logprob: -14.504241943359375
    8. '___' → logprob: -14.754241943359375
    9. '__
' → logprob: -15.004241943359375
    10. '==
' → logprob: -15.129241943359375

Token 447: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.029778728261590004
    2. ''' → logprob: -3.5297787189483643
    3. ' "__' → logprob: -10.779778480529785
    4. '__' → logprob: -11.904778480529785
    5. ' '__' → logprob: -14.654778480529785
    6. '"name' → logprob: -16.7797794342041
    7. '"user' → logprob: -16.9047794342041
    8. ''"' → logprob: -17.0297794342041
    9. '("__' → logprob: -17.4047794342041
    10. '"_' → logprob: -18.0297794342041

Token 448: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0012362991692498326
    2. 'name' → logprob: -7.126236438751221
    3. '__' → logprob: -7.751236438751221
    4. '"' → logprob: -14.251235961914062
    5. ''' → logprob: -14.626235961914062
    6. '__':
' → logprob: -16.626235961914062
    7. '_main' → logprob: -16.626235961914062
    8. '```' → logprob: -16.626235961914062
    9. 'm' → logprob: -16.751235961914062
    10. ''name' → logprob: -17.126235961914062

Token 449: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.01815837249159813
    2. '__' → logprob: -4.018158435821533
    3. '__":
' → logprob: -12.268157958984375
    4. '__:' → logprob: -12.518157958984375
    5. '_' → logprob: -17.018157958984375
    6. '__.' → logprob: -18.143157958984375
    7. '':' → logprob: -18.143157958984375
    8. '__
' → logprob: -19.018157958984375
    9. '':
' → logprob: -19.143157958984375
    10. '__('' → logprob: -19.393157958984375

Token 450: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003959666937589645
    2. 'sl' → logprob: -5.628959655761719
    3. ' sl' → logprob: -8.003959655761719
    4. '	sl' → logprob: -10.753959655761719
    5. '_sl' → logprob: -13.878959655761719
    6. '	s' → logprob: -14.003959655761719
    7. '   ' → logprob: -14.253959655761719
    8. '    
' → logprob: -15.253959655761719
    9. '  ' → logprob: -15.628959655761719
    10. '(sl' → logprob: -15.628959655761719

Token 451: ' sl' (ID: 1925)
  Prédit: 'sl'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sl' (adapté à ' sl') → logprob: -4.668304245569743e-05
    2. 'solve' → logprob: -10.000046730041504
    3. 'sol' → logprob: -14.250046730041504
    4. 's' → logprob: -15.125046730041504
    5. ' sl' → logprob: -15.500046730041504
    6. '	sl' → logprob: -17.375045776367188
    7. 'sal' → logprob: -17.750045776367188
    8. 'slave' → logprob: -17.875045776367188
    9. '   ' → logprob: -18.250045776367188
    10. '_sl' → logprob: -18.500045776367188

Token 452: 'ove' (ID: 1048)
  Prédit: 'ove'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ove' → logprob: -1.8193366486229934e-05
    2. 'olve' → logprob: -11.500018119812012
    3. 'o' → logprob: -11.875018119812012
    4. 'ov' → logprob: -13.875018119812012
    5. 'ave' → logprob: -17.125019073486328
    6. 've' → logprob: -17.250019073486328
    7. 'over' → logprob: -17.500019073486328
    8. ' ove' → logprob: -18.125019073486328
    9. 'eve' → logprob: -19.250019073486328
    10. 'ovo' → logprob: -19.500019073486328

Token 453: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.0683535037969705e-05
    2. '()
' → logprob: -12.25001049041748
    3. '(' → logprob: -13.00001049041748
    4. ' ()' → logprob: -13.50001049041748
    5. '()`' → logprob: -14.12501049041748
    6. '();' → logprob: -14.75001049041748
    7. '()

' → logprob: -15.00001049041748
    8. '()"' → logprob: -15.50001049041748
    9. '()">' → logprob: -15.87501049041748
    10. '()<' → logprob: -16.250011444091797


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 451
Tokens correctement prédits (1ère position, stricte): 212
Tokens correctement prédits (1ère position, avec adaptation): 232
Tokens correctement prédits (top 10): 388
Précision stricte (1ère position): 47.01%
Précision adaptée (1ère position): 51.44%
Précision (top 10): 86.03%
================================================================================
