================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:18:52
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from collections import deque
from functools import reduce
from itertools import zip_longest
from operator import mul

def find_longest_path(tree_adjacency_lists):
    initial_queue = deque([(adjacent_node, 0) for adjacent_node in tree_adjacency_lists[0]])
    last_node_visited = 0
    
    while initial_queue:
        current_node, parent_node = initial_queue.popleft()
        last_node_visited = current_node
        for neighbor in tree_adjacency_lists[current_node]:
            if neighbor != parent_node:
                initial_queue.append((neighbor, current_node))

    parent_of_node = [-1] * len(tree_adjacency_lists)
    reconstruct_queue = deque([(neighbor, last_node_visited) for neighbor in tree_adjacency_lists[last_node_visited]])
    path_start_node, _ = 0, 0

    while reconstruct_queue:
        current_node, parent = reconstruct_queue.popleft()
        parent_of_node[current_node] = parent
        for neighbor in tree_adjacency_lists[current_node]:
            if neighbor != parent:
                reconstruct_queue.append((neighbor, current_node))
    
    path_from_last_to_first = [path_start_node]
    ancestor_pointer = path_start_node
    while ancestor_pointer != last_node_visited:
        ancestor_pointer = parent_of_node[ancestor_pointer]
        path_from_last_to_first.append(ancestor_pointer)
    
    return path_from_last_to_first

def compute_max_branching(tree_adjacency_lists, current_root, except_parent, required_depth):
    max_children_per_level = [1] * required_depth
    exploration_queue = deque([
        (adjacent_node, current_root, 1)
        for adjacent_node in tree_adjacency_lists[current_root]
        if adjacent_node != except_parent
    ])
    
    max_children_per_level[0] = len(exploration_queue)
    
    while exploration_queue:
        node, parent, level = exploration_queue.popleft()
        max_children_per_level[level] = max(
            max_children_per_level[level], 
            len(tree_adjacency_lists[node]) - 1
        )
        for neighbor in tree_adjacency_lists[node]:
            if neighbor != parent:
                exploration_queue.append((neighbor, node, level + 1))
    return max_children_per_level

def solve_tree_properties(number_of_nodes, tree_adjacency_lists):
    if number_of_nodes == 2:
        return 1, 2

    path_between_leaves = find_longest_path(tree_adjacency_lists)
    path_length = len(path_between_leaves)
    half_path_length = (path_length + 1) // 2

    if path_length % 2 == 0:
        mid_left_node = path_between_leaves[path_length // 2 - 1]
        mid_right_node = path_between_leaves[path_length // 2]
        left_branching = compute_max_branching(tree_adjacency_lists, mid_left_node, mid_right_node, half_path_length)
        right_branching = compute_max_branching(tree_adjacency_lists, mid_right_node, mid_left_node, half_path_length)
        
        total_leaf_count = 1
        for left_count, right_count in zip(left_branching, right_branching):
            total_leaf_count *= max(left_count, right_count)
        return len(left_branching), total_leaf_count * 2

    central_node = path_between_leaves[path_length // 2]
    central_branching = compute_max_branching(tree_adjacency_lists, central_node, None, half_path_length)
    minimal_leaf_count = reduce(mul, central_branching, 1)
    for neighbor in tree_adjacency_lists[central_node]:
        neighbor_to_central = compute_max_branching(tree_adjacency_lists, neighbor, central_node, half_path_length)
        central_to_neighbor = compute_max_branching(tree_adjacency_lists, central_node, neighbor, half_path_length)
        branching_product = 1
        for nb_count, cn_count in zip_longest(neighbor_to_central, central_to_neighbor):
            branching_product *= max(nb_count, cn_count)
        minimal_leaf_count = min(minimal_leaf_count, branching_product * 2)
    return len(central_branching), minimal_leaf_count

number_of_nodes = int(input())
tree_adjacency_lists = [set() for _ in range(number_of_nodes)]
for _ in range(number_of_nodes - 1):
    node_a, node_b = map(int, input().split())
    node_a -= 1
    node_b -= 1
    tree_adjacency_lists[node_a].add(node_b)
    tree_adjacency_lists[node_b].add(node_a)

result_depth, result_leaves = solve_tree_properties(number_of_nodes, tree_adjacency_lists)
print(result_depth, result_leaves)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' collections' (ID: 22690)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -1.0460870265960693
    2. 'default' → logprob: -1.1710870265960693
    3. 'abc' → logprob: -1.7960870265960693
    4. 'Counter' → logprob: -2.4210870265960693
    5. ' defaultdict' → logprob: -2.6710870265960693
    6. 'named' → logprob: -5.421087265014648
    7. ' Counter' → logprob: -5.546087265014648
    8. ' abc' → logprob: -6.046087265014648
    9. ' deque' → logprob: -6.421087265014648
    10. '```' → logprob: -6.796087265014648

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014316747896373272
    2. '.' → logprob: -5.014316558837891
    3. '\(' → logprob: -5.764316558837891
    4. '```' → logprob: -6.889316558837891
    5. '\' → logprob: -7.014316558837891
    6. '\n' → logprob: -7.264316558837891
    7. '[' → logprob: -8.01431655883789
    8. '(
' → logprob: -8.26431655883789
    9. 'import' → logprob: -8.38931655883789
    10. 'newline' → logprob: -8.38931655883789

Token 5: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.536668598651886
    2. 'd' → logprob: -1.5366685390472412
    3. 'a' → logprob: -2.661668539047241
    4. '\n' → logprob: -3.536668539047241
    5. '\' → logprob: -3.786668539047241
    6. '[' → logprob: -4.53666877746582
    7. 'newline' → logprob: -4.78666877746582
    8. '
' → logprob: -4.78666877746582
    9. ',' → logprob: -5.16166877746582
    10. '.' → logprob: -5.41166877746582

Token 6: ' functools' (ID: 142636)
  Prédit: ' queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' queue' → logprob: -0.5701848864555359
    2. ' collections' → logprob: -1.3201849460601807
    3. ' itertools' → logprob: -2.3201849460601807
    4. ' typing' → logprob: -3.8201849460601807
    5. ' sys' → logprob: -4.195184707641602
    6. ' heap' → logprob: -4.570184707641602
    7. ' os' → logprob: -4.695184707641602
    8. ' math' → logprob: -4.945184707641602
    9. ' copy' → logprob: -6.320184707641602
    10. ' datetime' → logprob: -7.445184707641602

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.16117030382156372
    2. 'import' → logprob: -1.911170244216919
    3. '_import' → logprob: -7.411170482635498
    4. '.' → logprob: -8.41117000579834
    5. '_' → logprob: -10.53617000579834
    6. ' ' → logprob: -10.78617000579834
    7. '	import' → logprob: -10.78617000579834
    8. ' .' → logprob: -10.91117000579834
    9. ' _' → logprob: -11.53617000579834
    10. '.import' → logprob: -11.91117000579834

Token 8: ' reduce' (ID: 10389)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.36401909589767456
    2. 'wrap' → logprob: -1.7390191555023193
    3. 'reduce' → logprob: -2.8640191555023193
    4. ' wraps' → logprob: -3.2390191555023193
    5. ' l' → logprob: -4.23901891708374
    6. 'partial' → logprob: -4.23901891708374
    7. 'cache' → logprob: -6.23901891708374
    8. 'cached' → logprob: -6.61401891708374
    9. 'cmp' → logprob: -7.23901891708374
    10. ' reduce' → logprob: -9.489019393920898

Token 9: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05680644512176514
    2. '\n' → logprob: -3.6818065643310547
    3. '\' → logprob: -4.181806564331055
    4. '(
' → logprob: -4.681806564331055
    5. '(lambda' → logprob: -6.306806564331055
    6. ',' → logprob: -6.931806564331055
    7. '```' → logprob: -7.306806564331055
    8. '\(' → logprob: -7.556806564331055
    9. '
' → logprob: -8.431806564331055
    10. 'import' → logprob: -8.556806564331055

Token 10: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.25427788496017456
    2. ',' → logprob: -2.2542779445648193
    3. '\' → logprob: -2.6292779445648193
    4. '(
' → logprob: -4.50427770614624
    5. '\n' → logprob: -4.75427770614624
    6. '```' → logprob: -5.25427770614624
    7. '`' → logprob: -5.37927770614624
    8. 'import' → logprob: -5.50427770614624
    9. 'def' → logprob: -5.87927770614624
    10. '\(' → logprob: -6.37927770614624

Token 11: ' itertools' (ID: 103178)
  Prédit: ' operator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.4900776147842407
    2. ' itertools' → logprob: -1.2400776147842407
    3. ' math' → logprob: -2.865077495574951
    4. 'operator' → logprob: -3.240077495574951
    5. 'math' → logprob: -6.615077495574951
    6. ' ' → logprob: -8.11507797241211
    7. 'it' → logprob: -9.11507797241211
    8. ' os' → logprob: -9.99007797241211
    9. ' typing' → logprob: -10.61507797241211
    10. ' heap' → logprob: -10.99007797241211

Token 12: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.3837525248527527
    2. 'import' → logprob: -1.3837525844573975
    3. '.' → logprob: -2.7587525844573975
    4. ' .' → logprob: -5.758752346038818
    5. '.import' → logprob: -6.633752346038818
    6. '	import' → logprob: -9.633752822875977
    7. ' ' → logprob: -10.258752822875977
    8. '.im' → logprob: -10.883752822875977
    9. '_import' → logprob: -10.883752822875977
    10. '.experimental' → logprob: -11.508752822875977

Token 13: ' zip' (ID: 16216)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.5854935050010681
    2. 'count' → logprob: -2.085493564605713
    3. 'com' → logprob: -2.335493564605713
    4. 'chain' → logprob: -2.835493564605713
    5. 'cycle' → logprob: -2.835493564605713
    6. 'group' → logprob: -3.335493564605713
    7. 'product' → logprob: -3.835493564605713
    8. 'per' → logprob: -4.085493564605713
    9. ' accumulate' → logprob: -4.585493564605713
    10. ' chain' → logprob: -5.085493564605713

Token 14: '_long' (ID: 42288)
  Prédit: '_long'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_long' → logprob: -0.0003733542689587921
    2. 'long' → logprob: -8.000372886657715
    3. 'Longest' → logprob: -11.000372886657715
    4. 'import' → logprob: -11.125372886657715
    5. ' longest' → logprob: -12.625372886657715
    6. '_exact' → logprob: -14.250372886657715
    7. 'from' → logprob: -14.750372886657715
    8. '```' → logprob: -14.875372886657715
    9. '_short' → logprob: -15.250372886657715
    10. '_LONG' → logprob: -15.250372886657715

Token 15: 'est' (ID: 376)
  Prédit: 'est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -1.6240566083070007e-06
    2. 'uest' → logprob: -13.625001907348633
    3. 'e' → logprob: -16.000001907348633
    4. 'es' → logprob: -16.375001907348633
    5. 'ist' → logprob: -17.250001907348633
    6. 'estand' → logprob: -17.625001907348633
    7. 'esture' → logprob: -17.875001907348633
    8. 'gest' → logprob: -18.000001907348633
    9. 'ест' → logprob: -18.125001907348633
    10. 'ext' → logprob: -18.125001907348633

Token 16: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11543484032154083
    2. '(
' → logprob: -2.6154348850250244
    3. '\' → logprob: -4.115434646606445
    4. '\n' → logprob: -4.615434646606445
    5. 'def' → logprob: -5.990434646606445
    6. '```' → logprob: -6.115434646606445
    7. 'import' → logprob: -6.490434646606445
    8. ',' → logprob: -7.240434646606445
    9. '
' → logprob: -7.365434646606445
    10. '()' → logprob: -7.740434646606445

Token 17: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.28485384583473206
    2. 'def' → logprob: -2.034853935241699
    3. '(
' → logprob: -2.784853935241699
    4. '\' → logprob: -3.784853935241699
    5. '```' → logprob: -5.159853935241699
    6. ',' → logprob: -5.284853935241699
    7. 'd' → logprob: -5.284853935241699
    8. '\n' → logprob: -5.409853935241699
    9. '
' → logprob: -5.534853935241699
    10. 'import' → logprob: -6.534853935241699

Token 18: ' operator' (ID: 11019)
  Prédit: ' operator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.6099793314933777
    2. 'operator' → logprob: -0.8599793314933777
    3. 'math' → logprob: -4.234979152679443
    4. ' math' → logprob: -4.234979152679443
    5. 'heap' → logprob: -6.859979152679443
    6. 'collections' → logprob: -6.984979152679443
    7. ' typing' → logprob: -7.609979152679443
    8. ' heap' → logprob: -7.609979152679443
    9. ' collections' → logprob: -7.984979152679443
    10. 'typing' → logprob: -8.109979629516602

Token 19: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.13323496282100677
    2. 'import' → logprob: -2.383234977722168
    3. '.' → logprob: -3.508234977722168
    4. ' .' → logprob: -6.258234977722168
    5. ' as' → logprob: -8.383234977722168
    6. ' ' → logprob: -9.008234977722168
    7. '<|end|>' → logprob: -9.008234977722168
    8. ',' → logprob: -10.383234977722168
    9. ' ,' → logprob: -11.133234977722168
    10. '  ' → logprob: -11.133234977722168

Token 20: ' mul' (ID: 9975)
  Prédit: ' add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.5825903415679932
    2. ' mul' → logprob: -1.5825903415679932
    3. 'add' → logprob: -2.332590341567993
    4. 'mul' → logprob: -3.207590341567993
    5. ' item' → logprob: -3.207590341567993
    6. ' ' → logprob: -4.082590103149414
    7. 'item' → logprob: -4.332590103149414
    8. 'getitem' → logprob: -5.082590103149414
    9. ' icon' → logprob: -5.707590103149414
    10. ' import' → logprob: -5.707590103149414

Token 21: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.914423406124115
    2. ',' → logprob: -1.7894234657287598
    3. 'def' → logprob: -2.0394234657287598
    4. '

' → logprob: -2.0394234657287598
    5. '\n' → logprob: -2.4144234657287598
    6. '\' → logprob: -3.9144234657287598
    7. 'n' → logprob: -5.03942346572876
    8. ',
' → logprob: -5.03942346572876
    9. '[' → logprob: -5.03942346572876
    10. '(' → logprob: -5.16442346572876

Token 22: 'def' (ID: 1314)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.2582211494445801
    2. 'def' → logprob: -1.88322114944458
    3. 'a' → logprob: -3.88322114944458
    4. '#' → logprob: -4.00822114944458
    5. '*' → logprob: -4.38322114944458
    6. '\' → logprob: -5.50822114944458
    7. 'n' → logprob: -5.63322114944458
    8. '`' → logprob: -5.88322114944458
    9. '```' → logprob: -6.25822114944458
    10. '(' → logprob: -6.63322114944458

Token 23: ' find' (ID: 1646)
  Prédit: ' product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' product' → logprob: -1.1645541191101074
    2. ' factorial' → logprob: -1.5395541191101074
    3. ' compose' → logprob: -1.9145541191101074
    4. ' reduce' → logprob: -2.2895541191101074
    5. ' multiply' → logprob: -2.9145541191101074
    6. ' ' → logprob: -3.1645541191101074
    7. ' map' → logprob: -3.6645541191101074
    8. ' flatten' → logprob: -4.164554119110107
    9. ' combine' → logprob: -4.539554119110107
    10. ' accumulate' → logprob: -5.039554119110107

Token 24: '_long' (ID: 42288)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.01533916313201189
    2. ' _' → logprob: -5.515339374542236
    3. '_max' → logprob: -5.640339374542236
    4. '_sub' → logprob: -6.390339374542236
    5. '(' → logprob: -6.765339374542236
    6. '_duplicates' → logprob: -7.640339374542236
    7. '_first' → logprob: -8.015338897705078
    8. '_all' → logprob: -8.265338897705078
    9. '_unique' → logprob: -8.390338897705078
    10. '_missing' → logprob: -8.515338897705078

Token 25: 'est' (ID: 376)
  Prédit: 'est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.0005389740690588951
    2. '```' → logprob: -9.37553882598877
    3. '_common' → logprob: -9.75053882598877
    4. '_prefix' → logprob: -9.87553882598877
    5. 'er' → logprob: -9.87553882598877
    6. 'gest' → logprob: -10.62553882598877
    7. 'estin' → logprob: -10.75053882598877
    8. '_' → logprob: -10.87553882598877
    9. 'uest' → logprob: -11.12553882598877
    10. 'esting' → logprob: -11.25053882598877

Token 26: '_path' (ID: 5558)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.007402173243463039
    2. '_sub' → logprob: -5.382401943206787
    3. '_pal' → logprob: -7.132401943206787
    4. '_match' → logprob: -7.632401943206787
    5. '_sequence' → logprob: -8.257402420043945
    6. '_word' → logprob: -8.632402420043945
    7. '_string' → logprob: -9.132402420043945
    8. '_suffix' → logprob: -9.257402420043945
    9. '_space' → logprob: -9.257402420043945
    10. '_matching' → logprob: -9.507402420043945

Token 27: '(tree' (ID: 44909)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02126348577439785
    2. '_' → logprob: -3.896263599395752
    3. ' (' → logprob: -8.771263122558594
    4. '<|end|>' → logprob: -8.896263122558594
    5. '_(' → logprob: -9.896263122558594
    6. '(_' → logprob: -10.146263122558594
    7. '(node' → logprob: -10.271263122558594
    8. '```' → logprob: -10.521263122558594
    9. '<|end|>' → logprob: -10.771263122558594
    10. '_path' → logprob: -10.896263122558594

Token 28: '_ad' (ID: 23782)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002279553795233369
    2. '):' → logprob: -6.127279758453369
    3. '[' → logprob: -10.127279281616211
    4. ' ,' → logprob: -10.502279281616211
    5. ')' → logprob: -11.627279281616211
    6. '   ' → logprob: -12.627279281616211
    7. ':' → logprob: -12.752279281616211
    8. ' ):' → logprob: -13.127279281616211
    9. ',
' → logprob: -13.252279281616211
    10. ',node' → logprob: -13.377279281616211

Token 29: 'jac' (ID: 77250)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.029797818511724472
    2. 'jac' → logprob: -3.5297977924346924
    3. 'jc' → logprob: -10.529797554016113
    4. 'ja' → logprob: -12.029797554016113
    5. 'jm' → logprob: -12.404797554016113
    6. 'js' → logprob: -12.904797554016113
    7. 'jf' → logprob: -12.904797554016113
    8. ' j' → logprob: -13.529797554016113
    9. 'jec' → logprob: -13.779797554016113
    10. '_j' → logprob: -13.904797554016113

Token 30: 'ency' (ID: 2799)
  Prédit: 'ency'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ency' → logprob: -0.003686174750328064
    2. 'ent' → logprob: -5.87868595123291
    3. '```' → logprob: -8.12868595123291
    4. ')' → logprob: -9.12868595123291
    5. 'def' → logprob: -9.25368595123291
    6. 'en' → logprob: -10.25368595123291
    7. 'acency' → logprob: -10.25368595123291
    8. 'e' → logprob: -10.37868595123291
    9. 'enc' → logprob: -10.50368595123291
    10. 'ents' → logprob: -10.69118595123291

Token 31: '_lists' (ID: 93609)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10632430762052536
    2. '):' → logprob: -2.6063241958618164
    3. '_list' → logprob: -3.7313241958618164
    4. ')' → logprob: -6.231324195861816
    5. '_matrix' → logprob: -8.356324195861816
    6. '_,' → logprob: -8.856324195861816
    7. ' ,' → logprob: -8.856324195861816
    8. '_lists' → logprob: -9.106324195861816
    9. '_dict' → logprob: -9.606324195861816
    10. 'List' → logprob: -9.856324195861816

Token 32: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007093389052897692
    2. '):' → logprob: -5.13209342956543
    3. ' ,' → logprob: -6.88209342956543
    4. ')' → logprob: -10.00709342956543
    5. ' ):' → logprob: -10.13209342956543
    6. '[' → logprob: -10.88209342956543
    7. ',node' → logprob: -11.75709342956543
    8. ':' → logprob: -12.50709342956543
    9. ' ' → logprob: -12.63209342956543
    10. '```' → logprob: -13.00709342956543

Token 33: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7049877643585205
    2. ':' → logprob: -0.9549877643585205
    3. '    ' → logprob: -2.7049877643585205
    4. '(' → logprob: -3.9549877643585205
    5. '    
' → logprob: -4.704987525939941
    6. '(n' → logprob: -5.204987525939941
    7. '\' → logprob: -5.454987525939941
    8. ' :' → logprob: -5.704987525939941
    9. '
' → logprob: -6.204987525939941
    10. '     
' → logprob: -6.204987525939941

Token 34: ' initial' (ID: 4871)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6410256624221802
    2. '
' → logprob: -2.1410255432128906
    3. '```' → logprob: -2.7660255432128906
    4. ' 
' → logprob: -2.8910255432128906
    5. '    
' → logprob: -2.8910255432128906
    6. '    ' → logprob: -3.3910255432128906
    7. ' visited' → logprob: -3.6410255432128906
    8. ' max' → logprob: -4.141025543212891
    9. 'n' → logprob: -4.141025543212891
    10. ' n' → logprob: -4.516025543212891

Token 35: '_queue' (ID: 25622)
  Prédit: '_queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_queue' → logprob: -1.582648515701294
    2. ' =' → logprob: -1.707648515701294
    3. '_path' → logprob: -1.707648515701294
    4. '_' → logprob: -1.832648515701294
    5. '=' → logprob: -2.332648515701294
    6. '_node' → logprob: -2.957648515701294
    7. '_nodes' → logprob: -2.957648515701294
    8. '_stack' → logprob: -3.832648515701294
    9. '_paths' → logprob: -4.207648277282715
    10. '_length' → logprob: -4.707648277282715

Token 36: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.002476016292348504
    2. '=' → logprob: -6.002476215362549
    3. '=[]' → logprob: -16.37747573852539
    4. ' =
' → logprob: -16.62747573852539
    5. ' ' → logprob: -16.75247573852539
    6. ',' → logprob: -16.87747573852539
    7. '.' → logprob: -17.12747573852539
    8. ')' → logprob: -17.62747573852539
    9. ' =[' → logprob: -18.00247573852539
    10. '.append' → logprob: -18.50247573852539

Token 37: ' deque' (ID: 90347)
  Prédit: ' deque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deque' → logprob: -0.006033196579664946
    2. 'deque' → logprob: -5.131033420562744
    3. ' [(' → logprob: -9.381032943725586
    4. ' ' → logprob: -11.756032943725586
    5. '[(' → logprob: -12.381032943725586
    6. '   ' → logprob: -12.631032943725586
    7. '(de' → logprob: -14.006032943725586
    8. ' list' → logprob: -14.131032943725586
    9. 'Deque' → logprob: -14.381032943725586
    10. ' [' → logprob: -14.381032943725586

Token 38: '([(' (ID: 156282)
  Prédit: '([('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([(' → logprob: -0.2682730257511139
    2. '([' → logprob: -1.8932729959487915
    3. '(' → logprob: -2.518273115158081
    4. '()' → logprob: -6.393272876739502
    5. '([]' → logprob: -7.268272876739502
    6. '([
' → logprob: -7.518272876739502
    7. '((' → logprob: -8.01827335357666
    8. '[(' → logprob: -8.14327335357666
    9. '(['' → logprob: -8.26827335357666
    10. '([...' → logprob: -8.89327335357666

Token 39: 'adj' (ID: 57001)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.012451136484742165
    2. '[],' → logprob: -5.762451171875
    3. '(' → logprob: -6.012451171875
    4. 'list' → logprob: -6.637451171875
    5. 'None' → logprob: -7.012451171875
    6. 'next' → logprob: -7.012451171875
    7. '1' → logprob: -7.262451171875
    8. '(),' → logprob: -7.512451171875
    9. ' ' → logprob: -8.012451171875
    10. '[' → logprob: -8.387451171875

Token 40: 'acent' (ID: 28063)
  Prédit: 'acency'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acency' → logprob: -0.12006843835115433
    2. '_list' → logprob: -3.2450685501098633
    3. '[' → logprob: -3.8700685501098633
    4. 'list' → logprob: -4.745068550109863
    5. '_lists' → logprob: -4.745068550109863
    6. 'acent' → logprob: -5.120068550109863
    7. ',' → logprob: -5.370068550109863
    8. ')' → logprob: -5.370068550109863
    9. 'ac' → logprob: -5.495068550109863
    10. 's' → logprob: -5.870068550109863

Token 41: '_node' (ID: 11390)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07880517840385437
    2. 's' → logprob: -2.9538052082061768
    3. '[' → logprob: -4.578804969787598
    4. '_nodes' → logprob: -5.953804969787598
    5. '[node' → logprob: -6.328804969787598
    6. ')' → logprob: -6.453804969787598
    7. ' ,' → logprob: -6.578804969787598
    8. ',node' → logprob: -6.578804969787598
    9. '(node' → logprob: -7.078804969787598
    10. '(' → logprob: -7.328804969787598

Token 42: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6352099776268005
    2. 's' → logprob: -0.7602099776268005
    3. '[' → logprob: -6.760210037231445
    4. ' ,' → logprob: -7.135210037231445
    5. ' s' → logprob: -8.635210037231445
    6. ')' → logprob: -9.135210037231445
    7. '=' → logprob: -9.635210037231445
    8. ',s' → logprob: -10.135210037231445
    9. '[s' → logprob: -10.572710037231445
    10. ' ' → logprob: -10.635210037231445

Token 43: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2341376543045044
    2. ' [' → logprob: -1.3591376543045044
    3. '0' → logprob: -1.8591376543045044
    4. '1' → logprob: -1.9841376543045044
    5. '[' → logprob: -2.484137535095215
    6. '[node' → logprob: -4.109137535095215
    7. ')' → logprob: -4.234137535095215
    8. ' {' → logprob: -5.359137535095215
    9. '{' → logprob: -5.359137535095215
    10. '[next' → logprob: -5.609137535095215

Token 44: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8364083170890808
    2. '1' → logprob: -0.8364083170890808
    3. 'adj' → logprob: -3.2114083766937256
    4. '[' → logprob: -3.5864083766937256
    5. '[node' → logprob: -3.8364083766937256
    6. 'None' → logprob: -4.0864081382751465
    7. ' ' → logprob: -5.7114081382751465
    8. 'node' → logprob: -6.0864081382751465
    9. 'depth' → logprob: -6.0864081382751465
    10. '[root' → logprob: -6.0864081382751465

Token 45: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004490057937800884
    2. ')])' → logprob: -5.754489898681641
    3. ',' → logprob: -6.754489898681641
    4. ' )' → logprob: -9.25448989868164
    5. ')]' → logprob: -11.12948989868164
    6. '),' → logprob: -11.62948989868164
    7. ')],' → logprob: -12.50448989868164
    8. ')])
' → logprob: -12.50448989868164
    9. ',)' → logprob: -12.62948989868164
    10. ']' → logprob: -13.12948989868164

Token 46: ' for' (ID: 395)
  Prédit: ')])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')])' → logprob: -0.35284119844436646
    2. ')' → logprob: -1.8528411388397217
    3. ',' → logprob: -2.1028411388397217
    4. '])' → logprob: -4.852841377258301
    5. ')]' → logprob: -5.227841377258301
    6. ' )' → logprob: -5.977841377258301
    7. ' ])' → logprob: -7.352841377258301
    8. ')],' → logprob: -7.352841377258301
    9. '),' → logprob: -8.1028413772583
    10. ')])
' → logprob: -8.2278413772583

Token 47: ' adjacent' (ID: 39069)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.13488902151584625
    2. ' adjacent' → logprob: -2.1348891258239746
    3. 'tree' → logprob: -6.134889125823975
    4. 'node' → logprob: -6.509889125823975
    5. '(adj' → logprob: -6.634889125823975
    6. '(' → logprob: -7.259889125823975
    7. ' (' → logprob: -8.009888648986816
    8. ' tree' → logprob: -8.009888648986816
    9. ' adjacency' → logprob: -8.009888648986816
    10. ' node' → logprob: -8.509888648986816

Token 48: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.00622987886890769
    2. '_nodes' → logprob: -6.006229877471924
    3. '_' → logprob: -6.256229877471924
    4. ' in' → logprob: -7.131229877471924
    5. '_tree' → logprob: -7.631229877471924
    6. ' ' → logprob: -8.756230354309082
    7. ')' → logprob: -9.506230354309082
    8. 'node' → logprob: -9.506230354309082
    9. '=node' → logprob: -10.006230354309082
    10. ' _' → logprob: -10.506230354309082

Token 49: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07901117950677872
    2. 'in' → logprob: -2.5790112018585205
    3. ',' → logprob: -9.954010963439941
    4. '<|end|>' → logprob: -10.454010963439941
    5. '	in' → logprob: -11.454010963439941
    6. ' ' → logprob: -11.454010963439941
    7. 's' → logprob: -12.079010963439941
    8. '<|end|>' → logprob: -12.329010963439941
    9. '_in' → logprob: -13.079010963439941
    10. ')' → logprob: -13.641510963439941

Token 50: ' tree' (ID: 8165)
  Prédit: ' tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tree' → logprob: -0.3142314553260803
    2. 'tree' → logprob: -1.3142313957214355
    3. ' range' → logprob: -7.8142313957214355
    4. '(tree' → logprob: -8.814231872558594
    5. ' ' → logprob: -9.189231872558594
    6. 'range' → logprob: -9.314231872558594
    7. '	tree' → logprob: -9.439231872558594
    8. '   ' → logprob: -10.751731872558594
    9. '```' → logprob: -10.814231872558594
    10. 'enumer' → logprob: -11.376731872558594

Token 51: '_ad' (ID: 23782)
  Prédit: '_ad'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ad' → logprob: -0.00018506382184568793
    2. '_adj' → logprob: -9.000185012817383
    3. 'adj' → logprob: -10.250185012817383
    4. '[' → logprob: -12.250185012817383
    5. '[node' → logprob: -12.625185012817383
    6. '_nodes' → logprob: -12.875185012817383
    7. ' adjacency' → logprob: -12.875185012817383
    8. ')' → logprob: -13.500185012817383
    9. 'ad' → logprob: -13.500185012817383
    10. '_' → logprob: -13.750185012817383

Token 52: 'jac' (ID: 77250)
  Prédit: 'jac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jac' → logprob: -0.3870711028575897
    2. 'acency' → logprob: -1.137071132659912
    3. 'j' → logprob: -9.012070655822754
    4. '_lists' → logprob: -10.512070655822754
    5. '_list' → logprob: -11.137070655822754
    6. ' adjacency' → logprob: -11.262070655822754
    7. 'adj' → logprob: -12.137070655822754
    8. 'lists' → logprob: -12.387070655822754
    9. 'list' → logprob: -13.012070655822754
    10. '_adj' → logprob: -13.637070655822754

Token 53: 'ency' (ID: 2799)
  Prédit: 'ency'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ency' → logprob: -0.11099301278591156
    2. 'ent' → logprob: -2.485992908477783
    3. '_lists' → logprob: -4.610992908477783
    4. '_list' → logprob: -4.735992908477783
    5. 'ents' → logprob: -6.235992908477783
    6. 'acency' → logprob: -7.610992908477783
    7. '```' → logprob: -9.235993385314941
    8. 'encv' → logprob: -9.985993385314941
    9. 'e' → logprob: -10.110993385314941
    10. 'y' → logprob: -10.235993385314941

Token 54: '_lists' (ID: 93609)
  Prédit: '_lists'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lists' → logprob: -0.001264282618649304
    2. 'lists' → logprob: -6.7512640953063965
    3. '_list' → logprob: -9.876264572143555
    4. ')' → logprob: -11.251264572143555
    5. '[' → logprob: -11.376264572143555
    6. '_nodes' → logprob: -12.376264572143555
    7. 'Lists' → logprob: -12.751264572143555
    8. 's' → logprob: -13.001264572143555
    9. ' lists' → logprob: -13.376264572143555
    10. 'list' → logprob: -13.376264572143555

Token 55: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1492532640695572
    2. '])' → logprob: -2.2742533683776855
    3. '.keys' → logprob: -3.7742533683776855
    4. '])]' → logprob: -5.7742533683776855
    5. ')' → logprob: -6.8992533683776855
    6. '[len' → logprob: -7.0242533683776855
    7. ']' → logprob: -7.1492533683776855
    8. ')])' → logprob: -7.1492533683776855
    9. '[next' → logprob: -7.1492533683776855
    10. '.values' → logprob: -7.3992533683776855

Token 56: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0043139224871993065
    2. ' ' → logprob: -5.504313945770264
    3. '1' → logprob: -8.629313468933105
    4. '-' → logprob: -10.504313468933105
    5. '   ' → logprob: -11.754313468933105
    6. '(' → logprob: -12.504313468933105
    7. 'root' → logprob: -12.754313468933105
    8. 'None' → logprob: -12.754313468933105
    9. 'next' → logprob: -13.129313468933105
    10. ' -' → logprob: -13.254313468933105

Token 57: ']])
' (ID: 62818)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.4606199264526367
    2. ']])' → logprob: -1.7106199264526367
    3. ']' → logprob: -2.2106199264526367
    4. ')])' → logprob: -2.9606199264526367
    5. '])]' → logprob: -3.7106199264526367
    6. ')' → logprob: -6.960619926452637
    7. ']))' → logprob: -7.210619926452637
    8. '],' → logprob: -7.460619926452637
    9. ' ])' → logprob: -9.085619926452637
    10. ']:' → logprob: -11.085619926452637

Token 58: '   ' (ID: 271)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08648769557476044
    2. ')' → logprob: -2.9614877700805664
    3. ':' → logprob: -4.211487770080566
    4. '   ' → logprob: -4.711487770080566
    5. ',
' → logprob: -6.086487770080566
    6. '):' → logprob: -6.336487770080566
    7. ' ,' → logprob: -6.461487770080566
    8. ',)' → logprob: -8.211487770080566
    9. '[:]' → logprob: -8.586487770080566
    10. '```' → logprob: -8.961487770080566

Token 59: ' last' (ID: 2174)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5589288473129272
    2. '   ' → logprob: -1.1839288473129272
    3. '<|end|>' → logprob: -3.308928966522217
    4. ' ' → logprob: -3.933928966522217
    5. ',' → logprob: -3.933928966522217
    6. '
' → logprob: -4.308928966522217
    7. ' while' → logprob: -4.558928966522217
    8. 'while' → logprob: -5.933928966522217
    9. 'current' → logprob: -5.933928966522217
    10. '```' → logprob: -6.308928966522217

Token 60: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.44650113582611084
    2. '_' → logprob: -1.3215011358261108
    3. '_queue' → logprob: -2.5715012550354004
    4. '_nodes' → logprob: -5.8215012550354
    5. '_used' → logprob: -6.0715012550354
    6. '_processed' → logprob: -6.4465012550354
    7. '_item' → logprob: -6.8215012550354
    8. '_path' → logprob: -6.8215012550354
    9. '_element' → logprob: -6.9465012550354
    10. ' _' → logprob: -7.3215012550354

Token 61: '_' (ID: 62)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014241318218410015
    2. ',' → logprob: -4.3892412185668945
    3. '=' → logprob: -6.3892412185668945
    4. ' ,' → logprob: -10.514241218566895
    5. 's' → logprob: -11.889241218566895
    6. ')' → logprob: -12.264241218566895
    7. ' ' → logprob: -12.389241218566895
    8. '<|end|>' → logprob: -13.014241218566895
    9. ' =)' → logprob: -14.389241218566895
    10. '<|end|>' → logprob: -14.451741218566895

Token 62: 'visited' (ID: 52453)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4611596167087555
    2. 'visited' → logprob: -1.586159586906433
    3. ',' → logprob: -1.961159586906433
    4. ' =' → logprob: -3.8361597061157227
    5. 'found' → logprob: -7.086159706115723
    6. 'and' → logprob: -7.961159706115723
    7. 'in' → logprob: -8.336159706115723
    8. 'seen' → logprob: -8.461159706115723
    9. 'level' → logprob: -9.336159706115723
    10. 'at' → logprob: -9.586159706115723

Token 63: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.010793599300086498
    2. '=' → logprob: -5.010793685913086
    3. ',' → logprob: -5.510793685913086
    4. ' ' → logprob: -10.885793685913086
    5. ' ,' → logprob: -12.135793685913086
    6. ')' → logprob: -13.635793685913086
    7. '  ' → logprob: -15.635793685913086
    8. ' None' → logprob: -15.635793685913086
    9. '=None' → logprob: -15.635793685913086
    10. 's' → logprob: -15.760793685913086

Token 64: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2382461428642273
    2. ' ' → logprob: -1.613246202468872
    3. ' (' → logprob: -4.988245964050293
    4. ' None' → logprob: -5.738245964050293
    5. '(' → logprob: -6.613245964050293
    6. 'None' → logprob: -7.113245964050293
    7. ' -' → logprob: -8.863245964050293
    8. ' initial' → logprob: -8.863245964050293
    9. 'initial' → logprob: -9.488245964050293
    10. '(None' → logprob: -9.613245964050293

Token 65: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009251520968973637
    2. 'None' → logprob: -5.009251594543457
    3. ' ' → logprob: -7.134251594543457
    4. '-' → logprob: -7.259251594543457
    5. '(' → logprob: -7.509251594543457
    6. ' None' → logprob: -8.634251594543457
    7. 'initial' → logprob: -9.134251594543457
    8. '(None' → logprob: -9.509251594543457
    9. ' -' → logprob: -10.134251594543457
    10. ' (' → logprob: -11.134251594543457

Token 66: '
    
' (ID: 15698)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.02383512258529663
    2. ' 
' → logprob: -5.273835182189941
    3. '<|end|>' → logprob: -5.398835182189941
    4. ',' → logprob: -5.898835182189941
    5. ' ' → logprob: -6.273835182189941
    6. ')' → logprob: -6.398835182189941
    7. ' while' → logprob: -6.523835182189941
    8. '\n' → logprob: -6.648835182189941
    9. ',
' → logprob: -7.023835182189941
    10. '   ' → logprob: -7.023835182189941

Token 67: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6349456906318665
    2. 'while' → logprob: -1.0099456310272217
    3. ' while' → logprob: -2.2599456310272217
    4. '    
' → logprob: -7.259945869445801
    5. '
' → logprob: -7.759945869445801
    6. '	while' → logprob: -8.6349458694458
    7. ')' → logprob: -10.3849458694458
    8. ',' → logprob: -10.6349458694458
    9. '```' → logprob: -11.0099458694458
    10. 'visited' → logprob: -11.2599458694458

Token 68: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.007524408865720034
    2. ' while' → logprob: -5.382524490356445
    3. 'visited' → logprob: -5.882524490356445
    4. '   ' → logprob: -9.257524490356445
    5. 'seen' → logprob: -11.632524490356445
    6. ' visited' → logprob: -12.882524490356445
    7. 'queue' → logprob: -12.882524490356445
    8. '	while' → logprob: -14.632524490356445
    9. 'def' → logprob: -14.882524490356445
    10. '    
' → logprob: -14.882524490356445

Token 69: ' initial' (ID: 4871)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initial' → logprob: -0.07895588129758835
    2. ' initial' → logprob: -2.578955888748169
    3. 'len' → logprob: -10.20395565032959
    4. ' len' → logprob: -11.07895565032959
    5. 'Initial' → logprob: -12.32895565032959
    6. '(initial' → logprob: -12.45395565032959
    7. 'True' → logprob: -12.95395565032959
    8. '	initial' → logprob: -13.32895565032959
    9. '_initial' → logprob: -14.82895565032959
    10. ' ' → logprob: -15.32895565032959

Token 70: '_queue' (ID: 25622)
  Prédit: '_queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_queue' → logprob: -2.236549335066229e-05
    2. 'queue' → logprob: -11.000021934509277
    3. '_' → logprob: -12.375021934509277
    4. '_QUEUE' → logprob: -14.625021934509277
    5. 'Queue' → logprob: -15.875021934509277
    6. '
' → logprob: -16.000022888183594
    7. ':' → logprob: -16.250022888183594
    8. ' queue' → logprob: -16.250022888183594
    9. '	queue' → logprob: -16.750022888183594
    10. '_
' → logprob: -16.875022888183594

Token 71: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01838335394859314
    2. '):' → logprob: -4.018383502960205
    3. '>:' → logprob: -9.018383026123047
    4. ':**' → logprob: -10.268383026123047
    5. '():' → logprob: -11.018383026123047
    6. 'and' → logprob: -11.268383026123047
    7. ' :' → logprob: -11.768383026123047
    8. ')' → logprob: -11.768383026123047
    9. ':not' → logprob: -12.143383026123047
    10. '}:' → logprob: -12.268383026123047

Token 72: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23125743865966797
    2. '   ' → logprob: -2.481257438659668
    3. ',' → logprob: -2.606257438659668
    4. ':' → logprob: -3.606257438659668
    5. ' node' → logprob: -5.856257438659668
    6. '):' → logprob: -5.981257438659668
    7. ' current' → logprob: -6.231257438659668
    8. '    ' → logprob: -6.356257438659668
    9. 'current' → logprob: -6.731257438659668
    10. '    
' → logprob: -6.981257438659668

Token 73: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.34413769841194153
    2. 'current' (adapté à ' current') → logprob: -1.5941376686096191
    3. ' node' → logprob: -2.594137668609619
    4. 'node' → logprob: -4.469137668609619
    5. '       ' → logprob: -7.844137668609619
    6. '   ' → logprob: -8.594138145446777
    7. '```' → logprob: -8.719138145446777
    8. ' next' → logprob: -8.844138145446777
    9. ' deque' → logprob: -8.969138145446777
    10. 'next' → logprob: -8.969138145446777

Token 74: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.001501652062870562
    2. '_queue' → logprob: -6.626501560211182
    3. '_' → logprob: -9.62650203704834
    4. ',_' → logprob: -11.00150203704834
    5. ',' → logprob: -11.62650203704834
    6. '_,' → logprob: -11.75150203704834
    7. ')' → logprob: -11.87650203704834
    8. '_tuple' → logprob: -11.87650203704834
    9. ')_' → logprob: -12.00150203704834
    10. '_item' → logprob: -12.25150203704834

Token 75: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2471589798224159e-05
    2. ' ,' → logprob: -12.000012397766113
    3. ',current' → logprob: -13.375012397766113
    4. ',node' → logprob: -13.375012397766113
    5. ',next' → logprob: -14.875012397766113
    6. ',length' → logprob: -14.875012397766113
    7. '=' → logprob: -14.875012397766113
    8. ',d' → logprob: -14.875012397766113
    9. ',n' → logprob: -15.125012397766113
    10. '‌,' → logprob: -15.875012397766113

Token 76: ' parent' (ID: 5980)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' current' → logprob: -1.0494279861450195
    2. 'current' → logprob: -1.6744279861450195
    3. 'distance' → logprob: -1.6744279861450195
    4. ' distance' → logprob: -2.0494279861450195
    5. 'depth' → logprob: -2.6744279861450195
    6. ' depth' → logprob: -3.1744279861450195
    7. ' path' → logprob: -4.4244279861450195
    8. 'path' → logprob: -4.9244279861450195
    9. 'dist' → logprob: -5.5494279861450195
    10. 'length' → logprob: -5.7994279861450195

Token 77: '_node' (ID: 11390)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10471824556589127
    2. '=' → logprob: -3.2297182083129883
    3. '_distance' → logprob: -3.7297182083129883
    4. '_' → logprob: -4.854718208312988
    5. '_depth' → logprob: -4.854718208312988
    6. ')' → logprob: -4.979718208312988
    7. '_index' → logprob: -5.479718208312988
    8. ',' → logprob: -5.854718208312988
    9. '_node' → logprob: -5.979718208312988
    10. '_dist' → logprob: -7.354718208312988

Token 78: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06996133178472519
    2. '=' → logprob: -2.6949613094329834
    3. ',' → logprob: -10.694961547851562
    4. ' ' → logprob: -13.819961547851562
    5. '    ' → logprob: -14.944961547851562
    6. ')' → logprob: -15.194961547851562
    7. '   ' → logprob: -15.569961547851562
    8. '        ' → logprob: -15.694961547851562
    9. ' in' → logprob: -16.069961547851562
    10. ' ,' → logprob: -16.194961547851562

Token 79: ' initial' (ID: 4871)
  Prédit: ' initial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' initial' → logprob: -0.6932675838470459
    2. 'initial' → logprob: -0.6932675838470459
    3. '	initial' → logprob: -9.943267822265625
    4. '(initial' → logprob: -10.693267822265625
    5. '<|end|>' → logprob: -11.693267822265625
    6. '_initial' → logprob: -11.693267822265625
    7. ' current' → logprob: -12.193267822265625
    8. ' ' → logprob: -12.193267822265625
    9. 'current' → logprob: -12.318267822265625
    10. '   ' → logprob: -12.318267822265625

Token 80: '_queue' (ID: 25622)
  Prédit: '_queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_queue' → logprob: -0.00034774013329297304
    2. 'queue' → logprob: -8.250348091125488
    3. '_node' → logprob: -10.000348091125488
    4. ')' → logprob: -11.375348091125488
    5. 'Queue' → logprob: -11.375348091125488
    6. '_' → logprob: -12.125348091125488
    7. '_QUEUE' → logprob: -13.125348091125488
    8. ' queue' → logprob: -13.375348091125488
    9. '_tuple' → logprob: -13.500348091125488
    10. '```' → logprob: -14.000348091125488

Token 81: '.p' (ID: 1201)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1603306531906128
    2. ' =' → logprob: -1.9103306531906128
    3. '[' → logprob: -9.660330772399902
    4. '.' → logprob: -11.410330772399902
    5. ' ' → logprob: -11.660330772399902
    6. '.pop' → logprob: -12.285330772399902
    7. ')' → logprob: -12.535330772399902
    8. ',' → logprob: -12.910330772399902
    9. '.dequeue' → logprob: -13.410330772399902
    10. ' in' → logprob: -13.660330772399902

Token 82: 'opleft' (ID: 182170)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.4290291965007782
    2. 'opleft' → logprob: -1.0540292263031006
    3. '_op' → logprob: -9.42902946472168
    4. 'opt' → logprob: -9.55402946472168
    5. '(op' → logprob: -10.05402946472168
    6. 'opl' → logprob: -10.92902946472168
    7. 'opup' → logprob: -11.17902946472168
    8. ' op' → logprob: -11.42902946472168
    9. 'оп' → logprob: -11.55402946472168
    10. 'opf' → logprob: -11.67902946472168

Token 83: '()
' (ID: 1234)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.023162841796875
    2. '
' → logprob: -1.273162841796875
    3. '<|end|>' → logprob: -1.773162841796875
    4. '<|end|>' → logprob: -3.273162841796875
    5. '[' → logprob: -4.023162841796875
    6. '    
' → logprob: -4.023162841796875
    7. '        
' → logprob: -4.148162841796875
    8. ' 
' → logprob: -4.148162841796875
    9. '       ' → logprob: -4.273162841796875
    10. ')' → logprob: -4.273162841796875

Token 84: '       ' (ID: 309)
  Prédit: '        
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '        
' → logprob: -1.0034630298614502
    2. '       ' → logprob: -1.8784630298614502
    3. '
' → logprob: -2.12846302986145
    4. ' 
' → logprob: -2.37846302986145
    5. '    
' → logprob: -3.00346302986145
    6. ' ' → logprob: -3.00346302986145
    7. '        ' → logprob: -3.62846302986145
    8. '   ' → logprob: -3.62846302986145
    9. '  
' → logprob: -4.003462791442871
    10. '    ' → logprob: -4.003462791442871

Token 85: ' last' (ID: 2174)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6639474630355835
    2. 'current' → logprob: -1.7889474630355835
    3. ' current' → logprob: -1.9139474630355835
    4. '
' → logprob: -2.163947582244873
    5. ' for' → logprob: -2.288947582244873
    6. ' ' → logprob: -3.288947582244873
    7. 'parent' → logprob: -3.413947582244873
    8. 'for' → logprob: -3.663947582244873
    9. '   ' → logprob: -3.788947582244873
    10. ' parent' → logprob: -3.913947582244873

Token 86: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.0036460417322814465
    2. '_' → logprob: -5.878645896911621
    3. '_token' → logprob: -7.253645896911621
    4. ' _' → logprob: -9.878645896911621
    5. '_space' → logprob: -11.253645896911621
    6. '_code' → logprob: -12.128645896911621
    7. 'node' → logprob: -12.253645896911621
    8. '_user' → logprob: -12.378645896911621
    9. '_line' → logprob: -12.753645896911621
    10. '_name' → logprob: -12.753645896911621

Token 87: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0032134840730577707
    2. ' =' → logprob: -5.878213405609131
    3. '=' → logprob: -8.878213882446289
    4. 'visited' → logprob: -9.128213882446289
    5. ' _' → logprob: -9.628213882446289
    6. '_=' → logprob: -9.878213882446289
    7. 'Visited' → logprob: -11.003213882446289
    8. '<|end|>' → logprob: -11.378213882446289
    9. ' ' → logprob: -12.628213882446289
    10. '=_' → logprob: -12.753213882446289

Token 88: 'visited' (ID: 52453)
  Prédit: 'visited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.0018422520952299237
    2. 'current' → logprob: -6.376842021942139
    3. 'parent' → logprob: -9.751842498779297
    4. ' visited' → logprob: -10.001842498779297
    5. '0' → logprob: -11.126842498779297
    6. ' ' → logprob: -12.001842498779297
    7. 'node' → logprob: -13.126842498779297
    8. ' current' → logprob: -13.376842498779297
    9. 'Visited' → logprob: -13.501842498779297
    10. 'vis' → logprob: -14.376842498779297

Token 89: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03823759779334068
    2. '=' → logprob: -3.2882375717163086
    3. ',' → logprob: -8.663237571716309
    4. ' ' → logprob: -11.663237571716309
    5. ' ,' → logprob: -11.663237571716309
    6. ' =
' → logprob: -12.413237571716309
    7. '<|end|>' → logprob: -14.538237571716309
    8. '=

' → logprob: -15.413237571716309
    9. ' +=' → logprob: -15.538237571716309
    10. ' |=' → logprob: -15.788237571716309

Token 90: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.474078893661499
    2. 'current' → logprob: -0.974078893661499
    3. '	current' → logprob: -13.724079132080078
    4. 'urrent' → logprob: -15.974079132080078
    5. 'parent' → logprob: -15.974079132080078
    6. '(current' → logprob: -16.349079132080078
    7. '    ' → logprob: -16.724079132080078
    8. '$current' → logprob: -16.724079132080078
    9. 'Current' → logprob: -16.849079132080078
    10. '   ' → logprob: -16.974079132080078

Token 91: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -9.507972572464496e-05
    2. '_token' → logprob: -9.75009536743164
    3. '_' → logprob: -10.37509536743164
    4. 'node' → logprob: -13.87509536743164
    5. ')_' → logprob: -14.50009536743164
    6. '_NODE' → logprob: -14.62509536743164
    7. '_Node' → logprob: -14.87509536743164
    8. 't' → logprob: -15.00009536743164
    9. '_t' → logprob: -15.12509536743164
    10. '_code' → logprob: -15.12509536743164

Token 92: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.24424868822097778
    2. '       ' → logprob: -1.994248628616333
    3. '        
' → logprob: -2.619248628616333
    4. '    
' → logprob: -5.994248867034912
    5. 'for' → logprob: -6.119248867034912
    6. ' for' → logprob: -6.994248867034912
    7. ' 
' → logprob: -7.244248867034912
    8. '  
' → logprob: -7.744248867034912
    9. '   ' → logprob: -7.994248867034912
    10. '
' → logprob: -9.244248390197754

Token 93: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0735894441604614
    2. '        
' → logprob: -1.0735894441604614
    3. '
' → logprob: -1.3235894441604614
    4. ' for' → logprob: -3.448589324951172
    5. ',' → logprob: -5.323589324951172
    6. 'for' → logprob: -5.448589324951172
    7. '   ' → logprob: -5.823589324951172
    8. '    
' → logprob: -6.448589324951172
    9. ' 
' → logprob: -6.448589324951172
    10. '  
' → logprob: -7.073589324951172

Token 94: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.03906026855111122
    2. ' for' → logprob: -3.539060354232788
    3. '   ' → logprob: -5.414060115814209
    4. '       ' → logprob: -6.039060115814209
    5. '        
' → logprob: -6.664060115814209
    6. '
' → logprob: -7.414060115814209
    7. 'distance' → logprob: -8.539060592651367
    8. '    
' → logprob: -9.289060592651367
    9. '0' → logprob: -9.914060592651367
    10. 'current' → logprob: -10.289060592651367

Token 95: ' neighbor' (ID: 13034)
  Prédit: 'neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -0.8604092001914978
    2. 'adj' → logprob: -1.3604092597961426
    3. ' neighbor' → logprob: -2.1104092597961426
    4. ' next' → logprob: -2.6104092597961426
    5. ' adjacent' → logprob: -2.9854092597961426
    6. 'next' → logprob: -3.1104092597961426
    7. ' child' → logprob: -4.110409259796143
    8. 'child' → logprob: -4.360409259796143
    9. ' adj' → logprob: -7.610409259796143
    10. 'node' → logprob: -8.485408782958984

Token 96: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04867831990122795
    2. 'in' → logprob: -3.048678398132324
    3. ',' → logprob: -9.673678398132324
    4. ' ' → logprob: -11.423678398132324
    5. '	in' → logprob: -11.798678398132324
    6. '_in' → logprob: -12.298678398132324
    7. '<|end|>' → logprob: -14.798678398132324
    8. ')' → logprob: -15.048678398132324
    9. '```' → logprob: -15.048678398132324
    10. ',in' → logprob: -15.111178398132324

Token 97: ' tree' (ID: 8165)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.16052387654781342
    2. ' tree' → logprob: -1.9105238914489746
    3. '(tree' → logprob: -8.160523414611816
    4. '	tree' → logprob: -11.410523414611816
    5. '   ' → logprob: -13.910523414611816
    6. ' ' → logprob: -14.535523414611816
    7. '[' → logprob: -15.160523414611816
    8. 'range' → logprob: -15.410523414611816
    9. '.tree' → logprob: -15.535523414611816
    10. 'tre' → logprob: -15.910523414611816

Token 98: '_ad' (ID: 23782)
  Prédit: '_ad'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ad' → logprob: -0.00017767686222214252
    2. '[current' → logprob: -9.125177383422852
    3. '_adj' → logprob: -9.625177383422852
    4. '[node' → logprob: -13.750177383422852
    5. 'adj' → logprob: -14.125177383422852
    6. '   ' → logprob: -15.625177383422852
    7. ' adjacency' → logprob: -15.875177383422852
    8. '[' → logprob: -16.00017738342285
    9. '_[' → logprob: -16.37517738342285
    10. 'current' → logprob: -16.50017738342285

Token 99: 'jac' (ID: 77250)
  Prédit: 'jac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jac' → logprob: -0.00033903829171322286
    2. 'acency' → logprob: -8.00033950805664
    3. 'j' → logprob: -12.62533950805664
    4. 'yac' → logprob: -16.50033950805664
    5. 'Jac' → logprob: -16.50033950805664
    6. ' jac' → logprob: -16.75033950805664
    7. ' adjacency' → logprob: -17.12533950805664
    8. 'ac' → logprob: -18.50033950805664
    9. 'iac' → logprob: -19.00033950805664
    10. 'd' → logprob: -19.50033950805664

Token 100: 'ency' (ID: 2799)
  Prédit: 'ency'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ency' → logprob: -0.16366241872310638
    2. 'acency' → logprob: -1.9136624336242676
    3. 'list' → logprob: -6.788662433624268
    4. 'acy' → logprob: -6.913662433624268
    5. '_lists' → logprob: -8.53866195678711
    6. 'lists' → logprob: -8.66366195678711
    7. '_list' → logprob: -8.66366195678711
    8. 'cy' → logprob: -8.66366195678711
    9. 'ac' → logprob: -9.16366195678711
    10. ' lists' → logprob: -9.28866195678711

Token 101: '_lists' (ID: 93609)
  Prédit: '_lists'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lists' → logprob: -0.0009549325914122164
    2. 'lists' → logprob: -7.125955104827881
    3. 's' → logprob: -9.250954627990723
    4. 'Lists' → logprob: -11.000954627990723
    5. '[' → logprob: -11.375954627990723
    6. 'ists' → logprob: -12.625954627990723
    7. ' lists' → logprob: -12.625954627990723
    8. '_list' → logprob: -13.000954627990723
    9. '       ' → logprob: -13.125954627990723
    10. '   ' → logprob: -13.125954627990723

Token 102: '[current' (ID: 49470)
  Prédit: '[current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[current' → logprob: -4.990154047845863e-05
    2. '[' → logprob: -11.000049591064453
    3. 'current' → logprob: -11.125049591064453
    4. ' [' → logprob: -11.875049591064453
    5. '   ' → logprob: -12.500049591064453
    6. '[cur' → logprob: -12.875049591064453
    7. ' current' → logprob: -13.375049591064453
    8. '[
' → logprob: -13.375049591064453
    9. '```' → logprob: -14.250049591064453
    10. '[curr' → logprob: -15.500049591064453

Token 103: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -2.7372048862162046e-05
    2. 'node' → logprob: -10.625027656555176
    3. '[node' → logprob: -13.375027656555176
    4. '[' → logprob: -15.375027656555176
    5. '_NODE' → logprob: -15.625027656555176
    6. '_' → logprob: -15.750027656555176
    7. '][' → logprob: -16.25002670288086
    8. '	node' → logprob: -16.37502670288086
    9. ']' → logprob: -16.37502670288086
    10. ' node' → logprob: -16.50002670288086

Token 104: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.030786434188485146
    2. ']' → logprob: -4.655786514282227
    3. ']:
' → logprob: -4.655786514282227
    4. ':' → logprob: -5.405786514282227
    5. '):' → logprob: -5.780786514282227
    6. ' ]' → logprob: -6.780786514282227
    7. ' if' → logprob: -6.780786514282227
    8. '       ' → logprob: -7.905786514282227
    9. '):
' → logprob: -8.280786514282227
    10. ']:
' → logprob: -8.530786514282227

Token 105: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.37721267342567444
    2. ' if' → logprob: -1.502212643623352
    3. 'if' → logprob: -2.8772127628326416
    4. '       ' → logprob: -4.6272125244140625
    5. ' current' → logprob: -4.7522125244140625
    6. 'current' → logprob: -4.7522125244140625
    7. '   ' → logprob: -6.2522125244140625
    8. 'initial' → logprob: -6.3772125244140625
    9. ':
' → logprob: -7.2522125244140625
    10. '        ' → logprob: -7.3772125244140625

Token 106: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.15940746665000916
    2. ' if' → logprob: -2.034407377243042
    3. 'initial' → logprob: -4.284407615661621
    4. ' initial' → logprob: -6.034407615661621
    5. '   ' → logprob: -8.409407615661621
    6. '           ' → logprob: -8.909407615661621
    7. '               ' → logprob: -10.534407615661621
    8. '    ' → logprob: -12.159407615661621
    9. 'queue' → logprob: -12.159407615661621
    10. 'not' → logprob: -12.534407615661621

Token 107: ' neighbor' (ID: 13034)
  Prédit: 'neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -0.009757150895893574
    2. ' neighbor' → logprob: -4.634757041931152
    3. 'ne' → logprob: -14.384757041931152
    4. 'not' → logprob: -15.759757041931152
    5. '```' → logprob: -16.50975799560547
    6. '           ' → logprob: -16.88475799560547
    7. 'parent' → logprob: -17.00975799560547
    8. '(ne' → logprob: -17.00975799560547
    9. '                   ' → logprob: -17.00975799560547
    10. 'neighbors' → logprob: -17.13475799560547

Token 108: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.12696485221385956
    2. ' !=' → logprob: -2.126964807510376
    3. '()!=' → logprob: -11.376964569091797
    4. ')!=' → logprob: -11.751964569091797
    5. ' not' → logprob: -12.251964569091797
    6. ']!=' → logprob: -12.626964569091797
    7. '!=(' → logprob: -13.001964569091797
    8. '!==' → logprob: -13.251964569091797
    9. ' ' → logprob: -13.751964569091797
    10. 'not' → logprob: -14.001964569091797

Token 109: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.029760213568806648
    2. ' parent' → logprob: -3.5297601222991943
    3. 'current' → logprob: -11.654760360717773
    4. '	parent' → logprob: -14.904760360717773
    5. ' current' → logprob: -15.029760360717773
    6. ' ' → logprob: -15.904760360717773
    7. '   ' → logprob: -16.654760360717773
    8. 'paren' → logprob: -16.904760360717773
    9. '(parent' → logprob: -17.029760360717773
    10. '[parent' → logprob: -17.904760360717773

Token 110: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -3.130576806142926e-05
    2. 'node' → logprob: -11.125031471252441
    3. '_' → logprob: -12.000031471252441
    4. ' _' → logprob: -13.000031471252441
    5. ' node' → logprob: -13.000031471252441
    6. '[node' → logprob: -13.625031471252441
    7. '_NODE' → logprob: -13.875031471252441
    8. '_token' → logprob: -14.375031471252441
    9. ' ' → logprob: -14.375031471252441
    10. '   ' → logprob: -15.250031471252441

Token 111: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5392232537269592
    2. ':' → logprob: -0.9142232537269592
    3. ' and' → logprob: -4.7892231941223145
    4. '               ' → logprob: -5.0392231941223145
    5. ',' → logprob: -7.7892231941223145
    6. '):
' → logprob: -8.289223670959473
    7. '           ' → logprob: -8.414223670959473
    8. 'and' → logprob: -9.914223670959473
    9. ':
' → logprob: -10.039223670959473
    10. ' :
' → logprob: -10.039223670959473

Token 112: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07558809965848923
    2. ' initial' → logprob: -2.7005879878997803
    3. 'initial' → logprob: -5.200588226318359
    4. '   ' → logprob: -10.57558822631836
    5. '	initial' → logprob: -10.57558822631836
    6. '           ' → logprob: -11.32558822631836
    7. '(initial' → logprob: -11.32558822631836
    8. '_initial' → logprob: -11.70058822631836
    9. '.initial' → logprob: -12.32558822631836
    10. '```' → logprob: -12.45058822631836

Token 113: ' initial' (ID: 4871)
  Prédit: ' initial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' initial' → logprob: -0.0041579375974833965
    2. '                   ' → logprob: -6.129158020019531
    3. 'initial' (adapté à ' initial') → logprob: -6.254158020019531
    4. '                ' → logprob: -11.629158020019531
    5. '_initial' → logprob: -11.754158020019531
    6. 'Initial' → logprob: -12.129158020019531
    7. '               ' → logprob: -12.379158020019531
    8. '   ' → logprob: -12.629158020019531
    9. '	initial' → logprob: -12.629158020019531
    10. '(initial' → logprob: -12.629158020019531

Token 114: '_queue' (ID: 25622)
  Prédit: '_queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_queue' → logprob: -3.054500666621607e-06
    2. 'queue' → logprob: -13.75000286102295
    3. '_' → logprob: -13.87500286102295
    4. ' _' → logprob: -14.87500286102295
    5. '_enqueue' → logprob: -16.000003814697266
    6. 'Queue' → logprob: -16.000003814697266
    7. '._' → logprob: -16.000003814697266
    8. '```' → logprob: -16.625003814697266
    9. '_QUEUE' → logprob: -17.000003814697266
    10. '_code' → logprob: -17.500003814697266

Token 115: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0006728782900609076
    2. '.' → logprob: -7.375672817230225
    3. '.extend' → logprob: -10.625673294067383
    4. ' .' → logprob: -11.875673294067383
    5. '               ' → logprob: -12.125673294067383
    6. '                   ' → logprob: -12.250673294067383
    7. '.enqueue' → logprob: -12.750673294067383
    8. '.p' → logprob: -14.875673294067383
    9. '                       ' → logprob: -15.000673294067383
    10. '.put' → logprob: -15.250673294067383

Token 116: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -2.1008713702030946e-06
    2. '(' → logprob: -13.250001907348633
    3. ' ((' → logprob: -15.625001907348633
    4. '(((' → logprob: -16.000001907348633
    5. '(
' → logprob: -19.250001907348633
    6. '   ' → logprob: -20.125001907348633
    7. ' (' → logprob: -20.500001907348633
    8. '(('' → logprob: -20.500001907348633
    9. ')((' → logprob: -20.750001907348633
    10. '```' → logprob: -21.125001907348633

Token 117: 'neighbor' (ID: 108409)
  Prédit: 'neighbor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -0.00038169484469108284
    2. ' neighbor' → logprob: -7.8753814697265625
    3. '(ne' → logprob: -13.750381469726562
    4. '                   ' → logprob: -15.000381469726562
    5. '               ' → logprob: -16.625381469726562
    6. '   ' → logprob: -16.875381469726562
    7. 'ne' → logprob: -17.000381469726562
    8. 'neighbors' → logprob: -17.250381469726562
    9. '           ' → logprob: -18.250381469726562
    10. 'nei' → logprob: -18.625381469726562

Token 118: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0069250622764229774
    2. ',current' → logprob: -5.006925106048584
    3. 'current' → logprob: -8.631924629211426
    4. ' ,' → logprob: -10.756924629211426
    5. ' current' → logprob: -11.756924629211426
    6. ',
' → logprob: -14.006924629211426
    7. '(current' → logprob: -15.006924629211426
    8. '[current' → logprob: -15.256924629211426
    9. '),' → logprob: -15.381924629211426
    10. ',c' → logprob: -15.756924629211426

Token 119: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.3132627606391907
    2. ' current' → logprob: -1.313262701034546
    3. ' ' → logprob: -15.438262939453125
    4. '	current' → logprob: -15.938262939453125
    5. '(current' → logprob: -15.938262939453125
    6. '[current' → logprob: -16.313262939453125
    7. '$current' → logprob: -16.313262939453125
    8. 'urrent' → logprob: -16.438262939453125
    9. ')' → logprob: -16.563262939453125
    10. '_current' → logprob: -16.938262939453125

Token 120: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -2.4272752852994017e-05
    2. 'node' → logprob: -11.25002384185791
    3. '_' → logprob: -11.75002384185791
    4. '_token' → logprob: -13.25002384185791
    5. ' _' → logprob: -14.75002384185791
    6. ')' → logprob: -15.12502384185791
    7. '_NODE' → logprob: -16.125024795532227
    8. ')_' → logprob: -16.125024795532227
    9. ' node' → logprob: -16.375024795532227
    10. 'Node' → logprob: -16.500024795532227

Token 121: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00021748353901784867
    2. '))
' → logprob: -9.00021743774414
    3. ')' → logprob: -9.37521743774414
    4. ' ))' → logprob: -12.25021743774414
    5. ')))' → logprob: -12.62521743774414
    6. '))

' → logprob: -14.87521743774414
    7. ' ' → logprob: -15.50021743774414
    8. '   ' → logprob: -15.75021743774414
    9. ',' → logprob: -15.75021743774414
    10. '       ' → logprob: -16.12521743774414

Token 122: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016427049413323402
    2. '<|end|>' → logprob: -4.516427040100098
    3. 'return' → logprob: -5.766427040100098
    4. '
' → logprob: -7.266427040100098
    5. 'def' → logprob: -7.766427040100098
    6. ' return' → logprob: -8.016427040100098
    7. ')' → logprob: -8.516427040100098
    8. '    ' → logprob: -8.891427040100098
    9. '<|end|>' → logprob: -9.016427040100098
    10. '    
' → logprob: -9.016427040100098

Token 123: ' parent' (ID: 5980)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029111552983522415
    2. '<|end|>' → logprob: -4.529111385345459
    3. '
' → logprob: -4.779111385345459
    4. 'return' → logprob: -5.029111385345459
    5. ')' → logprob: -6.904111385345459
    6. ' return' → logprob: -7.404111385345459
    7. '    
' → logprob: -7.654111385345459
    8. '    ' → logprob: -8.404111862182617
    9. ' ' → logprob: -8.779111862182617
    10. '<|end|>' → logprob: -9.279111862182617

Token 124: '_of' (ID: 8023)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.08114731311798096
    2. '_node' → logprob: -3.3311471939086914
    3. '_nodes' → logprob: -3.9561471939086914
    4. '_map' → logprob: -4.581147193908691
    5. '_parent' → logprob: -5.081147193908691
    6. 's' → logprob: -6.206147193908691
    7. '_mapping' → logprob: -6.581147193908691
    8. '_s' → logprob: -6.706147193908691
    9. '_stack' → logprob: -8.206147193908691
    10. ' =' → logprob: -8.331147193908691

Token 125: '_node' (ID: 11390)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2163936346769333
    2. '[last' → logprob: -2.3413937091827393
    3. '=' → logprob: -2.5913937091827393
    4. '<|end|>' → logprob: -4.21639347076416
    5. '[' → logprob: -6.09139347076416
    6. ' ' → logprob: -6.71639347076416
    7. '[current' → logprob: -6.71639347076416
    8. 's' → logprob: -6.84139347076416
    9. '_' → logprob: -7.34139347076416
    10. '_last' → logprob: -7.46639347076416

Token 126: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12299137562513351
    2. ' =' → logprob: -2.2479913234710693
    3. '[' → logprob: -4.997991561889648
    4. '_' → logprob: -6.247991561889648
    5. 's' → logprob: -6.872991561889648
    6. ' ' → logprob: -8.372991561889648
    7. ')' → logprob: -9.997991561889648
    8. ',' → logprob: -11.122991561889648
    9. '[current' → logprob: -11.122991561889648
    10. ']' → logprob: -11.372991561889648

Token 127: ' [-' (ID: 20191)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -1.1577818393707275
    2. '[' → logprob: -1.4077818393707275
    3. '[last' → logprob: -1.4077818393707275
    4. ' [' → logprob: -2.5327818393707275
    5. '[-' → logprob: -2.5327818393707275
    6. ' {' → logprob: -3.7827818393707275
    7. '{}' → logprob: -5.407781600952148
    8. '[parent' → logprob: -5.532781600952148
    9. ' [-' → logprob: -6.407781600952148
    10. '[node' → logprob: -6.407781600952148

Token 128: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.650518920039758e-06
    2. '2' → logprob: -12.750003814697266
    3. ' ' → logprob: -14.500003814697266
    4. '-' → logprob: -17.250003814697266
    5. '   ' → logprob: -17.812503814697266
    6. '10' → logprob: -17.812503814697266
    7. '999' → logprob: -17.875003814697266
    8. '(' → logprob: -18.562503814697266
    9. '100' → logprob: -18.687503814697266
    10. '99' → logprob: -18.812503814697266

Token 129: ']' (ID: 60)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.09868525713682175
    2. ']' → logprob: -2.4736852645874023
    3. 'for' → logprob: -5.223685264587402
    4. ' ]' → logprob: -5.598685264587402
    5. ',' → logprob: -8.098685264587402
    6. ')' → logprob: -8.723685264587402
    7. ']*' → logprob: -9.473685264587402
    8. ']*(' → logprob: -11.098685264587402
    9. ' ' → logprob: -11.348685264587402
    10. ')]' → logprob: -11.473685264587402

Token 130: ' *' (ID: 425)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.39059799909591675
    2. 'for' → logprob: -2.2655980587005615
    3. ' *' → logprob: -2.5155980587005615
    4. '[' → logprob: -3.0155980587005615
    5. ' +' → logprob: -3.0155980587005615
    6. '<|end|>' → logprob: -4.640597820281982
    7. '
' → logprob: -5.015597820281982
    8. '(' → logprob: -5.265597820281982
    9. '*' → logprob: -5.640597820281982
    10. ' ' → logprob: -5.765597820281982

Token 131: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0381639339029789
    2. '(len' → logprob: -3.288163900375366
    3. ' len' → logprob: -9.038164138793945
    4. '(' → logprob: -13.163164138793945
    5. '[len' → logprob: -14.413164138793945
    6. '	len' → logprob: -14.538164138793945
    7. ' (' → logprob: -15.413164138793945
    8. '=len' → logprob: -15.913164138793945
    9. ',len' → logprob: -16.288164138793945
    10. '<len' → logprob: -16.413164138793945

Token 132: '(tree' (ID: 44909)
  Prédit: '(tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tree' → logprob: -3.2020991056924686e-05
    2. '(' → logprob: -10.375032424926758
    3. 'tree' → logprob: -15.125032424926758
    4. '(parent' → logprob: -15.125032424926758
    5. '(t' → logprob: -16.250032424926758
    6. ' (' → logprob: -16.375032424926758
    7. '(Tree' → logprob: -17.875032424926758
    8. '(tr' → logprob: -17.875032424926758
    9. '(table' → logprob: -18.250032424926758
    10. ' tree' → logprob: -18.625032424926758

Token 133: '_ad' (ID: 23782)
  Prédit: '_ad'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ad' → logprob: -4.246537173457909e-06
    2. '_adj' → logprob: -12.500003814697266
    3. 'adj' → logprob: -15.500003814697266
    4. '_' → logprob: -16.125003814697266
    5. ' adjacency' → logprob: -16.875003814697266
    6. ')' → logprob: -17.375003814697266
    7. 'ad' → logprob: -17.875003814697266
    8. ' _' → logprob: -18.250003814697266
    9. '_nodes' → logprob: -18.375003814697266
    10. '_)' → logprob: -18.375003814697266

Token 134: 'jac' (ID: 77250)
  Prédit: 'jac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jac' → logprob: -0.0005856798379682004
    2. 'acency' → logprob: -7.500585556030273
    3. 'j' → logprob: -10.625585556030273
    4. ' adjacency' → logprob: -12.500585556030273
    5. 'jc' → logprob: -14.125585556030273
    6. 'Jac' → logprob: -14.375585556030273
    7. '_list' → logprob: -14.750585556030273
    8. ' jac' → logprob: -14.875585556030273
    9. '[' → logprob: -15.125585556030273
    10. 'js' → logprob: -15.125585556030273

Token 135: 'ency' (ID: 2799)
  Prédit: 'acency'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acency' → logprob: -0.24056625366210938
    2. 'ency' → logprob: -2.3655662536621094
    3. '_lists' → logprob: -3.1155662536621094
    4. '_list' → logprob: -3.4905662536621094
    5. 'list' → logprob: -4.490566253662109
    6. 'esty' → logprob: -4.490566253662109
    7. 'lists' → logprob: -4.490566253662109
    8. 'y' → logprob: -5.115566253662109
    9. ' lists' → logprob: -6.740566253662109
    10. 'l' → logprob: -7.740566253662109

Token 136: '_lists' (ID: 93609)
  Prédit: '_lists'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lists' → logprob: -0.00033069768687710166
    2. 's' → logprob: -8.750330924987793
    3. 'lists' → logprob: -9.250330924987793
    4. 'ists' → logprob: -10.250330924987793
    5. ')' → logprob: -11.500330924987793
    6. '_list' → logprob: -12.000330924987793
    7. 'sts' → logprob: -12.500330924987793
    8. ')_' → logprob: -12.750330924987793
    9. '_nodes' → logprob: -12.750330924987793
    10. 'ist' → logprob: -13.375330924987793

Token 137: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.5822400857578032e-05
    2. ')
' → logprob: -10.750025749206543
    3. ' )' → logprob: -13.000025749206543
    4. '))' → logprob: -14.750025749206543
    5. ')

' → logprob: -14.750025749206543
    6. '   ' → logprob: -15.125025749206543
    7. ']' → logprob: -16.00002670288086
    8. ')`' → logprob: -16.00002670288086
    9. '),' → logprob: -16.25002670288086
    10. '[' → logprob: -16.37502670288086

Token 138: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030272793024778366
    2. 'parent' → logprob: -4.655272960662842
    3. '
' → logprob: -4.905272960662842
    4. 'def' → logprob: -5.155272960662842
    5. '    
' → logprob: -6.030272960662842
    6. 'current' → logprob: -6.905272960662842
    7. 'distance' → logprob: -6.905272960662842
    8. 'path' → logprob: -7.780272960662842
    9. '<|end|>' → logprob: -8.280272483825684
    10. ' parent' → logprob: -8.530272483825684

Token 139: ' reconstruct' (ID: 78298)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.21590866148471832
    2. 'queue' → logprob: -2.3409087657928467
    3. 'initial' → logprob: -3.4659087657928467
    4. 'stack' → logprob: -4.340908527374268
    5. 'final' → logprob: -4.465908527374268
    6. 'def' → logprob: -4.590908527374268
    7. 'distance' → logprob: -4.965908527374268
    8. 'node' → logprob: -5.715908527374268
    9. 'end' → logprob: -5.715908527374268
    10. 'dist' → logprob: -5.840908527374268

Token 140: '_queue' (ID: 25622)
  Prédit: '_path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -0.011562440544366837
    2. '_' → logprob: -5.386562347412109
    3. '_parent' → logprob: -6.386562347412109
    4. '_queue' → logprob: -6.511562347412109
    5. 'ed' → logprob: -6.636562347412109
    6. 'ing' → logprob: -7.386562347412109
    7. '_paths' → logprob: -7.761562347412109
    8. '_stack' → logprob: -7.886562347412109
    9. ' =' → logprob: -8.13656234741211
    10. '_last' → logprob: -8.51156234741211

Token 141: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005929154809564352
    2. '=' → logprob: -5.130928993225098
    3. ' ' → logprob: -14.880928993225098
    4. ')' → logprob: -17.005929946899414
    5. 'deque' → logprob: -17.005929946899414
    6. 's' → logprob: -17.505929946899414
    7. '<|end|>' → logprob: -17.755929946899414
    8. '   ' → logprob: -17.880929946899414
    9. ':' → logprob: -17.880929946899414
    10. '.append' → logprob: -17.943429946899414

Token 142: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.007648864760994911
    2. ' deque' → logprob: -4.882648944854736
    3. '[(' → logprob: -10.257648468017578
    4. 'de' → logprob: -12.257648468017578
    5. '[' → logprob: -13.882648468017578
    6. '   ' → logprob: -14.382648468017578
    7. ' [(' → logprob: -14.382648468017578
    8. 'Deque' → logprob: -15.132648468017578
    9. ' ' → logprob: -15.632648468017578
    10. '	de' → logprob: -16.882648468017578

Token 143: '([(' (ID: 156282)
  Prédit: '([('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([(' → logprob: -0.03812112659215927
    2. '([' → logprob: -3.288121223449707
    3. '[(' → logprob: -10.038121223449707
    4. '()' → logprob: -11.038121223449707
    5. '(' → logprob: -11.663121223449707
    6. '((' → logprob: -11.913121223449707
    7. '([{' → logprob: -13.288121223449707
    8. '([]' → logprob: -14.038121223449707
    9. '(((' → logprob: -14.663121223449707
    10. '(([' → logprob: -14.913121223449707

Token 144: 'neighbor' (ID: 108409)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.001011730288155377
    2. '(last' → logprob: -7.501011848449707
    3. ' last' → logprob: -7.751011848449707
    4. '(' → logprob: -11.251011848449707
    5. '0' → logprob: -11.876011848449707
    6. '   ' → logprob: -12.501011848449707
    7. '[last' → logprob: -13.376011848449707
    8. ' (' → logprob: -14.376011848449707
    9. 'initial' → logprob: -14.376011848449707
    10. ')' → logprob: -14.626011848449707

Token 145: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007628110470250249
    2. '=' → logprob: -8.500762939453125
    3. ',last' → logprob: -8.625762939453125
    4. '[' → logprob: -9.375762939453125
    5. ' ,' → logprob: -9.625762939453125
    6. 'last' → logprob: -9.750762939453125
    7. '(last' → logprob: -10.000762939453125
    8. '[last' → logprob: -10.875762939453125
    9. 'for' → logprob: -11.000762939453125
    10. '0' → logprob: -11.250762939453125

Token 146: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.8477529883384705
    2. '0' → logprob: -1.0977530479431152
    3. 'current' → logprob: -1.9727530479431152
    4. 'neighbor' → logprob: -2.5977530479431152
    5. ' last' → logprob: -4.472753047943115
    6. ' current' → logprob: -4.972753047943115
    7. ' ' → logprob: -5.722753047943115
    8. ' neighbor' → logprob: -6.597753047943115
    9. 'parent' → logprob: -8.222752571105957
    10. '(' → logprob: -8.222752571105957

Token 147: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -5.3120038501219824e-05
    2. '_' → logprob: -10.875053405761719
    3. 'node' → logprob: -11.375053405761719
    4. '_user' → logprob: -11.625053405761719
    5. ')' → logprob: -11.875053405761719
    6. '_token' → logprob: -12.500053405761719
    7. ' _' → logprob: -14.000053405761719
    8. ' node' → logprob: -14.500053405761719
    9. 'visited' → logprob: -15.000053405761719
    10. 'Node' → logprob: -15.875053405761719

Token 148: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00027933192905038595
    2. 'visited' → logprob: -8.250279426574707
    3. ')' → logprob: -12.250279426574707
    4. ',' → logprob: -12.625279426574707
    5. ')]' → logprob: -12.875279426574707
    6. '])' → logprob: -13.000279426574707
    7. ')])' → logprob: -13.500279426574707
    8. '),' → logprob: -14.250279426574707
    9. '   ' → logprob: -14.750279426574707
    10. 'Visited' → logprob: -15.125279426574707

Token 149: 'visited' (ID: 52453)
  Prédit: 'visited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.0005128794582560658
    2. '_' → logprob: -7.875513076782227
    3. ' visited' → logprob: -9.625513076782227
    4. '0' → logprob: -11.125513076782227
    5. ')' → logprob: -11.375513076782227
    6. ' ' → logprob: -12.000513076782227
    7. '```' → logprob: -12.250513076782227
    8. 'v' → logprob: -12.500513076782227
    9. 'Visited' → logprob: -12.750513076782227
    10. '1' → logprob: -13.250513076782227

Token 150: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.039203912019729614
    2. ')])' → logprob: -3.2892038822174072
    3. ' )' → logprob: -7.414204120635986
    4. ')])
' → logprob: -8.414203643798828
    5. ',' → logprob: -8.539203643798828
    6. ')],' → logprob: -10.039203643798828
    7. ')])

' → logprob: -10.289203643798828
    8. ')]' → logprob: -10.789203643798828
    9. 'parent' → logprob: -11.914203643798828
    10. ',)' → logprob: -12.289203643798828

Token 151: ' for' (ID: 395)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.005630943458527327
    2. ')' → logprob: -5.630630970001221
    3. ')])' → logprob: -6.755630970001221
    4. ' ])' → logprob: -7.505630970001221
    5. ' for' → logprob: -9.005630493164062
    6. 'for' → logprob: -9.755630493164062
    7. ')]' → logprob: -10.130630493164062
    8. '   ' → logprob: -10.505630493164062
    9. '])
' → logprob: -10.630630493164062
    10. ']' → logprob: -11.505630493164062

Token 152: ' neighbor' (ID: 13034)
  Prédit: 'neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -0.014185481704771519
    2. ' neighbor' → logprob: -4.264185428619385
    3. 'tree' → logprob: -11.264185905456543
    4. 'adj' → logprob: -12.639185905456543
    5. '_neighbor' → logprob: -13.139185905456543
    6. 'ne' → logprob: -14.014185905456543
    7. ' tree' → logprob: -14.139185905456543
    8. 'nei' → logprob: -14.764185905456543
    9. 'n' → logprob: -14.889185905456543
    10. '(ne' → logprob: -15.014185905456543

Token 153: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06996266543865204
    2. 'in' → logprob: -2.694962739944458
    3. '<|end|>' → logprob: -11.819962501525879
    4. ')' → logprob: -12.069962501525879
    5. ' ' → logprob: -12.194962501525879
    6. '	in' → logprob: -12.944962501525879
    7. '<|end|>' → logprob: -13.319962501525879
    8. ',' → logprob: -13.444962501525879
    9. '
' → logprob: -14.694962501525879
    10. '_in' → logprob: -15.194962501525879

Token 154: ' tree' (ID: 8165)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.0011749862460419536
    2. ' tree' → logprob: -6.7511749267578125
    3. '(tree' → logprob: -12.376174926757812
    4. '	tree' → logprob: -15.126174926757812
    5. '[' → logprob: -16.501174926757812
    6. ' ' → logprob: -16.626174926757812
    7. '   ' → logprob: -17.251174926757812
    8. '.tree' → logprob: -17.626174926757812
    9. 'Tree' → logprob: -18.001174926757812
    10. 't' → logprob: -18.126174926757812

Token 155: '_ad' (ID: 23782)
  Prédit: '_ad'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ad' → logprob: -2.2246291337069124e-05
    2. '_adj' → logprob: -11.250021934509277
    3. 'adj' → logprob: -12.000021934509277
    4. ' adjacency' → logprob: -13.125021934509277
    5. 'ad' → logprob: -15.125021934509277
    6. '[' → logprob: -15.250021934509277
    7. '[node' → logprob: -16.625022888183594
    8. '   ' → logprob: -16.875022888183594
    9. '_' → logprob: -17.000022888183594
    10. '_of' → logprob: -17.250022888183594

Token 156: 'jac' (ID: 77250)
  Prédit: 'jac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jac' → logprob: -4.417976379045285e-05
    2. 'j' → logprob: -10.375043869018555
    3. 'adj' → logprob: -11.750043869018555
    4. ' adjacency' → logprob: -13.750043869018555
    5. '```' → logprob: -14.125043869018555
    6. 'acency' → logprob: -14.250043869018555
    7. 'yac' → logprob: -14.625043869018555
    8. '_j' → logprob: -14.875043869018555
    9. ' jac' → logprob: -15.000043869018555
    10. '[' → logprob: -15.125043869018555

Token 157: 'ency' (ID: 2799)
  Prédit: 'acency'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acency' → logprob: -0.007757346145808697
    2. 'ency' → logprob: -5.632757186889648
    3. '_lists' → logprob: -5.882757186889648
    4. 'lists' → logprob: -7.257757186889648
    5. 'ac' → logprob: -8.507757186889648
    6. 'list' → logprob: -8.882757186889648
    7. '_list' → logprob: -9.507757186889648
    8. 'ancy' → logprob: -9.507757186889648
    9. 'acy' → logprob: -10.382757186889648
    10. 'c' → logprob: -10.757757186889648

Token 158: '_lists' (ID: 93609)
  Prédit: '_lists'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lists' → logprob: -0.0006588232354260981
    2. 'lists' → logprob: -7.750658988952637
    3. '_list' → logprob: -9.000658988952637
    4. '_queue' → logprob: -9.500658988952637
    5. 'list' → logprob: -11.875658988952637
    6. '[' → logprob: -12.500658988952637
    7. 'queue' → logprob: -12.625658988952637
    8. '_' → logprob: -12.625658988952637
    9. 'Lists' → logprob: -12.750658988952637
    10. 's' → logprob: -13.250658988952637

Token 159: '[last' (ID: 126100)
  Prédit: '[last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[last' → logprob: -0.00028159678913652897
    2. '[' → logprob: -8.25028133392334
    3. 'last' → logprob: -11.87528133392334
    4. '(last' → logprob: -12.62528133392334
    5. '[
' → logprob: -13.37528133392334
    6. '[first' → logprob: -13.50028133392334
    7. '[current' → logprob: -13.62528133392334
    8. ' [' → logprob: -13.75028133392334
    9. '[left' → logprob: -14.00028133392334
    10. '[next' → logprob: -14.50028133392334

Token 160: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -2.4987974029500037e-05
    2. '_' → logprob: -11.125024795532227
    3. 'node' → logprob: -11.625024795532227
    4. ')' → logprob: -15.000024795532227
    5. 'visited' → logprob: -15.000024795532227
    6. '_nodes' → logprob: -15.750024795532227
    7. '_user' → logprob: -16.125024795532227
    8. ']' → logprob: -17.000024795532227
    9. ')_' → logprob: -17.000024795532227
    10. '_NODE' → logprob: -17.000024795532227

Token 161: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0001097417771234177
    2. 'visited' → logprob: -9.125109672546387
    3. '0' → logprob: -15.375109672546387
    4. ' _' → logprob: -15.750109672546387
    5. ')' → logprob: -16.375110626220703
    6. 'Visited' → logprob: -17.000110626220703
    7. ']' → logprob: -17.125110626220703
    8. '   ' → logprob: -17.125110626220703
    9. '__' → logprob: -17.250110626220703
    10. '])' → logprob: -17.375110626220703

Token 162: 'visited' (ID: 52453)
  Prédit: 'visited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.0017672894755378366
    2. '_' → logprob: -6.626767158508301
    3. 'vis' → logprob: -9.1267671585083
    4. '_vis' → logprob: -9.3767671585083
    5. ' visited' → logprob: -10.1267671585083
    6. 'vist' → logprob: -10.1267671585083
    7. '0' → logprob: -10.2517671585083
    8. 'visi' → logprob: -11.0017671585083
    9. 'Visited' → logprob: -11.2517671585083
    10. ' ' → logprob: -11.2517671585083

Token 163: ']])
' (ID: 62818)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.21209107339382172
    2. ')])' → logprob: -1.712091088294983
    3. ']])' → logprob: -4.837090969085693
    4. '])]' → logprob: -6.337090969085693
    5. ']' → logprob: -8.087091445922852
    6. ')' → logprob: -8.337091445922852
    7. ']))' → logprob: -8.587091445922852
    8. ' ])' → logprob: -9.087091445922852
    9. ')]' → logprob: -10.212091445922852
    10. '[' → logprob: -11.587091445922852

Token 164: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07928653806447983
    2. 'while' → logprob: -3.204286575317383
    3. '    
' → logprob: -3.829286575317383
    4. ')' → logprob: -5.079286575317383
    5. '
' → logprob: -5.579286575317383
    6. ' while' → logprob: -5.954286575317383
    7. 'parent' → logprob: -7.454286575317383
    8. '  
' → logprob: -8.579286575317383
    9. 'current' → logprob: -9.329286575317383
    10. ')
' → logprob: -9.454286575317383

Token 165: ' path' (ID: 3104)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.09714280813932419
    2. 'parent' → logprob: -3.0971426963806152
    3. 'distance' → logprob: -3.5971426963806152
    4. '   ' → logprob: -4.722142696380615
    5. 'current' → logprob: -6.097142696380615
    6. 'visited' → logprob: -6.347142696380615
    7. 'dist' → logprob: -6.472142696380615
    8. '
' → logprob: -6.472142696380615
    9. ' while' → logprob: -6.597142696380615
    10. 'last' → logprob: -7.472142696380615

Token 166: '_start' (ID: 10949)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0994178056716919
    2. '=' → logprob: -2.9744176864624023
    3. '_' → logprob: -3.3494176864624023
    4. '_nodes' → logprob: -5.099417686462402
    5. '=[]' → logprob: -6.599417686462402
    6. ' ' → logprob: -7.974417686462402
    7. '_length' → logprob: -8.599417686462402
    8. 's' → logprob: -9.474417686462402
    9. '_parent' → logprob: -10.349417686462402
    10. '_lengths' → logprob: -10.349417686462402

Token 167: '_node' (ID: 11390)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20617574453353882
    2. '=' → logprob: -1.9561758041381836
    3. ',' → logprob: -3.5811758041381836
    4. '_' → logprob: -5.206175804138184
    5. '_nodes' → logprob: -5.581175804138184
    6. '_index' → logprob: -5.706175804138184
    7. 's' → logprob: -6.081175804138184
    8. ' ' → logprob: -7.206175804138184
    9. '_node' → logprob: -7.456175804138184
    10. '_idx' → logprob: -8.706175804138184

Token 168: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.007741489913314581
    2. '=' → logprob: -4.882741451263428
    3. ',' → logprob: -9.007741928100586
    4. ' ' → logprob: -11.757741928100586
    5. ' ,' → logprob: -12.382741928100586
    6. ' =
' → logprob: -15.382741928100586
    7. 's' → logprob: -15.757741928100586
    8. ')' → logprob: -16.382741928100586
    9. ' =[' → logprob: -16.507741928100586
    10. '=int' → logprob: -16.632741928100586

Token 169: ' _' (ID: 1175)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.10329312086105347
    2. 'parent' → logprob: -2.8532931804656982
    3. '-' → logprob: -4.103292942047119
    4. ' path' → logprob: -4.478292942047119
    5. 'current' → logprob: -5.853292942047119
    6. 'distance' → logprob: -6.228292942047119
    7. '_' → logprob: -6.728292942047119
    8. '_path' → logprob: -7.103292942047119
    9. 'prev' → logprob: -7.353292942047119
    10. 'None' → logprob: -7.603292942047119

Token 170: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.523177981376648
    2. ' =' → logprob: -0.898177981376648
    3. ',' → logprob: -10.023178100585938
    4. ')' → logprob: -12.148178100585938
    5. ' ' → logprob: -13.148178100585938
    6. '<|end|>' → logprob: -14.273178100585938
    7. '   ' → logprob: -15.023178100585938
    8. '=}' → logprob: -15.273178100585938
    9. ')=' → logprob: -15.523178100585938
    10. '<|end|>' → logprob: -15.648178100585938

Token 171: ' ' (ID: 220)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 're' → logprob: -0.5767205357551575
    2. 'initial' → logprob: -1.7017204761505127
    3. ' reconstruct' → logprob: -1.8267204761505127
    4. ' initial' → logprob: -2.8267204761505127
    5. ' find' → logprob: -4.201720714569092
    6. 'find' → logprob: -4.326720714569092
    7. 'deque' → logprob: -6.576720714569092
    8. 'parent' → logprob: -7.451720714569092
    9. '(initial' → logprob: -7.576720714569092
    10. '0' → logprob: -7.576720714569092

Token 172: '0' (ID: 15)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.30368250608444214
    2. 'initial' → logprob: -1.678682565689087
    3. 'find' → logprob: -3.053682565689087
    4. '0' → logprob: -4.553682327270508
    5. '(' → logprob: -5.053682327270508
    6. 'deque' → logprob: -5.678682327270508
    7. 'de' → logprob: -6.178682327270508
    8. '(initial' → logprob: -6.303682327270508
    9. '(re' → logprob: -6.803682327270508
    10. '(find' → logprob: -8.178682327270508

Token 173: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4563581049442291
    2. '<|end|>' → logprob: -1.3313580751419067
    3. '   ' → logprob: -3.0813581943511963
    4. ',' → logprob: -3.7063581943511963
    5. '<|end|>' → logprob: -4.456357955932617
    6. '    
' → logprob: -4.956357955932617
    7. ')' → logprob: -5.956357955932617
    8. ' ' → logprob: -6.081357955932617
    9. '  
' → logprob: -6.706357955932617
    10. ',
' → logprob: -7.081357955932617

Token 174: ' ' (ID: 220)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.0717945098876953
    2. 'last' → logprob: -1.3217945098876953
    3. '0' → logprob: -1.8217945098876953
    4. 'len' → logprob: -2.5717945098876953
    5. 'None' → logprob: -3.1967945098876953
    6. ' -' → logprob: -3.1967945098876953
    7. ' ' → logprob: -3.8217945098876953
    8. ' last' → logprob: -3.8217945098876953
    9. ' None' → logprob: -4.821794509887695
    10. ' len' → logprob: -5.446794509887695

Token 175: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4931167960166931
    2. '-' → logprob: -0.9931167960166931
    3. 'len' → logprob: -4.743116855621338
    4. 'None' → logprob: -5.118116855621338
    5. '1' → logprob: -6.618116855621338
    6. ' ' → logprob: -7.493116855621338
    7. ' -' → logprob: -7.493116855621338
    8. 'last' → logprob: -7.618116855621338
    9. 'path' → logprob: -8.36811637878418
    10. 'deque' → logprob: -8.49311637878418

Token 176: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.40645548701286316
    2. '    
' → logprob: -1.2814555168151855
    3. '   ' → logprob: -2.9064555168151855
    4. '	
' → logprob: -7.1564555168151855
    5. '  
' → logprob: -8.406455039978027
    6. ' 
' → logprob: -8.906455039978027
    7. '<|end|>' → logprob: -9.031455039978027
    8. '   
' → logprob: -9.156455039978027
    9. 'while' → logprob: -9.281455039978027
    10. '        
' → logprob: -10.031455039978027

Token 177: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16733719408512115
    2. '    
' → logprob: -2.41733717918396
    3. '
' → logprob: -2.91733717918396
    4. '<|end|>' → logprob: -5.292337417602539
    5. '  
' → logprob: -6.167337417602539
    6. ')' → logprob: -7.292337417602539
    7. '<|end|>' → logprob: -7.917337417602539
    8. ' 
' → logprob: -7.917337417602539
    9. '	
' → logprob: -8.042337417602539
    10. 'while' → logprob: -8.167337417602539

Token 178: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.027581045404076576
    2. '   ' → logprob: -3.652580976486206
    3. ' while' → logprob: -6.902581214904785
    4. '
' → logprob: -8.527581214904785
    5. '```' → logprob: -10.402581214904785
    6. 'for' → logprob: -11.152581214904785
    7. '    
' → logprob: -11.152581214904785
    8. 'parent' → logprob: -12.902581214904785
    9. '	while' → logprob: -12.902581214904785
    10. ' ' → logprob: -13.152581214904785

Token 179: ' reconstruct' (ID: 78298)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.061970822513103485
    2. ' reconstruct' → logprob: -2.8119707107543945
    3. ' ' → logprob: -13.936970710754395
    4. 'initial' → logprob: -14.311970710754395
    5. '	re' → logprob: -14.561970710754395
    6. '   ' → logprob: -14.561970710754395
    7. '  ' → logprob: -16.06197166442871
    8. ' path' → logprob: -16.18697166442871
    9. 'not' → logprob: -16.43697166442871
    10. 'construct' → logprob: -16.56197166442871

Token 180: '_queue' (ID: 25622)
  Prédit: '_queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_queue' → logprob: -2.8206473871250637e-05
    2. 'queue' → logprob: -10.625028610229492
    3. '_' → logprob: -13.500028610229492
    4. 'Queue' → logprob: -14.500028610229492
    5. '_q' → logprob: -15.000028610229492
    6. '_re' → logprob: -15.000028610229492
    7. '_QUEUE' → logprob: -15.375028610229492
    8. '(queue' → logprob: -16.000028610229492
    9. ' queue' → logprob: -16.000028610229492
    10. '```' → logprob: -16.125028610229492

Token 181: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011209801770746708
    2. ':
' → logprob: -4.511209964752197
    3. ',' → logprob: -9.636209487915039
    4. '   ' → logprob: -10.636209487915039
    5. '):' → logprob: -10.636209487915039
    6. '):
' → logprob: -11.261209487915039
    7. '=' → logprob: -12.011209487915039
    8. ' :' → logprob: -12.136209487915039
    9. '.dequeue' → logprob: -12.511209487915039
    10. ' and' → logprob: -12.636209487915039

Token 182: '       ' (ID: 309)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.6332148909568787
    2. 'current' → logprob: -0.8832148909568787
    3. '       ' → logprob: -3.0082149505615234
    4. ' node' → logprob: -5.633214950561523
    5. 'node' → logprob: -6.633214950561523
    6. '   ' → logprob: -7.383214950561523
    7. '(current' → logprob: -8.758214950561523
    8. '```' → logprob: -8.883214950561523
    9. ')' → logprob: -9.383214950561523
    10. '_current' → logprob: -9.758214950561523

Token 183: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' (adapté à ' current') → logprob: -0.11727515608072281
    2. ' current' → logprob: -2.2422752380371094
    3. 'node' → logprob: -6.242275238037109
    4. '       ' → logprob: -6.367275238037109
    5. ' node' → logprob: -8.11727523803711
    6. '   ' → logprob: -8.24227523803711
    7. 'next' → logprob: -9.49227523803711
    8. 'parent' → logprob: -10.99227523803711
    9. '(current' → logprob: -11.11727523803711
    10. 'child' → logprob: -11.24227523803711

Token 184: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.000543857691809535
    2. '_token' → logprob: -8.375543594360352
    3. ',_' → logprob: -9.500543594360352
    4. ',' → logprob: -9.625543594360352
    5. '_queue' → logprob: -9.625543594360352
    6. '_' → logprob: -10.875543594360352
    7. '_,' → logprob: -10.875543594360352
    8. '_nodes' → logprob: -10.875543594360352
    9. '_line' → logprob: -12.125543594360352
    10. ')_' → logprob: -12.250543594360352

Token 185: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.051066520740278e-05
    2. ' ,' → logprob: -10.000060081481934
    3. ',parent' → logprob: -11.250060081481934
    4. ',
' → logprob: -14.500060081481934
    5. ',current' → logprob: -15.250060081481934
    6. '   ' → logprob: -15.500060081481934
    7. '‌,' → logprob: -15.625060081481934
    8. ',node' → logprob: -16.12506103515625
    9. '_,' → logprob: -16.25006103515625
    10. '       ' → logprob: -16.62506103515625

Token 186: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.28119850158691406
    2. ' parent' → logprob: -1.406198501586914
    3. ' ' → logprob: -11.406198501586914
    4. '   ' → logprob: -11.531198501586914
    5. 'previous' → logprob: -11.656198501586914
    6. 'prev' → logprob: -12.156198501586914
    7. 'current' → logprob: -13.156198501586914
    8. '	parent' → logprob: -13.406198501586914
    9. 'path' → logprob: -13.531198501586914
    10. ' previous' → logprob: -13.781198501586914

Token 187: ' =' (ID: 314)
  Prédit: '_node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.004764280281960964
    2. '_' → logprob: -5.379764080047607
    3. ' =' → logprob: -10.129764556884766
    4. '_parent' → logprob: -10.254764556884766
    5. '=' → logprob: -10.504764556884766
    6. 'node' → logprob: -11.254764556884766
    7. '_token' → logprob: -12.379764556884766
    8. ' _' → logprob: -12.379764556884766
    9. ')' → logprob: -12.629764556884766
    10. '_=' → logprob: -12.629764556884766

Token 188: ' reconstruct' (ID: 78298)
  Prédit: ' reconstruct'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' reconstruct' → logprob: -0.026303669437766075
    2. 're' → logprob: -3.651303768157959
    3. '_re' → logprob: -13.2763032913208
    4. ' reconstru' → logprob: -14.1513032913208
    5. '	re' → logprob: -15.4013032913208
    6. '=re' → logprob: -16.151304244995117
    7. '(re' → logprob: -16.276304244995117
    8. ' ' → logprob: -17.026304244995117
    9. ' reconnect' → logprob: -17.026304244995117
    10. 'Re' → logprob: -17.151304244995117

Token 189: '_queue' (ID: 25622)
  Prédit: '_queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_queue' → logprob: -1.9743012671824545e-05
    2. 'queue' → logprob: -11.125020027160645
    3. '_node' → logprob: -13.375020027160645
    4. '_' → logprob: -13.750020027160645
    5. 'Queue' → logprob: -14.125020027160645
    6. '_QUEUE' → logprob: -14.500020027160645
    7. '```' → logprob: -15.375020027160645
    8. 'que' → logprob: -16.000019073486328
    9. '
' → logprob: -16.125019073486328
    10. ')' → logprob: -16.125019073486328

Token 190: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -3.5120287066092715e-05
    2. '.' → logprob: -11.125035285949707
    3. ' .' → logprob: -12.125035285949707
    4. '.append' → logprob: -12.250035285949707
    5. '.pop' → logprob: -12.250035285949707
    6. '=' → logprob: -13.000035285949707
    7. '   ' → logprob: -13.250035285949707
    8. '.dequeue' → logprob: -14.375035285949707
    9. 'opleft' → logprob: -15.250035285949707
    10. '       ' → logprob: -15.375035285949707

Token 191: 'opleft' (ID: 182170)
  Prédit: 'opleft'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opleft' → logprob: -0.00014323067443910986
    2. 'op' → logprob: -8.875143051147461
    3. 'ople' → logprob: -13.375143051147461
    4. 'opl' → logprob: -13.750143051147461
    5. 'append' → logprob: -14.500143051147461
    6. 'opped' → logprob: -15.875143051147461
    7. 'oplevel' → logprob: -15.875143051147461
    8. 'opp' → logprob: -18.00014305114746
    9. 'opy' → logprob: -18.25014305114746
    10. 'opt' → logprob: -18.25014305114746

Token 192: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0789584144949913
    2. '()
' → logprob: -2.578958511352539
    3. '()

' → logprob: -10.703958511352539
    4. '():
' → logprob: -11.203958511352539
    5. '(' → logprob: -11.328958511352539
    6. '()
' → logprob: -11.703958511352539
    7. '       ' → logprob: -12.828958511352539
    8. ')' → logprob: -12.953958511352539
    9. '   ' → logprob: -13.203958511352539
    10. '(
' → logprob: -14.203958511352539

Token 193: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02285965159535408
    2. '   ' → logprob: -4.022859573364258
    3. 'parent' → logprob: -5.647859573364258
    4. ' parent' → logprob: -7.647859573364258
    5. '        
' → logprob: -8.897859573364258
    6. '
' → logprob: -9.147859573364258
    7. '```' → logprob: -9.397859573364258
    8. '<|end|>' → logprob: -9.397859573364258
    9. '[parent' → logprob: -10.147859573364258
    10. ',parent' → logprob: -10.397859573364258

Token 194: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' (adapté à ' parent') → logprob: -0.0977361723780632
    2. 'if' → logprob: -2.597736120223999
    3. '   ' → logprob: -4.972736358642578
    4. '       ' → logprob: -5.097736358642578
    5. ' parent' → logprob: -5.597736358642578
    6. ' if' → logprob: -6.347736358642578
    7. '           ' → logprob: -9.847736358642578
    8. '```' → logprob: -10.722736358642578
    9. '[parent' → logprob: -11.222736358642578
    10. '	parent' → logprob: -11.222736358642578

Token 195: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -5.319370302458992e-06
    2. '[parent' → logprob: -13.000005722045898
    3. 's' → logprob: -14.625005722045898
    4. '[node' → logprob: -14.750005722045898
    5. '_' → logprob: -15.000005722045898
    6. ' of' → logprob: -15.125005722045898
    7. '_o' → logprob: -15.250005722045898
    8. '_for' → logprob: -15.500005722045898
    9. '[' → logprob: -15.750005722045898
    10. ')' → logprob: -15.875005722045898

Token 196: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.008059871383011341
    2. 'node' → logprob: -4.883059978485107
    3. 'current' → logprob: -8.00805950164795
    4. '[node' → logprob: -9.38305950164795
    5. '[current' → logprob: -10.88305950164795
    6. 'Node' → logprob: -12.13305950164795
    7. '_current' → logprob: -12.50805950164795
    8. ' node' → logprob: -12.63305950164795
    9. 'parent' → logprob: -13.38305950164795
    10. '```' → logprob: -14.00805950164795

Token 197: '[current' (ID: 49470)
  Prédit: '[current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[current' → logprob: -1.4378848391061183e-05
    2. '[' → logprob: -11.375014305114746
    3. '[parent' → logprob: -13.750014305114746
    4. '[cur' → logprob: -14.500014305114746
    5. 'current' → logprob: -14.750014305114746
    6. '[curr' → logprob: -15.500014305114746
    7. '```' → logprob: -15.500014305114746
    8. '=current' → logprob: -15.500014305114746
    9. ' [' → logprob: -16.250015258789062
    10. ' current' → logprob: -17.625015258789062

Token 198: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.00012928384239785373
    2. 'node' → logprob: -9.250129699707031
    3. '_token' → logprob: -10.875129699707031
    4. ')' → logprob: -13.125129699707031
    5. '_user' → logprob: -13.625129699707031
    6. ']' → logprob: -13.625129699707031
    7. ' node' → logprob: -14.000129699707031
    8. '[node' → logprob: -14.125129699707031
    9. '])' → logprob: -14.250129699707031
    10. 'of' → logprob: -14.250129699707031

Token 199: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7059118747711182
    2. ']' → logprob: -0.7059118747711182
    3. ']=' → logprob: -4.705911636352539
    4. ' =' → logprob: -5.705911636352539
    5. ' ]' → logprob: -8.205911636352539
    6. ')' → logprob: -10.330911636352539
    7. '[' → logprob: -12.455911636352539
    8. ',' → logprob: -13.205911636352539
    9. ')=' → logprob: -13.330911636352539
    10. 's' → logprob: -13.955911636352539

Token 200: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1002068892121315
    2. ' =' → logprob: -2.3502068519592285
    3. '[' → logprob: -16.60020637512207
    4. ')' → logprob: -16.72520637512207
    5. ',' → logprob: -17.35020637512207
    6. ' ' → logprob: -17.47520637512207
    7. ')=' → logprob: -17.60020637512207
    8. ']=' → logprob: -18.47520637512207
    9. '＝' → logprob: -18.60020637512207
    10. ']' → logprob: -18.60020637512207

Token 201: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.0009115827269852161
    2. ' parent' → logprob: -7.000911712646484
    3. '(parent' → logprob: -17.125911712646484
    4. '	parent' → logprob: -17.625911712646484
    5. '[parent' → logprob: -18.250911712646484
    6. 'paren' → logprob: -18.625911712646484
    7. 'p' → logprob: -19.500911712646484
    8. '   ' → logprob: -19.750911712646484
    9. '_parent' → logprob: -20.000911712646484
    10. 'Parent' → logprob: -20.000911712646484

Token 202: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02033351920545101
    2. 'for' → logprob: -4.020333290100098
    3. ' for' → logprob: -6.270333290100098
    4. '   ' → logprob: -8.520333290100098
    5. '```' → logprob: -10.020333290100098
    6. '        
' → logprob: -11.020333290100098
    7. 'if' → logprob: -11.645333290100098
    8. '<|end|>' → logprob: -11.895333290100098
    9. '           ' → logprob: -12.395333290100098
    10. ',' → logprob: -13.020333290100098

Token 203: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10200276225805283
    2. '<|end|>' → logprob: -2.9770028591156006
    3. '
' → logprob: -3.3520028591156006
    4. '   ' → logprob: -6.2270026206970215
    5. '        
' → logprob: -6.2270026206970215
    6. ' for' → logprob: -6.3520026206970215
    7. 'for' → logprob: -6.7270026206970215
    8. ' if' → logprob: -7.2270026206970215
    9. ' ' → logprob: -7.3520026206970215
    10. '  
' → logprob: -7.6020026206970215

Token 204: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00275602238252759
    2. ' for' → logprob: -6.377756118774414
    3. '       ' → logprob: -7.002756118774414
    4. '   ' → logprob: -8.877756118774414
    5. 'if' → logprob: -13.002756118774414
    6. '```' → logprob: -13.627756118774414
    7. '	for' → logprob: -14.877756118774414
    8. '           ' → logprob: -15.127756118774414
    9. ' ' → logprob: -15.377756118774414
    10. '        
' → logprob: -16.627756118774414

Token 205: ' neighbor' (ID: 13034)
  Prédit: ' neighbor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' neighbor' → logprob: -0.4741952419281006
    2. 'neighbor' → logprob: -0.9741952419281006
    3. 'adj' → logprob: -10.22419548034668
    4. ' next' → logprob: -11.34919548034668
    5. ' neighbour' → logprob: -11.47419548034668
    6. 'n' → logprob: -11.72419548034668
    7. 'ne' → logprob: -11.97419548034668
    8. ' adjacent' → logprob: -12.09919548034668
    9. ' node' → logprob: -12.22419548034668
    10. 'next' → logprob: -12.34919548034668

Token 206: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004626172594726086
    2. 'in' → logprob: -5.379626274108887
    3. '<|end|>' → logprob: -13.004626274108887
    4. ' ' → logprob: -13.254626274108887
    5. '	in' → logprob: -13.754626274108887
    6. '<|end|>' → logprob: -15.879626274108887
    7. 'import' → logprob: -16.25462532043457
    8. ' not' → logprob: -16.37962532043457
    9. ',' → logprob: -16.37962532043457
    10. '_in' → logprob: -16.37962532043457

Token 207: ' tree' (ID: 8165)
  Prédit: ' tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tree' → logprob: -0.20144304633140564
    2. 'tree' → logprob: -1.701443076133728
    3. '(tree' → logprob: -10.70144271850586
    4. '	tree' → logprob: -12.07644271850586
    5. '_tree' → logprob: -14.70144271850586
    6. '.tree' → logprob: -14.95144271850586
    7. ' ' → logprob: -15.20144271850586
    8. '[' → logprob: -15.70144271850586
    9. 't' → logprob: -16.32644271850586
    10. 'Tree' → logprob: -16.45144271850586

Token 208: '_ad' (ID: 23782)
  Prédit: '_ad'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ad' → logprob: -5.824579784530215e-05
    2. '_of' → logprob: -10.0000581741333
    3. '_adj' → logprob: -11.7500581741333
    4. '[node' → logprob: -12.8750581741333
    5. '[current' → logprob: -13.7500581741333
    6. '_lists' → logprob: -14.6250581741333
    7. '[' → logprob: -15.7500581741333
    8. '_ac' → logprob: -16.375059127807617
    9. 'adj' → logprob: -16.375059127807617
    10. 'ad' → logprob: -16.750059127807617

Token 209: 'jac' (ID: 77250)
  Prédit: 'jac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jac' → logprob: -0.00015050210640765727
    2. 'j' → logprob: -8.875150680541992
    3. 'acency' → logprob: -12.000150680541992
    4. 'adj' → logprob: -13.625150680541992
    5. 'yac' → logprob: -13.625150680541992
    6. 'iac' → logprob: -14.625150680541992
    7. 'acent' → logprob: -15.000150680541992
    8. '_adj' → logprob: -15.125150680541992
    9. 'Jac' → logprob: -15.500150680541992
    10. '[' → logprob: -16.000150680541992

Token 210: 'ency' (ID: 2799)
  Prédit: '_lists'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lists' → logprob: -0.04611428454518318
    2. 'acency' → logprob: -3.796114206314087
    3. 'lists' → logprob: -4.546114444732666
    4. 'acy' → logprob: -4.921114444732666
    5. 'acent' → logprob: -6.296114444732666
    6. 'alist' → logprob: -6.921114444732666
    7. 'ency' → logprob: -6.921114444732666
    8. '_list' → logprob: -8.671113967895508
    9. 'ancy' → logprob: -8.796113967895508
    10. '_nodes' → logprob: -9.671113967895508

Token 211: '_lists' (ID: 93609)
  Prédit: '_lists'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lists' → logprob: -0.002737708855420351
    2. '[current' → logprob: -6.002737522125244
    3. '_list' → logprob: -9.252737998962402
    4. 'current' → logprob: -9.502737998962402
    5. 's' → logprob: -10.502737998962402
    6. 'Lists' → logprob: -11.127737998962402
    7. 'lists' → logprob: -11.127737998962402
    8. '[node' → logprob: -11.502737998962402
    9. '[' → logprob: -11.627737998962402
    10. '_current' → logprob: -12.877737998962402

Token 212: '[current' (ID: 49470)
  Prédit: '[current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[current' → logprob: -5.796184723294573e-06
    2. 'current' → logprob: -12.375005722045898
    3. '[' → logprob: -14.125005722045898
    4. '[
' → logprob: -15.500005722045898
    5. '[cur' → logprob: -15.500005722045898
    6. ' [' → logprob: -16.5000057220459
    7. '   ' → logprob: -16.6250057220459
    8. '(current' → logprob: -16.8750057220459
    9. '```' → logprob: -17.0000057220459
    10. ' current' → logprob: -17.3750057220459

Token 213: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -3.7146746763028204e-05
    2. 'node' → logprob: -11.00003719329834
    3. '[node' → logprob: -11.25003719329834
    4. '_ad' → logprob: -13.25003719329834
    5. '_of' → logprob: -13.37503719329834
    6. '_list' → logprob: -13.75003719329834
    7. ')' → logprob: -14.25003719329834
    8. 'Node' → logprob: -15.25003719329834
    9. '[' → logprob: -15.25003719329834
    10. 'of' → logprob: -15.37503719329834

Token 214: ']:
' (ID: 22152)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6398158073425293
    2. ':' → logprob: -0.7648158073425293
    3. ']:
' → logprob: -5.139815807342529
    4. '):
' → logprob: -7.514815807342529
    5. ']:' → logprob: -7.639815807342529
    6. '           ' → logprob: -8.889816284179688
    7. '   ' → logprob: -10.014816284179688
    8. '       ' → logprob: -10.389816284179688
    9. '():
' → logprob: -10.514816284179688
    10. '):' → logprob: -11.014816284179688

Token 215: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006373805925250053
    2. ' if' → logprob: -5.381373882293701
    3. '<|end|>' → logprob: -6.631373882293701
    4. 'if' → logprob: -9.256373405456543
    5. '            ' → logprob: -10.006373405456543
    6. '               ' → logprob: -10.131373405456543
    7. ':' → logprob: -10.131373405456543
    8. ',' → logprob: -10.256373405456543
    9. '          ' → logprob: -10.256373405456543
    10. '<|end|>' → logprob: -10.506373405456543

Token 216: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.07451065629720688
    2. 'if' (adapté à ' if') → logprob: -2.9495105743408203
    3. '               ' → logprob: -4.57451057434082
    4. '           ' → logprob: -4.69951057434082
    5. '```' → logprob: -11.57451057434082
    6. '            ' → logprob: -11.82451057434082
    7. '   ' → logprob: -13.07451057434082
    8. '       ' → logprob: -13.69951057434082
    9. ',' → logprob: -14.07451057434082
    10. '          ' → logprob: -14.19951057434082

Token 217: ' neighbor' (ID: 13034)
  Prédit: ' neighbor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' neighbor' → logprob: -0.5759459733963013
    2. 'neighbor' → logprob: -0.8259459733963013
    3. '                   ' → logprob: -13.200945854187012
    4. '               ' → logprob: -13.950945854187012
    5. '```' → logprob: -14.325945854187012
    6. 'ne' → logprob: -14.575945854187012
    7. '           ' → logprob: -14.575945854187012
    8. '            ' → logprob: -15.200945854187012
    9. ' neighbour' → logprob: -15.200945854187012
    10. '_neighbor' → logprob: -15.200945854187012

Token 218: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.2014147937297821
    2. '!=' → logprob: -1.7014148235321045
    3. ')!=' → logprob: -14.326415061950684
    4. '()!=' → logprob: -15.201415061950684
    5. '!=-' → logprob: -15.701415061950684
    6. ']!=' → logprob: -15.826415061950684
    7. '!==' → logprob: -16.076414108276367
    8. '!=(' → logprob: -16.201414108276367
    9. '!="' → logprob: -16.951414108276367
    10. ' ' → logprob: -17.076414108276367

Token 219: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.4009940028190613
    2. 'current' → logprob: -1.150994062423706
    3. ' parent' → logprob: -4.900993824005127
    4. ' current' → logprob: -5.025993824005127
    5. ' ' → logprob: -11.525994300842285
    6. '   ' → logprob: -11.775994300842285
    7. '	parent' → logprob: -14.775994300842285
    8. '    ' → logprob: -14.775994300842285
    9. '  ' → logprob: -15.150994300842285
    10. '0' → logprob: -16.27599334716797

Token 220: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08901406079530716
    2. ':
' → logprob: -2.5890140533447266
    3. '               ' → logprob: -4.839014053344727
    4. ' and' → logprob: -6.839014053344727
    5. '):' → logprob: -7.714014053344727
    6. '):
' → logprob: -8.089014053344727
    7. ',' → logprob: -8.839014053344727
    8. ')' → logprob: -9.464014053344727
    9. ':

' → logprob: -10.464014053344727
    10. '<|end|>' → logprob: -10.964014053344727

Token 221: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.034368839114904404
    2. ' reconstruct' → logprob: -3.4093687534332275
    3. 're' → logprob: -7.409368991851807
    4. '           ' → logprob: -10.784368515014648
    5. ' initial' → logprob: -10.909368515014648
    6. ' reconstru' → logprob: -11.284368515014648
    7. ' ' → logprob: -11.909368515014648
    8. 'initial' → logprob: -12.034368515014648
    9. ' recon' → logprob: -12.034368515014648
    10. ' rebuild' → logprob: -12.159368515014648

Token 222: ' reconstruct' (ID: 78298)
  Prédit: ' reconstruct'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' reconstruct' → logprob: -0.06252741068601608
    2. 're' → logprob: -2.8125274181365967
    3. '               ' → logprob: -7.937527179718018
    4. '                   ' → logprob: -8.812527656555176
    5. '   ' → logprob: -11.437527656555176
    6. ' rebuild' → logprob: -11.437527656555176
    7. ' recon' → logprob: -11.687527656555176
    8. ' reconstruction' → logprob: -11.937527656555176
    9. ' ' → logprob: -13.062527656555176
    10. ' recreate' → logprob: -13.187527656555176

Token 223: '_queue' (ID: 25622)
  Prédit: '_queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_queue' → logprob: -7.896309739408025e-07
    2. 'queue' → logprob: -15.500000953674316
    3. ' _' → logprob: -15.625000953674316
    4. '_' → logprob: -16.0
    5. '_q' → logprob: -16.375
    6. '_append' → logprob: -16.75
    7. '_enqueue' → logprob: -17.0
    8. '```' → logprob: -17.125
    9. '_QUEUE' → logprob: -17.5
    10. 'Queue' → logprob: -17.875

Token 224: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -3.79811754100956e-05
    2. '.' → logprob: -10.250038146972656
    3. '.enqueue' → logprob: -13.250038146972656
    4. ' .' → logprob: -14.500038146972656
    5. 'append' → logprob: -16.000038146972656
    6. '.extend' → logprob: -16.125038146972656
    7. '.put' → logprob: -18.250038146972656
    8. '   ' → logprob: -18.625038146972656
    9. '.app' → logprob: -19.000038146972656
    10. ').' → logprob: -19.125038146972656

Token 225: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.008791246451437473
    2. '(ne' → logprob: -4.758791446685791
    3. '(' → logprob: -8.758790969848633
    4. ' (' → logprob: -10.883790969848633
    5. ' ((' → logprob: -14.508790969848633
    6. '(
' → logprob: -15.633790969848633
    7. '(n' → logprob: -16.508790969848633
    8. '(next' → logprob: -17.633790969848633
    9. '```' → logprob: -17.633790969848633
    10. '(current' → logprob: -17.758790969848633

Token 226: 'neighbor' (ID: 108409)
  Prédit: 'neighbor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -0.00020938136731274426
    2. ' neighbor' → logprob: -8.50020980834961
    3. '(ne' → logprob: -12.12520980834961
    4. '                   ' → logprob: -16.12520980834961
    5. 'neighbors' → logprob: -16.62520980834961
    6. '               ' → logprob: -17.25020980834961
    7. '   ' → logprob: -17.87520980834961
    8. '(' → logprob: -17.87520980834961
    9. '_neighbor' → logprob: -17.87520980834961
    10. '           ' → logprob: -18.37520980834961

Token 227: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000496436667162925
    2. ',current' → logprob: -7.6254963874816895
    3. ' ,' → logprob: -12.250496864318848
    4. 'current' → logprob: -13.250496864318848
    5. ',
' → logprob: -13.500496864318848
    6. '(current' → logprob: -15.375496864318848
    7. ' current' → logprob: -15.375496864318848
    8. '[current' → logprob: -17.00049591064453
    9. '),' → logprob: -18.50049591064453
    10. '`,' → logprob: -19.12549591064453

Token 228: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.3132629096508026
    2. ' current' → logprob: -1.313262939453125
    3. '[current' → logprob: -15.063262939453125
    4. '	current' → logprob: -15.563262939453125
    5. ' ' → logprob: -15.813262939453125
    6. '_current' → logprob: -15.938262939453125
    7. '(current' → logprob: -16.063262939453125
    8. 'Current' → logprob: -16.688262939453125
    9. '$current' → logprob: -16.688262939453125
    10. '.current' → logprob: -16.688262939453125

Token 229: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -4.632542913896032e-05
    2. 'node' → logprob: -10.000046730041504
    3. ' node' → logprob: -15.000046730041504
    4. '[node' → logprob: -15.625046730041504
    5. ')' → logprob: -16.375045776367188
    6. '_NODE' → logprob: -16.500045776367188
    7. '_token' → logprob: -16.625045776367188
    8. '_' → logprob: -16.875045776367188
    9. '_nodes' → logprob: -17.500045776367188
    10. '```' → logprob: -17.750045776367188

Token 230: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0010800872696563601
    2. '))
' → logprob: -6.87608003616333
    3. ')' → logprob: -10.001080513000488
    4. ')))' → logprob: -14.376080513000488
    5. '))

' → logprob: -14.501080513000488
    6. '       ' → logprob: -15.626080513000488
    7. ')
' → logprob: -15.876080513000488
    8. '()))' → logprob: -16.126079559326172
    9. '               ' → logprob: -16.376079559326172
    10. '   ' → logprob: -16.376079559326172

Token 231: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07711973041296005
    2. '
' → logprob: -2.827119827270508
    3. '    
' → logprob: -4.452119827270508
    4. '<|end|>' → logprob: -6.952119827270508
    5. '  
' → logprob: -7.202119827270508
    6. 'return' → logprob: -7.827119827270508
    7. ')' → logprob: -8.202119827270508
    8. '                
' → logprob: -9.077119827270508
    9. '       ' → logprob: -9.202119827270508
    10. ' return' → logprob: -9.702119827270508

Token 232: '   ' (ID: 271)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.38530346751213074
    2. '   ' → logprob: -1.3853034973144531
    3. 'max' → logprob: -3.385303497314453
    4. '#' → logprob: -4.010303497314453
    5. 'distance' → logprob: -4.885303497314453
    6. '
' → logprob: -5.885303497314453
    7. 'dist' → logprob: -6.635303497314453
    8. 'current' → logprob: -7.260303497314453
    9. 'start' → logprob: -7.385303497314453
    10. 'long' → logprob: -7.385303497314453

Token 233: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' (adapté à ' path') → logprob: -0.08211764693260193
    2. 'max' → logprob: -3.8321175575256348
    3. '#' → logprob: -3.9571175575256348
    4. 'current' → logprob: -3.9571175575256348
    5. 'f' → logprob: -5.082117557525635
    6. 'end' → logprob: -5.832117557525635
    7. 'while' → logprob: -6.082117557525635
    8. 'for' → logprob: -6.082117557525635
    9. 'fur' → logprob: -6.207117557525635
    10. 'node' → logprob: -6.332117557525635

Token 234: '_from' (ID: 12526)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6863429546356201
    2. '=' → logprob: -0.8113429546356201
    3. '_nodes' → logprob: -3.31134295463562
    4. '=[]' → logprob: -5.061343193054199
    5. '_end' → logprob: -5.686343193054199
    6. '_start' → logprob: -6.436343193054199
    7. '_' → logprob: -6.561343193054199
    8. '_length' → logprob: -6.686343193054199
    9. '_node' → logprob: -7.061343193054199
    10. '_path' → logprob: -7.311343193054199

Token 235: '_last' (ID: 26359)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.14530177414417267
    2. '_last' → logprob: -2.8953018188476562
    3. '=' → logprob: -3.0203018188476562
    4. '_node' → logprob: -4.645301818847656
    5. '[last' → logprob: -5.145301818847656
    6. '_' → logprob: -5.270301818847656
    7. '_=' → logprob: -5.395301818847656
    8. '_end' → logprob: -7.145301818847656
    9. ' =' → logprob: -7.270301818847656
    10. 'node' → logprob: -7.395301818847656

Token 236: '_to' (ID: 5089)
  Prédit: '_node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.07498642057180405
    2. '_' → logprob: -3.449986457824707
    3. ' =' → logprob: -3.699986457824707
    4. '=' → logprob: -4.574986457824707
    5. '_path' → logprob: -5.699986457824707
    6. '=_' → logprob: -7.324986457824707
    7. '_to' → logprob: -7.699986457824707
    8. '=node' → logprob: -8.199986457824707
    9. '_=' → logprob: -8.699986457824707
    10. '_nodes' → logprob: -8.824986457824707

Token 237: '_first' (ID: 29347)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8582821488380432
    2. 'start' → logprob: -1.8582820892333984
    3. 'root' → logprob: -2.3582820892333984
    4. '_start' → logprob: -2.3582820892333984
    5. '=' → logprob: -2.7332820892333984
    6. ' =' → logprob: -2.9832820892333984
    7. '_root' → logprob: -3.3582820892333984
    8. '_' → logprob: -4.108282089233398
    9. 'zero' → logprob: -4.358282089233398
    10. '_zero' → logprob: -4.358282089233398

Token 238: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08902518451213837
    2. '=' → logprob: -2.4640252590179443
    3. '=[]' → logprob: -10.089025497436523
    4. '_' → logprob: -10.839025497436523
    5. ',' → logprob: -11.464025497436523
    6. ' ' → logprob: -12.089025497436523
    7. '=[' → logprob: -13.714025497436523
    8. ' =[' → logprob: -13.839025497436523
    9. '[]' → logprob: -13.964025497436523
    10. '_=' → logprob: -14.214025497436523

Token 239: ' [' (ID: 723)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.5068976879119873
    2. '[]' → logprob: -1.0068976879119873
    3. '[' → logprob: -3.8818976879119873
    4. ' []
' → logprob: -5.256897926330566
    5. ' []' → logprob: -5.631897926330566
    6. ' [' → logprob: -6.006897926330566
    7. '[]

' → logprob: -8.631897926330566
    8. ' ' → logprob: -8.756897926330566
    9. 'deque' → logprob: -10.881897926330566
    10. '[current' → logprob: -11.256897926330566

Token 240: 'path' (ID: 4189)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.0006388116744346917
    2. ' last' → logprob: -7.375638961791992
    3. '   ' → logprob: -11.500638961791992
    4. '
' → logprob: -13.625638961791992
    5. 'path' → logprob: -14.750638961791992
    6. '(last' → logprob: -15.750638961791992
    7. '0' → logprob: -15.875638961791992
    8. '[last' → logprob: -15.875638961791992
    9. ',last' → logprob: -17.000638961791992
    10. '  ' → logprob: -17.375638961791992

Token 241: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -8.537868779967539e-06
    2. '_from' → logprob: -12.125008583068848
    3. 'start' → logprob: -13.375008583068848
    4. 'Start' → logprob: -13.750008583068848
    5. '_end' → logprob: -15.625008583068848
    6. '_START' → logprob: -16.12500762939453
    7. 'from' → logprob: -17.50000762939453
    8. ' start' → logprob: -18.00000762939453
    9. '   ' → logprob: -18.12500762939453
    10. '_Start' → logprob: -18.12500762939453

Token 242: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -2.5776860184123507e-06
    2. '_' → logprob: -13.62500286102295
    3. '_token' → logprob: -14.87500286102295
    4. ')_' → logprob: -15.25000286102295
    5. 'node' → logprob: -15.75000286102295
    6. '_NODE' → logprob: -15.87500286102295
    7. '_Node' → logprob: -15.87500286102295
    8. 'Node' → logprob: -16.500001907348633
    9. ')' → logprob: -16.500001907348633
    10. '_nodes' → logprob: -17.000001907348633

Token 243: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6941031217575073
    2. ']
' → logprob: -0.6941031217575073
    3. ']

' → logprob: -7.944103240966797
    4. ']
' → logprob: -8.819103240966797
    5. 'last' → logprob: -9.069103240966797
    6. 'current' → logprob: -9.319103240966797
    7. ' ]' → logprob: -9.444103240966797
    8. ' ]
' → logprob: -9.694103240966797
    9. '=' → logprob: -10.819103240966797
    10. ' =' → logprob: -11.069103240966797

Token 244: '   ' (ID: 271)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5177649855613708
    2. ' =' → logprob: -1.3927650451660156
    3. 'current' → logprob: -2.1427650451660156
    4. ')' → logprob: -4.767765045166016
    5. '[current' → logprob: -4.892765045166016
    6. 'while' → logprob: -5.517765045166016
    7. '[' → logprob: -5.767765045166016
    8. ',' → logprob: -5.892765045166016
    9. '=current' → logprob: -5.892765045166016
    10. '_' → logprob: -6.142765045166016

Token 245: ' ancestor' (ID: 90832)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.5775542855262756
    2. 'while' → logprob: -0.8275542855262756
    3. 'node' → logprob: -6.702554225921631
    4. 'last' → logprob: -8.702554702758789
    5. 'path' → logprob: -9.327554702758789
    6. ' while' → logprob: -10.327554702758789
    7. 'cur' → logprob: -10.327554702758789
    8. 'curr' → logprob: -10.327554702758789
    9. 'prev' → logprob: -11.702554702758789
    10. ' current' → logprob: -11.952554702758789

Token 246: '_pointer' (ID: 48183)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4300214946269989
    2. '=' → logprob: -1.0550215244293213
    3. '_of' → logprob: -7.430021286010742
    4. 's' → logprob: -7.680021286010742
    5. '_' → logprob: -9.305021286010742
    6. '=node' → logprob: -10.305021286010742
    7. '_node' → logprob: -10.430021286010742
    8. 'of' → logprob: -10.805021286010742
    9. '=current' → logprob: -10.805021286010742
    10. '[' → logprob: -11.555021286010742

Token 247: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006716079078614712
    2. '=' → logprob: -5.006716251373291
    3. ' ' → logprob: -15.131715774536133
    4. 's' → logprob: -15.881715774536133
    5. ',' → logprob: -16.506715774536133
    6. ' =[' → logprob: -16.756715774536133
    7. '_' → logprob: -17.006715774536133
    8. ' =
' → logprob: -17.381715774536133
    9. '=current' → logprob: -17.381715774536133
    10. '[' → logprob: -17.631715774536133

Token 248: ' path' (ID: 3104)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'last' → logprob: -6.813969957875088e-05
    2. ' last' → logprob: -9.625067710876465
    3. '   ' → logprob: -14.000067710876465
    4. 'parent' → logprob: -14.250067710876465
    5. 'path' → logprob: -14.875067710876465
    6. '[last' → logprob: -17.37506866455078
    7. ' ' → logprob: -17.75006866455078
    8. 'len' → logprob: -18.12506866455078
    9. '	last' → logprob: -18.87506866455078
    10. 'end' → logprob: -19.37506866455078

Token 249: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -0.3931031823158264
    2. '_from' → logprob: -1.1431031227111816
    3. '_of' → logprob: -5.143103122711182
    4. 'from' → logprob: -8.26810359954834
    5. 'Start' → logprob: -10.51810359954834
    6. '_end' → logprob: -10.64310359954834
    7. 'start' → logprob: -11.01810359954834
    8. '_for' → logprob: -11.39310359954834
    9. '=' → logprob: -11.64310359954834
    10. '_length' → logprob: -12.26810359954834

Token 250: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -1.27099974633893e-05
    2. 'node' → logprob: -11.750012397766113
    3. '_' → logprob: -13.250012397766113
    4. '_of' → logprob: -13.375012397766113
    5. 'ed' → logprob: -13.875012397766113
    6. 'Node' → logprob: -16.37501335144043
    7. '_NODE' → logprob: -16.50001335144043
    8. ' node' → logprob: -16.62501335144043
    9. '_token' → logprob: -16.75001335144043
    10. 'ing' → logprob: -17.25001335144043

Token 251: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 252: '   ' (ID: 271)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8582946062088013
    2. '<|end|>' → logprob: -0.9832946062088013
    3. '
' → logprob: -2.9832944869995117
    4. ' =' → logprob: -3.1082944869995117
    5. '_' → logprob: -3.3582944869995117
    6. 'while' → logprob: -3.4832944869995117
    7. '_parent' → logprob: -4.608294486999512
    8. ' ' → logprob: -4.858294486999512
    9. ' while' → logprob: -5.483294486999512
    10. ')' → logprob: -5.483294486999512

Token 253: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.03656503185629845
    2. ' while' → logprob: -3.411565065383911
    3. '=' → logprob: -6.911564826965332
    4. '   ' → logprob: -7.036564826965332
    5. '_parent' → logprob: -7.661564826965332
    6. 'parent' → logprob: -8.911564826965332
    7. '_' → logprob: -9.036564826965332
    8. 'current' → logprob: -9.286564826965332
    9. ' =' → logprob: -9.536564826965332
    10. ' ' → logprob: -11.161564826965332

Token 254: ' ancestor' (ID: 90832)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.14477266371250153
    2. 'ancestor' → logprob: -2.14477276802063
    3. ' parent' → logprob: -4.144772529602051
    4. ' ancestor' → logprob: -6.394772529602051
    5. '   ' → logprob: -9.39477252960205
    6. 'ances' → logprob: -11.26977252960205
    7. '(parent' → logprob: -11.26977252960205
    8. '	parent' → logprob: -11.39477252960205
    9. 'anc' → logprob: -11.64477252960205
    10. ' ' → logprob: -12.01977252960205

Token 255: '_pointer' (ID: 48183)
  Prédit: '_pointer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pointer' → logprob: -0.08919300884008408
    2. '_of' → logprob: -2.464193105697632
    3. '!=' → logprob: -9.339193344116211
    4. ' !=' → logprob: -10.089193344116211
    5. 'pointer' → logprob: -10.214193344116211
    6. 'of' → logprob: -10.964193344116211
    7. '_parent' → logprob: -11.339193344116211
    8. '_ptr' → logprob: -11.589193344116211
    9. '_' → logprob: -11.589193344116211
    10. '_POINTER' → logprob: -12.089193344116211

Token 256: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.01117266621440649
    2. ' !=' → logprob: -5.136172771453857
    3. '!=-' → logprob: -5.261172771453857
    4. '!=(' → logprob: -11.0111722946167
    5. ':=' → logprob: -11.8861722946167
    6. ']!=' → logprob: -12.3861722946167
    7. '()!=' → logprob: -13.1361722946167
    8. '!==' → logprob: -13.2611722946167
    9. '!' → logprob: -13.3861722946167
    10. 'is' → logprob: -13.6361722946167

Token 257: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.40060731768608093
    2. '-' → logprob: -1.1506073474884033
    3. ' -' → logprob: -5.025607109069824
    4. ' last' → logprob: -5.025607109069824
    5. '-last' → logprob: -7.775607109069824
    6. '   ' → logprob: -9.650607109069824
    7. '0' → logprob: -12.400607109069824
    8. ' ' → logprob: -12.525607109069824
    9. ':last' → logprob: -12.775607109069824
    10. '	last' → logprob: -12.775607109069824

Token 258: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -2.7729658540920354e-05
    2. '_' → logprob: -10.875027656555176
    3. '_user' → logprob: -11.875027656555176
    4. '_token' → logprob: -14.000027656555176
    5. '_nodes' → logprob: -15.750027656555176
    6. '_n' → logprob: -15.750027656555176
    7. '_NODE' → logprob: -16.000028610229492
    8. '__' → logprob: -16.125028610229492
    9. 'node' → logprob: -16.125028610229492
    10. ' _' → logprob: -16.250028610229492

Token 259: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.1279553291387856e-05
    2. 'visited' → logprob: -11.750011444091797
    3. '   ' → logprob: -13.125011444091797
    4. ':
' → logprob: -14.875011444091797
    5. '       ' → logprob: -15.125011444091797
    6. '```' → logprob: -15.250011444091797
    7. ':' → logprob: -15.500011444091797
    8. ' ' → logprob: -16.625011444091797
    9. '_
' → logprob: -17.000011444091797
    10. '    ' → logprob: -17.375011444091797

Token 260: 'visited' (ID: 52453)
  Prédit: 'visited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -3.47626737493556e-05
    2. ' visited' → logprob: -10.75003433227539
    3. 'Visited' → logprob: -12.62503433227539
    4. '_' → logprob: -12.87503433227539
    5. ' ' → logprob: -13.50003433227539
    6. 'vis' → logprob: -13.87503433227539
    7. '   ' → logprob: -13.87503433227539
    8. '0' → logprob: -14.12503433227539
    9. 'vist' → logprob: -14.25003433227539
    10. 'visit' → logprob: -14.75003433227539

Token 261: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.34887731075286865
    2. ':
' → logprob: -1.2238773107528687
    3. '   ' → logprob: -8.598876953125
    4. ' and' → logprob: -9.223876953125
    5. '):
' → logprob: -10.473876953125
    6. ' :
' → logprob: -10.473876953125
    7. '[' → logprob: -10.848876953125
    8. '       ' → logprob: -11.348876953125
    9. ' :' → logprob: -11.473876953125
    10. ':
' → logprob: -11.723876953125

Token 262: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016033077612519264
    2. '
' → logprob: -4.641033172607422
    3. '   ' → logprob: -5.891033172607422
    4. 'ancestor' → logprob: -6.141033172607422
    5. 'parent' → logprob: -7.516033172607422
    6. ' parent' → logprob: -8.391033172607422
    7. '```' → logprob: -8.516033172607422
    8. ' ancestor' → logprob: -9.641033172607422
    9. '        
' → logprob: -9.891033172607422
    10. '    
' → logprob: -10.141033172607422

Token 263: ' ancestor' (ID: 90832)
  Prédit: 'ancestor'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ancestor' (adapté à ' ancestor') → logprob: -0.5985018610954285
    2. '   ' → logprob: -1.5985019207000732
    3. ' ancestor' → logprob: -1.5985019207000732
    4. '       ' → logprob: -3.7235019207000732
    5. 'parent' → logprob: -5.348501682281494
    6. ' parent' → logprob: -5.473501682281494
    7. '```' → logprob: -5.723501682281494
    8. ' path' → logprob: -5.973501682281494
    9. 'path' → logprob: -6.098501682281494
    10. '
' → logprob: -6.973501682281494

Token 264: '_pointer' (ID: 48183)
  Prédit: '_pointer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pointer' → logprob: -0.0014299978502094746
    2. '_of' → logprob: -6.626430034637451
    3. '_parent' → logprob: -9.376429557800293
    4. '_ptr' → logprob: -12.001429557800293
    5. '_' → logprob: -12.126429557800293
    6. '=' → logprob: -13.376429557800293
    7. '_p' → logprob: -13.876429557800293
    8. 'of' → logprob: -14.001429557800293
    9. 'Pointer' → logprob: -14.126429557800293
    10. '_point' → logprob: -14.376429557800293

Token 265: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011047935113310814
    2. ' =' → logprob: -4.511047840118408
    3. ',' → logprob: -17.13604736328125
    4. '=

' → logprob: -17.26104736328125
    5. '=current' → logprob: -17.63604736328125
    6. '=}' → logprob: -17.63604736328125
    7. '=user' → logprob: -18.01104736328125
    8. '=
' → logprob: -18.13604736328125
    9. ')' → logprob: -18.38604736328125
    10. 'parent' → logprob: -18.76104736328125

Token 266: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.12692968547344208
    2. ' parent' → logprob: -2.126929759979248
    3. '   ' → logprob: -14.50192928314209
    4. '[parent' → logprob: -14.75192928314209
    5. '(parent' → logprob: -15.50192928314209
    6. '	parent' → logprob: -15.50192928314209
    7. ' ' → logprob: -15.75192928314209
    8. '.parent' → logprob: -17.126930236816406
    9. ',parent' → logprob: -17.126930236816406
    10. 'Parent' → logprob: -17.376930236816406

Token 267: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -1.9361264946837764e-07
    2. 'of' → logprob: -16.375
    3. ' of' → logprob: -18.125
    4. '_for' → logprob: -19.5
    5. '[_' → logprob: -19.625
    6. '```' → logprob: -19.75
    7. 'Of' → logprob: -20.375
    8. '_or' → logprob: -20.5
    9. '_parent' → logprob: -20.75
    10. '_to' → logprob: -20.875

Token 268: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.0002967320033349097
    2. 'node' → logprob: -8.125296592712402
    3. '[node' → logprob: -16.00029754638672
    4. ' node' → logprob: -16.25029754638672
    5. 'parent' → logprob: -16.25029754638672
    6. 'Node' → logprob: -16.37529754638672
    7. '_' → logprob: -16.75029754638672
    8. '_NODE' → logprob: -17.12529754638672
    9. '_of' → logprob: -17.12529754638672
    10. '_user' → logprob: -17.25029754638672

Token 269: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.6240566083070007e-06
    2. '[parent' → logprob: -13.750001907348633
    3. '[current' → logprob: -15.500001907348633
    4. '```' → logprob: -16.125001907348633
    5. 'ancestor' → logprob: -16.125001907348633
    6. '[
' → logprob: -16.500001907348633
    7. '\[' → logprob: -18.250001907348633
    8. ' [' → logprob: -18.375001907348633
    9. '[in' → logprob: -19.625001907348633
    10. '[node' → logprob: -19.875001907348633

Token 270: 'ancestor' (ID: 157679)
  Prédit: 'ancestor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ancestor' → logprob: -9.491498531133402e-06
    2. ' ancestor' → logprob: -12.375009536743164
    3. 'anc' → logprob: -12.875009536743164
    4. 'ances' → logprob: -13.000009536743164
    5. 'ante' → logprob: -16.125009536743164
    6. '   ' → logprob: -16.375009536743164
    7. ' ' → logprob: -17.125009536743164
    8. 'Ancestor' → logprob: -17.375009536743164
    9. '[' → logprob: -17.625009536743164
    10. 'ans' → logprob: -18.250009536743164

Token 271: '_pointer' (ID: 48183)
  Prédit: '_pointer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pointer' → logprob: -3.023293538717553e-05
    2. 'pointer' → logprob: -10.875030517578125
    3. 'Pointer' → logprob: -11.875030517578125
    4. '-pointer' → logprob: -13.750030517578125
    5. '```' → logprob: -14.000030517578125
    6. '_POINTER' → logprob: -14.125030517578125
    7. '_of' → logprob: -15.250030517578125
    8. '_ptr' → logprob: -15.375030517578125
    9. '_p' → logprob: -15.625030517578125
    10. ']' → logprob: -15.750030517578125

Token 272: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.008160618133842945
    2. '<|end|>' → logprob: -5.758160591125488
    3. ')' → logprob: -6.008160591125488
    4. ']
' → logprob: -6.258160591125488
    5. '       ' → logprob: -8.008160591125488
    6. '<|end|>' → logprob: -9.258160591125488
    7. ' ]' → logprob: -9.383160591125488
    8. '   ' → logprob: -10.758160591125488
    9. '[' → logprob: -11.383160591125488
    10. ')]' → logprob: -11.758160591125488

Token 273: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7306609153747559
    2. '       ' → logprob: -0.7306609153747559
    3. 'path' → logprob: -4.105660915374756
    4. '
' → logprob: -5.730660915374756
    5. '_path' → logprob: -5.855660915374756
    6. ' path' → logprob: -5.855660915374756
    7. ')' → logprob: -5.855660915374756
    8. '[path' → logprob: -6.230660915374756
    9. '        
' → logprob: -6.730660915374756
    10. '    
' → logprob: -7.105660915374756

Token 274: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' (adapté à ' path') → logprob: -0.014267404563724995
    2. ' path' → logprob: -4.264267444610596
    3. '   ' → logprob: -9.264266967773438
    4. '
' → logprob: -12.889266967773438
    5. '```' → logprob: -13.014266967773438
    6. '       ' → logprob: -13.264266967773438
    7. '[path' → logprob: -14.514266967773438
    8. ' ' → logprob: -14.889266967773438
    9. '.path' → logprob: -15.014266967773438
    10. '	path' → logprob: -15.014266967773438

Token 275: '_from' (ID: 12526)
  Prédit: '_from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_from' → logprob: -8.061054359131958e-06
    2. 'from' → logprob: -12.000007629394531
    3. '_' → logprob: -14.750007629394531
    4. '.append' → logprob: -14.875007629394531
    5. '_append' → logprob: -15.125007629394531
    6. 'From' → logprob: -15.250007629394531
    7. '_FROM' → logprob: -16.25000762939453
    8. '```' → logprob: -16.50000762939453
    9. '_to' → logprob: -16.75000762939453
    10. '_
' → logprob: -16.87500762939453

Token 276: '_last' (ID: 26359)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.6932095885276794
    2. '_last' → logprob: -0.6932095885276794
    3. 'ancestor' → logprob: -10.443209648132324
    4. ' last' → logprob: -11.318209648132324
    5. '[last' → logprob: -12.318209648132324
    6. 'path' → logprob: -12.693209648132324
    7. '_first' → logprob: -12.818209648132324
    8. 'from' → logprob: -13.693209648132324
    9. 'las' → logprob: -13.818209648132324
    10. '_' → logprob: -13.818209648132324

Token 277: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.00015812745550647378
    2. '_from' → logprob: -8.875158309936523
    3. '_pointer' → logprob: -11.000158309936523
    4. '_' → logprob: -14.000158309936523
    5. 'to' → logprob: -15.500158309936523
    6. '_t' → logprob: -16.000158309936523
    7. '_of' → logprob: -16.125158309936523
    8. '_node' → logprob: -17.125158309936523
    9. '[' → logprob: -17.250158309936523
    10. ' _' → logprob: -17.375158309936523

Token 278: '_first' (ID: 29347)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'first' → logprob: -0.6931917071342468
    2. '_first' → logprob: -0.6931917071342468
    3. '_last' → logprob: -11.068191528320312
    4. 'path' → logprob: -11.318191528320312
    5. ' first' → logprob: -11.943191528320312
    6. '[first' → logprob: -12.443191528320312
    7. 'last' → logprob: -13.318191528320312
    8. '_' → logprob: -14.068191528320312
    9. '_f' → logprob: -14.193191528320312
    10. '[' → logprob: -14.818191528320312

Token 279: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.003181159496307373
    2. '.' → logprob: -5.753180980682373
    3. '.app' → logprob: -13.253181457519531
    4. ' .' → logprob: -14.378181457519531
    5. 'append' → logprob: -15.503181457519531
    6. '.extend' → logprob: -15.503181457519531
    7. '.add' → logprob: -15.628181457519531
    8. '.ap' → logprob: -15.878181457519531
    9. '_append' → logprob: -15.878181457519531
    10. '.Append' → logprob: -16.87818145751953

Token 280: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.128163257315464e-07
    2. '(
' → logprob: -15.875
    3. '(parent' → logprob: -16.125
    4. '((' → logprob: -17.0
    5. ' (' → logprob: -17.25
    6. '(

' → logprob: -18.75
    7. '(anchor' → logprob: -19.375
    8. '(ans' → logprob: -19.875
    9. '('' → logprob: -20.0
    10. '(`' → logprob: -20.125

Token 281: 'ancestor' (ID: 157679)
  Prédit: 'ancestor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ancestor' → logprob: -0.0019317318219691515
    2. ' ancestor' → logprob: -6.251931667327881
    3. 'ances' → logprob: -13.501932144165039
    4. 'anc' → logprob: -13.626932144165039
    5. '   ' → logprob: -15.626932144165039
    6. ' ' → logprob: -16.12693214416504
    7. 'Ancestor' → logprob: -16.25193214416504
    8. 'ante' → logprob: -17.25193214416504
    9. '  ' → logprob: -17.50193214416504
    10. '(' → logprob: -17.62693214416504

Token 282: '_pointer' (ID: 48183)
  Prédit: '_pointer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pointer' → logprob: -2.2246291337069124e-05
    2. 'Pointer' → logprob: -11.500021934509277
    3. '_of' → logprob: -11.750021934509277
    4. '_POINTER' → logprob: -14.000021934509277
    5. 'pointer' → logprob: -14.125021934509277
    6. '_' → logprob: -14.750021934509277
    7. '_parent' → logprob: -15.000021934509277
    8. '_node' → logprob: -15.125021934509277
    9. '_point' → logprob: -15.375021934509277
    10. 'of' → logprob: -15.375021934509277

Token 283: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.310693111619912e-05
    2. ')
' → logprob: -10.500042915344238
    3. '   ' → logprob: -11.750042915344238
    4. ')return' → logprob: -12.250042915344238
    5. '<|end|>' → logprob: -13.625042915344238
    6. ' )' → logprob: -13.750042915344238
    7. '       ' → logprob: -16.250043869018555
    8. ')}' → logprob: -16.375043869018555
    9. '}' → logprob: -17.000043869018555
    10. ' ' → logprob: -17.000043869018555

Token 284: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14636358618736267
    2. '<|end|>' → logprob: -2.0213634967803955
    3. ')' → logprob: -5.896363735198975
    4. '```' → logprob: -8.521363258361816
    5. ' return' → logprob: -9.271363258361816
    6. '    ' → logprob: -9.271363258361816
    7. '<|end|>' → logprob: -9.271363258361816
    8. ' ' → logprob: -9.771363258361816
    9. '	return' → logprob: -9.771363258361816
    10. '    
' → logprob: -9.896363258361816

Token 285: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0041837021708488464
    2. '<|end|>' → logprob: -5.754183769226074
    3. 'return' → logprob: -7.879183769226074
    4. ')' → logprob: -8.754183769226074
    5. '	return' → logprob: -9.004183769226074
    6. ' return' → logprob: -9.254183769226074
    7. '
' → logprob: -9.754183769226074
    8. '[' → logprob: -10.379183769226074
    9. '    
' → logprob: -10.754183769226074
    10. '\' → logprob: -10.754183769226074

Token 286: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.009347434155642986
    2. '   ' → logprob: -4.759347438812256
    3. ' return' → logprob: -7.259347438812256
    4. ' ' → logprob: -11.759346961975098
    5. '	return' → logprob: -12.509346961975098
    6. '    ' → logprob: -12.759346961975098
    7. '#' → logprob: -12.884346961975098
    8. ')' → logprob: -13.134346961975098
    9. 'path' → logprob: -13.134346961975098
    10. 'result' → logprob: -13.634346961975098

Token 287: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.5759449601173401
    2. ' path' → logprob: -0.8259449601173401
    3. '[path' → logprob: -12.950944900512695
    4. 'last' → logprob: -13.950944900512695
    5. '(path' → logprob: -14.325944900512695
    6. '   ' → logprob: -14.575944900512695
    7. ' ' → logprob: -14.825944900512695
    8. ' last' → logprob: -15.200944900512695
    9. '	path' → logprob: -15.700944900512695
    10. '[' → logprob: -16.450944900512695

Token 288: '_from' (ID: 12526)
  Prédit: '_from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_from' → logprob: -0.006177864037454128
    2. '_' → logprob: -5.13117790222168
    3. '_
' → logprob: -9.13117790222168
    4. '_form' → logprob: -9.50617790222168
    5. '_f' → logprob: -11.50617790222168
    6. ' _' → logprob: -11.50617790222168
    7. '_

' → logprob: -11.75617790222168
    8. '_path' → logprob: -11.88117790222168
    9. '_for' → logprob: -12.25617790222168
    10. '_fr' → logprob: -12.88117790222168

Token 289: '_last' (ID: 26359)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.2519310414791107
    2. '_last' → logprob: -1.501931071281433
    3. ' last' → logprob: -14.751931190490723
    4. '_first' → logprob: -15.001931190490723
    5. '[last' → logprob: -15.126931190490723
    6. 'lasti' → logprob: -15.751931190490723
    7. 'first' → logprob: -16.001930236816406
    8. '	last' → logprob: -16.251930236816406
    9. 'list' → logprob: -16.501930236816406
    10. 'path' → logprob: -16.626930236816406

Token 290: '_to' (ID: 5089)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -6.408677290892228e-05
    2. 'visited' → logprob: -10.0000638961792
    3. '_to' → logprob: -11.5000638961792
    4. '_path' → logprob: -12.3750638961792
    5. '_node' → logprob: -13.1250638961792
    6. '_visit' → logprob: -14.2500638961792
    7. '_vis' → logprob: -14.5000638961792
    8. '_used' → logprob: -15.3750638961792
    9. 'Visited' → logprob: -16.125064849853516
    10. '__' → logprob: -16.625064849853516

Token 291: '_first' (ID: 29347)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'first' → logprob: -0.008615161292254925
    2. '_first' → logprob: -4.758615016937256
    3. 'last' → logprob: -15.383615493774414
    4. ' first' → logprob: -16.383615493774414
    5. 'list' → logprob: -16.758615493774414
    6. 'fst' → logprob: -17.383615493774414
    7. 'path' → logprob: -17.383615493774414
    8. '_last' → logprob: -17.508615493774414
    9. 'frist' → logprob: -17.883615493774414
    10. 'First' → logprob: -18.008615493774414

Token 292: '

' (ID: 279)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3713725507259369
    2. ':' → logprob: -1.9963725805282593
    3. '(' → logprob: -2.6213724613189697
    4. '[' → logprob: -2.9963724613189697
    5. '<|end|>' → logprob: -3.3713724613189697
    6. ',' → logprob: -4.996372699737549
    7. ' ' → logprob: -5.621372699737549
    8. '=' → logprob: -6.496372699737549
    9. '   ' → logprob: -6.996372699737549
    10. '#' → logprob: -7.121372699737549

Token 293: 'def' (ID: 1314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3613661825656891
    2. ':' → logprob: -1.7363661527633667
    3. '#' → logprob: -3.4863662719726562
    4. '[' → logprob: -3.6113662719726562
    5. ',' → logprob: -3.8613662719726562
    6. ' ' → logprob: -4.611366271972656
    7. '<|end|>' → logprob: -4.611366271972656
    8. '_' → logprob: -5.236366271972656
    9. '   ' → logprob: -5.361366271972656
    10. 'def' → logprob: -5.486366271972656

Token 294: ' compute' (ID: 23864)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -1.5840212106704712
    2. ' multiply' → logprob: -1.5840212106704712
    3. ' find' → logprob: -1.7090212106704712
    4. ' calculate' → logprob: -2.4590210914611816
    5. ' longest' → logprob: -2.9590210914611816
    6. ' product' → logprob: -2.9590210914611816
    7. ' tree' → logprob: -3.0840210914611816
    8. ' sum' → logprob: -3.4590210914611816
    9. ' diameter' → logprob: -3.8340210914611816
    10. ' main' → logprob: -3.9590210914611816

Token 295: '_max' (ID: 13731)
  Prédit: '_long'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_long' → logprob: -0.8873929977416992
    2. '_d' → logprob: -1.5123929977416992
    3. '_max' → logprob: -1.7623929977416992
    4. '_tree' → logprob: -1.7623929977416992
    5. '_path' → logprob: -4.137392997741699
    6. '_depth' → logprob: -6.262392997741699
    7. '_product' → logprob: -6.512392997741699
    8. '_m' → logprob: -7.262392997741699
    9. '_sub' → logprob: -7.512392997741699
    10. '_' → logprob: -7.512392997741699

Token 296: '_branch' (ID: 71162)
  Prédit: '_path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_path' → logprob: -0.3460221290588379
    2. '_product' → logprob: -1.346022129058838
    3. '_weight' → logprob: -4.346022129058838
    4. '_sum' → logprob: -4.971022129058838
    5. '_depth' → logprob: -6.346022129058838
    6. '_ind' → logprob: -6.471022129058838
    7. '_flow' → logprob: -6.471022129058838
    8. 'imum' → logprob: -6.596022129058838
    9. '_d' → logprob: -6.846022129058838
    10. '_score' → logprob: -7.096022129058838

Token 297: 'ing' (ID: 289)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.7589275240898132
    2. 'ing' → logprob: -1.258927583694458
    3. '_length' → logprob: -2.008927583694458
    4. '_factor' → logprob: -2.508927583694458
    5. '_product' → logprob: -4.383927345275879
    6. '_weight' → logprob: -5.633927345275879
    7. '_path' → logprob: -5.633927345275879
    8. '_s' → logprob: -6.008927345275879
    9. 'es' → logprob: -6.258927345275879
    10. 'sum' → logprob: -6.383927345275879

Token 298: '(tree' (ID: 44909)
  Prédit: '_factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -0.03540610149502754
    2. '(tree' → logprob: -3.5354061126708984
    3. '_path' → logprob: -6.160406112670898
    4. '_f' → logprob: -6.910406112670898
    5. '(branch' → logprob: -7.535406112670898
    6. '(node' → logprob: -7.785406112670898
    7. 'factor' → logprob: -8.285406112670898
    8. '(' → logprob: -8.285406112670898
    9. '_tree' → logprob: -8.660406112670898
    10. '_degree' → logprob: -8.660406112670898

Token 299: '_ad' (ID: 23782)
  Prédit: '_ad'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ad' → logprob: -0.002900805091485381
    2. '_depth' → logprob: -7.12790060043335
    3. '_adj' → logprob: -7.50290060043335
    4. '_size' → logprob: -7.75290060043335
    5. '_branch' → logprob: -7.75290060043335
    6. '):' → logprob: -8.502901077270508
    7. '_max' → logprob: -9.127901077270508
    8. '_length' → logprob: -10.127901077270508
    9. '_degree' → logprob: -10.127901077270508
    10. '_' → logprob: -10.252901077270508

Token 300: 'jac' (ID: 77250)
  Prédit: 'jac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jac' → logprob: -0.00045200303429737687
    2. 'acency' → logprob: -7.750452041625977
    3. 'j' → logprob: -10.875452041625977
    4. 'js' → logprob: -14.375452041625977
    5. 'Jac' → logprob: -14.625452041625977
    6. 'd' → logprob: -14.750452041625977
    7. '_' → logprob: -15.500452041625977
    8. ' jac' → logprob: -16.000452041625977
    9. '_j' → logprob: -16.250452041625977
    10. '_lists' → logprob: -16.625452041625977

Token 301: 'ency' (ID: 2799)
  Prédit: 'ency'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ency' → logprob: -0.025072090327739716
    2. 'y' → logprob: -4.52507209777832
    3. '_list' → logprob: -5.02507209777832
    4. '_lists' → logprob: -5.52507209777832
    5. '```' → logprob: -8.02507209777832
    6. ' lists' → logprob: -8.15007209777832
    7. 'cy' → logprob: -8.52507209777832
    8. '_' → logprob: -8.52507209777832
    9. '[' → logprob: -8.65007209777832
    10. 'acency' → logprob: -8.65007209777832

Token 302: '_lists' (ID: 93609)
  Prédit: '_lists'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lists' → logprob: -0.0002693224814720452
    2. 'lists' → logprob: -8.500268936157227
    3. '_list' → logprob: -10.000268936157227
    4. ')' → logprob: -12.375268936157227
    5. 'def' → logprob: -13.125268936157227
    6. ' lists' → logprob: -13.125268936157227
    7. 'list' → logprob: -13.125268936157227
    8. 's' → logprob: -13.125268936157227
    9. 'Lists' → logprob: -13.375268936157227
    10. '_lengths' → logprob: -13.750268936157227

Token 303: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.15383051335811615
    2. ',' → logprob: -2.0288305282592773
    3. '):
' → logprob: -4.528830528259277
    4. '   ' → logprob: -8.528830528259277
    5. ')' → logprob: -9.778830528259277
    6. '):
' → logprob: -10.778830528259277
    7. ' ):' → logprob: -12.278830528259277
    8. '[' → logprob: -12.903830528259277
    9. ',node' → logprob: -13.028830528259277
    10. '):

' → logprob: -13.528830528259277

Token 304: ' current' (ID: 2208)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.8500726819038391
    2. ' root' → logprob: -1.8500726222991943
    3. 'path' → logprob: -1.9750726222991943
    4. 'start' → logprob: -2.6000726222991943
    5. 'node' → logprob: -2.7250726222991943
    6. ' path' → logprob: -3.7250726222991943
    7. ' node' → logprob: -3.7250726222991943
    8. ' start' → logprob: -4.100072860717773
    9. 'current' → logprob: -4.475072860717773
    10. 'max' → logprob: -5.100072860717773

Token 305: '_root' (ID: 29989)
  Prédit: '_node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.0005146674811840057
    2. ',' → logprob: -8.00051498413086
    3. '_branch' → logprob: -9.62551498413086
    4. '_nodes' → logprob: -10.25051498413086
    5. '_path' → logprob: -10.25051498413086
    6. ')' → logprob: -12.00051498413086
    7. '_depth' → logprob: -12.12551498413086
    8. 'node' → logprob: -12.62551498413086
    9. ',node' → logprob: -12.62551498413086
    10. '_parent' → logprob: -12.75051498413086

Token 306: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004957250785082579
    2. '):' → logprob: -7.875495910644531
    3. ' ,' → logprob: -9.625495910644531
    4. '):
' → logprob: -10.625495910644531
    5. '   ' → logprob: -11.500495910644531
    6. ',node' → logprob: -12.375495910644531
    7. ',current' → logprob: -12.500495910644531
    8. ',
' → logprob: -13.750495910644531
    9. '_,' → logprob: -14.000495910644531
    10. ')' → logprob: -14.625495910644531

Token 307: ' except' (ID: 6384)
  Prédit: ' parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' parent' → logprob: -0.31620925664901733
    2. 'parent' → logprob: -1.816209316253662
    3. ' visited' → logprob: -3.191209316253662
    4. 'visited' → logprob: -3.566209316253662
    5. ' excluded' → logprob: -5.191209316253662
    6. ' current' → logprob: -5.191209316253662
    7. 'max' → logprob: -5.441209316253662
    8. ' max' → logprob: -5.441209316253662
    9. 'excluded' → logprob: -5.816209316253662
    10. ' subtree' → logprob: -6.066209316253662

Token 308: '_parent' (ID: 39570)
  Prédit: '_node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.2303716093301773
    2. 'ed' → logprob: -2.4803717136383057
    3. '_nodes' → logprob: -2.4803717136383057
    4. '_branch' → logprob: -3.8553717136383057
    5. '_child' → logprob: -5.230371475219727
    6. '_edge' → logprob: -5.980371475219727
    7. '_sub' → logprob: -6.480371475219727
    8. '_edges' → logprob: -6.730371475219727
    9. '_' → logprob: -7.105371475219727
    10. 'ion' → logprob: -7.230371475219727

Token 309: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.025164268910884857
    2. ',' → logprob: -3.7751643657684326
    3. '):
' → logprob: -7.4001641273498535
    4. ')' → logprob: -7.4001641273498535
    5. '=None' → logprob: -8.025164604187012
    6. '=' → logprob: -8.775164604187012
    7. ' ):' → logprob: -9.775164604187012
    8. '_node' → logprob: -10.025164604187012
    9. '_parent' → logprob: -10.400164604187012
    10. '):

' → logprob: -11.275164604187012

Token 310: ' required' (ID: 3759)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.984147846698761
    2. ' max' → logprob: -1.2341477870941162
    3. 'depth' → logprob: -2.609147787094116
    4. 'except' → logprob: -3.234147787094116
    5. 'visited' → logprob: -3.609147787094116
    6. ' depth' → logprob: -3.734147787094116
    7. ' visited' → logprob: -3.859147787094116
    8. ' current' → logprob: -4.109148025512695
    9. 'path' → logprob: -4.234148025512695
    10. ' subtree' → logprob: -4.234148025512695

Token 311: '_depth' (ID: 44220)
  Prédit: '_depth'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_depth' → logprob: -1.227933406829834
    2. '_length' → logprob: -1.477933406829834
    3. '_nodes' → logprob: -2.102933406829834
    4. '_br' → logprob: -2.477933406829834
    5. '_node' → logprob: -2.602933406829834
    6. '_branch' → logprob: -2.852933406829834
    7. '_lengths' → logprob: -3.852933406829834
    8. '_child' → logprob: -4.352933406829834
    9. '_sub' → logprob: -4.352933406829834
    10. '_path' → logprob: -4.602933406829834

Token 312: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1537267565727234
    2. ',' → logprob: -2.028726816177368
    3. '):
' → logprob: -4.528726577758789
    4. 's' → logprob: -10.028726577758789
    5. '):
' → logprob: -10.278726577758789
    6. ')' → logprob: -10.403726577758789
    7. ' ):' → logprob: -10.528726577758789
    8. '=' → logprob: -11.153726577758789
    9. '   ' → logprob: -11.403726577758789
    10. ' ,' → logprob: -11.528726577758789

Token 313: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0015493794344365597
    2. '   ' → logprob: -7.126549243927002
    3. '):' → logprob: -7.876549243927002
    4. ',' → logprob: -8.62654972076416
    5. '():' → logprob: -9.87654972076416
    6. ':
' → logprob: -10.00154972076416
    7. ' :' → logprob: -10.00154972076416
    8. 'def' → logprob: -11.87654972076416
    9. ':def' → logprob: -11.87654972076416
    10. ':**' → logprob: -12.37654972076416

Token 314: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.2662295699119568
    2. 'if' → logprob: -1.6412296295166016
    3. '   ' → logprob: -4.016229629516602
    4. ' max' → logprob: -5.016229629516602
    5. ' if' → logprob: -5.141229629516602
    6. 'depth' → logprob: -5.516229629516602
    7. 'branch' → logprob: -6.266229629516602
    8. 'current' → logprob: -7.266229629516602
    9. 'children' → logprob: -7.516229629516602
    10. 'sub' → logprob: -7.516229629516602

Token 315: '_children' (ID: 78282)
  Prédit: '_depth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_depth' → logprob: -0.7673163414001465
    2. '_branch' → logprob: -0.7673163414001465
    3. '_length' → logprob: -2.7673163414001465
    4. '_path' → logprob: -6.2673163414001465
    5. '_child' → logprob: -6.5173163414001465
    6. '_value' → logprob: -6.7673163414001465
    7. '_max' → logprob: -7.0173163414001465
    8. '_sub' → logprob: -7.1423163414001465
    9. '_len' → logprob: -7.7673163414001465
    10. '_' → logprob: -8.267316818237305

Token 316: '_per' (ID: 10938)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01653163880109787
    2. '=' → logprob: -4.266531467437744
    3. '_count' → logprob: -6.266531467437744
    4. ',' → logprob: -8.266531944274902
    5. '   ' → logprob: -10.016531944274902
    6. 'count' → logprob: -10.141531944274902
    7. 's' → logprob: -10.766531944274902
    8. '_length' → logprob: -10.891531944274902
    9. '_max' → logprob: -11.891531944274902
    10. ' ' → logprob: -11.891531944274902

Token 317: '_level' (ID: 18404)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.7643482685089111
    2. '_node' → logprob: -1.2643482685089111
    3. 'def' → logprob: -2.764348268508911
    4. 'current' → logprob: -3.139348268508911
    5. 'parent' → logprob: -4.014348030090332
    6. '=' → logprob: -4.264348030090332
    7. '_parent' → logprob: -4.264348030090332
    8. '_depth' → logprob: -4.264348030090332
    9. 'depth' → logprob: -4.389348030090332
    10. 'haps' → logprob: -4.389348030090332

Token 318: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011111481115221977
    2. '=' → logprob: -4.511111259460449
    3. '   ' → logprob: -10.51111125946045
    4. ',' → logprob: -10.51111125946045
    5. '[' → logprob: -13.13611125946045
    6. '=[]' → logprob: -13.26111125946045
    7. ' ' → logprob: -13.76111125946045
    8. 's' → logprob: -14.01111125946045
    9. 'def' → logprob: -14.26111125946045
    10. ':' → logprob: -14.51111125946045

Token 319: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.10016719251871109
    2. '[]' → logprob: -2.7251672744750977
    3. '[-' → logprob: -4.350167274475098
    4. '{}' → logprob: -4.475167274475098
    5. ' [' → logprob: -6.100167274475098
    6. '0' → logprob: -6.225167274475098
    7. '[]
' → logprob: -7.600167274475098
    8. '{' → logprob: -8.725167274475098
    9. ' []' → logprob: -8.850167274475098
    10. '   ' → logprob: -8.975167274475098

Token 320: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.013825777918100357
    2. '-' → logprob: -4.3888258934021
    3. '[]' → logprob: -8.013825416564941
    4. ' ' → logprob: -8.138825416564941
    5. ']' → logprob: -8.263825416564941
    6. '1' → logprob: -8.888825416564941
    7. 'float' → logprob: -9.763825416564941
    8. ' -' → logprob: -9.888825416564941
    9. 'len' → logprob: -10.013825416564941
    10. '   ' → logprob: -10.388825416564941

Token 321: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0014295210130512714
    2. ']
' → logprob: -7.751429557800293
    3. ']

' → logprob: -8.376429557800293
    4. 'for' → logprob: -8.376429557800293
    5. ' for' → logprob: -8.501429557800293
    6. ' ]' → logprob: -9.126429557800293
    7. ']+' → logprob: -10.001429557800293
    8. 'if' → logprob: -10.126429557800293
    9. ']*' → logprob: -10.251429557800293
    10. ' if' → logprob: -10.376429557800293

Token 322: ' *' (ID: 425)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.042277589440345764
    2. 'for' → logprob: -4.667277812957764
    3. 'def' → logprob: -4.792277812957764
    4. ' for' → logprob: -5.292277812957764
    5. ']' → logprob: -5.542277812957764
    6. '

' → logprob: -5.667277812957764
    7. ' +' → logprob: -5.792277812957764
    8. '   ' → logprob: -5.792277812957764
    9. '    
' → logprob: -6.542277812957764
    10. ',' → logprob: -7.167277812957764

Token 323: ' required' (ID: 3759)
  Prédit: 'required'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'required' → logprob: -0.475481778383255
    2. '(required' → logprob: -0.9754817485809326
    3. '(' → logprob: -7.475481986999512
    4. ' required' → logprob: -7.600481986999512
    5. ' (' → logprob: -8.475481986999512
    6. '(max' → logprob: -10.225481986999512
    7. '(len' → logprob: -10.600481986999512
    8. '	required' → logprob: -11.350481986999512
    9. 'len' → logprob: -11.600481986999512
    10. 'requested' → logprob: -11.725481986999512

Token 324: '_depth' (ID: 44220)
  Prédit: '_depth'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_depth' → logprob: -1.9862216504407115e-05
    2. '_' → logprob: -11.750020027160645
    3. 'depth' → logprob: -12.250020027160645
    4. '_root' → logprob: -12.875020027160645
    5. ' _' → logprob: -14.000020027160645
    6. '_DEPTH' → logprob: -14.250020027160645
    7. '_de' → logprob: -14.500020027160645
    8. '   ' → logprob: -14.750020027160645
    9. 'Depth' → logprob: -14.750020027160645
    10. '_branch' → logprob: -15.250020027160645

Token 325: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.02330394648015499
    2. '    
' → logprob: -4.273303985595703
    3. '  
' → logprob: -5.773303985595703
    4. '   ' → logprob: -6.023303985595703
    5. ' 
' → logprob: -6.523303985595703
    6. '   
' → logprob: -7.023303985595703
    7. '	
' → logprob: -7.523303985595703
    8. ' for' → logprob: -9.148303985595703
    9. '
' → logprob: -9.148303985595703
    10. '<|end|>' → logprob: -9.148303985595703

Token 326: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04063080623745918
    2. '    
' → logprob: -3.66563081741333
    3. '   ' → logprob: -4.91563081741333
    4. ' 
' → logprob: -5.91563081741333
    5. '  
' → logprob: -6.04063081741333
    6. '	
' → logprob: -7.16563081741333
    7. '   
' → logprob: -7.66563081741333
    8. ',' → logprob: -9.290630340576172
    9. '
' → logprob: -9.540630340576172
    10. ' for' → logprob: -9.540630340576172

Token 327: ' exploration' (ID: 38070)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7816081643104553
    2. 'def' → logprob: -1.2816081047058105
    3. 'children' → logprob: -2.7816081047058105
    4. 'queue' → logprob: -3.0316081047058105
    5. 'stack' → logprob: -3.6566081047058105
    6. 'current' → logprob: -3.9066081047058105
    7. '   ' → logprob: -4.0316081047058105
    8. 'level' → logprob: -4.0316081047058105
    9. 'child' → logprob: -4.1566081047058105
    10. 'nodes' → logprob: -4.6566081047058105

Token 328: '_queue' (ID: 25622)
  Prédit: '_queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_queue' → logprob: -0.18571023643016815
    2. '_stack' → logprob: -1.8107101917266846
    3. '_' → logprob: -5.935710430145264
    4. ' =' → logprob: -6.060710430145264
    5. '=' → logprob: -7.060710430145264
    6. '_nodes' → logprob: -10.435709953308105
    7. '_depth' → logprob: -10.685709953308105
    8. '_level' → logprob: -11.560709953308105
    9. ' _' → logprob: -11.935709953308105
    10. '_list' → logprob: -12.060709953308105

Token 329: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1602250337600708
    2. '=' → logprob: -1.9102250337600708
    3. ' ' → logprob: -14.910224914550781
    4. '<|end|>' → logprob: -16.03522491455078
    5. ')' → logprob: -16.16022491455078
    6. ',' → logprob: -16.16022491455078
    7. '=[]' → logprob: -16.41022491455078
    8. '	' → logprob: -16.78522491455078
    9. '   ' → logprob: -17.28522491455078
    10. ' =
' → logprob: -17.53522491455078

Token 330: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.10048916935920715
    2. ' deque' → logprob: -2.3504891395568848
    3. '[(' → logprob: -8.225489616394043
    4. ' [(' → logprob: -11.350489616394043
    5. '   ' → logprob: -13.600489616394043
    6. 'de' → logprob: -13.725489616394043
    7. 'Deque' → logprob: -14.850489616394043
    8. ' ' → logprob: -15.600489616394043
    9. 'collections' → logprob: -16.100488662719727
    10. '[' → logprob: -17.475488662719727

Token 331: '([
' (ID: 18206)
  Prédit: '([('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([(' → logprob: -0.00027218335890211165
    2. '([' → logprob: -8.500271797180176
    3. '()' → logprob: -9.875271797180176
    4. '[(' → logprob: -11.875271797180176
    5. '()
' → logprob: -12.250271797180176
    6. '([]' → logprob: -12.875271797180176
    7. '((' → logprob: -14.375271797180176
    8. '(' → logprob: -14.375271797180176
    9. '([
' → logprob: -14.375271797180176
    10. '([])
' → logprob: -14.500271797180176

Token 332: '       ' (ID: 309)
  Prédit: '(current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(current' → logprob: -0.04067990556359291
    2. '   ' → logprob: -4.290679931640625
    3. '(node' → logprob: -4.540679931640625
    4. '(' → logprob: -4.915679931640625
    5. ' (' → logprob: -5.540679931640625
    6. '       ' → logprob: -6.290679931640625
    7. '(child' → logprob: -7.790679931640625
    8. '(next' → logprob: -7.915679931640625
    9. '(root' → logprob: -8.290679931640625
    10. '(children' → logprob: -8.665679931640625

Token 333: ' (' (ID: 350)
  Prédit: '(current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(current' → logprob: -0.0024225101806223392
    2. '(' (adapté à ' (') → logprob: -6.377422332763672
    3. ' (' → logprob: -8.377422332763672
    4. '   ' → logprob: -8.877422332763672
    5. '(node' → logprob: -9.377422332763672
    6. '(next' → logprob: -9.502422332763672
    7. '(initial' → logprob: -9.752422332763672
    8. '(child' → logprob: -10.752422332763672
    9. '(adj' → logprob: -11.127422332763672
    10. '(children' → logprob: -11.252422332763672

Token 334: 'adj' (ID: 57001)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.0251258984208107
    2. 'child' → logprob: -4.525125980377197
    3. 'node' → logprob: -5.150125980377197
    4. 'neighbor' → logprob: -5.275125980377197
    5. '(current' → logprob: -6.775125980377197
    6. '0' → logprob: -7.275125980377197
    7. '(' → logprob: -8.525125503540039
    8. 'adj' → logprob: -9.025125503540039
    9. '1' → logprob: -9.150125503540039
    10. ' current' → logprob: -9.150125503540039

Token 335: 'acent' (ID: 28063)
  Prédit: 'acent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acent' → logprob: -0.013592963106930256
    2. 'acency' → logprob: -5.0135931968688965
    3. 'current' → logprob: -6.3885931968688965
    4. 'ac' → logprob: -6.3885931968688965
    5. 'node' → logprob: -6.5135931968688965
    6. 'cent' → logprob: -8.388592720031738
    7. '[current' → logprob: -8.451092720031738
    8. '[node' → logprob: -9.201092720031738
    9. '_node' → logprob: -9.263592720031738
    10. ')' → logprob: -9.388592720031738

Token 336: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.011376004666090012
    2. ',' → logprob: -5.136375904083252
    3. 'node' → logprob: -5.386375904083252
    4. '_child' → logprob: -8.13637638092041
    5. ',node' → logprob: -8.88637638092041
    6. '_nodes' → logprob: -9.38637638092041
    7. ',current' → logprob: -9.38637638092041
    8. ')' → logprob: -9.76137638092041
    9. '_neighbor' → logprob: -10.38637638092041
    10. '_current' → logprob: -10.51137638092041

Token 337: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0019313741941004992
    2. ',current' → logprob: -7.126931190490723
    3. ' ,' → logprob: -7.251931190490723
    4. 'current' → logprob: -8.126931190490723
    5. '[current' → logprob: -10.626931190490723
    6. ',
' → logprob: -10.626931190490723
    7. ' current' → logprob: -11.251931190490723
    8. '   ' → logprob: -11.376931190490723
    9. '[' → logprob: -11.501931190490723
    10. '       ' → logprob: -12.126931190490723

Token 338: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.026115193963050842
    2. ' current' → logprob: -3.9011151790618896
    3. 'except' → logprob: -5.776115417480469
    4. '(current' → logprob: -6.276115417480469
    5. '   ' → logprob: -8.151115417480469
    6. '0' → logprob: -9.526115417480469
    7. '[current' → logprob: -10.276115417480469
    8. ' except' → logprob: -10.401115417480469
    9. ' (' → logprob: -10.526115417480469
    10. 'None' → logprob: -10.901115417480469

Token 339: '_root' (ID: 29989)
  Prédit: '_root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_root' → logprob: -0.00010580805974313989
    2. 'root' → logprob: -9.375105857849121
    3. '_' → logprob: -12.250105857849121
    4. ' root' → logprob: -12.500105857849121
    5. ',' → logprob: -13.125105857849121
    6. ' _' → logprob: -13.250105857849121
    7. '_,' → logprob: -13.375105857849121
    8. 'Root' → logprob: -13.500105857849121
    9. '_depth' → logprob: -13.875105857849121
    10. '_ROOT' → logprob: -14.500105857849121

Token 340: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011310591362416744
    2. ')' → logprob: -4.511310577392578
    3. ' ,' → logprob: -8.511310577392578
    4. '   ' → logprob: -10.511310577392578
    5. '),' → logprob: -11.886310577392578
    6. ' )' → logprob: -11.886310577392578
    7. ',)' → logprob: -12.761310577392578
    8. ')
' → logprob: -12.761310577392578
    9. ')])' → logprob: -13.011310577392578
    10. '       ' → logprob: -13.136310577392578

Token 341: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03553253784775734
    2. '0' → logprob: -4.035532474517822
    3. ' ' → logprob: -4.410532474517822
    4. 'required' → logprob: -6.035532474517822
    5. 'depth' → logprob: -7.410532474517822
    6. ')' → logprob: -7.410532474517822
    7. '   ' → logprob: -7.535532474517822
    8. '2' → logprob: -8.59803295135498
    9. ' required' → logprob: -8.84803295135498
    10. 'current' → logprob: -9.41053295135498

Token 342: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.12415732443332672
    2. '0' → logprob: -2.499157428741455
    3. 'required' → logprob: -3.624157428741455
    4. '2' → logprob: -5.124157428741455
    5. ' ' → logprob: -7.124157428741455
    6. 'current' → logprob: -7.749157428741455
    7. 'depth' → logprob: -8.624156951904297
    8. '   ' → logprob: -9.561656951904297
    9. 'True' → logprob: -9.686656951904297
    10. 'False' → logprob: -9.936656951904297

Token 343: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16523908078670502
    2. ')])' → logprob: -1.9152390956878662
    3. ')
' → logprob: -5.915238857269287
    4. ')]' → logprob: -7.540238857269287
    5. ')])
' → logprob: -7.665238857269287
    6. '),' → logprob: -7.790238857269287
    7. '),
' → logprob: -7.790238857269287
    8. '   ' → logprob: -8.040239334106445
    9. '       ' → logprob: -9.915239334106445
    10. ')],' → logprob: -10.165239334106445

Token 344: '       ' (ID: 309)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.9163628220558167
    2. ')' → logprob: -1.1663627624511719
    3. '   ' → logprob: -1.6663627624511719
    4. ' for' → logprob: -3.041362762451172
    5. '       ' → logprob: -3.041362762451172
    6. 'for' → logprob: -6.166362762451172
    7. ' ])' → logprob: -7.791362762451172
    8. ')])' → logprob: -7.916362762451172
    9. ',' → logprob: -8.041362762451172
    10. ')]' → logprob: -8.291362762451172

Token 345: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.38722720742225647
    2. '       ' → logprob: -1.512227177619934
    3. 'for' (adapté à ' for') → logprob: -2.5122272968292236
    4. '   ' → logprob: -4.0122270584106445
    5. ')' → logprob: -7.5122270584106445
    6. '])' → logprob: -7.8872270584106445
    7. '        ' → logprob: -8.637227058410645
    8. '           ' → logprob: -8.762227058410645
    9. '    ' → logprob: -9.637227058410645
    10. ',' → logprob: -9.887227058410645

Token 346: ' adjacent' (ID: 39069)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.5759516358375549
    2. ' adjacent' → logprob: -0.8259516358375549
    3. ' ' → logprob: -12.57595157623291
    4. ' ' → logprob: -13.20095157623291
    5. 'Adjacent' → logprob: -13.32595157623291
    6. '(adj' → logprob: -13.32595157623291
    7. '   ' → logprob: -13.45095157623291
    8. ' adj' → logprob: -14.45095157623291
    9. '_adj' → logprob: -14.57595157623291
    10. 'neighbor' → logprob: -15.70095157623291

Token 347: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.00027933192905038595
    2. '_' → logprob: -9.250279426574707
    3. '_adj' → logprob: -9.750279426574707
    4. 'adj' → logprob: -10.625279426574707
    5. '_neighbor' → logprob: -10.750279426574707
    6. '_nodes' → logprob: -10.875279426574707
    7. ' in' → logprob: -11.000279426574707
    8. 'node' → logprob: -11.375279426574707
    9. ')' → logprob: -12.125279426574707
    10. ' _' → logprob: -12.750279426574707

Token 348: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014188071712851524
    2. 'in' → logprob: -4.264188289642334
    3. ' ' → logprob: -11.389187812805176
    4. '	in' → logprob: -13.014187812805176
    5. ',' → logprob: -13.264187812805176
    6. '<|end|>' → logprob: -13.389187812805176
    7. ')' → logprob: -13.764187812805176
    8. 'import' → logprob: -14.139187812805176
    9. '   ' → logprob: -14.139187812805176
    10. '    ' → logprob: -14.264187812805176

Token 349: ' tree' (ID: 8165)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.5759662985801697
    2. ' tree' → logprob: -0.8259662985801697
    3. '(tree' → logprob: -10.950965881347656
    4. '	tree' → logprob: -11.950965881347656
    5. '   ' → logprob: -13.200965881347656
    6. '.tree' → logprob: -15.450965881347656
    7. '
' → logprob: -15.575965881347656
    8. ' ' → logprob: -15.825965881347656
    9. '_tree' → logprob: -15.950965881347656
    10. 't' → logprob: -16.450965881347656

Token 350: '_ad' (ID: 23782)
  Prédit: '_ad'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ad' → logprob: -1.7432603272027336e-06
    2. 'adj' → logprob: -14.250001907348633
    3. 'ad' → logprob: -14.500001907348633
    4. '_adj' → logprob: -15.250001907348633
    5. '[' → logprob: -16.750001907348633
    6. '_ac' → logprob: -16.875001907348633
    7. '[current' → logprob: -17.750001907348633
    8. '   ' → logprob: -18.250001907348633
    9. '[root' → logprob: -18.375001907348633
    10. 's' → logprob: -18.375001907348633

Token 351: 'jac' (ID: 77250)
  Prédit: 'jac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jac' → logprob: -0.00017314712749794126
    2. 'acency' → logprob: -8.750173568725586
    3. 'j' → logprob: -11.750173568725586
    4. ' adjacency' → logprob: -13.250173568725586
    5. 'adj' → logprob: -13.375173568725586
    6. 'yac' → logprob: -14.125173568725586
    7. '[' → logprob: -14.375173568725586
    8. 'Jac' → logprob: -14.500173568725586
    9. '
' → logprob: -14.625173568725586
    10. 'iac' → logprob: -15.750173568725586

Token 352: 'ency' (ID: 2799)
  Prédit: '_lists'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lists' → logprob: -0.4337690770626068
    2. 'acency' → logprob: -1.8087691068649292
    3. 'lists' → logprob: -1.9337691068649292
    4. 'ency' → logprob: -4.308769226074219
    5. 'list' → logprob: -4.558769226074219
    6. '_list' → logprob: -4.808769226074219
    7. ' lists' → logprob: -4.933769226074219
    8. 'Lists' → logprob: -6.183769226074219
    9. 'st' → logprob: -7.433769226074219
    10. 'sts' → logprob: -8.683769226074219

Token 353: '_lists' (ID: 93609)
  Prédit: '_lists'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lists' → logprob: -1.282920129597187e-05
    2. 'lists' → logprob: -11.375012397766113
    3. '[' → logprob: -14.375012397766113
    4. 's' → logprob: -15.875012397766113
    5. '_' → logprob: -16.00001335144043
    6. '_list' → logprob: -16.12501335144043
    7. 'Lists' → logprob: -16.25001335144043
    8. '   ' → logprob: -17.12501335144043
    9. '_l' → logprob: -17.12501335144043
    10. ' lists' → logprob: -17.25001335144043

Token 354: '[current' (ID: 49470)
  Prédit: '[current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[current' → logprob: -7.703443770878948e-06
    2. 'current' → logprob: -12.625007629394531
    3. '   ' → logprob: -12.750007629394531
    4. '[' → logprob: -14.125007629394531
    5. ' [' → logprob: -15.000007629394531
    6. '[cur' → logprob: -15.125007629394531
    7. '[
' → logprob: -15.750007629394531
    8. ' current' → logprob: -17.25000762939453
    9. ' ' → logprob: -17.37500762939453
    10. '[curr' → logprob: -17.75000762939453

Token 355: '_root' (ID: 29989)
  Prédit: '_root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_root' → logprob: -3.79811754100956e-05
    2. 'root' → logprob: -10.250038146972656
    3. 'Root' → logprob: -13.875038146972656
    4. '_ROOT' → logprob: -14.500038146972656
    5. '[root' → logprob: -15.125038146972656
    6. ' root' → logprob: -15.750038146972656
    7. '_current' → logprob: -15.875038146972656
    8. ')' → logprob: -16.875038146972656
    9. '-root' → logprob: -17.000038146972656
    10. '_' → logprob: -17.250038146972656

Token 356: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.17335675656795502
    2. ']
' → logprob: -1.9233567714691162
    3. ']])' → logprob: -5.173356533050537
    4. '])' → logprob: -5.548356533050537
    5. '])]' → logprob: -6.673356533050537
    6. '   ' → logprob: -6.923356533050537
    7. ')])' → logprob: -7.923356533050537
    8. ']))' → logprob: -8.048357009887695
    9. ')' → logprob: -8.673357009887695
    10. '       ' → logprob: -9.548357009887695

Token 357: '       ' (ID: 309)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.18674419820308685
    2. ' if' → logprob: -2.436744213104248
    3. '   ' → logprob: -2.561744213104248
    4. '       ' → logprob: -5.311744213104248
    5. 'if' → logprob: -8.18674373626709
    6. ' ])' → logprob: -8.56174373626709
    7. '])
' → logprob: -8.81174373626709
    8. ',' → logprob: -10.06174373626709
    9. ']);' → logprob: -10.18674373626709
    10. ']),' → logprob: -10.31174373626709

Token 358: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6305112242698669
    2. '       ' → logprob: -1.5055112838745117
    3. '])' → logprob: -1.6305112838745117
    4. 'if' (adapté à ' if') → logprob: -3.1305112838745117
    5. '   ' → logprob: -5.130511283874512
    6. '           ' → logprob: -8.755511283874512
    7. ']),' → logprob: -9.755511283874512
    8. '])
' → logprob: -10.380511283874512
    9. '        ' → logprob: -11.380511283874512
    10. '    ' → logprob: -11.380511283874512

Token 359: ' adjacent' (ID: 39069)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.01816023886203766
    2. ' adjacent' → logprob: -4.018160343170166
    3. '   ' → logprob: -12.893159866333008
    4. ' adj' → logprob: -13.018159866333008
    5. 'neighbor' → logprob: -13.268159866333008
    6. '           ' → logprob: -13.268159866333008
    7. 'Adjacent' → logprob: -14.143159866333008
    8. '(adj' → logprob: -14.393159866333008
    9. ' ' → logprob: -16.143159866333008
    10. '    ' → logprob: -16.143159866333008

Token 360: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.00024596223374828696
    2. 'node' → logprob: -8.500246047973633
    3. ' node' → logprob: -11.375246047973633
    4. ' !=' → logprob: -11.750246047973633
    5. '!=' → logprob: -11.750246047973633
    6. '_' → logprob: -13.250246047973633
    7. '(node' → logprob: -13.375246047973633
    8. 'not' → logprob: -13.500246047973633
    9. 'Node' → logprob: -13.750246047973633
    10. '_child' → logprob: -13.750246047973633

Token 361: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.20142211019992828
    2. ' !=' → logprob: -1.701422095298767
    3. ')!=' → logprob: -12.326421737670898
    4. '()!=' → logprob: -13.201421737670898
    5. ']!=' → logprob: -14.076421737670898
    6. '!=-' → logprob: -14.201421737670898
    7. '!==' → logprob: -14.951421737670898
    8. '!=(' → logprob: -15.076421737670898
    9. '!='' → logprob: -15.326421737670898
    10. '!="' → logprob: -15.951421737670898

Token 362: ' except' (ID: 6384)
  Prédit: 'except'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'except' → logprob: -0.06196824833750725
    2. ' except' → logprob: -2.8119683265686035
    3. '   ' → logprob: -15.311967849731445
    4. '	except' → logprob: -15.311967849731445
    5. 'exception' → logprob: -16.561967849731445
    6. ' ' → logprob: -17.061967849731445
    7. 'exc' → logprob: -17.311967849731445
    8. '_except' → logprob: -18.061967849731445
    9. 'Except' → logprob: -18.311967849731445
    10. 'ex' → logprob: -18.561967849731445

Token 363: '_parent' (ID: 39570)
  Prédit: '_parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_parent' → logprob: -5.200166469876422e-06
    2. ' _' → logprob: -13.250004768371582
    3. '_' → logprob: -13.375004768371582
    4. 'parent' → logprob: -13.500004768371582
    5. ' parent' → logprob: -15.500004768371582
    6. '_current' → logprob: -16.0000057220459
    7. '
' → logprob: -17.1250057220459
    8. '_
' → logprob: -17.6250057220459
    9. 'Parent' → logprob: -18.3750057220459
    10. '   ' → logprob: -18.6250057220459

Token 364: '
' (ID: 198)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.04104849696159363
    2. '   ' → logprob: -3.291048526763916
    3. ')' → logprob: -6.916048526763916
    4. ')])' → logprob: -7.416048526763916
    5. ']),' → logprob: -7.541048526763916
    6. '       ' → logprob: -7.666048526763916
    7. '])]' → logprob: -8.916048049926758
    8. ']);' → logprob: -9.166048049926758
    9. ' ])' → logprob: -9.916048049926758
    10. '])
' → logprob: -10.041048049926758

Token 365: '   ' (ID: 271)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.22720269858837128
    2. '   ' → logprob: -1.6022026538848877
    3. '])
' → logprob: -6.727202892303467
    4. '       ' → logprob: -7.977202892303467
    5. ')' → logprob: -8.852202415466309
    6. '])

' → logprob: -10.352202415466309
    7. ' ])' → logprob: -10.852202415466309
    8. ']),' → logprob: -11.227202415466309
    9. ')])' → logprob: -11.477202415466309
    10. ',' → logprob: -12.227202415466309

Token 366: ' ])
' (ID: 51770)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.03642930090427399
    2. '   ' → logprob: -3.4114294052124023
    3. '])
' (adapté à ' ])
') → logprob: -5.911429405212402
    4. '])

' → logprob: -10.286429405212402
    5. ')' → logprob: -10.786429405212402
    6. '       ' → logprob: -12.161429405212402
    7. ' ])' → logprob: -12.536429405212402
    8. ',' → logprob: -13.536429405212402
    9. '])
' → logprob: -13.536429405212402
    10. '  ' → logprob: -13.786429405212402

Token 367: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04839146137237549
    2. '    
' → logprob: -3.173391342163086
    3. '
' → logprob: -5.798391342163086
    4. '<|end|>' → logprob: -7.423391342163086
    5. '	
' → logprob: -7.798391342163086
    6. ')' → logprob: -8.173391342163086
    7. '  
' → logprob: -8.173391342163086
    8. '	while' → logprob: -8.673391342163086
    9. ',' → logprob: -8.798391342163086
    10. '```' → logprob: -9.673391342163086

Token 368: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10152372717857361
    2. 'while' → logprob: -2.3515236377716064
    3. ' while' → logprob: -6.7265238761901855
    4. '    
' → logprob: -9.476523399353027
    5. '
' → logprob: -10.226523399353027
    6. 'for' → logprob: -12.976523399353027
    7. '	while' → logprob: -13.476523399353027
    8. '       ' → logprob: -15.226523399353027
    9. '```' → logprob: -15.476523399353027
    10. ' ' → logprob: -15.601523399353027

Token 369: ' max' (ID: 2999)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -6.098748053773306e-05
    2. '   ' → logprob: -10.37506103515625
    3. 'for' → logprob: -11.00006103515625
    4. 'max' (adapté à ' max') → logprob: -11.62506103515625
    5. ' while' → logprob: -12.62506103515625
    6. 'depth' → logprob: -14.75006103515625
    7. 'visited' → logprob: -15.50006103515625
    8. '    
' → logprob: -16.37506103515625
    9. 'result' → logprob: -17.00006103515625
    10. '
' → logprob: -17.50006103515625

Token 370: '_children' (ID: 78282)
  Prédit: '_children'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_children' → logprob: -0.004601011052727699
    2. '_depth' → logprob: -5.629601001739502
    3. '_branch' → logprob: -8.00460147857666
    4. '_level' → logprob: -8.87960147857666
    5. '_max' → logprob: -9.50460147857666
    6. '(children' → logprob: -9.62960147857666
    7. '_child' → logprob: -9.87960147857666
    8. '(' → logprob: -10.00460147857666
    9. '_length' → logprob: -10.12960147857666
    10. '(max' → logprob: -10.12960147857666

Token 371: '_per' (ID: 10938)
  Prédit: '_per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_per' → logprob: -0.004159245174378157
    2. '=' → logprob: -6.629159450531006
    3. ' =' → logprob: -7.004159450531006
    4. '_at' → logprob: -7.629159450531006
    5. '_count' → logprob: -8.004158973693848
    6. '_' → logprob: -8.379158973693848
    7. '[' → logprob: -8.379158973693848
    8. '_counts' → logprob: -8.879158973693848
    9. 'per' → logprob: -9.004158973693848
    10. 'Per' → logprob: -9.504158973693848

Token 372: '_level' (ID: 18404)
  Prédit: '_level'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_level' → logprob: -0.04570019617676735
    2. 'level' → logprob: -3.1707003116607666
    3. '[level' → logprob: -6.2957000732421875
    4. '[' → logprob: -8.170700073242188
    5. '_' → logprob: -8.295700073242188
    6. '_le' → logprob: -9.545700073242188
    7. '```' → logprob: -10.545700073242188
    8. '-level' → logprob: -10.545700073242188
    9. '_per' → logprob: -10.670700073242188
    10. '_depth' → logprob: -10.920700073242188

Token 373: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2440713495016098
    2. '=' → logprob: -1.744071364402771
    3. ' =' → logprob: -3.2440712451934814
    4. '[current' → logprob: -6.6190714836120605
    5. '=[' → logprob: -7.1190714836120605
    6. ',' → logprob: -8.619071006774902
    7. '[-' → logprob: -9.619071006774902
    8. '[:]' → logprob: -9.619071006774902
    9. '[max' → logprob: -10.244071006774902
    10. '=current' → logprob: -10.619071006774902

Token 374: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003262199694290757
    2. '1' → logprob: -6.503262042999268
    3. ' ' → logprob: -6.503262042999268
    4. '-' → logprob: -9.003262519836426
    5. 'expl' → logprob: -9.628262519836426
    6. ' -' → logprob: -11.003262519836426
    7. '[' → logprob: -12.128262519836426
    8. '   ' → logprob: -12.128262519836426
    9. ']' → logprob: -12.190762519836426
    10. 'current' → logprob: -12.503262519836426

Token 375: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004194148350507021
    2. ' ]' → logprob: -6.004194259643555
    3. ']+=' → logprob: -6.504194259643555
    4. ']=' → logprob: -8.504194259643555
    5. '],' → logprob: -12.129194259643555
    6. '=' → logprob: -12.629194259643555
    7. ']*' → logprob: -13.129194259643555
    8. '[' → logprob: -13.379194259643555
    9. '-' → logprob: -14.379194259643555
    10. ']>' → logprob: -14.629194259643555

Token 376: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6448661088943481
    2. ' =' → logprob: -0.7698661088943481
    3. ' +=' → logprob: -4.769865989685059
    4. '+=' → logprob: -6.269865989685059
    5. ' *=' → logprob: -6.644865989685059
    6. '*=' → logprob: -8.519865989685059
    7. ',' → logprob: -8.644865989685059
    8. ' -=' → logprob: -9.644865989685059
    9. ' ' → logprob: -10.144865989685059
    10. ' ,' → logprob: -12.019865989685059

Token 377: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.024961743503808975
    2. '0' → logprob: -4.149961948394775
    3. '1' → logprob: -5.524961948394775
    4. 'max' → logprob: -6.024961948394775
    5. 'sum' → logprob: -6.399961948394775
    6. ' len' → logprob: -7.399961948394775
    7. '-' → logprob: -9.899961471557617
    8. ' ' → logprob: -10.149961471557617
    9. 'float' → logprob: -10.649961471557617
    10. '2' → logprob: -10.649961471557617

Token 378: '(ex' (ID: 9292)
  Prédit: '(tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tree' → logprob: -0.10038360953330994
    2. '([
' → logprob: -3.1003835201263428
    3. '([' → logprob: -3.2253835201263428
    4. '(' → logprob: -4.725383758544922
    5. '(
' → logprob: -6.350383758544922
    6. '(ex' → logprob: -10.100383758544922
    7. '(t' → logprob: -10.600383758544922
    8. '[
' → logprob: -10.850383758544922
    9. 'tree' → logprob: -11.100383758544922
    10. '[' → logprob: -11.725383758544922

Token 379: 'pl' (ID: 528)
  Prédit: 'pl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pl' → logprob: -0.0019003171473741531
    2. '[' → logprob: -7.5019001960754395
    3. 'tree' → logprob: -7.7519001960754395
    4. 'l' → logprob: -8.001900672912598
    5. '(tree' → logprob: -8.876900672912598
    6. 'oration' → logprob: -9.501900672912598
    7. '(pl' → logprob: -9.876900672912598
    8. 't' → logprob: -10.001900672912598
    9. 'plore' → logprob: -10.251900672912598
    10. '[
' → logprob: -10.501900672912598

Token 380: 'oration' (ID: 9063)
  Prédit: 'oration'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oration' → logprob: -0.0017176620895043015
    2. '[' → logprob: -7.251717567443848
    3. 'ore' → logprob: -7.376717567443848
    4. 'oring' → logprob: -9.626717567443848
    5. '
' → logprob: -9.751717567443848
    6. '[]' → logprob: -9.751717567443848
    7. 'or' → logprob: -10.626717567443848
    8. '[]
' → logprob: -10.626717567443848
    9. '```' → logprob: -11.001717567443848
    10. 'ored' → logprob: -11.001717567443848

Token 381: '_queue' (ID: 25622)
  Prédit: '_queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_queue' → logprob: -4.084206375409849e-05
    2. 'Queue' → logprob: -10.625041007995605
    3. 'queue' → logprob: -11.375041007995605
    4. '[' → logprob: -13.000041007995605
    5. '_tree' → logprob: -14.250041007995605
    6. ')' → logprob: -15.000041007995605
    7. '_QUEUE' → logprob: -15.000041007995605
    8. '_' → logprob: -15.250041007995605
    9. '```' → logprob: -15.375041007995605
    10. '   ' → logprob: -16.00004005432129

Token 382: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001005630983854644
    2. ')
' → logprob: -9.500100135803223
    3. ' )' → logprob: -10.750100135803223
    4. '   ' → logprob: -12.500100135803223
    5. ' ' → logprob: -16.12510108947754
    6. '))' → logprob: -16.62510108947754
    7. ')

' → logprob: -16.75010108947754
    8. ')>' → logprob: -17.12510108947754
    9. '[' → logprob: -17.25010108947754
    10. '<|end|>' → logprob: -17.37510108947754

Token 383: '    
' (ID: 1944)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4575359523296356
    2. '<|end|>' → logprob: -1.707535982131958
    3. '   ' → logprob: -2.207535982131958
    4. '    
' → logprob: -3.082535982131958
    5. ')' → logprob: -4.832535743713379
    6. '  
' → logprob: -5.082535743713379
    7. '<|end|>' → logprob: -5.207535743713379
    8. '\n' → logprob: -5.582535743713379
    9. ' 
' → logprob: -5.957535743713379
    10. '   
' → logprob: -7.082535743713379

Token 384: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2537403702735901
    2. 'while' → logprob: -1.5037403106689453
    3. '    
' → logprob: -7.003740310668945
    4. '
' → logprob: -7.628740310668945
    5. ' while' → logprob: -8.378740310668945
    6. 'for' → logprob: -8.628740310668945
    7. '  
' → logprob: -13.503740310668945
    8. '	while' → logprob: -13.753740310668945
    9. '   
' → logprob: -14.253740310668945
    10. '        
' → logprob: -14.503740310668945

Token 385: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.0003685861302074045
    2. 'for' → logprob: -8.250368118286133
    3. ' while' → logprob: -9.500368118286133
    4. '   ' → logprob: -10.375368118286133
    5. '    
' → logprob: -14.000368118286133
    6. '
' → logprob: -15.250368118286133
    7. 'depth' → logprob: -17.250368118286133
    8. 'current' → logprob: -17.375368118286133
    9. ' for' → logprob: -18.000368118286133
    10. ' ' → logprob: -18.250368118286133

Token 386: ' exploration' (ID: 38070)
  Prédit: ' exploration'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' exploration' → logprob: -0.02975129522383213
    2. 'expl' → logprob: -3.5297513008117676
    3. 'len' → logprob: -14.15475082397461
    4. 'ex' → logprob: -16.40475082397461
    5. ' ' → logprob: -17.27975082397461
    6. ' ' → logprob: -18.27975082397461
    7. '   ' → logprob: -18.27975082397461
    8. '	ex' → logprob: -19.40475082397461
    9. 'e' → logprob: -19.77975082397461
    10. '探索' → logprob: -19.77975082397461

Token 387: '_queue' (ID: 25622)
  Prédit: '_queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_queue' → logprob: -1.1517960956552997e-05
    2. 'queue' → logprob: -11.750011444091797
    3. 'Queue' → logprob: -13.375011444091797
    4. '_QUEUE' → logprob: -14.625011444091797
    5. '_' → logprob: -15.125011444091797
    6. '   ' → logprob: -15.250011444091797
    7. '
' → logprob: -15.375011444091797
    8. ':' → logprob: -15.625011444091797
    9. ' queue' → logprob: -16.375011444091797
    10. ':
' → logprob: -16.500011444091797

Token 388: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14269085228443146
    2. ':
' → logprob: -2.017690896987915
    3. '):
' → logprob: -11.892690658569336
    4. ':
' → logprob: -13.142690658569336
    5. '):' → logprob: -13.142690658569336
    6. ' and' → logprob: -13.642690658569336
    7. ':

' → logprob: -13.767690658569336
    8. ':p' → logprob: -14.267690658569336
    9. 'and' → logprob: -14.517690658569336
    10. '   ' → logprob: -15.517690658569336

Token 389: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3425672650337219
    2. ' current' → logprob: -1.5925672054290771
    3. 'current' → logprob: -2.467567205429077
    4. '(current' → logprob: -6.717567443847656
    5. ',' → logprob: -7.967567443847656
    6. ',current' → logprob: -8.842567443847656
    7. ' (' → logprob: -10.217567443847656
    8. ' node' → logprob: -10.342567443847656
    9. '   ' → logprob: -10.342567443847656
    10. 'node' → logprob: -11.092567443847656

Token 390: ' node' (ID: 4596)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.19283106923103333
    2. 'node' (adapté à ' node') → logprob: -2.442831039428711
    3. ' current' → logprob: -2.567831039428711
    4. ' node' → logprob: -4.817831039428711
    5. '       ' → logprob: -5.817831039428711
    6. '           ' → logprob: -7.692831039428711
    7. 'child' → logprob: -9.442831039428711
    8. '(current' → logprob: -10.067831039428711
    9. '(node' → logprob: -10.817831039428711
    10. 'cur' → logprob: -11.192831039428711

Token 391: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.4259644558478612e-05
    2. ',node' → logprob: -12.125014305114746
    3. ',current' → logprob: -12.375014305114746
    4. ' ,' → logprob: -13.250014305114746
    5. ',parent' → logprob: -13.250014305114746
    6. 'current' → logprob: -15.000014305114746
    7. '   ' → logprob: -15.500014305114746
    8. '‌,' → logprob: -16.00001335144043
    9. ',
' → logprob: -16.75001335144043
    10. '_,' → logprob: -16.87501335144043

Token 392: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.00768494326621294
    2. ' parent' → logprob: -4.882684707641602
    3. 'prev' → logprob: -10.882684707641602
    4. '   ' → logprob: -11.382684707641602
    5. '
' → logprob: -11.882684707641602
    6. 'level' → logprob: -12.132684707641602
    7. 'current' → logprob: -12.132684707641602
    8. 'previous' → logprob: -12.257684707641602
    9. '    
' → logprob: -12.382684707641602
    10. 'node' → logprob: -12.382684707641602

Token 393: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.963691804325208e-05
    2. ' ,' → logprob: -10.500029563903809
    3. '_,' → logprob: -14.875029563903809
    4. ',parent' → logprob: -15.000029563903809
    5. ',node' → logprob: -15.125029563903809
    6. ',current' → logprob: -15.875029563903809
    7. '‌,' → logprob: -15.875029563903809
    8. '<|end|>' → logprob: -16.000030517578125
    9. '   ' → logprob: -17.125030517578125
    10. ',index' → logprob: -17.250030517578125

Token 394: ' level' (ID: 3211)
  Prédit: 'depth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'depth' → logprob: -0.05502287298440933
    2. 'level' → logprob: -3.555022954940796
    3. ' depth' → logprob: -3.930022954940796
    4. 'current' → logprob: -5.555022716522217
    5. ' level' → logprob: -7.180022716522217
    6. ' current' → logprob: -7.930022716522217
    7. 'distance' → logprob: -8.930023193359375
    8. 'branch' → logprob: -10.055023193359375
    9. 'height' → logprob: -10.305023193359375
    10. 'layer' → logprob: -11.305023193359375

Token 395: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31327635049819946
    2. '=' → logprob: -1.3132762908935547
    3. ',' → logprob: -11.438276290893555
    4. ' ' → logprob: -13.438276290893555
    5. '   ' → logprob: -13.438276290893555
    6. ')' → logprob: -14.563276290893555
    7. '    ' → logprob: -15.938276290893555
    8. ')=' → logprob: -16.813276290893555
    9. '  ' → logprob: -17.188276290893555
    10. '       ' → logprob: -17.563276290893555

Token 396: ' exploration' (ID: 38070)
  Prédit: 'expl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expl' → logprob: -0.5759435296058655
    2. ' exploration' → logprob: -0.8259435296058655
    3. 'ex' → logprob: -13.450943946838379
    4. '   ' → logprob: -14.450943946838379
    5. '       ' → logprob: -14.825943946838379
    6. 'initial' → logprob: -15.325943946838379
    7. '	ex' → logprob: -15.825943946838379
    8. ' explor' → logprob: -15.825943946838379
    9. ' explore' → logprob: -15.950943946838379
    10. ' ' → logprob: -16.200942993164062

Token 397: '_queue' (ID: 25622)
  Prédit: '_queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_queue' → logprob: -2.248469718324486e-05
    2. 'queue' → logprob: -11.625022888183594
    3. 'Queue' → logprob: -12.125022888183594
    4. '_' → logprob: -13.625022888183594
    5. '.append' → logprob: -13.625022888183594
    6. '_QUEUE' → logprob: -13.625022888183594
    7. ')' → logprob: -14.250022888183594
    8. '_node' → logprob: -14.375022888183594
    9. '.queue' → logprob: -14.500022888183594
    10. '```' → logprob: -14.750022888183594

Token 398: '.p' (ID: 1201)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6544556617736816
    2. '.p' → logprob: -0.7794556617736816
    3. ' =' → logprob: -3.9044556617736816
    4. '.pop' → logprob: -7.154455661773682
    5. '.' → logprob: -7.654455661773682
    6. '   ' → logprob: -8.904455184936523
    7. '.dequeue' → logprob: -10.279455184936523
    8. ',' → logprob: -11.779455184936523
    9. '.=' → logprob: -12.029455184936523
    10. '       ' → logprob: -12.154455184936523

Token 399: 'opleft' (ID: 182170)
  Prédit: 'opleft'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opleft' → logprob: -0.0002692032721824944
    2. 'op' → logprob: -8.250268936157227
    3. 'ople' → logprob: -12.375268936157227
    4. 'opl' → logprob: -12.500268936157227
    5. 'oplevel' → logprob: -17.875268936157227
    6. 'opped' → logprob: -17.875268936157227
    7. 'opt' → logprob: -18.125268936157227
    8. 'opf' → logprob: -19.250268936157227
    9. 'p' → logprob: -19.250268936157227
    10. 'opp' → logprob: -19.375268936157227

Token 400: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.43533855676651
    2. '()
' → logprob: -1.1853384971618652
    3. '       ' → logprob: -3.1853384971618652
    4. ',' → logprob: -5.310338497161865
    5. '
' → logprob: -8.310338973999023
    6. '(' → logprob: -8.435338973999023
    7. ')' → logprob: -8.810338973999023
    8. '   ' → logprob: -8.810338973999023
    9. '(
' → logprob: -9.310338973999023
    10. ')
' → logprob: -10.935338973999023

Token 401: '       ' (ID: 309)
  Prédit: 'children'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'children' → logprob: -0.47733351588249207
    2. '       ' → logprob: -1.2273335456848145
    3. '   ' → logprob: -3.2273335456848145
    4. 'child' → logprob: -4.2273335456848145
    5. 'for' → logprob: -4.9773335456848145
    6. 'count' → logprob: -5.1023335456848145
    7. ' children' → logprob: -5.2273335456848145
    8. 'if' → logprob: -5.2273335456848145
    9. 'current' → logprob: -5.9773335456848145
    10. 'max' → logprob: -6.1023335456848145

Token 402: ' max' (ID: 2999)
  Prédit: 'children'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'children' → logprob: -0.4133341312408447
    2. 'if' → logprob: -1.6633341312408447
    3. 'child' → logprob: -2.0383341312408447
    4. 'num' → logprob: -5.163333892822266
    5. 'current' → logprob: -5.663333892822266
    6. 'max' (adapté à ' max') → logprob: -5.788333892822266
    7. 'for' → logprob: -6.163333892822266
    8. '   ' → logprob: -6.663333892822266
    9. 'level' → logprob: -6.788333892822266
    10. 'count' → logprob: -7.163333892822266

Token 403: '_children' (ID: 78282)
  Prédit: '_children'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_children' → logprob: -0.0003570343542378396
    2. '_level' → logprob: -8.625356674194336
    3. 'children' → logprob: -9.250356674194336
    4. '_depth' → logprob: -10.375356674194336
    5. 'level' → logprob: -10.875356674194336
    6. '_child' → logprob: -12.250356674194336
    7. '```' → logprob: -12.250356674194336
    8. '(children' → logprob: -12.375356674194336
    9. 'max' → logprob: -12.625356674194336
    10. ')' → logprob: -13.250356674194336

Token 404: '_per' (ID: 10938)
  Prédit: '_per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_per' → logprob: -0.00010819212911883369
    2. 'per' → logprob: -10.125107765197754
    3. '=' → logprob: -10.625107765197754
    4. ' =' → logprob: -10.750107765197754
    5. '_levels' → logprob: -12.250107765197754
    6. 's' → logprob: -12.875107765197754
    7. '   ' → logprob: -12.875107765197754
    8. '_' → logprob: -13.250107765197754
    9. '[' → logprob: -13.250107765197754
    10. '_level' → logprob: -13.375107765197754

Token 405: '_level' (ID: 18404)
  Prédit: 'level'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'level' → logprob: -0.02340002916753292
    2. '_level' → logprob: -3.773400068283081
    3. '[level' → logprob: -9.02340030670166
    4. '_children' → logprob: -11.77340030670166
    5. ' level' → logprob: -11.77340030670166
    6. 'max' → logprob: -12.77340030670166
    7. '	level' → logprob: -13.02340030670166
    8. 'per' → logprob: -13.02340030670166
    9. '[' → logprob: -13.27340030670166
    10. 'children' → logprob: -13.27340030670166

Token 406: '[level' (ID: 164831)
  Prédit: '[level'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[level' → logprob: -1.7120533811976202e-05
    2. '[' → logprob: -11.250017166137695
    3. '[max' → logprob: -12.625017166137695
    4. ' [' → logprob: -15.250017166137695
    5. '[min' → logprob: -16.125017166137695
    6. '[line' → logprob: -16.250017166137695
    7. '[length' → logprob: -16.375017166137695
    8. '[size' → logprob: -16.625017166137695
    9. '
' → logprob: -17.500017166137695
    10. '(level' → logprob: -17.625017166137695

Token 407: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03288651630282402
    2. ']+=' → logprob: -3.532886505126953
    3. ' ]' → logprob: -5.782886505126953
    4. ']=' → logprob: -10.532886505126953
    5. '+=' → logprob: -11.657886505126953
    6. ' +=' → logprob: -11.907886505126953
    7. ']+' → logprob: -12.032886505126953
    8. ')' → logprob: -13.282886505126953
    9. '[' → logprob: -14.907886505126953
    10. '-' → logprob: -15.532886505126953

Token 408: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4752117693424225
    2. ' =' → logprob: -0.9752117395401001
    3. '+=' → logprob: -7.3502116203308105
    4. '=max' → logprob: -7.7252116203308105
    5. ' +=' → logprob: -9.975212097167969
    6. ' ' → logprob: -13.725212097167969
    7. ',' → logprob: -14.475212097167969
    8. 'max' → logprob: -14.725212097167969
    9. '*=' → logprob: -15.100212097167969
    10. ')=' → logprob: -15.225212097167969

Token 409: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.029750604182481766
    2. ' max' → logprob: -3.5297505855560303
    3. '	max' → logprob: -16.65475082397461
    4. '
' → logprob: -17.40475082397461
    5. '(max' → logprob: -18.02975082397461
    6. 'min' → logprob: -18.15475082397461
    7. '       ' → logprob: -19.52975082397461
    8. '           ' → logprob: -19.90475082397461
    9. '[max' → logprob: -20.27975082397461
    10. '=max' → logprob: -20.40475082397461

Token 410: '(
' (ID: 1607)
  Prédit: '(max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -7.624555291840807e-05
    2. '(' → logprob: -9.500076293945312
    3. '(len' → logprob: -14.125076293945312
    4. '(
' → logprob: -14.875076293945312
    5. 'max' → logprob: -15.250076293945312
    6. ' (' → logprob: -16.875076293945312
    7. ' max' → logprob: -17.500076293945312
    8. ',max' → logprob: -18.625076293945312
    9. '=max' → logprob: -19.375076293945312
    10. '(min' → logprob: -19.375076293945312

Token 411: '           ' (ID: 352)
  Prédit: '(max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.10034362226724625
    2. 'max' → logprob: -2.350343704223633
    3. ' max' → logprob: -9.850343704223633
    4. '(' → logprob: -10.225343704223633
    5. '(
' → logprob: -10.350343704223633
    6. ',max' → logprob: -11.850343704223633
    7. '[max' → logprob: -12.725343704223633
    8. '	max' → logprob: -13.100343704223633
    9. '=max' → logprob: -13.475343704223633
    10. '   ' → logprob: -13.975343704223633

Token 412: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -2.0219828002154827e-05
    2. ' max' → logprob: -11.000020027160645
    3. '(max' → logprob: -13.250020027160645
    4. 'len' → logprob: -13.750020027160645
    5. '
' → logprob: -15.750020027160645
    6. '   ' → logprob: -16.00002098083496
    7. '           ' → logprob: -16.00002098083496
    8. '[max' → logprob: -16.75002098083496
    9. '	max' → logprob: -17.62502098083496
    10. '               ' → logprob: -18.12502098083496

Token 413: '_children' (ID: 78282)
  Prédit: '_children'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_children' → logprob: -0.00013524403038900346
    2. '(max' → logprob: -9.00013542175293
    3. 'children' → logprob: -12.25013542175293
    4. 'max' → logprob: -13.12513542175293
    5. '```' → logprob: -14.12513542175293
    6. '[max' → logprob: -14.25013542175293
    7. '(children' → logprob: -14.25013542175293
    8. '_max' → logprob: -14.25013542175293
    9. '_choices' → logprob: -14.25013542175293
    10. ')' → logprob: -15.00013542175293

Token 414: '_per' (ID: 10938)
  Prédit: '_per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_per' → logprob: -1.8312570318812504e-05
    2. 'per' → logprob: -11.250018119812012
    3. '_level' → logprob: -13.625018119812012
    4. '_children' → logprob: -14.000018119812012
    5. ',' → logprob: -14.125018119812012
    6. '[' → logprob: -15.000018119812012
    7. '[level' → logprob: -15.000018119812012
    8. '
' → logprob: -15.250018119812012
    9. ')' → logprob: -15.375018119812012
    10. '   ' → logprob: -16.000019073486328

Token 415: '_level' (ID: 18404)
  Prédit: '_level'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_level' → logprob: -0.03571004793047905
    2. 'level' → logprob: -3.785710096359253
    3. 'vel' → logprob: -4.535709857940674
    4. '_per' → logprob: -7.410709857940674
    5. 'el' → logprob: -8.035710334777832
    6. 'per' → logprob: -8.285710334777832
    7. 'le' → logprob: -8.410710334777832
    8. 'lev' → logprob: -10.035710334777832
    9. 'lel' → logprob: -10.285710334777832
    10. '_le' → logprob: -10.410710334777832

Token 416: '[level' (ID: 164831)
  Prédit: '[level'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[level' → logprob: -5.200166469876422e-06
    2. '(level' → logprob: -12.875004768371582
    3. 'level' → logprob: -13.125004768371582
    4. ',' → logprob: -15.875004768371582
    5. '[' → logprob: -16.0000057220459
    6. ' level' → logprob: -16.5000057220459
    7. '[
' → logprob: -16.6250057220459
    8. '[layer' → logprob: -17.1250057220459
    9. '[node' → logprob: -17.3750057220459
    10. '	level' → logprob: -17.3750057220459

Token 417: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.47651657462120056
    2. ',' → logprob: -0.976516604423523
    3. '],
' → logprob: -7.1015167236328125
    4. ']' → logprob: -7.3515167236328125
    5. '),' → logprob: -7.8515167236328125
    6. ' ],' → logprob: -8.976516723632812
    7. ' ,' → logprob: -9.226516723632812
    8. 'if' → logprob: -9.476516723632812
    9. 'level' → logprob: -10.351516723632812
    10. ',
' → logprob: -10.351516723632812

Token 418: ' 
' (ID: 793)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.02357504330575466
    2. ' len' → logprob: -3.7735750675201416
    3. '           ' → logprob: -8.023574829101562
    4. '(len' → logprob: -13.648574829101562
    5. '	len' → logprob: -15.023574829101562
    6. '               ' → logprob: -15.773574829101562
    7. '[len' → logprob: -16.273574829101562
    8. '1' → logprob: -17.398574829101562
    9. '   ' → logprob: -17.398574829101562
    10. '0' → logprob: -17.648574829101562

Token 419: '           ' (ID: 352)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.010443509556353092
    2. '           ' → logprob: -5.260443687438965
    3. ' len' → logprob: -5.260443687438965
    4. '(len' → logprob: -13.260443687438965
    5. '               ' → logprob: -14.260443687438965
    6. '	len' → logprob: -15.010443687438965
    7. '[len' → logprob: -16.13544273376465
    8. '   ' → logprob: -16.26044273376465
    9. '1' → logprob: -16.88544273376465
    10. '=len' → logprob: -17.13544273376465

Token 420: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' (adapté à ' len') → logprob: -0.0005406428826972842
    2. ' len' → logprob: -7.750540733337402
    3. '           ' → logprob: -9.125540733337402
    4. '               ' → logprob: -14.500540733337402
    5. '(len' → logprob: -15.000540733337402
    6. '   ' → logprob: -16.500539779663086
    7. '	len' → logprob: -16.500539779663086
    8. '                   ' → logprob: -17.500539779663086
    9. '          ' → logprob: -17.875539779663086
    10. '       ' → logprob: -17.875539779663086

Token 421: '(tree' (ID: 44909)
  Prédit: '(tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tree' → logprob: -0.02280617319047451
    2. '([' → logprob: -3.897806167602539
    3. '([
' → logprob: -6.397806167602539
    4. '(' → logprob: -7.772806167602539
    5. '(
' → logprob: -8.772806167602539
    6. '[' → logprob: -11.522806167602539
    7. 'tree' → logprob: -12.647806167602539
    8. '[
' → logprob: -12.647806167602539
    9. '(t' → logprob: -14.397806167602539
    10. '	tree' → logprob: -14.522806167602539

Token 422: '_ad' (ID: 23782)
  Prédit: '_ad'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ad' → logprob: -7.896309739408025e-07
    2. '_adj' → logprob: -14.375000953674316
    3. 'ad' → logprob: -16.5
    4. '[node' → logprob: -17.375
    5. '_ac' → logprob: -18.125
    6. 'adj' → logprob: -18.5
    7. '[' → logprob: -18.75
    8. '_a' → logprob: -19.0
    9. '_' → logprob: -19.125
    10. '   ' → logprob: -19.5

Token 423: 'jac' (ID: 77250)
  Prédit: 'jac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jac' → logprob: -0.35083335638046265
    2. 'acency' → logprob: -1.2258334159851074
    3. 'j' → logprob: -6.725833415985107
    4. 'ac' → logprob: -6.975833415985107
    5. 'js' → logprob: -9.72583293914795
    6. 'c' → logprob: -10.35083293914795
    7. '```' → logprob: -10.97583293914795
    8. 'ency' → logprob: -10.97583293914795
    9. ' adjacency' → logprob: -11.22583293914795
    10. 'acy' → logprob: -11.47583293914795

Token 424: 'ency' (ID: 2799)
  Prédit: 'acency'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acency' → logprob: -0.2660173773765564
    2. 'ency' → logprob: -1.5160174369812012
    3. 'acy' → logprob: -5.266017436981201
    4. 'list' → logprob: -6.016017436981201
    5. '_list' → logprob: -6.141017436981201
    6. 'ac' → logprob: -6.766017436981201
    7. 'acity' → logprob: -7.641017436981201
    8. 'ity' → logprob: -7.891017436981201
    9. '_lists' → logprob: -8.016016960144043
    10. '   ' → logprob: -8.266016960144043

Token 425: '_lists' (ID: 93609)
  Prédit: '_lists'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lists' → logprob: -1.306760805164231e-05
    2. '[' → logprob: -12.37501335144043
    3. '[node' → logprob: -12.37501335144043
    4. 'lists' → logprob: -13.75001335144043
    5. 'Lists' → logprob: -14.12501335144043
    6. '   ' → logprob: -14.37501335144043
    7. 's' → logprob: -14.62501335144043
    8. '_list' → logprob: -14.87501335144043
    9. 'node' → logprob: -15.37501335144043
    10. '_' → logprob: -15.62501335144043

Token 426: '[node' (ID: 67268)
  Prédit: '[node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[node' → logprob: -2.1008713702030946e-06
    2. '[current' → logprob: -14.000001907348633
    3. '(node' → logprob: -14.500001907348633
    4. '[' → logprob: -14.750001907348633
    5. '[
' → logprob: -15.500001907348633
    6. ')[' → logprob: -17.500001907348633
    7. '[n' → logprob: -18.875001907348633
    8. ')' → logprob: -19.000001907348633
    9. '[module' → logprob: -19.125001907348633
    10. '```' → logprob: -19.250001907348633

Token 427: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0012511812383309007
    2. '])-' → logprob: -7.251251220703125
    3. ')' → logprob: -8.626251220703125
    4. '[node' → logprob: -8.751251220703125
    5. '])
' → logprob: -9.376251220703125
    6. ']' → logprob: -9.751251220703125
    7. ']))' → logprob: -10.626251220703125
    8. '[' → logprob: -11.001251220703125
    9. ' ])' → logprob: -12.126251220703125
    10. ']))
' → logprob: -12.751251220703125

Token 428: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.6205289363861084
    2. ' if' → logprob: -0.8705289363861084
    3. '-' → logprob: -3.7455289363861084
    4. ')' → logprob: -4.1205291748046875
    5. '           ' → logprob: -6.4955291748046875
    6. 'if' → logprob: -6.4955291748046875
    7. '   ' → logprob: -7.9955291748046875
    8. '       ' → logprob: -9.245529174804688
    9. ')-' → logprob: -9.370529174804688
    10. '[' → logprob: -9.745529174804688

Token 429: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03684668987989426
    2. '(' → logprob: -3.41184663772583
    3. '(int' → logprob: -6.16184663772583
    4. ' (' → logprob: -7.41184663772583
    5. ' ' → logprob: -8.286847114562988
    6. '(ex' → logprob: -9.536847114562988
    7. '({' → logprob: -10.536847114562988
    8. '(parent' → logprob: -10.661847114562988
    9. '(adj' → logprob: -10.786847114562988
    10. '(node' → logprob: -10.786847114562988

Token 430: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6237521171569824
    2. '(' → logprob: -0.9987521171569824
    3. '(int' → logprob: -2.4987521171569824
    4. '(adj' → logprob: -5.123752117156982
    5. '(node' → logprob: -5.373752117156982
    6. '(parent' → logprob: -7.373752117156982
    7. ' (' → logprob: -7.498752117156982
    8. '({' → logprob: -7.498752117156982
    9. '(ex' → logprob: -7.998752117156982
    10. '(obj' → logprob: -9.24875259399414

Token 431: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005773073527961969
    2. '       ' → logprob: -5.255773067474365
    3. ')
' → logprob: -8.005773544311523
    4. '   ' → logprob: -9.630773544311523
    5. ' )' → logprob: -9.880773544311523
    6. '
' → logprob: -10.005773544311523
    7. '           ' → logprob: -10.380773544311523
    8. '               ' → logprob: -12.255773544311523
    9. '<|end|>' → logprob: -12.505773544311523
    10. '))' → logprob: -14.005773544311523

Token 432: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08053113520145416
    2. '       ' → logprob: -2.580531120300293
    3. ')
' → logprob: -6.580531120300293
    4. '   ' → logprob: -8.580531120300293
    5. ' )' → logprob: -9.955531120300293
    6. '           ' → logprob: -11.580531120300293
    7. '
' → logprob: -12.705531120300293
    8. '```' → logprob: -13.830531120300293
    9. ')

' → logprob: -13.955531120300293
    10. '               ' → logprob: -14.080531120300293

Token 433: ' )
' (ID: 3270)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1706879585981369
    2. ')
' (adapté à ' )
') → logprob: -2.1706879138946533
    3. '       ' → logprob: -3.1706879138946533
    4. '   ' → logprob: -7.545688152313232
    5. ' )' → logprob: -8.670687675476074
    6. ' )
' → logprob: -9.295687675476074
    7. ')

' → logprob: -11.045687675476074
    8. '           ' → logprob: -11.670687675476074
    9. ')
' → logprob: -11.795687675476074
    10. '
' → logprob: -12.420687675476074

Token 434: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006837560795247555
    2. '<|end|>' → logprob: -5.256837368011475
    3. '        
' → logprob: -6.756837368011475
    4. '
' → logprob: -8.881837844848633
    5. '<|end|>' → logprob: -9.631837844848633
    6. ' if' → logprob: -9.631837844848633
    7. '   ' → logprob: -10.506837844848633
    8. '```' → logprob: -10.631837844848633
    9. ')' → logprob: -11.256837844848633
    10. '               ' → logprob: -11.381837844848633

Token 435: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.016820160672068596
    2. '       ' → logprob: -4.266819953918457
    3. ' for' → logprob: -6.516819953918457
    4. 'if' → logprob: -6.766819953918457
    5. '        
' → logprob: -10.891819953918457
    6. '   ' → logprob: -13.141819953918457
    7. ' if' → logprob: -13.266819953918457
    8. '	for' → logprob: -14.641819953918457
    9. '           ' → logprob: -15.516819953918457
    10. '            
' → logprob: -16.266820907592773

Token 436: ' neighbor' (ID: 13034)
  Prédit: 'neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -0.19839850068092346
    2. ' neighbor' → logprob: -1.823398470878601
    3. 'child' → logprob: -4.198398590087891
    4. ' child' → logprob: -5.823398590087891
    5. 'adj' → logprob: -7.698398590087891
    6. 'n' → logprob: -11.57339859008789
    7. 'ne' → logprob: -11.69839859008789
    8. 'next' → logprob: -11.82339859008789
    9. 'nbr' → logprob: -12.07339859008789
    10. ' adjacent' → logprob: -12.57339859008789

Token 437: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012554391287267208
    2. 'in' → logprob: -4.387554168701172
    3. ',' → logprob: -10.637554168701172
    4. '	in' → logprob: -11.137554168701172
    5. ' ,' → logprob: -12.762554168701172
    6. ' ' → logprob: -13.887554168701172
    7. '<|end|>' → logprob: -14.762554168701172
    8. ',in' → logprob: -14.887554168701172
    9. '_in' → logprob: -15.387554168701172
    10. 'neighbor' → logprob: -15.637554168701172

Token 438: ' tree' (ID: 8165)
  Prédit: ' tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tree' → logprob: -0.5233688950538635
    2. 'tree' → logprob: -0.8983688950538635
    3. '(tree' → logprob: -8.523368835449219
    4. '	tree' → logprob: -10.273368835449219
    5. ' ' → logprob: -12.648368835449219
    6. '[' → logprob: -13.023368835449219
    7. '   ' → logprob: -13.398368835449219
    8. '.tree' → logprob: -13.523368835449219
    9. '_tree' → logprob: -13.648368835449219
    10. '    ' → logprob: -15.148368835449219

Token 439: '_ad' (ID: 23782)
  Prédit: '_ad'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ad' → logprob: -5.5577775128767826e-06
    2. '[node' → logprob: -12.250005722045898
    3. '_adj' → logprob: -14.750005722045898
    4. 'ad' → logprob: -15.250005722045898
    5. 'adj' → logprob: -16.0000057220459
    6. '[' → logprob: -16.7500057220459
    7. '   ' → logprob: -18.3750057220459
    8. '.ad' → logprob: -19.2500057220459
    9. 'Ad' → logprob: -19.3750057220459
    10. '-ad' → logprob: -19.5000057220459

Token 440: 'jac' (ID: 77250)
  Prédit: 'jac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jac' → logprob: -7.946405094116926e-05
    2. 'j' → logprob: -9.500079154968262
    3. 'acency' → logprob: -13.125079154968262
    4. 'yac' → logprob: -13.375079154968262
    5. 'adj' → logprob: -15.125079154968262
    6. 'Jac' → logprob: -15.625079154968262
    7. 'iac' → logprob: -16.000080108642578
    8. 'jc' → logprob: -16.125080108642578
    9. '
' → logprob: -16.250080108642578
    10. 'aj' → logprob: -16.500080108642578

Token 441: 'ency' (ID: 2799)
  Prédit: 'ency'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ency' → logprob: -0.2583597004413605
    2. '_lists' → logprob: -2.133359670639038
    3. 'acency' → logprob: -2.383359670639038
    4. 'acy' → logprob: -5.258359909057617
    5. '_list' → logprob: -5.633359909057617
    6. 'lists' → logprob: -5.758359909057617
    7. 'ac' → logprob: -6.383359909057617
    8. 's' → logprob: -7.258359909057617
    9. 'ancy' → logprob: -7.383359909057617
    10. 'list' → logprob: -8.133359909057617

Token 442: '_lists' (ID: 93609)
  Prédit: '_lists'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lists' → logprob: -0.002874772995710373
    2. '[node' → logprob: -5.877874851226807
    3. '[' → logprob: -10.127874374389648
    4. 's' → logprob: -11.252874374389648
    5. 'Lists' → logprob: -11.627874374389648
    6. 'lists' → logprob: -12.627874374389648
    7. '_list' → logprob: -14.002874374389648
    8. '_sets' → logprob: -14.127874374389648
    9. '[[' → logprob: -14.877874374389648
    10. '_l' → logprob: -15.002874374389648

Token 443: '[node' (ID: 67268)
  Prédit: '[node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[node' → logprob: -3.128163257315464e-07
    2. '[current' → logprob: -15.5
    3. '(node' → logprob: -18.0
    4. 'node' → logprob: -18.125
    5. '[' → logprob: -18.625
    6. '```' → logprob: -19.0
    7. '[
' → logprob: -19.25
    8. ' [' → logprob: -19.375
    9. '[n' → logprob: -19.5
    10. '   ' → logprob: -19.875

Token 444: ']:
' (ID: 22152)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.12665517628192902
    2. ':' → logprob: -2.626655101776123
    3. '           ' → logprob: -3.251655101776123
    4. '):
' → logprob: -6.251655101776123
    5. ' if' → logprob: -6.626655101776123
    6. ']:
' → logprob: -6.626655101776123
    7. '   ' → logprob: -7.001655101776123
    8. '       ' → logprob: -7.126655101776123
    9. '[' → logprob: -7.251655101776123
    10. 'if' → logprob: -7.751655101776123

Token 445: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.014893686398863792
    2. '<|end|>' → logprob: -4.514893531799316
    3. ' if' → logprob: -6.389893531799316
    4. '<|end|>' → logprob: -7.514893531799316
    5. '          ' → logprob: -7.764893531799316
    6. ',' → logprob: -8.264893531799316
    7. ':
' → logprob: -8.264893531799316
    8. ':' → logprob: -8.514893531799316
    9. '            ' → logprob: -9.139893531799316
    10. '               ' → logprob: -10.014893531799316

Token 446: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.08513479679822922
    2. '            ' → logprob: -3.460134744644165
    3. '               ' → logprob: -3.960134744644165
    4. '           ' → logprob: -3.960134744644165
    5. 'if' (adapté à ' if') → logprob: -4.960134983062744
    6. '<|end|>' → logprob: -5.585134983062744
    7. ',' → logprob: -7.960134983062744
    8. ' ' → logprob: -8.585134506225586
    9. '                ' → logprob: -8.835134506225586
    10. ' (' → logprob: -8.960134506225586

Token 447: ' neighbor' (ID: 13034)
  Prédit: ' neighbor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' neighbor' → logprob: -0.34845826029777527
    2. 'neighbor' → logprob: -1.2234582901000977
    3. '               ' → logprob: -12.723458290100098
    4. '           ' → logprob: -12.848458290100098
    5. '(ne' → logprob: -13.223458290100098
    6. 'ne' → logprob: -13.348458290100098
    7. '                   ' → logprob: -13.848458290100098
    8. '            ' → logprob: -13.973458290100098
    9. '_neighbor' → logprob: -14.473458290100098
    10. ' neighbour' → logprob: -14.848458290100098

Token 448: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.25193166732788086
    2. '!=' → logprob: -1.5019316673278809
    3. ')!=' → logprob: -14.376932144165039
    4. '()!=' → logprob: -14.376932144165039
    5. ' not' → logprob: -14.501932144165039
    6. '!='' → logprob: -15.126932144165039
    7. ']!=' → logprob: -15.751932144165039
    8. '!==' → logprob: -16.00193214416504
    9. '!=-' → logprob: -16.00193214416504
    10. '!=(' → logprob: -16.25193214416504

Token 449: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.018901221454143524
    2. ' parent' → logprob: -4.518901348114014
    3. 'node' → logprob: -4.893901348114014
    4. ' node' → logprob: -8.018900871276855
    5. 'player' → logprob: -14.393900871276855
    6. '(parent' → logprob: -15.518900871276855
    7. ' ' → logprob: -15.518900871276855
    8. '	parent' → logprob: -15.643900871276855
    9. '   ' → logprob: -15.893900871276855
    10. '[parent' → logprob: -16.518901824951172

Token 450: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.03401171416044235
    2. '               ' → logprob: -4.2840118408203125
    3. ':
' → logprob: -4.6590118408203125
    4. ':' → logprob: -4.7840118408203125
    5. 'and' → logprob: -6.6590118408203125
    6. '           ' → logprob: -8.159011840820312
    7. ',' → logprob: -8.534011840820312
    8. '              ' → logprob: -11.409011840820312
    9. ':

' → logprob: -12.409011840820312
    10. '):
' → logprob: -12.534011840820312

Token 451: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0028017910663038492
    2. ' and' → logprob: -6.127801895141602
    3. ':' → logprob: -8.252801895141602
    4. ',' → logprob: -8.877801895141602
    5. ':
' → logprob: -8.877801895141602
    6. 'and' → logprob: -11.252801895141602
    7. '           ' → logprob: -11.377801895141602
    8. '              ' → logprob: -11.502801895141602
    9. '```' → logprob: -12.127801895141602
    10. '<|end|>' → logprob: -12.252801895141602

Token 452: ' exploration' (ID: 38070)
  Prédit: ' exploration'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' exploration' → logprob: -0.12232896685600281
    2. '               ' → logprob: -2.497328996658325
    3. 'expl' → logprob: -3.747328996658325
    4. '                   ' → logprob: -4.747328758239746
    5. 'ex' → logprob: -8.247328758239746
    6. '                       ' → logprob: -9.497328758239746
    7. '```' → logprob: -9.747328758239746
    8. '                ' → logprob: -10.247328758239746
    9. '	ex' → logprob: -10.622328758239746
    10. '   ' → logprob: -10.622328758239746

Token 453: '_queue' (ID: 25622)
  Prédit: '_queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_queue' → logprob: -4.320199877838604e-07
    2. 'Queue' → logprob: -15.875
    3. 'queue' → logprob: -16.125
    4. '_enqueue' → logprob: -16.625
    5. '_QUEUE' → logprob: -17.125
    6. '_' → logprob: -18.25
    7. '.append' → logprob: -18.375
    8. '_query' → logprob: -19.125
    9. 'e' → logprob: -20.125
    10. ' queue' → logprob: -20.25

Token 454: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -7.73183855926618e-05
    2. '.' → logprob: -9.500077247619629
    3. '               ' → logprob: -14.000077247619629
    4. '.enqueue' → logprob: -14.250077247619629
    5. 'append' → logprob: -15.000077247619629
    6. ' .' → logprob: -15.125077247619629
    7. '           ' → logprob: -16.000078201293945
    8. '.extend' → logprob: -16.375078201293945
    9. '.app' → logprob: -16.625078201293945
    10. '.p' → logprob: -17.500078201293945

Token 455: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.006392880342900753
    2. '(' → logprob: -5.256392955780029
    3. '(ne' → logprob: -7.131392955780029
    4. '(
' → logprob: -8.256392478942871
    5. ' (' → logprob: -9.256392478942871
    6. ' ((' → logprob: -12.631392478942871
    7. '(n' → logprob: -15.881392478942871
    8. '   ' → logprob: -16.006393432617188
    9. '(
' → logprob: -17.131393432617188
    10. '(

' → logprob: -17.381393432617188

Token 456: 'neighbor' (ID: 108409)
  Prédit: 'neighbor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -3.547789674485102e-05
    2. ' neighbor' → logprob: -10.250035285949707
    3. '(ne' → logprob: -17.250036239624023
    4. 'neighbors' → logprob: -19.000036239624023
    5. '                   ' → logprob: -19.250036239624023
    6. '   ' → logprob: -20.375036239624023
    7. '
' → logprob: -20.375036239624023
    8. '_neighbor' → logprob: -20.500036239624023
    9. '```' → logprob: -21.125036239624023
    10. 'Neighbor' → logprob: -21.500036239624023

Token 457: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.9504606825648807e-05
    2. ' ,' → logprob: -11.250019073486328
    3. ',node' → logprob: -12.375019073486328
    4. ',
' → logprob: -13.750019073486328
    5. '               ' → logprob: -14.875019073486328
    6. '                   ' → logprob: -15.125019073486328
    7. ',n' → logprob: -15.875019073486328
    8. 'neighbor' → logprob: -16.125019073486328
    9. '```' → logprob: -16.250019073486328
    10. '           ' → logprob: -17.125019073486328

Token 458: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.07889441400766373
    2. ' node' → logprob: -2.5788943767547607
    3. '	node' → logprob: -13.57889461517334
    4. ',node' → logprob: -14.07889461517334
    5. '[node' → logprob: -14.57889461517334
    6. '
' → logprob: -14.82889461517334
    7. '(node' → logprob: -14.95389461517334
    8. '   ' → logprob: -14.95389461517334
    9. ' ' → logprob: -15.32889461517334
    10. '               ' → logprob: -15.45389461517334

Token 459: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.827200897736475e-05
    2. ' ,' → logprob: -9.500078201293945
    3. 'level' → logprob: -14.000078201293945
    4. '               ' → logprob: -14.000078201293945
    5. '[level' → logprob: -14.500078201293945
    6. '                   ' → logprob: -15.000078201293945
    7. '(level' → logprob: -15.250078201293945
    8. '),' → logprob: -16.000078201293945
    9. ',l' → logprob: -16.125078201293945
    10. ',len' → logprob: -16.375078201293945

Token 460: ' level' (ID: 3211)
  Prédit: 'level'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'level' → logprob: -0.3132648468017578
    2. ' level' → logprob: -1.3132648468017578
    3. '	level' → logprob: -13.313264846801758
    4. '(level' → logprob: -14.063264846801758
    5. '[level' → logprob: -15.313264846801758
    6. '    ' → logprob: -16.063264846801758
    7. '   ' → logprob: -16.063264846801758
    8. '           ' → logprob: -16.688264846801758
    9. ' ' → logprob: -16.938264846801758
    10. '               ' → logprob: -17.688264846801758

Token 461: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3132619559764862
    2. ' +' → logprob: -1.3132619857788086
    3. ' plus' → logprob: -16.938261032104492
    4. ' ' → logprob: -17.313261032104492
    5. '+
' → logprob: -17.438261032104492
    6. '   ' → logprob: -17.688261032104492
    7. '＋' → logprob: -18.063261032104492
    8. ' ' → logprob: -18.438261032104492
    9. ' +
' → logprob: -18.438261032104492
    10. '1' → logprob: -18.938261032104492

Token 462: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.494741632603109e-05
    2. ' ' → logprob: -9.37508487701416
    3. '   ' → logprob: -17.375085830688477
    4. '```' → logprob: -19.125085830688477
    5. ')' → logprob: -19.750085830688477
    6. '۱' → logprob: -20.625085830688477
    7. '<|end|>' → logprob: -20.750085830688477
    8. '  ' → logprob: -21.000085830688477
    9. '	' → logprob: -21.500085830688477
    10. '0' → logprob: -21.937585830688477

Token 463: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '```' → logprob: -18.5000057220459
    4. '   ' → logprob: -18.7500057220459
    5. ')' → logprob: -19.6250057220459
    6. '0' → logprob: -20.8750057220459
    7. '  ' → logprob: -21.1875057220459
    8. '۱' → logprob: -21.5000057220459
    9. '[' → logprob: -22.0000057220459
    10. '
' → logprob: -22.0625057220459

Token 464: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.001239156350493431
    2. ')' → logprob: -6.75123929977417
    3. '))
' → logprob: -9.626238822937012
    4. ')))' → logprob: -12.876238822937012
    5. ' ))' → logprob: -15.876238822937012
    6. ')
' → logprob: -16.251239776611328
    7. '       ' → logprob: -17.001239776611328
    8. '   ' → logprob: -17.501239776611328
    9. '))

' → logprob: -18.001239776611328
    10. ')}' → logprob: -18.126239776611328

Token 465: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07860574126243591
    2. '<|end|>' → logprob: -2.7036056518554688
    3. ')' → logprob: -4.953605651855469
    4. '<|end|>' → logprob: -7.328605651855469
    5. 'return' → logprob: -8.578605651855469
    6. '	return' → logprob: -8.703605651855469
    7. ' return' → logprob: -8.703605651855469
    8. '    
' → logprob: -9.453605651855469
    9. '```' → logprob: -9.453605651855469
    10. ' ' → logprob: -9.578605651855469

Token 466: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.028132781386375427
    2. '
' → logprob: -4.403132915496826
    3. 'return' (adapté à ' return') → logprob: -5.028132915496826
    4. '<|end|>' → logprob: -5.528132915496826
    5. '    
' → logprob: -5.653132915496826
    6. ' return' → logprob: -6.778132915496826
    7. '	return' → logprob: -8.903132438659668
    8. ')' → logprob: -9.903132438659668
    9. ' ' → logprob: -10.778132438659668
    10. '  
' → logprob: -10.903132438659668

Token 467: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.3869072496891022
    2. 'max' → logprob: -1.1369072198867798
    3. '[max' → logprob: -11.261907577514648
    4. '   ' → logprob: -11.386907577514648
    5. ' ' → logprob: -12.386907577514648
    6. '(max' → logprob: -13.511907577514648
    7. ' [' → logprob: -13.636907577514648
    8. '[' → logprob: -13.886907577514648
    9. ' tuple' → logprob: -14.011907577514648
    10. '	max' → logprob: -14.136907577514648

Token 468: '_children' (ID: 78282)
  Prédit: '_children'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_children' → logprob: -3.6312321753939614e-05
    2. 'children' → logprob: -10.250036239624023
    3. '(children' → logprob: -14.875036239624023
    4. '(max' → logprob: -15.375036239624023
    5. 'Children' → logprob: -15.875036239624023
    6. 'max' → logprob: -15.875036239624023
    7. '_child' → logprob: -16.750036239624023
    8. '```' → logprob: -17.250036239624023
    9. '(_' → logprob: -17.750036239624023
    10. '_ch' → logprob: -18.625036239624023

Token 469: '_per' (ID: 10938)
  Prédit: '_per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_per' → logprob: -1.8624639324116288e-06
    2. 'per' → logprob: -13.375001907348633
    3. '_children' → logprob: -16.125001907348633
    4. 's' → logprob: -17.125001907348633
    5. '_PER' → logprob: -17.500001907348633
    6. '[' → logprob: -17.875001907348633
    7. '_level' → logprob: -18.500001907348633
    8. 'Per' → logprob: -18.500001907348633
    9. '_branch' → logprob: -18.625001907348633
    10. '   ' → logprob: -18.625001907348633

Token 470: '_level' (ID: 18404)
  Prédit: 'level'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'level' → logprob: -0.002409542677924037
    2. 'depth' → logprob: -6.7524094581604
    3. '_level' → logprob: -7.0024094581604
    4. 'length' → logprob: -8.252409934997559
    5. '_depth' → logprob: -11.002409934997559
    6. 'vel' → logprob: -11.752409934997559
    7. 'list' → logprob: -12.127409934997559
    8. 'branch' → logprob: -12.377409934997559
    9. 'lev' → logprob: -12.502409934997559
    10. 'l' → logprob: -12.627409934997559

Token 471: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 472: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4396544098854065
    2. '<|end|>' → logprob: -1.0646543502807617
    3. '
' → logprob: -5.189654350280762
    4. '<|end|>' → logprob: -6.189654350280762
    5. ')' → logprob: -6.814654350280762
    6. '```' → logprob: -7.189654350280762
    7. '[' → logprob: -7.439654350280762
    8. '#' → logprob: -7.939654350280762
    9. ' def' → logprob: -9.439654350280762
    10. ' ' → logprob: -10.064654350280762

Token 473: ' solve' (ID: 17722)
  Prédit: ' calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' calculate' → logprob: -1.3087350130081177
    2. ' find' → logprob: -1.4337350130081177
    3. ' max' → logprob: -2.433734893798828
    4. 'calculate' → logprob: -2.433734893798828
    5. ' count' → logprob: -2.808734893798828
    6. ' compute' → logprob: -3.808734893798828
    7. 'find' → logprob: -3.933734893798828
    8. 'count' → logprob: -4.058734893798828
    9. ' estimate' → logprob: -4.058734893798828
    10. 'max' → logprob: -4.058734893798828

Token 474: '_tree' (ID: 27118)
  Prédit: '(tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(tree' → logprob: -0.009737669490277767
    2. '(' → logprob: -4.884737491607666
    3. '(n' → logprob: -7.759737491607666
    4. '(depth' → logprob: -7.759737491607666
    5. '(_' → logprob: -7.884737491607666
    6. '(root' → logprob: -9.259737968444824
    7. ' (' → logprob: -9.384737968444824
    8. '(graph' → logprob: -9.384737968444824
    9. '(t' → logprob: -9.509737968444824
    10. '():' → logprob: -9.509737968444824

Token 475: '_properties' (ID: 59463)
  Prédit: '(tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(tree' → logprob: -1.1277068853378296
    2. '(' → logprob: -1.3777068853378296
    3. '_depth' → logprob: -1.5027068853378296
    4. '_d' → logprob: -2.627707004547119
    5. '_ad' → logprob: -3.252707004547119
    6. '_height' → logprob: -3.877707004547119
    7. '(_' → logprob: -4.252707004547119
    8. '_branch' → logprob: -4.252707004547119
    9. '(depth' → logprob: -4.502707004547119
    10. '_max' → logprob: -4.877707004547119

Token 476: '(number' (ID: 32955)
  Prédit: '(tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(tree' → logprob: -2.939851037808694e-05
    2. '(' → logprob: -10.625029563903809
    3. ' (' → logprob: -12.750029563903809
    4. '(root' → logprob: -15.000029563903809
    5. '(Tree' → logprob: -15.250029563903809
    6. '(graph' → logprob: -15.250029563903809
    7. '(n' → logprob: -15.250029563903809
    8. '(node' → logprob: -15.250029563903809
    9. '(t' → logprob: -15.375029563903809
    10. '():' → logprob: -15.625029563903809

Token 477: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -0.08174806088209152
    2. '_nodes' → logprob: -2.5817480087280273
    3. '_vertices' → logprob: -7.081748008728027
    4. ')' → logprob: -7.206748008728027
    5. 'of' → logprob: -7.706748008728027
    6. ',' → logprob: -7.706748008728027
    7. '_' → logprob: -8.831748008728027
    8. '=' → logprob: -10.331748008728027
    9. '_le' → logprob: -10.581748008728027
    10. ' of' → logprob: -10.581748008728027

Token 478: '_nodes' (ID: 34593)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -0.5283647179603577
    2. '_nodes' → logprob: -0.9033647179603577
    3. 'vertices' → logprob: -5.653364658355713
    4. '_vertices' → logprob: -6.778364658355713
    5. ' nodes' → logprob: -8.403365135192871
    6. 'edges' → logprob: -9.278365135192871
    7. '_edges' → logprob: -9.653365135192871
    8. 'branches' → logprob: -10.278365135192871
    9. 'Nodes' → logprob: -10.403365135192871
    10. '```' → logprob: -10.528365135192871

Token 479: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.5094070477061905e-05
    2. '):' → logprob: -11.500015258789062
    3. ' ,' → logprob: -12.875015258789062
    4. ',n' → logprob: -13.375015258789062
    5. ',
' → logprob: -15.250015258789062
    6. '‌,' → logprob: -16.250015258789062
    7. ':' → logprob: -16.250015258789062
    8. '   ' → logprob: -16.875015258789062
    9. ',size' → logprob: -17.000015258789062
    10. ',num' → logprob: -17.125015258789062

Token 480: ' tree' (ID: 8165)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.07360616326332092
    2. 'edges' → logprob: -3.198606252670288
    3. ' tree' → logprob: -3.698606252670288
    4. ' edges' → logprob: -5.698606014251709
    5. 'edge' → logprob: -6.573606014251709
    6. 'adj' → logprob: -8.823606491088867
    7. '   ' → logprob: -9.198606491088867
    8. ' adjacency' → logprob: -9.573606491088867
    9. 'connections' → logprob: -9.573606491088867
    10. 'node' → logprob: -10.323606491088867

Token 481: '_ad' (ID: 23782)
  Prédit: '_ad'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ad' → logprob: -0.0005898483213968575
    2. '_adj' → logprob: -7.500589847564697
    3. 'adj' → logprob: -11.875590324401855
    4. '_edges' → logprob: -11.875590324401855
    5. ')' → logprob: -12.250590324401855
    6. ')_' → logprob: -12.375590324401855
    7. '_lists' → logprob: -13.125590324401855
    8. '_nodes' → logprob: -13.625590324401855
    9. ' adjacency' → logprob: -13.750590324401855
    10. '_' → logprob: -13.875590324401855

Token 482: 'jac' (ID: 77250)
  Prédit: 'jac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jac' → logprob: -4.23917081207037e-05
    2. 'j' → logprob: -10.625041961669922
    3. 'acency' → logprob: -11.000041961669922
    4. 'Jac' → logprob: -13.875041961669922
    5. ' jac' → logprob: -15.625041961669922
    6. 'jc' → logprob: -17.000041961669922
    7. ' adjacency' → logprob: -17.125041961669922
    8. '_j' → logprob: -17.125041961669922
    9. 'js' → logprob: -17.875041961669922
    10. '_list' → logprob: -18.125041961669922

Token 483: 'ency' (ID: 2799)
  Prédit: 'ency'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ency' → logprob: -0.00028612653841264546
    2. 'y' → logprob: -8.500286102294922
    3. '```' → logprob: -10.625286102294922
    4. '_list' → logprob: -11.750286102294922
    5. 'ENCY' → logprob: -11.875286102294922
    6. 'eny' → logprob: -12.375286102294922
    7. 'acency' → logprob: -12.375286102294922
    8. '#' → logprob: -12.375286102294922
    9. '
' → logprob: -12.750286102294922
    10. 'cy' → logprob: -12.750286102294922

Token 484: '_lists' (ID: 93609)
  Prédit: '_lists'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lists' → logprob: -2.3319124011322856e-05
    2. 'lists' → logprob: -11.000022888183594
    3. '_list' → logprob: -12.625022888183594
    4. 's' → logprob: -14.000022888183594
    5. 'Lists' → logprob: -14.250022888183594
    6. 'list' → logprob: -14.500022888183594
    7. ')_' → logprob: -14.750022888183594
    8. ' lists' → logprob: -14.875022888183594
    9. ')' → logprob: -15.500022888183594
    10. '   ' → logprob: -16.000022888183594

Token 485: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5777814984321594
    2. ',' → logprob: -0.8277814984321594
    3. '):
' → logprob: -6.327781677246094
    4. ')' → logprob: -10.452781677246094
    5. '   ' → logprob: -11.077781677246094
    6. '):
' → logprob: -12.952781677246094
    7. ' ,' → logprob: -13.327781677246094
    8. ' ):' → logprob: -13.452781677246094
    9. ':' → logprob: -13.827781677246094
    10. ',
' → logprob: -14.077781677246094

Token 486: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19998320937156677
    2. ':
' → logprob: -2.5749831199645996
    3. ':' → logprob: -2.6999831199645996
    4. '):
' → logprob: -3.6999831199645996
    5. '():
' → logprob: -5.0749831199646
    6. '(tree' → logprob: -6.3249831199646
    7. ',' → logprob: -6.8249831199646
    8. 'def' → logprob: -6.8249831199646
    9. '):' → logprob: -7.8249831199646
    10. '():' → logprob: -7.8249831199646

Token 487: ' if' (ID: 538)
  Prédit: 'long'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'long' → logprob: -0.43810606002807617
    2. 'diam' → logprob: -1.4381060600280762
    3. ' longest' → logprob: -3.063106060028076
    4. 'path' → logprob: -3.063106060028076
    5. ' diameter' → logprob: -4.938106060028076
    6. '#' → logprob: -5.563106060028076
    7. 'if' (adapté à ' if') → logprob: -5.938106060028076
    8. '   ' → logprob: -6.188106060028076
    9. 'def' → logprob: -6.188106060028076
    10. ' path' → logprob: -6.813106060028076

Token 488: ' number' (ID: 2086)
  Prédit: ' number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.17977160215377808
    2. 'number' → logprob: -1.8047716617584229
    3. ' ' → logprob: -11.804771423339844
    4. ' not' → logprob: -12.054771423339844
    5. 'n' → logprob: -12.054771423339844
    6. 'not' → logprob: -13.429771423339844
    7. '	number' → logprob: -13.679771423339844
    8. '(number' → logprob: -14.054771423339844
    9. '1' → logprob: -14.179771423339844
    10. '   ' → logprob: -14.429771423339844

Token 489: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -0.0021512117236852646
    2. '_' → logprob: -6.252151012420654
    3. '<' → logprob: -9.377151489257812
    4. '==' → logprob: -9.627151489257812
    5. ' ==' → logprob: -11.502151489257812
    6. ' _' → logprob: -11.502151489257812
    7. 'of' → logprob: -11.627151489257812
    8. '_nodes' → logprob: -11.627151489257812
    9. ' <' → logprob: -11.752151489257812
    10. ' of' → logprob: -12.002151489257812

Token 490: '_nodes' (ID: 34593)
  Prédit: '_nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -0.02468928135931492
    2. 'nodes' → logprob: -3.774689197540283
    3. '1' → logprob: -6.649689197540283
    4. '0' → logprob: -10.024689674377441
    5. ' ' → logprob: -10.399689674377441
    6. ' nodes' → logprob: -10.899689674377441
    7. '_' → logprob: -10.899689674377441
    8. '2' → logprob: -11.899689674377441
    9. '=' → logprob: -12.024689674377441
    10. 'Nodes' → logprob: -12.274689674377441

Token 491: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.2842541038990021
    2. ' ==' → logprob: -1.7842540740966797
    3. '<=' → logprob: -2.7842540740966797
    4. ' <=' → logprob: -4.03425407409668
    5. '<' → logprob: -11.15925407409668
    6. ' <' → logprob: -11.90925407409668
    7. '=' → logprob: -12.15925407409668
    8. ' ' → logprob: -13.78425407409668
    9. '===' → logprob: -15.65925407409668
    10. '   ' → logprob: -15.90925407409668

Token 492: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005495091434568167
    2. '0' → logprob: -5.255495071411133
    3. ' ' → logprob: -8.255495071411133
    4. '   ' → logprob: -14.005495071411133
    5. '2' → logprob: -16.005495071411133
    6. '=' → logprob: -16.005495071411133
    7. '```' → logprob: -16.005495071411133
    8. '_' → logprob: -16.630495071411133
    9. '    ' → logprob: -16.755495071411133
    10. '  ' → logprob: -17.067995071411133

Token 493: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.026321666315197945
    2. '0' → logprob: -3.6513216495513916
    3. ' ' → logprob: -10.776321411132812
    4. '   ' → logprob: -15.526321411132812
    5. '```' → logprob: -16.151321411132812
    6. '=' → logprob: -16.401321411132812
    7. '2' → logprob: -16.776321411132812
    8. '(' → logprob: -18.026321411132812
    9. '۱' → logprob: -18.026321411132812
    10. '    ' → logprob: -18.088821411132812

Token 494: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007254838477820158
    2. ':
' → logprob: -5.007254600524902
    3. ' :' → logprob: -8.382254600524902
    4. ':return' → logprob: -8.382254600524902
    5. ' and' → logprob: -9.507254600524902
    6. ' :
' → logprob: -12.632254600524902
    7. 'and' → logprob: -13.132254600524902
    8. '   ' → logprob: -14.507254600524902
    9. ':
' → logprob: -15.132254600524902
    10. ' or' → logprob: -15.257254600524902

Token 495: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22407886385917664
    2. '   ' → logprob: -2.599078893661499
    3. ':' → logprob: -2.724078893661499
    4. ':
' → logprob: -2.849078893661499
    5. ':return' → logprob: -7.09907865524292
    6. ' return' → logprob: -7.22407865524292
    7. ',' → logprob: -7.22407865524292
    8. '):
' → logprob: -8.349079132080078
    9. ' and' → logprob: -9.349079132080078
    10. 'return' → logprob: -10.224079132080078

Token 496: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.47531503438949585
    2. ' return' → logprob: -1.2253150939941406
    3. '   ' → logprob: -2.4753150939941406
    4. '
' → logprob: -8.97531509399414
    5. 'print' → logprob: -8.97531509399414
    6. '       ' → logprob: -8.97531509399414
    7. '    ' → logprob: -9.97531509399414
    8. ' print' → logprob: -10.35031509399414
    9. '    
' → logprob: -11.72531509399414
    10. '	return' → logprob: -11.72531509399414

Token 497: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7400583028793335
    2. ' ' → logprob: -1.6150583028793335
    3. '2' → logprob: -2.115058422088623
    4. '"' → logprob: -2.990058422088623
    5. '[' → logprob: -2.990058422088623
    6. '(' → logprob: -3.240058422088623
    7. ' [' → logprob: -4.365058422088623
    8. ' (' → logprob: -4.365058422088623
    9. ''' → logprob: -4.740058422088623
    10. '0' → logprob: -4.740058422088623

Token 498: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.44227224588394165
    2. '(' → logprob: -2.192272186279297
    3. '[' → logprob: -2.317272186279297
    4. '2' → logprob: -2.567272186279297
    5. '"' → logprob: -3.317272186279297
    6. '0' → logprob: -3.942272186279297
    7. 'number' → logprob: -5.317272186279297
    8. ''' → logprob: -5.442272186279297
    9. '3' → logprob: -7.067272186279297
    10. ' ' → logprob: -7.317272186279297

Token 499: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.22913572192192078
    2. ',' → logprob: -2.104135751724243
    3. '   ' → logprob: -3.604135751724243
    4. '    
' → logprob: -3.604135751724243
    5. '
    
' → logprob: -4.479135513305664
    6. '

' → logprob: -4.729135513305664
    7. '<|end|>' → logprob: -6.229135513305664
    8. 'def' → logprob: -7.104135513305664
    9. '  ' → logprob: -7.354135513305664
    10. ' ,' → logprob: -7.604135513305664

Token 500: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.053473565727472305
    2. '0' → logprob: -3.678473472595215
    3. ' ' → logprob: -4.428473472595215
    4. '2' → logprob: -5.178473472595215
    5. '[' → logprob: -5.428473472595215
    6. '(' → logprob: -5.678473472595215
    7. ' (' → logprob: -8.178473472595215
    8. ' [' → logprob: -8.178473472595215
    9. '[number' → logprob: -8.803473472595215
    10. 'number' → logprob: -8.928473472595215

Token 501: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06283486634492874
    2. '2' → logprob: -3.0628349781036377
    3. '0' → logprob: -5.062834739685059
    4. 'number' → logprob: -5.187834739685059
    5. 'tree' → logprob: -7.187834739685059
    6. '[' → logprob: -7.937834739685059
    7. '(number' → logprob: -8.312834739685059
    8. '[number' → logprob: -8.312834739685059
    9. '(' → logprob: -8.812834739685059
    10. '(tree' → logprob: -9.687834739685059

Token 502: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7572386264801025
    2. '    
' → logprob: -0.7572386264801025
    3. '   ' → logprob: -2.8822386264801025
    4. ',' → logprob: -6.257238388061523
    5. '
    
' → logprob: -6.382238388061523
    6. '  
' → logprob: -6.757238388061523
    7. '        
' → logprob: -8.507238388061523
    8. '    
    
' → logprob: -8.507238388061523
    9. '   
' → logprob: -8.632238388061523
    10. ' 
' → logprob: -8.757238388061523

Token 503: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9808509945869446
    2. '   ' → logprob: -1.1058509349822998
    3. '    
' → logprob: -1.2308509349822998
    4. '  
' → logprob: -7.605851173400879
    5. '    
    
' → logprob: -7.605851173400879
    6. '

' → logprob: -8.480851173400879
    7. '
    
' → logprob: -8.605851173400879
    8. '        
' → logprob: -8.980851173400879
    9. '```' → logprob: -8.980851173400879
    10. '   
' → logprob: -9.230851173400879

Token 504: ' path' (ID: 3104)
  Prédit: 'long'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'long' → logprob: -0.17651192843914032
    2. 'diam' → logprob: -2.3015120029449463
    3. 'path' (adapté à ' path') → logprob: -3.0515120029449463
    4. '   ' → logprob: -5.051511764526367
    5. 'first' → logprob: -5.801511764526367
    6. ' longest' → logprob: -6.426511764526367
    7. 'tree' → logprob: -6.801511764526367
    8. '#' → logprob: -8.051511764526367
    9. 'def' → logprob: -8.176511764526367
    10. 'max' → logprob: -8.551511764526367

Token 505: '_between' (ID: 124874)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12431219220161438
    2. '_from' → logprob: -2.499312162399292
    3. '=' → logprob: -3.624312162399292
    4. '_length' → logprob: -5.499312400817871
    5. '_' → logprob: -6.499312400817871
    6. '_long' → logprob: -6.624312400817871
    7. 'from' → logprob: -7.874312400817871
    8. '   ' → logprob: -8.499312400817871
    9. '_max' → logprob: -9.249312400817871
    10. '_=' → logprob: -9.249312400817871

Token 506: '_le' (ID: 27121)
  Prédit: '_nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -0.8532002568244934
    2. '=find' → logprob: -1.7282001972198486
    3. ' =' → logprob: -1.8532001972198486
    4. 'find' → logprob: -2.6032001972198486
    5. '_long' → logprob: -2.9782001972198486
    6. 'nodes' → logprob: -3.3532001972198486
    7. '=' → logprob: -3.8532001972198486
    8. '(find' → logprob: -4.228200435638428
    9. 'long' → logprob: -4.353200435638428
    10. '_last' → logprob: -4.978200435638428

Token 507: 'aves' (ID: 6808)
  Prédit: 'ng'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ng' → logprob: -0.5071918964385986
    2. 'aves' → logprob: -1.3821918964385986
    3. 'af' → logprob: -2.2571918964385986
    4. 'ast' → logprob: -3.6321918964385986
    5. 'afs' → logprob: -5.1321916580200195
    6. 'ft' → logprob: -5.7571916580200195
    7. 'asts' → logprob: -6.1321916580200195
    8. 'n' → logprob: -6.2571916580200195
    9. 'nodes' → logprob: -6.7571916580200195
    10. 'av' → logprob: -8.50719165802002

Token 508: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6327120065689087
    2. ' =' → logprob: -0.7577120065689087
    3. '=find' → logprob: -9.257712364196777
    4. '   ' → logprob: -12.257712364196777
    5. ',' → logprob: -12.882712364196777
    6. 's' → logprob: -13.132712364196777
    7. '_' → logprob: -13.257712364196777
    8. ' ' → logprob: -13.757712364196777
    9. 'find' → logprob: -14.257712364196777
    10. '(' → logprob: -14.382712364196777

Token 509: ' find' (ID: 1646)
  Prédit: ' find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.12693503499031067
    2. 'find' → logprob: -2.1269350051879883
    3. '(find' → logprob: -13.001935005187988
    4. ' ' → logprob: -13.251935005187988
    5. '   ' → logprob: -13.376935005187988
    6. '	find' → logprob: -14.126935005187988
    7. '=find' → logprob: -14.876935005187988
    8. '.find' → logprob: -16.001935958862305
    9. ' ' → logprob: -17.001935958862305
    10. ')find' → logprob: -17.376935958862305

Token 510: '_long' (ID: 42288)
  Prédit: '_long'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_long' → logprob: -4.246537173457909e-06
    2. 'long' → logprob: -12.625003814697266
    3. 'Longest' → logprob: -14.625003814697266
    4. '_' → logprob: -15.125003814697266
    5. ' longest' → logprob: -16.625003814697266
    6. '_max' → logprob: -16.875003814697266
    7. '```' → logprob: -17.625003814697266
    8. '_last' → logprob: -17.625003814697266
    9. '_LONG' → logprob: -18.375003814697266
    10. '_lon' → logprob: -18.625003814697266

Token 511: 'est' (ID: 376)
  Prédit: 'est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.00014001218369230628
    2. 'gest' → logprob: -9.875140190124512
    3. '_path' → logprob: -9.875140190124512
    4. 'path' → logprob: -11.250140190124512
    5. 'ost' → logprob: -11.500140190124512
    6. 'st' → logprob: -12.250140190124512
    7. '__' → logprob: -13.750140190124512
    8. '```' → logprob: -13.875140190124512
    9. 'test' → logprob: -14.250140190124512
    10. '...' → logprob: -14.375140190124512

Token 512: '_path' (ID: 5558)
  Prédit: '_path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -2.5776860184123507e-06
    2. 'path' → logprob: -13.12500286102295
    3. '_' → logprob: -15.62500286102295
    4. ' path' → logprob: -16.625001907348633
    5. '(path' → logprob: -16.750001907348633
    6. ' _' → logprob: -17.000001907348633
    7. '```' → logprob: -17.000001907348633
    8. '
' → logprob: -17.500001907348633
    9. '_p' → logprob: -17.750001907348633
    10. '_pat' → logprob: -18.000001907348633

Token 513: '(tree' (ID: 44909)
  Prédit: '(tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tree' → logprob: -3.128163257315464e-07
    2. '(' → logprob: -15.625
    3. '(
' → logprob: -17.125
    4. 'tree' → logprob: -18.0
    5. '(t' → logprob: -18.25
    6. ' (' → logprob: -18.75
    7. '((' → logprob: -18.75
    8. '(Tree' → logprob: -19.375
    9. '(tr' → logprob: -19.75
    10. '```' → logprob: -20.875

Token 514: '_ad' (ID: 23782)
  Prédit: '_ad'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ad' → logprob: -4.320199877838604e-07
    2. '_adj' → logprob: -15.375
    3. 'ad' → logprob: -17.125
    4. '_ab' → logprob: -17.5
    5. 'adj' → logprob: -17.625
    6. '_between' → logprob: -17.875
    7. ')' → logprob: -18.0
    8. '_' → logprob: -18.625
    9. ' adjacency' → logprob: -18.625
    10. '_ac' → logprob: -19.0

Token 515: 'jac' (ID: 77250)
  Prédit: 'acency'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'acency' → logprob: -0.011732818558812141
    2. '_ad' → logprob: -4.886733055114746
    3. 'adj' → logprob: -5.761733055114746
    4. 'ac' → logprob: -8.511733055114746
    5. '_adj' → logprob: -8.511733055114746
    6. ' adjacency' → logprob: -8.636733055114746
    7. 'ad' → logprob: -8.886733055114746
    8. 'ency' → logprob: -9.511733055114746
    9. 'acy' → logprob: -9.761733055114746
    10. '_lists' → logprob: -10.011733055114746

Token 516: 'ency' (ID: 2799)
  Prédit: 'ists'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ists' → logprob: -0.13748908042907715
    2. '_lists' → logprob: -2.387489080429077
    3. 'ist' → logprob: -4.012489318847656
    4. 'lists' → logprob: -4.762489318847656
    5. 'sts' → logprob: -4.762489318847656
    6. 'st' → logprob: -7.762489318847656
    7. '_list' → logprob: -8.012489318847656
    8. 'Lists' → logprob: -9.262489318847656
    9. '   ' → logprob: -9.387489318847656
    10. 'acency' → logprob: -9.637489318847656

Token 517: '_lists' (ID: 93609)
  Prédit: '_lists'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lists' → logprob: -8.41866585687967e-06
    2. 'lists' → logprob: -12.125008583068848
    3. '   ' → logprob: -13.500008583068848
    4. ')' → logprob: -14.750008583068848
    5. '[' → logprob: -15.125008583068848
    6. '       ' → logprob: -16.12500762939453
    7. 'Lists' → logprob: -16.50000762939453
    8. 's' → logprob: -16.62500762939453
    9. '_' → logprob: -16.87500762939453
    10. '_list' → logprob: -17.12500762939453

Token 518: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25240248441696167
    2. ')
' → logprob: -1.5024025440216064
    3. ')

' → logprob: -7.752402305603027
    4. ')
' → logprob: -10.627402305603027
    5. '   ' → logprob: -11.127402305603027
    6. ' )' → logprob: -13.627402305603027
    7. ' )
' → logprob: -13.752402305603027
    8. ')[' → logprob: -14.502402305603027
    9. ' ' → logprob: -15.127402305603027
    10. ')`
' → logprob: -15.502402305603027

Token 519: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.028296655043959618
    2. '
' → logprob: -4.77829647064209
    3. ' max' → logprob: -4.77829647064209
    4. 'max' → logprob: -5.15329647064209
    5. '    
' → logprob: -5.77829647064209
    6. ' length' → logprob: -7.27829647064209
    7. '```' → logprob: -8.27829647064209
    8. 'length' → logprob: -8.77829647064209
    9. ',' → logprob: -8.77829647064209
    10. 'depth' → logprob: -9.15329647064209

Token 520: ' path' (ID: 3104)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.7931259870529175
    2. 'diam' → logprob: -1.5431259870529175
    3. 'path' (adapté à ' path') → logprob: -2.168126106262207
    4. ' max' → logprob: -2.168126106262207
    5. ' diameter' → logprob: -3.668126106262207
    6. ' path' → logprob: -4.043126106262207
    7. '   ' → logprob: -4.293126106262207
    8. 'branch' → logprob: -4.918126106262207
    9. 'long' → logprob: -5.043126106262207
    10. 'depth' → logprob: -5.293126106262207

Token 521: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.0019266135059297085
    2. '_between' → logprob: -7.001926422119141
    3. '_depth' → logprob: -7.501926422119141
    4. '_max' → logprob: -8.37692642211914
    5. '_branch' → logprob: -10.00192642211914
    6. '_len' → logprob: -10.00192642211914
    7. '_distance' → logprob: -10.25192642211914
    8. '_end' → logprob: -11.00192642211914
    9. '_lengths' → logprob: -11.25192642211914
    10. ' =' → logprob: -11.25192642211914

Token 522: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0028166472911834717
    2. '=' → logprob: -5.877816677093506
    3. '_' → logprob: -11.877816200256348
    4. '=len' → logprob: -13.127816200256348
    5. ',' → logprob: -14.127816200256348
    6. 's' → logprob: -15.127816200256348
    7. ')' → logprob: -15.127816200256348
    8. ' ' → logprob: -15.502816200256348
    9. '   ' → logprob: -15.502816200256348
    10. ' _' → logprob: -15.627816200256348

Token 523: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.47409549355506897
    2. 'len' → logprob: -0.9740954637527466
    3. '(len' → logprob: -10.974095344543457
    4. '   ' → logprob: -14.099095344543457
    5. '=len' → logprob: -15.599095344543457
    6. '[len' → logprob: -15.724095344543457
    7. '	len' → logprob: -16.224096298217773
    8. ' ' → logprob: -16.224096298217773
    9. ',len' → logprob: -18.474096298217773
    10. ' ' → logprob: -19.099096298217773

Token 524: '(path' (ID: 10993)
  Prédit: '(path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(path' → logprob: -1.0280383548888494e-06
    2. '(' → logprob: -14.000000953674316
    3. 'path' → logprob: -15.875000953674316
    4. ' (' → logprob: -18.500001907348633
    5. ' path' → logprob: -19.875001907348633
    6. '(
' → logprob: -20.500001907348633
    7. '[path' → logprob: -21.875001907348633
    8. ',path' → logprob: -22.125001907348633
    9. '	path' → logprob: -23.500001907348633
    10. '"path' → logprob: -23.875001907348633

Token 525: '_between' (ID: 124874)
  Prédit: '_between'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_between' → logprob: -1.0445127372804563e-05
    2. '_from' → logprob: -11.62501049041748
    3. 'between' → logprob: -14.25001049041748
    4. ')' → logprob: -14.62501049041748
    5. '-between' → logprob: -16.125009536743164
    6. '_to' → logprob: -16.375009536743164
    7. '```' → logprob: -16.750009536743164
    8. ')-' → logprob: -17.125009536743164
    9. '   ' → logprob: -17.125009536743164
    10. '_b' → logprob: -17.625009536743164

Token 526: '_le' (ID: 27121)
  Prédit: '_le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_le' → logprob: -0.00015860427811276168
    2. 'le' → logprob: -8.875158309936523
    3. '_between' → logprob: -11.250158309936523
    4. 'path' → logprob: -12.625158309936523
    5. 'between' → logprob: -14.750158309936523
    6. '_path' → logprob: -15.125158309936523
    7. 'from' → logprob: -15.250158309936523
    8. '_nodes' → logprob: -15.375158309936523
    9. ')' → logprob: -15.625158309936523
    10. '_paths' → logprob: -15.750158309936523

Token 527: 'aves' (ID: 6808)
  Prédit: 'aves'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aves' → logprob: -0.010690399445593357
    2. 'path' → logprob: -5.385690212249756
    3. 'af' → logprob: -6.010690212249756
    4. 'ath' → logprob: -6.885690212249756
    5. '_path' → logprob: -7.635690212249756
    6. 'es' → logprob: -7.885690212249756
    7. 'aths' → logprob: -8.760690689086914
    8. 'ist' → logprob: -8.885690689086914
    9. 'ees' → logprob: -8.885690689086914
    10. 'ves' → logprob: -9.135690689086914

Token 528: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0084723811596632
    2. ' -' → logprob: -5.008472442626953
    3. '-' → logprob: -7.008472442626953
    4. ')-' → logprob: -7.258472442626953
    5. ' )' → logprob: -9.633472442626953
    6. '   ' → logprob: -10.133472442626953
    7. ')
' → logprob: -10.633472442626953
    8. '<|end|>' → logprob: -12.133472442626953
    9. ' ' → logprob: -12.508472442626953
    10. '-)' → logprob: -13.383472442626953

Token 529: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13086561858654022
    2. '    
' → logprob: -2.7558655738830566
    3. '
' → logprob: -2.8808655738830566
    4. 'max' → logprob: -6.630865573883057
    5. ' max' → logprob: -7.880865573883057
    6. 'left' → logprob: -8.130866050720215
    7. '```' → logprob: -8.255866050720215
    8. ',' → logprob: -9.380866050720215
    9. '   
' → logprob: -9.630866050720215
    10. ' left' → logprob: -9.755866050720215

Token 530: ' half' (ID: 6375)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.4919145703315735
    2. 'left' → logprob: -1.3669145107269287
    3. 'branch' → logprob: -3.8669145107269287
    4. 'mid' → logprob: -4.116914749145508
    5. 'middle' → logprob: -4.241914749145508
    6. 'root' → logprob: -4.241914749145508
    7. 'first' → logprob: -4.241914749145508
    8. 'half' (adapté à ' half') → logprob: -4.616914749145508
    9. ' max' → logprob: -5.241914749145508
    10. '   ' → logprob: -5.366914749145508

Token 531: '_path' (ID: 5558)
  Prédit: '_length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.4234575629234314
    2. '_path' → logprob: -1.2984576225280762
    3. '_' → logprob: -3.173457622528076
    4. ' =' → logprob: -3.923457622528076
    5. '_point' → logprob: -5.548457622528076
    6. '_len' → logprob: -6.423457622528076
    7. '_index' → logprob: -6.798457622528076
    8. '_depth' → logprob: -7.048457622528076
    9. '   ' → logprob: -7.298457622528076
    10. '=' → logprob: -7.548457622528076

Token 532: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.0056737447157502174
    2. ' =' → logprob: -5.380673885345459
    3. '_len' → logprob: -7.880673885345459
    4. '=' → logprob: -8.1306734085083
    5. '   ' → logprob: -8.1306734085083
    6. '_index' → logprob: -10.3806734085083
    7. '_' → logprob: -10.3806734085083
    8. '_size' → logprob: -11.8806734085083
    9. '_point' → logprob: -12.2556734085083
    10. '_path' → logprob: -12.8806734085083

Token 533: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02976033091545105
    2. '=' → logprob: -3.5297603607177734
    3. '   ' → logprob: -12.279760360717773
    4. 's' → logprob: -12.904760360717773
    5. ',' → logprob: -13.529760360717773
    6. '=int' → logprob: -14.779760360717773
    7. ' ' → logprob: -14.779760360717773
    8. '=len' → logprob: -15.279760360717773
    9. '_' → logprob: -15.654760360717773
    10. '    ' → logprob: -16.154760360717773

Token 534: ' (' (ID: 350)
  Prédit: ' path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' path' → logprob: -0.5736688375473022
    2. 'path' → logprob: -1.1986688375473022
    3. '(path' → logprob: -2.073668956756592
    4. ' (' → logprob: -4.698668956756592
    5. '   ' → logprob: -10.073668479919434
    6. '(' → logprob: -10.198668479919434
    7. ' len' → logprob: -11.448668479919434
    8. ' ' → logprob: -11.948668479919434
    9. 'len' → logprob: -12.073668479919434
    10. '[path' → logprob: -12.198668479919434

Token 535: 'path' (ID: 4189)
  Prédit: 'path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.020581010729074478
    2. ' path' → logprob: -3.895581007003784
    3. '   ' → logprob: -10.645581245422363
    4. '(path' → logprob: -11.395581245422363
    5. ' ' → logprob: -12.895581245422363
    6. 'len' → logprob: -14.895581245422363
    7. ' (' → logprob: -14.895581245422363
    8. '	path' → logprob: -15.770581245422363
    9. '  ' → logprob: -15.895581245422363
    10. '(' → logprob: -16.020580291748047

Token 536: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -1.0206720617134124e-05
    2. 'length' → logprob: -11.62501049041748
    3. '_between' → logprob: -13.75001049041748
    4. '   ' → logprob: -16.500009536743164
    5. '_lengths' → logprob: -18.125009536743164
    6. '_' → logprob: -18.125009536743164
    7. 'len' → logprob: -18.250009536743164
    8. ' length' → logprob: -18.375009536743164
    9. 'Length' → logprob: -18.375009536743164
    10. '_LENGTH' → logprob: -18.500009536743164

Token 537: ' +' (ID: 659)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.4479762315750122
    2. ' +' → logprob: -1.9479762315750122
    3. '-' → logprob: -2.6979761123657227
    4. ' //' → logprob: -2.6979761123657227
    5. '+' → logprob: -3.3229761123657227
    6. ')' → logprob: -3.5729761123657227
    7. '   ' → logprob: -4.322976112365723
    8. ' ' → logprob: -5.322976112365723
    9. '//' → logprob: -7.322976112365723
    10. ' )' → logprob: -7.447976112365723

Token 538: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003806257154792547
    2. ' ' → logprob: -7.875380516052246
    3. '
' → logprob: -15.250380516052246
    4. '2' → logprob: -16.125381469726562
    5. '   ' → logprob: -16.625381469726562
    6. '-' → logprob: -17.500381469726562
    7. '```' → logprob: -17.875381469726562
    8. '0' → logprob: -18.500381469726562
    9. '//' → logprob: -18.562881469726562
    10. '(' → logprob: -19.250381469726562

Token 539: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2200749754119897e-06
    2. ' ' → logprob: -13.125001907348633
    3. '
' → logprob: -16.625001907348633
    4. '2' → logprob: -16.875001907348633
    5. '-' → logprob: -17.875001907348633
    6. '   ' → logprob: -17.875001907348633
    7. '```' → logprob: -18.500001907348633
    8. '(' → logprob: -18.625001907348633
    9. '0' → logprob: -18.750001907348633
    10. '//' → logprob: -20.000001907348633

Token 540: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006167700630612671
    2. ')//' → logprob: -7.875616550445557
    3. ' )' → logprob: -8.375617027282715
    4. '//' → logprob: -12.375617027282715
    5. '   ' → logprob: -13.625617027282715
    6. ' //' → logprob: -14.750617027282715
    7. ')
' → logprob: -15.625617027282715
    8. ' ' → logprob: -16.5006160736084
    9. ')>>' → logprob: -16.6256160736084
    10. '```' → logprob: -17.5006160736084

Token 541: ' //' (ID: 602)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.44067227840423584
    2. ' //' → logprob: -1.5656722784042358
    3. '//' → logprob: -1.9406722784042358
    4. ')//' → logprob: -6.440672397613525
    5. '
' → logprob: -6.940672397613525
    6. ' )' → logprob: -7.565672397613525
    7. '   ' → logprob: -7.815672397613525
    8. '```' → logprob: -8.940671920776367
    9. ' ' → logprob: -9.190671920776367
    10. '>>' → logprob: -10.190671920776367

Token 542: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0010332842357456684
    2. ' ' → logprob: -6.876033306121826
    3. '   ' → logprob: -15.001032829284668
    4. '
' → logprob: -16.251033782958984
    5. '```' → logprob: -16.376033782958984
    6. '  ' → logprob: -18.501033782958984
    7. '3' → logprob: -18.751033782958984
    8. '

' → logprob: -19.001033782958984
    9. '۲' → logprob: -19.001033782958984
    10. '    ' → logprob: -19.376033782958984

Token 543: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.676981345459353e-06
    2. ' ' → logprob: -12.125005722045898
    3. '```' → logprob: -17.0000057220459
    4. '
' → logprob: -17.3750057220459
    5. '   ' → logprob: -17.5000057220459
    6. '۲' → logprob: -18.3750057220459
    7. 'def' → logprob: -19.1875057220459
    8. '２' → logprob: -19.2500057220459
    9. '२' → logprob: -19.6250057220459
    10. '3' → logprob: -19.8750057220459

Token 544: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.38002073764801025
    2. '   ' → logprob: -1.5050207376480103
    3. '    
' → logprob: -2.3800206184387207
    4. ',' → logprob: -7.255020618438721
    5. '   
' → logprob: -9.005021095275879
    6. '
' → logprob: -9.255021095275879
    7. '

' → logprob: -9.505021095275879
    8. '  
' → logprob: -9.630021095275879
    9. '```' → logprob: -9.630021095275879
    10. '        
' → logprob: -9.755021095275879

Token 545: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07653002440929413
    2. 'max' → logprob: -3.3265299797058105
    3. 'left' → logprob: -3.9515299797058105
    4. '
' → logprob: -5.0765299797058105
    5. '    
' → logprob: -5.3265299797058105
    6. ' max' → logprob: -6.0765299797058105
    7. 'first' → logprob: -6.3265299797058105
    8. ' left' → logprob: -6.3265299797058105
    9. 'root' → logprob: -8.326530456542969
    10. '```' → logprob: -8.451530456542969

Token 546: ' if' (ID: 538)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.8764991164207458
    2. 'left' → logprob: -0.8764991164207458
    3. 'first' → logprob: -2.3764991760253906
    4. 'root' → logprob: -3.6264991760253906
    5. 'branch' → logprob: -3.6264991760253906
    6. '   ' → logprob: -5.501499176025391
    7. 'depth' → logprob: -6.251499176025391
    8. 'maximum' → logprob: -6.501499176025391
    9. 'children' → logprob: -7.126499176025391
    10. 'center' → logprob: -7.376499176025391

Token 547: ' path' (ID: 3104)
  Prédit: ' path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' path' → logprob: -0.26064011454582214
    2. ' half' → logprob: -2.0106401443481445
    3. ' number' → logprob: -2.7606401443481445
    4. 'path' → logprob: -4.5106401443481445
    5. 'half' → logprob: -4.6356401443481445
    6. 'number' → logprob: -5.6356401443481445
    7. ' len' → logprob: -5.7606401443481445
    8. ' (' → logprob: -6.6356401443481445
    9. ' tree' → logprob: -7.0106401443481445
    10. ' ' → logprob: -7.6356401443481445

Token 548: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.00043639098294079304
    2. '_between' → logprob: -7.750436305999756
    3. 'length' → logprob: -12.625436782836914
    4. '   ' → logprob: -14.750436782836914
    5. '_lengths' → logprob: -15.125436782836914
    6. '_from' → logprob: -15.625436782836914
    7. '[' → logprob: -15.750436782836914
    8. ' length' → logprob: -15.875436782836914
    9. '_' → logprob: -16.000436782836914
    10. '_l' → logprob: -16.125436782836914

Token 549: ' %' (ID: 1851)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.3884510099887848
    2. ' <' → logprob: -1.6384509801864624
    3. ' ==' → logprob: -2.763451099395752
    4. '<=' → logprob: -3.513451099395752
    5. '==' → logprob: -4.388451099395752
    6. '<' → logprob: -4.513451099395752
    7. ' ' → logprob: -5.638451099395752
    8. ' >' → logprob: -5.888451099395752
    9. ' >=' → logprob: -6.638451099395752
    10. '%' → logprob: -6.638451099395752

Token 550: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.01815626211464405
    2. ' ' → logprob: -4.018156051635742
    3. '==' → logprob: -12.643156051635742
    4. '0' → logprob: -13.893156051635742
    5. '   ' → logprob: -14.268156051635742
    6. '1' → logprob: -14.643156051635742
    7. ' ==' → logprob: -15.268156051635742
    8. '3' → logprob: -15.893156051635742
    9. '  ' → logprob: -15.893156051635742
    10. '!=' → logprob: -16.018156051635742

Token 551: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.4881879400927573e-05
    2. ' ' → logprob: -10.375035285949707
    3. '==' → logprob: -13.375035285949707
    4. '0' → logprob: -13.625035285949707
    5. '1' → logprob: -15.375035285949707
    6. '
' → logprob: -15.500035285949707
    7. '   ' → logprob: -16.00003433227539
    8. '!=' → logprob: -16.25003433227539
    9. '```' → logprob: -16.37503433227539
    10. '=' → logprob: -16.87503433227539

Token 552: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.09241827577352524
    2. '==' → logprob: -2.4674181938171387
    3. ' !=' → logprob: -5.717418193817139
    4. '!=' → logprob: -9.592418670654297
    5. ':' → logprob: -9.842418670654297
    6. ' ' → logprob: -11.092418670654297
    7. '   ' → logprob: -11.217418670654297
    8. '=' → logprob: -11.342418670654297
    9. ' =' → logprob: -11.842418670654297
    10. ' :' → logprob: -11.967418670654297

Token 553: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09208238869905472
    2. ' ' → logprob: -2.5920825004577637
    3. '1' → logprob: -4.342082500457764
    4. '2' → logprob: -9.342082023620605
    5. '   ' → logprob: -12.342082023620605
    6. '
' → logprob: -13.592082023620605
    7. '```' → logprob: -13.967082023620605
    8. '==' → logprob: -14.092082023620605
    9. '=' → logprob: -14.842082023620605
    10. '  ' → logprob: -16.029582977294922

Token 554: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.025715244933962822
    2. '1' → logprob: -4.025715351104736
    3. ' ' → logprob: -4.900715351104736
    4. '2' → logprob: -9.400714874267578
    5. '
' → logprob: -12.400714874267578
    6. '   ' → logprob: -12.900714874267578
    7. '==' → logprob: -13.150714874267578
    8. '```' → logprob: -13.150714874267578
    9. ' ==' → logprob: -14.463214874267578
    10. '

' → logprob: -15.150714874267578

Token 555: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.47465941309928894
    2. ':
' → logprob: -0.9746594429016113
    3. '   ' → logprob: -8.474658966064453
    4. '       ' → logprob: -8.849658966064453
    5. ' :
' → logprob: -9.474658966064453
    6. ':return' → logprob: -9.599658966064453
    7. ' :' → logprob: -10.224658966064453
    8. ' and' → logprob: -11.224658966064453
    9. ':

' → logprob: -11.474658966064453
    10. '):
' → logprob: -11.474658966064453

Token 556: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.033268023282289505
    2. '   ' → logprob: -3.6582679748535156
    3. '
' → logprob: -5.783267974853516
    4. '#' → logprob: -6.908267974853516
    5. ' left' → logprob: -7.658267974853516
    6. '        
' → logprob: -7.658267974853516
    7. '    
' → logprob: -7.783267974853516
    8. ' return' → logprob: -8.658267974853516
    9. ' #' → logprob: -8.658267974853516
    10. '    ' → logprob: -8.908267974853516

Token 557: ' mid' (ID: 6959)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -1.018431544303894
    2. '   ' → logprob: -1.643431544303894
    3. ' left' → logprob: -1.768431544303894
    4. '       ' → logprob: -2.1434316635131836
    5. 'root' → logprob: -3.3934316635131836
    6. 'max' → logprob: -3.3934316635131836
    7. 'center' → logprob: -4.018431663513184
    8. 'first' → logprob: -4.518431663513184
    9. ' max' → logprob: -4.893431663513184
    10. ' root' → logprob: -4.893431663513184

Token 558: '_left' (ID: 22189)
  Prédit: '_node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.3177650570869446
    2. '_index' → logprob: -1.9427649974822998
    3. '_point' → logprob: -2.1927649974823
    4. 'point' → logprob: -4.567765235900879
    5. '_path' → logprob: -5.692765235900879
    6. '_nodes' → logprob: -7.067765235900879
    7. ' =' → logprob: -7.442765235900879
    8. '_' → logprob: -7.442765235900879
    9. 'node' → logprob: -7.817765235900879
    10. '_idx' → logprob: -7.942765235900879

Token 559: '_node' (ID: 11390)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.13444527983665466
    2. ',' → logprob: -2.3844451904296875
    3. '=' → logprob: -4.0094451904296875
    4. '_node' → logprob: -4.2594451904296875
    5. '   ' → logprob: -7.7594451904296875
    6. 'node' → logprob: -8.384445190429688
    7. ',node' → logprob: -8.509445190429688
    8. '=node' → logprob: -8.884445190429688
    9. ' ,' → logprob: -9.259445190429688
    10. '_index' → logprob: -9.509445190429688

Token 560: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.040793899446725845
    2. ',' → logprob: -3.9157938957214355
    3. '=' → logprob: -3.9157938957214355
    4. ' ,' → logprob: -9.040794372558594
    5. ' ' → logprob: -13.040794372558594
    6. '   ' → logprob: -13.415794372558594
    7. ' =
' → logprob: -14.915794372558594
    8. '    ' → logprob: -16.040794372558594
    9. ' =[' → logprob: -16.290794372558594
    10. '  ' → logprob: -16.665794372558594

Token 561: ' path' (ID: 3104)
  Prédit: ' path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' path' → logprob: -0.47408124804496765
    2. 'path' → logprob: -0.97408127784729
    3. '   ' → logprob: -13.224081039428711
    4. '	path' → logprob: -14.224081039428711
    5. '(path' → logprob: -14.474081039428711
    6. '[path' → logprob: -14.599081039428711
    7. 'Path' → logprob: -15.849081039428711
    8. '"path' → logprob: -15.849081039428711
    9. '_path' → logprob: -16.34908103942871
    10. ' ' → logprob: -16.84908103942871

Token 562: '_between' (ID: 124874)
  Prédit: '_between'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_between' → logprob: -0.0002158146962756291
    2. '_length' → logprob: -8.625215530395508
    3. 'between' → logprob: -10.625215530395508
    4. '   ' → logprob: -12.000215530395508
    5. 'length' → logprob: -13.375215530395508
    6. '-between' → logprob: -14.625215530395508
    7. '_from' → logprob: -14.750215530395508
    8. '[-' → logprob: -14.875215530395508
    9. '[' → logprob: -15.000215530395508
    10. '```' → logprob: -15.250215530395508

Token 563: '_le' (ID: 27121)
  Prédit: '_le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_le' → logprob: -0.003104042261838913
    2. 'le' → logprob: -5.878104209899902
    3. '_between' → logprob: -9.128104209899902
    4. '   ' → logprob: -10.503104209899902
    5. '_path' → logprob: -10.753104209899902
    6. '_left' → logprob: -10.878104209899902
    7. 'from' → logprob: -10.878104209899902
    8. '_from' → logprob: -10.878104209899902
    9. '_leaf' → logprob: -11.128104209899902
    10. '[' → logprob: -11.753104209899902

Token 564: 'aves' (ID: 6808)
  Prédit: 'aves'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aves' → logprob: -0.0027585108764469624
    2. 'af' → logprob: -6.002758502960205
    3. '[' → logprob: -9.502758979797363
    4. 'av' → logprob: -9.752758979797363
    5. 'e' → logprob: -10.002758979797363
    6. 'a' → logprob: -10.377758979797363
    7. 'ft' → logprob: -12.252758979797363
    8. '_' → logprob: -12.377758979797363
    9. 'aft' → logprob: -12.377758979797363
    10. '   ' → logprob: -12.565258979797363

Token 565: '[path' (ID: 145469)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.001452494296245277
    2. '[-' → logprob: -6.876452445983887
    3. '[path' → logprob: -8.126452445983887
    4. '[len' → logprob: -9.876452445983887
    5. ' [' → logprob: -10.626452445983887
    6. '[mid' → logprob: -11.626452445983887
    7. '[(' → logprob: -11.626452445983887
    8. 'half' → logprob: -11.751452445983887
    9. '[
' → logprob: -11.876452445983887
    10. '   ' → logprob: -12.001452445983887

Token 566: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.036665137857198715
    2. 'length' → logprob: -3.411665201187134
    3. '   ' → logprob: -6.786664962768555
    4. 'half' → logprob: -8.161664962768555
    5. '_left' → logprob: -8.161664962768555
    6. '_between' → logprob: -8.411664962768555
    7. 'between' → logprob: -9.161664962768555
    8. 'mid' → logprob: -9.411664962768555
    9. 'Length' → logprob: -9.411664962768555
    10. 'left' → logprob: -9.599164962768555

Token 567: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.004083385691046715
    2. ' //' → logprob: -5.504083156585693
    3. '#' → logprob: -13.504083633422852
    4. ' ' → logprob: -13.629083633422852
    5. '   ' → logprob: -14.004083633422852
    6. '/' → logprob: -14.629083633422852
    7. '
' → logprob: -15.254083633422852
    8. '2' → logprob: -15.254083633422852
    9. '```' → logprob: -15.504083633422852
    10. '1' → logprob: -15.879083633422852

Token 568: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00029923528200015426
    2. ' ' → logprob: -8.125299453735352
    3. '   ' → logprob: -12.875299453735352
    4. '```' → logprob: -15.625299453735352
    5. '  ' → logprob: -16.50029945373535
    6. '=' → logprob: -16.62529945373535
    7. '1' → logprob: -16.75029945373535
    8. '
' → logprob: -16.87529945373535
    9. '    ' → logprob: -17.00029945373535
    10. '     ' → logprob: -17.18779945373535

Token 569: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.32392441527918e-05
    2. ' ' → logprob: -9.875053405761719
    3. '   ' → logprob: -14.000053405761719
    4. '
' → logprob: -14.625053405761719
    5. '  ' → logprob: -16.12505340576172
    6. '1' → logprob: -16.25005340576172
    7. '```' → logprob: -16.87505340576172
    8. '    ' → logprob: -18.06255340576172
    9. '     ' → logprob: -18.12505340576172
    10. '-' → logprob: -18.37505340576172

Token 570: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.6631824970245361
    2. '-' → logprob: -0.7881824970245361
    3. ']' → logprob: -3.538182497024536
    4. ' ]' → logprob: -7.038182258605957
    5. ']
' → logprob: -9.413182258605957
    6. '   ' → logprob: -10.038182258605957
    7. ' -
' → logprob: -11.538182258605957
    8. ' ' → logprob: -11.913182258605957
    9. ' ]
' → logprob: -12.163182258605957
    10. '```' → logprob: -12.538182258605957

Token 571: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3306015716807451e-05
    2. ' ' → logprob: -11.25001335144043
    3. '   ' → logprob: -16.12501335144043
    4. ']' → logprob: -16.50001335144043
    5. '```' → logprob: -17.12501335144043
    6. '
' → logprob: -17.62501335144043
    7. '    ' → logprob: -18.25001335144043
    8. '  ' → logprob: -18.62501335144043
    9. '2' → logprob: -19.18751335144043
    10. ')' → logprob: -19.62501335144043

Token 572: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.696889623621246e-06
    2. ' ' → logprob: -12.87500286102295
    3. '   ' → logprob: -17.250001907348633
    4. '2' → logprob: -17.875001907348633
    5. '```' → logprob: -18.125001907348633
    6. '
' → logprob: -18.250001907348633
    7. '    ' → logprob: -18.687501907348633
    8. '  ' → logprob: -18.875001907348633
    9. '<|end|>' → logprob: -19.062501907348633
    10. '۱' → logprob: -19.312501907348633

Token 573: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.12062257528305054
    2. ']
' → logprob: -2.2456226348876953
    3. ' ]' → logprob: -5.120622634887695
    4. ' ]
' → logprob: -6.870622634887695
    5. '       ' → logprob: -7.370622634887695
    6. '   ' → logprob: -9.495622634887695
    7. ']
' → logprob: -10.745622634887695
    8. ')' → logprob: -11.995622634887695
    9. ']

' → logprob: -11.995622634887695
    10. '<|end|>' → logprob: -12.120622634887695

Token 574: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5839918255805969
    2. '
' → logprob: -0.8339918255805969
    3. ',' → logprob: -6.208992004394531
    4. ' mid' → logprob: -6.208992004394531
    5. ',
' → logprob: -6.958992004394531
    6. '        
' → logprob: -6.958992004394531
    7. '<|end|>' → logprob: -7.833992004394531
    8. '   ' → logprob: -7.958992004394531
    9. '
' → logprob: -8.583992004394531
    10. '' → logprob: -8.833992004394531

Token 575: ' mid' (ID: 6959)
  Prédit: ' mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mid' → logprob: -0.003623831318691373
    2. 'mid' (adapté à ' mid') → logprob: -5.628623962402344
    3. '   ' → logprob: -11.253623962402344
    4. '       ' → logprob: -12.128623962402344
    5. ' ' → logprob: -13.878623962402344
    6. '    ' → logprob: -13.878623962402344
    7. '
' → logprob: -14.503623962402344
    8. ' midpoint' → logprob: -14.503623962402344
    9. ' ' → logprob: -14.753623962402344
    10. '(mid' → logprob: -14.753623962402344

Token 576: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -0.1008148118853569
    2. '_left' → logprob: -2.3508148193359375
    3. '_node' → logprob: -7.7258148193359375
    4. '_center' → logprob: -10.225814819335938
    5. '```' → logprob: -10.350814819335938
    6. 'right' → logprob: -10.975814819335938
    7. ' _' → logprob: -11.225814819335938
    8. '_middle' → logprob: -11.600814819335938
    9. '_token' → logprob: -11.850814819335938
    10. '_mid' → logprob: -11.850814819335938

Token 577: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.0017695431597530842
    2. ']_' → logprob: -7.501769542694092
    3. ']' → logprob: -7.626769542694092
    4. ' _' → logprob: -7.876769542694092
    5. ' =' → logprob: -8.50177001953125
    6. '```' → logprob: -10.50177001953125
    7. '_token' → logprob: -10.62677001953125
    8. '_' → logprob: -11.12677001953125
    9. ' ' → logprob: -11.50177001953125
    10. '_Node' → logprob: -11.50177001953125

Token 578: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03804344683885574
    2. '=' → logprob: -3.28804349899292
    3. ',' → logprob: -13.413043022155762
    4. ' ' → logprob: -14.913043022155762
    5. ' =
' → logprob: -16.288043975830078
    6. ')' → logprob: -17.288043975830078
    7. ' ,' → logprob: -17.538043975830078
    8. ' =[' → logprob: -18.538043975830078
    9. ']' → logprob: -18.788043975830078
    10. ' ' → logprob: -19.163043975830078

Token 579: ' path' (ID: 3104)
  Prédit: ' path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' path' → logprob: -0.004621661268174648
    2. 'path' → logprob: -5.379621505737305
    3. '[path' → logprob: -15.129621505737305
    4. '"path' → logprob: -15.129621505737305
    5. '(path' → logprob: -15.254621505737305
    6. '	path' → logprob: -15.379621505737305
    7. ' ' → logprob: -16.004621505737305
    8. ',path' → logprob: -16.504621505737305
    9. '.path' → logprob: -16.754621505737305
    10. ' ' → logprob: -16.879621505737305

Token 580: '_between' (ID: 124874)
  Prédit: '_between'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_between' → logprob: -0.04885304719209671
    2. '_length' → logprob: -3.0488531589508057
    3. 'between' → logprob: -8.673852920532227
    4. 'length' → logprob: -9.423852920532227
    5. 'Between' → logprob: -12.298852920532227
    6. '   ' → logprob: -13.298852920532227
    7. '```' → logprob: -13.423852920532227
    8. '_lengths' → logprob: -13.798852920532227
    9. '_path' → logprob: -13.923852920532227
    10. '[' → logprob: -14.423852920532227

Token 581: '_le' (ID: 27121)
  Prédit: '_le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_le' → logprob: -0.019809138029813766
    2. 'le' → logprob: -4.519809246063232
    3. '_between' → logprob: -4.769809246063232
    4. 'long' → logprob: -9.269808769226074
    5. 'between' → logprob: -9.644808769226074
    6. 'path' → logprob: -10.394808769226074
    7. 'the' → logprob: -11.394808769226074
    8. 'tree' → logprob: -11.769808769226074
    9. '[' → logprob: -12.269808769226074
    10. 'leaf' → logprob: -12.394808769226074

Token 582: 'aves' (ID: 6808)
  Prédit: 'aves'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aves' → logprob: -0.00022570860164705664
    2. 'le' → logprob: -9.500226020812988
    3. 'af' → logprob: -9.500226020812988
    4. 'ath' → logprob: -10.375226020812988
    5. 'aths' → logprob: -11.125226020812988
    6. 'e' → logprob: -12.500226020812988
    7. 'ves' → logprob: -12.625226020812988
    8. 'eches' → logprob: -13.250226020812988
    9. 'between' → logprob: -13.625226020812988
    10. '_path' → logprob: -13.625226020812988

Token 583: '[path' (ID: 145469)
  Prédit: '[path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[path' → logprob: -7.469590491382405e-05
    2. '[' → logprob: -10.12507438659668
    3. '[
' → logprob: -10.87507438659668
    4. '[(' → logprob: -11.37507438659668
    5. ' [' → logprob: -13.00007438659668
    6. '   ' → logprob: -14.37507438659668
    7. '[len' → logprob: -14.87507438659668
    8. '(path' → logprob: -14.87507438659668
    9. '
' → logprob: -15.12507438659668
    10. 'path' → logprob: -16.50007438659668

Token 584: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.005292696412652731
    2. 'length' → logprob: -5.255292892456055
    3. 'Length' → logprob: -10.255292892456055
    4. '_LENGTH' → logprob: -12.255292892456055
    5. '```' → logprob: -12.505292892456055
    6. 'ength' → logprob: -12.630292892456055
    7. '   ' → logprob: -12.880292892456055
    8. ' length' → logprob: -13.130292892456055
    9. ')' → logprob: -14.005292892456055
    10. '_lengths' → logprob: -14.130292892456055

Token 585: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.062010589987039566
    2. ' //' → logprob: -2.8120105266571045
    3. '#' → logprob: -10.812010765075684
    4. ' ' → logprob: -11.812010765075684
    5. '   ' → logprob: -12.187010765075684
    6. '[' → logprob: -12.312010765075684
    7. '```' → logprob: -13.187010765075684
    8. '2' → logprob: -13.562010765075684
    9. '...' → logprob: -14.937010765075684
    10. '://' → logprob: -15.312010765075684

Token 586: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0006498866132460535
    2. ' ' → logprob: -7.750649929046631
    3. '1' → logprob: -8.500649452209473
    4. '   ' → logprob: -11.875649452209473
    5. '0' → logprob: -13.125649452209473
    6. '```' → logprob: -13.375649452209473
    7. '
' → logprob: -14.125649452209473
    8. '  ' → logprob: -14.375649452209473
    9. '       ' → logprob: -15.063149452209473
    10. 'def' → logprob: -15.250649452209473

Token 587: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00021271906734909862
    2. ' ' → logprob: -8.625212669372559
    3. '1' → logprob: -10.500212669372559
    4. '   ' → logprob: -12.750212669372559
    5. '```' → logprob: -13.875212669372559
    6. '  ' → logprob: -15.000212669372559
    7. '0' → logprob: -15.125212669372559
    8. '
' → logprob: -15.937712669372559
    9. ')' → logprob: -16.687713623046875
    10. '       ' → logprob: -16.750213623046875

Token 588: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01736050844192505
    2. ' ]' → logprob: -4.642360687255859
    3. ']
' → logprob: -5.142360687255859
    4. '+' → logprob: -7.142360687255859
    5. '       ' → logprob: -7.892360687255859
    6. ' +' → logprob: -8.14236068725586
    7. ' ]
' → logprob: -9.01736068725586
    8. '   ' → logprob: -9.01736068725586
    9. ')' → logprob: -12.14236068725586
    10. ']
' → logprob: -12.14236068725586

Token 589: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06686978042125702
    2. '
' → logprob: -3.1918697357177734
    3. '   ' → logprob: -4.816869735717773
    4. '        
' → logprob: -4.816869735717773
    5. 'else' → logprob: -5.316869735717773
    6. ',' → logprob: -7.066869735717773
    7. ' else' → logprob: -7.191869735717773
    8. '    
' → logprob: -8.191869735717773
    9. ',
' → logprob: -8.316869735717773
    10. '  
' → logprob: -9.816869735717773

Token 590: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' (adapté à ' left') → logprob: -0.8409804105758667
    2. 'max' → logprob: -0.9659804105758667
    3. ' left' → logprob: -2.4659805297851562
    4. ' max' → logprob: -3.0909805297851562
    5. '   ' → logprob: -3.4659805297851562
    6. 'branch' → logprob: -4.215980529785156
    7. 'children' → logprob: -5.340980529785156
    8. '       ' → logprob: -6.965980529785156
    9. 'first' → logprob: -6.965980529785156
    10. 'mid' → logprob: -7.215980529785156

Token 591: '_branch' (ID: 71162)
  Prédit: '_branch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_branch' → logprob: -0.3893015682697296
    2. '_max' → logprob: -1.5143015384674072
    3. '_children' → logprob: -2.3893015384674072
    4. 'max' → logprob: -5.139301776885986
    5. 'branch' → logprob: -6.014301776885986
    6. '_child' → logprob: -6.639301776885986
    7. '_br' → logprob: -7.889301776885986
    8. '_sub' → logprob: -8.389301300048828
    9. 'children' → logprob: -8.764301300048828
    10. '_tree' → logprob: -10.139301300048828

Token 592: 'ing' (ID: 289)
  Prédit: 'ing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -0.44457510113716125
    2. ' =' → logprob: -1.3195750713348389
    3. '_max' → logprob: -2.694575071334839
    4. '=' → logprob: -4.819575309753418
    5. '   ' → logprob: -5.194575309753418
    6. '_branch' → logprob: -5.569575309753418
    7. '_children' → logprob: -5.569575309753418
    8. 'max' → logprob: -7.444575309753418
    9. '=max' → logprob: -7.819575309753418
    10. '_br' → logprob: -7.819575309753418

Token 593: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07182896882295609
    2. '=' → logprob: -2.696829080581665
    3. '=max' → logprob: -7.571828842163086
    4. '_max' → logprob: -7.821828842163086
    5. ' ' → logprob: -8.196828842163086
    6. '_levels' → logprob: -8.446828842163086
    7. '   ' → logprob: -8.946828842163086
    8. 's' → logprob: -8.946828842163086
    9. '_values' → logprob: -9.946828842163086
    10. ',' → logprob: -10.196828842163086

Token 594: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.07054205238819122
    2. ' compute' → logprob: -2.695542097091675
    3. '   ' → logprob: -7.445541858673096
    4. '       ' → logprob: -11.070542335510254
    5. 'max' → logprob: -12.945542335510254
    6. '           ' → logprob: -14.070542335510254
    7. ' max' → logprob: -14.195542335510254
    8. '    ' → logprob: -14.570542335510254
    9. '.compute' → logprob: -14.570542335510254
    10. '[' → logprob: -15.445542335510254

Token 595: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -1.4855663721391466e-05
    2. 'max' → logprob: -11.125015258789062
    3. '(max' → logprob: -17.250015258789062
    4. '```' → logprob: -17.375015258789062
    5. '_min' → logprob: -17.625015258789062
    6. ' _' → logprob: -18.000015258789062
    7. ' max' → logprob: -18.875015258789062
    8. ')_' → logprob: -19.250015258789062
    9. '(_' → logprob: -19.625015258789062
    10. '`' → logprob: -19.625015258789062

Token 596: '_branch' (ID: 71162)
  Prédit: '_branch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_branch' → logprob: -3.79811754100956e-05
    2. '_children' → logprob: -11.000038146972656
    3. '_max' → logprob: -11.375038146972656
    4. 'branch' → logprob: -12.500038146972656
    5. 'max' → logprob: -13.000038146972656
    6. '_child' → logprob: -14.000038146972656
    7. '```' → logprob: -14.500038146972656
    8. '_br' → logprob: -14.625038146972656
    9. '\' → logprob: -14.625038146972656
    10. '(branch' → logprob: -15.000038146972656

Token 597: 'ing' (ID: 289)
  Prédit: 'ing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -0.5159041881561279
    2. 'branch' → logprob: -1.140904188156128
    3. '_branch' → logprob: -2.515904188156128
    4. ' branching' → logprob: -6.765904426574707
    5. 'ring' → logprob: -8.140904426574707
    6. '   ' → logprob: -8.265904426574707
    7. 'ching' → logprob: -8.765904426574707
    8. '(branch' → logprob: -9.015904426574707
    9. 'anch' → logprob: -9.265904426574707
    10. 'arching' → logprob: -9.640904426574707

Token 598: '(tree' (ID: 44909)
  Prédit: '(tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tree' → logprob: -0.00012570773833431304
    2. '(
' → logprob: -9.375125885009766
    3. '(' → logprob: -10.125125885009766
    4. 'tree' → logprob: -15.125125885009766
    5. ' (' → logprob: -15.500125885009766
    6. '```' → logprob: -16.750125885009766
    7. '(
' → logprob: -17.000125885009766
    8. '	tree' → logprob: -17.125125885009766
    9. '(Tree' → logprob: -17.375125885009766
    10. '(table' → logprob: -17.375125885009766

Token 599: '_ad' (ID: 23782)
  Prédit: '_ad'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ad' → logprob: -0.00010723850573413074
    2. '_adj' → logprob: -9.500106811523438
    3. 'ad' → logprob: -11.125106811523438
    4. '(tree' → logprob: -11.500106811523438
    5. 'adj' → logprob: -12.250106811523438
    6. 'tree' → logprob: -13.875106811523438
    7. '[' → logprob: -13.875106811523438
    8. '   ' → logprob: -15.500106811523438
    9. '_ac' → logprob: -16.125106811523438
    10. '=' → logprob: -16.375106811523438

Token 600: 'jac' (ID: 77250)
  Prédit: 'jac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jac' → logprob: -0.0489632785320282
    2. 'acency' → logprob: -3.0489633083343506
    3. 'j' → logprob: -8.79896354675293
    4. 'ac' → logprob: -8.92396354675293
    5. 'adj' → logprob: -10.92396354675293
    6. '```' → logprob: -11.04896354675293
    7. '_list' → logprob: -11.29896354675293
    8. 'aj' → logprob: -11.54896354675293
    9. '[' → logprob: -11.67396354675293
    10. 'list' → logprob: -12.17396354675293

Token 601: 'ency' (ID: 2799)
  Prédit: '_lists'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lists' → logprob: -0.167877659201622
    2. 'lists' → logprob: -2.792877674102783
    3. 'ists' → logprob: -2.917877674102783
    4. 'acency' → logprob: -3.542877674102783
    5. 'ency' → logprob: -4.917877674102783
    6. 'ist' → logprob: -7.042877674102783
    7. '_list' → logprob: -7.667877674102783
    8. 'ancy' → logprob: -7.917877674102783
    9. 'sts' → logprob: -8.167877197265625
    10. ' lists' → logprob: -8.542877197265625

Token 602: '_lists' (ID: 93609)
  Prédit: '_lists'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lists' → logprob: -1.0445127372804563e-05
    2. 'tree' → logprob: -13.12501049041748
    3. 'left' → logprob: -13.50001049041748
    4. 'lists' → logprob: -13.50001049041748
    5. '   ' → logprob: -13.87501049041748
    6. '[' → logprob: -13.87501049041748
    7. '       ' → logprob: -14.25001049041748
    8. 'Lists' → logprob: -14.25001049041748
    9. '_list' → logprob: -14.37501049041748
    10. '_left' → logprob: -14.87501049041748

Token 603: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000919200771022588
    2. '(mid' → logprob: -7.125919342041016
    3. '       ' → logprob: -9.625919342041016
    4. ',
' → logprob: -11.125919342041016
    5. ' ,' → logprob: -11.625919342041016
    6. '   ' → logprob: -11.875919342041016
    7. '[mid' → logprob: -12.250919342041016
    8. 'mid' → logprob: -13.000919342041016
    9. '(tree' → logprob: -13.250919342041016
    10. '(
' → logprob: -13.625919342041016

Token 604: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.12725701928138733
    2. ' mid' → logprob: -2.1272571086883545
    3. '       ' → logprob: -8.502257347106934
    4. '        ' → logprob: -10.252257347106934
    5. '    ' → logprob: -10.377257347106934
    6. '   ' → logprob: -10.627257347106934
    7. '           ' → logprob: -10.752257347106934
    8. '            ' → logprob: -12.502257347106934
    9. '(mid' → logprob: -12.877257347106934
    10. ' ' → logprob: -13.627257347106934

Token 605: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.01417032815515995
    2. '_right' → logprob: -4.264170169830322
    3. 'left' → logprob: -12.01417064666748
    4. '```' → logprob: -15.38917064666748
    5. '_LEFT' → logprob: -16.514169692993164
    6. 'Left' → logprob: -16.514169692993164
    7. '_mid' → logprob: -16.764169692993164
    8. 'right' → logprob: -17.264169692993164
    9. '_' → logprob: -17.264169692993164
    10. '   ' → logprob: -17.389169692993164

Token 606: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -2.093505099765025e-05
    2. 'node' → logprob: -12.500020980834961
    3. ',' → logprob: -12.625020980834961
    4. ')' → logprob: -12.750020980834961
    5. '```' → logprob: -13.000020980834961
    6. '   ' → logprob: -13.750020980834961
    7. ')_' → logprob: -13.750020980834961
    8. '_right' → logprob: -13.875020980834961
    9. '[node' → logprob: -14.500020980834961
    10. '_,' → logprob: -14.625020980834961

Token 607: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010282796574756503
    2. ' ,' → logprob: -9.375102996826172
    3. '       ' → logprob: -11.250102996826172
    4. '   ' → logprob: -13.250102996826172
    5. ',
' → logprob: -13.625102996826172
    6. '           ' → logprob: -14.375102996826172
    7. ',m' → logprob: -14.875102996826172
    8. '[mid' → logprob: -15.500102996826172
    9. 'mid' → logprob: -16.000102996826172
    10. '_,' → logprob: -16.125102996826172

Token 608: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -1.700132997939363e-05
    2. ' mid' → logprob: -11.250017166137695
    3. '   ' → logprob: -12.750017166137695
    4. 'path' → logprob: -14.500017166137695
    5. '
' → logprob: -14.875017166137695
    6. '[mid' → logprob: -17.125017166137695
    7. '(mid' → logprob: -17.250017166137695
    8. '    ' → logprob: -17.500017166137695
    9. '  ' → logprob: -18.125017166137695
    10. ' ' → logprob: -18.500017166137695

Token 609: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -8.220573363360018e-05
    2. 'right' → logprob: -9.500082015991211
    3. '_left' → logprob: -12.125082015991211
    4. '
' → logprob: -14.500082015991211
    5. 'Right' → logprob: -15.125082015991211
    6. '_root' → logprob: -15.250082015991211
    7. '```' → logprob: -15.625082015991211
    8. '_RIGHT' → logprob: -15.875082015991211
    9. '   ' → logprob: -16.37508201599121
    10. 'def' → logprob: -16.37508201599121

Token 610: '_node' (ID: 11390)
  Prédit: '_right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -0.00044163595885038376
    2. '_left' → logprob: -8.375441551208496
    3. 'right' → logprob: -9.125441551208496
    4. '_path' → logprob: -10.000441551208496
    5. '_node' → logprob: -10.500441551208496
    6. '_leaf' → logprob: -12.125441551208496
    7. 'Right' → logprob: -12.375441551208496
    8. 'node' → logprob: -13.000441551208496
    9. '-' → logprob: -13.375441551208496
    10. '_child' → logprob: -13.375441551208496

Token 611: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.221884101862088e-05
    2. ' ,' → logprob: -10.000092506408691
    3. '       ' → logprob: -11.125092506408691
    4. '   ' → logprob: -11.250092506408691
    5. ')' → logprob: -12.000092506408691
    6. '```' → logprob: -12.875092506408691
    7. ',
' → logprob: -13.000092506408691
    8. '),' → logprob: -13.500092506408691
    9. '           ' → logprob: -13.625092506408691
    10. ',length' → logprob: -14.250092506408691

Token 612: ' half' (ID: 6375)
  Prédit: 'half'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'half' → logprob: -0.0007077865884639323
    2. ' half' → logprob: -7.375707626342773
    3. '   ' → logprob: -10.125707626342773
    4. '           ' → logprob: -11.125707626342773
    5. '       ' → logprob: -11.375707626342773
    6. 'hal' → logprob: -12.500707626342773
    7. '
' → logprob: -12.625707626342773
    8. '               ' → logprob: -13.375707626342773
    9. '     ' → logprob: -14.000707626342773
    10. '          ' → logprob: -14.125707626342773

Token 613: '_path' (ID: 5558)
  Prédit: '_path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -4.4849443838757e-06
    2. '_length' → logprob: -12.500004768371582
    3. ')' → logprob: -15.250004768371582
    4. '_branch' → logprob: -16.000003814697266
    5. '_depth' → logprob: -16.000003814697266
    6. '```' → logprob: -16.375003814697266
    7. '   ' → logprob: -16.625003814697266
    8. 'path' → logprob: -17.500003814697266
    9. ')
' → logprob: -17.750003814697266
    10. '_' → logprob: -18.125003814697266

Token 614: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -2.7491250875755213e-05
    2. 'length' → logprob: -10.625027656555176
    3. ')' → logprob: -13.750027656555176
    4. '   ' → logprob: -13.750027656555176
    5. 'ength' → logprob: -15.375027656555176
    6. '```' → logprob: -15.875027656555176
    7. '       ' → logprob: -16.12502670288086
    8. '+' → logprob: -16.37502670288086
    9. '_size' → logprob: -16.62502670288086
    10. 's' → logprob: -16.75002670288086

Token 615: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.017776206135749817
    2. ')' → logprob: -4.142776012420654
    3. '       ' → logprob: -6.392776012420654
    4. ')
' → logprob: -10.142776489257812
    5. '   ' → logprob: -10.642776489257812
    6. ' )
' → logprob: -13.392776489257812
    7. ',' → logprob: -14.142776489257812
    8. ')

' → logprob: -15.017776489257812
    9. ')`
' → logprob: -15.142776489257812
    10. ',)
' → logprob: -15.642776489257812

Token 616: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003448792558629066
    2. ',' → logprob: -9.125345230102539
    3. '<|end|>' → logprob: -9.875345230102539
    4. ' right' → logprob: -10.000345230102539
    5. '        
' → logprob: -10.375345230102539
    6. '
' → logprob: -10.375345230102539
    7. '   ' → logprob: -10.500345230102539
    8. ',right' → logprob: -11.625345230102539
    9. 'right' → logprob: -11.750345230102539
    10. '	right' → logprob: -12.125345230102539

Token 617: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' (adapté à ' right') → logprob: -0.18375736474990845
    2. ' right' → logprob: -1.8087573051452637
    3. '       ' → logprob: -5.558757305145264
    4. '	right' → logprob: -9.433757781982422
    5. '   ' → logprob: -9.808757781982422
    6. '.right' → logprob: -12.433757781982422
    7. '_right' → logprob: -12.433757781982422
    8. 'Right' → logprob: -12.683757781982422
    9. ',right' → logprob: -13.683757781982422
    10. 'rightness' → logprob: -14.683757781982422

Token 618: '_branch' (ID: 71162)
  Prédit: '_branch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_branch' → logprob: -1.6240566083070007e-06
    2. '_right' → logprob: -15.125001907348633
    3. 'branch' → logprob: -15.250001907348633
    4. '_' → logprob: -15.500001907348633
    5. '_block' → logprob: -15.500001907348633
    6. '_br' → logprob: -16.000001907348633
    7. ' branching' → logprob: -16.375001907348633
    8. '```' → logprob: -16.625001907348633
    9. '_parent' → logprob: -16.750001907348633
    10. ' _' → logprob: -17.125001907348633

Token 619: 'ing' (ID: 289)
  Prédit: 'ing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -2.8087270038668066e-05
    2. '_branch' → logprob: -10.625027656555176
    3. 'branch' → logprob: -12.875027656555176
    4. ' branching' → logprob: -14.875027656555176
    5. '   ' → logprob: -15.625027656555176
    6. 'ed' → logprob: -16.000028610229492
    7. 'inging' → logprob: -16.500028610229492
    8. '=' → logprob: -16.625028610229492
    9. '_right' → logprob: -16.750028610229492
    10. ' =' → logprob: -16.875028610229492

Token 620: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1269284337759018
    2. '=' → logprob: -2.1269283294677734
    3. ',' → logprob: -15.626928329467773
    4. ' ' → logprob: -15.751928329467773
    5. '   ' → logprob: -16.876928329467773
    6. ')' → logprob: -17.376928329467773
    7. '_' → logprob: -17.626928329467773
    8. '[' → logprob: -18.751928329467773
    9. '  ' → logprob: -19.126928329467773
    10. ' =
' → logprob: -19.126928329467773

Token 621: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.3868725895881653
    2. ' compute' → logprob: -1.1368725299835205
    3. '   ' → logprob: -13.636872291564941
    4. '       ' → logprob: -16.386873245239258
    5. '.compute' → logprob: -16.386873245239258
    6. '    ' → logprob: -16.511873245239258
    7. ' ' → logprob: -16.886873245239258
    8. 'computer' → logprob: -17.386873245239258
    9. '  ' → logprob: -17.886873245239258
    10. '_compute' → logprob: -18.386873245239258

Token 622: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.00020854694594163448
    2. 'max' → logprob: -8.625208854675293
    3. '(tree' → logprob: -11.000208854675293
    4. 'Max' → logprob: -12.125208854675293
    5. 'tree' → logprob: -12.875208854675293
    6. 'compute' → logprob: -13.000208854675293
    7. 'branch' → logprob: -13.750208854675293
    8. '_branch' → logprob: -16.250207901000977
    9. '(branch' → logprob: -16.375207901000977
    10. '_compute' → logprob: -16.500207901000977

Token 623: '_branch' (ID: 71162)
  Prédit: '_branch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_branch' → logprob: -0.0059732310473918915
    2. 'branch' → logprob: -5.1309733390808105
    3. '(tree' → logprob: -10.380972862243652
    4. ' branching' → logprob: -12.255972862243652
    5. '(branch' → logprob: -12.380972862243652
    6. 'Branch' → logprob: -13.130972862243652
    7. '_br' → logprob: -14.380972862243652
    8. 'tree' → logprob: -14.755972862243652
    9. '_right' → logprob: -15.505972862243652
    10. '\' → logprob: -15.755972862243652

Token 624: 'ing' (ID: 289)
  Prédit: 'ing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -0.0066227694042027
    2. '_branch' → logprob: -5.131622791290283
    3. 'branch' → logprob: -7.881622791290283
    4. 'ching' → logprob: -8.631622314453125
    5. 'anch' → logprob: -10.006622314453125
    6. '(tree' → logprob: -11.131622314453125
    7. ' branching' → logprob: -11.131622314453125
    8. 'ch' → logprob: -11.381622314453125
    9. '_left' → logprob: -11.506622314453125
    10. '_right' → logprob: -12.006622314453125

Token 625: '(tree' (ID: 44909)
  Prédit: '(tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tree' → logprob: -0.0007762773893773556
    2. '(' → logprob: -7.250776290893555
    3. '(
' → logprob: -9.625776290893555
    4. ' (' → logprob: -16.750776290893555
    5. '(Tree' → logprob: -16.750776290893555
    6. '```' → logprob: -16.750776290893555
    7. '(

' → logprob: -17.000776290893555
    8. '	tree' → logprob: -17.250776290893555
    9. '(
' → logprob: -17.375776290893555
    10. '(table' → logprob: -17.875776290893555

Token 626: '_ad' (ID: 23782)
  Prédit: '_ad'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ad' → logprob: -0.018193604424595833
    2. '(tree' → logprob: -4.01819372177124
    3. '_adj' → logprob: -11.018193244934082
    4. '[' → logprob: -12.018193244934082
    5. '_lists' → logprob: -12.268193244934082
    6. ',' → logprob: -12.893193244934082
    7. 'ad' → logprob: -12.893193244934082
    8. '   ' → logprob: -13.018193244934082
    9. 'adj' → logprob: -13.393193244934082
    10. '(
' → logprob: -13.768193244934082

Token 627: 'jac' (ID: 77250)
  Prédit: 'jac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jac' → logprob: -0.16415923833847046
    2. 'adj' → logprob: -2.5391592979431152
    3. '_ad' → logprob: -3.5391592979431152
    4. '_adj' → logprob: -4.039159297943115
    5. 'j' → logprob: -4.414159297943115
    6. 'acency' → logprob: -5.664159297943115
    7. '_list' → logprob: -5.914159297943115
    8. '_left' → logprob: -6.414159297943115
    9. '_right' → logprob: -7.164159297943115
    10. 'list' → logprob: -7.164159297943115

Token 628: 'ency' (ID: 2799)
  Prédit: '_lists'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_lists' → logprob: -0.005065940786153078
    2. 'acency' → logprob: -5.50506591796875
    3. 'lists' → logprob: -7.88006591796875
    4. '_ad' → logprob: -8.00506591796875
    5. 'ists' → logprob: -9.50506591796875
    6. '_adj' → logprob: -9.50506591796875
    7. 'ist' → logprob: -10.25506591796875
    8. 'l' → logprob: -11.00506591796875
    9. '_l' → logprob: -11.63006591796875
    10. 'al' → logprob: -11.63006591796875

Token 629: '_lists' (ID: 93609)
  Prédit: '_lists'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lists' → logprob: -6.704273118884885e-07
    2. 'lists' → logprob: -15.375000953674316
    3. 'Lists' → logprob: -16.125
    4. '_links' → logprob: -16.375
    5. '[' → logprob: -17.25
    6. '_list' → logprob: -17.375
    7. 'tree' → logprob: -18.0
    8. 's' → logprob: -18.25
    9. '_' → logprob: -18.75
    10. '_sets' → logprob: -19.0

Token 630: ',' (ID: 11)
  Prédit: '(tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tree' → logprob: -0.00027933192905038595
    2. '(' → logprob: -9.250279426574707
    3. ',' → logprob: -9.250279426574707
    4. '(
' → logprob: -9.500279426574707
    5. ' (' → logprob: -12.250279426574707
    6. '       ' → logprob: -12.375279426574707
    7. '   ' → logprob: -13.125279426574707
    8. '```' → logprob: -15.125279426574707
    9. '(Tree' → logprob: -15.375279426574707
    10. '(table' → logprob: -15.875279426574707

Token 631: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.006735026836395264
    2. ' mid' → logprob: -5.006734848022461
    3. 'tree' → logprob: -11.631734848022461
    4. '   ' → logprob: -11.881734848022461
    5. '    ' → logprob: -13.381734848022461
    6. 'path' → logprob: -14.131734848022461
    7. '       ' → logprob: -14.881734848022461
    8. ' ' → logprob: -14.881734848022461
    9. '  ' → logprob: -15.506734848022461
    10. '(mid' → logprob: -15.881734848022461

Token 632: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -0.00016110755677800626
    2. '_left' → logprob: -8.750161170959473
    3. 'right' → logprob: -13.750161170959473
    4. 'Right' → logprob: -14.250161170959473
    5. '_node' → logprob: -14.500161170959473
    6. '_root' → logprob: -16.000160217285156
    7. '_length' → logprob: -16.125160217285156
    8. '_RIGHT' → logprob: -17.125160217285156
    9. '_Right' → logprob: -18.000160217285156
    10. '[right' → logprob: -18.875160217285156

Token 633: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -1.318681188422488e-05
    2. '```' → logprob: -12.75001335144043
    3. ',' → logprob: -13.00001335144043
    4. ')' → logprob: -13.00001335144043
    5. '[' → logprob: -13.25001335144043
    6. ')_' → logprob: -13.50001335144043
    7. '_left' → logprob: -14.87501335144043
    8. '_NODE' → logprob: -15.37501335144043
    9. '_right' → logprob: -15.37501335144043
    10. ',_' → logprob: -15.50001335144043

Token 634: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.704065213445574e-05
    2. ' ,' → logprob: -10.000046730041504
    3. '   ' → logprob: -14.875046730041504
    4. ',path' → logprob: -14.875046730041504
    5. ',
' → logprob: -15.125046730041504
    6. '(tree' → logprob: -15.375046730041504
    7. '       ' → logprob: -16.25004768371582
    8. ',m' → logprob: -17.00004768371582
    9. ',None' → logprob: -17.12504768371582
    10. '           ' → logprob: -17.37504768371582

Token 635: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.0019295861711725593
    2. ' mid' → logprob: -6.251929759979248
    3. '   ' → logprob: -14.50192928314209
    4. '(mid' → logprob: -15.50192928314209
    5. '       ' → logprob: -16.376930236816406
    6. '[mid' → logprob: -16.626930236816406
    7. '    ' → logprob: -17.251930236816406
    8. ' ' → logprob: -17.376930236816406
    9. '           ' → logprob: -18.001930236816406
    10. '     ' → logprob: -18.001930236816406

Token 636: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -2.2127087504486553e-05
    2. '_right' → logprob: -10.875021934509277
    3. 'left' → logprob: -13.625021934509277
    4. '_path' → logprob: -14.750021934509277
    5. '_' → logprob: -14.875021934509277
    6. '_LEFT' → logprob: -14.875021934509277
    7. 'Left' → logprob: -15.500021934509277
    8. '_length' → logprob: -15.625021934509277
    9. ' ' → logprob: -16.375022888183594
    10. '_Left' → logprob: -16.500022888183594

Token 637: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -2.3199920178740285e-05
    2. '_left' → logprob: -11.375022888183594
    3. '_path' → logprob: -12.500022888183594
    4. '_right' → logprob: -13.000022888183594
    5. 'node' → logprob: -13.375022888183594
    6. '_branch' → logprob: -13.375022888183594
    7. ')' → logprob: -14.000022888183594
    8. '-node' → logprob: -14.875022888183594
    9. '_NODE' → logprob: -15.125022888183594
    10. '_leaf' → logprob: -15.125022888183594

Token 638: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.576873758807778e-05
    2. ' ,' → logprob: -9.500075340270996
    3. '   ' → logprob: -14.500075340270996
    4. '       ' → logprob: -15.625075340270996
    5. ',
' → logprob: -16.625076293945312
    6. '```' → logprob: -17.375076293945312
    7. ')' → logprob: -17.625076293945312
    8. '_,' → logprob: -17.750076293945312
    9. '[' → logprob: -18.500076293945312
    10. '‌,' → logprob: -18.625076293945312

Token 639: ' half' (ID: 6375)
  Prédit: ' half'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' half' → logprob: -0.3869602382183075
    2. 'half' → logprob: -1.1369602680206299
    3. ' right' → logprob: -10.01196002960205
    4. 'right' → logprob: -10.38696002960205
    5. 'left' → logprob: -12.51196002960205
    6. ' left' → logprob: -12.76196002960205
    7. ')' → logprob: -13.76196002960205
    8. '```' → logprob: -13.88696002960205
    9. '_half' → logprob: -13.88696002960205
    10. '   ' → logprob: -14.13696002960205

Token 640: '_path' (ID: 5558)
  Prédit: '_path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -9.555654105497524e-05
    2. '_length' → logprob: -9.75009536743164
    3. '_left' → logprob: -10.25009536743164
    4. '_right' → logprob: -14.37509536743164
    5. '_branch' → logprob: -14.50009536743164
    6. 'length' → logprob: -15.00009536743164
    7. '```' → logprob: -15.50009536743164
    8. 'left' → logprob: -15.75009536743164
    9. ')' → logprob: -17.25009536743164
    10. 'path' → logprob: -17.50009536743164

Token 641: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -1.4855663721391466e-05
    2. 'length' → logprob: -11.250015258789062
    3. '```' → logprob: -13.750015258789062
    4. '   ' → logprob: -14.750015258789062
    5. '``' → logprob: -16.250015258789062
    6. '+' → logprob: -16.500015258789062
    7. ')' → logprob: -16.750015258789062
    8. '-' → logprob: -17.750015258789062
    9. '       ' → logprob: -17.875015258789062
    10. '           ' → logprob: -18.000015258789062

Token 642: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0605175755918026
    2. '<|end|>' → logprob: -3.3105175495147705
    3. '
' → logprob: -4.43551778793335
    4. '       ' → logprob: -5.31051778793335
    5. ')
' → logprob: -6.18551778793335
    6. '    
' → logprob: -6.93551778793335
    7. '        
' → logprob: -7.06051778793335
    8. '   ' → logprob: -7.31051778793335
    9. ',' → logprob: -8.060517311096191
    10. '  
' → logprob: -8.435517311096191

Token 643: '        
' (ID: 3564)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23721644282341003
    2. '       ' → logprob: -2.3622164726257324
    3. '
' → logprob: -2.9872164726257324
    4. 'max' → logprob: -4.112216472625732
    5. '    
' → logprob: -4.112216472625732
    6. ' max' → logprob: -4.362216472625732
    7. '        
' → logprob: -4.987216472625732
    8. '```' → logprob: -5.487216472625732
    9. 'result' → logprob: -6.487216472625732
    10. 'merged' → logprob: -6.737216472625732

Token 644: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09989700466394424
    2. '       ' → logprob: -2.4748969078063965
    3. 'max' → logprob: -5.4748969078063965
    4. '
' → logprob: -5.9748969078063965
    5. ' max' → logprob: -6.2248969078063965
    6. '    
' → logprob: -7.5998969078063965
    7. 'result' → logprob: -8.224897384643555
    8. '        
' → logprob: -8.474897384643555
    9. '```' → logprob: -8.474897384643555
    10. ',' → logprob: -9.349897384643555

Token 645: ' total' (ID: 3609)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.5173031091690063
    2. 'return' → logprob: -2.392302989959717
    3. 'combined' → logprob: -2.392302989959717
    4. 'branch' → logprob: -2.892302989959717
    5. 'min' → logprob: -3.517302989959717
    6. 'merged' → logprob: -3.642302989959717
    7. 'left' → logprob: -3.767302989959717
    8. 'result' → logprob: -4.142302989959717
    9. ' max' → logprob: -4.642302989959717
    10. 'minimal' → logprob: -5.267302989959717

Token 646: '_leaf' (ID: 96627)
  Prédit: '_branch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_branch' → logprob: -0.03085382468998432
    2. '_max' → logprob: -3.655853748321533
    3. ' =' → logprob: -6.530853748321533
    4. '=' → logprob: -6.905853748321533
    5. '_br' → logprob: -7.280853748321533
    6. '_children' → logprob: -8.155854225158691
    7. '_depth' → logprob: -8.405854225158691
    8. '_product' → logprob: -9.030854225158691
    9. 'branch' → logprob: -9.030854225158691
    10. 'max' → logprob: -9.155854225158691

Token 647: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.5512592792510986
    2. 's' → logprob: -1.3012592792510986
    3. '_nodes' → logprob: -1.9262592792510986
    4. '_counts' → logprob: -5.5512590408325195
    5. '_le' → logprob: -7.5512590408325195
    6. 'count' → logprob: -7.6762590408325195
    7. '_leaf' → logprob: -9.30125904083252
    8. '_br' → logprob: -9.42625904083252
    9. '_branch' → logprob: -9.55125904083252
    10. '_node' → logprob: -9.67625904083252

Token 648: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023371145129203796
    2. '=' → logprob: -3.7733712196350098
    3. 's' → logprob: -9.023370742797852
    4. '   ' → logprob: -12.398370742797852
    5. ' ' → logprob: -14.648370742797852
    6. ',' → logprob: -15.398370742797852
    7. '  ' → logprob: -16.89837074279785
    8. '    ' → logprob: -17.14837074279785
    9. '=max' → logprob: -17.52337074279785
    10. '_' → logprob: -17.64837074279785

Token 649: ' ' (ID: 220)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.04245743900537491
    2. 'max' → logprob: -4.042457580566406
    3. '1' → logprob: -4.792457580566406
    4. 'sum' → logprob: -4.917457580566406
    5. 'left' → logprob: -5.667457580566406
    6. 'mul' → logprob: -6.667457580566406
    7. '[' → logprob: -7.167457580566406
    8. '[left' → logprob: -7.792457580566406
    9. '0' → logprob: -8.042457580566406
    10. 'multiply' → logprob: -8.167457580566406

Token 650: '1' (ID: 16)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.03584865480661392
    2. 'sum' → logprob: -3.785848617553711
    3. 'left' → logprob: -4.785848617553711
    4. '1' → logprob: -6.785848617553711
    5. 'mul' → logprob: -7.535848617553711
    6. 'max' → logprob: -7.535848617553711
    7. '[left' → logprob: -7.535848617553711
    8. '[' → logprob: -7.910848617553711
    9. 'list' → logprob: -8.035848617553711
    10. 'multiply' → logprob: -8.910848617553711

Token 651: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.002728075487539172
    2. 'for' → logprob: -6.87772798538208
    3. '<|end|>' → logprob: -8.002728462219238
    4. ' =' → logprob: -8.502728462219238
    5. ' for' → logprob: -8.877728462219238
    6. '*' → logprob: -9.002728462219238
    7. '    
' → logprob: -9.252728462219238
    8. ' *' → logprob: -9.377728462219238
    9. '=' → logprob: -9.377728462219238
    10. '
' → logprob: -9.627728462219238

Token 652: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4863358438014984
    2. ' for' → logprob: -1.4863358736038208
    3. 'for' → logprob: -3.1113357543945312
    4. '    
' → logprob: -3.2363357543945312
    5. '   ' → logprob: -3.4863357543945312
    6. ' 
' → logprob: -3.7363357543945312
    7. '\t' → logprob: -5.486335754394531
    8. '  
' → logprob: -5.611335754394531
    9. ' ' → logprob: -5.611335754394531
    10. '	for' → logprob: -5.986335754394531

Token 653: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.06718728691339493
    2. ' for' → logprob: -2.8171873092651367
    3. '       ' → logprob: -5.317187309265137
    4. '   ' → logprob: -8.567187309265137
    5. '	for' → logprob: -9.442187309265137
    6. '```' → logprob: -10.942187309265137
    7. '        
' → logprob: -12.817187309265137
    8. 'total' → logprob: -13.442187309265137
    9. '        ' → logprob: -13.817187309265137
    10. '    
' → logprob: -13.817187309265137

Token 654: ' left' (ID: 3561)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4923468828201294
    2. ' i' → logprob: -1.6173468828201294
    3. 'level' → logprob: -2.86734676361084
    4. 'branch' → logprob: -2.86734676361084
    5. ' level' → logprob: -3.86734676361084
    6. ' branching' → logprob: -4.49234676361084
    7. 'count' → logprob: -4.99234676361084
    8. 'depth' → logprob: -5.11734676361084
    9. 'x' → logprob: -5.36734676361084
    10. 'value' → logprob: -5.49234676361084

Token 655: '_count' (ID: 7536)
  Prédit: '_branch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_branch' → logprob: -0.36833974719047546
    2. ',' → logprob: -2.493339776992798
    3. 'branch' → logprob: -2.618339776992798
    4. '_child' → logprob: -3.493339776992798
    5. '_level' → logprob: -3.618339776992798
    6. '_i' → logprob: -3.868339776992798
    7. '_children' → logprob: -3.868339776992798
    8. 'i' → logprob: -4.243339538574219
    9. '_factor' → logprob: -5.243339538574219
    10. '_br' → logprob: -5.493339538574219

Token 656: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1734643280506134
    2. 'in' → logprob: -1.923464298248291
    3. ' in' → logprob: -4.923464298248291
    4. ' ,' → logprob: -5.298464298248291
    5. '*' → logprob: -7.923464298248291
    6. ',in' → logprob: -9.04846477508545
    7. ',count' → logprob: -9.92346477508545
    8. '_in' → logprob: -10.42346477508545
    9. '  ' → logprob: -10.42346477508545
    10. ' *' → logprob: -10.67346477508545

Token 657: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.22541917860507965
    2. ' right' → logprob: -1.6004191637039185
    3. ' ' → logprob: -13.350419044494629
    4. '	right' → logprob: -13.725419044494629
    5. 'Right' → logprob: -14.100419044494629
    6. '```' → logprob: -14.100419044494629
    7. '_right' → logprob: -14.600419044494629
    8. '   ' → logprob: -14.850419044494629
    9. ',right' → logprob: -15.225419044494629
    10. 'rightness' → logprob: -15.600419044494629

Token 658: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.05304880812764168
    2. ',' → logprob: -3.303048849105835
    3. 'count' → logprob: -4.303048610687256
    4. '_branch' → logprob: -7.678048610687256
    5. ' in' → logprob: -8.428049087524414
    6. ',_' → logprob: -8.678049087524414
    7. '_child' → logprob: -8.928049087524414
    8. 'branch' → logprob: -9.303049087524414
    9. ',count' → logprob: -9.553049087524414
    10. ',right' → logprob: -10.428049087524414

Token 659: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.031048910692334175
    2. 'in' → logprob: -3.5310490131378174
    3. ',' → logprob: -6.656048774719238
    4. ' ,' → logprob: -12.656048774719238
    5. ',in' → logprob: -13.281048774719238
    6. 'left' → logprob: -13.531048774719238
    7. ',left' → logprob: -13.656048774719238
    8. '_in' → logprob: -14.031048774719238
    9. ' ' → logprob: -14.031048774719238
    10. 's' → logprob: -14.781048774719238

Token 660: ' zip' (ID: 16216)
  Prédit: 'zip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zip' → logprob: -0.04858884960412979
    2. ' zip' → logprob: -3.048588752746582
    3. 'left' → logprob: -13.923588752746582
    4. '(zip' → logprob: -15.548588752746582
    5. '   ' → logprob: -15.798588752746582
    6. ' left' → logprob: -16.5485897064209
    7. ' ' → logprob: -16.6735897064209
    8. '.zip' → logprob: -17.6735897064209
    9. '_zip' → logprob: -18.2985897064209
    10. 'map' → logprob: -18.9235897064209

Token 661: '(left' (ID: 32958)
  Prédit: '(left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(left' → logprob: -0.4810890555381775
    2. '_long' → logprob: -0.9810890555381775
    3. '_left' → logprob: -4.981089115142822
    4. 'left' → logprob: -9.231088638305664
    5. 'long' → logprob: -11.981088638305664
    6. '(long' → logprob: -12.731088638305664
    7. '(zip' → logprob: -12.731088638305664
    8. '(' → logprob: -12.856088638305664
    9. ' left' → logprob: -13.106088638305664
    10. '[left' → logprob: -13.356088638305664

Token 662: '_branch' (ID: 71162)
  Prédit: '_branch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_branch' → logprob: -0.0003645442193374038
    2. 'branch' → logprob: -8.500364303588867
    3. '_count' → logprob: -9.625364303588867
    4. ',' → logprob: -10.125364303588867
    5. ',right' → logprob: -11.250364303588867
    6. '_left' → logprob: -11.750364303588867
    7. 'count' → logprob: -12.000364303588867
    8. '(left' → logprob: -12.125364303588867
    9. 'Branch' → logprob: -12.375364303588867
    10. ' branching' → logprob: -13.000364303588867

Token 663: 'ing' (ID: 289)
  Prédit: 'ing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -0.029853353276848793
    2. '_branch' → logprob: -3.529853343963623
    3. '_child' → logprob: -10.529853820800781
    4. 'ng' → logprob: -10.904853820800781
    5. ' branching' → logprob: -11.154853820800781
    6. '_count' → logprob: -11.779853820800781
    7. 'g' → logprob: -12.279853820800781
    8. 'branch' → logprob: -12.404853820800781
    9. 'ging' → logprob: -12.529853820800781
    10. 'ed' → logprob: -13.279853820800781

Token 664: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07908960431814194
    2. ',right' → logprob: -2.579089641571045
    3. ' ,' → logprob: -8.579089164733887
    4. 'right' → logprob: -12.329089164733887
    5. ',left' → logprob: -13.454089164733887
    6. '       ' → logprob: -13.579089164733887
    7. '(right' → logprob: -14.329089164733887
    8. ',r' → logprob: -14.329089164733887
    9. '_,' → logprob: -14.454089164733887
    10. ',
' → logprob: -14.829089164733887

Token 665: ' right' (ID: 1849)
  Prédit: ' right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.18009443581104279
    2. 'right' → logprob: -1.8050944805145264
    3. ' left' → logprob: -8.555094718933105
    4. 'left' → logprob: -9.180094718933105
    5. '           ' → logprob: -11.055094718933105
    6. '       ' → logprob: -11.305094718933105
    7. '        ' → logprob: -12.305094718933105
    8. '[right' → logprob: -12.305094718933105
    9. '(right' → logprob: -12.305094718933105
    10. '            ' → logprob: -12.805094718933105

Token 666: '_branch' (ID: 71162)
  Prédit: '_branch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_branch' → logprob: -0.08846047520637512
    2. '_right' → logprob: -3.8384604454040527
    3. 'branch' → logprob: -4.338460445404053
    4. ',' → logprob: -4.338460445404053
    5. 'ing' → logprob: -4.588460445404053
    6. '_count' → logprob: -4.713460445404053
    7. '):' → logprob: -5.213460445404053
    8. 's' → logprob: -6.463460445404053
    9. ',right' → logprob: -6.463460445404053
    10. ' branching' → logprob: -6.588460445404053

Token 667: 'ing' (ID: 289)
  Prédit: '_count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.9543378949165344
    2. 'ing' → logprob: -1.4543378353118896
    3. '_branch' → logprob: -2.2043378353118896
    4. '_counts' → logprob: -2.4543378353118896
    5. 'right' → logprob: -3.2043378353118896
    6. '):
' → logprob: -3.7043378353118896
    7. '_right' → logprob: -4.079338073730469
    8. '):' → logprob: -4.079338073730469
    9. 'count' → logprob: -4.204338073730469
    10. 's' → logprob: -4.329338073730469

Token 668: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.05007407069206238
    2. '):' → logprob: -3.1750741004943848
    3. ':' → logprob: -5.925074100494385
    4. '):
' → logprob: -6.425074100494385
    5. ':
' → logprob: -6.550074100494385
    6. '       ' → logprob: -7.800074100494385
    7. ',' → logprob: -7.800074100494385
    8. '():
' → logprob: -7.925074100494385
    9. '   ' → logprob: -9.550073623657227
    10. '           ' → logprob: -11.300073623657227

Token 669: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4266439974308014
    2. ',' → logprob: -1.176643967628479
    3. ':' → logprob: -3.5516440868377686
    4. ':
' → logprob: -4.9266438484191895
    5. ' and' → logprob: -7.5516438484191895
    6. '(total' → logprob: -8.051644325256348
    7. '*' → logprob: -8.176644325256348
    8. ' total' → logprob: -8.176644325256348
    9. '            ' → logprob: -8.551644325256348
    10. ',total' → logprob: -8.801644325256348

Token 670: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.6974834203720093
    2. 'total' (adapté à ' total') → logprob: -0.6974834203720093
    3. '           ' → logprob: -5.447483539581299
    4. '               ' → logprob: -11.82248306274414
    5. '   ' → logprob: -12.57248306274414
    6. '	total' → logprob: -12.57248306274414
    7. ',total' → logprob: -13.32248306274414
    8. '(total' → logprob: -13.94748306274414
    9. ' ' → logprob: -14.32248306274414
    10. '       ' → logprob: -14.57248306274414

Token 671: '_leaf' (ID: 96627)
  Prédit: '_leaf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_leaf' → logprob: -0.0024719706270843744
    2. '_count' → logprob: -6.127471923828125
    3. '*=' → logprob: -8.627471923828125
    4. '*' → logprob: -10.752471923828125
    5. '_' → logprob: -10.877471923828125
    6. '_branch' → logprob: -10.877471923828125
    7. 'leaf' → logprob: -11.252471923828125
    8. ' *=' → logprob: -11.252471923828125
    9. 'count' → logprob: -12.002471923828125
    10. '=' → logprob: -12.627471923828125

Token 672: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -1.9027791495318525e-05
    2. '_' → logprob: -11.875019073486328
    3. '   ' → logprob: -12.500019073486328
    4. '       ' → logprob: -13.000019073486328
    5. 'count' → logprob: -13.250019073486328
    6. ' _' → logprob: -13.625019073486328
    7. 's' → logprob: -14.250019073486328
    8. ' =' → logprob: -14.625019073486328
    9. '_counts' → logprob: -14.750019073486328
    10. '=' → logprob: -15.500019073486328

Token 673: ' *=' (ID: 25253)
  Prédit: '*='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*=' → logprob: -0.038144536316394806
    2. ' *=' → logprob: -3.288144588470459
    3. '=' → logprob: -9.6631441116333
    4. '*' → logprob: -10.5381441116333
    5. '   ' → logprob: -11.5381441116333
    6. ' =' → logprob: -13.5381441116333
    7. '    ' → logprob: -14.1631441116333
    8. '+=' → logprob: -14.7881441116333
    9. '       ' → logprob: -15.4131441116333
    10. '  ' → logprob: -15.6631441116333

Token 674: ' max' (ID: 2999)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.052237894386053085
    2. 'max' → logprob: -3.0522379875183105
    3. ' left' → logprob: -6.0522379875183105
    4. ' max' → logprob: -7.1772379875183105
    5. '(left' → logprob: -7.8022379875183105
    6. 'min' → logprob: -9.802237510681152
    7. '(max' → logprob: -10.302237510681152
    8. '(' → logprob: -11.677237510681152
    9. ' (' → logprob: -11.677237510681152
    10. '   ' → logprob: -12.177237510681152

Token 675: '(left' (ID: 32958)
  Prédit: '(left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(left' → logprob: -4.008129963040119e-06
    2. '(' → logprob: -12.500003814697266
    3. 'left' → logprob: -15.250003814697266
    4. '(
' → logprob: -17.625003814697266
    5. '[left' → logprob: -19.000003814697266
    6. ' left' → logprob: -19.875003814697266
    7. ',left' → logprob: -19.875003814697266
    8. ' (' → logprob: -20.375003814697266
    9. '((' → logprob: -20.750003814697266
    10. '(right' → logprob: -21.375003814697266

Token 676: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.0002918446552939713
    2. '(left' → logprob: -8.25029182434082
    3. 'left' → logprob: -11.37529182434082
    4. '_,' → logprob: -12.12529182434082
    5. '_left' → logprob: -12.25029182434082
    6. 'count' → logprob: -12.50029182434082
    7. '_counts' → logprob: -14.12529182434082
    8. ',' → logprob: -14.25029182434082
    9. ',left' → logprob: -14.25029182434082
    10. '[left' → logprob: -14.50029182434082

Token 677: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06053900346159935
    2. ',right' → logprob: -3.3105390071868896
    3. ' ,' → logprob: -3.8105390071868896
    4. ',left' → logprob: -9.185539245605469
    5. ',
' → logprob: -12.935539245605469
    6. ',max' → logprob: -13.060539245605469
    7. ' right' → logprob: -14.060539245605469
    8. 'right' → logprob: -14.310539245605469
    9. ',r' → logprob: -14.810539245605469
    10. '(right' → logprob: -14.935539245605469

Token 678: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.061967797577381134
    2. ' right' → logprob: -2.8119678497314453
    3. '	right' → logprob: -17.061967849731445
    4. '   ' → logprob: -17.436967849731445
    5. ' ' → logprob: -17.561967849731445
    6. '           ' → logprob: -18.186967849731445
    7. '(right' → logprob: -18.936967849731445
    8. '       ' → logprob: -19.061967849731445
    9. '
' → logprob: -19.811967849731445
    10. '               ' → logprob: -19.936967849731445

Token 679: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.0001454955490771681
    2. 'count' → logprob: -9.87514591217041
    3. 'right' → logprob: -10.62514591217041
    4. '_right' → logprob: -10.75014591217041
    5. '_counts' → logprob: -11.37514591217041
    6. 'left' → logprob: -11.87514591217041
    7. '_branch' → logprob: -11.87514591217041
    8. 'Count' → logprob: -12.12514591217041
    9. ')' → logprob: -12.25014591217041
    10. ',right' → logprob: -12.50014591217041

Token 680: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00019567293929867446
    2. ')
' → logprob: -9.250195503234863
    3. ',' → logprob: -9.750195503234863
    4. '           ' → logprob: -11.375195503234863
    5. '<|end|>' → logprob: -11.500195503234863
    6. '       ' → logprob: -11.625195503234863
    7. ' )' → logprob: -12.375195503234863
    8. '```' → logprob: -13.250195503234863
    9. '),' → logprob: -14.250195503234863
    10. '   ' → logprob: -14.375195503234863

Token 681: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19988270103931427
    2. '
' → logprob: -2.324882745742798
    3. '        
' → logprob: -4.074882507324219
    4. '<|end|>' → logprob: -4.074882507324219
    5. '    
' → logprob: -4.199882507324219
    6. ' return' → logprob: -4.574882507324219
    7. '   ' → logprob: -4.574882507324219
    8. 'return' → logprob: -5.699882507324219
    9. ',' → logprob: -5.824882507324219
    10. ')' → logprob: -6.324882507324219

Token 682: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006689329631626606
    2. '
' → logprob: -5.756689548492432
    3. ' return' → logprob: -6.756689548492432
    4. '        
' → logprob: -6.881689548492432
    5. '   ' → logprob: -7.381689548492432
    6. 'return' (adapté à ' return') → logprob: -7.631689548492432
    7. '    
' → logprob: -10.006689071655273
    8. ',' → logprob: -10.006689071655273
    9. '<|end|>' → logprob: -10.756689071655273
    10. '
' → logprob: -11.006689071655273

Token 683: ' len' (ID: 4631)
  Prédit: 'half'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'half' → logprob: -0.13036297261714935
    2. ' half' → logprob: -2.1303629875183105
    3. ' total' → logprob: -6.7553629875183105
    4. 'total' → logprob: -6.7553629875183105
    5. 'path' → logprob: -8.380362510681152
    6. '(' → logprob: -8.630362510681152
    7. ' path' → logprob: -8.755362510681152
    8. '   ' → logprob: -9.255362510681152
    9. 'max' → logprob: -9.255362510681152
    10. ' (' → logprob: -9.255362510681152

Token 684: '(left' (ID: 32958)
  Prédit: '(path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(path' → logprob: -0.004170406609773636
    2. '(total' → logprob: -5.6291704177856445
    3. 'path' → logprob: -8.254170417785645
    4. '(tree' → logprob: -8.754170417785645
    5. '(left' → logprob: -9.504170417785645
    6. '(' → logprob: -10.129170417785645
    7. '_path' → logprob: -11.004170417785645
    8. 'total' → logprob: -11.629170417785645
    9. ' path' → logprob: -13.504170417785645
    10. '(max' → logprob: -13.629170417785645

Token 685: '_branch' (ID: 71162)
  Prédit: '_branch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_branch' → logprob: -3.9054008084349334e-05
    2. 'branch' → logprob: -10.875039100646973
    3. '(branch' → logprob: -12.125039100646973
    4. '_b' → logprob: -12.375039100646973
    5. '_br' → logprob: -12.500039100646973
    6. '_between' → logprob: -13.000039100646973
    7. '_path' → logprob: -13.750039100646973
    8. ')' → logprob: -14.000039100646973
    9. '```' → logprob: -14.500039100646973
    10. 'Branch' → logprob: -15.500039100646973

Token 686: 'ing' (ID: 289)
  Prédit: '_branch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_branch' → logprob: -0.27610713243484497
    2. 'ing' → logprob: -1.6511070728302002
    3. 'ching' → logprob: -3.4011070728302
    4. 'anch' → logprob: -4.276107311248779
    5. 'ging' → logprob: -6.776107311248779
    6. '_ch' → logprob: -8.151106834411621
    7. '_b' → logprob: -9.026106834411621
    8. 'ch' → logprob: -9.151106834411621
    9. 'aching' → logprob: -9.651106834411621
    10. 'branch' → logprob: -9.776106834411621

Token 687: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002739016432315111
    2. '),' → logprob: -6.127738952636719
    3. ' ,' → logprob: -8.502738952636719
    4. ' *' → logprob: -9.502738952636719
    5. ' -' → logprob: -9.627738952636719
    6. '   ' → logprob: -9.752738952636719
    7. ')' → logprob: -10.002738952636719
    8. '*' → logprob: -10.127738952636719
    9. ' +' → logprob: -10.752738952636719
    10. '-' → logprob: -11.377738952636719

Token 688: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.693148672580719
    2. 'total' → logprob: -0.693148672580719
    3. '   ' → logprob: -13.693148612976074
    4. ' ' → logprob: -16.19314956665039
    5. ' max' → logprob: -16.56814956665039
    6. 'max' → logprob: -16.56814956665039
    7. '(total' → logprob: -17.44314956665039
    8. '	total' → logprob: -17.69314956665039
    9. '2' → logprob: -18.44314956665039
    10. ' ' → logprob: -18.44314956665039

Token 689: '_leaf' (ID: 96627)
  Prédit: '_leaf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_leaf' → logprob: -7.107425062713446e-06
    2. '_count' → logprob: -12.750006675720215
    3. 'leaf' → logprob: -13.000006675720215
    4. '_total' → logprob: -14.125006675720215
    5. '_branch' → logprob: -14.625006675720215
    6. '_root' → logprob: -15.500006675720215
    7. '```' → logprob: -15.750006675720215
    8. '_tree' → logprob: -16.25000762939453
    9. '_leave' → logprob: -17.25000762939453
    10. 'total' → logprob: -17.25000762939453

Token 690: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.007615729700773954
    2. 'count' → logprob: -4.882615566253662
    3. 'ount' → logprob: -11.75761604309082
    4. ' count' → logprob: -14.25761604309082
    5. 'Count' → logprob: -15.25761604309082
    6. '	count' → logprob: -15.63261604309082
    7. '_COUNT' → logprob: -15.75761604309082
    8. 'leaf' → logprob: -16.13261604309082
    9. '   ' → logprob: -16.25761604309082
    10. '$count' → logprob: -17.00761604309082

Token 691: ' *' (ID: 425)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0028303153812885284
    2. '
' → logprob: -6.752830505371094
    3. '    
' → logprob: -6.752830505371094
    4. '<|end|>' → logprob: -7.877830505371094
    5. 'else' → logprob: -9.627830505371094
    6. ')' → logprob: -11.877830505371094
    7. '        
' → logprob: -11.877830505371094
    8. 'elif' → logprob: -12.002830505371094
    9. '<|end|>' → logprob: -12.377830505371094
    10. 'return' → logprob: -12.627830505371094

Token 692: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.02642882987856865
    2. ' ' → logprob: -3.6514289379119873
    3. '1' → logprob: -9.776429176330566
    4. 'max' → logprob: -11.401429176330566
    5. '(' → logprob: -11.651429176330566
    6. 'left' → logprob: -11.901429176330566
    7. '   ' → logprob: -12.026429176330566
    8. '  ' → logprob: -12.026429176330566
    9. '
' → logprob: -12.151429176330566
    10. ' max' → logprob: -12.526429176330566

Token 693: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0002851729223039001
    2. '1' → logprob: -8.625285148620605
    3. ' ' → logprob: -9.750285148620605
    4. '(' → logprob: -11.250285148620605
    5. 'len' → logprob: -11.625285148620605
    6. 'number' → logprob: -12.000285148620605
    7. '
' → logprob: -13.000285148620605
    8. 'max' → logprob: -13.000285148620605
    9. 'path' → logprob: -13.250285148620605
    10. '   ' → logprob: -13.250285148620605

Token 694: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005267549771815538
    2. 'else' → logprob: -6.38026762008667
    3. '    
' → logprob: -6.38026762008667
    4. '<|end|>' → logprob: -6.75526762008667
    5. ' else' → logprob: -7.88026762008667
    6. '
' → logprob: -8.505267143249512
    7. '  
' → logprob: -10.380267143249512
    8. '<|end|>' → logprob: -11.380267143249512
    9. '        
' → logprob: -11.505267143249512
    10. '```' → logprob: -11.505267143249512

Token 695: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03072628378868103
    2. 'else' → logprob: -3.530726194381714
    3. '    
' → logprob: -7.655726432800293
    4. '
' → logprob: -8.905726432800293
    5. 'elif' → logprob: -8.905726432800293
    6. '```' → logprob: -9.280726432800293
    7. ' else' → logprob: -10.280726432800293
    8. '<|end|>' → logprob: -10.405726432800293
    9. ')' → logprob: -10.905726432800293
    10. 'def' → logprob: -11.405726432800293

Token 696: ' central' (ID: 11082)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.026222962886095047
    2. '   ' → logprob: -3.9012229442596436
    3. ' else' → logprob: -5.276223182678223
    4. 'mid' → logprob: -7.776223182678223
    5. '
' → logprob: -9.526223182678223
    6. 'root' → logprob: -11.151223182678223
    7. ' mid' → logprob: -11.401223182678223
    8. 'center' → logprob: -11.401223182678223
    9. 'elif' → logprob: -12.026223182678223
    10. '```' → logprob: -12.401223182678223

Token 697: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.00029995047952979803
    2. '_index' → logprob: -9.000300407409668
    3. '_token' → logprob: -9.250300407409668
    4. '_' → logprob: -9.875300407409668
    5. 'node' → logprob: -11.875300407409668
    6. '_path' → logprob: -12.125300407409668
    7. '_n' → logprob: -13.000300407409668
    8. '_leaf' → logprob: -13.000300407409668
    9. '_value' → logprob: -13.250300407409668
    10. '_length' → logprob: -13.375300407409668

Token 698: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519291639328003
    2. '=' → logprob: -1.5019291639328003
    3. ' ' → logprob: -17.126928329467773
    4. ',' → logprob: -18.126928329467773
    5. '   ' → logprob: -19.001928329467773
    6. ':' → logprob: -20.001928329467773
    7. 's' → logprob: -20.001928329467773
    8. '＝' → logprob: -20.126928329467773
    9. '_path' → logprob: -20.626928329467773
    10. '_idx' → logprob: -20.876928329467773

Token 699: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.011048289015889168
    2. ' path' → logprob: -4.511048316955566
    3. 'tree' → logprob: -14.886048316955566
    4. '   ' → logprob: -16.38604736328125
    5. 'find' → logprob: -17.01104736328125
    6. ' ' → logprob: -17.13604736328125
    7. '(path' → logprob: -17.76104736328125
    8. '[path' → logprob: -18.38604736328125
    9. ' tree' → logprob: -19.01104736328125
    10. ' find' → logprob: -19.01104736328125

Token 700: '_between' (ID: 124874)
  Prédit: '_between'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_between' → logprob: -1.8550976164988242e-05
    2. 'between' → logprob: -11.500018119812012
    3. '_from' → logprob: -12.125018119812012
    4. '_length' → logprob: -14.000018119812012
    5. '[' → logprob: -14.375018119812012
    6. '=' → logprob: -14.750018119812012
    7. ' =' → logprob: -14.875018119812012
    8. '_for' → logprob: -15.000018119812012
    9. 'Between' → logprob: -15.750018119812012
    10. '_of' → logprob: -16.625019073486328

Token 701: '_le' (ID: 27121)
  Prédit: '_le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_le' → logprob: -0.1265529841184616
    2. '_between' → logprob: -2.2515530586242676
    3. 'le' → logprob: -4.376553058624268
    4. 'between' → logprob: -7.001553058624268
    5. 'length' → logprob: -10.37655258178711
    6. '[' → logprob: -10.62655258178711
    7. 'leaf' → logprob: -10.62655258178711
    8. '_leaf' → logprob: -11.12655258178711
    9. 'len' → logprob: -11.25155258178711
    10. '_nodes' → logprob: -11.75155258178711

Token 702: 'aves' (ID: 6808)
  Prédit: 'aves'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aves' → logprob: -3.47626737493556e-05
    2. 'af' → logprob: -10.50003433227539
    3. 'e' → logprob: -13.12503433227539
    4. 'ves' → logprob: -13.75003433227539
    5. '[' → logprob: -14.00003433227539
    6. 'ath' → logprob: -14.62503433227539
    7. 'av' → logprob: -14.75003433227539
    8. 'afs' → logprob: -15.00003433227539
    9. 'a' → logprob: -15.25003433227539
    10. 'Leaves' → logprob: -15.75003433227539

Token 703: '[path' (ID: 145469)
  Prédit: '[path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[path' → logprob: -0.10031212866306305
    2. '[' → logprob: -2.7253122329711914
    3. '[len' → logprob: -3.6003122329711914
    4. '[(' → logprob: -6.600312232971191
    5. '[length' → logprob: -6.725312232971191
    6. '[
' → logprob: -10.475312232971191
    7. '[mid' → logprob: -12.975312232971191
    8. 'half' → logprob: -13.225312232971191
    9. ' [' → logprob: -13.225312232971191
    10. '=' → logprob: -13.600312232971191

Token 704: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.0002334568416699767
    2. 'length' → logprob: -8.37523365020752
    3. 'Length' → logprob: -13.12523365020752
    4. ' length' → logprob: -14.50023365020752
    5. 'ength' → logprob: -16.625232696533203
    6. '_between' → logprob: -16.625232696533203
    7. '_LENGTH' → logprob: -16.875232696533203
    8. '_path' → logprob: -17.125232696533203
    9. '[length' → logprob: -17.250232696533203
    10. '_lengths' → logprob: -17.625232696533203

Token 705: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.06196925416588783
    2. ' //' → logprob: -2.81196928024292
    3. ' ' → logprob: -13.936968803405762
    4. '   ' → logprob: -15.186968803405762
    5. '#' → logprob: -15.561968803405762
    6. '```' → logprob: -15.936968803405762
    7. '
' → logprob: -16.311969757080078
    8. '%' → logprob: -17.061969757080078
    9. '  ' → logprob: -18.311969757080078
    10. '    ' → logprob: -18.561969757080078

Token 706: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.7729658540920354e-05
    2. ' ' → logprob: -10.500027656555176
    3. '   ' → logprob: -16.000028610229492
    4. '```' → logprob: -18.375028610229492
    5. '1' → logprob: -18.625028610229492
    6. '  ' → logprob: -19.000028610229492
    7. '
' → logprob: -19.125028610229492
    8. '۲' → logprob: -20.625028610229492
    9. '２' → logprob: -20.875028610229492
    10. '    ' → logprob: -21.000028610229492

Token 707: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.961759259458631e-06
    2. ' ' → logprob: -12.250004768371582
    3. '   ' → logprob: -16.1250057220459
    4. '1' → logprob: -17.3750057220459
    5. '```' → logprob: -18.5000057220459
    6. '
' → logprob: -18.8750057220459
    7. '  ' → logprob: -19.0000057220459
    8. '２' → logprob: -19.2500057220459
    9. '۲' → logprob: -19.6875057220459
    10. '0' → logprob: -19.7500057220459

Token 708: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.07608071714639664
    2. ']' → logprob: -2.701080799102783
    3. '   ' → logprob: -5.576080799102783
    4. '
' → logprob: -6.326080799102783
    5. ',' → logprob: -7.951080799102783
    6. ']
' → logprob: -9.451080322265625
    7. 'def' → logprob: -10.326080322265625
    8. ')
' → logprob: -10.451080322265625
    9. '    
' → logprob: -10.951080322265625
    10. ')' → logprob: -11.326080322265625

Token 709: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.613236665725708
    2. '
' → logprob: -0.863236665725708
    3. 'central' → logprob: -4.488236427307129
    4. '    
' → logprob: -5.113236427307129
    5. '```' → logprob: -5.238236427307129
    6. ',' → logprob: -5.238236427307129
    7. ' central' → logprob: -6.113236427307129
    8. '_left' → logprob: -6.863236427307129
    9. '_branch' → logprob: -6.988236427307129
    10. ' =' → logprob: -7.238236427307129

Token 710: ' central' (ID: 11082)
  Prédit: 'central'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'central' (adapté à ' central') → logprob: -0.19130845367908478
    2. 'branch' → logprob: -1.8163084983825684
    3. '   ' → logprob: -5.691308498382568
    4. ' central' → logprob: -5.816308498382568
    5. 'max' → logprob: -6.066308498382568
    6. 'center' → logprob: -6.191308498382568
    7. 'left' → logprob: -8.31630802154541
    8. ' branching' → logprob: -9.06630802154541
    9. 'cent' → logprob: -9.44130802154541
    10. 'middle' → logprob: -9.69130802154541

Token 711: '_branch' (ID: 71162)
  Prédit: '_branch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_branch' → logprob: -0.0004408015520311892
    2. '_node' → logprob: -8.87544059753418
    3. '_children' → logprob: -9.12544059753418
    4. '_max' → logprob: -9.37544059753418
    5. 'branch' → logprob: -9.62544059753418
    6. '_count' → logprob: -11.62544059753418
    7. '_child' → logprob: -11.62544059753418
    8. '_parent' → logprob: -11.75044059753418
    9. '_depth' → logprob: -12.62544059753418
    10. 'max' → logprob: -13.00044059753418

Token 712: 'ing' (ID: 289)
  Prédit: 'ing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -0.0012785687576979399
    2. ' =' → logprob: -7.126278400421143
    3. 'branch' → logprob: -8.5012788772583
    4. '_branch' → logprob: -8.7512788772583
    5. '=' → logprob: -9.8762788772583
    6. ' branching' → logprob: -10.7512788772583
    7. '   ' → logprob: -11.3762788772583
    8. 's' → logprob: -12.2512788772583
    9. '_count' → logprob: -12.3762788772583
    10. '_counts' → logprob: -12.6262788772583

Token 713: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04858759790658951
    2. '=' → logprob: -3.0485875606536865
    3. '   ' → logprob: -16.673587799072266
    4. ' ' → logprob: -16.798587799072266
    5. ',' → logprob: -17.298587799072266
    6. 's' → logprob: -17.548587799072266
    7. ')' → logprob: -19.173587799072266
    8. '[' → logprob: -20.048587799072266
    9. ' =[' → logprob: -20.048587799072266
    10. '＝' → logprob: -20.173587799072266

Token 714: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.04858794063329697
    2. ' compute' → logprob: -3.0485880374908447
    3. '   ' → logprob: -14.423587799072266
    4. 'computer' → logprob: -17.048587799072266
    5. 'calculate' → logprob: -17.548587799072266
    6. ' ' → logprob: -18.048587799072266
    7. '.compute' → logprob: -18.048587799072266
    8. 'comput' → logprob: -18.673587799072266
    9. '
' → logprob: -18.923587799072266
    10. 'computed' → logprob: -19.173587799072266

Token 715: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -4.5491004129871726e-05
    2. 'max' → logprob: -10.000045776367188
    3. 'Max' → logprob: -17.375045776367188
    4. '(max' → logprob: -19.125045776367188
    5. '(tree' → logprob: -19.500045776367188
    6. ' max' → logprob: -20.000045776367188
    7. 'tree' → logprob: -20.125045776367188
    8. '_MAX' → logprob: -20.625045776367188
    9. '```' → logprob: -20.625045776367188
    10. 's' → logprob: -20.750045776367188

Token 716: '_branch' (ID: 71162)
  Prédit: '_branch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_branch' → logprob: -0.014223329722881317
    2. 'branch' → logprob: -4.264223098754883
    3. '_max' → logprob: -10.389223098754883
    4. 'max' → logprob: -11.014223098754883
    5. '_br' → logprob: -11.764223098754883
    6. ' branching' → logprob: -13.389223098754883
    7. 'Branch' → logprob: -13.514223098754883
    8. '```' → logprob: -13.889223098754883
    9. '(branch' → logprob: -14.514223098754883
    10. '_block' → logprob: -16.639223098754883

Token 717: 'ing' (ID: 289)
  Prédit: 'ing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -0.368359237909317
    2. '(tree' → logprob: -1.2433592081069946
    3. 'branch' → logprob: -4.743359088897705
    4. 'tree' → logprob: -4.868359088897705
    5. 'ching' → logprob: -6.868359088897705
    6. 'anch' → logprob: -7.243359088897705
    7. '_branch' → logprob: -7.618359088897705
    8. ' branching' → logprob: -8.118359565734863
    9. 'ch' → logprob: -8.493359565734863
    10. '```' → logprob: -9.118359565734863

Token 718: '(tree' (ID: 44909)
  Prédit: '(tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tree' → logprob: -1.9361264946837764e-07
    2. '(
' → logprob: -16.875
    3. '(' → logprob: -17.25
    4. '(Tree' → logprob: -20.75
    5. ' (' → logprob: -21.25
    6. '(table' → logprob: -21.5
    7. 'tree' → logprob: -22.5
    8. '	tree' → logprob: -22.5
    9. '(thread' → logprob: -23.75
    10. '(t' → logprob: -24.25

Token 719: '_ad' (ID: 23782)
  Prédit: '_ad'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ad' → logprob: -0.00015133652777876705
    2. '(tree' → logprob: -9.125151634216309
    3. '_adj' → logprob: -10.750151634216309
    4. '_ac' → logprob: -11.250151634216309
    5. 'tree' → logprob: -13.000151634216309
    6. 'ad' → logprob: -13.000151634216309
    7. 's' → logprob: -14.375151634216309
    8. 'adj' → logprob: -14.500151634216309
    9. '[' → logprob: -14.625151634216309
    10. '   ' → logprob: -14.750151634216309

Token 720: 'jac' (ID: 77250)
  Prédit: 'jac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jac' → logprob: -0.6786344051361084
    2. 'adj' → logprob: -1.0536344051361084
    3. 'acency' → logprob: -2.5536344051361084
    4. '_ad' → logprob: -2.8036344051361084
    5. '_adj' → logprob: -5.9286346435546875
    6. 'j' → logprob: -7.0536346435546875
    7. 'lists' → logprob: -8.053634643554688
    8. '_lists' → logprob: -8.553634643554688
    9. 'ad' → logprob: -8.553634643554688
    10. 'adic' → logprob: -8.553634643554688

Token 721: 'ency' (ID: 2799)
  Prédit: '_lists'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_lists' → logprob: -0.002127183834090829
    2. 'ists' → logprob: -7.127127170562744
    3. 'ist' → logprob: -7.377127170562744
    4. 'lists' → logprob: -7.877127170562744
    5. 'st' → logprob: -9.002127647399902
    6. '   ' → logprob: -9.252127647399902
    7. 'sts' → logprob: -10.252127647399902
    8. '_list' → logprob: -10.877127647399902
    9. 'list' → logprob: -11.627127647399902
    10. 'acency' → logprob: -12.252127647399902

Token 722: '_lists' (ID: 93609)
  Prédit: '_lists'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lists' → logprob: -1.3856492842023727e-06
    2. 'tree' → logprob: -14.375000953674316
    3. ',' → logprob: -16.000001907348633
    4. 'lists' → logprob: -16.125001907348633
    5. '[' → logprob: -16.250001907348633
    6. 'Lists' → logprob: -16.500001907348633
    7. '_list' → logprob: -16.500001907348633
    8. '_indices' → logprob: -17.375001907348633
    9. '   ' → logprob: -17.500001907348633
    10. '_' → logprob: -17.500001907348633

Token 723: ',' (ID: 11)
  Prédit: '(tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tree' → logprob: -0.008627933450043201
    2. ',' → logprob: -4.758627891540527
    3. '(' → logprob: -11.508627891540527
    4. '   ' → logprob: -13.133627891540527
    5. ' (' → logprob: -15.133627891540527
    6. ',
' → logprob: -15.133627891540527
    7. '(
' → logprob: -15.258627891540527
    8. ')' → logprob: -15.633627891540527
    9. '```' → logprob: -16.008628845214844
    10. '(Tree' → logprob: -16.758628845214844

Token 724: ' central' (ID: 11082)
  Prédit: 'central'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'central' → logprob: -0.00861456897109747
    2. ' central' → logprob: -4.758614540100098
    3. '.central' → logprob: -16.758615493774414
    4. 'Central' → logprob: -18.508615493774414
    5. '   ' → logprob: -18.633615493774414
    6. '```' → logprob: -18.883615493774414
    7. 'number' → logprob: -19.258615493774414
    8. ' централь' → logprob: -19.258615493774414
    9. 'c' → logprob: -19.508615493774414
    10. '
' → logprob: -19.633615493774414

Token 725: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -2.5822400857578032e-05
    2. 'node' → logprob: -10.875025749206543
    3. 'central' → logprob: -12.750025749206543
    4. '[node' → logprob: -13.250025749206543
    5. '_NODE' → logprob: -15.000025749206543
    6. ',' → logprob: -15.125025749206543
    7. 'Node' → logprob: -15.125025749206543
    8. '```' → logprob: -15.250025749206543
    9. ' node' → logprob: -15.750025749206543
    10. '_c' → logprob: -15.750025749206543

Token 726: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.7697225252486533e-06
    2. ' ,' → logprob: -12.875003814697266
    3. ',
' → logprob: -14.750003814697266
    4. '   ' → logprob: -15.625003814697266
    5. 'None' → logprob: -15.625003814697266
    6. ',None' → logprob: -15.625003814697266
    7. '=' → logprob: -16.625003814697266
    8. 'import' → logprob: -16.875003814697266
    9. 'central' → logprob: -17.125003814697266
    10. '=None' → logprob: -17.250003814697266

Token 727: ' None' (ID: 4662)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -2.5776860184123507e-06
    2. 'None' → logprob: -13.25000286102295
    3. ' -' → logprob: -15.00000286102295
    4. 'central' → logprob: -15.00000286102295
    5. '-central' → logprob: -17.500001907348633
    6. '   ' → logprob: -17.875001907348633
    7. '
' → logprob: -20.000001907348633
    8. '-
' → logprob: -20.250001907348633
    9. '\-' → logprob: -21.375001907348633
    10. ' ' → logprob: -21.875001907348633

Token 728: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3902033970225602e-05
    2. ' ,' → logprob: -11.250014305114746
    3. '   ' → logprob: -14.625014305114746
    4. ',None' → logprob: -15.875014305114746
    5. '‌,' → logprob: -16.75001335144043
    6. ')' → logprob: -16.87501335144043
    7. ',
' → logprob: -16.87501335144043
    8. '),' → logprob: -17.50001335144043
    9. '```' → logprob: -17.62501335144043
    10. '_,' → logprob: -18.00001335144043

Token 729: ' half' (ID: 6375)
  Prédit: 'half'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'half' → logprob: -0.008620131760835648
    2. ' half' → logprob: -4.758620262145996
    3. '   ' → logprob: -12.633620262145996
    4. 'hal' → logprob: -13.383620262145996
    5. '       ' → logprob: -15.133620262145996
    6. '           ' → logprob: -15.133620262145996
    7. '
' → logprob: -16.88361930847168
    8. '    ' → logprob: -17.00861930847168
    9. ' ' → logprob: -17.25861930847168
    10. '_half' → logprob: -17.63361930847168

Token 730: '_path' (ID: 5558)
  Prédit: '_path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -0.006724602542817593
    2. '_length' → logprob: -5.006724834442139
    3. '   ' → logprob: -12.25672435760498
    4. ')_' → logprob: -13.38172435760498
    5. ')' → logprob: -13.50672435760498
    6. '```' → logprob: -14.38172435760498
    7. '_depth' → logprob: -15.13172435760498
    8. '_' → logprob: -15.38172435760498
    9. '_size' → logprob: -15.38172435760498
    10. ')
' → logprob: -16.506725311279297

Token 731: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -2.1008713702030946e-06
    2. 'length' → logprob: -13.250001907348633
    3. '   ' → logprob: -16.000001907348633
    4. 'ength' → logprob: -17.250001907348633
    5. '```' → logprob: -18.000001907348633
    6. '_size' → logprob: -18.125001907348633
    7. ')' → logprob: -18.375001907348633
    8. '_LENGTH' → logprob: -18.625001907348633
    9. ' length' → logprob: -19.125001907348633
    10. 'Length' → logprob: -19.250001907348633

Token 732: ')
' (ID: 446)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22965943813323975
    2. ')' → logprob: -1.9796594381332397
    3. ')
' → logprob: -2.7296595573425293
    4. '    
' → logprob: -6.354659557342529
    5. '
' → logprob: -9.854659080505371
    6. '   
' → logprob: -11.729659080505371
    7. 'def' → logprob: -11.979659080505371
    8. ')[' → logprob: -12.104659080505371
    9. ',' → logprob: -12.229659080505371
    10. ' ' → logprob: -12.354659080505371

Token 733: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010049179196357727
    2. '
' → logprob: -4.635049343109131
    3. '    
' → logprob: -8.635048866271973
    4. ')' → logprob: -9.885048866271973
    5. ' return' → logprob: -11.135048866271973
    6. 'return' → logprob: -11.260048866271973
    7. ',' → logprob: -11.760048866271973
    8. ' total' → logprob: -12.635048866271973
    9. '```' → logprob: -12.635048866271973
    10. '       ' → logprob: -13.010048866271973

Token 734: ' minimal' (ID: 19957)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.08347225189208984
    2. '   ' → logprob: -2.83347225189209
    3. 'return' → logprob: -4.83347225189209
    4. 'leaf' → logprob: -5.20847225189209
    5. 'max' → logprob: -5.33347225189209
    6. ' total' → logprob: -6.58347225189209
    7. 'le' → logprob: -7.45847225189209
    8. 'maximum' → logprob: -8.33347225189209
    9. 'branch' → logprob: -8.58347225189209
    10. 'number' → logprob: -8.95847225189209

Token 735: '_leaf' (ID: 96627)
  Prédit: '_depth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_depth' → logprob: -0.4214823544025421
    2. '_height' → logprob: -1.5464823246002197
    3. '_leaf' → logprob: -3.0464823246002197
    4. '_path' → logprob: -3.5464823246002197
    5. '_branch' → logprob: -3.9214823246002197
    6. '_length' → logprob: -3.9214823246002197
    7. 'height' → logprob: -5.921482563018799
    8. 'depth' → logprob: -6.046482563018799
    9. '_le' → logprob: -6.671482563018799
    10. '_width' → logprob: -7.046482563018799

Token 736: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.002764698350802064
    2. 's' → logprob: -6.002764701843262
    3. '_nodes' → logprob: -8.877764701843262
    4. '_counts' → logprob: -10.127764701843262
    5. '_branch' → logprob: -10.627764701843262
    6. '=' → logprob: -10.627764701843262
    7. '_node' → logprob: -11.127764701843262
    8. '_' → logprob: -11.377764701843262
    9. ' =' → logprob: -11.502764701843262
    10. 'count' → logprob: -12.002764701843262

Token 737: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16028271615505219
    2. '=' → logprob: -1.9102827310562134
    3. ',' → logprob: -9.785283088684082
    4. 's' → logprob: -14.410283088684082
    5. ' ' → logprob: -14.410283088684082
    6. '   ' → logprob: -14.910283088684082
    7. ' ,' → logprob: -15.535283088684082
    8. '=int' → logprob: -16.160282135009766
    9. ' ' → logprob: -16.285282135009766
    10. '  ' → logprob: -16.660282135009766

Token 738: ' reduce' (ID: 10389)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.11398057639598846
    2. '1' → logprob: -2.238980531692505
    3. 'min' → logprob: -7.738980770111084
    4. ' reduce' → logprob: -7.863980770111084
    5. 'central' → logprob: -9.238980293273926
    6. 'max' → logprob: -9.738980293273926
    7. ' ' → logprob: -9.863980293273926
    8. 'float' → logprob: -10.488980293273926
    9. '0' → logprob: -10.488980293273926
    10. '
' → logprob: -11.238980293273926

Token 739: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.0015006985049694777
    2. '(lambda' → logprob: -7.126500606536865
    3. '(' → logprob: -7.376500606536865
    4. '(operator' → logprob: -9.751501083374023
    5. '(mu' → logprob: -12.251501083374023
    6. '(
' → logprob: -12.376501083374023
    7. 'mul' → logprob: -13.376501083374023
    8. ' (' → logprob: -14.376501083374023
    9. '```' → logprob: -15.001501083374023
    10. '<m' → logprob: -15.876501083374023

Token 740: 'ul' (ID: 361)
  Prédit: 'ul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ul' → logprob: -3.128163257315464e-07
    2. 'u' → logprob: -16.25
    3. '<ul' → logprob: -16.5
    4. 'ult' → logprob: -17.75
    5. 'mul' → logprob: -18.0
    6. ' ul' → logprob: -18.125
    7. 'ул' → logprob: -18.75
    8. 'l' → logprob: -19.25
    9. ' mul' → logprob: -19.25
    10. '   ' → logprob: -19.75

Token 741: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00023619852436240762
    2. '(lambda' → logprob: -8.625236511230469
    3. ' ,' → logprob: -11.125236511230469
    4. ',m' → logprob: -11.375236511230469
    5. ',int' → logprob: -12.000236511230469
    6. 'lambda' → logprob: -12.125236511230469
    7. '=lambda' → logprob: -12.750236511230469
    8. ',min' → logprob: -12.750236511230469
    9. '(operator' → logprob: -12.875236511230469
    10. '   ' → logprob: -13.125236511230469

Token 742: ' central' (ID: 11082)
  Prédit: 'central'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'central' → logprob: -4.127333340875339e-06
    2. ' central' → logprob: -12.500003814697266
    3. '(' → logprob: -15.500003814697266
    4. '[' → logprob: -15.625003814697266
    5. '.central' → logprob: -20.500003814697266
    6. 'Central' → logprob: -21.000003814697266
    7. 'centr' → logprob: -21.125003814697266
    8. 'current' → logprob: -21.500003814697266
    9. '-central' → logprob: -21.500003814697266
    10. '   ' → logprob: -21.750003814697266

Token 743: '_branch' (ID: 71162)
  Prédit: '_branch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_branch' → logprob: -0.0013654737267643213
    2. 'branch' → logprob: -6.626365661621094
    3. 'central' → logprob: -10.751365661621094
    4. '_c' → logprob: -11.001365661621094
    5. '(branch' → logprob: -15.126365661621094
    6. '[' → logprob: -15.251365661621094
    7. 'c' → logprob: -15.376365661621094
    8. '
' → logprob: -15.626365661621094
    9. '```' → logprob: -15.751365661621094
    10. ' branching' → logprob: -16.126365661621094

Token 744: 'ing' (ID: 289)
  Prédit: 'anch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'anch' → logprob: -0.04988503456115723
    2. 'ching' → logprob: -3.2998850345611572
    3. 'ing' → logprob: -4.799884796142578
    4. 'aching' → logprob: -6.299884796142578
    5. '_branch' → logprob: -8.049884796142578
    6. 'branch' → logprob: -8.049884796142578
    7. 'an' → logprob: -8.549884796142578
    8. 'ancing' → logprob: -8.549884796142578
    9. 'arching' → logprob: -8.799884796142578
    10. 'ch' → logprob: -8.924884796142578

Token 745: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5776069164276123
    2. ',' → logprob: -0.8276069164276123
    3. ' ,' → logprob: -6.952607154846191
    4. '[' → logprob: -8.202607154846191
    5. '(' → logprob: -8.702607154846191
    6. ' )' → logprob: -8.952607154846191
    7. ')
' → logprob: -9.952607154846191
    8. '[::-' → logprob: -10.577607154846191
    9. '   ' → logprob: -10.952607154846191
    10. '[:-' → logprob: -11.327607154846191

Token 746: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '   ' → logprob: -19.5
    4. '  ' → logprob: -21.0
    5. 'initial' → logprob: -21.375
    6. ')' → logprob: -21.5
    7. '`' → logprob: -21.75
    8. '
' → logprob: -22.125
    9. '```' → logprob: -22.375
    10. '۱' → logprob: -22.5

Token 747: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.750000953674316
    3. '   ' → logprob: -16.375
    4. '
' → logprob: -19.75
    5. '  ' → logprob: -19.875
    6. '       ' → logprob: -20.75
    7. '    ' → logprob: -20.875
    8. ')' → logprob: -21.125
    9. '     ' → logprob: -21.125
    10. '           ' → logprob: -21.375

Token 748: ')
' (ID: 446)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24712227284908295
    2. '
' → logprob: -1.7471222877502441
    3. ',' → logprob: -3.497122287750244
    4. ')' → logprob: -4.997122287750244
    5. '<|end|>' → logprob: -5.622122287750244
    6. '    
' → logprob: -5.997122287750244
    7. ')
' → logprob: -7.372122287750244
    8. ',
' → logprob: -7.872122287750244
    9. ' 
' → logprob: -8.747121810913086
    10. '  
' → logprob: -9.497121810913086

Token 749: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0001681405701674521
    2. ' return' → logprob: -9.000167846679688
    3. 'return' → logprob: -10.125167846679688
    4. '
' → logprob: -12.375167846679688
    5. '```' → logprob: -15.500167846679688
    6. '    
' → logprob: -16.625167846679688
    7. '	return' → logprob: -18.375167846679688
    8. '       ' → logprob: -19.250167846679688
    9. '  ' → logprob: -20.625167846679688
    10. '{return' → logprob: -20.750167846679688

Token 750: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013871637172996998
    2. 'return' → logprob: -4.763871669769287
    3. ' return' → logprob: -5.263871669769287
    4. '
' → logprob: -9.638871192932129
    5. '    
' → logprob: -13.513871192932129
    6. '```' → logprob: -14.388871192932129
    7. '	return' → logprob: -15.013871192932129
    8. ',' → logprob: -15.388871192932129
    9. '       ' → logprob: -16.263872146606445
    10. '  ' → logprob: -16.638872146606445

Token 751: ' neighbor' (ID: 13034)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -1.5209643840789795
    2. ' level' → logprob: -1.7709643840789795
    3. ' neighbor' → logprob: -1.7709643840789795
    4. 'neighbor' → logprob: -1.8959643840789795
    5. 'level' → logprob: -2.8959643840789795
    6. ' _' → logprob: -3.5209643840789795
    7. ' node' → logprob: -3.5209643840789795
    8. ' adjacent' → logprob: -3.7709643840789795
    9. '_' → logprob: -3.8959643840789795
    10. 'i' → logprob: -4.020964622497559

Token 752: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02056676335632801
    2. 'in' → logprob: -3.895566701889038
    3. ' ' → logprob: -11.270566940307617
    4. '	in' → logprob: -12.645566940307617
    5. '_in' → logprob: -13.020566940307617
    6. 'neighbor' → logprob: -13.145566940307617
    7. ',' → logprob: -13.645566940307617
    8. '_neighbor' → logprob: -13.770566940307617
    9. '   ' → logprob: -13.895566940307617
    10. '  ' → logprob: -14.520566940307617

Token 753: ' tree' (ID: 8165)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.00020413640595506877
    2. ' tree' → logprob: -8.500204086303711
    3. '(tree' → logprob: -15.375204086303711
    4. 'path' → logprob: -15.875204086303711
    5. '[' → logprob: -16.12520408630371
    6. '   ' → logprob: -16.37520408630371
    7. 'range' → logprob: -17.37520408630371
    8. '	tree' → logprob: -17.50020408630371
    9. ' ' → logprob: -18.12520408630371
    10. '[
' → logprob: -19.12520408630371

Token 754: '_ad' (ID: 23782)
  Prédit: '_ad'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ad' → logprob: -0.0022759849671274424
    2. '[' → logprob: -6.7522759437561035
    3. 'tree' → logprob: -6.8772759437561035
    4. '_adj' → logprob: -10.127276420593262
    5. '(tree' → logprob: -11.002276420593262
    6. 'adj' → logprob: -11.502276420593262
    7. 'ad' → logprob: -12.877276420593262
    8. '_tree' → logprob: -13.502276420593262
    9. ' tree' → logprob: -14.627276420593262
    10. '   ' → logprob: -14.627276420593262

Token 755: 'jac' (ID: 77250)
  Prédit: 'jac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jac' → logprob: -0.0003136552404612303
    2. 'acency' → logprob: -8.375313758850098
    3. 'j' → logprob: -9.625313758850098
    4. 'js' → logprob: -11.875313758850098
    5. ' adjacency' → logprob: -13.000313758850098
    6. 'jc' → logprob: -13.375313758850098
    7. 'adj' → logprob: -13.500313758850098
    8. '_adj' → logprob: -13.625313758850098
    9. '[' → logprob: -13.875313758850098
    10. '_j' → logprob: -14.750313758850098

Token 756: 'ency' (ID: 2799)
  Prédit: 'acency'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acency' → logprob: -0.07337534427642822
    2. '_lists' → logprob: -2.8233752250671387
    3. 'lists' → logprob: -5.073375225067139
    4. 'ency' → logprob: -5.948375225067139
    5. '_list' → logprob: -6.448375225067139
    6. 'list' → logprob: -8.448375701904297
    7. 'tree' → logprob: -8.948375701904297
    8. 'acy' → logprob: -9.073375701904297
    9. ' lists' → logprob: -9.698375701904297
    10. 's' → logprob: -9.948375701904297

Token 757: '_lists' (ID: 93609)
  Prédit: '_lists'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lists' → logprob: -0.006426052190363407
    2. '_ad' → logprob: -5.131425857543945
    3. '[' → logprob: -8.131425857543945
    4. 'tree' → logprob: -9.756425857543945
    5. 's' → logprob: -10.381425857543945
    6. 'lists' → logprob: -10.506425857543945
    7. '_adj' → logprob: -11.006425857543945
    8. '[node' → logprob: -11.256425857543945
    9. '```' → logprob: -12.006425857543945
    10. '_links' → logprob: -12.256425857543945

Token 758: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.6240566083070007e-06
    2. 'central' → logprob: -14.375001907348633
    3. '[
' → logprob: -14.625001907348633
    4. ' [' → logprob: -16.375001907348633
    5. '
' → logprob: -16.625001907348633
    6. '```' → logprob: -16.750001907348633
    7. ',' → logprob: -17.000001907348633
    8. 'def' → logprob: -17.000001907348633
    9. '   ' → logprob: -17.250001907348633
    10. '[current' → logprob: -17.375001907348633

Token 759: 'central' (ID: 79937)
  Prédit: 'central'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'central' → logprob: -0.0004521222144830972
    2. '[' → logprob: -7.750452041625977
    3. ' central' → logprob: -10.750452041625977
    4. '.central' → logprob: -16.875452041625977
    5. 'current' → logprob: -18.500452041625977
    6. '
' → logprob: -19.000452041625977
    7. '[current' → logprob: -19.750452041625977
    8. '[
' → logprob: -19.875452041625977
    9. ' централь' → logprob: -20.375452041625977
    10. '-central' → logprob: -20.375452041625977

Token 760: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.01293102651834488
    2. 'node' → logprob: -4.512930870056152
    3. 'central' → logprob: -7.387930870056152
    4. '[node' → logprob: -7.512930870056152
    5. '_nodes' → logprob: -8.887930870056152
    6. '_ad' → logprob: -9.387930870056152
    7. '[' → logprob: -9.512930870056152
    8. '_c' → logprob: -9.762930870056152
    9. ')' → logprob: -9.762930870056152
    10. '_branch' → logprob: -9.887930870056152

Token 761: ']:
' (ID: 22152)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5248045921325684
    2. ':' → logprob: -0.8998045921325684
    3. '):
' → logprob: -6.524804592132568
    4. '):' → logprob: -9.399805068969727
    5. '   ' → logprob: -9.524805068969727
    6. '():
' → logprob: -10.899805068969727
    7. '       ' → logprob: -10.899805068969727
    8. '[' → logprob: -12.274805068969727
    9. ':
' → logprob: -12.274805068969727
    10. ']:
' → logprob: -12.524805068969727

Token 762: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024192065000534058
    2. ':' → logprob: -4.149191856384277
    3. ':
' → logprob: -5.649191856384277
    4. ' if' → logprob: -5.899191856384277
    5. ',' → logprob: -7.149191856384277
    6. '   ' → logprob: -7.649191856384277
    7. '<|end|>' → logprob: -8.024191856384277
    8. '):
' → logprob: -9.524191856384277
    9. '[' → logprob: -10.399191856384277
    10. '        
' → logprob: -10.649191856384277

Token 763: ' neighbor' (ID: 13034)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13488516211509705
    2. ' if' → logprob: -2.25988507270813
    3. 'if' → logprob: -4.759885311126709
    4. '   ' → logprob: -5.134885311126709
    5. '           ' → logprob: -5.384885311126709
    6. ' minimal' → logprob: -7.384885311126709
    7. ' max' → logprob: -8.25988483428955
    8. ' leaf' → logprob: -8.50988483428955
    9. 'max' → logprob: -8.63488483428955
    10. ' pass' → logprob: -8.63488483428955

Token 764: '_to' (ID: 5089)
  Prédit: '_count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_count' → logprob: -1.0739080905914307
    2. '_branch' → logprob: -1.0739080905914307
    3. ' !=' → logprob: -1.9489080905914307
    4. '_depth' → logprob: -3.0739080905914307
    5. ',' → logprob: -3.3239080905914307
    6. '_counts' → logprob: -4.323907852172852
    7. '_degree' → logprob: -4.323907852172852
    8. 'count' → logprob: -4.573907852172852
    9. '_sub' → logprob: -4.698907852172852
    10. 'branch' → logprob: -4.823907852172852

Token 765: '_c' (ID: 1303)
  Prédit: 'central'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'central' → logprob: -1.1756691932678223
    2. 'neighbor' → logprob: -1.1756691932678223
    3. '_neighbor' → logprob: -2.5506691932678223
    4. 'parent' → logprob: -2.9256691932678223
    5. 'compute' → logprob: -3.6756691932678223
    6. 'calculate' → logprob: -4.175669193267822
    7. 'left' → logprob: -4.175669193267822
    8. 'if' → logprob: -4.425669193267822
    9. ' neighbor' → logprob: -4.550669193267822
    10. 'ne' → logprob: -4.675669193267822

Token 766: 'entral' (ID: 48026)
  Prédit: 'ount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ount' → logprob: -0.4041341543197632
    2. 'entral' → logprob: -1.2791341543197632
    3. 'om' → logprob: -3.2791342735290527
    4. 'ont' → logprob: -5.404134273529053
    5. 'central' → logprob: -5.779134273529053
    6. 'alculate' → logprob: -6.404134273529053
    7. 'urrent' → logprob: -6.529134273529053
    8. 'h' → logprob: -6.779134273529053
    9. 'on' → logprob: -6.904134273529053
    10. 'ontrol' → logprob: -7.529134273529053

Token 767: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0630820989608765
    2. '_branch' → logprob: -1.3130820989608765
    3. '=' → logprob: -1.9380820989608765
    4. ',' → logprob: -2.813082218170166
    5. '_count' → logprob: -3.313082218170166
    6. 'branch' → logprob: -3.688082218170166
    7. 'count' → logprob: -4.188082218170166
    8. '_distance' → logprob: -4.438082218170166
    9. 'distance' → logprob: -4.563082218170166
    10. ' ==' → logprob: -4.813082218170166

Token 768: ' compute' (ID: 23864)
  Prédit: 'central'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'central' → logprob: -0.8527575135231018
    2. 'compute' → logprob: -1.727757453918457
    3. 'len' → logprob: -2.352757453918457
    4. 'neighbor' → logprob: -2.727757453918457
    5. 'path' → logprob: -2.977757453918457
    6. '[' → logprob: -2.977757453918457
    7. 'tree' → logprob: -3.602757453918457
    8. '1' → logprob: -3.852757453918457
    9. 'parent' → logprob: -3.977757453918457
    10. '0' → logprob: -4.602757453918457

Token 769: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.001038883114233613
    2. 'max' → logprob: -6.876039028167725
    3. 'compute' → logprob: -12.751038551330566
    4. 'Max' → logprob: -13.251038551330566
    5. 'tree' → logprob: -14.001038551330566
    6. '_min' → logprob: -15.626038551330566
    7. 'branch' → logprob: -16.126039505004883
    8. '```' → logprob: -16.251039505004883
    9. '(tree' → logprob: -16.626039505004883
    10. 'maximum' → logprob: -17.126039505004883

Token 770: '_branch' (ID: 71162)
  Prédit: '_branch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_branch' → logprob: -0.08003838360309601
    2. '_max' → logprob: -2.58003830909729
    3. 'branch' → logprob: -7.080038547515869
    4. 'max' → logprob: -8.205038070678711
    5. '_br' → logprob: -11.955038070678711
    6. '```' → logprob: -11.955038070678711
    7. 'Branch' → logprob: -12.330038070678711
    8. '_parent' → logprob: -12.580038070678711
    9. '(branch' → logprob: -12.705038070678711
    10. '_min' → logprob: -12.705038070678711

Token 771: 'ing' (ID: 289)
  Prédit: 'ing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -0.0014407115522772074
    2. 'branch' → logprob: -7.376440525054932
    3. ' branching' → logprob: -8.37644100189209
    4. 'ancing' → logprob: -8.50144100189209
    5. 'anch' → logprob: -9.00144100189209
    6. 'ching' → logprob: -10.00144100189209
    7. '_branch' → logprob: -10.25144100189209
    8. 'inging' → logprob: -10.37644100189209
    9. 'aching' → logprob: -10.50144100189209
    10. 'oning' → logprob: -10.75144100189209

Token 772: '(tree' (ID: 44909)
  Prédit: '(tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tree' → logprob: -1.5690089639974758e-05
    2. '(' → logprob: -11.250015258789062
    3. '(
' → logprob: -12.875015258789062
    4. '(t' → logprob: -17.000015258789062
    5. ' (' → logprob: -17.125015258789062
    6. '(Tree' → logprob: -17.750015258789062
    7. '(tr' → logprob: -18.250015258789062
    8. '```' → logprob: -18.625015258789062
    9. ',' → logprob: -18.875015258789062
    10. '	tree' → logprob: -19.125015258789062

Token 773: '_ad' (ID: 23782)
  Prédit: '_ad'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ad' → logprob: -2.939851037808694e-05
    2. 'ad' → logprob: -11.375029563903809
    3. '_adj' → logprob: -12.250029563903809
    4. '_ac' → logprob: -12.500029563903809
    5. '[' → logprob: -13.000029563903809
    6. 'adj' → logprob: -13.250029563903809
    7. '(tree' → logprob: -13.500029563903809
    8. 'tree' → logprob: -14.125029563903809
    9. 'Ad' → logprob: -14.500029563903809
    10. 's' → logprob: -14.625029563903809

Token 774: 'jac' (ID: 77250)
  Prédit: '_ad'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_ad' → logprob: -0.3994416892528534
    2. 'acency' → logprob: -1.1494417190551758
    3. 'adj' → logprob: -5.524441719055176
    4. 'ency' → logprob: -5.649441719055176
    5. 'lists' → logprob: -5.899441719055176
    6. '_adj' → logprob: -7.024441719055176
    7. 'ancy' → logprob: -7.899441719055176
    8. ' adjacency' → logprob: -8.649441719055176
    9. 'list' → logprob: -9.024441719055176
    10. 'ad' → logprob: -9.274441719055176

Token 775: 'ency' (ID: 2799)
  Prédit: '_lists'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_lists' → logprob: -0.05871068313717842
    2. 'ists' → logprob: -2.9337105751037598
    3. 'lists' → logprob: -6.05871057510376
    4. 'ist' → logprob: -7.05871057510376
    5. 'sts' → logprob: -8.058711051940918
    6. 'st' → logprob: -9.308711051940918
    7. 's' → logprob: -9.683711051940918
    8. '   ' → logprob: -9.933711051940918
    9. 'al' → logprob: -10.933711051940918
    10. '_ad' → logprob: -11.558711051940918

Token 776: '_lists' (ID: 93609)
  Prédit: '_lists'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lists' → logprob: -0.00011927806917810813
    2. 'lists' → logprob: -9.37511920928955
    3. 's' → logprob: -11.12511920928955
    4. '(tree' → logprob: -11.75011920928955
    5. 'Lists' → logprob: -12.50011920928955
    6. 'tree' → logprob: -12.87511920928955
    7. 'ists' → logprob: -13.00011920928955
    8. '[' → logprob: -13.87511920928955
    9. 'ist' → logprob: -14.75011920928955
    10. '   ' → logprob: -15.12511920928955

Token 777: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6932770013809204
    2. '(tree' → logprob: -0.6932770013809204
    3. ',
' → logprob: -9.693277359008789
    4. '(' → logprob: -10.693277359008789
    5. ')' → logprob: -10.818277359008789
    6. '       ' → logprob: -12.318277359008789
    7. '[' → logprob: -12.568277359008789
    8. '   ' → logprob: -13.068277359008789
    9. '),' → logprob: -13.193277359008789
    10. '```' → logprob: -13.193277359008789

Token 778: ' neighbor' (ID: 13034)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.0011943945428356528
    2. ' tree' → logprob: -6.751194477081299
    3. 'neighbor' → logprob: -11.50119400024414
    4. 'number' → logprob: -12.12619400024414
    5. '(tree' → logprob: -12.12619400024414
    6. '	tree' → logprob: -14.00119400024414
    7. '   ' → logprob: -14.12619400024414
    8. 'central' → logprob: -14.87619400024414
    9. 'current' → logprob: -15.37619400024414
    10. '```' → logprob: -15.37619400024414

Token 779: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.4868770196917467e-05
    2. '       ' → logprob: -11.625024795532227
    3. '[' → logprob: -12.375024795532227
    4. '   ' → logprob: -12.750024795532227
    5. ' ,' → logprob: -12.750024795532227
    6. 'tree' → logprob: -13.000024795532227
    7. '(tree' → logprob: -13.125024795532227
    8. ',
' → logprob: -14.500024795532227
    9. '           ' → logprob: -15.625024795532227
    10. ',node' → logprob: -16.000024795532227

Token 780: ' central' (ID: 11082)
  Prédit: 'central'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'central' → logprob: -9.758300438988954e-05
    2. ' central' → logprob: -9.250097274780273
    3. 'current' → logprob: -13.750097274780273
    4. '.central' → logprob: -15.125097274780273
    5. '   ' → logprob: -17.125097274780273
    6. '       ' → logprob: -17.750097274780273
    7. '           ' → logprob: -18.500097274780273
    8. ',' → logprob: -19.250097274780273
    9. '
' → logprob: -19.375097274780273
    10. 'Central' → logprob: -19.500097274780273

Token 781: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -1.5332478142227046e-05
    2. 'node' → logprob: -11.500015258789062
    3. '_' → logprob: -13.875015258789062
    4. '_c' → logprob: -13.875015258789062
    5. '
' → logprob: -14.250015258789062
    6. 'central' → logprob: -15.000015258789062
    7. '   ' → logprob: -15.125015258789062
    8. '[node' → logprob: -15.250015258789062
    9. ')' → logprob: -15.375015258789062
    10. '```' → logprob: -15.625015258789062

Token 782: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3425219549390022e-05
    2. ' ,' → logprob: -11.87501335144043
    3. '           ' → logprob: -14.00001335144043
    4. ',len' → logprob: -14.25001335144043
    5. '<|end|>' → logprob: -14.37501335144043
    6. ')' → logprob: -14.50001335144043
    7. ',length' → logprob: -14.75001335144043
    8. ',None' → logprob: -15.00001335144043
    9. '   ' → logprob: -15.12501335144043
    10. '<|end|>' → logprob: -15.12501335144043

Token 783: ' half' (ID: 6375)
  Prédit: 'half'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'half' → logprob: -0.011050177738070488
    2. ' half' → logprob: -4.511050224304199
    3. '   ' → logprob: -13.7610502243042
    4. '
' → logprob: -14.6360502243042
    5. 'hal' → logprob: -14.6360502243042
    6. ' ' → logprob: -16.011049270629883
    7. '       ' → logprob: -16.386049270629883
    8. '           ' → logprob: -16.761049270629883
    9. '  ' → logprob: -17.511049270629883
    10. '_half' → logprob: -17.761049270629883

Token 784: '_path' (ID: 5558)
  Prédit: '_path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -4.4849443838757e-06
    2. '_length' → logprob: -12.375004768371582
    3. '```' → logprob: -16.750003814697266
    4. '   ' → logprob: -18.250003814697266
    5. 'path' → logprob: -18.625003814697266
    6. 'length' → logprob: -19.125003814697266
    7. '_depth' → logprob: -19.250003814697266
    8. '_branch' → logprob: -19.375003814697266
    9. '_PATH' → logprob: -20.625003814697266
    10. ')' → logprob: -20.625003814697266

Token 785: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -1.9266199160483666e-05
    2. 'length' → logprob: -10.875019073486328
    3. '   ' → logprob: -16.125019073486328
    4. 'ength' → logprob: -16.250019073486328
    5. '_path' → logprob: -16.375019073486328
    6. '```' → logprob: -18.750019073486328
    7. '_depth' → logprob: -19.000019073486328
    8. '_LENGTH' → logprob: -19.125019073486328
    9. 'th' → logprob: -19.500019073486328
    10. 'Length' → logprob: -19.625019073486328

Token 786: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6910111904144287
    2. ')
' → logprob: -1.0660111904144287
    3. ',' → logprob: -1.9410111904144287
    4. ')[' → logprob: -5.441011428833008
    5. '   ' → logprob: -5.566011428833008
    6. '<|end|>' → logprob: -6.816011428833008
    7. '       ' → logprob: -7.566011428833008
    8. '[' → logprob: -7.941011428833008
    9. '[::-' → logprob: -9.566011428833008
    10. '[:-' → logprob: -9.566011428833008

Token 787: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.27369970083236694
    2. '<|end|>' → logprob: -1.7736997604370117
    3. '
' → logprob: -3.0236997604370117
    4. ',' → logprob: -4.773699760437012
    5. ')' → logprob: -5.898699760437012
    6. '```' → logprob: -6.148699760437012
    7. '        
' → logprob: -6.523699760437012
    8. '   ' → logprob: -6.648699760437012
    9. '[' → logprob: -6.773699760437012
    10. '<|end|>' → logprob: -7.148699760437012

Token 788: ' central' (ID: 11082)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6659607887268066
    2. ' for' → logprob: -1.2909607887268066
    3. 'minimal' → logprob: -1.7909607887268066
    4. ' minimal' → logprob: -3.5409607887268066
    5. '   ' → logprob: -4.415960788726807
    6. '       ' → logprob: -6.415960788726807
    7. 'central' (adapté à ' central') → logprob: -6.915960788726807
    8. 'neighbor' → logprob: -8.415960311889648
    9. ' central' → logprob: -8.540960311889648
    10. 'max' → logprob: -8.915960311889648

Token 789: '_to' (ID: 5089)
  Prédit: '_branch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_branch' → logprob: -6.921253225300461e-05
    2. 'branch' → logprob: -10.125069618225098
    3. ' branching' → logprob: -12.875069618225098
    4. '_length' → logprob: -13.000069618225098
    5. '_depth' → logprob: -13.125069618225098
    6. '_to' → logprob: -13.125069618225098
    7. '_neighbor' → logprob: -13.500069618225098
    8. '_min' → logprob: -13.625069618225098
    9. '_max' → logprob: -13.625069618225098
    10. '_br' → logprob: -13.750069618225098

Token 790: '_neighbor' (ID: 177120)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.7012607455253601
    2. 'central' → logprob: -1.0762608051300049
    3. 'for' → logprob: -2.701260805130005
    4. '_branch' → logprob: -3.076260805130005
    5. 'branch' → logprob: -3.826260805130005
    6. 'max' → logprob: -4.576260566711426
    7. 'minimal' → logprob: -5.576260566711426
    8. '[' → logprob: -5.826260566711426
    9. 'left' → logprob: -6.826260566711426
    10. 'entral' → logprob: -6.951260566711426

Token 791: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6390787959098816
    2. ' =' → logprob: -0.7640787959098816
    3. '[' → logprob: -5.389078617095947
    4. '   ' → logprob: -7.264078617095947
    5. '[:]' → logprob: -8.139079093933105
    6. '[:-' → logprob: -8.389079093933105
    7. '[min' → logprob: -9.139079093933105
    8. '[-' → logprob: -9.389079093933105
    9. '=max' → logprob: -9.514079093933105
    10. '=[' → logprob: -9.639079093933105

Token 792: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.047599293291568756
    2. 'max' → logprob: -4.0475993156433105
    3. ' compute' → logprob: -4.5475993156433105
    4. '[' → logprob: -4.9225993156433105
    5. 'central' → logprob: -5.2975993156433105
    6. 'len' → logprob: -7.0475993156433105
    7. 'neighbor' → logprob: -7.1725993156433105
    8. 'minimal' → logprob: -7.2975993156433105
    9. '[left' → logprob: -7.4225993156433105
    10. '[min' → logprob: -7.5475993156433105

Token 793: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.003498507896438241
    2. 'compute' → logprob: -6.253498554229736
    3. 'max' → logprob: -6.503498554229736
    4. 'Max' → logprob: -9.628498077392578
    5. 'branch' → logprob: -13.503498077392578
    6. '_min' → logprob: -14.378498077392578
    7. 'tree' → logprob: -15.003498077392578
    8. 'solve' → logprob: -15.253498077392578
    9. '```' → logprob: -15.378498077392578
    10. '(com' → logprob: -15.753498077392578

Token 794: '_branch' (ID: 71162)
  Prédit: '_branch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_branch' → logprob: -0.0019410114036872983
    2. 'branch' → logprob: -6.251941204071045
    3. '(branch' → logprob: -13.001940727233887
    4. '_max' → logprob: -13.251940727233887
    5. 'Branch' → logprob: -13.251940727233887
    6. ' branching' → logprob: -13.251940727233887
    7. '_children' → logprob: -14.001940727233887
    8. '_child' → logprob: -14.126940727233887
    9. '_br' → logprob: -14.126940727233887
    10. 'max' → logprob: -14.251940727233887

Token 795: 'ing' (ID: 289)
  Prédit: 'ing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -0.020891139283776283
    2. 'branch' → logprob: -4.895891189575195
    3. '_branch' → logprob: -5.270891189575195
    4. 'ching' → logprob: -5.645891189575195
    5. '_lists' → logprob: -6.395891189575195
    6. 'ancing' → logprob: -7.895891189575195
    7. 'anch' → logprob: -8.020891189575195
    8. '[' → logprob: -8.395891189575195
    9. 'inging' → logprob: -8.395891189575195
    10. ' branching' → logprob: -8.645891189575195

Token 796: '(tree' (ID: 44909)
  Prédit: '(tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tree' → logprob: -1.9361264946837764e-07
    2. 'tree' → logprob: -16.375
    3. '(' → logprob: -17.625
    4. '(
' → logprob: -18.25
    5. '	tree' → logprob: -18.25
    6. '(Tree' → logprob: -20.25
    7. '```' → logprob: -20.875
    8. '<Tree' → logprob: -21.625
    9. ' tree' → logprob: -21.875
    10. '   ' → logprob: -21.875

Token 797: '_ad' (ID: 23782)
  Prédit: '_ad'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ad' → logprob: -0.0006265374249778688
    2. '(tree' → logprob: -8.000626564025879
    3. 'tree' → logprob: -8.750626564025879
    4. 'adj' → logprob: -9.625626564025879
    5. '_adj' → logprob: -10.125626564025879
    6. 'ad' → logprob: -11.250626564025879
    7. '[' → logprob: -11.875626564025879
    8. 'Ad' → logprob: -13.125626564025879
    9. '-ad' → logprob: -13.750626564025879
    10. '```' → logprob: -14.250626564025879

Token 798: 'jac' (ID: 77250)
  Prédit: '_ad'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ad' → logprob: -0.0008110555354505777
    2. 'adj' → logprob: -7.2508111000061035
    3. '_adj' → logprob: -10.375810623168945
    4. 'ad' → logprob: -10.500810623168945
    5. 'acency' → logprob: -11.125810623168945
    6. 'adic' → logprob: -11.500810623168945
    7. '_ac' → logprob: -12.000810623168945
    8. 'jac' → logprob: -13.125810623168945
    9. ' adjacency' → logprob: -13.250810623168945
    10. 'Ad' → logprob: -13.750810623168945

Token 799: 'ency' (ID: 2799)
  Prédit: '_lists'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_lists' → logprob: -0.015541430562734604
    2. '_ad' → logprob: -4.3905415534973145
    3. 'ist' → logprob: -6.5155415534973145
    4. 'lists' → logprob: -7.5155415534973145
    5. '_adj' → logprob: -8.515541076660156
    6. 'alist' → logprob: -9.015541076660156
    7. 'ed' → logprob: -9.015541076660156
    8. '[' → logprob: -9.015541076660156
    9. 'tree' → logprob: -9.765541076660156
    10. '_list' → logprob: -9.890541076660156

Token 800: '_lists' (ID: 93609)
  Prédit: '_lists'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lists' → logprob: -0.09953523427248001
    2. '(tree' → logprob: -2.4745352268218994
    3. '[' → logprob: -5.0995354652404785
    4. 'tree' → logprob: -5.4745354652404785
    5. '_ad' → logprob: -9.22453498840332
    6. 'lists' → logprob: -9.97453498840332
    7. '_list' → logprob: -10.47453498840332
    8. '```' → logprob: -10.72453498840332
    9. '_tree' → logprob: -11.34953498840332
    10. '	tree' → logprob: -11.59953498840332

Token 801: ',' (ID: 11)
  Prédit: '(tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tree' → logprob: -0.00019376569252926856
    2. ',' → logprob: -9.25019359588623
    3. '[' → logprob: -9.25019359588623
    4. '(
' → logprob: -15.25019359588623
    5. '   ' → logprob: -15.62519359588623
    6. 'tree' → logprob: -15.62519359588623
    7. '```' → logprob: -15.62519359588623
    8. ' (' → logprob: -15.75019359588623
    9. '	tree' → logprob: -16.125194549560547
    10. '(' → logprob: -16.125194549560547

Token 802: ' central' (ID: 11082)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tree' → logprob: -2.4987974029500037e-05
    2. ' tree' → logprob: -10.750024795532227
    3. '(tree' → logprob: -13.250024795532227
    4. '
' → logprob: -14.625024795532227
    5. '   ' → logprob: -14.875024795532227
    6. '	tree' → logprob: -14.875024795532227
    7. '```' → logprob: -16.125024795532227
    8. '.tree' → logprob: -16.250024795532227
    9. '       ' → logprob: -16.375024795532227
    10. ' ' → logprob: -16.750024795532227

Token 803: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.0003643058007583022
    2. 'node' → logprob: -8.000364303588867
    3. '[node' → logprob: -11.750364303588867
    4. ',node' → logprob: -12.125364303588867
    5. ',' → logprob: -12.250364303588867
    6. ' node' → logprob: -13.000364303588867
    7. '_branch' → logprob: -13.500364303588867
    8. '_,' → logprob: -13.875364303588867
    9. ')' → logprob: -14.000364303588867
    10. '
' → logprob: -14.375364303588867

Token 804: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.618001053633634e-05
    2. '(tree' → logprob: -11.375025749206543
    3. '[' → logprob: -12.000025749206543
    4. ',
' → logprob: -12.125025749206543
    5. ' ,' → logprob: -13.875025749206543
    6. '   ' → logprob: -14.125025749206543
    7. ',[' → logprob: -15.125025749206543
    8. 'tree' → logprob: -15.500025749206543
    9. ',node' → logprob: -15.750025749206543
    10. ',user' → logprob: -16.50002670288086

Token 805: ' neighbor' (ID: 13034)
  Prédit: 'neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -7.107425062713446e-06
    2. ' neighbor' → logprob: -11.875006675720215
    3. 'ne' → logprob: -16.37500762939453
    4. 'None' → logprob: -17.50000762939453
    5. 'nei' → logprob: -19.12500762939453
    6. ' ' → logprob: -19.25000762939453
    7. '   ' → logprob: -19.62500762939453
    8. '
' → logprob: -20.12500762939453
    9. 'friend' → logprob: -20.50000762939453
    10. 'next' → logprob: -20.62500762939453

Token 806: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.47495681833243e-05
    2. ' ,' → logprob: -11.000024795532227
    3. '[' → logprob: -13.000024795532227
    4. '   ' → logprob: -13.625024795532227
    5. ',
' → logprob: -14.000024795532227
    6. '           ' → logprob: -14.000024795532227
    7. '<|end|>' → logprob: -15.000024795532227
    8. '       ' → logprob: -15.125024795532227
    9. ')' → logprob: -15.250024795532227
    10. ' ' → logprob: -16.062524795532227

Token 807: ' half' (ID: 6375)
  Prédit: 'half'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'half' → logprob: -0.006569129880517721
    2. ' half' → logprob: -5.131568908691406
    3. 'neighbor' → logprob: -7.506568908691406
    4. 'central' → logprob: -10.381568908691406
    5. ' neighbor' → logprob: -10.881568908691406
    6. '   ' → logprob: -11.506568908691406
    7. 'hal' → logprob: -12.131568908691406
    8. ' ' → logprob: -12.506568908691406
    9. '1' → logprob: -12.631568908691406
    10. '(' → logprob: -12.881568908691406

Token 808: '_path' (ID: 5558)
  Prédit: '_path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -0.0001584850688232109
    2. '_length' → logprob: -8.875158309936523
    3. '_branch' → logprob: -11.250158309936523
    4. '_left' → logprob: -12.500158309936523
    5. '_depth' → logprob: -13.375158309936523
    6. '_right' → logprob: -15.125158309936523
    7. 'branch' → logprob: -18.125158309936523
    8. ')' → logprob: -18.375158309936523
    9. '_PATH' → logprob: -18.500158309936523
    10. '```' → logprob: -18.625158309936523

Token 809: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -8.41866585687967e-06
    2. '_left' → logprob: -12.000008583068848
    3. 'length' → logprob: -13.625008583068848
    4. '_right' → logprob: -15.000008583068848
    5. '_depth' → logprob: -15.000008583068848
    6. '_path' → logprob: -16.50000762939453
    7. 'Length' → logprob: -16.87500762939453
    8. '   ' → logprob: -16.87500762939453
    9. '```' → logprob: -17.75000762939453
    10. 'L' → logprob: -18.12500762939453

Token 810: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4281882047653198
    2. ',' → logprob: -1.3031882047653198
    3. ')
' → logprob: -2.8031883239746094
    4. '       ' → logprob: -4.678188323974609
    5. '<|end|>' → logprob: -5.428188323974609
    6. ',
' → logprob: -7.053188323974609
    7. '[' → logprob: -7.803188323974609
    8. '[::-' → logprob: -8.80318832397461
    9. ')[' → logprob: -8.92818832397461
    10. '
' → logprob: -8.92818832397461

Token 811: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 812: ' branching' (ID: 173776)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.36704349517822266
    2. ' if' → logprob: -2.2420434951782227
    3. 'for' → logprob: -2.4920434951782227
    4. ' minimal' → logprob: -2.7420434951782227
    5. '
' → logprob: -4.617043495178223
    6. 'if' → logprob: -4.742043495178223
    7. 'minimal' → logprob: -4.867043495178223
    8. 'max' → logprob: -5.367043495178223
    9. '       ' → logprob: -5.492043495178223
    10. ' max' → logprob: -5.492043495178223

Token 813: '_product' (ID: 21247)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5304540991783142
    2. '_count' → logprob: -1.655454158782959
    3. '_counts' → logprob: -2.280454158782959
    4. '_per' → logprob: -2.530454158782959
    5. '_at' → logprob: -4.655454158782959
    6. '=' → logprob: -4.905454158782959
    7. 's' → logprob: -5.030454158782959
    8. '_levels' → logprob: -5.780454158782959
    9. '_max' → logprob: -6.155454158782959
    10. '_sizes' → logprob: -6.405454158782959

Token 814: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0048235999420285225
    2. '=' → logprob: -5.379823684692383
    3. ' *=' → logprob: -8.879823684692383
    4. ' ' → logprob: -10.879823684692383
    5. '   ' → logprob: -11.004823684692383
    6. 's' → logprob: -11.629823684692383
    7. ',' → logprob: -11.629823684692383
    8. ' +=' → logprob: -12.504823684692383
    9. 'import' → logprob: -13.254823684692383
    10. '    ' → logprob: -14.004823684692383

Token 815: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04333028569817543
    2. 'reduce' → logprob: -3.543330192565918
    3. ' ' → logprob: -4.543330192565918
    4. 'min' → logprob: -6.793330192565918
    5. ' reduce' → logprob: -7.418330192565918
    6. 'max' → logprob: -7.668330192565918
    7. 'mul' → logprob: -8.543330192565918
    8. 'sum' → logprob: -9.293330192565918
    9. 'multiply' → logprob: -9.668330192565918
    10. 'minimal' → logprob: -9.793330192565918

Token 816: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05803397297859192
    2. 'reduce' → logprob: -3.0580339431762695
    3. 'min' → logprob: -5.3080339431762695
    4. 'max' → logprob: -5.6830339431762695
    5. 'mul' → logprob: -8.18303394317627
    6. 'prod' → logprob: -8.80803394317627
    7. '0' → logprob: -8.80803394317627
    8. 'sum' → logprob: -8.93303394317627
    9. 'multiply' → logprob: -9.18303394317627
    10. 'minimal' → logprob: -9.30803394317627

Token 817: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4298407733440399
    2. ' for' → logprob: -1.4298408031463623
    3. '=' → logprob: -3.0548408031463623
    4. ',' → logprob: -3.9298408031463623
    5. '<|end|>' → logprob: -4.179840564727783
    6. '       ' → logprob: -4.429840564727783
    7. '*' → logprob: -5.429840564727783
    8. '	for' → logprob: -6.054840564727783
    9. ' =' → logprob: -6.679840564727783
    10. '<|end|>' → logprob: -7.054840564727783

Token 818: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19098106026649475
    2. '<|end|>' → logprob: -1.9409810304641724
    3. ' for' → logprob: -3.940981149673462
    4. ',' → logprob: -5.815980911254883
    5. '<|end|>' → logprob: -6.065980911254883
    6. 'for' → logprob: -6.440980911254883
    7. '	for' → logprob: -7.190980911254883
    8. '	' → logprob: -7.565980911254883
    9. '        
' → logprob: -7.815980911254883
    10. '```' → logprob: -7.940980911254883

Token 819: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.35900792479515076
    2. 'for' (adapté à ' for') → logprob: -1.2340079545974731
    3. '       ' → logprob: -4.734007835388184
    4. '	for' → logprob: -6.484007835388184
    5. '<|end|>' → logprob: -9.859007835388184
    6. '```' → logprob: -10.359007835388184
    7. '	' → logprob: -10.984007835388184
    8. '\t' → logprob: -11.234007835388184
    9. '	       ' → logprob: -11.359007835388184
    10. '[' → logprob: -11.859007835388184

Token 820: ' nb' (ID: 28791)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -1.5097311735153198
    2. 'c' → logprob: -2.1347312927246094
    3. 'i' → logprob: -2.3847312927246094
    4. 'a' → logprob: -2.3847312927246094
    5. 'cb' → logprob: -2.3847312927246094
    6. 'l' → logprob: -2.3847312927246094
    7. 'level' → logprob: -2.5097312927246094
    8. 'b' → logprob: -3.2597312927246094
    9. 'neighbor' → logprob: -3.6347312927246094
    10. 'lvl' → logprob: -3.7597312927246094

Token 821: '_count' (ID: 7536)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7193336486816406
    2. '_count' → logprob: -1.4693336486816406
    3. '_nb' → logprob: -1.5943336486816406
    4. '_index' → logprob: -3.7193336486816406
    5. 'r' → logprob: -4.094333648681641
    6. '_idx' → logprob: -4.344333648681641
    7. '_level' → logprob: -4.844333648681641
    8. '_branch' → logprob: -5.594333648681641
    9. ',_' → logprob: -5.719333648681641
    10. 'count' → logprob: -6.094333648681641

Token 822: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1008576974272728
    2. ' in' → logprob: -2.600857734680176
    3. 'in' → logprob: -3.850857734680176
    4. ',count' → logprob: -8.725857734680176
    5. ',in' → logprob: -9.475857734680176
    6. ',
' → logprob: -10.100857734680176
    7. ' ,' → logprob: -10.225857734680176
    8. 'count' → logprob: -10.475857734680176
    9. ',n' → logprob: -10.600857734680176
    10. '_nb' → logprob: -11.350857734680176

Token 823: ' cn' (ID: 21545)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ct' → logprob: -0.03672592341899872
    2. 'cb' → logprob: -3.5367259979248047
    3. ' ct' → logprob: -5.161725997924805
    4. 'cn' → logprob: -8.036725997924805
    5. 'cnt' → logprob: -8.161725997924805
    6. 'cc' → logprob: -8.286725997924805
    7. ' cb' → logprob: -9.036725997924805
    8. 'ctr' → logprob: -9.036725997924805
    9. 'c' → logprob: -10.661725997924805
    10. 'nb' → logprob: -11.161725997924805

Token 824: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.08067729324102402
    2. ',' → logprob: -2.5806772708892822
    3. 'count' → logprob: -7.330677509307861
    4. ' in' → logprob: -7.455677509307861
    5. ',count' → logprob: -9.080677032470703
    6. ',_' → logprob: -9.330677032470703
    7. '_cnt' → logprob: -9.455677032470703
    8. ' ,' → logprob: -9.830677032470703
    9. '_nb' → logprob: -9.955677032470703
    10. '_counts' → logprob: -10.705677032470703

Token 825: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03281499072909355
    2. ',' → logprob: -3.9078149795532227
    3. 'in' → logprob: -4.407814979553223
    4. ' ,' → logprob: -11.907814979553223
    5. ',n' → logprob: -13.532814979553223
    6. '   ' → logprob: -14.032814979553223
    7. ',in' → logprob: -14.032814979553223
    8. ' ' → logprob: -14.407814979553223
    9. ',count' → logprob: -14.407814979553223
    10. ',
' → logprob: -14.407814979553223

Token 826: ' zip' (ID: 16216)
  Prédit: 'zip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zip' → logprob: -0.00043555660522542894
    2. ' zip' → logprob: -7.7504353523254395
    3. '(zip' → logprob: -13.125435829162598
    4. '```' → logprob: -13.500435829162598
    5. ' ' → logprob: -14.375435829162598
    6. '   ' → logprob: -14.500435829162598
    7. '  ' → logprob: -16.25043487548828
    8. 'nb' → logprob: -16.62543487548828
    9. '.zip' → logprob: -16.62543487548828
    10. '
' → logprob: -17.12543487548828

Token 827: '_long' (ID: 42288)
  Prédit: '(ne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ne' → logprob: -6.511406809295295e-06
    2. 'neighbor' → logprob: -12.500006675720215
    3. '(' → logprob: -13.625006675720215
    4. '_neighbor' → logprob: -15.000006675720215
    5. '_ne' → logprob: -15.250006675720215
    6. 'ne' → logprob: -15.250006675720215
    7. '(center' → logprob: -15.500006675720215
    8. '(
' → logprob: -16.0000057220459
    9. '(branch' → logprob: -16.1250057220459
    10. ' (' → logprob: -16.6250057220459

Token 828: 'est' (ID: 376)
  Prédit: 'est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.0010605561546981335
    2. 'erst' → logprob: -7.251060485839844
    3. 'ert' → logprob: -8.376060485839844
    4. '_long' → logprob: -9.626060485839844
    5. 'argest' → logprob: -11.251060485839844
    6. 'er' → logprob: -11.751060485839844
    7. 'long' → logprob: -12.251060485839844
    8. 'erset' → logprob: -12.251060485839844
    9. 'gest' → logprob: -12.876060485839844
    10. 'ester' → logprob: -13.001060485839844

Token 829: '(ne' (ID: 79401)
  Prédit: '(ne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ne' → logprob: -0.04406047612428665
    2. '(' → logprob: -3.169060468673706
    3. '(branch' → logprob: -7.044060707092285
    4. '(center' → logprob: -9.044060707092285
    5. '(nb' → logprob: -10.169060707092285
    6. '(n' → logprob: -12.044060707092285
    7. '(
' → logprob: -12.169060707092285
    8. '((' → logprob: -12.419060707092285
    9. ' (' → logprob: -12.419060707092285
    10. 'central' → logprob: -13.544060707092285

Token 830: 'ighbor' (ID: 28225)
  Prédit: 'ighbor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ighbor' → logprob: -0.0004228091274853796
    2. 'neighbor' → logprob: -8.250422477722168
    3. '_neighbor' → logprob: -9.250422477722168
    4. 'e' → logprob: -10.375422477722168
    5. 'ighborhood' → logprob: -11.250422477722168
    6. 'ighbors' → logprob: -11.875422477722168
    7. 'i' → logprob: -12.875422477722168
    8. 'igh' → logprob: -13.250422477722168
    9. 'ight' → logprob: -13.375422477722168
    10. 'ighbour' → logprob: -13.375422477722168

Token 831: '_to' (ID: 5089)
  Prédit: '_count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.1479053944349289
    2. '_to' → logprob: -2.3979053497314453
    3. ',' → logprob: -3.7729053497314453
    4. '_branch' → logprob: -4.272905349731445
    5. ',_' → logprob: -5.147905349731445
    6. '_counts' → logprob: -5.772905349731445
    7. ',count' → logprob: -8.147905349731445
    8. '_c' → logprob: -9.522905349731445
    9. 'count' → logprob: -9.522905349731445
    10. '_counter' → logprob: -9.647905349731445

Token 832: '_c' (ID: 1303)
  Prédit: 'central'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'central' → logprob: -0.010223357006907463
    2. '_c' → logprob: -4.635223388671875
    3. 'neighbor' → logprob: -7.760223388671875
    4. '```' → logprob: -11.385223388671875
    5. '_neighbor' → logprob: -12.260223388671875
    6. ' central' → logprob: -12.635223388671875
    7. 'center' → logprob: -12.885223388671875
    8. '.central' → logprob: -13.010223388671875
    9. 'cent' → logprob: -13.260223388671875
    10. '
' → logprob: -13.385223388671875

Token 833: 'entral' (ID: 48026)
  Prédit: 'entral'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entral' → logprob: -0.2243991494178772
    2. 'neighbor' → logprob: -2.2243990898132324
    3. 'central' → logprob: -2.4743990898132324
    4. 'enter' → logprob: -5.224399089813232
    5. 'ental' → logprob: -7.474399089813232
    6. '_neighbor' → logprob: -7.599399089813232
    7. 'n' → logprob: -8.09939956665039
    8. 'branch' → logprob: -8.22439956665039
    9. 'tree' → logprob: -8.22439956665039
    10. 'ent' → logprob: -8.72439956665039

Token 834: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.9054008084349334e-05
    2. ' ,' → logprob: -10.750039100646973
    3. ',
' → logprob: -11.750039100646973
    4. ',c' → logprob: -12.875039100646973
    5. '           ' → logprob: -13.375039100646973
    6. ',n' → logprob: -13.625039100646973
    7. '       ' → logprob: -14.000039100646973
    8. ',count' → logprob: -14.375039100646973
    9. ',user' → logprob: -14.750039100646973
    10. '   ' → logprob: -15.125039100646973

Token 835: ' central' (ID: 11082)
  Prédit: 'central'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'central' → logprob: -0.00407923199236393
    2. ' central' → logprob: -5.504079341888428
    3. '[' → logprob: -15.00407886505127
    4. '       ' → logprob: -15.62907886505127
    5. '.central' → logprob: -16.129079818725586
    6. 'center' → logprob: -16.754079818725586
    7. '           ' → logprob: -17.129079818725586
    8. 'cent' → logprob: -17.254079818725586
    9. '   ' → logprob: -18.879079818725586
    10. 'Central' → logprob: -19.379079818725586

Token 836: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.1272713989019394
    2. '_branch' → logprob: -2.1272714138031006
    3. 'to' → logprob: -8.62727165222168
    4. 'branch' → logprob: -8.87727165222168
    5. '_c' → logprob: -11.50227165222168
    6. '```' → logprob: -12.12727165222168
    7. '_node' → logprob: -13.37727165222168
    8. '_count' → logprob: -13.75227165222168
    9. '_neighbor' → logprob: -13.87727165222168
    10. 'To' → logprob: -14.00227165222168

Token 837: '_neighbor' (ID: 177120)
  Prédit: 'neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -0.004089678172022104
    2. '_neighbor' → logprob: -5.504089832305908
    3. '_ne' → logprob: -12.62908935546875
    4. 'right' → logprob: -13.12908935546875
    5. ' neighbor' → logprob: -13.25408935546875
    6. 'node' → logprob: -13.62908935546875
    7. '
' → logprob: -14.50408935546875
    8. 'ighbor' → logprob: -14.87908935546875
    9. 'branch' → logprob: -15.12908935546875
    10. '_c' → logprob: -15.12908935546875

Token 838: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013262155698612332
    2. '):
' → logprob: -9.75013256072998
    3. ' ,' → logprob: -10.25013256072998
    4. '           ' → logprob: -11.62513256072998
    5. ',
' → logprob: -11.62513256072998
    6. '):' → logprob: -12.00013256072998
    7. '[::-' → logprob: -13.12513256072998
    8. '       ' → logprob: -13.87513256072998
    9. ',count' → logprob: -14.00013256072998
    10. ',None' → logprob: -14.00013256072998

Token 839: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3701740801334381
    2. ',' → logprob: -1.2451740503311157
    3. ':' → logprob: -4.745173931121826
    4. ' with' → logprob: -6.120173931121826
    5. '```' → logprob: -6.245173931121826
    6. ' if' → logprob: -6.995173931121826
    7. '{' → logprob: -7.120173931121826
    8. '<|end|>' → logprob: -7.245173931121826
    9. ':
' → logprob: -7.370173931121826
    10. '(branch' → logprob: -7.495173931121826

Token 840: ' branching' (ID: 173776)
  Prédit: ' branching'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' branching' → logprob: -0.16455592215061188
    2. 'branch' → logprob: -1.9145559072494507
    3. ' if' → logprob: -6.28955602645874
    4. '(branch' → logprob: -6.53955602645874
    5. ' branch' → logprob: -7.66455602645874
    6. '           ' → logprob: -8.039555549621582
    7. 'if' → logprob: -9.539555549621582
    8. '            ' → logprob: -10.289555549621582
    9. ' nb' → logprob: -10.539555549621582
    10. '       ' → logprob: -10.914555549621582

Token 841: '_product' (ID: 21247)
  Prédit: '_product'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_product' → logprob: -0.00022928470571059734
    2. '_count' → logprob: -9.250228881835938
    3. '_factor' → logprob: -9.875228881835938
    4. '=' → logprob: -10.750228881835938
    5. 'product' → logprob: -11.000228881835938
    6. 'Product' → logprob: -11.375228881835938
    7. ' =' → logprob: -11.375228881835938
    8. '   ' → logprob: -11.750228881835938
    9. 'count' → logprob: -12.125228881835938
    10. '_multiplier' → logprob: -13.750228881835938

Token 842: ' *=' (ID: 25253)
  Prédit: '*='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*=' → logprob: -0.016672685742378235
    2. '=' → logprob: -4.266672611236572
    3. ' *=' → logprob: -6.016672611236572
    4. '*' → logprob: -10.26667308807373
    5. ' =' → logprob: -10.76667308807373
    6. '	' → logprob: -11.76667308807373
    7. ',' → logprob: -13.64167308807373
    8. '   ' → logprob: -13.76667308807373
    9. '```' → logprob: -14.01667308807373
    10. ' ' → logprob: -15.14167308807373

Token 843: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.02171328105032444
    2. ' max' → logprob: -4.3967132568359375
    3. '(max' → logprob: -4.7717132568359375
    4. 'nb' → logprob: -7.3967132568359375
    5. '(nb' → logprob: -10.146713256835938
    6. ' nb' → logprob: -11.021713256835938
    7. '(' → logprob: -11.271713256835938
    8. ' (' → logprob: -11.771713256835938
    9. '   ' → logprob: -13.021713256835938
    10. 'min' → logprob: -14.271713256835938

Token 844: '(nb' (ID: 127388)
  Prédit: '(nb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nb' → logprob: -1.5690089639974758e-05
    2. '(
' → logprob: -12.125015258789062
    3. '(' → logprob: -12.500015258789062
    4. '((' → logprob: -12.625015258789062
    5. 'nb' → logprob: -12.875015258789062
    6. '(n' → logprob: -14.750015258789062
    7. '_nb' → logprob: -16.125015258789062
    8. ' nb' → logprob: -16.875015258789062
    9. '	nb' → logprob: -17.125015258789062
    10. '(ns' → logprob: -17.750015258789062

Token 845: '_count' (ID: 7536)
  Prédit: '(nb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nb' → logprob: -0.2536884844303131
    2. 'nb' → logprob: -1.5036884546279907
    3. '_nb' → logprob: -6.878688335418701
    4. ' nb' → logprob: -7.628688335418701
    5. 'count' → logprob: -8.87868881225586
    6. '_count' → logprob: -10.37868881225586
    7. '	nb' → logprob: -11.00368881225586
    8. '(count' → logprob: -11.12868881225586
    9. '(' → logprob: -11.75368881225586
    10. '(n' → logprob: -12.25368881225586

Token 846: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14529980719089508
    2. ' or' → logprob: -2.1452999114990234
    3. ' if' → logprob: -4.020299911499023
    4. ' ,' → logprob: -8.645299911499023
    5. 'if' → logprob: -10.145299911499023
    6. 'or' → logprob: -10.645299911499023
    7. ',
' → logprob: -11.895299911499023
    8. ',n' → logprob: -12.520299911499023
    9. ',None' → logprob: -13.645299911499023
    10. '_or' → logprob: -14.145299911499023

Token 847: ' cn' (ID: 21545)
  Prédit: 'cn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cn' → logprob: -0.002475777640938759
    2. ' cn' → logprob: -6.002475738525391
    3. '1' → logprob: -16.12747573852539
    4. ' ' → logprob: -18.87747573852539
    5. '_cn' → logprob: -19.37747573852539
    6. '0' → logprob: -20.00247573852539
    7. '   ' → logprob: -20.12747573852539
    8. 'cnn' → logprob: -20.37747573852539
    9. '(' → logprob: -20.62747573852539
    10. '-cn' → logprob: -20.75247573852539

Token 848: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.0033788802102208138
    2. 'ount' → logprob: -5.753378868103027
    3. 'unt' → logprob: -9.378378868103027
    4. 'count' → logprob: -10.378378868103027
    5. 'Count' → logprob: -11.128378868103027
    6. '_cn' → logprob: -11.128378868103027
    7. '_cnt' → logprob: -11.378378868103027
    8. '1' → logprob: -11.503378868103027
    9. 'cn' → logprob: -11.503378868103027
    10. '   ' → logprob: -12.003378868103027

Token 849: ')
' (ID: 446)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6169553399085999
    2. ',' → logprob: -1.491955280303955
    3. ')' → logprob: -1.616955280303955
    4. ' or' → logprob: -3.366955280303955
    5. 'if' → logprob: -6.866955280303955
    6. ')
' → logprob: -7.116955280303955
    7. '```' → logprob: -8.616955757141113
    8. 'or' → logprob: -9.616955757141113
    9. ' ,' → logprob: -9.616955757141113
    10. '           ' → logprob: -9.866955757141113

Token 850: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06938648968935013
    2. '```' → logprob: -3.0693864822387695
    3. '           ' → logprob: -4.6943864822387695
    4. '        
' → logprob: -5.4443864822387695
    5. '<|end|>' → logprob: -6.4443864822387695
    6. '[' → logprob: -6.6943864822387695
    7. '``' → logprob: -7.1943864822387695
    8. '    
' → logprob: -7.3193864822387695
    9. ',' → logprob: -7.6943864822387695
    10. '            
' → logprob: -7.9443864822387695

Token 851: ' minimal' (ID: 19957)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -1.1093388795852661
    2. 'if' → logprob: -1.4843388795852661
    3. ' if' → logprob: -1.4843388795852661
    4. '   ' → logprob: -2.4843387603759766
    5. '```' → logprob: -2.4843387603759766
    6. ' return' → logprob: -3.7343387603759766
    7. '       ' → logprob: -3.9843387603759766
    8. '
' → logprob: -5.234338760375977
    9. 'total' → logprob: -7.234338760375977
    10. '           ' → logprob: -7.484338760375977

Token 852: '_leaf' (ID: 96627)
  Prédit: '_leaf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_leaf' → logprob: -0.00014573395310435444
    2. '_count' → logprob: -9.62514591217041
    3. '_branch' → logprob: -9.87514591217041
    4. 'leaf' → logprob: -11.25014591217041
    5. '```' → logprob: -12.12514591217041
    6. '_product' → logprob: -12.87514591217041
    7. '_leave' → logprob: -13.37514591217041
    8. 'count' → logprob: -13.87514591217041
    9. '_le' → logprob: -14.00014591217041
    10. '   ' → logprob: -14.12514591217041

Token 853: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -6.670925358776003e-05
    2. '_product' → logprob: -9.750066757202148
    3. 'count' → logprob: -11.875066757202148
    4. '   ' → logprob: -14.500066757202148
    5. 's' → logprob: -15.750066757202148
    6. '=' → logprob: -15.750066757202148
    7. '```' → logprob: -16.00006675720215
    8. '\' → logprob: -16.87506675720215
    9. '_counts' → logprob: -17.00006675720215
    10. ' count' → logprob: -17.12506675720215

Token 854: ' =' (ID: 314)
  Prédit: '*='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*=' → logprob: -0.36165452003479004
    2. '=' → logprob: -1.73665452003479
    3. ' *=' → logprob: -2.61165452003479
    4. '   ' → logprob: -3.98665452003479
    5. '+=' → logprob: -4.361654281616211
    6. ',' → logprob: -4.986654281616211
    7. '       ' → logprob: -5.111654281616211
    8. ' +=' → logprob: -5.611654281616211
    9. '```' → logprob: -6.611654281616211
    10. ' =' → logprob: -7.361654281616211

Token 855: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.014304179698228836
    2. ' min' → logprob: -4.264304161071777
    3. 'max' → logprob: -8.889304161071777
    4. ' max' → logprob: -13.764304161071777
    5. 'minimal' → logprob: -13.889304161071777
    6. '	min' → logprob: -14.889304161071777
    7. '(min' → logprob: -15.389304161071777
    8. '=min' → logprob: -15.764304161071777
    9. 'minimum' → logprob: -16.889305114746094
    10. ' minimal' → logprob: -17.139305114746094

Token 856: '(min' (ID: 26035)
  Prédit: '(min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -2.1008713702030946e-06
    2. '(' → logprob: -13.375001907348633
    3. '(
' → logprob: -14.875001907348633
    4. 'minimal' → logprob: -15.625001907348633
    5. '(max' → logprob: -18.000001907348633
    6. ',min' → logprob: -19.375001907348633
    7. 'min' → logprob: -19.375001907348633
    8. '(m' → logprob: -19.750001907348633
    9. '=min' → logprob: -20.125001907348633
    10. ' (' → logprob: -20.375001907348633

Token 857: 'imal' (ID: 3882)
  Prédit: '(min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.0023457997012883425
    2. '(
' → logprob: -6.252345561981201
    3. '(' → logprob: -8.25234603881836
    4. 'minimal' → logprob: -9.37734603881836
    5. '_' → logprob: -10.37734603881836
    6. 'imal' → logprob: -10.87734603881836
    7. '```' → logprob: -12.37734603881836
    8. 'min' → logprob: -12.37734603881836
    9. '_(' → logprob: -12.50234603881836
    10. '(branch' → logprob: -12.87734603881836

Token 858: '_leaf' (ID: 96627)
  Prédit: '_leaf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_leaf' → logprob: -0.0005664954078383744
    2. '_branch' → logprob: -7.500566482543945
    3. '_count' → logprob: -11.875566482543945
    4. 'leaf' → logprob: -13.125566482543945
    5. 'e' → logprob: -13.625566482543945
    6. 'count' → logprob: -14.500566482543945
    7. '(_' → logprob: -14.500566482543945
    8. '_le' → logprob: -14.625566482543945
    9. '(min' → logprob: -15.125566482543945
    10. '_leave' → logprob: -15.125566482543945

Token 859: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -9.85366350505501e-05
    2. 'count' → logprob: -10.00009822845459
    3. 'minimal' → logprob: -10.62509822845459
    4. '_leaf' → logprob: -11.25009822845459
    5. '_branch' → logprob: -11.87509822845459
    6. '_product' → logprob: -13.37509822845459
    7. '_' → logprob: -13.50009822845459
    8. '```' → logprob: -13.62509822845459
    9. '_min' → logprob: -14.12509822845459
    10. '   ' → logprob: -14.12509822845459

Token 860: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.9292415749514475e-05
    2. ',min' → logprob: -10.375039100646973
    3. ',
' → logprob: -12.625039100646973
    4. ' ,' → logprob: -12.625039100646973
    5. '       ' → logprob: -14.375039100646973
    6. ',total' → logprob: -15.375039100646973
    7. '(branch' → logprob: -15.625039100646973
    8. ',m' → logprob: -15.750039100646973
    9. '   ' → logprob: -16.37504005432129
    10. '           ' → logprob: -16.75004005432129

Token 861: ' branching' (ID: 173776)
  Prédit: 'branch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'branch' → logprob: -0.01816597953438759
    2. ' branching' → logprob: -4.0181660652160645
    3. ' branch' → logprob: -11.268165588378906
    4. 'central' → logprob: -13.518165588378906
    5. 'minimal' → logprob: -13.768165588378906
    6. '   ' → logprob: -15.143165588378906
    7. '       ' → logprob: -15.643165588378906
    8. '(branch' → logprob: -16.143165588378906
    9. ' minimal' → logprob: -16.268165588378906
    10. '_branch' → logprob: -16.643165588378906

Token 862: '_product' (ID: 21247)
  Prédit: '_product'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_product' → logprob: -0.0021905910689383745
    2. '_count' → logprob: -6.127190589904785
    3. 'count' → logprob: -13.377190589904785
    4. 'Product' → logprob: -13.877190589904785
    5. 'product' → logprob: -14.127190589904785
    6. '_' → logprob: -14.877190589904785
    7. '   ' → logprob: -15.002190589904785
    8. '*_' → logprob: -15.252190589904785
    9. '*' → logprob: -15.502190589904785
    10. '\' → logprob: -15.627190589904785

Token 863: ' *' (ID: 425)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.58695387840271
    2. '
' → logprob: -1.46195387840271
    3. '    
' → logprob: -1.58695387840271
    4. '<|end|>' → logprob: -5.211954116821289
    5. ')' → logprob: -6.836954116821289
    6. '  
' → logprob: -7.836954116821289
    7. '        
' → logprob: -8.086954116821289
    8. ')
' → logprob: -9.336954116821289
    9. ' return' → logprob: -9.586954116821289
    10. '```' → logprob: -9.836954116821289

Token 864: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0021979559678584337
    2. '1' → logprob: -6.252197742462158
    3. ' ' → logprob: -8.752198219299316
    4. '
' → logprob: -10.127198219299316
    5. '(' → logprob: -11.252198219299316
    6. 'tree' → logprob: -11.627198219299316
    7. '```' → logprob: -11.877198219299316
    8. '   ' → logprob: -12.252198219299316
    9. '-' → logprob: -12.252198219299316
    10. '  ' → logprob: -12.752198219299316

Token 865: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0003763343847822398
    2. '1' → logprob: -8.12537670135498
    3. ' ' → logprob: -10.62537670135498
    4. 'number' → logprob: -11.50037670135498
    5. 'len' → logprob: -11.50037670135498
    6. '(' → logprob: -11.62537670135498
    7. 'tree' → logprob: -11.87537670135498
    8. '
' → logprob: -12.12537670135498
    9. '(tree' → logprob: -13.50037670135498
    10. '((' → logprob: -13.62537670135498

Token 866: ')
' (ID: 446)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19818057119846344
    2. '
' → logprob: -1.8231805562973022
    3. ')' → logprob: -4.948180675506592
    4. '    
' → logprob: -4.948180675506592
    5. '<|end|>' → logprob: -5.823180675506592
    6. ')
' → logprob: -6.948180675506592
    7. '  
' → logprob: -10.073180198669434
    8. '        
' → logprob: -10.323180198669434
    9. '       ' → logprob: -11.073180198669434
    10. '<|end|>' → logprob: -11.323180198669434

Token 867: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012545322999358177
    2. '
' → logprob: -4.637545108795166
    3. '    
' → logprob: -6.637545108795166
    4. '```' → logprob: -6.637545108795166
    5. 'return' → logprob: -9.262545585632324
    6. ' return' → logprob: -10.262545585632324
    7. '  
' → logprob: -11.012545585632324
    8. '<|end|>' → logprob: -11.887545585632324
    9. '	return' → logprob: -13.012545585632324
    10. ' 
' → logprob: -13.262545585632324

Token 868: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12319649755954742
    2. '
' → logprob: -2.373196601867676
    3. 'return' (adapté à ' return') → logprob: -4.248196601867676
    4. '```' → logprob: -5.498196601867676
    5. ' return' → logprob: -5.998196601867676
    6. '    
' → logprob: -6.373196601867676
    7. '	return' → logprob: -9.373196601867676
    8. '  
' → logprob: -11.123196601867676
    9. '<|end|>' → logprob: -11.248196601867676
    10. '``' → logprob: -11.748196601867676

Token 869: ' len' (ID: 4631)
  Prédit: 'half'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'half' → logprob: -0.1439248025417328
    2. ' half' → logprob: -2.0189247131347656
    3. '(' → logprob: -7.143924713134766
    4. ' (' → logprob: -8.268924713134766
    5. 'hal' → logprob: -9.143924713134766
    6. 'len' → logprob: -10.268924713134766
    7. ' len' → logprob: -10.518924713134766
    8. '(len' → logprob: -11.518924713134766
    9. '(h' → logprob: -11.893924713134766
    10. '   ' → logprob: -12.268924713134766

Token 870: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00020056030189152807
    2. '(path' → logprob: -8.875200271606445
    3. 'central' → logprob: -10.125200271606445
    4. '(center' → logprob: -11.875200271606445
    5. '(left' → logprob: -12.125200271606445
    6. '(branch' → logprob: -12.125200271606445
    7. '_' → logprob: -13.750200271606445
    8. 'path' → logprob: -14.375200271606445
    9. '_path' → logprob: -14.875200271606445
    10. '_(' → logprob: -15.375200271606445

Token 871: 'central' (ID: 79937)
  Prédit: 'central'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'central' → logprob: -7.576873758807778e-05
    2. '(' → logprob: -9.500075340270996
    3. ' central' → logprob: -14.250075340270996
    4. 'centr' → logprob: -16.000076293945312
    5. 'cent' → logprob: -18.250076293945312
    6. 'path' → logprob: -18.500076293945312
    7. 'Central' → logprob: -18.750076293945312
    8. 'branch' → logprob: -19.000076293945312
    9. 'center' → logprob: -19.375076293945312
    10. '.central' → logprob: -19.375076293945312

Token 872: '_branch' (ID: 71162)
  Prédit: '_branch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_branch' → logprob: -2.2246291337069124e-05
    2. 'branch' → logprob: -10.875021934509277
    3. '_node' → logprob: -12.875021934509277
    4. '_to' → logprob: -14.500021934509277
    5. '(branch' → logprob: -16.625022888183594
    6. 'Branch' → logprob: -17.625022888183594
    7. '_br' → logprob: -17.750022888183594
    8. '_bridge' → logprob: -18.000022888183594
    9. ')' → logprob: -18.125022888183594
    10. '_' → logprob: -18.125022888183594

Token 873: 'ing' (ID: 289)
  Prédit: 'ing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -0.013207881711423397
    2. '_length' → logprob: -4.888207912445068
    3. 'ching' → logprob: -5.263207912445068
    4. 'anch' → logprob: -8.26320743560791
    5. 'inging' → logprob: -9.51320743560791
    6. 'ging' → logprob: -10.88820743560791
    7. 'aching' → logprob: -11.76320743560791
    8. '   ' → logprob: -11.76320743560791
    9. 'length' → logprob: -12.01320743560791
    10. 'ancing' → logprob: -12.13820743560791

Token 874: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -2.963691804325208e-05
    2. ' ,' → logprob: -10.500029563903809
    3. '   ' → logprob: -13.625029563903809
    4. ',
' → logprob: -14.875029563903809
    5. '(),' → logprob: -15.250029563903809
    6. '‌,' → logprob: -16.375030517578125
    7. ',len' → logprob: -16.750030517578125
    8. ',min' → logprob: -17.250030517578125
    9. ' -' → logprob: -17.875030517578125
    10. '  ' → logprob: -17.875030517578125

Token 875: ' minimal' (ID: 19957)
  Prédit: 'minimal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'minimal' → logprob: -0.0019388694781810045
    2. ' minimal' → logprob: -6.251938819885254
    3. 'min' → logprob: -11.501938819885254
    4. 'minimum' → logprob: -16.50193977355957
    5. ' min' → logprob: -21.12693977355957
    6. 'Minimal' → logprob: -22.00193977355957
    7. ' миним' → logprob: -22.00193977355957
    8. '_min' → logprob: -22.12693977355957
    9. '
' → logprob: -22.75193977355957
    10. '```' → logprob: -23.12693977355957

Token 876: '_leaf' (ID: 96627)
  Prédit: '_leaf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_leaf' → logprob: -5.080963092041202e-06
    2. '_branch' → logprob: -12.375004768371582
    3. 'leaf' → logprob: -15.125004768371582
    4. '_leave' → logprob: -15.750004768371582
    5. '
' → logprob: -16.0000057220459
    6. '```' → logprob: -16.6250057220459
    7. ' _' → logprob: -16.7500057220459
    8. '_le' → logprob: -17.3750057220459
    9. '_count' → logprob: -18.0000057220459
    10. 'Leaf' → logprob: -18.2500057220459

Token 877: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -3.8889261304575484e-06
    2. 'count' → logprob: -12.750003814697266
    3. '_c' → logprob: -15.250003814697266
    4. '_' → logprob: -15.375003814697266
    5. '_counts' → logprob: -15.875003814697266
    6. ' _' → logprob: -16.250003814697266
    7. '   ' → logprob: -16.750003814697266
    8. '```' → logprob: -16.875003814697266
    9. '\' → logprob: -17.375003814697266
    10. '__' → logprob: -17.500003814697266

Token 878: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 879: 'number' (ID: 8096)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 880: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -0.0007363698096014559
    2. '_' → logprob: -7.250736236572266
    3. 'of' → logprob: -11.750736236572266
    4. '_o' → logprob: -11.875736236572266
    5. 's' → logprob: -12.375736236572266
    6. ' =' → logprob: -13.000736236572266
    7. '_s' → logprob: -13.500736236572266
    8. ' of' → logprob: -13.625736236572266
    9. 'Of' → logprob: -14.750736236572266
    10. '_OF' → logprob: -14.750736236572266

Token 881: '_nodes' (ID: 34593)
  Prédit: '_nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -6.182190554682165e-05
    2. '_' → logprob: -9.875061988830566
    3. '_tokens' → logprob: -12.250061988830566
    4. '_n' → logprob: -12.750061988830566
    5. '_neighbors' → logprob: -15.000061988830566
    6. '_users' → logprob: -15.125061988830566
    7. ' _' → logprob: -15.375061988830566
    8. '_children' → logprob: -15.500061988830566
    9. '_inputs' → logprob: -15.625061988830566
    10. 'nodes' → logprob: -15.875061988830566

Token 882: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8879483342170715
    2. '<|end|>' → logprob: -1.0129482746124268
    3. '=' → logprob: -2.3879482746124268
    4. ' ' → logprob: -2.6379482746124268
    5. ',' → logprob: -2.8879482746124268
    6. ')' → logprob: -6.012948513031006
    7. '  ' → logprob: -6.887948513031006
    8. ' ,' → logprob: -7.137948513031006
    9. '<|end|>' → logprob: -7.137948513031006
    10. '[' → logprob: -8.137948036193848

Token 883: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00012439649435691535
    2. ' int' → logprob: -9.000123977661133
    3. '[int' → logprob: -15.250123977661133
    4. 'len' → logprob: -15.625123977661133
    5. '<int' → logprob: -16.125123977661133
    6. '(int' → logprob: -16.250123977661133
    7. '10' → logprob: -16.625123977661133
    8. '=int' → logprob: -17.000123977661133
    9. ' ' → logprob: -17.250123977661133
    10. '5' → logprob: -17.375123977661133

Token 884: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.030178193002939224
    2. '(' → logprob: -3.5301783084869385
    3. 'input' → logprob: -7.780178070068359
    4. '()' → logprob: -12.40517807006836
    5. '(
' → logprob: -12.90517807006836
    6. ' (' → logprob: -13.53017807006836
    7. '('' → logprob: -13.78017807006836
    8. '("' → logprob: -14.65517807006836
    9. '=input' → logprob: -15.90517807006836
    10. ' input' → logprob: -16.03017807006836

Token 885: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0015641386853531003
    2. '()' → logprob: -6.501564025878906
    3. '())
' → logprob: -10.501564025878906
    4. '(' → logprob: -10.626564025878906
    5. '().' → logprob: -11.751564025878906
    6. ' ())' → logprob: -14.126564025878906
    7. ')' → logprob: -14.751564025878906
    8. '(),' → logprob: -15.501564025878906
    9. '()),' → logprob: -15.501564025878906
    10. '()
' → logprob: -15.626564025878906

Token 886: 'tree' (ID: 19816)
  Prédit: 'tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -1.759734732331708e-05
    2. ' tree' → logprob: -12.500017166137695
    3. '
' → logprob: -12.625017166137695
    4. 'trees' → logprob: -12.875017166137695
    5. '```' → logprob: -13.000017166137695
    6. 'for' → logprob: -13.000017166137695
    7. '	tree' → logprob: -13.875017166137695
    8. 'graph' → logprob: -14.000017166137695
    9. 'edges' → logprob: -14.750017166137695
    10. '_tree' → logprob: -15.375017166137695

Token 887: '_ad' (ID: 23782)
  Prédit: '_ad'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ad' → logprob: -0.00010533124441280961
    2. '_adj' → logprob: -9.250104904174805
    3. '_' → logprob: -12.375104904174805
    4. ' =' → logprob: -12.875104904174805
    5. '=' → logprob: -13.875104904174805
    6. '=_' → logprob: -15.250104904174805
    7. 'adj' → logprob: -15.625104904174805
    8. '_edges' → logprob: -15.625104904174805
    9. '_lists' → logprob: -15.750104904174805
    10. '```' → logprob: -16.375104904174805

Token 888: 'jac' (ID: 77250)
  Prédit: 'jac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jac' → logprob: -4.203409844194539e-05
    2. 'acency' → logprob: -10.250041961669922
    3. 'j' → logprob: -12.125041961669922
    4. 'Jac' → logprob: -14.125041961669922
    5. ' jac' → logprob: -15.500041961669922
    6. 'jc' → logprob: -16.500041961669922
    7. ' adjacency' → logprob: -16.750041961669922
    8. '_list' → logprob: -18.125041961669922
    9. '_j' → logprob: -18.125041961669922
    10. 'ja' → logprob: -19.125041961669922

Token 889: 'ency' (ID: 2799)
  Prédit: 'ency'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ency' → logprob: -3.762356209335849e-05
    2. '
' → logprob: -12.25003719329834
    3. 'ENCY' → logprob: -12.25003719329834
    4. '```' → logprob: -12.25003719329834
    5. '_' → logprob: -12.62503719329834
    6. '_list' → logprob: -13.00003719329834
    7. '#' → logprob: -13.25003719329834
    8. 'encv' → logprob: -13.25003719329834
    9. 'n' → logprob: -13.62503719329834
    10. 'acency' → logprob: -13.62503719329834

Token 890: '_lists' (ID: 93609)
  Prédit: '_lists'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lists' → logprob: -0.00015062130114529282
    2. '_list' → logprob: -9.125150680541992
    3. 'lists' → logprob: -11.125150680541992
    4. ' =' → logprob: -11.125150680541992
    5. 'list' → logprob: -11.875150680541992
    6. '=' → logprob: -13.500150680541992
    7. 'Lists' → logprob: -14.375150680541992
    8. 's' → logprob: -14.500150680541992
    9. '[' → logprob: -14.625150680541992
    10. '=[]' → logprob: -14.750150680541992

Token 891: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16022859513759613
    2. ' =' → logprob: -1.9102286100387573
    3. '=[]' → logprob: -12.910228729248047
    4. '[' → logprob: -14.035228729248047
    5. '[]' → logprob: -14.785228729248047
    6. '＝' → logprob: -15.285228729248047
    7. '=[' → logprob: -15.410228729248047
    8. ' =[' → logprob: -16.160228729248047
    9. '[:]' → logprob: -16.660228729248047
    10. ' ' → logprob: -17.035228729248047

Token 892: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -8.423219696851447e-05
    2. ' [[]' → logprob: -9.500083923339844
    3. '[
' → logprob: -12.000083923339844
    4. '[int' → logprob: -14.250083923339844
    5. '[]
' → logprob: -14.500083923339844
    6. '[]' → logprob: -14.625083923339844
    7. '[[' → logprob: -14.625083923339844
    8. '[List' → logprob: -15.250083923339844
    9. '{' → logprob: -15.625083923339844
    10. '[array' → logprob: -16.125083923339844

Token 893: 'set' (ID: 977)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.00011474833445390686
    2. 'list' → logprob: -9.250114440917969
    3. '[]
' → logprob: -11.000114440917969
    4. ' []' → logprob: -13.750114440917969
    5. '[]

' → logprob: -14.750114440917969
    6. '[list' → logprob: -15.750114440917969
    7. '[' → logprob: -15.875114440917969
    8. '[]}' → logprob: -17.25011444091797
    9. '[]"' → logprob: -18.00011444091797
    10. 'set' → logprob: -18.12511444091797

Token 894: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -9.519893501419574e-05
    2. '()]' → logprob: -9.50009536743164
    3. '()
' → logprob: -11.25009536743164
    4. '([]' → logprob: -12.62509536743164
    5. '(map' → logprob: -12.87509536743164
    6. ' ()' → logprob: -15.12509536743164
    7. '()=>' → logprob: -15.37509536743164
    8. '()

' → logprob: -15.62509536743164
    9. '[]' → logprob: -16.12509536743164
    10. '(' → logprob: -16.50009536743164

Token 895: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.02706497348845005
    2. 'for' → logprob: -3.7770650386810303
    3. ' for' → logprob: -6.152064800262451
    4. '(range' → logprob: -6.652064800262451
    5. '(' → logprob: -8.65206527709961
    6. ')' → logprob: -9.02706527709961
    7. '()]' → logprob: -10.02706527709961
    8. '())' → logprob: -11.15206527709961
    9. ']' → logprob: -11.65206527709961
    10. '()
' → logprob: -12.52706527709961

Token 896: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -2.2200749754119897e-06
    2. ' _' → logprob: -13.375001907348633
    3. '_range' → logprob: -15.250001907348633
    4. ' range' → logprob: -15.625001907348633
    5. '_
' → logprob: -16.375001907348633
    6. 'range' → logprob: -16.625001907348633
    7. ' in' → logprob: -17.125001907348633
    8. '_in' → logprob: -17.375001907348633
    9. '_i' → logprob: -17.625001907348633
    10. 'in' → logprob: -18.375001907348633

Token 897: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0019639628008008003
    2. ' range' → logprob: -6.251964092254639
    3. 'in' → logprob: -10.75196361541748
    4. '_' → logprob: -11.37696361541748
    5. '_range' → logprob: -13.12696361541748
    6. ' in' → logprob: -15.12696361541748
    7. '(range' → logprob: -15.87696361541748
    8. '	range' → logprob: -16.251964569091797
    9. '
' → logprob: -17.376964569091797
    10. '...' → logprob: -17.501964569091797

Token 898: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0001234428636962548
    2. ' range' → logprob: -9.000123023986816
    3. '	range' → logprob: -19.500123977661133
    4. '(range' → logprob: -20.500123977661133
    5. '
' → logprob: -21.000123977661133
    6. '   ' → logprob: -21.250123977661133
    7. ' ' → logprob: -22.125123977661133
    8. '_range' → logprob: -22.875123977661133
    9. '```' → logprob: -23.375123977661133
    10. '  ' → logprob: -23.375123977661133

Token 899: '(number' (ID: 32955)
  Prédit: '(number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(number' → logprob: -5.796184723294573e-06
    2. 'number' → logprob: -12.250005722045898
    3. '(' → logprob: -14.000005722045898
    4. '(range' → logprob: -16.8750057220459
    5. '(n' → logprob: -17.7500057220459
    6. ' number' → logprob: -18.3750057220459
    7. ' (' → logprob: -18.7500057220459
    8. 'range' → logprob: -19.7500057220459
    9. '(Number' → logprob: -20.6250057220459
    10. '[number' → logprob: -20.6250057220459

Token 900: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -0.04069306701421738
    2. '(number' → logprob: -3.6656930446624756
    3. '_number' → logprob: -4.290693283081055
    4. 'number' → logprob: -8.290693283081055
    5. 'of' → logprob: -8.290693283081055
    6. '_nodes' → logprob: -9.790693283081055
    7. 's' → logprob: -11.040693283081055
    8. '[number' → logprob: -12.665693283081055
    9. '(' → logprob: -12.790693283081055
    10. '<number' → logprob: -12.915693283081055

Token 901: '_nodes' (ID: 34593)
  Prédit: '_nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -0.479891836643219
    2. 'number' → logprob: -0.979891836643219
    3. '_number' → logprob: -5.479891777038574
    4. 'nodes' → logprob: -6.604891777038574
    5. '(number' → logprob: -8.354891777038574
    6. ' number' → logprob: -10.979891777038574
    7. '[number' → logprob: -12.354891777038574
    8. ')' → logprob: -12.479891777038574
    9. '(nodes' → logprob: -12.854891777038574
    10. 'Nodes' → logprob: -12.854891777038574

Token 902: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.004086947068572044
    2. ')]
' → logprob: -5.754086971282959
    3. ']' → logprob: -7.129086971282959
    4. ')' → logprob: -9.3790864944458
    5. ')]

' → logprob: -11.2540864944458
    6. ')]
' → logprob: -12.2540864944458
    7. ']
' → logprob: -12.6290864944458
    8. '()]' → logprob: -13.6290864944458
    9. ')])' → logprob: -15.5040864944458
    10. ' )' → logprob: -16.004087448120117

Token 903: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1472419600977446e-06
    2. ' for' → logprob: -13.750000953674316
    3. '
' → logprob: -17.375001907348633
    4. '<|end|>' → logprob: -18.625001907348633
    5. '	for' → logprob: -20.125001907348633
    6. '```' → logprob: -20.250001907348633
    7. '  
' → logprob: -22.500001907348633
    8. 'For' → logprob: -22.500001907348633
    9. '    
' → logprob: -22.750001907348633
    10. 'n' → logprob: -22.750001907348633

Token 904: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00018422940047457814
    2. '_node' → logprob: -8.750184059143066
    3. ' _' → logprob: -11.125184059143066
    4. '_i' → logprob: -12.375184059143066
    5. '_nodes' → logprob: -12.500184059143066
    6. '_index' → logprob: -13.625184059143066
    7. '_edges' → logprob: -14.375184059143066
    8. '_range' → logprob: -14.625184059143066
    9. '_edge' → logprob: -15.125184059143066
    10. '_parent' → logprob: -16.250185012817383

Token 905: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.8175473213195801
    2. '_' → logprob: -1.19254732131958
    3. ' _' → logprob: -1.81754732131958
    4. 'in' → logprob: -2.69254732131958
    5. ' ' → logprob: -4.19254732131958
    6. ' i' → logprob: -5.06754732131958
    7. 'i' → logprob: -6.06754732131958
    8. ' range' → logprob: -8.067546844482422
    9. '_nodes' → logprob: -8.067546844482422
    10. '_i' → logprob: -8.942546844482422

Token 906: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -4.842555426876061e-06
    2. ' range' → logprob: -12.250004768371582
    3. '	range' → logprob: -18.6250057220459
    4. '(range' → logprob: -19.2500057220459
    5. 'rang' → logprob: -19.3750057220459
    6. 'r' → logprob: -19.8750057220459
    7. 'ra' → logprob: -19.8750057220459
    8. '_' → logprob: -20.6250057220459
    9. '_range' → logprob: -20.8750057220459
    10. '
' → logprob: -21.1250057220459

Token 907: '(number' (ID: 32955)
  Prédit: '(number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(number' → logprob: -4.246537173457909e-06
    2. '(' → logprob: -12.750003814697266
    3. 'number' → logprob: -14.000003814697266
    4. ' (' → logprob: -15.000003814697266
    5. '(
' → logprob: -16.375003814697266
    6. '(n' → logprob: -16.750003814697266
    7. '(range' → logprob: -18.250003814697266
    8. '(num' → logprob: -19.375003814697266
    9. ' number' → logprob: -19.750003814697266
    10. '(numero' → logprob: -19.750003814697266

Token 908: '_of' (ID: 8023)
  Prédit: '(number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(number' → logprob: -0.033126652240753174
    2. '_nodes' → logprob: -3.7831265926361084
    3. 'number' → logprob: -5.0331268310546875
    4. '_number' → logprob: -6.5331268310546875
    5. '()):
' → logprob: -7.2831268310546875
    6. '(' → logprob: -7.4081268310546875
    7. '):
' → logprob: -9.533126831054688
    8. '_tokens' → logprob: -9.658126831054688
    9. '
' → logprob: -9.783126831054688
    10. '_edges' → logprob: -10.033126831054688

Token 909: '_nodes' (ID: 34593)
  Prédit: '_nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -0.004661049693822861
    2. 'nodes' → logprob: -5.8796610832214355
    3. 'number' → logprob: -6.8796610832214355
    4. '1' → logprob: -7.7546610832214355
    5. '2' → logprob: -9.254660606384277
    6. '(number' → logprob: -9.254660606384277
    7. 'Nodes' → logprob: -9.504660606384277
    8. '_edges' → logprob: -10.004660606384277
    9. '(nodes' → logprob: -10.504660606384277
    10. '-' → logprob: -11.004660606384277

Token 910: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.007622484117746353
    2. '-' → logprob: -4.882622718811035
    3. '):
' → logprob: -11.257622718811035
    4. '   ' → logprob: -13.757622718811035
    5. '):' → logprob: -14.007622718811035
    6. ')' → logprob: -14.882622718811035
    7. ' ' → logprob: -14.882622718811035
    8. 's' → logprob: -16.00762176513672
    9. '()-' → logprob: -16.25762176513672
    10. '[number' → logprob: -16.25762176513672

Token 911: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.5716304410016164e-05
    2. ' ' → logprob: -10.250035285949707
    3. ')' → logprob: -15.250035285949707
    4. '0' → logprob: -16.875036239624023
    5. '   ' → logprob: -17.750036239624023
    6. '=' → logprob: -18.375036239624023
    7. '2' → logprob: -18.750036239624023
    8. '<|end|>' → logprob: -18.875036239624023
    9. '```' → logprob: -19.000036239624023
    10. '
' → logprob: -19.250036239624023

Token 912: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. ')' → logprob: -18.000003814697266
    4. '
' → logprob: -19.125003814697266
    5. '```' → logprob: -19.500003814697266
    6. '   ' → logprob: -19.750003814697266
    7. '2' → logprob: -20.000003814697266
    8. '۱' → logprob: -20.250003814697266
    9. '１' → logprob: -20.250003814697266
    10. 'input' → logprob: -20.812503814697266

Token 913: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.004380397964268923
    2. '):' → logprob: -5.629380226135254
    3. ':
' → logprob: -7.504380226135254
    4. ':' → logprob: -8.504380226135254
    5. ' ):
' → logprob: -11.629380226135254
    6. '):
' → logprob: -11.754380226135254
    7. '():
' → logprob: -12.004380226135254
    8. ']:
' → logprob: -13.379380226135254
    9. ',' → logprob: -14.004380226135254
    10. ')' → logprob: -14.129380226135254

Token 914: '   ' (ID: 271)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.6146901249885559
    2. ' u' → logprob: -0.8646901249885559
    3. 'a' → logprob: -4.11469030380249
    4. ' node' → logprob: -4.23969030380249
    5. '   ' → logprob: -5.61469030380249
    6. ' a' → logprob: -6.36469030380249
    7. 'node' → logprob: -7.23969030380249
    8. ' parent' → logprob: -7.23969030380249
    9. '```' → logprob: -9.239689826965332
    10. 'parent' → logprob: -10.114689826965332

Token 915: ' node' (ID: 4596)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.023567475378513336
    2. 'a' → logprob: -3.7735674381256104
    3. 'node' (adapté à ' node') → logprob: -8.523567199707031
    4. ' u' → logprob: -9.023567199707031
    5. 'x' → logprob: -14.273567199707031
    6. 'start' → logprob: -14.398567199707031
    7. ' node' → logprob: -14.523567199707031
    8. '   ' → logprob: -15.023567199707031
    9. ' a' → logprob: -15.023567199707031
    10. 'parent' → logprob: -15.148567199707031

Token 916: '_a' (ID: 10852)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2833157777786255
    2. '_a' → logprob: -1.5333157777786255
    3. 'a' → logprob: -3.783315658569336
    4. '_u' → logprob: -5.408315658569336
    5. 'A' → logprob: -6.033315658569336
    6. 'u' → logprob: -6.783315658569336
    7. '_' → logprob: -9.533315658569336
    8. 's' → logprob: -10.783315658569336
    9. ',' → logprob: -11.033315658569336
    10. '_from' → logprob: -11.408315658569336

Token 917: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006011391058564186
    2. ',node' → logprob: -5.131011486053467
    3. ' ,' → logprob: -9.631011009216309
    4. ',input' → logprob: -12.381011009216309
    5. ',b' → logprob: -13.006011009216309
    6. 'a' → logprob: -13.131011009216309
    7. ',n' → logprob: -13.256011009216309
    8. ',int' → logprob: -14.006011009216309
    9. '=' → logprob: -14.006011009216309
    10. ',user' → logprob: -14.131011009216309

Token 918: ' node' (ID: 4596)
  Prédit: ' node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' node' → logprob: -0.25193047523498535
    2. 'node' → logprob: -1.5019304752349854
    3. '_node' → logprob: -14.876930236816406
    4. ',node' → logprob: -15.001930236816406
    5. '	node' → logprob: -15.751930236816406
    6. 'space' → logprob: -16.001930236816406
    7. '=node' → logprob: -16.251930236816406
    8. ' ' → logprob: -16.751930236816406
    9. '_' → logprob: -17.001930236816406
    10. '(node' → logprob: -17.251930236816406

Token 919: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -7.896309739408025e-07
    2. 'b' → logprob: -14.500000953674316
    3. '_' → logprob: -15.375000953674316
    4. ' _' → logprob: -18.5
    5. '_B' → logprob: -18.75
    6. '_,' → logprob: -18.875
    7. 'B' → logprob: -19.375
    8. '_a' → logprob: -19.5
    9. '=' → logprob: -19.625
    10. ',_' → logprob: -19.75

Token 920: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759533643722534
    2. ' =' → logprob: -0.8259533643722534
    3. '=input' → logprob: -11.325953483581543
    4. ',' → logprob: -14.075953483581543
    5. '=int' → logprob: -14.575953483581543
    6. '=line' → logprob: -15.075953483581543
    7. ' ' → logprob: -16.200952529907227
    8. '＝' → logprob: -16.325952529907227
    9. '=node' → logprob: -16.950952529907227
    10. '   ' → logprob: -18.075952529907227

Token 921: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.16022422909736633
    2. ' map' → logprob: -1.910224199295044
    3. '	map' → logprob: -17.41022491455078
    4. 'list' → logprob: -17.53522491455078
    5. '_map' → logprob: -17.78522491455078
    6. '(map' → logprob: -18.53522491455078
    7. '.map' → logprob: -18.66022491455078
    8. '[' → logprob: -18.78522491455078
    9. 'input' → logprob: -20.16022491455078
    10. 'tuple' → logprob: -20.28522491455078

Token 922: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00770541513338685
    2. 'int' → logprob: -4.882705211639404
    3. '[int' → logprob: -10.257705688476562
    4. '<int' → logprob: -10.882705688476562
    5. '(input' → logprob: -11.132705688476562
    6. '=int' → logprob: -11.257705688476562
    7. 'input' → logprob: -11.382705688476562
    8. '(' → logprob: -12.757705688476562
    9. ' int' → logprob: -13.882705688476562
    10. ',int' → logprob: -14.632705688476562

Token 923: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.08188415318727493
    2. ',input' → logprob: -2.8318841457366943
    3. 'input' → logprob: -3.9568841457366943
    4. '=input' → logprob: -8.206884384155273
    5. ',' → logprob: -8.206884384155273
    6. ' input' → logprob: -11.206884384155273
    7. '```' → logprob: -11.581884384155273
    8. '<input' → logprob: -11.831884384155273
    9. ')' → logprob: -11.956884384155273
    10. '[input' → logprob: -12.206884384155273

Token 924: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -9.615255839889869e-05
    2. ' input' → logprob: -9.250096321105957
    3. '=input' → logprob: -21.62509536743164
    4. ',input' → logprob: -21.87509536743164
    5. '<input' → logprob: -22.25009536743164
    6. '_input' → logprob: -22.37509536743164
    7. '(input' → logprob: -23.00009536743164
    8. '	input' → logprob: -23.12509536743164
    9. 'Input' → logprob: -23.25009536743164
    10. '```' → logprob: -24.25009536743164

Token 925: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.5776860184123507e-06
    2. '()' → logprob: -13.50000286102295
    3. '.split' → logprob: -15.12500286102295
    4. '(' → logprob: -16.000001907348633
    5. 'split' → logprob: -16.000001907348633
    6. '()
' → logprob: -16.125001907348633
    7. '.' → logprob: -16.125001907348633
    8. ' ().' → logprob: -16.375001907348633
    9. '.strip' → logprob: -16.500001907348633
    10. '   ' → logprob: -16.625001907348633

Token 926: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -5.88418151892256e-05
    2. 'strip' → logprob: -9.750059127807617
    3. ' split' → logprob: -15.500059127807617
    4. '(split' → logprob: -15.875059127807617
    5. 'rstrip' → logprob: -15.875059127807617
    6. 'read' → logprob: -18.875059127807617
    7. '.split' → logprob: -18.875059127807617
    8. 'spl' → logprob: -19.000059127807617
    9. '```' → logprob: -20.375059127807617
    10. 'decode' → logprob: -20.500059127807617

Token 927: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.7760066390037537
    2. '())
' → logprob: -1.2760066986083984
    3. ')' → logprob: -1.5260066986083984
    4. ')
' → logprob: -3.1510066986083984
    5. '()' → logprob: -8.401006698608398
    6. '(' → logprob: -9.026006698608398
    7. '()
' → logprob: -10.651006698608398
    8. '())
' → logprob: -11.026006698608398
    9. ')
' → logprob: -12.776006698608398
    10. ')`' → logprob: -13.026006698608398

Token 928: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01746511459350586
    2. ' tree' → logprob: -4.642465114593506
    3. 'tree' → logprob: -5.267465114593506
    4. '
' → logprob: -6.392465114593506
    5. '	tree' → logprob: -7.392465114593506
    6. '    
' → logprob: -9.642465591430664
    7. '(tree' → logprob: -9.767465591430664
    8. '```' → logprob: -10.017465591430664
    9. ' 
' → logprob: -11.142465591430664
    10. '.tree' → logprob: -11.142465591430664

Token 929: ' node' (ID: 4596)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.004106184933334589
    2. ' tree' → logprob: -5.754106044769287
    3. 'node' (adapté à ' node') → logprob: -7.004106044769287
    4. ' node' → logprob: -11.129106521606445
    5. '   ' → logprob: -12.504106521606445
    6. '```' → logprob: -14.629106521606445
    7. '	tree' → logprob: -15.004106521606445
    8. '
' → logprob: -15.254106521606445
    9. '    
' → logprob: -15.504106521606445
    10. ' 
' → logprob: -16.379106521606445

Token 930: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -7.703443770878948e-06
    2. 'a' → logprob: -11.875007629394531
    3. 'A' → logprob: -15.500007629394531
    4. '=' → logprob: -15.750007629394531
    5. '_ad' → logprob: -16.37500762939453
    6. 's' → logprob: -16.37500762939453
    7. '_' → logprob: -16.62500762939453
    8. '_b' → logprob: -17.25000762939453
    9. '=_' → logprob: -18.50000762939453
    10. '   ' → logprob: -18.62500762939453

Token 931: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.7416032552719116
    2. '-' → logprob: -1.2416032552719116
    3. '-=' → logprob: -1.4916032552719116
    4. ' -' → logprob: -4.741603374481201
    5. '.' → logprob: -7.866603374481201
    6. '   ' → logprob: -8.491602897644043
    7. ',' → logprob: -8.991602897644043
    8. '=' → logprob: -10.116602897644043
    9. ' ' → logprob: -10.241602897644043
    10. '<|end|>' → logprob: -10.491602897644043

Token 932: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.4391956685576588e-05
    2. ' ' → logprob: -10.625024795532227
    3. '   ' → logprob: -19.500024795532227
    4. '```' → logprob: -21.062524795532227
    5. '۱' → logprob: -21.187524795532227
    6. '１' → logprob: -21.250024795532227
    7. '১' → logprob: -21.625024795532227
    8. '=' → logprob: -21.687524795532227
    9. '2' → logprob: -22.000024795532227
    10. '`' → logprob: -22.000024795532227

Token 933: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '   ' → logprob: -20.5
    4. '```' → logprob: -20.875
    5. '<|end|>' → logprob: -21.5
    6. '۱' → logprob: -21.75
    7. '১' → logprob: -22.1875
    8. '
' → logprob: -22.3125
    9. '१' → logprob: -22.4375
    10. '１' → logprob: -22.8125

Token 934: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14462795853614807
    2. 'tree' → logprob: -2.3946280479431152
    3. '   ' → logprob: -3.3946280479431152
    4. ' tree' → logprob: -5.644628047943115
    5. ' 
' → logprob: -6.144628047943115
    6. '    
' → logprob: -6.269628047943115
    7. '  
' → logprob: -7.019628047943115
    8. '   
' → logprob: -7.519628047943115
    9. '	tree' → logprob: -7.894628047943115
    10. '
' → logprob: -8.519627571105957

Token 935: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1945828199386597
    2. 'tree' → logprob: -1.3195828199386597
    3. ' tree' → logprob: -1.6945828199386597
    4. '
' → logprob: -1.6945828199386597
    5. 'node' → logprob: -3.069582939147949
    6. ' node' → logprob: -4.444582939147949
    7. '    
' → logprob: -6.569582939147949
    8. ' 
' → logprob: -6.944582939147949
    9. '	tree' → logprob: -7.069582939147949
    10. '  
' → logprob: -7.944582939147949

Token 936: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' (adapté à ' node') → logprob: -0.00010413920972496271
    2. '   ' → logprob: -9.750103950500488
    3. ' node' → logprob: -10.625103950500488
    4. 'tree' → logprob: -10.750103950500488
    5. ' ' → logprob: -19.250104904174805
    6. '	node' → logprob: -20.125104904174805
    7. '```' → logprob: -20.250104904174805
    8. 'Node' → logprob: -20.625104904174805
    9. ' tree' → logprob: -20.750104904174805
    10. '  ' → logprob: -20.875104904174805

Token 937: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -1.5048530030981055e-06
    2. 'b' → logprob: -13.750001907348633
    3. '_a' → logprob: -15.625001907348633
    4. 'B' → logprob: -16.000001907348633
    5. 'a' → logprob: -17.375001907348633
    6. '_' → logprob: -17.375001907348633
    7. ' _' → logprob: -19.125001907348633
    8. '_B' → logprob: -19.375001907348633
    9. '   ' → logprob: -21.000001907348633
    10. ' ' → logprob: -21.250001907348633

Token 938: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.014426618814468384
    2. '-=' → logprob: -4.2644267082214355
    3. '-' → logprob: -8.264426231384277
    4. ' -' → logprob: -13.014426231384277
    5. ' ' → logprob: -13.264426231384277
    6. '=' → logprob: -14.264426231384277
    7. '   ' → logprob: -15.014426231384277
    8. '.' → logprob: -15.264426231384277
    9. '[' → logprob: -16.639427185058594
    10. ',' → logprob: -16.764427185058594

Token 939: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002185118617489934
    2. ' ' → logprob: -6.127185344696045
    3. '<|end|>' → logprob: -17.627185821533203
    4. '   ' → logprob: -18.564685821533203
    5. '```' → logprob: -18.877185821533203
    6. '0' → logprob: -19.127185821533203
    7. '2' → logprob: -19.252185821533203
    8. '  ' → logprob: -19.689685821533203
    9. '۱' → logprob: -20.189685821533203
    10. '    ' → logprob: -20.627185821533203

Token 940: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -11.125015258789062
    3. '<|end|>' → logprob: -20.000015258789062
    4. '   ' → logprob: -20.500015258789062
    5. '```' → logprob: -20.500015258789062
    6. '2' → logprob: -21.375015258789062
    7. '۱' → logprob: -21.625015258789062
    8. '-' → logprob: -21.937515258789062
    9. '0' → logprob: -22.062515258789062
    10. '১' → logprob: -22.375015258789062

Token 941: '
' (ID: 198)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.19816836714744568
    2. '
' → logprob: -1.948168396949768
    3. '   ' → logprob: -3.5731682777404785
    4. ' tree' → logprob: -4.8231682777404785
    5. ' 
' → logprob: -8.073168754577637
    6. '	tree' → logprob: -8.323168754577637
    7. '    
' → logprob: -8.448168754577637
    8. '```' → logprob: -8.698168754577637
    9. '  
' → logprob: -9.323168754577637
    10. '(tree' → logprob: -9.948168754577637

Token 942: '   ' (ID: 271)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.11559075117111206
    2. '   ' → logprob: -2.615590810775757
    3. ' tree' → logprob: -3.365590810775757
    4. '```' → logprob: -6.865590572357178
    5. '	tree' → logprob: -7.990590572357178
    6. '
' → logprob: -9.615591049194336
    7. '``' → logprob: -10.615591049194336
    8. '(tree' → logprob: -11.490591049194336
    9. ' 
' → logprob: -12.865591049194336
    10. ' ' → logprob: -12.990591049194336

Token 943: ' tree' (ID: 8165)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' (adapté à ' tree') → logprob: -1.9361264946837764e-07
    2. ' tree' → logprob: -16.5
    3. '```' → logprob: -19.125
    4. '	tree' → logprob: -19.75
    5. '(tree' → logprob: -21.0
    6. '   ' → logprob: -22.5
    7. '
' → logprob: -23.125
    8. '.tree' → logprob: -23.625
    9. '``' → logprob: -24.25
    10. 'table' → logprob: -25.0

Token 944: '_ad' (ID: 23782)
  Prédit: '_ad'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ad' → logprob: -1.1472419600977446e-06
    2. '_adj' → logprob: -14.750000953674316
    3. 'adj' → logprob: -15.000000953674316
    4. 'ad' → logprob: -15.500000953674316
    5. '_a' → logprob: -16.750001907348633
    6. '_ac' → logprob: -17.500001907348633
    7. 'a' → logprob: -17.500001907348633
    8. '[' → logprob: -17.625001907348633
    9. ' adjacency' → logprob: -17.750001907348633
    10. '.ad' → logprob: -18.000001907348633

Token 945: 'jac' (ID: 77250)
  Prédit: 'jac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jac' → logprob: -8.017927029868588e-05
    2. 'acency' → logprob: -9.500080108642578
    3. 'j' → logprob: -12.375080108642578
    4. 'Jac' → logprob: -14.250080108642578
    5. ' adjacency' → logprob: -16.125080108642578
    6. 'd' → logprob: -16.375080108642578
    7. ' jac' → logprob: -16.750080108642578
    8. '_j' → logprob: -17.875080108642578
    9. 'jc' → logprob: -18.250080108642578
    10. 'yac' → logprob: -18.375080108642578

Token 946: 'ency' (ID: 2799)
  Prédit: 'ency'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ency' → logprob: -0.05950138717889786
    2. 'acency' → logprob: -3.1845014095306396
    3. '_lists' → logprob: -4.1845011711120605
    4. '_list' → logprob: -7.4345011711120605
    5. 'ancy' → logprob: -8.934501647949219
    6. 'lists' → logprob: -9.059501647949219
    7. ' lists' → logprob: -9.059501647949219
    8. 'l' → logprob: -10.309501647949219
    9. 'list' → logprob: -10.309501647949219
    10. 'c' → logprob: -10.809501647949219

Token 947: '_lists' (ID: 93609)
  Prédit: '_lists'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lists' → logprob: -6.511406809295295e-06
    2. 'lists' → logprob: -13.125006675720215
    3. '_sets' → logprob: -13.500006675720215
    4. '[' → logprob: -13.625006675720215
    5. 's' → logprob: -14.000006675720215
    6. 'Lists' → logprob: -14.500006675720215
    7. '[node' → logprob: -15.125006675720215
    8. '_list' → logprob: -17.1250057220459
    9. 'ists' → logprob: -17.3750057220459
    10. '.append' → logprob: -17.7500057220459

Token 948: '[node' (ID: 67268)
  Prédit: '[node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[node' → logprob: 0.0
    2. '[' → logprob: -18.75
    3. 'node' → logprob: -19.75
    4. '[user' → logprob: -20.375
    5. '
' → logprob: -21.25
    6. '=node' → logprob: -21.375
    7. '```' → logprob: -22.0
    8. '(node' → logprob: -22.625
    9. '[now' → logprob: -22.75
    10. '[token' → logprob: -23.0

Token 949: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.07992547750473022
    2. '[node' → logprob: -2.579925537109375
    3. 'a' → logprob: -7.579925537109375
    4. '_b' → logprob: -8.454925537109375
    5. '_node' → logprob: -8.829925537109375
    6. '[a' → logprob: -9.204925537109375
    7. 'node' → logprob: -9.954925537109375
    8. 'A' → logprob: -12.579925537109375
    9. '(node' → logprob: -12.829925537109375
    10. '=node' → logprob: -12.829925537109375

Token 950: '].' (ID: 1651)
  Prédit: '.add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -7.791440293658525e-05
    2. '].' → logprob: -9.625078201293945
    3. '.' → logprob: -11.875078201293945
    4. ').' → logprob: -12.625078201293945
    5. 'add' → logprob: -14.000078201293945
    6. ' .' → logprob: -15.125078201293945
    7. ')add' → logprob: -15.875078201293945
    8. '.ad' → logprob: -16.000078201293945
    9. '.Add' → logprob: -16.375078201293945
    10. '.append' → logprob: -16.625078201293945

Token 951: 'add' (ID: 964)
  Prédit: 'add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -1.9361264946837764e-07
    2. '.add' → logprob: -16.5
    3. 'append' → logprob: -18.75
    4. ' add' → logprob: -21.125
    5. '	add' → logprob: -21.625
    6. '_add' → logprob: -23.375
    7. 'adde' → logprob: -23.75
    8. 'addi' → logprob: -23.75
    9. ')add' → logprob: -24.125
    10. 'ad' → logprob: -24.25

Token 952: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -2.935296834039036e-06
    2. 'node' → logprob: -12.75000286102295
    3. '=node' → logprob: -18.750003814697266
    4. ' node' → logprob: -18.875003814697266
    5. ',node' → logprob: -19.250003814697266
    6. '	node' → logprob: -19.500003814697266
    7. '[node' → logprob: -19.750003814697266
    8. '(' → logprob: -20.500003814697266
    9. '/node' → logprob: -20.750003814697266
    10. 'Node' → logprob: -22.500003814697266

Token 953: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -4.320199877838604e-07
    2. '_a' → logprob: -15.25
    3. 'b' → logprob: -15.875
    4. 'B' → logprob: -19.125
    5. '	b' → logprob: -19.75
    6. '_B' → logprob: -19.75
    7. '_' → logprob: -19.75
    8. 'a' → logprob: -20.0
    9. '```' → logprob: -20.125
    10. ')' → logprob: -21.0

Token 954: ')
' (ID: 446)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.282920129597187e-05
    2. 'tree' → logprob: -12.000012397766113
    3. ' tree' → logprob: -12.250012397766113
    4. ')' → logprob: -14.750012397766113
    5. '
' → logprob: -15.250012397766113
    6. '(tree' → logprob: -15.250012397766113
    7. '<|end|>' → logprob: -15.625012397766113
    8. 'node' → logprob: -15.875012397766113
    9. '    
' → logprob: -16.12501335144043
    10. ',' → logprob: -16.12501335144043

Token 955: '   ' (ID: 271)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.39163559675216675
    2. '   ' → logprob: -1.1416356563568115
    3. '```' → logprob: -5.516635417938232
    4. ' tree' → logprob: -7.391635417938232
    5. '	tree' → logprob: -9.51663589477539
    6. '``' → logprob: -10.89163589477539
    7. ' ' → logprob: -11.26663589477539
    8. '(tree' → logprob: -12.14163589477539
    9. '  ' → logprob: -13.14163589477539
    10. '.tree' → logprob: -13.64163589477539

Token 956: ' tree' (ID: 8165)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' (adapté à ' tree') → logprob: -5.200166469876422e-06
    2. ' tree' → logprob: -12.500004768371582
    3. '   ' → logprob: -13.500004768371582
    4. '```' → logprob: -18.7500057220459
    5. '	tree' → logprob: -18.8750057220459
    6. 'node' → logprob: -18.8750057220459
    7. '(tree' → logprob: -20.6250057220459
    8. '
' → logprob: -20.7500057220459
    9. ' ' → logprob: -21.8750057220459
    10. '.tree' → logprob: -21.8750057220459

Token 957: '_ad' (ID: 23782)
  Prédit: '_ad'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ad' → logprob: -3.128163257315464e-07
    2. '_adj' → logprob: -16.0
    3. 'ad' → logprob: -16.875
    4. '_ac' → logprob: -17.25
    5. '_a' → logprob: -17.5
    6. 'adj' → logprob: -18.5
    7. '_ab' → logprob: -18.875
    8. '_b' → logprob: -19.125
    9. '-ad' → logprob: -19.25
    10. '[' → logprob: -20.0

Token 958: 'jac' (ID: 77250)
  Prédit: 'jac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jac' → logprob: -0.005930574145168066
    2. 'j' → logprob: -5.255930423736572
    3. 'acency' → logprob: -7.505930423736572
    4. '_j' → logprob: -9.00593090057373
    5. 'yac' → logprob: -12.00593090057373
    6. 's' → logprob: -12.38093090057373
    7. 'd' → logprob: -12.63093090057373
    8. 'acy' → logprob: -13.25593090057373
    9. 'jc' → logprob: -13.63093090057373
    10. 'js' → logprob: -13.63093090057373

Token 959: 'ency' (ID: 2799)
  Prédit: '_lists'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lists' → logprob: -0.1048823893070221
    2. 'ency' → logprob: -2.3548824787139893
    3. '_list' → logprob: -5.97988224029541
    4. 'ancy' → logprob: -6.85488224029541
    5. 'acency' → logprob: -7.85488224029541
    6. '_nodes' → logprob: -8.10488224029541
    7. 'lists' → logprob: -8.85488224029541
    8. 'acy' → logprob: -9.35488224029541
    9. 'n' → logprob: -10.22988224029541
    10. 'ity' → logprob: -10.35488224029541

Token 960: '_lists' (ID: 93609)
  Prédit: '_lists'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lists' → logprob: -7.896309739408025e-07
    2. '_sets' → logprob: -14.250000953674316
    3. '[' → logprob: -17.375
    4. '[node' → logprob: -17.375
    5. 's' → logprob: -17.625
    6. 'lists' → logprob: -17.75
    7. 'Lists' → logprob: -17.875
    8. '_list' → logprob: -18.75
    9. '_nodes' → logprob: -19.125
    10. '[_' → logprob: -19.125

Token 961: '[node' (ID: 67268)
  Prédit: '[node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[node' → logprob: 0.0
    2. '[' → logprob: -19.0
    3. '[user' → logprob: -19.875
    4. 'node' → logprob: -19.875
    5. '(node' → logprob: -21.0
    6. '=node' → logprob: -22.25
    7. ' [' → logprob: -22.75
    8. '[
' → logprob: -22.875
    9. '[player' → logprob: -23.125
    10. '```' → logprob: -23.625

Token 962: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.0024773201439529657
    2. '_a' → logprob: -6.002477169036865
    3. 'a' → logprob: -13.752477645874023
    4. 'b' → logprob: -14.502477645874023
    5. 'A' → logprob: -18.002477645874023
    6. '[node' → logprob: -19.002477645874023
    7. '[b' → logprob: -19.127477645874023
    8. 'B' → logprob: -19.252477645874023
    9. 's' → logprob: -20.127477645874023
    10. '[a' → logprob: -20.252477645874023

Token 963: '].' (ID: 1651)
  Prédit: '.add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.01433426421135664
    2. '[node' → logprob: -4.264334201812744
    3. '.' → logprob: -8.889334678649902
    4. ' .' → logprob: -10.764334678649902
    5. ').' → logprob: -12.889334678649902
    6. '[' → logprob: -13.139334678649902
    7. 'add' → logprob: -13.264334678649902
    8. '   ' → logprob: -13.389334678649902
    9. '.append' → logprob: -13.889334678649902
    10. '.Add' → logprob: -14.014334678649902

Token 964: 'add' (ID: 964)
  Prédit: 'add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: 0.0
    2. ' add' → logprob: -17.625
    3. '.add' → logprob: -19.125
    4. 'append' → logprob: -20.375
    5. '	add' → logprob: -21.25
    6. '[' → logprob: -21.375
    7. '_add' → logprob: -21.875
    8. '(add' → logprob: -22.5
    9. 'ad' → logprob: -22.625
    10. ')add' → logprob: -22.625

Token 965: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -9.088346359931165e-07
    2. 'node' → logprob: -14.000000953674316
    3. ' node' → logprob: -18.375
    4. '(' → logprob: -19.625
    5. '[node' → logprob: -19.625
    6. ' (' → logprob: -20.5
    7. '(
' → logprob: -21.625
    8. '	node' → logprob: -21.625
    9. ',node' → logprob: -22.0
    10. '=node' → logprob: -22.25

Token 966: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.00017028623551595956
    2. 'a' → logprob: -9.125170707702637
    3. 'node' → logprob: -10.000170707702637
    4. '_node' → logprob: -11.250170707702637
    5. '[node' → logprob: -13.875170707702637
    6. 'A' → logprob: -14.125170707702637
    7. '_b' → logprob: -14.750170707702637
    8. '(node' → logprob: -15.125170707702637
    9. ')' → logprob: -15.875170707702637
    10. '_' → logprob: -15.875170707702637

Token 967: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6240566083070007e-06
    2. ')
' → logprob: -14.000001907348633
    3. '<|end|>' → logprob: -15.000001907348633
    4. ' )' → logprob: -16.375001907348633
    5. ')}' → logprob: -16.625001907348633
    6. ')

' → logprob: -17.000001907348633
    7. '))' → logprob: -17.250001907348633
    8. ')return' → logprob: -17.375001907348633
    9. '```' → logprob: -17.375001907348633
    10. '),' → logprob: -17.375001907348633

Token 968: 'result' (ID: 2521)
  Prédit: 'depth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'depth' → logprob: -0.268683522939682
    2. 'height' → logprob: -2.143683433532715
    3. 'result' → logprob: -2.768683433532715
    4. 'length' → logprob: -3.893683433532715
    5. 'print' → logprob: -4.518683433532715
    6. 'max' → logprob: -4.518683433532715
    7. 'level' → logprob: -5.393683433532715
    8. 'width' → logprob: -5.393683433532715
    9. 'diam' → logprob: -6.768683433532715
    10. 'root' → logprob: -7.643683433532715

Token 969: '_depth' (ID: 44220)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.23605260252952576
    2. '_' → logprob: -1.7360526323318481
    3. '=' → logprob: -3.6110525131225586
    4. '_length' → logprob: -5.236052513122559
    5. '_=' → logprob: -6.861052513122559
    6. '_len' → logprob: -8.236052513122559
    7. '_size' → logprob: -8.361052513122559
    8. '_space' → logprob: -9.736052513122559
    9. '1' → logprob: -10.486052513122559
    10. '_output' → logprob: -11.361052513122559

Token 970: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010001786286011338
    2. '=' → logprob: -7.62600040435791
    3. ' =' → logprob: -8.00100040435791
    4. '_,' → logprob: -9.87600040435791
    5. '_length' → logprob: -9.87600040435791
    6. ' ,' → logprob: -10.62600040435791
    7. '_depth' → logprob: -10.75100040435791
    8. ',result' → logprob: -11.50100040435791
    9. 's' → logprob: -12.12600040435791
    10. '_' → logprob: -12.25100040435791

Token 971: ' result' (ID: 1534)
  Prédit: ' result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.2014133334159851
    2. 'result' → logprob: -1.7014133930206299
    3. ' minimal' → logprob: -17.701414108276367
    4. ' total' → logprob: -19.451414108276367
    5. '=result' → logprob: -19.701414108276367
    6. 'minimal' → logprob: -20.201414108276367
    7. '(result' → logprob: -20.451414108276367
    8. ' ' → logprob: -20.451414108276367
    9. '_result' → logprob: -20.701414108276367
    10. '	result' → logprob: -20.701414108276367

Token 972: '_le' (ID: 27121)
  Prédit: '_le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_le' → logprob: -0.6742003560066223
    2. '_count' → logprob: -0.9242003560066223
    3. '_leaf' → logprob: -2.4242002964019775
    4. '_branch' → logprob: -5.549200534820557
    5. '_max' → logprob: -7.299200534820557
    6. '_result' → logprob: -9.299200057983398
    7. '_br' → logprob: -9.674200057983398
    8. '_' → logprob: -9.799200057983398
    9. ' =' → logprob: -9.924200057983398
    10. '_total' → logprob: -9.924200057983398

Token 973: 'aves' (ID: 6808)
  Prédit: 'af'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'af' → logprob: -0.0089421346783638
    2. 'aves' → logprob: -4.758942127227783
    3. 'afs' → logprob: -8.133942604064941
    4. 'aft' → logprob: -11.383942604064941
    5. 'ave' → logprob: -11.633942604064941
    6. 'a' → logprob: -12.133942604064941
    7. ' af' → logprob: -13.508942604064941
    8. 'aff' → logprob: -13.633942604064941
    9. 'аф' → logprob: -13.883942604064941
    10. 'av' → logprob: -14.258942604064941

Token 974: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868870735168457
    2. '=' → logprob: -1.1368870735168457
    3. ',' → logprob: -11.886886596679688
    4. ' ' → logprob: -12.011886596679688
    5. ' =
' → logprob: -13.761886596679688
    6. 'print' → logprob: -14.886886596679688
    7. '<|end|>' → logprob: -14.886886596679688
    8. ')' → logprob: -15.636886596679688
    9. '  ' → logprob: -15.761886596679688
    10. '   ' → logprob: -15.886886596679688

Token 975: ' solve' (ID: 17722)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' → logprob: -8.061054359131958e-06
    2. ' solve' → logprob: -11.750007629394531
    3. 'print' → logprob: -16.25000762939453
    4. '.solve' → logprob: -22.37500762939453
    5. 'resolve' → logprob: -22.87500762939453
    6. '   ' → logprob: -23.12500762939453
    7. 'save' → logprob: -23.50000762939453
    8. 'sol' → logprob: -24.37500762939453
    9. 'result' → logprob: -25.00000762939453
    10. '
' → logprob: -25.12500762939453

Token 976: '_tree' (ID: 27118)
  Prédit: '_tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tree' → logprob: -9.088346359931165e-07
    2. '(tree' → logprob: -14.375000953674316
    3. 'tree' → logprob: -15.625000953674316
    4. '_' → logprob: -17.25
    5. '(_' → logprob: -17.25
    6. '_t' → logprob: -17.5
    7. '<Tree' → logprob: -18.0
    8. '```' → logprob: -18.125
    9. '_TREE' → logprob: -18.25
    10. '(Tree' → logprob: -18.5

Token 977: '_properties' (ID: 59463)
  Prédit: '_tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tree' → logprob: -0.0002705145161598921
    2. '_properties' → logprob: -8.25027084350586
    3. 'properties' → logprob: -12.25027084350586
    4. 'tree' → logprob: -12.62527084350586
    5. '_t' → logprob: -15.25027084350586
    6. '(tree' → logprob: -15.25027084350586
    7. '<Tree' → logprob: -16.12527084350586
    8. 'Tree' → logprob: -16.37527084350586
    9. '_' → logprob: -16.37527084350586
    10. ' tree' → logprob: -16.62527084350586

Token 978: '(number' (ID: 32955)
  Prédit: '(tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tree' → logprob: -1.0445127372804563e-05
    2. '(number' → logprob: -11.50001049041748
    3. ' (' → logprob: -16.125009536743164
    4. '(' → logprob: -16.875009536743164
    5. '(t' → logprob: -18.250009536743164
    6. '(
' → logprob: -19.000009536743164
    7. '(Tree' → logprob: -19.125009536743164
    8. '(len' → logprob: -19.625009536743164
    9. '(table' → logprob: -20.125009536743164
    10. '(tile' → logprob: -21.000009536743164

Token 979: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -5.512236498361744e-07
    2. 'of' → logprob: -14.750000953674316
    3. '_nodes' → logprob: -16.0
    4. 'Of' → logprob: -19.0
    5. ' of' → logprob: -19.875
    6. '_' → logprob: -20.75
    7. '__' → logprob: -20.875
    8. '_OF' → logprob: -21.125
    9. ')' → logprob: -21.875
    10. 's' → logprob: -22.75

Token 980: '_nodes' (ID: 34593)
  Prédit: '_nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -0.00014215784904081374
    2. 'nodes' → logprob: -8.875142097473145
    3. 'node' → logprob: -14.750142097473145
    4. '_node' → logprob: -15.000142097473145
    5. 'Nodes' → logprob: -15.000142097473145
    6. 'tree' → logprob: -15.000142097473145
    7. '_' → logprob: -15.750142097473145
    8. ' nodes' → logprob: -16.12514305114746
    9. '
' → logprob: -16.25014305114746
    10. 's' → logprob: -16.75014305114746

Token 981: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.088346359931165e-07
    2. ' ,' → logprob: -14.750000953674316
    3. ',
' → logprob: -15.000000953674316
    4. '(tree' → logprob: -16.25
    5. '‌,' → logprob: -20.375
    6. '<Tree' → logprob: -20.875
    7. ')' → logprob: -21.0
    8. ',
' → logprob: -21.125
    9. '/tree' → logprob: -21.125
    10. ',

' → logprob: -21.125

Token 982: ' tree' (ID: 8165)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.004078639671206474
    2. ' tree' → logprob: -5.5040788650512695
    3. '	tree' → logprob: -16.129077911376953
    4. '(tree' → logprob: -16.254077911376953
    5. '.tree' → logprob: -18.379077911376953
    6. '   ' → logprob: -18.379077911376953
    7. 'trees' → logprob: -18.629077911376953
    8. 'Tree' → logprob: -19.004077911376953
    9. '_tree' → logprob: -19.004077911376953
    10. '
' → logprob: -19.129077911376953

Token 983: '_ad' (ID: 23782)
  Prédit: '_ad'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ad' → logprob: -4.320199877838604e-07
    2. '_adj' → logprob: -15.25
    3. 'ad' → logprob: -16.625
    4. 'adj' → logprob: -17.625
    5. '_ac' → logprob: -17.625
    6. ' adjacency' → logprob: -19.125
    7. 't' → logprob: -19.375
    8. 's' → logprob: -19.875
    9. 'tree' → logprob: -20.25
    10. '_ab' → logprob: -20.375

Token 984: 'jac' (ID: 77250)
  Prédit: 'jac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jac' → logprob: -0.004109392408281565
    2. 'acency' → logprob: -5.5041093826293945
    3. 'j' → logprob: -10.504109382629395
    4. 'Jac' → logprob: -12.754109382629395
    5. '_j' → logprob: -15.879109382629395
    6. ' jac' → logprob: -15.879109382629395
    7. '
' → logprob: -16.37911033630371
    8. 'jc' → logprob: -17.25411033630371
    9. 'aj' → logprob: -17.50411033630371
    10. 'iac' → logprob: -17.50411033630371

Token 985: 'ency' (ID: 2799)
  Prédit: '_lists'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lists' → logprob: -0.060575585812330246
    2. 'ency' → logprob: -3.935575485229492
    3. 'ists' → logprob: -4.185575485229492
    4. 'st' → logprob: -4.935575485229492
    5. '_list' → logprob: -5.310575485229492
    6. 'ist' → logprob: -5.310575485229492
    7. 'sts' → logprob: -5.560575485229492
    8. 'lists' → logprob: -6.185575485229492
    9. 'ancy' → logprob: -7.935575485229492
    10. 't' → logprob: -8.685575485229492

Token 986: '_lists' (ID: 93609)
  Prédit: '_lists'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lists' → logprob: -1.5048530030981055e-06
    2. '_sets' → logprob: -14.500001907348633
    3. ')' → logprob: -14.875001907348633
    4. '_' → logprob: -15.500001907348633
    5. 'lists' → logprob: -16.000001907348633
    6. '_arrays' → logprob: -16.625001907348633
    7. '[' → logprob: -16.750001907348633
    8. 'Lists' → logprob: -17.000001907348633
    9. 's' → logprob: -17.125001907348633
    10. ')_' → logprob: -17.500001907348633

Token 987: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.003180563682690263
    2. ')' → logprob: -5.753180503845215
    3. ')
' → logprob: -12.878180503845215
    4. 'print' → logprob: -15.503180503845215
    5. ' )
' → logprob: -16.62818145751953
    6. ')

' → logprob: -17.37818145751953
    7. ')`
' → logprob: -18.62818145751953
    8. '())
' → logprob: -21.50318145751953
    9. '))
' → logprob: -22.12818145751953
    10. ' print' → logprob: -22.12818145751953

Token 988: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -5.080963092041202e-06
    2. '```' → logprob: -12.500004768371582
    3. '
' → logprob: -14.750004768371582
    4. ' print' → logprob: -14.875004768371582
    5. '#print' → logprob: -15.500004768371582
    6. '(print' → logprob: -15.500004768371582
    7. '<|end|>' → logprob: -16.0000057220459
    8. '``' → logprob: -16.8750057220459
    9. 'pr' → logprob: -17.7500057220459
    10. '#' → logprob: -17.8750057220459

Token 989: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -8.792751032160595e-05
    2. '(f' → logprob: -9.75008773803711
    3. 'result' → logprob: -10.75008773803711
    4. '(' → logprob: -11.75008773803711
    5. '((' → logprob: -16.12508773803711
    6. 'f' → logprob: -18.00008773803711
    7. '(res' → logprob: -18.25008773803711
    8. '('' → logprob: -18.25008773803711
    9. ' result' → logprob: -18.75008773803711
    10. '(results' → logprob: -18.75008773803711

Token 990: '_depth' (ID: 44220)
  Prédit: '_depth'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_depth' → logprob: 0.0
    2. 'depth' → logprob: -17.0
    3. '_le' → logprob: -19.875
    4. '_de' → logprob: -20.125
    5. '_DEPTH' → logprob: -21.0
    6. ' depth' → logprob: -21.375
    7. 'Depth' → logprob: -21.625
    8. '_' → logprob: -22.0
    9. '_length' → logprob: -22.625
    10. '_size' → logprob: -23.125

Token 991: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.627176768844947e-05
    2. ',result' → logprob: -9.250096321105957
    3. ' ,' → logprob: -16.12509536743164
    4. 'result' → logprob: -17.75009536743164
    5. '(result' → logprob: -17.75009536743164
    6. ',
' → logprob: -18.25009536743164
    7. ',end' → logprob: -18.62509536743164
    8. ')' → logprob: -18.75009536743164
    9. '[result' → logprob: -19.00009536743164
    10. '*' → logprob: -19.37509536743164

Token 992: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.00861456897109747
    2. ' result' → logprob: -4.758614540100098
    3. '(result' → logprob: -17.133615493774414
    4. ',result' → logprob: -20.758615493774414
    5. ' ' → logprob: -21.008615493774414
    6. '=result' → logprob: -21.258615493774414
    7. '$result' → logprob: -21.383615493774414
    8. ''' → logprob: -22.008615493774414
    9. '[result' → logprob: -22.008615493774414
    10. ' 
' → logprob: -22.133615493774414

Token 993: '_le' (ID: 27121)
  Prédit: '_le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_le' → logprob: -6.754368223482743e-05
    2. '_depth' → logprob: -9.625067710876465
    3. '_' → logprob: -14.875067710876465
    4. '"_' → logprob: -15.000067710876465
    5. ''_' → logprob: -16.00006675720215
    6. 'le' → logprob: -16.25006675720215
    7. '_leaf' → logprob: -16.50006675720215
    8. '_lo' → logprob: -16.62506675720215
    9. ')_' → logprob: -16.75006675720215
    10. '_he' → logprob: -17.37506675720215

Token 994: 'aves' (ID: 6808)
  Prédit: 'aves'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aves' → logprob: -2.816093228830141e-06
    2. 'af' → logprob: -12.87500286102295
    3. 'a' → logprob: -15.25000286102295
    4. 'av' → logprob: -17.125001907348633
    5. 'ave' → logprob: -19.375001907348633
    6. ' aves' → logprob: -19.750001907348633
    7. '
' → logprob: -20.375001907348633
    8. 'e' → logprob: -20.500001907348633
    9. 'aved' → logprob: -20.750001907348633
    10. '#' → logprob: -20.875001907348633

Token 995: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007038827985525131
    2. '<|end|>' → logprob: -5.257038593292236
    3. '
' → logprob: -7.132038593292236
    4. 'newline' → logprob: -8.132039070129395
    5. '```' → logprob: -8.382039070129395
    6. '()' → logprob: -8.507039070129395
    7. ')
' → logprob: -9.257039070129395
    8. '\n' → logprob: -9.882039070129395
    9. ' )' → logprob: -10.257039070129395
    10. '#' → logprob: -10.882039070129395


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 993
Tokens correctement prédits (1ère position, stricte): 542
Tokens correctement prédits (1ère position, avec adaptation): 567
Tokens correctement prédits (top 10): 876
Précision stricte (1ère position): 54.58%
Précision adaptée (1ère position): 57.10%
Précision (top 10): 88.22%
================================================================================
