================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:11:37
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import heapq

N = int(input())
h = [4, 7]
heapq.heapify(h)

while True:
    n = heapq.heappop(h)
    if n > N:
        print('No')
        break
    if n == N:
        print('Yes')
        break
    heapq.heappush(h, n + 4)
    heapq.heappush(h, n + 7)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' heap' (ID: 37237)
  → Token d'amorce (pas de prédiction)

Token 2: 'q' (ID: 80)
  → Token d'amorce (pas de prédiction)

Token 3: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -5.6100132496794686e-05
    2. '.\' → logprob: -11.125056266784668
    3. '(' → logprob: -11.625056266784668
    4. '.
' → logprob: -11.750056266784668
    5. '.​' → logprob: -12.000056266784668
    6. '."""' → logprob: -12.750056266784668
    7. '```' → logprob: -12.875056266784668
    8. '\' → logprob: -13.125056266784668
    9. '.

' → logprob: -13.250056266784668
    10. ' .' → logprob: -13.250056266784668

Token 4: 'N' (ID: 45)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0015583087224513292
    2. '(' → logprob: -6.626558303833008
    3. '\' → logprob: -9.751558303833008
    4. '```' → logprob: -10.126558303833008
    5. '[' → logprob: -10.376558303833008
    6. '.
' → logprob: -11.501558303833008
    7. '.heap' → logprob: -11.751558303833008
    8. 'import' → logprob: -11.751558303833008
    9. 'def' → logprob: -11.876558303833008
    10. ',' → logprob: -12.001558303833008

Token 5: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9042441248893738
    2. ' ' → logprob: -1.1542441844940186
    3. '=' → logprob: -1.4042441844940186
    4. '  ' → logprob: -4.1542439460754395
    5. ',' → logprob: -4.4042439460754395
    6. ')' → logprob: -6.5292439460754395
    7. ' ,' → logprob: -6.9042439460754395
    8. '.' → logprob: -7.0292439460754395
    9. ' )' → logprob: -7.2792439460754395
    10. '_' → logprob: -7.4042439460754395

Token 6: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.024906978011131287
    2. ' int' → logprob: -3.899906873703003
    3. 'int' → logprob: -6.274907112121582
    4. '10' → logprob: -6.274907112121582
    5. '5' → logprob: -8.274907112121582
    6. '0' → logprob: -8.774907112121582
    7. '20' → logprob: -9.649907112121582
    8. '4' → logprob: -10.399907112121582
    9. '32' → logprob: -11.399907112121582
    10. '[int' → logprob: -11.399907112121582

Token 7: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -9.758300438988954e-05
    2. ''' → logprob: -10.875097274780273
    3. '('' → logprob: -11.000097274780273
    4. '(
' → logprob: -11.375097274780273
    5. ' (' → logprob: -11.625097274780273
    6. '()' → logprob: -11.625097274780273
    7. ')' → logprob: -12.000097274780273
    8. '```' → logprob: -12.125097274780273
    9. '("("' → logprob: -12.250097274780273
    10. '(N' → logprob: -12.250097274780273

Token 8: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5574197173118591
    2. '()' → logprob: -1.432419776916504
    3. '())' → logprob: -2.307419776916504
    4. '(' → logprob: -2.432419776916504
    5. '))' → logprob: -7.807419776916504
    6. '(
' → logprob: -8.182419776916504
    7. '`)' → logprob: -8.807419776916504
    8. '')' → logprob: -9.432419776916504
    9. '")' → logprob: -9.557419776916504
    10. '('' → logprob: -9.682419776916504

Token 9: 'h' (ID: 71)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.9089803695678711
    2. 'data' → logprob: -2.033980369567871
    3. 'numbers' → logprob: -2.033980369567871
    4. 'a' → logprob: -2.158980369567871
    5. 'nums' → logprob: -2.533980369567871
    6. 'array' → logprob: -2.658980369567871
    7. 'lst' → logprob: -3.783980369567871
    8. 'items' → logprob: -4.658980369567871
    9. 'values' → logprob: -4.658980369567871
    10. 'heap' → logprob: -5.033980369567871

Token 10: ' =' (ID: 314)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0019005554495379329
    2. ' =' → logprob: -7.626900672912598
    3. 'ea' → logprob: -7.751900672912598
    4. '.e' → logprob: -8.626900672912598
    5. '.' → logprob: -9.001900672912598
    6. '	e' → logprob: -9.376900672912598
    7. ' e' → logprob: -9.376900672912598
    8. 'heap' → logprob: -9.501900672912598
    9. 'eat' → logprob: -9.751900672912598
    10. '=' → logprob: -10.126900672912598

Token 11: ' [' (ID: 723)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.2521916329860687
    2. '[]' → logprob: -1.5021916627883911
    3. '[' → logprob: -8.877191543579102
    4. 'list' → logprob: -9.252191543579102
    5. ' [' → logprob: -11.877191543579102
    6. ' list' → logprob: -11.877191543579102
    7. ' ' → logprob: -12.502191543579102
    8. 'heap' → logprob: -12.627191543579102
    9. '[]}' → logprob: -13.377191543579102
    10. ' [])' → logprob: -13.752191543579102

Token 12: '4' (ID: 19)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.04021795466542244
    2. '0' → logprob: -3.915217876434326
    3. ']' → logprob: -4.415217876434326
    4. ']int' → logprob: -5.165217876434326
    5. '(int' → logprob: -7.040217876434326
    6. ' int' → logprob: -7.915217876434326
    7. ')' → logprob: -8.415218353271484
    8. '[int' → logprob: -9.915218353271484
    9. '()]' → logprob: -10.790218353271484
    10. ' ' → logprob: -10.790218353271484

Token 13: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04652468115091324
    2. ' ,' → logprob: -4.296524524688721
    3. '5' → logprob: -4.546524524688721
    4. ']' → logprob: -5.171524524688721
    5. '0' → logprob: -5.546524524688721
    6. ' ' → logprob: -5.921524524688721
    7. '2' → logprob: -6.421524524688721
    8. ',)' → logprob: -6.421524524688721
    9. ' ]' → logprob: -6.796524524688721
    10. '7' → logprob: -6.796524524688721

Token 14: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03424893319606781
    2. '7' → logprob: -4.6592488288879395
    3. '2' → logprob: -5.4092488288879395
    4. '5' → logprob: -5.6592488288879395
    5. '1' → logprob: -5.7842488288879395
    6. '9' → logprob: -5.9092488288879395
    7. '3' → logprob: -5.9092488288879395
    8. '0' → logprob: -6.0342488288879395
    9. '6' → logprob: -6.2842488288879395
    10. ' )' → logprob: -6.4092488288879395

Token 15: '7' (ID: 22)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.227180004119873
    2. ' ' → logprob: -1.477180004119873
    3. '2' → logprob: -1.852180004119873
    4. '7' → logprob: -2.102180004119873
    5. '3' → logprob: -2.602180004119873
    6. '5' → logprob: -3.227180004119873
    7. '6' → logprob: -3.602180004119873
    8. '8' → logprob: -3.727180004119873
    9. '9' → logprob: -3.727180004119873
    10. '10' → logprob: -5.102180004119873

Token 16: ']
' (ID: 1592)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003026910126209259
    2. ']' → logprob: -6.003026962280273
    3. ')' → logprob: -8.253026962280273
    4. ' ,' → logprob: -9.378026962280273
    5. '7' → logprob: -9.753026962280273
    6. '9' → logprob: -10.503026962280273
    7. '3' → logprob: -10.753026962280273
    8. '5' → logprob: -11.003026962280273
    9. '6' → logprob: -11.003026962280273
    10. '4' → logprob: -11.503026962280273

Token 17: 'heap' (ID: 38535)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.016680069267749786
    2. '.heap' → logprob: -5.2666802406311035
    3. ',' → logprob: -5.3916802406311035
    4. 'heap' → logprob: -5.8916802406311035
    5. '.he' → logprob: -7.0166802406311035
    6. '[' → logprob: -7.5166802406311035
    7. 'h' → logprob: -7.6416802406311035
    8. ')' → logprob: -7.6416802406311035
    9. '.append' → logprob: -8.141679763793945
    10. 'for' → logprob: -8.391679763793945

Token 18: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0006684751133434474
    2. '.' → logprob: -7.500668525695801
    3. '.q' → logprob: -9.2506685256958
    4. '```' → logprob: -12.1256685256958
    5. '.push' → logprob: -12.3756685256958
    6. '.he' → logprob: -12.7506685256958
    7. 'p' → logprob: -13.0006685256958
    8. ' .' → logprob: -13.1256685256958
    9. '	q' → logprob: -14.5006685256958
    10. ').' → logprob: -14.8756685256958

Token 19: '.heap' (ID: 177287)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.025346994400024414
    2. '.heap' → logprob: -4.400346755981445
    3. '.he' → logprob: -4.525346755981445
    4. '.push' → logprob: -7.400346755981445
    5. '.put' → logprob: -7.900346755981445
    6. '.q' → logprob: -8.025346755981445
    7. '.append' → logprob: -9.775346755981445
    8. '.add' → logprob: -10.275346755981445
    9. '​.' → logprob: -10.525346755981445
    10. '.dot' → logprob: -10.650346755981445

Token 20: 'ify' (ID: 1985)
  Prédit: 'ify'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ify' → logprob: -0.013313638977706432
    2. 'push' → logprob: -4.3883137702941895
    3. '```' → logprob: -7.8883137702941895
    4. 'p' → logprob: -8.513313293457031
    5. 'lify' → logprob: -9.513313293457031
    6. 'replace' → logprob: -9.888313293457031
    7. 'ush' → logprob: -10.138313293457031
    8. 'q' → logprob: -10.888313293457031
    9. 'if' → logprob: -11.138313293457031
    10. 'fy' → logprob: -12.013313293457031

Token 21: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.0008077251841314137
    2. '(' → logprob: -7.125807762145996
    3. '(heap' → logprob: -13.250807762145996
    4. ')' → logprob: -15.125807762145996
    5. '(n' → logprob: -15.375807762145996
    6. ' (' → logprob: -15.500807762145996
    7. '(s' → logprob: -15.500807762145996
    8. 'h' → logprob: -16.50080680847168
    9. '(ht' → logprob: -16.62580680847168
    10. '((' → logprob: -16.62580680847168

Token 22: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.842555426876061e-06
    2. '))' → logprob: -12.500004768371582
    3. ')
' → logprob: -14.500004768371582
    4. ' )' → logprob: -16.0000057220459
    5. 'h' → logprob: -16.1250057220459
    6. '[' → logprob: -16.1250057220459
    7. '`)' → logprob: -16.6250057220459
    8. '#' → logprob: -16.8750057220459
    9. '()' → logprob: -17.1250057220459
    10. '）' → logprob: -17.5000057220459

Token 23: 'while' (ID: 7032)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9748802781105042
    2. '.' → logprob: -1.9748802185058594
    3. 'heap' → logprob: -1.9748802185058594
    4. ')' → logprob: -2.2248802185058594
    5. 'for' → logprob: -2.2248802185058594
    6. 'h' → logprob: -2.7248802185058594
    7. '
' → logprob: -4.349880218505859
    8. '```' → logprob: -4.974880218505859
    9. ',
' → logprob: -5.099880218505859
    10. '#' → logprob: -5.224880218505859

Token 24: ' True' (ID: 6432)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.36805227398872375
    2. ' N' → logprob: -1.6180522441864014
    3. ' True' → logprob: -3.1180522441864014
    4. ' len' → logprob: -3.3680522441864014
    5. ' not' → logprob: -3.8680522441864014
    6. ' h' → logprob: -4.7430524826049805
    7. '  ' → logprob: -6.9930524826049805
    8. 'N' → logprob: -8.99305248260498
    9. 'True' → logprob: -9.24305248260498
    10. ' n' → logprob: -9.74305248260498

Token 25: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0008922827546484768
    2. '   ' → logprob: -7.500892162322998
    3. ':
' → logprob: -8.625892639160156
    4. '):' → logprob: -10.125892639160156
    5. ' :' → logprob: -10.125892639160156
    6. '():' → logprob: -10.625892639160156
    7. ':**' → logprob: -10.875892639160156
    8. ',' → logprob: -11.625892639160156
    9. '.' → logprob: -12.000892639160156
    10. '<|end|>' → logprob: -12.500892639160156

Token 26: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00605950178578496
    2. '    
' → logprob: -5.506059646606445
    3. ' ' → logprob: -7.256059646606445
    4. '  
' → logprob: -7.881059646606445
    5. ' 
' → logprob: -8.631059646606445
    6. '  ' → logprob: -9.131059646606445
    7. '   
' → logprob: -9.256059646606445
    8. ' if' → logprob: -9.381059646606445
    9. ',' → logprob: -10.131059646606445
    10. '[' → logprob: -10.256059646606445

Token 27: ' n' (ID: 297)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.9174005389213562
    2. 'x' → logprob: -1.542400598526001
    3. '   ' → logprob: -2.417400598526001
    4. ' val' → logprob: -2.667400598526001
    5. ' if' → logprob: -2.667400598526001
    6. ' n' → logprob: -3.542400598526001
    7. 'n' (adapté à ' n') → logprob: -3.542400598526001
    8. 'v' → logprob: -3.792400598526001
    9. ' v' → logprob: -4.542400360107422
    10. 'val' → logprob: -4.667400360107422

Token 28: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1738377958536148
    2. '=' → logprob: -2.048837900161743
    3. ' ' → logprob: -3.673837900161743
    4. '+' → logprob: -7.423837661743164
    5. '   ' → logprob: -7.423837661743164
    6. '>' → logprob: -7.548837661743164
    7. ' >' → logprob: -7.548837661743164
    8. '  ' → logprob: -7.673837661743164
    9. 'ext' → logprob: -7.673837661743164
    10. '-' → logprob: -8.173837661743164

Token 29: ' heap' (ID: 37237)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.14369426667690277
    2. ' int' → logprob: -2.0186941623687744
    3. 'input' → logprob: -7.1436944007873535
    4. ' input' → logprob: -8.893693923950195
    5. 'heap' → logprob: -10.268693923950195
    6. 'n' → logprob: -10.893693923950195
    7. ' ' → logprob: -11.893693923950195
    8. '<int' → logprob: -12.268693923950195
    9. ' heap' → logprob: -12.393693923950195
    10. '   ' → logprob: -12.393693923950195

Token 30: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -3.128163257315464e-07
    2. 'h' → logprob: -16.0
    3. '.' → logprob: -16.75
    4. '.pop' → logprob: -16.75
    5. '.append' → logprob: -17.0
    6. 'p' → logprob: -17.0
    7. '.q' → logprob: -17.125
    8. '.push' → logprob: -17.375
    9. '```' → logprob: -18.0
    10. '[' → logprob: -18.375

Token 31: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.00264712143689394
    2. '.' → logprob: -6.1276469230651855
    3. '.heap' → logprob: -7.7526469230651855
    4. '.pop' → logprob: -10.877647399902344
    5. '.p' → logprob: -12.627647399902344
    6. '.h' → logprob: -13.252647399902344
    7. '.poll' → logprob: -13.627647399902344
    8. '.peek' → logprob: -13.752647399902344
    9. '.n' → logprob: -13.752647399902344
    10. '.q' → logprob: -14.002647399902344

Token 32: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -2.081584716506768e-05
    2. 'pp' → logprob: -10.875020980834961
    3. 'ap' → logprob: -13.375020980834961
    4. 'a' → logprob: -16.25002098083496
    5. 'q' → logprob: -16.37502098083496
    6. 'appen' → logprob: -17.50002098083496
    7. 'pop' → logprob: -18.50002098083496
    8. '[' → logprob: -18.62502098083496
    9. 'push' → logprob: -19.00002098083496
    10. 'p' → logprob: -19.00002098083496

Token 33: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.061972957104444504
    2. 'ush' → logprob: -2.8119728565216064
    3. ' op' → logprob: -13.311972618103027
    4. '```' → logprob: -14.186972618103027
    5. 'o' → logprob: -14.436972618103027
    6. '[' → logprob: -14.561972618103027
    7. 'opf' → logprob: -14.811972618103027
    8. '   ' → logprob: -15.061972618103027
    9. '	op' → logprob: -15.811972618103027
    10. '(op' → logprob: -15.936972618103027

Token 34: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.00011117222311440855
    2. '(' → logprob: -9.12511157989502
    3. '(heap' → logprob: -13.37511157989502
    4. '(n' → logprob: -14.37511157989502
    5. 'h' → logprob: -17.125110626220703
    6. ')' → logprob: -17.375110626220703
    7. ' (' → logprob: -17.500110626220703
    8. '(q' → logprob: -18.250110626220703
    9. '(ht' → logprob: -18.625110626220703
    10. '```' → logprob: -19.250110626220703

Token 35: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00014585316239390522
    2. ')
' → logprob: -9.12514591217041
    3. ' )' → logprob: -10.87514591217041
    4. '   ' → logprob: -11.62514591217041
    5. ')+' → logprob: -12.62514591217041
    6. '))' → logprob: -13.37514591217041
    7. '+' → logprob: -13.87514591217041
    8. ')*' → logprob: -14.62514591217041
    9. '*' → logprob: -14.75014591217041
    10. ')
' → logprob: -14.75014591217041

Token 36: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.3579727411270142
    2. ' if' → logprob: -1.8579727411270142
    3. 'if' → logprob: -1.8579727411270142
    4. '   ' → logprob: -2.1079726219177246
    5. ' 
' → logprob: -2.8579726219177246
    6. ')' → logprob: -2.8579726219177246
    7. ' ' → logprob: -2.9829726219177246
    8. '    
' → logprob: -3.1079726219177246
    9. '+' → logprob: -3.4829726219177246
    10. '+
' → logprob: -4.107972621917725

Token 37: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6243458390235901
    2. ' if' → logprob: -1.3743457794189453
    3. 'if' (adapté à ' if') → logprob: -1.6243457794189453
    4. ' print' → logprob: -4.624345779418945
    5. '   ' → logprob: -5.749345779418945
    6. '```' → logprob: -7.249345779418945
    7. ' for' → logprob: -8.749345779418945
    8. 'for' → logprob: -8.999345779418945
    9. ' ' → logprob: -9.499345779418945
    10. '    
' → logprob: -10.124345779418945

Token 38: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.04858827963471413
    2. 'n' → logprob: -3.048588275909424
    3. '	n' → logprob: -14.798588752746582
    4. ' ' → logprob: -15.548588752746582
    5. '   ' → logprob: -16.173587799072266
    6. ' ' → logprob: -16.423587799072266
    7. ')n' → logprob: -16.923587799072266
    8. '<|end|>' → logprob: -17.173587799072266
    9. ' len' → logprob: -17.673587799072266
    10. 'N' → logprob: -17.923587799072266

Token 39: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.8076131939888
    2. '>' → logprob: -0.9326131939888
    3. ' ==' → logprob: -2.4326131343841553
    4. '==' → logprob: -3.0576131343841553
    5. ' >=' → logprob: -4.307613372802734
    6. '>=' → logprob: -5.182613372802734
    7. '%' → logprob: -5.557613372802734
    8. '*' → logprob: -7.057613372802734
    9. ' ' → logprob: -7.432613372802734
    10. ' %' → logprob: -7.557613372802734

Token 40: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0067209405824542046
    2. ' N' → logprob: -5.006721019744873
    3. '=N' → logprob: -12.881720542907715
    4. '=' → logprob: -13.256720542907715
    5. ' ' → logprob: -14.756720542907715
    6. '100' → logprob: -15.506720542907715
    7. '	N' → logprob: -15.506720542907715
    8. '>N' → logprob: -15.631720542907715
    9. '  ' → logprob: -15.881720542907715
    10. '   ' → logprob: -16.25672149658203

Token 41: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00012248923303559422
    2. ':
' → logprob: -9.1251220703125
    3. '):' → logprob: -12.0001220703125
    4. ' :' → logprob: -12.1251220703125
    5. ':return' → logprob: -14.2501220703125
    6. '   ' → logprob: -14.8751220703125
    7. ',' → logprob: -15.1251220703125
    8. ')' → logprob: -15.5001220703125
    9. ':**' → logprob: -16.8751220703125
    10. '+:' → logprob: -17.0001220703125

Token 42: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04870148375630379
    2. '   ' → logprob: -3.048701524734497
    3. '```' → logprob: -9.673701286315918
    4. '    
' → logprob: -11.423701286315918
    5. ' break' → logprob: -11.548701286315918
    6. ':' → logprob: -11.798701286315918
    7. '        
' → logprob: -12.173701286315918
    8. '
' → logprob: -12.923701286315918
    9. '    ' → logprob: -13.298701286315918
    10. ' ' → logprob: -13.423701286315918

Token 43: ' print' (ID: 2123)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.062453288584947586
    2. ' break' → logprob: -3.312453269958496
    3. '   ' → logprob: -4.312453269958496
    4. 'break' → logprob: -4.562453269958496
    5. 'print' (adapté à ' print') → logprob: -9.187453269958496
    6. '	break' → logprob: -9.187453269958496
    7. ' print' → logprob: -10.312453269958496
    8. '```' → logprob: -10.437453269958496
    9. '           ' → logprob: -12.812453269958496
    10. ' ' → logprob: -13.187453269958496

Token 44: '('' (ID: 706)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.018185297027230263
    2. '(' → logprob: -4.018185138702393
    3. 'n' → logprob: -10.26818561553955
    4. ' (' → logprob: -15.01818561553955
    5. '()' → logprob: -16.143184661865234
    6. '(N' → logprob: -16.518184661865234
    7. '(
' → logprob: -16.893184661865234
    8. ' n' → logprob: -16.893184661865234
    9. '(s' → logprob: -17.893184661865234
    10. '(

' → logprob: -18.143184661865234

Token 45: 'No' (ID: 3160)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0010366219794377685
    2. ' n' → logprob: -6.876036643981934
    3. '(n' → logprob: -13.251036643981934
    4. ')n' → logprob: -14.876036643981934
    5. '0' → logprob: -15.376036643981934
    6. 'N' → logprob: -15.501036643981934
    7. '	n' → logprob: -15.626036643981934
    8. 'n't' → logprob: -15.626036643981934
    9. ''' → logprob: -15.876036643981934
    10. ' ' → logprob: -15.876036643981934

Token 46: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.016556261107325554
    2. '')' → logprob: -4.141556262969971
    3. 'n' → logprob: -8.141555786132812
    4. '")' → logprob: -9.891555786132812
    5. 't' → logprob: -10.141555786132812
    6. ' )' → logprob: -10.266555786132812
    7. 'ne' → logprob: -10.391555786132812
    8. ')
' → logprob: -10.891555786132812
    9. '\n' → logprob: -11.391555786132812
    10. 'r' → logprob: -11.391555786132812

Token 47: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0035538622178137302
    2. '   ' → logprob: -5.878553867340088
    3. '
' → logprob: -8.62855339050293
    4. '        
' → logprob: -8.75355339050293
    5. '    ' → logprob: -9.25355339050293
    6. '    
' → logprob: -10.00355339050293
    7. '```' → logprob: -10.12855339050293
    8. '        ' → logprob: -10.12855339050293
    9. '           ' → logprob: -10.25355339050293
    10. '      ' → logprob: -10.37855339050293

Token 48: ' break' (ID: 2338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00037192381569184363
    2. '   ' → logprob: -8.625371932983398
    3. '	break' → logprob: -9.625371932983398
    4. ' break' → logprob: -9.625371932983398
    5. '	' → logprob: -11.125371932983398
    6. 'break' (adapté à ' break') → logprob: -11.375371932983398
    7. '\n' → logprob: -11.750371932983398
    8. '      ' → logprob: -12.125371932983398
    9. '<|end|>' → logprob: -12.375371932983398
    10. ' ' → logprob: -12.625371932983398

Token 49: '
' (ID: 198)
  Prédit: '    
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    
' → logprob: -0.973205029964447
    2. '   ' → logprob: -1.0982050895690918
    3. '```' → logprob: -1.5982050895690918
    4. '
' → logprob: -3.848205089569092
    5. '   
' → logprob: -3.848205089569092
    6. '  
' → logprob: -3.973205089569092
    7. ' 
' → logprob: -4.473205089569092
    8. '\n' → logprob: -5.223205089569092
    9. '<|end|>' → logprob: -5.223205089569092
    10. 'n' → logprob: -7.723205089569092

Token 50: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8039770126342773
    2. '    
' → logprob: -1.3039770126342773
    3. '```' → logprob: -1.6789770126342773
    4. '
' → logprob: -2.9289770126342773
    5. ' 
' → logprob: -4.053977012634277
    6. '   
' → logprob: -4.428977012634277
    7. '  
' → logprob: -5.053977012634277
    8. '\n' → logprob: -6.678977012634277
    9. ' ' → logprob: -7.303977012634277
    10. '     
' → logprob: -7.553977012634277

Token 51: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04169920086860657
    2. '    
' → logprob: -4.291699409484863
    3. ' if' → logprob: -4.541699409484863
    4. '```' → logprob: -4.916699409484863
    5. 'if' (adapté à ' if') → logprob: -5.666699409484863
    6. '
' → logprob: -6.666699409484863
    7. '    ' → logprob: -7.291699409484863
    8. '<|end|>' → logprob: -7.416699409484863
    9. '	if' → logprob: -7.541699409484863
    10. ' 
' → logprob: -7.666699409484863

Token 52: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.0067161982879042625
    2. 'n' → logprob: -5.006716251373291
    3. '	n' → logprob: -15.006715774536133
    4. '<|end|>' → logprob: -15.631715774536133
    5. ' ' → logprob: -16.256715774536133
    6. '_n' → logprob: -16.256715774536133
    7. ' ' → logprob: -16.506715774536133
    8. '(n' → logprob: -17.506715774536133
    9. 's' → logprob: -18.256715774536133
    10. ')n' → logprob: -18.381715774536133

Token 53: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4288095235824585
    2. ' ==' → logprob: -1.0538095235824585
    3. '=' → logprob: -9.30380916595459
    4. ' ' → logprob: -12.42880916595459
    5. ' ' → logprob: -12.55380916595459
    6. '%' → logprob: -12.92880916595459
    7. ')==' → logprob: -13.42880916595459
    8. ')' → logprob: -13.55380916595459
    9. ']==' → logprob: -13.67880916595459
    10. ' =' → logprob: -14.30380916595459

Token 54: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.061970822513103485
    2. ' N' → logprob: -2.8119707107543945
    3. ' ' → logprob: -12.936970710754395
    4. '	N' → logprob: -14.561970710754395
    5. '<|end|>' → logprob: -15.686970710754395
    6. '   ' → logprob: -15.936970710754395
    7. '0' → logprob: -17.18697166442871
    8. '  ' → logprob: -17.56197166442871
    9. '<N' → logprob: -18.56197166442871
    10. '_N' → logprob: -18.68697166442871

Token 55: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0017089712200686336
    2. ':
' → logprob: -6.376708984375
    3. '):' → logprob: -13.001708984375
    4. '   ' → logprob: -13.126708984375
    5. ' :' → logprob: -14.126708984375
    6. '       ' → logprob: -14.751708984375
    7. '):
' → logprob: -15.126708984375
    8. '<|end|>' → logprob: -15.251708984375
    9. ':

' → logprob: -15.501708984375
    10. 'print' → logprob: -15.626708984375

Token 56: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02588091790676117
    2. ' print' → logprob: -4.650880813598633
    3. 'print' → logprob: -4.775880813598633
    4. '   ' → logprob: -4.900880813598633
    5. ' ' → logprob: -10.650880813598633
    6. '```' → logprob: -10.650880813598633
    7. '    ' → logprob: -10.900880813598633
    8. '	print' → logprob: -11.275880813598633
    9. '        
' → logprob: -11.400880813598633
    10. '    
' → logprob: -11.775880813598633

Token 57: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.4029354453086853
    2. ' print' → logprob: -1.15293550491333
    3. '       ' → logprob: -4.15293550491333
    4. '   ' → logprob: -8.652935028076172
    5. '	print' → logprob: -10.652935028076172
    6. ' ' → logprob: -11.277935028076172
    7. '
' → logprob: -13.152935028076172
    8. '        
' → logprob: -13.902935028076172
    9. '```' → logprob: -13.902935028076172
    10. '  ' → logprob: -14.527935028076172

Token 58: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.023304877802729607
    2. '(' → logprob: -3.7733049392700195
    3. '("' → logprob: -9.77330493927002
    4. '(True' → logprob: -14.27330493927002
    5. ' ('' → logprob: -14.52330493927002
    6. '(`' → logprob: -15.02330493927002
    7. '('(' → logprob: -15.64830493927002
    8. '()' → logprob: -15.89830493927002
    9. '(('' → logprob: -16.023303985595703
    10. ''' → logprob: -16.023303985595703

Token 59: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -8.828512363834307e-05
    2. ''' → logprob: -9.375088691711426
    3. 'YES' → logprob: -13.250088691711426
    4. 'Ye' → logprob: -13.500088691711426
    5. ' Yes' → logprob: -15.875088691711426
    6. '"' → logprob: -16.25008773803711
    7. 'Y' → logprob: -17.50008773803711
    8. 'yes' → logprob: -17.62508773803711
    9. 'Ok' → logprob: -17.87508773803711
    10. '```' → logprob: -18.50008773803711

Token 60: '')
' (ID: 2515)
  Prédit: '')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')
' → logprob: -0.9417595863342285
    2. ')' → logprob: -1.1917595863342285
    3. '')' → logprob: -1.4417595863342285
    4. ')
' → logprob: -2.8167595863342285
    5. '       ' → logprob: -4.9417595863342285
    6. ')')
' → logprob: -6.4417595863342285
    7. '   ' → logprob: -7.1917595863342285
    8. '```' → logprob: -8.19175910949707
    9. '')
' → logprob: -8.81675910949707
    10. ')
' → logprob: -10.31675910949707

Token 61: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6573435664176941
    2. '       ' → logprob: -0.7823435664176941
    3. '    
' → logprob: -4.65734338760376
    4. '
' → logprob: -5.15734338760376
    5. '```' → logprob: -5.53234338760376
    6. '        
' → logprob: -5.65734338760376
    7. '  
' → logprob: -7.40734338760376
    8. '   
' → logprob: -8.782343864440918
    9. ' 
' → logprob: -8.907343864440918
    10. ' ' → logprob: -9.157343864440918

Token 62: ' break' (ID: 2338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -3.619311974034645e-05
    2. '   ' → logprob: -10.750036239624023
    3. '	break' → logprob: -12.625036239624023
    4. '	' → logprob: -12.750036239624023
    5. '```' → logprob: -13.000036239624023
    6. '        
' → logprob: -13.625036239624023
    7. 'break' (adapté à ' break') → logprob: -14.000036239624023
    8. '      ' → logprob: -14.000036239624023
    9. ' break' → logprob: -14.125036239624023
    10. '     ' → logprob: -14.625036239624023

Token 63: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7724877595901489
    2. '
' → logprob: -1.397487759590149
    3. '```' → logprob: -1.522487759590149
    4. '    
' → logprob: -3.5224876403808594
    5. '``' → logprob: -3.6474876403808594
    6. 'for' → logprob: -5.147487640380859
    7. 'heap' → logprob: -5.772487640380859
    8. '   
' → logprob: -6.397487640380859
    9. '  
' → logprob: -6.522487640380859
    10. ' for' → logprob: -6.647487640380859

Token 64: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22453637421131134
    2. '```' → logprob: -2.224536418914795
    3. '
' → logprob: -3.099536418914795
    4. '    
' → logprob: -3.724536418914795
    5. 'heap' → logprob: -4.849536418914795
    6. '``' → logprob: -4.849536418914795
    7. 'for' → logprob: -5.849536418914795
    8. ' for' → logprob: -6.599536418914795
    9. '   
' → logprob: -6.724536418914795
    10. '  
' → logprob: -6.974536418914795

Token 65: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -0.034858476370573044
    2. 'for' → logprob: -4.034858703613281
    3. '```' → logprob: -4.909858703613281
    4. '   ' → logprob: -5.159858703613281
    5. ' for' → logprob: -6.159858703613281
    6. ' heap' → logprob: -6.784858703613281
    7. '``' → logprob: -8.659858703613281
    8. '    
' → logprob: -11.659858703613281
    9. '
' → logprob: -11.909858703613281
    10. ' ' → logprob: -12.034858703613281

Token 66: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -4.60414821645827e-06
    2. '.q' → logprob: -13.000004768371582
    3. '.push' → logprob: -14.125004768371582
    4. '.he' → logprob: -14.375004768371582
    5. 'p' → logprob: -15.500004768371582
    6. '.append' → logprob: -15.625004768371582
    7. '.' → logprob: -15.625004768371582
    8. '```' → logprob: -16.375003814697266
    9. '.heap' → logprob: -16.500003814697266
    10. '	q' → logprob: -17.250003814697266

Token 67: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.00019543453527148813
    2. '.heap' → logprob: -8.625195503234863
    3. '.' → logprob: -11.125195503234863
    4. '```' → logprob: -14.750195503234863
    5. 'he' → logprob: -14.875195503234863
    6. '.h' → logprob: -16.875194549560547
    7. '.push' → logprob: -17.000194549560547
    8. '   ' → logprob: -17.000194549560547
    9. ' .' → logprob: -17.125194549560547
    10. '_he' → logprob: -17.250194549560547

Token 68: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.38696277141571045
    2. 'ap' → logprob: -1.1369627714157104
    3. 'ап' → logprob: -9.636962890625
    4. 'a' → logprob: -10.886962890625
    5. 'apk' → logprob: -13.636962890625
    6. 'qp' → logprob: -13.636962890625
    7. 'p' → logprob: -13.761962890625
    8. 'q' → logprob: -13.761962890625
    9. '```' → logprob: -14.386962890625
    10. '[' → logprob: -14.761962890625

Token 69: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.0001387009397149086
    2. 'push' → logprob: -9.500138282775879
    3. 'p' → logprob: -9.875138282775879
    4. 'u' → logprob: -12.375138282775879
    5. 'l' → logprob: -13.125138282775879
    6. 'q' → logprob: -13.250138282775879
    7. 'op' → logprob: -14.125138282775879
    8. 'app' → logprob: -14.375138282775879
    9. '```' → logprob: -14.375138282775879
    10. 'h' → logprob: -14.500138282775879

Token 70: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -3.4121114822482923e-06
    2. '(' → logprob: -12.625003814697266
    3. ' (' → logprob: -18.250003814697266
    4. 'h' → logprob: -18.500003814697266
    5. '(heap' → logprob: -18.750003814697266
    6. '(s' → logprob: -20.375003814697266
    7. '```' → logprob: -20.750003814697266
    8. '(n' → logprob: -20.875003814697266
    9. 's' → logprob: -21.125003814697266
    10. '(
' → logprob: -21.125003814697266

Token 71: ',' (ID: 11)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0352376289665699
    2. '(h' → logprob: -3.9102375507354736
    3. '(' → logprob: -5.035237789154053
    4. ',' → logprob: -5.035237789154053
    5. ')' → logprob: -7.535237789154053
    6. ',n' → logprob: -8.160237312316895
    7. ',h' → logprob: -8.160237312316895
    8. ' (' → logprob: -8.285237312316895
    9. ' ,' → logprob: -9.410237312316895
    10. '),' → logprob: -9.535237312316895

Token 72: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.04402978718280792
    2. ' n' → logprob: -3.169029712677002
    3. '2' → logprob: -7.044029712677002
    4. '10' → logprob: -9.91903018951416
    5. '3' → logprob: -10.04403018951416
    6. '4' → logprob: -10.41903018951416
    7. ' ' → logprob: -10.91903018951416
    8. '7' → logprob: -12.66903018951416
    9. '6' → logprob: -13.04403018951416
    10. '   ' → logprob: -13.16903018951416

Token 73: ' +' (ID: 659)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.4758598506450653
    2. ' *' → logprob: -0.9758598804473877
    3. ' +' → logprob: -7.225859642028809
    4. '+' → logprob: -7.600859642028809
    5. '4' → logprob: -7.725859642028809
    6. ' ' → logprob: -9.850859642028809
    7. '2' → logprob: -10.350859642028809
    8. '3' → logprob: -11.600859642028809
    9. '1' → logprob: -11.850859642028809
    10. '7' → logprob: -13.225859642028809

Token 74: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.0037320225965231657
    2. '1' → logprob: -5.753732204437256
    3. '3' → logprob: -8.378731727600098
    4. '7' → logprob: -8.628731727600098
    5. '2' → logprob: -10.003731727600098
    6. ' ' → logprob: -10.003731727600098
    7. '10' → logprob: -10.503731727600098
    8. '5' → logprob: -10.878731727600098
    9. '6' → logprob: -13.628731727600098
    10. 'a' → logprob: -13.753731727600098

Token 75: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -5.836499985889532e-05
    2. '1' → logprob: -10.5000581741333
    3. '7' → logprob: -11.3750581741333
    4. '10' → logprob: -12.2500581741333
    5. ' ' → logprob: -12.5000581741333
    6. '3' → logprob: -12.6250581741333
    7. '5' → logprob: -12.7500581741333
    8. 'a' → logprob: -14.0000581741333
    9. '2' → logprob: -14.6250581741333
    10. '11' → logprob: -15.0000581741333

Token 76: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.3136429190635681
    2. ')' → logprob: -1.313642978668213
    3. ' )
' → logprob: -8.438642501831055
    4. ')
' → logprob: -8.813642501831055
    5. ' )' → logprob: -11.313642501831055
    6. ')

' → logprob: -12.688642501831055
    7. '   ' → logprob: -15.688642501831055
    8. ')n' → logprob: -16.313642501831055
    9. ' )
' → logprob: -16.438642501831055
    10. ')`
' → logprob: -16.438642501831055

Token 77: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01381533034145832
    2. 'heap' → logprob: -5.388815402984619
    3. '    
' → logprob: -6.263815402984619
    4. '(heap' → logprob: -6.513815402984619
    5. ' ' → logprob: -6.638815402984619
    6. ')' → logprob: -6.763815402984619
    7. '  
' → logprob: -7.138815402984619
    8. ' 
' → logprob: -7.263815402984619
    9. '```' → logprob: -7.513815402984619
    10. ')
' → logprob: -8.138814926147461

Token 78: ' heap' (ID: 37237)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3094017207622528
    2. '   ' → logprob: -1.6844017505645752
    3. ' ' → logprob: -3.684401750564575
    4. 'heap' (adapté à ' heap') → logprob: -3.809401750564575
    5. ')
' → logprob: -4.934401512145996
    6. ' )' → logprob: -5.184401512145996
    7. 'n' → logprob: -5.684401512145996
    8. ' heap' → logprob: -6.059401512145996
    9. '<|end|>' → logprob: -6.059401512145996
    10. ' 
' → logprob: -6.059401512145996

Token 79: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -9.014684110297821e-06
    2. 'p' → logprob: -12.125008583068848
    3. 'h' → logprob: -14.250008583068848
    4. '.he' → logprob: -15.000008583068848
    5. 'hq' → logprob: -15.000008583068848
    6. '.q' → logprob: -15.125008583068848
    7. '.push' → logprob: -15.250008583068848
    8. 'op' → logprob: -15.750008583068848
    9. 'ush' → logprob: -15.750008583068848
    10. '.heap' → logprob: -15.875008583068848

Token 80: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.005263760685920715
    2. '.heap' → logprob: -5.255263805389404
    3. '.' → logprob: -11.380263328552246
    4. 'he' → logprob: -12.005263328552246
    5. ' .' → logprob: -12.380263328552246
    6. 'heap' → logprob: -12.505263328552246
    7. '.h' → logprob: -13.130263328552246
    8. '​.' → logprob: -14.630263328552246
    9. '```' → logprob: -15.005263328552246
    10. '.push' → logprob: -15.505263328552246

Token 81: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.0019325626781210303
    2. 'ap' → logprob: -6.251932621002197
    3. 'ап' → logprob: -13.251932144165039
    4. 'aps' → logprob: -14.001932144165039
    5. 'a' → logprob: -14.501932144165039
    6. 'qp' → logprob: -15.376932144165039
    7. 'appt' → logprob: -15.876932144165039
    8. 'p' → logprob: -16.00193214416504
    9. 'appen' → logprob: -16.50193214416504
    10. '.app' → logprob: -16.50193214416504

Token 82: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -9.729906196298543e-06
    2. 'push' → logprob: -11.750009536743164
    3. 'op' → logprob: -13.625009536743164
    4. 'u' → logprob: -16.125009536743164
    5. 'us' → logprob: -16.125009536743164
    6. 'e' → logprob: -16.375009536743164
    7. '   ' → logprob: -16.750009536743164
    8. 'h' → logprob: -17.125009536743164
    9. '[' → logprob: -17.250009536743164
    10. 'y' → logprob: -17.375009536743164

Token 83: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.023245712742209435
    2. '(' → logprob: -3.7732458114624023
    3. '(n' → logprob: -16.648244857788086
    4. 'h' → logprob: -17.023244857788086
    5. '(
' → logprob: -18.148244857788086
    6. '(H' → logprob: -19.023244857788086
    7. ' (' → logprob: -19.023244857788086
    8. '(heap' → logprob: -19.023244857788086
    9. '(ht' → logprob: -19.148244857788086
    10. '('' → logprob: -19.398244857788086

Token 84: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013715129171032459
    2. ' ,' → logprob: -9.000137329101562
    3. ',h' → logprob: -11.875137329101562
    4. ',n' → logprob: -12.125137329101562
    5. '(' → logprob: -14.500137329101562
    6. ' ' → logprob: -14.750137329101562
    7. 'h' → logprob: -16.250137329101562
    8. ',
' → logprob: -16.875137329101562
    9. '(n' → logprob: -17.000137329101562
    10. '`,' → logprob: -17.250137329101562

Token 85: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.008638677187263966
    2. 'n' → logprob: -4.758638858795166
    3. ' ' → logprob: -11.133638381958008
    4. ' ' → logprob: -12.258638381958008
    5. '7' → logprob: -13.383638381958008
    6. '4' → logprob: -13.383638381958008
    7. '	n' → logprob: -14.508638381958008
    8. ')' → logprob: -15.508638381958008
    9. '32' → logprob: -15.883638381958008
    10. '6' → logprob: -16.008638381958008

Token 86: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.38688382506370544
    2. '+' → logprob: -1.1368838548660278
    3. ' ' → logprob: -11.386883735656738
    4. ')' → logprob: -14.511883735656738
    5. '7' → logprob: -15.136883735656738
    6. '[' → logprob: -15.886883735656738
    7. ' ' → logprob: -16.136884689331055
    8. '   ' → logprob: -16.511884689331055
    9. '＋' → logprob: -16.511884689331055
    10. '```' → logprob: -16.511884689331055

Token 87: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0005537479883059859
    2. ' ' → logprob: -7.500553607940674
    3. '   ' → logprob: -15.375554084777832
    4. '７' → logprob: -16.625553131103516
    5. ' ' → logprob: -16.688053131103516
    6. '۷' → logprob: -16.688053131103516
    7. '  ' → logprob: -16.750553131103516
    8. ')' → logprob: -17.063053131103516
    9. '```' → logprob: -17.438053131103516
    10. '٧' → logprob: -17.500553131103516

Token 88: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -13.12500286102295
    3. '７' → logprob: -15.87500286102295
    4. '७' → logprob: -16.625001907348633
    5. '۷' → logprob: -16.812501907348633
    6. '৭' → logprob: -17.187501907348633
    7. '٧' → logprob: -17.500001907348633
    8. '77' → logprob: -17.687501907348633
    9. '711' → logprob: -19.375001907348633
    10. '﻿' → logprob: -19.562501907348633

Token 89: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.537868779967539e-06
    2. ')
' → logprob: -12.125008583068848
    3. ' )' → logprob: -12.750008583068848
    4. ')
' → logprob: -17.00000762939453
    5. '))' → logprob: -17.25000762939453
    6. ')`' → logprob: -17.25000762939453
    7. '')' → logprob: -17.37500762939453
    8. ')

' → logprob: -17.62500762939453
    9. ')#' → logprob: -18.37500762939453
    10. ')}' → logprob: -18.50000762939453


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 87
Tokens correctement prédits (1ère position, stricte): 42
Tokens correctement prédits (1ère position, avec adaptation): 44
Tokens correctement prédits (top 10): 75
Précision stricte (1ère position): 48.28%
Précision adaptée (1ère position): 50.57%
Précision (top 10): 86.21%
================================================================================
