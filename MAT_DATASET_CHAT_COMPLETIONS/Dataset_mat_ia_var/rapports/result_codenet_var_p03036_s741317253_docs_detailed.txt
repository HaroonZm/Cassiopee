================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:00:24
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def sequence_calculation(r, D, x):
    """
    Calcule et affiche les 10 premiers termes d'une suite récurrente définie par :
    x_{n+1} = r * x_n - D

    Args:
        r (int): Le multiplicateur appliqué à chaque terme précédent.
        D (int): La constante soustraite à chaque itération.
        x (int): Le terme initial de la suite.

    Returns:
        None: Affiche chaque terme généré à chaque étape.
    """
    # Boucle sur 10 itérations pour calculer et afficher chaque terme de la suite
    for i in range(1, 11):
        # Calcul du nouveau terme selon la relation de récurrence
        x = r * x - D
        # Affichage du terme actuel
        print(x)

if __name__ == "__main__":
    # Lecture des trois entiers r, D, x depuis l'entrée standard
    r, D, x = map(int, input("Entrez r, D et x séparés par des espaces : ").split())
    # Appel de la fonction pour générer et afficher les termes de la suite
    sequence_calculation(r, D, x)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' sequence' (ID: 16281)
  → Token d'amorce (pas de prédiction)

Token 2: '_cal' (ID: 50948)
  → Token d'amorce (pas de prédiction)

Token 3: 'culation' (ID: 41845)
  Prédit: 'culate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'culate' → logprob: -0.07930943369865417
    2. 'c' → logprob: -3.3293094635009766
    3. 'culation' → logprob: -4.079309463500977
    4. 'culator' → logprob: -4.954309463500977
    5. 'cula' → logprob: -5.079309463500977
    6. 'ulate' → logprob: -5.204309463500977
    7. 'cul' → logprob: -6.829309463500977
    8. 'cu' → logprob: -6.954309463500977
    9. 'cular' → logprob: -7.329309463500977
    10. '_c' → logprob: -7.829309463500977

Token 4: '(r' (ID: 4729)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0018815194489434361
    2. '_' → logprob: -6.5018815994262695
    3. '```' → logprob: -9.00188159942627
    4. '(:' → logprob: -9.50188159942627
    5. ':' → logprob: -9.75188159942627
    6. '():' → logprob: -10.75188159942627
    7. '(_:' → logprob: -10.87688159942627
    8. ' (' → logprob: -11.12688159942627
    9. '[' → logprob: -11.62688159942627
    10. '(
' → logprob: -11.62688159942627

Token 5: ',' (ID: 11)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.024394050240516663
    2. 'a' → logprob: -3.7743940353393555
    3. '(' → logprob: -8.149394035339355
    4. ')' → logprob: -8.149394035339355
    5. '):' → logprob: -9.399394035339355
    6. 'eturn' → logprob: -9.524394035339355
    7. ')e' → logprob: -9.524394035339355
    8. '```' → logprob: -10.024394035339355
    9. '(a' → logprob: -10.274394035339355
    10. '):

' → logprob: -10.524394035339355

Token 6: ' D' (ID: 415)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.30763959884643555
    2. 'n' → logprob: -1.4326395988464355
    3. ' t' → logprob: -5.3076395988464355
    4. ' s' → logprob: -5.5576395988464355
    5. ' x' → logprob: -6.3076395988464355
    6. ' k' → logprob: -6.4326395988464355
    7. ' m' → logprob: -6.6826395988464355
    8. 's' → logprob: -6.6826395988464355
    9. ' c' → logprob: -6.8076395988464355
    10. 't' → logprob: -7.1826395988464355

Token 7: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2552643418312073
    2. ',' → logprob: -1.5052642822265625
    3. ')' → logprob: -5.8802642822265625
    4. '[' → logprob: -9.380264282226562
    5. '_' → logprob: -9.505264282226562
    6. ':' → logprob: -9.505264282226562
    7. ' ,' → logprob: -9.505264282226562
    8. 's' → logprob: -10.005264282226562
    9. ' ):' → logprob: -10.880264282226562
    10. 'e' → logprob: -11.255264282226562

Token 8: ' x' (ID: 1215)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6778258681297302
    2. ' n' → logprob: -1.177825927734375
    3. 'N' → logprob: -2.927825927734375
    4. ' N' → logprob: -3.177825927734375
    5. ' T' → logprob: -4.552825927734375
    6. ' t' → logprob: -4.802825927734375
    7. 'T' → logprob: -4.927825927734375
    8. 'k' → logprob: -5.052825927734375
    9. 't' → logprob: -5.302825927734375
    10. ' k' → logprob: -5.552825927734375

Token 9: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.007266320753842592
    2. ')' → logprob: -5.757266521453857
    3. ',' → logprob: -5.882266521453857
    4. '[' → logprob: -7.382266521453857
    5. 's' → logprob: -7.507266521453857
    6. '_' → logprob: -10.6322660446167
    7. ':' → logprob: -11.1322660446167
    8. '```' → logprob: -11.1322660446167
    9. '**' → logprob: -11.7572660446167
    10. ''):' → logprob: -11.8822660446167

Token 10: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18964724242687225
    2. '   ' → logprob: -1.8146471977233887
    3. '```' → logprob: -5.939647197723389
    4. '(' → logprob: -6.689647197723389
    5. ''' → logprob: -7.064647197723389
    6. '():' → logprob: -7.064647197723389
    7. '_' → logprob: -7.189647197723389
    8. ' ' → logprob: -7.439647197723389
    9. '"' → logprob: -7.564647197723389
    10. '):' → logprob: -7.689647197723389

Token 11: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3098430931568146
    2. ''' → logprob: -3.059843063354492
    3. '_' → logprob: -3.059843063354492
    4. ':' → logprob: -3.059843063354492
    5. '```' → logprob: -3.184843063354492
    6. ' ' → logprob: -3.434843063354492
    7. '\' → logprob: -4.684843063354492
    8. '"' → logprob: -4.684843063354492
    9. '    ' → logprob: -4.934843063354492
    10. '`' → logprob: -5.309843063354492

Token 12: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7930617332458496
    2. 'i' → logprob: -1.4180617332458496
    3. 'r' → logprob: -2.4180617332458496
    4. 'n' → logprob: -2.9180617332458496
    5. '   ' → logprob: -2.9180617332458496
    6. ''' → logprob: -3.4180617332458496
    7. '"""' → logprob: -4.04306173324585
    8. '"' → logprob: -4.91806173324585
    9. ' i' → logprob: -5.16806173324585
    10. ' """' → logprob: -5.41806173324585

Token 13: ' Cal' (ID: 4453)
  Prédit: 'Calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Calculate' → logprob: -0.3211970627307892
    2. 'Calcul' → logprob: -2.071197032928467
    3. '"""' → logprob: -2.571197032928467
    4. '"""
' → logprob: -4.446197032928467
    5. '   ' → logprob: -4.821197032928467
    6. ' Calculate' → logprob: -4.946197032928467
    7. ' Calculates' → logprob: -4.946197032928467
    8. 'Returns' → logprob: -5.196197032928467
    9. 'Per' → logprob: -5.446197032928467
    10. 'Perform' → logprob: -5.446197032928467

Token 14: 'cule' (ID: 45017)
  Prédit: 'culate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'culate' → logprob: -0.13790541887283325
    2. 'c' → logprob: -2.2629053592681885
    3. 'cul' → logprob: -4.012905597686768
    4. '   ' → logprob: -5.887905597686768
    5. 'cula' → logprob: -6.262905597686768
    6. 'cu' → logprob: -6.887905597686768
    7. '```' → logprob: -8.51290512084961
    8. ' ' → logprob: -8.51290512084961
    9. 'l' → logprob: -9.01290512084961
    10. '  ' → logprob: -9.63790512084961

Token 15: ' et' (ID: 859)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.06458891928195953
    2. 'r' → logprob: -2.939589023590088
    3. 'te' → logprob: -4.939589023590088
    4. 't' → logprob: -6.564589023590088
    5. 'tes' → logprob: -8.06458854675293
    6. 'ate' → logprob: -9.18958854675293
    7. 'space' → logprob: -9.56458854675293
    8. 'z' → logprob: -9.68958854675293
    9. 'm' → logprob: -9.81458854675293
    10. ' s' → logprob: -10.18958854675293

Token 16: ' affiche' (ID: 127479)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2257930040359497
    2. ' la' → logprob: -1.7257930040359497
    3. '   ' → logprob: -2.35079288482666
    4. ' calc' → logprob: -2.60079288482666
    5. 'ffect' → logprob: -2.60079288482666
    6. ' retourne' → logprob: -2.60079288482666
    7. ' effect' → logprob: -3.47579288482666
    8. ' return' → logprob: -3.72579288482666
    9. ' transforme' → logprob: -3.72579288482666
    10. 'r' → logprob: -4.85079288482666

Token 17: ' les' (ID: 1341)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5483445525169373
    2. ' l' → logprob: -1.673344612121582
    3. ' la' → logprob: -1.798344612121582
    4. ' le' → logprob: -3.673344612121582
    5. ' ' → logprob: -4.548344612121582
    6. ' s' → logprob: -4.798344612121582
    7. 'r' → logprob: -4.798344612121582
    8. ' les' → logprob: -5.298344612121582
    9. '```' → logprob: -5.548344612121582
    10. 'l' → logprob: -6.048344612121582

Token 18: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.3696212768554688
    2. ' termes' → logprob: -1.4946212768554688
    3. ' n' → logprob: -2.3696212768554688
    4. 's' → logprob: -2.7446212768554688
    5. ' valeurs' → logprob: -2.9946212768554688
    6. '   ' → logprob: -3.2446212768554688
    7. 'n' → logprob: -3.4946212768554688
    8. ' résultats' → logprob: -3.4946212768554688
    9. ' résultat' → logprob: -3.7446212768554688
    10. ' somme' → logprob: -3.8696212768554688

Token 19: '10' (ID: 702)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.9281396865844727
    2. 'val' → logprob: -1.5531396865844727
    3. 's' → logprob: -2.6781396865844727
    4. 'élé' → logprob: -2.8031396865844727
    5. 'ter' → logprob: -3.0531396865844727
    6. ' ' → logprob: -3.1781396865844727
    7. 'é' → logprob: -3.5531396865844727
    8. 'rés' → logprob: -3.8031396865844727
    9. 'r' → logprob: -4.178139686584473
    10. 'prem' → logprob: -4.428139686584473

Token 20: ' premiers' (ID: 59140)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5723740458488464
    2. ' premiers' → logprob: -1.3223741054534912
    3. ' premières' → logprob: -1.9473741054534912
    4. ' premier' → logprob: -5.197373867034912
    5. 'prem' → logprob: -5.447373867034912
    6. '   ' → logprob: -5.822373867034912
    7. ' ' → logprob: -6.072373867034912
    8. ' prochains' → logprob: -6.072373867034912
    9. '  ' → logprob: -6.572373867034912
    10. '_' → logprob: -6.697373867034912

Token 21: ' termes' (ID: 72480)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06397374719381332
    2. '_' → logprob: -3.9389736652374268
    3. ' espaces' → logprob: -3.9389736652374268
    4. '  ' → logprob: -5.313973903656006
    5. 'es' → logprob: -5.938973903656006
    6. 's' → logprob: -5.938973903656006
    7. 'e' → logprob: -5.938973903656006
    8. ' ' → logprob: -6.688973903656006
    9. 'space' → logprob: -6.688973903656006
    10. ' espace' → logprob: -6.938973903656006

Token 22: ' d' (ID: 272)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.08948910236358643
    2. ' d' → logprob: -2.964488983154297
    3. ' ' → logprob: -4.839488983154297
    4. 's' → logprob: -5.214488983154297
    5. '   ' → logprob: -5.214488983154297
    6. ')' → logprob: -5.589488983154297
    7. 'de' → logprob: -5.714488983154297
    8. ' des' → logprob: -6.464488983154297
    9. ' du' → logprob: -6.964488983154297
    10. '_' → logprob: -7.089488983154297

Token 23: ''une' (ID: 13337)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.750313401222229
    2. ''une' → logprob: -1.250313401222229
    3. 'u' → logprob: -2.0003132820129395
    4. 'a' → logprob: -3.1253132820129395
    5. 'e' → logprob: -3.2503132820129395
    6. ''un' → logprob: -4.2503132820129395
    7. 'une' → logprob: -5.8753132820129395
    8. 'es' → logprob: -6.5003132820129395
    9. 's' → logprob: -7.0003132820129395
    10. ' la' → logprob: -7.2503132820129395

Token 24: ' suite' (ID: 13800)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.008401098661124706
    2. ' sequence' → logprob: -6.133400917053223
    3. ' suite' → logprob: -6.383400917053223
    4. 'suite' → logprob: -6.883400917053223
    5. '  ' → logprob: -7.508400917053223
    6. '_' → logprob: -7.758400917053223
    7. ' sé' → logprob: -7.758400917053223
    8. '   ' → logprob: -7.883400917053223
    9. 's' → logprob: -8.008400917053223
    10. ' espace' → logprob: -8.758400917053223

Token 25: ' ré' (ID: 3146)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\' → logprob: -1.2809621095657349
    2. '_' → logprob: -1.9059621095657349
    3. '\n' → logprob: -2.1559619903564453
    4. ' ' → logprob: -2.2809619903564453
    5. ',' → logprob: -2.5309619903564453
    6. '   ' → logprob: -3.5309619903564453
    7. ' de' → logprob: -3.7809619903564453
    8. ')' → logprob: -3.7809619903564453
    9. ' )' → logprob: -3.7809619903564453
    10. ' \' → logprob: -3.7809619903564453

Token 26: 'current' (ID: 5804)
  Prédit: 'current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.09638388454914093
    2. 'curr' → logprob: -2.596383810043335
    3. 'c' → logprob: -4.221384048461914
    4. '_current' → logprob: -6.471384048461914
    5. 'cur' → logprob: -8.471384048461914
    6. 'currency' → logprob: -8.596384048461914
    7. 'urrent' → logprob: -8.971384048461914
    8. '_curr' → logprob: -8.971384048461914
    9. 'cc' → logprob: -9.346384048461914
    10. 'cu' → logprob: -9.721384048461914

Token 27: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.007273060269653797
    2. 'n' → logprob: -5.007273197174072
    3. 'ent' → logprob: -8.382272720336914
    4. 'ence' → logprob: -9.257272720336914
    5. 'nt' → logprob: -9.632272720336914
    6. 'ce' → logprob: -10.257272720336914
    7. 's' → logprob: -10.382272720336914
    8. 'ente' → logprob: -11.007272720336914
    9. 'es' → logprob: -11.132272720336914
    10. ' e' → logprob: -11.507272720336914

Token 28: ' défin' (ID: 57890)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5741215944290161
    2. ' ' → logprob: -1.9491215944290161
    3. ',' → logprob: -2.6991214752197266
    4. '\' → logprob: -2.9491214752197266
    5. ' 
' → logprob: -3.3241214752197266
    6. 'e' → logprob: -3.9491214752197266
    7. '.' → logprob: -3.9491214752197266
    8. ' :' → logprob: -4.199121475219727
    9. ' \' → logprob: -4.449121475219727
    10. '   ' → logprob: -4.574121475219727

Token 29: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.003506826236844063
    2. 'e' → logprob: -5.878506660461426
    3. 'i' → logprob: -7.753506660461426
    4. '```' → logprob: -9.628506660461426
    5. '#' → logprob: -9.878506660461426
    6. 'nie' → logprob: -10.378506660461426
    7. '   ' → logprob: -10.628506660461426
    8. '"""' → logprob: -11.253506660461426
    9. '%e' → logprob: -11.628506660461426
    10. 'inie' → logprob: -11.878506660461426

Token 30: ' par' (ID: 686)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.06757432967424393
    2. ' par' → logprob: -3.4425742626190186
    3. ' ' → logprob: -4.567574501037598
    4. ',' → logprob: -5.067574501037598
    5. 'u' → logprob: -5.567574501037598
    6. 's' → logprob: -6.067574501037598
    7. '\n' → logprob: -6.442574501037598
    8. '\' → logprob: -6.817574501037598
    9. ' \' → logprob: -6.942574501037598
    10. '   ' → logprob: -6.942574501037598

Token 31: ' :
' (ID: 10039)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.161088466644287
    2. ' ' → logprob: -2.036088466644287
    3. 'r' → logprob: -2.411088466644287
    4. 'un' → logprob: -2.536088466644287
    5. ' un' → logprob: -2.661088466644287
    6. '```' → logprob: -2.786088466644287
    7. 'u' → logprob: -3.536088466644287
    8. ' r' → logprob: -3.661088466644287
    9. '    ' → logprob: -3.661088466644287
    10. '\' → logprob: -3.786088466644287

Token 32: '   ' (ID: 271)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5481861233711243
    2. 'r' → logprob: -1.7981860637664795
    3. ' 
' → logprob: -2.6731860637664795
    4. 'n' → logprob: -2.9231860637664795
    5. '   ' → logprob: -3.5481860637664795
    6. ' ' → logprob: -3.6731860637664795
    7. ' r' → logprob: -4.173186302185059
    8. '\' → logprob: -4.798186302185059
    9. ' """
' → logprob: -4.798186302185059
    10. ')' → logprob: -4.798186302185059

Token 33: ' x' (ID: 1215)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.8553706407546997
    2. '   ' → logprob: -1.1053706407546997
    3. 'r' → logprob: -2.23037052154541
    4. ' 
' → logprob: -3.35537052154541
    5. '    
' → logprob: -3.85537052154541
    6. ' r' → logprob: -4.48037052154541
    7. 'n' → logprob: -4.48037052154541
    8. '```' → logprob: -4.60537052154541
    9. '  
' → logprob: -4.73037052154541
    10. '    ' → logprob: -4.85537052154541

Token 34: '_{' (ID: 22305)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6733297109603882
    2. '[n' → logprob: -0.9233297109603882
    3. '(n' → logprob: -3.7983298301696777
    4. 'n' → logprob: -3.7983298301696777
    5. '_n' → logprob: -4.048329830169678
    6. '_' → logprob: -4.423329830169678
    7. '0' → logprob: -5.173329830169678
    8. '[i' → logprob: -5.923329830169678
    9. '"' → logprob: -6.548329830169678
    10. '[k' → logprob: -6.548329830169678

Token 35: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.08441830426454544
    2. '0' → logprob: -2.709418296813965
    3. '_n' → logprob: -5.084418296813965
    4. '1' → logprob: -5.584418296813965
    5. 'k' → logprob: -6.334418296813965
    6. ' n' → logprob: -7.334418296813965
    7. '_{' → logprob: -7.459418296813965
    8. '_' → logprob: -7.959418296813965
    9. '}' → logprob: -8.584418296813965
    10. '   ' → logprob: -8.584418296813965

Token 36: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.22883638739585876
    2. '}' → logprob: -1.6038364171981812
    3. ' +' → logprob: -6.478836536407471
    4. '}=' → logprob: -6.853836536407471
    5. '}(' → logprob: -8.853836059570312
    6. ' }' → logprob: -9.103836059570312
    7. ' =' → logprob: -9.478836059570312
    8. '0' → logprob: -9.603836059570312
    9. '}^{' → logprob: -9.728836059570312
    10. '}+' → logprob: -9.853836059570312

Token 37: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0018102485919371247
    2. '}' → logprob: -7.001810073852539
    3. '+' → logprob: -7.376810073852539
    4. '2' → logprob: -9.126810073852539
    5. ' ' → logprob: -9.501810073852539
    6. '   ' → logprob: -10.501810073852539
    7. '```' → logprob: -10.626810073852539
    8. 'plus' → logprob: -12.251810073852539
    9. '}=' → logprob: -12.564310073852539
    10. '  ' → logprob: -12.564310073852539

Token 38: '}' (ID: 92)
  Prédit: '}'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.001452375203371048
    2. '}=' → logprob: -6.876452445983887
    3. '+' → logprob: -8.251452445983887
    4. ' =' → logprob: -10.001452445983887
    5. '=' → logprob: -10.376452445983887
    6. '=}' → logprob: -11.376452445983887
    7. '}(' → logprob: -11.501452445983887
    8. ' }' → logprob: -11.938952445983887
    9. ')' → logprob: -11.938952445983887
    10. '```' → logprob: -12.188952445983887

Token 39: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05508064851164818
    2. '=' → logprob: -2.9300806522369385
    3. '_' → logprob: -9.93008041381836
    4. '+' → logprob: -10.30508041381836
    5. '}' → logprob: -10.30508041381836
    6. ')' → logprob: -10.93008041381836
    7. ',' → logprob: -11.30508041381836
    8. ' ' → logprob: -12.05508041381836
    9. '*' → logprob: -12.30508041381836
    10. '^' → logprob: -12.68008041381836

Token 40: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.3238947093486786
    2. 'r' → logprob: -1.323894739151001
    3. ' (' → logprob: -5.448894500732422
    4. ' ' → logprob: -6.198894500732422
    5. '(' → logprob: -6.573894500732422
    6. ' x' → logprob: -7.073894500732422
    7. ' D' → logprob: -7.573894500732422
    8. 'D' → logprob: -7.948894500732422
    9. 'x' → logprob: -8.073894500732422
    10. ' f' → logprob: -8.823894500732422

Token 41: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.5784803032875061
    2. '*' → logprob: -0.8284803032875061
    3. '*x' → logprob: -6.078480243682861
    4. '**' → logprob: -9.57848072052002
    5. ' ' → logprob: -10.45348072052002
    6. 'x' → logprob: -11.07848072052002
    7. '*r' → logprob: -11.26598072052002
    8. '+' → logprob: -11.51598072052002
    9. '/' → logprob: -11.76598072052002
    10. '*(' → logprob: -11.89098072052002

Token 42: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.23269732296466827
    2. ' x' → logprob: -1.6076973676681519
    3. '(' → logprob: -5.982697486877441
    4. 'D' → logprob: -6.357697486877441
    5. ' D' → logprob: -6.732697486877441
    6. ' (' → logprob: -6.732697486877441
    7. ' ' → logprob: -7.857697486877441
    8. '(x' → logprob: -8.857697486877441
    9. '   ' → logprob: -11.357697486877441
    10. '  ' → logprob: -11.420197486877441

Token 43: '_n' (ID: 2170)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5868440866470337
    2. '_n' → logprob: -1.0868440866470337
    3. '[' → logprob: -2.836843967437744
    4. '[n' → logprob: -3.461843967437744
    5. 'n' → logprob: -4.461843967437744
    6. '_{' → logprob: -5.961843967437744
    7. '_[' → logprob: -6.711843967437744
    8. '[_' → logprob: -8.711844444274902
    9. '**' → logprob: -8.836844444274902
    10. '```' → logprob: -8.961844444274902

Token 44: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -1.0391329526901245
    2. ' *' → logprob: -1.2891329526901245
    3. ' ' → logprob: -1.7891329526901245
    4. '-' → logprob: -2.664133071899414
    5. ' +' → logprob: -3.164133071899414
    6. '*' → logprob: -3.539133071899414
    7. '   ' → logprob: -4.039133071899414
    8. '+' → logprob: -4.164133071899414
    9. '    ' → logprob: -5.039133071899414
    10. ')' → logprob: -5.664133071899414

Token 45: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.39269354939460754
    2. ' D' → logprob: -1.1426935195922852
    3. 'x' → logprob: -6.642693519592285
    4. ' ' → logprob: -6.642693519592285
    5. 'r' → logprob: -6.892693519592285
    6. '(' → logprob: -7.267693519592285
    7. ' x' → logprob: -8.017693519592285
    8. ' r' → logprob: -8.017693519592285
    9. ' (' → logprob: -8.142693519592285
    10. '   ' → logprob: -8.892693519592285

Token 46: '

' (ID: 279)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3647761940956116
    2. '\n' → logprob: -2.239776134490967
    3. '*' → logprob: -3.114776134490967
    4. '
' → logprob: -3.739776134490967
    5. '_n' → logprob: -3.739776134490967
    6. '_' → logprob: -4.114776134490967
    7. '**' → logprob: -4.239776134490967
    8. '"""' → logprob: -4.239776134490967
    9. '```' → logprob: -4.864776134490967
    10. 'n' → logprob: -5.114776134490967

Token 47: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04465094208717346
    2. '   ' → logprob: -3.4196510314941406
    3. '"""' → logprob: -6.169651031494141
    4. '\n' → logprob: -6.294651031494141
    5. '):' → logprob: -6.544651031494141
    6. '*' → logprob: -6.669651031494141
    7. ' ' → logprob: -7.169651031494141
    8. '"' → logprob: -7.544651031494141
    9. '_' → logprob: -7.544651031494141
    10. 'n' → logprob: -7.919651031494141

Token 48: ' Args' (ID: 39185)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12471404671669006
    2. '"""' → logprob: -2.9997141361236572
    3. '\n' → logprob: -3.8747141361236572
    4. '"' → logprob: -4.374713897705078
    5. '```' → logprob: -5.249713897705078
    6. ')' → logprob: -5.374713897705078
    7. '\' → logprob: -5.374713897705078
    8. ' ' → logprob: -5.624713897705078
    9. '"""
' → logprob: -5.999713897705078
    10. '    
' → logprob: -6.249713897705078

Token 49: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7891148924827576
    2. ',' → logprob: -0.9141148924827576
    3. ' :' → logprob: -2.2891149520874023
    4. ')' → logprob: -4.039114952087402
    5. '):' → logprob: -5.164114952087402
    6. '[' → logprob: -5.664114952087402
    7. ' ,' → logprob: -5.664114952087402
    8. 's' → logprob: -5.664114952087402
    9. ' ' → logprob: -5.789114952087402
    10. '   ' → logprob: -5.789114952087402

Token 50: '       ' (ID: 309)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.5800682902336121
    2. 'r' → logprob: -0.8300682902336121
    3. ' ' → logprob: -6.205068111419678
    4. '   ' → logprob: -6.955068111419678
    5. ')' → logprob: -7.830068111419678
    6. ' )' → logprob: -8.205068588256836
    7. ' x' → logprob: -8.830068588256836
    8. 'x' → logprob: -9.705068588256836
    9. ' n' → logprob: -9.955068588256836
    10. ''' → logprob: -10.205068588256836

Token 51: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.04487573355436325
    2. ' r' → logprob: -3.2948756217956543
    3. 'x' → logprob: -5.294875621795654
    4. '   ' → logprob: -6.544875621795654
    5. 'n' → logprob: -8.544876098632812
    6. ' x' → logprob: -9.544876098632812
    7. '       ' → logprob: -10.544876098632812
    8. '```' → logprob: -10.919876098632812
    9. '    ' → logprob: -11.169876098632812
    10. ' ' → logprob: -11.169876098632812

Token 52: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003584987483918667
    2. ':' → logprob: -6.378584861755371
    3. '<|end|>' → logprob: -7.128584861755371
    4. ' ,' → logprob: -7.378584861755371
    5. '):' → logprob: -8.878584861755371
    6. ')' → logprob: -9.128584861755371
    7. '<|end|>' → logprob: -9.753584861755371
    8. '   ' → logprob: -10.503584861755371
    9. ' (' → logprob: -10.878584861755371
    10. ',int' → logprob: -11.003584861755371

Token 53: 'int' (ID: 491)
  Prédit: ' float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -1.168670654296875
    2. ')' → logprob: -1.668670654296875
    3. 'float' → logprob: -1.793670654296875
    4. ' )' → logprob: -1.918670654296875
    5. 'int' → logprob: -2.293670654296875
    6. ',' → logprob: -3.293670654296875
    7. ' int' → logprob: -3.418670654296875
    8. ',float' → logprob: -4.793670654296875
    9. ' ,' → logprob: -6.043670654296875
    10. ' ' → logprob: -6.043670654296875

Token 54: '):' (ID: 3127)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10359291732311249
    2. '):' → logprob: -2.353592872619629
    3. ',' → logprob: -6.603592872619629
    4. '<|end|>' → logprob: -6.603592872619629
    5. '),' → logprob: -7.603592872619629
    6. ' )' → logprob: -9.853592872619629
    7. '):
' → logprob: -10.478592872619629
    8. ' ' → logprob: -10.853592872619629
    9. ' ):' → logprob: -10.978592872619629
    10. '<|end|>' → logprob: -11.228592872619629

Token 55: ' Le' (ID: 2018)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.05629904568195343
    2. '<|end|>' → logprob: -3.5562989711761475
    3. ' r' → logprob: -4.681299209594727
    4. 'r' → logprob: -4.806299209594727
    5. ' The' → logprob: -5.806299209594727
    6. '    ' → logprob: -6.556299209594727
    7. ')' → logprob: -7.181299209594727
    8. '<|end|>' → logprob: -7.431299209594727
    9. '  ' → logprob: -7.556299209594727
    10. ' """' → logprob: -8.181299209594727

Token 56: ' multiplic' (ID: 67929)
  Prédit: ' coefficient'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' coefficient' → logprob: -0.6543778777122498
    2. ' facteur' → logprob: -0.7793778777122498
    3. ' coef' → logprob: -4.9043779373168945
    4. ' multiplic' → logprob: -5.7793779373168945
    5. ' coeff' → logprob: -5.9043779373168945
    6. ' ' → logprob: -6.1543779373168945
    7. ' param' → logprob: -6.1543779373168945
    8. 'coeff' → logprob: -7.1543779373168945
    9. 'co' → logprob: -7.5293779373168945
    10. ' multip' → logprob: -7.7793779373168945

Token 57: 'ateur' (ID: 12477)
  Prédit: 'ateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ateur' → logprob: -0.0028737038373947144
    2. 'e' → logprob: -6.87787389755249
    3. 'eur' → logprob: -7.00287389755249
    4. 'ate' → logprob: -7.62787389755249
    5. 'a' → logprob: -8.752873420715332
    6. 'er' → logprob: -9.377873420715332
    7. ')' → logprob: -10.127873420715332
    8. '   ' → logprob: -10.502873420715332
    9. 'at' → logprob: -10.752873420715332
    10. ' a' → logprob: -11.252873420715332

Token 58: ' appli' (ID: 25550)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06843256205320358
    2. ',
' → logprob: -3.318432569503784
    3. ')' → logprob: -4.443432331085205
    4. '<|end|>' → logprob: -4.818432331085205
    5. '```' → logprob: -5.068432331085205
    6. '   ' → logprob: -6.568432331085205
    7. ' ,' → logprob: -6.943432331085205
    8. '<|end|>' → logprob: -7.693432331085205
    9. 's' → logprob: -9.068432807922363
    10. '),' → logprob: -9.318432807922363

Token 59: 'qué' (ID: 23535)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.07562081515789032
    2. ' à' → logprob: -3.0756208896636963
    3. 'qué' → logprob: -4.075620651245117
    4. 'à' → logprob: -5.950620651245117
    5. ' ' → logprob: -6.325620651245117
    6. '   ' → logprob: -6.950620651245117
    7. 'e' → logprob: -7.200620651245117
    8. 'u' → logprob: -7.450620651245117
    9. 'ié' → logprob: -7.575620651245117
    10. 'iqué' → logprob: -7.825620651245117

Token 60: ' à' (ID: 1221)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.33908626437187195
    2. ' à' → logprob: -2.3390862941741943
    3. ' au' → logprob: -2.8390862941741943
    4. ' ' → logprob: -3.2140862941741943
    5. '   ' → logprob: -3.2140862941741943
    6. ' )' → logprob: -3.8390862941741943
    7. '<|end|>' → logprob: -4.339086055755615
    8. ' sur' → logprob: -5.214086055755615
    9. ' aux' → logprob: -5.714086055755615
    10. 'sur' → logprob: -6.464086055755615

Token 61: ' chaque' (ID: 21194)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.1583215594291687
    2. 'x' → logprob: -2.0333216190338135
    3. ' ' → logprob: -4.908321380615234
    4. ' chaque' → logprob: -5.283321380615234
    5. ' l' → logprob: -6.533321380615234
    6. 'l' → logprob: -8.158321380615234
    7. ' ' → logprob: -8.283321380615234
    8. ' xn' → logprob: -8.283321380615234
    9. 'xn' → logprob: -8.533321380615234
    10. ' la' → logprob: -8.783321380615234

Token 62: ' terme' (ID: 42959)
  Prédit: ' terme'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' terme' → logprob: -0.6888962388038635
    2. ' x' → logprob: -1.3138961791992188
    3. ' ' → logprob: -2.0638961791992188
    4. ' n' → logprob: -3.5638961791992188
    5. 'x' → logprob: -3.9388961791992188
    6. '_' → logprob: -4.063896179199219
    7. 'n' → logprob: -4.188896179199219
    8. ' espace' → logprob: -5.813896179199219
    9. ' élément' → logprob: -5.813896179199219
    10. ' term' → logprob: -6.063896179199219

Token 63: ' précédent' (ID: 128462)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.47158512473106384
    2. ')' → logprob: -1.3465851545333862
    3. '   ' → logprob: -2.3465850353240967
    4. ',
' → logprob: -4.471585273742676
    5. '),' → logprob: -5.596585273742676
    6. '```' → logprob: -6.721585273742676
    7. '):' → logprob: -6.846585273742676
    8. ' ,' → logprob: -7.096585273742676
    9. ' ' → logprob: -8.221585273742676
    10. ')
' → logprob: -8.471585273742676

Token 64: '.
' (ID: 558)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.48495152592658997
    2. ')' → logprob: -1.4849514961242676
    3. '   ' → logprob: -2.1099514961242676
    4. ',
' → logprob: -3.9849514961242676
    5. '```' → logprob: -4.859951496124268
    6. 'n' → logprob: -6.359951496124268
    7. '\n' → logprob: -6.359951496124268
    8. ' ,' → logprob: -7.234951496124268
    9. '<|end|>' → logprob: -7.234951496124268
    10. '    
' → logprob: -7.484951496124268

Token 65: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.48090702295303345
    2. ' 
' → logprob: -2.6059069633483887
    3. '<|end|>' → logprob: -2.8559069633483887
    4. '```' → logprob: -2.9809069633483887
    5. '   ' → logprob: -3.1059069633483887
    6. ')' → logprob: -3.1059069633483887
    7. ',' → logprob: -3.6059069633483887
    8. '    ' → logprob: -3.8559069633483887
    9. '       ' → logprob: -4.480906963348389
    10. 'r' → logprob: -4.605906963348389

Token 66: ' D' (ID: 415)
  Prédit: ' D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' D' → logprob: -0.5837645530700684
    2. 'D' (adapté à ' D') → logprob: -0.8337645530700684
    3. ' ' → logprob: -5.208764553070068
    4. '    ' → logprob: -7.083764553070068
    5. 'x' → logprob: -7.583764553070068
    6. ' ' → logprob: -7.583764553070068
    7. '   ' → logprob: -8.708765029907227
    8. 'r' → logprob: -9.708765029907227
    9. 'd' → logprob: -9.833765029907227
    10. '       ' → logprob: -10.333765029907227

Token 67: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.008989398367702961
    2. '(int' → logprob: -4.758989334106445
    3. ')' → logprob: -8.258989334106445
    4. ':' → logprob: -10.383989334106445
    5. ' ' → logprob: -11.008989334106445
    6. '<|end|>' → logprob: -11.133989334106445
    7. '```' → logprob: -11.133989334106445
    8. '(' → logprob: -11.883989334106445
    9. '  ' → logprob: -11.883989334106445
    10. ':int' → logprob: -12.258989334106445

Token 68: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0009567205561324954
    2. ' int' → logprob: -7.0009565353393555
    3. ')' → logprob: -10.250956535339355
    4. '(int' → logprob: -12.500956535339355
    5. 'float' → logprob: -12.750956535339355
    6. '   ' → logprob: -13.500956535339355
    7. '):' → logprob: -15.125956535339355
    8. ' )' → logprob: -15.375956535339355
    9. ':int' → logprob: -15.375956535339355
    10. '):
' → logprob: -15.625956535339355

Token 69: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0076703946106135845
    2. ')' → logprob: -4.8826704025268555
    3. ':' → logprob: -10.382670402526855
    4. ' ):' → logprob: -10.882670402526855
    5. '   ' → logprob: -12.257670402526855
    6. ',' → logprob: -12.882670402526855
    7. '):
' → logprob: -13.007670402526855
    8. '<|end|>' → logprob: -13.382670402526855
    9. ''):' → logprob: -14.257670402526855
    10. ' ' → logprob: -14.507670402526855

Token 70: ' La' (ID: 3038)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0475620031356812
    2. ' ' → logprob: -1.2975620031356812
    3. '<|end|>' → logprob: -2.7975621223449707
    4. ',' → logprob: -3.6725621223449707
    5. ' int' → logprob: -3.6725621223449707
    6. ' )' → logprob: -3.6725621223449707
    7. ' Le' → logprob: -3.7975621223449707
    8. 'int' → logprob: -3.9225621223449707
    9. ' x' → logprob: -3.9225621223449707
    10. ' la' → logprob: -3.9225621223449707

Token 71: ' constante' (ID: 49652)
  Prédit: ' constante'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' constante' → logprob: -0.0991549864411354
    2. 'const' → logprob: -2.4741549491882324
    3. 'val' → logprob: -5.599154949188232
    4. ' const' → logprob: -5.849154949188232
    5. ' valeur' → logprob: -6.849154949188232
    6. 'diff' → logprob: -7.474154949188232
    7. ' différence' → logprob: -7.724154949188232
    8. 'd' → logprob: -8.72415542602539
    9. 'ter' → logprob: -8.84915542602539
    10. ' ' → logprob: -8.84915542602539

Token 72: ' sou' (ID: 4069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30368250608444214
    2. ' à' → logprob: -1.678682565689087
    3. ')' → logprob: -3.303682565689087
    4. '    ' → logprob: -4.678682327270508
    5. '.' → logprob: -5.428682327270508
    6. ',' → logprob: -5.553682327270508
    7. ':' → logprob: -6.553682327270508
    8. '```' → logprob: -6.553682327270508
    9. '<|end|>' → logprob: -6.678682327270508
    10. '  ' → logprob: -6.678682327270508

Token 73: 'stra' (ID: 14867)
  Prédit: 'stra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stra' → logprob: -0.01017132680863142
    2. 'str' → logprob: -4.760171413421631
    3. 'straction' → logprob: -7.385171413421631
    4. 'stract' → logprob: -7.510171413421631
    5. 'st' → logprob: -8.510170936584473
    6. 'tr' → logprob: -9.135170936584473
    7. 's' → logprob: -10.760170936584473
    8. 'r' → logprob: -11.760170936584473
    9. 'tra' → logprob: -11.760170936584473
    10. 'p' → logprob: -11.885170936584473

Token 74: 'ite' (ID: 651)
  Prédit: 'ite'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ite' → logprob: -0.0024793429765850306
    2. 'it' → logprob: -7.127479553222656
    3. '   ' → logprob: -7.752479553222656
    4. 'ct' → logprob: -8.002479553222656
    5. ' ite' → logprob: -8.377479553222656
    6. 'cte' → logprob: -8.627479553222656
    7. '
' → logprob: -10.002479553222656
    8. '       ' → logprob: -10.252479553222656
    9. '1' → logprob: -10.502479553222656
    10. 'ire' → logprob: -10.502479553222656

Token 75: ' à' (ID: 1221)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2178463339805603
    2. '   ' → logprob: -1.717846393585205
    3. ',' → logprob: -5.717846393585205
    4. ' à' → logprob: -5.967846393585205
    5. ' au' → logprob: -6.217846393585205
    6. ')' → logprob: -6.342846393585205
    7. '```' → logprob: -6.342846393585205
    8. '       ' → logprob: -6.967846393585205
    9. 'au' → logprob: -7.467846393585205
    10. ' de' → logprob: -7.467846393585205

Token 76: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.030037296935915947
    2. 'cha' → logprob: -3.6550374031066895
    3. ' each' → logprob: -6.2800374031066895
    4. 'x' → logprob: -7.4050374031066895
    5. 'Chaque' → logprob: -7.7800374031066895
    6. 'each' → logprob: -9.030036926269531
    7. ' ' → logprob: -9.030036926269531
    8. ' x' → logprob: -9.030036926269531
    9. '<|end|>' → logprob: -9.280036926269531
    10. ' chacun' → logprob: -9.530036926269531

Token 77: ' it' (ID: 480)
  Prédit: ' terme'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' terme' → logprob: -0.05770061910152435
    2. 'ter' → logprob: -2.9327006340026855
    3. 'term' → logprob: -6.8077006340026855
    4. ' term' → logprob: -7.3077006340026855
    5. ' termes' → logprob: -8.432700157165527
    6. 'n' → logprob: -8.557700157165527
    7. ' ter' → logprob: -9.307700157165527
    8. ' ' → logprob: -9.432700157165527
    9. '<|end|>' → logprob: -9.557700157165527
    10. '
' → logprob: -10.057700157165527

Token 78: 'ération' (ID: 24977)
  Prédit: 'ération'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ération' → logprob: -0.15148493647575378
    2. 'é' → logprob: -2.651484966278076
    3. 'ér' → logprob: -2.776484966278076
    4. '   ' → logprob: -6.401484966278076
    5. 'er' → logprob: -6.526484966278076
    6. 'éré' → logprob: -7.026484966278076
    7. 'érations' → logprob: -7.151484966278076
    8. 'éra' → logprob: -8.151484489440918
    9. 'e' → logprob: -8.526484489440918
    10. 'èr' → logprob: -8.651484489440918

Token 79: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08379285037517548
    2. ')' → logprob: -3.2087929248809814
    3. ',' → logprob: -3.8337929248809814
    4. '):' → logprob: -4.583792686462402
    5. '):
' → logprob: -5.583792686462402
    6. '.' → logprob: -6.583792686462402
    7. ').' → logprob: -6.958792686462402
    8. '```' → logprob: -7.083792686462402
    9. '),' → logprob: -8.083792686462402
    10. '       ' → logprob: -8.333792686462402

Token 80: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16528496146202087
    2. '       ' → logprob: -2.1652848720550537
    3. '```' → logprob: -4.290285110473633
    4. 'x' → logprob: -4.915285110473633
    5. '    ' → logprob: -5.540285110473633
    6. '<|end|>' → logprob: -5.915285110473633
    7. '"""' → logprob: -6.290285110473633
    8. '"""
' → logprob: -6.415285110473633
    9. ' ' → logprob: -6.790285110473633
    10. '    
' → logprob: -6.790285110473633

Token 81: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.3687053322792053
    2. '   ' → logprob: -1.6187052726745605
    3. 'x' (adapté à ' x') → logprob: -2.2437052726745605
    4. ' ' → logprob: -6.6187052726745605
    5. '    ' → logprob: -7.2437052726745605
    6. '```' → logprob: -7.2437052726745605
    7. '       ' → logprob: -7.7437052726745605
    8. '  ' → logprob: -8.493705749511719
    9. '"""' → logprob: -8.618705749511719
    10. ' ' → logprob: -8.868705749511719

Token 82: ' (' (ID: 350)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.1507004499435425
    2. '):' → logprob: -1.2757004499435425
    3. '_n' → logprob: -1.7757004499435425
    4. ')' → logprob: -1.9007004499435425
    5. '0' → logprob: -3.900700569152832
    6. ' (' → logprob: -4.025700569152832
    7. ',' → logprob: -4.775700569152832
    8. '   ' → logprob: -4.900700569152832
    9. ' ' → logprob: -5.525700569152832
    10. '[' → logprob: -5.650700569152832

Token 83: 'int' (ID: 491)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7527219653129578
    2. ')' → logprob: -1.0027220249176025
    3. '_' → logprob: -2.0027220249176025
    4. '_n' → logprob: -4.502721786499023
    5. ' )' → logprob: -4.877721786499023
    6. '[' → logprob: -5.627721786499023
    7. 'n' → logprob: -6.377721786499023
    8. ' ' → logprob: -6.502721786499023
    9. '):' → logprob: -7.377721786499023
    10. '1' → logprob: -8.502721786499023

Token 84: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.021109431982040405
    2. ')' → logprob: -4.021109580993652
    3. ' ):' → logprob: -6.146109580993652
    4. '):
' → logprob: -8.396109580993652
    5. ':' → logprob: -8.896109580993652
    6. '_initial' → logprob: -9.021109580993652
    7. ',' → logprob: -9.271109580993652
    8. '_' → logprob: -9.396109580993652
    9. ' )' → logprob: -10.396109580993652
    10. '_n' → logprob: -10.521109580993652

Token 85: ' Le' (ID: 2018)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06288435310125351
    2. ' Le' → logprob: -3.3128843307495117
    3. '   ' → logprob: -5.437884330749512
    4. ' l' → logprob: -5.562884330749512
    5. ' le' → logprob: -6.187884330749512
    6. '_' → logprob: -6.187884330749512
    7. ' L' → logprob: -6.312884330749512
    8. 'Le' → logprob: -6.437884330749512
    9. '  ' → logprob: -6.812884330749512
    10. '    ' → logprob: -6.937884330749512

Token 86: ' terme' (ID: 42959)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.24577690660953522
    2. '_' → logprob: -2.370776891708374
    3. ' premier' → logprob: -2.370776891708374
    4. ' _' → logprob: -4.370777130126953
    5. ' point' → logprob: -5.120777130126953
    6. '   ' → logprob: -5.370777130126953
    7. ' terme' → logprob: -6.370777130126953
    8. 'prem' → logprob: -6.495777130126953
    9. '  ' → logprob: -7.120777130126953
    10. ' x' → logprob: -7.495777130126953

Token 87: ' initial' (ID: 4871)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.13420523703098297
    2. ' ' → logprob: -2.2592053413391113
    3. ' _' → logprob: -4.759205341339111
    4. ' initial' → logprob: -4.884205341339111
    5. ' de' → logprob: -5.509205341339111
    6. '   ' → logprob: -8.259204864501953
    7. '  ' → logprob: -9.259204864501953
    8. ' d' → logprob: -9.634204864501953
    9. '_initial' → logprob: -9.884204864501953
    10. 'n' → logprob: -10.009204864501953

Token 88: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1067643016576767
    2. '):' → logprob: -2.481764316558838
    3. '):
' → logprob: -4.356764316558838
    4. '   ' → logprob: -6.606764316558838
    5. '_' → logprob: -6.731764316558838
    6. ',' → logprob: -7.606764316558838
    7. '_initial' → logprob: -7.731764316558838
    8. ' )' → logprob: -8.60676383972168
    9. '```' → logprob: -8.73176383972168
    10. '.' → logprob: -9.10676383972168

Token 89: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.006686125881969929
    2. ' l' → logprob: -5.756686210632324
    3. 'la' → logprob: -6.256686210632324
    4. 'l' → logprob: -7.756686210632324
    5. ' départ' → logprob: -8.006686210632324
    6. ' ' → logprob: -8.381686210632324
    7. 'a' → logprob: -9.256686210632324
    8. ' a' → logprob: -9.256686210632324
    9. ' x' → logprob: -9.381686210632324
    10. ' initial' → logprob: -9.381686210632324

Token 90: ' suite' (ID: 13800)
  Prédit: 'suite'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'suite' → logprob: -0.4236072599887848
    2. ' suite' → logprob: -1.1736072301864624
    3. ' sequence' → logprob: -4.048607349395752
    4. 's' → logprob: -4.673607349395752
    5. 'sequence' → logprob: -5.423607349395752
    6. 'sé' → logprob: -6.673607349395752
    7. ' ' → logprob: -7.173607349395752
    8. ' sé' → logprob: -7.423607349395752
    9. 'su' → logprob: -7.673607349395752
    10. '_suite' → logprob: -7.673607349395752

Token 91: '.

' (ID: 364)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06020638346672058
    2. '):' → logprob: -3.060206413269043
    3. '):
' → logprob: -5.185206413269043
    4. '   ' → logprob: -5.435206413269043
    5. ')
' → logprob: -6.935206413269043
    6. '
' → logprob: -9.060206413269043
    7. '"""' → logprob: -9.185206413269043
    8. '```' → logprob: -9.185206413269043
    9. ' )' → logprob: -10.310206413269043
    10. ':' → logprob: -10.435206413269043

Token 92: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22552525997161865
    2. '"' → logprob: -3.100525379180908
    3. '"""' → logprob: -3.225525379180908
    4. '"""
' → logprob: -3.475525379180908
    5. '   ' → logprob: -3.600525379180908
    6. '\n' → logprob: -3.850525379180908
    7. ' ' → logprob: -3.975525379180908
    8. '""' → logprob: -5.600525379180908
    9. '  
' → logprob: -5.725525379180908
    10. '"\' → logprob: -6.100525379180908

Token 93: ' Returns' (ID: 9609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6035425662994385
    2. '"""' → logprob: -1.3535425662994385
    3. '"""
' → logprob: -2.7285425662994385
    4. '"' → logprob: -3.4785425662994385
    5. ')' → logprob: -3.4785425662994385
    6. 'n' → logprob: -4.228542327880859
    7. '    
' → logprob: -4.228542327880859
    8. ' """
' → logprob: -5.103542327880859
    9. '
' → logprob: -5.228542327880859
    10. ' """' → logprob: -5.228542327880859

Token 94: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04370521381497383
    2. ' :' → logprob: -3.1687052249908447
    3. ':
' → logprob: -7.918704986572266
    4. ' :
' → logprob: -8.168704986572266
    5. '[' → logprob: -10.543704986572266
    6. '<|end|>' → logprob: -11.918704986572266
    7. '):' → logprob: -12.168704986572266
    8. '```' → logprob: -12.918704986572266
    9. ' ' → logprob: -13.043704986572266
    10. 'None' → logprob: -13.418704986572266

Token 95: '       ' (ID: 309)
  Prédit: ' None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' None' → logprob: -1.1532247066497803
    2. '   ' → logprob: -1.5282247066497803
    3. ' []' → logprob: -1.5282247066497803
    4. '"' → logprob: -2.4032247066497803
    5. 'None' → logprob: -3.2782247066497803
    6. '[' → logprob: -3.6532247066497803
    7. ' [' → logprob: -3.7782247066497803
    8. '[]' → logprob: -4.153224945068359
    9. '    ' → logprob: -4.403224945068359
    10. ')' → logprob: -4.528224945068359

Token 96: ' None' (ID: 4662)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.2671654522418976
    2. ' list' → logprob: -1.5171654224395752
    3. 'List' → logprob: -4.642165660858154
    4. 'None' (adapté à ' None') → logprob: -5.892165660858154
    5. ' None' → logprob: -6.642165660858154
    6. ' List' → logprob: -7.267165660858154
    7. '   ' → logprob: -7.517165660858154
    8. '```' → logprob: -10.142165184020996
    9. 'str' → logprob: -10.642165184020996
    10. 'A' → logprob: -10.642165184020996

Token 97: ':' (ID: 25)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7074885368347168
    2. '
' → logprob: -0.9574885368347168
    3. ':' → logprob: -3.332488536834717
    4. '):' → logprob: -3.332488536834717
    5. '```' → logprob: -3.832488536834717
    6. '):
' → logprob: -4.207488536834717
    7. ')' → logprob: -5.207488536834717
    8. ':
' → logprob: -5.332488536834717
    9. '\n' → logprob: -6.332488536834717
    10. '    
' → logprob: -6.457488536834717

Token 98: ' Aff' (ID: 13741)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' 
' → logprob: -1.2133909463882446
    2. '\n' → logprob: -1.4633909463882446
    3. '"\' → logprob: -1.8383909463882446
    4. '    
' → logprob: -2.463390827178955
    5. '"""
' → logprob: -2.838390827178955
    6. '"' → logprob: -2.963390827178955
    7. '   ' → logprob: -3.588390827178955
    8. '
' → logprob: -3.963390827178955
    9. '\' → logprob: -4.213390827178955
    10. '```' → logprob: -4.463390827178955

Token 99: 'iche' (ID: 7509)
  Prédit: 'iche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iche' → logprob: -0.012964447028934956
    2. 'ic' → logprob: -4.637964248657227
    3. 'i' → logprob: -6.762964248657227
    4. 'ich' → logprob: -7.262964248657227
    5. 'icher' → logprob: -7.637964248657227
    6. 'ichage' → logprob: -8.012964248657227
    7. '   ' → logprob: -8.387964248657227
    8. '```' → logprob: -9.637964248657227
    9. '#' → logprob: -10.762964248657227
    10. 'ichert' → logprob: -10.762964248657227

Token 100: ' chaque' (ID: 21194)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4275326132774353
    2. ' les' → logprob: -1.17753267288208
    3. '<|end|>' → logprob: -4.80253267288208
    4. ' la' → logprob: -4.92753267288208
    5. ' l' → logprob: -5.42753267288208
    6. ' le' → logprob: -5.55253267288208
    7. '  ' → logprob: -5.80253267288208
    8. 's' → logprob: -5.80253267288208
    9. ' ' → logprob: -6.05253267288208
    10. '    ' → logprob: -6.30253267288208

Token 101: ' terme' (ID: 42959)
  Prédit: ' terme'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' terme' → logprob: -0.011432335712015629
    2. ' ' → logprob: -5.38643217086792
    3. 'ter' → logprob: -5.63643217086792
    4. ' termes' → logprob: -7.51143217086792
    5. ' n' → logprob: -7.76143217086792
    6. '   ' → logprob: -7.88643217086792
    7. ' t' → logprob: -8.136432647705078
    8. '_' → logprob: -8.261432647705078
    9. ' term' → logprob: -8.261432647705078
    10. '  ' → logprob: -8.886432647705078

Token 102: ' génér' (ID: 18939)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018156616017222404
    2. '\n' → logprob: -5.3931565284729
    3. '    
' → logprob: -5.3931565284729
    4. '
' → logprob: -5.5181565284729
    5. '    ' → logprob: -7.1431565284729
    6. ',' → logprob: -7.3931565284729
    7. '\' → logprob: -7.3931565284729
    8. '  ' → logprob: -8.143157005310059
    9. '```' → logprob: -8.143157005310059
    10. ' ' → logprob: -8.893157005310059

Token 103: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.006583923939615488
    2. 'e' → logprob: -5.1315836906433105
    3. 'a' → logprob: -9.256584167480469
    4. 'és' → logprob: -9.381584167480469
    5. ')' → logprob: -9.506584167480469
    6. 'ate' → logprob: -9.506584167480469
    7. 'ré' → logprob: -9.631584167480469
    8. '_' → logprob: -9.881584167480469
    9. 'ée' → logprob: -10.256584167480469
    10. 'r' → logprob: -10.256584167480469

Token 104: ' à' (ID: 1221)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.8145017027854919
    2. '
' → logprob: -1.3145017623901367
    3. '   ' → logprob: -2.0645017623901367
    4. ':
' → logprob: -3.0645017623901367
    5. ':' → logprob: -3.1895017623901367
    6. '):
' → logprob: -3.6895017623901367
    7. '    
' → logprob: -4.314501762390137
    8. '):' → logprob: -4.439501762390137
    9. ')' → logprob: -4.814501762390137
    10. '\' → logprob: -5.439501762390137

Token 105: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.34654501080513
    2. ' ' → logprob: -2.2215449810028076
    3. ' l' → logprob: -3.0965449810028076
    4. 'l' → logprob: -3.2215449810028076
    5. ' la' → logprob: -4.096545219421387
    6. 'n' → logprob: -4.346545219421387
    7. 'i' → logprob: -4.471545219421387
    8. ' i' → logprob: -4.721545219421387
    9. '_' → logprob: -4.846545219421387
    10. 'u' → logprob: -5.346545219421387

Token 106: ' étape' (ID: 83661)
  Prédit: ' it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' it' → logprob: -0.006505874451249838
    2. 'it' → logprob: -5.506505966186523
    3. ' étape' → logprob: -6.381505966186523
    4. ' iteration' → logprob: -7.881505966186523
    5. 'iteration' → logprob: -8.506505966186523
    6. ' ' → logprob: -10.006505966186523
    7. 'It' → logprob: -10.881505966186523
    8. 'n' → logprob: -11.006505966186523
    9. ' tour' → logprob: -11.256505966186523
    10. ' ligne' → logprob: -11.506505966186523

Token 107: '.
' (ID: 558)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5195801854133606
    2. '\n' → logprob: -1.6445801258087158
    3. '   ' → logprob: -2.019580125808716
    4. '):
' → logprob: -4.019580364227295
    5. ':
' → logprob: -4.269580364227295
    6. ':' → logprob: -4.394580364227295
    7. '    
' → logprob: -4.519580364227295
    8. '):' → logprob: -4.769580364227295
    9. ')' → logprob: -5.019580364227295
    10. ')
' → logprob: -6.019580364227295

Token 108: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5959495306015015
    2. '   ' → logprob: -0.9709495306015015
    3. '    
' → logprob: -3.845949649810791
    4. '\n' → logprob: -4.345949649810791
    5. ' 
' → logprob: -4.595949649810791
    6. '"""
' → logprob: -5.095949649810791
    7. '"""' → logprob: -5.220949649810791
    8. '  
' → logprob: -5.345949649810791
    9. '```' → logprob: -5.845949649810791
    10. ')' → logprob: -5.970949649810791

Token 109: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1588982194662094
    2. '
' → logprob: -2.158898115158081
    3. '\n' → logprob: -4.15889835357666
    4. '    
' → logprob: -4.28389835357666
    5. '  
' → logprob: -7.53389835357666
    6. ')' → logprob: -7.90889835357666
    7. 'n' → logprob: -8.40889835357666
    8. ' 
' → logprob: -8.65889835357666
    9. '   
' → logprob: -9.15889835357666
    10. '```' → logprob: -9.15889835357666

Token 110: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09821996837854385
    2. '   ' → logprob: -2.473219871520996
    3. '    
' → logprob: -5.473219871520996
    4. 'n' → logprob: -5.973219871520996
    5. '\n' → logprob: -6.473219871520996
    6. ' for' → logprob: -7.598219871520996
    7. ' 
' → logprob: -8.473219871520996
    8. 'for' → logprob: -9.723219871520996
    9. '```' → logprob: -10.098219871520996
    10. 'newline' → logprob: -10.723219871520996

Token 111: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12290515005588531
    2. ' for' → logprob: -2.4979052543640137
    3. '
' → logprob: -4.122905254364014
    4. '   ' → logprob: -4.747905254364014
    5. 'result' → logprob: -5.497905254364014
    6. 'n' → logprob: -6.247905254364014
    7. 'results' → logprob: -6.622905254364014
    8. '```' → logprob: -7.622905254364014
    9. '    
' → logprob: -7.997905254364014
    10. ' result' → logprob: -8.997904777526855

Token 112: ' Bou' (ID: 33816)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' current' → logprob: -1.2033345699310303
    2. ' for' → logprob: -1.5783345699310303
    3. 'for' → logprob: -1.9533345699310303
    4. 'current' → logprob: -2.0783345699310303
    5. ' x' → logprob: -2.7033345699310303
    6. 'x' → logprob: -3.0783345699310303
    7. 'term' → logprob: -3.4533345699310303
    8. ' term' → logprob: -3.8283345699310303
    9. 'n' → logprob: -3.9533345699310303
    10. 'value' → logprob: -4.703334808349609

Token 113: 'cle' (ID: 3170)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43902844190597534
    2. 'c' → logprob: -1.1890285015106201
    3. 'n' → logprob: -3.68902850151062
    4. 'cle' → logprob: -3.93902850151062
    5. '  ' → logprob: -5.814028263092041
    6. ' ' → logprob: -7.314028263092041
    7. '    ' → logprob: -7.439028263092041
    8. '    
' → logprob: -7.939028263092041
    9. ' c' → logprob: -8.0640287399292
    10. '       ' → logprob: -8.3140287399292

Token 114: ' sur' (ID: 1512)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.03485778719186783
    2. '   ' → logprob: -4.034857749938965
    3. 'for' → logprob: -4.159857749938965
    4. ' i' → logprob: -7.909857749938965
    5. ' ' → logprob: -9.034857749938965
    6. '    ' → logprob: -9.659857749938965
    7. ' range' → logprob: -9.909857749938965
    8. '	for' → logprob: -10.159857749938965
    9. '<|end|>' → logprob: -10.284857749938965
    10. ' =' → logprob: -10.409857749938965

Token 115: ' ' (ID: 220)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.013301048427820206
    2. 'range' → logprob: -4.388300895690918
    3. ' i' → logprob: -8.138300895690918
    4. ' ' → logprob: -8.638300895690918
    5. ' la' → logprob: -9.013300895690918
    6. '   ' → logprob: -9.388300895690918
    7. '_' → logprob: -10.763300895690918
    8. '(range' → logprob: -10.888300895690918
    9. '	range' → logprob: -10.888300895690918
    10. 'i' → logprob: -11.013300895690918

Token 116: '10' (ID: 702)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0005095454398542643
    2. ' range' → logprob: -7.750509738922119
    3. 'i' → logprob: -10.000509262084961
    4. '10' → logprob: -10.875509262084961
    5. '_' → logprob: -12.500509262084961
    6. 'la' → logprob: -12.625509262084961
    7. 'rang' → logprob: -13.250509262084961
    8. '```' → logprob: -13.750509262084961
    9. '(range' → logprob: -14.250509262084961
    10. 'r' → logprob: -14.375509262084961

Token 117: ' it' (ID: 480)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.23116113245487213
    2. '_' → logprob: -2.356161117553711
    3. ' for' → logprob: -2.606161117553711
    4. ' i' → logprob: -4.731161117553711
    5. 'for' → logprob: -4.856161117553711
    6. ' 
' → logprob: -5.106161117553711
    7. '   ' → logprob: -5.231161117553711
    8. ' ' → logprob: -6.106161117553711
    9. ' _' → logprob: -6.606161117553711
    10. '    ' → logprob: -6.856161117553711

Token 118: 'érations' (ID: 152860)
  Prédit: 'érations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érations' → logprob: -0.0028690656181424856
    2. 'er' → logprob: -6.127869129180908
    3. 'ér' → logprob: -7.627869129180908
    4. '   ' → logprob: -9.37786865234375
    5. 'ération' → logprob: -9.87786865234375
    6. 'é' → logprob: -10.25286865234375
    7. 'érés' → logprob: -12.87786865234375
    8. 'éra' → logprob: -13.00286865234375
    9. '(' → logprob: -13.12786865234375
    10. '```' → logprob: -13.25286865234375

Token 119: ' pour' (ID: 1930)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.039364948868751526
    2. ' 
' → logprob: -3.91436505317688
    3. ' for' → logprob: -4.789364814758301
    4. '  
' → logprob: -5.664364814758301
    5. '   ' → logprob: -5.914364814758301
    6. '    
' → logprob: -6.039364814758301
    7. 'for' → logprob: -7.414364814758301
    8. '\n' → logprob: -7.539364814758301
    9. 'n' → logprob: -8.6643648147583
    10. '   
' → logprob: -9.5393648147583

Token 120: ' calcul' (ID: 7559)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.016154488548636436
    2. ' _' → logprob: -4.6411542892456055
    3. '_' → logprob: -5.7661542892456055
    4. ' n' → logprob: -6.0161542892456055
    5. 'i' → logprob: -7.7661542892456055
    6. ' ' → logprob: -8.391154289245605
    7. 'n' → logprob: -9.266154289245605
    8. ' ' → logprob: -10.141154289245605
    9. '   ' → logprob: -11.891154289245605
    10. '  ' → logprob: -12.516154289245605

Token 121: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -4.961759259458631e-06
    2. 'r' → logprob: -13.500004768371582
    3. 'e' → logprob: -13.625004768371582
    4. '   ' → logprob: -14.000004768371582
    5. ''er' → logprob: -15.625004768371582
    6. 'ler' → logprob: -15.750004768371582
    7. 'ate' → logprob: -16.1250057220459
    8. 'ter' → logprob: -16.2500057220459
    9. 'rer' → logprob: -16.3750057220459
    10. ' iter' → logprob: -16.3750057220459

Token 122: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14996029436588287
    2. ' et' → logprob: -2.8999602794647217
    3. '    ' → logprob: -3.0249602794647217
    4. ' ' → logprob: -4.024960517883301
    5. ' les' → logprob: -5.399960517883301
    6. ' la' → logprob: -5.524960517883301
    7. '<|end|>' → logprob: -6.774960517883301
    8. '_' → logprob: -6.774960517883301
    9. '  ' → logprob: -7.024960517883301
    10. ' i' → logprob: -7.149960517883301

Token 123: ' afficher' (ID: 146524)
  Prédit: ' afficher'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' afficher' → logprob: -0.005333251319825649
    2. 'aff' → logprob: -6.005333423614502
    3. '   ' → logprob: -7.005333423614502
    4. ' for' → logprob: -7.755333423614502
    5. ' print' → logprob: -7.755333423614502
    6. ' x' → logprob: -8.255332946777344
    7. '    ' → logprob: -8.505332946777344
    8. ' génér' → logprob: -9.005332946777344
    9. ' display' → logprob: -9.505332946777344
    10. ' calcul' → logprob: -9.880332946777344

Token 124: ' chaque' (ID: 21194)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.3694465458393097
    2. ' chaque' → logprob: -1.3694465160369873
    3. ' la' → logprob: -3.7444465160369873
    4. '   ' → logprob: -4.619446754455566
    5. ' each' → logprob: -4.619446754455566
    6. ' le' → logprob: -5.369446754455566
    7. ' ' → logprob: -6.119446754455566
    8. ' for' → logprob: -6.994446754455566
    9. 'each' → logprob: -7.869446754455566
    10. '    ' → logprob: -7.994446754455566

Token 125: ' terme' (ID: 42959)
  Prédit: ' terme'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' terme' → logprob: -0.007607220206409693
    2. ' ' → logprob: -5.8826069831848145
    3. ' term' → logprob: -6.3826069831848145
    4. ' termes' → logprob: -6.6326069831848145
    5. 'ter' → logprob: -6.7576069831848145
    6. '_' → logprob: -9.007607460021973
    7. 'term' → logprob: -9.007607460021973
    8. '   ' → logprob: -9.382607460021973
    9. ' termine' → logprob: -9.882607460021973
    10. ' ter' → logprob: -10.757607460021973

Token 126: ' de' (ID: 334)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.042824242264032364
    2. '   ' → logprob: -3.4178242683410645
    3. ' for' → logprob: -5.4178242683410645
    4. '  
' → logprob: -6.4178242683410645
    5. '    
' → logprob: -6.5428242683410645
    6. 'for' → logprob: -7.4178242683410645
    7. ' 
' → logprob: -7.7928242683410645
    8. '\n' → logprob: -8.417823791503906
    9. 'n' → logprob: -9.417823791503906
    10. '```' → logprob: -9.792823791503906

Token 127: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.0018980521708726883
    2. 'la' → logprob: -6.501898288726807
    3. ' the' → logprob: -8.751897811889648
    4. ' ' → logprob: -9.876897811889648
    5. ' l' → logprob: -10.126897811889648
    6. ' sequence' → logprob: -10.126897811889648
    7. 'l' → logprob: -10.376897811889648
    8. ' range' → logprob: -10.876897811889648
    9. ' ' → logprob: -11.251897811889648
    10. '_la' → logprob: -11.751897811889648

Token 128: ' suite' (ID: 13800)
  Prédit: ' suite'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' suite' → logprob: -0.5776016116142273
    2. 'suite' → logprob: -0.8276016116142273
    3. ' sequence' → logprob: -6.702601432800293
    4. 's' → logprob: -8.702601432800293
    5. 'sequence' → logprob: -8.952601432800293
    6. ' ' → logprob: -10.702601432800293
    7. ' sé' → logprob: -10.702601432800293
    8. '_suite' → logprob: -11.077601432800293
    9. '   ' → logprob: -11.202601432800293
    10. ' boucle' → logprob: -11.452601432800293

Token 129: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.007379450369626284
    2. '   ' → logprob: -5.007379531860352
    3. ' for' → logprob: -8.132379531860352
    4. '    
' → logprob: -8.757379531860352
    5. '  
' → logprob: -9.882379531860352
    6. '\n' → logprob: -10.132379531860352
    7. 'for' → logprob: -10.132379531860352
    8. '```' → logprob: -10.507379531860352
    9. ' 
' → logprob: -11.007379531860352
    10. '<|end|>' → logprob: -12.132379531860352

Token 130: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03442401811480522
    2. '   ' → logprob: -3.534424066543579
    3. ' for' → logprob: -5.909423828125
    4. '    
' → logprob: -7.534423828125
    5. '  
' → logprob: -7.784423828125
    6. 'for' → logprob: -8.034423828125
    7. 'n' → logprob: -8.409423828125
    8. '\n' → logprob: -8.659423828125
    9. ' 
' → logprob: -8.784423828125
    10. '```' → logprob: -10.284423828125

Token 131: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.23504728078842163
    2. 'for' (adapté à ' for') → logprob: -1.6100473403930664
    3. 'n' → logprob: -5.235047340393066
    4. '   ' → logprob: -6.110047340393066
    5. 'x' → logprob: -6.985047340393066
    6. ' x' → logprob: -7.610047340393066
    7. ' n' → logprob: -8.360047340393066
    8. ' current' → logprob: -8.610047340393066
    9. 'current' → logprob: -9.485047340393066
    10. '    
' → logprob: -9.735047340393066

Token 132: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.3095565736293793
    2. ' n' → logprob: -1.6845566034317017
    3. ' ' → logprob: -3.059556484222412
    4. ' _' → logprob: -3.434556484222412
    5. 'n' → logprob: -7.059556484222412
    6. '_' → logprob: -7.684556484222412
    7. 'i' → logprob: -9.18455696105957
    8. '_n' → logprob: -9.55955696105957
    9. ' ‌' → logprob: -11.43455696105957
    10. ' ' → logprob: -11.80955696105957

Token 133: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0018587957601994276
    2. 'in' → logprob: -6.376858711242676
    3. ' ' → logprob: -8.876858711242676
    4. ' i' → logprob: -11.501858711242676
    5. '_' → logprob: -13.126858711242676
    6. '  ' → logprob: -14.251858711242676
    7. ',' → logprob: -14.564358711242676
    8. '	in' → logprob: -14.564358711242676
    9. ' ' → logprob: -15.064358711242676
    10. '   ' → logprob: -15.064358711242676

Token 134: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.002197836758568883
    2. 'range' → logprob: -6.127197742462158
    3. ' ' → logprob: -11.627198219299316
    4. '(range' → logprob: -13.502198219299316
    5. '	range' → logprob: -13.752198219299316
    6. ' xrange' → logprob: -14.877198219299316
    7. ')' → logprob: -16.002197265625
    8. '_range' → logprob: -16.127197265625
    9. ' ' → logprob: -16.252197265625
    10. ' rang' → logprob: -16.502197265625

Token 135: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0005651841638609767
    2. ' (' → logprob: -7.500565052032471
    3. '10' → logprob: -11.750565528869629
    4. ' ' → logprob: -12.875565528869629
    5. '1' → logprob: -13.875565528869629
    6. '(
' → logprob: -14.500565528869629
    7. ')' → logprob: -15.875565528869629
    8. '<|end|>' → logprob: -17.500564575195312
    9. '(i' → logprob: -18.375564575195312
    10. '   ' → logprob: -18.375564575195312

Token 136: '1' (ID: 16)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.01915689744055271
    2. ' ' → logprob: -4.3941569328308105
    3. '1' → logprob: -5.0191569328308105
    4. '0' → logprob: -11.769156455993652
    5. '   ' → logprob: -12.019156455993652
    6. '(' → logprob: -14.269156455993652
    7. ')' → logprob: -14.519156455993652
    8. '       ' → logprob: -16.39415740966797
    9. '	' → logprob: -16.76915740966797
    10. '  ' → logprob: -17.26915740966797

Token 137: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004302287939935923
    2. ' ,' → logprob: -5.504302501678467
    3. '10' → logprob: -9.129302024841309
    4. '0' → logprob: -10.129302024841309
    5. ' ' → logprob: -10.754302024841309
    6. ')' → logprob: -11.004302024841309
    7. '1' → logprob: -11.004302024841309
    8. '):' → logprob: -11.629302024841309
    9. ' )' → logprob: -12.754302024841309
    10. '   ' → logprob: -12.879302024841309

Token 138: ' ' (ID: 220)
  Prédit: '11'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '11' → logprob: -0.20142921805381775
    2. ' ' → logprob: -1.7014292478561401
    3. '10' → logprob: -11.70142936706543
    4. '1' → logprob: -12.07642936706543
    5. ')' → logprob: -14.20142936706543
    6. '12' → logprob: -14.95142936706543
    7. '```' → logprob: -15.57642936706543
    8. '   ' → logprob: -15.70142936706543
    9. '    ' → logprob: -15.95142936706543
    10. '101' → logprob: -16.32642936706543

Token 139: '11' (ID: 994)
  Prédit: '11'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '11' → logprob: -0.0007129086880013347
    2. ' ' → logprob: -7.250712871551514
    3. '1' → logprob: -13.250713348388672
    4. '10' → logprob: -14.500713348388672
    5. '12' → logprob: -14.875713348388672
    6. '   ' → logprob: -15.500713348388672
    7. ')' → logprob: -17.125713348388672
    8. '```' → logprob: -17.250713348388672
    9. '
' → logprob: -18.500713348388672
    10. '    ' → logprob: -18.500713348388672

Token 140: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.018422896042466164
    2. '):
' → logprob: -4.018423080444336
    3. ')' → logprob: -8.643423080444336
    4. ' ):' → logprob: -9.893423080444336
    5. '   ' → logprob: -10.393423080444336
    6. ':' → logprob: -11.268423080444336
    7. '):
' → logprob: -14.268423080444336
    8. '():' → logprob: -14.393423080444336
    9. ' ):
' → logprob: -14.893423080444336
    10. '):

' → logprob: -15.518423080444336

Token 141: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007218857295811176
    2. '
' → logprob: -5.507218837738037
    3. '<|end|>' → logprob: -7.007218837738037
    4. '   ' → logprob: -7.632218837738037
    5. ' x' → logprob: -7.757218837738037
    6. '        
' → logprob: -7.882218837738037
    7. 'x' → logprob: -8.007219314575195
    8. 'n' → logprob: -9.382219314575195
    9. '    
' → logprob: -9.382219314575195
    10. 'print' → logprob: -9.632219314575195

Token 142: ' #' (ID: 1069)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.4399130046367645
    2. 'x' → logprob: -1.064913034439087
    3. '       ' → logprob: -4.939912796020508
    4. '   ' → logprob: -6.689912796020508
    5. 'print' → logprob: -7.064912796020508
    6. '
' → logprob: -7.439912796020508
    7. '    ' → logprob: -7.814912796020508
    8. ' print' → logprob: -7.939912796020508
    9. '        
' → logprob: -8.689912796020508
    10. '        ' → logprob: -8.814912796020508

Token 143: ' Calcul' (ID: 57243)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.06284405291080475
    2. ' x' → logprob: -2.8128440380096436
    3. 'print' → logprob: -7.687844276428223
    4. '   ' → logprob: -8.062844276428223
    5. ' print' → logprob: -10.312844276428223
    6. '    ' → logprob: -10.437844276428223
    7. '       ' → logprob: -11.812844276428223
    8. 'token' → logprob: -12.437844276428223
    9. 'next' → logprob: -13.000344276428223
    10. '```' → logprob: -13.062844276428223

Token 144: ' du' (ID: 1462)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04223530739545822
    2. '=' → logprob: -3.5422353744506836
    3. ' ' → logprob: -5.417235374450684
    4. '_' → logprob: -5.542235374450684
    5. ' x' → logprob: -6.917235374450684
    6. '    ' → logprob: -7.167235374450684
    7. 'x' → logprob: -7.542235374450684
    8. '<|end|>' → logprob: -7.542235374450684
    9. '   ' → logprob: -7.917235374450684
    10. '       ' → logprob: -8.667235374450684

Token 145: ' nouveau' (ID: 23184)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.3736356198787689
    2. 'x' → logprob: -1.2486356496810913
    3. ' next' → logprob: -4.998635768890381
    4. ' nouveau' → logprob: -4.998635768890381
    5. ' new' → logprob: -5.748635768890381
    6. ' prochain' → logprob: -6.373635768890381
    7. 'next' → logprob: -6.373635768890381
    8. ' nouvel' → logprob: -6.623635768890381
    9. ' suivant' → logprob: -7.123635768890381
    10. 'nou' → logprob: -7.248635768890381

Token 146: ' terme' (ID: 42959)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.9317193031311035
    2. '_' → logprob: -1.3067193031311035
    3. ' x' → logprob: -1.3067193031311035
    4. ' ' → logprob: -3.0567193031311035
    5. '_x' → logprob: -4.9317193031311035
    6. ' terme' → logprob: -5.4317193031311035
    7. '   ' → logprob: -7.0567193031311035
    8. 'ter' → logprob: -7.3067193031311035
    9. '	x' → logprob: -7.4317193031311035
    10. '<|end|>' → logprob: -7.6817193031311035

Token 147: ' selon' (ID: 27571)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2661904990673065
    2. ' =' → logprob: -2.766190528869629
    3. '        
' → logprob: -3.391190528869629
    4. '
' → logprob: -3.516190528869629
    5. 'x' → logprob: -3.641190528869629
    6. '=' → logprob: -3.766190528869629
    7. ' x' → logprob: -3.766190528869629
    8. ':' → logprob: -4.266190528869629
    9. ',' → logprob: -5.141190528869629
    10. '        ' → logprob: -5.266190528869629

Token 148: ' la' (ID: 557)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.5250174403190613
    2. ' la' → logprob: -1.400017499923706
    3. 'r' → logprob: -2.275017499923706
    4. ' x' → logprob: -3.900017499923706
    5. ' ' → logprob: -4.150017261505127
    6. ' l' → logprob: -4.275017261505127
    7. 'x' → logprob: -5.900017261505127
    8. ' f' → logprob: -6.900017261505127
    9. ' ' → logprob: -7.025017261505127
    10. 'la' → logprob: -7.400017261505127

Token 149: ' relation' (ID: 18075)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.5887671709060669
    2. ' r' → logprob: -0.9637671709060669
    3. '"' → logprob: -4.588767051696777
    4. ' formula' → logprob: -4.963767051696777
    5. ' format' → logprob: -5.463767051696777
    6. ' code' → logprob: -5.463767051696777
    7. 'x' → logprob: -5.463767051696777
    8. ' sequence' → logprob: -5.713767051696777
    9. 'n' → logprob: -5.838767051696777
    10. ' ' → logprob: -5.963767051696777

Token 150: ' de' (ID: 334)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -1.0094717741012573
    2. 'x' → logprob: -1.7594717741012573
    3. '        
' → logprob: -2.009471893310547
    4. '       ' → logprob: -2.134471893310547
    5. 'n' → logprob: -2.884471893310547
    6. ' =' → logprob: -3.509471893310547
    7. '    
' → logprob: -3.759471893310547
    8. '
' → logprob: -4.009471893310547
    9. '   ' → logprob: -4.009471893310547
    10. '        ' → logprob: -5.134471893310547

Token 151: ' ré' (ID: 3146)
  Prédit: ' recurrence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' recurrence' → logprob: -0.7597482204437256
    2. 'r' → logprob: -0.8847482204437256
    3. ' réc' → logprob: -3.3847482204437256
    4. ' ré' → logprob: -3.5097482204437256
    5. 'rec' → logprob: -3.8847482204437256
    6. ' r' → logprob: -4.509748458862305
    7. ' recursion' → logprob: -5.384748458862305
    8. ' recurrent' → logprob: -5.509748458862305
    9. ' rec' → logprob: -5.509748458862305
    10. 'x' → logprob: -5.759748458862305

Token 152: 'curr' (ID: 28376)
  Prédit: 'curr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'curr' → logprob: -0.0029016395565122366
    2. 'c' → logprob: -6.377901554107666
    3. 'current' → logprob: -7.252901554107666
    4. 'cc' → logprob: -8.377902030944824
    5. 'cur' → logprob: -8.877902030944824
    6. 'urrence' → logprob: -9.252902030944824
    7. 'cup' → logprob: -11.502902030944824
    8. 'currency' → logprob: -12.502902030944824
    9. '

' → logprob: -13.377902030944824
    10. '_curr' → logprob: -13.752902030944824

Token 153: 'ence' (ID: 1082)
  Prédit: 'ence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ence' → logprob: -7.350386295001954e-05
    2. 'rence' → logprob: -9.750073432922363
    3. 'e' → logprob: -12.125073432922363
    4. 'ente' → logprob: -12.375073432922363
    5. '#' → logprob: -13.625073432922363
    6. '
' → logprob: -14.125073432922363
    7. 'érence' → logprob: -14.625073432922363
    8. 'en' → logprob: -14.875073432922363
    9. '```' → logprob: -15.125073432922363
    10. 'ece' → logprob: -15.125073432922363

Token 154: '
' (ID: 198)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.43005889654159546
    2. ' x' → logprob: -1.5550589561462402
    3. '       ' → logprob: -2.0550589561462402
    4. ' =' → logprob: -6.05505895614624
    5. '        
' → logprob: -6.18005895614624
    6. '=' → logprob: -6.55505895614624
    7. '
' → logprob: -7.05505895614624
    8. '<|end|>' → logprob: -7.05505895614624
    9. ' 
' → logprob: -7.55505895614624
    10. '        ' → logprob: -7.80505895614624

Token 155: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09675469994544983
    2. 'x' → logprob: -3.096754789352417
    3. ' x' → logprob: -3.096754789352417
    4. '        
' → logprob: -6.721754550933838
    5. '   ' → logprob: -8.596755027770996
    6. '
' → logprob: -8.721755027770996
    7. '<|end|>' → logprob: -10.096755027770996
    8. '        ' → logprob: -10.221755027770996
    9. ',' → logprob: -10.346755027770996
    10. ' 
' → logprob: -10.471755027770996

Token 156: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.10022812336683273
    2. ' x' → logprob: -2.3502280712127686
    3. '	x' → logprob: -11.850228309631348
    4. '       ' → logprob: -12.600228309631348
    5. '<|end|>' → logprob: -13.225228309631348
    6. '        
' → logprob: -13.475228309631348
    7. ' 
' → logprob: -13.850228309631348
    8. '   ' → logprob: -13.975228309631348
    9. '    ' → logprob: -14.225228309631348
    10. 'new' → logprob: -14.350228309631348

Token 157: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01251847855746746
    2. '=' → logprob: -4.387518405914307
    3. ' *=' → logprob: -12.262518882751465
    4. ' ' → logprob: -13.137518882751465
    5. ',' → logprob: -14.512518882751465
    6. ')' → logprob: -15.012518882751465
    7. ' =
' → logprob: -15.012518882751465
    8. 's' → logprob: -15.637518882751465
    9. '_' → logprob: -15.887518882751465
    10. '	' → logprob: -16.01251792907715

Token 158: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.12693241238594055
    2. 'r' → logprob: -2.126932382583618
    3. ' ' → logprob: -13.126932144165039
    4. '	r' → logprob: -14.251932144165039
    5. '(r' → logprob: -14.626932144165039
    6. ' ' → logprob: -14.751932144165039
    7. ' (' → logprob: -15.376932144165039
    8. ' ' → logprob: -16.37693214416504
    9. ' 
' → logprob: -16.62693214416504
    10. 'x' → logprob: -16.93943214416504

Token 159: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.0011790355201810598
    2. '*' → logprob: -6.751179218292236
    3. '*x' → logprob: -11.751178741455078
    4. ' ' → logprob: -14.376178741455078
    5. ' ' → logprob: -15.501178741455078
    6. ' x' → logprob: -17.126178741455078
    7. ' **' → logprob: -17.251178741455078
    8. '	' → logprob: -17.751178741455078
    9. ' *
' → logprob: -17.751178741455078
    10. '*object' → logprob: -18.001178741455078

Token 160: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.061969365924596786
    2. ' x' → logprob: -2.81196928024292
    3. ' ' → logprob: -13.686969757080078
    4. '<|end|>' → logprob: -14.561969757080078
    5. '	x' → logprob: -16.686969757080078
    6. ')x' → logprob: -17.811969757080078
    7. ')' → logprob: -17.936969757080078
    8. '(x' → logprob: -17.936969757080078
    9. '_' → logprob: -18.186969757080078
    10. '*x' → logprob: -18.561969757080078

Token 161: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.008652626536786556
    2. '-' → logprob: -4.758652687072754
    3. ' ' → logprob: -10.758652687072754
    4. ' ' → logprob: -11.883652687072754
    5. '<|end|>' → logprob: -12.133652687072754
    6. ')' → logprob: -13.008652687072754
    7. '-D' → logprob: -14.258652687072754
    8. '"' → logprob: -14.883652687072754
    9. ' −' → logprob: -15.696152687072754
    10. ' –' → logprob: -15.821152687072754

Token 162: ' D' (ID: 415)
  Prédit: ' D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' D' → logprob: -0.20149627327919006
    2. 'D' → logprob: -1.7014962434768677
    3. ' ' → logprob: -10.076496124267578
    4. ' ' → logprob: -10.451496124267578
    5. '	D' → logprob: -13.201496124267578
    6. ')' → logprob: -13.826496124267578
    7. ''' → logprob: -13.951496124267578
    8. '1' → logprob: -14.076496124267578
    9. 'd' → logprob: -14.201496124267578
    10. '<|end|>' → logprob: -14.326496124267578

Token 163: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009992283768951893
    2. '
' → logprob: -4.6349921226501465
    3. '        
' → logprob: -9.009992599487305
    4. 'print' → logprob: -9.759992599487305
    5. '  
' → logprob: -11.509992599487305
    6. '
' → logprob: -11.634992599487305
    7. ',' → logprob: -11.634992599487305
    8. ' print' → logprob: -12.134992599487305
    9. '```' → logprob: -12.134992599487305
    10. '   ' → logprob: -12.384992599487305

Token 164: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00027111053350381553
    2. 'print' → logprob: -9.00027084350586
    3. '
' → logprob: -9.62527084350586
    4. '        
' → logprob: -9.87527084350586
    5. '   ' → logprob: -11.37527084350586
    6. '```' → logprob: -11.75027084350586
    7. ' print' → logprob: -12.12527084350586
    8. '    
' → logprob: -13.62527084350586
    9. '\' → logprob: -14.25027084350586
    10. '  
' → logprob: -14.37527084350586

Token 165: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3595511019229889
    2. 'print' → logprob: -1.3595510721206665
    3. ' print' → logprob: -3.109551191329956
    4. '
' → logprob: -8.109551429748535
    5. '        
' → logprob: -8.609551429748535
    6. ' 
' → logprob: -10.109551429748535
    7. '   ' → logprob: -10.109551429748535
    8. '    
' → logprob: -11.234551429748535
    9. '        ' → logprob: -11.484551429748535
    10. '  
' → logprob: -12.359551429748535

Token 166: ' Aff' (ID: 13741)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.3501877784729004
    2. 'print' → logprob: -1.2251877784729004
    3. '       ' → logprob: -6.4751877784729
    4. '    ' → logprob: -9.475187301635742
    5. '   ' → logprob: -9.475187301635742
    6. '        ' → logprob: -10.475187301635742
    7. '```' → logprob: -12.475187301635742
    8. 'pr' → logprob: -12.850187301635742
    9. ' ' → logprob: -13.350187301635742
    10. 'Print' → logprob: -13.475187301635742

Token 167: 'ichage' (ID: 118475)
  Prédit: 'iche'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iche' → logprob: -0.12384255230426788
    2. 'icher' → logprob: -2.998842477798462
    3. '   ' → logprob: -3.748842477798462
    4. 'ichage' → logprob: -3.998842477798462
    5. 'ic' → logprob: -4.748842716217041
    6. '       ' → logprob: -4.998842716217041
    7. 'ich' → logprob: -5.998842716217041
    8. ' print' → logprob: -5.998842716217041
    9. 'print' → logprob: -7.373842716217041
    10. 'i' → logprob: -7.623842716217041

Token 168: ' du' (ID: 1462)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.18266817927360535
    2. '(' → logprob: -2.6826682090759277
    3. '(x' → logprob: -2.8076682090759277
    4. '("' → logprob: -3.6826682090759277
    5. ' f' → logprob: -5.182668209075928
    6. 'f' → logprob: -6.182668209075928
    7. '"' → logprob: -6.807668209075928
    8. '       ' → logprob: -7.182668209075928
    9. '('' → logprob: -7.307668209075928
    10. 'x' → logprob: -7.432668209075928

Token 169: ' terme' (ID: 42959)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.9000203609466553
    2. ' f' → logprob: -1.1500203609466553
    3. 'f' → logprob: -1.6500203609466553
    4. ' x' → logprob: -2.5250203609466553
    5. 'i' → logprob: -6.525020599365234
    6. ' terme' → logprob: -6.775020599365234
    7. ' i' → logprob: -7.025020599365234
    8. 'ter' → logprob: -8.150020599365234
    9. '(f' → logprob: -8.525020599365234
    10. '   ' → logprob: -8.525020599365234

Token 170: ' actuel' (ID: 113646)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17575374245643616
    2. ',' → logprob: -2.4257538318634033
    3. '(' → logprob: -3.8007538318634033
    4. '(f' → logprob: -4.425753593444824
    5. ' f' → logprob: -4.425753593444824
    6. ' (' → logprob: -4.550753593444824
    7. 'print' → logprob: -5.550753593444824
    8. ' ,' → logprob: -6.050753593444824
    9. '        
' → logprob: -6.050753593444824
    10. ' print' → logprob: -6.925753593444824

Token 171: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0021356288343667984
    2. ',' → logprob: -7.377135753631592
    3. ' print' → logprob: -7.502135753631592
    4. 'print' → logprob: -7.627135753631592
    5. '(' → logprob: -8.627135276794434
    6. '        
' → logprob: -9.502135276794434
    7. '        ' → logprob: -10.002135276794434
    8. ' (' → logprob: -10.252135276794434
    9. '   ' → logprob: -10.502135276794434
    10. ' ,' → logprob: -10.752135276794434

Token 172: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011304517975077033
    2. ' print' → logprob: -7.5011305809021
    3. 'print' → logprob: -7.5011305809021
    4. '        
' → logprob: -11.376130104064941
    5. '        ' → logprob: -12.751130104064941
    6. '      ' → logprob: -13.126130104064941
    7. ',' → logprob: -13.126130104064941
    8. '(' → logprob: -13.501130104064941
    9. '   ' → logprob: -13.501130104064941
    10. '           ' → logprob: -14.126130104064941

Token 173: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.023446373641490936
    2. ' print' → logprob: -3.7734463214874268
    3. '       ' → logprob: -8.523446083068848
    4. '   ' → logprob: -14.023446083068848
    5. '```' → logprob: -14.148446083068848
    6. 'pr' → logprob: -15.273446083068848
    7. '	print' → logprob: -16.523447036743164
    8. '    ' → logprob: -17.398447036743164
    9. ' ' → logprob: -17.398447036743164
    10. '        
' → logprob: -17.648447036743164

Token 174: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2330484837293625
    2. '(x' → logprob: -1.733048439025879
    3. '(f' → logprob: -3.483048439025879
    4. '('' → logprob: -8.483048439025879
    5. '("("' → logprob: -8.983048439025879
    6. '("' → logprob: -9.858048439025879
    7. '()' → logprob: -10.608048439025879
    8. '((' → logprob: -12.108048439025879
    9. '(
' → logprob: -12.608048439025879
    10. '(i' → logprob: -13.108048439025879

Token 175: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.319370302458992e-06
    2. ' )' → logprob: -12.500005722045898
    3. ')
' → logprob: -14.125005722045898
    4. '   ' → logprob: -15.000005722045898
    5. ')`' → logprob: -16.3750057220459
    6. '))' → logprob: -16.5000057220459
    7. ')}' → logprob: -16.6250057220459
    8. '')' → logprob: -16.7500057220459
    9. '")' → logprob: -17.1250057220459
    10. '       ' → logprob: -17.3750057220459

Token 176: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 177: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.06840728968381882
    2. '__' → logprob: -3.0684072971343994
    3. ' ' → logprob: -4.06840705871582
    4. '_' → logprob: -6.19340705871582
    5. ' _' → logprob: -8.31840705871582
    6. ' ' → logprob: -9.06840705871582
    7. ' ' → logprob: -10.19340705871582
    8. 'space' → logprob: -11.56840705871582
    9. '___' → logprob: -11.69340705871582
    10. '_name' → logprob: -11.69340705871582

Token 178: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.11695601046085358
    2. ' __' → logprob: -2.3669559955596924
    3. ' ==' → logprob: -4.1169562339782715
    4. '==' → logprob: -8.491955757141113
    5. 'name' → logprob: -9.991955757141113
    6. '.__' → logprob: -10.991955757141113
    7. '__.__' → logprob: -11.866955757141113
    8. ' =="' → logprob: -11.866955757141113
    9. '=="' → logprob: -12.491955757141113
    10. '_name' → logprob: -12.741955757141113

Token 179: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.981667537620524e-06
    2. '==' → logprob: -13.875001907348633
    3. '__.__' → logprob: -14.000001907348633
    4. ' ==' → logprob: -16.750001907348633
    5. '____' → logprob: -17.250001907348633
    6. '=="' → logprob: -17.375001907348633
    7. '__
' → logprob: -17.875001907348633
    8. '___' → logprob: -18.000001907348633
    9. '__.' → logprob: -18.000001907348633
    10. '__('' → logprob: -18.250001907348633

Token 180: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.09527645260095596
    2. ' ==' → logprob: -2.720276355743408
    3. '==' → logprob: -3.720276355743408
    4. '=="' → logprob: -7.345276355743408
    5. '__.__' → logprob: -9.470276832580566
    6. '=='' → logprob: -10.970276832580566
    7. '___' → logprob: -11.845276832580566
    8. '__.' → logprob: -11.845276832580566
    9. '_' → logprob: -12.345276832580566
    10. '.__' → logprob: -12.470276832580566

Token 181: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.023362644016742706
    2. ''' → logprob: -3.773362636566162
    3. ' "__' → logprob: -9.14836311340332
    4. ' "' → logprob: -12.02336311340332
    5. '__' → logprob: -12.89836311340332
    6. '"user' → logprob: -13.89836311340332
    7. ' '__' → logprob: -14.89836311340332
    8. '"name' → logprob: -15.02336311340332
    9. '"I' → logprob: -16.39836311340332
    10. '"log' → logprob: -16.52336311340332

Token 182: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.03011295385658741
    2. '__' → logprob: -3.5301129817962646
    3. '_main' → logprob: -8.155113220214844
    4. 'name' → logprob: -9.905113220214844
    5. '"' → logprob: -10.905113220214844
    6. ' main' → logprob: -13.405113220214844
    7. ' "__' → logprob: -13.655113220214844
    8. '__":
' → logprob: -13.905113220214844
    9. '_MAIN' → logprob: -14.405113220214844
    10. '___' → logprob: -15.030113220214844

Token 183: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.07889870554208755
    2. '__' → logprob: -2.5788986682891846
    3. '__':
' → logprob: -11.703898429870605
    4. '__:' → logprob: -14.578898429870605
    5. '__["' → logprob: -16.453899383544922
    6. '__("' → logprob: -17.453899383544922
    7. '__
' → logprob: -17.578899383544922
    8. '_' → logprob: -18.078899383544922
    9. '__",' → logprob: -18.078899383544922
    10. '___' → logprob: -18.203899383544922

Token 184: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.038785669952631
    2. '<|end|>' → logprob: -3.788785696029663
    3. ':
' → logprob: -5.288785457611084
    4. '():
' → logprob: -5.913785457611084
    5. '():' → logprob: -6.038785457611084
    6. '   ' → logprob: -6.663785457611084
    7. ' :' → logprob: -6.788785457611084
    8. '<|end|>' → logprob: -6.913785457611084
    9. '()' → logprob: -8.288785934448242
    10. '(' → logprob: -8.413785934448242

Token 185: ' #' (ID: 1069)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.03935520723462105
    2. 'r' → logprob: -3.2893552780151367
    3. '   ' → logprob: -7.539355278015137
    4. ' #' → logprob: -7.914355278015137
    5. '#' (adapté à ' #') → logprob: -8.664355278015137
    6. ' import' → logprob: -9.789355278015137
    7. '	r' → logprob: -9.789355278015137
    8. 'import' → logprob: -10.789355278015137
    9. ' ' → logprob: -10.789355278015137
    10. ' n' → logprob: -11.289355278015137

Token 186: ' Lecture' (ID: 106534)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.141084223985672
    2. '#' → logprob: -2.6410841941833496
    3. ' r' → logprob: -3.0160841941833496
    4. ' #' → logprob: -4.89108419418335
    5. 'x' → logprob: -7.89108419418335
    6. 'while' → logprob: -7.89108419418335
    7. 'def' → logprob: -8.266084671020508
    8. 'sequence' → logprob: -8.266084671020508
    9. 'print' → logprob: -8.391084671020508
    10. ' sequence' → logprob: -8.391084671020508

Token 187: ' des' (ID: 731)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9263820052146912
    2. '()' → logprob: -0.9263820052146912
    3. 'r' → logprob: -2.051382064819336
    4. ' des' → logprob: -3.801382064819336
    5. ' (' → logprob: -4.176382064819336
    6. ' ' → logprob: -4.676382064819336
    7. '(r' → logprob: -4.801382064819336
    8. 'user' → logprob: -5.801382064819336
    9. ' r' → logprob: -5.801382064819336
    10. '   ' → logprob: -6.176382064819336

Token 188: ' trois' (ID: 25564)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.014820750802755356
    2. ' r' → logprob: -4.764820575714111
    3. 'val' → logprob: -5.514820575714111
    4. ' ' → logprob: -7.889820575714111
    5. 'params' → logprob: -7.889820575714111
    6. 'param' → logprob: -8.01482105255127
    7. 'int' → logprob: -8.38982105255127
    8. 'inputs' → logprob: -9.01482105255127
    9. ' param' → logprob: -9.26482105255127
    10. 'values' → logprob: -9.38982105255127

Token 189: ' ent' (ID: 1121)
  Prédit: ' valeurs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' valeurs' → logprob: -0.6741881370544434
    2. ' integers' → logprob: -1.1741881370544434
    3. ' ent' → logprob: -2.9241881370544434
    4. ' ' → logprob: -3.4241881370544434
    5. 'val' → logprob: -3.7991881370544434
    6. ' paramètres' → logprob: -3.7991881370544434
    7. ' val' → logprob: -4.674188137054443
    8. ' parameters' → logprob: -5.049188137054443
    9. ' nombres' → logprob: -5.174188137054443
    10. ' values' → logprob: -5.299188137054443

Token 190: 'iers' (ID: 11012)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.3312743008136749
    2. 'iers' → logprob: -1.3312742710113525
    3. 'rees' → logprob: -4.581274509429932
    4. 'rée' → logprob: -5.081274509429932
    5. 'rés' → logprob: -7.706274509429932
    6. 'ières' → logprob: -8.581274032592773
    7. 'ers' → logprob: -8.581274032592773
    8. 'riers' → logprob: -8.831274032592773
    9. 'ries' → logprob: -8.956274032592773
    10. 'ree' → logprob: -9.581274032592773

Token 191: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.16234467923641205
    2. 'r' → logprob: -1.9123446941375732
    3. '(r' → logprob: -7.037344455718994
    4. ' =' → logprob: -8.162344932556152
    5. ' ' → logprob: -8.537344932556152
    6. 's' → logprob: -8.537344932556152
    7. ' ,' → logprob: -9.287344932556152
    8. ' )' → logprob: -9.412344932556152
    9. ' (' → logprob: -10.287344932556152
    10. '_r' → logprob: -10.287344932556152

Token 192: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07170060276985168
    2. ' =' → logprob: -2.6967005729675293
    3. '=' → logprob: -6.446700572967529
    4. ',D' → logprob: -9.696701049804688
    5. ' ,' → logprob: -9.946701049804688
    6. ',r' → logprob: -10.571701049804688
    7. ',d' → logprob: -11.696701049804688
    8. '<|end|>' → logprob: -12.196701049804688
    9. '=int' → logprob: -12.321701049804688
    10. 's' → logprob: -12.446701049804688

Token 193: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.17986811697483063
    2. ' D' → logprob: -1.8048681020736694
    3. 'x' → logprob: -9.8048677444458
    4. ',' → logprob: -11.0548677444458
    5. 'd' → logprob: -11.1798677444458
    6. ' ' → logprob: -11.3048677444458
    7. ' x' → logprob: -11.8048677444458
    8. ',D' → logprob: -12.1798677444458
    9. ' ' → logprob: -12.5548677444458
    10. ' ,' → logprob: -13.1798677444458

Token 194: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020234835392329842
    2. ' =' → logprob: -8.750202178955078
    3. ' ,' → logprob: -10.625202178955078
    4. ',r' → logprob: -12.125202178955078
    5. ',x' → logprob: -12.750202178955078
    6. '=' → logprob: -13.250202178955078
    7. '<|end|>' → logprob: -13.375202178955078
    8. 's' → logprob: -13.500202178955078
    9. ',input' → logprob: -13.625202178955078
    10. ',user' → logprob: -14.000202178955078

Token 195: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5763263702392578
    2. ' x' → logprob: -0.8263263702392578
    3. ' and' → logprob: -8.576326370239258
    4. 'et' → logprob: -9.701326370239258
    5. ',' → logprob: -9.826326370239258
    6. ' et' → logprob: -10.576326370239258
    7. ' ' → logprob: -10.826326370239258
    8. ',x' → logprob: -11.576326370239258
    9. 'and' → logprob: -11.701326370239258
    10. '#' → logprob: -12.076326370239258

Token 196: ' depuis' (ID: 16277)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.000595447258092463
    2. '=' → logprob: -7.500595569610596
    3. ',' → logprob: -10.500595092773438
    4. 'r' → logprob: -12.125595092773438
    5. 's' → logprob: -12.125595092773438
    6. ' =
' → logprob: -13.500595092773438
    7. '   ' → logprob: -14.500595092773438
    8. '=r' → logprob: -14.625595092773438
    9. ')' → logprob: -14.875595092773438
    10. '=input' → logprob: -15.000595092773438

Token 197: ' l' (ID: 305)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.34790587425231934
    2. 'l' → logprob: -1.8479058742523193
    3. 'input' → logprob: -2.4729058742523193
    4. ' l' → logprob: -2.9729058742523193
    5. ' la' → logprob: -8.347906112670898
    6. '=input' → logprob: -8.722906112670898
    7. '   ' → logprob: -9.722906112670898
    8. 'la' → logprob: -9.722906112670898
    9. '	l' → logprob: -9.847906112670898
    10. ' ' → logprob: -10.347906112670898

Token 198: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.29134461283683777
    2. 'input' → logprob: -1.7913446426391602
    3. ''' → logprob: -3.54134464263916
    4. 'a' → logprob: -3.66634464263916
    5. 'e' → logprob: -4.29134464263916
    6. 'entrée' → logprob: -4.66634464263916
    7. '_' → logprob: -5.91634464263916
    8. 'es' → logprob: -6.16634464263916
    9. ''utilisateur' → logprob: -6.41634464263916
    10. '=input' → logprob: -7.79134464263916

Token 199: ' standard' (ID: 7024)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.019198182970285416
    2. 'r' → logprob: -4.644198417663574
    3. '=' → logprob: -5.519198417663574
    4. 's' → logprob: -6.144198417663574
    5. ',' → logprob: -6.519198417663574
    6. ' r' → logprob: -7.269198417663574
    7. '=r' → logprob: -8.269198417663574
    8. ':' → logprob: -9.144198417663574
    9. '_r' → logprob: -9.144198417663574
    10. '(r' → logprob: -9.394198417663574

Token 200: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6409010291099548
    2. 'r' → logprob: -1.2659010887145996
    3. ',' → logprob: -2.3909010887145996
    4. '    
' → logprob: -2.6409010887145996
    5. ' r' → logprob: -4.3909010887146
    6. ' =' → logprob: -5.8909010887146
    7. ',r' → logprob: -6.2659010887146
    8. 's' → logprob: -6.6409010887146
    9. '(r' → logprob: -6.8909010887146
    10. '   
' → logprob: -6.8909010887146

Token 201: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08423829078674316
    2. 'r' → logprob: -3.334238290786743
    3. '    
' → logprob: -4.334238052368164
    4. ' r' → logprob: -4.584238052368164
    5. ',' → logprob: -4.709238052368164
    6. ' =' → logprob: -4.959238052368164
    7. '    ' → logprob: -6.834238052368164
    8. '(r' → logprob: -7.084238052368164
    9. ':' → logprob: -7.209238052368164
    10. 'n' → logprob: -7.959238052368164

Token 202: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.38699573278427124
    2. ' r' → logprob: -1.136995792388916
    3. '   ' → logprob: -9.386995315551758
    4. 'values' → logprob: -11.636995315551758
    5. 'inputs' → logprob: -12.011995315551758
    6. 'line' → logprob: -12.261995315551758
    7. ' values' → logprob: -12.386995315551758
    8. '	r' → logprob: -12.636995315551758
    9. 's' → logprob: -13.011995315551758
    10. 'import' → logprob: -13.136995315551758

Token 203: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.024745337665081024
    2. ' =' → logprob: -3.774745225906372
    3. '=' → logprob: -6.524745464324951
    4. ' ,' → logprob: -10.649744987487793
    5. '=int' → logprob: -13.024744987487793
    6. ',r' → logprob: -13.649744987487793
    7. 's' → logprob: -13.899744987487793
    8. '=input' → logprob: -14.024744987487793
    9. ')' → logprob: -14.399744987487793
    10. ',input' → logprob: -14.899744987487793

Token 204: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.34892725944519043
    2. ' D' → logprob: -1.2239272594451904
    3. ' ' → logprob: -7.8489274978637695
    4. '  ' → logprob: -10.47392749786377
    5. '<|end|>' → logprob: -10.47392749786377
    6. ' =' → logprob: -11.72392749786377
    7. 'd' → logprob: -12.22392749786377
    8. ' ' → logprob: -12.34892749786377
    9. 'space' → logprob: -12.59892749786377
    10. '=' → logprob: -12.97392749786377

Token 205: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.666993507067673e-05
    2. ' ,' → logprob: -10.250036239624023
    3. ',x' → logprob: -14.500036239624023
    4. ' =' → logprob: -15.125036239624023
    5. ',input' → logprob: -16.375036239624023
    6. '=' → logprob: -16.625036239624023
    7. ',user' → logprob: -17.125036239624023
    8. '<|end|>' → logprob: -17.250036239624023
    9. '_,' → logprob: -18.000036239624023
    10. ',r' → logprob: -18.375036239624023

Token 206: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.20141607522964478
    2. 'x' → logprob: -1.701416015625
    3. ' ' → logprob: -13.701416015625
    4. ',x' → logprob: -14.201416015625
    5. ',' → logprob: -15.326416015625
    6. ' =' → logprob: -15.451416015625
    7. '	x' → logprob: -15.951416015625
    8. ' and' → logprob: -16.076416015625
    9. ' ' → logprob: -16.201416015625
    10. '=' → logprob: -16.951416015625

Token 207: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519477903842926
    2. '=' → logprob: -1.5019477605819702
    3. '=input' → logprob: -11.126947402954102
    4. '=int' → logprob: -13.376947402954102
    5. ')' → logprob: -14.001947402954102
    6. ',' → logprob: -14.251947402954102
    7. '<|end|>' → logprob: -15.501947402954102
    8. '=list' → logprob: -16.1269474029541
    9. ' ' → logprob: -16.2519474029541
    10. ')=' → logprob: -16.3769474029541

Token 208: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.033659763634204865
    2. 'map' → logprob: -3.4086596965789795
    3. '[' → logprob: -11.908659934997559
    4. ' ' → logprob: -13.033659934997559
    5. ' [' → logprob: -13.533659934997559
    6. '	map' → logprob: -13.658659934997559
    7. '(map' → logprob: -13.908659934997559
    8. ' ' → logprob: -14.033659934997559
    9. ' input' → logprob: -15.158659934997559
    10. ' list' → logprob: -15.908659934997559

Token 209: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.003225606167688966
    2. '(' → logprob: -5.753225803375244
    3. '(input' → logprob: -10.128225326538086
    4. 'int' → logprob: -12.128225326538086
    5. '<int' → logprob: -13.753225326538086
    6. '(
' → logprob: -14.378225326538086
    7. '[int' → logprob: -14.878225326538086
    8. ' (' → logprob: -15.753225326538086
    9. '=int' → logprob: -16.253225326538086
    10. ' int' → logprob: -16.378225326538086

Token 210: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.09140709787607193
    2. 'input' → logprob: -2.591407060623169
    3. ',input' → logprob: -4.591407299041748
    4. ',' → logprob: -7.091407299041748
    5. ' input' → logprob: -7.216407299041748
    6. ')' → logprob: -7.966407299041748
    7. '(' → logprob: -7.966407299041748
    8. '=input' → logprob: -11.09140682220459
    9. ' (' → logprob: -11.46640682220459
    10. '<input' → logprob: -12.46640682220459

Token 211: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.1269282102584839
    2. ' input' → logprob: -2.1269283294677734
    3. ')' → logprob: -16.626928329467773
    4. '(input' → logprob: -16.626928329467773
    5. '<input' → logprob: -16.876928329467773
    6. ' ' → logprob: -17.626928329467773
    7. ',input' → logprob: -17.751928329467773
    8. '   ' → logprob: -17.876928329467773
    9. '	input' → logprob: -18.251928329467773
    10. '=input' → logprob: -18.376928329467773

Token 212: '("' (ID: 568)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -6.694766489090398e-05
    2. '()' → logprob: -9.625066757202148
    3. ' ().' → logprob: -14.375066757202148
    4. '(' → logprob: -16.25006675720215
    5. '("' → logprob: -17.00006675720215
    6. '("").' → logprob: -17.00006675720215
    7. '())' → logprob: -17.25006675720215
    8. '()
' → logprob: -18.00006675720215
    9. ')' → logprob: -18.62506675720215
    10. '('').' → logprob: -19.50006675720215

Token 213: 'Ent' (ID: 3263)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("' → logprob: -0.16747704148292542
    2. '").' → logprob: -2.5424771308898926
    3. '()' → logprob: -3.0424771308898926
    4. '(' → logprob: -4.292477130889893
    5. '().' → logprob: -4.417477130889893
    6. '()).' → logprob: -7.042477130889893
    7. 'Enter' → logprob: -7.917477130889893
    8. '(">' → logprob: -8.167476654052734
    9. 'Please' → logprob: -9.292476654052734
    10. '('' → logprob: -9.542476654052734

Token 214: 'rez' (ID: 13676)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("' → logprob: -0.03342517465353012
    2. '(' → logprob: -3.6584250926971436
    3. '()' → logprob: -5.158425331115723
    4. '(">' → logprob: -7.533425331115723
    5. '("")' → logprob: -8.283425331115723
    6. 'rodu' → logprob: -9.908425331115723
    7. '('' → logprob: -10.283425331115723
    8. 'érieur' → logprob: -10.408425331115723
    9. 'reur' → logprob: -10.533425331115723
    10. 'éra' → logprob: -10.533425331115723

Token 215: ' r' (ID: 428)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.14503934979438782
    2. '("' → logprob: -2.3950393199920654
    3. '())' → logprob: -3.3950393199920654
    4. '(' → logprob: -5.0200395584106445
    5. ')' → logprob: -6.5200395584106445
    6. '().' → logprob: -7.6450395584106445
    7. '(">' → logprob: -7.7700395584106445
    8. '());' → logprob: -8.520039558410645
    9. '()">' → logprob: -9.145039558410645
    10. '()>' → logprob: -9.270039558410645

Token 216: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.209963900502771e-05
    2. ',D' → logprob: -9.500092506408691
    3. ' ,' → logprob: -11.125092506408691
    4. ' D' → logprob: -14.125092506408691
    5. '",' → logprob: -14.875092506408691
    6. '(),' → logprob: -14.875092506408691
    7. 'D' → logprob: -15.625092506408691
    8. 'r' → logprob: -15.750092506408691
    9. ',"' → logprob: -16.375091552734375
    10. ',d' → logprob: -16.500091552734375

Token 217: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.6340852379798889
    2. ' D' → logprob: -0.7590852379798889
    3. ' ' → logprob: -6.759085178375244
    4. ',' → logprob: -8.884085655212402
    5. ',D' → logprob: -9.259085655212402
    6. '  ' → logprob: -9.884085655212402
    7. '<|end|>' → logprob: -11.884085655212402
    8. ' ,' → logprob: -12.134085655212402
    9. ')' → logprob: -12.384085655212402
    10. ''D' → logprob: -12.509085655212402

Token 218: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.624555291840807e-05
    2. ' ,' → logprob: -9.875076293945312
    3. ',r' → logprob: -11.875076293945312
    4. ',x' → logprob: -12.125076293945312
    5. ',D' → logprob: -12.375076293945312
    6. ' et' → logprob: -12.625076293945312
    7. ')' → logprob: -14.000076293945312
    8. '<|end|>' → logprob: -14.125076293945312
    9. ',input' → logprob: -14.625076293945312
    10. 'r' → logprob: -15.125076293945312

Token 219: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.026393190026283264
    2. 'x' → logprob: -3.651393175125122
    3. ' ' → logprob: -10.526392936706543
    4. ',' → logprob: -10.776392936706543
    5. '<|end|>' → logprob: -11.151392936706543
    6. ' )' → logprob: -11.276392936706543
    7. ' ' → logprob: -12.526392936706543
    8. ')' → logprob: -12.776392936706543
    9. ',x' → logprob: -13.151392936706543
    10. 's' → logprob: -13.276392936706543

Token 220: ' sépar' (ID: 97160)
  Prédit: '").'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '").' → logprob: -0.27511948347091675
    2. '()' → logprob: -2.5251195430755615
    3. '().' → logprob: -2.5251195430755615
    4. ':' → logprob: -3.0251195430755615
    5. ',' → logprob: -4.525119304656982
    6. ' sépar' → logprob: -4.650119304656982
    7. ').' → logprob: -6.150119304656982
    8. ' ").' → logprob: -6.650119304656982
    9. 'split' → logprob: -7.150119304656982
    10. '(' → logprob: -7.150119304656982

Token 221: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.029041027650237083
    2. 'é' → logprob: -3.654041051864624
    3. ' par' → logprob: -6.029040813446045
    4. 'es' → logprob: -9.029041290283203
    5. 'e' → logprob: -9.529041290283203
    6. 'par' → logprob: -9.904041290283203
    7. 'ées' → logprob: -10.154041290283203
    8. 's' → logprob: -10.529041290283203
    9. 'ès' → logprob: -12.279041290283203
    10. 'ée' → logprob: -12.529041290283203

Token 222: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.026327472180128098
    2. 'par' → logprob: -4.151327610015869
    3. '<|end|>' → logprob: -4.651327610015869
    4. ' ' → logprob: -8.526327133178711
    5. ')' → logprob: -9.026327133178711
    6. '_par' → logprob: -9.651327133178711
    7. ' by' → logprob: -9.776327133178711
    8. ' espaces' → logprob: -10.151327133178711
    9. 'space' → logprob: -10.401327133178711
    10. '<|end|>' → logprob: -10.651327133178711

Token 223: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.05393947288393974
    2. 'des' → logprob: -3.4289395809173584
    3. ' un' → logprob: -5.053939342498779
    4. ' espaces' → logprob: -5.303939342498779
    5. 'spaces' → logprob: -5.928939342498779
    6. 'un' → logprob: -6.053939342498779
    7. ' espace' → logprob: -6.678939342498779
    8. 'space' → logprob: -7.053939342498779
    9. ' ' → logprob: -7.803939342498779
    10. ' spaces' → logprob: -7.803939342498779

Token 224: ' espaces' (ID: 98361)
  Prédit: ' espaces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espaces' → logprob: -0.14941085875034332
    2. 'esp' → logprob: -2.0244109630584717
    3. 'es' → logprob: -5.899410724639893
    4. 'spaces' → logprob: -6.024410724639893
    5. ''esp' → logprob: -6.774410724639893
    6. ''espace' → logprob: -8.64941120147705
    7. ' espace' → logprob: -9.27441120147705
    8. 'space' → logprob: -9.77441120147705
    9. ' spaces' → logprob: -10.52441120147705
    10. 'paces' → logprob: -11.14941120147705

Token 225: ' :' (ID: 712)
  Prédit: '").'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '").' → logprob: -0.016017474234104156
    2. ').' → logprob: -4.391017436981201
    3. ':' → logprob: -6.641017436981201
    4. ')' → logprob: -6.891017436981201
    5. '').' → logprob: -7.391017436981201
    6. '")' → logprob: -7.891017436981201
    7. ' ").' → logprob: -9.39101791381836
    8. ')").' → logprob: -10.14101791381836
    9. '):' → logprob: -10.39101791381836
    10. '"' → logprob: -12.01601791381836

Token 226: ' ").' (ID: 49234)
  Prédit: '").'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '").' → logprob: -0.0014139274135231972
    2. ' ").' → logprob: -7.001413822174072
    3. ').' → logprob: -7.876413822174072
    4. '').' → logprob: -9.37641429901123
    5. '")' → logprob: -10.87641429901123
    6. '"))' → logprob: -11.37641429901123
    7. '"' → logprob: -12.12641429901123
    8. ')' → logprob: -14.00141429901123
    9. '`).' → logprob: -15.37641429901123
    10. ' ).' → logprob: -15.62641429901123

Token 227: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00012368128227535635
    2. 'strip' → logprob: -9.000123977661133
    3. ' split' → logprob: -16.625123977661133
    4. 'spl' → logprob: -16.625123977661133
    5. 'rstrip' → logprob: -16.750123977661133
    6. '(split' → logprob: -19.250123977661133
    7. 's' → logprob: -19.875123977661133
    8. '.split' → logprob: -20.500123977661133
    9. 'str' → logprob: -22.500123977661133
    10. '_split' → logprob: -22.625123977661133

Token 228: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.00493783550336957
    2. '()' → logprob: -5.504937648773193
    3. '()))' → logprob: -7.379937648773193
    4. ')' → logprob: -8.629938125610352
    5. '('' → logprob: -10.379938125610352
    6. '(' → logprob: -11.254938125610352
    7. '())
' → logprob: -12.254938125610352
    8. '))' → logprob: -12.629938125610352
    9. '("' → logprob: -13.504938125610352
    10. ' ())' → logprob: -13.754938125610352

Token 229: '   ' (ID: 271)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -0.0020718714222311974
    2. '   ' → logprob: -6.252071857452393
    3. ' sequence' → logprob: -8.87707233428955
    4. '
' → logprob: -13.12707233428955
    5. '(sequence' → logprob: -13.50207233428955
    6. '    
' → logprob: -15.87707233428955
    7. '```' → logprob: -16.627071380615234
    8. '_sequence' → logprob: -16.627071380615234
    9. '.sequence' → logprob: -17.127071380615234
    10. 'Sequence' → logprob: -17.502071380615234

Token 230: ' #' (ID: 1069)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -8.895480277715251e-06
    2. ' sequence' → logprob: -11.750008583068848
    3. '   ' → logprob: -14.000008583068848
    4. '
' → logprob: -15.875008583068848
    5. '    
' → logprob: -18.500009536743164
    6. 'Sequence' → logprob: -19.125009536743164
    7. '(sequence' → logprob: -19.375009536743164
    8. '```' → logprob: -19.750009536743164
    9. '_sequence' → logprob: -20.375009536743164
    10. 'print' → logprob: -20.500009536743164

Token 231: ' App' (ID: 2583)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -4.5491004129871726e-05
    2. ' sequence' → logprob: -10.000045776367188
    3. '(sequence' → logprob: -20.375045776367188
    4. '   ' → logprob: -20.500045776367188
    5. 'sequ' → logprob: -20.750045776367188
    6. 'Sequence' → logprob: -22.000045776367188
    7. '_sequence' → logprob: -22.125045776367188
    8. 'print' → logprob: -22.250045776367188
    9. '.sequence' → logprob: -22.875045776367188
    10. 'seq' → logprob: -23.750045776367188

Token 232: 'el' (ID: 296)
  Prédit: 'el'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'el' → logprob: -0.01239002961665392
    2. 'eler' → logprob: -5.26239013671875
    3. 'elle' → logprob: -5.88739013671875
    4. 'l' → logprob: -6.26239013671875
    5. 'le' → logprob: -7.26239013671875
    6. 'ly' → logprob: -7.38739013671875
    7. 'elé' → logprob: -7.51239013671875
    8. '   ' → logprob: -8.76239013671875
    9. 'ele' → logprob: -8.88739013671875
    10. 'ely' → logprob: -9.88739013671875

Token 233: ' de' (ID: 334)
  Prédit: ' sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sequence' → logprob: -0.7603895664215088
    2. '(sequence' → logprob: -1.2603895664215088
    3. 'sequence' → logprob: -1.5103895664215088
    4. '(' → logprob: -3.635389566421509
    5. '   ' → logprob: -7.13538932800293
    6. ' de' → logprob: -8.13538932800293
    7. '(
' → logprob: -8.63538932800293
    8. '_sequence' → logprob: -8.63538932800293
    9. 'def' → logprob: -8.76038932800293
    10. 'de' → logprob: -9.38538932800293

Token 234: ' la' (ID: 557)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -2.339278580620885e-06
    2. ' sequence' → logprob: -13.000001907348633
    3. '(sequence' → logprob: -18.750001907348633
    4. 'sequ' → logprob: -22.250001907348633
    5. '_sequence' → logprob: -24.875001907348633
    6. 'Sequence' → logprob: -25.000001907348633
    7. '.sequence' → logprob: -25.500001907348633
    8. '
' → logprob: -26.500001907348633
    9. 'sentence' → logprob: -26.500001907348633
    10. 'function' → logprob: -26.500001907348633

Token 235: ' fonction' (ID: 17610)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -9.088346359931165e-07
    2. ' sequence' → logprob: -14.000000953674316
    3. 'function' → logprob: -18.875
    4. 'sequ' → logprob: -19.75
    5. '(sequence' → logprob: -19.875
    6. 'def' → logprob: -20.25
    7. '_sequence' → logprob: -22.125
    8. 'Sequence' → logprob: -22.375
    9. 'seq' → logprob: -23.0
    10. '
' → logprob: -23.125

Token 236: ' pour' (ID: 1930)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -0.0024758970830589533
    2. ' sequence' → logprob: -6.002475738525391
    3. '(sequence' → logprob: -16.00247573852539
    4. 'sequ' → logprob: -16.50247573852539
    5. '   ' → logprob: -18.25247573852539
    6. 'Sequence' → logprob: -18.87747573852539
    7. '_sequence' → logprob: -19.37747573852539
    8. '
' → logprob: -19.50247573852539
    9. 'seq' → logprob: -19.87747573852539
    10. '.sequence' → logprob: -20.75247573852539

Token 237: ' génér' (ID: 18939)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -0.01815216802060604
    2. ' sequence' → logprob: -4.018152236938477
    3. '(sequence' → logprob: -13.518152236938477
    4. 'sequ' → logprob: -15.143152236938477
    5. '   ' → logprob: -16.268152236938477
    6. 'quence' → logprob: -16.393152236938477
    7. '_sequence' → logprob: -16.393152236938477
    8. 'calcul' → logprob: -16.518152236938477
    9. '
' → logprob: -16.643152236938477
    10. 's' → logprob: -16.893152236938477

Token 238: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.010359516367316246
    2. 'aler' → logprob: -4.885359287261963
    3. 'ate' → logprob: -6.260359287261963
    4. 'rer' → logprob: -8.260359764099121
    5. 'al' → logprob: -8.635359764099121
    6. 'sequence' → logprob: -9.010359764099121
    7. 'érer' → logprob: -9.385359764099121
    8. 'e' → logprob: -10.510359764099121
    9. 'ler' → logprob: -10.635359764099121
    10. 'ater' → logprob: -11.010359764099121

Token 239: ' et' (ID: 859)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -0.0031777136027812958
    2. ' sequence' → logprob: -6.128177642822266
    3. 'la' → logprob: -7.128177642822266
    4. '(sequence' → logprob: -8.878177642822266
    5. ' la' → logprob: -10.003177642822266
    6. 'et' → logprob: -12.753177642822266
    7. 'le' → logprob: -14.503177642822266
    8. '_sequence' → logprob: -14.503177642822266
    9. 'sequ' → logprob: -14.878177642822266
    10. 'les' → logprob: -14.878177642822266

Token 240: ' afficher' (ID: 146524)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -0.5874426960945129
    2. ' sequence' → logprob: -0.8374426960945129
    3. 'aff' → logprob: -4.837442874908447
    4. ' afficher' → logprob: -5.712442874908447
    5. 'sequ' → logprob: -9.962442398071289
    6. '(sequence' → logprob: -10.087442398071289
    7. 'calcul' → logprob: -10.587442398071289
    8. 'sé' → logprob: -10.837442398071289
    9. 'print' → logprob: -11.087442398071289
    10. ' sé' → logprob: -11.337442398071289

Token 241: ' les' (ID: 1341)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -0.0015614043222740293
    2. 'la' → logprob: -7.251561641693115
    3. ' sequence' → logprob: -7.626561641693115
    4. '(sequence' → logprob: -8.001561164855957
    5. ' la' → logprob: -10.626561164855957
    6. 'les' → logprob: -12.876561164855957
    7. '_sequence' → logprob: -14.001561164855957
    8. 'the' → logprob: -14.501561164855957
    9. 'le' → logprob: -14.876561164855957
    10. '(' → logprob: -16.626562118530273

Token 242: ' termes' (ID: 72480)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.2941547930240631
    2. 'ter' → logprob: -2.0441548824310303
    3. 'd' → logprob: -2.2941548824310303
    4. ' termes' → logprob: -4.294154644012451
    5. ' dix' → logprob: -5.294154644012451
    6. ' ' → logprob: -5.669154644012451
    7. 'term' → logprob: -6.419154644012451
    8. 'terms' → logprob: -8.04415512084961
    9. ' premiers' → logprob: -9.04415512084961
    10. 'ten' → logprob: -9.79415512084961

Token 243: ' de' (ID: 334)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -0.0020540240220725536
    2. '(sequence' → logprob: -6.252054214477539
    3. ' sequence' → logprob: -9.002054214477539
    4. '_sequence' → logprob: -13.877054214477539
    5. '(' → logprob: -14.002054214477539
    6. '   ' → logprob: -15.002054214477539
    7. 'def' → logprob: -16.12705421447754
    8. ')' → logprob: -16.75205421447754
    9. 'sequ' → logprob: -17.12705421447754
    10. '.sequence' → logprob: -17.87705421447754

Token 244: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.08647545427083969
    2. ' la' → logprob: -2.711475372314453
    3. 'sequence' → logprob: -4.211475372314453
    4. ' sequence' → logprob: -6.461475372314453
    5. 'suite' → logprob: -12.461475372314453
    6. '(sequence' → logprob: -12.711475372314453
    7. '_la' → logprob: -12.961475372314453
    8. 'the' → logprob: -13.711475372314453
    9. 'l' → logprob: -13.836475372314453
    10. 'sequ' → logprob: -13.836475372314453

Token 245: ' suite' (ID: 13800)
  Prédit: 'suite'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'suite' → logprob: -0.3872457444667816
    2. 'sequence' → logprob: -1.137245774269104
    3. ' sequence' → logprob: -8.637246131896973
    4. 'sé' → logprob: -9.262246131896973
    5. 's' → logprob: -10.137246131896973
    6. ' suite' → logprob: -10.512246131896973
    7. 'seq' → logprob: -11.137246131896973
    8. 'sequ' → logprob: -11.387246131896973
    9. 'su' → logprob: -12.637246131896973
    10. ' ' → logprob: -13.387246131896973

Token 246: '
' (ID: 198)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -1.282920129597187e-05
    2. ' sequence' → logprob: -11.875012397766113
    3. '(sequence' → logprob: -12.250012397766113
    4. '   ' → logprob: -14.125012397766113
    5. '_sequence' → logprob: -16.00001335144043
    6. ')' → logprob: -16.12501335144043
    7. ')
' → logprob: -17.75001335144043
    8. 'sequ' → logprob: -17.87501335144043
    9. '()' → logprob: -18.87501335144043
    10. '(
' → logprob: -19.12501335144043

Token 247: '   ' (ID: 271)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -0.014166327193379402
    2. ' sequence' → logprob: -4.264166355133057
    3. '   ' → logprob: -13.264165878295898
    4. '(sequence' → logprob: -13.889165878295898
    5. '_sequence' → logprob: -16.5141658782959
    6. 'sequ' → logprob: -16.6391658782959
    7. '.sequence' → logprob: -18.0141658782959
    8. 'Sequence' → logprob: -19.1391658782959
    9. ' sequência' → logprob: -20.3891658782959
    10. 'se' → logprob: -20.5141658782959

Token 248: ' sequence' (ID: 16281)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sequence' (adapté à ' sequence') → logprob: -4.842555426876061e-06
    2. ' sequence' → logprob: -12.250004768371582
    3. 'sequ' → logprob: -20.2500057220459
    4. '(sequence' → logprob: -21.1250057220459
    5. 'se' → logprob: -24.2500057220459
    6. '_sequence' → logprob: -24.3750057220459
    7. 'Sequence' → logprob: -24.6250057220459
    8. '.sequence' → logprob: -25.1250057220459
    9. 'seq' → logprob: -26.1250057220459
    10. 'sentence' → logprob: -27.8750057220459

Token 249: '_cal' (ID: 50948)
  Prédit: '_cal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cal' → logprob: -1.2664456789934775e-06
    2. '_' → logprob: -14.250000953674316
    3. '_calc' → logprob: -14.500000953674316
    4. '_code' → logprob: -17.250001907348633
    5. '_c' → logprob: -17.750001907348633
    6. '_com' → logprob: -18.250001907348633
    7. '_CAL' → logprob: -18.500001907348633
    8. '_co' → logprob: -18.500001907348633
    9. '_completion' → logprob: -19.125001907348633
    10. '_ca' → logprob: -19.250001907348633

Token 250: 'culation' (ID: 41845)
  Prédit: 'culation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'culation' → logprob: -0.0001037815964082256
    2. 'ulation' → logprob: -9.375103950500488
    3. 'cul' → logprob: -11.375103950500488
    4. 'lation' → logprob: -12.625103950500488
    5. 'cation' → logprob: -13.375103950500488
    6. 'culate' → logprob: -13.625103950500488
    7. 'cule' → logprob: -14.875103950500488
    8. 'c' → logprob: -15.375103950500488
    9. 'ation' → logprob: -15.500103950500488
    10. 'l' → logprob: -15.750103950500488

Token 251: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.002476016292348504
    2. '(' → logprob: -6.002476215362549
    3. ' (' → logprob: -14.75247573852539
    4. '(
' → logprob: -17.62747573852539
    5. '(run' → logprob: -19.37747573852539
    6. '(s' → logprob: -20.75247573852539
    7. '(re' → logprob: -20.87747573852539
    8. '(x' → logprob: -20.87747573852539
    9. 'r' → logprob: -21.37747573852539
    10. '(f' → logprob: -21.50247573852539

Token 252: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.320199877838604e-07
    2. ',D' → logprob: -15.25
    3. ' ,' → logprob: -16.375
    4. ',
' → logprob: -19.0
    5. '‌,' → logprob: -20.75
    6. ')' → logprob: -21.0
    7. ',

' → logprob: -21.125
    8. '،' → logprob: -22.625
    9. '',' → logprob: -22.75
    10. ',d' → logprob: -23.0

Token 253: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.0485873706638813
    2. ' D' → logprob: -3.0485873222351074
    3. ' ' → logprob: -18.048587799072266
    4. '	D' → logprob: -18.923587799072266
    5. '   ' → logprob: -19.548587799072266
    6. 'd' → logprob: -19.548587799072266
    7. ' ' → logprob: -19.673587799072266
    8. '_D' → logprob: -19.923587799072266
    9. ')' → logprob: -20.423587799072266
    10. '>D' → logprob: -20.673587799072266

Token 254: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.2200749754119897e-06
    2. ' ,' → logprob: -13.625001907348633
    3. ',x' → logprob: -13.875001907348633
    4. 'x' → logprob: -17.625001907348633
    5. ')' → logprob: -18.000001907348633
    6. ',
' → logprob: -18.875001907348633
    7. ' x' → logprob: -19.500001907348633
    8. '```' → logprob: -19.875001907348633
    9. '‌,' → logprob: -20.375001907348633
    10. '   ' → logprob: -21.375001907348633

Token 255: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.4740770161151886
    2. 'x' → logprob: -0.9740769863128662
    3. ')' → logprob: -17.474077224731445
    4. ')x' → logprob: -17.724077224731445
    5. '	x' → logprob: -18.849077224731445
    6. '(x' → logprob: -19.599077224731445
    7. ' ' → logprob: -19.849077224731445
    8. ',x' → logprob: -21.224077224731445
    9. ' ' → logprob: -21.849077224731445
    10. 's' → logprob: -21.974077224731445

Token 256: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. ' )' → logprob: -14.875
    3. '))' → logprob: -17.875
    4. ')
' → logprob: -17.875
    5. ')#' → logprob: -19.875
    6. ')}' → logprob: -19.875
    7. ')`' → logprob: -19.875
    8. ')**' → logprob: -20.5
    9. '),' → logprob: -20.5
    10. ')

' → logprob: -21.125


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 254
Tokens correctement prédits (1ère position, stricte): 86
Tokens correctement prédits (1ère position, avec adaptation): 91
Tokens correctement prédits (top 10): 175
Précision stricte (1ère position): 33.86%
Précision adaptée (1ère position): 35.83%
Précision (top 10): 68.90%
================================================================================
