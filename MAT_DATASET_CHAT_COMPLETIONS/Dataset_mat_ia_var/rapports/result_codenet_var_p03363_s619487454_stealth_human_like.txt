================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:20:06
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n = int(input())
numbers = list(map(int, input().split()))
prefix = [numbers[0]]
for i in range(n - 1):
    prefix.append(prefix[-1] + numbers[i + 1])
prefix.append(0)  # Ajoute zéro (pas sûr que ce soit utile mais ça marche)
prefix.sort()
cnt = 0
result = 0

def comb(a, b):
    res = 1
    for k in range(a-b+1, a+1):
        res = res * k
    for k in range(1, b+1):
        res = res // k   # division entière hein
    return res

cur = prefix[0]
for i in range(n+1):
    if prefix[i] == cur:
        cnt += 1
    else:
        cur = prefix[i]
        result += comb(cnt, 2)
        cnt = 1
if cnt > 1:
    result += comb(cnt,2)
print(result)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00042768914136104286
    2. ''' → logprob: -8.62542724609375
    3. '('' → logprob: -9.37542724609375
    4. '(n' → logprob: -9.87542724609375
    5. '```' → logprob: -10.37542724609375
    6. '`' → logprob: -10.75042724609375
    7. '("("' → logprob: -11.12542724609375
    8. '(
' → logprob: -11.12542724609375
    9. ')' → logprob: -11.75042724609375
    10. '()' → logprob: -12.25042724609375

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11869344860315323
    2. ')' → logprob: -2.2436933517456055
    3. '()' → logprob: -5.3686933517456055
    4. '())' → logprob: -7.4936933517456055
    5. '(
' → logprob: -8.243693351745605
    6. '```' → logprob: -9.993693351745605
    7. '(

' → logprob: -10.368693351745605
    8. '('' → logprob: -10.493693351745605
    9. ''' → logprob: -10.618693351745605
    10. '(n' → logprob: -10.868693351745605

Token 5: 'numbers' (ID: 85055)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7040315866470337
    2. 'if' → logprob: -1.4540315866470337
    3. 'for' → logprob: -2.329031467437744
    4. 's' → logprob: -2.454031467437744
    5. 'f' → logprob: -4.329031467437744
    6. ' ' → logprob: -4.454031467437744
    7. 'x' → logprob: -4.829031467437744
    8. ')' → logprob: -4.954031467437744
    9. 'a' → logprob: -4.954031467437744
    10. ''' → logprob: -5.079031467437744

Token 6: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.06363766640424728
    2. '.' → logprob: -2.8136377334594727
    3. '.append' → logprob: -7.938637733459473
    4. '[n' → logprob: -8.313637733459473
    5. '[:]' → logprob: -8.313637733459473
    6. '[]' → logprob: -8.563637733459473
    7. ')' → logprob: -9.063637733459473
    8. '[count' → logprob: -9.563637733459473
    9. '=' → logprob: -10.063637733459473
    10. '.setdefault' → logprob: -10.313637733459473

Token 7: ' list' (ID: 1562)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.04246280714869499
    2. ' list' → logprob: -3.6674628257751465
    3. '[]' → logprob: -4.9174628257751465
    4. ' [' → logprob: -5.4174628257751465
    5. 'list' → logprob: -5.5424628257751465
    6. '[' → logprob: -8.667462348937988
    7. ' ' → logprob: -9.417462348937988
    8. '[input' → logprob: -10.292462348937988
    9. ' input' → logprob: -10.667462348937988
    10. 'input' → logprob: -10.792462348937988

Token 8: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002612282522022724
    2. '(range' → logprob: -6.502612113952637
    3. '(numbers' → logprob: -7.002612113952637
    4. '(n' → logprob: -10.127612113952637
    5. '()' → logprob: -10.502612113952637
    6. '(input' → logprob: -10.627612113952637
    7. '(
' → logprob: -10.877612113952637
    8. ' (' → logprob: -11.752612113952637
    9. '("("' → logprob: -11.752612113952637
    10. ')' → logprob: -12.002612113952637

Token 9: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.01730392500758171
    2. '(' → logprob: -4.267303943634033
    3. '(lambda' → logprob: -7.017303943634033
    4. '<int' → logprob: -7.517303943634033
    5. '(input' → logprob: -7.517303943634033
    6. 'int' → logprob: -8.392303466796875
    7. '(str' → logprob: -8.642303466796875
    8. ')' → logprob: -8.642303466796875
    9. '=int' → logprob: -8.892303466796875
    10. '[int' → logprob: -8.892303466796875

Token 10: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0011129508493468165
    2. ',input' → logprob: -7.751112937927246
    3. '))' → logprob: -8.376112937927246
    4. '(' → logprob: -8.501112937927246
    5. 'input' → logprob: -8.876112937927246
    6. ')' → logprob: -10.001112937927246
    7. '=input' → logprob: -10.251112937927246
    8. '```' → logprob: -12.501112937927246
    9. '[input' → logprob: -12.751112937927246
    10. ' input' → logprob: -12.751112937927246

Token 11: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0141900684684515
    2. ' input' → logprob: -4.264190196990967
    3. '(input' → logprob: -10.639189720153809
    4. ')' → logprob: -13.389189720153809
    5. ',input' → logprob: -14.139189720153809
    6. '=input' → logprob: -15.389189720153809
    7. '	input' → logprob: -16.139190673828125
    8. '<input' → logprob: -17.264190673828125
    9. '))' → logprob: -17.639190673828125
    10. '),' → logprob: -18.014190673828125

Token 12: '().' (ID: 1454)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.5812507271766663
    2. '()' → logprob: -1.5812506675720215
    3. '())' → logprob: -1.7062506675720215
    4. '().' → logprob: -3.2062506675720215
    5. '()));' → logprob: -4.9562506675720215
    6. '(' → logprob: -6.4562506675720215
    7. '()>' → logprob: -6.7062506675720215
    8. ')' → logprob: -6.7062506675720215
    9. '())))' → logprob: -7.4562506675720215
    10. '))' → logprob: -7.8312506675720215

Token 13: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0004523606039583683
    2. 'strip' → logprob: -7.750452518463135
    3. 'rstrip' → logprob: -11.000452041625977
    4. 's' → logprob: -13.125452041625977
    5. 'spl' → logprob: -13.750452041625977
    6. '(split' → logprob: -14.250452041625977
    7. ')' → logprob: -14.375452041625977
    8. ' split' → logprob: -14.500452041625977
    9. 'sp' → logprob: -15.750452041625977
    10. ')s' → logprob: -17.250452041625977

Token 14: '()))
' (ID: 24521)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.43271613121032715
    2. '))' → logprob: -1.3077161312103271
    3. '(' → logprob: -3.307716131210327
    4. '()))' → logprob: -3.557716131210327
    5. '())' → logprob: -4.432716369628906
    6. '()' → logprob: -5.682716369628906
    7. ')))' → logprob: -8.182716369628906
    8. '(
' → logprob: -10.182716369628906
    9. ''))' → logprob: -10.307716369628906
    10. '())))' → logprob: -11.307716369628906

Token 15: 'prefix' (ID: 26155)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6601528525352478
    2. 'numbers' → logprob: -1.1601529121398926
    3. 'n' → logprob: -2.7851529121398926
    4. 'for' → logprob: -3.5351529121398926
    5. 'sum' → logprob: -4.160152912139893
    6. 'm' → logprob: -4.660152912139893
    7. 'result' → logprob: -4.660152912139893
    8. '.' → logprob: -4.785152912139893
    9. '#' → logprob: -4.910152912139893
    10. ')' → logprob: -5.410152912139893

Token 16: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.07504238188266754
    2. '_sum' → logprob: -2.700042486190796
    3. '_s' → logprob: -5.325042247772217
    4. 's' → logprob: -9.200042724609375
    5. '[' → logprob: -9.700042724609375
    6. '_counts' → logprob: -11.575042724609375
    7. '_count' → logprob: -11.825042724609375
    8. 'sum' → logprob: -11.950042724609375
    9. '_length' → logprob: -12.075042724609375
    10. '_len' → logprob: -12.325042724609375

Token 17: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.14457276463508606
    2. ' []' → logprob: -2.8945727348327637
    3. '[]' → logprob: -3.0195727348327637
    4. ' [' → logprob: -3.5195727348327637
    5. ' ' → logprob: -7.894572734832764
    6. '[n' → logprob: -8.019573211669922
    7. '[p' → logprob: -9.519573211669922
    8. '[:]' → logprob: -10.269573211669922
    9. '[len' → logprob: -11.519573211669922
    10. '0' → logprob: -12.519573211669922

Token 18: 'numbers' (ID: 85055)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.9153885558771435e-06
    2. 'numbers' → logprob: -12.875005722045898
    3. ' ' → logprob: -13.000005722045898
    4. 'n' → logprob: -14.500005722045898
    5. ')' → logprob: -15.000005722045898
    6. ']' → logprob: -16.1250057220459
    7. '(numbers' → logprob: -17.7500057220459
    8. '(' → logprob: -17.7500057220459
    9. ' numbers' → logprob: -18.0000057220459
    10. '[' → logprob: -18.1250057220459

Token 19: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.005323527846485376
    2. '[:' → logprob: -5.38032341003418
    3. '[:]' → logprob: -7.88032341003418
    4. ']' → logprob: -8.50532341003418
    5. '[i' → logprob: -9.63032341003418
    6. '[
' → logprob: -11.50532341003418
    7. '[n' → logprob: -11.75532341003418
    8. 's' → logprob: -11.88032341003418
    9. '[:-' → logprob: -12.50532341003418
    10. ')' → logprob: -12.75532341003418

Token 20: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4259644558478612e-05
    2. ' ' → logprob: -11.250014305114746
    3. 'i' → logprob: -14.500014305114746
    4. '-' → logprob: -14.875014305114746
    5. ']' → logprob: -15.875014305114746
    6. '])' → logprob: -16.12501335144043
    7. '   ' → logprob: -17.75001335144043
    8. '1' → logprob: -18.12501335144043
    9. ')' → logprob: -18.25001335144043
    10. ')]' → logprob: -18.50001335144043

Token 21: ']]
' (ID: 29446)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0397748202085495
    2. '])' → logprob: -3.4147748947143555
    3. ' ]' → logprob: -5.9147748947143555
    4. ' ])' → logprob: -6.1647748947143555
    5. '])]' → logprob: -7.9147748947143555
    6. ')]' → logprob: -8.039774894714355
    7. ',' → logprob: -8.414774894714355
    8. ')' → logprob: -8.539774894714355
    9. ']+' → logprob: -8.914774894714355
    10. ']
' → logprob: -11.039774894714355

Token 22: 'for' (ID: 1938)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.9609073400497437
    2. ',' → logprob: -0.9609073400497437
    3. '.' → logprob: -2.210907459259033
    4. 'n' → logprob: -3.460907459259033
    5. 'for' → logprob: -3.710907459259033
    6. '[' → logprob: -4.460907459259033
    7. '*' → logprob: -5.085907459259033
    8. '' → logprob: -5.085907459259033
    9. ' ' → logprob: -5.210907459259033
    10. '=' → logprob: -5.210907459259033

Token 23: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.009441791102290154
    2. ' i' → logprob: -4.75944185256958
    3. '  ' → logprob: -7.13444185256958
    4. ' ‌' → logprob: -11.134441375732422
    5. ' _' → logprob: -12.259441375732422
    6. ' ' → logprob: -12.634441375732422
    7. ' ﻿' → logprob: -13.009441375732422
    8. '_' → logprob: -13.634441375732422
    9. ' ▁' → logprob: -14.009441375732422
    10. ' ​' → logprob: -14.134441375732422

Token 24: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009855487383902073
    2. ' ' → logprob: -4.759855270385742
    3. 'in' → logprob: -7.509855270385742
    4. ' i' → logprob: -7.759855270385742
    5. '  ' → logprob: -8.509855270385742
    6. '	in' → logprob: -11.009855270385742
    7. '[' → logprob: -11.384855270385742
    8. '   ' → logprob: -12.134855270385742
    9. ' n' → logprob: -12.259855270385742
    10. 'n' → logprob: -12.259855270385742

Token 25: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.003665037453174591
    2. 'range' → logprob: -5.753664970397949
    3. ' ' → logprob: -7.628664970397949
    4. '	range' → logprob: -14.50366497039795
    5. ' xrange' → logprob: -15.50366497039795
    6. '  ' → logprob: -16.878665924072266
    7. ' r' → logprob: -17.503665924072266
    8. '(range' → logprob: -17.628665924072266
    9. ' ran' → logprob: -18.378665924072266
    10. '_range' → logprob: -19.128665924072266

Token 26: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00012237003829795867
    2. ' (' → logprob: -9.2501220703125
    3. ' ' → logprob: -10.6251220703125
    4. '1' → logprob: -14.0001220703125
    5. '(
' → logprob: -14.2501220703125
    6. '(len' → logprob: -14.8751220703125
    7. '  ' → logprob: -18.0001220703125
    8. '(

' → logprob: -18.5001220703125
    9. '(i' → logprob: -18.6251220703125
    10. '()' → logprob: -18.6251220703125

Token 27: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05085795745253563
    2. '-' → logprob: -3.6758580207824707
    3. ' )' → logprob: -4.050858020782471
    4. ' -' → logprob: -5.175858020782471
    5. '-)' → logprob: -7.675858020782471
    6. ' ' → logprob: -7.925858020782471
    7. ')>' → logprob: -9.675857543945312
    8. '>' → logprob: -9.675857543945312
    9. '):' → logprob: -10.175857543945312
    10. '1' → logprob: -10.300857543945312

Token 28: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2811596095561981
    2. ' ' → logprob: -1.4061596393585205
    3. '2' → logprob: -11.781159400939941
    4. ')' → logprob: -14.906159400939941
    5. '<|end|>' → logprob: -15.156159400939941
    6. ' ' → logprob: -15.406159400939941
    7. '```' → logprob: -15.406159400939941
    8. '۱' → logprob: -16.156160354614258
    9. '  ' → logprob: -16.718660354614258
    10. '0' → logprob: -16.843660354614258

Token 29: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.627176768844947e-05
    2. ' ' → logprob: -9.250096321105957
    3. ')' → logprob: -16.12509536743164
    4. '۱' → logprob: -18.62509536743164
    5. '```' → logprob: -18.75009536743164
    6. '  ' → logprob: -18.87509536743164
    7. '१' → logprob: -19.25009536743164
    8. '2' → logprob: -19.25009536743164
    9. '１' → logprob: -19.37509536743164
    10. '১' → logprob: -19.37509536743164

Token 30: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.016437599435448647
    2. ')' → logprob: -4.766437530517578
    3. ' ):' → logprob: -5.141437530517578
    4. '):
' → logprob: -6.516437530517578
    5. ':' → logprob: -8.266437530517578
    6. ' )' → logprob: -9.516437530517578
    7. ',' → logprob: -9.516437530517578
    8. '):
' → logprob: -10.891437530517578
    9. ']:' → logprob: -11.641437530517578
    10. ' ):
' → logprob: -11.641437530517578

Token 31: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.20335370302200317
    2. ' prefix' → logprob: -1.8283536434173584
    3. 'prefix' → logprob: -4.7033538818359375
    4. '    ' → logprob: -5.0783538818359375
    5. '     
' → logprob: -5.5783538818359375
    6. ' 
' → logprob: -6.8283538818359375
    7. '```' → logprob: -7.3283538818359375
    8. ',' → logprob: -7.7033538818359375
    9. '   ' → logprob: -8.203353881835938
    10. ' ,' → logprob: -8.328353881835938

Token 32: ' prefix' (ID: 18633)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5937623381614685
    2. ' prefix' → logprob: -0.8437623381614685
    3. 'prefix' (adapté à ' prefix') → logprob: -4.218762397766113
    4. '    ' → logprob: -6.718762397766113
    5. ' 
' → logprob: -7.843762397766113
    6. ' ' → logprob: -7.968762397766113
    7. '     
' → logprob: -8.343762397766113
    8. ' ```' → logprob: -8.718762397766113
    9. ' `' → logprob: -9.093762397766113
    10. '`' → logprob: -9.593762397766113

Token 33: '.append' (ID: 3709)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.4087972342967987
    2. '.append' → logprob: -1.283797264099121
    3. ' ' → logprob: -3.033797264099121
    4. ' .' → logprob: -5.283797264099121
    5. ' +' → logprob: -6.033797264099121
    6. '+' → logprob: -6.658797264099121
    7. '[' → logprob: -7.533797264099121
    8. '.extend' → logprob: -7.908797264099121
    9. ' +=' → logprob: -8.908797264099121
    10. '    ' → logprob: -8.908797264099121

Token 34: '(prefix' (ID: 59324)
  Prédit: '(prefix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(prefix' → logprob: -0.18002095818519592
    2. '(' → logprob: -1.8050209283828735
    3. 'prefix' → logprob: -8.680021286010742
    4. ' prefix' → logprob: -9.555021286010742
    5. '(pre' → logprob: -11.555021286010742
    6. ' (' → logprob: -12.180021286010742
    7. '(max' → logprob: -12.180021286010742
    8. '((' → logprob: -12.555021286010742
    9. '('' → logprob: -12.805021286010742
    10. '(pref' → logprob: -13.555021286010742

Token 35: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.0052377874962985516
    2. '[i' → logprob: -5.255237579345703
    3. '[' → logprob: -12.505237579345703
    4. '][-' → logprob: -16.380237579345703
    5. '[
' → logprob: -17.005237579345703
    6. ' [-' → logprob: -17.505237579345703
    7. '[end' → logprob: -17.630237579345703
    8. 'i' → logprob: -17.880237579345703
    9. '-' → logprob: -18.130237579345703
    10. ')' → logprob: -18.255237579345703

Token 36: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001817297888919711
    2. ' ' → logprob: -8.750182151794434
    3. '+' → logprob: -11.500182151794434
    4. ']' → logprob: -11.625182151794434
    5. 'i' → logprob: -14.125182151794434
    6. '   ' → logprob: -14.250182151794434
    7. ' +' → logprob: -14.375182151794434
    8. ']+' → logprob: -14.375182151794434
    9. '  ' → logprob: -15.000182151794434
    10. ')' → logprob: -15.000182151794434

Token 37: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2811775207519531
    2. ' +' → logprob: -1.4061775207519531
    3. ')' → logprob: -11.406177520751953
    4. ' ' → logprob: -11.781177520751953
    5. ')+' → logprob: -12.781177520751953
    6. ']+' → logprob: -13.406177520751953
    7. ']' → logprob: -13.656177520751953
    8. ' )' → logprob: -14.406177520751953
    9. '>' → logprob: -14.531177520751953
    10. ' ' → logprob: -14.906177520751953

Token 38: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.31326571106910706
    2. ' +' → logprob: -1.3132656812667847
    3. ' ' → logprob: -13.438265800476074
    4. ')' → logprob: -13.688265800476074
    5. ')+' → logprob: -15.188265800476074
    6. ' plus' → logprob: -15.563265800476074
    7. '`' → logprob: -15.938265800476074
    8. '＋' → logprob: -16.063264846801758
    9. '    ' → logprob: -16.188264846801758
    10. '+)' → logprob: -16.313264846801758

Token 39: ' numbers' (ID: 8663)
  Prédit: ' numbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' numbers' → logprob: -0.0022376857232302427
    2. 'numbers' → logprob: -6.752237796783447
    3. ' ' → logprob: -6.877237796783447
    4. '(numbers' → logprob: -11.252237319946289
    5. ' number' → logprob: -12.002237319946289
    6. ' f' → logprob: -12.627237319946289
    7. ' ' → logprob: -12.877237319946289
    8. ' nums' → logprob: -13.502237319946289
    9. ')' → logprob: -13.502237319946289
    10. '"' → logprob: -13.502237319946289

Token 40: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.04859532043337822
    2. '[' → logprob: -3.048595428466797
    3. '[
' → logprob: -12.423595428466797
    4. ']' → logprob: -13.048595428466797
    5. ' [' → logprob: -14.423595428466797
    6. '[++' → logprob: -15.298595428466797
    7. '```' → logprob: -15.423595428466797
    8. '[j' → logprob: -15.673595428466797
    9. '[I' → logprob: -16.048595428466797
    10. '][' → logprob: -16.173595428466797

Token 41: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.004629126749932766
    2. ' +' → logprob: -5.379629135131836
    3. '1' → logprob: -11.879629135131836
    4. ' ' → logprob: -14.629629135131836
    5. '+
' → logprob: -14.629629135131836
    6. '   ' → logprob: -14.629629135131836
    7. ']' → logprob: -15.254629135131836
    8. '＋' → logprob: -16.129629135131836
    9. ' plus' → logprob: -16.379629135131836
    10. ' +
' → logprob: -16.879629135131836

Token 42: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001601539261173457
    2. ' ' → logprob: -8.750160217285156
    3. ']' → logprob: -13.875160217285156
    4. '])' → logprob: -14.750160217285156
    5. '   ' → logprob: -16.250160217285156
    6. ' ' → logprob: -16.812660217285156
    7. ')' → logprob: -17.000160217285156
    8. '```' → logprob: -17.000160217285156
    9. ' ])' → logprob: -17.187660217285156
    10. '  ' → logprob: -17.187660217285156

Token 43: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.729906196298543e-06
    2. ' ' → logprob: -11.625009536743164
    3. ']' → logprob: -14.625009536743164
    4. ')' → logprob: -16.375009536743164
    5. '])' → logprob: -17.562509536743164
    6. '```' → logprob: -17.562509536743164
    7. '   ' → logprob: -17.875009536743164
    8. '  ' → logprob: -18.375009536743164
    9. '１' → logprob: -18.687509536743164
    10. '0' → logprob: -19.000009536743164

Token 44: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002813194179907441
    2. '))' → logprob: -5.877813339233398
    3. '])' → logprob: -12.502813339233398
    4. ' )' → logprob: -13.127813339233398
    5. ')
' → logprob: -13.252813339233398
    6. ')))' → logprob: -15.252813339233398
    7. '）' → logprob: -16.1278133392334
    8. ')])' → logprob: -16.2528133392334
    9. '`)' → logprob: -16.6278133392334
    10. ']' → logprob: -16.8778133392334

Token 45: 'prefix' (ID: 26155)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.6611882448196411
    2. '#' → logprob: -1.7861882448196411
    3. 'print' → logprob: -2.2861881256103516
    4. '
' → logprob: -2.2861881256103516
    5. 's' → logprob: -2.6611881256103516
    6. 'for' → logprob: -2.9111881256103516
    7. '[' → logprob: -3.0361881256103516
    8. 'i' → logprob: -3.5361881256103516
    9. 'n' → logprob: -3.6611881256103516
    10. 'm' → logprob: -3.6611881256103516

Token 46: '.append' (ID: 3709)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.08332869410514832
    2. '.' → logprob: -3.0833287239074707
    3. '<|end|>' → logprob: -4.458328723907471
    4. '#' → logprob: -4.958328723907471
    5. '```' → logprob: -5.333328723907471
    6. ')' → logprob: -6.208328723907471
    7. '\[' → logprob: -6.333328723907471
    8. '[n' → logprob: -6.583328723907471
    9. '
' → logprob: -6.833328723907471
    10. ']' → logprob: -7.208328723907471

Token 47: '(' (ID: 7)
  Prédit: '(prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(prefix' → logprob: -0.12830200791358948
    2. '(' → logprob: -2.1283020973205566
    3. '(-' → logprob: -7.253302097320557
    4. '(len' → logprob: -7.753302097320557
    5. '(None' → logprob: -9.503301620483398
    6. '((' → logprob: -10.253301620483398
    7. 'prefix' → logprob: -10.253301620483398
    8. '()' → logprob: -10.628301620483398
    9. '(p' → logprob: -11.128301620483398
    10. '('' → logprob: -11.503301620483398

Token 48: '0' (ID: 15)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.32044753432273865
    2. '0' → logprob: -1.320447564125061
    3. ' prefix' → logprob: -5.1954474449157715
    4. ' ' → logprob: -7.1954474449157715
    5. ')' → logprob: -7.5704474449157715
    6. '(prefix' → logprob: -8.82044792175293
    7. 'None' → logprob: -10.94544792175293
    8. 'numbers' → logprob: -11.07044792175293
    9. '1' → logprob: -11.19544792175293
    10. '_prefix' → logprob: -11.44544792175293

Token 49: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.465036105713807e-06
    2. ')
' → logprob: -12.625007629394531
    3. '))' → logprob: -13.625007629394531
    4. ' )' → logprob: -13.750007629394531
    5. '`)' → logprob: -14.500007629394531
    6. ']' → logprob: -14.875007629394531
    7. ')`' → logprob: -15.250007629394531
    8. '```' → logprob: -15.875007629394531
    9. '#' → logprob: -16.25000762939453
    10. ')

' → logprob: -16.75000762939453

Token 50: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 51: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 52: ' Aj' (ID: 28294)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 53: 'oute' (ID: 3509)
  Prédit: 'ust'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ust' → logprob: -1.1178507804870605
    2. 'acency' → logprob: -1.1178507804870605
    3. '<|end|>' → logprob: -1.6178507804870605
    4. 'd' → logprob: -3.2428507804870605
    5. ')' → logprob: -3.6178507804870605
    6. 'a' → logprob: -4.3678507804870605
    7. ']' → logprob: -4.9928507804870605
    8. 'f' → logprob: -5.1178507804870605
    9. 'ex' → logprob: -5.1178507804870605
    10. '#' → logprob: -5.2428507804870605

Token 54: ' zéro' (ID: 182040)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5118416547775269
    2. '<|end|>' → logprob: -1.2618416547775269
    3. ' ' → logprob: -2.6368417739868164
    4. ' 
' → logprob: -4.386841773986816
    5. '\n' → logprob: -5.011841773986816
    6. '

' → logprob: -5.511841773986816
    7. ' 

' → logprob: -5.511841773986816
    8. 'a' → logprob: -5.636841773986816
    9. ' a' → logprob: -5.886841773986816
    10. '  
' → logprob: -6.136841773986816

Token 55: ' (' (ID: 350)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.47881588339805603
    2. '<|end|>' → logprob: -2.103815793991089
    3. 'prefix' → logprob: -2.728815793991089
    4. '#' → logprob: -3.228815793991089
    5. ' ' → logprob: -3.353815793991089
    6. ')' → logprob: -3.353815793991089
    7. '\n' → logprob: -3.853815793991089
    8. '[' → logprob: -3.978815793991089
    9. '0' → logprob: -5.228816032409668
    10. 'print' → logprob: -5.478816032409668

Token 56: 'pas' (ID: 21122)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005615889094769955
    2. ' )' → logprob: -5.880615711212158
    3. '<|end|>' → logprob: -7.005615711212158
    4. '
' → logprob: -7.880615711212158
    5. ' ' → logprob: -7.880615711212158
    6. ' at' → logprob: -8.130616188049316
    7. ' à' → logprob: -8.505616188049316
    8. ')
' → logprob: -8.630616188049316
    9. ')\' → logprob: -9.630616188049316
    10. '\n' → logprob: -9.755616188049316

Token 57: ' sûr' (ID: 46415)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6827920079231262
    2. ')' → logprob: -1.1827919483184814
    3. '<|end|>' → logprob: -2.4327919483184814
    4. ' à' → logprob: -2.6827919483184814
    5. ' )' → logprob: -4.6827921867370605
    6. ' at' → logprob: -4.8077921867370605
    7. ' au' → logprob: -5.5577921867370605
    8. 'à' → logprob: -5.6827921867370605
    9. 'e' → logprob: -6.5577921867370605
    10. 'a' → logprob: -7.0577921867370605

Token 58: ' que' (ID: 661)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014840601943433285
    2. ' à' → logprob: -5.264840602874756
    3. ' )' → logprob: -5.764840602874756
    4. ' ' → logprob: -5.889840602874756
    5. ' pour' → logprob: -6.514840602874756
    6. 'pour' → logprob: -7.264840602874756
    7. 'à' → logprob: -7.639840602874756
    8. ' de' → logprob: -7.764840602874756
    9. ' ' → logprob: -9.639840126037598
    10. '  ' → logprob: -9.764840126037598

Token 59: ' ce' (ID: 2357)
  Prédit: 'ce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ce' → logprob: -0.7966578602790833
    2. ' ce' → logprob: -1.6716578006744385
    3. 'cela' → logprob: -1.6716578006744385
    4. 'né' → logprob: -2.4216578006744385
    5. 'c' → logprob: -3.9216578006744385
    6. ' nécessaire' → logprob: -4.046658039093018
    7. 'necess' → logprob: -4.546658039093018
    8. 'ça' → logprob: -5.296658039093018
    9. 'so' → logprob: -5.296658039093018
    10. 'utile' → logprob: -5.796658039093018

Token 60: ' soit' (ID: 17293)
  Prédit: ' soit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' soit' → logprob: -0.053565770387649536
    2. 'so' → logprob: -3.178565740585327
    3. 's' → logprob: -5.803565979003906
    4. ' sois' → logprob: -6.678565979003906
    5. 'l' → logprob: -6.803565979003906
    6. 'serve' → logprob: -7.178565979003906
    7. ' soi' → logprob: -7.803565979003906
    8. 'f' → logprob: -7.803565979003906
    9. 'do' → logprob: -7.928565979003906
    10. '```' → logprob: -8.178565979003906

Token 61: ' utile' (ID: 68237)
  Prédit: 'né'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'né' → logprob: -0.1208043023943901
    2. 'utile' → logprob: -2.3708043098449707
    3. ' utile' → logprob: -4.370804309844971
    4. 'necess' → logprob: -6.120804309844971
    5. ' nécessaire' → logprob: -6.620804309844971
    6. ' né' → logprob: -7.245804309844971
    7. 'util' → logprob: -7.370804309844971
    8. ' necess' → logprob: -7.745804309844971
    9. 'inut' → logprob: -7.995804309844971
    10. 'une' → logprob: -7.995804309844971

Token 62: ' mais' (ID: 2899)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003278368094470352
    2. ')
' → logprob: -8.250328063964844
    3. ' )' → logprob: -10.250328063964844
    4. '\n' → logprob: -11.875328063964844
    5. '#' → logprob: -12.375328063964844
    6. '
' → logprob: -12.750328063964844
    7. '```' → logprob: -12.750328063964844
    8. ')#' → logprob: -13.000328063964844
    9. ' ' → logprob: -13.125328063964844
    10. ')

' → logprob: -13.375328063964844

Token 63: ' ça' (ID: 13590)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18247731029987335
    2. ' )' → logprob: -3.4324772357940674
    3. ' nécessaire' → logprob: -3.8074772357940674
    4. ' utile' → logprob: -4.1824774742126465
    5. ' bon' → logprob: -4.4324774742126465
    6. ' parfois' → logprob: -4.8074774742126465
    7. ' c' → logprob: -5.4324774742126465
    8. ' possible' → logprob: -5.4324774742126465
    9. ' ' → logprob: -5.4324774742126465
    10. 'possible' → logprob: -5.6824774742126465

Token 64: ' marche' (ID: 58191)
  Prédit: 'pe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pe' → logprob: -1.5391498804092407
    2. 'ne' → logprob: -1.5391498804092407
    3. ' peut' → logprob: -2.039149761199951
    4. 'a' → logprob: -2.164149761199951
    5. ' semble' → logprob: -3.039149761199951
    6. ' ne' → logprob: -3.039149761199951
    7. ')' → logprob: -3.414149761199951
    8. ' pourrait' → logprob: -4.039149761199951
    9. 'f' → logprob: -4.289149761199951
    10. 'n' → logprob: -4.289149761199951

Token 65: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00019460011390037835
    2. ')
' → logprob: -8.750194549560547
    3. '#' → logprob: -11.000194549560547
    4. ' )' → logprob: -11.875194549560547
    5. '
' → logprob: -12.750194549560547
    6. ')#' → logprob: -12.875194549560547
    7. '')' → logprob: -13.625194549560547
    8. ')

' → logprob: -13.875194549560547
    9. '`)' → logprob: -13.875194549560547
    10. '```' → logprob: -14.000194549560547

Token 66: 'prefix' (ID: 26155)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.415324866771698
    2. 'for' → logprob: -1.5403249263763428
    3. '#' → logprob: -3.0403249263763428
    4. '' → logprob: -3.9153249263763428
    5. 'i' → logprob: -4.540324687957764
    6. 's' → logprob: -5.165324687957764
    7. 'max' → logprob: -5.290324687957764
    8. 'n' → logprob: -5.415324687957764
    9. 'print' → logprob: -5.415324687957764
    10. 'sum' → logprob: -5.790324687957764

Token 67: '.sort' (ID: 19551)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2191469818353653
    2. '.' → logprob: -2.219146966934204
    3. '
' → logprob: -2.844146966934204
    4. '[n' → logprob: -5.344147205352783
    5. '[
' → logprob: -5.594147205352783
    6. '[-' → logprob: -5.594147205352783
    7. '```' → logprob: -5.594147205352783
    8. '[len' → logprob: -6.344147205352783
    9. '
' → logprob: -6.344147205352783
    10. '<|end|>' → logprob: -6.469147205352783

Token 68: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.14275339245796204
    2. '(' → logprob: -2.0177533626556396
    3. '(reverse' → logprob: -11.142753601074219
    4. '(
' → logprob: -11.392753601074219
    5. '()
' → logprob: -11.767753601074219
    6. '()`' → logprob: -11.892753601074219
    7. '(()' → logprob: -12.267753601074219
    8. '();' → logprob: -12.517753601074219
    9. '("("' → logprob: -12.767753601074219
    10. '()>' → logprob: -12.767753601074219

Token 69: 'cnt' (ID: 33160)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.06857560575008392
    2. 'for' → logprob: -2.818575620651245
    3. 'diff' → logprob: -6.693575382232666
    4. 'max' → logprob: -6.818575382232666
    5. ')' → logprob: -7.443575382232666
    6. 'sum' → logprob: -7.568575382232666
    7. 'min' → logprob: -7.943575382232666
    8. 'result' → logprob: -8.193575859069824
    9. ' for' → logprob: -8.193575859069824
    10. 's' → logprob: -8.318575859069824

Token 70: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.781450092792511
    2. '_' → logprob: -0.781450092792511
    3. ' =' → logprob: -2.531450033187866
    4. '(' → logprob: -5.781450271606445
    5. ' ' → logprob: -7.531450271606445
    6. '[' → logprob: -7.781450271606445
    7. '_=' → logprob: -7.906450271606445
    8. ' +=' → logprob: -8.656450271606445
    9. ',' → logprob: -9.031450271606445
    10. 's' → logprob: -9.906450271606445

Token 71: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.033255450427532196
    2. '1' → logprob: -3.5332553386688232
    3. ' ' → logprob: -5.908255577087402
    4. 'prefix' → logprob: -7.283255577087402
    5. 'len' → logprob: -10.658255577087402
    6. ' prefix' → logprob: -11.033255577087402
    7. 'n' → logprob: -11.283255577087402
    8. '2' → logprob: -11.658255577087402
    9. 'max' → logprob: -12.033255577087402
    10. '(prefix' → logprob: -12.408255577087402

Token 72: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11334217339754105
    2. '1' → logprob: -2.23834228515625
    3. 'len' → logprob: -8.73834228515625
    4. 'n' → logprob: -9.11334228515625
    5. 'prefix' → logprob: -9.36334228515625
    6. '{' → logprob: -9.73834228515625
    7. '{}' → logprob: -10.73834228515625
    8. '2' → logprob: -11.48834228515625
    9. '(' → logprob: -11.61334228515625
    10. 'max' → logprob: -11.73834228515625

Token 73: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.126935675740242
    2. ' for' → logprob: -2.3769357204437256
    3. '
' → logprob: -3.8769357204437256
    4. '<|end|>' → logprob: -5.8769354820251465
    5. '\n' → logprob: -6.6269354820251465
    6. 'n' → logprob: -7.5019354820251465
    7. 'i' → logprob: -8.251935958862305
    8. ' 
' → logprob: -8.251935958862305
    9. '' → logprob: -9.626935958862305
    10. ' ' → logprob: -9.751935958862305

Token 74: 'result' (ID: 2521)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.006665043067187071
    2. 'i' → logprob: -5.131665229797363
    3. 'j' → logprob: -7.631665229797363
    4. ' for' → logprob: -9.256665229797363
    5. 'l' → logprob: -9.881665229797363
    6. 'start' → logprob: -10.131665229797363
    7. 'left' → logprob: -11.131665229797363
    8. 'n' → logprob: -11.506665229797363
    9. 'prev' → logprob: -11.881665229797363
    10. '```' → logprob: -12.131665229797363

Token 75: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.5715223550796509
    2. ' =' → logprob: -1.0715223550796509
    3. '=' → logprob: -2.5715222358703613
    4. '+=' → logprob: -4.321522235870361
    5. '_' → logprob: -6.446522235870361
    6. '+' → logprob: -6.946522235870361
    7. ' ' → logprob: -8.94652271270752
    8. '[' → logprob: -9.07152271270752
    9. ')' → logprob: -9.57152271270752
    10. ' ,' → logprob: -10.32152271270752

Token 76: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4468344748020172
    2. '0' → logprob: -1.1968344449996948
    3. ' prefix' → logprob: -3.4468345642089844
    4. 'prefix' → logprob: -3.6968345642089844
    5. ' n' → logprob: -7.071834564208984
    6. '1' → logprob: -8.196834564208984
    7. 'n' → logprob: -9.321834564208984
    8. ' max' → logprob: -9.321834564208984
    9. '(prefix' → logprob: -10.196834564208984
    10. 'max' → logprob: -10.446834564208984

Token 77: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.013543698936700821
    2. 'prefix' → logprob: -4.388543605804443
    3. ' ' → logprob: -7.888543605804443
    4. 'max' → logprob: -8.763544082641602
    5. '1' → logprob: -9.263544082641602
    6. 'int' → logprob: -9.263544082641602
    7. 'len' → logprob: -9.763544082641602
    8. 'n' → logprob: -9.763544082641602
    9. '-' → logprob: -9.888544082641602
    10. ' prefix' → logprob: -10.263544082641602

Token 78: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.002405623672530055
    2. ' for' → logprob: -6.502405643463135
    3. '
' → logprob: -7.252405643463135
    4. 'i' → logprob: -9.002405166625977
    5. 'n' → logprob: -10.002405166625977
    6. '\n' → logprob: -11.752405166625977
    7. 'f' → logprob: -12.752405166625977
    8. '<|end|>' → logprob: -12.752405166625977
    9. '```' → logprob: -13.127405166625977
    10. '' → logprob: -13.127405166625977

Token 79: 'def' (ID: 1314)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00023739055905025452
    2. '
' → logprob: -9.375237464904785
    3. ' for' → logprob: -9.500237464904785
    4. 'i' → logprob: -9.625237464904785
    5. 'n' → logprob: -12.125237464904785
    6. '```' → logprob: -12.375237464904785
    7. 'f' → logprob: -14.875237464904785
    8. '<|end|>' → logprob: -15.500237464904785
    9. 'j' → logprob: -15.875237464904785
    10. ',' → logprob: -16.00023651123047

Token 80: ' comb' (ID: 4134)
  Prédit: ' sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sub' → logprob: -0.059127189218997955
    2. ' count' → logprob: -3.30912709236145
    3. 'sub' → logprob: -5.434127330780029
    4. ' prefix' → logprob: -5.809127330780029
    5. ' sum' → logprob: -5.934127330780029
    6. ' ' → logprob: -5.934127330780029
    7. ' subse' → logprob: -6.434127330780029
    8. ' check' → logprob: -6.934127330780029
    9. 'count' → logprob: -6.934127330780029
    10. ' cumulative' → logprob: -7.309127330780029

Token 81: '(a' (ID: 6271)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.05330606922507286
    2. '(' → logprob: -3.3033061027526855
    3. '(cnt' → logprob: -5.1783061027526855
    4. 'ination' → logprob: -5.5533061027526855
    5. '(count' → logprob: -6.4283061027526855
    6. '(len' → logprob: -6.9283061027526855
    7. '(i' → logprob: -7.4283061027526855
    8. '```' → logprob: -7.5533061027526855
    9. '(num' → logprob: -7.6783061027526855
    10. 'ine' → logprob: -8.053305625915527

Token 82: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.048209041357040405
    2. 'nt' → logprob: -3.7982089519500732
    3. '):' → logprob: -3.9232089519500732
    4. ' ,' → logprob: -6.173209190368652
    5. ',n' → logprob: -7.548209190368652
    6. ',b' → logprob: -7.798209190368652
    7. '):
' → logprob: -8.048209190368652
    8. ',k' → logprob: -8.048209190368652
    9. ' ):' → logprob: -8.548209190368652
    10. ' ' → logprob: -8.548209190368652

Token 83: ' b' (ID: 287)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.23884828388690948
    2. 'b' → logprob: -1.613848328590393
    3. ' b' → logprob: -4.7388482093811035
    4. ' ' → logprob: -5.6138482093811035
    5. 'k' → logprob: -7.3638482093811035
    6. 'r' → logprob: -8.863848686218262
    7. ' k' → logprob: -10.238848686218262
    8. '3' → logprob: -10.363848686218262
    9. 'n' → logprob: -10.488848686218262
    10. ')' → logprob: -10.613848686218262

Token 84: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.08967042714357376
    2. ')' → logprob: -2.464670419692993
    3. '):
' → logprob: -7.589670658111572
    4. ' ):' → logprob: -9.339670181274414
    5. ',' → logprob: -9.839670181274414
    6. '):
' → logprob: -10.839670181274414
    7. ' )' → logprob: -11.214670181274414
    8. ':' → logprob: -11.839670181274414
    9. ')：' → logprob: -12.089670181274414
    10. '   ' → logprob: -12.339670181274414

Token 85: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8564025163650513
    2. '(' → logprob: -1.3564025163650513
    3. '(a' → logprob: -1.6064025163650513
    4. ' :' → logprob: -3.7314023971557617
    5. '   ' → logprob: -4.356402397155762
    6. 'a' → logprob: -4.356402397155762
    7. '*' → logprob: -4.731402397155762
    8. ' ' → logprob: -4.731402397155762
    9. ' (' → logprob: -4.731402397155762
    10. ')' → logprob: -4.731402397155762

Token 86: ' res' (ID: 694)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7684934735298157
    2. 'a' → logprob: -1.643493413925171
    3. 'return' → logprob: -1.643493413925171
    4. ' return' → logprob: -2.393493413925171
    5. 'if' → logprob: -3.893493413925171
    6. ' if' → logprob: -4.01849365234375
    7. 'b' → logprob: -4.51849365234375
    8. ' ' → logprob: -5.89349365234375
    9. ' a' → logprob: -6.14349365234375
    10. '	return' → logprob: -6.64349365234375

Token 87: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0790824443101883
    2. ' =' → logprob: -2.579082489013672
    3. '=int' → logprob: -10.079082489013672
    4. 'ult' → logprob: -10.329082489013672
    5. ' ' → logprob: -10.329082489013672
    6. '+=' → logprob: -11.329082489013672
    7. '=[]' → logprob: -11.704082489013672
    8. '=a' → logprob: -12.079082489013672
    9. '   ' → logprob: -12.204082489013672
    10. 'urn' → logprob: -12.329082489013672

Token 88: ' ' (ID: 220)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2252323031425476
    2. '1' → logprob: -1.7252323627471924
    3. ' a' → logprob: -3.9752323627471924
    4. ' (' → logprob: -6.350232124328613
    5. '(a' → logprob: -6.600232124328613
    6. ' ' → logprob: -6.600232124328613
    7. '(' → logprob: -8.725232124328613
    8. '0' → logprob: -9.225232124328613
    9. ' factorial' → logprob: -11.975232124328613
    10. '(int' → logprob: -12.600232124328613

Token 89: '1' (ID: 16)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.10825060307979584
    2. '1' → logprob: -2.358250617980957
    3. '(a' → logprob: -5.358250617980957
    4. '0' → logprob: -6.483250617980957
    5. '(' → logprob: -6.983250617980957
    6. 'b' → logprob: -7.983250617980957
    7. 'int' → logprob: -9.483250617980957
    8. ' (' → logprob: -9.608250617980957
    9. '(int' → logprob: -9.608250617980957
    10. '(max' → logprob: -9.733250617980957

Token 90: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 91: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 92: ' for' (ID: 395)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4188079535961151
    2. '<|end|>' → logprob: -1.2938079833984375
    3. '1' → logprob: -4.1688079833984375
    4. 'for' (adapté à ' for') → logprob: -4.2938079833984375
    5. '<|end|>' → logprob: -4.9188079833984375
    6. '*' → logprob: -5.1688079833984375
    7. 'a' → logprob: -5.2938079833984375
    8. 'if' → logprob: -5.9188079833984375
    9. '2' → logprob: -6.4188079833984375
    10. ' ' → logprob: -6.4188079833984375

Token 93: ' k' (ID: 372)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0076592774130403996
    2. 'i' → logprob: -5.382659435272217
    3. '_' → logprob: -6.632659435272217
    4. ' _' → logprob: -6.757659435272217
    5. ' ' → logprob: -8.007658958435059
    6. ' range' → logprob: -8.632658958435059
    7. '_i' → logprob: -10.632658958435059
    8. '	i' → logprob: -11.757658958435059
    9. ' j' → logprob: -12.007658958435059
    10. 'range' → logprob: -13.382658958435059

Token 94: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007757346145808697
    2. 'in' → logprob: -4.882757186889648
    3. ' ' → logprob: -9.382757186889648
    4. '1' → logprob: -10.632757186889648
    5. '   ' → logprob: -11.632757186889648
    6. '  ' → logprob: -11.757757186889648
    7. 'range' → logprob: -12.132757186889648
    8. ',' → logprob: -12.757757186889648
    9. '```' → logprob: -13.257757186889648
    10. 'a' → logprob: -13.382757186889648

Token 95: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.12697556614875793
    2. 'range' → logprob: -2.1269755363464355
    3. '	range' → logprob: -10.626976013183594
    4. ' ' → logprob: -11.876976013183594
    5. '(range' → logprob: -12.376976013183594
    6. '  ' → logprob: -12.626976013183594
    7. '   ' → logprob: -13.001976013183594
    8. '1' → logprob: -13.251976013183594
    9. 'rang' → logprob: -14.126976013183594
    10. 'ra' → logprob: -14.376976013183594

Token 96: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.015915529802441597
    2. '(b' → logprob: -4.390915393829346
    3. '1' → logprob: -5.765915393829346
    4. 'b' → logprob: -8.515915870666504
    5. '(a' → logprob: -10.765915870666504
    6. ' b' → logprob: -10.765915870666504
    7. '(min' → logprob: -11.765915870666504
    8. ' ' → logprob: -12.140915870666504
    9. '```' → logprob: -12.765915870666504
    10. ' (' → logprob: -12.765915870666504

Token 97: '-b' (ID: 2118)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2194005846977234
    2. ',b' → logprob: -2.344400644302368
    3. '-b' → logprob: -2.969400644302368
    4. ' -' → logprob: -4.094400405883789
    5. '+' → logprob: -4.469400405883789
    6. ' ,' → logprob: -4.719400405883789
    7. '   ' → logprob: -5.344400405883789
    8. '+b' → logprob: -5.719400405883789
    9. 'b' → logprob: -6.594400405883789
    10. '-' → logprob: -7.219400405883789

Token 98: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.10053703188896179
    2. ' +' → logprob: -2.350537061691284
    3. ',' → logprob: -8.725537300109863
    4. ' ,' → logprob: -9.350537300109863
    5. ' ' → logprob: -11.100537300109863
    6. '1' → logprob: -11.225537300109863
    7. ' plus' → logprob: -11.475537300109863
    8. '   ' → logprob: -11.725537300109863
    9. '+k' → logprob: -11.725537300109863
    10. '):
' → logprob: -12.475537300109863

Token 99: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '
' → logprob: -18.250001907348633
    4. '```' → logprob: -18.875001907348633
    5. '+' → logprob: -19.375001907348633
    6. '2' → logprob: -19.500001907348633
    7. '   ' → logprob: -19.750001907348633
    8. '۱' → logprob: -20.250001907348633
    9. '１' → logprob: -20.250001907348633
    10. '  ' → logprob: -21.312501907348633

Token 100: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09594003856182098
    2. ' ,' → logprob: -2.470940113067627
    3. ',a' → logprob: -5.220940113067627
    4. ',b' → logprob: -7.345940113067627
    5. ',k' → logprob: -8.095939636230469
    6. ',n' → logprob: -8.345939636230469
    7. '):' → logprob: -8.470939636230469
    8. ' ' → logprob: -9.845939636230469
    9. '):
' → logprob: -10.720939636230469
    10. ',end' → logprob: -10.845939636230469

Token 101: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.008616935461759567
    2. ' a' → logprob: -4.758616924285889
    3. '	a' → logprob: -14.133617401123047
    4. '   ' → logprob: -14.508617401123047
    5. ' ' → logprob: -14.633617401123047
    6. '>a' → logprob: -15.008617401123047
    7. ''a' → logprob: -15.883617401123047
    8. '1' → logprob: -16.133617401123047
    9. ')a' → logprob: -16.258617401123047
    10. '    ' → logprob: -16.883617401123047

Token 102: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0032190645579248667
    2. ' +' → logprob: -5.753219127655029
    3. '+a' → logprob: -10.878218650817871
    4. '1' → logprob: -11.253218650817871
    5. '+k' → logprob: -12.503218650817871
    6. ' ' → logprob: -12.878218650817871
    7. '+b' → logprob: -13.253218650817871
    8. 'a' → logprob: -14.503218650817871
    9. ' a' → logprob: -15.253218650817871
    10. '+
' → logprob: -16.253219604492188

Token 103: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.700132997939363e-05
    2. ' ' → logprob: -11.000017166137695
    3. '```' → logprob: -16.375017166137695
    4. ' k' → logprob: -16.875017166137695
    5. '   ' → logprob: -17.125017166137695
    6. '
' → logprob: -17.125017166137695
    7. ')' → logprob: -17.125017166137695
    8. '  ' → logprob: -18.312517166137695
    9. '2' → logprob: -18.625017166137695
    10. 'k' → logprob: -18.687517166137695

Token 104: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01450111623853445
    2. '):
' → logprob: -4.389501094818115
    3. ')' → logprob: -6.764501094818115
    4. ' ):' → logprob: -7.139501094818115
    5. ' ):
' → logprob: -11.514501571655273
    6. '):
' → logprob: -11.639501571655273
    7. ' k' → logprob: -12.014501571655273
    8. ':' → logprob: -12.139501571655273
    9. ' ' → logprob: -12.514501571655273
    10. ',' → logprob: -13.014501571655273

Token 105: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0629857778549194
    2. '   ' → logprob: -1.3129857778549194
    3. '<|end|>' → logprob: -1.3129857778549194
    4. '  ' → logprob: -3.312985897064209
    5. ' k' → logprob: -3.437985897064209
    6. ')' → logprob: -4.062985897064209
    7. '*' → logprob: -4.187985897064209
    8. '    ' → logprob: -5.062985897064209
    9. ' *' → logprob: -5.437985897064209
    10. ' res' → logprob: -6.937985897064209

Token 106: ' res' (ID: 694)
  Prédit: ' res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.11734163761138916
    2. ' ' → logprob: -2.6173415184020996
    3. 'res' (adapté à ' res') → logprob: -3.9923415184020996
    4. ' k' → logprob: -4.2423415184021
    5. '  ' → logprob: -5.8673415184021
    6. '   ' → logprob: -7.1173415184021
    7. '<|end|>' → logprob: -7.8673415184021
    8. '    ' → logprob: -8.492341995239258
    9. 'k' → logprob: -8.742341995239258
    10. ' 
' → logprob: -9.242341995239258

Token 107: ' =' (ID: 314)
  Prédit: ' *='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *=' → logprob: -0.1876976639032364
    2. '*=' → logprob: -1.9376976490020752
    3. '*' → logprob: -4.062697887420654
    4. '=' → logprob: -5.437697887420654
    5. '   ' → logprob: -6.187697887420654
    6. '    ' → logprob: -6.687697887420654
    7. ' ' → logprob: -7.437697887420654
    8. ' *' → logprob: -7.562697887420654
    9. '  ' → logprob: -7.937697887420654
    10. ' =' → logprob: -7.937697887420654

Token 108: ' res' (ID: 694)
  Prédit: ' res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.04923930764198303
    2. 'res' → logprob: -3.04923939704895
    3. '(res' → logprob: -7.424239158630371
    4. ' (' → logprob: -10.299239158630371
    5. ' int' → logprob: -11.424239158630371
    6. 'int' → logprob: -11.924239158630371
    7. '	res' → logprob: -13.674239158630371
    8. '   ' → logprob: -14.424239158630371
    9. '(' → logprob: -14.549239158630371
    10. ' ' → logprob: -15.049239158630371

Token 109: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5759953856468201
    2. ' *' → logprob: -0.8259953856468201
    3. ' ' → logprob: -10.325995445251465
    4. ' ' → logprob: -11.075995445251465
    5. ' res' → logprob: -13.325995445251465
    6. '   ' → logprob: -13.700995445251465
    7. ' *=' → logprob: -14.200995445251465
    8. '	' → logprob: -14.450995445251465
    9. '    ' → logprob: -14.450995445251465
    10. '**' → logprob: -14.450995445251465

Token 110: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0024756586644798517
    2. ' k' → logprob: -6.002475738525391
    3. '(k' → logprob: -18.12747573852539
    4. '	k' → logprob: -18.37747573852539
    5. ' ' → logprob: -18.87747573852539
    6. '   ' → logprob: -19.37747573852539
    7. '_k' → logprob: -19.87747573852539
    8. '```' → logprob: -20.00247573852539
    9. '
' → logprob: -20.12747573852539
    10. '*k' → logprob: -20.62747573852539

Token 111: '
' (ID: 198)
  Prédit: ' //'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.5311745405197144
    2. '//' → logprob: -0.9061745405197144
    3. '   ' → logprob: -5.531174659729004
    4. ' ' → logprob: -6.906174659729004
    5. '/' → logprob: -7.031174659729004
    6. ' /' → logprob: -7.156174659729004
    7. ')' → logprob: -7.156174659729004
    8. ''' → logprob: -9.031174659729004
    9. '`' → logprob: -9.531174659729004
    10. ' //
' → logprob: -9.531174659729004

Token 112: '   ' (ID: 271)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.17010940611362457
    2. ' //' → logprob: -1.9201093912124634
    3. '   ' → logprob: -5.170109272003174
    4. '/' → logprob: -6.545109272003174
    5. ''' → logprob: -7.170109272003174
    6. ' ' → logprob: -7.545109272003174
    7. ')' → logprob: -7.545109272003174
    8. ' /' → logprob: -7.920109272003174
    9. '//
' → logprob: -9.045109748840332
    10. '  ' → logprob: -9.920109748840332

Token 113: ' for' (ID: 395)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '//' → logprob: -0.3403835594654083
    2. ' //' → logprob: -1.340383529663086
    3. ' /' → logprob: -4.840383529663086
    4. '   ' → logprob: -5.215383529663086
    5. '/' → logprob: -5.465383529663086
    6. ''' → logprob: -6.090383529663086
    7. ')' → logprob: -6.340383529663086
    8. ' ' → logprob: -6.965383529663086
    9. '(' → logprob: -7.090383529663086
    10. '*' → logprob: -7.340383529663086

Token 114: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.38691654801368713
    2. ' k' → logprob: -1.1369165182113647
    3. ' i' → logprob: -10.886916160583496
    4. 'i' → logprob: -11.136916160583496
    5. 'j' → logprob: -12.386916160583496
    6. ' ' → logprob: -12.511916160583496
    7. ' j' → logprob: -12.761916160583496
    8. '	k' → logprob: -14.761916160583496
    9. 'l' → logprob: -15.136916160583496
    10. ' l' → logprob: -15.261916160583496

Token 115: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.4741988778114319
    2. ' in' → logprob: -0.9741988778114319
    3. ' ' → logprob: -9.849199295043945
    4. '   ' → logprob: -10.349199295043945
    5. '1' → logprob: -10.974199295043945
    6. ',' → logprob: -12.474199295043945
    7. '  ' → logprob: -12.599199295043945
    8. '    ' → logprob: -12.599199295043945
    9. 'range' → logprob: -13.224199295043945
    10. '2' → logprob: -14.224199295043945

Token 116: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.011343943886458874
    2. ' range' → logprob: -4.511343955993652
    3. '(range' → logprob: -8.136343955993652
    4. 'b' → logprob: -13.386343955993652
    5. '(' → logprob: -13.511343955993652
    6. '(b' → logprob: -15.761343955993652
    7. '	range' → logprob: -16.011343002319336
    8. '   ' → logprob: -16.261343002319336
    9. ' ' → logprob: -16.761343002319336
    10. ' b' → logprob: -17.011343002319336

Token 117: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.134509021649137e-05
    2. '(b' → logprob: -9.87506103515625
    3. '1' → logprob: -11.62506103515625
    4. 'b' → logprob: -14.12506103515625
    5. ' (' → logprob: -15.87506103515625
    6. '(
' → logprob: -18.62506103515625
    7. '(a' → logprob: -18.87506103515625
    8. ' b' → logprob: -18.87506103515625
    9. '   ' → logprob: -19.00006103515625
    10. ',b' → logprob: -20.00006103515625

Token 118: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00017886889690998942
    2. '2' → logprob: -9.000179290771484
    3. 'b' → logprob: -10.250179290771484
    4. '(' → logprob: -11.250179290771484
    5. ' ' → logprob: -12.000179290771484
    6. '   ' → logprob: -14.125179290771484
    7. ' b' → logprob: -16.000179290771484
    8. '    ' → logprob: -17.750179290771484
    9. ')' → logprob: -17.875179290771484
    10. ')b' → logprob: -18.250179290771484

Token 119: ',' (ID: 11)
  Prédit: ',b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.47701698541641235
    2. ',' → logprob: -0.9770169854164124
    3. ' ,' → logprob: -6.602016925811768
    4. '(b' → logprob: -6.852016925811768
    5. 'b' → logprob: -7.727016925811768
    6. '(' → logprob: -10.102017402648926
    7. ' b' → logprob: -10.477017402648926
    8. '   ' → logprob: -12.102017402648926
    9. '	b' → logprob: -13.102017402648926
    10. ' (' → logprob: -13.352017402648926

Token 120: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.07889033854007721
    2. ' b' → logprob: -2.578890323638916
    3. '	b' → logprob: -14.953890800476074
    4. '   ' → logprob: -15.703890800476074
    5. ')b' → logprob: -15.703890800476074
    6. ' ' → logprob: -16.953889846801758
    7. ',b' → logprob: -18.078889846801758
    8. '(b' → logprob: -18.203889846801758
    9. '>b' → logprob: -18.328889846801758
    10. '+b' → logprob: -19.078889846801758

Token 121: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.012672807089984417
    2. ' +' → logprob: -4.3876729011535645
    3. '+k' → logprob: -8.762672424316406
    4. '   ' → logprob: -12.887672424316406
    5. ' ' → logprob: -13.637672424316406
    6. '+b' → logprob: -13.887672424316406
    7. '):
' → logprob: -14.387672424316406
    8. ' k' → logprob: -14.387672424316406
    9. '  ' → logprob: -15.137672424316406
    10. 'k' → logprob: -15.637672424316406

Token 122: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010466240346431732
    2. ' ' → logprob: -6.876046657562256
    3. ' b' → logprob: -12.376046180725098
    4. ' k' → logprob: -12.626046180725098
    5. 'b' → logprob: -13.001046180725098
    6. '+' → logprob: -13.251046180725098
    7. '```' → logprob: -13.876046180725098
    8. '   ' → logprob: -14.751046180725098
    9. 'k' → logprob: -15.126046180725098
    10. ')' → logprob: -15.251046180725098

Token 123: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5139340758323669
    2. '):' → logprob: -1.0139341354370117
    3. ':' → logprob: -3.8889341354370117
    4. '   ' → logprob: -4.513934135437012
    5. ':
' → logprob: -5.763934135437012
    6. ')' → logprob: -6.263934135437012
    7. ',' → logprob: -7.388934135437012
    8. '*' → logprob: -8.138934135437012
    9. '():
' → logprob: -8.263934135437012
    10. ' ):
' → logprob: -8.263934135437012

Token 124: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025551876053214073
    2. '       ' → logprob: -5.150551795959473
    3. '*' → logprob: -5.275551795959473
    4. '    ' → logprob: -5.400551795959473
    5. ' res' → logprob: -5.400551795959473
    6. ' ' → logprob: -6.400551795959473
    7. '<|end|>' → logprob: -6.900551795959473
    8. ' 
' → logprob: -7.275551795959473
    9. '  ' → logprob: -7.525551795959473
    10. '    
' → logprob: -8.275551795959473

Token 125: ' res' (ID: 694)
  Prédit: ' res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.006815304048359394
    2. 'res' (adapté à ' res') → logprob: -5.256815433502197
    3. ' cnt' → logprob: -6.631815433502197
    4. ' 
' → logprob: -9.381814956665039
    5. '    ' → logprob: -9.881814956665039
    6. 'cnt' → logprob: -10.131814956665039
    7. '```' → logprob: -10.631814956665039
    8. '	res' → logprob: -11.631814956665039
    9. ' ' → logprob: -11.881814956665039
    10. ' ' → logprob: -12.006814956665039

Token 126: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.653529167175293
    2. '=' → logprob: -0.778529167175293
    3. ' *=' → logprob: -4.278529167175293
    4. '*=' → logprob: -5.028529167175293
    5. ' //' → logprob: -8.528529167175293
    6. '//=' → logprob: -10.653529167175293
    7. ' /=' → logprob: -10.778529167175293
    8. ' ' → logprob: -11.528529167175293
    9. ' ' → logprob: -11.653529167175293
    10. '    ' → logprob: -11.653529167175293

Token 127: ' res' (ID: 694)
  Prédit: ' res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.009775806218385696
    2. 'res' → logprob: -4.634775638580322
    3. ' ' → logprob: -11.75977611541748
    4. ' ' → logprob: -12.50977611541748
    5. '(res' → logprob: -13.25977611541748
    6. '    ' → logprob: -13.38477611541748
    7. ' 
' → logprob: -13.50977611541748
    8. '	res' → logprob: -13.63477611541748
    9. '=res' → logprob: -14.50977611541748
    10. ' int' → logprob: -15.25977611541748

Token 128: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.016058066859841347
    2. '//' → logprob: -4.141057968139648
    3. ' ' → logprob: -11.266057968139648
    4. ' ' → logprob: -13.016057968139648
    5. '*' → logprob: -13.391057968139648
    6. '`' → logprob: -13.516057968139648
    7. '```' → logprob: -13.516057968139648
    8. '=' → logprob: -14.016057968139648
    9. ' *' → logprob: -14.266057968139648
    10. '#' → logprob: -14.391057968139648

Token 129: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.004078401252627373
    2. ' k' → logprob: -5.504078388214111
    3. '	k' → logprob: -17.504077911376953
    4. ' ' → logprob: -18.254077911376953
    5. '*k' → logprob: -18.754077911376953
    6. '(k' → logprob: -18.754077911376953
    7. '   ' → logprob: -20.379077911376953
    8. '
' → logprob: -20.379077911376953
    9. '  ' → logprob: -21.254077911376953
    10. '```' → logprob: -21.379077911376953

Token 130: '  ' (ID: 256)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3890511393547058
    2. ')' → logprob: -1.2640511989593506
    3. '
' → logprob: -4.5140509605407715
    4. ' ' → logprob: -4.7640509605407715
    5. '\n' → logprob: -4.8890509605407715
    6. '    
' → logprob: -5.8890509605407715
    7. '<|end|>' → logprob: -6.0140509605407715
    8. ' 
' → logprob: -6.2640509605407715
    9. '  
' → logprob: -6.6390509605407715
    10. ')
' → logprob: -7.1390509605407715

Token 131: ' #' (ID: 1069)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17480841279029846
    2. '   ' → logprob: -2.6748085021972656
    3. '<|end|>' → logprob: -2.9248085021972656
    4. ' ' → logprob: -3.9248085021972656
    5. '\n' → logprob: -4.799808502197266
    6. '
' → logprob: -5.299808502197266
    7. '  ' → logprob: -6.674808502197266
    8. '    
' → logprob: -7.424808502197266
    9. '  
' → logprob: -7.674808502197266
    10. '<|end|>' → logprob: -8.049808502197266

Token 132: ' division' (ID: 21629)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 133: ' entière' (ID: 61583)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.38153713941574097
    2. '<|end|>' → logprob: -1.5065371990203857
    3. '   ' → logprob: -2.8815371990203857
    4. '<|end|>' → logprob: -4.381536960601807
    5. ')' → logprob: -4.881536960601807
    6. '  ' → logprob: -5.131536960601807
    7. ' 
' → logprob: -5.381536960601807
    8. ' )' → logprob: -5.881536960601807
    9. '  
' → logprob: -7.131536960601807
    10. ',' → logprob: -7.256536960601807

Token 134: ' hein' (ID: 115155)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7233851552009583
    2. '   ' → logprob: -0.9733851552009583
    3. '\n' → logprob: -2.4733850955963135
    4. ' ' → logprob: -4.098385334014893
    5. '    
' → logprob: -4.723385334014893
    6. '<|end|>' → logprob: -4.723385334014893
    7. ' 
' → logprob: -5.473385334014893
    8. '
' → logprob: -5.973385334014893
    9. '  
' → logprob: -6.098385334014893
    10. ')
' → logprob: -6.348385334014893

Token 135: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.35258862376213074
    2. '   ' → logprob: -1.7275886535644531
    3. '\n' → logprob: -2.602588653564453
    4. '<|end|>' → logprob: -3.977588653564453
    5. ' ' → logprob: -4.602588653564453
    6. '    
' → logprob: -5.977588653564453
    7. '
' → logprob: -6.102588653564453
    8. ' 
' → logprob: -6.352588653564453
    9. '\' → logprob: -6.602588653564453
    10. ',' → logprob: -6.727588653564453

Token 136: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04560249298810959
    2. ')' → logprob: -3.420602560043335
    3. ' ' → logprob: -4.920602321624756
    4. '    
' → logprob: -6.920602321624756
    5. ' return' → logprob: -6.920602321624756
    6. ' 
' → logprob: -7.420602321624756
    7. '  ' → logprob: -8.295602798461914
    8. '
' → logprob: -8.295602798461914
    9. ')
' → logprob: -8.295602798461914
    10. '  
' → logprob: -8.295602798461914

Token 137: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4274691939353943
    2. ' ' → logprob: -1.552469253540039
    3. ')' → logprob: -2.302469253540039
    4. ' return' → logprob: -4.177469253540039
    5. '\n' → logprob: -5.802469253540039
    6. ' 
' → logprob: -5.927469253540039
    7. '    
' → logprob: -5.927469253540039
    8. '  ' → logprob: -6.052469253540039
    9. '  
' → logprob: -6.177469253540039
    10. 'return' (adapté à ' return') → logprob: -6.302469253540039

Token 138: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.06197071075439453
    2. ' res' → logprob: -2.8119707107543945
    3. 'int' → logprob: -13.186970710754395
    4. 'result' → logprob: -14.811970710754395
    5. '(res' → logprob: -15.311970710754395
    6. '	res' → logprob: -15.686970710754395
    7. ' int' → logprob: -15.811970710754395
    8. '   ' → logprob: -16.311969757080078
    9. ' ' → logprob: -16.686969757080078
    10. ' ' → logprob: -16.811969757080078

Token 139: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2780954837799072
    2. ')' → logprob: -1.7780954837799072
    3. '(
' → logprob: -3.2780954837799072
    4. '_' → logprob: -4.903095245361328
    5. '
' → logprob: -5.653095245361328
    6. 'for' → logprob: -5.903095245361328
    7. '\n' → logprob: -5.903095245361328
    8. '  
' → logprob: -6.403095245361328
    9. 'def' → logprob: -6.528095245361328
    10. ' ' → logprob: -6.653095245361328

Token 140: 'cur' (ID: 3264)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.010685560293495655
    2. 'm' → logprob: -5.010685443878174
    3. 'i' → logprob: -6.385685443878174
    4. 'while' → logprob: -7.385685443878174
    5. ' for' → logprob: -8.010685920715332
    6. 'prefix' → logprob: -8.385685920715332
    7. 'mod' → logprob: -9.010685920715332
    8. 'def' → logprob: -9.260685920715332
    9. 'a' → logprob: -9.260685920715332
    10. 'k' → logprob: -9.260685920715332

Token 141: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.09795021265745163
    2. '_len' → logprob: -3.4729502201080322
    3. ' =' → logprob: -3.8479502201080322
    4. '_idx' → logprob: -4.722949981689453
    5. '_index' → logprob: -4.847949981689453
    6. '_val' → logprob: -5.472949981689453
    7. '_count' → logprob: -5.847949981689453
    8. '=' → logprob: -5.847949981689453
    9. '_sum' → logprob: -5.847949981689453
    10. '_prefix' → logprob: -6.097949981689453

Token 142: ' prefix' (ID: 18633)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3091297745704651
    2. 'prefix' → logprob: -1.9341297149658203
    3. '1' → logprob: -2.4341297149658203
    4. 'len' → logprob: -4.05912971496582
    5. 'cnt' → logprob: -4.68412971496582
    6. '[' → logprob: -6.43412971496582
    7. 'n' → logprob: -6.43412971496582
    8. '[]' → logprob: -7.18412971496582
    9. 'None' → logprob: -7.30912971496582
    10. 'result' → logprob: -7.55912971496582

Token 143: '[' (ID: 58)
  Prédit: '.count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.count' → logprob: -0.3468022346496582
    2. '[' → logprob: -1.3468022346496582
    3. '.' → logprob: -4.971802234649658
    4. '.sort' → logprob: -5.221802234649658
    5. '.groupby' → logprob: -5.721802234649658
    6. '[-' → logprob: -5.846802234649658
    7. '[::-' → logprob: -5.846802234649658
    8. '[:]' → logprob: -5.971802234649658
    9. 'count' → logprob: -6.096802234649658
    10. '.copy' → logprob: -6.596802234649658

Token 144: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1285436749458313
    2. '-' → logprob: -2.1285436153411865
    3. '1' → logprob: -6.628543853759766
    4. ':' → logprob: -9.753543853759766
    5. ' -' → logprob: -10.003543853759766
    6. ']' → logprob: -10.128543853759766
    7. 'n' → logprob: -10.378543853759766
    8. ' ' → logprob: -10.628543853759766
    9. '::-' → logprob: -11.003543853759766
    10. '-i' → logprob: -11.628543853759766

Token 145: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004864411428570747
    2. ']+' → logprob: -6.00486421585083
    3. ']
' → logprob: -6.37986421585083
    4. '+' → logprob: -7.50486421585083
    5. '+]' → logprob: -10.379864692687988
    6. ' ]' → logprob: -10.629864692687988
    7. ')' → logprob: -11.504864692687988
    8. '
' → logprob: -11.629864692687988
    9. ':]' → logprob: -11.754864692687988
    10. '])' → logprob: -11.754864692687988

Token 146: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.050709180533885956
    2. 'i' → logprob: -3.4257092475891113
    3. 'count' → logprob: -4.300709247589111
    4. '1' → logprob: -6.925709247589111
    5. ' for' → logprob: -7.050709247589111
    6. 'start' → logprob: -8.050708770751953
    7. 'length' → logprob: -8.050708770751953
    8. 'cnt' → logprob: -8.675708770751953
    9. 'idx' → logprob: -8.925708770751953
    10. 'freq' → logprob: -9.175708770751953

Token 147: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.009875907562673092
    2. 'i' → logprob: -4.634875774383545
    3. ' ' → logprob: -10.259876251220703
    4. ' _' → logprob: -10.884876251220703
    5. '_' → logprob: -11.134876251220703
    6. ' val' → logprob: -11.759876251220703
    7. '_i' → logprob: -11.759876251220703
    8. ' j' → logprob: -12.259876251220703
    9. '	i' → logprob: -12.259876251220703
    10. ' value' → logprob: -12.259876251220703

Token 148: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016817230731248856
    2. 'in' → logprob: -4.141817092895508
    3. ' ' → logprob: -7.391817092895508
    4. ',' → logprob: -9.016817092895508
    5. 'n' → logprob: -11.766817092895508
    6. ' ,' → logprob: -11.891817092895508
    7. 'range' → logprob: -12.141817092895508
    8. '  ' → logprob: -12.266817092895508
    9. '	in' → logprob: -12.266817092895508
    10. '   ' → logprob: -12.766817092895508

Token 149: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.03385280817747116
    2. ' range' → logprob: -3.4088528156280518
    3. 'prefix' → logprob: -8.533852577209473
    4. ' ' → logprob: -12.533852577209473
    5. '(range' → logprob: -13.283852577209473
    6. ' prefix' → logprob: -13.533852577209473
    7. '  ' → logprob: -13.658852577209473
    8. '   ' → logprob: -14.283852577209473
    9. '	range' → logprob: -14.283852577209473
    10. '```' → logprob: -15.158852577209473

Token 150: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.029402023181319237
    2. '(n' → logprob: -3.654402017593384
    3. '(len' → logprob: -5.779402256011963
    4. ' (' → logprob: -12.904401779174805
    5. 'len' → logprob: -13.529401779174805
    6. '1' → logprob: -14.154401779174805
    7. '(l' → logprob: -14.654401779174805
    8. ' ' → logprob: -15.279401779174805
    9. '(
' → logprob: -15.279401779174805
    10. '((' → logprob: -15.779401779174805

Token 151: '+' (ID: 10)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.7766711711883545
    2. '+' → logprob: -0.9016711711883545
    3. ' +' → logprob: -2.9016711711883545
    4. '):
' → logprob: -3.4016711711883545
    5. '-' → logprob: -4.026671409606934
    6. ' -' → logprob: -4.276671409606934
    7. ' ):' → logprob: -4.776671409606934
    8. '1' → logprob: -6.026671409606934
    9. '
' → logprob: -6.901671409606934
    10. ' ' → logprob: -7.401671409606934

Token 152: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004953675088472664
    2. ' ' → logprob: -8.125494956970215
    3. '2' → logprob: -8.625494956970215
    4. '0' → logprob: -11.375494956970215
    5. '   ' → logprob: -13.062994956970215
    6. '
' → logprob: -13.375494956970215
    7. '3' → logprob: -14.375494956970215
    8. '-' → logprob: -14.687994956970215
    9. '```' → logprob: -14.687994956970215
    10. '

' → logprob: -15.125494956970215

Token 153: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.05571562051773071
    2. '):
' → logprob: -2.930715560913086
    3. '-' → logprob: -7.805715560913086
    4. ' ):' → logprob: -8.555715560913086
    5. ')' → logprob: -9.055715560913086
    6. ':' → logprob: -10.055715560913086
    7. '+' → logprob: -11.055715560913086
    8. ' -' → logprob: -11.180715560913086
    9. ']:' → logprob: -11.805715560913086
    10. '):
' → logprob: -11.805715560913086

Token 154: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.18100671470165253
    2. '   ' → logprob: -2.556006669998169
    3. ' if' → logprob: -2.806006669998169
    4. '<|end|>' → logprob: -4.931006908416748
    5. ':' → logprob: -5.056006908416748
    6. '  ' → logprob: -5.806006908416748
    7. ' :' → logprob: -6.306006908416748
    8. '    ' → logprob: -6.431006908416748
    9. '+' → logprob: -6.431006908416748
    10. ' i' → logprob: -6.931006908416748

Token 155: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.698142409324646
    2. ' if' → logprob: -0.698142409324646
    3. '   ' → logprob: -6.1981425285339355
    4. 'for' → logprob: -7.1981425285339355
    5. 'i' → logprob: -7.5731425285339355
    6. ' for' → logprob: -7.6981425285339355
    7. ' ' → logprob: -8.073142051696777
    8. ' i' → logprob: -8.448142051696777
    9. ':' → logprob: -9.448142051696777
    10. '+' → logprob: -9.948142051696777

Token 156: ' prefix' (ID: 18633)
  Prédit: ' prefix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prefix' → logprob: -0.5414239168167114
    2. 'prefix' → logprob: -1.0414239168167114
    3. ' i' → logprob: -3.166423797607422
    4. 'i' → logprob: -3.791423797607422
    5. '   ' → logprob: -8.916423797607422
    6. 'cur' → logprob: -8.916423797607422
    7. ' cur' → logprob: -9.666423797607422
    8. ' ' → logprob: -10.416423797607422
    9. '(prefix' → logprob: -10.666423797607422
    10. '  ' → logprob: -12.541423797607422

Token 157: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.016338041052222252
    2. '[' → logprob: -4.141337871551514
    3. ' [' → logprob: -8.766338348388672
    4. '==' → logprob: -9.516338348388672
    5. '[
' → logprob: -10.766338348388672
    6. ' ==' → logprob: -10.766338348388672
    7. '[j' → logprob: -11.766338348388672
    8. '[cur' → logprob: -12.266338348388672
    9. ']' → logprob: -12.391338348388672
    10. ' ' → logprob: -13.391338348388672

Token 158: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.08638130873441696
    2. '==' → logprob: -2.586381196975708
    3. ']' → logprob: -5.461381435394287
    4. ' ' → logprob: -6.836381435394287
    5. ']==' → logprob: -7.211381435394287
    6. '=' → logprob: -7.461381435394287
    7. ' ' → logprob: -8.836380958557129
    8. ' =' → logprob: -8.961380958557129
    9. '>' → logprob: -8.961380958557129
    10. ' ]' → logprob: -9.211380958557129

Token 159: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3139684200286865
    2. '==' → logprob: -1.3139684200286865
    3. '=' → logprob: -7.438968658447266
    4. ' =' → logprob: -10.063968658447266
    5. ' ' → logprob: -10.813968658447266
    6. ' !=' → logprob: -11.188968658447266
    7. '>' → logprob: -11.438968658447266
    8. '!=' → logprob: -11.688968658447266
    9. ' ' → logprob: -12.688968658447266
    10. ']==' → logprob: -12.813968658447266

Token 160: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.0008198728901334107
    2. ' cur' → logprob: -7.125819683074951
    3. 'prefix' → logprob: -11.12582015991211
    4. '	cur' → logprob: -15.25082015991211
    5. ' prefix' → logprob: -16.37582015991211
    6. ' ' → logprob: -16.50082015991211
    7. '   ' → logprob: -17.00082015991211
    8. ' ' → logprob: -17.62582015991211
    9. 'curr' → logprob: -17.75082015991211
    10. '_cur' → logprob: -17.87582015991211

Token 161: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0008675140561535954
    2. ':
' → logprob: -7.1258673667907715
    3. ',' → logprob: -10.87586784362793
    4. '   ' → logprob: -11.12586784362793
    5. ' :' → logprob: -11.75086784362793
    6. '=' → logprob: -12.37586784362793
    7. '       ' → logprob: -12.62586784362793
    8. ' and' → logprob: -12.62586784362793
    9. '):' → logprob: -12.75086784362793
    10. '<|end|>' → logprob: -12.87586784362793

Token 162: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6899791359901428
    2. 'cnt' → logprob: -0.8149791359901428
    3. '   ' → logprob: -3.189979076385498
    4. ' cnt' → logprob: -4.939979076385498
    5. '	cnt' → logprob: -5.814979076385498
    6. 'count' → logprob: -6.064979076385498
    7. '```' → logprob: -7.439979076385498
    8. 'continue' → logprob: -7.689979076385498
    9. '[cnt' → logprob: -8.564979553222656
    10. '(cnt' → logprob: -9.314979553222656

Token 163: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' (adapté à ' cnt') → logprob: -0.00803421251475811
    2. '   ' → logprob: -5.1330342292785645
    3. ' cnt' → logprob: -6.2580342292785645
    4. '	cnt' → logprob: -8.883033752441406
    5. '       ' → logprob: -10.258033752441406
    6. '[cnt' → logprob: -13.008033752441406
    7. '   ' → logprob: -13.133033752441406
    8. '(cnt' → logprob: -13.258033752441406
    9. 'count' → logprob: -13.508033752441406
    10. ' ' → logprob: -13.633033752441406

Token 164: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.0397091843187809
    2. '+=' → logprob: -3.2897090911865234
    3. '+' → logprob: -6.539709091186523
    4. ' +' → logprob: -9.039709091186523
    5. '=' → logprob: -10.414709091186523
    6. '<|end|>' → logprob: -10.539709091186523
    7. ' =' → logprob: -11.289709091186523
    8. ']+=' → logprob: -11.414709091186523
    9. ' ' → logprob: -11.914709091186523
    10. ' ' → logprob: -12.289709091186523

Token 165: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -11.875006675720215
    3. '   ' → logprob: -18.75000762939453
    4. '```' → logprob: -20.50000762939453
    5. '
' → logprob: -20.62500762939453
    6. '<|end|>' → logprob: -21.12500762939453
    7. '0' → logprob: -21.62500762939453
    8. '  ' → logprob: -21.75000762939453
    9. '+' → logprob: -22.75000762939453
    10. '2' → logprob: -22.75000762939453

Token 166: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.625
    3. '```' → logprob: -21.25
    4. '   ' → logprob: -21.875
    5. '
' → logprob: -22.75
    6. '0' → logprob: -23.375
    7. '2' → logprob: -23.75
    8. '１' → logprob: -23.875
    9. '<|end|>' → logprob: -24.0
    10. '۱' → logprob: -24.25

Token 167: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012782619334757328
    2. 'else' → logprob: -5.012782573699951
    3. ' else' → logprob: -5.137782573699951
    4. 'elif' → logprob: -9.63778305053711
    5. '	else' → logprob: -10.01278305053711
    6. ' elif' → logprob: -11.01278305053711
    7. ' ' → logprob: -11.13778305053711
    8. '    
' → logprob: -11.76278305053711
    9. ';' → logprob: -12.13778305053711
    10. ')' → logprob: -12.51278305053711

Token 168: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021784786134958267
    2. 'else' → logprob: -4.021784782409668
    3. ' else' → logprob: -5.646784782409668
    4. '	else' → logprob: -10.021784782409668
    5. 'elif' → logprob: -10.521784782409668
    6. '```' → logprob: -11.646784782409668
    7. '    
' → logprob: -12.771784782409668
    8. ';' → logprob: -12.771784782409668
    9. ' ' → logprob: -13.146784782409668
    10. ' elif' → logprob: -13.396784782409668

Token 169: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.03532589599490166
    2. ' else' → logprob: -3.4103260040283203
    3. '   ' → logprob: -6.53532600402832
    4. 'elif' → logprob: -8.53532600402832
    5. '```' → logprob: -10.78532600402832
    6. '	else' → logprob: -11.91032600402832
    7. ' elif' → logprob: -12.78532600402832
    8. ' ' → logprob: -15.53532600402832
    9. '    
' → logprob: -15.78532600402832
    10. '_else' → logprob: -16.41032600402832

Token 170: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3875674903392792
    2. ':
' → logprob: -1.1375675201416016
    3. '       ' → logprob: -7.512567520141602
    4. '   ' → logprob: -9.012567520141602
    5. '):
' → logprob: -12.012567520141602
    6. '```' → logprob: -12.012567520141602
    7. ' :
' → logprob: -12.262567520141602
    8. 'result' → logprob: -12.887567520141602
    9. ':

' → logprob: -13.262567520141602
    10. ',' → logprob: -13.387567520141602

Token 171: '       ' (ID: 309)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.09204172343015671
    2. '       ' → logprob: -3.0920417308807373
    3. '   ' → logprob: -3.3420417308807373
    4. ' result' → logprob: -5.217041492462158
    5. '```' → logprob: -6.842041492462158
    6. 'if' → logprob: -7.717041492462158
    7. '
' → logprob: -8.717041969299316
    8. '``' → logprob: -10.717041969299316
    9. '	result' → logprob: -11.217041969299316
    10. ' if' → logprob: -11.467041969299316

Token 172: ' cur' (ID: 4396)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.0020703254267573357
    2. 'if' → logprob: -6.252070426940918
    3. '       ' → logprob: -9.252070426940918
    4. ' result' → logprob: -11.252070426940918
    5. '```' → logprob: -11.252070426940918
    6. '   ' → logprob: -11.377070426940918
    7. '
' → logprob: -12.002070426940918
    8. 'res' → logprob: -14.377070426940918
    9. '	result' → logprob: -14.752070426940918
    10. '           ' → logprob: -15.002070426940918

Token 173: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25644612312316895
    2. ' =' → logprob: -2.381446123123169
    3. ',' → logprob: -2.881446123123169
    4. 'result' → logprob: -3.881446123123169
    5. 'count' → logprob: -4.63144588470459
    6. '_result' → logprob: -4.75644588470459
    7. '_cnt' → logprob: -5.38144588470459
    8. '_count' → logprob: -5.50644588470459
    9. '_' → logprob: -5.63144588470459
    10. '==' → logprob: -5.88144588470459

Token 174: ' prefix' (ID: 18633)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -4.5491004129871726e-05
    2. ' prefix' → logprob: -10.000045776367188
    3. '(prefix' → logprob: -17.000045776367188
    4. 'pref' → logprob: -19.250045776367188
    5. '   ' → logprob: -19.375045776367188
    6. 'refix' → logprob: -20.625045776367188
    7. '_prefix' → logprob: -20.750045776367188
    8. 'Prefix' → logprob: -22.000045776367188
    9. '.prefix' → logprob: -22.000045776367188
    10. 'suffix' → logprob: -22.625045776367188

Token 175: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.5690089639974758e-05
    2. '[' → logprob: -11.125015258789062
    3. '```' → logprob: -14.750015258789062
    4. 'i' → logprob: -15.750015258789062
    5. '[n' → logprob: -16.375015258789062
    6. '[j' → logprob: -16.750015258789062
    7. '`' → logprob: -17.250015258789062
    8. '[I' → logprob: -18.000015258789062
    9. '[
' → logprob: -18.250015258789062
    10. ' [' → logprob: -18.500015258789062

Token 176: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9267505407333374
    2. '       ' → logprob: -1.3017505407333374
    3. ')
' → logprob: -1.4267505407333374
    4. ']' → logprob: -2.801750659942627
    5. ']
' → logprob: -3.926750659942627
    6. '   ' → logprob: -5.176750659942627
    7. '<|end|>' → logprob: -6.551750659942627
    8. '```' → logprob: -7.051750659942627
    9. '
' → logprob: -7.301750659942627
    10. ',' → logprob: -7.801750659942627

Token 177: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0352192148566246
    2. 'result' → logprob: -3.535219192504883
    3. '   ' → logprob: -5.410219192504883
    4. '```' → logprob: -7.660219192504883
    5. ' result' → logprob: -8.660219192504883
    6. 'if' → logprob: -8.660219192504883
    7. '
' → logprob: -9.285219192504883
    8. '``' → logprob: -10.660219192504883
    9. 'else' → logprob: -11.035219192504883
    10. '        
' → logprob: -11.410219192504883

Token 178: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.008746232837438583
    2. 'if' → logprob: -4.758746147155762
    3. '
' → logprob: -9.008746147155762
    4. '```' → logprob: -12.383746147155762
    5. '       ' → logprob: -13.258746147155762
    6. ' result' → logprob: -14.008746147155762
    7. '   ' → logprob: -14.133746147155762
    8. '        
' → logprob: -14.258746147155762
    9. 'res' → logprob: -14.633746147155762
    10. '    
' → logprob: -15.633746147155762

Token 179: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.0788988247513771
    2. '+=' → logprob: -2.5788989067077637
    3. '+=(' → logprob: -12.578898429870605
    4. '=' → logprob: -13.078898429870605
    5. ' =' → logprob: -13.328898429870605
    6. '+' → logprob: -13.828898429870605
    7. ']+=' → logprob: -15.078898429870605
    8. ' -=' → logprob: -15.953898429870605
    9. '```' → logprob: -15.953898429870605
    10. '+='' → logprob: -16.453899383544922

Token 180: ' comb' (ID: 4134)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.03127226233482361
    2. 'cnt' → logprob: -3.5312721729278564
    3. ' comb' → logprob: -6.7812724113464355
    4. 'com' → logprob: -8.156271934509277
    5. ' cnt' → logprob: -9.406271934509277
    6. 'cont' → logprob: -12.156271934509277
    7. '(cnt' → logprob: -12.281271934509277
    8. 'cmb' → logprob: -13.281271934509277
    9. '(com' → logprob: -13.906271934509277
    10. 'combo' → logprob: -14.156271934509277

Token 181: '(cnt' (ID: 102125)
  Prédit: '(cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cnt' → logprob: -2.963691804325208e-05
    2. 'cnt' → logprob: -11.125029563903809
    3. '[cnt' → logprob: -11.500029563903809
    4. '(' → logprob: -12.500029563903809
    5. '(count' → logprob: -14.000029563903809
    6. '	cnt' → logprob: -16.250030517578125
    7. '(
' → logprob: -17.750030517578125
    8. ' cnt' → logprob: -18.000030517578125
    9. '(ct' → logprob: -18.375030517578125
    10. '```' → logprob: -18.375030517578125

Token 182: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10455635190010071
    2. ',' → logprob: -2.3545563220977783
    3. '2' → logprob: -6.354556560516357
    4. '(cnt' → logprob: -6.354556560516357
    5. ')' → logprob: -7.229556560516357
    6. ' ,' → logprob: -10.1045560836792
    7. 'cnt' → logprob: -10.4795560836792
    8. '(
' → logprob: -11.2295560836792
    9. '
' → logprob: -11.6045560836792
    10. ')(' → logprob: -11.7295560836792

Token 183: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.931863051955588e-05
    2. ' ' → logprob: -9.750059127807617
    3. '3' → logprob: -14.125059127807617
    4. '   ' → logprob: -15.875059127807617
    5. '
' → logprob: -16.625059127807617
    6. '(' → logprob: -17.875059127807617
    7. '1' → logprob: -18.000059127807617
    8. ')' → logprob: -18.125059127807617
    9. '２' → logprob: -18.125059127807617
    10. '  ' → logprob: -18.250059127807617

Token 184: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.52919222577475e-05
    2. '3' → logprob: -9.625075340270996
    3. ' ' → logprob: -11.625075340270996
    4. '   ' → logprob: -15.875075340270996
    5. '
' → logprob: -16.62507438659668
    6. '1' → logprob: -17.00007438659668
    7. '２' → logprob: -18.12507438659668
    8. ')' → logprob: -18.25007438659668
    9. '```' → logprob: -18.25007438659668
    10. '(' → logprob: -18.50007438659668

Token 185: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00012511172099038959
    2. ')
' → logprob: -9.00012493133545
    3. ' )' → logprob: -14.75012493133545
    4. '   ' → logprob: -15.00012493133545
    5. '))' → logprob: -15.62512493133545
    6. ')+' → logprob: -16.500125885009766
    7. ')`' → logprob: -16.500125885009766
    8. '       ' → logprob: -16.625125885009766
    9. ')

' → logprob: -16.750125885009766
    10. '}' → logprob: -16.875125885009766

Token 186: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03409317508339882
    2. 'cnt' → logprob: -3.409093141555786
    3. '   ' → logprob: -7.784093379974365
    4. ' cnt' → logprob: -11.784092903137207
    5. 'count' → logprob: -12.159092903137207
    6. '      ' → logprob: -12.284092903137207
    7. '	cnt' → logprob: -12.284092903137207
    8. '```' → logprob: -12.784092903137207
    9. '     ' → logprob: -13.284092903137207
    10. '
' → logprob: -14.159092903137207

Token 187: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' (adapté à ' cnt') → logprob: -3.128163257315464e-07
    2. '   ' → logprob: -16.25
    3. '       ' → logprob: -16.375
    4. ' cnt' → logprob: -17.125
    5. '	cnt' → logprob: -17.5
    6. '```' → logprob: -18.125
    7. '    
' → logprob: -18.625
    8. '(cnt' → logprob: -19.0
    9. 'count' → logprob: -19.125
    10. '        
' → logprob: -19.375

Token 188: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0004309076175559312
    2. ' =' → logprob: -7.750431060791016
    3. '0' → logprob: -15.875431060791016
    4. '＝' → logprob: -17.000431060791016
    5. '=}' → logprob: -18.375431060791016
    6. '=
' → logprob: -18.625431060791016
    7. '+=' → logprob: -18.875431060791016
    8. '.=' → logprob: -19.000431060791016
    9. '1' → logprob: -19.250431060791016
    10. '=`' → logprob: -19.375431060791016

Token 189: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '0' → logprob: -16.75
    4. '   ' → logprob: -19.25
    5. '۱' → logprob: -21.0
    6. '```' → logprob: -21.0
    7. '１' → logprob: -21.6875
    8. '  ' → logprob: -21.8125
    9. '१' → logprob: -22.0
    10. '2' → logprob: -22.0625

Token 190: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.0
    3. '0' → logprob: -18.75
    4. '   ' → logprob: -22.125
    5. '```' → logprob: -22.25
    6. '１' → logprob: -22.375
    7. '۱' → logprob: -22.375
    8. '१' → logprob: -23.75
    9. '' → logprob: -24.0
    10. '১' → logprob: -24.0

Token 191: '
' (ID: 198)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.060916606336832047
    2. 'if' → logprob: -3.0609166622161865
    3. 'print' → logprob: -5.185916423797607
    4. 'for' → logprob: -5.185916423797607
    5. '#' → logprob: -7.060916423797607
    6. '
' → logprob: -9.310916900634766
    7. '```' → logprob: -10.310916900634766
    8. 'else' → logprob: -10.560916900634766
    9. ' result' → logprob: -10.935916900634766
    10. 'i' → logprob: -12.060916900634766

Token 192: 'if' (ID: 366)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.03242732211947441
    2. 'if' → logprob: -3.5324273109436035
    3. 'print' → logprob: -6.0324273109436035
    4. '#' → logprob: -8.407427787780762
    5. 'else' → logprob: -10.782427787780762
    6. 'for' → logprob: -10.782427787780762
    7. '```' → logprob: -12.282427787780762
    8. '
' → logprob: -13.032427787780762
    9. ' result' → logprob: -14.157427787780762
    10. 'i' → logprob: -14.657427787780762

Token 193: ' cnt' (ID: 27340)
  Prédit: ' cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cnt' → logprob: -0.0011096131056547165
    2. 'cnt' → logprob: -7.001109600067139
    3. ' prefix' → logprob: -8.751110076904297
    4. '(cnt' → logprob: -11.001110076904297
    5. ' cur' → logprob: -12.001110076904297
    6. ' ' → logprob: -12.376110076904297
    7. '	cnt' → logprob: -12.501110076904297
    8. ' ' → logprob: -13.001110076904297
    9. ' n' → logprob: -13.376110076904297
    10. 'prefix' → logprob: -13.501110076904297

Token 194: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.11493243277072906
    2. ' >' → logprob: -2.4899325370788574
    3. '>=' → logprob: -3.8649325370788574
    4. ' >=' → logprob: -5.364932537078857
    5. '   ' → logprob: -12.6149320602417
    6. ' ' → logprob: -12.7399320602417
    7. '<' → logprob: -13.3649320602417
    8. ':' → logprob: -13.3649320602417
    9. '  ' → logprob: -14.1149320602417
    10. '[' → logprob: -14.3649320602417

Token 195: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.762356209335849e-05
    2. ' ' → logprob: -10.25003719329834
    3. '2' → logprob: -13.12503719329834
    4. '0' → logprob: -15.62503719329834
    5. '=' → logprob: -16.625038146972656
    6. '>' → logprob: -18.375038146972656
    7. '   ' → logprob: -19.000038146972656
    8. '  ' → logprob: -19.750038146972656
    9. '１' → logprob: -20.000038146972656
    10. '[' → logprob: -20.750038146972656

Token 196: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.759734732331708e-05
    2. ' ' → logprob: -11.125017166137695
    3. '2' → logprob: -12.875017166137695
    4. '0' → logprob: -15.375017166137695
    5. '=' → logprob: -17.000017166137695
    6. '   ' → logprob: -18.125017166137695
    7. '१' → logprob: -18.562517166137695
    8. '１' → logprob: -18.937517166137695
    9. '  ' → logprob: -19.437517166137695
    10. '

' → logprob: -19.625017166137695

Token 197: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.03810139000415802
    2. ':' → logprob: -3.2881014347076416
    3. '   ' → logprob: -9.788101196289062
    4. '       ' → logprob: -13.538101196289062
    5. ' :
' → logprob: -13.663101196289062
    6. ':
' → logprob: -14.288101196289062
    7. '):
' → logprob: -14.663101196289062
    8. ':

' → logprob: -15.413101196289062
    9. ' and' → logprob: -16.663101196289062
    10. '():
' → logprob: -17.288101196289062

Token 198: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0034705903381109238
    2. 'result' → logprob: -6.378470420837402
    3. ' result' → logprob: -6.378470420837402
    4. '       ' → logprob: -9.753470420837402
    5. '	result' → logprob: -11.503470420837402
    6. '
' → logprob: -14.753470420837402
    7. '```' → logprob: -16.00347137451172
    8. '  ' → logprob: -16.37847137451172
    9. ',result' → logprob: -16.75347137451172
    10. '    
' → logprob: -17.25347137451172

Token 199: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.04963039979338646
    2. '   ' → logprob: -3.0496304035186768
    3. ' result' → logprob: -6.924630165100098
    4. '       ' → logprob: -10.174630165100098
    5. '
' → logprob: -11.299630165100098
    6. '	result' → logprob: -12.549630165100098
    7. '```' → logprob: -13.049630165100098
    8. '  ' → logprob: -13.549630165100098
    9. ' ' → logprob: -13.549630165100098
    10. '    ' → logprob: -16.674631118774414

Token 200: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.3870716392993927
    2. ' +=' → logprob: -1.1370716094970703
    3. '+' → logprob: -8.63707160949707
    4. '   ' → logprob: -11.01207160949707
    5. '  ' → logprob: -12.38707160949707
    6. ' ' → logprob: -14.01207160949707
    7. ']+=' → logprob: -14.38707160949707
    8. ' +' → logprob: -15.13707160949707
    9. '```' → logprob: -15.63707160949707
    10. '=' → logprob: -15.63707160949707

Token 201: ' comb' (ID: 4134)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.10039116442203522
    2. ' comb' → logprob: -2.350391149520874
    3. 'com' → logprob: -8.600391387939453
    4. 'combo' → logprob: -16.100391387939453
    5. '(com' → logprob: -16.100391387939453
    6. 'Comb' → logprob: -16.850391387939453
    7. 'compl' → logprob: -16.975391387939453
    8. 'cmb' → logprob: -17.475391387939453
    9. ' ' → logprob: -17.725391387939453
    10. '   ' → logprob: -18.100391387939453

Token 202: '(cnt' (ID: 102125)
  Prédit: '(cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cnt' → logprob: -1.8312570318812504e-05
    2. '(' → logprob: -11.000018119812012
    3. '(count' → logprob: -14.375018119812012
    4. 'cnt' → logprob: -14.500018119812012
    5. '[cnt' → logprob: -14.500018119812012
    6. '(cmd' → logprob: -17.625019073486328
    7. '(cont' → logprob: -18.375019073486328
    8. '	cnt' → logprob: -18.375019073486328
    9. '(ctrl' → logprob: -19.000019073486328
    10. ' cnt' → logprob: -19.250019073486328

Token 203: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.061054359131958e-06
    2. '2' → logprob: -12.625007629394531
    3. ' ,' → logprob: -12.750007629394531
    4. '(' → logprob: -13.500007629394531
    5. ',
' → logprob: -16.37500762939453
    6. '(cnt' → logprob: -16.75000762939453
    7. '`,' → logprob: -18.00000762939453
    8. '，' → logprob: -18.25000762939453
    9. 'cnt' → logprob: -18.37500762939453
    10. '',' → logprob: -18.62500762939453

Token 204: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0004882152716163546
    2. ' ' → logprob: -7.62548828125
    3. '   ' → logprob: -15.50048828125
    4. '  ' → logprob: -16.87548828125
    5. '２' → logprob: -18.12548828125
    6. '۲' → logprob: -18.37548828125
    7. '```' → logprob: -18.50048828125
    8. ')' → logprob: -18.87548828125
    9. '
' → logprob: -19.12548828125
    10. '    ' → logprob: -19.68798828125

Token 205: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.5776860184123507e-06
    2. ')
' → logprob: -13.25000286102295
    3. ' )' → logprob: -14.37500286102295
    4. '))' → logprob: -16.125001907348633
    5. ')`' → logprob: -17.500001907348633
    6. ')}' → logprob: -18.625001907348633
    7. ')#' → logprob: -18.625001907348633
    8. '}' → logprob: -18.625001907348633
    9. ')
' → logprob: -18.875001907348633
    10. '()' → logprob: -19.250001907348633

Token 206: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -7.822646693966817e-06
    2. '
' → logprob: -12.375007629394531
    3. ' print' → logprob: -12.625007629394531
    4. '```' → logprob: -15.750007629394531
    5. ')
' → logprob: -18.00000762939453
    6. ')' → logprob: -18.75000762939453
    7. '<|end|>' → logprob: -19.00000762939453
    8. '#print' → logprob: -19.25000762939453
    9. '``' → logprob: -19.37500762939453
    10. '  
' → logprob: -19.62500762939453

Token 207: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.1002146452665329
    2. '(' → logprob: -2.350214719772339
    3. 'result' → logprob: -12.225214958190918
    4. '(
' → logprob: -14.100214958190918
    5. '(results' → logprob: -14.725214958190918
    6. '()' → logprob: -14.975214958190918
    7. '(res' → logprob: -14.975214958190918
    8. '('' → logprob: -14.975214958190918
    9. ' (' → logprob: -15.600214958190918
    10. '("("' → logprob: -15.725214958190918

Token 208: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.975612187583465e-05
    2. ' )' → logprob: -10.750029563903809
    3. '+' → logprob: -13.000029563903809
    4. ')`' → logprob: -13.375029563903809
    5. '(' → logprob: -13.625029563903809
    6. '))' → logprob: -14.000029563903809
    7. '[' → logprob: -14.000029563903809
    8. ')
' → logprob: -15.000029563903809
    9. '**' → logprob: -15.500029563903809
    10. '+)' → logprob: -15.625029563903809


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 206
Tokens correctement prédits (1ère position, stricte): 67
Tokens correctement prédits (1ère position, avec adaptation): 73
Tokens correctement prédits (top 10): 155
Précision stricte (1ère position): 32.52%
Précision adaptée (1ère position): 35.44%
Précision (top 10): 75.24%
================================================================================
