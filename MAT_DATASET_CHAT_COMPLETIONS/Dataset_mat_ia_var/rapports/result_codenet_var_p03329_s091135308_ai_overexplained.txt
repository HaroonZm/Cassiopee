================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:16:42
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Demande à l'utilisateur de saisir un nombre entier, stocké dans la variable 'y'.
# La fonction input() lit une entrée utilisateur, qui est une chaîne, donc on utilise int() pour la convertir en entier.
y = int(input())

# On crée une liste vide appelée 'res', qui va servir à stocker les résultats des calculs pour chaque valeur possible de i.
res = []

# On commence une boucle for. La variable de boucle 'i' va de 1 jusqu'à y inclus (range commence à 1, finit à y+1 car le deuxième argument n'est pas inclus).
for i in range(1, y + 1):
    # On initialise un compteur 'cnt' à 0. Il va stocker le nombre total d'opérations minimales pour représenter 'y' en utilisant 9^j et 6^j.
    cnt = 0

    # On assigne 'i' à la variable temporaire y1 (copie de i).
    y1 = i
    # On assigne (y - i) à la variable temporaire y2 (complément à i pour faire un découpage de y).
    y2 = y - i

    # On utilise une autre boucle for pour parcourir les valeurs de 'j' de 6 jusqu'à 1 (inclus), en décrémentant à chaque fois.
    # Ceci va servir à examiner les puissances de 9, de 9^6 à 9^1.
    for j in range(6, 0, -1):
        # On calcule 9 exposant j et le stocke dans t9.
        t9 = 9 ** j
        # Si y1 est supérieur ou égal à t9, cela signifie qu'on peut retirer (y1 // t9) fois t9 de y1.
        if y1 >= t9:
            # On incrémente le compteur cnt par le nombre de fois où t9 peut rentrer dans y1.
            cnt += y1 // t9
            # On met à jour y1 en enlevant tout ce qui peut être retiré par des entiers multiples de t9.
            y1 = y1 % t9
    # Après la boucle, on ajoute le reste de y1 à y2 pour pouvoir traiter le reste avec les puissances de 6.
    y2 += y1

    # Maintenant on va essayer de représenter y2 avec des puissances de 6.
    # Encore une boucle for, cette fois 'j' va de 7 à 1 (inclu), de haut en bas.
    for j in range(7, 0, -1):
        # On calcule 6 exposant j et le stocke dans t6.
        t6 = 6 ** j
        # Si y2 est plus grand ou égal à t6, on peut retirer (y2 // t6) fois t6 de y2.
        if y2 >= t6:
            # On incrémente cnt du nombre correspondant.
            cnt += y2 // t6
            # On met y2 à jour avec le reste de la division par t6.
            y2 = y2 % t6

    # Finalement, tout ce qui reste dans y2 ne peut être retiré qu'un par un (avec des 1), donc on ajoute directement y2 à cnt.
    cnt += y2
    # On ajoute cnt dans la liste res. Celle-ci garde le résultat pour chaque valeur de i.
    res.append(cnt)

# Quand toutes les valeurs possibles de i ont été testées, on affiche le minimum des résultats de la liste res.
# print() permet d'afficher la valeur sur la sortie standard (écran).
print(min(res))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Dem' (ID: 9458)
  → Token d'amorce (pas de prédiction)

Token 2: 'ande' (ID: 4102)
  → Token d'amorce (pas de prédiction)

Token 3: ' à' (ID: 1221)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7861731648445129
    2. ':' → logprob: -1.5361731052398682
    3. 's' → logprob: -1.6611731052398682
    4. ' de' → logprob: -2.911173105239868
    5. ' ' → logprob: -3.161173105239868
    6. '=' → logprob: -4.786173343658447
    7. ' =' → logprob: -4.786173343658447
    8. ' :' → logprob: -4.911173343658447
    9. '.' → logprob: -5.286173343658447
    10. ' d' → logprob: -5.786173343658447

Token 4: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.16772253811359406
    2. ' l' → logprob: -1.9177225828170776
    3. ' ' → logprob: -5.667722702026367
    4. ' user' → logprob: -6.667722702026367
    5. 'user' → logprob: -7.167722702026367
    6. ''' → logprob: -7.917722702026367
    7. 'u' → logprob: -8.167722702026367
    8. '_' → logprob: -8.417722702026367
    9. ' ' → logprob: -8.917722702026367
    10. ' utilisateur' → logprob: -8.917722702026367

Token 5: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.13842537999153137
    2. 'u' → logprob: -2.763425350189209
    3. ''' → logprob: -3.263425350189209
    4. 'util' → logprob: -4.763425350189209
    5. 'a' → logprob: -5.013425350189209
    6. '’utilisateur' → logprob: -5.138425350189209
    7. ' utilisateur' → logprob: -5.513425350189209
    8. 'e' → logprob: -7.638425350189209
    9. ''user' → logprob: -7.763425350189209
    10. '_' → logprob: -7.888425350189209

Token 6: ' de' (ID: 334)
  Prédit: 'nom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nom' → logprob: -0.17538928985595703
    2. 'name' → logprob: -2.675389289855957
    3. 'n' → logprob: -3.425389289855957
    4. 's' → logprob: -4.300389289855957
    5. ' nom' → logprob: -4.800389289855957
    6. 'user' → logprob: -4.925389289855957
    7. ' =' → logprob: -5.925389289855957
    8. 'prenom' → logprob: -6.050389289855957
    9. 'input' → logprob: -6.175389289855957
    10. 'print' → logprob: -6.300389289855957

Token 7: ' saisir' (ID: 152120)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.028796790167689323
    2. 'entr' → logprob: -4.153796672821045
    3. ' saisir' → logprob: -5.153796672821045
    4. '```' → logprob: -6.028796672821045
    5. 'r' → logprob: -6.153796672821045
    6. 'sa' → logprob: -7.903796672821045
    7. 'don' → logprob: -8.153797149658203
    8. 'entrée' → logprob: -8.403797149658203
    9. '#' → logprob: -8.403797149658203
    10. ' entrer' → logprob: -8.653797149658203

Token 8: ' un' (ID: 537)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.028100790455937386
    2. ' un' → logprob: -4.403100967407227
    3. ' une' → logprob: -5.528100967407227
    4. ''' → logprob: -5.778100967407227
    5. '_' → logprob: -6.153100967407227
    6. 's' → logprob: -6.403100967407227
    7. ' ' → logprob: -7.028100967407227
    8. ' :' → logprob: -7.153100967407227
    9. 'u' → logprob: -7.528100967407227
    10. ' u' → logprob: -7.653100967407227

Token 9: ' nombre' (ID: 9733)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7890444993972778
    2. ' espace' → logprob: -1.2890444993972778
    3. 'e' → logprob: -2.7890443801879883
    4. 'nombre' → logprob: -3.1640443801879883
    5. ' nombre' → logprob: -3.2890443801879883
    6. 'a' → logprob: -3.7890443801879883
    7. ' nom' → logprob: -4.289044380187988
    8. 'é' → logprob: -4.539044380187988
    9. 'es' → logprob: -4.539044380187988
    10. '_' → logprob: -4.664044380187988

Token 10: ' entier' (ID: 80473)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.009632955305278301
    2. 'x' → logprob: -5.7596330642700195
    3. 'nombre' → logprob: -6.2596330642700195
    4. '#' → logprob: -6.3846330642700195
    5. '\n' → logprob: -7.6346330642700195
    6. '_' → logprob: -8.00963306427002
    7. '```' → logprob: -8.25963306427002
    8. ' ' → logprob: -8.25963306427002
    9. 'i' → logprob: -8.38463306427002
    10. 's' → logprob: -8.38463306427002

Token 11: ',' (ID: 11)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.005989828146994114
    2. 'x' → logprob: -6.130990028381348
    3. 'nombre' → logprob: -6.255990028381348
    4. '\n' → logprob: -7.755990028381348
    5. 'i' → logprob: -7.755990028381348
    6. '#' → logprob: -8.255990028381348
    7. '\' → logprob: -9.005990028381348
    8. 's' → logprob: -9.255990028381348
    9. '```' → logprob: -9.380990028381348
    10. '`' → logprob: -9.630990028381348

Token 12: ' stock' (ID: 6546)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2217378318309784
    2. 'n' → logprob: -1.9717378616333008
    3. ' n' → logprob: -3.971737861633301
    4. 's' → logprob: -3.971737861633301
    5. 'r' → logprob: -6.221737861633301
    6. ' ' → logprob: -6.221737861633301
    7. ',' → logprob: -6.346737861633301
    8. 'x' → logprob: -6.596737861633301
    9. ' )' → logprob: -6.596737861633301
    10. 'input' → logprob: -6.721737861633301

Token 13: 'é' (ID: 377)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.09896204620599747
    2. ' ' → logprob: -2.8489620685577393
    3. 'r' → logprob: -3.5989620685577393
    4. 'é' → logprob: -5.97396183013916
    5. 'e' → logprob: -6.22396183013916
    6. 'er' → logprob: -6.72396183013916
    7. ' =' → logprob: -7.22396183013916
    8. ' ' → logprob: -7.47396183013916
    9. ' _' → logprob: -7.59896183013916
    10. '=' → logprob: -7.84896183013916

Token 14: ' dans' (ID: 2671)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3509041965007782
    2. ' ' → logprob: -1.2259042263031006
    3. ' _' → logprob: -6.8509039878845215
    4. 's' → logprob: -8.35090446472168
    5. ' ' → logprob: -8.35090446472168
    6. '```' → logprob: -8.60090446472168
    7. 'n' → logprob: -8.85090446472168
    8. ',' → logprob: -9.47590446472168
    9. 'u' → logprob: -9.97590446472168
    10. ' )' → logprob: -10.10090446472168

Token 15: ' la' (ID: 557)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.6848540306091309
    2. ' la' → logprob: -1.6848540306091309
    3. ' ' → logprob: -2.184854030609131
    4. 'la' → logprob: -2.309854030609131
    5. '_' → logprob: -2.559854030609131
    6. '`' → logprob: -2.684854030609131
    7. 'n' → logprob: -2.934854030609131
    8. 'l' → logprob: -2.934854030609131
    9. ' une' → logprob: -3.684854030609131
    10. '```' → logprob: -3.684854030609131

Token 16: ' variable' (ID: 11076)
  Prédit: 'variable'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'variable' → logprob: -0.1479138284921646
    2. ' variable' → logprob: -2.647913932800293
    3. 'nombre' → logprob: -3.272913932800293
    4. 'var' → logprob: -5.147913932800293
    5. '```' → logprob: -5.397913932800293
    6. ' ' → logprob: -5.647913932800293
    7. '_' → logprob: -5.897913932800293
    8. 's' → logprob: -6.397913932800293
    9. 'n' → logprob: -6.397913932800293
    10. '`' → logprob: -6.522913932800293

Token 17: ' '' (ID: 461)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.1012976169586182
    2. 'nombre' → logprob: -1.3512976169586182
    3. ' ' → logprob: -2.101297616958618
    4. ' n' → logprob: -2.851297616958618
    5. '`' → logprob: -2.851297616958618
    6. '```' → logprob: -2.851297616958618
    7. ' nombre' → logprob: -3.226297616958618
    8. '_' → logprob: -3.476297616958618
    9. ' entier' → logprob: -4.476297378540039
    10. 'x' → logprob: -4.976297378540039

Token 18: 'y' (ID: 88)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.05174831673502922
    2. 'n' → logprob: -3.051748275756836
    3. 'num' → logprob: -7.051748275756836
    4. 'nb' → logprob: -7.051748275756836
    5. 'ent' → logprob: -7.301748275756836
    6. 'number' → logprob: -8.301748275756836
    7. '`' → logprob: -9.051748275756836
    8. 'x' → logprob: -9.301748275756836
    9. 'user' → logprob: -9.301748275756836
    10. '```' → logprob: -9.801748275756836

Token 19: ''.
' (ID: 49980)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.15620212256908417
    2. ')' → logprob: -2.9062020778656006
    3. '')' → logprob: -3.4062020778656006
    4. 'y' → logprob: -3.9062020778656006
    5. ')'' → logprob: -3.9062020778656006
    6. '#' → logprob: -5.15620231628418
    7. 'e' → logprob: -5.28120231628418
    8. 'u' → logprob: -5.90620231628418
    9. ''''' → logprob: -8.03120231628418
    10. 's' → logprob: -8.15620231628418

Token 20: '#' (ID: 2)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.004348467569798231
    2. 'x' → logprob: -5.504348278045654
    3. 'n' → logprob: -9.379348754882812
    4. '```' → logprob: -9.879348754882812
    5. '\' → logprob: -10.379348754882812
    6. '#' → logprob: -10.379348754882812
    7. ' y' → logprob: -11.129348754882812
    8. ' ' → logprob: -11.504348754882812
    9. '' → logprob: -12.254348754882812
    10. '_' → logprob: -12.254348754882812

Token 21: ' La' (ID: 3038)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.005939821247011423
    2. ' y' → logprob: -5.130939960479736
    3. 'x' → logprob: -12.255939483642578
    4. ' ' → logprob: -12.630939483642578
    5. '#' → logprob: -14.380939483642578
    6. 'print' → logprob: -14.380939483642578
    7. '```' → logprob: -14.630939483642578
    8. ' #' → logprob: -14.755939483642578
    9. ' ```' → logprob: -15.505939483642578
    10. ''y' → logprob: -15.630939483642578

Token 22: ' fonction' (ID: 17610)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.22342276573181152
    2. 'y' → logprob: -1.9734227657318115
    3. ' valeur' → logprob: -3.8484227657318115
    4. 's' → logprob: -4.348423004150391
    5. ' variable' → logprob: -4.598423004150391
    6. '#' → logprob: -5.348423004150391
    7. ' #' → logprob: -6.348423004150391
    8. ' ' → logprob: -6.848423004150391
    9. ' somme' → logprob: -6.973423004150391
    10. 'x' → logprob: -7.473423004150391

Token 23: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.6538797616958618
    2. ' input' → logprob: -0.7788797616958618
    3. 'def' → logprob: -4.153879642486572
    4. 'int' → logprob: -6.028879642486572
    5. ' def' → logprob: -6.903879642486572
    6. ' int' → logprob: -7.028879642486572
    7. 'abs' → logprob: -8.15388011932373
    8. 'print' → logprob: -8.65388011932373
    9. 's' → logprob: -8.77888011932373
    10. ' y' → logprob: -8.90388011932373

Token 24: '()' (ID: 416)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0056615290232002735
    2. '()' → logprob: -5.380661487579346
    3. '('' → logprob: -7.130661487579346
    4. '("' → logprob: -8.755661964416504
    5. '(
' → logprob: -10.005661964416504
    6. 's' → logprob: -11.380661964416504
    7. '("")' → logprob: -11.880661964416504
    8. '(

' → logprob: -12.380661964416504
    9. '("""' → logprob: -12.755661964416504
    10. '("("' → logprob: -12.880661964416504

Token 25: ' lit' (ID: 11980)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0153516149148345
    2. '('' → logprob: -4.76535177230835
    3. '()' → logprob: -5.64035177230835
    4. '("' → logprob: -6.14035177230835
    5. 's' → logprob: -7.64035177230835
    6. ')' → logprob: -9.265351295471191
    7. '(
' → logprob: -9.515351295471191
    8. '.' → logprob: -10.015351295471191
    9. '#' → logprob: -10.015351295471191
    10. '("")' → logprob: -10.140351295471191

Token 26: ' une' (ID: 2463)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2787908613681793
    2. ' l' → logprob: -2.2787909507751465
    3. ' la' → logprob: -2.5287909507751465
    4. ' une' → logprob: -3.5287909507751465
    5. 'l' → logprob: -4.0287909507751465
    6. 's' → logprob: -6.2787909507751465
    7. ' ' → logprob: -6.6537909507751465
    8. '(' → logprob: -6.6537909507751465
    9. 'une' → logprob: -6.6537909507751465
    10. 'la' → logprob: -6.9037909507751465

Token 27: ' entrée' (ID: 95590)
  Prédit: ' chaîne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.11106566339731216
    2. 'chaine' → logprob: -3.486065626144409
    3. ' ligne' → logprob: -3.986065626144409
    4. 'entrée' → logprob: -4.236065864562988
    5. 'cha' → logprob: -4.236065864562988
    6. ' chaine' → logprob: -4.486065864562988
    7. 's' → logprob: -5.111065864562988
    8. ' ' → logprob: -6.111065864562988
    9. ' valeur' → logprob: -6.236065864562988
    10. 'ligne' → logprob: -6.236065864562988

Token 28: ' utilisateur' (ID: 115595)
  Prédit: ' utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' utilisateur' → logprob: -0.7627165913581848
    2. ' ' → logprob: -1.01271653175354
    3. '_util' → logprob: -3.38771653175354
    4. '.' → logprob: -4.137716770172119
    5. ' )' → logprob: -4.137716770172119
    6. 'util' → logprob: -4.262716770172119
    7. '()' → logprob: -4.262716770172119
    8. '_' → logprob: -4.762716770172119
    9. ')' → logprob: -4.762716770172119
    10. '  ' → logprob: -5.012716770172119

Token 29: ',' (ID: 11)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.014221916906535625
    2. 'n' → logprob: -5.639222145080566
    3. 'x' → logprob: -5.889222145080566
    4. ',' → logprob: -6.389222145080566
    5. ' y' → logprob: -6.389222145080566
    6. '.' → logprob: -6.889222145080566
    7. '(' → logprob: -7.139222145080566
    8. '#' → logprob: -7.514222145080566
    9. 's' → logprob: -7.764222145080566
    10. '```' → logprob: -8.139222145080566

Token 30: ' qui' (ID: 2780)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.3089998960494995
    2. ' puis' → logprob: -2.184000015258789
    3. 'y' → logprob: -2.434000015258789
    4. ' et' → logprob: -3.434000015258789
    5. ' mais' → logprob: -4.809000015258789
    6. 'et' → logprob: -4.809000015258789
    7. ' qui' → logprob: -5.684000015258789
    8. ' ' → logprob: -6.184000015258789
    9. ' que' → logprob: -6.809000015258789
    10. ',' → logprob: -7.184000015258789

Token 31: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.19348466396331787
    2. ' sera' → logprob: -2.1934847831726074
    3. 'est' → logprob: -4.068484783172607
    4. 's' → logprob: -4.068484783172607
    5. ' doit' → logprob: -4.568484783172607
    6. ' peut' → logprob: -5.068484783172607
    7. ' s' → logprob: -5.193484783172607
    8. 'sera' → logprob: -6.318484783172607
    9. ' n' → logprob: -6.443484783172607
    10. 'ser' → logprob: -7.318484783172607

Token 32: ' une' (ID: 2463)
  Prédit: 'convert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'convert' → logprob: -0.4759195148944855
    2. 'ens' → logprob: -1.975919485092163
    3. ' convert' → logprob: -2.350919485092163
    4. ' ensuite' → logprob: -2.475919485092163
    5. 'transform' → logprob: -4.100919723510742
    6. 'une' → logprob: -4.100919723510742
    7. ' une' → logprob: -5.350919723510742
    8. 'par' → logprob: -6.100919723510742
    9. 'tou' → logprob: -6.100919723510742
    10. 'cast' → logprob: -6.225919723510742

Token 33: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.08537648618221283
    2. 'cha' → logprob: -2.960376501083374
    3. 'chaine' → logprob: -4.085376262664795
    4. ' chaine' → logprob: -4.585376262664795
    5. 'string' → logprob: -6.960376262664795
    6. 's' → logprob: -7.460376262664795
    7. 'str' → logprob: -7.460376262664795
    8. ' string' → logprob: -7.585376262664795
    9. ' ' → logprob: -9.085376739501953
    10. ' cha' → logprob: -9.960376739501953

Token 34: ',' (ID: 11)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.13108983635902405
    2. 'de' → logprob: -2.131089925765991
    3. 'y' → logprob: -7.256089687347412
    4. '.' → logprob: -7.381089687347412
    5. ' y' → logprob: -7.631089687347412
    6. ' ' → logprob: -7.756089687347412
    7. 'vide' → logprob: -7.881089687347412
    8. ',' → logprob: -8.00609016418457
    9. ')' → logprob: -8.38109016418457
    10. ' )' → logprob: -8.50609016418457

Token 35: ' donc' (ID: 14206)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.8167197108268738
    2. ' et' → logprob: -1.5667197704315186
    3. 'y' → logprob: -1.9417197704315186
    4. ' puis' → logprob: -2.0667197704315186
    5. ' mais' → logprob: -3.4417197704315186
    6. '#' → logprob: -4.5667195320129395
    7. 'et' → logprob: -4.8167195320129395
    8. ' #' → logprob: -5.3167195320129395
    9. ' and' → logprob: -5.4417195320129395
    10. ' ' → logprob: -5.6917195320129395

Token 36: ' on' (ID: 402)
  Prédit: ' il'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' il' → logprob: -0.16565462946891785
    2. ' y' → logprob: -3.0406546592712402
    3. ' int' → logprob: -3.1656546592712402
    4. 'int' → logprob: -3.5406546592712402
    5. ' faut' → logprob: -4.79065465927124
    6. 'il' → logprob: -4.91565465927124
    7. ' pour' → logprob: -5.66565465927124
    8. 'y' → logprob: -5.91565465927124
    9. ' on' → logprob: -5.91565465927124
    10. 'n' → logprob: -6.41565465927124

Token 37: ' utilise' (ID: 70283)
  Prédit: ' convert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' convert' → logprob: -0.0997796356678009
    2. 'convert' → logprob: -2.7247796058654785
    3. ' transforme' → logprob: -4.7247796058654785
    4. ' faut' → logprob: -4.8497796058654785
    5. ' doit' → logprob: -5.4747796058654785
    6. ' convertir' → logprob: -6.5997796058654785
    7. ' continue' → logprob: -7.0997796058654785
    8. '.convert' → logprob: -7.2247796058654785
    9. 's' → logprob: -7.3497796058654785
    10. ' ajoute' → logprob: -7.5997796058654785

Token 38: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.5805404186248779
    2. 'int' → logprob: -0.8305404186248779
    3. '`' → logprob: -6.955540657043457
    4. ' la' → logprob: -6.955540657043457
    5. ' ' → logprob: -7.330540657043457
    6. ' ' → logprob: -7.705540657043457
    7. '=int' → logprob: -8.080540657043457
    8. '```' → logprob: -8.080540657043457
    9. 'l' → logprob: -8.830540657043457
    10. ''int' → logprob: -9.205540657043457

Token 39: '()' (ID: 416)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.010660214349627495
    2. '()' → logprob: -5.260660171508789
    3. '(y' → logprob: -5.260660171508789
    4. '('' → logprob: -9.510660171508789
    5. '(input' → logprob: -9.635660171508789
    6. '(
' → logprob: -11.385660171508789
    7. 'y' → logprob: -11.510660171508789
    8. '(x' → logprob: -11.510660171508789
    9. '(...)' → logprob: -11.635660171508789
    10. '(user' → logprob: -12.135660171508789

Token 40: ' pour' (ID: 1930)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006280225235968828
    2. 'y' → logprob: -5.506280422210693
    3. '(y' → logprob: -6.506280422210693
    4. '(
' → logprob: -8.006279945373535
    5. '()' → logprob: -8.506279945373535
    6. ')' → logprob: -9.506279945373535
    7. 's' → logprob: -10.881279945373535
    8. 'def' → logprob: -11.381279945373535
    9. '```' → logprob: -11.881279945373535
    10. '(

' → logprob: -11.881279945373535

Token 41: ' la' (ID: 557)
  Prédit: ' convertir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' convertir' → logprob: -0.007854088209569454
    2. 'convert' → logprob: -5.007853984832764
    3. ' convert' → logprob: -7.132853984832764
    4. 'con' → logprob: -9.007854461669922
    5. ' transformer' → logprob: -9.257854461669922
    6. 'transform' → logprob: -10.132854461669922
    7. ' conversion' → logprob: -11.132854461669922
    8. 'conv' → logprob: -11.382854461669922
    9. 'cast' → logprob: -11.757854461669922
    10. 'converter' → logprob: -12.007854461669922

Token 42: ' convertir' (ID: 79223)
  Prédit: ' convertir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' convertir' → logprob: -0.16660964488983154
    2. 'convert' → logprob: -1.9166096448898315
    3. 'transform' → logprob: -6.666609764099121
    4. 'conversion' → logprob: -6.666609764099121
    5. ' conversion' → logprob: -7.041609764099121
    6. 'int' → logprob: -7.166609764099121
    7. ' convert' → logprob: -7.166609764099121
    8. 'cast' → logprob: -8.041609764099121
    9. 'converter' → logprob: -8.041609764099121
    10. ' transformer' → logprob: -8.291609764099121

Token 43: ' en' (ID: 469)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.47820529341697693
    2. '(' → logprob: -0.9782053232192993
    3. ')' → logprob: -6.10320520401001
    4. ',' → logprob: -7.85320520401001
    5. ' y' → logprob: -7.85320520401001
    6. ' (' → logprob: -8.478205680847168
    7. '(y' → logprob: -8.478205680847168
    8. '.' → logprob: -8.853205680847168
    9. ':' → logprob: -8.978205680847168
    10. '(
' → logprob: -9.603205680847168

Token 44: ' entier' (ID: 80473)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.4104456901550293
    2. ' entier' → logprob: -1.2854456901550293
    3. ' un' → logprob: -3.7854456901550293
    4. ' nombre' → logprob: -4.285445690155029
    5. 'nombre' → logprob: -4.410445690155029
    6. 'un' → logprob: -5.535445690155029
    7. 'int' → logprob: -5.785445690155029
    8. ' int' → logprob: -6.785445690155029
    9. '```' → logprob: -6.785445690155029
    10. ' ' → logprob: -7.160445690155029

Token 45: '.
' (ID: 558)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -1.7432603272027336e-06
    2. 'x' → logprob: -14.375001907348633
    3. ' y' → logprob: -14.750001907348633
    4. '```' → logprob: -14.875001907348633
    5. '#' → logprob: -15.375001907348633
    6. '
' → logprob: -16.750001907348633
    7. 'y's' → logprob: -17.000001907348633
    8. ''y' → logprob: -17.125001907348633
    9. '

' → logprob: -17.250001907348633
    10. 'n' → logprob: -18.750001907348633

Token 46: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -3.128163257315464e-07
    2. '```' → logprob: -15.5
    3. ' y' → logprob: -16.625
    4. 'x' → logprob: -17.375
    5. 'y's' → logprob: -17.75
    6. ''y' → logprob: -18.375
    7. '#' → logprob: -18.75
    8. '\' → logprob: -19.5
    9. '' → logprob: -20.75
    10. '
' → logprob: -20.75

Token 47: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0021876145619899035
    2. '=' → logprob: -6.127187728881836
    3. ' =
' → logprob: -14.502187728881836
    4. ' ' → logprob: -14.502187728881836
    5. ' ' → logprob: -14.502187728881836
    6. ',' → logprob: -15.502187728881836
    7. 'space' → logprob: -15.877187728881836
    8. 'y' → logprob: -16.002187728881836
    9. '.' → logprob: -16.127187728881836
    10. 's' → logprob: -16.252187728881836

Token 48: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.08896520733833313
    2. 'int' → logprob: -2.4639651775360107
    3. ' input' → logprob: -11.21396541595459
    4. 'input' → logprob: -11.71396541595459
    5. ' ' → logprob: -13.58896541595459
    6. '=int' → logprob: -14.33896541595459
    7. ' ' → logprob: -14.33896541595459
    8. '<int' → logprob: -14.46396541595459
    9. '[int' → logprob: -14.58896541595459
    10. '(int' → logprob: -14.96396541595459

Token 49: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12700538337230682
    2. '(input' → logprob: -2.1270053386688232
    3. '(user' → logprob: -10.252005577087402
    4. ' (' → logprob: -11.127005577087402
    5. '('' → logprob: -11.752005577087402
    6. 'input' → logprob: -12.252005577087402
    7. '(
' → logprob: -12.252005577087402
    8. '()' → logprob: -12.252005577087402
    9. '(y' → logprob: -13.002005577087402
    10. '(

' → logprob: -13.752005577087402

Token 50: '())

' (ID: 27654)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.19848313927650452
    2. '('' → logprob: -2.3234832286834717
    3. '()' → logprob: -2.5734832286834717
    4. '())' → logprob: -6.323482990264893
    5. '("' → logprob: -6.323482990264893
    6. '("("' → logprob: -6.323482990264893
    7. '("")' → logprob: -8.94848346710205
    8. '(""))' → logprob: -9.19848346710205
    9. '(()' → logprob: -9.82348346710205
    10. ')' → logprob: -10.19848346710205

Token 51: '#' (ID: 2)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8468177318572998
    2. '+' → logprob: -0.9718177318572998
    3. '#' → logprob: -2.9718177318573
    4. '
' → logprob: -3.4718177318573
    5. 'if' → logprob: -3.7218177318573
    6. 'x' → logprob: -3.9718177318573
    7. 'y' → logprob: -4.221817970275879
    8. '*' → logprob: -4.971817970275879
    9. ' if' → logprob: -5.096817970275879
    10. '+
' → logprob: -5.346817970275879

Token 52: ' On' (ID: 2160)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.010270553641021252
    2. ' if' → logprob: -4.885270595550537
    3. '#' → logprob: -6.010270595550537
    4. 'print' → logprob: -8.885270118713379
    5. 'result' → logprob: -11.260270118713379
    6. 'x' → logprob: -11.260270118713379
    7. 'while' → logprob: -11.260270118713379
    8. 'for' → logprob: -11.760270118713379
    9. 's' → logprob: -12.385270118713379
    10. '```' → logprob: -12.635270118713379

Token 53: ' crée' (ID: 102256)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6043669581413269
    2. '+' → logprob: -1.7293670177459717
    3. 'if' → logprob: -1.9793670177459717
    4. '_' → logprob: -3.1043670177459717
    5. ' y' → logprob: -4.229366779327393
    6. ' ' → logprob: -4.354366779327393
    7. '#' → logprob: -4.854366779327393
    8. ' ajoute' → logprob: -4.979366779327393
    9. ' #' → logprob: -5.104366779327393
    10. ' +' → logprob: -5.229366779327393

Token 54: ' une' (ID: 2463)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.26801255345344543
    2. '(' → logprob: -2.018012523651123
    3. ' (' → logprob: -3.518012523651123
    4. ' une' → logprob: -3.643012523651123
    5. 'une' → logprob: -5.018012523651123
    6. '()' → logprob: -5.268012523651123
    7. ' y' → logprob: -5.518012523651123
    8. ' un' → logprob: -5.768012523651123
    9. '("' → logprob: -5.768012523651123
    10. '('' → logprob: -5.768012523651123

Token 55: ' liste' (ID: 31719)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.5115472078323364
    2. ' espace' → logprob: -1.8865472078323364
    3. 'nombre' → logprob: -2.261547088623047
    4. ' ' → logprob: -2.386547088623047
    5. 's' → logprob: -3.011547088623047
    6. 'a' → logprob: -3.261547088623047
    7. ' facteur' → logprob: -3.511547088623047
    8. 'fact' → logprob: -3.886547088623047
    9. '*' → logprob: -4.011547088623047
    10. 'f' → logprob: -4.011547088623047

Token 56: ' vide' (ID: 21835)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2653718590736389
    2. '[' → logprob: -1.8903717994689941
    3. 'a' → logprob: -3.515371799468994
    4. 's' → logprob: -3.765371799468994
    5. ' =' → logprob: -5.015371799468994
    6. '[]' → logprob: -5.265371799468994
    7. '()' → logprob: -5.890371799468994
    8. '([]' → logprob: -6.265371799468994
    9. 'l' → logprob: -6.640371799468994
    10. ' (' → logprob: -6.765371799468994

Token 57: ' appelée' (ID: 179130)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.5083893537521362
    2. '[' → logprob: -1.8833893537521362
    3. ' ' → logprob: -1.8833893537521362
    4. 's' → logprob: -2.758389472961426
    5. ' []' → logprob: -2.883389472961426
    6. ',' → logprob: -3.133389472961426
    7. ' l' → logprob: -3.133389472961426
    8. 'y' → logprob: -3.508389472961426
    9. ' my' → logprob: -3.508389472961426
    10. '[]' → logprob: -3.758389472961426

Token 58: ' '' (ID: 461)
  Prédit: ' lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lst' → logprob: -0.828869104385376
    2. ' liste' → logprob: -2.078869104385376
    3. ' numbers' → logprob: -2.453869104385376
    4. ' l' → logprob: -3.203869104385376
    5. 'lst' → logprob: -3.203869104385376
    6. ' result' → logprob: -3.578869104385376
    7. 's' → logprob: -3.703869104385376
    8. 'liste' → logprob: -3.703869104385376
    9. ' x' → logprob: -3.828869104385376
    10. ' ma' → logprob: -3.953869104385376

Token 59: 'res' (ID: 430)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lst' → logprob: -1.0367200374603271
    2. 'liste' → logprob: -1.9117200374603271
    3. 'result' → logprob: -2.161720037460327
    4. 'l' → logprob: -2.411720037460327
    5. 'L' → logprob: -2.661720037460327
    6. 'numbers' → logprob: -3.161720037460327
    7. 'ma' → logprob: -3.411720037460327
    8. 'table' → logprob: -4.036720275878906
    9. 'n' → logprob: -4.036720275878906
    10. 's' → logprob: -4.286720275878906

Token 60: '',' (ID: 787)
  Prédit: 'ultat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ultat' → logprob: -0.23659545183181763
    2. 'ult' → logprob: -1.6115953922271729
    3. ''' → logprob: -4.986595630645752
    4. 'ults' → logprob: -6.361595630645752
    5. 'u' → logprob: -6.611595630645752
    6. '')' → logprob: -7.111595630645752
    7. 'ul' → logprob: -9.486595153808594
    8. ' ')' → logprob: -9.611595153808594
    9. ' '' → logprob: -9.861595153808594
    10. '']' → logprob: -10.111595153808594

Token 61: ' qui' (ID: 2780)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.5697604417800903
    2. '[]' → logprob: -1.1947604417800903
    3. ' res' → logprob: -2.944760322570801
    4. 'res' → logprob: -3.569760322570801
    5. ' ' → logprob: -4.069760322570801
    6. '[' → logprob: -4.694760322570801
    7. ' qui' → logprob: -5.444760322570801
    8. ' [' → logprob: -5.694760322570801
    9. ' =' → logprob: -6.444760322570801
    10. ' which' → logprob: -6.694760322570801

Token 62: ' va' (ID: 3423)
  Prédit: ' cont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cont' → logprob: -0.16211043298244476
    2. ' sera' → logprob: -2.7871103286743164
    3. ' va' → logprob: -3.2871103286743164
    4. ' serv' → logprob: -4.037110328674316
    5. 'cont' → logprob: -4.037110328674316
    6. ' contient' → logprob: -5.287110328674316
    7. ' permettra' → logprob: -6.912110328674316
    8. ' stock' → logprob: -7.162110328674316
    9. ' pourra' → logprob: -7.162110328674316
    10. '_cont' → logprob: -7.287110328674316

Token 63: ' servir' (ID: 42557)
  Prédit: ' stock'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stock' → logprob: -0.7957583069801331
    2. ' conten' → logprob: -1.5457582473754883
    3. ' accueillir' → logprob: -1.5457582473754883
    4. ' servir' → logprob: -2.2957582473754883
    5. ' recevoir' → logprob: -4.670758247375488
    6. ' recue' → logprob: -6.170758247375488
    7. 'stock' → logprob: -6.795758247375488
    8. 'acc' → logprob: -6.795758247375488
    9. 'conten' → logprob: -7.045758247375488
    10. ' accue' → logprob: -7.045758247375488

Token 64: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.013570045121014118
    2. 'à' → logprob: -5.3885698318481445
    3. ' ' → logprob: -6.0135698318481445
    4. ' a' → logprob: -6.5135698318481445
    5. ''à' → logprob: -6.8885698318481445
    6. '<|end|>' → logprob: -7.2635698318481445
    7. ' au' → logprob: -7.3885698318481445
    8. 'a' → logprob: -7.7635698318481445
    9. 'au' → logprob: -8.138569831848145
    10. ' as' → logprob: -8.263569831848145

Token 65: ' stock' (ID: 6546)
  Prédit: ' stock'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stock' → logprob: -0.19829869270324707
    2. ' storing' → logprob: -3.448298692703247
    3. ' recue' → logprob: -3.823298692703247
    4. ' almacenar' → logprob: -3.948298692703247
    5. ' recop' → logprob: -4.198298454284668
    6. ' accueillir' → logprob: -4.198298454284668
    7. 'stock' → logprob: -4.198298454284668
    8. ' conten' → logprob: -4.323298454284668
    9. ' armazen' → logprob: -5.073298454284668
    10. ' collect' → logprob: -5.198298454284668

Token 66: 'er' (ID: 259)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -1.0814729928970337
    2. 'ulter' → logprob: -1.0814729928970337
    3. 'uler' → logprob: -1.5814729928970337
    4. 'ult' → logprob: -3.206472873687744
    5. 'er' → logprob: -3.206472873687744
    6. 'ultat' → logprob: -4.581472873687744
    7. 'e' → logprob: -4.831472873687744
    8. 'urer' → logprob: -4.956472873687744
    9. 'ul' → logprob: -5.331472873687744
    10. 'uter' → logprob: -7.581472873687744

Token 67: ' les' (ID: 1341)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.890255331993103
    2. ' ' → logprob: -1.765255331993103
    3. ' []' → logprob: -1.765255331993103
    4. ' les' → logprob: -2.0152554512023926
    5. '[' → logprob: -3.2652554512023926
    6. ' des' → logprob: -3.5152554512023926
    7. 'les' → logprob: -4.390255451202393
    8. 'es' → logprob: -5.265255451202393
    9. 's' → logprob: -5.640255451202393
    10. 'des' → logprob: -5.765255451202393

Token 68: ' résultats' (ID: 48985)
  Prédit: ' nombres'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombres' → logprob: -0.973717987537384
    2. ' résultats' → logprob: -1.0987179279327393
    3. ' ' → logprob: -1.5987179279327393
    4. ' facteurs' → logprob: -4.098718166351318
    5. ' espaces' → logprob: -4.348718166351318
    6. ' résultat' → logprob: -4.723718166351318
    7. ' valeurs' → logprob: -4.723718166351318
    8. 'rés' → logprob: -5.098718166351318
    9. ' éléments' → logprob: -5.348718166351318
    10. ' result' → logprob: -5.723718166351318

Token 69: ' des' (ID: 731)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5624674558639526
    2. ' ' → logprob: -2.062467575073242
    3. '[]' → logprob: -2.437467575073242
    4. ',' → logprob: -2.562467575073242
    5. '<|end|>' → logprob: -2.937467575073242
    6. '[' → logprob: -4.187467575073242
    7. ':' → logprob: -4.562467575073242
    8. 's' → logprob: -4.687467575073242
    9. '```' → logprob: -4.687467575073242
    10. ')' → logprob: -4.937467575073242

Token 70: ' calcul' (ID: 7559)
  Prédit: ' nombres'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nombres' → logprob: -1.1760777235031128
    2. ' ' → logprob: -1.9260777235031128
    3. ' opérations' → logprob: -2.1760778427124023
    4. 'div' → logprob: -2.9260778427124023
    5. ' divisions' → logprob: -2.9260778427124023
    6. ' divis' → logprob: -3.3010778427124023
    7. ' facteurs' → logprob: -3.3010778427124023
    8. ' tests' → logprob: -3.4260778427124023
    9. ' résultats' → logprob: -3.5510778427124023
    10. ' y' → logprob: -3.6760778427124023

Token 71: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.11198876053094864
    2. 'es' → logprob: -2.7369887828826904
    3. 'ations' → logprob: -3.2369887828826904
    4. '#' → logprob: -6.861988544464111
    5. 'ateurs' → logprob: -8.36198902130127
    6. 'atrices' → logprob: -8.48698902130127
    7. 'ais' → logprob: -9.11198902130127
    8. 'os' → logprob: -10.11198902130127
    9. '```' → logprob: -10.23698902130127
    10. 'iques' → logprob: -10.61198902130127

Token 72: ' pour' (ID: 1930)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7769520878791809
    2. 'res' → logprob: -1.1519520282745361
    3. '.' → logprob: -2.401952028274536
    4. ' res' → logprob: -3.776952028274536
    5. '\n' → logprob: -4.026952266693115
    6. '\' → logprob: -4.151952266693115
    7. '<|end|>' → logprob: -4.276952266693115
    8. ' ' → logprob: -4.901952266693115
    9. '' → logprob: -5.026952266693115
    10. '```' → logprob: -5.026952266693115

Token 73: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -1.0646053552627563
    2. ' ' → logprob: -1.3146053552627563
    3. ' les' → logprob: -2.064605236053467
    4. ' i' → logprob: -2.189605236053467
    5. 'les' → logprob: -3.439605236053467
    6. 'i' → logprob: -3.814605236053467
    7. ' la' → logprob: -4.064605236053467
    8. 'le' → logprob: -4.564605236053467
    9. '_' → logprob: -4.814605236053467
    10. ' y' → logprob: -4.939605236053467

Token 74: ' valeur' (ID: 41664)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.868198037147522
    2. 'i' → logprob: -1.243198037147522
    3. ' i' → logprob: -2.2431979179382324
    4. ' nombre' → logprob: -2.7431979179382324
    5. ' nombres' → logprob: -2.7431979179382324
    6. 'nombre' → logprob: -3.8681979179382324
    7. 'n' → logprob: -4.868197917938232
    8. 'élé' → logprob: -5.618197917938232
    9. 'e' → logprob: -6.243197917938232
    10. '  ' → logprob: -6.368197917938232

Token 75: ' possible' (ID: 4149)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.10251210629940033
    2. 'de' → logprob: -3.4775121212005615
    3. ' i' → logprob: -3.6025121212005615
    4. 'i' → logprob: -4.102511882781982
    5. ' ' → logprob: -4.727511882781982
    6. 'x' → logprob: -5.977511882781982
    7. ' x' → logprob: -6.102511882781982
    8. ' y' → logprob: -6.602511882781982
    9. 'y' → logprob: -7.102511882781982
    10. 's' → logprob: -7.102511882781982

Token 76: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.21393342316150665
    2. 'de' → logprob: -1.9639334678649902
    3. 'i' → logprob: -3.9639334678649902
    4. ' i' → logprob: -3.9639334678649902
    5. 'x' → logprob: -4.96393346786499
    6. ' ' → logprob: -5.58893346786499
    7. ' x' → logprob: -6.96393346786499
    8. 'd' → logprob: -8.088932991027832
    9. 'y' → logprob: -8.088932991027832
    10. 'from' → logprob: -8.588932991027832

Token 77: ' i' (ID: 575)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.20217949151992798
    2. ' x' → logprob: -2.327179431915283
    3. 'i' → logprob: -3.202179431915283
    4. ' i' → logprob: -3.952179431915283
    5. 'y' → logprob: -4.952179431915283
    6. ' y' → logprob: -5.202179431915283
    7. ' ' → logprob: -5.452179431915283
    8. 'a' → logprob: -6.077179431915283
    9. '`' → logprob: -6.702179431915283
    10. 'n' → logprob: -6.952179431915283

Token 78: '.
' (ID: 558)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7149340510368347
    2. ' ' → logprob: -1.9649341106414795
    3. ',' → logprob: -2.0899341106414795
    4. ' for' → logprob: -2.4649341106414795
    5. 'for' → logprob: -3.0899341106414795
    6. '<|end|>' → logprob: -3.4649341106414795
    7. '=' → logprob: -3.9649341106414795
    8. ' ranging' → logprob: -4.5899338722229
    9. '
' → logprob: -4.5899338722229
    10. 's' → logprob: -4.9649338722229

Token 79: 'res' (ID: 430)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12332601845264435
    2. 'i' → logprob: -2.873326063156128
    3. 'for' → logprob: -3.248326063156128
    4. ' for' → logprob: -4.998325824737549
    5. '

' → logprob: -5.623325824737549
    6. '```' → logprob: -5.623325824737549
    7. '\n' → logprob: -6.248325824737549
    8. '<|end|>' → logprob: -6.998325824737549
    9. '
' → logprob: -7.123325824737549
    10. ' 
' → logprob: -7.123325824737549

Token 80: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026682715862989426
    2. '=' → logprob: -3.6516826152801514
    3. '.' → logprob: -8.40168285369873
    4. '=[]' → logprob: -9.77668285369873
    5. '.append' → logprob: -9.90168285369873
    6. '[' → logprob: -11.15168285369873
    7. 's' → logprob: -11.65168285369873
    8. ' ' → logprob: -11.77668285369873
    9. ' +=' → logprob: -12.40168285369873
    10. '[]' → logprob: -12.90168285369873

Token 81: ' []

' (ID: 32833)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.011489023454487324
    2. '[]' → logprob: -4.511488914489746
    3. ' [' → logprob: -7.761488914489746
    4. '[' → logprob: -11.511488914489746
    5. ' ' → logprob: -12.761488914489746
    6. ' []
' → logprob: -13.511488914489746
    7. ' []

' → logprob: -15.136488914489746
    8. ' [];' → logprob: -15.386488914489746
    9. ' [[]' → logprob: -15.636488914489746
    10. '[]>' → logprob: -15.886488914489746

Token 82: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.15756787359714508
    2. ' for' → logprob: -2.1575679779052734
    3. '
' → logprob: -3.5325679779052734
    4. '```' → logprob: -8.032567977905273
    5. 'i' → logprob: -8.157567977905273
    6. ' 
' → logprob: -9.032567977905273
    7. '<|end|>' → logprob: -9.657567977905273
    8. '

' → logprob: -9.907567977905273
    9. '\n' → logprob: -10.657567977905273
    10. ' ' → logprob: -11.657567977905273

Token 83: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0007769925869069993
    2. ' for' → logprob: -7.375776767730713
    3. 'i' → logprob: -8.875777244567871
    4. 'f' → logprob: -12.625777244567871
    5. '#' → logprob: -12.875777244567871
    6. '```' → logprob: -13.250777244567871
    7. 'fo' → logprob: -14.375777244567871
    8. 'pour' → logprob: -14.750777244567871
    9. ' i' → logprob: -15.250777244567871
    10. 'Pour' → logprob: -15.250777244567871

Token 84: ' commence' (ID: 44755)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.38930875062942505
    2. 'for' → logprob: -1.1393086910247803
    3. ' ' → logprob: -6.639308929443359
    4. 'a' → logprob: -8.51430892944336
    5. 'r' → logprob: -9.01430892944336
    6. 'e' → logprob: -9.26430892944336
    7. ' a' → logprob: -9.38930892944336
    8. ' va' → logprob: -9.51430892944336
    9. ' souhaite' → logprob: -9.51430892944336
    10. ' veut' → logprob: -9.63930892944336

Token 85: ' une' (ID: 2463)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -1.206916093826294
    2. ' une' → logprob: -1.456916093826294
    3. ' un' → logprob: -1.706916093826294
    4. ' par' → logprob: -2.081916093826294
    5. ' à' → logprob: -2.706916093826294
    6. ' for' → logprob: -3.081916093826294
    7. 'par' → logprob: -4.081915855407715
    8. ' la' → logprob: -4.581915855407715
    9. ' ' → logprob: -5.081915855407715
    10. 'for' → logprob: -5.831915855407715

Token 86: ' boucle' (ID: 174211)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.42781367897987366
    2. ' boucle' → logprob: -1.6778136491775513
    3. 'for' → logprob: -3.052813768386841
    4. '_' → logprob: -3.302813768386841
    5. ' range' → logprob: -4.427813529968262
    6. 'r' → logprob: -4.802813529968262
    7. 'f' → logprob: -5.302813529968262
    8. 'n' → logprob: -5.427813529968262
    9. ' ' → logprob: -5.490313529968262
    10. 'range' → logprob: -5.615313529968262

Token 87: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.04150034487247467
    2. ' ' → logprob: -3.9165003299713135
    3. 'for' → logprob: -4.916500568389893
    4. ' i' → logprob: -5.166500568389893
    5. ' pour' → logprob: -6.166500568389893
    6. ' a' → logprob: -6.541500568389893
    7. ' ```' → logprob: -7.166500568389893
    8. 'i' → logprob: -8.041500091552734
    9. ' à' → logprob: -8.041500091552734
    10. ',' → logprob: -8.166500091552734

Token 88: '.' (ID: 13)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.47665807604789734
    2. ' ' → logprob: -0.9766581058502197
    3. '  ' → logprob: -6.476657867431641
    4. 'i' → logprob: -7.601657867431641
    5. ' y' → logprob: -8.47665786743164
    6. ' a' → logprob: -9.97665786743164
    7. '```' → logprob: -10.60165786743164
    8. ' n' → logprob: -10.72665786743164
    9. ' à' → logprob: -10.85165786743164
    10. ' ' → logprob: -10.97665786743164

Token 89: ' La' (ID: 3038)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5708978176116943
    2. ' i' → logprob: -0.9458978176116943
    3. ' for' → logprob: -3.6958978176116943
    4. 'i' → logprob: -4.070898056030273
    5. 'for' → logprob: -7.320898056030273
    6. ' f' → logprob: -7.445898056030273
    7. ' ```' → logprob: -7.445898056030273
    8. '```' → logprob: -8.070898056030273
    9. ' y' → logprob: -8.195898056030273
    10. ',' → logprob: -8.195898056030273

Token 90: ' variable' (ID: 11076)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.034723542630672455
    2. ' i' → logprob: -3.7847235202789307
    3. 'i' → logprob: -5.15972375869751
    4. 'r' → logprob: -6.28472375869751
    5. '  ' → logprob: -7.15972375869751
    6. ' range' → logprob: -7.40972375869751
    7. ' ' → logprob: -7.53472375869751
    8. ' r' → logprob: -7.78472375869751
    9. ' space' → logprob: -8.284723281860352
    10. 's' → logprob: -8.784723281860352

Token 91: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08044809848070145
    2. ' i' → logprob: -3.0804481506347656
    3. 'i' → logprob: -3.9554481506347656
    4. '  ' → logprob: -4.455448150634766
    5. ' '' → logprob: -8.580448150634766
    6. ' y' → logprob: -9.080448150634766
    7. 'y' → logprob: -9.330448150634766
    8. 's' → logprob: -11.205448150634766
    9. ' "' → logprob: -11.205448150634766
    10. ' ,' → logprob: -11.205448150634766

Token 92: ' boucle' (ID: 174211)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5412779450416565
    2. 'i' → logprob: -1.4162778854370117
    3. ' ' → logprob: -1.7912778854370117
    4. ' range' → logprob: -5.291277885437012
    5. 's' → logprob: -7.041277885437012
    6. ' ' → logprob: -7.291277885437012
    7. '  ' → logprob: -7.666277885437012
    8. 'r' → logprob: -8.166277885437012
    9. 'range' → logprob: -8.791277885437012
    10. '<|end|>' → logprob: -9.291277885437012

Token 93: ' '' (ID: 461)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3570893704891205
    2. ' i' → logprob: -1.3570894002914429
    3. 'i' → logprob: -3.2320892810821533
    4. '  ' → logprob: -5.982089519500732
    5. ' espace' → logprob: -8.732089042663574
    6. ' '' → logprob: -8.857089042663574
    7. ' space' → logprob: -9.232089042663574
    8. 's' → logprob: -10.107089042663574
    9. ' s' → logprob: -10.107089042663574
    10. ',' → logprob: -10.107089042663574

Token 94: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.322489470243454
    2. ' i' → logprob: -1.3224895000457764
    3. ' ' → logprob: -4.697489261627197
    4. '	i' → logprob: -11.447489738464355
    5. ')' → logprob: -11.697489738464355
    6. 's' → logprob: -12.322489738464355
    7. '`' → logprob: -12.322489738464355
    8. ' `' → logprob: -12.447489738464355
    9. 'x' → logprob: -12.447489738464355
    10. 't' → logprob: -13.009989738464355

Token 95: ''' (ID: 6)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1311485767364502
    2. ' ' → logprob: -2.25614857673645
    3. ' '' → logprob: -4.756148338317871
    4. ' i' → logprob: -5.756148338317871
    5. ' range' → logprob: -6.756148338317871
    6. 'in' → logprob: -7.506148338317871
    7. ' e' → logprob: -7.631148338317871
    8. ' a' → logprob: -7.881148338317871
    9. ')' → logprob: -7.881148338317871
    10. ' dans' → logprob: -8.006148338317871

Token 96: ' va' (ID: 3423)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07689269632101059
    2. ' in' → logprob: -2.701892614364624
    3. ' i' → logprob: -6.201892852783203
    4. 'in' → logprob: -6.451892852783203
    5. ' range' → logprob: -7.701892852783203
    6. ',' → logprob: -7.701892852783203
    7. ' a' → logprob: -8.076892852783203
    8. '  ' → logprob: -8.326892852783203
    9. ' for' → logprob: -8.326892852783203
    10. ' dans' → logprob: -8.326892852783203

Token 97: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.11271335184574127
    2. ' range' → logprob: -2.86271333694458
    3. ' in' → logprob: -3.98771333694458
    4. 'r' → logprob: -5.23771333694458
    5. 'range' → logprob: -5.73771333694458
    6. ' i' → logprob: -5.98771333694458
    7. '<|end|>' → logprob: -6.11271333694458
    8. ' a' → logprob: -6.11271333694458
    9. ' s' → logprob: -6.23771333694458
    10. 'i' → logprob: -6.61271333694458

Token 98: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.24211649596691132
    2. '1' → logprob: -2.1171164512634277
    3. '0' → logprob: -2.3671164512634277
    4. '2' → logprob: -7.742116451263428
    5. ' range' → logprob: -8.617116928100586
    6. 'range' → logprob: -8.992116928100586
    7. '3' → logprob: -10.742116928100586
    8. '7' → logprob: -10.867116928100586
    9. '4' → logprob: -11.242116928100586
    10. '6' → logprob: -11.242116928100586

Token 99: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5102620124816895
    2. '1' → logprob: -1.0102620124816895
    3. ' ' → logprob: -3.3852620124816895
    4. '2' → logprob: -7.0102620124816895
    5. 'y' → logprob: -7.7602620124816895
    6. 'range' → logprob: -9.135261535644531
    7. ' y' → logprob: -9.385261535644531
    8. ' range' → logprob: -9.760261535644531
    9. '3' → logprob: -11.572761535644531
    10. '(' → logprob: -11.572761535644531

Token 100: ' jusqu' (ID: 21961)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.28099915385246277
    2. ' ' → logprob: -1.6559991836547852
    3. 'to' → logprob: -3.905999183654785
    4. ' à' → logprob: -3.905999183654785
    5. ' in' → logprob: -5.030999183654785
    6. ' a' → logprob: -6.405999183654785
    7. ' ,' → logprob: -6.530999183654785
    8. ',' → logprob: -6.655999183654785
    9. '<|end|>' → logprob: -7.155999183654785
    10. ' up' → logprob: -7.655999183654785

Token 101: ''à' (ID: 33688)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.049154531210660934
    2. '(y' → logprob: -3.17415452003479
    3. '(i' → logprob: -6.299154758453369
    4. '(n' → logprob: -6.674154758453369
    5. '(a' → logprob: -7.174154758453369
    6. '(x' → logprob: -7.674154758453369
    7. ' (' → logprob: -7.799154758453369
    8. '(q' → logprob: -7.924154758453369
    9. '(u' → logprob: -8.549154281616211
    10. '(z' → logprob: -9.299154281616211

Token 102: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.01143693644553423
    2. 'y' → logprob: -4.511436939239502
    3. ' ' → logprob: -7.886436939239502
    4. ' (' → logprob: -12.386436462402344
    5. '	y' → logprob: -13.136436462402344
    6. ' ' → logprob: -13.136436462402344
    7. '(y' → logprob: -14.011436462402344
    8. '```' → logprob: -14.386436462402344
    9. ''y' → logprob: -14.948936462402344
    10. ' ,' → logprob: -15.073936462402344

Token 103: ' inclus' (ID: 11891)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5926872491836548
    2. '+' → logprob: -1.2176872491836548
    3. ',' → logprob: -2.5926871299743652
    4. ' +' → logprob: -2.9676871299743652
    5. ' (' → logprob: -3.8426871299743652
    6. ' ,' → logprob: -6.467687129974365
    7. '(y' → logprob: -7.592687129974365
    8. ':' → logprob: -7.592687129974365
    9. ' ' → logprob: -7.842687129974365
    10. 'y' → logprob: -8.592687606811523

Token 104: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6750144958496094
    2. ':' → logprob: -0.8000144958496094
    3. ',' → logprob: -3.6750144958496094
    4. ' :' → logprob: -4.800014495849609
    5. ' (' → logprob: -5.800014495849609
    6. '(range' → logprob: -6.175014495849609
    7. ')' → logprob: -7.550014495849609
    8. '.' → logprob: -7.800014495849609
    9. 'range' → logprob: -8.05001449584961
    10. '(y' → logprob: -8.17501449584961

Token 105: 'range' (ID: 20967)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.2602822780609131
    2. 'y' → logprob: -1.510282278060913
    3. ',' → logprob: -5.510282516479492
    4. ' )' → logprob: -6.635282516479492
    5. ')' → logprob: -6.760282516479492
    6. ' ):' → logprob: -8.135282516479492
    7. '):' → logprob: -8.260282516479492
    8. ' ,' → logprob: -8.260282516479492
    9. '(y' → logprob: -8.385282516479492
    10. ' ' → logprob: -8.385282516479492

Token 106: ' commence' (ID: 44755)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -3.5716304410016164e-05
    2. '(y' → logprob: -10.875035285949707
    3. '1' → logprob: -11.125035285949707
    4. ')' → logprob: -13.750035285949707
    5. 'y' → logprob: -15.125035285949707
    6. '(
' → logprob: -15.375035285949707
    7. ' (' → logprob: -16.000036239624023
    8. ')(' → logprob: -16.000036239624023
    9. '(i' → logprob: -16.125036239624023
    10. 's' → logprob: -17.250036239624023

Token 107: ' à' (ID: 1221)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0036891514901071787
    2. '(y' → logprob: -6.628689289093018
    3. ')' → logprob: -7.253689289093018
    4. ',' → logprob: -7.753689289093018
    5. '(
' → logprob: -8.00368881225586
    6. 'y' → logprob: -8.25368881225586
    7. '1' → logprob: -8.37868881225586
    8. ' à' → logprob: -9.62868881225586
    9. '(i' → logprob: -10.12868881225586
    10. 's' → logprob: -10.25368881225586

Token 108: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08245294541120529
    2. 'y' → logprob: -2.9574530124664307
    3. ' ' → logprob: -3.8324530124664307
    4. ' y' → logprob: -5.457452774047852
    5. '(y' → logprob: -7.457452774047852
    6. '(' → logprob: -7.457452774047852
    7. ')' → logprob: -9.457452774047852
    8. '```' → logprob: -11.957452774047852
    9. ' (' → logprob: -12.207452774047852
    10. '	y' → logprob: -12.394952774047852

Token 109: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.12787799537181854
    2. 'y' → logprob: -2.127877950668335
    3. ' y' → logprob: -7.502878189086914
    4. ' ' → logprob: -8.127878189086914
    5. '(y' → logprob: -9.627878189086914
    6. '(' → logprob: -10.627878189086914
    7. ',' → logprob: -13.002878189086914
    8. ')' → logprob: -13.127878189086914
    9. ',y' → logprob: -13.377878189086914
    10. '2' → logprob: -13.627878189086914

Token 110: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000775442982558161
    2. ',y' → logprob: -7.625775337219238
    3. ' ,' → logprob: -8.500775337219238
    4. '(y' → logprob: -11.125775337219238
    5. '),' → logprob: -11.125775337219238
    6. 'y' → logprob: -11.250775337219238
    7. ',
' → logprob: -11.750775337219238
    8. ' y' → logprob: -11.750775337219238
    9. ')' → logprob: -11.875775337219238
    10. '(' → logprob: -12.250775337219238

Token 111: ' finit' (ID: 154258)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.38790231943130493
    2. ' y' → logprob: -1.1379022598266602
    3. ',' → logprob: -7.01290225982666
    4. ' ,' → logprob: -9.51290225982666
    5. ' ' → logprob: -10.63790225982666
    6. ',y' → logprob: -11.63790225982666
    7. '(y' → logprob: -12.01290225982666
    8. ')' → logprob: -12.51290225982666
    9. '	y' → logprob: -12.63790225982666
    10. '```' → logprob: -12.88790225982666

Token 112: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.08374352008104324
    2. ',' → logprob: -3.2087435722351074
    3. ')' → logprob: -4.708743572235107
    4. ' par' → logprob: -4.833743572235107
    5. 'à' → logprob: -5.208743572235107
    6. ' au' → logprob: -5.833743572235107
    7. 'y' → logprob: -6.458743572235107
    8. 'e' → logprob: -6.458743572235107
    9. ' ,' → logprob: -6.583743572235107
    10. ' ' → logprob: -6.583743572235107

Token 113: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.07892481982707977
    2. 'y' → logprob: -2.5789248943328857
    3. '(y' → logprob: -10.703925132751465
    4. '	y' → logprob: -12.203925132751465
    5. ' ' → logprob: -12.703925132751465
    6. ' (' → logprob: -13.453925132751465
    7. '(' → logprob: -14.328925132751465
    8. ''y' → logprob: -14.453925132751465
    9. ' ' → logprob: -15.203925132751465
    10. ')y' → logprob: -15.203925132751465

Token 114: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3869537115097046
    2. ' +' → logprob: -1.1369537115097046
    3. ',' → logprob: -9.886953353881836
    4. ')' → logprob: -11.761953353881836
    5. '+y' → logprob: -11.761953353881836
    6. ' ' → logprob: -12.386953353881836
    7. ' ,' → logprob: -12.761953353881836
    8. ' plus' → logprob: -12.886953353881836
    9. 'y' → logprob: -13.761953353881836
    10. '+)' → logprob: -14.011953353881836

Token 115: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.660315895918757e-05
    2. ' ' → logprob: -9.500076293945312
    3. ')' → logprob: -13.875076293945312
    4. '```' → logprob: -15.000076293945312
    5. 'y' → logprob: -16.125076293945312
    6. '

' → logprob: -17.312576293945312
    7. '2' → logprob: -17.437576293945312
    8. '   ' → logprob: -17.500076293945312
    9. ' y' → logprob: -17.562576293945312
    10. '  ' → logprob: -17.625076293945312

Token 116: ' car' (ID: 1669)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.057335298508405685
    2. '):' → logprob: -2.932335376739502
    3. '))' → logprob: -6.557335376739502
    4. ')):' → logprob: -7.932335376739502
    5. ',' → logprob: -8.307334899902344
    6. ' )' → logprob: -8.682334899902344
    7. ' ):' → logprob: -9.932334899902344
    8. '):
' → logprob: -9.932334899902344
    9. ').' → logprob: -10.182334899902344
    10. '),' → logprob: -10.682334899902344

Token 117: ' le' (ID: 505)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.07894409447908401
    2. 'y' → logprob: -2.578944206237793
    3. '(y' → logprob: -10.453944206237793
    4. ')' → logprob: -11.453944206237793
    5. ' )' → logprob: -12.703944206237793
    6. '```' → logprob: -12.953944206237793
    7. ' ),' → logprob: -13.203944206237793
    8. '	y' → logprob: -13.453944206237793
    9. ',' → logprob: -13.828944206237793
    10. ')y' → logprob: -13.953944206237793

Token 118: ' deuxième' (ID: 51664)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.4946412742137909
    2. 'y' → logprob: -1.1196413040161133
    3. ' ' → logprob: -3.6196413040161133
    4. ')' → logprob: -4.244641304016113
    5. ' )' → logprob: -4.744641304016113
    6. ' range' → logprob: -5.619641304016113
    7. 'range' → logprob: -6.244641304016113
    8. ' end' → logprob: -6.744641304016113
    9. ' stop' → logprob: -6.869641304016113
    10. 'end' → logprob: -7.369641304016113

Token 119: ' argument' (ID: 10383)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07942891120910645
    2. ',' → logprob: -3.3294289112091064
    3. ' )' → logprob: -3.3294289112091064
    4. ' ,' → logprob: -6.079428672790527
    5. ' ' → logprob: -6.829428672790527
    6. ' argument' → logprob: -7.579428672790527
    7. 'argument' → logprob: -8.454428672790527
    8. ' parameter' → logprob: -9.204428672790527
    9. '),' → logprob: -9.454428672790527
    10. ' ),' → logprob: -10.079428672790527

Token 120: ' n' (ID: 297)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3493991196155548
    2. ',' → logprob: -1.9743990898132324
    3. ' y' → logprob: -2.5993990898132324
    4. ' est' → logprob: -3.2243990898132324
    5. ' )' → logprob: -3.7243990898132324
    6. ' ,' → logprob: -4.849399089813232
    7. 'y' → logprob: -5.849399089813232
    8. ' is' → logprob: -6.224399089813232
    9. ',y' → logprob: -6.724399089813232
    10. '),' → logprob: -7.099399089813232

Token 121: ''est' (ID: 6616)
  Prédit: ''est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''est' → logprob: -0.7939314842224121
    2. '+' → logprob: -2.168931484222412
    3. ' est' → logprob: -2.168931484222412
    4. ')' → logprob: -2.418931484222412
    5. '=' → logprob: -2.543931484222412
    6. 'est' → logprob: -3.293931484222412
    7. '<|end|>' → logprob: -3.543931484222412
    8. '’est' → logprob: -4.543931484222412
    9. ' =' → logprob: -4.793931484222412
    10. ' is' → logprob: -4.918931484222412

Token 122: ' pas' (ID: 2173)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -1.1843491792678833
    2. 'exclusive' → logprob: -1.4343491792678833
    3. 'ex' → logprob: -1.8093491792678833
    4. 'pas' → logprob: -1.9343491792678833
    5. ' y' → logprob: -2.5593490600585938
    6. ' exclus' → logprob: -3.6843490600585938
    7. ' pas' → logprob: -3.8093490600585938
    8. ' exclusive' → logprob: -4.809349060058594
    9. ' excl' → logprob: -6.059349060058594
    10. ' jamais' → logprob: -6.309349060058594

Token 123: ' inclus' (ID: 11891)
  Prédit: ' inclus'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' inclus' → logprob: -0.378824919462204
    2. 'inclusive' → logprob: -1.8788249492645264
    3. 'incl' → logprob: -2.1288249492645264
    4. 'included' → logprob: -4.378824710845947
    5. ' compris' → logprob: -4.753824710845947
    6. 'f' → logprob: -5.253824710845947
    7. 'exclusive' → logprob: -5.378824710845947
    8. ' incl' → logprob: -5.628824710845947
    9. 'in' → logprob: -5.878824710845947
    10. ' inclusive' → logprob: -6.253824710845947

Token 124: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.021640487015247345
    2. ',' → logprob: -4.271640300750732
    3. ').' → logprob: -5.521640300750732
    4. '):' → logprob: -6.271640300750732
    5. '):
' → logprob: -8.02164077758789
    6. ' )' → logprob: -8.27164077758789
    7. '),' → logprob: -8.27164077758789
    8. 'y' → logprob: -9.02164077758789
    9. '))' → logprob: -9.14664077758789
    10. ' ,' → logprob: -9.39664077758789

Token 125: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4407188892364502
    2. ' for' → logprob: -1.0657188892364502
    3. 'range' → logprob: -6.065718650817871
    4. '
' → logprob: -6.190718650817871
    5. ' 
' → logprob: -6.440718650817871
    6. '(range' → logprob: -6.565718650817871
    7. 'i' → logprob: -6.940718650817871
    8. '(' → logprob: -7.440718650817871
    9. ' range' → logprob: -8.065718650817871
    10. ' in' → logprob: -8.065718650817871

Token 126: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.2521194815635681
    2. ' ' → logprob: -1.502119541168213
    3. 'i' → logprob: -8.752119064331055
    4. ' ' → logprob: -10.752119064331055
    5. '  ' → logprob: -12.002119064331055
    6. ' ‌' → logprob: -12.752119064331055
    7. '	i' → logprob: -14.627119064331055
    8. '```' → logprob: -15.002119064331055
    9. ' y' → logprob: -15.252119064331055
    10. ' space' → logprob: -15.502119064331055

Token 127: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.001995131839066744
    2. 'in' → logprob: -6.626995086669922
    3. ' ' → logprob: -7.376995086669922
    4. ' i' → logprob: -11.001995086669922
    5. '  ' → logprob: -12.376995086669922
    6. '1' → logprob: -12.439495086669922
    7. ')' → logprob: -13.189495086669922
    8. ' y' → logprob: -13.376995086669922
    9. 'n' → logprob: -13.439495086669922
    10. '```' → logprob: -13.564495086669922

Token 128: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.10023945569992065
    2. 'range' → logprob: -2.3502395153045654
    3. ' ' → logprob: -10.600239753723145
    4. '(range' → logprob: -12.600239753723145
    5. '1' → logprob: -12.975239753723145
    6. ' y' → logprob: -13.725239753723145
    7. '	range' → logprob: -14.725239753723145
    8. '(' → logprob: -15.725239753723145
    9. '```' → logprob: -15.850239753723145
    10. '  ' → logprob: -16.475238800048828

Token 129: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.9361264946837764e-07
    2. ' (' → logprob: -16.5
    3. '(
' → logprob: -17.5
    4. '1' → logprob: -19.125
    5. '(i' → logprob: -20.0
    6. '((' → logprob: -21.625
    7. '```' → logprob: -21.875
    8. ')(' → logprob: -22.375
    9. 'y' → logprob: -23.0
    10. ')' → logprob: -23.125

Token 130: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.141186450899113e-05
    2. ' ' → logprob: -11.500020980834961
    3. '(' → logprob: -12.000020980834961
    4. 'y' → logprob: -12.250020980834961
    5. ')' → logprob: -16.75002098083496
    6. '   ' → logprob: -16.87502098083496
    7. ' y' → logprob: -17.37502098083496
    8. '(y' → logprob: -17.37502098083496
    9. '2' → logprob: -17.62502098083496
    10. ',' → logprob: -17.75002098083496

Token 131: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05753767117857933
    2. '(y' → logprob: -3.68253755569458
    3. ',y' → logprob: -3.93253755569458
    4. ' ,' → logprob: -5.18253755569458
    5. '(' → logprob: -5.30753755569458
    6. 'y' → logprob: -8.307538032531738
    7. ' (' → logprob: -8.932538032531738
    8. ',(' → logprob: -9.057538032531738
    9. ' y' → logprob: -9.557538032531738
    10. ')' → logprob: -12.307538032531738

Token 132: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.575939953327179
    2. 'y' → logprob: -0.825939953327179
    3. '	y' → logprob: -15.075940132141113
    4. '(y' → logprob: -16.700939178466797
    5. ')' → logprob: -16.950939178466797
    6. ')y' → logprob: -17.075939178466797
    7. '   ' → logprob: -17.200939178466797
    8. '```' → logprob: -17.450939178466797
    9. ' ' → logprob: -17.700939178466797
    10. ' ' → logprob: -18.450939178466797

Token 133: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.02975071594119072
    2. ' +' → logprob: -3.5297508239746094
    3. '+
' → logprob: -15.77975082397461
    4. ')' → logprob: -17.52975082397461
    5. ' +
' → logprob: -17.52975082397461
    6. ' ' → logprob: -17.90475082397461
    7. ')+' → logprob: -18.02975082397461
    8. '+)' → logprob: -18.15475082397461
    9. '()+' → logprob: -18.40475082397461
    10. '1' → logprob: -18.52975082397461

Token 134: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00026169343618676066
    2. ' ' → logprob: -8.250261306762695
    3. '```' → logprob: -15.625261306762695
    4. '   ' → logprob: -16.000261306762695
    5. '2' → logprob: -16.250261306762695
    6. ')' → logprob: -17.500261306762695
    7. '  ' → logprob: -19.625261306762695
    8. '`' → logprob: -19.625261306762695
    9. '۱' → logprob: -20.125261306762695
    10. '):
' → logprob: -20.125261306762695

Token 135: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.8889261304575484e-06
    2. ' ' → logprob: -12.500003814697266
    3. '```' → logprob: -15.875003814697266
    4. '2' → logprob: -17.375003814697266
    5. ')' → logprob: -18.125003814697266
    6. '   ' → logprob: -18.375003814697266
    7. '
' → logprob: -20.000003814697266
    8. '۱' → logprob: -20.250003814697266
    9. '``' → logprob: -20.500003814697266
    10. '`' → logprob: -20.625003814697266

Token 136: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0003961185284424573
    2. ')' → logprob: -8.125395774841309
    3. ':' → logprob: -9.375395774841309
    4. '):
' → logprob: -11.250395774841309
    5. ' ):' → logprob: -13.250395774841309
    6. ',' → logprob: -15.875395774841309
    7. '():' → logprob: -16.750396728515625
    8. '):
' → logprob: -17.000396728515625
    9. '):

' → logprob: -17.375396728515625
    10. '),' → logprob: -18.000396728515625

Token 137: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6947144865989685
    2. '   ' → logprob: -1.4447145462036133
    3. ' ' → logprob: -1.8197145462036133
    4. ' :' → logprob: -2.4447145462036133
    5. ' 
' → logprob: -5.944714546203613
    6. ')' → logprob: -6.069714546203613
    7. '    
' → logprob: -6.194714546203613
    8. '  ' → logprob: -6.194714546203613
    9. '    ' → logprob: -6.694714546203613
    10. ' :
' → logprob: -6.819714546203613

Token 138: ' #' (ID: 1069)
  Prédit: ' res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.651512622833252
    2. 'res' → logprob: -1.651512622833252
    3. ' if' → logprob: -2.526512622833252
    4. ' ' → logprob: -2.651512622833252
    5. ' 
' → logprob: -2.651512622833252
    6. 'if' → logprob: -4.151512622833252
    7. '   ' → logprob: -4.401512622833252
    8. '#' (adapté à ' #') → logprob: -4.651512622833252
    9. '    
' → logprob: -5.276512622833252
    10. 'r' → logprob: -5.526512622833252

Token 139: ' On' (ID: 2160)
  Prédit: ' res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.778304398059845
    2. 'res' → logprob: -1.1533043384552002
    3. ' if' → logprob: -1.7783043384552002
    4. 'if' → logprob: -3.1533043384552
    5. ' ' → logprob: -5.403304576873779
    6. ' for' → logprob: -6.028304576873779
    7. '   ' → logprob: -6.403304576873779
    8. 's' → logprob: -6.528304576873779
    9. 'for' → logprob: -7.153304576873779
    10. 'space' → logprob: -8.028304100036621

Token 140: ' initialise' (ID: 145250)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.024300217628479
    2. ' res' → logprob: -1.274300217628479
    3. ' if' → logprob: -1.399300217628479
    4. '   ' → logprob: -3.3993000984191895
    5. 'if' → logprob: -3.7743000984191895
    6. 'res' → logprob: -3.8993000984191895
    7. ' #' → logprob: -3.8993000984191895
    8. 's' → logprob: -5.5243000984191895
    9. '#' → logprob: -6.0243000984191895
    10. '    ' → logprob: -6.1493000984191895

Token 141: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -1.1062474250793457
    2. 'un' → logprob: -1.6062474250793457
    3. ' une' → logprob: -2.2312474250793457
    4. 'j' → logprob: -2.4812474250793457
    5. ' j' → logprob: -3.2312474250793457
    6. 's' → logprob: -3.3562474250793457
    7. '   ' → logprob: -3.6062474250793457
    8. 'res' → logprob: -3.7312474250793457
    9. ' la' → logprob: -3.8562474250793457
    10. ' s' → logprob: -4.231247425079346

Token 142: ' compteur' (ID: 163344)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7274448275566101
    2. ' espace' → logprob: -1.9774448871612549
    3. 's' → logprob: -2.477444887161255
    4. 'es' → logprob: -2.977444887161255
    5. '_' → logprob: -3.102444887161255
    6. ' compteur' → logprob: -3.727444887161255
    7. 'j' → logprob: -4.227444648742676
    8. ' t' → logprob: -4.227444648742676
    9. '=' → logprob: -4.727444648742676
    10. 'fact' → logprob: -4.852444648742676

Token 143: ' '' (ID: 461)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.354143500328064
    2. '=' → logprob: -1.604143500328064
    3. '   ' → logprob: -1.604143500328064
    4. ' j' → logprob: -1.729143500328064
    5. 's' → logprob: -3.4791436195373535
    6. 'count' → logprob: -3.6041436195373535
    7. 'j' → logprob: -3.7291436195373535
    8. ' ' → logprob: -4.7291436195373535
    9. 'c' → logprob: -4.8541436195373535
    10. '    ' → logprob: -4.8541436195373535

Token 144: 'cnt' (ID: 33160)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.49801623821258545
    2. 'c' → logprob: -1.7480162382125854
    3. 'fact' → logprob: -2.373016357421875
    4. 's' → logprob: -3.498016357421875
    5. 'comp' → logprob: -3.623016357421875
    6. 'j' → logprob: -3.998016357421875
    7. 'counter' → logprob: -4.498016357421875
    8. 'cnt' → logprob: -4.873016357421875
    9. 'res' → logprob: -4.998016357421875
    10. 'factor' → logprob: -5.373016357421875

Token 145: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.11029919236898422
    2. ' =' → logprob: -2.4852991104125977
    3. ' '' → logprob: -4.235299110412598
    4. ' ='' → logprob: -5.860299110412598
    5. '=' → logprob: -6.360299110412598
    6. ' ' → logprob: -6.860299110412598
    7. '')' → logprob: -8.860299110412598
    8. '='' → logprob: -8.860299110412598
    9. '   ' → logprob: -8.985299110412598
    10. ''''' → logprob: -8.985299110412598

Token 146: ' à' (ID: 1221)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.041527215391397476
    2. '=' → logprob: -3.291527271270752
    3. '   ' → logprob: -5.916527271270752
    4. ' ' → logprob: -7.791527271270752
    5. '    ' → logprob: -8.791526794433594
    6. '<|end|>' → logprob: -8.916526794433594
    7. ',' → logprob: -10.291526794433594
    8. '  ' → logprob: -11.416526794433594
    9. ')' → logprob: -12.041526794433594
    10. ' to' → logprob: -12.291526794433594

Token 147: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01988685317337513
    2. ' ' → logprob: -4.2698869705200195
    3. 'i' → logprob: -5.7698869705200195
    4. ' i' → logprob: -6.3948869705200195
    5. '1' → logprob: -7.0198869705200195
    6. '2' → logprob: -12.14488697052002
    7. '  ' → logprob: -13.01988697052002
    8. '10' → logprob: -13.39488697052002
    9. 'y' → logprob: -13.45738697052002
    10. '   ' → logprob: -13.64488697052002

Token 148: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005232340656220913
    2. 'i' → logprob: -5.505232334136963
    3. '1' → logprob: -7.005232334136963
    4. ' ' → logprob: -8.630232810974121
    5. ' i' → logprob: -10.130232810974121
    6. '2' → logprob: -11.380232810974121
    7. '10' → logprob: -12.755232810974121
    8. 'y' → logprob: -13.005232810974121
    9. '3' → logprob: -13.380232810974121
    10. '5' → logprob: -13.505232810974121

Token 149: '.' (ID: 13)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11581872403621674
    2. ' ' → logprob: -2.990818738937378
    3. '<|end|>' → logprob: -3.615818738937378
    4. ',' → logprob: -4.740818500518799
    5. '    ' → logprob: -4.990818500518799
    6. ':' → logprob: -5.115818500518799
    7. '  ' → logprob: -5.365818500518799
    8. '    
' → logprob: -5.990818500518799
    9. ')' → logprob: -6.865818500518799
    10. '
' → logprob: -7.490818500518799

Token 150: ' Il' (ID: 5329)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47687986493110657
    2. ' ' → logprob: -1.1018798351287842
    3. ' 
' → logprob: -4.476880073547363
    4. '  ' → logprob: -4.601880073547363
    5. '    
' → logprob: -4.726880073547363
    6. '    ' → logprob: -5.101880073547363
    7. 'c' → logprob: -5.851880073547363
    8. '   
' → logprob: -5.851880073547363
    9. '  
' → logprob: -6.601880073547363
    10. '     
' → logprob: -6.851880073547363

Token 151: ' va' (ID: 3423)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 152: ' stock' (ID: 6546)
  Prédit: ' compter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' compter' → logprob: -0.9730029106140137
    2. '   ' → logprob: -1.4730029106140137
    3. ' ' → logprob: -1.5980029106140137
    4. ' =' → logprob: -3.0980029106140137
    5. '=' → logprob: -3.2230029106140137
    6. ' s' → logprob: -3.4730029106140137
    7. '    ' → logprob: -4.098002910614014
    8. '  ' → logprob: -4.473002910614014
    9. ' compt' → logprob: -4.848002910614014
    10. 'count' → logprob: -5.348002910614014

Token 153: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.015851235017180443
    2. 'e' → logprob: -4.265851020812988
    3. 'érer' → logprob: -6.640851020812988
    4. 'é' → logprob: -8.890851020812988
    5. '=' → logprob: -9.015851020812988
    6. 'uler' → logprob: -10.390851020812988
    7. ' ' → logprob: -11.140851020812988
    8. '   ' → logprob: -11.265851020812988
    9. 'r' → logprob: -11.765851020812988
    10. ' =' → logprob: -11.890851020812988

Token 154: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.37279877066612244
    2. '<|end|>' → logprob: -1.8727988004684448
    3. ' les' → logprob: -2.9977986812591553
    4. 'le' → logprob: -3.3727986812591553
    5. ' la' → logprob: -3.6227986812591553
    6. ' l' → logprob: -4.372798919677734
    7. ' ' → logprob: -4.872798919677734
    8. '  ' → logprob: -5.622798919677734
    9. 'the' → logprob: -5.622798919677734
    10. ' the' → logprob: -5.747798919677734

Token 155: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.038818225264549255
    2. ' nombre' → logprob: -3.288818120956421
    3. 'n' → logprob: -7.663818359375
    4. 'nb' → logprob: -8.913818359375
    5. 'nbr' → logprob: -10.038818359375
    6. 's' → logprob: -10.288818359375
    7. 'multip' → logprob: -11.538818359375
    8. 'c' → logprob: -11.663818359375
    9. ' ' → logprob: -11.788818359375
    10. ' nombres' → logprob: -11.913818359375

Token 156: ' total' (ID: 3609)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.9988172054290771
    2. '    ' → logprob: -1.1238172054290771
    3. ' d' → logprob: -1.8738172054290771
    4. ' ' → logprob: -2.498817205429077
    5. ' des' → logprob: -3.373817205429077
    6. '   ' → logprob: -4.123817443847656
    7. '  ' → logprob: -5.123817443847656
    8. 'd' → logprob: -5.873817443847656
    9. ' of' → logprob: -6.248817443847656
    10. 'de' → logprob: -6.373817443847656

Token 157: ' d' (ID: 272)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.6822712421417236
    2. ' d' → logprob: -1.5572712421417236
    3. '<|end|>' → logprob: -1.9322712421417236
    4. ' de' → logprob: -2.8072712421417236
    5. ' ' → logprob: -3.4322712421417236
    6. '    ' → logprob: -3.6822712421417236
    7. 'd' → logprob: -5.5572710037231445
    8. '  ' → logprob: -5.8072710037231445
    9. 'de' → logprob: -5.9322710037231445
    10. '   ' → logprob: -6.1822710037231445

Token 158: ''op' (ID: 70747)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2058321088552475
    2. ' espaces' → logprob: -3.080832004547119
    3. 'div' → logprob: -3.330832004547119
    4. ' divis' → logprob: -3.830832004547119
    5. '   ' → logprob: -4.330832004547119
    6. '  ' → logprob: -4.580832004547119
    7. '_' → logprob: -4.955832004547119
    8. ' div' → logprob: -5.080832004547119
    9. ' a' → logprob: -5.205832004547119
    10. '    ' → logprob: -5.580832004547119

Token 159: 'érations' (ID: 152860)
  Prédit: 'érations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érations' → logprob: -0.01954006217420101
    2. 'ér' → logprob: -4.644539833068848
    3. 'curr' → logprob: -5.644539833068848
    4. 'é' → logprob: -6.144539833068848
    5. 'ération' → logprob: -6.769539833068848
    6. 'c' → logprob: -7.269539833068848
    7. 'er' → logprob: -8.019539833068848
    8. 'érences' → logprob: -8.269539833068848
    9. 'cur' → logprob: -8.394539833068848
    10. 'éc' → logprob: -9.019539833068848

Token 160: ' minim' (ID: 23874)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5924707651138306
    2. '    ' → logprob: -2.092470645904541
    3. '   ' → logprob: -2.217470645904541
    4. '+' → logprob: -2.717470645904541
    5. '*' → logprob: -3.592470645904541
    6. '(' → logprob: -3.842470645904541
    7. '=' → logprob: -4.092470645904541
    8. ' =' → logprob: -4.092470645904541
    9. ' performed' → logprob: -4.592470645904541
    10. ' effectu' → logprob: -4.592470645904541

Token 161: 'ales' (ID: 3459)
  Prédit: 'ales'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ales' → logprob: -0.009856783784925938
    2. 'isées' → logprob: -4.759856700897217
    3. 'aux' → logprob: -7.884856700897217
    4. 'um' → logprob: -8.009857177734375
    5. 'al' → logprob: -9.384857177734375
    6. 'is' → logprob: -9.384857177734375
    7. '```' → logprob: -9.509857177734375
    8. 'alis' → logprob: -9.509857177734375
    9. 'i' → logprob: -10.259857177734375
    10. 'a' → logprob: -10.259857177734375

Token 162: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2282898426055908
    2. ' nécessaires' → logprob: -1.2282898426055908
    3. ' ' → logprob: -1.8532898426055908
    4. '    ' → logprob: -2.103289842605591
    5. '  ' → logprob: -3.728289842605591
    6. ' nécessaire' → logprob: -3.978289842605591
    7. '.' → logprob: -4.228289604187012
    8. ' pour' → logprob: -4.228289604187012
    9. ',' → logprob: -4.353289604187012
    10. ' ,' → logprob: -5.478289604187012

Token 163: ' représ' (ID: 31534)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4432632625102997
    2. ' i' → logprob: -1.068263292312622
    3. ' ' → logprob: -4.443263053894043
    4. '   ' → logprob: -7.693263053894043
    5. '  ' → logprob: -7.943263053894043
    6. '(i' → logprob: -7.943263053894043
    7. ' les' → logprob: -8.443263053894043
    8. 'l' → logprob: -8.568263053894043
    9. ' la' → logprob: -9.068263053894043
    10. ' le' → logprob: -9.318263053894043

Token 164: 'enter' (ID: 3547)
  Prédit: 'és'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.7208799123764038
    2. 'é' → logprob: -2.0958800315856934
    3. 'enter' → logprob: -2.2208800315856934
    4. 'éter' → logprob: -2.3458800315856934
    5. 'érer' → logprob: -3.0958800315856934
    6. 'eser' → logprob: -3.4708800315856934
    7. 'enser' → logprob: -3.4708800315856934
    8. 'ent' → logprob: -3.5958800315856934
    9. 'resenter' → logprob: -3.9708800315856934
    10. 'endre' → logprob: -4.845880031585693

Token 165: ' '' (ID: 461)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.08743000030517578
    2. ' y' → logprob: -2.962430000305176
    3. 'i' → logprob: -3.962430000305176
    4. ' ' → logprob: -4.462430000305176
    5. 'y' → logprob: -7.337430000305176
    6. ' le' → logprob: -8.837430000305176
    7. ' la' → logprob: -8.837430000305176
    8. ' l' → logprob: -9.212430000305176
    9. '  ' → logprob: -9.774930000305176
    10. ' ' → logprob: -9.774930000305176

Token 166: 'y' (ID: 88)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.06519310176372528
    2. 'i' → logprob: -2.8151931762695312
    3. ' ' → logprob: -5.940193176269531
    4. ' y' → logprob: -7.940193176269531
    5. ' '' → logprob: -9.315193176269531
    6. 'y' → logprob: -10.065193176269531
    7. ''' → logprob: -11.065193176269531
    8. ''i' → logprob: -11.065193176269531
    9. '	i' → logprob: -11.690193176269531
    10. ' ' → logprob: -11.690193176269531

Token 167: ''' (ID: 6)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.46490055322647095
    2. ' ' → logprob: -2.089900493621826
    3. ')' → logprob: -2.589900493621826
    4. '   ' → logprob: -2.839900493621826
    5. ' )' → logprob: -3.964900493621826
    6. ' avec' → logprob: -4.214900493621826
    7. '')' → logprob: -4.464900493621826
    8. ' //' → logprob: -5.214900493621826
    9. ' par' → logprob: -5.214900493621826
    10. ',' → logprob: -5.464900493621826

Token 168: ' en' (ID: 469)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07023651152849197
    2. ' ' → logprob: -3.6952364444732666
    3. '  ' → logprob: -4.570236682891846
    4. '    ' → logprob: -4.820236682891846
    5. '+' → logprob: -5.070236682891846
    6. ',' → logprob: -5.695236682891846
    7. ' +' → logprob: -6.070236682891846
    8. ' =' → logprob: -6.070236682891846
    9. '<|end|>' → logprob: -6.445236682891846
    10. '.' → logprob: -6.695236682891846

Token 169: ' utilisant' (ID: 92474)
  Prédit: ' utilisant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' utilisant' → logprob: -0.9610764980316162
    2. ' i' → logprob: -1.3360764980316162
    3. 'i' → logprob: -2.336076498031616
    4. 'addition' → logprob: -2.836076498031616
    5. 'multip' → logprob: -3.086076498031616
    6. ' addition' → logprob: -3.586076498031616
    7. ' multip' → logprob: -3.961076498031616
    8. 'div' → logprob: -3.961076498031616
    9. 's' → logprob: -4.086076736450195
    10. ' termes' → logprob: -4.586076736450195

Token 170: ' ' (ID: 220)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.04453910142183304
    2. 'i' → logprob: -4.169538974761963
    3. ' ' → logprob: -4.544538974761963
    4. ' des' → logprob: -4.669538974761963
    5. ' les' → logprob: -5.919538974761963
    6. ' '' → logprob: -6.544538974761963
    7. ' une' → logprob: -7.794538974761963
    8. ' deux' → logprob: -7.919538974761963
    9. ' la' → logprob: -7.982038974761963
    10. ' `' → logprob: -8.044539451599121

Token 171: '9' (ID: 24)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.27073168754577637
    2. 'i' → logprob: -1.5207316875457764
    3. ' des' → logprob: -4.6457319259643555
    4. ' les' → logprob: -5.5207319259643555
    5. ' ' → logprob: -6.5207319259643555
    6. ' la' → logprob: -7.1457319259643555
    7. ' l' → logprob: -7.5207319259643555
    8. ' '' → logprob: -7.7707319259643555
    9. 'les' → logprob: -8.395731925964355
    10. 'l' → logprob: -8.770731925964355

Token 172: '^' (ID: 61)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3440166115760803
    2. ')' → logprob: -2.8440165519714355
    3. '+' → logprob: -2.8440165519714355
    4. ' )' → logprob: -2.9690165519714355
    5. '   ' → logprob: -3.4690165519714355
    6. '    ' → logprob: -3.8440165519714355
    7. ' +' → logprob: -3.9690165519714355
    8. '9' → logprob: -4.3440165519714355
    9. '  ' → logprob: -4.3440165519714355
    10. ' *' → logprob: -5.5940165519714355

Token 173: 'j' (ID: 73)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3016834855079651
    2. '2' → logprob: -1.6766834259033203
    3. ' i' → logprob: -2.9266834259033203
    4. ' ' → logprob: -4.67668342590332
    5. '3' → logprob: -5.05168342590332
    6. '9' → logprob: -6.92668342590332
    7. '1' → logprob: -7.67668342590332
    8. ')' → logprob: -7.80168342590332
    9. '0' → logprob: -7.80168342590332
    10. 'j' → logprob: -7.92668342590332

Token 174: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3601016104221344
    2. ' ' → logprob: -2.6101016998291016
    3. ',' → logprob: -2.7351016998291016
    4. '  ' → logprob: -3.4851016998291016
    5. '.' → logprob: -3.4851016998291016
    6. ' for' → logprob: -3.6101016998291016
    7. '<|end|>' → logprob: -4.235101699829102
    8. ')' → logprob: -4.610101699829102
    9. '    ' → logprob: -4.610101699829102
    10. '+' → logprob: -5.235101699829102

Token 175: ' ' (ID: 220)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6492827534675598
    2. 'i' → logprob: -1.149282693862915
    3. ' ' → logprob: -2.149282693862915
    4. '2' → logprob: -3.774282693862915
    5. '3' → logprob: -4.774282932281494
    6. '9' → logprob: -5.774282932281494
    7. '1' → logprob: -6.024282932281494
    8. '10' → logprob: -6.024282932281494
    9. '   ' → logprob: -7.024282932281494
    10. '+' → logprob: -7.899282932281494

Token 176: '6' (ID: 21)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -1.2254493236541748
    2. 'i' → logprob: -1.4754493236541748
    3. ' ' → logprob: -1.4754493236541748
    4. '2' → logprob: -2.225449323654175
    5. '+' → logprob: -3.225449323654175
    6. '1' → logprob: -3.725449323654175
    7. '10' → logprob: -3.850449323654175
    8. '9' → logprob: -5.100449562072754
    9. '7' → logprob: -5.225449562072754
    10. ' addition' → logprob: -5.350449562072754

Token 177: '^' (ID: 61)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.14104114472866058
    2. '^' → logprob: -2.7660410404205322
    3. ' **' → logprob: -4.141041278839111
    4. ' ' → logprob: -4.391041278839111
    5. ')' → logprob: -4.516041278839111
    6. '   ' → logprob: -5.266041278839111
    7. '+' → logprob: -5.391041278839111
    8. '-' → logprob: -6.016041278839111
    9. '<|end|>' → logprob: -6.141041278839111
    10. '*j' → logprob: -6.141041278839111

Token 178: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.1146865040063858
    2. 'k' → logprob: -2.7396864891052246
    3. 'i' → logprob: -3.2396864891052246
    4. ' j' → logprob: -5.989686489105225
    5. ' ' → logprob: -7.239686489105225
    6. '2' → logprob: -8.364686965942383
    7. '<|end|>' → logprob: -8.489686965942383
    8. ' k' → logprob: -8.739686965942383
    9. ' i' → logprob: -8.739686965942383
    10. '3' → logprob: -9.239686965942383

Token 179: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03242119774222374
    2. '    ' → logprob: -4.407421112060547
    3. ' ' → logprob: -5.032421112060547
    4. '  ' → logprob: -5.407421112060547
    5. '.' → logprob: -5.782421112060547
    6. ',' → logprob: -6.157421112060547
    7. '<|end|>' → logprob: -6.282421112060547
    8. '    
' → logprob: -8.032421112060547
    9. '
' → logprob: -8.782421112060547
    10. ')' → logprob: -8.782421112060547

Token 180: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12783844769001007
    2. 'cnt' → logprob: -2.877838373184204
    3. '
' → logprob: -3.627838373184204
    4. '    
' → logprob: -3.877838373184204
    5. ' 
' → logprob: -5.252838611602783
    6. '  
' → logprob: -5.627838611602783
    7. '   
' → logprob: -6.377838611602783
    8. ' cnt' → logprob: -7.002838611602783
    9. ' ' → logprob: -7.002838611602783
    10. '	cnt' → logprob: -7.127838611602783

Token 181: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' (adapté à ' cnt') → logprob: -0.5972632169723511
    2. '   ' → logprob: -0.8472632169723511
    3. ' cnt' → logprob: -4.347263336181641
    4. '	cnt' → logprob: -5.722263336181641
    5. ' ' → logprob: -6.347263336181641
    6. 'c' → logprob: -6.722263336181641
    7. '  ' → logprob: -7.472263336181641
    8. '	c' → logprob: -8.22226333618164
    9. '    
' → logprob: -8.59726333618164
    10. ' ' → logprob: -8.72226333618164

Token 182: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07890025526285172
    2. '=' → logprob: -2.5789003372192383
    3. ' ' → logprob: -11.578900337219238
    4. ' =
' → logprob: -14.578900337219238
    5. ')' → logprob: -15.078900337219238
    6. ' +=' → logprob: -15.453900337219238
    7. '  ' → logprob: -17.328899383544922
    8. ',' → logprob: -17.453899383544922
    9. ' ' → logprob: -17.578899383544922
    10. '   ' → logprob: -17.828899383544922

Token 183: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11367770284414291
    2. ' ' → logprob: -2.238677740097046
    3. ' float' → logprob: -7.488677501678467
    4. 'float' → logprob: -8.738677978515625
    5. ' i' → logprob: -10.238677978515625
    6. ' y' → logprob: -11.113677978515625
    7. '10' → logprob: -11.238677978515625
    8. 'int' → logprob: -11.363677978515625
    9. ' int' → logprob: -11.488677978515625
    10. 'i' → logprob: -11.738677978515625

Token 184: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00028660334646701813
    2. 'float' → logprob: -8.250287055969238
    3. 'int' → logprob: -11.375287055969238
    4. '999' → logprob: -12.500287055969238
    5. '100' → logprob: -13.000287055969238
    6. ' ' → logprob: -13.000287055969238
    7. 'i' → logprob: -13.750287055969238
    8. 'y' → logprob: -13.750287055969238
    9. '10' → logprob: -14.250287055969238
    10. '[' → logprob: -14.375287055969238

Token 185: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08901732414960861
    2. '
' → logprob: -3.339017391204834
    3. '<|end|>' → logprob: -3.464017391204834
    4. '    
' → logprob: -4.964017391204834
    5. ' ' → logprob: -6.089017391204834
    6. '  ' → logprob: -6.464017391204834
    7. '  
' → logprob: -6.464017391204834
    8. ' for' → logprob: -6.714017391204834
    9. '<|end|>' → logprob: -6.839017391204834
    10. ' 
' → logprob: -6.839017391204834

Token 186: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021102197468280792
    2. ' while' → logprob: -5.021102428436279
    3. 'while' → logprob: -5.646102428436279
    4. ' for' → logprob: -6.146102428436279
    5. 'i' → logprob: -6.146102428436279
    6. 'for' → logprob: -6.521102428436279
    7. 'j' → logprob: -6.896102428436279
    8. ' i' → logprob: -6.896102428436279
    9. '    
' → logprob: -7.146102428436279
    10. '  ' → logprob: -7.396102428436279

Token 187: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.7847540378570557
    2. 'j' → logprob: -1.2847540378570557
    3. 'temp' → logprob: -2.1597540378570557
    4. 'x' → logprob: -2.9097540378570557
    5. 'for' → logprob: -2.9097540378570557
    6. 'n' → logprob: -4.034753799438477
    7. '   ' → logprob: -5.284753799438477
    8. 'val' → logprob: -5.784753799438477
    9. ' while' → logprob: -5.784753799438477
    10. 'tmp' → logprob: -5.909753799438477

Token 188: ' On' (ID: 2160)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.6031448245048523
    2. 'x' → logprob: -2.103144884109497
    3. 'while' → logprob: -2.353144884109497
    4. 'j' → logprob: -2.603144884109497
    5. 'val' → logprob: -2.978144884109497
    6. 'n' → logprob: -3.353144884109497
    7. 'value' → logprob: -3.978144884109497
    8. 'for' → logprob: -4.228144645690918
    9. 'tmp' → logprob: -4.728144645690918
    10. 'remaining' → logprob: -4.853144645690918

Token 189: ' ass' (ID: 1680)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.6317225694656372
    2. 'while' → logprob: -1.6317225694656372
    3. ' while' → logprob: -2.1317224502563477
    4. ' j' → logprob: -2.6317224502563477
    5. 'for' → logprob: -3.6317224502563477
    6. ' for' → logprob: -4.381722450256348
    7. 'temp' → logprob: -4.381722450256348
    8. ' =' → logprob: -4.881722450256348
    9. ' temp' → logprob: -5.381722450256348
    10. ' ' → logprob: -6.131722450256348

Token 190: 'igne' (ID: 24120)
  Prédit: 'igne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igne' → logprob: -1.189467430114746
    2. 'e' → logprob: -1.814467430114746
    3. 'ert' → logprob: -1.814467430114746
    4. '#' → logprob: -2.189467430114746
    5. 'em' → logprob: -2.939467430114746
    6. 'ign' → logprob: -3.314467430114746
    7. 'ume' → logprob: -3.439467430114746
    8. 'ure' → logprob: -3.939467430114746
    9. '

' → logprob: -4.439467430114746
    10. 'et' → logprob: -4.939467430114746

Token 191: ' '' (ID: 461)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.8072007298469543
    2. ' j' → logprob: -1.3072006702423096
    3. ' y' → logprob: -2.6822006702423096
    4. 'x' → logprob: -3.4322006702423096
    5. ' x' → logprob: -3.4322006702423096
    6. 'temp' → logprob: -3.4322006702423096
    7. ' temp' → logprob: -4.182200908660889
    8. ' a' → logprob: -4.307200908660889
    9. 'y' → logprob: -4.557200908660889
    10. '   ' → logprob: -4.682200908660889

Token 192: 'i' (ID: 72)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temp' → logprob: -1.0209592580795288
    2. 'y' → logprob: -1.1459592580795288
    3. 'x' → logprob: -1.8959592580795288
    4. 'n' → logprob: -2.7709593772888184
    5. 'val' → logprob: -3.1459593772888184
    6. 'tmp' → logprob: -3.3959593772888184
    7. 'j' → logprob: -5.145959377288818
    8. 'value' → logprob: -5.520959377288818
    9. 'z' → logprob: -5.520959377288818
    10. 't' → logprob: -5.895959377288818

Token 193: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.48066437244415283
    2. ' '' → logprob: -3.1056642532348633
    3. ' *' → logprob: -3.2306642532348633
    4. '_val' → logprob: -3.3556642532348633
    5. '_temp' → logprob: -3.4806642532348633
    6. '_j' → logprob: -4.105664253234863
    7. '_tmp' → logprob: -4.105664253234863
    8. 'val' → logprob: -4.105664253234863
    9. ' ' → logprob: -4.355664253234863
    10. 'temp' → logprob: -4.355664253234863

Token 194: ' à' (ID: 1221)
  Prédit: '_temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_temp' → logprob: -0.9764529466629028
    2. 'temp' → logprob: -1.4764529466629028
    3. '_rest' → logprob: -2.7264528274536133
    4. '_tmp' → logprob: -2.8514528274536133
    5. '_remaining' → logprob: -2.8514528274536133
    6. '_copy' → logprob: -3.1014528274536133
    7. '_current' → logprob: -3.8514528274536133
    8. '_val' → logprob: -3.8514528274536133
    9. ' =' → logprob: -4.101452827453613
    10. 'val' → logprob: -4.476452827453613

Token 195: ' la' (ID: 557)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -1.5087454319000244
    2. 'temp' → logprob: -1.7587454319000244
    3. 'i' → logprob: -2.0087454319000244
    4. 'x' → logprob: -2.1337454319000244
    5. ' y' → logprob: -2.1337454319000244
    6. ' i' → logprob: -3.1337454319000244
    7. 'n' → logprob: -3.5087454319000244
    8. 'val' → logprob: -3.6337454319000244
    9. ' temp' → logprob: -3.8837454319000244
    10. ' x' → logprob: -4.008745193481445

Token 196: ' variable' (ID: 11076)
  Prédit: 'variable'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'variable' → logprob: -0.2643519639968872
    2. 'val' → logprob: -1.8893519639968872
    3. 'temp' → logprob: -3.1393518447875977
    4. 'tmp' → logprob: -4.639351844787598
    5. ' variable' → logprob: -4.889351844787598
    6. 'y' → logprob: -5.014351844787598
    7. 'x' → logprob: -5.764351844787598
    8. 'j' → logprob: -6.014351844787598
    9. 'value' → logprob: -6.014351844787598
    10. 'var' → logprob: -6.014351844787598

Token 197: ' tempora' (ID: 117509)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temp' → logprob: -1.3784791231155396
    2. 'x' → logprob: -1.5034791231155396
    3. 'val' → logprob: -2.12847900390625
    4. ' x' → logprob: -2.62847900390625
    5. 'tmp' → logprob: -2.75347900390625
    6. 'n' → logprob: -2.75347900390625
    7. ' temp' → logprob: -3.00347900390625
    8. ' val' → logprob: -3.50347900390625
    9. 'current' → logprob: -4.12847900390625
    10. ' current' → logprob: -4.12847900390625

Token 198: 'ire' (ID: 594)
  Prédit: '_tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_tmp' → logprob: -0.772409200668335
    2. '_' → logprob: -1.647409200668335
    3. 'tmp' → logprob: -2.522409200668335
    4. '_temp' → logprob: -2.772409200668335
    5. ' =' → logprob: -3.147409200668335
    6. 'e' → logprob: -3.147409200668335
    7. '_val' → logprob: -3.397409200668335
    8. '_t' → logprob: -4.147409439086914
    9. 't' → logprob: -4.397409439086914
    10. 'i' → logprob: -4.772409439086914

Token 199: ' y' (ID: 342)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.6896735429763794
    2. 'tmp' → logprob: -1.6896735429763794
    3. 't' → logprob: -2.18967342376709
    4. 'x' → logprob: -2.43967342376709
    5. 'n' → logprob: -3.18967342376709
    6. ' temp' → logprob: -3.43967342376709
    7. ' t' → logprob: -4.56467342376709
    8. ' x' → logprob: -4.81467342376709
    9. ' tmp' → logprob: -5.18967342376709
    10. 'val' → logprob: -5.93967342376709

Token 200: '1' (ID: 16)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0928595066070557
    2. '_tmp' → logprob: -1.0928595066070557
    3. '_temp' → logprob: -1.2178595066070557
    4. '_t' → logprob: -4.342859268188477
    5. 'tmp' → logprob: -4.467859268188477
    6. 'temp' → logprob: -5.092859268188477
    7. 't' → logprob: -6.717859268188477
    8. 'Tmp' → logprob: -7.717859268188477
    9. '_c' → logprob: -8.092859268188477
    10. 'Temp' → logprob: -8.967859268188477

Token 201: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09121397137641907
    2. '=' → logprob: -2.7162139415740967
    3. ' ' → logprob: -4.966214179992676
    4. 'y' → logprob: -5.091214179992676
    5. '
' → logprob: -5.841214179992676
    6. '<|end|>' → logprob: -5.841214179992676
    7. '=y' → logprob: -7.091214179992676
    8. ',' → logprob: -8.341214179992676
    9. '<|end|>' → logprob: -8.966214179992676
    10. '1' → logprob: -9.091214179992676

Token 202: 'cop' (ID: 47750)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.24024136364459991
    2. 'y' → logprob: -2.365241289138794
    3. '   ' → logprob: -2.740241289138794
    4. ')
' → logprob: -3.615241289138794
    5. ' y' → logprob: -3.990241289138794
    6. 'i' → logprob: -5.990241527557373
    7. '
' → logprob: -6.115241527557373
    8. ')y' → logprob: -6.740241527557373
    9. ' =' → logprob: -6.990241527557373
    10. ' i' → logprob: -7.365241527557373

Token 203: 'ie' (ID: 396)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.004368763417005539
    2. ' y' → logprob: -5.879368782043457
    3. 'ié' → logprob: -7.754368782043457
    4. 'ie' → logprob: -8.379368782043457
    5. 'i' → logprob: -9.004368782043457
    6. '   ' → logprob: -9.254368782043457
    7. ')' → logprob: -9.504368782043457
    8. 'ied' → logprob: -9.504368782043457
    9. ' =' → logprob: -9.629368782043457
    10. 'e' → logprob: -9.754368782043457

Token 204: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06623324751853943
    2. '=' → logprob: -3.0662331581115723
    3. ')' → logprob: -4.316233158111572
    4. '=y' → logprob: -5.816233158111572
    5. 'y' → logprob: -7.441233158111572
    6. ' y' → logprob: -8.19123363494873
    7. '=i' → logprob: -8.69123363494873
    8. ' )' → logprob: -9.81623363494873
    9. ' ' → logprob: -11.06623363494873
    10. ')y' → logprob: -11.31623363494873

Token 205: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.28333356976509094
    2. ' i' → logprob: -1.4083335399627686
    3. 'y' → logprob: -6.408333778381348
    4. ' y' → logprob: -8.033333778381348
    5. ' ' → logprob: -9.158333778381348
    6. ')' → logprob: -10.033333778381348
    7. '	i' → logprob: -11.533333778381348
    8. '   ' → logprob: -11.783333778381348
    9. ')i' → logprob: -11.783333778381348
    10. 'l' → logprob: -11.908333778381348

Token 206: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004915529862046242
    2. ' )' → logprob: -8.00049114227295
    3. ')
' → logprob: -9.12549114227295
    4. ').' → logprob: -11.62549114227295
    5. 'y' → logprob: -11.75049114227295
    6. ')y' → logprob: -11.75049114227295
    7. '   ' → logprob: -12.50049114227295
    8. ')

' → logprob: -13.00049114227295
    9. ')`' → logprob: -13.25049114227295
    10. '')' → logprob: -13.25049114227295

Token 207: '   ' (ID: 271)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.4338334798812866
    2. ' y' → logprob: -1.0588334798812866
    3. '
' → logprob: -5.933833599090576
    4. '   ' → logprob: -6.058833599090576
    5. ' 
' → logprob: -10.058833122253418
    6. '	y' → logprob: -10.058833122253418
    7. '    
' → logprob: -10.933833122253418
    8. ' ' → logprob: -12.058833122253418
    9. '  
' → logprob: -12.433833122253418
    10. ',' → logprob: -12.558833122253418

Token 208: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' (adapté à ' y') → logprob: -0.31336045265197754
    2. ' y' → logprob: -1.3133604526519775
    3. '   ' → logprob: -9.313360214233398
    4. ' 
' → logprob: -12.813360214233398
    5. '	y' → logprob: -12.938360214233398
    6. ' ' → logprob: -13.938360214233398
    7. ' ' → logprob: -14.063360214233398
    8. '    
' → logprob: -14.688360214233398
    9. '```' → logprob: -15.313360214233398
    10. '
' → logprob: -15.313360214233398

Token 209: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003010233340319246
    2. '_' → logprob: -8.125301361083984
    3. ' ' → logprob: -13.625301361083984
    4. '=' → logprob: -13.875301361083984
    5. ' =' → logprob: -14.125301361083984
    6. ' _' → logprob: -14.875301361083984
    7. '<|end|>' → logprob: -15.125301361083984
    8. 'y' → logprob: -15.250301361083984
    9. ')' → logprob: -15.375301361083984
    10. '[' → logprob: -15.875301361083984

Token 210: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740850329399109
    2. ' =' → logprob: -0.9740850329399109
    3. '=y' → logprob: -12.599084854125977
    4. '=i' → logprob: -12.974084854125977
    5. 'y' → logprob: -13.974084854125977
    6. ' ' → logprob: -15.224084854125977
    7. '   ' → logprob: -15.724084854125977
    8. '=int' → logprob: -15.974084854125977
    9. ' =
' → logprob: -15.974084854125977
    10. '=
' → logprob: -15.974084854125977

Token 211: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.47408226132392883
    2. ' i' → logprob: -0.9740822315216064
    3. '	i' → logprob: -12.974081993103027
    4. 'y' → logprob: -13.224081993103027
    5. ' ' → logprob: -14.849081993103027
    6. ' y' → logprob: -15.099081993103027
    7. '   ' → logprob: -16.474082946777344
    8. ' ' → logprob: -16.474082946777344
    9. '_i' → logprob: -16.599082946777344
    10. '[i' → logprob: -16.599082946777344

Token 212: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16583260893821716
    2. '
' → logprob: -2.29083251953125
    3. '    
' → logprob: -3.29083251953125
    4. '<|end|>' → logprob: -5.54083251953125
    5. 'while' → logprob: -5.79083251953125
    6. '  
' → logprob: -6.04083251953125
    7. ' while' → logprob: -6.29083251953125
    8. '   
' → logprob: -6.91583251953125
    9. '  ' → logprob: -7.41583251953125
    10. '    ' → logprob: -8.29083251953125

Token 213: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07229182869195938
    2. '    
' → logprob: -3.697291851043701
    3. 'while' → logprob: -3.822291851043701
    4. '
' → logprob: -4.572291851043701
    5. ' while' → logprob: -4.697291851043701
    6. '  
' → logprob: -6.697291851043701
    7. '   
' → logprob: -6.947291851043701
    8. '```' → logprob: -7.947291851043701
    9. '  ' → logprob: -8.822291374206543
    10. '    ' → logprob: -8.947291374206543

Token 214: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.3298078179359436
    2. '   ' → logprob: -1.9548077583312988
    3. 'j' → logprob: -2.454807758331299
    4. ' while' → logprob: -3.079807758331299
    5. '    
' → logprob: -5.579807758331299
    6. ' j' → logprob: -7.454807758331299
    7. '  
' → logprob: -7.704807758331299
    8. '    ' → logprob: -7.954807758331299
    9. '   
' → logprob: -7.954807758331299
    10. 'for' → logprob: -8.079808235168457

Token 215: ' On' (ID: 2160)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.25719162821769714
    2. 'while' → logprob: -1.5071916580200195
    3. ' while' → logprob: -6.2571916580200195
    4. 'power' → logprob: -7.1321916580200195
    5. 'pow' → logprob: -7.7571916580200195
    6. 'import' → logprob: -8.00719165802002
    7. ' j' → logprob: -8.25719165802002
    8. 'p' → logprob: -8.38219165802002
    9. 'for' → logprob: -8.50719165802002
    10. 'from' → logprob: -8.63219165802002

Token 216: ' ass' (ID: 1680)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.4763244688510895
    2. ' while' → logprob: -0.9763244390487671
    3. ' =' → logprob: -6.976324558258057
    4. '=' → logprob: -8.226324081420898
    5. ' ' → logprob: -8.476324081420898
    6. 'j' → logprob: -8.726324081420898
    7. 'import' → logprob: -9.476324081420898
    8. ' 
' → logprob: -9.726324081420898
    9. ' j' → logprob: -9.976324081420898
    10. 'wh' → logprob: -10.101324081420898

Token 217: 'igne' (ID: 24120)
  Prédit: 'igne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igne' → logprob: -0.12946562469005585
    2. 'ign' → logprob: -2.2544655799865723
    3. '#' → logprob: -5.504465579986572
    4. 'ine' → logprob: -6.254465579986572
    5. 'ig' → logprob: -6.754465579986572
    6. 'g' → logprob: -7.004465579986572
    7. 't' → logprob: -7.129465579986572
    8. 'gne' → logprob: -7.254465579986572
    9. 'ing' → logprob: -7.754465579986572
    10. '

' → logprob: -7.754465579986572

Token 218: ' (' (ID: 350)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.2396443635225296
    2. 'y' → logprob: -1.6146444082260132
    3. '0' → logprob: -4.864644527435303
    4. ' ' → logprob: -5.114644527435303
    5. ' i' → logprob: -9.239644050598145
    6. '1' → logprob: -9.739644050598145
    7. 'i' → logprob: -10.239644050598145
    8. '    ' → logprob: -10.364644050598145
    9. 'j' → logprob: -10.739644050598145
    10. '2' → logprob: -10.864644050598145

Token 219: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.05217159166932106
    2. ' y' → logprob: -3.0521717071533203
    3. '0' → logprob: -6.17717170715332
    4. '1' → logprob: -7.80217170715332
    5. 'i' → logprob: -7.80217170715332
    6. '2' → logprob: -8.55217170715332
    7. ' ' → logprob: -9.05217170715332
    8. ')' → logprob: -9.55217170715332
    9. '   ' → logprob: -9.67717170715332
    10. '9' → logprob: -10.17717170715332

Token 220: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.7610395550727844
    2. '1' → logprob: -1.2610394954681396
    3. ' +' → logprob: -1.8860394954681396
    4. '+' → logprob: -2.5110394954681396
    5. '-' → logprob: -4.761039733886719
    6. ')' → logprob: -6.136039733886719
    7. 'y' → logprob: -6.511039733886719
    8. ' ' → logprob: -6.761039733886719
    9. ' y' → logprob: -6.886039733886719
    10. '   ' → logprob: -7.636039733886719

Token 221: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.03828383982181549
    2. ' i' → logprob: -3.2882838249206543
    3. 'y' → logprob: -9.038284301757812
    4. ' y' → logprob: -9.913284301757812
    5. '   ' → logprob: -10.538284301757812
    6. ' ' → logprob: -10.788284301757812
    7. '1' → logprob: -11.288284301757812
    8. '	i' → logprob: -12.288284301757812
    9. ')' → logprob: -12.663284301757812
    10. '  ' → logprob: -12.788284301757812

Token 222: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004406736232340336
    2. ' )' → logprob: -5.504406929016113
    3. '+' → logprob: -8.879406929016113
    4. '))' → logprob: -10.129406929016113
    5. ' ' → logprob: -10.504406929016113
    6. ' +' → logprob: -10.754406929016113
    7. ')+' → logprob: -10.754406929016113
    8. ')
' → logprob: -11.004406929016113
    9. ')`' → logprob: -11.379406929016113
    10. '')' → logprob: -11.504406929016113

Token 223: ' à' (ID: 1221)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.2567814588546753
    2. ' à' → logprob: -2.006781578063965
    3. 'to' → logprob: -2.756781578063965
    4. ')' → logprob: -4.256781578063965
    5. ' ' → logprob: -4.756781578063965
    6. 'y' → logprob: -6.381781578063965
    7. ' y' → logprob: -6.381781578063965
    8. ' a' → logprob: -7.131781578063965
    9. 't' → logprob: -8.006781578063965
    10. ' )' → logprob: -8.256781578063965

Token 224: ' la' (ID: 557)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.011429864913225174
    2. 'y' → logprob: -4.511429786682129
    3. ' (' → logprob: -8.136429786682129
    4. '(y' → logprob: -10.761429786682129
    5. ' the' → logprob: -11.011429786682129
    6. ' ' → logprob: -11.386429786682129
    7. ' a' → logprob: -11.886429786682129
    8. ')' → logprob: -12.386429786682129
    9. '(' → logprob: -12.511429786682129
    10. '	y' → logprob: -12.761429786682129

Token 225: ' variable' (ID: 11076)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.20176073908805847
    2. 'y' → logprob: -1.7017607688903809
    3. ' (' → logprob: -8.701760292053223
    4. ' res' → logprob: -10.576760292053223
    5. 'tmp' → logprob: -10.576760292053223
    6. ' ' → logprob: -10.951760292053223
    7. 'res' → logprob: -11.201760292053223
    8. 'temp' → logprob: -11.201760292053223
    9. '(y' → logprob: -11.326760292053223
    10. '(' → logprob: -11.451760292053223

Token 226: ' tempora' (ID: 117509)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.3732711374759674
    2. 'y' → logprob: -1.623271107673645
    3. ' (' → logprob: -2.4982712268829346
    4. '  ' → logprob: -4.6232709884643555
    5. ' ' → logprob: -4.7482709884643555
    6. '"' → logprob: -5.8732709884643555
    7. '(y' → logprob: -5.8732709884643555
    8. '    ' → logprob: -6.8732709884643555
    9. ')' → logprob: -6.8732709884643555
    10. '(' → logprob: -7.1232709884643555

Token 227: 'ire' (ID: 594)
  Prédit: 'ire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ire' → logprob: -0.383125901222229
    2. 're' → logprob: -1.383125901222229
    3. 'te' → logprob: -2.8831257820129395
    4. 'e' → logprob: -5.3831257820129395
    5. 'temp' → logprob: -6.3831257820129395
    6. '_temp' → logprob: -6.3831257820129395
    7. '1' → logprob: -7.1331257820129395
    8. '_te' → logprob: -7.1331257820129395
    9. '_tmp' → logprob: -7.6331257820129395
    10. 't' → logprob: -7.6331257820129395

Token 228: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.08911515027284622
    2. 'y' → logprob: -2.4641151428222656
    3. ' ' → logprob: -9.589115142822266
    4. '<|end|>' → logprob: -9.714115142822266
    5. '  ' → logprob: -11.839115142822266
    6. '	y' → logprob: -11.964115142822266
    7. '   ' → logprob: -12.339115142822266
    8. ''y' → logprob: -12.901615142822266
    9. '    ' → logprob: -13.026615142822266
    10. ')' → logprob: -13.276615142822266

Token 229: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.023091968148946762
    2. '2' → logprob: -3.898092031478882
    3. ' -' → logprob: -6.648091793060303
    4. '-' → logprob: -7.148091793060303
    5. 'y' → logprob: -8.398092269897461
    6. '_' → logprob: -8.773092269897461
    7. ' ' → logprob: -10.148092269897461
    8. ' y' → logprob: -11.398092269897461
    9. '```' → logprob: -12.460592269897461
    10. ',' → logprob: -12.523092269897461

Token 230: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.1374205350875854
    2. '<|end|>' → logprob: -1.3874205350875854
    3. ')' → logprob: -1.7624205350875854
    4. '   ' → logprob: -2.137420654296875
    5. ' ' → logprob: -3.262420654296875
    6. ' =' → logprob: -3.512420654296875
    7. '(y' → logprob: -4.137420654296875
    8. '    ' → logprob: -4.262420654296875
    9. ' )' → logprob: -4.387420654296875
    10. '(' → logprob: -5.262420654296875

Token 231: 'compl' (ID: 14845)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.3899388313293457
    2. 'y' → logprob: -1.1399388313293457
    3. ')' → logprob: -5.889938831329346
    4. ' )' → logprob: -9.014938354492188
    5. ')y' → logprob: -9.389938354492188
    6. ' ' → logprob: -10.889938354492188
    7. '   ' → logprob: -11.014938354492188
    8. ' (' → logprob: -11.389938354492188
    9. '  ' → logprob: -11.889938354492188
    10. ' i' → logprob: -12.139938354492188

Token 232: 'ément' (ID: 17645)
  Prédit: 'ément'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ément' → logprob: -0.01838042587041855
    2. 'ement' → logprob: -4.393380641937256
    3. 'é' → logprob: -5.268380641937256
    4. ')' → logprob: -8.268380165100098
    5. 'ém' → logprob: -9.393380165100098
    6. 'éments' → logprob: -9.643380165100098
    7. 'è' → logprob: -9.768380165100098
    8. 'ètement' → logprob: -10.643380165100098
    9. 'ét' → logprob: -10.768380165100098
    10. 'emento' → logprob: -10.893380165100098

Token 233: ' à' (ID: 1221)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.6212340593338013
    2. ')' → logprob: -0.9962340593338013
    3. ' -' → logprob: -2.9962339401245117
    4. '-' → logprob: -4.246233940124512
    5. 'de' → logprob: -4.621233940124512
    6. ' )' → logprob: -4.746233940124512
    7. ' of' → logprob: -6.246233940124512
    8. ' ' → logprob: -6.371233940124512
    9. ' =' → logprob: -6.871233940124512
    10. '=' → logprob: -6.871233940124512

Token 234: ' i' (ID: 575)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.2795434296131134
    2. 'i' → logprob: -1.529543399810791
    3. ' y' → logprob: -4.029543399810791
    4. ' i' → logprob: -4.779543399810791
    5. '1' → logprob: -7.529543399810791
    6. ')' → logprob: -8.15454387664795
    7. ' ' → logprob: -9.15454387664795
    8. '<|end|>' → logprob: -10.02954387664795
    9. '  ' → logprob: -11.15454387664795
    10. 's' → logprob: -11.77954387664795

Token 235: ' pour' (ID: 1930)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.023533355444669724
    2. ' -' → logprob: -4.648533344268799
    3. ' )' → logprob: -5.023533344268799
    4. ').' → logprob: -5.523533344268799
    5. '-' → logprob: -6.023533344268799
    6. '   ' → logprob: -7.773533344268799
    7. ' ' → logprob: -10.023533821105957
    8. ')
' → logprob: -10.148533821105957
    9. ' ).' → logprob: -10.648533821105957
    10. '-)' → logprob: -10.648533821105957

Token 236: ' faire' (ID: 8119)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.28795772790908813
    2. 'y' → logprob: -1.4129576683044434
    3. ')' → logprob: -5.037957668304443
    4. ' )' → logprob: -8.287958145141602
    5. ')y' → logprob: -10.912958145141602
    6. ' ' → logprob: -12.037958145141602
    7. ''y' → logprob: -13.162958145141602
    8. '	y' → logprob: -13.162958145141602
    9. ' compléter' → logprob: -13.162958145141602
    10. ' continuer' → logprob: -13.537958145141602

Token 237: ' un' (ID: 537)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.2256099283695221
    2. 'y' → logprob: -1.6006098985671997
    3. ')' → logprob: -8.85060977935791
    4. ')y' → logprob: -10.97560977935791
    5. '	y' → logprob: -11.22560977935791
    6. ' )' → logprob: -11.60060977935791
    7. ''y' → logprob: -12.47560977935791
    8. ' ' → logprob: -12.85060977935791
    9. '   ' → logprob: -12.85060977935791
    10. 's' → logprob: -13.85060977935791

Token 238: ' décou' (ID: 68302)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.026979228481650352
    2. ' y' → logprob: -3.9019792079925537
    3. ')' → logprob: -6.026979446411133
    4. ' ' → logprob: -6.776979446411133
    5. 'total' → logprob: -6.776979446411133
    6. 's' → logprob: -7.276979446411133
    7. ' total' → logprob: -7.526979446411133
    8. ' )' → logprob: -8.901979446411133
    9. ']' → logprob: -9.651979446411133
    10. '])' → logprob: -10.776979446411133

Token 239: 'page' (ID: 5342)
  Prédit: 'page'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'page' → logprob: -0.002802863484248519
    2. 'p' → logprob: -6.127802848815918
    3. 'pe' → logprob: -7.877802848815918
    4. 'per' → logprob: -9.252802848815918
    5. 'Page' → logprob: -9.877802848815918
    6. ' page' → logprob: -10.627802848815918
    7. '_page' → logprob: -12.002802848815918
    8. '#' → logprob: -12.252802848815918
    9. '   ' → logprob: -12.252802848815918
    10. 'pages' → logprob: -12.502802848815918

Token 240: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.10056938230991364
    2. 'de' → logprob: -2.975569486618042
    3. ')' → logprob: -4.100569248199463
    4. ' )' → logprob: -4.600569248199463
    5. ' du' → logprob: -4.600569248199463
    6. ' complet' → logprob: -5.475569248199463
    7. ' y' → logprob: -6.725569248199463
    8. '   ' → logprob: -6.850569248199463
    9. 'y' → logprob: -7.475569248199463
    10. 'du' → logprob: -8.100569725036621

Token 241: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.31370118260383606
    2. 'y' → logprob: -1.3137011528015137
    3. ')' → logprob: -8.313701629638672
    4. ' ' → logprob: -9.438701629638672
    5. ' la' → logprob: -10.188701629638672
    6. ' )' → logprob: -10.938701629638672
    7. ' l' → logprob: -11.063701629638672
    8. '   ' → logprob: -11.813701629638672
    9. 'l' → logprob: -12.063701629638672
    10. ''y' → logprob: -12.188701629638672

Token 242: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.38678044080734253
    2. ' -' → logprob: -1.6367805004119873
    3. ').' → logprob: -2.6367805004119873
    4. '-' → logprob: -3.3867805004119873
    5. ' )' → logprob: -4.261780261993408
    6. '   ' → logprob: -5.886780261993408
    7. ' ).' → logprob: -6.886780261993408
    8. ' ' → logprob: -7.261780261993408
    9. '-y' → logprob: -8.136780738830566
    10. '-i' → logprob: -8.136780738830566

Token 243: '   ' (ID: 271)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.13062778115272522
    2. 'y' → logprob: -2.2556278705596924
    3. '(y' → logprob: -4.880627632141113
    4. ' (' → logprob: -5.130627632141113
    5. '   ' → logprob: -5.880627632141113
    6. ' =' → logprob: -7.880627632141113
    7. ' 
' → logprob: -8.505627632141113
    8. '	y' → logprob: -8.755627632141113
    9. ' ' → logprob: -9.005627632141113
    10. '(' → logprob: -9.005627632141113

Token 244: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' (adapté à ' y') → logprob: -0.18291087448596954
    2. ' y' → logprob: -1.8079109191894531
    3. '(y' → logprob: -5.807910919189453
    4. ' (' → logprob: -8.932910919189453
    5. '   ' → logprob: -10.932910919189453
    6. '	y' → logprob: -12.557910919189453
    7. '(' → logprob: -13.682910919189453
    8. ' ' → logprob: -14.057910919189453
    9. '=y' → logprob: -14.682910919189453
    10. ' =' → logprob: -14.932910919189453

Token 245: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.43489113450050354
    2. ' -' → logprob: -1.0598911046981812
    3. '-' → logprob: -5.434891223907471
    4. '_' → logprob: -6.434891223907471
    5. ' _' → logprob: -9.434890747070312
    6. ' ' → logprob: -9.684890747070312
    7. ' -=' → logprob: -10.934890747070312
    8. ' =' → logprob: -11.684890747070312
    9. '   ' → logprob: -12.184890747070312
    10. '  ' → logprob: -12.559890747070312

Token 246: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889165729284286
    2. '=' → logprob: -2.5788917541503906
    3. ' ' → logprob: -13.32889175415039
    4. ')' → logprob: -16.07889175415039
    5. '=y' → logprob: -16.70389175415039
    6. ' =
' → logprob: -17.45389175415039
    7. '＝' → logprob: -17.70389175415039
    8. ',' → logprob: -17.95389175415039
    9. 'y' → logprob: -18.32889175415039
    10. ' =)' → logprob: -18.57889175415039

Token 247: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.009759394451975822
    2. 'y' → logprob: -4.634759426116943
    3. ' (' → logprob: -13.134758949279785
    4. ' ' → logprob: -14.009758949279785
    5. '	y' → logprob: -15.384758949279785
    6. '(y' → logprob: -15.509758949279785
    7. '   ' → logprob: -16.7597599029541
    8. ' ' → logprob: -16.8847599029541
    9. '    ' → logprob: -17.5097599029541
    10. '  ' → logprob: -17.8847599029541

Token 248: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.033850617706775665
    2. '-' → logprob: -3.40885066986084
    3. ' ' → logprob: -8.65885066986084
    4. '   ' → logprob: -11.03385066986084
    5. '-i' → logprob: -12.78385066986084
    6. '1' → logprob: -13.28385066986084
    7. '  ' → logprob: -13.78385066986084
    8. '<|end|>' → logprob: -13.78385066986084
    9. ')' → logprob: -13.90885066986084
    10. '[' → logprob: -14.15885066986084

Token 249: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0052360063418745995
    2. ' i' → logprob: -5.2552361488342285
    3. '<|end|>' → logprob: -14.13023567199707
    4. '   ' → logprob: -14.25523567199707
    5. '	i' → logprob: -14.75523567199707
    6. ' ' → logprob: -15.13023567199707
    7. '  ' → logprob: -17.00523567199707
    8. ')' → logprob: -17.75523567199707
    9. '[i' → logprob: -17.75523567199707
    10. '1' → logprob: -17.88023567199707

Token 250: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12623214721679688
    2. '
' → logprob: -2.751232147216797
    3. '    
' → logprob: -3.001232147216797
    4. 'while' → logprob: -5.876232147216797
    5. ' while' → logprob: -7.376232147216797
    6. '   
' → logprob: -7.626232147216797
    7. '  
' → logprob: -8.001232147216797
    8. '<|end|>' → logprob: -8.876232147216797
    9. ' 
' → logprob: -9.126232147216797
    10. '

' → logprob: -9.251232147216797

Token 251: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20045647025108337
    2. 'while' → logprob: -2.700456380844116
    3. '
' → logprob: -2.825456380844116
    4. '    
' → logprob: -3.200456380844116
    5. ' while' → logprob: -4.575456619262695
    6. '   
' → logprob: -6.700456619262695
    7. '  
' → logprob: -6.950456619262695
    8. 'j' → logprob: -7.575456619262695
    9. '```' → logprob: -8.200456619262695
    10. '	while' → logprob: -8.325456619262695

Token 252: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.11112721264362335
    2. 'j' → logprob: -2.3611271381378174
    3. '#' (adapté à ' #') → logprob: -5.2361273765563965
    4. '   ' → logprob: -5.9861273765563965
    5. ' while' → logprob: -6.4861273765563965
    6. 'for' → logprob: -7.2361273765563965
    7. 'pow' → logprob: -8.861126899719238
    8. '    
' → logprob: -8.986126899719238
    9. '9' → logprob: -9.111126899719238
    10. 'p' → logprob: -9.486126899719238

Token 253: ' On' (ID: 2160)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.18340842425823212
    2. 'j' → logprob: -1.8084083795547485
    3. 'for' → logprob: -6.433408260345459
    4. '#' → logprob: -6.808408260345459
    5. ' while' → logprob: -7.683408260345459
    6. 'While' → logprob: -9.433408737182617
    7. 'import' → logprob: -9.558408737182617
    8. 'pow' → logprob: -9.558408737182617
    9. 'ex' → logprob: -9.933408737182617
    10. 'exp' → logprob: -10.308408737182617

Token 254: ' utilise' (ID: 70283)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.103852279484272
    2. ' while' → logprob: -2.3538522720336914
    3. 'def' → logprob: -6.978852272033691
    4. 'for' → logprob: -6.978852272033691
    5. '#' → logprob: -7.103852272033691
    6. ' #' → logprob: -8.228852272033691
    7. ' for' → logprob: -8.228852272033691
    8. '   ' → logprob: -9.728852272033691
    9. '=' → logprob: -9.728852272033691
    10. ' =' → logprob: -9.853852272033691

Token 255: ' une' (ID: 2463)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.44962945580482483
    2. 'while' → logprob: -1.0746294260025024
    3. ' j' → logprob: -4.574629306793213
    4. 'j' → logprob: -5.949629306793213
    5. ' ' → logprob: -6.324629306793213
    6. ' a' → logprob: -6.574629306793213
    7. '9' → logprob: -6.949629306793213
    8. ' for' → logprob: -7.074629306793213
    9. ' un' → logprob: -7.324629306793213
    10. '   ' → logprob: -7.449629306793213

Token 256: ' autre' (ID: 20278)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -5.407366916188039e-05
    2. 'for' → logprob: -10.750054359436035
    3. 'wh' → logprob: -11.125054359436035
    4. ' while' → logprob: -11.375054359436035
    5. 'import' → logprob: -12.500054359436035
    6. 'from' → logprob: -14.625054359436035
    7. 'b' → logprob: -15.375054359436035
    8. 'j' → logprob: -15.375054359436035
    9. '   ' → logprob: -15.375054359436035
    10. 'bou' → logprob: -15.375054359436035

Token 257: ' boucle' (ID: 174211)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8384612798690796
    2. 'while' → logprob: -0.9634612798690796
    3. 'bou' → logprob: -2.338461399078369
    4. ' boucle' → logprob: -2.838461399078369
    5. ' while' → logprob: -4.213461399078369
    6. ' for' → logprob: -4.213461399078369
    7. ' bou' → logprob: -7.213461399078369
    8. ' loop' → logprob: -8.713460922241211
    9. ' ' → logprob: -8.713460922241211
    10. 'b' → logprob: -9.213460922241211

Token 258: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1614546775817871
    2. 'for' → logprob: -2.161454677581787
    3. '   ' → logprob: -3.661454677581787
    4. ' j' → logprob: -5.036454677581787
    5. ' pour' → logprob: -6.911454677581787
    6. 'j' → logprob: -8.536455154418945
    7. ' while' → logprob: -8.911455154418945
    8. ' ' → logprob: -9.536455154418945
    9. '	for' → logprob: -9.536455154418945
    10. '  ' → logprob: -9.661455154418945

Token 259: ' pour' (ID: 1930)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.003839621553197503
    2. 'j' → logprob: -5.753839492797852
    3. ' for' → logprob: -7.503839492797852
    4. ' ' → logprob: -10.378839492797852
    5. ',' → logprob: -10.503839492797852
    6. 'for' → logprob: -10.628839492797852
    7. ' ,' → logprob: -12.003839492797852
    8. '   ' → logprob: -12.253839492797852
    9. '    ' → logprob: -12.628839492797852
    10. ' ' → logprob: -13.003839492797852

Token 260: ' parcour' (ID: 130642)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.387979656457901
    2. ' j' → logprob: -1.1379796266555786
    3. 'range' → logprob: -7.387979507446289
    4. ' range' → logprob: -8.012979507446289
    5. 'pow' → logprob: -10.512979507446289
    6. ' ' → logprob: -10.762979507446289
    7. '_j' → logprob: -11.387979507446289
    8. 'i' → logprob: -11.512979507446289
    9. '	j' → logprob: -12.075479507446289
    10. '```' → logprob: -12.075479507446289

Token 261: 'ir' (ID: 380)
  Prédit: 'ir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ir' → logprob: -0.0008268986130133271
    2. 'r' → logprob: -7.125826835632324
    3. 'rir' → logprob: -11.500826835632324
    4. 'range' → logprob: -12.625826835632324
    5. 're' → logprob: -12.875826835632324
    6. 'oir' → logprob: -13.125826835632324
    7. 'er' → logprob: -13.500826835632324
    8. 'ant' → logprob: -13.875826835632324
    9. 'tir' → logprob: -14.625826835632324
    10. 'i' → logprob: -14.875826835632324

Token 262: ' les' (ID: 1341)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.4879140257835388
    2. ' range' → logprob: -0.9879140257835388
    3. 'j' → logprob: -4.987914085388184
    4. ' j' → logprob: -6.112914085388184
    5. '(range' → logprob: -6.987914085388184
    6. '[' → logprob: -6.987914085388184
    7. ' [' → logprob: -7.112914085388184
    8. '	range' → logprob: -7.112914085388184
    9. '   ' → logprob: -7.487914085388184
    10. ' ' → logprob: -8.112914085388184

Token 263: ' valeurs' (ID: 73668)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1959417462348938
    2. ' range' → logprob: -1.820941686630249
    3. 'j' → logprob: -4.320941925048828
    4. '[' → logprob: -6.820941925048828
    5. '[j' → logprob: -6.820941925048828
    6. ' j' → logprob: -7.820941925048828
    7. ' [' → logprob: -8.945941925048828
    8. ' ' → logprob: -10.820941925048828
    9. '	range' → logprob: -10.945941925048828
    10. 'rang' → logprob: -12.195941925048828

Token 264: ' de' (ID: 334)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.4573145806789398
    2. ' de' → logprob: -2.0823144912719727
    3. ' j' → logprob: -2.2073144912719727
    4. 'de' → logprob: -2.9573144912719727
    5. ' range' → logprob: -3.7073144912719727
    6. 'range' → logprob: -4.082314491271973
    7. 'from' → logprob: -4.707314491271973
    8. '    ' → logprob: -4.832314491271973
    9. ' of' → logprob: -5.832314491271973
    10. ' des' → logprob: -6.082314491271973

Token 265: ' '' (ID: 461)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.008116992190480232
    2. 'range' → logprob: -5.508117198944092
    3. ' j' → logprob: -5.633117198944092
    4. ' range' → logprob: -8.008116722106934
    5. '   ' → logprob: -9.383116722106934
    6. '[j' → logprob: -11.633116722106934
    7. ' ' → logprob: -11.758116722106934
    8. '[' → logprob: -12.133116722106934
    9. '	j' → logprob: -13.258116722106934
    10. '  ' → logprob: -13.258116722106934

Token 266: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.011211572214961052
    2. 'range' → logprob: -5.011211395263672
    3. '2' → logprob: -6.261211395263672
    4. '10' → logprob: -7.636211395263672
    5. ' j' → logprob: -7.636211395263672
    6. '7' → logprob: -8.136211395263672
    7. '3' → logprob: -8.386211395263672
    8. '5' → logprob: -8.511211395263672
    9. '0' → logprob: -8.511211395263672
    10. ' range' → logprob: -8.761211395263672

Token 267: ''' (ID: 6)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.040981683880090714
    2. 'in' → logprob: -3.6659817695617676
    3. ' en' → logprob: -5.415981769561768
    4. ' '' → logprob: -5.915981769561768
    5. 'range' → logprob: -5.915981769561768
    6. ''' → logprob: -6.540981769561768
    7. ' range' → logprob: -6.790981769561768
    8. ' ' → logprob: -7.415981769561768
    9. ' dans' → logprob: -8.41598129272461
    10. 'en' → logprob: -8.41598129272461

Token 268: ' de' (ID: 334)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3739891052246094
    2. 'in' → logprob: -1.3739891052246094
    3. '(' → logprob: -3.2489891052246094
    4. 'range' → logprob: -5.373989105224609
    5. ' range' → logprob: -5.873989105224609
    6. ' for' → logprob: -6.123989105224609
    7. '   ' → logprob: -6.248989105224609
    8. '(range' → logprob: -6.248989105224609
    9. 'for' → logprob: -6.873989105224609
    10. ' ' → logprob: -6.873989105224609

Token 269: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.028765978291630745
    2. ' ' → logprob: -3.778765916824341
    3. ' range' → logprob: -5.90376615524292
    4. 'range' → logprob: -6.02876615524292
    5. '10' → logprob: -9.028765678405762
    6. '1' → logprob: -9.278765678405762
    7. '9' → logprob: -10.403765678405762
    8. '6' → logprob: -10.528765678405762
    9. '7' → logprob: -10.903765678405762
    10. '2' → logprob: -11.153765678405762

Token 270: '6' (ID: 21)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07208000868558884
    2. '10' → logprob: -3.44707989692688
    3. '20' → logprob: -4.697080135345459
    4. 'range' → logprob: -4.697080135345459
    5. '100' → logprob: -5.697080135345459
    6. ' ' → logprob: -6.072080135345459
    7. ' range' → logprob: -6.322080135345459
    8. '6' → logprob: -6.697080135345459
    9. '9' → logprob: -6.697080135345459
    10. '7' → logprob: -6.822080135345459

Token 271: ' jusqu' (ID: 21961)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.39788147807121277
    2. ' à' → logprob: -2.147881507873535
    3. ' ,' → logprob: -2.397881507873535
    4. ' ' → logprob: -3.647881507873535
    5. 'à' → logprob: -4.022881507873535
    6. ' jusqu' → logprob: -4.147881507873535
    7. '<|end|>' → logprob: -4.272881507873535
    8. 'to' → logprob: -4.897881507873535
    9. ' to' → logprob: -5.147881507873535
    10. '1' → logprob: -5.397881507873535

Token 272: ''à' (ID: 33688)
  Prédit: ''à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''à' → logprob: -0.01895233802497387
    2. '’à' → logprob: -4.893952369689941
    3. ''' → logprob: -5.643952369689941
    4. ' à' → logprob: -5.768952369689941
    5. 'a' → logprob: -7.018952369689941
    6. 'e' → logprob: -7.268952369689941
    7. ''a' → logprob: -7.268952369689941
    8. 'à' → logprob: -7.893952369689941
    9. '0' → logprob: -8.018952369689941
    10. '=' → logprob: -8.018952369689941

Token 273: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03515418991446495
    2. '1' → logprob: -3.660154104232788
    3. ' ' → logprob: -5.160154342651367
    4. '-' → logprob: -6.785154342651367
    5. '10' → logprob: -8.285154342651367
    6. '2' → logprob: -8.285154342651367
    7. ' -' → logprob: -8.535154342651367
    8. 'y' → logprob: -8.785154342651367
    9. '20' → logprob: -8.785154342651367
    10. '7' → logprob: -8.910154342651367

Token 274: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03692033141851425
    2. '1' → logprob: -3.7869203090667725
    3. '-' → logprob: -4.661920547485352
    4. 'y' → logprob: -6.411920547485352
    5. ' ' → logprob: -7.036920547485352
    6. '7' → logprob: -8.286920547485352
    7. ' -' → logprob: -8.286920547485352
    8. '10' → logprob: -8.286920547485352
    9. '2' → logprob: -8.786920547485352
    10. '11' → logprob: -9.536920547485352

Token 275: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005637939553707838
    2. ' ,' → logprob: -5.505638122558594
    3. '0' → logprob: -7.255638122558594
    4. ',-' → logprob: -8.130638122558594
    5. '   ' → logprob: -8.380638122558594
    6. '(' → logprob: -9.130638122558594
    7. '1' → logprob: -9.880638122558594
    8. ':' → logprob: -10.630638122558594
    9. '    ' → logprob: -10.755638122558594
    10. 'in' → logprob: -10.880638122558594

Token 276: 'in' (ID: 258)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.34324100613594055
    2. ' -' → logprob: -1.8432409763336182
    3. ',' → logprob: -2.843240976333618
    4. '0' → logprob: -3.468240976333618
    5. ' ' → logprob: -3.593240976333618
    6. '6' → logprob: -4.718241214752197
    7. ' ,' → logprob: -5.468241214752197
    8. ',-' → logprob: -7.218241214752197
    9. '    ' → logprob: -8.593240737915039
    10. '   ' → logprob: -8.593240737915039

Token 277: 'clus' (ID: 4085)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.25689074397087097
    2. 'range' → logprob: -1.7568907737731934
    3. ' reverse' → logprob: -4.506890773773193
    4. ' ' → logprob: -4.756890773773193
    5. ',' → logprob: -4.881890773773193
    6. 't' → logprob: -5.256890773773193
    7. 'reverse' → logprob: -5.506890773773193
    8. '   ' → logprob: -5.506890773773193
    9. ' reversed' → logprob: -6.256890773773193
    10. '    ' → logprob: -6.381890773773193

Token 278: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004262411966919899
    2. ',-' → logprob: -6.254262447357178
    3. '0' → logprob: -6.879262447357178
    4. '-' → logprob: -7.879262447357178
    5. ' ,' → logprob: -8.12926197052002
    6. '6' → logprob: -9.12926197052002
    7. '1' → logprob: -9.37926197052002
    8. ' -' → logprob: -9.37926197052002
    9. '   ' → logprob: -9.87926197052002
    10. '7' → logprob: -10.25426197052002

Token 279: ' en' (ID: 469)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.13709263503551483
    2. '-' → logprob: -2.1370925903320312
    3. ' ' → logprob: -4.637092590332031
    4. '0' → logprob: -8.262092590332031
    5. ',' → logprob: -9.637092590332031
    6. ' ,' → logprob: -10.262092590332031
    7. '1' → logprob: -11.262092590332031
    8. '  ' → logprob: -11.512092590332031
    9. '    ' → logprob: -12.012092590332031
    10. ' j' → logprob: -12.012092590332031

Token 280: ' décr' (ID: 123041)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.437014639377594
    2. 'reverse' → logprob: -1.5620145797729492
    3. ' range' → logprob: -2.437014579772949
    4. ' reverse' → logprob: -3.187014579772949
    5. 're' → logprob: -5.187014579772949
    6. '-' → logprob: -5.812014579772949
    7. ' ' → logprob: -6.062014579772949
    8. ' reversed' → logprob: -6.312014579772949
    9. ' decreasing' → logprob: -6.812014579772949
    10. 'de' → logprob: -7.937014579772949

Token 281: 'ément' (ID: 17645)
  Prédit: 'verse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'verse' → logprob: -1.0020402669906616
    2. 'sc' → logprob: -1.6270402669906616
    3. 'verted' → logprob: -2.002040386199951
    4. 'versed' → logprob: -2.252040386199951
    5. 'sed' → logprob: -3.502040386199951
    6. 's' → logprob: -3.502040386199951
    7. 'ging' → logprob: -3.752040386199951
    8. 'ge' → logprob: -4.377040386199951
    9. 'ged' → logprob: -4.752040386199951
    10. 'range' → logprob: -4.752040386199951

Token 282: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.060216937214136124
    2. 'ent' → logprob: -3.8102169036865234
    3. 'ing' → logprob: -4.310216903686523
    4. 'e' → logprob: -4.560216903686523
    5. 't' → logprob: -5.685216903686523
    6. '-' → logprob: -5.685216903686523
    7. ',' → logprob: -6.435216903686523
    8. 'nt' → logprob: -7.060216903686523
    9. '1' → logprob: -7.810216903686523
    10. '=' → logprob: -8.310216903686523

Token 283: ' à' (ID: 1221)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.08698534965515137
    2. ' -' → logprob: -2.8369853496551514
    3. '<|end|>' → logprob: -4.5869855880737305
    4. ' ' → logprob: -5.0869855880737305
    5. ',' → logprob: -5.8369855880737305
    6. '(-' → logprob: -6.2119855880737305
    7. '1' → logprob: -7.5869855880737305
    8. '(' → logprob: -7.7119855880737305
    9. ' ,' → logprob: -7.8369855880737305
    10. ')' → logprob: -7.8369855880737305

Token 284: ' chaque' (ID: 21194)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.004983389284461737
    2. ' -' → logprob: -5.379983425140381
    3. 'step' → logprob: -10.254982948303223
    4. '-step' → logprob: -10.254982948303223
    5. 'steps' → logprob: -10.254982948303223
    6. ' steps' → logprob: -10.379982948303223
    7. ' step' → logprob: -10.504982948303223
    8. ' pas' → logprob: -10.504982948303223
    9. 'l' → logprob: -10.629982948303223
    10. '1' → logprob: -10.629982948303223

Token 285: ' fois' (ID: 14697)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.054710522294044495
    2. ' -' → logprob: -3.429710626602173
    3. ' step' → logprob: -4.304710388183594
    4. '-step' → logprob: -5.929710388183594
    5. 'step' → logprob: -6.304710388183594
    6. ' ' → logprob: -7.054710388183594
    7. ' pas' → logprob: -7.179710388183594
    8. '<|end|>' → logprob: -7.554710388183594
    9. '1' → logprob: -8.429710388183594
    10. ' steps' → logprob: -9.554710388183594

Token 286: '.
' (ID: 558)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04559429734945297
    2. ' ,' → logprob: -4.045594215393066
    3. '(' → logprob: -4.295594215393066
    4. '-' → logprob: -5.420594215393066
    5. '(-' → logprob: -5.920594215393066
    6. ' -' → logprob: -6.045594215393066
    7. ',-' → logprob: -6.670594215393066
    8. ',
' → logprob: -7.420594215393066
    9. '(
' → logprob: -8.295594215393066
    10. ' in' → logprob: -8.295594215393066

Token 287: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4741443693637848
    2. ' for' → logprob: -0.9741443395614624
    3. '   ' → logprob: -10.474143981933594
    4. 'range' → logprob: -11.849143981933594
    5. ' ' → logprob: -12.099143981933594
    6. ',' → logprob: -12.474143981933594
    7. ' range' → logprob: -12.599143981933594
    8. '	for' → logprob: -12.724143981933594
    9. 'from' → logprob: -12.974143981933594
    10. '
' → logprob: -13.099143981933594

Token 288: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4741690456867218
    2. ' for' → logprob: -0.9741690158843994
    3. '   ' → logprob: -9.97416877746582
    4. '
' → logprob: -11.47416877746582
    5. '	for' → logprob: -11.72416877746582
    6. 'range' → logprob: -11.72416877746582
    7. ' ' → logprob: -12.22416877746582
    8. ' range' → logprob: -12.22416877746582
    9. ' 
' → logprob: -12.59916877746582
    10. '    
' → logprob: -13.22416877746582

Token 289: ' Ceci' (ID: 144699)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.576087236404419
    2. ' for' → logprob: -0.826087236404419
    3. ' ' → logprob: -9.57608699798584
    4. 'range' → logprob: -11.07608699798584
    5. ' range' → logprob: -11.20108699798584
    6. '   ' → logprob: -11.32608699798584
    7. ' j' → logprob: -11.70108699798584
    8. '
' → logprob: -11.95108699798584
    9. 'j' → logprob: -12.07608699798584
    10. '6' → logprob: -12.70108699798584

Token 290: ' va' (ID: 3423)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.9828834533691406
    2. ' for' → logprob: -1.1078834533691406
    3. ' :' → logprob: -2.2328834533691406
    4. '   ' → logprob: -2.6078834533691406
    5. ':' → logprob: -3.8578834533691406
    6. ' ' → logprob: -4.107883453369141
    7. '    ' → logprob: -4.357883453369141
    8. 'for' → logprob: -4.357883453369141
    9. ' dans' → logprob: -4.482883453369141
    10. 'in' → logprob: -4.857883453369141

Token 291: ' servir' (ID: 42557)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9361512064933777
    2. 'for' → logprob: -1.6861512660980225
    3. 'range' → logprob: -1.8111512660980225
    4. '   ' → logprob: -2.0611512660980225
    5. ' range' → logprob: -2.1861512660980225
    6. ' ' → logprob: -4.811151027679443
    7. '    ' → logprob: -5.811151027679443
    8. ' j' → logprob: -7.061151027679443
    9. ' reverse' → logprob: -7.498651027679443
    10. '  ' → logprob: -7.748651027679443

Token 292: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.20463311672210693
    2. ' to' → logprob: -2.0796332359313965
    3. ' de' → logprob: -4.2046332359313965
    4. '    ' → logprob: -4.3296332359313965
    5. '   ' → logprob: -4.5796332359313965
    6. ' j' → logprob: -4.9546332359313965
    7. ' ' → logprob: -5.5796332359313965
    8. ' a' → logprob: -5.7046332359313965
    9. ' for' → logprob: -5.8296332359313965
    10. 'to' → logprob: -6.5796332359313965

Token 293: ' examiner' (ID: 115931)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.47690993547439575
    2. 'for' → logprob: -1.226909875869751
    3. 'j' → logprob: -3.976909875869751
    4. ' range' → logprob: -4.22691011428833
    5. ' for' → logprob: -4.60191011428833
    6. 'div' → logprob: -4.85191011428833
    7. '6' → logprob: -5.47691011428833
    8. ' ' → logprob: -5.60191011428833
    9. 'calculate' → logprob: -5.60191011428833
    10. '7' → logprob: -6.22691011428833

Token 294: ' les' (ID: 1341)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.47936201095581055
    2. ' range' → logprob: -1.8543620109558105
    3. ' ' → logprob: -2.3543620109558105
    4. 'range' → logprob: -2.6043620109558105
    5. 'j' → logprob: -3.6043620109558105
    6. ' for' → logprob: -4.7293620109558105
    7. ' [' → logprob: -5.3543620109558105
    8. '6' → logprob: -5.7293620109558105
    9. '[' → logprob: -5.9793620109558105
    10. '9' → logprob: -6.2293620109558105

Token 295: ' puiss' (ID: 102546)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.47901201248168945
    2. ' ' → logprob: -1.3540120124816895
    3. 'j' → logprob: -3.1040120124816895
    4. ' powers' → logprob: -3.6040120124816895
    5. ' range' → logprob: -3.7290120124816895
    6. 'range' → logprob: -5.3540120124816895
    7. '6' → logprob: -5.6040120124816895
    8. '   ' → logprob: -5.6040120124816895
    9. ' [' → logprob: -5.6040120124816895
    10. 'powers' → logprob: -6.3540120124816895

Token 296: 'ances' (ID: 3528)
  Prédit: 'ances'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ances' → logprob: -0.026052704080939293
    2. 'for' → logprob: -5.151052474975586
    3. 'ores' → logprob: -6.026052474975586
    4. 'indices' → logprob: -6.401052474975586
    5. 'ences' → logprob: -6.651052474975586
    6. 'ance' → logprob: -6.651052474975586
    7. 'is' → logprob: -6.901052474975586
    8. 'ons' → logprob: -7.026052474975586
    9. 'odes' → logprob: -7.276052474975586
    10. ')' → logprob: -7.526052474975586

Token 297: ' de' (ID: 334)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -1.394527792930603
    2. ' j' → logprob: -2.0195279121398926
    3. ' de' → logprob: -2.1445279121398926
    4. '   ' → logprob: -2.3945279121398926
    5. 'j' → logprob: -2.6445279121398926
    6. '(' → logprob: -3.0195279121398926
    7. '(j' → logprob: -3.1445279121398926
    8. ' ' → logprob: -3.2695279121398926
    9. '9' → logprob: -3.6445279121398926
    10. '6' → logprob: -3.6445279121398926

Token 298: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.36211293935775757
    2. ' ' → logprob: -1.2371129989624023
    3. '6' → logprob: -5.362112998962402
    4. '2' → logprob: -5.362112998962402
    5. '10' → logprob: -6.862112998962402
    6. '7' → logprob: -6.862112998962402
    7. 'j' → logprob: -7.862112998962402
    8. '   ' → logprob: -7.987112998962402
    9. '```' → logprob: -7.987112998962402
    10. ' j' → logprob: -8.362112998962402

Token 299: '9' (ID: 24)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.6948723196983337
    2. '9' → logprob: -0.9448723196983337
    3. '7' → logprob: -3.5698723793029785
    4. ' ' → logprob: -3.8198723793029785
    5. '10' → logprob: -3.9448723793029785
    6. ' j' → logprob: -4.1948723793029785
    7. '6' → logprob: -4.4448723793029785
    8. '2' → logprob: -4.6948723793029785
    9. '```' → logprob: -5.9448723793029785
    10. '1' → logprob: -7.0698723793029785

Token 300: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2933717966079712
    2. ' ,' → logprob: -2.2933716773986816
    3. '**' → logprob: -2.5433716773986816
    4. ' **' → logprob: -4.168371677398682
    5. ' ' → logprob: -4.418371677398682
    6. ' and' → logprob: -4.543371677398682
    7. ',j' → logprob: -5.168371677398682
    8. ' down' → logprob: -5.168371677398682
    9. '   ' → logprob: -5.668371677398682
    10. '(' → logprob: -5.668371677398682

Token 301: ' de' (ID: 334)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.2837649583816528
    2. ' ' → logprob: -1.4087649583816528
    3. 'for' → logprob: -1.9087649583816528
    4. '7' → logprob: -2.5337648391723633
    5. '9' → logprob: -2.5337648391723633
    6. ' for' → logprob: -3.4087648391723633
    7. ' j' → logprob: -3.5337648391723633
    8. '#' → logprob: -3.7837648391723633
    9. '   ' → logprob: -3.9087648391723633
    10. '    ' → logprob: -4.033764839172363

Token 302: ' ' (ID: 220)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.13221873342990875
    2. ' j' → logprob: -2.882218837738037
    3. '9' → logprob: -3.132218837738037
    4. '6' → logprob: -4.382218837738037
    5. ' ' → logprob: -4.882218837738037
    6. '7' → logprob: -5.882218837738037
    7. '1' → logprob: -7.882218837738037
    8. '```' → logprob: -8.007218360900879
    9. '2' → logprob: -8.632218360900879
    10. '3' → logprob: -10.007218360900879

Token 303: '9' (ID: 24)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.14428819715976715
    2. '6' → logprob: -2.8942883014678955
    3. '9' → logprob: -2.8942883014678955
    4. ' j' → logprob: -4.894288063049316
    5. '1' → logprob: -5.394288063049316
    6. '7' → logprob: -5.769288063049316
    7. ' ' → logprob: -6.019288063049316
    8. '2' → logprob: -6.144288063049316
    9. '5' → logprob: -6.269288063049316
    10. '```' → logprob: -7.519288063049316

Token 304: '^' (ID: 61)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.45510175824165344
    2. ',' → logprob: -1.705101728439331
    3. 'j' → logprob: -3.080101728439331
    4. ' ,' → logprob: -3.455101728439331
    5. '7' → logprob: -3.955101728439331
    6. ',j' → logprob: -3.955101728439331
    7. ' **' → logprob: -4.08010196685791
    8. ' ' → logprob: -4.83010196685791
    9. '
' → logprob: -5.08010196685791
    10. '-j' → logprob: -5.20510196685791

Token 305: '6' (ID: 21)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.19486916065216064
    2. '6' → logprob: -2.069869041442871
    3. '7' → logprob: -3.569869041442871
    4. '0' → logprob: -4.819869041442871
    5. '2' → logprob: -5.444869041442871
    6. '3' → logprob: -5.944869041442871
    7. '9' → logprob: -6.319869041442871
    8. ' ' → logprob: -6.444869041442871
    9. '5' → logprob: -6.569869041442871
    10. '1' → logprob: -6.569869041442871

Token 306: ' à' (ID: 1221)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.030103808268904686
    2. ' ,' → logprob: -3.655103921890259
    3. ' -' → logprob: -7.03010368347168
    4. ' down' → logprob: -7.40510368347168
    5. '+' → logprob: -7.78010368347168
    6. ' +' → logprob: -8.03010368347168
    7. '-' → logprob: -8.40510368347168
    8. 'down' → logprob: -8.40510368347168
    9. ' ' → logprob: -8.65510368347168
    10. ')' → logprob: -8.90510368347168

Token 307: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.23506340384483337
    2. ' ' → logprob: -1.6100634336471558
    3. '1' → logprob: -4.860063552856445
    4. '0' → logprob: -6.485063552856445
    5. '6' → logprob: -8.235063552856445
    6. '5' → logprob: -11.172563552856445
    7. '7' → logprob: -12.172563552856445
    8. '  ' → logprob: -12.235063552856445
    9. '```' → logprob: -12.485063552856445
    10. '   ' → logprob: -12.547563552856445

Token 308: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.09362494945526123
    2. ' ' → logprob: -2.593625068664551
    3. '1' → logprob: -4.343625068664551
    4. '0' → logprob: -6.718625068664551
    5. '6' → logprob: -7.968625068664551
    6. '```' → logprob: -11.15612506866455
    7. '2' → logprob: -11.46862506866455
    8. '   ' → logprob: -11.71862506866455
    9. '7' → logprob: -11.96862506866455
    10. '  ' → logprob: -12.15612506866455

Token 309: '^' (ID: 61)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.5202589631080627
    2. '^' → logprob: -1.270258903503418
    3. ' ' → logprob: -2.645258903503418
    4. '**' → logprob: -3.770258903503418
    5. '7' → logprob: -4.270258903503418
    6. ',' → logprob: -4.770258903503418
    7. '0' → logprob: -5.770258903503418
    8. '(' → logprob: -7.020258903503418
    9. ')' → logprob: -7.270258903503418
    10. '_' → logprob: -7.395258903503418

Token 310: '1' (ID: 16)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.059213027358055115
    2. '5' → logprob: -3.4342129230499268
    3. '1' → logprob: -4.434213161468506
    4. '0' → logprob: -4.809213161468506
    5. ' ' → logprob: -5.309213161468506
    6. '7' → logprob: -9.309212684631348
    7. 'j' → logprob: -9.559212684631348
    8. '  ' → logprob: -10.684212684631348
    9. '```' → logprob: -10.996712684631348
    10. '   ' → logprob: -11.059212684631348

Token 311: '.
' (ID: 558)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7841384410858154
    2. 'for' → logprob: -1.0341384410858154
    3. ' for' → logprob: -1.9091384410858154
    4. ':' → logprob: -4.1591386795043945
    5. ' ,' → logprob: -4.4091386795043945
    6. '   ' → logprob: -4.9091386795043945
    7. '[::-' → logprob: -6.6591386795043945
    8. ' :' → logprob: -7.4091386795043945
    9. ' in' → logprob: -7.9091386795043945
    10. ':
' → logprob: -8.159138679504395

Token 312: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3141009509563446
    2. ' for' → logprob: -1.314100980758667
    3. ',' → logprob: -8.564101219177246
    4. '   ' → logprob: -8.564101219177246
    5. ' ' → logprob: -9.689101219177246
    6. '6' → logprob: -9.814101219177246
    7. ':' → logprob: -9.814101219177246
    8. ' range' → logprob: -10.064101219177246
    9. 'range' → logprob: -10.064101219177246
    10. ' ,' → logprob: -10.439101219177246

Token 313: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.07902506738901138
    2. ' for' → logprob: -2.5790250301361084
    3. '   ' → logprob: -9.454025268554688
    4. '
' → logprob: -10.704025268554688
    5. ' ' → logprob: -12.204025268554688
    6. '	for' → logprob: -12.329025268554688
    7. 'from' → logprob: -12.579025268554688
    8. ' in' → logprob: -12.829025268554688
    9. 'range' → logprob: -12.954025268554688
    10. '```' → logprob: -12.954025268554688

Token 314: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.38718149065971375
    2. 'j' → logprob: -1.1371815204620361
    3. ' ' → logprob: -8.637181282043457
    4. '	j' → logprob: -9.887181282043457
    5. '7' → logprob: -11.012181282043457
    6. '9' → logprob: -11.012181282043457
    7. '6' → logprob: -11.012181282043457
    8. '```' → logprob: -11.262181282043457
    9. '  ' → logprob: -12.512181282043457
    10. '   ' → logprob: -13.137181282043457

Token 315: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01198621466755867
    2. 'in' → logprob: -4.511986255645752
    3. ' ' → logprob: -7.011986255645752
    4. '	in' → logprob: -11.011985778808594
    5. '6' → logprob: -11.761985778808594
    6. '  ' → logprob: -12.886985778808594
    7. '1' → logprob: -13.886985778808594
    8. ' =' → logprob: -14.011985778808594
    9. '   ' → logprob: -14.386985778808594
    10. '=' → logprob: -14.449485778808594

Token 316: ' range' (ID: 3352)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.46850255131721497
    2. ' ' → logprob: -1.4685025215148926
    3. ' range' → logprob: -2.4685025215148926
    4. 'range' → logprob: -2.8435025215148926
    5. '[' → logprob: -7.968502521514893
    6. ' reversed' → logprob: -9.09350299835205
    7. ' [' → logprob: -9.46850299835205
    8. '(' → logprob: -9.84350299835205
    9. '	range' → logprob: -10.09350299835205
    10. 'reverse' → logprob: -10.21850299835205

Token 317: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.000931825372390449
    2. '6' → logprob: -7.000931739807129
    3. ' (' → logprob: -11.125931739807129
    4. ' ' → logprob: -12.375931739807129
    5. '(
' → logprob: -14.250931739807129
    6. ',' → logprob: -15.250931739807129
    7. ')' → logprob: -16.438432693481445
    8. '   ' → logprob: -16.625932693481445
    9. '((' → logprob: -16.875932693481445
    10. '```' → logprob: -17.375932693481445

Token 318: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.00012403888104017824
    2. ' ' → logprob: -9.000123977661133
    3. '   ' → logprob: -15.500123977661133
    4. '  ' → logprob: -16.625123977661133
    5. '६' → logprob: -16.687623977661133
    6. '۶' → logprob: -17.125123977661133
    7. '٦' → logprob: -17.187623977661133
    8. '৬' → logprob: -17.312623977661133
    9. '' → logprob: -17.312623977661133
    10. ',' → logprob: -17.437623977661133

Token 319: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002967320033349097
    2. ' ,' → logprob: -8.125296592712402
    3. '6' → logprob: -14.375296592712402
    4. ',
' → logprob: -17.12529754638672
    5. '0' → logprob: -17.50029754638672
    6. '   ' → logprob: -17.62529754638672
    7. '1' → logprob: -17.75029754638672
    8. ',-' → logprob: -18.50029754638672
    9. ' ' → logprob: -18.75029754638672
    10. '，' → logprob: -18.87529754638672

Token 320: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04300136864185333
    2. ' ' → logprob: -3.168001413345337
    3. '  ' → logprob: -14.543001174926758
    4. '1' → logprob: -14.605501174926758
    5. '   ' → logprob: -15.605501174926758
    6. '-' → logprob: -15.730501174926758
    7. '
' → logprob: -15.855501174926758
    8. '  
' → logprob: -15.855501174926758
    9. '```' → logprob: -15.918001174926758
    10. ' -' → logprob: -15.980501174926758

Token 321: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00014180023572407663
    2. ' ' → logprob: -8.875142097473145
    3. '1' → logprob: -14.375142097473145
    4. '   ' → logprob: -15.500142097473145
    5. '
' → logprob: -15.562642097473145
    6. '6' → logprob: -15.750142097473145
    7. '```' → logprob: -15.937642097473145
    8. '  ' → logprob: -16.000141143798828
    9. '2' → logprob: -16.312641143798828
    10. '-' → logprob: -16.437641143798828

Token 322: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5374363660812378
    2. '-' → logprob: -1.0374363660812378
    3. ' -' → logprob: -2.9124364852905273
    4. ' ,' → logprob: -5.162436485290527
    5. ',-' → logprob: -7.287436485290527
    6. '   ' → logprob: -8.537436485290527
    7. ' ' → logprob: -8.537436485290527
    8. '-,' → logprob: -9.162436485290527
    9. ' ,-' → logprob: -9.287436485290527
    10. '  ' → logprob: -11.537436485290527

Token 323: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.011048642918467522
    2. ' -' → logprob: -4.511048793792725
    3. ' ' → logprob: -14.886048316955566
    4. '   ' → logprob: -16.136049270629883
    5. ')' → logprob: -16.261049270629883
    6. '```' → logprob: -16.261049270629883
    7. '-step' → logprob: -16.261049270629883
    8. '-)' → logprob: -17.511049270629883
    9. '-
' → logprob: -17.761049270629883
    10. '  ' → logprob: -17.886049270629883

Token 324: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.875
    3. ')' → logprob: -18.375
    4. '-' → logprob: -18.5
    5. ' -' → logprob: -18.75
    6. '```' → logprob: -19.25
    7. '
' → logprob: -20.0
    8. '   ' → logprob: -20.0
    9. '2' → logprob: -20.375
    10. '

' → logprob: -20.5

Token 325: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.026661934331059456
    2. '):
' → logprob: -3.6516618728637695
    3. ' ):' → logprob: -8.52666187286377
    4. ':' → logprob: -9.77666187286377
    5. ')' → logprob: -10.15166187286377
    6. '   ' → logprob: -10.65166187286377
    7. '):
' → logprob: -11.15166187286377
    8. '1' → logprob: -11.90166187286377
    9. ' ):
' → logprob: -12.40166187286377
    10. '):

' → logprob: -12.77666187286377

Token 326: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10870847851037979
    2. '9' → logprob: -3.108708381652832
    3. '       ' → logprob: -3.483708381652832
    4. ' ' → logprob: -4.483708381652832
    5. ':' → logprob: -5.358708381652832
    6. '<|end|>' → logprob: -5.358708381652832
    7. '    ' → logprob: -5.733708381652832
    8. '    
' → logprob: -6.983708381652832
    9. '  ' → logprob: -7.108708381652832
    10. ')' → logprob: -8.233708381652832

Token 327: ' #' (ID: 1069)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -1.3595350980758667
    2. ' ' → logprob: -1.3595350980758667
    3. ' while' → logprob: -2.1095352172851562
    4. 'pow' → logprob: -2.4845352172851562
    5. '       ' → logprob: -3.1095352172851562
    6. '        ' → logprob: -3.1095352172851562
    7. 'while' → logprob: -3.4845352172851562
    8. '   ' → logprob: -3.4845352172851562
    9. ' pow' → logprob: -3.6095352172851562
    10. '    ' → logprob: -3.8595352172851562

Token 328: ' On' (ID: 2160)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.7473156452178955
    2. 'while' → logprob: -2.3723156452178955
    3. ' cnt' → logprob: -2.4973156452178955
    4. 'q' → logprob: -2.4973156452178955
    5. 'pow' → logprob: -2.4973156452178955
    6. 'power' → logprob: -3.2473156452178955
    7. ' while' → logprob: -3.7473156452178955
    8. 'div' → logprob: -4.247315406799316
    9. ' power' → logprob: -4.372315406799316
    10. ' q' → logprob: -4.372315406799316

Token 329: ' calc' (ID: 25691)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.3473271131515503
    2. '=' → logprob: -1.5973271131515503
    3. ' ' → logprob: -2.47232723236084
    4. '_' → logprob: -2.59732723236084
    5. 'while' → logprob: -2.84732723236084
    6. 'div' → logprob: -2.97232723236084
    7. '    ' → logprob: -2.97232723236084
    8. ' while' → logprob: -3.22232723236084
    9. ' #' → logprob: -3.34732723236084
    10. 't' → logprob: -4.09732723236084

Token 330: 'ule' (ID: 1601)
  Prédit: 'ule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ule' → logprob: -0.5827336311340332
    2. 'ul' → logprob: -0.8327336311340332
    3. 'ulate' → logprob: -5.957733631134033
    4. 'uler' → logprob: -6.082733631134033
    5. 'cule' → logprob: -7.332733631134033
    6. 'ulte' → logprob: -7.832733631134033
    7. 'ulé' → logprob: -8.582733154296875
    8. 'cul' → logprob: -8.707733154296875
    9. 'u' → logprob: -9.332733154296875
    10. '#' → logprob: -9.457733154296875

Token 331: ' ' (ID: 220)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -1.4488354921340942
    2. ' pow' → logprob: -2.0738353729248047
    3. '   ' → logprob: -2.1988353729248047
    4. ' power' → logprob: -2.4488353729248047
    5. ' cnt' → logprob: -2.6988353729248047
    6. ' ' → logprob: -2.6988353729248047
    7. ' nb' → logprob: -3.8238353729248047
    8. ' n' → logprob: -3.8238353729248047
    9. 'cnt' → logprob: -3.8238353729248047
    10. ' q' → logprob: -3.9488353729248047

Token 332: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.535739541053772
    2. 'cnt' → logprob: -1.535739541053772
    3. 'pow' → logprob: -2.7857394218444824
    4. '   ' → logprob: -3.1607394218444824
    5. 'power' → logprob: -3.5357394218444824
    6. '(' → logprob: -3.7857394218444824
    7. 'y' → logprob: -4.660739421844482
    8. ' ' → logprob: -5.035739421844482
    9. ' cnt' → logprob: -5.535739421844482
    10. 'powers' → logprob: -6.035739421844482

Token 333: ' expos' (ID: 10300)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.04907836765050888
    2. ' **' → logprob: -3.0490784645080566
    3. '^' → logprob: -7.799078464508057
    4. '9' → logprob: -10.299077987670898
    5. ' ' → logprob: -10.549077987670898
    6. 'pow' → logprob: -12.174077987670898
    7. '_pow' → logprob: -12.799077987670898
    8. ' ^' → logprob: -13.174077987670898
    9. '**)' → logprob: -13.424077987670898
    10. '   ' → logprob: -13.424077987670898

Token 334: 'ant' (ID: 493)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.24815914034843445
    2. 'j' → logprob: -1.8731591701507568
    3. '9' → logprob: -3.373159170150757
    4. '(j' → logprob: -3.748159170150757
    5. '[j' → logprob: -5.998158931732178
    6. ' j' → logprob: -6.373158931732178
    7. '*j' → logprob: -7.123158931732178
    8. '```' → logprob: -7.248158931732178
    9. '=j' → logprob: -7.498158931732178
    10. 'pow' → logprob: -7.623158931732178

Token 335: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.02690310776233673
    2. ' j' → logprob: -3.6519031524658203
    3. '(j' → logprob: -7.65190315246582
    4. ' (' → logprob: -9.40190315246582
    5. '(' → logprob: -10.65190315246582
    6. '9' → logprob: -12.15190315246582
    7. ' ' → logprob: -12.40190315246582
    8. '```' → logprob: -12.77690315246582
    9. '   ' → logprob: -12.90190315246582
    10. '       ' → logprob: -13.27690315246582

Token 336: ' et' (ID: 859)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.7233788967132568
    2. ' **' → logprob: -1.2233788967132568
    3. '9' → logprob: -1.9733788967132568
    4. ')' → logprob: -2.973378896713257
    5. '   ' → logprob: -4.348379135131836
    6. 'pow' → logprob: -5.723379135131836
    7. ')**' → logprob: -5.973379135131836
    8. ' ' → logprob: -5.973379135131836
    9. '       ' → logprob: -6.098379135131836
    10. ',' → logprob: -6.848379135131836

Token 337: ' le' (ID: 505)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3917468190193176
    2. '9' → logprob: -1.8917467594146729
    3. 'pow' → logprob: -2.891746759414673
    4. ' (' → logprob: -3.266746759414673
    5. ' pow' → logprob: -4.266746997833252
    6. '   ' → logprob: -4.266746997833252
    7. ' val' → logprob: -4.516746997833252
    8. 'val' → logprob: -4.766746997833252
    9. '(' → logprob: -5.016746997833252
    10. '    ' → logprob: -6.141746997833252

Token 338: ' stock' (ID: 6546)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.7536062598228455
    2. 'val' → logprob: -1.7536063194274902
    3. 'div' → logprob: -2.0036063194274902
    4. 'quot' → logprob: -3.0036063194274902
    5. '9' → logprob: -3.1286063194274902
    6. 'value' → logprob: -3.6286063194274902
    7. 'p' → logprob: -4.37860631942749
    8. 'pu' → logprob: -4.50360631942749
    9. 'power' → logprob: -5.00360631942749
    10. 'put' → logprob: -5.00360631942749

Token 339: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0391860269010067
    2. 'é' → logprob: -4.539186000823975
    3. 'er' → logprob: -4.914186000823975
    4. '=' → logprob: -4.914186000823975
    5. 'age' → logprob: -4.914186000823975
    6. 'ant' → logprob: -5.914186000823975
    7. ' =' → logprob: -6.289186000823975
    8. 'eur' → logprob: -7.664186000823975
    9. 'ent' → logprob: -8.414186477661133
    10. 'ons' → logprob: -9.164186477661133

Token 340: ' dans' (ID: 2671)
  Prédit: ' dans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dans' → logprob: -0.0979708582162857
    2. 'dans' → logprob: -3.597970962524414
    3. '9' → logprob: -3.972970962524414
    4. ' =' → logprob: -4.222970962524414
    5. '=' → logprob: -4.597970962524414
    6. '_' → logprob: -5.097970962524414
    7. ' in' → logprob: -5.097970962524414
    8. ' ' → logprob: -6.097970962524414
    9. 'pow' → logprob: -6.597970962524414
    10. ',' → logprob: -6.972970962524414

Token 341: ' t' (ID: 260)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.22092919051647186
    2. 'power' → logprob: -2.3459291458129883
    3. 'p' → logprob: -3.2209291458129883
    4. 'val' → logprob: -3.3459291458129883
    5. 'tmp' → logprob: -5.470929145812988
    6. 'x' → logprob: -5.720929145812988
    7. 'temp' → logprob: -6.345929145812988
    8. 'n' → logprob: -6.345929145812988
    9. '   ' → logprob: -6.470929145812988
    10. 'num' → logprob: -6.470929145812988

Token 342: '9' (ID: 24)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1375168263912201
    2. '9' → logprob: -3.012516736984253
    3. 't' → logprob: -3.762516736984253
    4. '=' → logprob: -3.762516736984253
    5. ' ' → logprob: -4.012516975402832
    6. '_' → logprob: -4.637516975402832
    7. '  ' → logprob: -7.137516975402832
    8. 'p' → logprob: -7.262516975402832
    9. '   ' → logprob: -7.262516975402832
    10. 's' → logprob: -7.262516975402832

Token 343: '.
' (ID: 558)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.033427365124225616
    2. '=' → logprob: -3.5334274768829346
    3. '9' → logprob: -6.1584272384643555
    4. 't' → logprob: -7.2834272384643555
    5. '   ' → logprob: -7.6584272384643555
    6. ' ' → logprob: -8.658427238464355
    7. '    ' → logprob: -9.658427238464355
    8. '       ' → logprob: -10.033427238464355
    9. '_t' → logprob: -10.283427238464355
    10. ',' → logprob: -10.908427238464355

Token 344: '       ' (ID: 309)
  Prédit: ' t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -1.1128807067871094
    2. '   ' → logprob: -1.1128807067871094
    3. 't' → logprob: -1.7378807067871094
    4. ' =' → logprob: -2.3628807067871094
    5. '       ' → logprob: -2.8628807067871094
    6. '	t' → logprob: -5.112880706787109
    7. '=' → logprob: -5.362880706787109
    8. '9' → logprob: -6.112880706787109
    9. ' ' → logprob: -7.237880706787109
    10. '    ' → logprob: -7.862880706787109

Token 345: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' (adapté à ' t') → logprob: -0.5405288934707642
    2. ' t' → logprob: -1.0405288934707642
    3. '       ' → logprob: -2.7905287742614746
    4. '   ' → logprob: -5.915528774261475
    5. '	t' → logprob: -9.040529251098633
    6. '    ' → logprob: -10.415529251098633
    7. '        ' → logprob: -11.165529251098633
    8. ' ' → logprob: -11.290529251098633
    9. ' ' → logprob: -12.040529251098633
    10. '        
' → logprob: -12.540529251098633

Token 346: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -3.054500666621607e-06
    2. ' =' → logprob: -13.12500286102295
    3. '=' → logprob: -14.50000286102295
    4. ' ' → logprob: -14.62500286102295
    5. '_' → logprob: -17.000003814697266
    6. '９' → logprob: -17.500003814697266
    7. '۹' → logprob: -17.625003814697266
    8. '  ' → logprob: -18.125003814697266
    9. '९' → logprob: -18.625003814697266
    10. '٩' → logprob: -18.625003814697266

Token 347: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759400725364685
    2. '=' → logprob: -0.8259400725364685
    3. '＝' → logprob: -15.450940132141113
    4. ' ' → logprob: -15.700940132141113
    5. '9' → logprob: -15.825940132141113
    6. 't' → logprob: -17.075939178466797
    7. '=int' → logprob: -18.075939178466797
    8. '   ' → logprob: -18.075939178466797
    9. ' ' → logprob: -18.075939178466797
    10. '	' → logprob: -18.200939178466797

Token 348: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.007611601613461971
    2. ' ' → logprob: -4.8826117515563965
    3. 'pow' → logprob: -12.257611274719238
    4. '   ' → logprob: -14.632611274719238
    5. ' pow' → logprob: -15.132611274719238
    6. '  ' → logprob: -16.882612228393555
    7. '(' → logprob: -17.132612228393555
    8. ' ' → logprob: -18.007612228393555
    9. 'int' → logprob: -18.757612228393555
    10. '```' → logprob: -18.882612228393555

Token 349: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -1.0445127372804563e-05
    2. ' ' → logprob: -11.50001049041748
    3. 'pow' → logprob: -15.25001049041748
    4. '   ' → logprob: -19.625009536743164
    5. '91' → logprob: -20.750009536743164
    6. '  ' → logprob: -21.125009536743164
    7. 'int' → logprob: -21.125009536743164
    8. '(' → logprob: -21.250009536743164
    9. '99' → logprob: -21.375009536743164
    10. '09' → logprob: -21.625009536743164

Token 350: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.20141372084617615
    2. ' **' → logprob: -1.7014137506484985
    3. '[j' → logprob: -14.826414108276367
    4. '```' → logprob: -17.451414108276367
    5. ' ' → logprob: -17.576414108276367
    6. '*j' → logprob: -17.951414108276367
    7. '^' → logprob: -18.326414108276367
    8. '*' → logprob: -18.326414108276367
    9. '
' → logprob: -18.951414108276367
    10. '**)' → logprob: -19.201414108276367

Token 351: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.9743012671824545e-05
    2. ' j' → logprob: -10.875020027160645
    3. '   ' → logprob: -14.875020027160645
    4. '	j' → logprob: -15.000020027160645
    5. '$j' → logprob: -18.000019073486328
    6. '  ' → logprob: -18.250019073486328
    7. '    ' → logprob: -18.250019073486328
    8. ' ' → logprob: -18.625019073486328
    9. '<|end|>' → logprob: -18.625019073486328
    10. '[j' → logprob: -19.000019073486328

Token 352: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020586732774972916
    2. '
' → logprob: -4.145586967468262
    3. '        
' → logprob: -6.145586967468262
    4. '   ' → logprob: -6.895586967468262
    5. '<|end|>' → logprob: -7.145586967468262
    6. '  
' → logprob: -9.270586967468262
    7. '#' → logprob: -9.395586967468262
    8. ')' → logprob: -9.895586967468262
    9. ' 
' → logprob: -10.020586967468262
    10. '    
' → logprob: -10.020586967468262

Token 353: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17257604002952576
    2. '<|end|>' → logprob: -2.6725759506225586
    3. '   ' → logprob: -3.1725759506225586
    4. '
' → logprob: -3.2975759506225586
    5. '        
' → logprob: -6.047575950622559
    6. '    
' → logprob: -6.547575950622559
    7. '  
' → logprob: -6.797575950622559
    8. 'while' → logprob: -6.922575950622559
    9. ' 
' → logprob: -7.047575950622559
    10. '<|end|>' → logprob: -7.297575950622559

Token 354: ' #' (ID: 1069)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.7240259647369385
    2. 'while' → logprob: -1.3490259647369385
    3. ' while' → logprob: -2.0990259647369385
    4. ' cnt' → logprob: -2.5990259647369385
    5. '       ' → logprob: -3.4740259647369385
    6. '   ' → logprob: -4.599025726318359
    7. 'if' → logprob: -5.849025726318359
    8. ' y' → logprob: -6.474025726318359
    9. 'y' → logprob: -6.474025726318359
    10. 'q' → logprob: -6.474025726318359

Token 355: ' Si' (ID: 7832)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.5691903829574585
    2. 'cnt' → logprob: -0.9441903829574585
    3. ' while' → logprob: -3.694190502166748
    4. 't' → logprob: -4.694190502166748
    5. ' cnt' → logprob: -5.194190502166748
    6. '#' → logprob: -6.069190502166748
    7. '9' → logprob: -6.569190502166748
    8. '       ' → logprob: -7.569190502166748
    9. '   ' → logprob: -7.694190502166748
    10. 'q' → logprob: -8.44419002532959

Token 356: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.018414819613099098
    2. 'y' → logprob: -4.0184149742126465
    3. ' t' → logprob: -8.643414497375488
    4. ' ' → logprob: -9.768414497375488
    5. 't' → logprob: -10.768414497375488
    6. '	y' → logprob: -12.643414497375488
    7. ' ' → logprob: -12.768414497375488
    8. '  ' → logprob: -13.518414497375488
    9. '   ' → logprob: -14.018414497375488
    10. '(y' → logprob: -14.018414497375488

Token 357: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.451116051815916e-05
    2. '2' → logprob: -11.375024795532227
    3. '   ' → logprob: -13.312524795532227
    4. '_' → logprob: -13.562524795532227
    5. ' ' → logprob: -13.625024795532227
    6. '>' → logprob: -13.625024795532227
    7. '9' → logprob: -13.687524795532227
    8. ',' → logprob: -14.250024795532227
    9. '```' → logprob: -14.312524795532227
    10. '>=' → logprob: -14.500024795532227

Token 358: ' est' (ID: 893)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.023290663957595825
    2. '>=' → logprob: -3.7732906341552734
    3. ' ' → logprob: -10.773290634155273
    4. '   ' → logprob: -11.273290634155273
    5. '>' → logprob: -13.273290634155273
    6. ' //' → logprob: -13.398290634155273
    7. '	' → logprob: -13.398290634155273
    8. ' >' → logprob: -13.773290634155273
    9. ' ' → logprob: -14.023290634155273
    10. ']>=' → logprob: -14.023290634155273

Token 359: ' supérieur' (ID: 98491)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.11360087245702744
    2. '>=' → logprob: -2.488600969314575
    3. ' supérieur' → logprob: -4.613600730895996
    4. ' greater' → logprob: -5.363600730895996
    5. '   ' → logprob: -6.238600730895996
    6. ' ' → logprob: -6.488600730895996
    7. 't' → logprob: -6.488600730895996
    8. 'greater' → logprob: -6.863600730895996
    9. ' t' → logprob: -7.238600730895996
    10. '>' → logprob: -7.363600730895996

Token 360: ' ou' (ID: 2031)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.019723230972886086
    2. ' ou' → logprob: -4.144723415374756
    3. ' =' → logprob: -5.769723415374756
    4. 'ou' → logprob: -8.144722938537598
    5. ' à' → logprob: -9.894722938537598
    6. 'à' → logprob: -10.394722938537598
    7. '        ' → logprob: -10.394722938537598
    8. ' or' → logprob: -10.519722938537598
    9. '>=' → logprob: -10.519722938537598
    10. ' ' → logprob: -10.644722938537598

Token 361: ' égal' (ID: 15059)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0016193612245842814
    2. 'égal' → logprob: -6.626619338989258
    3. ' égal' → logprob: -8.376619338989258
    4. ' ég' → logprob: -10.626619338989258
    5. '=t' → logprob: -12.126619338989258
    6. ' =' → logprob: -12.251619338989258
    7. 'egal' → logprob: -12.251619338989258
    8. 'ég' → logprob: -12.501619338989258
    9. '0' → logprob: -12.626619338989258
    10. '=#' → logprob: -12.876619338989258

Token 362: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.020910516381263733
    2. 'à' → logprob: -4.020910739898682
    3. ' ' → logprob: -7.145910739898682
    4. 't' → logprob: -7.395910739898682
    5. ' to' → logprob: -7.895910739898682
    6. ' a' → logprob: -8.145910263061523
    7. ' ' → logprob: -8.520910263061523
    8. ' t' → logprob: -9.020910263061523
    9. 'to' → logprob: -9.770910263061523
    10. 'a' → logprob: -10.020910263061523

Token 363: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.25193649530410767
    2. ' t' → logprob: -1.501936435699463
    3. ' ' → logprob: -13.001936912536621
    4. '	t' → logprob: -13.001936912536621
    5. '   ' → logprob: -13.626936912536621
    6. '`t' → logprob: -14.251936912536621
    7. ' ' → logprob: -14.376936912536621
    8. '    ' → logprob: -16.126935958862305
    9. '       ' → logprob: -16.501935958862305
    10. '(t' → logprob: -17.126935958862305

Token 364: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -1.3902033970225602e-05
    2. ' ' → logprob: -12.250014305114746
    3. '1' → logprob: -12.375014305114746
    4. '   ' → logprob: -13.500014305114746
    5. '```' → logprob: -14.250014305114746
    6. '_' → logprob: -15.000014305114746
    7. 'y' → logprob: -15.312514305114746
    8. '  ' → logprob: -15.375014305114746
    9. ',' → logprob: -15.375014305114746
    10. '       ' → logprob: -15.625014305114746

Token 365: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01173187606036663
    2. ':
' → logprob: -4.76173210144043
    3. ' :' → logprob: -6.76173210144043
    4. '       ' → logprob: -6.88673210144043
    5. ',' → logprob: -7.13673210144043
    6. ' :
' → logprob: -9.88673210144043
    7. '   ' → logprob: -10.38673210144043
    8. '           ' → logprob: -10.51173210144043
    9. '):' → logprob: -11.63673210144043
    10. ' and' → logprob: -12.13673210144043

Token 366: ' cela' (ID: 17542)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6603049635887146
    2. '       ' → logprob: -0.9103049635887146
    3. ' cnt' → logprob: -3.0353050231933594
    4. ' if' → logprob: -4.785305023193359
    5. ' y' → logprob: -5.035305023193359
    6. '        ' → logprob: -5.160305023193359
    7. 'cnt' → logprob: -5.410305023193359
    8. ' while' → logprob: -6.410305023193359
    9. '   ' → logprob: -6.785305023193359
    10. 'if' → logprob: -7.285305023193359

Token 367: ' signifie' (ID: 81149)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.029192715883255005
    2. ' :' → logprob: -3.7791926860809326
    3. ':
' → logprob: -5.404192924499512
    4. ' :
' → logprob: -6.779192924499512
    5. '       ' → logprob: -9.154192924499512
    6. ' signifie' → logprob: -10.529192924499512
    7. '   ' → logprob: -11.029192924499512
    8. ',' → logprob: -11.029192924499512
    9. '           ' → logprob: -11.029192924499512
    10. ' ' → logprob: -11.279192924499512

Token 368: ' qu' (ID: 474)
  Prédit: ' que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -1.2371593713760376
    2. '    ' → logprob: -1.3621593713760376
    3. '           ' → logprob: -2.612159252166748
    4. ' ' → logprob: -2.612159252166748
    5. '       ' → logprob: -2.737159252166748
    6. '   ' → logprob: -2.862159252166748
    7. ' ' → logprob: -2.862159252166748
    8. ' qu' → logprob: -3.362159252166748
    9. ' y' → logprob: -3.987159252166748
    10. '        ' → logprob: -3.987159252166748

Token 369: ''on' (ID: 25812)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.18912354111671448
    2. ' on' → logprob: -2.1891236305236816
    3. 'y' → logprob: -3.8141236305236816
    4. 'on' → logprob: -4.814123630523682
    5. '    ' → logprob: -5.314123630523682
    6. ' ' → logprob: -5.564123630523682
    7. '   ' → logprob: -5.564123630523682
    8. ' ' → logprob: -5.814123630523682
    9. ' we' → logprob: -5.939123630523682
    10. ' que' → logprob: -6.189123630523682

Token 370: ' peut' (ID: 9216)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2831686735153198
    2. ' y' → logprob: -1.5331686735153198
    3. ' peut' → logprob: -1.5331686735153198
    4. '    ' → logprob: -2.7831687927246094
    5. ' a' → logprob: -2.7831687927246094
    6. 'y' → logprob: -3.4081687927246094
    7. ' doit' → logprob: -3.9081687927246094
    8. '       ' → logprob: -3.9081687927246094
    9. ' peux' → logprob: -4.033168792724609
    10. 'a' → logprob: -4.283168792724609

Token 371: ' retirer' (ID: 136490)
  Prédit: ' div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' div' → logprob: -1.1766432523727417
    2. '    ' → logprob: -1.4266432523727417
    3. '       ' → logprob: -2.3016433715820312
    4. '   ' → logprob: -2.4266433715820312
    5. ' utiliser' → logprob: -2.8016433715820312
    6. 'div' → logprob: -3.0516433715820312
    7. ' y' → logprob: -3.4266433715820312
    8. '           ' → logprob: -3.4266433715820312
    9. '        ' → logprob: -3.4266433715820312
    10. ' effectuer' → logprob: -3.9266433715820312

Token 372: ' (' (ID: 350)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.022427979856729507
    2. ' t' → logprob: -4.647428035736084
    3. 'y' → logprob: -6.022428035736084
    4. ' une' → logprob: -6.272428035736084
    5. ' ' → logprob: -6.522428035736084
    6. ' des' → logprob: -6.647428035736084
    7. ' au' → logprob: -6.772428035736084
    8. 't' → logprob: -7.022428035736084
    9. ' un' → logprob: -7.272428035736084
    10. '    ' → logprob: -7.272428035736084

Token 373: 'y' (ID: 88)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.1039293110370636
    2. 'y' → logprob: -2.353929281234741
    3. 't' → logprob: -6.47892951965332
    4. ' t' → logprob: -7.10392951965332
    5. ' (' → logprob: -8.10392951965332
    6. ')' → logprob: -8.22892951965332
    7. '   ' → logprob: -8.35392951965332
    8. '1' → logprob: -9.10392951965332
    9. ''y' → logprob: -9.60392951965332
    10. '(y' → logprob: -9.72892951965332

Token 374: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002358409110456705
    2. '9' → logprob: -8.500235557556152
    3. ')' → logprob: -11.750235557556152
    4. '<|end|>' → logprob: -12.000235557556152
    5. '   ' → logprob: -12.250235557556152
    6. 't' → logprob: -12.625235557556152
    7. ' ' → logprob: -12.750235557556152
    8. '```' → logprob: -13.687735557556152
    9. ',' → logprob: -14.250235557556152
    10. '  ' → logprob: -14.812735557556152

Token 375: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.004202343989163637
    2. '//' → logprob: -5.629202365875244
    3. '   ' → logprob: -8.254201889038086
    4. ' ' → logprob: -9.379201889038086
    5. ')' → logprob: -9.504201889038086
    6. 'div' → logprob: -9.629201889038086
    7. '-' → logprob: -10.379201889038086
    8. ' -' → logprob: -10.879201889038086
    9. ')//' → logprob: -11.004201889038086
    10. 't' → logprob: -11.129201889038086

Token 376: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.31327536702156067
    2. 't' → logprob: -1.3132753372192383
    3. '	t' → logprob: -11.563275337219238
    4. ')' → logprob: -13.938275337219238
    5. '`t' → logprob: -14.063275337219238
    6. ' ' → logprob: -14.438275337219238
    7. ')t' → logprob: -14.438275337219238
    8. ' ' → logprob: -14.563275337219238
    9. '   ' → logprob: -14.563275337219238
    10. '    ' → logprob: -16.188276290893555

Token 377: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -4.453737710718997e-05
    2. ' t' → logprob: -10.500044822692871
    3. 't' → logprob: -11.750044822692871
    4. ' ' → logprob: -12.375044822692871
    5. '   ' → logprob: -13.000044822692871
    6. '    ' → logprob: -14.500044822692871
    7. '  ' → logprob: -15.000044822692871
    8. '       ' → logprob: -15.000044822692871
    9. ')' → logprob: -15.250044822692871
    10. '        ' → logprob: -15.500044822692871

Token 378: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08898494392633438
    2. ' )' → logprob: -2.463984966278076
    3. ')*' → logprob: -10.713984489440918
    4. '   ' → logprob: -11.338984489440918
    5. ' ' → logprob: -12.588984489440918
    6. '    ' → logprob: -13.463984489440918
    7. ')t' → logprob: -13.713984489440918
    8. '       ' → logprob: -13.838984489440918
    9. ' *' → logprob: -14.213984489440918
    10. '*' → logprob: -14.338984489440918

Token 379: ' fois' (ID: 14697)
  Prédit: ' fois'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fois' → logprob: -0.3167688548564911
    2. ' *' → logprob: -1.5667688846588135
    3. 'fois' → logprob: -4.316768646240234
    4. ' multip' → logprob: -4.316768646240234
    5. ' multiples' → logprob: -4.691768646240234
    6. 'times' → logprob: -5.441768646240234
    7. ' ' → logprob: -5.441768646240234
    8. '*' → logprob: -5.566768646240234
    9. ' t' → logprob: -5.691768646240234
    10. ' times' → logprob: -5.816768646240234

Token 380: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.40208056569099426
    2. 't' → logprob: -1.1520805358886719
    3. '(t' → logprob: -5.652080535888672
    4. ' (' → logprob: -5.777080535888672
    5. ' y' → logprob: -6.027080535888672
    6. ' ' → logprob: -6.527080535888672
    7. ' des' → logprob: -7.152080535888672
    8. ' le' → logprob: -7.277080535888672
    9. '	t' → logprob: -7.277080535888672
    10. '       ' → logprob: -7.902080535888672

Token 381: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -3.531315314830863e-06
    2. ' ' → logprob: -12.750003814697266
    3. ' t' → logprob: -15.250003814697266
    4. 't' → logprob: -15.625003814697266
    5. '```' → logprob: -17.437503814697266
    6. '  ' → logprob: -17.750003814697266
    7. '_' → logprob: -17.937503814697266
    8. 'ype' → logprob: -18.125003814697266
    9. '   ' → logprob: -18.187503814697266
    10. 'he' → logprob: -18.375003814697266

Token 382: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.1028962135314941
    2. ' from' → logprob: -1.1028962135314941
    3. 'from' → logprob: -1.4778962135314941
    4. '       ' → logprob: -3.477896213531494
    5. ' *' → logprob: -3.602896213531494
    6. '           ' → logprob: -4.102896213531494
    7. '   ' → logprob: -4.477896213531494
    8. '*' → logprob: -4.602896213531494
    9. ' à' → logprob: -5.727896213531494
    10. 'de' → logprob: -5.977896213531494

Token 383: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.04865027591586113
    2. 'y' → logprob: -3.0486502647399902
    3. '   ' → logprob: -10.423650741577148
    4. '	y' → logprob: -11.423650741577148
    5. ' la' → logprob: -12.048650741577148
    6. 'l' → logprob: -12.298650741577148
    7. ' ' → logprob: -13.048650741577148
    8. ' ' → logprob: -13.173650741577148
    9. ''y' → logprob: -13.173650741577148
    10. ' l' → logprob: -13.923650741577148

Token 384: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3306015716807451e-05
    2. ' ' → logprob: -11.62501335144043
    3. ',' → logprob: -13.62501335144043
    4. '_' → logprob: -14.37501335144043
    5. '```' → logprob: -14.68751335144043
    6. '9' → logprob: -15.00001335144043
    7. ' ' → logprob: -15.00001335144043
    8. '   ' → logprob: -15.37501335144043
    9. 'y' → logprob: -15.56251335144043
    10. ')' → logprob: -15.75001335144043

Token 385: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20162248611450195
    2. ',' → logprob: -1.826622486114502
    3. '           ' → logprob: -4.201622486114502
    4. '.' → logprob: -5.326622486114502
    5. ':' → logprob: -7.826622486114502
    6. ' ,' → logprob: -8.201622009277344
    7. ',
' → logprob: -8.451622009277344
    8. '        ' → logprob: -8.701622009277344
    9. '   ' → logprob: -8.951622009277344
    10. '        
' → logprob: -9.201622009277344

Token 386: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0027009700424969196
    2. '   ' → logprob: -6.0027008056640625
    3. '           ' → logprob: -9.502700805664062
    4. '        
' → logprob: -10.377700805664062
    5. ' if' → logprob: -10.502700805664062
    6. 'if' → logprob: -10.752700805664062
    7. ' 
' → logprob: -11.377700805664062
    8. '<|end|>' → logprob: -11.377700805664062
    9. '  
' → logprob: -12.252700805664062
    10. '    ' → logprob: -12.252700805664062

Token 387: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.035114023834466934
    2. ' if' → logprob: -4.03511381149292
    3. 'if' (adapté à ' if') → logprob: -4.91011381149292
    4. 'cnt' → logprob: -5.78511381149292
    5. ' cnt' → logprob: -6.16011381149292
    6. '   ' → logprob: -6.53511381149292
    7. '           ' → logprob: -6.91011381149292
    8. '        
' → logprob: -7.28511381149292
    9. ' y' → logprob: -8.660114288330078
    10. ' ' → logprob: -9.160114288330078

Token 388: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.0021866646129637957
    2. 'y' → logprob: -6.1271867752075195
    3. '	y' → logprob: -14.37718677520752
    4. ' ' → logprob: -14.50218677520752
    5. ' ' → logprob: -15.62718677520752
    6. '(y' → logprob: -16.377185821533203
    7. '   ' → logprob: -16.877185821533203
    8. '    ' → logprob: -17.002185821533203
    9. ' (' → logprob: -18.002185821533203
    10. '  ' → logprob: -19.252185821533203

Token 389: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. '9' → logprob: -14.250001907348633
    3. '_' → logprob: -14.625001907348633
    4. ' ' → logprob: -15.250001907348633
    5. '１' → logprob: -16.500001907348633
    6. '   ' → logprob: -16.812501907348633
    7. '```' → logprob: -16.812501907348633
    8. '>' → logprob: -17.312501907348633
    9. ' _' → logprob: -17.500001907348633
    10. '[' → logprob: -17.625001907348633

Token 390: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.012520836666226387
    2. '>=' → logprob: -4.387520790100098
    3. ' ' → logprob: -12.262520790100098
    4. '   ' → logprob: -12.387520790100098
    5. '	' → logprob: -13.762520790100098
    6. '    ' → logprob: -14.637520790100098
    7. ')>=' → logprob: -15.387520790100098
    8. ']>=' → logprob: -15.512520790100098
    9. '[' → logprob: -16.262521743774414
    10. ' ' → logprob: -16.512521743774414

Token 391: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.25193825364112854
    2. 't' → logprob: -1.5019382238388062
    3. '	t' → logprob: -12.126937866210938
    4. ' ' → logprob: -13.376937866210938
    5. ' ' → logprob: -14.626937866210938
    6. '    ' → logprob: -15.126937866210938
    7. '   ' → logprob: -15.251937866210938
    8. '`t' → logprob: -15.376937866210938
    9. '9' → logprob: -15.501937866210938
    10. '        ' → logprob: -15.626937866210938

Token 392: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -14.500000953674316
    3. 't' → logprob: -15.125000953674316
    4. '   ' → logprob: -17.750001907348633
    5. ' t' → logprob: -17.750001907348633
    6. '```' → logprob: -18.250001907348633
    7. 's' → logprob: -18.687501907348633
    8. '  ' → logprob: -18.937501907348633
    9. 'x' → logprob: -19.250001907348633
    10. 'q' → logprob: -19.437501907348633

Token 393: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1804799735546112
    2. ':
' → logprob: -1.8054800033569336
    3. '       ' → logprob: -7.680480003356934
    4. '           ' → logprob: -9.180480003356934
    5. '):
' → logprob: -9.305480003356934
    6. ' :
' → logprob: -10.430480003356934
    7. ' :' → logprob: -10.930480003356934
    8. '):' → logprob: -11.430480003356934
    9. ':
' → logprob: -11.680480003356934
    10. ')' → logprob: -12.680480003356934

Token 394: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012858407571911812
    2. '           ' → logprob: -4.3878583908081055
    3. '        
' → logprob: -9.012858390808105
    4. '        ' → logprob: -9.512858390808105
    5. ' cnt' → logprob: -10.387858390808105
    6. '   ' → logprob: -10.637858390808105
    7. '	   ' → logprob: -11.137858390808105
    8. ' y' → logprob: -11.637858390808105
    9. '	       ' → logprob: -11.762858390808105
    10. '      ' → logprob: -12.012858390808105

Token 395: ' #' (ID: 1069)
  Prédit: ' cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cnt' → logprob: -0.49978846311569214
    2. 'cnt' → logprob: -0.9997884631156921
    3. '           ' → logprob: -3.749788522720337
    4. '       ' → logprob: -6.749788284301758
    5. '	cnt' → logprob: -8.124788284301758
    6. '   ' → logprob: -8.374788284301758
    7. 'count' → logprob: -9.749788284301758
    8. '               ' → logprob: -10.624788284301758
    9. '(cnt' → logprob: -11.374788284301758
    10. 'num' → logprob: -11.624788284301758

Token 396: ' On' (ID: 2160)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.030050721019506454
    2. ' cnt' → logprob: -3.530050754547119
    3. '           ' → logprob: -8.280050277709961
    4. 'count' → logprob: -11.280050277709961
    5. '	cnt' → logprob: -11.530050277709961
    6. '   ' → logprob: -11.780050277709961
    7. '       ' → logprob: -11.905050277709961
    8. 'quot' → logprob: -12.655050277709961
    9. 'q' → logprob: -13.155050277709961
    10. '               ' → logprob: -13.530050277709961

Token 397: ' incr' (ID: 52395)
  Prédit: ' cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cnt' → logprob: -0.2819332182407379
    2. 'cnt' → logprob: -1.4069331884384155
    3. '           ' → logprob: -7.531933307647705
    4. '       ' → logprob: -9.406932830810547
    5. '	cnt' → logprob: -10.031932830810547
    6. '    ' → logprob: -10.281932830810547
    7. '   ' → logprob: -10.656932830810547
    8. ' +=' → logprob: -11.281932830810547
    9. '[cnt' → logprob: -11.656932830810547
    10. '_cnt' → logprob: -11.906932830810547

Token 398: 'é' (ID: 377)
  Prédit: 'ement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ement' → logprob: -0.8789334297180176
    2. '           ' → logprob: -1.7539334297180176
    3. '   ' → logprob: -2.0039334297180176
    4. 'ément' → logprob: -2.0039334297180176
    5. '               ' → logprob: -3.2539334297180176
    6. 'é' → logprob: -3.5039334297180176
    7. '       ' → logprob: -3.8789334297180176
    8. 'rement' → logprob: -4.628933429718018
    9. 'y' → logprob: -4.753933429718018
    10. '=' → logprob: -4.753933429718018

Token 399: 'mente' (ID: 4186)
  Prédit: 'mente'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mente' → logprob: -0.0013250032206997275
    2. 'ment' → logprob: -7.3763251304626465
    3. 'm' → logprob: -8.751324653625488
    4. 'nte' → logprob: -8.876324653625488
    5. 'mentation' → logprob: -9.876324653625488
    6. '   ' → logprob: -10.001324653625488
    7. '       ' → logprob: -10.376324653625488
    8. 'mental' → logprob: -10.501324653625488
    9. ' mente' → logprob: -10.626324653625488
    10. '#' → logprob: -11.001324653625488

Token 400: ' le' (ID: 505)
  Prédit: ' cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cnt' → logprob: -0.06199323385953903
    2. 'cnt' → logprob: -2.81199312210083
    3. '           ' → logprob: -10.811993598937988
    4. '(cnt' → logprob: -12.936993598937988
    5. '	cnt' → logprob: -13.061993598937988
    6. '[cnt' → logprob: -14.311993598937988
    7. '               ' → logprob: -16.561992645263672
    8. 'count' → logprob: -17.186992645263672
    9. '_cnt' → logprob: -17.436992645263672
    10. '   ' → logprob: -17.436992645263672

Token 401: ' compteur' (ID: 163344)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.0010584142291918397
    2. ' cnt' → logprob: -6.876058578491211
    3. '   ' → logprob: -10.876058578491211
    4. '	cnt' → logprob: -12.751058578491211
    5. '       ' → logprob: -13.751058578491211
    6. 'ct' → logprob: -14.251058578491211
    7. '           ' → logprob: -14.501058578491211
    8. 'cn' → logprob: -14.501058578491211
    9. 'count' → logprob: -15.126058578491211
    10. 'counter' → logprob: -15.626058578491211

Token 402: ' cnt' (ID: 27340)
  Prédit: ' cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cnt' → logprob: -0.20680032670497894
    2. ' +=' → logprob: -1.9568003416061401
    3. 'cnt' → logprob: -3.5818002223968506
    4. '           ' → logprob: -4.95680046081543
    5. '[cnt' → logprob: -5.08180046081543
    6. '(cnt' → logprob: -6.33180046081543
    7. '+=' → logprob: -6.70680046081543
    8. '            ' → logprob: -7.45680046081543
    9. '               ' → logprob: -8.08180046081543
    10. ' ' → logprob: -8.70680046081543

Token 403: ' par' (ID: 686)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.0015869855415076017
    2. '+=' → logprob: -6.6265869140625
    3. '           ' → logprob: -8.5015869140625
    4. '            ' → logprob: -10.2515869140625
    5. ' ' → logprob: -12.1265869140625
    6. '               ' → logprob: -12.2515869140625
    7. ' by' → logprob: -13.1265869140625
    8. '		' → logprob: -13.3765869140625
    9. '    ' → logprob: -13.3765869140625
    10. ']+=' → logprob: -13.7515869140625

Token 404: ' le' (ID: 505)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.0031699873507022858
    2. 'y' → logprob: -6.128170013427734
    3. ' (' → logprob: -7.503170013427734
    4. '(y' → logprob: -7.753170013427734
    5. '	y' → logprob: -13.753170013427734
    6. '(' → logprob: -14.378170013427734
    7. ' ' → logprob: -14.503170013427734
    8. ' ' → logprob: -14.628170013427734
    9. '   ' → logprob: -15.253170013427734
    10. '    ' → logprob: -15.878170013427734

Token 405: ' nombre' (ID: 9733)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.06999912858009338
    2. 'y' → logprob: -2.6949992179870605
    3. '(y' → logprob: -10.194998741149902
    4. ' (' → logprob: -11.819998741149902
    5. '   ' → logprob: -12.319998741149902
    6. ' ' → logprob: -13.194998741149902
    7. '	y' → logprob: -13.319998741149902
    8. '    ' → logprob: -13.444998741149902
    9. '1' → logprob: -13.569998741149902
    10. ' ' → logprob: -13.944998741149902

Token 406: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.3805117607116699
    2. ' y' → logprob: -2.00551176071167
    3. '           ' → logprob: -2.25551176071167
    4. ' of' → logprob: -3.75551176071167
    5. '            ' → logprob: -4.25551176071167
    6. ' d' → logprob: -4.88051176071167
    7. ' (' → logprob: -5.13051176071167
    8. 'y' → logprob: -5.25551176071167
    9. '    ' → logprob: -5.50551176071167
    10. 'de' → logprob: -5.75551176071167

Token 407: ' fois' (ID: 14697)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.18139617145061493
    2. '(y' → logprob: -1.9313961267471313
    3. 'y' → logprob: -4.181396007537842
    4. ' (' → logprob: -5.181396007537842
    5. '(' → logprob: -10.306396484375
    6. '	y' → logprob: -12.806396484375
    7. '(s' → logprob: -13.306396484375
    8. ' fois' → logprob: -13.431396484375
    9. ' times' → logprob: -13.681396484375
    10. '   ' → logprob: -13.931396484375

Token 408: ' où' (ID: 15113)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.6054993867874146
    2. ' (' → logprob: -0.8554993867874146
    3. '(y' → logprob: -3.855499267578125
    4. '           ' → logprob: -5.355499267578125
    5. 'y' → logprob: -6.230499267578125
    6. '(' → logprob: -7.480499267578125
    7. '            ' → logprob: -7.980499267578125
    8. ' que' → logprob: -8.355499267578125
    9. '               ' → logprob: -10.105499267578125
    10. ' ' → logprob: -10.605499267578125

Token 409: ' t' (ID: 260)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.07825161516666412
    2. 'y' → logprob: -2.703251600265503
    3. ' (' → logprob: -5.203251838684082
    4. '(y' → logprob: -5.953251838684082
    5. '(' → logprob: -8.703251838684082
    6. '   ' → logprob: -12.578251838684082
    7. ' ' → logprob: -12.703251838684082
    8. '	y' → logprob: -12.953251838684082
    9. ''y' → logprob: -13.203251838684082
    10. '    ' → logprob: -14.078251838684082

Token 410: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.0002142650482710451
    2. ' y' → logprob: -9.000214576721191
    3. ' ' → logprob: -10.750214576721191
    4. 'y' → logprob: -10.875214576721191
    5. ' t' → logprob: -10.875214576721191
    6. 't' → logprob: -11.250214576721191
    7. ' (' → logprob: -12.500214576721191
    8. '1' → logprob: -12.500214576721191
    9. '```' → logprob: -14.125214576721191
    10. '(' → logprob: -14.312714576721191

Token 411: ' peut' (ID: 9216)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -1.2121069431304932
    2. '<|end|>' → logprob: -1.3371069431304932
    3. ' can' → logprob: -1.8371069431304932
    4. ')' → logprob: -2.212106943130493
    5. ' ' → logprob: -3.962106943130493
    6. '```' → logprob: -4.087106704711914
    7. ' )' → logprob: -4.524606704711914
    8. ' est' → logprob: -4.837106704711914
    9. 'div' → logprob: -4.962106704711914
    10. ' was' → logprob: -5.024606704711914

Token 412: ' rentrer' (ID: 139555)
  Prédit: ' être'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' être' → logprob: -0.7868662476539612
    2. 'être' → logprob: -1.1618661880493164
    3. ' y' → logprob: -2.0368661880493164
    4. ' ' → logprob: -3.1618661880493164
    5. ' entrer' → logprob: -4.536866188049316
    6. ' etre' → logprob: -4.661866188049316
    7. ' rentrer' → logprob: -5.286866188049316
    8. 's' → logprob: -5.286866188049316
    9. 'êtres' → logprob: -5.411866188049316
    10. 'se' → logprob: -5.661866188049316

Token 413: ' dans' (ID: 2671)
  Prédit: ' dans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dans' → logprob: -0.039751674979925156
    2. 'dans' → logprob: -3.2897517681121826
    3. ' y' → logprob: -7.1647515296936035
    4. ' ' → logprob: -8.289752006530762
    5. '           ' → logprob: -8.914752006530762
    6. ' into' → logprob: -9.414752006530762
    7. ' in' → logprob: -9.414752006530762
    8. 'in' → logprob: -9.914752006530762
    9. '   ' → logprob: -10.414752006530762
    10. ' //' → logprob: -10.539752006530762

Token 414: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.026303084567189217
    2. 'y' → logprob: -3.6513030529022217
    3. '	y' → logprob: -13.6513032913208
    4. ''y' → logprob: -14.5263032913208
    5. '(y' → logprob: -14.9013032913208
    6. ' ' → logprob: -15.7763032913208
    7. ' ' → logprob: -16.276302337646484
    8. '   ' → logprob: -16.401302337646484
    9. '‘y' → logprob: -16.526302337646484
    10. '`' → logprob: -16.526302337646484

Token 415: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.045823566731997e-05
    2. ' ' → logprob: -11.125020027160645
    3. '9' → logprob: -12.625020027160645
    4. '   ' → logprob: -13.875020027160645
    5. '  ' → logprob: -15.562520027160645
    6. '_' → logprob: -15.687520027160645
    7. ',' → logprob: -15.750020027160645
    8. ')' → logprob: -15.937520027160645
    9. ' /' → logprob: -16.18752098083496
    10. '    ' → logprob: -16.25002098083496

Token 416: '.
' (ID: 558)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1408228874206543
    2. ' +=' → logprob: -2.2658228874206543
    3. '+=' → logprob: -4.265822887420654
    4. '               ' → logprob: -5.390822887420654
    5. '            ' → logprob: -5.515822887420654
    6. ' *' → logprob: -6.765822887420654
    7. ' +' → logprob: -6.890822887420654
    8. '=' → logprob: -7.515822887420654
    9. ' ' → logprob: -7.640822887420654
    10. '                   ' → logprob: -7.765822887420654

Token 417: '           ' (ID: 352)
  Prédit: ' cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cnt' → logprob: -0.16049981117248535
    2. 'cnt' → logprob: -1.9104998111724854
    3. '           ' → logprob: -9.035499572753906
    4. '(cnt' → logprob: -9.535499572753906
    5. '       ' → logprob: -10.660499572753906
    6. '   ' → logprob: -10.785499572753906
    7. ' y' → logprob: -11.285499572753906
    8. ' +=' → logprob: -12.035499572753906
    9. '[cnt' → logprob: -12.035499572753906
    10. '	cnt' → logprob: -12.535499572753906

Token 418: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' (adapté à ' cnt') → logprob: -0.20148438215255737
    2. ' cnt' → logprob: -1.7014844417572021
    3. '   ' → logprob: -10.201484680175781
    4. '	cnt' → logprob: -10.701484680175781
    5. '           ' → logprob: -12.076484680175781
    6. '(cnt' → logprob: -13.076484680175781
    7. '       ' → logprob: -13.701484680175781
    8. 'count' → logprob: -13.701484680175781
    9. '[cnt' → logprob: -14.451484680175781
    10. '_cnt' → logprob: -15.451484680175781

Token 419: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.005234594456851482
    2. '+=' → logprob: -5.255234718322754
    3. '    ' → logprob: -14.755234718322754
    4. ' +' → logprob: -16.380233764648438
    5. ']+=' → logprob: -16.630233764648438
    6. '            ' → logprob: -16.880233764648438
    7. '   ' → logprob: -17.130233764648438
    8. '	' → logprob: -17.255233764648438
    9. '=' → logprob: -17.380233764648438
    10. ' =' → logprob: -17.380233764648438

Token 420: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.054908912628889084
    2. 'y' → logprob: -2.9299089908599854
    3. ' (' → logprob: -11.054908752441406
    4. '(y' → logprob: -11.554908752441406
    5. '	y' → logprob: -14.679908752441406
    6. ' ' → logprob: -15.179908752441406
    7. ' ' → logprob: -15.179908752441406
    8. '(' → logprob: -16.304908752441406
    9. '   ' → logprob: -16.304908752441406
    10. '_y' → logprob: -18.054908752441406

Token 421: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.625
    3. '_' → logprob: -19.5
    4. '１' → logprob: -20.125
    5. '```' → logprob: -21.0
    6. '//' → logprob: -21.25
    7. '[' → logprob: -21.5
    8. ' /' → logprob: -21.625
    9. ' ' → logprob: -22.5
    10. 'div' → logprob: -22.9375

Token 422: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.048753030598163605
    2. '//' → logprob: -3.048753023147583
    3. ' ' → logprob: -10.298752784729004
    4. '//=' → logprob: -10.298752784729004
    5. ' ' → logprob: -10.423752784729004
    6. '#' → logprob: -11.173752784729004
    7. '<|end|>' → logprob: -11.173752784729004
    8. ')' → logprob: -12.048752784729004
    9. '[' → logprob: -12.298752784729004
    10. '	' → logprob: -12.423752784729004

Token 423: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.02975083328783512
    2. ' t' → logprob: -3.5297508239746094
    3. '	t' → logprob: -15.15475082397461
    4. '`t' → logprob: -16.15475082397461
    5. ' ' → logprob: -18.27975082397461
    6. '_t' → logprob: -18.52975082397461
    7. '9' → logprob: -19.65475082397461
    8. '(t' → logprob: -19.77975082397461
    9. '<|end|>' → logprob: -19.90475082397461
    10. ' ' → logprob: -20.02975082397461

Token 424: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -15.500000953674316
    3. 't' → logprob: -16.625
    4. '```' → logprob: -17.625
    5. '   ' → logprob: -18.3125
    6. '**' → logprob: -18.75
    7. ' t' → logprob: -19.0
    8. '  ' → logprob: -19.5
    9. '19' → logprob: -19.6875
    10. '۹' → logprob: -19.75

Token 425: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08158887177705765
    2. '
' → logprob: -3.2065889835357666
    3. 'y' → logprob: -4.0815887451171875
    4. '       ' → logprob: -5.2065887451171875
    5. '            
' → logprob: -5.3315887451171875
    6. ' y' → logprob: -5.4565887451171875
    7. '        
' → logprob: -6.0815887451171875
    8. '                   ' → logprob: -7.4565887451171875
    9. '  
' → logprob: -7.5815887451171875
    10. '    
' → logprob: -7.5815887451171875

Token 426: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.050067830830812454
    2. ' y' → logprob: -3.050067901611328
    3. 'y' → logprob: -6.550067901611328
    4. '
' → logprob: -11.175067901611328
    5. '       ' → logprob: -11.300067901611328
    6. '            
' → logprob: -11.425067901611328
    7. ',y' → logprob: -13.175067901611328
    8. '```' → logprob: -13.675067901611328
    9. ',' → logprob: -13.800067901611328
    10. 'n' → logprob: -13.925067901611328

Token 427: ' #' (ID: 1069)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.6347100138664246
    2. ' y' → logprob: -0.8847100138664246
    3. '           ' → logprob: -2.8847100734710693
    4. '       ' → logprob: -6.75970983505249
    5. '   ' → logprob: -10.259710311889648
    6. '               ' → logprob: -11.884710311889648
    7. '                   ' → logprob: -14.009710311889648
    8. '	y' → logprob: -14.009710311889648
    9. '```' → logprob: -14.384710311889648
    10. ' ' → logprob: -14.509710311889648

Token 428: ' On' (ID: 2160)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.07918807864189148
    2. ' y' → logprob: -2.579188108444214
    3. '           ' → logprob: -8.704188346862793
    4. '       ' → logprob: -9.079188346862793
    5. '   ' → logprob: -10.954188346862793
    6. '	y' → logprob: -14.204188346862793
    7. '               ' → logprob: -16.204187393188477
    8. '    ' → logprob: -17.079187393188477
    9. ' ' → logprob: -17.204187393188477
    10. '     ' → logprob: -17.454187393188477

Token 429: ' met' (ID: 1421)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.32174211740493774
    2. 'y' → logprob: -1.321742057800293
    3. '=' → logprob: -5.446742057800293
    4. '%=' → logprob: -5.696742057800293
    5. ' %=' → logprob: -8.071742057800293
    6. '=y' → logprob: -8.821742057800293
    7. ' rem' → logprob: -9.571742057800293
    8. ' mod' → logprob: -9.571742057800293
    9. 'rem' → logprob: -9.696742057800293
    10. 'mod' → logprob: -10.196742057800293

Token 430: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.11706385761499405
    2. 'à' → logprob: -2.8670637607574463
    3. 'y' → logprob: -3.2420637607574463
    4. ' y' → logprob: -4.617063999176025
    5. 'a' → logprob: -5.992063999176025
    6. ' ' → logprob: -7.492063999176025
    7. ' a' → logprob: -7.617063999176025
    8. ' =' → logprob: -7.867063999176025
    9. '=' → logprob: -8.367063522338867
    10. '_' → logprob: -9.117063522338867

Token 431: ' jour' (ID: 8379)
  Prédit: 'jour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jour' → logprob: -0.19434604048728943
    2. 'y' → logprob: -1.8193460702896118
    3. ' jour' → logprob: -4.569345951080322
    4. '0' → logprob: -6.319345951080322
    5. '```' → logprob: -7.069345951080322
    6. 'jours' → logprob: -7.819345951080322
    7. 'j' → logprob: -7.944345951080322
    8. 'day' → logprob: -8.44434642791748
    9. 'Jour' → logprob: -8.56934642791748
    10. 'z' → logprob: -10.19434642791748

Token 432: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.020559756085276604
    2. 'y' → logprob: -3.895559787750244
    3. '    ' → logprob: -12.145559310913086
    4. '	y' → logprob: -12.145559310913086
    5. '   ' → logprob: -12.520559310913086
    6. ' ' → logprob: -13.395559310913086
    7. '  ' → logprob: -14.020559310913086
    8. ' ' → logprob: -15.770559310913086
    9. ''y' → logprob: -15.770559310913086
    10. 'le' → logprob: -16.145559310913086

Token 433: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.319370302458992e-06
    2. ' ' → logprob: -13.000005722045898
    3. '```' → logprob: -13.375005722045898
    4. '   ' → logprob: -15.250005722045898
    5. 'y' → logprob: -15.375005722045898
    6. '  ' → logprob: -15.500005722045898
    7. '' → logprob: -15.875005722045898
    8. '
' → logprob: -16.6875057220459
    9. '１' → logprob: -16.6875057220459
    10. '<|end|>' → logprob: -16.8750057220459

Token 434: ' en' (ID: 469)
  Prédit: '%='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%=' → logprob: -0.4659048020839691
    2. ' %=' → logprob: -1.2159048318862915
    3. '=' → logprob: -3.090904712677002
    4. ' =' → logprob: -3.590904712677002
    5. ' -=' → logprob: -6.090904712677002
    6. '%' → logprob: -7.840904712677002
    7. '-=' → logprob: -8.34090518951416
    8. '//=' → logprob: -10.34090518951416
    9. '   ' → logprob: -10.96590518951416
    10. ' %' → logprob: -12.09090518951416

Token 435: ' en' (ID: 469)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.024056384339928627
    2. 'y' → logprob: -4.149056434631348
    3. '%' → logprob: -5.899056434631348
    4. ' %=' → logprob: -5.899056434631348
    5. '%=' → logprob: -6.149056434631348
    6. ' %' → logprob: -8.524056434631348
    7. '=' → logprob: -9.649056434631348
    8. ' mod' → logprob: -10.024056434631348
    9. '=y' → logprob: -10.524056434631348
    10. ' =' → logprob: -11.399056434631348

Token 436: 'levant' (ID: 37477)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.3892754316329956
    2. ' y' → logprob: -1.2642754316329956
    3. '=' → logprob: -4.139275550842285
    4. '%=' → logprob: -5.014275550842285
    5. '=y' → logprob: -5.014275550842285
    6. 't' → logprob: -5.389275550842285
    7. '%' → logprob: -6.764275550842285
    8. '-' → logprob: -7.264275550842285
    9. 'rem' → logprob: -7.514275550842285
    10. 'mod' → logprob: -7.639275550842285

Token 437: ' tout' (ID: 5501)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.23921191692352295
    2. ' (' → logprob: -2.2392120361328125
    3. ' t' → logprob: -2.6142120361328125
    4. 'y' → logprob: -4.1142120361328125
    5. 't' → logprob: -4.4892120361328125
    6. '(y' → logprob: -5.3642120361328125
    7. '(' → logprob: -8.239212036132812
    8. '(t' → logprob: -8.614212036132812
    9. '           ' → logprob: -8.739212036132812
    10. ' ' → logprob: -10.239212036132812

Token 438: ' ce' (ID: 2357)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -1.5379263162612915
    2. ' t' → logprob: -1.6629263162612915
    3. ' les' → logprob: -1.9129263162612915
    4. ' le' → logprob: -2.037926197052002
    5. ' l' → logprob: -2.537926197052002
    6. 'le' → logprob: -3.037926197052002
    7. ' (' → logprob: -3.537926197052002
    8. ' =' → logprob: -3.537926197052002
    9. 'l' → logprob: -4.037926197052002
    10. ' y' → logprob: -4.287926197052002

Token 439: ' qui' (ID: 2780)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.4281347692012787
    2. 't' → logprob: -1.678134799003601
    3. ' que' → logprob: -2.5531346797943115
    4. '   ' → logprob: -3.4281346797943115
    5. ' qui' → logprob: -5.053134918212891
    6. '*' → logprob: -5.053134918212891
    7. 'que' → logprob: -5.178134918212891
    8. ' t' → logprob: -5.428134918212891
    9. ' *' → logprob: -5.803134918212891
    10. '*t' → logprob: -5.803134918212891

Token 440: ' peut' (ID: 9216)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.24215318262577057
    2. 't' → logprob: -2.9921531677246094
    3. 'a' → logprob: -3.3671531677246094
    4. ' y' → logprob: -3.7421531677246094
    5. ' est' → logprob: -3.8671531677246094
    6. ' ' → logprob: -4.117153167724609
    7. ' peut' → logprob: -4.742153167724609
    8. ' t' → logprob: -4.867153167724609
    9. ' rent' → logprob: -5.242153167724609
    10. ' qui' → logprob: -5.492153167724609

Token 441: ' être' (ID: 9104)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.5622195601463318
    2. 'être' → logprob: -1.3122196197509766
    3. 'entr' → logprob: -2.6872196197509766
    4. ' rentrer' → logprob: -3.3122196197509766
    5. ' être' → logprob: -3.8122196197509766
    6. ' entrer' → logprob: -4.312219619750977
    7. 'tenir' → logprob: -5.562219619750977
    8. 'pass' → logprob: -5.812219619750977
    9. 't' → logprob: -6.187219619750977
    10. ' tenir' → logprob: -6.437219619750977

Token 442: ' retir' (ID: 35638)
  Prédit: 'multip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'multip' → logprob: -1.112248420715332
    2. ' retir' → logprob: -1.362248420715332
    3. 'sou' → logprob: -2.112248420715332
    4. ' sou' → logprob: -3.237248420715332
    5. 'div' → logprob: -3.362248420715332
    6. 'en' → logprob: -3.487248420715332
    7. 'fait' → logprob: -4.112248420715332
    8. 'ret' → logprob: -4.112248420715332
    9. ' retr' → logprob: -4.237248420715332
    10. 'd' → logprob: -4.237248420715332

Token 443: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.24717022478580475
    2. 'er' → logprob: -2.9971702098846436
    3. 'de' → logprob: -2.9971702098846436
    4. 'dé' → logprob: -3.3721702098846436
    5. '   ' → logprob: -3.4971702098846436
    6. 'ir' → logprob: -4.372170448303223
    7. 'irer' → logprob: -4.872170448303223
    8. '       ' → logprob: -4.997170448303223
    9. 'té' → logprob: -5.247170448303223
    10. 'out' → logprob: -5.872170448303223

Token 444: ' par' (ID: 686)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' y' → logprob: -1.2478842735290527
    2. ' de' → logprob: -1.4978842735290527
    3. 't' → logprob: -1.9978842735290527
    4. '           ' → logprob: -2.2478842735290527
    5. ' t' → logprob: -2.9978842735290527
    6. '   ' → logprob: -3.3728842735290527
    7. 'y' → logprob: -3.4978842735290527
    8. 'from' → logprob: -3.6228842735290527
    9. ' ' → logprob: -4.247884273529053
    10. ' from' → logprob: -4.747884273529053

Token 445: ' des' (ID: 731)
  Prédit: ' t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.20160463452339172
    2. 't' → logprob: -1.7016046047210693
    3. ' y' → logprob: -9.201604843139648
    4. '(t' → logprob: -10.326604843139648
    5. ' (' → logprob: -10.326604843139648
    6. 'y' → logprob: -11.951604843139648
    7. '	t' → logprob: -12.076604843139648
    8. ' ' → logprob: -12.326604843139648
    9. '9' → logprob: -13.451604843139648
    10. ' ' → logprob: -13.701604843139648

Token 446: ' ent' (ID: 1121)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.6380617618560791
    2. ' t' → logprob: -0.7630617618560791
    3. '9' → logprob: -5.5130615234375
    4. ' multiples' → logprob: -6.8880615234375
    5. '	t' → logprob: -9.1380615234375
    6. 'multip' → logprob: -9.6380615234375
    7. ' ' → logprob: -9.7630615234375
    8. '(t' → logprob: -10.3880615234375
    9. 'tokens' → logprob: -10.7630615234375
    10. '*t' → logprob: -10.8880615234375

Token 447: 'iers' (ID: 11012)
  Prédit: 'ier'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ier' → logprob: -1.4507219791412354
    2. 't' → logprob: -1.8257219791412354
    3. '9' → logprob: -1.9507219791412354
    4. 'ières' → logprob: -2.0757219791412354
    5. 'ière' → logprob: -2.2007219791412354
    6. 'y' → logprob: -3.0757219791412354
    7. '   ' → logprob: -3.2007219791412354
    8. 'iers' → logprob: -3.2007219791412354
    9. 'i' → logprob: -3.4507219791412354
    10. '1' → logprob: -3.5757219791412354

Token 448: ' multiples' (ID: 70720)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.60354083776474
    2. ' multiples' → logprob: -1.8535408973693848
    3. '*t' → logprob: -2.1035408973693848
    4. 'multip' → logprob: -2.8535408973693848
    5. ' *' → logprob: -2.9785408973693848
    6. ' t' → logprob: -3.9785408973693848
    7. ' de' → logprob: -4.853540897369385
    8. 'de' → logprob: -4.978540897369385
    9. '   ' → logprob: -5.103540897369385
    10. ' multip' → logprob: -5.228540897369385

Token 449: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.07544209063053131
    2. 'de' → logprob: -3.07544207572937
    3. ' y' → logprob: -4.200442314147949
    4. 't' → logprob: -6.075442314147949
    5. 'y' → logprob: -6.200442314147949
    6. ' of' → logprob: -6.700442314147949
    7. ' t' → logprob: -7.075442314147949
    8. 'd' → logprob: -7.200442314147949
    9. '   ' → logprob: -7.325442314147949
    10. ' ' → logprob: -7.325442314147949

Token 450: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.11283348500728607
    2. ' t' → logprob: -2.2378334999084473
    3. '`t' → logprob: -12.237833023071289
    4. ' ' → logprob: -13.362833023071289
    5. '	t' → logprob: -13.612833023071289
    6. ' ' → logprob: -13.862833023071289
    7. '(t' → logprob: -14.237833023071289
    8. ' (' → logprob: -14.362833023071289
    9. '```' → logprob: -15.237833023071289
    10. '\t' → logprob: -15.612833023071289

Token 451: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.0005633997498080134
    2. '1' → logprob: -7.750563621520996
    3. 't' → logprob: -9.500563621520996
    4. ' t' → logprob: -10.750563621520996
    5. ' ' → logprob: -11.375563621520996
    6. '**' → logprob: -13.063063621520996
    7. '```' → logprob: -13.125563621520996
    8. 'u' → logprob: -13.563063621520996
    9. 'x' → logprob: -13.750563621520996
    10. 'a' → logprob: -13.750563621520996

Token 452: '.
' (ID: 558)
  Prédit: ' -='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.6050682067871094
    2. '=' → logprob: -1.4800682067871094
    3. '-' → logprob: -3.1050682067871094
    4. '
' → logprob: -3.4800682067871094
    5. ' -' → logprob: -3.4800682067871094
    6. '   ' → logprob: -3.6050682067871094
    7. '           ' → logprob: -3.8550682067871094
    8. ' =' → logprob: -4.105068206787109
    9. '-=' → logprob: -4.730068206787109
    10. 'y' → logprob: -4.980068206787109

Token 453: '           ' (ID: 352)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.654342532157898
    2. 'y' → logprob: -0.779342532157898
    3. ' =' → logprob: -4.2793426513671875
    4. '=' → logprob: -5.6543426513671875
    5. '   ' → logprob: -5.6543426513671875
    6. ' 
' → logprob: -8.904342651367188
    7. '       ' → logprob: -9.279342651367188
    8. '    
' → logprob: -9.529342651367188
    9. '	y' → logprob: -9.529342651367188
    10. '           ' → logprob: -10.029342651367188

Token 454: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.11313299834728241
    2. 'y' (adapté à ' y') → logprob: -2.238132953643799
    3. '   ' → logprob: -9.113133430480957
    4. '           ' → logprob: -9.113133430480957
    5. '	y' → logprob: -9.988133430480957
    6. '       ' → logprob: -10.113133430480957
    7. '               ' → logprob: -14.113133430480957
    8. ' ' → logprob: -14.613133430480957
    9. '                   ' → logprob: -14.988133430480957
    10. '  ' → logprob: -15.363133430480957

Token 455: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.107425062713446e-06
    2. '=' → logprob: -12.875006675720215
    3. ' -=' → logprob: -13.875006675720215
    4. ' =' → logprob: -14.000006675720215
    5. '```' → logprob: -14.375006675720215
    6. ' ' → logprob: -14.500006675720215
    7. '-=' → logprob: -15.437506675720215
    8. '
' → logprob: -15.687506675720215
    9. '_' → logprob: -16.00000762939453
    10. '<|end|>' → logprob: -16.06250762939453

Token 456: ' =' (ID: 314)
  Prédit: ' %='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %=' → logprob: -0.13663415610790253
    2. '%=' → logprob: -2.761634111404419
    3. ' -=' → logprob: -3.011634111404419
    4. '=' → logprob: -4.511634349822998
    5. ' =' → logprob: -5.636634349822998
    6. '-=' → logprob: -7.386634349822998
    7. '%' → logprob: -9.01163387298584
    8. ' %' → logprob: -10.88663387298584
    9. ' ' → logprob: -12.63663387298584
    10. '-' → logprob: -14.38663387298584

Token 457: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.08894122391939163
    2. 'y' → logprob: -2.4639413356781006
    3. '	y' → logprob: -14.33894157409668
    4. '0' → logprob: -14.46394157409668
    5. ' ' → logprob: -14.83894157409668
    6. '1' → logprob: -17.33894157409668
    7. ' ' → logprob: -17.46394157409668
    8. '   ' → logprob: -17.96394157409668
    9. 't' → logprob: -18.40144157409668
    10. '  ' → logprob: -18.65144157409668

Token 458: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5928495486150496e-05
    2. '%' → logprob: -12.000016212463379
    3. '9' → logprob: -13.000016212463379
    4. ' ' → logprob: -13.000016212463379
    5. ' %' → logprob: -13.250016212463379
    6. '```' → logprob: -14.375016212463379
    7. ' -' → logprob: -14.750016212463379
    8. 'y' → logprob: -15.000016212463379
    9. '%i' → logprob: -15.187516212463379
    10. '   ' → logprob: -15.250016212463379

Token 459: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.17995773255825043
    2. '%' → logprob: -1.8049577474594116
    3. '%i' → logprob: -8.804957389831543
    4. '%d' → logprob: -10.554957389831543
    5. '%s' → logprob: -11.054957389831543
    6. '%x' → logprob: -12.304957389831543
    7. '-' → logprob: -12.804957389831543
    8. ' ' → logprob: -13.054957389831543
    9. '%n' → logprob: -13.179957389831543
    10. ' -' → logprob: -13.179957389831543

Token 460: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0004307884373702109
    2. ' t' → logprob: -7.750430583953857
    3. '`t' → logprob: -16.625431060791016
    4. '(t' → logprob: -17.750431060791016
    5. '9' → logprob: -18.250431060791016
    6. '	t' → logprob: -18.375431060791016
    7. ' ' → logprob: -19.750431060791016
    8. '   ' → logprob: -20.125431060791016
    9. '  ' → logprob: -21.500431060791016
    10. '<t' → logprob: -21.750431060791016

Token 461: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.00015705463010817766
    2. 't' → logprob: -8.875157356262207
    3. 'x' → logprob: -12.125157356262207
    4. ' t' → logprob: -12.625157356262207
    5. 's' → logprob: -13.625157356262207
    6. '```' → logprob: -13.875157356262207
    7. 'q' → logprob: -14.250157356262207
    8. ' ' → logprob: -14.375157356262207
    9. 'a' → logprob: -14.500157356262207
    10. 'g' → logprob: -14.625157356262207

Token 462: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22833824157714844
    2. '       ' → logprob: -1.6033382415771484
    3. '        
' → logprob: -6.853338241577148
    4. '    
' → logprob: -7.103338241577148
    5. '
' → logprob: -7.353338241577148
    6. '<|end|>' → logprob: -8.353338241577148
    7. '  
' → logprob: -10.853338241577148
    8. ' for' → logprob: -10.853338241577148
    9. '           ' → logprob: -10.853338241577148
    10. 'for' → logprob: -11.103338241577148

Token 463: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019144849851727486
    2. '       ' → logprob: -4.0191450119018555
    3. ' for' → logprob: -8.394145011901855
    4. '
' → logprob: -8.519145011901855
    5. '    
' → logprob: -8.519145011901855
    6. 'for' → logprob: -9.144145011901855
    7. '<|end|>' → logprob: -9.894145011901855
    8. '        
' → logprob: -10.144145011901855
    9. '```' → logprob: -10.144145011901855
    10. ' ' → logprob: -10.644145011901855

Token 464: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005178258754312992
    2. 'for' → logprob: -5.755178451538086
    3. ' for' → logprob: -6.380178451538086
    4. '    
' → logprob: -8.755178451538086
    5. '
' → logprob: -9.255178451538086
    6. '#' (adapté à ' #') → logprob: -11.380178451538086
    7. '```' → logprob: -11.880178451538086
    8. ' 
' → logprob: -12.005178451538086
    9. '   
' → logprob: -12.005178451538086
    10. '	for' → logprob: -12.255178451538086

Token 465: ' Après' (ID: 47562)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.627595841884613
    2. '   ' → logprob: -0.877595841884613
    3. ' for' → logprob: -3.002595901489258
    4. '#' → logprob: -7.377595901489258
    5. ' ' → logprob: -10.877595901489258
    6. '  ' → logprob: -11.002595901489258
    7. ' #' → logprob: -11.752595901489258
    8. '    
' → logprob: -12.252595901489258
    9. '       ' → logprob: -12.377595901489258
    10. '	for' → logprob: -12.627595901489258

Token 466: ' la' (ID: 557)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.1040904521942139
    2. 'for' → logprob: -1.4790904521942139
    3. ' la' → logprob: -1.6040904521942139
    4. ' avoir' → logprob: -2.604090452194214
    5. ' le' → logprob: -3.104090452194214
    6. 'la' → logprob: -3.354090452194214
    7. '#' → logprob: -3.979090452194214
    8. 'le' → logprob: -4.479090690612793
    9. ' the' → logprob: -4.479090690612793
    10. '   ' → logprob: -4.604090690612793

Token 467: ' boucle' (ID: 174211)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.015643887221813202
    2. ' for' → logprob: -4.890644073486328
    3. 'bou' → logprob: -5.390644073486328
    4. ' boucle' → logprob: -6.140644073486328
    5. '#' → logprob: -7.640644073486328
    6. 'loop' → logprob: -8.765644073486328
    7. '```' → logprob: -8.890644073486328
    8. 'second' → logprob: -9.140644073486328
    9. 'first' → logprob: -9.390644073486328
    10. 'same' → logprob: -9.890644073486328

Token 468: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7226091027259827
    2. ' for' → logprob: -1.097609043121338
    3. '   ' → logprob: -1.722609043121338
    4. '#' → logprob: -6.597609043121338
    5. ' #' → logprob: -8.597609519958496
    6. '    
' → logprob: -8.847609519958496
    7. ' pour' → logprob: -8.972609519958496
    8. '  ' → logprob: -9.097609519958496
    9. '       ' → logprob: -9.347609519958496
    10. '    ' → logprob: -9.847609519958496

Token 469: ' on' (ID: 402)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3212512731552124
    2. ' for' → logprob: -2.071251392364502
    3. 'for' → logprob: -2.196251392364502
    4. '#' → logprob: -3.321251392364502
    5. ' #' → logprob: -6.821251392364502
    6. '    
' → logprob: -9.071250915527344
    7. ' ' → logprob: -9.946250915527344
    8. '  ' → logprob: -9.946250915527344
    9. '       ' → logprob: -10.821250915527344
    10. 'while' → logprob: -10.821250915527344

Token 470: ' ajoute' (ID: 91611)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3672906458377838
    2. 'continue' → logprob: -1.4922906160354614
    3. ' for' → logprob: -3.492290735244751
    4. '#' → logprob: -3.992290735244751
    5. 'aj' → logprob: -4.867290496826172
    6. ' continue' → logprob: -4.992290496826172
    7. 'if' → logprob: -5.242290496826172
    8. 'fait' → logprob: -5.992290496826172
    9. ' #' → logprob: -6.367290496826172
    10. 'calc' → logprob: -6.742290496826172

Token 471: ' le' (ID: 505)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.5067660212516785
    2. ' cnt' → logprob: -1.1317660808563232
    3. '   ' → logprob: -3.3817660808563232
    4. '(cnt' → logprob: -3.8817660808563232
    5. ' y' → logprob: -4.756765842437744
    6. 'y' → logprob: -5.256765842437744
    7. '(' → logprob: -6.131765842437744
    8. '1' → logprob: -6.381765842437744
    9. ' (' → logprob: -6.756765842437744
    10. 'c' → logprob: -8.256766319274902

Token 472: ' reste' (ID: 26769)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.023848863318562508
    2. 'y' → logprob: -4.898849010467529
    3. 'res' → logprob: -4.898849010467529
    4. ' cnt' → logprob: -5.273849010467529
    5. '6' → logprob: -7.398849010467529
    6. 'for' → logprob: -7.398849010467529
    7. '1' → logprob: -7.898849010467529
    8. ' y' → logprob: -8.273848533630371
    9. 'c' → logprob: -9.023848533630371
    10. '9' → logprob: -9.148848533630371

Token 473: ' de' (ID: 334)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -1.7386629581451416
    2. ' de' → logprob: -1.9886629581451416
    3. 'cnt' → logprob: -1.9886629581451416
    4. 'res' → logprob: -2.1136629581451416
    5. '   ' → logprob: -2.1136629581451416
    6. 'y' → logprob: -2.2386629581451416
    7. 'de' → logprob: -2.2386629581451416
    8. '(cnt' → logprob: -4.2386627197265625
    9. '+' → logprob: -4.6136627197265625
    10. '#' → logprob: -4.8636627197265625

Token 474: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.055356789380311966
    2. ' y' → logprob: -2.930356740951538
    3. 'cnt' → logprob: -7.680356979370117
    4. ' cnt' → logprob: -11.805356979370117
    5. ''y' → logprob: -14.180356979370117
    6. '   ' → logprob: -14.180356979370117
    7. ' ' → logprob: -14.305356979370117
    8. '	y' → logprob: -14.680356979370117
    9. 'count' → logprob: -14.930356979370117
    10. '`' → logprob: -15.180356979370117

Token 475: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005669722449965775
    2. '2' → logprob: -7.5005669593811035
    3. '   ' → logprob: -11.875567436218262
    4. ' ' → logprob: -12.500567436218262
    5. '```' → logprob: -14.313067436218262
    6. '[' → logprob: -14.875567436218262
    7. 'y' → logprob: -15.125567436218262
    8. '#' → logprob: -15.313067436218262
    9. 'res' → logprob: -15.500567436218262
    10. '9' → logprob: -15.563067436218262

Token 476: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.42934396862983704
    2. ' à' → logprob: -1.4293439388275146
    3. ' +=' → logprob: -2.9293439388275146
    4. ' to' → logprob: -3.1793439388275146
    5. ' +' → logprob: -5.929344177246094
    6. ' au' → logprob: -6.054344177246094
    7. 'cnt' → logprob: -6.304344177246094
    8. 'to' → logprob: -6.554344177246094
    9. ' ' → logprob: -6.554344177246094
    10. ',' → logprob: -7.304344177246094

Token 477: ' y' (ID: 342)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.1603068858385086
    2. ' cnt' → logprob: -1.9103069305419922
    3. '	cnt' → logprob: -10.285306930541992
    4. 'count' → logprob: -11.285306930541992
    5. '[cnt' → logprob: -12.035306930541992
    6. '   ' → logprob: -12.035306930541992
    7. '(cnt' → logprob: -12.160306930541992
    8. 'c' → logprob: -12.410306930541992
    9. '```' → logprob: -12.910306930541992
    10. ' la' → logprob: -13.035306930541992

Token 478: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03576801344752312
    2. 'cnt' → logprob: -4.035768032073975
    3. '   ' → logprob: -4.410768032073975
    4. ' cnt' → logprob: -7.035768032073975
    5. 'count' → logprob: -7.285768032073975
    6. '2' → logprob: -7.285768032073975
    7. '[cnt' → logprob: -7.410768032073975
    8. ' ' → logprob: -7.535768032073975
    9. '  ' → logprob: -8.035767555236816
    10. '```' → logprob: -8.035767555236816

Token 479: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005433439277112484
    2. ' +' → logprob: -5.505433559417725
    3. '+' → logprob: -6.880433559417725
    4. 'cnt' → logprob: -8.755433082580566
    5. '  ' → logprob: -9.630433082580566
    6. '
' → logprob: -10.755433082580566
    7. '    ' → logprob: -10.880433082580566
    8. '    
' → logprob: -11.380433082580566
    9. '       ' → logprob: -11.755433082580566
    10. ' ' → logprob: -11.880433082580566

Token 480: ' pouvoir' (ID: 27197)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.08129876852035522
    2. ' cnt' → logprob: -2.581298828125
    3. '#' → logprob: -7.206298828125
    4. 'comp' → logprob: -8.081298828125
    5. 'le' → logprob: -9.206298828125
    6. 'y' → logprob: -9.206298828125
    7. 'res' → logprob: -9.456298828125
    8. '	cnt' → logprob: -9.456298828125
    9. ' continuer' → logprob: -9.581298828125
    10. 'count' → logprob: -9.581298828125

Token 481: ' traiter' (ID: 105852)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -1.7077853679656982
    2. 'trait' → logprob: -1.8327853679656982
    3. 'contin' → logprob: -1.9577853679656982
    4. ' traiter' → logprob: -1.9577853679656982
    5. ' compter' → logprob: -2.5827853679656982
    6. ' continuer' → logprob: -2.8327853679656982
    7. ' comp' → logprob: -2.9577853679656982
    8. 'cnt' → logprob: -3.2077853679656982
    9. 'count' → logprob: -4.457785606384277
    10. 'tra' → logprob: -4.457785606384277

Token 482: ' le' (ID: 505)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.14320316910743713
    2. 'y' → logprob: -2.3932032585144043
    3. '   ' → logprob: -3.8932032585144043
    4. ' la' → logprob: -5.018203258514404
    5. ' le' → logprob: -5.768203258514404
    6. 'le' → logprob: -6.268203258514404
    7. ' ' → logprob: -6.643203258514404
    8. 'cnt' → logprob: -6.893203258514404
    9. 'la' → logprob: -7.143203258514404
    10. ' the' → logprob: -7.268203258514404

Token 483: ' reste' (ID: 26769)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.451505184173584
    2. 'cnt' → logprob: -1.576505184173584
    3. 'res' → logprob: -2.701505184173584
    4. 't' → logprob: -4.076505184173584
    5. ' y' → logprob: -4.201505184173584
    6. 'for' → logprob: -4.451505184173584
    7. 'while' → logprob: -4.701505184173584
    8. 'rest' → logprob: -4.951505184173584
    9. ' reste' → logprob: -5.201505184173584
    10. '#' → logprob: -5.201505184173584

Token 484: ' avec' (ID: 3937)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007449018303304911
    2. ' +' → logprob: -5.382449150085449
    3. '+' → logprob: -6.257449150085449
    4. '    ' → logprob: -8.88244915008545
    5. ' +=' → logprob: -9.00744915008545
    6. ',' → logprob: -9.13244915008545
    7. '.' → logprob: -9.25744915008545
    8. '  ' → logprob: -9.38244915008545
    9. '       ' → logprob: -9.50744915008545
    10. ' y' → logprob: -9.75744915008545

Token 485: ' les' (ID: 1341)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.4624878466129303
    2. '9' → logprob: -1.337487816810608
    3. '   ' → logprob: -2.9624879360198975
    4. 'les' → logprob: -4.587487697601318
    5. 't' → logprob: -4.712487697601318
    6. 'la' → logprob: -5.212487697601318
    7. 'for' → logprob: -5.337487697601318
    8. ' les' → logprob: -5.587487697601318
    9. ' ' → logprob: -5.837487697601318
    10. 'le' → logprob: -5.962487697601318

Token 486: ' puiss' (ID: 102546)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6981987953186035
    2. '6' → logprob: -0.8231987953186035
    3. ' for' → logprob: -3.4481987953186035
    4. '```' → logprob: -4.5731987953186035
    5. '9' → logprob: -5.0731987953186035
    6. 'powers' → logprob: -5.1981987953186035
    7. ' ' → logprob: -5.4481987953186035
    8. '7' → logprob: -6.0731987953186035
    9. ' powers' → logprob: -7.8231987953186035
    10. '<|end|>' → logprob: -7.8231987953186035

Token 487: 'ances' (ID: 3528)
  Prédit: 'ances'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ances' → logprob: -0.11462687700986862
    2. '2' → logprob: -2.489626884460449
    3. 'ance' → logprob: -3.864626884460449
    4. '6' → logprob: -6.114626884460449
    5. 'a' → logprob: -7.614626884460449
    6. '9' → logprob: -7.739626884460449
    7. '1' → logprob: -8.48962688446045
    8. 'an' → logprob: -8.61462688446045
    9. '   ' → logprob: -9.23962688446045
    10. '#' → logprob: -9.48962688446045

Token 488: ' de' (ID: 334)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.5722529292106628
    2. '6' → logprob: -1.5722529888153076
    3. '   ' → logprob: -2.6972529888153076
    4. ' de' → logprob: -2.8222529888153076
    5. 'of' → logprob: -3.0722529888153076
    6. '9' → logprob: -3.3222529888153076
    7. ' ' → logprob: -5.3222527503967285
    8. '    ' → logprob: -5.5722527503967285
    9. '       ' → logprob: -5.6972527503967285
    10. '7' → logprob: -5.9472527503967285

Token 489: ' ' (ID: 220)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.00021212305000517517
    2. ' ' → logprob: -8.500211715698242
    3. '```' → logprob: -12.625211715698242
    4. '   ' → logprob: -13.250211715698242
    5. '9' → logprob: -13.375211715698242
    6. '  ' → logprob: -14.000211715698242
    7. '
' → logprob: -15.250211715698242
    8. '7' → logprob: -15.750211715698242
    9. '(' → logprob: -15.750211715698242
    10. '``' → logprob: -16.000211715698242

Token 490: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -3.292907877039397e-06
    2. ' ' → logprob: -13.00000286102295
    3. '```' → logprob: -14.87500286102295
    4. '9' → logprob: -15.37500286102295
    5. '   ' → logprob: -16.500003814697266
    6. '(' → logprob: -16.937503814697266
    7. '۶' → logprob: -17.375003814697266
    8. '7' → logprob: -17.375003814697266
    9. 'six' → logprob: -17.500003814697266
    10. '٦' → logprob: -17.625003814697266

Token 491: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07167396694421768
    2. '+' → logprob: -3.32167387008667
    3. ' +' → logprob: -3.69667387008667
    4. ' ' → logprob: -6.44667387008667
    5. '    
' → logprob: -6.69667387008667
    6. '<|end|>' → logprob: -6.82167387008667
    7. '    ' → logprob: -7.07167387008667
    8. '  ' → logprob: -7.07167387008667
    9. '.' → logprob: -7.57167387008667
    10. ' +=' → logprob: -8.571674346923828

Token 492: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07378578186035156
    2. 'y' → logprob: -2.6987857818603516
    3. ' y' → logprob: -5.573785781860352
    4. '  ' → logprob: -11.198785781860352
    5. '	y' → logprob: -11.573785781860352
    6. '       ' → logprob: -11.573785781860352
    7. ' ' → logprob: -11.573785781860352
    8. '    ' → logprob: -13.698785781860352
    9. 'cnt' → logprob: -14.073785781860352
    10. '    
' → logprob: -14.198785781860352

Token 493: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' (adapté à ' y') → logprob: -0.008424502797424793
    2. ' y' → logprob: -5.258424282073975
    3. '   ' → logprob: -5.758424282073975
    4. '	y' → logprob: -10.508424758911133
    5. '  ' → logprob: -14.383424758911133
    6. ' ' → logprob: -14.508424758911133
    7. '       ' → logprob: -15.008424758911133
    8. '    ' → logprob: -15.008424758911133
    9. '```' → logprob: -15.008424758911133
    10. '+' → logprob: -16.133424758911133

Token 494: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.416665640543215e-05
    2. '1' → logprob: -11.37503433227539
    3. '=' → logprob: -12.25003433227539
    4. '₂' → logprob: -12.25003433227539
    5. '_' → logprob: -12.37503433227539
    6. ' +=' → logprob: -13.25003433227539
    7. ' =' → logprob: -13.87503433227539
    8. '+=' → logprob: -14.12503433227539
    9. '۲' → logprob: -14.18753433227539
    10. ' ' → logprob: -14.25003433227539

Token 495: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.14468984305858612
    2. ' +=' → logprob: -2.0196897983551025
    3. '=' → logprob: -6.269690036773682
    4. ' =' → logprob: -9.769689559936523
    5. '+' → logprob: -10.394689559936523
    6. ',' → logprob: -10.769689559936523
    7. ']+=' → logprob: -12.644689559936523
    8. '+=(' → logprob: -13.269689559936523
    9. '	' → logprob: -13.644689559936523
    10. '-=' → logprob: -14.144689559936523

Token 496: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.01815064437687397
    2. ' y' → logprob: -4.018150806427002
    3. '	y' → logprob: -15.018150329589844
    4. '   ' → logprob: -15.018150329589844
    5. ' ' → logprob: -15.643150329589844
    6. '  ' → logprob: -17.018150329589844
    7. '+' → logprob: -17.768150329589844
    8. '    ' → logprob: -18.143150329589844
    9. '+y' → logprob: -18.143150329589844
    10. '=y' → logprob: -19.893150329589844

Token 497: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.035774115473032
    2. 'y' → logprob: -4.660774230957031
    3. ' -' → logprob: -5.285774230957031
    4. '2' → logprob: -5.285774230957031
    5. '<|end|>' → logprob: -5.285774230957031
    6. '-' → logprob: -6.285774230957031
    7. ' ' → logprob: -6.285774230957031
    8. '   ' → logprob: -6.785774230957031
    9. '#' → logprob: -6.910774230957031
    10. ' y' → logprob: -7.160774230957031

Token 498: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.577138364315033
    2. 'for' → logprob: -0.827138364315033
    3. '
' → logprob: -7.577138423919678
    4. ' for' → logprob: -8.07713794708252
    5. '    
' → logprob: -8.20213794708252
    6. '#' → logprob: -9.82713794708252
    7. '	for' → logprob: -10.20213794708252
    8. '```' → logprob: -12.95213794708252
    9. '   
' → logprob: -13.07713794708252
    10. '  
' → logprob: -13.20213794708252

Token 499: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3167462646961212
    2. '   ' → logprob: -1.3167462348937988
    3. ' for' → logprob: -5.691746234893799
    4. '```' → logprob: -9.691746711730957
    5. '    
' → logprob: -11.191746711730957
    6. '
' → logprob: -11.316746711730957
    7. '	for' → logprob: -11.441746711730957
    8. '#' → logprob: -12.191746711730957
    9. ' ' → logprob: -15.441746711730957
    10. '   
' → logprob: -15.691746711730957

Token 500: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00016790216614026576
    2. '   ' → logprob: -8.875167846679688
    3. ' for' → logprob: -10.625167846679688
    4. '#' (adapté à ' #') → logprob: -12.750167846679688
    5. '
' → logprob: -14.625167846679688
    6. '    
' → logprob: -14.750167846679688
    7. '	for' → logprob: -17.250167846679688
    8. '```' → logprob: -17.750167846679688
    9. '  
' → logprob: -18.000167846679688
    10. ' 
' → logprob: -18.500167846679688

Token 501: ' Maintenant' (ID: 163349)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.4974866644479334e-05
    2. '   ' → logprob: -11.625015258789062
    3. ' for' → logprob: -12.375015258789062
    4. '#' → logprob: -13.375015258789062
    5. '
' → logprob: -15.875015258789062
    6. '```' → logprob: -16.500015258789062
    7. 'from' → logprob: -18.125015258789062
    8. '	for' → logprob: -18.375015258789062
    9. '    
' → logprob: -18.750015258789062
    10. ' ' → logprob: -19.375015258789062

Token 502: ' on' (ID: 402)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31951504945755005
    2. ' for' → logprob: -1.3195149898529053
    3. 'for' → logprob: -5.444515228271484
    4. ' pour' → logprob: -7.694515228271484
    5. ' on' → logprob: -7.819515228271484
    6. ',' → logprob: -7.819515228271484
    7. '#' → logprob: -7.944515228271484
    8. '  ' → logprob: -8.819515228271484
    9. '    ' → logprob: -9.944515228271484
    10. '
' → logprob: -11.194515228271484

Token 503: ' va' (ID: 3423)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.027100827544927597
    2. ' for' → logprob: -3.6521008014678955
    3. '#' → logprob: -7.277101039886475
    4. 'continue' → logprob: -10.027100563049316
    5. '   ' → logprob: -10.777100563049316
    6. 'pour' → logprob: -11.652100563049316
    7. ' continue' → logprob: -11.777100563049316
    8. ' #' → logprob: -12.027100563049316
    9. ' ' → logprob: -12.152100563049316
    10. '
' → logprob: -12.402100563049316

Token 504: ' essayer' (ID: 92713)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.027491742745041847
    2. ' for' → logprob: -3.777491807937622
    3. '#' → logprob: -6.277491569519043
    4. 'contin' → logprob: -6.902491569519043
    5. 'pour' → logprob: -7.152491569519043
    6. '   ' → logprob: -8.527491569519043
    7. 'faire' → logprob: -8.902491569519043
    8. ' continuer' → logprob: -10.277491569519043
    9. 'forcer' → logprob: -10.277491569519043
    10. 'continue' → logprob: -10.402491569519043

Token 505: ' de' (ID: 334)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11755956709384918
    2. ' for' → logprob: -3.2425596714019775
    3. 'de' → logprob: -3.3675596714019775
    4. 'd' → logprob: -4.367559432983398
    5. ' de' → logprob: -4.617559432983398
    6. '#' → logprob: -5.492559432983398
    7. '   ' → logprob: -5.617559432983398
    8. 'pour' → logprob: -5.742559432983398
    9. 'la' → logprob: -7.242559432983398
    10. ' d' → logprob: -7.617559432983398

Token 506: ' représ' (ID: 31534)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0038031688891351223
    2. ' for' → logprob: -5.628803253173828
    3. '#' → logprob: -9.003803253173828
    4. 'range' → logprob: -10.378803253173828
    5. 'pour' → logprob: -10.753803253173828
    6. 'forcer' → logprob: -12.003803253173828
    7. '
' → logprob: -12.628803253173828
    8. 'from' → logprob: -12.878803253173828
    9. 'calcul' → logprob: -13.128803253173828
    10. '```' → logprob: -13.128803253173828

Token 507: 'enter' (ID: 3547)
  Prédit: 'enter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enter' → logprob: -0.0008987197652459145
    2. 'eser' → logprob: -8.500898361206055
    3. 'ent' → logprob: -8.625898361206055
    4. 'er' → logprob: -9.000898361206055
    5. 'enser' → logprob: -9.000898361206055
    6. 'user' → logprob: -9.875898361206055
    7. 'ser' → logprob: -10.125898361206055
    8. 'érer' → logprob: -10.375898361206055
    9. 'resenter' → logprob: -10.875898361206055
    10. 'éter' → logprob: -11.125898361206055

Token 508: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0357353501021862
    2. ' y' → logprob: -3.4107353687286377
    3. 'le' → logprob: -7.035735130310059
    4. '#' → logprob: -7.535735130310059
    5. '   ' → logprob: -8.035735130310059
    6. ' le' → logprob: -9.035735130310059
    7. 'la' → logprob: -9.410735130310059
    8. ' ' → logprob: -9.910735130310059
    9. ' la' → logprob: -10.785735130310059
    10. '6' → logprob: -10.910735130310059

Token 509: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.8889261304575484e-06
    2. ' ' → logprob: -13.250003814697266
    3. '   ' → logprob: -14.125003814697266
    4. '```' → logprob: -14.875003814697266
    5. '#' → logprob: -15.250003814697266
    6. 'en' → logprob: -16.000003814697266
    7. 'avec' → logprob: -16.125003814697266
    8. '_' → logprob: -16.500003814697266
    9. 'de' → logprob: -16.625003814697266
    10. 'using' → logprob: -16.750003814697266

Token 510: ' avec' (ID: 3937)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25317007303237915
    2. 'avec' → logprob: -2.3781700134277344
    3. ' avec' → logprob: -2.7531700134277344
    4. 'with' → logprob: -3.3781700134277344
    5. '#' → logprob: -4.628170013427734
    6. 'for' → logprob: -5.003170013427734
    7. 'en' → logprob: -5.128170013427734
    8. ' with' → logprob: -5.378170013427734
    9. 'using' → logprob: -5.878170013427734
    10. ' en' → logprob: -7.378170013427734

Token 511: ' des' (ID: 731)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.7157461047172546
    2. ' les' → logprob: -1.3407461643218994
    3. '6' → logprob: -2.2157461643218994
    4. 'des' → logprob: -2.7157461643218994
    5. '9' → logprob: -3.2157461643218994
    6. '#' → logprob: -4.34074592590332
    7. ' des' → logprob: -4.46574592590332
    8. 'for' → logprob: -6.09074592590332
    9. 'la' → logprob: -6.09074592590332
    10. '```' → logprob: -6.46574592590332

Token 512: ' puiss' (ID: 102546)
  Prédit: 'pu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pu' → logprob: -0.28814372420310974
    2. '6' → logprob: -1.7881437540054321
    3. ' puiss' → logprob: -3.1631436347961426
    4. '9' → logprob: -3.6631436347961426
    5. 'powers' → logprob: -5.538143634796143
    6. 'ex' → logprob: -6.288143634796143
    7. '```' → logprob: -6.663143634796143
    8. ' ' → logprob: -6.788143634796143
    9. '7' → logprob: -6.788143634796143
    10. 'multip' → logprob: -6.788143634796143

Token 513: 'ances' (ID: 3528)
  Prédit: 'ances'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ances' → logprob: -1.8789383830153383e-05
    2. '6' → logprob: -12.250019073486328
    3. '9' → logprob: -13.000019073486328
    4. 'ences' → logprob: -13.250019073486328
    5. 'ance' → logprob: -13.375019073486328
    6. 'p' → logprob: -13.750019073486328
    7. 'an' → logprob: -14.125019073486328
    8. '**' → logprob: -14.125019073486328
    9. '```' → logprob: -14.250019073486328
    10. '#' → logprob: -14.500019073486328

Token 514: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.20414316654205322
    2. 'de' → logprob: -1.7041431665420532
    3. ' of' → logprob: -6.579143047332764
    4. 'of' → logprob: -7.454143047332764
    5. '6' → logprob: -7.829143047332764
    6. '9' → logprob: -9.079143524169922
    7. '#' → logprob: -10.079143524169922
    8. 'd' → logprob: -10.079143524169922
    9. ' ' → logprob: -10.829143524169922
    10. '7' → logprob: -10.829143524169922

Token 515: ' ' (ID: 220)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.00020580526324920356
    2. ' ' → logprob: -8.500205993652344
    3. '```' → logprob: -13.625205993652344
    4. '`' → logprob: -15.250205993652344
    5. '(' → logprob: -15.250205993652344
    6. '   ' → logprob: -15.625205993652344
    7. 'six' → logprob: -16.000205993652344
    8. ' six' → logprob: -16.375205993652344
    9. '
' → logprob: -16.875205993652344
    10. '#' → logprob: -17.500205993652344

Token 516: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -1.9623810658231378e-05
    2. '9' → logprob: -11.000020027160645
    3. ' ' → logprob: -12.875020027160645
    4. '```' → logprob: -15.750020027160645
    5. '   ' → logprob: -17.750019073486328
    6. '(' → logprob: -17.750019073486328
    7. '#' → logprob: -18.125019073486328
    8. 'six' → logprob: -18.250019073486328
    9. '`' → logprob: -18.750019073486328
    10. '٦' → logprob: -19.000019073486328

Token 517: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3795621991157532
    2. 'for' → logprob: -1.3795621395111084
    3. ' for' → logprob: -2.7545621395111084
    4. '
' → logprob: -8.879562377929688
    5. '  ' → logprob: -9.129562377929688
    6. ' ' → logprob: -9.629562377929688
    7. '.' → logprob: -9.754562377929688
    8. ',' → logprob: -10.004562377929688
    9. '	for' → logprob: -10.129562377929688
    10. '    
' → logprob: -10.629562377929688

Token 518: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7210825085639954
    2. 'for' → logprob: -0.7210825085639954
    3. ' for' → logprob: -3.5960824489593506
    4. '
' → logprob: -9.59608268737793
    5. '    
' → logprob: -10.72108268737793
    6. '	for' → logprob: -11.09608268737793
    7. ' ' → logprob: -12.09608268737793
    8. '  ' → logprob: -12.97108268737793
    9. '```' → logprob: -13.72108268737793
    10. '  
' → logprob: -13.97108268737793

Token 519: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004345140885561705
    2. '   ' → logprob: -5.754344940185547
    3. ' for' → logprob: -6.754344940185547
    4. '	for' → logprob: -14.504344940185547
    5. '
' → logprob: -15.504344940185547
    6. ' ' → logprob: -15.754344940185547
    7. '```' → logprob: -16.504344940185547
    8. '  ' → logprob: -17.004344940185547
    9. '<|end|>' → logprob: -18.129344940185547
    10. '    
' → logprob: -18.129344940185547

Token 520: ' Encore' (ID: 118329)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.6240566083070007e-06
    2. ' for' → logprob: -13.500001907348633
    3. '   ' → logprob: -15.875001907348633
    4. '
' → logprob: -19.625001907348633
    5. '```' → logprob: -20.000001907348633
    6. '	for' → logprob: -20.750001907348633
    7. 'from' → logprob: -20.875001907348633
    8. '#' → logprob: -21.500001907348633
    9. ' ' → logprob: -22.000001907348633
    10. '    
' → logprob: -22.375001907348633

Token 521: ' une' (ID: 2463)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5137192606925964
    2. '   ' → logprob: -1.3887193202972412
    3. ' for' → logprob: -1.8887193202972412
    4. '  ' → logprob: -7.513719081878662
    5. '    ' → logprob: -8.76371955871582
    6. ' pour' → logprob: -9.38871955871582
    7. ' ' → logprob: -9.76371955871582
    8. 'pour' → logprob: -9.76371955871582
    9. 'une' → logprob: -9.88871955871582
    10. ' une' → logprob: -10.76371955871582

Token 522: ' boucle' (ID: 174211)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00038169484469108284
    2. ' for' → logprob: -8.125381469726562
    3. 'bou' → logprob: -10.000381469726562
    4. 'pour' → logprob: -11.125381469726562
    5. 'fois' → logprob: -11.875381469726562
    6. '```' → logprob: -11.875381469726562
    7. ' boucle' → logprob: -12.500381469726562
    8. '   ' → logprob: -13.250381469726562
    9. '
' → logprob: -13.375381469726562
    10. 'fo' → logprob: -13.625381469726562

Token 523: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07889771461486816
    2. ' for' → logprob: -2.578897714614868
    3. 'pour' → logprob: -12.328897476196289
    4. ' pour' → logprob: -13.203897476196289
    5. '   ' → logprob: -14.078897476196289
    6. '	for' → logprob: -15.328897476196289
    7. '```' → logprob: -15.328897476196289
    8. 'de' → logprob: -16.57889747619629
    9. 'range' → logprob: -16.95389747619629
    10. '.for' → logprob: -16.95389747619629

Token 524: ',' (ID: 11)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.056964993476867676
    2. 'for' → logprob: -2.931964874267578
    3. '   ' → logprob: -6.181964874267578
    4. ' pour' → logprob: -12.431964874267578
    5. '	for' → logprob: -12.806964874267578
    6. '
' → logprob: -13.556964874267578
    7. ' ' → logprob: -13.556964874267578
    8. '    ' → logprob: -13.806964874267578
    9. '  ' → logprob: -14.181964874267578
    10. ' in' → logprob: -14.181964874267578

Token 525: ' cette' (ID: 7696)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03031720034778118
    2. ' for' → logprob: -3.5303173065185547
    3. '   ' → logprob: -7.530317306518555
    4. 'pour' → logprob: -11.530317306518555
    5. 'range' → logprob: -11.780317306518555
    6. '	for' → logprob: -12.655317306518555
    7. ' pour' → logprob: -12.655317306518555
    8. '  ' → logprob: -13.530317306518555
    9. ' ' → logprob: -13.780317306518555
    10. '    ' → logprob: -14.155317306518555

Token 526: ' fois' (ID: 14697)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.032274045050144196
    2. ' for' → logprob: -4.15727424621582
    3. ' fois' → logprob: -4.53227424621582
    4. 'time' → logprob: -6.28227424621582
    5. 'fois' → logprob: -6.90727424621582
    6. 'range' → logprob: -7.28227424621582
    7. 'pour' → logprob: -7.53227424621582
    8. ' time' → logprob: -8.15727424621582
    9. 'fo' → logprob: -8.28227424621582
    10. 'f' → logprob: -8.90727424621582

Token 527: ' '' (ID: 461)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11197607964277267
    2. ' for' → logprob: -2.611976146697998
    3. 'pour' → logprob: -3.736976146697998
    4. '   ' → logprob: -5.236976146697998
    5. ' pour' → logprob: -5.861976146697998
    6. '(' → logprob: -8.98697566986084
    7. 'range' → logprob: -9.11197566986084
    8. ' en' → logprob: -9.86197566986084
    9. 'en' → logprob: -10.11197566986084
    10. '(j' → logprob: -10.48697566986084

Token 528: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0021074325777590275
    2. ' j' → logprob: -6.377107620239258
    3. 'for' → logprob: -7.877107620239258
    4. ' for' → logprob: -11.127107620239258
    5. 'k' → logprob: -11.752107620239258
    6. '```' → logprob: -14.002107620239258
    7. ' ' → logprob: -14.627107620239258
    8. '   ' → logprob: -15.002107620239258
    9. 'i' → logprob: -15.002107620239258
    10. '	j' → logprob: -15.127107620239258

Token 529: ''' (ID: 6)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.20192664861679077
    2. 'in' → logprob: -1.7019267082214355
    3. '=' → logprob: -8.576926231384277
    4. ' =' → logprob: -9.701926231384277
    5. 'en' → logprob: -9.826926231384277
    6. ' en' → logprob: -9.826926231384277
    7. ')' → logprob: -9.951926231384277
    8. 'range' → logprob: -10.451926231384277
    9. 'for' → logprob: -11.201926231384277
    10. ' ' → logprob: -11.701926231384277

Token 530: ' va' (ID: 3423)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.1807764172554016
    2. ' in' → logprob: -1.8057763576507568
    3. '=' → logprob: -7.680776596069336
    4. 'for' → logprob: -8.305776596069336
    5. 'en' → logprob: -9.055776596069336
    6. 'from' → logprob: -9.430776596069336
    7. 'range' → logprob: -10.430776596069336
    8. ' =' → logprob: -10.805776596069336
    9. '<|end|>' → logprob: -11.180776596069336
    10. 'dans' → logprob: -11.555776596069336

Token 531: ' de' (ID: 334)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.026451475918293
    2. 'in' → logprob: -4.026451587677002
    3. 'from' → logprob: -5.026451587677002
    4. 'de' → logprob: -7.276451587677002
    5. 'for' → logprob: -7.776451587677002
    6. ' range' → logprob: -8.401451110839844
    7. ' in' → logprob: -9.026451110839844
    8. '=' → logprob: -9.276451110839844
    9. 'dans' → logprob: -10.026451110839844
    10. 'en' → logprob: -11.151451110839844

Token 532: ' ' (ID: 220)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.0012063038302585483
    2. '(' → logprob: -7.376206398010254
    3. '5' → logprob: -7.876206398010254
    4. ' ' → logprob: -8.626206398010254
    5. '7' → logprob: -12.001206398010254
    6. 'range' → logprob: -12.376206398010254
    7. '1' → logprob: -13.251206398010254
    8. ' (' → logprob: -13.438706398010254
    9. '[' → logprob: -14.001206398010254
    10. '```' → logprob: -14.251206398010254

Token 533: '7' (ID: 22)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.001573663903400302
    2. '5' → logprob: -6.50157356262207
    3. ' ' → logprob: -10.62657356262207
    4. '7' → logprob: -11.37657356262207
    5. '3' → logprob: -11.50157356262207
    6. '10' → logprob: -11.62657356262207
    7. '4' → logprob: -12.00157356262207
    8. '9' → logprob: -12.62657356262207
    9. '12' → logprob: -13.56407356262207
    10. '(' → logprob: -13.81407356262207

Token 534: ' à' (ID: 1221)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0017032715259119868
    2. ' ,' → logprob: -7.626703262329102
    3. ' to' → logprob: -8.001703262329102
    4. '7' → logprob: -8.376703262329102
    5. ' down' → logprob: -8.376703262329102
    6. 'to' → logprob: -8.501703262329102
    7. '<|end|>' → logprob: -8.876703262329102
    8. '6' → logprob: -10.626703262329102
    9. ',
' → logprob: -11.501703262329102
    10. ' for' → logprob: -11.751703262329102

Token 535: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005398934241384268
    2. ' ' → logprob: -5.505398750305176
    3. '1' → logprob: -6.755398750305176
    4. '-' → logprob: -9.755398750305176
    5. '6' → logprob: -10.130398750305176
    6. ',' → logprob: -10.755398750305176
    7. '2' → logprob: -12.005398750305176
    8. ' -' → logprob: -12.380398750305176
    9. '=' → logprob: -12.817898750305176
    10. '5' → logprob: -12.817898750305176

Token 536: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0011481947731226683
    2. '1' → logprob: -6.876148223876953
    3. ' ' → logprob: -9.751148223876953
    4. '-' → logprob: -10.251148223876953
    5. '6' → logprob: -11.751148223876953
    6. '2' → logprob: -12.688648223876953
    7. '```' → logprob: -13.001148223876953
    8. '7' → logprob: -13.126148223876953
    9. '
' → logprob: -13.813648223876953
    10. '5' → logprob: -14.001148223876953

Token 537: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009263493702746928
    2. ' ,' → logprob: -7.000926494598389
    3. '   ' → logprob: -11.75092601776123
    4. '0' → logprob: -12.87592601776123
    5. ',-' → logprob: -14.00092601776123
    6. 'for' → logprob: -14.12592601776123
    7. '-' → logprob: -14.50092601776123
    8. ' ' → logprob: -14.87592601776123
    9. '(' → logprob: -15.12592601776123
    10. ',
' → logprob: -15.37592601776123

Token 538: 'incl' (ID: 103424)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.008468364365398884
    2. ' -' → logprob: -5.008468151092529
    3. '0' → logprob: -6.883468151092529
    4. ',' → logprob: -7.258468151092529
    5. ' ' → logprob: -11.008468627929688
    6. '   ' → logprob: -13.008468627929688
    7. '7' → logprob: -13.633468627929688
    8. '```' → logprob: -15.133468627929688
    9. '1' → logprob: -15.258468627929688
    10. '6' → logprob: -15.383468627929688

Token 539: 'u' (ID: 84)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2263951450586319
    2. ',' → logprob: -2.2263951301574707
    3. 'ues' → logprob: -2.9763951301574707
    4. ',-' → logprob: -3.8513951301574707
    5. 'us' → logprob: -4.851395130157471
    6. 'usive' → logprob: -5.476395130157471
    7. 'u' → logprob: -6.226395130157471
    8. 's' → logprob: -6.601395130157471
    9. 'es' → logprob: -6.976395130157471
    10. 'ue' → logprob: -7.351395130157471

Token 540: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009126556105911732
    2. ',-' → logprob: -7.375912666320801
    3. '-' → logprob: -8.8759126663208
    4. 'n' → logprob: -9.2509126663208
    5. 's' → logprob: -11.0009126663208
    6. ' ,' → logprob: -11.3759126663208
    7. '0' → logprob: -11.6259126663208
    8. '-,' → logprob: -12.1259126663208
    9. 't' → logprob: -14.2509126663208
    10. ' -' → logprob: -14.2509126663208

Token 541: ' de' (ID: 334)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2318507879972458
    2. 'for' → logprob: -1.8568507432937622
    3. '-' → logprob: -3.8568508625030518
    4. ' -' → logprob: -3.9818508625030518
    5. ' in' → logprob: -5.481850624084473
    6. ',' → logprob: -5.606850624084473
    7. '   ' → logprob: -6.481850624084473
    8. ' ' → logprob: -7.356850624084473
    9. '0' → logprob: -8.106850624084473
    10. ' ,' → logprob: -8.856850624084473

Token 542: ' haut' (ID: 28223)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.010264652781188488
    2. ' -' → logprob: -4.635264873504639
    3. '7' → logprob: -7.760264873504639
    4. '1' → logprob: -10.01026439666748
    5. ' ' → logprob: -11.26026439666748
    6. '6' → logprob: -12.01026439666748
    7. '0' → logprob: -12.88526439666748
    8. ',' → logprob: -12.88526439666748
    9. '  ' → logprob: -12.88526439666748
    10. '   ' → logprob: -13.63526439666748

Token 543: ' en' (ID: 469)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0539044626057148
    2. ',-' → logprob: -3.5539045333862305
    3. '-' → logprob: -4.1789045333862305
    4. '(-' → logprob: -5.5539045333862305
    5. ' ,' → logprob: -6.6789045333862305
    6. ' -' → logprob: -7.1789045333862305
    7. '-,' → logprob: -7.1789045333862305
    8. '1' → logprob: -8.30390453338623
    9. '=-' → logprob: -8.55390453338623
    10. 'n' → logprob: -8.55390453338623

Token 544: ' bas' (ID: 3222)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0005135946557857096
    2. ' -' → logprob: -8.000514030456543
    3. '1' → logprob: -8.750514030456543
    4. 'range' → logprob: -11.625514030456543
    5. '7' → logprob: -13.375514030456543
    6. ' range' → logprob: -13.875514030456543
    7. '-j' → logprob: -13.875514030456543
    8. '0' → logprob: -14.250514030456543
    9. '-step' → logprob: -14.375514030456543
    10. '-range' → logprob: -14.500514030456543

Token 545: '.
' (ID: 558)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.25804251432418823
    2. 'for' → logprob: -1.883042573928833
    3. ' for' → logprob: -3.008042573928833
    4. ':' → logprob: -4.258042335510254
    5. '   ' → logprob: -5.008042335510254
    6. ':
' → logprob: -5.883042335510254
    7. '-' → logprob: -6.758042335510254
    8. '.' → logprob: -7.883042335510254
    9. ',
' → logprob: -8.008042335510254
    10. ',-' → logprob: -9.883042335510254

Token 546: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10025843977928162
    2. ' for' → logprob: -2.3502583503723145
    3. 'range' → logprob: -9.975258827209473
    4. ' range' → logprob: -12.850258827209473
    5. '```' → logprob: -13.350258827209473
    6. '   ' → logprob: -15.100258827209473
    7. '(range' → logprob: -15.100258827209473
    8. ' in' → logprob: -15.600258827209473
    9. 'in' → logprob: -16.350257873535156
    10. '	for' → logprob: -17.600257873535156

Token 547: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.06208330765366554
    2. ' for' → logprob: -2.8120832443237305
    3. 'range' → logprob: -9.18708324432373
    4. '   ' → logprob: -12.31208324432373
    5. ' range' → logprob: -12.43708324432373
    6. '```' → logprob: -13.06208324432373
    7. '7' → logprob: -14.06208324432373
    8. ':' → logprob: -14.31208324432373
    9. ' in' → logprob: -14.43708324432373
    10. '[' → logprob: -15.18708324432373

Token 548: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.5759507417678833
    2. ' j' → logprob: -0.8259507417678833
    3. ' ' → logprob: -12.325950622558594
    4. '	j' → logprob: -12.950950622558594
    5. '7' → logprob: -13.200950622558594
    6. '```' → logprob: -14.450950622558594
    7. '_j' → logprob: -14.700950622558594
    8. ' ' → logprob: -14.950950622558594
    9. '$j' → logprob: -15.450950622558594
    10. '  ' → logprob: -15.575950622558594

Token 549: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0008284482173621655
    2. 'in' → logprob: -7.125828266143799
    3. '=' → logprob: -11.000828742980957
    4. 'range' → logprob: -13.125828742980957
    5. ' ' → logprob: -13.375828742980957
    6. ' =' → logprob: -14.125828742980957
    7. '7' → logprob: -14.250828742980957
    8. 's' → logprob: -14.500828742980957
    9. '<|end|>' → logprob: -14.500828742980957
    10. '```' → logprob: -15.375828742980957

Token 550: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.05730828270316124
    2. ' range' → logprob: -2.9323081970214844
    3. '7' → logprob: -6.182308197021484
    4. '(' → logprob: -8.307308197021484
    5. '(range' → logprob: -9.182308197021484
    6. ' ' → logprob: -12.182308197021484
    7. ' (' → logprob: -14.057308197021484
    8. '	range' → logprob: -14.182308197021484
    9. '  ' → logprob: -14.807308197021484
    10. '6' → logprob: -15.182308197021484

Token 551: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0031817557755857706
    2. '7' → logprob: -5.7531819343566895
    3. ' (' → logprob: -12.503181457519531
    4. ',' → logprob: -16.25318145751953
    5. ' ' → logprob: -16.62818145751953
    6. '
' → logprob: -17.75318145751953
    7. '(
' → logprob: -18.00318145751953
    8. '{' → logprob: -18.00318145751953
    9. '[' → logprob: -18.12818145751953
    10. '=' → logprob: -18.12818145751953

Token 552: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -14.250000953674316
    3. '6' → logprob: -15.500000953674316
    4. '৭' → logprob: -17.125001907348633
    5. '७' → logprob: -17.250001907348633
    6. '۷' → logprob: -17.625001907348633
    7. '７' → logprob: -17.937501907348633
    8. '٧' → logprob: -18.062501907348633
    9. '' → logprob: -18.687501907348633
    10. '   ' → logprob: -18.812501907348633

Token 553: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.2020991056924686e-05
    2. ' ,' → logprob: -10.375032424926758
    3. '7' → logprob: -15.000032424926758
    4. ',
' → logprob: -15.250032424926758
    5. '6' → logprob: -16.125032424926758
    6. '1' → logprob: -17.625032424926758
    7. ' ' → logprob: -17.875032424926758
    8. '   ' → logprob: -18.125032424926758
    9. '9' → logprob: -18.125032424926758
    10. '8' → logprob: -18.625032424926758

Token 554: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00017982252757064998
    2. ' ' → logprob: -8.6251802444458
    3. '   ' → logprob: -17.375179290771484
    4. '1' → logprob: -18.000179290771484
    5. ',' → logprob: -18.062679290771484
    6. '  ' → logprob: -18.250179290771484
    7. ' -' → logprob: -18.562679290771484
    8. '	' → logprob: -18.937679290771484
    9. '6' → logprob: -18.937679290771484
    10. '
' → logprob: -19.125179290771484

Token 555: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.632542913896032e-05
    2. ' ' → logprob: -10.000046730041504
    3. '-' → logprob: -14.750046730041504
    4. ' -' → logprob: -15.750046730041504
    5. '1' → logprob: -15.875046730041504
    6. '   ' → logprob: -17.375045776367188
    7. ',' → logprob: -17.500045776367188
    8. '6' → logprob: -17.625045776367188
    9. '  ' → logprob: -17.937545776367188
    10. '```' → logprob: -18.375045776367188

Token 556: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.248469718324486e-05
    2. ' ,' → logprob: -11.375022888183594
    3. ',-' → logprob: -11.750022888183594
    4. '-' → logprob: -12.875022888183594
    5. ' -' → logprob: -14.875022888183594
    6. '   ' → logprob: -17.000022888183594
    7. ',
' → logprob: -17.500022888183594
    8. ' ,-' → logprob: -17.625022888183594
    9. '-,' → logprob: -17.875022888183594
    10. '0' → logprob: -17.875022888183594

Token 557: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0010330495424568653
    2. ' -' → logprob: -6.876032829284668
    3. '-)' → logprob: -15.876032829284668
    4. ' ' → logprob: -16.751033782958984
    5. '-step' → logprob: -17.751033782958984
    6. '-
' → logprob: -17.876033782958984
    7. '   ' → logprob: -17.876033782958984
    8. '  ' → logprob: -18.251033782958984
    9. ')-' → logprob: -18.376033782958984
    10. '-re' → logprob: -18.501033782958984

Token 558: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03807833418250084
    2. '-' → logprob: -3.2880783081054688
    3. ' -' → logprob: -10.288078308105469
    4. ' ' → logprob: -13.663078308105469
    5. ')' → logprob: -14.288078308105469
    6. '   ' → logprob: -14.538078308105469
    7. '```' → logprob: -15.038078308105469
    8. '-)' → logprob: -16.53807830810547
    9. '  ' → logprob: -17.41307830810547
    10. ')-' → logprob: -17.53807830810547

Token 559: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5391523838043213
    2. '):
' → logprob: -1.1641523838043213
    3. '-' → logprob: -2.2891523838043213
    4. ',' → logprob: -6.414152145385742
    5. ' -' → logprob: -7.289152145385742
    6. ')' → logprob: -8.164152145385742
    7. ',-' → logprob: -8.789152145385742
    8. '   ' → logprob: -8.789152145385742
    9. '):
' → logprob: -9.164152145385742
    10. '):

' → logprob: -9.789152145385742

Token 560: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16497185826301575
    2. '   ' → logprob: -2.1649718284606934
    3. '<|end|>' → logprob: -3.4149718284606934
    4. '#' → logprob: -5.914971828460693
    5. '<|end|>' → logprob: -8.164972305297852
    6. ' ' → logprob: -8.289972305297852
    7. ':' → logprob: -8.789972305297852
    8. '    ' → logprob: -8.789972305297852
    9. '```' → logprob: -9.164972305297852
    10. '  ' → logprob: -9.289972305297852

Token 561: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.07910601794719696
    2. '   ' → logprob: -3.329106092453003
    3. 't' → logprob: -3.579106092453003
    4. ' #' → logprob: -5.079105854034424
    5. '       ' → logprob: -5.579105854034424
    6. ' t' → logprob: -7.079105854034424
    7. ' ' → logprob: -7.204105854034424
    8. '```' → logprob: -7.829105854034424
    9. '<|end|>' → logprob: -8.954106330871582
    10. '  ' → logprob: -9.454106330871582

Token 562: ' On' (ID: 2160)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0009355206857435405
    2. '#' → logprob: -7.7509355545043945
    3. ' t' → logprob: -8.000935554504395
    4. '       ' → logprob: -9.125935554504395
    5. '   ' → logprob: -9.875935554504395
    6. '6' → logprob: -13.000935554504395
    7. '           ' → logprob: -13.750935554504395
    8. '	t' → logprob: -13.750935554504395
    9. '
' → logprob: -14.125935554504395
    10. '`t' → logprob: -14.250935554504395

Token 563: ' calc' (ID: 25691)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.07679356634616852
    2. ' t' → logprob: -2.701793670654297
    3. 'calcul' → logprob: -6.576793670654297
    4. 'calc' → logprob: -6.826793670654297
    5. 'calculate' → logprob: -7.076793670654297
    6. '#' → logprob: -7.451793670654297
    7. 'cal' → logprob: -7.701793670654297
    8. ' calc' → logprob: -7.951793670654297
    9. 's' → logprob: -8.201793670654297
    10. 'code' → logprob: -8.326793670654297

Token 564: 'ule' (ID: 1601)
  Prédit: 'ule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ule' → logprob: -0.0025189423467963934
    2. 'cule' → logprob: -6.502519130706787
    3. 'ulate' → logprob: -7.002519130706787
    4. 'le' → logprob: -10.877518653869629
    5. 'ul' → logprob: -11.252518653869629
    6. 't' → logprob: -11.502518653869629
    7. 'culate' → logprob: -11.502518653869629
    8. 'ulte' → logprob: -11.752518653869629
    9. 'ulé' → logprob: -11.877518653869629
    10. 'alc' → logprob: -12.002518653869629

Token 565: ' ' (ID: 220)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.003026314079761505
    2. ' ' → logprob: -5.878026485443115
    3. 't' → logprob: -8.878026008605957
    4. '   ' → logprob: -10.503026008605957
    5. ' t' → logprob: -10.753026008605957
    6. '(' → logprob: -10.753026008605957
    7. '```' → logprob: -13.378026008605957
    8. '  ' → logprob: -13.565526008605957
    9. ' (' → logprob: -13.753026008605957
    10. ' six' → logprob: -14.065526008605957

Token 566: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.0010659167310222983
    2. 't' → logprob: -6.876065731048584
    3. ' ' → logprob: -10.501066207885742
    4. ' t' → logprob: -13.001066207885742
    5. '(' → logprob: -13.251066207885742
    6. '```' → logprob: -14.251066207885742
    7. '   ' → logprob: -14.876066207885742
    8. 'six' → logprob: -15.626066207885742
    9. '`' → logprob: -16.626066207885742
    10. '
' → logprob: -16.876066207885742

Token 567: ' expos' (ID: 10300)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.12778599560260773
    2. ' **' → logprob: -2.1277859210968018
    3. '=' → logprob: -8.002785682678223
    4. ' =' → logprob: -8.127785682678223
    5. '^' → logprob: -8.627785682678223
    6. ' ' → logprob: -10.502785682678223
    7. '   ' → logprob: -12.002785682678223
    8. '*' → logprob: -12.627785682678223
    9. '```' → logprob: -12.752785682678223
    10. 't' → logprob: -13.252785682678223

Token 568: 'ant' (ID: 493)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.0414191409945488
    2. '^' → logprob: -4.16641902923584
    3. '       ' → logprob: -5.04141902923584
    4. '=' → logprob: -5.41641902923584
    5. '6' → logprob: -5.91641902923584
    6. 'ponent' → logprob: -6.66641902923584
    7. '           ' → logprob: -6.66641902923584
    8. ')' → logprob: -6.91641902923584
    9. '   ' → logprob: -6.91641902923584
    10. ' **' → logprob: -7.29141902923584

Token 569: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -4.084206375409849e-05
    2. ' j' → logprob: -10.125041007995605
    3. '$j' → logprob: -15.375041007995605
    4. '[j' → logprob: -15.875041007995605
    5. '	j' → logprob: -16.00004005432129
    6. '   ' → logprob: -16.25004005432129
    7. '```' → logprob: -16.62504005432129
    8. '*j' → logprob: -17.37504005432129
    9. '(j' → logprob: -17.50004005432129
    10. ' ' → logprob: -18.00004005432129

Token 570: ' et' (ID: 859)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4209187626838684
    2. '       ' → logprob: -1.4209187030792236
    3. ' =' → logprob: -2.2959187030792236
    4. 't' → logprob: -7.295918941497803
    5. '   ' → logprob: -7.420918941497803
    6. '           ' → logprob: -10.170918464660645
    7. '     ' → logprob: -11.170918464660645
    8. '        ' → logprob: -11.170918464660645
    9. ',' → logprob: -11.670918464660645
    10. ' t' → logprob: -11.670918464660645

Token 571: ' le' (ID: 505)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.6427162289619446
    2. ' t' → logprob: -0.7677162289619446
    3. '6' → logprob: -5.392716407775879
    4. '       ' → logprob: -5.892716407775879
    5. ' ' → logprob: -7.017716407775879
    6. ' le' → logprob: -7.267716407775879
    7. 'le' → logprob: -8.017716407775879
    8. 's' → logprob: -9.142716407775879
    9. ' stock' → logprob: -9.267716407775879
    10. ' s' → logprob: -9.392716407775879

Token 572: ' stock' (ID: 6546)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.8927636742591858
    2. 't' → logprob: -0.8927636742591858
    3. ' t' → logprob: -1.767763614654541
    4. ' ' → logprob: -6.392763614654541
    5. '```' → logprob: -6.892763614654541
    6. ' stock' → logprob: -7.017763614654541
    7. '#' → logprob: -7.392763614654541
    8. '=' → logprob: -7.392763614654541
    9. 'x' → logprob: -7.517763614654541
    10. '`' → logprob: -7.642763614654541

Token 573: 'e' (ID: 68)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.060647040605545044
    2. '9' → logprob: -3.1856470108032227
    3. '       ' → logprob: -4.560647010803223
    4. ' =' → logprob: -6.435647010803223
    5. 'u' → logprob: -6.935647010803223
    6. '**' → logprob: -6.935647010803223
    7. 't' → logprob: -7.435647010803223
    8. '   ' → logprob: -7.685647010803223
    9. 'é' → logprob: -8.310647010803223
    10. 'ue' → logprob: -8.435647010803223

Token 574: ' dans' (ID: 2671)
  Prédit: 'dans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dans' → logprob: -0.47765105962753296
    2. ' dans' → logprob: -0.977651059627533
    3. ' in' → logprob: -5.977651119232178
    4. 't' → logprob: -7.727651119232178
    5. 'in' → logprob: -8.47765064239502
    6. '=' → logprob: -9.10265064239502
    7. ' ' → logprob: -9.97765064239502
    8. 'd' → logprob: -9.97765064239502
    9. 's' → logprob: -10.35265064239502
    10. '   ' → logprob: -10.35265064239502

Token 575: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.012698701582849026
    2. ' t' → logprob: -4.387698650360107
    3. '`t' → logprob: -8.762699127197266
    4. '6' → logprob: -10.637699127197266
    5. '   ' → logprob: -13.012699127197266
    6. ' ' → logprob: -13.137699127197266
    7. '```' → logprob: -13.637699127197266
    8. '`' → logprob: -13.637699127197266
    9. '	t' → logprob: -14.637699127197266
    10. '    ' → logprob: -15.012699127197266

Token 576: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.0014072555350139737
    2. '=' → logprob: -6.751407146453857
    3. ' =' → logprob: -8.626407623291016
    4. ' ' → logprob: -9.876407623291016
    5. '```' → logprob: -12.501407623291016
    6. '۶' → logprob: -14.876407623291016
    7. '**' → logprob: -15.001407623291016
    8. '' → logprob: -15.001407623291016
    9. '  ' → logprob: -15.001407623291016
    10. '^' → logprob: -15.126407623291016

Token 577: '.
' (ID: 558)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.432428240776062
    2. '       ' → logprob: -1.682428240776062
    3. ' =' → logprob: -1.807428240776062
    4. '   ' → logprob: -7.057428359985352
    5. '           ' → logprob: -9.932428359985352
    6. '.' → logprob: -10.432428359985352
    7. '=
' → logprob: -10.682428359985352
    8. 't' → logprob: -10.932428359985352
    9. '     ' → logprob: -10.932428359985352
    10. '        ' → logprob: -10.932428359985352

Token 578: '       ' (ID: 309)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.7341894507408142
    2. ' t' → logprob: -0.7341894507408142
    3. '       ' → logprob: -3.859189510345459
    4. ' =' → logprob: -4.609189510345459
    5. '6' → logprob: -5.609189510345459
    6. '=' → logprob: -5.734189510345459
    7. '   ' → logprob: -6.484189510345459
    8. ' ' → logprob: -7.609189510345459
    9. '           ' → logprob: -9.4841890335083
    10. '    ' → logprob: -9.9841890335083

Token 579: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' (adapté à ' t') → logprob: -0.00043019242002628744
    2. ' t' → logprob: -8.2504301071167
    3. '       ' → logprob: -9.1254301071167
    4. '   ' → logprob: -9.7504301071167
    5. '`t' → logprob: -14.2504301071167
    6. '6' → logprob: -14.5004301071167
    7. '	t' → logprob: -15.5004301071167
    8. '           ' → logprob: -15.5004301071167
    9. '```' → logprob: -16.000431060791016
    10. '    ' → logprob: -17.000431060791016

Token 580: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -5.080963092041202e-06
    2. '=' → logprob: -12.875004768371582
    3. ' =' → logprob: -13.000004768371582
    4. ' ' → logprob: -15.375004768371582
    5. '۶' → logprob: -17.8750057220459
    6. '   ' → logprob: -17.8750057220459
    7. '' → logprob: -17.8750057220459
    8. '_' → logprob: -18.6250057220459
    9. '六' → logprob: -19.0000057220459
    10. '٦' → logprob: -19.1250057220459

Token 581: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519298195838928
    2. '=' → logprob: -1.501929759979248
    3. ' ' → logprob: -14.626930236816406
    4. '   ' → logprob: -15.626930236816406
    5. '	' → logprob: -16.876930236816406
    6. '＝' → logprob: -18.126930236816406
    7. '  ' → logprob: -18.126930236816406
    8. ' ' → logprob: -18.251930236816406
    9. '    ' → logprob: -18.376930236816406
    10. '<|end|>' → logprob: -18.376930236816406

Token 582: ' ' (ID: 220)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.0001584850688232109
    2. ' ' → logprob: -8.750158309936523
    3. '   ' → logprob: -19.250158309936523
    4. '  ' → logprob: -21.125158309936523
    5. '```' → logprob: -21.500158309936523
    6. '۶' → logprob: -22.062658309936523
    7. '٦' → logprob: -22.375158309936523
    8. '' → logprob: -22.437658309936523
    9. '六' → logprob: -22.437658309936523
    10. '=' → logprob: -22.562658309936523

Token 583: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '```' → logprob: -19.500001907348633
    4. '   ' → logprob: -19.875001907348633
    5. '六' → logprob: -21.000001907348633
    6. '' → logprob: -21.250001907348633
    7. '۶' → logprob: -21.250001907348633
    8. '(' → logprob: -21.375001907348633
    9. 'six' → logprob: -21.375001907348633
    10. '=' → logprob: -21.500001907348633

Token 584: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.20141538977622986
    2. ' **' → logprob: -1.7014154195785522
    3. '^' → logprob: -13.826415061950684
    4. '*' → logprob: -14.326415061950684
    5. ' ' → logprob: -15.451415061950684
    6. '```' → logprob: -15.576415061950684
    7. ' ' → logprob: -16.451416015625
    8. '**)' → logprob: -16.951416015625
    9. ' *' → logprob: -17.326416015625
    10. '6' → logprob: -17.451416015625

Token 585: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -2.5776860184123507e-06
    2. ' j' → logprob: -13.00000286102295
    3. '	j' → logprob: -16.375001907348633
    4. '$j' → logprob: -16.625001907348633
    5. '   ' → logprob: -18.125001907348633
    6. '[j' → logprob: -18.500001907348633
    7. '<|end|>' → logprob: -18.750001907348633
    8. '*j' → logprob: -19.250001907348633
    9. '```' → logprob: -19.375001907348633
    10. '_j' → logprob: -21.000001907348633

Token 586: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06732270866632462
    2. '<|end|>' → logprob: -3.3173227310180664
    3. '
' → logprob: -3.5673227310180664
    4. '   ' → logprob: -8.692322731018066
    5. '#' → logprob: -8.692322731018066
    6. '<|end|>' → logprob: -9.192322731018066
    7. '        
' → logprob: -10.067322731018066
    8. '        ' → logprob: -11.067322731018066
    9. '           ' → logprob: -11.067322731018066
    10. ')' → logprob: -11.192322731018066

Token 587: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015436685644090176
    2. 'if' → logprob: -7.2515435218811035
    3. ' if' → logprob: -7.5015435218811035
    4. '   ' → logprob: -8.501543998718262
    5. '<|end|>' → logprob: -10.001543998718262
    6. '#' → logprob: -11.126543998718262
    7. '	if' → logprob: -12.626543998718262
    8. '           ' → logprob: -12.751543998718262
    9. '```' → logprob: -13.251543998718262
    10. '        
' → logprob: -13.251543998718262

Token 588: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2069586217403412
    2. 'if' → logprob: -1.7069586515426636
    3. ' if' → logprob: -5.706958770751953
    4. '#' (adapté à ' #') → logprob: -6.581958770751953
    5. '   ' → logprob: -7.206958770751953
    6. '	if' → logprob: -10.581958770751953
    7. ' ' → logprob: -11.456958770751953
    8. '           ' → logprob: -11.456958770751953
    9. '```' → logprob: -11.831958770751953
    10. '        ' → logprob: -12.206958770751953

Token 589: ' Si' (ID: 7832)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.306760805164231e-05
    2. ' if' → logprob: -11.25001335144043
    3. '       ' → logprob: -16.87501335144043
    4. 'while' → logprob: -18.12501335144043
    5. '   ' → logprob: -19.25001335144043
    6. '	if' → logprob: -21.37501335144043
    7. 'for' → logprob: -22.12501335144043
    8. 'If' → logprob: -22.37501335144043
    9. '#' → logprob: -23.12501335144043
    10. '6' → logprob: -23.25001335144043

Token 590: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.014164448715746403
    2. ' y' → logprob: -4.264164447784424
    3. 't' → logprob: -14.389164924621582
    4. '   ' → logprob: -15.514164924621582
    5. '	y' → logprob: -16.514163970947266
    6. '(y' → logprob: -16.764163970947266
    7. '6' → logprob: -18.264163970947266
    8. ' ' → logprob: -19.139163970947266
    9. '`' → logprob: -19.514163970947266
    10. '#' → logprob: -19.639163970947266

Token 591: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.128163257315464e-07
    2. 'y' → logprob: -15.875
    3. '>=' → logprob: -16.875
    4. ' ' → logprob: -17.25
    5. '...' → logprob: -17.5
    6. '   ' → logprob: -17.625
    7. '۲' → logprob: -17.625
    8. ' >=' → logprob: -17.75
    9. '```' → logprob: -17.875
    10. '₂' → logprob: -18.0

Token 592: ' est' (ID: 893)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.1602325439453125
    2. '>=' → logprob: -1.9102325439453125
    3. ' ' → logprob: -12.785232543945312
    4. '>' → logprob: -13.160232543945312
    5. ')>=' → logprob: -13.535232543945312
    6. ']>=' → logprob: -13.535232543945312
    7. ' >' → logprob: -14.910232543945312
    8. '   ' → logprob: -15.285232543945312
    9. ' >=",' → logprob: -16.535232543945312
    10. ')' → logprob: -16.785232543945312

Token 593: ' plus' (ID: 2932)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.6576308608055115
    2. ' >=' → logprob: -0.7826308608055115
    3. 't' → logprob: -4.157630920410156
    4. 'greater' → logprob: -6.407630920410156
    5. ' supérieur' → logprob: -6.532630920410156
    6. 's' → logprob: -6.907630920410156
    7. ' t' → logprob: -6.907630920410156
    8. ' greater' → logprob: -7.032630920410156
    9. '<|end|>' → logprob: -7.532630920410156
    10. '   ' → logprob: -7.782630920410156

Token 594: ' grand' (ID: 6363)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.020585797727108
    2. '>=' → logprob: -4.020586013793945
    3. 'ou' → logprob: -7.520586013793945
    4. 'égal' → logprob: -8.020586013793945
    5. 'grand' → logprob: -8.020586013793945
    6. ' =' → logprob: -8.145586013793945
    7. 'é' → logprob: -8.770586013793945
    8. ' ou' → logprob: -9.020586013793945
    9. ' >=' → logprob: -9.020586013793945
    10. '=None' → logprob: -9.520586013793945

Token 595: ' ou' (ID: 2031)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0026403414085507393
    2. '>=' → logprob: -6.502640247344971
    3. ' ou' → logprob: -7.627640247344971
    4. 'ou' → logprob: -8.127640724182129
    5. ' =' → logprob: -8.877640724182129
    6. '==' → logprob: -9.627640724182129
    7. ' or' → logprob: -9.752640724182129
    8. 'or' → logprob: -10.252640724182129
    9. ' >=' → logprob: -11.752640724182129
    10. 't' → logprob: -11.877640724182129

Token 596: ' égal' (ID: 15059)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.016382485628128052
    2. 'égal' → logprob: -4.141382694244385
    3. 'ou' → logprob: -9.141382217407227
    4. '=t' → logprob: -10.141382217407227
    5. '=u' → logprob: -10.266382217407227
    6. ' égal' → logprob: -10.891382217407227
    7. '=None' → logprob: -11.016382217407227
    8. '=#' → logprob: -11.266382217407227
    9. '=r' → logprob: -11.516382217407227
    10. '=e' → logprob: -11.641382217407227

Token 597: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.45008525252342224
    2. 'à' → logprob: -1.0750852823257446
    3. 't' → logprob: -4.700085163116455
    4. '       ' → logprob: -4.825085163116455
    5. ' t' → logprob: -7.075085163116455
    6. '=' → logprob: -7.325085163116455
    7. '   ' → logprob: -7.450085163116455
    8. '>=' → logprob: -8.200085639953613
    9. 'a' → logprob: -8.325085639953613
    10. '(t' → logprob: -8.325085639953613

Token 598: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.10020828247070312
    2. ' t' → logprob: -2.350208282470703
    3. '	t' → logprob: -14.350208282470703
    4. ' ' → logprob: -14.475208282470703
    5. '`t' → logprob: -15.225208282470703
    6. ' ' → logprob: -16.725208282470703
    7. '   ' → logprob: -16.975208282470703
    8. '(t' → logprob: -17.350208282470703
    9. '```' → logprob: -17.600208282470703
    10. '    ' → logprob: -18.350208282470703

Token 599: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.10249123722314835
    2. 't' → logprob: -2.3524911403656006
    3. ' t' → logprob: -6.10249137878418
    4. '9' → logprob: -11.60249137878418
    5. 'a' → logprob: -12.10249137878418
    6. 'n' → logprob: -12.10249137878418
    7. 'o' → logprob: -12.35249137878418
    8. ' ' → logprob: -12.97749137878418
    9. '```' → logprob: -12.97749137878418
    10. '_' → logprob: -13.60249137878418

Token 600: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.014046208932995796
    2. ':
' → logprob: -4.3890461921691895
    3. '       ' → logprob: -6.6390461921691895
    4. '           ' → logprob: -9.639046669006348
    5. '<|end|>' → logprob: -10.264046669006348
    6. ',' → logprob: -10.514046669006348
    7. '=' → logprob: -10.889046669006348
    8. '):' → logprob: -11.014046669006348
    9. ' :' → logprob: -11.264046669006348
    10. ' and' → logprob: -11.389046669006348

Token 601: ' on' (ID: 402)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05710608884692192
    2. '       ' → logprob: -3.8071060180664062
    3. '<|end|>' → logprob: -3.8071060180664062
    4. '#' → logprob: -6.307106018066406
    5. ' if' → logprob: -6.307106018066406
    6. ' #' → logprob: -6.682106018066406
    7. '   ' → logprob: -7.057106018066406
    8. ' ' → logprob: -7.182106018066406
    9. '          ' → logprob: -7.557106018066406
    10. '               ' → logprob: -7.682106018066406

Token 602: ' peut' (ID: 9216)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8316898345947266
    2. 'if' → logprob: -2.3316898345947266
    3. '   ' → logprob: -2.5816898345947266
    4. ' continue' → logprob: -2.8316898345947266
    5. '           ' → logprob: -3.0816898345947266
    6. ':' → logprob: -3.2066898345947266
    7. '#' → logprob: -3.3316898345947266
    8. 'continue' → logprob: -3.7066898345947266
    9. '+=' → logprob: -3.8316898345947266
    10. 's' → logprob: -3.8316898345947266

Token 603: ' retirer' (ID: 136490)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.4182419776916504
    2. '   ' → logprob: -1.9182419776916504
    3. '           ' → logprob: -1.9182419776916504
    4. ' continuer' → logprob: -2.1682419776916504
    5. 'contin' → logprob: -2.9182419776916504
    6. ' compter' → logprob: -3.2932419776916504
    7. '    ' → logprob: -3.4182419776916504
    8. 's' → logprob: -3.9182419776916504
    9. ' effectuer' → logprob: -4.04324197769165
    10. 'count' → logprob: -4.04324197769165

Token 604: ' (' (ID: 350)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.9237777590751648
    2. '           ' → logprob: -1.2987778186798096
    3. ' y' → logprob: -1.2987778186798096
    4. '       ' → logprob: -3.9237778186798096
    5. '(y' → logprob: -4.1737775802612305
    6. 't' → logprob: -4.2987775802612305
    7. ' (' → logprob: -5.7987775802612305
    8. '   ' → logprob: -6.0487775802612305
    9. '               ' → logprob: -7.6737775802612305
    10. ' t' → logprob: -8.29877758026123

Token 605: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.3869383931159973
    2. ' y' → logprob: -1.1369383335113525
    3. '       ' → logprob: -10.136938095092773
    4. '   ' → logprob: -11.011938095092773
    5. '           ' → logprob: -12.761938095092773
    6. '(y' → logprob: -13.011938095092773
    7. '	y' → logprob: -13.261938095092773
    8. ')' → logprob: -13.511938095092773
    9. ''y' → logprob: -15.011938095092773
    10. ')y' → logprob: -15.011938095092773

Token 606: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -15.875000953674316
    3. '   ' → logprob: -15.875000953674316
    4. '₂' → logprob: -16.25
    5. '```' → logprob: -16.75
    6. '۲' → logprob: -17.25
    7. ' +=' → logprob: -17.875
    8. '২' → logprob: -18.125
    9. '२' → logprob: -18.8125
    10. '２' → logprob: -18.9375

Token 607: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.0031815171241760254
    2. '//' → logprob: -5.753181457519531
    3. ' ' → logprob: -14.128181457519531
    4. ')' → logprob: -14.253181457519531
    5. ' ' → logprob: -14.378181457519531
    6. ')//' → logprob: -14.503181457519531
    7. ' >=' → logprob: -14.628181457519531
    8. '//=' → logprob: -15.378181457519531
    9. '   ' → logprob: -15.628181457519531
    10. '>=' → logprob: -16.37818145751953

Token 608: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.14268651604652405
    2. ' t' → logprob: -2.017686605453491
    3. '`t' → logprob: -12.51768684387207
    4. '	t' → logprob: -12.64268684387207
    5. '   ' → logprob: -13.14268684387207
    6. ' ' → logprob: -14.51768684387207
    7. '6' → logprob: -14.89268684387207
    8. ' ' → logprob: -14.89268684387207
    9. ')t' → logprob: -15.51768684387207
    10. '_t' → logprob: -15.76768684387207

Token 609: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -2.3557529857498594e-05
    2. 't' → logprob: -10.75002384185791
    3. '```' → logprob: -13.87502384185791
    4. ' t' → logprob: -15.12502384185791
    5. ' ' → logprob: -15.87502384185791
    6. '   ' → logprob: -16.187522888183594
    7. '`' → logprob: -17.062522888183594
    8. ')' → logprob: -17.125022888183594
    9. '**' → logprob: -17.187522888183594
    10. '2' → logprob: -17.500022888183594

Token 610: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.8193366486229934e-05
    2. ' )' → logprob: -11.625018119812012
    3. ')*' → logprob: -12.750018119812012
    4. ')t' → logprob: -13.125018119812012
    5. '   ' → logprob: -14.375018119812012
    6. 't' → logprob: -14.625018119812012
    7. ')#' → logprob: -14.750018119812012
    8. ')
' → logprob: -14.875018119812012
    9. '       ' → logprob: -15.000018119812012
    10. ')`' → logprob: -15.125018119812012

Token 611: ' fois' (ID: 14697)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0370776653289795
    2. '           ' → logprob: -1.1620776653289795
    3. ' fois' → logprob: -2.2870776653289795
    4. 'times' → logprob: -2.7870776653289795
    5. 'fois' → logprob: -3.4120776653289795
    6. 'tokens' → logprob: -3.6620776653289795
    7. ' times' → logprob: -3.7870776653289795
    8. '<|end|>' → logprob: -3.9120776653289795
    9. '       ' → logprob: -4.037077903747559
    10. ' tokens' → logprob: -4.287077903747559

Token 612: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.6931572556495667
    2. ' t' → logprob: -0.6931572556495667
    3. '`t' → logprob: -12.193157196044922
    4. '	t' → logprob: -13.318157196044922
    5. ' ' → logprob: -14.068157196044922
    6. ' ' → logprob: -14.443157196044922
    7. '(t' → logprob: -14.443157196044922
    8. '   ' → logprob: -14.693157196044922
    9. '<|end|>' → logprob: -15.443157196044922
    10. 'le' → logprob: -15.443157196044922

Token 613: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -7.994086627149954e-05
    2. 't' → logprob: -9.500080108642578
    3. ' t' → logprob: -13.250080108642578
    4. '   ' → logprob: -14.250080108642578
    5. '```' → logprob: -14.250080108642578
    6. ' ' → logprob: -14.875080108642578
    7. '`' → logprob: -16.125080108642578
    8. '(t' → logprob: -16.250080108642578
    9. '=' → logprob: -16.312580108642578
    10. '۶' → logprob: -16.500080108642578

Token 614: ' de' (ID: 334)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06953685730695724
    2. ':' → logprob: -3.3195369243621826
    3. '       ' → logprob: -4.4445366859436035
    4. '<|end|>' → logprob: -4.5695366859436035
    5. '.' → logprob: -5.5695366859436035
    6. ')' → logprob: -6.6945366859436035
    7. ',' → logprob: -7.1945366859436035
    8. '               ' → logprob: -7.3195366859436035
    9. '          ' → logprob: -7.5695366859436035
    10. ':
' → logprob: -7.6945366859436035

Token 615: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.5760332345962524
    2. 'y' → logprob: -0.8260332345962524
    3. 't' → logprob: -9.576033592224121
    4. ' t' → logprob: -11.451033592224121
    5. '6' → logprob: -12.076033592224121
    6. '   ' → logprob: -12.576033592224121
    7. '	y' → logprob: -13.326033592224121
    8. '       ' → logprob: -13.576033592224121
    9. ' ' → logprob: -15.451033592224121
    10. '    ' → logprob: -15.451033592224121

Token 616: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00034940900513902307
    2. '   ' → logprob: -8.875349044799805
    3. '6' → logprob: -9.250349044799805
    4. 't' → logprob: -10.250349044799805
    5. '```' → logprob: -10.750349044799805
    6. ' ' → logprob: -10.875349044799805
    7. '#' → logprob: -11.125349044799805
    8. '`' → logprob: -12.625349044799805
    9. '  ' → logprob: -12.750349044799805
    10. ')' → logprob: -13.000349044799805

Token 617: '.
' (ID: 558)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0457957461476326
    2. ':' → logprob: -3.2957956790924072
    3. '       ' → logprob: -5.170795917510986
    4. ':
' → logprob: -6.920795917510986
    5. '<|end|>' → logprob: -8.045795440673828
    6. '.' → logprob: -8.545795440673828
    7. ',' → logprob: -9.045795440673828
    8. '          ' → logprob: -9.670795440673828
    9. '               ' → logprob: -9.670795440673828
    10. '   ' → logprob: -10.170795440673828

Token 618: '       ' (ID: 309)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5784608125686646
    2. '       ' → logprob: -0.8284608125686646
    3. '   ' → logprob: -7.328460693359375
    4. '```' → logprob: -7.453460693359375
    5. ' if' → logprob: -8.203460693359375
    6. '               ' → logprob: -8.828460693359375
    7. '<|end|>' → logprob: -8.953460693359375
    8. 'if' → logprob: -9.078460693359375
    9. '(' → logprob: -9.453460693359375
    10. ':' → logprob: -9.578460693359375

Token 619: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5380554795265198
    2. '       ' → logprob: -1.038055419921875
    3. ' if' → logprob: -2.788055419921875
    4. '           ' → logprob: -7.913055419921875
    5. '   ' → logprob: -10.163055419921875
    6. '```' → logprob: -11.288055419921875
    7. '	if' → logprob: -12.163055419921875
    8. '{' → logprob: -13.288055419921875
    9. 'while' → logprob: -13.413055419921875
    10. '               ' → logprob: -13.538055419921875

Token 620: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.02975083328783512
    2. 'y' → logprob: -3.5297508239746094
    3. '	y' → logprob: -15.02975082397461
    4. '(y' → logprob: -17.27975082397461
    5. ' ' → logprob: -17.90475082397461
    6. ' ' → logprob: -18.02975082397461
    7. '   ' → logprob: -18.40475082397461
    8. '[y' → logprob: -19.40475082397461
    9. '_y' → logprob: -19.52975082397461
    10. ')y' → logprob: -19.77975082397461

Token 621: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.392202976712724e-06
    2. ' ' → logprob: -12.250006675720215
    3. 'y' → logprob: -13.875006675720215
    4. ' y' → logprob: -14.875006675720215
    5. '₂' → logprob: -16.7500057220459
    6. '   ' → logprob: -16.8750057220459
    7. '۲' → logprob: -17.1250057220459
    8. '２' → logprob: -17.5000057220459
    9. '>=' → logprob: -17.6250057220459
    10. '_' → logprob: -18.1250057220459

Token 622: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.0699753388762474
    2. '>=' → logprob: -2.6949753761291504
    3. '>' → logprob: -10.569974899291992
    4. '   ' → logprob: -12.569974899291992
    5. ' >' → logprob: -12.569974899291992
    6. ' ' → logprob: -12.819974899291992
    7. ')>=' → logprob: -13.694974899291992
    8. ']>=' → logprob: -14.069974899291992
    9. ' >=",' → logprob: -14.569974899291992
    10. '≥' → logprob: -15.444974899291992

Token 623: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.10020839422941208
    2. ' t' → logprob: -2.350208282470703
    3. '	t' → logprob: -13.850208282470703
    4. '`t' → logprob: -15.475208282470703
    5. '    ' → logprob: -15.850208282470703
    6. '       ' → logprob: -16.100208282470703
    7. '   ' → logprob: -16.350208282470703
    8. '        ' → logprob: -16.850208282470703
    9. ' ' → logprob: -17.100208282470703
    10. '(t' → logprob: -17.475208282470703

Token 624: '6' (ID: 21)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.23835746943950653
    2. '6' → logprob: -1.613357424736023
    3. ' t' → logprob: -4.3633575439453125
    4. '   ' → logprob: -9.988357543945312
    5. ' ' → logprob: -10.738357543945312
    6. '9' → logprob: -10.863357543945312
    7. '    ' → logprob: -11.738357543945312
    8. '  ' → logprob: -12.238357543945312
    9. '     ' → logprob: -12.238357543945312
    10. '       ' → logprob: -12.488357543945312

Token 625: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14688995480537415
    2. '           ' → logprob: -2.3968899250030518
    3. ':
' → logprob: -3.1468899250030518
    4. '<|end|>' → logprob: -6.771890163421631
    5. '       ' → logprob: -7.021890163421631
    6. '):
' → logprob: -8.771889686584473
    7. '               ' → logprob: -9.021889686584473
    8. '):' → logprob: -9.646889686584473
    9. '          ' → logprob: -9.646889686584473
    10. ',' → logprob: -10.271889686584473

Token 626: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008161211386322975
    2. '       ' → logprob: -5.0081610679626465
    3. '```' → logprob: -7.2581610679626465
    4. '#' → logprob: -7.7581610679626465
    5. 'cnt' → logprob: -9.133161544799805
    6. '<|end|>' → logprob: -9.758161544799805
    7. '{
' → logprob: -10.258161544799805
    8. '   ' → logprob: -10.258161544799805
    9. '               ' → logprob: -10.383161544799805
    10. ' cnt' → logprob: -11.258161544799805

Token 627: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.060429494827985764
    2. 'cnt' → logprob: -3.060429573059082
    3. ' cnt' → logprob: -4.935429573059082
    4. '       ' → logprob: -5.685429573059082
    5. '               ' → logprob: -7.435429573059082
    6. '#' (adapté à ' #') → logprob: -8.685429573059082
    7. '   ' → logprob: -8.810429573059082
    8. '```' → logprob: -9.560429573059082
    9. '	cnt' → logprob: -9.935429573059082
    10. '          ' → logprob: -10.185429573059082

Token 628: ' On' (ID: 2160)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -8.149051427608356e-05
    2. ' cnt' → logprob: -9.500081062316895
    3. '           ' → logprob: -12.125081062316895
    4. 'count' → logprob: -13.875081062316895
    5. '	cnt' → logprob: -16.12508201599121
    6. '(cnt' → logprob: -17.25008201599121
    7. '```' → logprob: -17.37508201599121
    8. '[cnt' → logprob: -17.62508201599121
    9. '#' → logprob: -18.75008201599121
    10. '_cnt' → logprob: -18.75008201599121

Token 629: ' incr' (ID: 52395)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.35596275329589844
    2. 'cnt' → logprob: -1.3559627532958984
    3. ' +=' → logprob: -3.6059627532958984
    4. ' cnt' → logprob: -4.230962753295898
    5. 'count' → logprob: -10.105962753295898
    6. ']+=' → logprob: -10.480962753295898
    7. '[cnt' → logprob: -12.105962753295898
    8. '	cnt' → logprob: -12.480962753295898
    9. '  ' → logprob: -12.980962753295898
    10. '+' → logprob: -12.980962753295898

Token 630: 'é' (ID: 377)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.45696085691452026
    2. 'é' → logprob: -1.331960916519165
    3. ' cnt' → logprob: -2.831960916519165
    4. '	cnt' → logprob: -3.831960916519165
    5. '   ' → logprob: -4.831960678100586
    6. '           ' → logprob: -5.831960678100586
    7. '(cnt' → logprob: -6.706960678100586
    8. '_cnt' → logprob: -6.831960678100586
    9. '+=' → logprob: -6.956960678100586
    10. '       ' → logprob: -7.206960678100586

Token 631: 'mente' (ID: 4186)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.41972678899765015
    2. '       ' → logprob: -2.044726848602295
    3. 'nte' → logprob: -2.044726848602295
    4. 'nt' → logprob: -3.544726848602295
    5. '           ' → logprob: -4.044726848602295
    6. '   ' → logprob: -4.169726848602295
    7. 'n' → logprob: -4.669726848602295
    8. 't' → logprob: -6.294726848602295
    9. '        ' → logprob: -6.544726848602295
    10. 'nts' → logprob: -6.669726848602295

Token 632: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.5759577751159668
    2. ' cnt' → logprob: -0.8259577751159668
    3. '	cnt' → logprob: -11.700958251953125
    4. '(cnt' → logprob: -12.075958251953125
    5. '[cnt' → logprob: -12.950958251953125
    6. 'count' → logprob: -13.575958251953125
    7. '_cnt' → logprob: -15.575958251953125
    8. 'Cnt' → logprob: -15.825958251953125
    9. '   ' → logprob: -16.200958251953125
    10. 'c' → logprob: -16.200958251953125

Token 633: ' du' (ID: 1462)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.01606346294283867
    2. '+=' → logprob: -4.141063690185547
    3. '           ' → logprob: -11.141063690185547
    4. ']+=' → logprob: -11.641063690185547
    5. '```' → logprob: -13.766063690185547
    6. ' ' → logprob: -14.016063690185547
    7. '          ' → logprob: -14.266063690185547
    8. ' ' → logprob: -14.641063690185547
    9. '            ' → logprob: -14.766063690185547
    10. '<|end|>' → logprob: -15.016063690185547

Token 634: ' nombre' (ID: 9733)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.6932997703552246
    2. ' y' → logprob: -0.6932997703552246
    3. '(y' → logprob: -8.818300247192383
    4. ' (' → logprob: -12.568300247192383
    5. '6' → logprob: -14.443300247192383
    6. '(' → logprob: -15.568300247192383
    7. '2' → logprob: -15.943300247192383
    8. '	y' → logprob: -16.068300247192383
    9. ' ' → logprob: -16.193300247192383
    10. ' ' → logprob: -16.818300247192383

Token 635: ' correspondant' (ID: 146058)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7502366900444031
    2. ' +=' → logprob: -1.7502367496490479
    3. ' de' → logprob: -1.8752367496490479
    4. ' y' → logprob: -2.250236749649048
    5. 'cnt' → logprob: -3.625236749649048
    6. 'y' → logprob: -4.375236511230469
    7. '+=' → logprob: -4.500236511230469
    8. '            ' → logprob: -5.125236511230469
    9. '          ' → logprob: -5.125236511230469
    10. ' cnt' → logprob: -5.750236511230469

Token 636: '.
' (ID: 558)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.17103151977062225
    2. '           ' → logprob: -2.6710314750671387
    3. '+=' → logprob: -2.6710314750671387
    4. '<|end|>' → logprob: -5.046031475067139
    5. ')' → logprob: -5.921031475067139
    6. '=' → logprob: -6.171031475067139
    7. '               ' → logprob: -6.296031475067139
    8. ' +' → logprob: -6.421031475067139
    9. '+' → logprob: -6.546031475067139
    10. ' ' → logprob: -7.296031475067139

Token 637: '           ' (ID: 352)
  Prédit: ' cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cnt' → logprob: -0.6644454002380371
    2. ' +=' → logprob: -1.539445400238037
    3. 'cnt' → logprob: -2.164445400238037
    4. '+=' → logprob: -2.164445400238037
    5. '           ' → logprob: -3.289445400238037
    6. '(cnt' → logprob: -6.914445400238037
    7. '               ' → logprob: -7.414445400238037
    8. '=' → logprob: -7.664445400238037
    9. '+' → logprob: -8.414445877075195
    10. ' ' → logprob: -8.539445877075195

Token 638: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' (adapté à ' cnt') → logprob: -0.1278633177280426
    2. ' cnt' → logprob: -2.1278634071350098
    3. '           ' → logprob: -7.00286340713501
    4. 'count' → logprob: -11.002862930297852
    5. '(cnt' → logprob: -12.752862930297852
    6. '	cnt' → logprob: -12.877862930297852
    7. '               ' → logprob: -14.377862930297852
    8. '[cnt' → logprob: -14.377862930297852
    9. '   ' → logprob: -14.877862930297852
    10. '       ' → logprob: -15.127862930297852

Token 639: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.06197149679064751
    2. '+=' → logprob: -2.811971426010132
    3. '+' → logprob: -13.186971664428711
    4. ' +' → logprob: -13.561971664428711
    5. ']+=' → logprob: -14.686971664428711
    6. '+=(' → logprob: -15.561971664428711
    7. '+="' → logprob: -16.81197166442871
    8. '           ' → logprob: -17.31197166442871
    9. '+='' → logprob: -17.43697166442871
    10. '=' → logprob: -18.06197166442871

Token 640: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.0232466422021389
    2. 'y' → logprob: -3.7732465267181396
    3. '(y' → logprob: -14.023246765136719
    4. '	y' → logprob: -15.648246765136719
    5. ' (' → logprob: -16.64824676513672
    6. ' ' → logprob: -17.02324676513672
    7. ' ' → logprob: -17.02324676513672
    8. '   ' → logprob: -17.52324676513672
    9. '6' → logprob: -17.89824676513672
    10. '2' → logprob: -18.52324676513672

Token 641: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00011844364780699834
    2. ' ' → logprob: -9.125118255615234
    3. '   ' → logprob: -12.375118255615234
    4. ' y' → logprob: -12.875118255615234
    5. 'y' → logprob: -14.875118255615234
    6. '```' → logprob: -14.875118255615234
    7. ' /' → logprob: -15.125118255615234
    8. '  ' → logprob: -15.500118255615234
    9. '    ' → logprob: -15.625118255615234
    10. ' ' → logprob: -15.875118255615234

Token 642: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.2519306540489197
    2. '//' → logprob: -1.5019307136535645
    3. ' ' → logprob: -14.001930236816406
    4. '//=' → logprob: -15.126930236816406
    5. ' ' → logprob: -15.501930236816406
    6. '   ' → logprob: -16.751930236816406
    7. '```' → logprob: -16.876930236816406
    8. '#' → logprob: -17.001930236816406
    9. '	' → logprob: -17.126930236816406
    10. '/' → logprob: -17.876930236816406

Token 643: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -9.615255839889869e-05
    2. ' t' → logprob: -9.250096321105957
    3. '`t' → logprob: -18.50009536743164
    4. '	t' → logprob: -18.75009536743164
    5. '6' → logprob: -19.00009536743164
    6. '   ' → logprob: -22.00009536743164
    7. '_t' → logprob: -22.75009536743164
    8. 'tc' → logprob: -23.87509536743164
    9. '<t' → logprob: -23.87509536743164
    10. '(t' → logprob: -24.12509536743164

Token 644: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.03012382611632347
    2. 't' → logprob: -3.530123710632324
    3. ' t' → logprob: -7.905123710632324
    4. ' ' → logprob: -12.905123710632324
    5. 's' → logprob: -14.780123710632324
    6. 'g' → logprob: -14.780123710632324
    7. 'c' → logprob: -15.780123710632324
    8. '_' → logprob: -16.03012466430664
    9. '```' → logprob: -16.28012466430664
    10. 'p' → logprob: -16.53012466430664

Token 645: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0002261854097014293
    2. ' y' → logprob: -9.375226020812988
    3. 'y' → logprob: -9.625226020812988
    4. '
' → logprob: -10.250226020812988
    5. '```' → logprob: -11.250226020812988
    6. '            
' → logprob: -11.875226020812988
    7. '       ' → logprob: -12.375226020812988
    8. 'n' → logprob: -12.500226020812988
    9. '<|end|>' → logprob: -12.500226020812988
    10. '          ' → logprob: -13.375226020812988

Token 646: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01177393551915884
    2. 'y' → logprob: -4.636774063110352
    3. '       ' → logprob: -6.886774063110352
    4. '```' → logprob: -7.511774063110352
    5. ' y' → logprob: -8.636774063110352
    6. '               ' → logprob: -9.761774063110352
    7. '   ' → logprob: -10.011774063110352
    8. '
' → logprob: -10.136774063110352
    9. '            
' → logprob: -10.136774063110352
    10. '          ' → logprob: -10.511774063110352

Token 647: ' #' (ID: 1069)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.16049088537693024
    2. ' y' → logprob: -2.2854909896850586
    3. '           ' → logprob: -3.1604909896850586
    4. '       ' → logprob: -5.660490989685059
    5. '   ' → logprob: -7.785490989685059
    6. '```' → logprob: -8.535490989685059
    7. '               ' → logprob: -11.285490989685059
    8. ' ' → logprob: -11.410490989685059
    9. '	y' → logprob: -11.410490989685059
    10. '``' → logprob: -12.410490989685059

Token 648: ' On' (ID: 2160)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.000718030845746398
    2. ' y' → logprob: -7.500718116760254
    3. '           ' → logprob: -8.750718116760254
    4. '       ' → logprob: -12.125718116760254
    5. '   ' → logprob: -13.750718116760254
    6. '```' → logprob: -16.375717163085938
    7. '               ' → logprob: -16.625717163085938
    8. '	y' → logprob: -18.000717163085938
    9. '          ' → logprob: -19.250717163085938
    10. ' ' → logprob: -19.375717163085938

Token 649: ' met' (ID: 1421)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03622880205512047
    2. 'y' → logprob: -3.411228895187378
    3. ' y' → logprob: -6.286228656768799
    4. '=y' → logprob: -8.036229133605957
    5. ' =' → logprob: -8.036229133605957
    6. '   ' → logprob: -10.661229133605957
    7. '%=' → logprob: -10.786229133605957
    8. '    ' → logprob: -11.786229133605957
    9. '-=' → logprob: -12.286229133605957
    10. '=
' → logprob: -12.536229133605957

Token 650: ' y' (ID: 342)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.4132542312145233
    2. 'à' → logprob: -1.1632542610168457
    3. '=' → logprob: -4.163254261016846
    4. 'y' → logprob: -4.913254261016846
    5. 'a' → logprob: -6.413254261016846
    6. ' y' → logprob: -7.663254261016846
    7. ' =' → logprob: -8.288253784179688
    8. '   ' → logprob: -8.663253784179688
    9. ' a' → logprob: -8.788253784179688
    10. '=y' → logprob: -9.163253784179688

Token 651: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.320199877838604e-07
    2. 'y' → logprob: -15.625
    3. ' ' → logprob: -15.75
    4. '₂' → logprob: -16.875
    5. '```' → logprob: -18.125
    6. '   ' → logprob: -18.125
    7. '۲' → logprob: -18.75
    8. '٢' → logprob: -19.125
    9. ' y' → logprob: -19.25
    10. '_' → logprob: -19.5

Token 652: ' à' (ID: 1221)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.15008793771266937
    2. ' =' → logprob: -2.400087833404541
    3. '%=' → logprob: -3.150087833404541
    4. ' %=' → logprob: -5.150087833404541
    5. '%' → logprob: -11.6500883102417
    6. ' -=' → logprob: -14.2750883102417
    7. '-=' → logprob: -14.4000883102417
    8. ' %' → logprob: -15.5250883102417
    9. '   ' → logprob: -16.400087356567383
    10. ' ' → logprob: -16.525087356567383

Token 653: ' jour' (ID: 8379)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.1269284337759018
    2. ' y' → logprob: -2.1269283294677734
    3. '6' → logprob: -16.251928329467773
    4. '0' → logprob: -16.626928329467773
    5. '	y' → logprob: -16.751928329467773
    6. 't' → logprob: -16.876928329467773
    7. '=y' → logprob: -17.751928329467773
    8. ' ' → logprob: -17.751928329467773
    9. '   ' → logprob: -18.501928329467773
    10. 'm' → logprob: -19.001928329467773

Token 654: ' avec' (ID: 3937)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25535279512405396
    2. '=' → logprob: -1.5053527355194092
    3. '%=' → logprob: -5.880352973937988
    4. ' %=' → logprob: -7.505352973937988
    5. ' -=' → logprob: -9.630352973937988
    6. '%' → logprob: -12.630352973937988
    7. '-=' → logprob: -13.380352973937988
    8. ' y' → logprob: -13.880352973937988
    9. ' ' → logprob: -14.255352973937988
    10. ' +=' → logprob: -14.630352973937988

Token 655: ' le' (ID: 505)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.20141372084617615
    2. ' y' → logprob: -1.7014137506484985
    3. '	y' → logprob: -15.326414108276367
    4. 't' → logprob: -16.451414108276367
    5. 'le' → logprob: -17.451414108276367
    6. ''y' → logprob: -17.576414108276367
    7. ' ' → logprob: -17.951414108276367
    8. '`' → logprob: -18.076414108276367
    9. '=y' → logprob: -18.201414108276367
    10. '(y' → logprob: -18.326414108276367

Token 656: ' reste' (ID: 26769)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.16027723252773285
    2. 'y' → logprob: -1.910277247428894
    3. '2' → logprob: -10.035277366638184
    4. '6' → logprob: -11.910277366638184
    5. '%' → logprob: -14.285277366638184
    6. ' remainder' → logprob: -14.785277366638184
    7. 't' → logprob: -15.285277366638184
    8. ' ' → logprob: -15.660277366638184
    9. '=y' → logprob: -15.910277366638184
    10. ' rest' → logprob: -16.410276412963867

Token 657: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.41299936175346375
    2. '=' → logprob: -2.162999391555786
    3. ' %=' → logprob: -2.162999391555786
    4. '%' → logprob: -3.162999391555786
    5. '%=' → logprob: -3.162999391555786
    6. ' %' → logprob: -3.787999391555786
    7. ' y' → logprob: -7.287999153137207
    8. 'y' → logprob: -8.287999153137207
    9. ' ' → logprob: -9.787999153137207
    10. '=y' → logprob: -9.912999153137207

Token 658: ' la' (ID: 557)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.1797545850276947
    2. 'y' → logprob: -1.804754614830017
    3. ' ' → logprob: -13.054754257202148
    4. ' la' → logprob: -13.304754257202148
    5. '`' → logprob: -13.554754257202148
    6. ''y' → logprob: -14.679754257202148
    7. '(y' → logprob: -14.804754257202148
    8. ' (' → logprob: -14.929754257202148
    9. '	y' → logprob: -14.929754257202148
    10. '```' → logprob: -14.929754257202148

Token 659: ' division' (ID: 21629)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.4298534393310547
    2. 'y' → logprob: -1.0548534393310547
    3. '%' → logprob: -7.054853439331055
    4. '6' → logprob: -9.304853439331055
    5. ' %' → logprob: -9.304853439331055
    6. '`' → logprob: -10.679853439331055
    7. '2' → logprob: -10.929853439331055
    8. 't' → logprob: -11.929853439331055
    9. 'div' → logprob: -11.929853439331055
    10. 'division' → logprob: -12.054853439331055

Token 660: ' par' (ID: 686)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -1.0470824241638184
    2. ' y' → logprob: -1.1720824241638184
    3. ' %' → logprob: -2.0470824241638184
    4. ' =' → logprob: -2.1720824241638184
    5. ' %=' → logprob: -3.4220824241638184
    6. '=' → logprob: -3.6720824241638184
    7. 'y' → logprob: -4.297082424163818
    8. ' par' → logprob: -5.672082424163818
    9. '%=' → logprob: -5.797082424163818
    10. '%n' → logprob: -6.297082424163818

Token 661: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.5759433507919312
    2. 't' → logprob: -0.8259433507919312
    3. '6' → logprob: -12.950942993164062
    4. ' ' → logprob: -14.075942993164062
    5. '`t' → logprob: -14.450942993164062
    6. '	t' → logprob: -15.450942993164062
    7. ' ' → logprob: -17.325942993164062
    8. '(t' → logprob: -18.450942993164062
    9. '```' → logprob: -19.075942993164062
    10. 'y' → logprob: -19.450942993164062

Token 662: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.0054467241279780865
    2. ' t' → logprob: -5.380446910858154
    3. 't' → logprob: -7.130446910858154
    4. ' ' → logprob: -11.005446434020996
    5. '```' → logprob: -14.067946434020996
    6. '_' → logprob: -14.317946434020996
    7. '_t' → logprob: -14.380446434020996
    8. '`' → logprob: -14.442946434020996
    9. '`t' → logprob: -14.505446434020996
    10. '2' → logprob: -14.567946434020996

Token 663: '.
' (ID: 558)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.39172759652137756
    2. '=' → logprob: -1.1417275667190552
    3. '%=' → logprob: -6.266727447509766
    4. ' %=' → logprob: -6.391727447509766
    5. ' =
' → logprob: -7.516727447509766
    6. '%' → logprob: -7.766727447509766
    7. '=
' → logprob: -8.766727447509766
    8. '           ' → logprob: -10.141727447509766
    9. '<|end|>' → logprob: -11.141727447509766
    10. ' %' → logprob: -11.516727447509766

Token 664: '           ' (ID: 352)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.65519118309021
    2. '=' → logprob: -0.78019118309021
    3. ' y' → logprob: -4.030191421508789
    4. 'y' → logprob: -6.280191421508789
    5. '%=' → logprob: -6.280191421508789
    6. ' %=' → logprob: -7.780191421508789
    7. '%' → logprob: -8.530191421508789
    8. '=y' → logprob: -9.405191421508789
    9. ' %' → logprob: -10.155191421508789
    10. '           ' → logprob: -10.405191421508789

Token 665: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' (adapté à ' y') → logprob: -0.008615872822701931
    2. ' y' → logprob: -4.758615970611572
    3. '=' → logprob: -14.258615493774414
    4. ' =' → logprob: -15.508615493774414
    5. '6' → logprob: -15.633615493774414
    6. '   ' → logprob: -15.883615493774414
    7. '=y' → logprob: -16.383615493774414
    8. '`' → logprob: -16.758615493774414
    9. '	y' → logprob: -16.758615493774414
    10. '           ' → logprob: -18.633615493774414

Token 666: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -15.000000953674316
    3. '=' → logprob: -15.125000953674316
    4. ' =' → logprob: -15.250000953674316
    5. '₂' → logprob: -15.250000953674316
    6. '```' → logprob: -16.500001907348633
    7. '_' → logprob: -16.625001907348633
    8. '   ' → logprob: -17.625001907348633
    9. '۲' → logprob: -17.750001907348633
    10. '２' → logprob: -18.375001907348633

Token 667: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014449071139097214
    2. '%=' → logprob: -4.264449119567871
    3. ' =' → logprob: -8.889449119567871
    4. '%' → logprob: -9.514449119567871
    5. ' %=' → logprob: -9.514449119567871
    6. '=%' → logprob: -17.264448165893555
    7. ' %' → logprob: -17.389448165893555
    8. '=
' → logprob: -17.639448165893555
    9. '//=' → logprob: -17.889448165893555
    10. '＝' → logprob: -19.139448165893555

Token 668: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.12692831456661224
    2. ' y' → logprob: -2.1269283294677734
    3. '6' → logprob: -15.501928329467773
    4. '	y' → logprob: -18.251928329467773
    5. '0' → logprob: -19.376928329467773
    6. ' ' → logprob: -20.251928329467773
    7. '(y' → logprob: -21.001928329467773
    8. '=y' → logprob: -21.126928329467773
    9. ''y' → logprob: -21.251928329467773
    10. '2' → logprob: -21.376928329467773

Token 669: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0006837221444584429
    2. '%' → logprob: -7.375683784484863
    3. ' %' → logprob: -10.125683784484863
    4. '6' → logprob: -11.500683784484863
    5. ' ' → logprob: -12.750683784484863
    6. 't' → logprob: -13.875683784484863
    7. '₂' → logprob: -13.875683784484863
    8. '_' → logprob: -15.000683784484863
    9. '   ' → logprob: -15.688183784484863
    10. 'y' → logprob: -15.688183784484863

Token 670: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.31326520442962646
    2. ' %' → logprob: -1.3132652044296265
    3. 't' → logprob: -13.688264846801758
    4. '%i' → logprob: -13.688264846801758
    5. '%d' → logprob: -15.188264846801758
    6. '%s' → logprob: -15.188264846801758
    7. '%n' → logprob: -15.313264846801758
    8. '%e' → logprob: -16.063264846801758
    9. '6' → logprob: -16.313264846801758
    10. '%x' → logprob: -16.313264846801758

Token 671: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -5.1928003813372925e-05
    2. ' t' → logprob: -9.875051498413086
    3. '6' → logprob: -15.000051498413086
    4. '`t' → logprob: -17.000051498413086
    5. '(t' → logprob: -19.250051498413086
    6. '	t' → logprob: -19.375051498413086
    7. '   ' → logprob: -19.750051498413086
    8. '$t' → logprob: -20.750051498413086
    9. '```' → logprob: -21.500051498413086
    10. ' ' → logprob: -21.750051498413086

Token 672: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.0017170661594718695
    2. 't' → logprob: -6.3767170906066895
    3. ' t' → logprob: -12.126716613769531
    4. 'c' → logprob: -13.126716613769531
    5. 'o' → logprob: -13.126716613769531
    6. '```' → logprob: -13.626716613769531
    7. ' ' → logprob: -14.564216613769531
    8. 'g' → logprob: -15.001716613769531
    9. '(t' → logprob: -15.189216613769531
    10. 'ol' → logprob: -15.251716613769531

Token 673: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00022249009634833783
    2. '
' → logprob: -9.250222206115723
    3. '    
' → logprob: -9.750222206115723
    4. '       ' → logprob: -10.750222206115723
    5. 'res' → logprob: -10.750222206115723
    6. ' res' → logprob: -12.125222206115723
    7. '<|end|>' → logprob: -12.625222206115723
    8. '        
' → logprob: -13.000222206115723
    9. '```' → logprob: -13.000222206115723
    10. ')' → logprob: -13.250222206115723

Token 674: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0018762783147394657
    2. '```' → logprob: -6.751876354217529
    3. '#' → logprob: -8.126875877380371
    4. '
' → logprob: -9.126875877380371
    5. 'cnt' → logprob: -9.251875877380371
    6. 'if' → logprob: -9.501875877380371
    7. 'res' → logprob: -10.376875877380371
    8. '    
' → logprob: -10.501875877380371
    9. '       ' → logprob: -10.626875877380371
    10. '``' → logprob: -11.126875877380371

Token 675: ' #' (ID: 1069)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.5766857266426086
    2. '   ' → logprob: -0.8266857266426086
    3. ' res' → logprob: -7.326685905456543
    4. '```' → logprob: -9.826685905456543
    5. '
' → logprob: -10.451685905456543
    6. '#' (adapté à ' #') → logprob: -13.326685905456543
    7. '    
' → logprob: -13.326685905456543
    8. '	res' → logprob: -13.701685905456543
    9. '``' → logprob: -14.951685905456543
    10. '       ' → logprob: -15.201685905456543

Token 676: ' Final' (ID: 12625)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.4617256056226324e-05
    2. '   ' → logprob: -11.500014305114746
    3. '#' → logprob: -13.000014305114746
    4. ' res' → logprob: -13.125014305114746
    5. 'cnt' → logprob: -16.250015258789062
    6. 'if' → logprob: -17.000015258789062
    7. '
' → logprob: -17.125015258789062
    8. '```' → logprob: -17.500015258789062
    9. '    
' → logprob: -19.125015258789062
    10. 'rés' → logprob: -19.500015258789062

Token 677: 'ement' (ID: 962)
  Prédit: 'ement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ement' → logprob: -0.2990112602710724
    2. '   ' → logprob: -1.42401123046875
    3. 'res' → logprob: -4.42401123046875
    4. 'e' → logprob: -5.92401123046875
    5. '#' → logprob: -6.42401123046875
    6. 'ment' → logprob: -7.79901123046875
    7. '       ' → logprob: -8.54901123046875
    8. '  ' → logprob: -9.29901123046875
    9. 'lement' → logprob: -9.42401123046875
    10. '    
' → logprob: -9.42401123046875

Token 678: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014018818736076355
    2. 'res' → logprob: -4.639019012451172
    3. '
' → logprob: -5.889019012451172
    4. ' res' → logprob: -6.764019012451172
    5. '#' → logprob: -8.889019012451172
    6. '  ' → logprob: -9.514019012451172
    7. '    
' → logprob: -9.639019012451172
    8. '       ' → logprob: -11.139019012451172
    9. 'cnt' → logprob: -11.264019012451172
    10. ' ' → logprob: -12.014019012451172

Token 679: ' tout' (ID: 5501)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.029287414625287056
    2. 'cnt' → logprob: -3.779287338256836
    3. '   ' → logprob: -5.404287338256836
    4. ' res' → logprob: -6.654287338256836
    5. '#' → logprob: -8.904287338256836
    6. ' cnt' → logprob: -9.404287338256836
    7. 'if' → logprob: -11.404287338256836
    8. '
' → logprob: -12.904287338256836
    9. '```' → logprob: -13.779287338256836
    10. '	res' → logprob: -14.029287338256836

Token 680: ' ce' (ID: 2357)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.8394290804862976
    2. '   ' → logprob: -1.5894291400909424
    3. '+=' → logprob: -2.2144291400909424
    4. 'res' → logprob: -2.3394291400909424
    5. 'le' → logprob: -3.3394291400909424
    6. '#' → logprob: -3.4644291400909424
    7. 'cnt' → logprob: -3.4644291400909424
    8. '=' → logprob: -4.964428901672363
    9. 'rest' → logprob: -5.089428901672363
    10. ' ce' → logprob: -5.214428901672363

Token 681: ' qui' (ID: 2780)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6223298907279968
    2. '#' → logprob: -1.7473299503326416
    3. ' +=' → logprob: -2.6223299503326416
    4. '+=' → logprob: -2.7473299503326416
    5. 'res' → logprob: -3.1223299503326416
    6. 'cnt' → logprob: -3.9973299503326416
    7. 'if' → logprob: -4.4973297119140625
    8. 'print' → logprob: -4.8723297119140625
    9. '```' → logprob: -4.9973297119140625
    10. 'n' → logprob: -5.4973297119140625

Token 682: ' reste' (ID: 26769)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.5357331037521362
    2. '#' → logprob: -1.4107331037521362
    3. 'cnt' → logprob: -2.660733222961426
    4. '+=' → logprob: -3.035733222961426
    5. ' +=' → logprob: -3.285733222961426
    6. 'if' → logprob: -5.285733222961426
    7. '   ' → logprob: -5.910733222961426
    8. 'rest' → logprob: -6.410733222961426
    9. '+' → logprob: -6.660733222961426
    10. '>' → logprob: -7.285733222961426

Token 683: ' dans' (ID: 2671)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.4253816306591034
    2. ' +=' → logprob: -1.4253816604614258
    3. '   ' → logprob: -2.300381660461426
    4. 'cnt' → logprob: -5.675381660461426
    5. '+' → logprob: -6.550381660461426
    6. '#' → logprob: -8.675381660461426
    7. '=' → logprob: -8.800381660461426
    8. 'res' → logprob: -9.300381660461426
    9. ' cnt' → logprob: -9.550381660461426
    10. '  ' → logprob: -9.550381660461426

Token 684: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0017647859640419483
    2. ' y' → logprob: -6.37676477432251
    3. 'i' → logprob: -10.251765251159668
    4. 'cnt' → logprob: -11.126765251159668
    5. 'res' → logprob: -11.626765251159668
    6. '   ' → logprob: -13.001765251159668
    7. '(y' → logprob: -15.126765251159668
    8. ' ' → logprob: -15.751765251159668
    9. ' i' → logprob: -15.876765251159668
    10. 'x' → logprob: -15.876765251159668

Token 685: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.011063147336244583
    2. '1' → logprob: -4.511063098907471
    3. '```' → logprob: -11.511063575744629
    4. '   ' → logprob: -13.386063575744629
    5. 'y' → logprob: -14.386063575744629
    6. '_' → logprob: -14.511063575744629
    7. '₂' → logprob: -14.948563575744629
    8. '#' → logprob: -15.511063575744629
    9. 'i' → logprob: -15.573563575744629
    10. ' +=' → logprob: -15.636063575744629

Token 686: ' ne' (ID: 453)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.29143527150154114
    2. '+=' → logprob: -1.4164352416992188
    3. '   ' → logprob: -4.916435241699219
    4. '=' → logprob: -6.416435241699219
    5. ' -=' → logprob: -8.166435241699219
    6. ' =' → logprob: -8.291435241699219
    7. '#' → logprob: -8.666435241699219
    8. '!=' → logprob: -9.291435241699219
    9. '```' → logprob: -9.791435241699219
    10. '>' → logprob: -9.916435241699219

Token 687: ' peut' (ID: 9216)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.01340667437762022
    2. ' +=' → logprob: -4.513406753540039
    3. '=' → logprob: -6.138406753540039
    4. '>' → logprob: -9.138406753540039
    5. '+' → logprob: -9.638406753540039
    6. '#' → logprob: -12.013406753540039
    7. ']+=' → logprob: -12.013406753540039
    8. '!=' → logprob: -13.013406753540039
    9. ' =' → logprob: -13.138406753540039
    10. ')' → logprob: -13.263406753540039

Token 688: ' être' (ID: 9104)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.6923950910568237
    2. 'être' → logprob: -1.3173950910568237
    3. ' pas' → logprob: -1.9423950910568237
    4. '=' → logprob: -3.4423952102661133
    5. ' être' → logprob: -3.4423952102661133
    6. ' =' → logprob: -5.442395210266113
    7. '>' → logprob: -5.567395210266113
    8. '_pas' → logprob: -5.817395210266113
    9. 'êtres' → logprob: -5.817395210266113
    10. 'êt' → logprob: -6.442395210266113

Token 689: ' retir' (ID: 35638)
  Prédit: 'aj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'aj' → logprob: -1.179502010345459
    2. '0' → logprob: -1.929502010345459
    3. ' ajouté' → logprob: -1.929502010345459
    4. 'comp' → logprob: -2.179502010345459
    5. 'pas' → logprob: -2.929502010345459
    6. '+' → logprob: -3.179502010345459
    7. 'plus' → logprob: -3.429502010345459
    8. 'qu' → logprob: -3.554502010345459
    9. 'repr' → logprob: -4.054502010345459
    10. ' plus' → logprob: -4.554502010345459

Token 690: 'é' (ID: 377)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.3827435374259949
    2. 'er' → logprob: -2.5077435970306396
    3. ' pas' → logprob: -2.5077435970306396
    4. '=' → logprob: -2.7577435970306396
    5. ' =' → logprob: -3.7577435970306396
    6. '   ' → logprob: -4.0077433586120605
    7. '+=' → logprob: -5.0077433586120605
    8. '_pas' → logprob: -5.2577433586120605
    9. 'on' → logprob: -5.5077433586120605
    10. '+' → logprob: -5.7577433586120605

Token 691: ' qu' (ID: 474)
  Prédit: ' que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.22990253567695618
    2. '   ' → logprob: -1.9799025058746338
    3. '           ' → logprob: -3.854902505874634
    4. 'que' → logprob: -4.479902744293213
    5. ' +=' → logprob: -4.604902744293213
    6. ' par' → logprob: -4.604902744293213
    7. '       ' → logprob: -5.354902744293213
    8. '+=' → logprob: -5.604902744293213
    9. ',' → logprob: -6.729902744293213
    10. '+' → logprob: -6.729902744293213

Token 692: ''un' (ID: 9788)
  Prédit: ' pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pas' → logprob: -1.0357158184051514
    2. 'pas' → logprob: -1.2857158184051514
    3. ' par' → logprob: -1.7857158184051514
    4. ' que' → logprob: -2.7857158184051514
    5. 'par' → logprob: -3.5357158184051514
    6. '   ' → logprob: -3.7857158184051514
    7. '#' → logprob: -4.0357160568237305
    8. 'que' → logprob: -4.0357160568237305
    9. '+=' → logprob: -5.0357160568237305
    10. ' +=' → logprob: -5.4107160568237305

Token 693: ' par' (ID: 686)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.3239341080188751
    2. ' +=' → logprob: -1.8239340782165527
    3. '+=' → logprob: -2.9489340782165527
    4. ' seul' → logprob: -4.198934078216553
    5. '+' → logprob: -4.698934078216553
    6. 'ité' → logprob: -5.323934078216553
    7. 'iquement' → logprob: -5.448934078216553
    8. 'u' → logprob: -5.573934078216553
    9. '```' → logprob: -5.698934078216553
    10. ' peu' → logprob: -5.823934078216553

Token 694: ' un' (ID: 537)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.427324503660202
    2. 'y' → logprob: -1.3023245334625244
    3. '1' → logprob: -2.8023245334625244
    4. 'pas' → logprob: -6.052324295043945
    5. ' y' → logprob: -6.177324295043945
    6. 'unit' → logprob: -6.427324295043945
    7. '```' → logprob: -6.677324295043945
    8. 't' → logprob: -6.677324295043945
    9. 'unic' → logprob: -7.302324295043945
    10. 'i' → logprob: -7.427324295043945

Token 695: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11209726333618164
    2. 'cnt' → logprob: -3.3620972633361816
    3. '+' → logprob: -3.9870972633361816
    4. '.' → logprob: -4.112097263336182
    5. '.
' → logprob: -4.362097263336182
    6. '+
' → logprob: -4.987097263336182
    7. ':
' → logprob: -5.862097263336182
    8. ' +' → logprob: -5.862097263336182
    9. ',' → logprob: -5.987097263336182
    10. ' cnt' → logprob: -6.362097263336182

Token 696: 'avec' (ID: 64065)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.10360752791166306
    2. '   ' → logprob: -2.353607416152954
    3. ' cnt' → logprob: -5.853607654571533
    4. '       ' → logprob: -8.478607177734375
    5. '           ' → logprob: -9.478607177734375
    6. '```' → logprob: -9.978607177734375
    7. '	cnt' → logprob: -10.228607177734375
    8. 'count' → logprob: -10.353607177734375
    9. ' ' → logprob: -10.478607177734375
    10. '[cnt' → logprob: -10.978607177734375

Token 697: ' des' (ID: 731)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.03870400786399841
    2. ' y' → logprob: -3.2887039184570312
    3. '6' → logprob: -7.538703918457031
    4. 't' → logprob: -9.288703918457031
    5. 'le' → logprob: -12.038703918457031
    6. ')' → logprob: -12.163703918457031
    7. '   ' → logprob: -12.663703918457031
    8. '#' → logprob: -12.913703918457031
    9. 'la' → logprob: -13.038703918457031
    10. ' la' → logprob: -13.163703918457031

Token 698: ' ' (ID: 220)
  Prédit: 'unit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'unit' → logprob: -0.6406078934669495
    2. '6' → logprob: -1.1406078338623047
    3. 'units' → logprob: -2.5156078338623047
    4. ' unités' → logprob: -3.5156078338623047
    5. '1' → logprob: -3.6406078338623047
    6. ')' → logprob: -5.640607833862305
    7. 'pieces' → logprob: -5.890607833862305
    8. 'tokens' → logprob: -6.265607833862305
    9. '+' → logprob: -6.640607833862305
    10. '#' → logprob: -7.140607833862305

Token 699: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.016527770087122917
    2. '6' → logprob: -4.7665276527404785
    3. 't' → logprob: -5.0165276527404785
    4. 'y' → logprob: -7.3915276527404785
    5. 'units' → logprob: -8.141528129577637
    6. 'ones' → logprob: -8.891528129577637
    7. 'tokens' → logprob: -9.266528129577637
    8. ')' → logprob: -9.891528129577637
    9. '```' → logprob: -11.641528129577637
    10. 'unit' → logprob: -11.641528129577637

Token 700: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1293710470199585
    2. '**' → logprob: -2.504371166229248
    3. 's' → logprob: -4.754371166229248
    4. '^' → logprob: -5.254371166229248
    5. ')
' → logprob: -5.254371166229248
    6. '):
' → logprob: -5.754371166229248
    7. ' )' → logprob: -5.879371166229248
    8. ':' → logprob: -5.879371166229248
    9. ').' → logprob: -6.254371166229248
    10. '.' → logprob: -6.754371166229248

Token 701: ' donc' (ID: 14206)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007354713510721922
    2. 'cnt' → logprob: -5.007354736328125
    3. '       ' → logprob: -8.007354736328125
    4. ' cnt' → logprob: -8.257354736328125
    5. '  ' → logprob: -11.382354736328125
    6. '    
' → logprob: -11.507354736328125
    7. '           ' → logprob: -11.507354736328125
    8. '
' → logprob: -12.632354736328125
    9. '    ' → logprob: -12.757354736328125
    10. '	cnt' → logprob: -12.882354736328125

Token 702: ' on' (ID: 402)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.005404746159911156
    2. '   ' → logprob: -5.255404949188232
    3. ' cnt' → logprob: -8.755404472351074
    4. '	cnt' → logprob: -12.255404472351074
    5. 'count' → logprob: -12.380404472351074
    6. '  ' → logprob: -12.880404472351074
    7. '       ' → logprob: -14.380404472351074
    8. ' ' → logprob: -14.630404472351074
    9. 'ct' → logprob: -16.13040542602539
    10. 'c' → logprob: -16.13040542602539

Token 703: ' ajoute' (ID: 91611)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.2749933898448944
    2. '+=' → logprob: -1.5249934196472168
    3. ' +=' → logprob: -4.399993419647217
    4. ' cnt' → logprob: -6.274993419647217
    5. '   ' → logprob: -6.399993419647217
    6. 'aj' → logprob: -6.524993419647217
    7. 'add' → logprob: -6.524993419647217
    8. 'continue' → logprob: -6.774993419647217
    9. 'count' → logprob: -7.024993419647217
    10. 'inc' → logprob: -7.149993419647217

Token 704: ' directement' (ID: 52317)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.578680157661438
    2. ' y' → logprob: -0.828680157661438
    3. 'cnt' → logprob: -6.328680038452148
    4. ' cnt' → logprob: -7.078680038452148
    5. '   ' → logprob: -9.203680038452148
    6. '	y' → logprob: -12.703680038452148
    7. ' ' → logprob: -13.953680038452148
    8. ' ' → logprob: -14.328680038452148
    9. '       ' → logprob: -14.578680038452148
    10. 'c' → logprob: -14.828680038452148

Token 705: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.4778950810432434
    2. ' y' → logprob: -0.9778950810432434
    3. 'cnt' → logprob: -6.102895259857178
    4. ' cnt' → logprob: -6.477895259857178
    5. '   ' → logprob: -10.35289478302002
    6. '	y' → logprob: -14.10289478302002
    7. ' le' → logprob: -14.47789478302002
    8. '       ' → logprob: -14.60289478302002
    9. ' ' → logprob: -14.72789478302002
    10. '(cnt' → logprob: -14.72789478302002

Token 706: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0087516784551553e-05
    2. ' +=' → logprob: -12.25001049041748
    3. '   ' → logprob: -12.62501049041748
    4. ' ' → logprob: -13.37501049041748
    5. '```' → logprob: -16.125009536743164
    6. '  ' → logprob: -16.375009536743164
    7. '₂' → logprob: -16.625009536743164
    8. ' +' → logprob: -17.125009536743164
    9. '+=' → logprob: -17.250009536743164
    10. '    ' → logprob: -17.625009536743164

Token 707: ' à' (ID: 1221)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.2821471393108368
    2. '   ' → logprob: -1.9071471691131592
    3. '+=' → logprob: -3.282147169113159
    4. ' to' → logprob: -3.282147169113159
    5. ' +' → logprob: -5.15714693069458
    6. 'to' → logprob: -5.53214693069458
    7. '+' → logprob: -5.90714693069458
    8. ' à' → logprob: -6.15714693069458
    9. 'cnt' → logprob: -6.15714693069458
    10. ' ' → logprob: -6.53214693069458

Token 708: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.0011741555063053966
    2. ' cnt' → logprob: -6.751173973083496
    3. 'count' → logprob: -13.251173973083496
    4. '	cnt' → logprob: -13.876173973083496
    5. 'cn' → logprob: -14.626173973083496
    6. 'ct' → logprob: -15.626173973083496
    7. 'c' → logprob: -15.876173973083496
    8. '(cnt' → logprob: -16.126174926757812
    9. '[cnt' → logprob: -16.251174926757812
    10. '```' → logprob: -16.626174926757812

Token 709: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00048632267862558365
    2. 'cnt' → logprob: -7.875486373901367
    3. '
' → logprob: -9.250486373901367
    4. ' cnt' → logprob: -13.000486373901367
    5. '    
' → logprob: -13.250486373901367
    6. '```' → logprob: -13.375486373901367
    7. '       ' → logprob: -13.500486373901367
    8. 'res' → logprob: -13.750486373901367
    9. '	cnt' → logprob: -14.250486373901367
    10. '  ' → logprob: -15.125486373901367

Token 710: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011308702640235424
    2. 'cnt' → logprob: -4.511308670043945
    3. ' cnt' → logprob: -8.386308670043945
    4. 'res' → logprob: -10.636308670043945
    5. ' res' → logprob: -12.511308670043945
    6. '	cnt' → logprob: -13.386308670043945
    7. ' ' → logprob: -14.011308670043945
    8. '
' → logprob: -14.261308670043945
    9. '  ' → logprob: -14.386308670043945
    10. '```' → logprob: -14.511308670043945

Token 711: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' (adapté à ' cnt') → logprob: -0.04891003668308258
    2. '   ' → logprob: -3.048910140991211
    3. ' cnt' → logprob: -8.048910140991211
    4. '	cnt' → logprob: -13.423910140991211
    5. 'count' → logprob: -14.423910140991211
    6. '  ' → logprob: -15.048910140991211
    7. ' ' → logprob: -15.048910140991211
    8. '(cnt' → logprob: -15.923910140991211
    9. '       ' → logprob: -16.29891014099121
    10. '[cnt' → logprob: -16.29891014099121

Token 712: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.1269766092300415
    2. '+=' → logprob: -2.126976490020752
    3. '=' → logprob: -10.62697696685791
    4. '+' → logprob: -11.62697696685791
    5. '   ' → logprob: -12.12697696685791
    6. '```' → logprob: -12.62697696685791
    7. ']+=' → logprob: -13.00197696685791
    8. '+='' → logprob: -14.12697696685791
    9. '+="' → logprob: -14.25197696685791
    10. ' +' → logprob: -14.62697696685791

Token 713: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.5759397745132446
    2. 'y' → logprob: -0.8259397745132446
    3. '	y' → logprob: -15.450940132141113
    4. ' ' → logprob: -16.700939178466797
    5. ' ' → logprob: -16.700939178466797
    6. '   ' → logprob: -17.575939178466797
    7. '6' → logprob: -18.700939178466797
    8. '​' → logprob: -19.825939178466797
    9. '  ' → logprob: -20.075939178466797
    10. '(y' → logprob: -20.200939178466797

Token 714: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0002922022540587932
    2. ' ' → logprob: -9.00029182434082
    3. '   ' → logprob: -9.62529182434082
    4. ' -' → logprob: -10.75029182434082
    5. ' i' → logprob: -10.75029182434082
    6. 'i' → logprob: -11.37529182434082
    7. '-' → logprob: -12.00029182434082
    8. '  ' → logprob: -12.25029182434082
    9. '1' → logprob: -12.37529182434082
    10. '[' → logprob: -12.37529182434082

Token 715: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005157977342605591
    2. 'res' → logprob: -6.255157947540283
    3. ' res' → logprob: -6.380157947540283
    4. '
' → logprob: -6.505157947540283
    5. '    
' → logprob: -11.005158424377441
    6. '```' → logprob: -11.755158424377441
    7. '	res' → logprob: -12.505158424377441
    8. '       ' → logprob: -13.755158424377441
    9. '  ' → logprob: -13.880158424377441
    10. '
' → logprob: -14.005158424377441

Token 716: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.061618827283382416
    2. 'res' → logprob: -3.1866188049316406
    3. ' res' → logprob: -4.061618804931641
    4. '
' → logprob: -6.811618804931641
    5. '```' → logprob: -9.56161880493164
    6. '	res' → logprob: -10.56161880493164
    7. '    
' → logprob: -10.81161880493164
    8. '\n' → logprob: -13.31161880493164
    9. '``' → logprob: -13.93661880493164
    10. '       ' → logprob: -14.18661880493164

Token 717: ' #' (ID: 1069)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.5954664349555969
    2. '   ' → logprob: -0.8454664349555969
    3. ' res' → logprob: -3.970466375350952
    4. '
' → logprob: -7.845466613769531
    5. '	res' → logprob: -9.970466613769531
    6. '```' → logprob: -10.970466613769531
    7. '    
' → logprob: -11.845466613769531
    8. '  ' → logprob: -12.345466613769531
    9. ' ' → logprob: -13.220466613769531
    10. '       ' → logprob: -13.470466613769531

Token 718: ' On' (ID: 2160)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -3.9054008084349334e-05
    2. ' res' → logprob: -10.500039100646973
    3. '   ' → logprob: -11.375039100646973
    4. '
' → logprob: -18.500038146972656
    5. ' ' → logprob: -18.750038146972656
    6. '	res' → logprob: -19.375038146972656
    7. '  ' → logprob: -19.875038146972656
    8. '#' → logprob: -20.000038146972656
    9. '```' → logprob: -20.250038146972656
    10. 'rés' → logprob: -20.750038146972656

Token 719: ' ajoute' (ID: 91611)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.410489022731781
    2. 'res' → logprob: -1.1604890823364258
    3. 'append' → logprob: -4.160489082336426
    4. ' res' → logprob: -4.910489082336426
    5. '   ' → logprob: -8.410489082336426
    6. ' append' → logprob: -9.660489082336426
    7. '.' → logprob: -10.160489082336426
    8. '	res' → logprob: -11.535489082336426
    9. '.res' → logprob: -11.660489082336426
    10. 'app' → logprob: -11.660489082336426

Token 720: ' cnt' (ID: 27340)
  Prédit: '(cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cnt' → logprob: -0.20233987271785736
    2. 'cnt' → logprob: -1.7023398876190186
    3. ' cnt' → logprob: -7.0773396492004395
    4. '(' → logprob: -10.702340126037598
    5. '[cnt' → logprob: -10.702340126037598
    6. 'res' → logprob: -10.827340126037598
    7. '   ' → logprob: -12.077340126037598
    8. '(res' → logprob: -12.577340126037598
    9. '	cnt' → logprob: -12.577340126037598
    10. '(count' → logprob: -13.452340126037598

Token 721: ' dans' (ID: 2671)
  Prédit: '(cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(cnt' → logprob: -0.471863716840744
    2. '(res' → logprob: -1.0968637466430664
    3. '(' → logprob: -3.8468637466430664
    4. ')' → logprob: -4.846863746643066
    5. '   ' → logprob: -5.096863746643066
    6. '(
' → logprob: -6.221863746643066
    7. 'res' → logprob: -6.221863746643066
    8. '.append' → logprob: -6.721863746643066
    9. ',' → logprob: -7.721863746643066
    10. '(count' → logprob: -7.971863746643066

Token 722: ' la' (ID: 557)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.0009114635176956654
    2. ' res' → logprob: -7.000911235809326
    3. '(res' → logprob: -20.500911712646484
    4. '	res' → logprob: -21.375911712646484
    5. '_res' → logprob: -22.000911712646484
    6. 're' → logprob: -22.375911712646484
    7. '$res' → logprob: -23.125911712646484
    8. 'ress' → logprob: -23.250911712646484
    9. '```' → logprob: -24.125911712646484
    10. '   ' → logprob: -24.125911712646484

Token 723: ' liste' (ID: 31719)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.00033546582562848926
    2. ' res' → logprob: -8.000335693359375
    3. '```' → logprob: -17.750335693359375
    4. '   ' → logprob: -20.000335693359375
    5. '	res' → logprob: -20.375335693359375
    6. 'append' → logprob: -20.625335693359375
    7. '`' → logprob: -20.750335693359375
    8. 'list' → logprob: -21.000335693359375
    9. '_res' → logprob: -21.625335693359375
    10. '[' → logprob: -21.625335693359375

Token 724: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.038838066160678864
    2. '(res' → logprob: -3.2888381481170654
    3. ' res' → logprob: -7.413837909698486
    4. '(' → logprob: -8.788838386535645
    5. '   ' → logprob: -11.163838386535645
    6. '('' → logprob: -11.788838386535645
    7. ' (' → logprob: -12.288838386535645
    8. '_res' → logprob: -12.663838386535645
    9. '	res' → logprob: -13.038838386535645
    10. '`' → logprob: -13.163838386535645

Token 725: '.' (ID: 13)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008626393973827362
    2. '.append' → logprob: -4.758626461029053
    3. '.' → logprob: -12.508625984191895
    4. '
' → logprob: -12.633625984191895
    5. '[' → logprob: -13.008625984191895
    6. '    
' → logprob: -13.758625984191895
    7. 'res' → logprob: -14.508625984191895
    8. '       ' → logprob: -14.758625984191895
    9. ' res' → logprob: -16.00862693786621
    10. '.
' → logprob: -16.13362693786621

Token 726: ' Celle' (ID: 156172)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.680399477481842
    2. ' res' → logprob: -1.1803994178771973
    3. 'res' → logprob: -1.6803994178771973
    4. '	res' → logprob: -9.805399894714355
    5. '```' → logprob: -10.555399894714355
    6. '
' → logprob: -10.930399894714355
    7. '    
' → logprob: -11.555399894714355
    8. '(res' → logprob: -11.555399894714355
    9. '       ' → logprob: -13.055399894714355
    10. '  ' → logprob: -13.305399894714355

Token 727: '-ci' (ID: 27301)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0010013706050813198
    2. '.' → logprob: -7.126001358032227
    3. 's' → logprob: -9.501001358032227
    4. 'res' → logprob: -9.626001358032227
    5. '   ' → logprob: -10.501001358032227
    6. 'append' → logprob: -11.251001358032227
    7. ' .' → logprob: -12.251001358032227
    8. '.push' → logprob: -12.876001358032227
    9. ')' → logprob: -13.626001358032227
    10. '.insert' → logprob: -13.751001358032227

Token 728: ' garde' (ID: 65309)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.011052302084863186
    2. '.' → logprob: -4.511052131652832
    3. '.app' → logprob: -12.886052131652832
    4. 'append' → logprob: -14.136052131652832
    5. ' .' → logprob: -14.386052131652832
    6. '.ap' → logprob: -14.886052131652832
    7. '.add' → logprob: -15.636052131652832
    8. '.insert' → logprob: -16.88605308532715
    9. '.extend' → logprob: -17.38605308532715
    10. '.push' → logprob: -17.76105308532715

Token 729: ' le' (ID: 505)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -1.551491379737854
    2. 'res' → logprob: -1.676491379737854
    3. '(cnt' → logprob: -1.676491379737854
    4. 'append' → logprob: -1.801491379737854
    5. ')' → logprob: -2.4264912605285645
    6. 'cnt' → logprob: -2.5514912605285645
    7. '[cnt' → logprob: -3.1764912605285645
    8. '   ' → logprob: -3.5514912605285645
    9. 'une' → logprob: -5.6764912605285645
    10. ' cnt' → logprob: -6.6764912605285645

Token 730: ' résultat' (ID: 62556)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.18033039569854736
    2. '.append' → logprob: -3.180330276489258
    3. '[cnt' → logprob: -3.180330276489258
    4. 'res' → logprob: -3.305330276489258
    5. ' cnt' → logprob: -4.180330276489258
    6. '[' → logprob: -4.555330276489258
    7. 'append' → logprob: -5.555330276489258
    8. ')' → logprob: -6.055330276489258
    9. ' ' → logprob: -6.180330276489258
    10. '   ' → logprob: -6.305330276489258

Token 731: ' pour' (ID: 1930)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.001999534899368882
    2. '.' → logprob: -6.626999378204346
    3. '   ' → logprob: -7.626999378204346
    4. 'append' → logprob: -9.001999855041504
    5. ')' → logprob: -10.126999855041504
    6. 's' → logprob: -12.376999855041504
    7. 'res' → logprob: -13.126999855041504
    8. '[:]' → logprob: -13.126999855041504
    9. '(' → logprob: -13.251999855041504
    10. '[' → logprob: -13.501999855041504

Token 732: ' chaque' (ID: 21194)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1598791629076004
    2. ' i' → logprob: -2.534879207611084
    3. ' chaque' → logprob: -3.284879207611084
    4. 'each' → logprob: -4.034879207611084
    5. ' each' → logprob: -5.284879207611084
    6. ' ' → logprob: -6.034879207611084
    7. '[]' → logprob: -6.659879207611084
    8. '[i' → logprob: -6.784879207611084
    9. '  ' → logprob: -7.409879207611084
    10. 'res' → logprob: -7.534879207611084

Token 733: ' valeur' (ID: 41664)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6334692239761353
    2. 'i' → logprob: -0.7584692239761353
    3. ' ' → logprob: -7.883469104766846
    4. 'val' → logprob: -8.633469581604004
    5. ' valeur' → logprob: -9.758469581604004
    6. ' it' → logprob: -9.883469581604004
    7. '   ' → logprob: -10.133469581604004
    8. ' possible' → logprob: -10.258469581604004
    9. ' iteration' → logprob: -10.383469581604004
    10. ' val' → logprob: -10.758469581604004

Token 734: ' de' (ID: 334)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.016252541914582253
    2. '   ' → logprob: -4.516252517700195
    3. 'append' → logprob: -5.641252517700195
    4. 'res' → logprob: -7.641252517700195
    5. '.' → logprob: -7.766252517700195
    6. ' append' → logprob: -8.516252517700195
    7. ' .' → logprob: -9.016252517700195
    8. ')' → logprob: -9.641252517700195
    9. ' de' → logprob: -9.891252517700195
    10. '(' → logprob: -10.516252517700195

Token 735: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2254875749349594
    2. ' i' → logprob: -1.6004875898361206
    3. ' ' → logprob: -10.10048770904541
    4. '   ' → logprob: -10.97548770904541
    5. ' range' → logprob: -12.10048770904541
    6. 'range' → logprob: -12.72548770904541
    7. '	i' → logprob: -12.85048770904541
    8. '  ' → logprob: -14.10048770904541
    9. '    ' → logprob: -14.22548770904541
    10. '_i' → logprob: -14.35048770904541

Token 736: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004984809085726738
    2. 'res' → logprob: -5.8799848556518555
    3. '.append' → logprob: -6.5049848556518555
    4. '(res' → logprob: -7.6299848556518555
    5. ' res' → logprob: -9.254984855651855
    6. '    
' → logprob: -9.754984855651855
    7. '(' → logprob: -11.379984855651855
    8. '
' → logprob: -12.504984855651855
    9. '       ' → logprob: -12.504984855651855
    10. 'append' → logprob: -12.754984855651855

Token 737: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2699708044528961
    2. 'res' → logprob: -1.5199707746505737
    3. ' res' → logprob: -4.144970893859863
    4. '
' → logprob: -6.269970893859863
    5. '    
' → logprob: -9.894970893859863
    6. '	res' → logprob: -10.144970893859863
    7. '```' → logprob: -10.894970893859863
    8. '  ' → logprob: -11.269970893859863
    9. ' ' → logprob: -11.394970893859863
    10. '       ' → logprob: -13.269970893859863

Token 738: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.4328669309616089
    2. ' res' → logprob: -1.4328669309616089
    3. '   ' → logprob: -2.1828670501708984
    4. '	res' → logprob: -12.307867050170898
    5. '  ' → logprob: -12.807867050170898
    6. ' ' → logprob: -13.182867050170898
    7. '       ' → logprob: -14.682867050170898
    8. '    
' → logprob: -14.682867050170898
    9. '(res' → logprob: -14.932867050170898
    10. '
' → logprob: -14.932867050170898

Token 739: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0005641150055453181
    2. '.' → logprob: -7.500564098358154
    3. '.app' → logprob: -11.750564575195312
    4. '.ap' → logprob: -13.125564575195312
    5. '.add' → logprob: -14.500564575195312
    6. ' .' → logprob: -15.375564575195312
    7. '.extend' → logprob: -15.375564575195312
    8. '.Append' → logprob: -16.250564575195312
    9. 'append' → logprob: -16.625564575195312
    10. '.push' → logprob: -16.750564575195312

Token 740: '(cnt' (ID: 102125)
  Prédit: '(cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cnt' → logprob: -0.00015920029545668513
    2. '(' → logprob: -8.75015926361084
    3. '(count' → logprob: -15.00015926361084
    4. '(ct' → logprob: -16.125158309936523
    5. '[cnt' → logprob: -16.375158309936523
    6. 'cnt' → logprob: -16.875158309936523
    7. '(
' → logprob: -16.875158309936523
    8. ' (' → logprob: -17.625158309936523
    9. '((' → logprob: -17.875158309936523
    10. '(cont' → logprob: -18.000158309936523

Token 741: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.438573680294212e-06
    2. ')
' → logprob: -12.500005722045898
    3. ' )' → logprob: -13.625005722045898
    4. '   ' → logprob: -14.750005722045898
    5. ')`' → logprob: -17.0000057220459
    6. ')**' → logprob: -17.5000057220459
    7. '())' → logprob: -18.2500057220459
    8. ')

' → logprob: -18.2500057220459
    9. '))' → logprob: -18.2500057220459
    10. ')#' → logprob: -18.7500057220459

Token 742: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.025842811912298203
    2. 'min' → logprob: -4.275842666625977
    3. '#' → logprob: -5.400842666625977
    4. 'result' → logprob: -5.650842666625977
    5. 'minimum' → logprob: -6.025842666625977
    6. '
' → logprob: -7.150842666625977
    7. '```' → logprob: -9.525842666625977
    8. 'answer' → logprob: -10.025842666625977
    9. 'm' → logprob: -10.400842666625977
    10. 'p' → logprob: -10.525842666625977

Token 743: ' Quand' (ID: 67052)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0008129627676680684
    2. '#' → logprob: -7.250813007354736
    3. ' print' → logprob: -10.250812530517578
    4. 'prin' → logprob: -10.375812530517578
    5. 'result' → logprob: -11.125812530517578
    6. '#print' → logprob: -12.125812530517578
    7. 'pr' → logprob: -12.375812530517578
    8. 'min' → logprob: -12.625812530517578
    9. 'res' → logprob: -13.000812530517578
    10. 'm' → logprob: -13.625812530517578

Token 744: ' toutes' (ID: 17502)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -1.4668524265289307
    2. 'res' → logprob: -1.7168524265289307
    3. 'min' → logprob: -1.8418524265289307
    4. 'y' → logprob: -2.2168524265289307
    5. '#' → logprob: -2.7168524265289307
    6. ' res' → logprob: -3.3418524265289307
    7. 'le' → logprob: -3.5918524265289307
    8. ' len' → logprob: -3.8418524265289307
    9. ' y' → logprob: -3.9668524265289307
    10. 'la' → logprob: -4.091852188110352

Token 745: ' les' (ID: 1341)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.848598062992096
    2. '(res' → logprob: -1.4735980033874512
    3. 'res' → logprob: -1.8485980033874512
    4. '()' → logprob: -2.348598003387451
    5. 'i' → logprob: -3.848598003387451
    6. 'rés' → logprob: -4.223598003387451
    7. 'val' → logprob: -4.348598003387451
    8. '(i' → logprob: -4.473598003387451
    9. 'les' → logprob: -4.973598003387451
    10. '#' → logprob: -5.848598003387451

Token 746: ' valeurs' (ID: 73668)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.48983266949653625
    2. 'i' → logprob: -0.9898326396942139
    3. 'res' → logprob: -5.864832878112793
    4. 'poss' → logprob: -5.989832878112793
    5. 'rés' → logprob: -6.114832878112793
    6. 'l' → logprob: -6.739832878112793
    7. 'values' → logprob: -6.864832878112793
    8. 'calcul' → logprob: -6.989832878112793
    9. ' valeurs' → logprob: -7.364832878112793
    10. 'for' → logprob: -7.489832878112793

Token 747: ' possibles' (ID: 97753)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.2465023696422577
    2. ' de' → logprob: -1.99650239944458
    3. 'i' → logprob: -2.99650239944458
    4. 'for' → logprob: -4.24650239944458
    5. 'pour' → logprob: -6.12150239944458
    6. ' ont' → logprob: -6.24650239944458
    7. 'ont' → logprob: -6.24650239944458
    8. ' i' → logprob: -6.37150239944458
    9. 'res' → logprob: -6.49650239944458
    10. 's' → logprob: -6.87150239944458

Token 748: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.2943960130214691
    2. 'for' → logprob: -1.9193960428237915
    3. 'pour' → logprob: -3.169395923614502
    4. ' de' → logprob: -3.669395923614502
    5. 'i' → logprob: -3.794395923614502
    6. 'ont' → logprob: -5.294395923614502
    7. '#' → logprob: -5.419395923614502
    8. '(' → logprob: -6.044395923614502
    9. 'have' → logprob: -6.919395923614502
    10. ' ont' → logprob: -6.919395923614502

Token 749: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.004199494142085314
    2. 'y' → logprob: -5.754199504852295
    3. ' i' → logprob: -7.254199504852295
    4. 'res' → logprob: -8.129199028015137
    5. ' y' → logprob: -11.754199028015137
    6. ' res' → logprob: -12.879199028015137
    7. 'range' → logprob: -12.879199028015137
    8. 'for' → logprob: -13.629199028015137
    9. '1' → logprob: -13.754199028015137
    10. '```' → logprob: -14.129199028015137

Token 750: ' ont' (ID: 4930)
  Prédit: 'ont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ont' → logprob: -0.48649370670318604
    2. ' ont' → logprob: -1.736493706703186
    3. ' have' → logprob: -2.3614935874938965
    4. 's' → logprob: -2.7364935874938965
    5. ' sont' → logprob: -3.9864935874938965
    6. 'have' → logprob: -4.3614935874938965
    7. ''ont' → logprob: -5.4864935874938965
    8. 'for' → logprob: -5.4864935874938965
    9. ':' → logprob: -6.1114935874938965
    10. '#' → logprob: -6.2364935874938965

Token 751: ' été' (ID: 9799)
  Prédit: 'été'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'été' → logprob: -0.009762817993760109
    2. ' été' → logprob: -5.134762763977051
    3. 'être' → logprob: -5.634762763977051
    4. '#' → logprob: -9.38476276397705
    5. '_' → logprob: -10.50976276397705
    6. 'been' → logprob: -10.50976276397705
    7. 'é' → logprob: -11.00976276397705
    8. 'êtres' → logprob: -11.13476276397705
    9. 'ét' → logprob: -11.25976276397705
    10. 'êt' → logprob: -11.38476276397705

Token 752: ' test' (ID: 1746)
  Prédit: 'trait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trait' → logprob: -0.14675183594226837
    2. 'calcul' → logprob: -2.271751880645752
    3. 'par' → logprob: -3.896751880645752
    4. 'test' → logprob: -4.771751880645752
    5. 'tra' → logprob: -6.646751880645752
    6. ' parcour' → logprob: -7.271751880645752
    7. 'é' → logprob: -7.271751880645752
    8. ' trait' → logprob: -8.146751403808594
    9. 'evalu' → logprob: -8.271751403808594
    10. 'aj' → logprob: -8.396751403808594

Token 753: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.0052076708525419235
    2. 'és' → logprob: -5.505207538604736
    3. 'é' → logprob: -6.880207538604736
    4. '#' → logprob: -10.255208015441895
    5. 'ée' → logprob: -10.505208015441895
    6. 'es' → logprob: -11.005208015441895
    7. 'ees' → logprob: -11.505208015441895
    8. ',' → logprob: -12.505208015441895
    9. '   ' → logprob: -13.130208015441895
    10. 'É' → logprob: -13.380208015441895

Token 754: ',' (ID: 11)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.011855345219373703
    2. '#' → logprob: -4.761855125427246
    3. '
' → logprob: -6.136855125427246
    4. 'result' → logprob: -7.761855125427246
    5. 'min' → logprob: -8.136855125427246
    6. ' print' → logprob: -9.136855125427246
    7. 'minimum' → logprob: -9.636855125427246
    8. '#print' → logprob: -10.261855125427246
    9. ',' → logprob: -10.386855125427246
    10. '```' → logprob: -11.011855125427246

Token 755: ' on' (ID: 402)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0016766138141974807
    2. '#' → logprob: -6.501676559448242
    3. ' print' → logprob: -10.001676559448242
    4. 'result' → logprob: -10.126676559448242
    5. 'min' → logprob: -10.126676559448242
    6. '
' → logprob: -10.751676559448242
    7. 'res' → logprob: -11.126676559448242
    8. '#print' → logprob: -12.626676559448242
    9. 'minimum' → logprob: -12.751676559448242
    10. '```' → logprob: -13.626676559448242

Token 756: ' affiche' (ID: 127479)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0008717980235815048
    2. ' print' → logprob: -7.625871658325195
    3. '#' → logprob: -8.000871658325195
    4. '
' → logprob: -10.250871658325195
    5. '#print' → logprob: -11.500871658325195
    6. '```' → logprob: -13.875871658325195
    7. '.print' → logprob: -14.750871658325195
    8. ' #' → logprob: -14.875871658325195
    9. '
' → logprob: -15.000871658325195
    10. 'prin' → logprob: -15.750871658325195

Token 757: ' le' (ID: 505)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.004140499513596296
    2. '(min' → logprob: -5.504140377044678
    3. ' min' → logprob: -9.754140853881836
    4. 'print' → logprob: -12.504140853881836
    5. '[min' → logprob: -15.379140853881836
    6. 'minimum' → logprob: -16.504140853881836
    7. '
' → logprob: -17.254140853881836
    8. '=min' → logprob: -17.379140853881836
    9. ',min' → logprob: -17.754140853881836
    10. 'max' → logprob: -18.379140853881836

Token 758: ' minimum' (ID: 11085)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0005697138840332627
    2. '(min' → logprob: -7.500569820404053
    3. ' min' → logprob: -11.125569343566895
    4. 'print' → logprob: -13.750569343566895
    5. '
' → logprob: -14.875569343566895
    6. 'minimum' → logprob: -15.500569343566895
    7. '[min' → logprob: -15.500569343566895
    8. '.min' → logprob: -17.12557029724121
    9. '=min' → logprob: -18.00057029724121
    10. 'max' → logprob: -18.00057029724121

Token 759: ' des' (ID: 731)
  Prédit: '(min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.0028884445782750845
    2. '(res' → logprob: -6.5028886795043945
    3. '(' → logprob: -7.1278886795043945
    4. 'min' → logprob: -8.002888679504395
    5. '(
' → logprob: -8.752888679504395
    6. 'print' → logprob: -10.127888679504395
    7. 'res' → logprob: -10.377888679504395
    8. '(print' → logprob: -11.877888679504395
    9. '(max' → logprob: -12.127888679504395
    10. '(

' → logprob: -13.377888679504395

Token 760: ' résultats' (ID: 48985)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -2.4868770196917467e-05
    2. ' res' → logprob: -10.750024795532227
    3. '(res' → logprob: -12.625024795532227
    4. 'rés' → logprob: -18.125024795532227
    5. '	res' → logprob: -19.500024795532227
    6. 'ress' → logprob: -20.375024795532227
    7. 'result' → logprob: -20.625024795532227
    8. 'r' → logprob: -21.000024795532227
    9. '_res' → logprob: -21.125024795532227
    10. 're' → logprob: -21.625024795532227

Token 761: ' de' (ID: 334)
  Prédit: '(min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.24703717231750488
    2. '(res' → logprob: -1.8720371723175049
    3. '()' → logprob: -3.497037172317505
    4. '(' → logprob: -4.372036933898926
    5. '(
' → logprob: -4.872036933898926
    6. '()
' → logprob: -4.997036933898926
    7. 'print' → logprob: -5.747036933898926
    8. '(print' → logprob: -6.122036933898926
    9. 'res' → logprob: -6.747036933898926
    10. 'min' → logprob: -6.997036933898926

Token 762: ' la' (ID: 557)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.002835184335708618
    2. ' res' → logprob: -5.877835273742676
    3. '(res' → logprob: -10.627835273742676
    4. 'la' → logprob: -12.752835273742676
    5. '
' → logprob: -13.502835273742676
    6. 'rés' → logprob: -14.127835273742676
    7. ' la' → logprob: -14.627835273742676
    8. '	res' → logprob: -15.002835273742676
    9. '```' → logprob: -16.25283432006836
    10. '$res' → logprob: -16.62783432006836

Token 763: ' liste' (ID: 31719)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.0008591734222136438
    2. 'print' → logprob: -7.875859260559082
    3. 'rés' → logprob: -8.250859260559082
    4. ' res' → logprob: -9.125859260559082
    5. 'liste' → logprob: -9.625859260559082
    6. 'list' → logprob: -11.125859260559082
    7. 'ress' → logprob: -12.375859260559082
    8. 'for' → logprob: -12.625859260559082
    9. '#' → logprob: -12.875859260559082
    10. 'range' → logprob: -13.125859260559082

Token 764: ' res' (ID: 694)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.611655056476593
    2. '(res' → logprob: -0.861655056476593
    3. 'res' → logprob: -3.3616549968719482
    4. '(print' → logprob: -7.861655235290527
    5. '(min' → logprob: -11.361655235290527
    6. '(' → logprob: -13.111655235290527
    7. 'min' → logprob: -13.236655235290527
    8. '```' → logprob: -13.361655235290527
    9. ')' → logprob: -13.611655235290527
    10. '(
' → logprob: -13.736655235290527

Token 765: '.
' (ID: 558)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.002373035065829754
    2. '()
' → logprob: -6.252373218536377
    3. '()' → logprob: -8.252372741699219
    4. '(print' → logprob: -9.752372741699219
    5. '(' → logprob: -9.877372741699219
    6. '(min' → logprob: -10.627372741699219
    7. '```' → logprob: -10.752372741699219
    8. ')' → logprob: -11.627372741699219
    9. '(
' → logprob: -11.877372741699219
    10. ')
' → logprob: -12.502372741699219

Token 766: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -7.896309739408025e-07
    2. '
' → logprob: -14.750000953674316
    3. ' print' → logprob: -15.375000953674316
    4. '```' → logprob: -16.5
    5. 'min' → logprob: -20.5
    6. '
' → logprob: -21.625
    7. '``' → logprob: -22.5
    8. 'pr' → logprob: -23.75
    9. '#print' → logprob: -24.0
    10. '`
' → logprob: -24.25

Token 767: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.320199877838604e-07
    2. ' print' → logprob: -15.125
    3. '
' → logprob: -17.25
    4. 'min' → logprob: -17.75
    5. '```' → logprob: -18.75
    6. '#print' → logprob: -19.5
    7. 'prin' → logprob: -19.75
    8. 'pr' → logprob: -19.75
    9. '#' → logprob: -20.5
    10. '
' → logprob: -21.625

Token 768: '()' (ID: 416)
  Prédit: '(min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.00043448375072330236
    2. '(' → logprob: -7.750434398651123
    3. 'min' → logprob: -13.125434875488281
    4. '()' → logprob: -14.000434875488281
    5. '(max' → logprob: -14.375434875488281
    6. ' (' → logprob: -15.625434875488281
    7. '(
' → logprob: -16.37543487548828
    8. '(m' → logprob: -16.50043487548828
    9. '=min' → logprob: -17.87543487548828
    10. '(print' → logprob: -18.25043487548828

Token 769: ' permet' (ID: 11798)
  Prédit: '(min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.0006656142068095505
    2. 'min' → logprob: -7.750665664672852
    3. '(' → logprob: -9.000665664672852
    4. 'print' → logprob: -9.750665664672852
    5. '(print' → logprob: -10.000665664672852
    6. '()' → logprob: -12.000665664672852
    7. '(
' → logprob: -13.875665664672852
    8. '()
' → logprob: -15.250665664672852
    9. '[min' → logprob: -15.250665664672852
    10. '(max' → logprob: -15.750665664672852

Token 770: ' d' (ID: 272)
  Prédit: '(min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.02812200039625168
    2. '(' → logprob: -3.9031219482421875
    3. '(print' → logprob: -5.0281219482421875
    4. 'print' → logprob: -7.6531219482421875
    5. 'min' → logprob: -7.7781219482421875
    6. '()' → logprob: -9.528121948242188
    7. '(
' → logprob: -10.903121948242188
    8. '(max' → logprob: -11.903121948242188
    9. '("' → logprob: -13.528121948242188
    10. '(

' → logprob: -13.903121948242188

Token 771: ''aff' (ID: 53397)
  Prédit: ''aff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''aff' → logprob: -0.9102780818939209
    2. 'print' → logprob: -1.035278081893921
    3. ' afficher' → logprob: -2.035278081893921
    4. 'aff' → logprob: -2.285278081893921
    5. ' print' → logprob: -5.1602783203125
    6. '’aff' → logprob: -6.7852783203125
    7. 'Afficher' → logprob: -7.1602783203125
    8. '_aff' → logprob: -7.4102783203125
    9. '#print' → logprob: -8.1602783203125
    10. '#' → logprob: -8.1602783203125

Token 772: 'icher' (ID: 13617)
  Prédit: 'icher'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icher' → logprob: -0.000261216628132388
    2. 'ich' → logprob: -9.625261306762695
    3. 'cher' → logprob: -9.750261306762695
    4. '#' → logprob: -9.750261306762695
    5. 'iche' → logprob: -10.125261306762695
    6. 'ic' → logprob: -11.000261306762695
    7. 'f' → logprob: -11.500261306762695
    8. 'icer' → logprob: -12.625261306762695
    9. 'ichage' → logprob: -13.375261306762695
    10. 'ichier' → logprob: -13.625261306762695

Token 773: ' la' (ID: 557)
  Prédit: '(min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.00021069261129014194
    2. '(' → logprob: -8.750210762023926
    3. 'min' → logprob: -9.875210762023926
    4. '()' → logprob: -15.125210762023926
    5. '(max' → logprob: -15.875210762023926
    6. '(
' → logprob: -16.00020980834961
    7. ' (' → logprob: -16.12520980834961
    8. '(m' → logprob: -17.25020980834961
    9. ' min' → logprob: -17.87520980834961
    10. '(print' → logprob: -18.00020980834961

Token 774: ' valeur' (ID: 41664)
  Prédit: '(min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.38773494958877563
    2. 'min' → logprob: -1.1377348899841309
    3. 'minimum' → logprob: -7.762734889984131
    4. '(' → logprob: -7.762734889984131
    5. '(
' → logprob: -13.137735366821289
    6. 'result' → logprob: -13.387735366821289
    7. '```' → logprob: -13.387735366821289
    8. 'minimal' → logprob: -13.387735366821289
    9. '()' → logprob: -13.887735366821289
    10. ',min' → logprob: -13.887735366821289

Token 775: ' sur' (ID: 1512)
  Prédit: '(min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.000740538293030113
    2. '(' → logprob: -7.2507405281066895
    3. 'min' → logprob: -10.750741004943848
    4. '(
' → logprob: -12.125741004943848
    5. '()' → logprob: -12.750741004943848
    6. '(max' → logprob: -14.875741004943848
    7. '(

' → logprob: -16.25074005126953
    8. ' (' → logprob: -16.37574005126953
    9. '()
' → logprob: -16.75074005126953
    10. '("' → logprob: -16.87574005126953

Token 776: ' la' (ID: 557)
  Prédit: '(min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.2548663914203644
    2. 'min' → logprob: -1.754866361618042
    3. '()' → logprob: -3.379866361618042
    4. 'la' → logprob: -4.254866600036621
    5. '(' → logprob: -6.879866600036621
    6. 'le' → logprob: -7.129866600036621
    7. 'l' → logprob: -8.004866600036621
    8. '())' → logprob: -8.254866600036621
    9. 'une' → logprob: -8.629866600036621
    10. '()
' → logprob: -8.879866600036621

Token 777: ' sortie' (ID: 52761)
  Prédit: 'console'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'console' → logprob: -0.030151119455695152
    2. 'é' → logprob: -5.280150890350342
    3. 'standard' → logprob: -5.530150890350342
    4. 'stdout' → logprob: -5.655150890350342
    5. 'terminal' → logprob: -5.905150890350342
    6. '```' → logprob: -6.280150890350342
    7. 'output' → logprob: -6.530150890350342
    8. 'screen' → logprob: -6.655150890350342
    9. ' console' → logprob: -6.780150890350342
    10. 'python' → logprob: -6.780150890350342

Token 778: ' standard' (ID: 7024)
  Prédit: '(min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.03925183042883873
    2. '()' → logprob: -3.4142518043518066
    3. '(' → logprob: -5.914251804351807
    4. '(print' → logprob: -6.414251804351807
    5. 'print' → logprob: -7.414251804351807
    6. 'min' → logprob: -7.414251804351807
    7. '(max' → logprob: -11.914252281188965
    8. '("")' → logprob: -12.039252281188965
    9. '(res' → logprob: -12.539252281188965
    10. '()
' → logprob: -12.539252281188965

Token 779: ' (' (ID: 350)
  Prédit: '(min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.330980122089386
    2. 'print' → logprob: -1.8309800624847412
    3. '(print' → logprob: -2.330980062484741
    4. '(' → logprob: -4.45598030090332
    5. 'min' → logprob: -4.95598030090332
    6. '()' → logprob: -5.83098030090332
    7. '(res' → logprob: -6.70598030090332
    8. '()
' → logprob: -7.08098030090332
    9. '(
' → logprob: -7.58098030090332
    10. 'res' → logprob: -9.58098030090332

Token 780: 'é' (ID: 377)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15949445962905884
    2. 'min' → logprob: -2.034494400024414
    3. 'res' → logprob: -4.534494400024414
    4. ')
' → logprob: -5.659494400024414
    5. 'minimum' → logprob: -7.534494400024414
    6. '(min' → logprob: -7.784494400024414
    7. ' )' → logprob: -7.784494400024414
    8. '()' → logprob: -8.534494400024414
    9. ' min' → logprob: -9.034494400024414
    10. '(res' → logprob: -9.034494400024414

Token 781: 'cran' (ID: 58375)
  Prédit: 'cran'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cran' → logprob: -0.08802545070648193
    2. 'cr' → logprob: -3.3380255699157715
    3. 'nd' → logprob: -3.5880255699157715
    4. 'ur' → logprob: -5.3380255699157715
    5. 'n' → logprob: -5.7130255699157715
    6. 'crire' → logprob: -6.0880255699157715
    7. '#' → logprob: -6.7130255699157715
    8. 'criv' → logprob: -6.9630255699157715
    9. 'nergie' → logprob: -7.0880255699157715
    10. ')' → logprob: -7.3380255699157715

Token 782: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010059921070933342
    2. '()' → logprob: -5.510059833526611
    3. '(res' → logprob: -5.510059833526611
    4. ')
' → logprob: -6.635059833526611
    5. '(min' → logprob: -8.26006031036377
    6. '(' → logprob: -8.63506031036377
    7. '())' → logprob: -9.26006031036377
    8. '(print' → logprob: -11.13506031036377
    9. '()
' → logprob: -11.76006031036377
    10. 'min' → logprob: -11.88506031036377

Token 783: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. ' print' → logprob: -18.0
    3. '```' → logprob: -18.75
    4. '(print' → logprob: -25.125
    5. '``' → logprob: -27.0
    6. '-print' → logprob: -27.375
    7. '	print' → logprob: -27.875
    8. '#print' → logprob: -27.875
    9. 'Print' → logprob: -28.0
    10. '.print' → logprob: -28.125

Token 784: '(min' (ID: 26035)
  Prédit: '(min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.0004309076175559312
    2. '(' → logprob: -7.750431060791016
    3. ' (' → logprob: -16.500431060791016
    4. '(max' → logprob: -16.625431060791016
    5. '()' → logprob: -18.375431060791016
    6. 'min' → logprob: -18.375431060791016
    7. '(m' → logprob: -18.875431060791016
    8. '=min' → logprob: -19.625431060791016
    9. '(
' → logprob: -19.750431060791016
    10. '(sorted' → logprob: -20.125431060791016

Token 785: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -6.64708495605737e-05
    2. '(' → logprob: -9.625066757202148
    3. 'res' → logprob: -15.875066757202148
    4. ' (' → logprob: -15.875066757202148
    5. ')' → logprob: -16.37506675720215
    6. '(re' → logprob: -18.00006675720215
    7. '(
' → logprob: -18.12506675720215
    8. '(rest' → logprob: -18.25006675720215
    9. ',res' → logprob: -19.50006675720215
    10. '	res' → logprob: -19.87506675720215

Token 786: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.029753385111689568
    2. ')' → logprob: -3.5297534465789795
    3. '()))' → logprob: -14.029753684997559
    4. '())' → logprob: -14.154753684997559
    5. ')))' → logprob: -14.529753684997559
    6. '()' → logprob: -15.029753684997559
    7. '))
' → logprob: -15.029753684997559
    8. '])' → logprob: -16.029752731323242
    9. ' ))' → logprob: -16.529752731323242
    10. ')
' → logprob: -17.154752731323242


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 784
Tokens correctement prédits (1ère position, stricte): 217
Tokens correctement prédits (1ère position, avec adaptation): 232
Tokens correctement prédits (top 10): 470
Précision stricte (1ère position): 27.68%
Précision adaptée (1ère position): 29.59%
Précision (top 10): 59.95%
================================================================================
