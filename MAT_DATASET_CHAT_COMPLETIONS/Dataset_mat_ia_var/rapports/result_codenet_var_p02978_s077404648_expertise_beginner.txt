================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:52:10
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N = int(input())
A = list(map(int, input().split()))

# On va utiliser un dictionnaire pour mémoriser les résultats déjà calculés
memo = {}

def dp(i, j, L, R):
    # On regarde si le résultat a déjà été calculé
    if (i, j, L, R) in memo:
        return memo[(i, j, L, R)]
    # Si il ne reste qu'un seul élément à traiter
    if i == j:
        sortie = (L + R) * A[i]
        memo[(i, j, L, R)] = sortie
        return sortie
    # Cas où i dépasse j, il n'y a plus rien à faire
    if i > j:
        return 0

    # On va essayer toutes les coupures possibles
    minimum = 10 ** 18
    for k in range(i, j + 1):
        gauche = dp(i, k - 1, L, L + R)
        droite = dp(k + 1, j, L + R, R)
        val = gauche + droite + A[k] * (L + R)
        if val < minimum:
            minimum = val

    memo[(i, j, L, R)] = minimum
    return minimum

# On lance l'algo en ignorant les extrémités de la liste (A[0] et A[N-1])
resultat = dp(1, N - 2, 1, 1)
# Puis on ajoute les bords
print(resultat + A[0] + A[-1])
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003567959647625685
    2. '(N' → logprob: -9.000356674194336
    3. '('' → logprob: -9.500356674194336
    4. ''' → logprob: -9.875356674194336
    5. '`' → logprob: -10.500356674194336
    6. '```' → logprob: -10.500356674194336
    7. '("("' → logprob: -11.375356674194336
    8. '()' → logprob: -11.500356674194336
    9. '(input' → logprob: -11.625356674194336
    10. '(
' → logprob: -12.250356674194336

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5405747294425964
    2. ')' → logprob: -0.9155747294425964
    3. '()' → logprob: -4.290574550628662
    4. '())' → logprob: -5.915574550628662
    5. '(
' → logprob: -8.41557502746582
    6. '```' → logprob: -9.16557502746582
    7. '))' → logprob: -9.29057502746582
    8. '")' → logprob: -9.54057502746582
    9. '(

' → logprob: -9.79057502746582
    10. '`)' → logprob: -9.79057502746582

Token 5: 'A' (ID: 32)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.31470787525177
    2. 'if' → logprob: -2.1897077560424805
    3. 'i' → logprob: -3.3147077560424805
    4. 'a' → logprob: -3.6897077560424805
    5. 's' → logprob: -3.9397077560424805
    6. 'x' → logprob: -4.3147077560424805
    7. '*' → logprob: -4.8147077560424805
    8. 'f' → logprob: -4.9397077560424805
    9. '`' → logprob: -4.9397077560424805
    10. ')' → logprob: -4.9397077560424805

Token 6: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0008909751777537167
    2. '\[' → logprob: -8.375890731811523
    3. '[]' → logprob: -8.500890731811523
    4. '.' → logprob: -9.250890731811523
    5. '[A' → logprob: -9.375890731811523
    6. '[i' → logprob: -9.500890731811523
    7. '[:]' → logprob: -10.125890731811523
    8. ')' → logprob: -10.250890731811523
    9. '+' → logprob: -10.750890731811523
    10. '=' → logprob: -11.125890731811523

Token 7: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.5184847712516785
    2. 'list' → logprob: -1.5184848308563232
    3. ' []' → logprob: -2.2684848308563232
    4. '[]' → logprob: -2.8934848308563232
    5. ' [' → logprob: -3.8934848308563232
    6. '[' → logprob: -5.518484592437744
    7. '[input' → logprob: -7.018484592437744
    8. '[list' → logprob: -7.518484592437744
    9. '[int' → logprob: -7.643484592437744
    10. 'input' → logprob: -8.643485069274902

Token 8: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0006220113136805594
    2. '(range' → logprob: -7.625621795654297
    3. '(input' → logprob: -10.250621795654297
    4. '(A' → logprob: -10.500621795654297
    5. '(
' → logprob: -11.125621795654297
    6. '[' → logprob: -11.500621795654297
    7. '()' → logprob: -12.000621795654297
    8. '```' → logprob: -12.375621795654297
    9. ' (' → logprob: -12.500621795654297
    10. ')' → logprob: -12.750621795654297

Token 9: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.395532488822937
    2. '(' → logprob: -1.270532488822937
    3. '(str' → logprob: -3.6455326080322266
    4. '(input' → logprob: -4.020532608032227
    5. '(lambda' → logprob: -7.020532608032227
    6. 'int' → logprob: -8.270532608032227
    7. '(eval' → logprob: -8.770532608032227
    8. ')' → logprob: -8.895532608032227
    9. '```' → logprob: -9.145532608032227
    10. '(
' → logprob: -9.520532608032227

Token 10: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.19793032109737396
    2. '(' → logprob: -1.8229303359985352
    3. ',input' → logprob: -4.822930335998535
    4. ',' → logprob: -5.322930335998535
    5. '))' → logprob: -5.822930335998535
    6. ')' → logprob: -7.197930335998535
    7. '(int' → logprob: -8.322930335998535
    8. '<|end|>' → logprob: -8.947930335998535
    9. '(eval' → logprob: -9.072930335998535
    10. 'input' → logprob: -9.197930335998535

Token 11: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0789729580283165
    2. ' input' → logprob: -2.5789730548858643
    3. '(input' → logprob: -9.453972816467285
    4. ',input' → logprob: -12.578972816467285
    5. ')' → logprob: -14.828972816467285
    6. '=input' → logprob: -14.953972816467285
    7. '<input' → logprob: -15.453972816467285
    8. ' ' → logprob: -15.703972816467285
    9. '	input' → logprob: -15.953972816467285
    10. '```' → logprob: -15.953972816467285

Token 12: '().' (ID: 1454)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.9849405884742737
    2. '()' → logprob: -1.359940528869629
    3. '().' → logprob: -1.609940528869629
    4. '())' → logprob: -1.859940528869629
    5. '(' → logprob: -4.609940528869629
    6. '()));' → logprob: -6.359940528869629
    7. '()>' → logprob: -7.109940528869629
    8. ')' → logprob: -7.859940528869629
    9. '))' → logprob: -8.109940528869629
    10. '())))' → logprob: -8.234940528869629

Token 13: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0004909569397568703
    2. 'strip' → logprob: -7.750491142272949
    3. 'rstrip' → logprob: -9.75049114227295
    4. ' split' → logprob: -13.75049114227295
    5. '(split' → logprob: -14.75049114227295
    6. 'spl' → logprob: -15.12549114227295
    7. ')' → logprob: -15.62549114227295
    8. 's' → logprob: -16.125490188598633
    9. 'sp' → logprob: -16.875490188598633
    10. 'replace' → logprob: -17.750490188598633

Token 14: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.798519492149353
    2. '))' → logprob: -0.923519492149353
    3. ')' → logprob: -2.5485196113586426
    4. '())' → logprob: -2.7985196113586426
    5. '(' → logprob: -4.798519611358643
    6. '()' → logprob: -5.423519611358643
    7. ')))' → logprob: -7.673519611358643
    8. '('' → logprob: -7.923519611358643
    9. '())))' → logprob: -8.798519134521484
    10. ''))' → logprob: -9.673519134521484

Token 15: '#' (ID: 2)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.566312551498413
    2. 'max' → logprob: -1.816312551498413
    3. 'count' → logprob: -2.066312551498413
    4. 'for' → logprob: -2.316312551498413
    5. 'A' → logprob: -2.816312551498413
    6. 'result' → logprob: -2.941312551498413
    7. 'sum' → logprob: -2.941312551498413
    8. 'dp' → logprob: -3.066312551498413
    9. 'c' → logprob: -3.816312551498413
    10. 'd' → logprob: -3.941312551498413

Token 16: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.3086655139923096
    2. 's' → logprob: -1.6836655139923096
    3. ' for' → logprob: -1.8086655139923096
    4. 'print' → logprob: -2.1836655139923096
    5. 'A' → logprob: -3.4336655139923096
    6. 'count' → logprob: -3.4336655139923096
    7. 'sum' → logprob: -3.4336655139923096
    8. 'max' → logprob: -3.8086655139923096
    9. 'result' → logprob: -3.9336655139923096
    10. 'ans' → logprob: -4.1836652755737305

Token 17: ' va' (ID: 3423)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.004910192918032408
    2. 'es' → logprob: -5.879909992218018
    3. 's' → logprob: -7.754909992218018
    4. 'ly' → logprob: -7.879909992218018
    5. '_' → logprob: -8.004910469055176
    6. 'el' → logprob: -8.379910469055176
    7. '_e' → logprob: -8.504910469055176
    8. ' e' → logprob: -9.379910469055176
    9. 'eline' → logprob: -9.879910469055176
    10. '_s' → logprob: -9.879910469055176

Token 18: ' utiliser' (ID: 43227)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9213548302650452
    2. 'tr' → logprob: -1.4213547706604004
    3. '_' → logprob: -2.2963547706604004
    4. 't' → logprob: -2.7963547706604004
    5. ' compter' → logprob: -3.6713547706604004
    6. 'r' → logprob: -3.6713547706604004
    7. ' calcul' → logprob: -3.9213547706604004
    8. ' tr' → logprob: -4.2963547706604
    9. 'v' → logprob: -4.4213547706604
    10. ' iter' → logprob: -4.5463547706604

Token 19: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.23668897151947021
    2. ' une' → logprob: -2.1116890907287598
    3. ' a' → logprob: -3.1116890907287598
    4. ' dp' → logprob: -4.48668909072876
    5. 'a' → logprob: -5.11168909072876
    6. 'un' → logprob: -5.23668909072876
    7. 'une' → logprob: -5.36168909072876
    8. ' defaultdict' → logprob: -5.73668909072876
    9. 'dp' → logprob: -5.98668909072876
    10. ' collections' → logprob: -6.11168909072876

Token 20: ' diction' (ID: 155259)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.20213177800178528
    2. 'e' → logprob: -2.452131748199463
    3. 'a' → logprob: -3.077131748199463
    4. ' d' → logprob: -4.077131748199463
    5. '_' → logprob: -4.952131748199463
    6. 'c' → logprob: -5.202131748199463
    7. 's' → logprob: -5.577131748199463
    8. ' defaultdict' → logprob: -5.577131748199463
    9. 'p' → logprob: -5.827131748199463
    10. 'dp' → logprob: -6.327131748199463

Token 21: 'naire' (ID: 30464)
  Prédit: 'naire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'naire' → logprob: -0.014291849918663502
    2. 'aire' → logprob: -4.264291763305664
    3. 'a' → logprob: -9.389291763305664
    4. 'n' → logprob: -11.139291763305664
    5. 'naires' → logprob: -11.514291763305664
    6. 'ary' → logprob: -11.639291763305664
    7. 'na' → logprob: -12.389291763305664
    8. '```' → logprob: -12.889291763305664
    9. ' a' → logprob: -14.139291763305664
    10. 'ar' → logprob: -14.389291763305664

Token 22: ' pour' (ID: 1930)
  Prédit: 'counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'counts' → logprob: -0.7934722900390625
    2. 'freq' → logprob: -1.7934722900390625
    3. 'count' → logprob: -2.1684722900390625
    4. 'd' → logprob: -2.2934722900390625
    5. 'frequency' → logprob: -2.5434722900390625
    6. 'fre' → logprob: -3.4184722900390625
    7. ' d' → logprob: -4.4184722900390625
    8. ' counts' → logprob: -4.4184722900390625
    9. 'counter' → logprob: -4.6684722900390625
    10. ' freq' → logprob: -5.6684722900390625

Token 23: ' mém' (ID: 136981)
  Prédit: ' compter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' compter' → logprob: -0.011992343701422215
    2. ' stock' → logprob: -4.761992454528809
    3. ' compt' → logprob: -6.261992454528809
    4. 'comp' → logprob: -7.511992454528809
    5. ' garder' → logprob: -8.386992454528809
    6. 'count' → logprob: -8.636992454528809
    7. ' comp' → logprob: -8.886992454528809
    8. ' suivre' → logprob: -9.386992454528809
    9. 'stock' → logprob: -9.636992454528809
    10. ' compte' → logprob: -9.886992454528809

Token 24: 'or' (ID: 267)
  Prédit: 'or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -2.3080716346157715e-05
    2. ' or' → logprob: -11.250022888183594
    3. 'r' → logprob: -13.375022888183594
    4. 'orer' → logprob: -13.500022888183594
    5. '(or' → logprob: -13.500022888183594
    6. 'o' → logprob: -13.750022888183594
    7. 'oris' → logprob: -14.250022888183594
    8. 'ror' → logprob: -14.500022888183594
    9. '|' → logprob: -14.750022888183594
    10. '	or' → logprob: -14.875022888183594

Token 25: 'iser' (ID: 7466)
  Prédit: 'iser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iser' → logprob: -0.027240045368671417
    2. 'er' → logprob: -4.15224027633667
    3. 'izer' → logprob: -5.77724027633667
    4. 'is' → logprob: -6.40224027633667
    5. 'r' → logprob: -7.40224027633667
    6. 'izing' → logprob: -7.46474027633667
    7. 'ser' → logprob: -7.58974027633667
    8. 'i' → logprob: -7.58974027633667
    9. ' ' → logprob: -7.71474027633667
    10. ' is' → logprob: -7.83974027633667

Token 26: ' les' (ID: 1341)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.5190950036048889
    2. ' les' → logprob: -1.8940949440002441
    3. ' ' → logprob: -2.394094944000244
    4. ' le' → logprob: -2.769094944000244
    5. ' counts' → logprob: -3.644094944000244
    6. ' l' → logprob: -3.769094944000244
    7. 'les' → logprob: -4.769094944000244
    8. 'le' → logprob: -5.019094944000244
    9. 'counts' → logprob: -5.394094944000244
    10. ' d' → logprob: -5.894094944000244

Token 27: ' résultats' (ID: 48985)
  Prédit: ' fré'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' fré' → logprob: -0.54366135597229
    2. 'fr' → logprob: -2.04366135597229
    3. 'indices' → logprob: -3.04366135597229
    4. 'positions' → logprob: -3.04366135597229
    5. ' indices' → logprob: -3.16866135597229
    6. ' occurrences' → logprob: -3.16866135597229
    7. ' positions' → logprob: -4.168661117553711
    8. 'occ' → logprob: -4.418661117553711
    9. 'occur' → logprob: -4.918661117553711
    10. 'fre' → logprob: -4.918661117553711

Token 28: ' déjà' (ID: 21229)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.4776163697242737
    2. 'dp' → logprob: -1.102616310119629
    3. ' dp' → logprob: -4.352616310119629
    4. ' ' → logprob: -4.477616310119629
    5. 'f' → logprob: -5.352616310119629
    6. 'count' → logprob: -5.602616310119629
    7. 'frequency' → logprob: -5.852616310119629
    8. ' d' → logprob: -5.977616310119629
    9. 'counts' → logprob: -6.227616310119629
    10. 's' → logprob: -6.352616310119629

Token 29: ' calcul' (ID: 7559)
  Prédit: 'calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calcul' → logprob: -0.48243555426597595
    2. ' calcul' → logprob: -0.9824355840682983
    3. 'cal' → logprob: -5.107435703277588
    4. 'trait' → logprob: -7.732435703277588
    5. ' vus' → logprob: -8.23243522644043
    6. 'computed' → logprob: -8.48243522644043
    7. 'calc' → logprob: -8.48243522644043
    8. ' obten' → logprob: -8.60743522644043
    9. 'vus' → logprob: -8.98243522644043
    10. 'comput' → logprob: -8.98243522644043

Token 30: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.0001673061487963423
    2. 'é' → logprob: -9.000166893005371
    3. 'es' → logprob: -10.125166893005371
    4. 'ès' → logprob: -13.250166893005371
    5. 'ées' → logprob: -14.000166893005371
    6. 'ÉS' → logprob: -14.625166893005371
    7. '{' → logprob: -15.250166893005371
    8. 's' → logprob: -16.000167846679688
    9. '```' → logprob: -16.500167846679688
    10. '#' → logprob: -16.875167846679688

Token 31: '
' (ID: 198)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.2174375355243683
    2. ' dp' → logprob: -1.842437505722046
    3. 'memo' → logprob: -4.092437744140625
    4. 'd' → logprob: -4.717437744140625
    5. ' memo' → logprob: -5.342437744140625
    6. ' d' → logprob: -6.717437744140625
    7. 'def' → logprob: -6.967437744140625
    8. 's' → logprob: -7.217437744140625
    9. 'count' → logprob: -7.592437744140625
    10. 'm' → logprob: -7.717437744140625

Token 32: 'memo' (ID: 113822)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.05109109356999397
    2. ' dp' → logprob: -3.801091194152832
    3. 'd' → logprob: -3.926091194152832
    4. 'memo' → logprob: -5.051091194152832
    5. ' memo' → logprob: -8.301091194152832
    6. 'count' → logprob: -8.551091194152832
    7. 'result' → logprob: -9.051091194152832
    8. ' d' → logprob: -9.051091194152832
    9. 'm' → logprob: -9.176091194152832
    10. 'res' → logprob: -9.801091194152832

Token 33: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6957963109016418
    2. ' =' → logprob: -0.6957963109016418
    3. 'al' → logprob: -6.195796489715576
    4. '={}' → logprob: -8.945796012878418
    5. 'ation' → logprob: -9.445796012878418
    6. '[' → logprob: -9.945796012878418
    7. 'ization' → logprob: -10.320796012878418
    8. 'izer' → logprob: -10.445796012878418
    9. '=[]' → logprob: -10.570796012878418
    10. 'ary' → logprob: -10.695796012878418

Token 34: ' {}

' (ID: 21724)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -5.44312788406387e-05
    2. ' {}' → logprob: -10.000054359436035
    3. 'dict' → logprob: -12.375054359436035
    4. '{' → logprob: -12.375054359436035
    5. '{}
' → logprob: -15.875054359436035
    6. '{})' → logprob: -15.875054359436035
    7. '{}

' → logprob: -16.25005531311035
    8. '={}' → logprob: -16.62505531311035
    9. '{},' → logprob: -17.62505531311035
    10. ' dict' → logprob: -17.87505531311035

Token 35: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0003647826088126749
    2. '
' → logprob: -8.000365257263184
    3. 'for' → logprob: -11.000365257263184
    4. ' def' → logprob: -12.000365257263184
    5. ')' → logprob: -12.875365257263184
    6. 'd' → logprob: -13.875365257263184
    7. '\' → logprob: -14.500365257263184
    8. '#' → logprob: -15.000365257263184
    9. 'de' → logprob: -15.000365257263184
    10. '  
' → logprob: -15.250365257263184

Token 36: ' dp' (ID: 21546)
  Prédit: ' fib'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fib' → logprob: -1.2639933824539185
    2. ' fibonacci' → logprob: -1.2639933824539185
    3. ' f' → logprob: -1.6389933824539185
    4. ' factorial' → logprob: -2.763993263244629
    5. ' factor' → logprob: -3.388993263244629
    6. ' count' → logprob: -3.388993263244629
    7. ' max' → logprob: -3.888993263244629
    8. ' dfs' → logprob: -4.013993263244629
    9. ' subset' → logprob: -4.138993263244629
    10. ' dp' → logprob: -4.638993263244629

Token 37: '(i' (ID: 3649)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0394023098051548
    2. '(i' → logprob: -3.5394022464752197
    3. '(n' → logprob: -5.039402484893799
    4. '(index' → logprob: -6.914402484893799
    5. '(x' → logprob: -7.539402484893799
    6. '(k' → logprob: -8.16440200805664
    7. '(s' → logprob: -8.28940200805664
    8. '(max' → logprob: -9.03940200805664
    9. '(num' → logprob: -9.03940200805664
    10. '(idx' → logprob: -9.03940200805664

Token 38: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012023737654089928
    2. '):' → logprob: -8.126202583312988
    3. ' ,' → logprob: -8.251202583312988
    4. ',j' → logprob: -8.376202583312988
    5. ')' → logprob: -8.626202583312988
    6. ',n' → logprob: -9.501202583312988
    7. ',k' → logprob: -9.751202583312988
    8. ',i' → logprob: -10.001202583312988
    9. ',b' → logprob: -12.126202583312988
    10. ',)' → logprob: -12.376202583312988

Token 39: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.8267524242401123
    2. 's' → logprob: -2.3267524242401123
    3. 'k' → logprob: -2.4517524242401123
    4. ' j' → logprob: -2.5767524242401123
    5. 'mask' → logprob: -2.8267524242401123
    6. ' s' → logprob: -3.4517524242401123
    7. 'current' → logprob: -3.5767524242401123
    8. ' k' → logprob: -4.201752662658691
    9. 'sum' → logprob: -4.201752662658691
    10. 'm' → logprob: -4.326752662658691

Token 40: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.046877361834049225
    2. ')' → logprob: -3.671877384185791
    3. ',' → logprob: -3.921877384185791
    4. ' ):' → logprob: -7.921877384185791
    5. '):
' → logprob: -9.046876907348633
    6. ')):' → logprob: -10.671876907348633
    7. ' )' → logprob: -11.546876907348633
    8. ':' → logprob: -11.796876907348633
    9. ' ,' → logprob: -12.671876907348633
    10. ')>' → logprob: -12.796876907348633

Token 41: ' L' (ID: 451)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' k' → logprob: -1.2243982553482056
    2. ' turn' → logprob: -1.2243982553482056
    3. 'k' → logprob: -1.4743982553482056
    4. 'turn' → logprob: -3.224398136138916
    5. ' player' → logprob: -3.474398136138916
    6. ' ' → logprob: -3.724398136138916
    7. ' t' → logprob: -4.224398136138916
    8. 't' → logprob: -4.599398136138916
    9. ' True' → logprob: -4.724398136138916
    10. ' is' → logprob: -4.724398136138916

Token 42: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1761263608932495
    2. '):' → logprob: -1.9261263608932495
    3. ')' → logprob: -4.551126480102539
    4. '):
' → logprob: -6.176126480102539
    5. ' ,' → logprob: -6.551126480102539
    6. 'eft' → logprob: -7.926126480102539
    7. '):
' → logprob: -8.051126480102539
    8. ')):' → logprob: -8.551126480102539
    9. '=' → logprob: -8.676126480102539
    10. '):

' → logprob: -8.801126480102539

Token 43: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.18095837533473969
    2. ' R' → logprob: -1.8059583902359009
    3. ' ' → logprob: -7.805958271026611
    4. ')' → logprob: -8.68095874786377
    5. 'U' → logprob: -8.80595874786377
    6. ',' → logprob: -9.68095874786377
    7. 'r' → logprob: -9.74345874786377
    8. ' U' → logprob: -10.11845874786377
    9. ' )' → logprob: -10.86845874786377
    10. ' ' → logprob: -10.93095874786377

Token 44: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006445830687880516
    2. ',' → logprob: -5.38144588470459
    3. ')' → logprob: -6.38144588470459
    4. ' ):' → logprob: -9.13144588470459
    5. ')):' → logprob: -11.75644588470459
    6. '):
' → logprob: -12.00644588470459
    7. ':' → logprob: -12.88144588470459
    8. ' ' → logprob: -13.88144588470459
    9. '):
' → logprob: -14.00644588470459
    10. ' ,' → logprob: -14.38144588470459

Token 45: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004097277764230967
    2. '):' → logprob: -5.7540974617004395
    3. ' :' → logprob: -7.2540974617004395
    4. ')' → logprob: -9.379096984863281
    5. '   ' → logprob: -9.629096984863281
    6. ':return' → logprob: -11.379096984863281
    7. ' ' → logprob: -11.504096984863281
    8. ',' → logprob: -11.629096984863281
    9. '():' → logprob: -11.879096984863281
    10. ':
' → logprob: -12.004096984863281

Token 46: ' #' (ID: 1069)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8177489042282104
    2. 'if' → logprob: -1.3177489042282104
    3. '   ' → logprob: -1.8177489042282104
    4. ')' → logprob: -3.0677490234375
    5. ' if' → logprob: -3.0677490234375
    6. '):' → logprob: -3.8177490234375
    7. ' ' → logprob: -4.6927490234375
    8. '    ' → logprob: -6.3177490234375
    9. '  ' → logprob: -7.3177490234375
    10. ' :' → logprob: -7.4427490234375

Token 47: ' On' (ID: 2160)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6330063939094543
    2. 'if' → logprob: -0.7580063939094543
    3. '   ' → logprob: -8.50800609588623
    4. ')' → logprob: -9.38300609588623
    5. ' (' → logprob: -10.00800609588623
    6. ' ' → logprob: -11.25800609588623
    7. ' key' → logprob: -11.38300609588623
    8. 'key' → logprob: -11.50800609588623
    9. '    ' → logprob: -11.63300609588623
    10. 'return' → logprob: -12.50800609588623

Token 48: ' regarde' (ID: 115760)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.387775182723999
    2. 'if' → logprob: -1.262775182723999
    3. ')' → logprob: -4.012775421142578
    4. ' ' → logprob: -4.512775421142578
    5. ':' → logprob: -6.262775421142578
    6. ',' → logprob: -6.637775421142578
    7. '  ' → logprob: -7.137775421142578
    8. ' ' → logprob: -7.137775421142578
    9. ' key' → logprob: -7.512775421142578
    10. '   ' → logprob: -7.512775421142578

Token 49: ' si' (ID: 1784)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.1958347111940384
    2. 'if' → logprob: -1.945834755897522
    3. '<|end|>' → logprob: -4.195834636688232
    4. ')' → logprob: -4.695834636688232
    5. ' si' → logprob: -5.570834636688232
    6. ' ' → logprob: -5.945834636688232
    7. 'si' → logprob: -6.445834636688232
    8. ',' → logprob: -7.445834636688232
    9. '  ' → logprob: -7.570834636688232
    10. ' )' → logprob: -8.32083511352539

Token 50: ' le' (ID: 505)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.2020483911037445
    2. ' (' → logprob: -1.702048420906067
    3. '(j' → logprob: -7.827048301696777
    4. '(' → logprob: -8.827048301696777
    5. ' ' → logprob: -10.077048301696777
    6. '(n' → logprob: -11.452048301696777
    7. ' i' → logprob: -11.827048301696777
    8. 'i' → logprob: -12.327048301696777
    9. '(l' → logprob: -12.327048301696777
    10. '[i' → logprob: -12.327048301696777

Token 51: ' résultat' (ID: 62556)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.013181759044528008
    2. ' (' → logprob: -4.388181686401367
    3. '(j' → logprob: -7.513181686401367
    4. '(' → logprob: -9.388181686401367
    5. '[i' → logprob: -12.388181686401367
    6. ' ' → logprob: -12.513181686401367
    7. '(len' → logprob: -12.638181686401367
    8. '(a' → logprob: -12.638181686401367
    9. 'clé' → logprob: -12.763181686401367
    10. ' i' → logprob: -12.888181686401367

Token 52: ' a' (ID: 261)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.8411579132080078
    2. ' ' → logprob: -1.0911579132080078
    3. ' is' → logprob: -2.591157913208008
    4. 'est' → logprob: -2.966157913208008
    5. ' a' → logprob: -3.341157913208008
    6. ')' → logprob: -3.966157913208008
    7. '_' → logprob: -4.341157913208008
    8. ' (' → logprob: -4.341157913208008
    9. ' in' → logprob: -4.841157913208008
    10. 'a' → logprob: -5.841157913208008

Token 53: ' déjà' (ID: 21229)
  Prédit: ' déjà'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' déjà' → logprob: -0.2207408845424652
    2. ' été' → logprob: -2.220740795135498
    3. 'dé' → logprob: -2.595740795135498
    4. 'été' → logprob: -5.095740795135498
    5. ' dé' → logprob: -5.845740795135498
    6. ' ' → logprob: -7.345740795135498
    7. ' deja' → logprob: -7.470740795135498
    8. ' already' → logprob: -7.595740795135498
    9. 't' → logprob: -7.595740795135498
    10. 'already' → logprob: -7.845740795135498

Token 54: ' été' (ID: 9799)
  Prédit: ' été'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' été' → logprob: -0.15536142885684967
    2. 'été' → logprob: -2.6553614139556885
    3. ' been' → logprob: -2.9053614139556885
    4. '_' → logprob: -4.780361652374268
    5. 'been' → logprob: -6.530361652374268
    6. 'êt' → logprob: -6.655361652374268
    7. 'ex' → logprob: -6.780361652374268
    8. 'être' → logprob: -6.780361652374268
    9. ' ' → logprob: -7.030361652374268
    10. ')' → logprob: -7.280361652374268

Token 55: ' calcul' (ID: 7559)
  Prédit: 'calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calcul' → logprob: -0.09778687357902527
    2. ' calcul' → logprob: -2.4727869033813477
    3. 'cal' → logprob: -4.847786903381348
    4. 'memo' → logprob: -7.472786903381348
    5. 'calc' → logprob: -8.597786903381348
    6. ' mém' → logprob: -9.597786903381348
    7. ' memo' → logprob: -10.097786903381348
    8. 'comput' → logprob: -10.347786903381348
    9. 'mem' → logprob: -11.097786903381348
    10. 'Calcul' → logprob: -11.222786903381348

Token 56: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.0004123192047700286
    2. 'e' → logprob: -9.000411987304688
    3. 'ée' → logprob: -9.375411987304688
    4. ')' → logprob: -10.125411987304688
    5. '}' → logprob: -10.625411987304688
    6. 'és' → logprob: -10.750411987304688
    7. ']' → logprob: -11.375411987304688
    8. '=' → logprob: -11.375411987304688
    9. '   ' → logprob: -11.625411987304688
    10. 'ré' → logprob: -11.750411987304688

Token 57: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7580945491790771
    2. '   ' → logprob: -1.5080945491790771
    3. ':' → logprob: -2.008094549179077
    4. ')' → logprob: -3.383094549179077
    5. '<|end|>' → logprob: -3.383094549179077
    6. ',' → logprob: -3.633094549179077
    7. ' :' → logprob: -3.883094549179077
    8. '    ' → logprob: -4.133094787597656
    9. '  ' → logprob: -4.508094787597656
    10. ' ,' → logprob: -5.133094787597656

Token 58: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8852549195289612
    2. '   ' → logprob: -0.8852549195289612
    3. ')' → logprob: -2.1352548599243164
    4. ' ' → logprob: -4.135254859924316
    5. 'if' → logprob: -4.510254859924316
    6. ' if' → logprob: -5.010254859924316
    7. ',' → logprob: -5.385254859924316
    8. '.' → logprob: -5.385254859924316
    9. '    ' → logprob: -6.260254859924316
    10. ':return' → logprob: -6.385254859924316

Token 59: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.9679447412490845
    2. ' if' → logprob: -1.2179447412490845
    3. ')' → logprob: -1.7179447412490845
    4. ':' → logprob: -2.217944622039795
    5. '   ' → logprob: -4.592944622039795
    6. ' ' → logprob: -4.842944622039795
    7. ' (' → logprob: -5.467944622039795
    8. ' )' → logprob: -5.842944622039795
    9. '):' → logprob: -5.842944622039795
    10. '(' → logprob: -6.092944622039795

Token 60: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.011981625109910965
    2. '(i' → logprob: -4.51198148727417
    3. '(' → logprob: -7.01198148727417
    4. '(j' → logprob: -11.136981964111328
    5. ' ' → logprob: -11.511981964111328
    6. '(I' → logprob: -13.011981964111328
    7. '(n' → logprob: -13.261981964111328
    8. '(f' → logprob: -13.386981964111328
    9. '(m' → logprob: -14.011981964111328
    10. '(a' → logprob: -15.011981964111328

Token 61: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0002100965939462185
    2. ' i' → logprob: -8.50020980834961
    3. '(i' → logprob: -12.25020980834961
    4. ' (' → logprob: -14.12520980834961
    5. ' ' → logprob: -14.50020980834961
    6. ',' → logprob: -15.75020980834961
    7. '   ' → logprob: -16.00020980834961
    8. '	i' → logprob: -16.25020980834961
    9. ',i' → logprob: -16.37520980834961
    10. '(' → logprob: -17.00020980834961

Token 62: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001119499676860869
    2. ',j' → logprob: -6.876119613647461
    3. ' ,' → logprob: -9.626119613647461
    4. ',
' → logprob: -11.376119613647461
    5. ',i' → logprob: -12.501119613647461
    6. '<|end|>' → logprob: -13.251119613647461
    7. ',

' → logprob: -13.376119613647461
    8. ' ' → logprob: -14.751119613647461
    9. '‌,' → logprob: -15.126119613647461
    10. 'j' → logprob: -16.06361961364746

Token 63: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.004623679909855127
    2. ' j' → logprob: -5.379623889923096
    3. ',j' → logprob: -13.754623413085938
    4. '	j' → logprob: -14.129623413085938
    5. ' ' → logprob: -14.379623413085938
    6. '   ' → logprob: -14.379623413085938
    7. ')' → logprob: -15.754623413085938
    8. '    ' → logprob: -15.879623413085938
    9. ',' → logprob: -16.129623413085938
    10. '  ' → logprob: -16.379623413085938

Token 64: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0018086989875882864
    2. ')' → logprob: -6.3768086433410645
    3. ',i' → logprob: -10.126809120178223
    4. ',L' → logprob: -10.376809120178223
    5. ' ,' → logprob: -10.501809120178223
    6. ',j' → logprob: -13.751809120178223
    7. '   ' → logprob: -14.001809120178223
    8. ',)' → logprob: -14.251809120178223
    9. ',
' → logprob: -14.501809120178223
    10. '),' → logprob: -14.501809120178223

Token 65: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.07913091033697128
    2. ' L' → logprob: -2.5791308879852295
    3. ',L' → logprob: -8.829131126403809
    4. ',' → logprob: -10.204131126403809
    5. ')' → logprob: -10.454131126403809
    6. '	L' → logprob: -11.454131126403809
    7. '    ' → logprob: -12.329131126403809
    8. ' ' → logprob: -12.454131126403809
    9. ')L' → logprob: -12.954131126403809
    10. '   ' → logprob: -13.579131126403809

Token 66: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011927806917810813
    2. ' ,' → logprob: -9.12511920928955
    3. ')' → logprob: -12.37511920928955
    4. ',
' → logprob: -13.62511920928955
    5. ',R' → logprob: -13.87511920928955
    6. ',j' → logprob: -14.00011920928955
    7. '<|end|>' → logprob: -14.12511920928955
    8. ',

' → logprob: -15.37511920928955
    9. ',r' → logprob: -15.50011920928955
    10. '‌,' → logprob: -15.81261920928955

Token 67: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.06994710117578506
    2. ' R' → logprob: -2.6949470043182373
    3. ')' → logprob: -11.694947242736816
    4. ' ' → logprob: -13.194947242736816
    5. '   ' → logprob: -15.069947242736816
    6. ' )' → logprob: -16.1949462890625
    7. '  ' → logprob: -16.4449462890625
    8. 'r' → logprob: -17.1949462890625
    9. '	R' → logprob: -17.1949462890625
    10. '    ' → logprob: -17.8824462890625

Token 68: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.1424973713001236e-05
    2. ' )' → logprob: -10.500031471252441
    3. '')' → logprob: -13.625031471252441
    4. ' in' → logprob: -13.625031471252441
    5. 'in' → logprob: -14.875031471252441
    6. '`)' → logprob: -15.250031471252441
    7. '")' → logprob: -15.500031471252441
    8. '）' → logprob: -16.375030517578125
    9. ',)' → logprob: -16.375030517578125
    10. ')
' → logprob: -16.625030517578125

Token 69: ' in' (ID: 306)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007056219037622213
    2. 'in' → logprob: -5.75705623626709
    3. ' in' → logprob: -5.75705623626709
    4. ' )' → logprob: -7.25705623626709
    5. ' ' → logprob: -13.13205623626709
    6. ']' → logprob: -13.38205623626709
    7. '）' → logprob: -13.88205623626709
    8. '`)' → logprob: -16.007055282592773
    9. '')' → logprob: -16.132055282592773
    10. 'In' → logprob: -16.257055282592773

Token 70: ' memo' (ID: 46393)
  Prédit: ' memo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' memo' → logprob: -0.01416798122227192
    2. 'memo' → logprob: -4.264167785644531
    3. ' meme' → logprob: -13.014167785644531
    4. ')' → logprob: -14.514167785644531
    5. '.memo' → logprob: -14.639167785644531
    6. ' memoir' → logprob: -14.889167785644531
    7. 'm' → logprob: -15.264167785644531
    8. ' ' → logprob: -15.639167785644531
    9. ' ' → logprob: -15.889167785644531
    10. ' memory' → logprob: -16.51416778564453

Token 71: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12750354409217834
    2. '):' → logprob: -2.1275036334991455
    3. ' :' → logprob: -8.627503395080566
    4. ':return' → logprob: -8.627503395080566
    5. ')' → logprob: -9.127503395080566
    6. '):
' → logprob: -10.002503395080566
    7. ':
' → logprob: -10.002503395080566
    8. ' ):' → logprob: -12.377503395080566
    9. '}:' → logprob: -12.502503395080566
    10. '>:' → logprob: -12.627503395080566

Token 72: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0060782297514379025
    2. ':return' → logprob: -6.256078243255615
    3. ' :' → logprob: -6.381078243255615
    4. '       ' → logprob: -6.881078243255615
    5. ':
' → logprob: -6.881078243255615
    6. '   ' → logprob: -8.381077766418457
    7. '):' → logprob: -9.256077766418457
    8. ' :
' → logprob: -10.506077766418457
    9. ')' → logprob: -11.506077766418457
    10. ' return' → logprob: -11.631077766418457

Token 73: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.2411910891532898
    2. 'return' (adapté à ' return') → logprob: -1.8661911487579346
    3. '       ' → logprob: -3.1161911487579346
    4. ':return' → logprob: -5.2411909103393555
    5. '           ' → logprob: -5.8661909103393555
    6. '   ' → logprob: -5.8661909103393555
    7. ' ' → logprob: -6.4911909103393555
    8. '    ' → logprob: -6.9911909103393555
    9. ':' → logprob: -7.6161909103393555
    10. ' 
' → logprob: -7.8661909103393555

Token 74: ' memo' (ID: 46393)
  Prédit: ' memo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' memo' → logprob: -0.12694092094898224
    2. 'memo' → logprob: -2.126940965652466
    3. ' meme' → logprob: -11.876940727233887
    4. ' ' → logprob: -13.501940727233887
    5. 'mem' → logprob: -14.251940727233887
    6. 'm' → logprob: -14.251940727233887
    7. '0' → logprob: -14.251940727233887
    8. ' mem' → logprob: -14.376940727233887
    9. '.memo' → logprob: -14.626940727233887
    10. ' memoir' → logprob: -14.876940727233887

Token 75: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.0005679258611053228
    2. '[i' → logprob: -7.50056791305542
    3. '[' → logprob: -11.250568389892578
    4. '[
' → logprob: -14.250568389892578
    5. '(i' → logprob: -14.500568389892578
    6. '[]' → logprob: -15.625568389892578
    7. '```' → logprob: -15.625568389892578
    8. '

' → logprob: -15.875568389892578
    9. '[](' → logprob: -16.625568389892578
    10. '[I' → logprob: -16.875568389892578

Token 76: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -5.319370302458992e-06
    2. ' i' → logprob: -12.250005722045898
    3. '   ' → logprob: -16.3750057220459
    4. ')i' → logprob: -16.3750057220459
    5. ')' → logprob: -16.5000057220459
    6. ' ' → logprob: -16.5000057220459
    7. '(i' → logprob: -17.8750057220459
    8. ''i' → logprob: -17.8750057220459
    9. '	i' → logprob: -18.1250057220459
    10. 'I' → logprob: -18.3750057220459

Token 77: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.386147626675665e-05
    2. ' ,' → logprob: -10.250073432922363
    3. ',j' → logprob: -10.875073432922363
    4. ',i' → logprob: -11.500073432922363
    5. ')' → logprob: -11.875073432922363
    6. '<|end|>' → logprob: -13.875073432922363
    7. ' ' → logprob: -15.250073432922363
    8. '‌,' → logprob: -15.375073432922363
    9. ',n' → logprob: -15.875073432922363
    10. '),' → logprob: -16.12507438659668

Token 78: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -6.611323624383658e-05
    2. ' j' → logprob: -9.625065803527832
    3. '<|end|>' → logprob: -17.50006675720215
    4. ',j' → logprob: -17.62506675720215
    5. ')' → logprob: -18.62506675720215
    6. '	j' → logprob: -19.00006675720215
    7. '```' → logprob: -19.25006675720215
    8. ' ' → logprob: -19.25006675720215
    9. ',' → logprob: -19.62506675720215
    10. '   ' → logprob: -19.75006675720215

Token 79: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.2723104848410003e-05
    2. ' ,' → logprob: -11.250022888183594
    3. ',L' → logprob: -11.625022888183594
    4. ')]' → logprob: -14.750022888183594
    5. 'L' → logprob: -16.125022888183594
    6. ')' → logprob: -16.625022888183594
    7. '   ' → logprob: -16.875022888183594
    8. ',R' → logprob: -17.125022888183594
    9. '```' → logprob: -17.750022888183594
    10. ',
' → logprob: -18.250022888183594

Token 80: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.0021859495900571346
    2. ' L' → logprob: -6.127185821533203
    3. '   ' → logprob: -14.627185821533203
    4. ' ' → logprob: -15.127185821533203
    5. '	L' → logprob: -16.877185821533203
    6. ')' → logprob: -17.377185821533203
    7. '  ' → logprob: -17.877185821533203
    8. '    ' → logprob: -18.002185821533203
    9. ',' → logprob: -18.377185821533203
    10. ')L' → logprob: -18.377185821533203

Token 81: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003727582807186991
    2. ',R' → logprob: -8.500372886657715
    3. ' ,' → logprob: -9.000372886657715
    4. '+' → logprob: -10.500372886657715
    5. ')' → logprob: -12.500372886657715
    6. ',
' → logprob: -12.500372886657715
    7. ')]' → logprob: -13.000372886657715
    8. '   ' → logprob: -13.000372886657715
    9. '-' → logprob: -13.375372886657715
    10. 'R' → logprob: -13.750372886657715

Token 82: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.00033832306507974863
    2. ' R' → logprob: -8.000338554382324
    3. ')' → logprob: -13.000338554382324
    4. '1' → logprob: -15.250338554382324
    5. 'j' → logprob: -16.000337600708008
    6. ' ' → logprob: -16.125337600708008
    7. ')]' → logprob: -16.625337600708008
    8. '   ' → logprob: -17.250337600708008
    9. '0' → logprob: -18.000337600708008
    10. '	R' → logprob: -18.875337600708008

Token 83: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -4.1080467781284824e-05
    2. ')]
' → logprob: -11.500041007995605
    3. ']' → logprob: -11.625041007995605
    4. ' )' → logprob: -12.000041007995605
    5. ')])' → logprob: -12.000041007995605
    6. ')' → logprob: -12.500041007995605
    7. '   ' → logprob: -13.500041007995605
    8. '])]' → logprob: -13.750041007995605
    9. '])' → logprob: -14.250041007995605
    10. ')].' → logprob: -14.250041007995605

Token 84: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7399191856384277
    2. '
' → logprob: -1.2399191856384277
    3. '    
' → logprob: -1.6149191856384277
    4. '  
' → logprob: -4.364919185638428
    5. '<|end|>' → logprob: -4.614919185638428
    6. '\n' → logprob: -5.239919185638428
    7. '   
' → logprob: -5.989919185638428
    8. '```' → logprob: -6.864919185638428
    9. ')' → logprob: -7.239919185638428
    10. ' 
' → logprob: -7.239919185638428

Token 85: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30679723620414734
    2. ' if' → logprob: -1.6817972660064697
    3. 'if' → logprob: -2.6817972660064697
    4. '#' (adapté à ' #') → logprob: -5.306797027587891
    5. '    
' → logprob: -5.681797027587891
    6. '   
' → logprob: -8.30679702758789
    7. ' #' → logprob: -8.43179702758789
    8. '<|end|>' → logprob: -8.55679702758789
    9. '  ' → logprob: -8.80679702758789
    10. ' 
' → logprob: -8.93179702758789

Token 86: ' Si' (ID: 7832)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.18186795711517334
    2. ' if' → logprob: -1.8068679571151733
    3. '   ' → logprob: -6.806868076324463
    4. '#' → logprob: -7.056868076324463
    5. '```' → logprob: -9.806867599487305
    6. ' #' → logprob: -10.056867599487305
    7. 'If' → logprob: -11.181867599487305
    8. '
' → logprob: -12.181867599487305
    9. 'Si' → logprob: -12.431867599487305
    10. '    
' → logprob: -12.431867599487305

Token 87: ' il' (ID: 1793)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.03837652876973152
    2. 'i' → logprob: -3.288376569747925
    3. ' j' → logprob: -8.163376808166504
    4. 'j' → logprob: -10.288376808166504
    5. ' ' → logprob: -12.288376808166504
    6. '	i' → logprob: -12.538376808166504
    7. ' L' → logprob: -13.288376808166504
    8. ' ' → logprob: -13.600876808166504
    9. ' (' → logprob: -13.850876808166504
    10. 'L' → logprob: -13.975876808166504

Token 88: ' ne' (ID: 453)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5706399083137512
    2. ' i' → logprob: -1.1956398487091064
    3. ' n' → logprob: -2.8206398487091064
    4. 'n' → logprob: -3.1956398487091064
    5. 's' → logprob: -3.9456398487091064
    6. ' s' → logprob: -5.9456400871276855
    7. ' ' → logprob: -5.9456400871276855
    8. ' faut' → logprob: -6.0706400871276855
    9. '<|end|>' → logprob: -7.0706400871276855
    10. 'y' → logprob: -7.1956400871276855

Token 89: ' reste' (ID: 26769)
  Prédit: ' reste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' reste' → logprob: -0.48069363832473755
    2. 'reste' → logprob: -1.2306935787200928
    3. 'rest' → logprob: -3.1056935787200928
    4. 'y' → logprob: -3.7306935787200928
    5. 'f' → logprob: -4.855693817138672
    6. 's' → logprob: -4.980693817138672
    7. ' rest' → logprob: -5.605693817138672
    8. ' y' → logprob: -6.855693817138672
    9. 'n' → logprob: -7.730693817138672
    10. ' restent' → logprob: -8.480693817138672

Token 90: ' qu' (ID: 474)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.6199252009391785
    2. ' qu' → logprob: -1.7449252605438232
    3. ' plus' → logprob: -1.7449252605438232
    4. 'qu' → logprob: -2.3699252605438232
    5. ' que' → logprob: -4.369925022125244
    6. 'r' → logprob: -5.869925022125244
    7. 'que' → logprob: -6.619925022125244
    8. ' ' → logprob: -7.119925022125244
    9. '   ' → logprob: -7.619925022125244
    10. 'auc' → logprob: -8.619925498962402

Token 91: ''un' (ID: 9788)
  Prédit: ''un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''un' → logprob: -0.1024777889251709
    2. ''une' → logprob: -2.602477788925171
    3. ''à' → logprob: -3.977477788925171
    4. ''' → logprob: -6.60247802734375
    5. 'a' → logprob: -7.35247802734375
    6. 'u' → logprob: -7.47747802734375
    7. 'un' → logprob: -7.72747802734375
    8. 'e' → logprob: -7.97747802734375
    9. '’un' → logprob: -8.22747802734375
    10. ''a' → logprob: -8.47747802734375

Token 92: ' seul' (ID: 33041)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.7744210362434387
    2. ' seul' → logprob: -0.8994210362434387
    3. 'se' → logprob: -2.524420976638794
    4. ' élément' → logprob: -3.524420976638794
    5. 'element' → logprob: -4.024421215057373
    6. ' seule' → logprob: -6.024421215057373
    7. 'e' → logprob: -7.149421215057373
    8. ' ' → logprob: -8.149420738220215
    9. ' element' → logprob: -8.399420738220215
    10. '```' → logprob: -8.524420738220215

Token 93: ' élément' (ID: 99627)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.04827219620347023
    2. 'element' → logprob: -3.423272132873535
    3. ' élément' → logprob: -4.298272132873535
    4. 'token' → logprob: -8.048272132873535
    5. 'é' → logprob: -9.173272132873535
    6. 'elem' → logprob: -9.548272132873535
    7. '```' → logprob: -9.673272132873535
    8. ' element' → logprob: -9.798272132873535
    9. 'nombre' → logprob: -10.298272132873535
    10. 'él' → logprob: -10.798272132873535

Token 94: ' à' (ID: 1221)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14638397097587585
    2. '   ' → logprob: -2.6463840007781982
    3. ',' → logprob: -2.8963840007781982
    4. ':return' → logprob: -5.146383762359619
    5. ':
' → logprob: -5.896383762359619
    6. ' :' → logprob: -7.896383762359619
    7. ' if' → logprob: -8.396384239196777
    8. ' return' → logprob: -8.521384239196777
    9. 'return' → logprob: -9.146384239196777
    10. 'if' → logprob: -9.271384239196777

Token 95: ' traiter' (ID: 105852)
  Prédit: 'prendre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prendre' → logprob: -0.38425469398498535
    2. 'cho' → logprob: -2.0092546939849854
    3. 'tr' → logprob: -2.7592546939849854
    4. ' prendre' → logprob: -3.1342546939849854
    5. ' choisir' → logprob: -3.7592546939849854
    6. 'consider' → logprob: -4.509254455566406
    7. 'trait' → logprob: -4.759254455566406
    8. 'p' → logprob: -5.759254455566406
    9. ' traiter' → logprob: -6.134254455566406
    10. ' considérer' → logprob: -6.384254455566406

Token 96: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03288109600543976
    2. ',' → logprob: -3.782881021499634
    3. '   ' → logprob: -5.032881259918213
    4. ':
' → logprob: -6.282881259918213
    5. ' :' → logprob: -7.407881259918213
    6. ':return' → logprob: -7.657881259918213
    7. '       ' → logprob: -10.157880783081055
    8. ' ,' → logprob: -10.657880783081055
    9. ' :
' → logprob: -11.157880783081055
    10. ' and' → logprob: -12.157880783081055

Token 97: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.32329705357551575
    2. '   ' → logprob: -1.3232970237731934
    3. ',' → logprob: -5.323297023773193
    4. ':
' → logprob: -5.448297023773193
    5. '       ' → logprob: -8.198297500610352
    6. ':return' → logprob: -8.198297500610352
    7. ' :' → logprob: -9.948297500610352
    8. ' if' → logprob: -9.948297500610352
    9. ' and' → logprob: -9.948297500610352
    10. 'if' → logprob: -10.573297500610352

Token 98: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5475847721099854
    2. ' if' → logprob: -1.2975847721099854
    3. 'if' (adapté à ' if') → logprob: -1.9225847721099854
    4. ':' → logprob: -6.297584533691406
    5. ',' → logprob: -8.922584533691406
    6. ' and' → logprob: -9.797584533691406
    7. '  ' → logprob: -10.047584533691406
    8. ' ' → logprob: -10.297584533691406
    9. ':
' → logprob: -10.547584533691406
    10. '       ' → logprob: -10.922584533691406

Token 99: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.08910435438156128
    2. 'i' → logprob: -2.464104413986206
    3. ' j' → logprob: -8.964104652404785
    4. 'j' → logprob: -10.589104652404785
    5. '	i' → logprob: -12.339104652404785
    6. ' ' → logprob: -12.839104652404785
    7. ' (' → logprob: -13.339104652404785
    8. '(i' → logprob: -13.839104652404785
    9. ' ' → logprob: -13.964104652404785
    10. '(' → logprob: -15.401604652404785

Token 100: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.35496318340301514
    2. '==' → logprob: -1.2299631834030151
    3. ' >' → logprob: -5.354963302612305
    4. '>' → logprob: -6.354963302612305
    5. ' ' → logprob: -11.104963302612305
    6. '+' → logprob: -11.979963302612305
    7. ' >=' → logprob: -12.854963302612305
    8. '>=' → logprob: -13.104963302612305
    9. '=' → logprob: -13.229963302612305
    10. ' ' → logprob: -13.354963302612305

Token 101: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.03805239871144295
    2. ' j' → logprob: -3.2880523204803467
    3. ' ' → logprob: -11.788052558898926
    4. '   ' → logprob: -13.038052558898926
    5. '	j' → logprob: -14.288052558898926
    6. '  ' → logprob: -15.038052558898926
    7. '    ' → logprob: -16.16305160522461
    8. ' ' → logprob: -16.16305160522461
    9. ',' → logprob: -17.66305160522461
    10. ':j' → logprob: -17.91305160522461

Token 102: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003326480044052005
    2. ':
' → logprob: -5.878326416015625
    3. ':return' → logprob: -7.878326416015625
    4. ' :' → logprob: -9.003326416015625
    5. '   ' → logprob: -11.753326416015625
    6. '):' → logprob: -12.128326416015625
    7. ':
' → logprob: -13.628326416015625
    8. ' :
' → logprob: -13.753326416015625
    9. ' and' → logprob: -14.003326416015625
    10. ')' → logprob: -14.503326416015625

Token 103: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003109145909547806
    2. ' return' → logprob: -6.253108978271484
    3. '   ' → logprob: -7.378108978271484
    4. 'return' → logprob: -8.128108978271484
    5. '
' → logprob: -8.878108978271484
    6. ':' → logprob: -10.253108978271484
    7. '        
' → logprob: -11.003108978271484
    8. ' if' → logprob: -11.253108978271484
    9. ':
' → logprob: -11.878108978271484
    10. ',' → logprob: -11.878108978271484

Token 104: ' sortie' (ID: 52761)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.3946060836315155
    2. 'return' → logprob: -1.769606113433838
    3. ' if' → logprob: -2.269606113433838
    4. '   ' → logprob: -3.394606113433838
    5. 'if' → logprob: -4.394606113433838
    6. '       ' → logprob: -5.269606113433838
    7. '    ' → logprob: -7.644606113433838
    8. ' ' → logprob: -8.39460563659668
    9. '           ' → logprob: -8.64460563659668
    10. ' memo' → logprob: -9.51960563659668

Token 105: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06036025285720825
    2. '=' → logprob: -3.1853601932525635
    3. ' ' → logprob: -5.310360431671143
    4. '_' → logprob: -6.435360431671143
    5. 's' → logprob: -6.560360431671143
    6. ' return' → logprob: -6.810360431671143
    7. '[' → logprob: -7.060360431671143
    8. 'A' → logprob: -7.060360431671143
    9. '   ' → logprob: -7.185360431671143
    10. ' R' → logprob: -7.310360431671143

Token 106: ' (' (ID: 350)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.1059706211090088
    2. 'max' → logprob: -1.4809706211090088
    3. 'L' → logprob: -2.105970621109009
    4. '1' → logprob: -2.105970621109009
    5. '0' → logprob: -2.730970621109009
    6. 'R' → logprob: -3.605970621109009
    7. ' max' → logprob: -3.605970621109009
    8. ' A' → logprob: -3.730970621109009
    9. ' ' → logprob: -4.23097038269043
    10. ' L' → logprob: -4.73097038269043

Token 107: 'L' (ID: 43)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.7240439653396606
    2. 'L' → logprob: -1.5990439653396606
    3. 'R' → logprob: -1.7240439653396606
    4. '1' → logprob: -2.724043846130371
    5. '0' → logprob: -3.474043846130371
    6. ' A' → logprob: -4.474043846130371
    7. ' R' → logprob: -5.349043846130371
    8. ' L' → logprob: -5.474043846130371
    9. 'max' → logprob: -5.474043846130371
    10. 'abs' → logprob: -5.849043846130371

Token 108: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.2212822437286377
    2. '==' → logprob: -1.7212822437286377
    3. ' ==' → logprob: -2.2212822437286377
    4. ' ^' → logprob: -2.7212822437286377
    5. '-' → logprob: -2.9712822437286377
    6. '*' → logprob: -2.9712822437286377
    7. '^' → logprob: -2.9712822437286377
    8. '<=' → logprob: -3.0962822437286377
    9. ' +' → logprob: -3.3462822437286377
    10. ' <=' → logprob: -3.3462822437286377

Token 109: ' R' (ID: 460)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.5116370320320129
    2. ' A' → logprob: -1.0116369724273682
    3. 'R' → logprob: -3.761636972427368
    4. ' R' → logprob: -5.011637210845947
    5. '1' → logprob: -5.511637210845947
    6. ' ' → logprob: -6.761637210845947
    7. ' (' → logprob: -7.511637210845947
    8. '(A' → logprob: -8.136636734008789
    9. '(' → logprob: -8.886636734008789
    10. '[A' → logprob: -9.511636734008789

Token 110: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14989164471626282
    2. '+' → logprob: -2.3998916149139404
    3. ' +' → logprob: -3.2748916149139404
    4. '-' → logprob: -5.1498918533325195
    5. ' -' → logprob: -6.1498918533325195
    6. '*' → logprob: -7.0248918533325195
    7. ')*' → logprob: -7.1498918533325195
    8. ' )' → logprob: -7.3998918533325195
    9. '==' → logprob: -9.39989185333252
    10. '>' → logprob: -9.89989185333252

Token 111: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.2572881281375885
    2. ' *' → logprob: -1.6322880983352661
    3. '+' → logprob: -4.007287979125977
    4. ' +' → logprob: -5.007287979125977
    5. ')' → logprob: -5.257287979125977
    6. '-' → logprob: -7.757287979125977
    7. ')*' → logprob: -8.382287979125977
    8. ' -' → logprob: -8.632287979125977
    9. '*A' → logprob: -9.257287979125977
    10. '%' → logprob: -9.507287979125977

Token 112: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.10034069418907166
    2. ' A' → logprob: -2.3503406047821045
    3. '(A' → logprob: -9.975340843200684
    4. ' ' → logprob: -10.600340843200684
    5. ' (' → logprob: -10.725340843200684
    6. '	A' → logprob: -11.475340843200684
    7. '(' → logprob: -11.600340843200684
    8. '   ' → logprob: -11.600340843200684
    9. ' ' → logprob: -12.475340843200684
    10. '  ' → logprob: -13.912840843200684

Token 113: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.129266067640856e-05
    2. 'i' → logprob: -11.250020980834961
    3. '[' → logprob: -12.375020980834961
    4. '[j' → logprob: -12.500020980834961
    5. '[I' → logprob: -15.875020980834961
    6. '[
' → logprob: -16.25002098083496
    7. '```' → logprob: -17.75002098083496
    8. ' i' → logprob: -18.12502098083496
    9. 'j' → logprob: -18.37502098083496
    10. '_i' → logprob: -18.50002098083496

Token 114: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.019046610221266747
    2. ']' → logprob: -4.269046783447266
    3. ')
' → logprob: -6.144046783447266
    4. '])' → logprob: -6.269046783447266
    5. ' )' → logprob: -7.769046783447266
    6. '   ' → logprob: -8.519046783447266
    7. '[i' → logprob: -9.519046783447266
    8. '[' → logprob: -11.019046783447266
    9. '）' → logprob: -11.269046783447266
    10. ']
' → logprob: -11.269046783447266

Token 115: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5142070651054382
    2. '   ' → logprob: -1.014207124710083
    3. '
' → logprob: -3.764207124710083
    4. 'memo' → logprob: -4.764206886291504
    5. ' memo' → logprob: -5.014206886291504
    6. '
' → logprob: -8.139206886291504
    7. '    
' → logprob: -8.514206886291504
    8. 'return' → logprob: -9.264206886291504
    9. '\n' → logprob: -9.264206886291504
    10. '        
' → logprob: -9.764206886291504

Token 116: ' memo' (ID: 46393)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'memo' (adapté à ' memo') → logprob: -0.24359650909900665
    2. '   ' → logprob: -2.1185965538024902
    3. 'return' → logprob: -3.1185965538024902
    4. ' memo' → logprob: -3.3685965538024902
    5. '       ' → logprob: -4.24359655380249
    6. ' return' → logprob: -6.11859655380249
    7. '
' → logprob: -7.74359655380249
    8. ' ' → logprob: -8.868596076965332
    9. '    
' → logprob: -9.743596076965332
    10. '        
' → logprob: -10.868596076965332

Token 117: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -1.7120533811976202e-05
    2. '[' → logprob: -11.000017166137695
    3. '[...]' → logprob: -15.625017166137695
    4. '[((' → logprob: -16.125017166137695
    5. '[
' → logprob: -17.000017166137695
    6. '[]' → logprob: -17.375017166137695
    7. '.setdefault' → logprob: -17.625017166137695
    8. '[key' → logprob: -18.375017166137695
    9. '(' → logprob: -19.000017166137695
    10. '```' → logprob: -19.500017166137695

Token 118: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -4.60414821645827e-06
    2. ' i' → logprob: -12.375004768371582
    3. '(i' → logprob: -15.375004768371582
    4. '(' → logprob: -15.750004768371582
    5. ' (' → logprob: -17.375003814697266
    6. ')' → logprob: -17.500003814697266
    7. ' ' → logprob: -17.625003814697266
    8. ')i' → logprob: -17.875003814697266
    9. '   ' → logprob: -18.875003814697266
    10. '  ' → logprob: -19.250003814697266

Token 119: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.590104698669165e-05
    2. ',j' → logprob: -9.500085830688477
    3. ' ,' → logprob: -11.625085830688477
    4. ',i' → logprob: -13.625085830688477
    5. ')' → logprob: -15.000085830688477
    6. ',
' → logprob: -15.125085830688477
    7. '```' → logprob: -17.000085830688477
    8. '‌,' → logprob: -17.125085830688477
    9. ' ' → logprob: -17.250085830688477
    10. 'j' → logprob: -17.687585830688477

Token 120: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0013301216531544924
    2. ' j' → logprob: -6.6263298988342285
    3. 'i' → logprob: -13.251330375671387
    4. ')' → logprob: -14.001330375671387
    5. '   ' → logprob: -14.376330375671387
    6. ' ' → logprob: -14.876330375671387
    7. '    ' → logprob: -15.751330375671387
    8. '  ' → logprob: -16.12632942199707
    9. '	j' → logprob: -16.37632942199707
    10. '```' → logprob: -17.00132942199707

Token 121: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6933962106704712
    2. ')]' → logprob: -0.6933962106704712
    3. ']' → logprob: -9.06839656829834
    4. ')' → logprob: -9.81839656829834
    5. ' ,' → logprob: -10.56839656829834
    6. ',L' → logprob: -11.44339656829834
    7. ' )' → logprob: -11.81839656829834
    8. ')])' → logprob: -12.31839656829834
    9. '])' → logprob: -12.31839656829834
    10. ',
' → logprob: -12.81839656829834

Token 122: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.00043138445471413434
    2. ' L' → logprob: -7.750431537628174
    3. ' ' → logprob: -15.250431060791016
    4. ')' → logprob: -15.625431060791016
    5. '   ' → logprob: -16.125431060791016
    6. 'i' → logprob: -17.000431060791016
    7. '	L' → logprob: -17.000431060791016
    8. ')L' → logprob: -17.000431060791016
    9. 'A' → logprob: -17.250431060791016
    10. '0' → logprob: -17.625431060791016

Token 123: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003382038848940283
    2. ',R' → logprob: -8.375338554382324
    3. ' ,' → logprob: -9.250338554382324
    4. 'R' → logprob: -12.000338554382324
    5. ')]' → logprob: -12.500338554382324
    6. ')' → logprob: -13.750338554382324
    7. ',
' → logprob: -15.500338554382324
    8. ' R' → logprob: -15.750338554382324
    9. '+' → logprob: -16.250337600708008
    10. '```' → logprob: -16.625337600708008

Token 124: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.00043710620957426727
    2. ' R' → logprob: -7.750437259674072
    3. ')' → logprob: -12.500436782836914
    4. ' ' → logprob: -14.000436782836914
    5. ')]' → logprob: -14.250436782836914
    6. '0' → logprob: -15.125436782836914
    7. 'i' → logprob: -15.500436782836914
    8. 'A' → logprob: -15.500436782836914
    9. '1' → logprob: -15.750436782836914
    10. '   ' → logprob: -16.375436782836914

Token 125: ')]' (ID: 15710)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02429259940981865
    2. ')]' → logprob: -3.7742927074432373
    3. ')' → logprob: -7.024292469024658
    4. '])' → logprob: -8.774292945861816
    5. ']=' → logprob: -13.399292945861816
    6. ')])' → logprob: -16.5242919921875
    7. ' ]' → logprob: -16.5242919921875
    8. ']
' → logprob: -16.7742919921875
    9. '))' → logprob: -17.1492919921875
    10. '])]' → logprob: -17.1492919921875

Token 126: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10020678490400314
    2. ' =' → logprob: -2.3502068519592285
    3. '=
' → logprob: -16.85020637512207
    4. '=

' → logprob: -17.10020637512207
    5. '＝' → logprob: -17.72520637512207
    6. ']' → logprob: -17.72520637512207
    7. '=}' → logprob: -17.72520637512207
    8. ')' → logprob: -18.10020637512207
    9. ']=' → logprob: -18.60020637512207
    10. ' =
' → logprob: -18.60020637512207

Token 127: ' sortie' (ID: 52761)
  Prédit: 'sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sort' → logprob: -0.0006283254479058087
    2. ' sortie' → logprob: -7.375628471374512
    3. 'sorted' → logprob: -14.875628471374512
    4. 'sou' → logprob: -15.000628471374512
    5. 'sorting' → logprob: -15.250628471374512
    6. ' sort' → logprob: -15.375628471374512
    7. ' ' → logprob: -15.750628471374512
    8. 'sur' → logprob: -15.750628471374512
    9. 'out' → logprob: -16.500627517700195
    10. 's' → logprob: -16.625627517700195

Token 128: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005443345289677382
    2. '   ' → logprob: -8.000544548034668
    3. 'return' → logprob: -8.750544548034668
    4. ' return' → logprob: -10.625544548034668
    5. '
' → logprob: -10.750544548034668
    6. '<|end|>' → logprob: -13.625544548034668
    7. '	return' → logprob: -13.875544548034668
    8. '    
' → logprob: -14.750544548034668
    9. '      ' → logprob: -14.875544548034668
    10. '        
' → logprob: -15.000544548034668

Token 129: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011984437005594373
    2. '   ' → logprob: -6.7511982917785645
    3. 'return' → logprob: -10.626198768615723
    4. ' return' → logprob: -13.376198768615723
    5. '           ' → logprob: -14.751198768615723
    6. '<|end|>' → logprob: -14.876198768615723
    7. '```' → logprob: -15.001198768615723
    8. '
' → logprob: -15.251198768615723
    9. '	' → logprob: -15.501198768615723
    10. '	return' → logprob: -15.501198768615723

Token 130: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -1.0445127372804563e-05
    2. ' return' → logprob: -11.75001049041748
    3. '       ' → logprob: -13.50001049041748
    4. '   ' → logprob: -14.25001049041748
    5. '
' → logprob: -14.75001049041748
    6. '	return' → logprob: -16.125009536743164
    7. ':return' → logprob: -17.250009536743164
    8. 'eturn' → logprob: -18.500009536743164
    9. '```' → logprob: -18.625009536743164
    10. '        
' → logprob: -18.750009536743164

Token 131: ' sortie' (ID: 52761)
  Prédit: 'sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sort' → logprob: -0.0008067715098150074
    2. ' sortie' → logprob: -7.12580680847168
    3. ' sort' → logprob: -14.00080680847168
    4. 'sou' → logprob: -14.50080680847168
    5. 'sorted' → logprob: -15.12580680847168
    6. ' ' → logprob: -15.62580680847168
    7. 'sorting' → logprob: -15.75080680847168
    8. '_sort' → logprob: -16.12580680847168
    9. '(sort' → logprob: -16.50080680847168
    10. 's' → logprob: -16.50080680847168

Token 132: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05322142690420151
    2. '    
' → logprob: -3.1782214641571045
    3. '
' → logprob: -5.928221225738525
    4. '<|end|>' → logprob: -5.928221225738525
    5. '  
' → logprob: -6.678221225738525
    6. '   
' → logprob: -7.178221225738525
    7. '  ' → logprob: -7.428221225738525
    8. '\n' → logprob: -7.553221225738525
    9. ')' → logprob: -8.053221702575684
    10. '```' → logprob: -8.178221702575684

Token 133: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1602327525615692
    2. 'res' → logprob: -3.2852327823638916
    3. '#' → logprob: -3.6602327823638916
    4. '    
' → logprob: -3.6602327823638916
    5. 'rest' → logprob: -3.9102327823638916
    6. 'max' → logprob: -4.1602325439453125
    7. 's' → logprob: -5.1602325439453125
    8. 'result' → logprob: -5.9102325439453125
    9. '```' → logprob: -6.2852325439453125
    10. 'if' → logprob: -6.5352325439453125

Token 134: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -1.1949268579483032
    2. 'max' → logprob: -1.3199268579483032
    3. 'left' → logprob: -1.9449268579483032
    4. 'res' → logprob: -2.1949267387390137
    5. 'pick' → logprob: -3.1949267387390137
    6. '   ' → logprob: -3.9449267387390137
    7. 'best' → logprob: -4.069926738739014
    8. 'score' → logprob: -4.069926738739014
    9. 'choose' → logprob: -4.194926738739014
    10. 'val' → logprob: -4.194926738739014

Token 135: ' Cas' (ID: 8066)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.9395073652267456
    2. '#' → logprob: -1.5645073652267456
    3. 'left' → logprob: -1.8145073652267456
    4. 'max' → logprob: -2.314507484436035
    5. 'best' → logprob: -3.439507484436035
    6. 'score' → logprob: -3.814507484436035
    7. 'val' → logprob: -3.814507484436035
    8. 'ret' → logprob: -4.439507484436035
    9. 'cho' → logprob: -4.689507484436035
    10. 'result' → logprob: -4.814507484436035

Token 136: ' où' (ID: 15113)
  Prédit: ' où'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' où' → logprob: -0.4536818861961365
    2. ' where' → logprob: -2.0786819458007812
    3. ' #' → logprob: -2.7036819458007812
    4. 'où' → logprob: -3.3286819458007812
    5. '   ' → logprob: -3.9536819458007812
    6. ' gauche' → logprob: -4.078681945800781
    7. ' ' → logprob: -4.328681945800781
    8. ' de' → logprob: -4.453681945800781
    9. 'where' → logprob: -5.078681945800781
    10. ' =' → logprob: -5.328681945800781

Token 137: ' i' (ID: 575)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.6575543880462646
    2. ' on' → logprob: -1.9075543880462646
    3. 'i' → logprob: -2.4075543880462646
    4. 'on' → logprob: -2.4075543880462646
    5. ' L' → logprob: -2.6575543880462646
    6. ' i' → logprob: -3.7825543880462646
    7. 'l' → logprob: -4.532554626464844
    8. 'On' → logprob: -5.032554626464844
    9. 'A' → logprob: -5.157554626464844
    10. ' le' → logprob: -5.282554626464844

Token 138: ' dépasse' (ID: 165701)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5384615659713745
    2. ' +' → logprob: -1.6634615659713745
    3. ' >' → logprob: -1.9134615659713745
    4. ' ==' → logprob: -2.788461685180664
    5. '==' → logprob: -4.663461685180664
    6. '>' → logprob: -5.413461685180664
    7. ' <' → logprob: -5.663461685180664
    8. '<' → logprob: -9.788461685180664
    9. ',' → logprob: -9.788461685180664
    10. ' ' → logprob: -10.038461685180664

Token 139: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.1432899385690689
    2. ' j' → logprob: -2.0182900428771973
    3. '>' → logprob: -7.518290042877197
    4. 'i' → logprob: -10.518289566040039
    5. ' >' → logprob: -10.893289566040039
    6. ' i' → logprob: -11.768289566040039
    7. ' ' → logprob: -12.893289566040039
    8. 'N' → logprob: -13.143289566040039
    9. ',' → logprob: -13.268289566040039
    10. ' ' → logprob: -13.518289566040039

Token 140: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.81472247838974
    2. 'if' → logprob: -1.0647225379943848
    3. ' if' → logprob: -1.5647225379943848
    4. 'return' → logprob: -7.064722537994385
    5. ':' → logprob: -7.189722537994385
    6. 'elif' → logprob: -7.439722537994385
    7. ' return' → logprob: -8.689722061157227
    8. '  ' → logprob: -8.814722061157227
    9. ',' → logprob: -8.814722061157227
    10. '       ' → logprob: -8.939722061157227

Token 141: ' il' (ID: 1793)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3582004904747009
    2. 'return' → logprob: -2.2332005500793457
    3. ' return' → logprob: -2.3582005500793457
    4. '0' → logprob: -2.4832005500793457
    5. ' if' → logprob: -4.983200550079346
    6. 'if' → logprob: -5.733200550079346
    7. '       ' → logprob: -5.983200550079346
    8. ' ' → logprob: -6.358200550079346
    9. '1' → logprob: -7.358200550079346
    10. '  ' → logprob: -8.233200073242188

Token 142: ' n' (ID: 297)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.10760937631130219
    2. ' return' → logprob: -3.357609272003174
    3. 'eturn' → logprob: -3.482609272003174
    4. 's' → logprob: -3.982609272003174
    5. 'n' → logprob: -5.232609272003174
    6. '=' → logprob: -5.607609272003174
    7. ' faut' → logprob: -6.107609272003174
    8. ' vaut' → logprob: -6.232609272003174
    9. ' =' → logprob: -7.107609272003174
    10. '   ' → logprob: -7.607609272003174

Token 143: ''y' (ID: 27913)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.8094485998153687
    2. ''' → logprob: -1.9344485998153687
    3. '>' → logprob: -2.059448719024658
    4. ''y' → logprob: -2.184448719024658
    5. 'return' → logprob: -2.809448719024658
    6. ' n' → logprob: -3.184448719024658
    7. ' faut' → logprob: -3.309448719024658
    8. '=' → logprob: -3.434448719024658
    9. ')' → logprob: -3.684448719024658
    10. ' y' → logprob: -3.684448719024658

Token 144: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.14407436549663544
    2. ' a' → logprob: -2.0190744400024414
    3. 'pas' → logprob: -7.269074440002441
    4. ' pas' → logprob: -8.269074440002441
    5. 'est' → logprob: -8.894074440002441
    6. '```' → logprob: -9.144074440002441
    7. 'plus' → logprob: -9.894074440002441
    8. 's' → logprob: -10.519074440002441
    9. ''a' → logprob: -10.894074440002441
    10. ' rien' → logprob: -11.144074440002441

Token 145: ' plus' (ID: 2932)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09526897966861725
    2. 'r' → logprob: -3.220268964767456
    3. 'pas' → logprob: -3.595268964767456
    4. ' rien' → logprob: -4.095269203186035
    5. 'auc' → logprob: -5.970269203186035
    6. ' ' → logprob: -6.720269203186035
    7. ' aucun' → logprob: -7.095269203186035
    8. '1' → logprob: -7.345269203186035
    9. 'return' → logprob: -7.470269203186035
    10. ' pas' → logprob: -7.595269203186035

Token 146: ' rien' (ID: 23082)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.036649733781814575
    2. 'de' → logprob: -3.786649703979492
    3. '0' → logprob: -5.036649703979492
    4. ' rien' → logprob: -5.536649703979492
    5. ' ' → logprob: -6.286649703979492
    6. 'd' → logprob: -7.661649703979492
    7. ' de' → logprob: -8.661649703979492
    8. 'auc' → logprob: -8.786649703979492
    9. 'n' → logprob: -10.161649703979492
    10. 'return' → logprob: -10.286649703979492

Token 147: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00827660784125328
    2. 'return' → logprob: -5.008276462554932
    3. ' return' → logprob: -7.008276462554932
    4. '       ' → logprob: -8.13327693939209
    5. ':' → logprob: -9.50827693939209
    6. ',' → logprob: -9.88327693939209
    7. '  ' → logprob: -9.88327693939209
    8. '    
' → logprob: -10.00827693939209
    9. ' ' → logprob: -10.13327693939209
    10. '0' → logprob: -10.75827693939209

Token 148: ' faire' (ID: 8119)
  Prédit: 'faire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'faire' → logprob: -0.3052092492580414
    2. 'trait' → logprob: -1.4302092790603638
    3. 'calcul' → logprob: -3.930209159851074
    4. 'process' → logprob: -7.055209159851074
    5. 'ret' → logprob: -7.180209159851074
    6. 'prendre' → logprob: -7.430209159851074
    7. 'tra' → logprob: -7.430209159851074
    8. 'tr' → logprob: -7.680209159851074
    9. 'return' → logprob: -7.930209159851074
    10. ' traiter' → logprob: -8.180209159851074

Token 149: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06005743145942688
    2. ' if' → logprob: -3.5600574016571045
    3. 'if' → logprob: -3.5600574016571045
    4. '    
' → logprob: -7.435057640075684
    5. 'return' → logprob: -8.185057640075684
    6. ' 
' → logprob: -9.185057640075684
    7. '       ' → logprob: -9.310057640075684
    8. ',' → logprob: -9.560057640075684
    9. '    ' → logprob: -9.685057640075684
    10. ' return' → logprob: -9.935057640075684

Token 150: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007767986040562391
    2. 'return' → logprob: -5.757768154144287
    3. ' if' → logprob: -5.882768154144287
    4. 'if' → logprob: -7.007768154144287
    5. ' return' → logprob: -7.632768154144287
    6. '    
' → logprob: -8.257767677307129
    7. '       ' → logprob: -10.007767677307129
    8. ' 
' → logprob: -10.007767677307129
    9. '  ' → logprob: -11.257767677307129
    10. ' ' → logprob: -11.757767677307129

Token 151: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.014613077975809574
    2. ' if' → logprob: -4.264613151550293
    3. 'return' → logprob: -8.264613151550293
    4. '   ' → logprob: -8.889613151550293
    5. 'elif' → logprob: -10.389613151550293
    6. '0' → logprob: -11.139613151550293
    7. ' return' → logprob: -11.764613151550293
    8. ' ' → logprob: -14.889613151550293
    9. '    
' → logprob: -15.139613151550293
    10. '1' → logprob: -16.139612197875977

Token 152: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.03804275393486023
    2. 'i' → logprob: -3.2880427837371826
    3. ' ' → logprob: -13.913043022155762
    4. ' ' → logprob: -15.913043022155762
    5. '	i' → logprob: -15.913043022155762
    6. ' j' → logprob: -16.288042068481445
    7. '(i' → logprob: -16.788042068481445
    8. 'j' → logprob: -17.163042068481445
    9. '>' → logprob: -17.413042068481445
    10. '```' → logprob: -18.413042068481445

Token 153: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.07889452576637268
    2. ' >' → logprob: -2.57889461517334
    3. ' ' → logprob: -13.95389461517334
    4. ')' → logprob: -14.20389461517334
    5. '">' → logprob: -14.32889461517334
    6. ' ' → logprob: -14.70389461517334
    7. '>

' → logprob: -15.07889461517334
    8. '   ' → logprob: -15.45389461517334
    9. '>
' → logprob: -15.70389461517334
    10. '&gt' → logprob: -15.70389461517334

Token 154: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.004620472434908152
    2. ' j' → logprob: -5.379620552062988
    3. ' ' → logprob: -16.504619598388672
    4. '	j' → logprob: -16.629619598388672
    5. '_j' → logprob: -18.379619598388672
    6. '<|end|>' → logprob: -18.379619598388672
    7. '```' → logprob: -18.754619598388672
    8. ' ' → logprob: -19.004619598388672
    9. '$j' → logprob: -19.129619598388672
    10. '   ' → logprob: -19.254619598388672

Token 155: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01896088197827339
    2. ':
' → logprob: -4.018960952758789
    3. ':return' → logprob: -7.143960952758789
    4. '   ' → logprob: -11.518960952758789
    5. 'return' → logprob: -12.268960952758789
    6. ' :' → logprob: -12.768960952758789
    7. '):' → logprob: -13.518960952758789
    8. ':
' → logprob: -14.143960952758789
    9. ' return' → logprob: -15.143960952758789
    10. '       ' → logprob: -15.143960952758789

Token 156: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09793379157781601
    2. 'return' → logprob: -2.847933769226074
    3. '       ' → logprob: -3.597933769226074
    4. ' return' → logprob: -4.847933769226074
    5. '0' → logprob: -9.597933769226074
    6. '
' → logprob: -10.847933769226074
    7. '	return' → logprob: -12.597933769226074
    8. '    
' → logprob: -12.597933769226074
    9. '  ' → logprob: -12.972933769226074
    10. ' ' → logprob: -13.097933769226074

Token 157: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.017487023025751114
    2. ' return' → logprob: -4.267487049102783
    3. '   ' → logprob: -5.767487049102783
    4. '       ' → logprob: -8.767486572265625
    5. '
' → logprob: -10.892486572265625
    6. '    
' → logprob: -11.392486572265625
    7. '0' → logprob: -13.767486572265625
    8. '        
' → logprob: -13.767486572265625
    9. '    ' → logprob: -14.142486572265625
    10. '	return' → logprob: -14.517486572265625

Token 158: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '000' → logprob: -19.375003814697266
    4. '-' → logprob: -20.000003814697266
    5. ' ' → logprob: -20.000003814697266
    6. '۰' → logprob: -20.000003814697266
    7. '   ' → logprob: -20.625003814697266
    8. '```' → logprob: -21.000003814697266
    9. '00' → logprob: -21.125003814697266
    10. 'int' → logprob: -22.000003814697266

Token 159: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. 'float' → logprob: -15.75
    3. '-' → logprob: -16.875
    4. ' ' → logprob: -17.5
    5. '000' → logprob: -19.375
    6. 'int' → logprob: -20.5
    7. '```' → logprob: -20.5
    8. '999' → logprob: -20.75
    9. '00' → logprob: -21.25
    10. '۰' → logprob: -21.3125

Token 160: '

' (ID: 279)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.9889249801635742
    2. 'max' → logprob: -0.9889249801635742
    3. '#' → logprob: -2.613924980163574
    4. 'result' → logprob: -2.988924980163574
    5. '   ' → logprob: -3.238924980163574
    6. 'score' → logprob: -3.488924980163574
    7. 'left' → logprob: -3.613924980163574
    8. '    
' → logprob: -5.113924980163574
    9. ' res' → logprob: -5.113924980163574
    10. 'best' → logprob: -5.863924980163574

Token 161: '   ' (ID: 271)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -1.227362036705017
    2. '   ' → logprob: -1.352362036705017
    3. 'max' → logprob: -2.2273621559143066
    4. '#' → logprob: -2.2273621559143066
    5. 'res' → logprob: -2.3523621559143066
    6. 'pick' → logprob: -3.1023621559143066
    7. 'choose' → logprob: -3.9773621559143066
    8. 'best' → logprob: -3.9773621559143066
    9. 'score' → logprob: -4.352362155914307
    10. '    
' → logprob: -5.102362155914307

Token 162: ' #' (ID: 1069)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -1.1095234155654907
    2. 'res' → logprob: -1.4845234155654907
    3. 'max' → logprob: -2.234523296356201
    4. '#' (adapté à ' #') → logprob: -2.359523296356201
    5. 'pick' → logprob: -2.734523296356201
    6. 'best' → logprob: -3.109523296356201
    7. 'take' → logprob: -3.234523296356201
    8. 'choose' → logprob: -4.234523296356201
    9. 'score' → logprob: -4.484523296356201
    10. 'val' → logprob: -4.609523296356201

Token 163: ' On' (ID: 2160)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.8803186416625977
    2. 'left' → logprob: -1.7553186416625977
    3. '#' → logprob: -2.3803186416625977
    4. 'max' → logprob: -2.5053186416625977
    5. 'score' → logprob: -3.2553186416625977
    6. 'val' → logprob: -3.2553186416625977
    7. 'cho' → logprob: -3.5053186416625977
    8. 'take' → logprob: -3.6303186416625977
    9. 'ret' → logprob: -3.7553186416625977
    10. 'best' → logprob: -3.8803186416625977

Token 164: ' va' (ID: 3423)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5616644024848938
    2. 'continue' → logprob: -2.811664342880249
    3. 'cho' → logprob: -2.936664342880249
    4. 'pe' → logprob: -3.311664342880249
    5. 'max' → logprob: -3.311664342880249
    6. '=' → logprob: -3.686664342880249
    7. 'vais' → logprob: -3.936664342880249
    8. ' peux' → logprob: -4.061664581298828
    9. ' #' → logprob: -4.186664581298828
    10. 'ai' → logprob: -4.561664581298828

Token 165: ' essayer' (ID: 92713)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.0459017753601074
    2. ' calcul' → logprob: -1.5459017753601074
    3. ' prendre' → logprob: -2.7959017753601074
    4. 'prendre' → logprob: -2.7959017753601074
    5. ' max' → logprob: -2.9209017753601074
    6. ' choisir' → logprob: -2.9209017753601074
    7. 'calcul' → logprob: -2.9209017753601074
    8. '#' → logprob: -2.9209017753601074
    9. 'cho' → logprob: -3.0459017753601074
    10. ' #' → logprob: -5.170901775360107

Token 166: ' toutes' (ID: 17502)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.35666295886039734
    2. ' de' → logprob: -1.6066629886627197
    3. 'd' → logprob: -2.8566629886627197
    4. '   ' → logprob: -3.7316629886627197
    5. '#' → logprob: -5.731662750244141
    6. ' d' → logprob: -5.981662750244141
    7. 'for' → logprob: -6.231662750244141
    8. 'une' → logprob: -6.356662750244141
    9. 'cho' → logprob: -6.481662750244141
    10. 'left' → logprob: -7.106662750244141

Token 167: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.6559728384017944
    2. ' les' → logprob: -0.9059728384017944
    3. 'poss' → logprob: -2.905972957611084
    4. 'possible' → logprob: -5.155972957611084
    5. '   ' → logprob: -5.530972957611084
    6. '#' → logprob: -5.905972957611084
    7. ' ' → logprob: -6.405972957611084
    8. ' possibilités' → logprob: -6.405972957611084
    9. 'positions' → logprob: -6.780972957611084
    10. 'i' → logprob: -7.530972957611084

Token 168: ' coup' (ID: 25465)
  Prédit: 'poss'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'poss' → logprob: -0.05809707194566727
    2. 'k' → logprob: -3.5580971240997314
    3. 'p' → logprob: -4.683096885681152
    4. 'positions' → logprob: -5.183096885681152
    5. 'options' → logprob: -5.558096885681152
    6. 'cho' → logprob: -6.058096885681152
    7. 'pos' → logprob: -6.558096885681152
    8. 'possible' → logprob: -6.558096885681152
    9. 'choices' → logprob: -7.183096885681152
    10. 'val' → logprob: -7.183096885681152

Token 169: 'ures' (ID: 1609)
  Prédit: 'ures'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ures' → logprob: -0.323526531457901
    2. 'es' → logprob: -1.3235265016555786
    3. 'e' → logprob: -4.948526382446289
    4. 'ure' → logprob: -6.323526382446289
    5. 's' → logprob: -6.948526382446289
    6. 'u' → logprob: -8.823526382446289
    7. '(' → logprob: -10.323526382446289
    8. 'er' → logprob: -10.448526382446289
    9. '```' → logprob: -10.573526382446289
    10. 'eurs' → logprob: -10.948526382446289

Token 170: ' possibles' (ID: 97753)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.37679150700569153
    2. 'for' → logprob: -2.126791477203369
    3. '   ' → logprob: -2.626791477203369
    4. ',' → logprob: -3.876791477203369
    5. 'max' → logprob: -4.001791477203369
    6. '<|end|>' → logprob: -4.001791477203369
    7. 'possible' → logprob: -4.876791477203369
    8. ' possible' → logprob: -5.001791477203369
    9. ' max' → logprob: -5.126791477203369
    10. ' de' → logprob: -5.376791477203369

Token 171: '
' (ID: 198)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.9637832641601562
    2. 'res' → logprob: -1.3387832641601562
    3. '   ' → logprob: -2.2137832641601562
    4. ' max' → logprob: -2.8387832641601562
    5. 'result' → logprob: -2.9637832641601562
    6. ' res' → logprob: -2.9637832641601562
    7. '
' → logprob: -3.3387832641601562
    8. ' ans' → logprob: -4.838783264160156
    9. ' for' → logprob: -5.088783264160156
    10. 'best' → logprob: -5.088783264160156

Token 172: '   ' (ID: 271)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.159448504447937
    2. 'res' → logprob: -1.284448504447937
    3. '
' → logprob: -2.1594486236572266
    4. ' max' → logprob: -2.2844486236572266
    5. 'result' → logprob: -2.5344486236572266
    6. ' res' → logprob: -2.9094486236572266
    7. '   ' → logprob: -4.284448623657227
    8. ' ans' → logprob: -4.534448623657227
    9. ' result' → logprob: -4.784448623657227
    10. 'best' → logprob: -5.409448623657227

Token 173: ' minimum' (ID: 11085)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.6405798196792603
    2. 'best' → logprob: -1.6405798196792603
    3. 'max' → logprob: -2.0155797004699707
    4. ' res' → logprob: -2.5155797004699707
    5. ' best' → logprob: -3.2655797004699707
    6. ' max' → logprob: -4.515579700469971
    7. 'result' → logprob: -4.640579700469971
    8. 'min' → logprob: -6.265579700469971
    9. 'ans' → logprob: -6.640579700469971
    10. ' ans' → logprob: -6.890579700469971

Token 174: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0032435471657663584
    2. '=' → logprob: -5.753243446350098
    3. '_' → logprob: -10.128243446350098
    4. '_val' → logprob: -11.253243446350098
    5. ' ' → logprob: -12.628243446350098
    6. ' ' → logprob: -13.128243446350098
    7. '_value' → logprob: -13.628243446350098
    8. '_result' → logprob: -13.878243446350098
    9. '_cost' → logprob: -14.003243446350098
    10. '=int' → logprob: -14.378243446350098

Token 175: ' ' (ID: 220)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.0003872974484693259
    2. ' float' → logprob: -8.000387191772461
    3. '10' → logprob: -9.875387191772461
    4. '100' → logprob: -16.62538719177246
    5. '	float' → logprob: -16.75038719177246
    6. '999' → logprob: -17.25038719177246
    7. '(float' → logprob: -17.25038719177246
    8. '1' → logprob: -17.37538719177246
    9. 'int' → logprob: -17.37538719177246
    10. ' ' → logprob: -17.75038719177246

Token 176: '10' (ID: 702)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.00012737659562844783
    2. '10' → logprob: -9.000127792358398
    3. ' float' → logprob: -12.625127792358398
    4. '100' → logprob: -15.000127792358398
    5. '999' → logprob: -16.0001277923584
    6. 'int' → logprob: -16.1251277923584
    7. '1' → logprob: -16.6251277923584
    8. 'None' → logprob: -17.7501277923584
    9. '(float' → logprob: -17.8751277923584
    10. 'flo' → logprob: -18.2501277923584

Token 177: ' **' (ID: 6240)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -0.049950018525123596
    2. '10' → logprob: -3.174950122833252
    3. '18' → logprob: -5.924950122833252
    4. '15' → logprob: -6.549950122833252
    5. '**' → logprob: -7.049950122833252
    6. '7' → logprob: -7.424950122833252
    7. '12' → logprob: -7.674950122833252
    8. '8' → logprob: -8.049949645996094
    9. '6' → logprob: -9.174949645996094
    10. '09' → logprob: -9.174949645996094

Token 178: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -0.06286419928073883
    2. '15' → logprob: -3.562864303588867
    3. '10' → logprob: -3.687864303588867
    4. '18' → logprob: -4.937864303588867
    5. '12' → logprob: -8.062864303588867
    6. '20' → logprob: -10.312864303588867
    7. '16' → logprob: -10.812864303588867
    8. '14' → logprob: -13.187864303588867
    9. '11' → logprob: -13.312864303588867
    10. '19' → logprob: -13.437864303588867

Token 179: '18' (ID: 1157)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.06116119772195816
    2. '15' → logprob: -3.4361612796783447
    3. '10' → logprob: -4.061161041259766
    4. '18' → logprob: -4.686161041259766
    5. '12' → logprob: -7.436161041259766
    6. '16' → logprob: -10.186161041259766
    7. '20' → logprob: -10.436161041259766
    8. '14' → logprob: -11.311161041259766
    9. '7' → logprob: -12.311161041259766
    10. '11' → logprob: -12.561161041259766

Token 180: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.02688070945441723
    2. 'for' → logprob: -4.026880741119385
    3. ' for' → logprob: -5.401880741119385
    4. ' 
' → logprob: -6.776880741119385
    5. '\n' → logprob: -7.026880741119385
    6. '  
' → logprob: -7.151880741119385
    7. '    
' → logprob: -7.276880741119385
    8. '<|end|>' → logprob: -8.151880264282227
    9. '   ' → logprob: -9.026880264282227
    10. '
' → logprob: -9.401880264282227

Token 181: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.297342985868454
    2. ' for' → logprob: -1.7973430156707764
    3. '   ' → logprob: -2.5473430156707764
    4. '
' → logprob: -4.922342777252197
    5. '    
' → logprob: -6.297342777252197
    6. ' 
' → logprob: -6.797342777252197
    7. '  
' → logprob: -6.922342777252197
    8. '\n' → logprob: -7.172342777252197
    9. ' ' → logprob: -7.672342777252197
    10. ')' → logprob: -8.547343254089355

Token 182: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0022219838574528694
    2. ' for' → logprob: -6.127222061157227
    3. '   ' → logprob: -10.252222061157227
    4. '    
' → logprob: -14.627222061157227
    5. '
' → logprob: -14.752222061157227
    6. '	for' → logprob: -15.127222061157227
    7. ' ' → logprob: -16.127222061157227
    8. '```' → logprob: -16.377222061157227
    9. '  
' → logprob: -16.752222061157227
    10. '  ' → logprob: -16.877222061157227

Token 183: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.002623097039759159
    2. ' k' → logprob: -6.127623081207275
    3. 'x' → logprob: -8.627623558044434
    4. 'cut' → logprob: -8.627623558044434
    5. 'mid' → logprob: -10.127623558044434
    6. 'm' → logprob: -11.502623558044434
    7. 'c' → logprob: -12.127623558044434
    8. 'p' → logprob: -12.377623558044434
    9. ' cut' → logprob: -12.627623558044434
    10. 'split' → logprob: -13.002623558044434

Token 184: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00531558133661747
    2. 'in' → logprob: -5.255315780639648
    3. 'range' → logprob: -10.380315780639648
    4. ' ' → logprob: -10.505315780639648
    5. 'k' → logprob: -11.380315780639648
    6. '```' → logprob: -12.880315780639648
    7. '  ' → logprob: -13.255315780639648
    8. ')' → logprob: -14.380315780639648
    9. ',' → logprob: -14.380315780639648
    10. ' ' → logprob: -14.505315780639648

Token 185: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.011048170737922192
    2. ' range' → logprob: -4.511048316955566
    3. '   ' → logprob: -16.13604736328125
    4. '(range' → logprob: -16.13604736328125
    5. ' ' → logprob: -17.01104736328125
    6. '	range' → logprob: -17.26104736328125
    7. '  ' → logprob: -18.26104736328125
    8. 'rang' → logprob: -19.01104736328125
    9. 'r' → logprob: -20.13604736328125
    10. '_range' → logprob: -20.76104736328125

Token 186: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -1.9361264946837764e-07
    2. '(' → logprob: -16.25
    3. 'i' → logprob: -19.875
    4. '(k' → logprob: -20.25
    5. '(I' → logprob: -20.5
    6. '[i' → logprob: -20.625
    7. ' (' → logprob: -20.625
    8. '   ' → logprob: -21.375
    9. ',i' → logprob: -22.375
    10. '(ii' → logprob: -22.5

Token 187: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006491714157164097
    2. ' ,' → logprob: -7.3756489753723145
    3. '+' → logprob: -11.375649452209473
    4. ',j' → logprob: -11.750649452209473
    5. ',k' → logprob: -13.125649452209473
    6. 'k' → logprob: -15.000649452209473
    7. ' +' → logprob: -15.250649452209473
    8. '+,' → logprob: -15.750649452209473
    9. 'j' → logprob: -15.875649452209473
    10. ' ' → logprob: -16.000648498535156

Token 188: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.008614808320999146
    2. ' j' → logprob: -4.758615016937256
    3. '	j' → logprob: -15.383614540100098
    4. '   ' → logprob: -16.508615493774414
    5. ',j' → logprob: -18.383615493774414
    6. '$j' → logprob: -19.258615493774414
    7. ' ' → logprob: -19.508615493774414
    8. ' ' → logprob: -19.883615493774414
    9. ':j' → logprob: -19.883615493774414
    10. '    ' → logprob: -20.008615493774414

Token 189: ' +' (ID: 659)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.013982260599732399
    2. '+' → logprob: -4.76398229598999
    3. '):
' → logprob: -5.26398229598999
    4. ' ):' → logprob: -9.388981819152832
    5. ')' → logprob: -9.638981819152832
    6. '):

' → logprob: -11.263981819152832
    7. '>):' → logprob: -12.763981819152832
    8. ' +' → logprob: -12.763981819152832
    9. '):
' → logprob: -12.763981819152832
    10. '>' → logprob: -13.388981819152832

Token 190: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0036004253197461367
    2. ' ' → logprob: -5.628600597381592
    3. '0' → logprob: -15.753600120544434
    4. ')' → logprob: -15.878600120544434
    5. '   ' → logprob: -16.87860107421875
    6. '  ' → logprob: -17.00360107421875
    7. ' ' → logprob: -17.06610107421875
    8. '```' → logprob: -17.19110107421875
    9. '2' → logprob: -17.75360107421875
    10. '):
' → logprob: -18.62860107421875

Token 191: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.008129963040119e-06
    2. ' ' → logprob: -12.750003814697266
    3. '0' → logprob: -13.750003814697266
    4. '
' → logprob: -18.750003814697266
    5. '2' → logprob: -19.000003814697266
    6. 'k' → logprob: -19.250003814697266
    7. '```' → logprob: -19.500003814697266
    8. '(' → logprob: -20.125003814697266
    9. ')' → logprob: -20.375003814697266
    10. '   ' → logprob: -20.750003814697266

Token 192: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.22564323246479034
    2. '):
' → logprob: -1.600643277168274
    3. '):
' → logprob: -9.725643157958984
    4. ' ):' → logprob: -9.725643157958984
    5. ')' → logprob: -10.225643157958984
    6. '+' → logprob: -10.725643157958984
    7. ' ):
' → logprob: -10.850643157958984
    8. ':' → logprob: -11.100643157958984
    9. '   ' → logprob: -11.350643157958984
    10. ',' → logprob: -12.975643157958984

Token 193: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07635752111673355
    2. ' cost' → logprob: -4.326357364654541
    3. 'cost' → logprob: -4.576357364654541
    4. 'left' → logprob: -5.076357364654541
    5. '   ' → logprob: -5.076357364654541
    6. ' temp' → logprob: -5.201357364654541
    7. ' left' → logprob: -5.326357364654541
    8. 'temp' → logprob: -5.326357364654541
    9. 'val' → logprob: -5.451357364654541
    10. ' val' → logprob: -5.826357364654541

Token 194: ' gauche' (ID: 58367)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.7930564284324646
    2. 'left' → logprob: -1.1680564880371094
    3. 'cost' → logprob: -3.0430564880371094
    4. 'res' → logprob: -3.1680564880371094
    5. 'minimum' → logprob: -3.1680564880371094
    6. 'temp' → logprob: -3.4180564880371094
    7. 'g' → logprob: -4.043056488037109
    8. 'score' → logprob: -4.293056488037109
    9. 'co' → logprob: -5.418056488037109
    10. '   ' → logprob: -5.418056488037109

Token 195: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17094703018665314
    2. '=' → logprob: -2.0459470748901367
    3. '_cost' → logprob: -4.045947074890137
    4. '_val' → logprob: -5.420947074890137
    5. '_c' → logprob: -6.795947074890137
    6. '_co' → logprob: -6.920947074890137
    7. '_score' → logprob: -7.170947074890137
    8. 'cost' → logprob: -7.420947074890137
    9. '_' → logprob: -7.545947074890137
    10. '_value' → logprob: -8.295947074890137

Token 196: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0025792247615754604
    2. ' dp' → logprob: -6.252579212188721
    3. '(L' → logprob: -7.627579212188721
    4. 'A' → logprob: -9.752579689025879
    5. '(dp' → logprob: -10.377579689025879
    6. '(A' → logprob: -10.752579689025879
    7. 'L' → logprob: -11.127579689025879
    8. '0' → logprob: -11.377579689025879
    9. ' (' → logprob: -11.752579689025879
    10. '(' → logprob: -12.127579689025879

Token 197: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -3.128163257315464e-07
    2. '(' → logprob: -16.0
    3. '(k' → logprob: -16.0
    4. '(
' → logprob: -21.0
    5. '(I' → logprob: -21.25
    6. ' (' → logprob: -21.625
    7. 'i' → logprob: -22.375
    8. '(ii' → logprob: -23.0
    9. '[i' → logprob: -23.25
    10. '```' → logprob: -23.375

Token 198: ',' (ID: 11)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.48547446727752686
    2. ',' → logprob: -0.9854744672775269
    3. ',k' → logprob: -4.485474586486816
    4. ' ,' → logprob: -10.235474586486816
    5. ' k' → logprob: -10.985474586486816
    6. '(k' → logprob: -12.610474586486816
    7. '   ' → logprob: -13.110474586486816
    8. '	k' → logprob: -13.985474586486816
    9. '{k' → logprob: -14.110474586486816
    10. '[k' → logprob: -14.985474586486816

Token 199: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.7432603272027336e-06
    2. ' k' → logprob: -14.000001907348633
    3. '   ' → logprob: -14.125001907348633
    4. ' ' → logprob: -15.625001907348633
    5. '    ' → logprob: -18.000001907348633
    6. '	k' → logprob: -18.750001907348633
    7. '(k' → logprob: -19.000001907348633
    8. '  ' → logprob: -19.125001907348633
    9. '[k' → logprob: -19.250001907348633
    10. '{k' → logprob: -20.000001907348633

Token 200: ' -' (ID: 533)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5445089340209961
    2. '-' → logprob: -0.9195089340209961
    3. ' -' → logprob: -3.919508934020996
    4. ' ,' → logprob: -6.919508934020996
    5. ',k' → logprob: -8.919508934020996
    6. '   ' → logprob: -9.919508934020996
    7. 'k' → logprob: -10.169508934020996
    8. ' ' → logprob: -10.357008934020996
    9. '```' → logprob: -11.607008934020996
    10. ')' → logprob: -11.919508934020996

Token 201: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '   ' → logprob: -17.625001907348633
    4. '
' → logprob: -18.125001907348633
    5. '```' → logprob: -18.625001907348633
    6. ',' → logprob: -19.000001907348633
    7. ')' → logprob: -19.500001907348633
    8. '2' → logprob: -19.687501907348633
    9. '  ' → logprob: -19.750001907348633
    10. '    ' → logprob: -20.187501907348633

Token 202: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.292907877039397e-06
    2. ' ' → logprob: -12.75000286102295
    3. ')' → logprob: -16.000003814697266
    4. '```' → logprob: -16.750003814697266
    5. '   ' → logprob: -16.875003814697266
    6. ',' → logprob: -17.125003814697266
    7. '2' → logprob: -17.500003814697266
    8. '
' → logprob: -18.187503814697266
    9. '    ' → logprob: -18.562503814697266
    10. '  ' → logprob: -18.687503814697266

Token 203: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012549920938909054
    2. ' ,' → logprob: -7.376255035400391
    3. ',L' → logprob: -7.501255035400391
    4. 'L' → logprob: -9.75125503540039
    5. ')' → logprob: -12.25125503540039
    6. '(L' → logprob: -12.87625503540039
    7. ',
' → logprob: -13.12625503540039
    8. '(' → logprob: -14.00125503540039
    9. ',k' → logprob: -14.12625503540039
    10. '   ' → logprob: -14.37625503540039

Token 204: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -6.630610641877865e-06
    2. '0' → logprob: -12.500006675720215
    3. ' L' → logprob: -13.250006675720215
    4. 'A' → logprob: -15.500006675720215
    5. '(L' → logprob: -15.500006675720215
    6. '1' → logprob: -16.0000057220459
    7. '   ' → logprob: -16.1250057220459
    8. 'R' → logprob: -16.3750057220459
    9. ',' → logprob: -17.0000057220459
    10. 'l' → logprob: -17.4375057220459

Token 205: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00143083231523633
    2. ',A' → logprob: -7.126430988311768
    3. 'A' → logprob: -8.37643051147461
    4. '+' → logprob: -8.50143051147461
    5. ' ,' → logprob: -9.12643051147461
    6. ',
' → logprob: -11.25143051147461
    7. ',L' → logprob: -11.50143051147461
    8. '   ' → logprob: -11.50143051147461
    9. 'L' → logprob: -11.75143051147461
    10. ',R' → logprob: -12.00143051147461

Token 206: ' L' (ID: 451)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.005211582873016596
    2. 'R' → logprob: -5.880211353302002
    3. 'sum' → logprob: -6.880211353302002
    4. '0' → logprob: -7.005211353302002
    5. '(A' → logprob: -8.50521183013916
    6. 'L' → logprob: -9.63021183013916
    7. ' A' → logprob: -9.75521183013916
    8. '(R' → logprob: -10.38021183013916
    9. '(' → logprob: -10.63021183013916
    10. 'max' → logprob: -10.75521183013916

Token 207: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.45261237025260925
    2. ')' → logprob: -1.9526124000549316
    3. 'A' → logprob: -2.2026124000549316
    4. ' +' → logprob: -2.8276124000549316
    5. '+A' → logprob: -3.0776124000549316
    6. ')+' → logprob: -6.827612400054932
    7. ' A' → logprob: -6.952612400054932
    8. ')
' → logprob: -7.077612400054932
    9. 'R' → logprob: -7.327612400054932
    10. '+k' → logprob: -7.702612400054932

Token 208: ' R' (ID: 460)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.03264090418815613
    2. 'R' → logprob: -3.9076409339904785
    3. '(k' → logprob: -5.6576409339904785
    4. '(A' → logprob: -5.9076409339904785
    5. '(R' → logprob: -6.2826409339904785
    6. 'k' → logprob: -6.7826409339904785
    7. 'sum' → logprob: -7.2826409339904785
    8. ' A' → logprob: -7.4076409339904785
    9. '(j' → logprob: -7.7826409339904785
    10. '(' → logprob: -7.7826409339904785

Token 209: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01941683329641819
    2. '+' → logprob: -4.144416809082031
    3. ' +' → logprob: -6.144416809082031
    4. ' )' → logprob: -7.769416809082031
    5. '-' → logprob: -7.894416809082031
    6. ')
' → logprob: -9.144416809082031
    7. ')+' → logprob: -9.269416809082031
    8. ' -' → logprob: -9.394416809082031
    9. '+k' → logprob: -9.519416809082031
    10. '))' → logprob: -10.144416809082031

Token 210: '       ' (ID: 309)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -1.0778926610946655
    2. '+' → logprob: -1.2028926610946655
    3. '
' → logprob: -1.3278926610946655
    4. ')' → logprob: -3.577892780303955
    5. '+
' → logprob: -3.577892780303955
    6. '       ' → logprob: -3.827892780303955
    7. ' +
' → logprob: -5.452892780303955
    8. ' 
' → logprob: -5.952892780303955
    9. '        
' → logprob: -6.202892780303955
    10. ')
' → logprob: -6.452892780303955

Token 211: ' droite' (ID: 61428)
  Prédit: 'dro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dro' → logprob: -0.009817834943532944
    2. 'd' → logprob: -4.634817600250244
    3. ' droite' → logprob: -10.134818077087402
    4. 'centre' → logprob: -11.384818077087402
    5. 'mil' → logprob: -12.634818077087402
    6. '```' → logprob: -13.384818077087402
    7. 'drop' → logprob: -13.509818077087402
    8. 'right' → logprob: -14.259818077087402
    9. '	d' → logprob: -14.384818077087402
    10. 'dre' → logprob: -14.634818077087402

Token 212: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519303858280182
    2. '=' → logprob: -1.5019303560256958
    3. ' ' → logprob: -14.626930236816406
    4. ')' → logprob: -15.376930236816406
    5. '=k' → logprob: -15.751930236816406
    6. ' +=' → logprob: -15.876930236816406
    7. '   ' → logprob: -16.251930236816406
    8. ',' → logprob: -16.751930236816406
    9. ' ' → logprob: -17.126930236816406
    10. '+=' → logprob: -17.126930236816406

Token 213: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.11282485723495483
    2. ' dp' → logprob: -2.2378249168395996
    3. '(dp' → logprob: -13.987824440002441
    4. '	dp' → logprob: -14.237824440002441
    5. 'd' → logprob: -14.862824440002441
    6. '_dp' → logprob: -15.612824440002441
    7. ' ' → logprob: -15.737824440002441
    8. ' ' → logprob: -16.112825393676758
    9. '.dp' → logprob: -16.362825393676758
    10. '   ' → logprob: -17.675325393676758

Token 214: '(k' (ID: 12125)
  Prédit: '(k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -1.1875571544806007e-05
    2. '(' → logprob: -11.375011444091797
    3. 'k' → logprob: -15.000011444091797
    4. '(
' → logprob: -17.750011444091797
    5. ' (' → logprob: -18.000011444091797
    6. '((' → logprob: -18.625011444091797
    7. '(j' → logprob: -19.875011444091797
    8. '(i' → logprob: -21.000011444091797
    9. '```' → logprob: -21.375011444091797
    10. '(m' → logprob: -21.750011444091797

Token 215: ' +' (ID: 659)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.21496893465518951
    2. 'k' → logprob: -1.7149689197540283
    3. '+' → logprob: -4.714969158172607
    4. ',' → logprob: -5.464969158172607
    5. '(' → logprob: -8.71496868133545
    6. ' +' → logprob: -9.71496868133545
    7. ',k' → logprob: -10.71496868133545
    8. ' k' → logprob: -11.33996868133545
    9. ' (' → logprob: -12.83996868133545
    10. '+,' → logprob: -13.21496868133545

Token 216: ' ' (ID: 220)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0005933052161708474
    2. ' j' → logprob: -7.500593185424805
    3. ',' → logprob: -10.875593185424805
    4. ',j' → logprob: -11.625593185424805
    5. 'k' → logprob: -11.875593185424805
    6. '(j' → logprob: -12.625593185424805
    7. '1' → logprob: -13.500593185424805
    8. '	j' → logprob: -14.875593185424805
    9. '```' → logprob: -15.250593185424805
    10. '_j' → logprob: -15.500593185424805

Token 217: '1' (ID: 16)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -5.676981345459353e-06
    2. ' j' → logprob: -12.500005722045898
    3. ',' → logprob: -13.750005722045898
    4. ',j' → logprob: -14.375005722045898
    5. '_j' → logprob: -17.1250057220459
    6. '[j' → logprob: -17.5000057220459
    7. '	j' → logprob: -17.5000057220459
    8. '```' → logprob: -17.5000057220459
    9. '(j' → logprob: -18.8750057220459
    10. '1' → logprob: -19.0000057220459

Token 218: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00017016702622640878
    2. ',j' → logprob: -9.00016975402832
    3. ' ,' → logprob: -10.00016975402832
    4. 'j' → logprob: -13.87516975402832
    5. '(j' → logprob: -15.50016975402832
    6. '```' → logprob: -16.62516975402832
    7. ' j' → logprob: -17.00016975402832
    8. ',
' → logprob: -17.25016975402832
    9. '(),' → logprob: -18.37516975402832
    10. '   ' → logprob: -18.37516975402832

Token 219: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -9.662937372922897e-05
    2. ' j' → logprob: -9.250096321105957
    3. '	j' → logprob: -15.125096321105957
    4. '   ' → logprob: -16.875097274780273
    5. ',j' → logprob: -17.250097274780273
    6. '_j' → logprob: -18.000097274780273
    7. '(j' → logprob: -18.125097274780273
    8. '$j' → logprob: -18.375097274780273
    9. '[j' → logprob: -18.750097274780273
    10. ',' → logprob: -19.125097274780273

Token 220: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00027444821898825467
    2. ' ,' → logprob: -8.250274658203125
    3. ',R' → logprob: -12.125274658203125
    4. ',k' → logprob: -13.000274658203125
    5. ',L' → logprob: -13.375274658203125
    6. 'R' → logprob: -13.625274658203125
    7. ',
' → logprob: -13.875274658203125
    8. 'L' → logprob: -14.500274658203125
    9. '),' → logprob: -15.000274658203125
    10. 'k' → logprob: -15.125274658203125

Token 221: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.00376825500279665
    2. 'R' → logprob: -5.628768444061279
    3. 'A' → logprob: -9.628767967224121
    4. 'k' → logprob: -9.878767967224121
    5. ' L' → logprob: -11.128767967224121
    6. 'j' → logprob: -11.128767967224121
    7. '(L' → logprob: -11.503767967224121
    8. '(R' → logprob: -12.878767967224121
    9. '0' → logprob: -13.378767967224121
    10. 'i' → logprob: -14.003767967224121

Token 222: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04327777400612831
    2. ' +' → logprob: -3.4182777404785156
    3. ',' → logprob: -4.668277740478516
    4. 'R' → logprob: -9.918277740478516
    5. '+,' → logprob: -10.168277740478516
    6. ',R' → logprob: -10.293277740478516
    7. ' ,' → logprob: -10.918277740478516
    8. '+r' → logprob: -11.668277740478516
    9. '+
' → logprob: -11.793277740478516
    10. '   ' → logprob: -12.418277740478516

Token 223: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.0018147636437788606
    2. 'A' → logprob: -6.376814842224121
    3. ' R' → logprob: -9.501814842224121
    4. '1' → logprob: -10.501814842224121
    5. '(R' → logprob: -12.626814842224121
    6. '   ' → logprob: -12.876814842224121
    7. '(' → logprob: -13.876814842224121
    8. '(A' → logprob: -14.001814842224121
    9. ' A' → logprob: -14.501814842224121
    10. ')' → logprob: -14.751814842224121

Token 224: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.288163083605468e-05
    2. ' ,' → logprob: -10.250052452087402
    3. ')' → logprob: -11.625052452087402
    4. ',k' → logprob: -12.750052452087402
    5. '+' → logprob: -12.875052452087402
    6. ',A' → logprob: -13.500052452087402
    7. 'A' → logprob: -14.625052452087402
    8. '),' → logprob: -15.250052452087402
    9. 'k' → logprob: -15.375052452087402
    10. ',
' → logprob: -15.500052452087402

Token 225: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -6.12258882028982e-05
    2. ' R' → logprob: -9.75006103515625
    3. ')' → logprob: -13.62506103515625
    4. 'A' → logprob: -14.00006103515625
    5. 'L' → logprob: -14.75006103515625
    6. '   ' → logprob: -15.75006103515625
    7. '(R' → logprob: -16.37506103515625
    8. '	R' → logprob: -16.87506103515625
    9. ' ' → logprob: -17.12506103515625
    10. 'k' → logprob: -18.25006103515625

Token 226: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12694616615772247
    2. ')
' → logprob: -2.126946210861206
    3. ')
' → logprob: -11.501946449279785
    4. '       ' → logprob: -12.876946449279785
    5. ' )' → logprob: -13.376946449279785
    6. ')

' → logprob: -13.751946449279785
    7. '   ' → logprob: -13.876946449279785
    8. ' )
' → logprob: -14.001946449279785
    9. ')`
' → logprob: -14.251946449279785
    10. ')`' → logprob: -16.25194549560547

Token 227: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2912258505821228
    2. '
' → logprob: -1.4162259101867676
    3. '<|end|>' → logprob: -5.916225910186768
    4. '        
' → logprob: -6.166225910186768
    5. '   ' → logprob: -6.291225910186768
    6. '  
' → logprob: -7.541225910186768
    7. ')' → logprob: -7.541225910186768
    8. 'minimum' → logprob: -7.791225910186768
    9. '    
' → logprob: -7.916225910186768
    10. ',' → logprob: -8.29122543334961

Token 228: ' val' (ID: 1459)
  Prédit: 'minimum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'minimum' → logprob: -0.3505164384841919
    2. 'val' (adapté à ' val') → logprob: -1.600516438484192
    3. 'cout' → logprob: -3.4755163192749023
    4. ' minimum' → logprob: -3.6005163192749023
    5. 'cost' → logprob: -4.225516319274902
    6. 'current' → logprob: -5.350516319274902
    7. 'res' → logprob: -5.725516319274902
    8. 'temp' → logprob: -5.850516319274902
    9. 'sort' → logprob: -6.100516319274902
    10. 'result' → logprob: -6.475516319274902

Token 229: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6584213376045227
    2. ' =' → logprob: -1.158421277999878
    3. 'eur' → logprob: -1.783421277999878
    4. 'uer' → logprob: -9.283421516418457
    5. 'e' → logprob: -9.658421516418457
    6. 'eurs' → logprob: -9.783421516418457
    7. 'ue' → logprob: -10.158421516418457
    8. 'ueur' → logprob: -11.533421516418457
    9. 'or' → logprob: -12.033421516418457
    10. '   ' → logprob: -12.158421516418457

Token 230: ' gauche' (ID: 58367)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.007745752111077309
    2. 'A' → logprob: -5.382745742797852
    3. ' gauche' → logprob: -6.257745742797852
    4. 'L' → logprob: -8.382745742797852
    5. 'left' → logprob: -8.382745742797852
    6. 'min' → logprob: -8.632745742797852
    7. '(g' → logprob: -8.757745742797852
    8. '(A' → logprob: -9.382745742797852
    9. 'max' → logprob: -9.382745742797852
    10. '(' → logprob: -9.882745742797852

Token 231: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.12692978978157043
    2. ' +' → logprob: -2.126929759979248
    3. '+
' → logprob: -13.626930236816406
    4. ' +
' → logprob: -15.626930236816406
    5. '+k' → logprob: -16.001930236816406
    6. '＋' → logprob: -16.376930236816406
    7. ' plus' → logprob: -17.126930236816406
    8. '+r' → logprob: -17.251930236816406
    9. '+B' → logprob: -17.626930236816406
    10. ' ' → logprob: -17.751930236816406

Token 232: ' droite' (ID: 61428)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.7281301617622375
    2. 'val' → logprob: -0.8531301617622375
    3. 'sort' → logprob: -3.8531301021575928
    4. '(A' → logprob: -3.9781301021575928
    5. 'dp' → logprob: -4.603130340576172
    6. '(R' → logprob: -4.728130340576172
    7. '(L' → logprob: -5.103130340576172
    8. ' A' → logprob: -5.103130340576172
    9. ' (' → logprob: -5.478130340576172
    10. 'R' → logprob: -5.603130340576172

Token 233: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.6073310375213623
    2. '+' → logprob: -1.2323310375213623
    3. '
' → logprob: -2.3573310375213623
    4. '       ' → logprob: -3.1073310375213623
    5. '<|end|>' → logprob: -4.982331275939941
    6. ' if' → logprob: -5.732331275939941
    7. '+
' → logprob: -5.982331275939941
    8. ' 
' → logprob: -5.982331275939941
    9. 'minimum' → logprob: -6.232331275939941
    10. ' minimum' → logprob: -6.732331275939941

Token 234: ' A' (ID: 355)
  Prédit: '(L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -0.03198002278804779
    2. '(A' → logprob: -4.031980037689209
    3. 'A' → logprob: -4.781980037689209
    4. ' (' → logprob: -5.656980037689209
    5. 'L' → logprob: -7.031980037689209
    6. '(R' → logprob: -7.781980037689209
    7. '(' → logprob: -8.15697956085205
    8. ' A' → logprob: -8.65697956085205
    9. ' L' → logprob: -10.40697956085205
    10. '((' → logprob: -10.78197956085205

Token 235: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.0002466774603817612
    2. '[i' → logprob: -8.87524700164795
    3. 'k' → logprob: -9.50024700164795
    4. '[' → logprob: -11.00024700164795
    5. '[q' → logprob: -12.62524700164795
    6. '[val' → logprob: -13.00024700164795
    7. '[m' → logprob: -13.37524700164795
    8. '[
' → logprob: -13.75024700164795
    9. '[s' → logprob: -13.87524700164795
    10. '[g' → logprob: -13.87524700164795

Token 236: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.042854614555835724
    2. '*' → logprob: -3.9178545475006104
    3. ']*' → logprob: -4.0428547859191895
    4. ')' → logprob: -5.6678547859191895
    5. '}' → logprob: -7.6678547859191895
    6. ']*(' → logprob: -8.667854309082031
    7. ')*' → logprob: -8.792854309082031
    8. '```' → logprob: -9.917854309082031
    9. ' *' → logprob: -10.042854309082031
    10. '#' → logprob: -10.542854309082031

Token 237: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.31358802318573
    2. ' *' → logprob: -1.43858802318573
    3. '
' → logprob: -4.0635881423950195
    4. ')' → logprob: -5.8135881423950195
    5. '*
' → logprob: -6.5635881423950195
    6. '   ' → logprob: -6.6885881423950195
    7. '*(' → logprob: -6.6885881423950195
    8. ')
' → logprob: -6.9385881423950195
    9. ' 
' → logprob: -7.1885881423950195
    10. ' ' → logprob: -7.3135881423950195

Token 238: ' (' (ID: 350)
  Prédit: '(L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -0.00038693982060067356
    2. ' (' → logprob: -8.500387191772461
    3. '(' → logprob: -9.250387191772461
    4. 'L' → logprob: -9.750387191772461
    5. '(R' → logprob: -10.750387191772461
    6. '((' → logprob: -12.875387191772461
    7. '(
' → logprob: -13.625387191772461
    8. '(A' → logprob: -14.125387191772461
    9. ' L' → logprob: -14.500387191772461
    10. '   ' → logprob: -14.500387191772461

Token 239: 'L' (ID: 43)
  Prédit: '(L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -0.008054904639720917
    2. 'L' → logprob: -5.383054733276367
    3. ' (' → logprob: -5.758054733276367
    4. '(' → logprob: -9.133054733276367
    5. '(R' → logprob: -9.258054733276367
    6. ' L' → logprob: -10.383054733276367
    7. '(
' → logprob: -11.133054733276367
    8. '   ' → logprob: -12.383054733276367
    9. ' ' → logprob: -12.758054733276367
    10. ')' → logprob: -12.883054733276367

Token 240: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.17975977063179016
    2. '+' → logprob: -1.8047597408294678
    3. ' ' → logprob: -12.054759979248047
    4. ' +
' → logprob: -12.304759979248047
    5. '+
' → logprob: -13.304759979248047
    6. ' ' → logprob: -13.929759979248047
    7. '    ' → logprob: -14.929759979248047
    8. ' +

' → logprob: -15.054759979248047
    9. ' plus' → logprob: -15.179759979248047
    10. ' R' → logprob: -15.679759979248047

Token 241: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.005236360710114241
    2. ' R' → logprob: -5.2552361488342285
    3. ' ' → logprob: -13.380236625671387
    4. ' ' → logprob: -15.005236625671387
    5. '   ' → logprob: -15.255236625671387
    6. '(R' → logprob: -15.630236625671387
    7. '	R' → logprob: -16.13023567199707
    8. '(' → logprob: -17.13023567199707
    9. ')' → logprob: -17.38023567199707
    10. '  ' → logprob: -17.63023567199707

Token 242: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.576073944568634
    2. ')' → logprob: -0.826073944568634
    3. ' )
' → logprob: -9.82607364654541
    4. ')
' → logprob: -10.07607364654541
    5. ' )' → logprob: -10.82607364654541
    6. ')

' → logprob: -11.57607364654541
    7. '*' → logprob: -12.57607364654541
    8. ')`
' → logprob: -13.82607364654541
    9. '   ' → logprob: -13.95107364654541
    10. '       ' → logprob: -14.07607364654541

Token 243: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3417917490005493
    2. '   ' → logprob: -1.9667917490005493
    3. '       ' → logprob: -2.8417916297912598
    4. 'if' → logprob: -3.0917916297912598
    5. ' if' → logprob: -3.2167916297912598
    6. '    
' → logprob: -5.84179162979126
    7. '
' → logprob: -7.34179162979126
    8. '        
' → logprob: -7.71679162979126
    9. 'minimum' → logprob: -7.71679162979126
    10. '  
' → logprob: -7.84179162979126

Token 244: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.38989880681037903
    2. 'minimum' → logprob: -1.1398987770080566
    3. ' if' → logprob: -6.264898777008057
    4. '   ' → logprob: -7.139898777008057
    5. ' minimum' → logprob: -8.139899253845215
    6. '       ' → logprob: -10.514899253845215
    7. 'min' → logprob: -12.764899253845215
    8. '
' → logprob: -12.889899253845215
    9. 'minimal' → logprob: -13.014899253845215
    10. '	if' → logprob: -14.514899253845215

Token 245: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.38688966631889343
    2. 'val' → logprob: -1.1368896961212158
    3. '	val' → logprob: -11.636889457702637
    4. '(val' → logprob: -12.011889457702637
    5. '[val' → logprob: -13.261889457702637
    6. ' ' → logprob: -14.261889457702637
    7. '_val' → logprob: -14.761889457702637
    8. 'Val' → logprob: -15.011889457702637
    9. ',val' → logprob: -15.511889457702637
    10. '```' → logprob: -15.636889457702637

Token 246: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.11282943934202194
    2. '<' → logprob: -2.2378294467926025
    3. '[' → logprob: -12.487829208374023
    4. ' ' → logprob: -13.112829208374023
    5. '<|end|>' → logprob: -14.862829208374023
    6. ' ' → logprob: -15.362829208374023
    7. '<int' → logprob: -16.487829208374023
    8. ',' → logprob: -16.612829208374023
    9. '<size' → logprob: -16.737829208374023
    10. '<th' → logprob: -16.862829208374023

Token 247: ' minimum' (ID: 11085)
  Prédit: 'minimum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'minimum' → logprob: -0.006715728435665369
    2. ' minimum' → logprob: -5.006715774536133
    3. 'min' → logprob: -15.381715774536133
    4. 'minimal' → logprob: -16.506715774536133
    5. '   ' → logprob: -17.756715774536133
    6. '.minimum' → logprob: -18.006715774536133
    7. ' ' → logprob: -18.256715774536133
    8. 'val' → logprob: -18.506715774536133
    9. 'Minimum' → logprob: -19.006715774536133
    10. ' ' → logprob: -19.631715774536133

Token 248: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4762258529663086
    2. ':
' → logprob: -0.9762258529663086
    3. '       ' → logprob: -6.726225852966309
    4. '           ' → logprob: -7.726225852966309
    5. 'minimum' → logprob: -8.101225852966309
    6. ' minimum' → logprob: -9.351225852966309
    7. '):
' → logprob: -10.851225852966309
    8. '   ' → logprob: -10.851225852966309
    9. ':
' → logprob: -10.976225852966309
    10. ' :
' → logprob: -11.226225852966309

Token 249: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.028617363423109055
    2. 'minimum' → logprob: -3.6536173820495605
    3. ' minimum' → logprob: -6.2786173820495605
    4. '               ' → logprob: -8.903616905212402
    5. '       ' → logprob: -9.028616905212402
    6. '
' → logprob: -9.153616905212402
    7. '            
' → logprob: -11.153616905212402
    8. '.minimum' → logprob: -11.153616905212402
    9. '```' → logprob: -11.528616905212402
    10. '   ' → logprob: -11.778616905212402

Token 250: ' minimum' (ID: 11085)
  Prédit: 'minimum'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'minimum' (adapté à ' minimum') → logprob: -0.0025672181509435177
    2. ' minimum' → logprob: -6.002567291259766
    3. '
' → logprob: -9.502567291259766
    4. '           ' → logprob: -11.252567291259766
    5. 'min' → logprob: -12.752567291259766
    6. '       ' → logprob: -15.502567291259766
    7. '            
' → logprob: -15.627567291259766
    8. '
' → logprob: -15.752567291259766
    9. '   ' → logprob: -15.877567291259766
    10. '.minimum' → logprob: -16.002567291259766

Token 251: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141352713108063
    2. '=' → logprob: -1.7014135122299194
    3. '=min' → logprob: -16.076414108276367
    4. '＝' → logprob: -17.201414108276367
    5. '   ' → logprob: -17.451414108276367
    6. 'minimum' → logprob: -17.576414108276367
    7. '<|end|>' → logprob: -17.576414108276367
    8. ' ' → logprob: -17.701414108276367
    9. ' =
' → logprob: -18.076414108276367
    10. '=int' → logprob: -18.201414108276367

Token 252: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.10020678490400314
    2. ' val' → logprob: -2.3502068519592285
    3. '	val' → logprob: -16.85020637512207
    4. '_val' → logprob: -18.10020637512207
    5. '(val' → logprob: -18.85020637512207
    6. '[val' → logprob: -18.97520637512207
    7. 'Val' → logprob: -19.97520637512207
    8. '.val' → logprob: -20.35020637512207
    9. ',val' → logprob: -20.35020637512207
    10. 'v' → logprob: -21.22520637512207

Token 253: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21066699922084808
    2. 'memo' → logprob: -1.7106670141220093
    3. ' memo' → logprob: -5.085667133331299
    4. '    
' → logprob: -6.210667133331299
    5. '
' → logprob: -7.335667133331299
    6. '```' → logprob: -8.58566665649414
    7. '  
' → logprob: -10.33566665649414
    8. '            
' → logprob: -10.83566665649414
    9. '       ' → logprob: -10.83566665649414
    10. '
' → logprob: -10.83566665649414

Token 254: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5724356770515442
    2. 'memo' → logprob: -0.9474356770515442
    3. ' memo' → logprob: -3.0724356174468994
    4. '
' → logprob: -6.6974358558654785
    5. '    
' → logprob: -8.32243537902832
    6. '```' → logprob: -8.32243537902832
    7. 'return' → logprob: -10.44743537902832
    8. 'mem' → logprob: -11.19743537902832
    9. 'memory' → logprob: -11.94743537902832
    10. '  ' → logprob: -12.19743537902832

Token 255: ' memo' (ID: 46393)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'memo' (adapté à ' memo') → logprob: -2.2842308680992573e-05
    2. 'return' → logprob: -11.500022888183594
    3. ' memo' → logprob: -11.750022888183594
    4. '```' → logprob: -13.250022888183594
    5. '   ' → logprob: -13.875022888183594
    6. 'memory' → logprob: -14.000022888183594
    7. '
' → logprob: -14.500022888183594
    8. 'minimum' → logprob: -15.500022888183594
    9. 'mem' → logprob: -15.875022888183594
    10. 'result' → logprob: -16.125022888183594

Token 256: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -2.1008713702030946e-06
    2. '[' → logprob: -13.125001907348633
    3. '[...]' → logprob: -16.750001907348633
    4. '[((' → logprob: -18.500001907348633
    5. '[
' → logprob: -19.375001907348633
    6. '[key' → logprob: -20.250001907348633
    7. '[i' → logprob: -20.750001907348633
    8. '[m' → logprob: -21.500001907348633
    9. '[\' → logprob: -22.125001907348633
    10. '[I' → logprob: -22.375001907348633

Token 257: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.5048530030981055e-06
    2. ' i' → logprob: -13.500001907348633
    3. '(i' → logprob: -16.375001907348633
    4. ')i' → logprob: -19.000001907348633
    5. ')' → logprob: -19.250001907348633
    6. ' (' → logprob: -19.625001907348633
    7. '   ' → logprob: -19.750001907348633
    8. ' ' → logprob: -19.875001907348633
    9. '(' → logprob: -19.875001907348633
    10. ''i' → logprob: -20.500001907348633

Token 258: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012070851516909897
    2. ',j' → logprob: -9.375121116638184
    3. ' ,' → logprob: -10.250121116638184
    4. '[' → logprob: -15.625121116638184
    5. 'j' → logprob: -16.250120162963867
    6. ',
' → logprob: -16.375120162963867
    7. ',k' → logprob: -17.500120162963867
    8. ' ' → logprob: -17.625120162963867
    9. '‌,' → logprob: -17.875120162963867
    10. '   ' → logprob: -18.375120162963867

Token 259: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0002614550176076591
    2. ' j' → logprob: -8.250261306762695
    3. 'i' → logprob: -16.500261306762695
    4. ')' → logprob: -17.250261306762695
    5. ' ' → logprob: -17.750261306762695
    6. '(j' → logprob: -19.000261306762695
    7. '   ' → logprob: -19.125261306762695
    8. '	j' → logprob: -19.125261306762695
    9. ' (' → logprob: -19.625261306762695
    10. '(' → logprob: -19.875261306762695

Token 260: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3902033970225602e-05
    2. ' ,' → logprob: -11.750014305114746
    3. ',L' → logprob: -12.375014305114746
    4. ')]' → logprob: -13.500014305114746
    5. 'L' → logprob: -15.750014305114746
    6. ']' → logprob: -16.62501335144043
    7. ',
' → logprob: -16.75001335144043
    8. ')' → logprob: -18.12501335144043
    9. ',m' → logprob: -18.87501335144043
    10. ',val' → logprob: -19.12501335144043

Token 261: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -5.157039049663581e-05
    2. ' L' → logprob: -9.875051498413086
    3. ' ' → logprob: -17.500051498413086
    4. '	L' → logprob: -18.000051498413086
    5. ')' → logprob: -18.750051498413086
    6. '   ' → logprob: -18.875051498413086
    7. '(L' → logprob: -19.000051498413086
    8. ')L' → logprob: -19.750051498413086
    9. 'val' → logprob: -20.250051498413086
    10. 'min' → logprob: -20.375051498413086

Token 262: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003802680876106024
    2. ',R' → logprob: -8.000380516052246
    3. 'R' → logprob: -10.375380516052246
    4. ' ,' → logprob: -11.250380516052246
    5. ',
' → logprob: -15.000380516052246
    6. ')]' → logprob: -15.625380516052246
    7. ')' → logprob: -16.37537956237793
    8. ' R' → logprob: -16.50037956237793
    9. '   ' → logprob: -18.62537956237793
    10. '```' → logprob: -18.75037956237793

Token 263: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.00029637437546625733
    2. ' R' → logprob: -8.125296592712402
    3. ' ' → logprob: -15.375296592712402
    4. '   ' → logprob: -16.625295639038086
    5. ')' → logprob: -17.000295639038086
    6. '	R' → logprob: -17.875295639038086
    7. '  ' → logprob: -18.875295639038086
    8. '_R' → logprob: -19.250295639038086
    9. ')]' → logprob: -19.250295639038086
    10. '    ' → logprob: -19.562795639038086

Token 264: ')]' (ID: 15710)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -3.023293538717553e-05
    2. ')' → logprob: -11.000030517578125
    3. ')]' → logprob: -11.250030517578125
    4. ']=' → logprob: -14.500030517578125
    5. '])' → logprob: -18.000030517578125
    6. ' ]' → logprob: -18.000030517578125
    7. ']
' → logprob: -19.000030517578125
    8. ']

' → logprob: -20.625030517578125
    9. '   ' → logprob: -20.750030517578125
    10. '=' → logprob: -21.125030517578125

Token 265: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03804149478673935
    2. ' =' → logprob: -3.288041591644287
    3. '=min' → logprob: -16.913042068481445
    4. '=m' → logprob: -18.538042068481445
    5. '=
' → logprob: -18.663042068481445
    6. '=re' → logprob: -19.788042068481445
    7. '=end' → logprob: -20.038042068481445
    8. ' ' → logprob: -20.413042068481445
    9. ']=' → logprob: -20.538042068481445
    10. '=cut' → logprob: -20.538042068481445

Token 266: ' minimum' (ID: 11085)
  Prédit: 'minimum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'minimum' → logprob: -4.847109812544659e-05
    2. ' minimum' → logprob: -10.000048637390137
    3. 'min' → logprob: -12.750048637390137
    4. 'minimal' → logprob: -17.00004768371582
    5. 'maximum' → logprob: -18.00004768371582
    6. '.minimum' → logprob: -21.00004768371582
    7. 'mini' → logprob: -22.25004768371582
    8. 'minute' → logprob: -22.25004768371582
    9. 'm' → logprob: -23.37504768371582
    10. '	min' → logprob: -24.12504768371582

Token 267: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00526471110060811
    2. 'return' → logprob: -5.255264759063721
    3. ' return' → logprob: -10.755264282226562
    4. '    
' → logprob: -12.255264282226562
    5. '
' → logprob: -13.130264282226562
    6. '	return' → logprob: -13.130264282226562
    7. '       ' → logprob: -15.130264282226562
    8. ':return' → logprob: -15.255264282226562
    9. '  ' → logprob: -16.255264282226562
    10. '   ' → logprob: -16.380264282226562

Token 268: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.062290094792842865
    2. 'return' → logprob: -2.8122901916503906
    3. ' return' → logprob: -8.06229019165039
    4. '	return' → logprob: -11.93729019165039
    5. ':return' → logprob: -15.81229019165039
    6. '    
' → logprob: -15.93729019165039
    7. '       ' → logprob: -16.06229019165039
    8. '  ' → logprob: -16.56229019165039
    9. '```' → logprob: -16.93729019165039
    10. '   ' → logprob: -17.06229019165039

Token 269: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.1274338662624359
    2. '   ' → logprob: -2.1274337768554688
    3. ' return' → logprob: -7.627433776855469
    4. '    
' → logprob: -11.502433776855469
    5. '	return' → logprob: -12.002433776855469
    6. '
' → logprob: -13.627433776855469
    7. ':return' → logprob: -14.127433776855469
    8. 'eturn' → logprob: -16.00243377685547
    9. ')return' → logprob: -16.50243377685547
    10. 'ret' → logprob: -16.62743377685547

Token 270: ' minimum' (ID: 11085)
  Prédit: 'minimum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'minimum' → logprob: -2.339278580620885e-06
    2. ' minimum' → logprob: -13.000001907348633
    3. 'min' → logprob: -19.500001907348633
    4. 'minimal' → logprob: -20.500001907348633
    5. '.minimum' → logprob: -21.250001907348633
    6. 'maximum' → logprob: -22.375001907348633
    7. 'm' → logprob: -23.250001907348633
    8. 'minute' → logprob: -24.375001907348633
    9. 'mín' → logprob: -24.375001907348633
    10. 'Minimum' → logprob: -24.500001907348633

Token 271: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.07689689844846725
    2. 'result' → logprob: -2.701896905899048
    3. '#' → logprob: -5.951896667480469
    4. '<|end|>' → logprob: -6.201896667480469
    5. 'minimum' → logprob: -7.451896667480469
    6. 'N' → logprob: -7.576896667480469
    7. '```' → logprob: -8.201896667480469
    8. 'res' → logprob: -8.576896667480469
    9. 'answer' → logprob: -8.701896667480469
    10. 'output' → logprob: -9.076896667480469

Token 272: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0067209405824542046
    2. 'result' → logprob: -5.006721019744873
    3. 'res' → logprob: -12.381720542907715
    4. 'answer' → logprob: -14.881720542907715
    5. ' print' → logprob: -15.381720542907715
    6. 'output' → logprob: -15.506720542907715
    7. '```' → logprob: -15.631720542907715
    8. 'rés' → logprob: -16.50672149658203
    9. 'ans' → logprob: -16.75672149658203
    10. '#' → logprob: -16.75672149658203

Token 273: ' On' (ID: 2160)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.252547025680542
    2. 'result' → logprob: -1.502547025680542
    3. 'res' → logprob: -7.502547264099121
    4. 'rés' → logprob: -10.502547264099121
    5. 'answer' → logprob: -11.377547264099121
    6. 'ans' → logprob: -12.002547264099121
    7. '#' → logprob: -12.127547264099121
    8. 'output' → logprob: -12.627547264099121
    9. ' print' → logprob: -13.127547264099121
    10. '```' → logprob: -13.252547264099121

Token 274: ' lance' (ID: 66715)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.001745862071402371
    2. ' print' → logprob: -6.626745700836182
    3. 'pr' → logprob: -9.12674617767334
    4. '=' → logprob: -9.87674617767334
    5. '_print' → logprob: -9.87674617767334
    6. ' =' → logprob: -10.00174617767334
    7. 'result' → logprob: -10.12674617767334
    8. 'sort' → logprob: -11.00174617767334
    9. '#' → logprob: -11.37674617767334
    10. 'output' → logprob: -11.87674617767334

Token 275: ' l' (ID: 305)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.9623810658231378e-05
    2. 'result' → logprob: -10.875020027160645
    3. ' print' → logprob: -14.625020027160645
    4. '#' → logprob: -16.375019073486328
    5. 'import' → logprob: -16.875019073486328
    6. 'prin' → logprob: -16.875019073486328
    7. 'pr' → logprob: -17.250019073486328
    8. '```' → logprob: -17.625019073486328
    9. 'min' → logprob: -17.750019073486328
    10. 'dp' → logprob: -18.000019073486328

Token 276: ''al' (ID: 47062)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0041363416239619255
    2. 'result' → logprob: -5.879136562347412
    3. 'for' → logprob: -7.504136562347412
    4. 'r' → logprob: -8.254136085510254
    5. ' print' → logprob: -8.879136085510254
    6. 'rés' → logprob: -9.129136085510254
    7. '#' → logprob: -9.629136085510254
    8. 'res' → logprob: -10.379136085510254
    9. 'i' → logprob: -10.879136085510254
    10. 'x' → logprob: -11.004136085510254

Token 277: 'go' (ID: 2319)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.020580196753144264
    2. 'l' → logprob: -5.020580291748047
    3. 'p' → logprob: -5.770580291748047
    4. 'dp' → logprob: -5.895580291748047
    5. '#' → logprob: -6.145580291748047
    6. 'e' → logprob: -7.145580291748047
    7. 'a' → logprob: -7.145580291748047
    8. 'lp' → logprob: -7.520580291748047
    9. 'r' → logprob: -7.645580291748047
    10. 'd' → logprob: -7.895580291748047

Token 278: ' en' (ID: 469)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0007107630372047424
    2. 'result' → logprob: -7.250710964202881
    3. ' print' → logprob: -14.875710487365723
    4. 'answer' → logprob: -15.750710487365723
    5. 'res' → logprob: -16.00071144104004
    6. '
' → logprob: -17.12571144104004
    7. 'ans' → logprob: -17.12571144104004
    8. '```' → logprob: -18.00071144104004
    9. 'import' → logprob: -19.50071144104004
    10. 'prin' → logprob: -20.00071144104004

Token 279: ' ignorant' (ID: 89043)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00015800826076883823
    2. 'dp' → logprob: -9.125158309936523
    3. 'range' → logprob: -10.750158309936523
    4. ' print' → logprob: -10.750158309936523
    5. 'pr' → logprob: -13.375158309936523
    6. 'result' → logprob: -13.625158309936523
    7. 'aff' → logprob: -14.625158309936523
    8. 'prin' → logprob: -14.750158309936523
    9. '(print' → logprob: -14.750158309936523
    10. '(' → logprob: -14.875158309936523

Token 280: ' les' (ID: 1341)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2663922309875488
    2. 'les' → logprob: -1.2663922309875488
    3. 'le' → logprob: -1.6413922309875488
    4. 'la' → logprob: -1.7663922309875488
    5. '(' → logprob: -3.516392230987549
    6. 'l' → logprob: -4.016392230987549
    7. '#' → logprob: -4.891392230987549
    8. ' la' → logprob: -5.016392230987549
    9. 'the' → logprob: -6.016392230987549
    10. ' les' → logprob: -6.516392230987549

Token 281: ' extr' (ID: 15674)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.501290500164032
    2. 'val' → logprob: -2.2512905597686768
    3. 'born' → logprob: -2.5012905597686768
    4. '0' → logprob: -2.7512905597686768
    5. 'indices' → logprob: -3.2512905597686768
    6. 'bord' → logprob: -3.6262905597686768
    7. 'élé' → logprob: -4.751290321350098
    8. 'lim' → logprob: -5.251290321350098
    9. 'm' → logprob: -5.626290321350098
    10. 'inputs' → logprob: -5.626290321350098

Token 282: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.3144538700580597
    2. 'êmes' → logprob: -1.4394538402557373
    3. 'emes' → logprob: -3.9394538402557373
    4. 'ê' → logprob: -5.189454078674316
    5. 'èmes' → logprob: -5.439454078674316
    6. 'êtes' → logprob: -7.689454078674316
    7. '```' → logprob: -8.189454078674316
    8. 'è' → logprob: -8.189454078674316
    9. 'e' → logprob: -8.314454078674316
    10. 'êts' → logprob: -8.314454078674316

Token 283: 'mit' (ID: 2765)
  Prédit: 'mit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mit' → logprob: -0.5913090109825134
    2. 'm' → logprob: -1.5913090705871582
    3. 'mits' → logprob: -2.341309070587158
    4. 'mes' → logprob: -2.716309070587158
    5. 'mites' → logprob: -2.716309070587158
    6. 'ms' → logprob: -5.341309070587158
    7. 's' → logprob: -5.841309070587158
    8. '```' → logprob: -6.091309070587158
    9. 'ites' → logprob: -7.466309070587158
    10. 'mis' → logprob: -7.466309070587158

Token 284: 'és' (ID: 1756)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.4622099697589874
    2. 's' → logprob: -1.212209939956665
    3. 'és' → logprob: -3.337209939956665
    4. 'tes' → logprob: -3.462209939956665
    5. 'e' → logprob: -6.212210178375244
    6. 'n' → logprob: -7.337210178375244
    7. 'nal' → logprob: -7.587210178375244
    8. 'ses' → logprob: -8.087209701538086
    9. 'é' → logprob: -8.212209701538086
    10. 'aux' → logprob: -8.337209701538086

Token 285: ' de' (ID: 334)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0015087933279573917
    2. 'result' → logprob: -6.501508712768555
    3. ' print' → logprob: -12.376508712768555
    4. 'res' → logprob: -13.251508712768555
    5. 'answer' → logprob: -15.501508712768555
    6. 'for' → logprob: -16.501508712768555
    7. 'output' → logprob: -16.501508712768555
    8. '(print' → logprob: -17.001508712768555
    9. ' result' → logprob: -17.876508712768555
    10. 'if' → logprob: -18.501508712768555

Token 286: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.14053839445114136
    2. 'A' → logprob: -2.390538454055786
    3. 'l' → logprob: -3.515538454055786
    4. '1' → logprob: -4.890538215637207
    5. ' la' → logprob: -7.515538215637207
    6. 'le' → logprob: -7.890538215637207
    7. 'liste' → logprob: -8.140538215637207
    8. '0' → logprob: -8.265538215637207
    9. 'the' → logprob: -8.890538215637207
    10. 'N' → logprob: -8.890538215637207

Token 287: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.010279051959514618
    2. 'table' → logprob: -5.385279178619385
    3. 'chaine' → logprob: -6.635279178619385
    4. 'list' → logprob: -6.635279178619385
    5. 'sequence' → logprob: -6.635279178619385
    6. 'sé' → logprob: -6.760279178619385
    7. 's' → logprob: -8.510278701782227
    8. 'array' → logprob: -9.260278701782227
    9. 'ligne' → logprob: -9.385278701782227
    10. ' liste' → logprob: -10.260278701782227

Token 288: ' (' (ID: 350)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0005562512087635696
    2. 'result' → logprob: -7.500556468963623
    3. 'answer' → logprob: -13.250555992126465
    4. ' print' → logprob: -14.000555992126465
    5. 'res' → logprob: -14.625555992126465
    6. 'output' → logprob: -16.50055694580078
    7. 'for' → logprob: -16.50055694580078
    8. 'pr' → logprob: -16.62555694580078
    9. '```' → logprob: -17.62555694580078
    10. 'if' → logprob: -17.87555694580078

Token 289: 'A' (ID: 32)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4950665235519409
    2. ')' → logprob: -1.120066523551941
    3. ',' → logprob: -3.7450666427612305
    4. 'dp' → logprob: -3.9950666427612305
    5. '),' → logprob: -4.7450666427612305
    6. '0' → logprob: -4.7450666427612305
    7. '#' → logprob: -6.3700666427612305
    8. 'print' → logprob: -6.8700666427612305
    9. ')
' → logprob: -8.37006664276123
    10. '2' → logprob: -8.37006664276123

Token 290: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.25920939445495605
    2. '1' → logprob: -2.134209394454956
    3. ',' → logprob: -3.009209394454956
    4. ')' → logprob: -3.134209394454956
    5. '2' → logprob: -4.884209632873535
    6. '),' → logprob: -5.509209632873535
    7. '0' → logprob: -5.884209632873535
    8. '#' → logprob: -7.509209632873535
    9. ')[' → logprob: -8.009209632873535
    10. '```' → logprob: -8.009209632873535

Token 291: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.6696149840718135e-05
    2. '0' → logprob: -10.000056266784668
    3. '
' → logprob: -12.250056266784668
    4. ']' → logprob: -13.625056266784668
    5. '...' → logprob: -13.750056266784668
    6. '```' → logprob: -13.750056266784668
    7. ' ' → logprob: -14.250056266784668
    8. ',' → logprob: -14.875056266784668
    9. '])' → logprob: -15.000056266784668
    10. '[' → logprob: -15.375056266784668

Token 292: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.08775206655263901
    2. ',' → logprob: -2.837752103805542
    3. ' +' → logprob: -3.837752103805542
    4. '],' → logprob: -5.712751865386963
    5. '1' → logprob: -7.712751865386963
    6. ' ,' → logprob: -9.087752342224121
    7. '+,' → logprob: -10.837752342224121
    8. ']' → logprob: -11.712752342224121
    9. ',
' → logprob: -12.087752342224121
    10. '+
' → logprob: -12.712752342224121

Token 293: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0035358022432774305
    2. '+' → logprob: -5.753535747528076
    3. ' ,' → logprob: -8.378536224365234
    4. ')' → logprob: -10.003536224365234
    5. ' +' → logprob: -10.128536224365234
    6. ',
' → logprob: -10.628536224365234
    7. '),' → logprob: -12.128536224365234
    8. '1' → logprob: -12.878536224365234
    9. ',

' → logprob: -13.003536224365234
    10. 'and' → logprob: -13.378536224365234

Token 294: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.011048289015889168
    2. ' A' → logprob: -4.511048316955566
    3. '
' → logprob: -16.01104736328125
    4. '#' → logprob: -16.51104736328125
    5. ' ' → logprob: -16.63604736328125
    6. '  ' → logprob: -16.76104736328125
    7. 'a' → logprob: -16.88604736328125
    8. '`' → logprob: -17.01104736328125
    9. ' ' → logprob: -17.01104736328125
    10. '   ' → logprob: -17.51104736328125

Token 295: '[N' (ID: 49776)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.7147924900054932
    2. '-' → logprob: -0.8397924900054932
    3. '[N' → logprob: -2.589792490005493
    4. '[' → logprob: -6.464792251586914
    5. 'N' → logprob: -6.839792251586914
    6. '[n' → logprob: -7.964792251586914
    7. 'len' → logprob: -8.339792251586914
    8. '1' → logprob: -8.714792251586914
    9. '[len' → logprob: -8.839792251586914
    10. '-N' → logprob: -9.589792251586914

Token 296: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.002091019181534648
    2. ' -' → logprob: -6.252090930938721
    3. '+' → logprob: -9.252091407775879
    4. '1' → logprob: -9.752091407775879
    5. '])' → logprob: -12.127091407775879
    6. ' ' → logprob: -14.002091407775879
    7. '−' → logprob: -14.002091407775879
    8. ']' → logprob: -14.877091407775879
    9. ']),' → logprob: -15.127091407775879
    10. '–' → logprob: -15.627091407775879

Token 297: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1279553291387856e-05
    2. '2' → logprob: -11.750011444091797
    3. ' ' → logprob: -13.375011444091797
    4. '-' → logprob: -14.375011444091797
    5. '```' → logprob: -14.937511444091797
    6. '])' → logprob: -15.187511444091797
    7. ']' → logprob: -15.750011444091797
    8. '   ' → logprob: -15.937511444091797
    9. '...' → logprob: -16.250011444091797
    10. '`' → logprob: -16.375011444091797

Token 298: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.2234383225440979
    2. ')' → logprob: -2.348438262939453
    3. ',' → logprob: -2.723438262939453
    4. '),' → logprob: -3.848438262939453
    5. '],' → logprob: -4.473438262939453
    6. '])
' → logprob: -6.223438262939453
    7. ']' → logprob: -6.473438262939453
    8. ']),' → logprob: -6.598438262939453
    9. ')])' → logprob: -7.598438262939453
    10. ')
' → logprob: -8.848438262939453

Token 299: 'result' (ID: 2521)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0007102862582542002
    2. 'result' → logprob: -7.250710487365723
    3. ' print' → logprob: -15.500710487365723
    4. 'answer' → logprob: -17.250709533691406
    5. 'res' → logprob: -17.750709533691406
    6. 'output' → logprob: -18.625709533691406
    7. 'pr' → logprob: -19.250709533691406
    8. '```' → logprob: -19.375709533691406
    9. 'ans' → logprob: -20.125709533691406
    10. 'for' → logprob: -20.500709533691406

Token 300: 'at' (ID: 266)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10114327073097229
    2. '=' → logprob: -2.3511433601379395
    3. 'at' → logprob: -6.9761433601379395
    4. '=result' → logprob: -14.101142883300781
    5. ' ' → logprob: -14.851142883300781
    6. 't' → logprob: -15.601142883300781
    7. 's' → logprob: -15.976142883300781
    8. 'ats' → logprob: -16.10114288330078
    9. '_' → logprob: -16.35114288330078
    10. '}' → logprob: -16.47614288330078

Token 301: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02975129522383213
    2. '=' → logprob: -3.5297513008117676
    3. ')' → logprob: -14.65475082397461
    4. ' ' → logprob: -15.77975082397461
    5. ' ' → logprob: -16.77975082397461
    6. ' ' → logprob: -17.27975082397461
    7. '=int' → logprob: -17.40475082397461
    8. 's' → logprob: -17.40475082397461
    9. '_' → logprob: -17.52975082397461
    10. '<|end|>' → logprob: -18.09225082397461

Token 302: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -2.7610454708337784e-05
    2. ' dp' → logprob: -10.500027656555176
    3. '(dp' → logprob: -18.62502670288086
    4. '	dp' → logprob: -18.62502670288086
    5. 'df' → logprob: -20.62502670288086
    6. 'min' → logprob: -20.87502670288086
    7. '_dp' → logprob: -20.87502670288086
    8. 'd' → logprob: -21.37502670288086
    9. '.dp' → logprob: -21.75002670288086
    10. '   ' → logprob: -21.75002670288086

Token 303: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0280383548888494e-06
    2. '1' → logprob: -14.000000953674316
    3. ' (' → logprob: -15.750000953674316
    4. '(
' → logprob: -17.000001907348633
    5. '```' → logprob: -17.375001907348633
    6. '2' → logprob: -19.750001907348633
    7. '<|end|>' → logprob: -21.875001907348633
    8. '((' → logprob: -22.500001907348633
    9. '   ' → logprob: -23.250001907348633
    10. '\(' → logprob: -23.500001907348633

Token 304: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9027791495318525e-05
    2. '(' → logprob: -10.875019073486328
    3. ' ' → logprob: -17.625019073486328
    4. '```' → logprob: -17.875019073486328
    5. '   ' → logprob: -19.000019073486328
    6. '2' → logprob: -19.750019073486328
    7. ')' → logprob: -21.375019073486328
    8. '[' → logprob: -21.500019073486328
    9. '(
' → logprob: -21.500019073486328
    10. '`' → logprob: -22.625019073486328

Token 305: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002647927321959287
    2. ',N' → logprob: -8.500265121459961
    3. 'N' → logprob: -10.000265121459961
    4. ' ,' → logprob: -11.250265121459961
    5. ',
' → logprob: -12.875265121459961
    6. '(N' → logprob: -16.00026512145996
    7. ',n' → logprob: -17.12526512145996
    8. '，' → logprob: -17.12526512145996
    9. ' N' → logprob: -17.50026512145996
    10. '(),' → logprob: -17.62526512145996

Token 306: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -1.9361264946837764e-07
    2. ' N' → logprob: -15.75
    3. '   ' → logprob: -21.0
    4. '	N' → logprob: -21.125
    5. 'n' → logprob: -21.875
    6. 'len' → logprob: -22.25
    7. '```' → logprob: -24.25
    8. '<N' → logprob: -24.75
    9. 'Ｎ' → logprob: -24.875
    10. '=N' → logprob: -26.0

Token 307: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -7.088138227118179e-05
    2. '2' → logprob: -9.625070571899414
    3. ' -' → logprob: -12.250070571899414
    4. '−' → logprob: -17.875070571899414
    5. '```' → logprob: -18.000070571899414
    6. '–' → logprob: -18.000070571899414
    7. '1' → logprob: -18.125070571899414
    8. '4' → logprob: -19.375070571899414
    9. '‑' → logprob: -19.625070571899414
    10. ')' → logprob: -19.750070571899414

Token 308: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00014072739577386528
    2. '1' → logprob: -8.875141143798828
    3. ' ' → logprob: -14.125141143798828
    4. '   ' → logprob: -16.625141143798828
    5. '```' → logprob: -17.750141143798828
    6. '3' → logprob: -18.375141143798828
    7. '  ' → logprob: -19.000141143798828
    8. '
' → logprob: -19.125141143798828
    9. '-' → logprob: -19.750141143798828
    10. '4' → logprob: -19.875141143798828

Token 309: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.836499985889532e-05
    2. '1' → logprob: -9.7500581741333
    3. '```' → logprob: -17.250059127807617
    4. ' ' → logprob: -17.500059127807617
    5. '
' → logprob: -17.875059127807617
    6. '   ' → logprob: -17.875059127807617
    7. '3' → logprob: -18.125059127807617
    8. ' ' → logprob: -19.500059127807617
    9. '

' → logprob: -19.500059127807617
    10. '4' → logprob: -19.812559127807617

Token 310: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003843173326458782
    2. '0' → logprob: -8.000384330749512
    3. ' ,' → logprob: -10.000384330749512
    4. '1' → logprob: -12.875384330749512
    5. ',
' → logprob: -14.375384330749512
    6. ')' → logprob: -16.000383377075195
    7. '2' → logprob: -16.250383377075195
    8. '```' → logprob: -16.250383377075195
    9. '   ' → logprob: -16.875383377075195
    10. ' ' → logprob: -18.125383377075195

Token 311: ' ' (ID: 220)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.12133575975894928
    2. '1' → logprob: -2.371335744857788
    3. '0' → logprob: -3.871335744857788
    4. ' A' → logprob: -9.746335983276367
    5. ' ' → logprob: -11.621335983276367
    6. '2' → logprob: -12.371335983276367
    7. '   ' → logprob: -12.746335983276367
    8. 'N' → logprob: -15.121335983276367
    9. 'a' → logprob: -15.308835983276367
    10. '  ' → logprob: -15.371335983276367

Token 312: '1' (ID: 16)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.01462399959564209
    2. '1' → logprob: -4.514624118804932
    3. '0' → logprob: -5.639624118804932
    4. ' A' → logprob: -11.764623641967773
    5. ' ' → logprob: -12.764623641967773
    6. '   ' → logprob: -13.014623641967773
    7. '2' → logprob: -13.764623641967773
    8. '	A' → logprob: -15.389623641967773
    9. '  ' → logprob: -15.764623641967773
    10. 'a' → logprob: -15.952123641967773

Token 313: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007339857402257621
    2. '1' → logprob: -7.250733852386475
    3. ' ,' → logprob: -10.875734329223633
    4. ')' → logprob: -12.375734329223633
    5. ',
' → logprob: -15.125734329223633
    6. '2' → logprob: -15.250734329223633
    7. '<|end|>' → logprob: -16.250734329223633
    8. '),' → logprob: -16.625734329223633
    9. '```' → logprob: -16.750734329223633
    10. ' ' → logprob: -16.875734329223633

Token 314: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002342912630410865
    2. ' ' → logprob: -8.375234603881836
    3. '2' → logprob: -13.625234603881836
    4. '   ' → logprob: -13.750234603881836
    5. '0' → logprob: -14.375234603881836
    6. '  ' → logprob: -14.500234603881836
    7. '10' → logprob: -15.812734603881836
    8. ' ' → logprob: -16.187734603881836
    9. '    ' → logprob: -17.000234603881836
    10. '﻿' → logprob: -17.375234603881836

Token 315: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.837811088189483e-05
    2. ' ' → logprob: -10.000068664550781
    3. '0' → logprob: -11.000068664550781
    4. '2' → logprob: -12.375068664550781
    5. '   ' → logprob: -14.250068664550781
    6. '10' → logprob: -14.375068664550781
    7. '  ' → logprob: -15.437568664550781
    8. ' ' → logprob: -16.18756866455078
    9. 'N' → logprob: -16.31256866455078
    10. ')' → logprob: -16.81256866455078

Token 316: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.506661833962426e-05
    2. ')
' → logprob: -9.37508487701416
    3. '))' → logprob: -16.250085830688477
    4. ')
' → logprob: -16.375085830688477
    5. ')

' → logprob: -17.000085830688477
    6. ' )' → logprob: -17.250085830688477
    7. ')#' → logprob: -18.000085830688477
    8. ')`' → logprob: -18.875085830688477
    9. '),' → logprob: -19.625085830688477
    10. ').' → logprob: -19.750085830688477

Token 317: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.2664456789934775e-06
    2. '
' → logprob: -14.000000953674316
    3. '```' → logprob: -15.000000953674316
    4. ' print' → logprob: -17.125001907348633
    5. '<|end|>' → logprob: -17.500001907348633
    6. '#print' → logprob: -17.875001907348633
    7. '``' → logprob: -19.625001907348633
    8. '  
' → logprob: -19.750001907348633
    9. 'result' → logprob: -19.750001907348633
    10. '#' → logprob: -20.000001907348633

Token 318: ' Puis' (ID: 87717)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. ' print' → logprob: -16.75
    3. '```' → logprob: -17.5
    4. 'result' → logprob: -18.375
    5. 'for' → logprob: -19.125
    6. '#print' → logprob: -19.625
    7. 'if' → logprob: -20.0
    8. '#' → logprob: -20.5
    9. 'pr' → logprob: -20.75
    10. 'prin' → logprob: -21.125

Token 319: ' on' (ID: 402)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -5.512236498361744e-07
    2. ' print' → logprob: -14.875000953674316
    3. '
' → logprob: -15.500000953674316
    4. 'pr' → logprob: -17.5
    5. 'prin' → logprob: -18.25
    6. '#print' → logprob: -19.75
    7. '#' → logprob: -19.75
    8. '
' → logprob: -20.25
    9. 'for' → logprob: -20.625
    10. '```' → logprob: -21.375

Token 320: ' ajoute' (ID: 91611)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.5094070477061905e-05
    2. ' print' → logprob: -11.125015258789062
    3. 'pr' → logprob: -16.250015258789062
    4. '#print' → logprob: -17.000015258789062
    5. '
' → logprob: -17.125015258789062
    6. '#' → logprob: -17.875015258789062
    7. 'for' → logprob: -18.250015258789062
    8. 'prin' → logprob: -18.375015258789062
    9. 'printf' → logprob: -20.000015258789062
    10. '.print' → logprob: -20.000015258789062

Token 321: ' les' (ID: 1341)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.039013732224702835
    2. ' A' → logprob: -3.539013624191284
    3. '(A' → logprob: -5.164013862609863
    4. '+' → logprob: -6.164013862609863
    5. ' (' → logprob: -7.414013862609863
    6. '+A' → logprob: -8.039013862609863
    7. '(' → logprob: -8.664013862609863
    8. ' +' → logprob: -8.914013862609863
    9. 'result' → logprob: -9.414013862609863
    10. 'print' → logprob: -10.914013862609863

Token 322: ' b' (ID: 287)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.6142939329147339
    2. ' A' → logprob: -0.8642939329147339
    3. '(A' → logprob: -4.864294052124023
    4. '(' → logprob: -5.239294052124023
    5. ' (' → logprob: -5.489294052124023
    6. 'print' → logprob: -5.489294052124023
    7. '*' → logprob: -5.614294052124023
    8. '+' → logprob: -5.739294052124023
    9. ' coûts' → logprob: -6.114294052124023
    10. ' print' → logprob: -7.114294052124023

Token 323: 'ords' (ID: 9142)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.1998941898345947
    2. '+A' → logprob: -1.6998941898345947
    3. '(A' → logprob: -1.9498941898345947
    4. '+' → logprob: -2.0748941898345947
    5. '(' → logprob: -2.5748941898345947
    6. '0' → logprob: -3.1998941898345947
    7. '*A' → logprob: -3.9498941898345947
    8. 'on' → logprob: -4.074893951416016
    9. 'onus' → logprob: -4.074893951416016
    10. '[' → logprob: -4.324893951416016

Token 324: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2851068377494812
    2. ' +' → logprob: -1.410106897354126
    3. '+
' → logprob: -5.785106658935547
    4. 'result' → logprob: -8.285106658935547
    5. ' +
' → logprob: -8.410106658935547
    6. 'print' → logprob: -8.535106658935547
    7. '*' → logprob: -8.910106658935547
    8. ' +=' → logprob: -10.910106658935547
    9. '+=' → logprob: -11.660106658935547
    10. ' ' → logprob: -11.910106658935547

Token 325: 'print' (ID: 1598)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.006436826661229134
    2. 'print' → logprob: -5.131436824798584
    3. '+' → logprob: -7.631436824798584
    4. ' result' → logprob: -11.256437301635742
    5. 'for' → logprob: -12.631437301635742
    6. ' +' → logprob: -13.006437301635742
    7. 'res' → logprob: -13.631437301635742
    8. '+
' → logprob: -14.131437301635742
    9. ' print' → logprob: -14.381437301635742
    10. '+=' → logprob: -14.756437301635742

Token 326: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.07895577698945999
    2. '(' → logprob: -2.578955888748169
    3. 'result' → logprob: -10.57895565032959
    4. '((' → logprob: -10.95395565032959
    5. '(f' → logprob: -11.95395565032959
    6. '("' → logprob: -12.32895565032959
    7. '('' → logprob: -13.07895565032959
    8. '(results' → logprob: -13.32895565032959
    9. '(resultado' → logprob: -13.45395565032959
    10. ' (' → logprob: -13.82895565032959

Token 327: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.01847638189792633
    2. 't' → logprob: -4.018476486206055
    3. 'a' → logprob: -9.143476486206055
    4. 'ant' → logprob: -9.393476486206055
    5. 'ation' → logprob: -9.643476486206055
    6. ')' → logprob: -10.518476486206055
    7. '(' → logprob: -12.268476486206055
    8. '_at' → logprob: -12.268476486206055
    9. 'result' → logprob: -12.393476486206055
    10. 'ate' → logprob: -13.018476486206055

Token 328: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17272880673408508
    2. '+' → logprob: -2.1727287769317627
    3. ' +' → logprob: -3.1727287769317627
    4. ' )' → logprob: -5.922729015350342
    5. '*' → logprob: -9.047728538513184
    6. '+)' → logprob: -10.172728538513184
    7. ' ' → logprob: -11.297728538513184
    8. ' *' → logprob: -11.672728538513184
    9. ',' → logprob: -12.047728538513184
    10. ' ' → logprob: -12.047728538513184

Token 329: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.05802621319890022
    2. ' A' → logprob: -3.4330263137817383
    3. '(A' → logprob: -3.8080263137817383
    4. ' (' → logprob: -6.433026313781738
    5. '(' → logprob: -9.183026313781738
    6. '   ' → logprob: -9.558026313781738
    7. ' ' → logprob: -9.683026313781738
    8. '2' → logprob: -11.183026313781738
    9. '  ' → logprob: -11.433026313781738
    10. 'N' → logprob: -12.308026313781738

Token 330: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.961759259458631e-06
    2. '0' → logprob: -12.250004768371582
    3. '[
' → logprob: -17.0000057220459
    4. ' [' → logprob: -17.7500057220459
    5. '[-' → logprob: -19.2500057220459
    6. '```' → logprob: -19.2500057220459
    7. '\[' → logprob: -19.7500057220459
    8. '(' → logprob: -19.7500057220459
    9. '[N' → logprob: -20.0000057220459
    10. ')' → logprob: -20.1250057220459

Token 331: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.2200749754119897e-06
    2. ' ' → logprob: -13.250001907348633
    3. '[' → logprob: -14.750001907348633
    4. '   ' → logprob: -17.875001907348633
    5. 'N' → logprob: -18.062501907348633
    6. '1' → logprob: -18.187501907348633
    7. '00' → logprob: -18.625001907348633
    8. '۰' → logprob: -18.625001907348633
    9. '-' → logprob: -18.937501907348633
    10. '０' → logprob: -19.312501907348633

Token 332: ']' (ID: 60)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.08908319473266602
    2. ' *' → logprob: -2.464083194732666
    3. ')' → logprob: -9.589082717895508
    4. ' ' → logprob: -10.089082717895508
    5. '+' → logprob: -11.089082717895508
    6. ' ' → logprob: -12.089082717895508
    7. ' +' → logprob: -12.714082717895508
    8. ')*' → logprob: -13.214082717895508
    9. '[' → logprob: -13.714082717895508
    10. '**' → logprob: -13.839082717895508

Token 333: ' +' (ID: 659)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.023267146199941635
    2. ' *' → logprob: -3.7732670307159424
    3. ' ' → logprob: -11.398266792297363
    4. '+' → logprob: -12.648266792297363
    5. ' ' → logprob: -12.898266792297363
    6. '**' → logprob: -13.148266792297363
    7. ')' → logprob: -14.148266792297363
    8. '*
' → logprob: -14.148266792297363
    9. ' +' → logprob: -15.523266792297363
    10. '*A' → logprob: -15.523266792297363

Token 334: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.06197093799710274
    2. ' A' → logprob: -2.8119709491729736
    3. ' ' → logprob: -13.061970710754395
    4. ' ' → logprob: -14.561970710754395
    5. '   ' → logprob: -15.186970710754395
    6. '  ' → logprob: -15.811970710754395
    7. '	A' → logprob: -16.56197166442871
    8. '+' → logprob: -16.56197166442871
    9. '    ' → logprob: -17.18697166442871
    10. ''' → logprob: -17.43697166442871

Token 335: '[-' (ID: 17503)
  Prédit: '[N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[N' → logprob: -0.0038839157205075026
    2. '[-' → logprob: -5.6288838386535645
    3. '[' → logprob: -8.503884315490723
    4. 'N' → logprob: -9.503884315490723
    5. '1' → logprob: -12.503884315490723
    6. '[n' → logprob: -13.628884315490723
    7. '[
' → logprob: -14.878884315490723
    8. '[M' → logprob: -15.753884315490723
    9. '	N' → logprob: -16.128883361816406
    10. '```' → logprob: -16.128883361816406

Token 336: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.125
    3. '0' → logprob: -18.375
    4. '１' → logprob: -18.375
    5. ']' → logprob: -18.625
    6. '```' → logprob: -19.4375
    7. '2' → logprob: -19.8125
    8. '(' → logprob: -19.875
    9. '   ' → logprob: -19.9375
    10. ')' → logprob: -20.0

Token 337: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.117345684382599e-05
    2. '))' → logprob: -11.250020980834961
    3. ' )' → logprob: -12.000020980834961
    4. '`)' → logprob: -14.125020980834961
    5. '})' → logprob: -14.750020980834961
    6. '])' → logprob: -15.125020980834961
    7. ')`' → logprob: -16.25002098083496
    8. '）' → logprob: -16.37502098083496
    9. '')' → logprob: -16.62502098083496
    10. '")' → logprob: -16.87502098083496


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 335
Tokens correctement prédits (1ère position, stricte): 102
Tokens correctement prédits (1ère position, avec adaptation): 113
Tokens correctement prédits (top 10): 260
Précision stricte (1ère position): 30.45%
Précision adaptée (1ère position): 33.73%
Précision (top 10): 77.61%
================================================================================
