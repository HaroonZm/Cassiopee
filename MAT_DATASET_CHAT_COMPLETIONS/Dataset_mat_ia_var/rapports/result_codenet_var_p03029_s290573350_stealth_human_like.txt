================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:59:19
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Bon, on va prendre deux chiffres là !
ligne = input()
a, p = (int(x) for x in ligne.split())

# Faut faire un petit calcul quand même
resultat = (a*3 + p)//2

print(resultat) # voilà, c'est fait je crois...
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Bon' (ID: 12658)
  → Token d'amorce (pas de prédiction)

Token 2: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 3: ' on' (ID: 402)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1667102575302124
    2. ' je' → logprob: -3.166710376739502
    3. '```' → logprob: -3.291710376739502
    4. '  ' → logprob: -3.416710376739502
    5. ' e' → logprob: -5.291710376739502
    6. ' t' → logprob: -5.291710376739502
    7. 'jour' → logprob: -5.541710376739502
    8. '`' → logprob: -5.666710376739502
    9. 'e' → logprob: -6.041710376739502
    10. ' ```' → logprob: -6.291710376739502

Token 4: ' va' (ID: 3423)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.3824423551559448
    2. '```' → logprob: -1.8824423551559448
    3. 'n' → logprob: -2.0074424743652344
    4. 'ne' → logprob: -2.6324424743652344
    5. 'e' → logprob: -2.7574424743652344
    6. 'u' → logprob: -2.7574424743652344
    7. 't' → logprob: -2.8824424743652344
    8. ''' → logprob: -3.5074424743652344
    9. ' ```' → logprob: -3.7574424743652344
    10. '`' → logprob: -3.7574424743652344

Token 5: ' prendre' (ID: 24257)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.16916608810424805
    2. ' y' → logprob: -2.919166088104248
    3. ' continuer' → logprob: -3.419166088104248
    4. 's' → logprob: -4.419166088104248
    5. '_' → logprob: -4.919166088104248
    6. ' essayer' → logprob: -5.294166088104248
    7. '   ' → logprob: -5.419166088104248
    8. '  ' → logprob: -5.419166088104248
    9. 'l' → logprob: -5.794166088104248
    10. 't' → logprob: -5.919166088104248

Token 6: ' deux' (ID: 10301)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.005527573637664318
    2. '_' → logprob: -5.505527496337891
    3. ' un' → logprob: -7.130527496337891
    4. '  ' → logprob: -8.75552749633789
    5. 'l' → logprob: -9.38052749633789
    6. '-' → logprob: -9.75552749633789
    7. ' une' → logprob: -9.75552749633789
    8. ':' → logprob: -10.38052749633789
    9. '.' → logprob: -10.63052749633789
    10. ' _' → logprob: -10.75552749633789

Token 7: ' chiffres' (ID: 105565)
  Prédit: ' espaces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' espaces' → logprob: -0.7442237734794617
    2. ' ' → logprob: -1.6192238330841064
    3. '_' → logprob: -3.4942238330841064
    4. 'esp' → logprob: -3.6192238330841064
    5. '```' → logprob: -3.7442238330841064
    6. 'spaces' → logprob: -3.7442238330841064
    7. '#' → logprob: -3.8692238330841064
    8. '-' → logprob: -4.119223594665527
    9. ' lignes' → logprob: -4.119223594665527
    10. '  
' → logprob: -4.369223594665527

Token 8: ' là' (ID: 8052)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8784433603286743
    2. '.' → logprob: -1.0034433603286743
    3. '1' → logprob: -2.5034432411193848
    4. ' ' → logprob: -3.1284432411193848
    5. ' :' → logprob: -3.5034432411193848
    6. ',' → logprob: -3.7534432411193848
    7. 's' → logprob: -4.253443241119385
    8. '2' → logprob: -5.003443241119385
    9. '3' → logprob: -5.503443241119385
    10. '4' → logprob: -6.003443241119385

Token 9: ' !
' (ID: 27498)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.8069612383842468
    2. ',' → logprob: -1.4319612979888916
    3. ':' → logprob: -1.6819612979888916
    4. '#' → logprob: -2.8069612979888916
    5. ' ' → logprob: -3.4319612979888916
    6. 's' → logprob: -4.6819610595703125
    7. ' :' → logprob: -5.4319610595703125
    8. '1' → logprob: -5.6819610595703125
    9. '`' → logprob: -6.3069610595703125
    10. '!' → logprob: -6.3069610595703125

Token 10: 'ligne' (ID: 94660)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4060525894165039
    2. '.' → logprob: -2.406052589416504
    3. 'x' → logprob: -3.156052589416504
    4. ':' → logprob: -3.406052589416504
    5. '4' → logprob: -3.781052589416504
    6. ',' → logprob: -3.781052589416504
    7. 'a' → logprob: -4.031052589416504
    8. '1' → logprob: -4.031052589416504
    9. '2' → logprob: -4.156052589416504
    10. ' ' → logprob: -4.406052589416504

Token 11: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5406866669654846
    2. '[' → logprob: -1.6656866073608398
    3. 's' → logprob: -1.9156866073608398
    4. '_' → logprob: -3.04068660736084
    5. '.' → logprob: -5.16568660736084
    6. '1' → logprob: -5.41568660736084
    7. '=' → logprob: -5.66568660736084
    8. '[:]' → logprob: -5.91568660736084
    9. ' ' → logprob: -6.16568660736084
    10. ' +=' → logprob: -6.29068660736084

Token 12: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.4776601493358612
    2. 'input' → logprob: -1.1026601791381836
    3. '"' → logprob: -4.102660179138184
    4. ' ' → logprob: -4.227660179138184
    5. ' "' → logprob: -4.477660179138184
    6. ' int' → logprob: -6.227660179138184
    7. 'int' → logprob: -7.102660179138184
    8. '10' → logprob: -8.352660179138184
    9. '2' → logprob: -8.477660179138184
    10. ' []' → logprob: -8.477660179138184

Token 13: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0008820459479466081
    2. '("("' → logprob: -7.500882148742676
    3. '('' → logprob: -8.125882148742676
    4. '()' → logprob: -11.375882148742676
    5. '(
' → logprob: -12.375882148742676
    6. '("' → logprob: -12.500882148742676
    7. '(

' → logprob: -12.625882148742676
    8. '(`' → logprob: -13.125882148742676
    9. '("(' → logprob: -13.250882148742676
    10. '("""' → logprob: -13.250882148742676

Token 14: 'a' (ID: 64)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.12050761282444
    2. '.split' → logprob: -3.6205077171325684
    3. ' =' → logprob: -3.8705077171325684
    4. '=' → logprob: -3.8705077171325684
    5. '.strip' → logprob: -4.245507717132568
    6. '[' → logprob: -4.370507717132568
    7. '+' → logprob: -4.745507717132568
    8. 's' → logprob: -5.995507717132568
    9. '[:]' → logprob: -6.745507717132568
    10. ' ' → logprob: -6.745507717132568

Token 15: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06933800876140594
    2. '=' → logprob: -3.319338083267212
    3. '[' → logprob: -4.569337844848633
    4. ',' → logprob: -4.819337844848633
    5. ' ' → logprob: -5.319337844848633
    6. '.' → logprob: -5.694337844848633
    7. ')' → logprob: -6.944337844848633
    8. '_' → logprob: -6.944337844848633
    9. 'pp' → logprob: -8.194337844848633
    10. ' ,' → logprob: -8.569337844848633

Token 16: ' p' (ID: 275)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.20231670141220093
    2. ' b' → logprob: -1.7023167610168457
    3. ' ' → logprob: -7.327316761016846
    4. ' =' → logprob: -9.077316284179688
    5. 'ligne' → logprob: -10.077316284179688
    6. '=' → logprob: -10.202316284179688
    7. 'space' → logprob: -11.327316284179688
    8. '  ' → logprob: -11.452316284179688
    9. ' ligne' → logprob: -11.702316284179688
    10. '=b' → logprob: -12.827316284179688

Token 17: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.356334388256073
    2. ' =' → logprob: -1.3563344478607178
    3. 'r' → logprob: -3.6063344478607178
    4. ',' → logprob: -4.731334209442139
    5. ' ' → logprob: -7.731334209442139
    6. 'a' → logprob: -7.731334209442139
    7. ')' → logprob: -7.856334209442139
    8. '_' → logprob: -7.856334209442139
    9. 'as' → logprob: -7.856334209442139
    10. 'v' → logprob: -7.856334209442139

Token 18: ' (' (ID: 350)
  Prédit: ' map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.49157604575157166
    2. 'map' → logprob: -1.741576075553894
    3. ' ligne' → logprob: -2.2415759563446045
    4. 'ligne' → logprob: -2.2415759563446045
    5. 'line' → logprob: -8.616576194763184
    6. '[' → logprob: -9.116576194763184
    7. ' [' → logprob: -9.241576194763184
    8. ' line' → logprob: -10.491576194763184
    9. ' ' → logprob: -10.741576194763184
    10. 'int' → logprob: -10.866576194763184

Token 19: 'int' (ID: 491)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.41626229882240295
    2. 'map' → logprob: -1.5412622690200806
    3. 'int' → logprob: -2.16626238822937
    4. ' ligne' → logprob: -5.666262149810791
    5. ' map' → logprob: -5.916262149810791
    6. '[int' → logprob: -6.291262149810791
    7. 'line' → logprob: -6.666262149810791
    8. 'input' → logprob: -6.791262149810791
    9. ' int' → logprob: -7.541262149810791
    10. '[' → logprob: -8.29126262664795

Token 20: '(x' (ID: 4061)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.030372943729162216
    2. '(' → logprob: -3.5303728580474854
    3. ')' → logprob: -8.030372619628906
    4. '()' → logprob: -9.030372619628906
    5. '(s' → logprob: -10.405372619628906
    6. '(a' → logprob: -10.530372619628906
    7. '(
' → logprob: -10.530372619628906
    8. '(

' → logprob: -10.530372619628906
    9. ')(' → logprob: -10.655372619628906
    10. 'ligne' → logprob: -11.780372619628906

Token 21: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0026881329249590635
    2. '())' → logprob: -6.127687931060791
    3. ' )' → logprob: -8.87768840789795
    4. '),' → logprob: -9.12768840789795
    5. '(l' → logprob: -9.37768840789795
    6. '))' → logprob: -10.25268840789795
    7. '()' → logprob: -10.75268840789795
    8. 'ligne' → logprob: -10.87768840789795
    9. '.strip' → logprob: -11.25268840789795
    10. ',)' → logprob: -11.50268840789795

Token 22: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3911312222480774
    2. '(' → logprob: -2.1411311626434326
    3. '(l' → logprob: -2.5161311626434326
    4. '()' → logprob: -2.7661311626434326
    5. 'ligne' → logprob: -4.141131401062012
    6. ',' → logprob: -4.766131401062012
    7. '(line' → logprob: -4.891131401062012
    8. 'for' → logprob: -5.016131401062012
    9. ' for' → logprob: -5.641131401062012
    10. ' ligne' → logprob: -5.891131401062012

Token 23: ' x' (ID: 1215)
  Prédit: ' ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.06252439320087433
    2. 'ligne' → logprob: -2.8125243186950684
    3. ' ' → logprob: -8.187524795532227
    4. ' lign' → logprob: -9.312524795532227
    5. ' lignes' → logprob: -10.187524795532227
    6. ' line' → logprob: -10.437524795532227
    7. ' Ligne' → logprob: -10.687524795532227
    8. ')' → logprob: -10.812524795532227
    9. ' l' → logprob: -11.562524795532227
    10. ' ' → logprob: -11.562524795532227

Token 24: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008856709115207195
    2. 'in' → logprob: -4.758856773376465
    3. ' ligne' → logprob: -9.008856773376465
    4. ')' → logprob: -9.758856773376465
    5. ' ' → logprob: -10.383856773376465
    6. '_' → logprob: -11.758856773376465
    7. 'ligne' → logprob: -11.883856773376465
    8. '  ' → logprob: -12.758856773376465
    9. ',' → logprob: -13.133856773376465
    10. ' ' → logprob: -13.383856773376465

Token 25: ' ligne' (ID: 19583)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.25209271907806396
    2. ' ligne' → logprob: -1.502092719078064
    3. ')' → logprob: -9.502092361450195
    4. ' ' → logprob: -10.752092361450195
    5. 'l' → logprob: -10.877092361450195
    6. 'line' → logprob: -10.877092361450195
    7. ' lignes' → logprob: -11.877092361450195
    8. 'lig' → logprob: -12.377092361450195
    9. ' lign' → logprob: -12.502092361450195
    10. ' )' → logprob: -12.752092361450195

Token 26: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.02696995437145233
    2. ')' → logprob: -3.9019699096679688
    3. '.strip' → logprob: -5.901969909667969
    4. '.' → logprob: -6.026969909667969
    5. 'split' → logprob: -7.651969909667969
    6. '.readline' → logprob: -7.901969909667969
    7. ' )' → logprob: -8.651969909667969
    8. ' .' → logprob: -8.901969909667969
    9. 'if' → logprob: -11.151969909667969
    10. ' if' → logprob: -11.151969909667969

Token 27: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.018136370927095413
    2. '()' → logprob: -4.143136501312256
    3. '('' → logprob: -6.393136501312256
    4. '(' → logprob: -8.018136024475098
    5. ' ())' → logprob: -10.018136024475098
    6. '()))' → logprob: -10.393136024475098
    7. '(','' → logprob: -12.018136024475098
    8. '("' → logprob: -12.643136024475098
    9. '())
' → logprob: -12.768136024475098
    10. ')' → logprob: -12.768136024475098

Token 28: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6168468594551086
    2. '
' → logprob: -1.4918467998504639
    3. '#' → logprob: -3.241846799850464
    4. ' ' → logprob: -3.491846799850464
    5. ' if' → logprob: -3.491846799850464
    6. ',' → logprob: -3.866846799850464
    7. ':' → logprob: -3.866846799850464
    8. '<|end|>' → logprob: -3.991846799850464
    9. 'i' → logprob: -4.366847038269043
    10. '.' → logprob: -4.366847038269043

Token 29: ' F' (ID: 454)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.2700858116149902
    2. 'i' → logprob: -1.2700858116149902
    3. 'p' → logprob: -1.8950858116149902
    4. 'a' → logprob: -2.7700858116149902
    5. 'r' → logprob: -3.1450858116149902
    6. 'if' → logprob: -3.1450858116149902
    7. 's' → logprob: -3.2700858116149902
    8. ' #' → logprob: -4.02008581161499
    9. ' if' → logprob: -4.27008581161499
    10. 'print' → logprob: -4.39508581161499

Token 30: 'aut' (ID: 1828)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.27943921089172363
    2. 'or' → logprob: -1.9044392108917236
    3. '#' → logprob: -2.7794392108917236
    4. 'i' → logprob: -4.5294389724731445
    5. 'a' → logprob: -4.5294389724731445
    6. 'p' → logprob: -5.9044389724731445
    7. 'in' → logprob: -6.4044389724731445
    8. 'r' → logprob: -6.4044389724731445
    9. '```' → logprob: -7.1544389724731445
    10. ' or' → logprob: -7.9044389724731445

Token 31: ' faire' (ID: 8119)
  Prédit: ' pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.5115904808044434
    2. 'pas' → logprob: -1.8865904808044434
    3. 'a' → logprob: -2.1365904808044434
    4. ' que' → logprob: -3.5115904808044434
    5. ' ' → logprob: -4.261590480804443
    6. '-il' → logprob: -4.261590480804443
    7. '#' → logprob: -4.511590480804443
    8. 'print' → logprob: -5.511590480804443
    9. 'p' → logprob: -5.511590480804443
    10. 'une' → logprob: -5.636590480804443

Token 32: ' un' (ID: 537)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -1.837332844734192
    2. ' un' → logprob: -1.962332844734192
    3. 'print' → logprob: -1.962332844734192
    4. ' ' → logprob: -2.2123327255249023
    5. 'a' → logprob: -2.3373327255249023
    6. 's' → logprob: -3.2123327255249023
    7. ' quelque' → logprob: -3.4623327255249023
    8. 'une' → logprob: -3.5873327255249023
    9. ' une' → logprob: -3.7123327255249023
    10. 'la' → logprob: -3.7123327255249023

Token 33: ' petit' (ID: 20577)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.7668014764785767
    2. ' peu' → logprob: -2.891801357269287
    3. 'for' → logprob: -3.016801357269287
    4. ' truc' → logprob: -3.141801357269287
    5. ' for' → logprob: -3.266801357269287
    6. ' test' → logprob: -3.516801357269287
    7. 'pe' → logprob: -3.579301357269287
    8. 'print' → logprob: -3.829301357269287
    9. ' calcul' → logprob: -3.954301357269287
    10. ' produit' → logprob: -4.079301357269287

Token 34: ' calcul' (ID: 7559)
  Prédit: 'calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calcul' → logprob: -1.6232024431228638
    2. 'pe' → logprob: -1.8732024431228638
    3. ' test' → logprob: -1.9982024431228638
    4. 'test' → logprob: -2.248202323913574
    5. 'while' → logprob: -2.623202323913574
    6. 'for' → logprob: -2.873202323913574
    7. 'print' → logprob: -3.248202323913574
    8. ' calcul' → logprob: -3.373202323913574
    9. 'tri' → logprob: -3.623202323913574
    10. ' peu' → logprob: -3.873202323913574

Token 35: ' quand' (ID: 18026)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.185380220413208
    2. 'result' → logprob: -1.310380220413208
    3. 'a' → logprob: -2.435380220413208
    4. 'r' → logprob: -3.060380220413208
    5. ' ' → logprob: -3.185380220413208
    6. 'b' → logprob: -3.310380220413208
    7. '+' → logprob: -3.310380220413208
    8. '*' → logprob: -3.310380220413208
    9. 'n' → logprob: -3.810380220413208
    10. '#' → logprob: -4.060379981994629

Token 36: ' même' (ID: 9679)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.14643463492393494
    2. 'p' → logprob: -2.8964345455169678
    3. 'a' → logprob: -3.0214345455169678
    4. ' a' → logprob: -4.146434783935547
    5. ' ' → logprob: -4.646434783935547
    6. '(p' → logprob: -6.146434783935547
    7. ' on' → logprob: -6.396434783935547
    8. '(' → logprob: -8.146434783935547
    9. '_' → logprob: -8.271434783935547
    10. 'on' → logprob: -8.271434783935547

Token 37: '
' (ID: 198)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.6338907480239868
    2. ' ' → logprob: -1.8838907480239868
    3. '*' → logprob: -2.0088906288146973
    4. 'result' → logprob: -2.1338906288146973
    5. ':' → logprob: -2.3838906288146973
    6. ',' → logprob: -2.7588906288146973
    7. 'r' → logprob: -2.7588906288146973
    8. 'a' → logprob: -3.3838906288146973
    9. 'n' → logprob: -4.133890628814697
    10. 'i' → logprob: -4.508890628814697

Token 38: 'result' (ID: 2521)
  Prédit: 'result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.8710001111030579
    2. 'r' → logprob: -1.246000051498413
    3. 's' → logprob: -1.621000051498413
    4. 'b' → logprob: -4.121000289916992
    5. 'n' → logprob: -4.246000289916992
    6. 'v' → logprob: -4.621000289916992
    7. 'c' → logprob: -4.746000289916992
    8. 'm' → logprob: -4.996000289916992
    9. 'res' → logprob: -4.996000289916992
    10. 't' → logprob: -5.246000289916992

Token 39: 'at' (ID: 266)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6435614824295044
    2. '=' → logprob: -0.7685614824295044
    3. 'at' → logprob: -5.518561363220215
    4. '_' → logprob: -5.643561363220215
    5. 's' → logprob: -5.768561363220215
    6. 'a' → logprob: -9.268561363220215
    7. 'e' → logprob: -10.143561363220215
    8. ' ' → logprob: -10.643561363220215
    9. 'ats' → logprob: -10.768561363220215
    10. '_=' → logprob: -11.268561363220215

Token 40: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12463545054197311
    2. '=' → logprob: -2.3746354579925537
    3. '_' → logprob: -3.7496354579925537
    4. ' ' → logprob: -8.624635696411133
    5. ',' → logprob: -8.749635696411133
    6. 's' → logprob: -9.749635696411133
    7. ')' → logprob: -9.999635696411133
    8. '_space' → logprob: -10.249635696411133
    9. '_=' → logprob: -10.749635696411133
    10. 'space' → logprob: -11.124635696411133

Token 41: ' (' (ID: 350)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.23641261458396912
    2. ' a' → logprob: -1.6114126443862915
    3. ' (' → logprob: -5.861412525177002
    4. 'pow' → logprob: -6.236412525177002
    5. '(a' → logprob: -6.611412525177002
    6. '0' → logprob: -6.861412525177002
    7. 'p' → logprob: -6.986412525177002
    8. ' p' → logprob: -7.361412525177002
    9. '1' → logprob: -7.486412525177002
    10. ' ' → logprob: -7.986412525177002

Token 42: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.006319324020296335
    2. ' a' → logprob: -5.881319522857666
    3. 'p' → logprob: -6.631319522857666
    4. '2' → logprob: -7.006319522857666
    5. '(a' → logprob: -7.881319522857666
    6. '(' → logprob: -8.256319046020508
    7. '10' → logprob: -8.881319046020508
    8. '1' → logprob: -9.006319046020508
    9. ' (' → logprob: -9.131319046020508
    10. 'pow' → logprob: -9.881319046020508

Token 43: '*' (ID: 9)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6841815710067749
    2. ' +' → logprob: -1.809181571006775
    3. '**' → logprob: -2.3091816902160645
    4. '*' → logprob: -2.4341816902160645
    5. ' **' → logprob: -2.4341816902160645
    6. ' *' → logprob: -3.5591816902160645
    7. '+p' → logprob: -4.3091816902160645
    8. '*p' → logprob: -4.8091816902160645
    9. '-' → logprob: -6.1841816902160645
    10. ' ' → logprob: -6.4341816902160645

Token 44: '3' (ID: 18)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.04445119947195053
    2. ' p' → logprob: -4.6694512367248535
    3. '(' → logprob: -4.9194512367248535
    4. '2' → logprob: -4.9194512367248535
    5. '(p' → logprob: -5.1694512367248535
    6. '10' → logprob: -5.2944512367248535
    7. 'a' → logprob: -5.4194512367248535
    8. ' (' → logprob: -6.6694512367248535
    9. '3' → logprob: -7.6694512367248535
    10. '(a' → logprob: -8.044450759887695

Token 45: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -1.1319509744644165
    2. '+p' → logprob: -1.2569509744644165
    3. '+' → logprob: -1.7569509744644165
    4. ')' → logprob: -1.7569509744644165
    5. '*p' → logprob: -3.881950855255127
    6. '**' → logprob: -4.506950855255127
    7. ')+' → logprob: -5.131950855255127
    8. ' )' → logprob: -6.006950855255127
    9. 'p' → logprob: -6.381950855255127
    10. '*' → logprob: -6.631950855255127

Token 46: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.388182133436203
    2. 'p' → logprob: -1.1381821632385254
    3. ' ' → logprob: -7.388182163238525
    4. '2' → logprob: -8.138181686401367
    5. '7' → logprob: -9.263181686401367
    6. ' a' → logprob: -10.138181686401367
    7. '4' → logprob: -10.263181686401367
    8. '5' → logprob: -10.388181686401367
    9. ' (' → logprob: -10.388181686401367
    10. '10' → logprob: -10.513181686401367

Token 47: ')//' (ID: 60375)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0349334217607975
    2. ')**' → logprob: -4.284933567047119
    3. '*' → logprob: -4.659933567047119
    4. ' )' → logprob: -5.159933567047119
    5. ')//' → logprob: -6.159933567047119
    6. '**' → logprob: -6.159933567047119
    7. ' *' → logprob: -8.159933090209961
    8. '//' → logprob: -8.409933090209961
    9. ')/' → logprob: -8.909933090209961
    10. ')%' → logprob: -9.034933090209961

Token 48: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0034988655243068933
    2. ' ' → logprob: -5.8784990310668945
    3. '3' → logprob: -7.7534990310668945
    4. '4' → logprob: -8.503499031066895
    5. '5' → logprob: -10.628499031066895
    6. '7' → logprob: -10.878499031066895
    7. '1' → logprob: -12.003499031066895
    8. '10' → logprob: -12.753499031066895
    9. '19' → logprob: -13.003499031066895
    10. '6' → logprob: -13.628499031066895

Token 49: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 50: 'print' (ID: 1598)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 51: '(result' (ID: 8111)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005933893844485283
    2. '(result' → logprob: -5.13093376159668
    3. '("("' → logprob: -13.63093376159668
    4. '('' → logprob: -14.00593376159668
    5. ' (' → logprob: -14.38093376159668
    6. '(re' → logprob: -14.50593376159668
    7. '(resultado' → logprob: -14.75593376159668
    8. '(res' → logprob: -15.25593376159668
    9. 'result' → logprob: -15.25593376159668
    10. '(

' → logprob: -15.50593376159668

Token 52: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -7.684157026233152e-05
    2. ')' → logprob: -10.000077247619629
    3. 't' → logprob: -10.625077247619629
    4. 'a' → logprob: -13.500077247619629
    5. ' at' → logprob: -13.750077247619629
    6. ')t' → logprob: -13.750077247619629
    7. '	at' → logprob: -14.125077247619629
    8. 'ât' → logprob: -14.375077247619629
    9. 'tat' → logprob: -14.500077247619629
    10. 'ат' → logprob: -14.625077247619629

Token 53: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1472419600977446e-06
    2. ' )' → logprob: -14.250000953674316
    3. '))' → logprob: -15.000000953674316
    4. ')
' → logprob: -17.250001907348633
    5. ')`' → logprob: -17.250001907348633
    6. ')#' → logprob: -19.000001907348633
    7. '')' → logprob: -19.000001907348633
    8. '}' → logprob: -19.375001907348633
    9. '`)' → logprob: -19.875001907348633
    10. '）' → logprob: -20.250001907348633

Token 54: ' #' (ID: 1069)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.923076331615448
    2. ')' → logprob: -1.4230763912200928
    3. '<|end|>' → logprob: -1.4230763912200928
    4. '
' → logprob: -2.4230763912200928
    5. '```' → logprob: -4.423076152801514
    6. '\' → logprob: -4.923076152801514
    7. '#' → logprob: -5.798076152801514
    8. ' ' → logprob: -5.798076152801514
    9. '()' → logprob: -6.798076152801514
    10. 'newline' → logprob: -6.798076152801514

Token 55: ' voilà' (ID: 77612)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 56: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 57: ' c' (ID: 274)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 58: ''est' (ID: 6616)
  Prédit: ''est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''est' → logprob: -0.0907224491238594
    2. ''' → logprob: -3.0907225608825684
    3. 'a' → logprob: -3.8407225608825684
    4. 'est' → logprob: -4.465722560882568
    5. ''a' → logprob: -5.965722560882568
    6. 'e' → logprob: -6.090722560882568
    7. ''e' → logprob: -6.840722560882568
    8. ''''' → logprob: -7.840722560882568
    9. ''#' → logprob: -8.09072208404541
    10. 'c' → logprob: -8.21572208404541

Token 59: ' fait' (ID: 7473)
  Prédit: 'tout'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tout' → logprob: -0.3252989649772644
    2. ' tout' → logprob: -1.4502990245819092
    3. ' fini' → logprob: -3.200299024581909
    4. ' terminé' → logprob: -7.45029878616333
    5. ' ça' → logprob: -7.82529878616333
    6. ' ' → logprob: -7.82529878616333
    7. 'f' → logprob: -8.325299263000488
    8. '!' → logprob: -8.325299263000488
    9. ' simple' → logprob: -9.575299263000488
    10. 'ça' → logprob: -9.825299263000488

Token 60: ' je' (ID: 1264)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 61: ' crois' (ID: 65485)
  Prédit: '!'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '!' → logprob: -0.1612299680709839
    2. 's' → logprob: -2.9112300872802734
    3. '.' → logprob: -3.4112300872802734
    4. ' !' → logprob: -4.661230087280273
    5. ' pense' → logprob: -4.911230087280273
    6. '<|end|>' → logprob: -4.911230087280273
    7. 'm' → logprob: -5.536230087280273
    8. 'n' → logprob: -5.661230087280273
    9. ' .' → logprob: -5.786230087280273
    10. ' t' → logprob: -5.786230087280273

Token 62: '...' (ID: 1008)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 60
Tokens correctement prédits (1ère position, stricte): 14
Tokens correctement prédits (1ère position, avec adaptation): 14
Tokens correctement prédits (top 10): 28
Précision stricte (1ère position): 23.33%
Précision adaptée (1ère position): 23.33%
Précision (top 10): 46.67%
================================================================================
