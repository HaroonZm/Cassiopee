================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:19:01
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Lecture de deux entiers séparés par un espace à partir de l'entrée standard.
# map applique la fonction int à chaque élément résultant du découpage de la chaîne lue (input()) selon les espaces.
N, K = map(int, input().split())

# Calcul de la variable D comme N + 1.
# D représente une taille liée à des séquences binaires de longueur N.
D = N + 1

# Initialisation d'une matrice 'd' de taille D x (2^N).
# Chaque élément d[i][j] sera initialisé à 0.
# (1 << N) vaut 2 à la puissance N, ce qui donne le nombre total de séquences binaires de longueur N.
d = [[0] * (1 << N) for _ in range(D)]

# Initialisation d'une matrice 'f' de taille D x (2^N).
# Chaque élément f[i][j] sera également initialisé à 0.
# Cette matrice va probablement stocker des valeurs liées à des longueurs de séquences particulières.
f = [[0] * (1 << N) for _ in range(D)]

# Remplissage de la matrice 'd' avec les valeurs provenant des entrées suivantes.
# Pour chaque i de 0 à D-1 (soit D lignes de la matrice),
for i in range(D):
    # input() lit une chaîne de 0 et 1.
    # enumerate renvoie à la fois l'indice j et le caractère c pour chaque position.
    for j, c in enumerate(input()):
        # Si le caractère c est '1', on place 1 dans d[i][j], sinon l'élément reste à 0.
        if c == '1':
            d[i][j] = 1

# Construction de la matrice f.
# Cette matrice va stocker la longueur de la plus longue séquence de bits consécutifs, identiques, au début de la représentation binaire de j.
# On itère sur chaque i de 1 à D-1, représentant la longueur de séquences binaires considérées.
for i in range(1, D):
    # Pour chaque nombre j possible avec i bits (allant de 0 à 2^i - 1)
    for j in range(1 << i):
        # t récupère la valeur du bit le plus à gauche (bit de poids fort) de j.
        # On décale j vers la droite de i-1 positions, puis on effectue un ET binaire avec 1 pour isoler le bit.
        t = (j >> (i - 1)) & 1
        # r compte le nombre de bits initiaux (à partir du bit de poids fort) qui valent t.
        r = 0
        # On parcourt les bits du plus significatif au moins, tant que c'est égal à t.
        while r < i and ((j >> (i - 1 - r)) & 1) == t:
            r += 1
        # f[i][j] reçoit la longueur de ce préfixe homogène.
        f[i][j] = r

# On cherche à identifier le plus court préfixe dont la somme atteint au moins K.
# On itère sur tous les i de 0 à D-1 (longueurs de préfixes).
for i in range(D):
    # ii parcourt tous les indices strictement supérieurs à i jusqu'à D-1.
    for ii in range(i + 1, D):
        # z est la différence entre ii et i, c'est-à-dire la longueur de la séquence supplémentaire.
        z = ii - i
        # mask permet d'extraire les z derniers bits de j.
        mask = (1 << z) - 1
        # On parcourt tous les j possibles de longueur ii (de 0 jusqu'à 2^ii - 1).
        for j in range(1 << ii):
            # On ajoute à d[i][j >> z] la valeur de d[ii][j].
            # Cela correspond à regrouper par le préfixe de longueur i.
            d[i][j >> z] += d[ii][j]
            # r est la longueur du préfixe homogène, calculée sur les z derniers bits de j.
            r = f[z][j & mask]
            # Si r != z, cela signifie que la fin de j n'est pas complètement homogène.
            if r != z:
                # On ajoute d[ii][j] à la case correspondant à un préfixe plus court non homogène.
                # On "compacte" j en ramenant la séquence d'indice ii à une séquence de longueur ii - r, 
                # On déplace le préfixe de j >> z et on garde les (z - r) bits restants, 
                # ce qui permet de comptabiliser les séquences qui n'ont pas un préfixe homogène complet.
                d[ii - r][((j >> z) << (z - r)) | (j & ((1 << (z - r)) - 1))] += d[ii][j]
    # Après ces étapes de propagation, on teste pour chaque j de longueur i :
    for j in range(1 << i):
        # Si le nombre d'occurrences d[i][j] est supérieur ou égal à K
        if d[i][j] >= K:
            # On garde i et j, car c'est le plus court préfixe (parcours par i croissant)
            I = i
            J = j
            # On s'arrête dès qu'on a trouvé un préfixe valide (break sort de la boucle sur j)
            break

# Affichage du résultat.
# Si I et J sont tous deux égaux à 0, alors on affiche la chaîne vide,
# Sinon, on affiche la représentation binaire de J sur I caractères (avec des zéros ajoutés à gauche si besoin).
if I == J == 0:
    # Affichage d'une chaîne vide si on a une solution "vide".
    print('')
else:
    # bin(J) produit une chaîne du genre '0b101'; on prend tout après le '0b', et on complète à gauche avec des zéros pour obtenir I caractères.
    print(bin(J)[2:].zfill(I))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Lecture' (ID: 106534)
  → Token d'amorce (pas de prédiction)

Token 2: ' de' (ID: 334)
  → Token d'amorce (pas de prédiction)

Token 3: ' deux' (ID: 10301)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.35520797967910767
    2. ' fichier' → logprob: -1.355207920074463
    3. 'f' → logprob: -3.730207920074463
    4. ' fichiers' → logprob: -5.230207920074463
    5. 's' → logprob: -5.605207920074463
    6. ' f' → logprob: -5.855207920074463
    7. 'l' → logprob: -6.230207920074463
    8. ''' → logprob: -6.980207920074463
    9. ' l' → logprob: -7.730207920074463
    10. ' données' → logprob: -7.730207920074463

Token 4: ' ent' (ID: 1121)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6636614203453064
    2. '_' → logprob: -1.6636614799499512
    3. 'l' → logprob: -2.538661479949951
    4. '\' → logprob: -3.288661479949951
    5. '_l' → logprob: -3.413661479949951
    6. '_f' → logprob: -3.913661479949951
    7. '_n' → logprob: -4.288661479949951
    8. ' _' → logprob: -4.538661479949951
    9. ' lignes' → logprob: -4.538661479949951
    10. 'n' → logprob: -4.788661479949951

Token 5: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.24150322377681732
    2. 'r' → logprob: -1.8665032386779785
    3. 'ités' → logprob: -4.1165032386779785
    4. 'ri' → logprob: -4.2415032386779785
    5. 'ières' → logprob: -4.4915032386779785
    6. 'i' → logprob: -4.6165032386779785
    7. 'êtes' → logprob: -6.1165032386779785
    8. 'ité' → logprob: -6.8665032386779785
    9. '```' → logprob: -7.1165032386779785
    10. '#' → logprob: -7.4915032386779785

Token 6: ' sépar' (ID: 97160)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.04747151583433151
    2. 'n' → logprob: -3.547471523284912
    3. 'x' → logprob: -4.172471523284912
    4. 'i' → logprob: -6.922471523284912
    5. 'e' → logprob: -7.297471523284912
    6. '#' → logprob: -8.547471046447754
    7. '\n' → logprob: -9.047471046447754
    8. 'v' → logprob: -9.672471046447754
    9. '```' → logprob: -9.672471046447754
    10. '\' → logprob: -10.797471046447754

Token 7: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.03294510766863823
    2. 's' → logprob: -3.532945156097412
    3. 'par' → logprob: -6.657945156097412
    4. 'é' → logprob: -7.032945156097412
    5. ' par' → logprob: -8.032944679260254
    6. 'ès' → logprob: -9.032944679260254
    7. '```' → logprob: -9.032944679260254
    8. 'es' → logprob: -9.282944679260254
    9. ' ' → logprob: -10.032944679260254
    10. ''s' → logprob: -10.532944679260254

Token 8: ' par' (ID: 686)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8552224040031433
    2. 'a' → logprob: -1.730222463607788
    3. 's' → logprob: -1.980222463607788
    4. 'e' → logprob: -3.105222463607788
    5. '_' → logprob: -3.605222463607788
    6. 'par' → logprob: -3.605222463607788
    7. ':' → logprob: -3.730222463607788
    8. 'x' → logprob: -3.980222463607788
    9. ' ' → logprob: -4.105222225189209
    10. 'u' → logprob: -4.480222225189209

Token 9: ' un' (ID: 537)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.06088026240468025
    2. ''un' → logprob: -3.435880184173584
    3. 'une' → logprob: -4.310880184173584
    4. ' un' → logprob: -5.060880184173584
    5. '_' → logprob: -6.185880184173584
    6. '_un' → logprob: -6.310880184173584
    7. ''' → logprob: -7.060880184173584
    8. 'des' → logprob: -7.435880184173584
    9. ''une' → logprob: -8.310880661010742
    10. 'es' → logprob: -8.560880661010742

Token 10: ' espace' (ID: 66004)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.06729183346033096
    2. ' espace' → logprob: -3.942291736602783
    3. 'esp' → logprob: -3.942291736602783
    4. ''espace' → logprob: -4.067291736602783
    5. '_' → logprob: -6.067291736602783
    6. 'space' → logprob: -6.192291736602783
    7. 's' → logprob: -6.317291736602783
    8. '```' → logprob: -7.567291736602783
    9. 'e' → logprob: -7.942291736602783
    10. '’espace' → logprob: -8.317292213439941

Token 11: ' à' (ID: 1221)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.055770423263311386
    2. 'x' → logprob: -3.0557703971862793
    3. 'n' → logprob: -5.055770397186279
    4. 'e' → logprob: -7.555770397186279
    5. '```' → logprob: -9.305770874023438
    6. 'i' → logprob: -9.805770874023438
    7. 'ent' → logprob: -10.180770874023438
    8. 'v' → logprob: -10.555770874023438
    9. '`' → logprob: -11.305770874023438
    10. ' a' → logprob: -12.055770874023438

Token 12: ' partir' (ID: 12100)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.09923572093248367
    2. 'la' → logprob: -2.599235773086548
    3. 's' → logprob: -4.724235534667969
    4. 'a' → logprob: -6.224235534667969
    5. '```' → logprob: -6.349235534667969
    6. ' l' → logprob: -6.474235534667969
    7. 'input' → logprob: -7.224235534667969
    8. 'part' → logprob: -7.349235534667969
    9. 'c' → logprob: -7.474235534667969
    10. '1' → logprob: -7.724235534667969

Token 13: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.27734968066215515
    2. ' de' → logprob: -2.2773497104644775
    3. 'd' → logprob: -2.7773497104644775
    4. 's' → logprob: -3.4023497104644775
    5. ' du' → logprob: -4.027349472045898
    6. 'de' → logprob: -4.152349472045898
    7. 'du' → logprob: -5.652349472045898
    8. '`' → logprob: -6.402349472045898
    9. ')' → logprob: -6.527349472045898
    10. '_' → logprob: -7.402349472045898

Token 14: ' l' (ID: 305)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.47322675585746765
    2. 'l' → logprob: -1.59822678565979
    3. ' input' → logprob: -1.84822678565979
    4. ' l' → logprob: -4.973226547241211
    5. 'la' → logprob: -5.598226547241211
    6. '=input' → logprob: -6.223226547241211
    7. '```' → logprob: -6.473226547241211
    8. ' ' → logprob: -7.098226547241211
    9. ' la' → logprob: -7.848226547241211
    10. '`' → logprob: -7.848226547241211

Token 15: ''entrée' (ID: 115820)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.20844122767448425
    2. 'e' → logprob: -2.2084412574768066
    3. ''entrée' → logprob: -3.8334412574768066
    4. ''\' → logprob: -4.333441257476807
    5. ''i' → logprob: -4.708441257476807
    6. 'i' → logprob: -4.833441257476807
    7. 'a' → logprob: -4.958441257476807
    8. ''espace' → logprob: -5.458441257476807
    9. '`' → logprob: -5.958441257476807
    10. 'r' → logprob: -6.208441257476807

Token 16: ' standard' (ID: 7024)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.1394031047821045
    2. 'x' → logprob: -2.2644031047821045
    3. 'n' → logprob: -4.014403343200684
    4. 'e' → logprob: -5.014403343200684
    5. 'i' → logprob: -7.139403343200684
    6. '```' → logprob: -8.139403343200684
    7. 'v' → logprob: -8.764403343200684
    8. '`' → logprob: -9.264403343200684
    9. 'ent' → logprob: -9.389403343200684
    10. ' a' → logprob: -10.389403343200684

Token 17: '.
' (ID: 558)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.14352315664291382
    2. 'x' → logprob: -2.5185232162475586
    3. 'n' → logprob: -3.1435232162475586
    4. 'e' → logprob: -4.893523216247559
    5. 'i' → logprob: -6.268523216247559
    6. 'v' → logprob: -8.143523216247559
    7. '```' → logprob: -9.018523216247559
    8. 'ent' → logprob: -9.268523216247559
    9. '`' → logprob: -10.893523216247559
    10. ' a' → logprob: -11.143523216247559

Token 18: '#' (ID: 2)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.1199788898229599
    2. 'x' → logprob: -2.619978904724121
    3. 'n' → logprob: -3.369978904724121
    4. 'e' → logprob: -5.369978904724121
    5. 'v' → logprob: -7.619978904724121
    6. 'i' → logprob: -7.619978904724121
    7. '```' → logprob: -9.119978904724121
    8. 'ent' → logprob: -10.119978904724121
    9. '#' → logprob: -10.869978904724121
    10. '`' → logprob: -11.744978904724121

Token 19: ' map' (ID: 4014)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.03414686769247055
    2. 'x' → logprob: -3.534146785736084
    3. 'n' → logprob: -5.534146785736084
    4. 'ent' → logprob: -8.534147262573242
    5. 'e' → logprob: -9.534147262573242
    6. 'i' → logprob: -9.534147262573242
    7. ' a' → logprob: -10.284147262573242
    8. '#' → logprob: -10.909147262573242
    9. '```' → logprob: -11.159147262573242
    10. 'input' → logprob: -11.784147262573242

Token 20: ' applique' (ID: 180579)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0073961298912763596
    2. '(int' → logprob: -5.007396221160889
    3. '(lambda' → logprob: -8.00739574432373
    4. '(
' → logprob: -8.50739574432373
    5. ' (' → logprob: -10.25739574432373
    6. 'int' → logprob: -10.63239574432373
    7. '(m' → logprob: -11.00739574432373
    8. '(input' → logprob: -11.63239574432373
    9. '(str' → logprob: -12.13239574432373
    10. '()' → logprob: -12.38239574432373

Token 21: ' la' (ID: 557)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01254131831228733
    2. '(lambda' → logprob: -4.5125412940979
    3. '(
' → logprob: -7.6375412940979
    4. '(int' → logprob: -8.012541770935059
    5. '()' → logprob: -9.012541770935059
    6. '(map' → logprob: -9.012541770935059
    7. ' (' → logprob: -9.762541770935059
    8. 's' → logprob: -9.887541770935059
    9. ')' → logprob: -9.887541770935059
    10. '(str' → logprob: -10.387541770935059

Token 22: ' fonction' (ID: 17610)
  Prédit: 'fonction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fonction' → logprob: -0.06638386100530624
    2. ' fonction' → logprob: -2.8163838386535645
    3. 'fon' → logprob: -5.8163838386535645
    4. 'function' → logprob: -6.9413838386535645
    5. ' function' → logprob: -8.316384315490723
    6. 'int' → logprob: -9.066384315490723
    7. 'entrée' → logprob: -10.691384315490723
    8. 'str' → logprob: -11.691384315490723
    9. ' même' → logprob: -11.816384315490723
    10. 'fn' → logprob: -12.066384315490723

Token 23: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.2156337946653366
    2. 'int' → logprob: -2.3406338691711426
    3. ' str' → logprob: -2.7156338691711426
    4. ' input' → logprob: -3.9656338691711426
    5. ' ' → logprob: -5.590633869171143
    6. 'str' → logprob: -5.715633869171143
    7. ' `' → logprob: -6.340633869171143
    8. 'input' → logprob: -6.590633869171143
    9. '```' → logprob: -7.090633869171143
    10. '`' → logprob: -8.340633392333984

Token 24: ' à' (ID: 1221)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004841507878154516
    2. '(
' → logprob: -6.504841327667236
    3. '(int' → logprob: -7.254841327667236
    4. 's' → logprob: -7.254841327667236
    5. '(input' → logprob: -7.504841327667236
    6. 'input' → logprob: -8.379841804504395
    7. '()' → logprob: -8.879841804504395
    8. ' (' → logprob: -8.879841804504395
    9. ',' → logprob: -9.129841804504395
    10. '(s' → logprob: -9.504841804504395

Token 25: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.2996775507926941
    2. 'cha' → logprob: -2.174677610397339
    3. 'l' → logprob: -2.549677610397339
    4. 'la' → logprob: -3.049677610397339
    5. ' la' → logprob: -4.79967737197876
    6. ' each' → logprob: -5.79967737197876
    7. ' chacune' → logprob: -6.17467737197876
    8. ' l' → logprob: -6.54967737197876
    9. 'Chaque' → logprob: -7.17467737197876
    10. 'ch' → logprob: -7.29967737197876

Token 26: ' élément' (ID: 99627)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.0006844374001957476
    2. ' élément' → logprob: -7.5006842613220215
    3. 'element' → logprob: -9.12568473815918
    4. 'él' → logprob: -12.25068473815918
    5. 'é' → logprob: -12.37568473815918
    6. 'entrée' → logprob: -12.62568473815918
    7. 'elem' → logprob: -13.25068473815918
    8. 'part' → logprob: -13.25068473815918
    9. '```' → logprob: -13.62568473815918
    10. 'val' → logprob: -13.75068473815918

Token 27: ' résult' (ID: 31657)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.012210577726364136
    2. '(
' → logprob: -5.637210369110107
    3. 's' → logprob: -5.762210369110107
    4. 'input' → logprob: -6.637210369110107
    5. ',' → logprob: -7.512210369110107
    6. '(input' → logprob: -7.762210369110107
    7. 'x' → logprob: -8.262210845947266
    8. '*' → logprob: -8.387210845947266
    9. '(ent' → logprob: -8.637210845947266
    10. 'e' → logprob: -8.762210845947266

Token 28: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.0012773767812177539
    2. '#' → logprob: -7.876277446746826
    3. 'é' → logprob: -8.501276969909668
    4. 'ent' → logprob: -8.876276969909668
    5. 'u' → logprob: -8.876276969909668
    6. 'from' → logprob: -9.126276969909668
    7. 'de' → logprob: -10.001276969909668
    8. 'd' → logprob: -10.001276969909668
    9. 'e' → logprob: -10.376276969909668
    10. ' de' → logprob: -10.376276969909668

Token 29: ' du' (ID: 1462)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.540516197681427
    2. 's' → logprob: -1.2905161380767822
    3. ' de' → logprob: -3.1655161380767822
    4. 'input' → logprob: -3.5405161380767822
    5. ',' → logprob: -4.665516376495361
    6. ')' → logprob: -5.290516376495361
    7. '[' → logprob: -5.415516376495361
    8. ' ' → logprob: -5.415516376495361
    9. 'de' → logprob: -5.540516376495361
    10. '(input' → logprob: -5.540516376495361

Token 30: ' décou' (ID: 68302)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.9384260773658752
    2. 'split' → logprob: -1.4384260177612305
    3. ' split' → logprob: -1.4384260177612305
    4. 'input' → logprob: -2.0634260177612305
    5. 'spl' → logprob: -5.8134260177612305
    6. 'str' → logprob: -6.4384260177612305
    7. '.split' → logprob: -6.9384260177612305
    8. 'entrée' → logprob: -8.06342601776123
    9. 'l' → logprob: -8.68842601776123
    10. ' splitting' → logprob: -8.81342601776123

Token 31: 'page' (ID: 5342)
  Prédit: 'page'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'page' → logprob: -0.0017371822614222765
    2. 'p' → logprob: -6.376737117767334
    3. 'pa' → logprob: -11.001737594604492
    4. '#' → logprob: -12.626737594604492
    5. 'pag' → logprob: -12.876737594604492
    6. ' page' → logprob: -13.251737594604492
    7. 'pe' → logprob: -13.376737594604492
    8. 'pages' → logprob: -13.626737594604492
    9. '`' → logprob: -14.001737594604492
    10. '```' → logprob: -14.251737594604492

Token 32: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4584724009037018
    2. ' de' → logprob: -2.208472490310669
    3. ' d' → logprob: -2.458472490310669
    4. 's' → logprob: -3.083472490310669
    5. '(' → logprob: -4.20847225189209
    6. 'd' → logprob: -4.33347225189209
    7. 'input' → logprob: -4.33347225189209
    8. ',' → logprob: -4.70847225189209
    9. ' des' → logprob: -4.95847225189209
    10. 'de' → logprob: -4.95847225189209

Token 33: ' la' (ID: 557)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.6275812387466431
    2. ' input' → logprob: -1.627581238746643
    3. 'input' → logprob: -1.752581238746643
    4. 'la' → logprob: -3.2525811195373535
    5. ' l' → logprob: -3.5025811195373535
    6. ' la' → logprob: -3.6275811195373535
    7. 's' → logprob: -7.7525811195373535
    8. ' ' → logprob: -9.002581596374512
    9. 'entrée' → logprob: -9.002581596374512
    10. 'chaine' → logprob: -9.752581596374512

Token 34: ' chaîne' (ID: 89288)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5928251147270203
    2. ' input' → logprob: -1.217825174331665
    3. 'entrée' → logprob: -2.217825174331665
    4. 'chaine' → logprob: -3.467825174331665
    5. ' chaîne' → logprob: -5.342824935913086
    6. 'ligne' → logprob: -6.467824935913086
    7. ' ligne' → logprob: -6.592824935913086
    8. ' chaine' → logprob: -7.592824935913086
    9. 'ent' → logprob: -7.842824935913086
    10. 'l' → logprob: -7.842824935913086

Token 35: ' l' (ID: 305)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6578424572944641
    2. 's' → logprob: -1.6578423976898193
    3. 'e' → logprob: -2.9078423976898193
    4. ',' → logprob: -2.9078423976898193
    5. 'n' → logprob: -3.0328423976898193
    6. 'input' → logprob: -3.7828423976898193
    7. 'i' → logprob: -4.282842636108398
    8. '.' → logprob: -4.407842636108398
    9. 'x' → logprob: -4.657842636108398
    10. '`' → logprob: -4.907842636108398

Token 36: 'ue' (ID: 466)
  Prédit: 'igne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'igne' → logprob: -0.05384448170661926
    2. 'a' → logprob: -4.053844451904297
    3. 'ine' → logprob: -4.428844451904297
    4. 'iste' → logprob: -4.803844451904297
    5. 'e' → logprob: -5.678844451904297
    6. 'ecture' → logprob: -5.678844451904297
    7. 'input' → logprob: -6.178844451904297
    8. ''' → logprob: -6.928844451904297
    9. 'i' → logprob: -7.178844451904297
    10. 'ist' → logprob: -7.428844451904297

Token 37: ' (' (ID: 350)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2917758524417877
    2. 'a' → logprob: -2.416775941848755
    3. 'x' → logprob: -3.416775941848755
    4. 'e' → logprob: -3.541775941848755
    5. 'ent' → logprob: -3.666775941848755
    6. ',' → logprob: -4.041775703430176
    7. 's' → logprob: -4.791775703430176
    8. 'i' → logprob: -4.791775703430176
    9. '.' → logprob: -5.041775703430176
    10. 'l' → logprob: -5.416775703430176

Token 38: 'input' (ID: 2586)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.0469715595245361
    2. ' input' → logprob: -1.4219715595245361
    3. 'input' → logprob: -1.5469715595245361
    4. ' la' → logprob: -2.671971559524536
    5. 'la' → logprob: -2.921971559524536
    6. ' l' → logprob: -2.921971559524536
    7. ')' → logprob: -4.796971321105957
    8. ' ' → logprob: -5.796971321105957
    9. 'chaine' → logprob: -6.921971321105957
    10. 'entrée' → logprob: -7.171971321105957

Token 39: '())' (ID: 3516)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18889735639095306
    2. '())' → logprob: -2.0638973712921143
    3. '()' → logprob: -3.6888973712921143
    4. ' )' → logprob: -4.813897132873535
    5. ' par' → logprob: -5.438897132873535
    6. ').' → logprob: -6.563897132873535
    7. 'par' → logprob: -6.688897132873535
    8. '))' → logprob: -6.813897132873535
    9. '().' → logprob: -6.938897132873535
    10. '_par' → logprob: -7.688897132873535

Token 40: ' selon' (ID: 27571)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.1955957412719727
    2. 'a' → logprob: -1.4455957412719727
    3. 'n' → logprob: -1.5705957412719727
    4. 's' → logprob: -2.5705957412719727
    5. ',' → logprob: -3.0705957412719727
    6. 'e' → logprob: -3.3205957412719727
    7. 'ent' → logprob: -3.8205957412719727
    8. ':' → logprob: -3.9455957412719727
    9. '=' → logprob: -5.445595741271973
    10. ' =' → logprob: -5.445595741271973

Token 41: ' les' (ID: 1341)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.30120840668678284
    2. ''un' → logprob: -1.9262083768844604
    3. 'l' → logprob: -2.67620849609375
    4. '"' → logprob: -4.17620849609375
    5. ''l' → logprob: -4.17620849609375
    6. ' l' → logprob: -4.80120849609375
    7. ''esp' → logprob: -6.55120849609375
    8. ''espace' → logprob: -6.55120849609375
    9. ''s' → logprob: -7.17620849609375
    10. '```' → logprob: -7.55120849609375

Token 42: ' espaces' (ID: 98361)
  Prédit: ' espaces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espaces' → logprob: -0.2620924115180969
    2. 'esp' → logprob: -2.137092351913452
    3. ''esp' → logprob: -3.012092351913452
    4. ''espace' → logprob: -3.387092351913452
    5. ' espace' → logprob: -4.262092590332031
    6. 'es' → logprob: -4.887092590332031
    7. ' ' → logprob: -5.512092590332031
    8. ''' → logprob: -7.012092590332031
    9. 'car' → logprob: -7.512092590332031
    10. '’espace' → logprob: -7.637092590332031

Token 43: '.
' (ID: 558)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.05006057396531105
    2. 'x' → logprob: -3.550060510635376
    3. 'n' → logprob: -4.300060749053955
    4. ',' → logprob: -6.300060749053955
    5. '```' → logprob: -6.925060749053955
    6. ':' → logprob: -7.050060749053955
    7. 'ent' → logprob: -7.050060749053955
    8. 'i' → logprob: -7.425060749053955
    9. 'e' → logprob: -7.550060749053955
    10. '`' → logprob: -8.050060272216797

Token 44: 'N' (ID: 45)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.03738220036029816
    2. 'x' → logprob: -3.412382125854492
    3. 'n' → logprob: -5.662382125854492
    4. '```' → logprob: -8.662382125854492
    5. 'i' → logprob: -10.412382125854492
    6. 'e' → logprob: -10.662382125854492
    7. '`' → logprob: -12.037382125854492
    8. 'ent' → logprob: -12.162382125854492
    9. '#' → logprob: -12.412382125854492
    10. 'A' → logprob: -12.412382125854492

Token 45: ',' (ID: 11)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.11722280085086823
    2. ',' → logprob: -3.242222785949707
    3. 'ombres' → logprob: -3.242222785949707
    4. 'a' → logprob: -4.992222785949707
    5. 'ombre' → logprob: -5.242222785949707
    6. '1' → logprob: -5.367222785949707
    7. '=' → logprob: -5.992222785949707
    8. ' =' → logprob: -5.992222785949707
    9. 'n' → logprob: -6.117222785949707
    10. 'N' → logprob: -6.242222785949707

Token 46: ' K' (ID: 658)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.577780544757843
    2. ' M' → logprob: -0.827780544757843
    3. 'm' → logprob: -6.827780723571777
    4. ' ' → logprob: -7.577780723571777
    5. ' m' → logprob: -10.077780723571777
    6. 'n' → logprob: -10.452780723571777
    7. 'K' → logprob: -10.702780723571777
    8. 'r' → logprob: -10.827780723571777
    9. 'space' → logprob: -11.452780723571777
    10. ' n' → logprob: -11.452780723571777

Token 47: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11293613165616989
    2. '=' → logprob: -2.237936019897461
    3. ',' → logprob: -9.112936019897461
    4. ' ' → logprob: -13.737936019897461
    5. ' =
' → logprob: -13.987936019897461
    6. '=input' → logprob: -14.862936019897461
    7. '=int' → logprob: -15.737936019897461
    8. ' ,' → logprob: -15.862936019897461
    9. '=N' → logprob: -15.987936019897461
    10. '=

' → logprob: -15.987936019897461

Token 48: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.5759433507919312
    2. 'map' → logprob: -0.8259433507919312
    3. '	map' → logprob: -13.575942993164062
    4. 'm' → logprob: -14.075942993164062
    5. 'list' → logprob: -14.450942993164062
    6. ' ' → logprob: -14.575942993164062
    7. ' ' → logprob: -15.075942993164062
    8. ' list' → logprob: -15.325942993164062
    9. '(map' → logprob: -16.700942993164062
    10. '   ' → logprob: -16.950942993164062

Token 49: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0036501993890851736
    2. '(' → logprob: -5.628650188446045
    3. 'int' → logprob: -10.628650665283203
    4. '(
' → logprob: -11.503650665283203
    5. '<int' → logprob: -11.503650665283203
    6. '[int' → logprob: -13.503650665283203
    7. ' int' → logprob: -13.878650665283203
    8. ' (' → logprob: -13.878650665283203
    9. '(str' → logprob: -14.003650665283203
    10. '(lambda' → logprob: -14.378650665283203

Token 50: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.4523297846317291
    2. 'input' → logprob: -1.8273297548294067
    3. ',input' → logprob: -1.8273297548294067
    4. ',' → logprob: -3.4523298740386963
    5. ')' → logprob: -4.827329635620117
    6. '(' → logprob: -6.702329635620117
    7. ' input' → logprob: -6.952329635620117
    8. ' (' → logprob: -8.952329635620117
    9. ' ,' → logprob: -9.702329635620117
    10. '=input' → logprob: -10.202329635620117

Token 51: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0036079094279557467
    2. ' input' → logprob: -5.628607749938965
    3. '(input' → logprob: -11.878607749938965
    4. ')' → logprob: -14.753607749938965
    5. '<input' → logprob: -15.503607749938965
    6. '=input' → logprob: -15.878607749938965
    7. '[input' → logprob: -16.37860870361328
    8. '	input' → logprob: -17.00360870361328
    9. ',input' → logprob: -17.25360870361328
    10. ' ' → logprob: -17.37860870361328

Token 52: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.005802824627608061
    2. '())' → logprob: -5.380802631378174
    3. '()' → logprob: -6.755802631378174
    4. '()))' → logprob: -11.755803108215332
    5. ')' → logprob: -12.005803108215332
    6. ' ().' → logprob: -14.005803108215332
    7. '());' → logprob: -14.380803108215332
    8. ' ())' → logprob: -14.755803108215332
    9. '()).' → logprob: -15.005803108215332
    10. '(' → logprob: -15.380803108215332

Token 53: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0067190444096922874
    2. 'strip' → logprob: -5.00671911239624
    3. 'rstrip' → logprob: -12.756718635559082
    4. ' split' → logprob: -14.381718635559082
    5. 'spl' → logprob: -16.3817195892334
    6. ')' → logprob: -16.6317195892334
    7. '(split' → logprob: -17.2567195892334
    8. 'read' → logprob: -18.5067195892334
    9. ' ' → logprob: -18.5067195892334
    10. ' strip' → logprob: -18.8817195892334

Token 54: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.03161869943141937
    2. '()))' → logprob: -3.531618595123291
    3. '()' → logprob: -6.406618595123291
    4. ')' → logprob: -8.65661907196045
    5. '))' → logprob: -10.65661907196045
    6. ' ())' → logprob: -11.90661907196045
    7. '())
' → logprob: -12.78161907196045
    8. '(' → logprob: -13.15661907196045
    9. '()))
' → logprob: -13.65661907196045
    10. '()),' → logprob: -13.90661907196045

Token 55: '#' (ID: 2)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6639586091041565
    2. '#' → logprob: -1.5389585494995117
    3. '<|end|>' → logprob: -1.7889585494995117
    4. ')' → logprob: -3.4139585494995117
    5. '\n' → logprob: -3.9139585494995117
    6. ' 
' → logprob: -4.163958549499512
    7. '
' → logprob: -4.163958549499512
    8. '.' → logprob: -5.663958549499512
    9. '  
' → logprob: -6.288958549499512
    10. ',' → logprob: -6.288958549499512

Token 56: ' Calcul' (ID: 57243)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.2073323726654053
    2. '#' → logprob: -1.4573323726654053
    3. 'result' → logprob: -1.8323323726654053
    4. 'for' → logprob: -2.3323323726654053
    5. 's' → logprob: -2.8323323726654053
    6. 'if' → logprob: -2.8323323726654053
    7. ' result' → logprob: -4.082332611083984
    8. ' if' → logprob: -4.082332611083984
    9. ' for' → logprob: -4.207332611083984
    10. ' print' → logprob: -4.832332611083984

Token 57: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.767632782459259
    2. '=' → logprob: -1.8926327228546143
    3. ' =' → logprob: -2.1426327228546143
    4. ' ' → logprob: -2.2676327228546143
    5. 's' → logprob: -3.0176327228546143
    6. ' de' → logprob: -3.5176327228546143
    7. ' N' → logprob: -4.017632961273193
    8. ' des' → logprob: -4.642632961273193
    9. ')' → logprob: -4.767632961273193
    10. '(' → logprob: -5.017632961273193

Token 58: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.2922611236572266
    2. 'min' → logprob: -1.2922611236572266
    3. ' min' → logprob: -1.7922611236572266
    4. ' N' → logprob: -2.1672611236572266
    5. ' K' → logprob: -3.4172611236572266
    6. 'max' → logprob: -3.6672611236572266
    7. 'la' → logprob: -3.7922611236572266
    8. 'N' → logprob: -3.9172611236572266
    9. ' max' → logprob: -3.9172611236572266
    10. ' ' → logprob: -4.042261123657227

Token 59: ' variable' (ID: 11076)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.15337342023849487
    2. ' somme' → logprob: -2.9033734798431396
    3. 'val' → logprob: -3.2783734798431396
    4. 'diff' → logprob: -3.5283734798431396
    5. 'pu' → logprob: -5.5283732414245605
    6. ' différence' → logprob: -6.2783732414245605
    7. 'comb' → logprob: -6.6533732414245605
    8. 'ré' → logprob: -7.1533732414245605
    9. ' puissance' → logprob: -7.1533732414245605
    10. 'nombre' → logprob: -7.1533732414245605

Token 60: ' D' (ID: 415)
  Prédit: ' result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' result' → logprob: -1.2990989685058594
    2. ' max' → logprob: -2.0490989685058594
    3. 'result' → logprob: -2.0490989685058594
    4. ' S' → logprob: -2.1740989685058594
    5. ' resultat' → logprob: -3.1740989685058594
    6. ' s' → logprob: -3.4240989685058594
    7. 's' → logprob: -3.5490989685058594
    8. ' M' → logprob: -3.5490989685058594
    9. ' min' → logprob: -3.6740989685058594
    10. 'max' → logprob: -3.9240989685058594

Token 61: ' comme' (ID: 7971)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10039515048265457
    2. '=' → logprob: -2.3503952026367188
    3. ',' → logprob: -9.475395202636719
    4. ' ' → logprob: -10.100395202636719
    5. 'e' → logprob: -10.475395202636719
    6. ' =
' → logprob: -12.225395202636719
    7. 'istance' → logprob: -12.475395202636719
    8. '=int' → logprob: -12.600395202636719
    9. '=D' → logprob: -12.975395202636719
    10. 'f' → logprob: -13.225395202636719

Token 62: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.9083068370819092
    2. ' N' → logprob: -1.4083068370819092
    3. 'abs' → logprob: -1.5333068370819092
    4. ' abs' → logprob: -3.158306837081909
    5. ' K' → logprob: -3.283306837081909
    6. 'K' → logprob: -3.658306837081909
    7. 'min' → logprob: -4.533307075500488
    8. ' la' → logprob: -4.783307075500488
    9. 'max' → logprob: -5.908307075500488
    10. ' min' → logprob: -6.408307075500488

Token 63: ' +' (ID: 659)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.95081627368927
    2. '-' → logprob: -1.45081627368927
    3. '*' → logprob: -2.3258161544799805
    4. ' //' → logprob: -2.4508161544799805
    5. ' *' → logprob: -2.9508161544799805
    6. '%' → logprob: -3.0758161544799805
    7. ' %' → logprob: -3.7008161544799805
    8. '**' → logprob: -3.8258161544799805
    9. ' **' → logprob: -4.4508161544799805
    10. ' ' → logprob: -4.5758161544799805

Token 64: ' ' (ID: 220)
  Prédit: ' K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.6368964910507202
    2. 'K' → logprob: -0.7618964910507202
    3. ' ' → logprob: -6.13689661026001
    4. '1' → logprob: -6.26189661026001
    5. ' (' → logprob: -9.511896133422852
    6. ' ' → logprob: -9.761896133422852
    7. '2' → logprob: -10.636896133422852
    8. '(' → logprob: -11.511896133422852
    9. '  ' → logprob: -11.636896133422852
    10. '	K' → logprob: -12.011896133422852

Token 65: '1' (ID: 16)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.009969154372811317
    2. ' K' → logprob: -4.634969234466553
    3. '1' → logprob: -8.759968757629395
    4. ' ' → logprob: -10.134968757629395
    5. '(' → logprob: -12.259968757629395
    6. ' (' → logprob: -12.259968757629395
    7. '  ' → logprob: -13.759968757629395
    8. '2' → logprob: -13.884968757629395
    9. '   ' → logprob: -14.009968757629395
    10. ' ' → logprob: -14.259968757629395

Token 66: '.
' (ID: 558)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 67: '#' (ID: 2)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.034920867532491684
    2. ' D' → logprob: -3.4099209308624268
    3. ' ' → logprob: -6.784920692443848
    4. ' 
' → logprob: -9.534920692443848
    5. 'N' → logprob: -11.159920692443848
    6. '  
' → logprob: -11.284920692443848
    7. '<|end|>' → logprob: -11.909920692443848
    8. '`' → logprob: -12.284920692443848
    9. ' =' → logprob: -12.409920692443848
    10. ',' → logprob: -12.409920692443848

Token 68: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.0430198609828949
    2. ' D' → logprob: -3.1680197715759277
    3. '```' → logprob: -11.918020248413086
    4. ' ' → logprob: -12.043020248413086
    5. '`' → logprob: -12.918020248413086
    6. ' ' → logprob: -13.793020248413086
    7. '
' → logprob: -14.543020248413086
    8. ' 
' → logprob: -14.543020248413086
    9. ' `' → logprob: -14.793020248413086
    10. '1' → logprob: -14.918020248413086

Token 69: ' représente' (ID: 88912)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.013273291289806366
    2. '=' → logprob: -4.513273239135742
    3. ' ' → logprob: -6.263273239135742
    4. '<|end|>' → logprob: -8.888273239135742
    5. '+' → logprob: -10.138273239135742
    6. ',' → logprob: -10.388273239135742
    7. ' +' → logprob: -10.888273239135742
    8. '-' → logprob: -11.138273239135742
    9. ' +=' → logprob: -11.263273239135742
    10. 'D' → logprob: -11.763273239135742

Token 70: ' une' (ID: 2463)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.7391402721405029
    2. ' l' → logprob: -1.364140272140503
    3. ' le' → logprob: -1.864140272140503
    4. ' ' → logprob: -3.614140272140503
    5. ' N' → logprob: -4.114140510559082
    6. ' une' → logprob: -4.239140510559082
    7. 'l' → logprob: -4.489140510559082
    8. 'le' → logprob: -4.614140510559082
    9. ' un' → logprob: -4.739140510559082
    10. ' "' → logprob: -5.489140510559082

Token 71: ' taille' (ID: 41644)
  Prédit: ' distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' distance' → logprob: -1.153204321861267
    2. ' valeur' → logprob: -1.903204321861267
    3. ' variable' → logprob: -2.0282044410705566
    4. 'distance' → logprob: -2.6532044410705566
    5. ' limite' → logprob: -2.6532044410705566
    6. ' constante' → logprob: -2.9032044410705566
    7. ' différence' → logprob: -3.6532044410705566
    8. ' quantité' → logprob: -3.6532044410705566
    9. ' profondeur' → logprob: -3.9032044410705566
    10. 'val' → logprob: -4.278204441070557

Token 72: ' liée' (ID: 162589)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9734957218170166
    2. ' ' → logprob: -1.3484957218170166
    3. ' de' → logprob: -1.7234957218170166
    4. '<|end|>' → logprob: -2.7234957218170166
    5. '=' → logprob: -2.9734957218170166
    6. ' +' → logprob: -4.2234954833984375
    7. '  ' → logprob: -4.9734954833984375
    8. ' des' → logprob: -5.0984954833984375
    9. '_' → logprob: -5.3484954833984375
    10. '+' → logprob: -5.5984954833984375

Token 73: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.03206026181578636
    2. ' au' → logprob: -4.282060146331787
    3. 'au' → logprob: -5.032060146331787
    4. ' ' → logprob: -5.782060146331787
    5. ' =' → logprob: -5.907060146331787
    6. 'à' → logprob: -6.532060146331787
    7. '=' → logprob: -6.907060146331787
    8. ' a' → logprob: -6.907060146331787
    9. ' aux' → logprob: -7.407060146331787
    10. ' to' → logprob: -7.782060146331787

Token 74: ' des' (ID: 731)
  Prédit: ' K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.5130330920219421
    2. 'K' → logprob: -1.513033151626587
    3. ' l' → logprob: -3.013033151626587
    4. 'l' → logprob: -3.138033151626587
    5. ' la' → logprob: -3.263033151626587
    6. ' N' → logprob: -3.888033151626587
    7. ' ' → logprob: -4.388032913208008
    8. 'N' → logprob: -4.638032913208008
    9. 'la' → logprob: -5.138032913208008
    10. 'range' → logprob: -8.388032913208008

Token 75: ' sé' (ID: 7462)
  Prédit: ' tableaux'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' tableaux' → logprob: -1.031004548072815
    2. ' l' → logprob: -1.906004548072815
    3. ' contraintes' → logprob: -2.1560044288635254
    4. ' données' → logprob: -2.4060044288635254
    5. ' indices' → logprob: -2.5310044288635254
    6. ' la' → logprob: -3.4060044288635254
    7. 'l' → logprob: -4.031004428863525
    8. 'indices' → logprob: -4.156004428863525
    9. ' paramètres' → logprob: -4.406004428863525
    10. ' problèmes' → logprob: -4.718504428863525

Token 76: 'quences' (ID: 16559)
  Prédit: 'quences'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quences' → logprob: -0.0500195249915123
    2. 'ries' → logprob: -3.4250195026397705
    3. 'rie' → logprob: -4.55001974105835
    4. 'quence' → logprob: -5.42501974105835
    5. '   ' → logprob: -8.425019264221191
    6. 'q' → logprob: -8.800019264221191
    7. '```' → logprob: -9.050019264221191
    8. '#' → logprob: -9.050019264221191
    9. 'quent' → logprob: -9.550019264221191
    10. 'r' → logprob: -9.675019264221191

Token 77: ' bin' (ID: 6958)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.23331999778747559
    2. ' =' → logprob: -1.9833199977874756
    3. ' de' → logprob: -4.108320236206055
    4. 'D' → logprob: -4.483320236206055
    5. '=' → logprob: -5.233320236206055
    6. ' D' → logprob: -5.733320236206055
    7. ')' → logprob: -5.733320236206055
    8. 'de' → logprob: -5.858320236206055
    9. ',' → logprob: -5.983320236206055
    10. '+' → logprob: -5.983320236206055

Token 78: 'aires' (ID: 8507)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.198614478111267
    2. 'q' → logprob: -1.198614478111267
    3. 'r' → logprob: -1.573614478111267
    4. 'quences' → logprob: -2.8236145973205566
    5. 'aires' → logprob: -2.8236145973205566
    6. 'aire' → logprob: -4.073614597320557
    7. 'quence' → logprob: -4.448614597320557
    8. 'qu' → logprob: -5.198614597320557
    9. '   ' → logprob: -5.448614597320557
    10. '```' → logprob: -5.698614597320557

Token 79: ' de' (ID: 334)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.07412707805633545
    2. '=' → logprob: -3.574127197265625
    3. ' =' → logprob: -3.699127197265625
    4. '.' → logprob: -5.949127197265625
    5. '+' → logprob: -6.074127197265625
    6. '*' → logprob: -6.199127197265625
    7. ',' → logprob: -6.449127197265625
    8. ' ' → logprob: -6.699127197265625
    9. 'd' → logprob: -6.824127197265625
    10. '
' → logprob: -6.824127197265625

Token 80: ' longueur' (ID: 104613)
  Prédit: ' longueur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' longueur' → logprob: -0.723056972026825
    2. ' N' → logprob: -1.3480570316314697
    3. ' ' → logprob: -1.9730570316314697
    4. 'N' → logprob: -3.3480570316314697
    5. 'long' → logprob: -4.223056793212891
    6. 'l' → logprob: -4.348056793212891
    7. ' l' → logprob: -4.723056793212891
    8. ' bits' → logprob: -5.098056793212891
    9. ' taille' → logprob: -5.473056793212891
    10. 'length' → logprob: -5.598056793212891

Token 81: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.3188668489456177
    2. 'N' → logprob: -1.9438668489456177
    3. ' ' → logprob: -2.068866729736328
    4. '(N' → logprob: -6.693866729736328
    5. 'D' → logprob: -7.193866729736328
    6. '1' → logprob: -7.943866729736328
    7. ' D' → logprob: -8.318866729736328
    8. '  ' → logprob: -9.068866729736328
    9. ' (' → logprob: -9.193866729736328
    10. 'n' → logprob: -9.193866729736328

Token 82: '.
' (ID: 558)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.13111743330955505
    2. '+' → logprob: -3.131117343902588
    3. ' =' → logprob: -4.256117343902588
    4. '-' → logprob: -4.381117343902588
    5. '=' → logprob: -4.631117343902588
    6. ' +' → logprob: -4.631117343902588
    7. '.' → logprob: -5.131117343902588
    8. ' D' → logprob: -5.256117343902588
    9. ' ' → logprob: -5.631117343902588
    10. ',' → logprob: -5.881117343902588

Token 83: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.005202809348702431
    2. '
' → logprob: -5.380202770233154
    3. ' D' → logprob: -9.130203247070312
    4. ' 
' → logprob: -9.505203247070312
    5. '  
' → logprob: -9.630203247070312
    6. '`
' → logprob: -9.630203247070312
    7. '' → logprob: -9.880203247070312
    8. '
' → logprob: -10.505203247070312
    9. '```' → logprob: -10.755203247070312
    10. '

' → logprob: -10.755203247070312

Token 84: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07908079028129578
    2. '=' → logprob: -2.579080820083618
    3. ' ' → logprob: -9.454080581665039
    4. '+' → logprob: -10.454080581665039
    5. ' =
' → logprob: -11.079080581665039
    6. '.' → logprob: -11.329080581665039
    7. ' +=' → logprob: -11.454080581665039
    8. ' *=' → logprob: -11.579080581665039
    9. ' *' → logprob: -12.079080581665039
    10. '*' → logprob: -12.204080581665039

Token 85: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.020840002223849297
    2. 'N' → logprob: -3.8958399295806885
    3. ' ' → logprob: -8.14583969116211
    4. ' ' → logprob: -11.89583969116211
    5. ' (' → logprob: -14.27083969116211
    6. '	N' → logprob: -15.02083969116211
    7. ' 
' → logprob: -16.02083969116211
    8. ' `' → logprob: -16.52083969116211
    9. ' ' → logprob: -16.52083969116211
    10. 'n' → logprob: -16.77083969116211

Token 86: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2520519495010376
    2. '+' → logprob: -1.5020519495010376
    3. ' ' → logprob: -9.127052307128906
    4. ' +
' → logprob: -11.377052307128906
    5. ' plus' → logprob: -13.877052307128906
    6. '+
' → logprob: -14.627052307128906
    7. '<|end|>' → logprob: -15.002052307128906
    8. ' ' → logprob: -15.252052307128906
    9. ' +

' → logprob: -16.252052307128906
    10. '1' → logprob: -16.252052307128906

Token 87: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011047814972698689
    2. ' ' → logprob: -4.511047840118408
    3. ' ' → logprob: -16.76104736328125
    4. '```' → logprob: -18.76104736328125
    5. '  ' → logprob: -19.01104736328125
    6. '<|end|>' → logprob: -19.26104736328125
    7. '１' → logprob: -19.63604736328125
    8. '' → logprob: -19.63604736328125
    9. '   ' → logprob: -19.63604736328125
    10. '۱' → logprob: -20.07354736328125

Token 88: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.5
    3. '```' → logprob: -21.75
    4. '<|end|>' → logprob: -22.5
    5. '  ' → logprob: -23.0
    6. '１' → logprob: -23.125
    7. '۱' → logprob: -23.5
    8. '' → logprob: -23.625
    9. '-' → logprob: -24.0
    10. '   ' → logprob: -24.25

Token 89: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.039496734738349915
    2. '

' → logprob: -4.289496898651123
    3. '#' → logprob: -4.664496898651123
    4. '
' → logprob: -5.289496898651123
    5. ' 
' → logprob: -5.789496898651123
    6. '<|end|>' → logprob: -6.414496898651123
    7. '' → logprob: -6.664496898651123
    8. ' ' → logprob: -7.039496898651123
    9. '  
' → logprob: -7.039496898651123
    10. '*' → logprob: -7.289496898651123

Token 90: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5943940281867981
    2. '
' → logprob: -1.8443939685821533
    3. ' ' → logprob: -3.3443939685821533
    4. '*' → logprob: -3.3443939685821533
    5. ',' → logprob: -3.4693939685821533
    6. ')' → logprob: -3.8443939685821533
    7. '[' → logprob: -3.9693939685821533
    8. '' → logprob: -3.9693939685821533
    9. ' 
' → logprob: -3.9693939685821533
    10. '.' → logprob: -4.219394207000732

Token 91: ' Initial' (ID: 9209)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.7016636729240417
    2. 'dp' → logprob: -1.7016637325286865
    3. 'print' → logprob: -2.9516637325286865
    4. '#' → logprob: -2.9516637325286865
    5. 'for' → logprob: -3.0766637325286865
    6. 'res' → logprob: -3.7016637325286865
    7. 'count' → logprob: -3.9516637325286865
    8. 'total' → logprob: -4.701663494110107
    9. 'answer' → logprob: -4.826663494110107
    10. ' result' → logprob: -4.826663494110107

Token 92: 'isation' (ID: 6993)
  Prédit: 'isation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isation' → logprob: -0.6253889203071594
    2. 's' → logprob: -2.0003888607025146
    3. '#' → logprob: -2.2503888607025146
    4. 'z' → logprob: -2.8753888607025146
    5. 'ization' → logprob: -3.5003888607025146
    6. '_value' → logprob: -3.7503888607025146
    7. '```' → logprob: -4.375389099121094
    8. 'i' → logprob: -4.625389099121094
    9. '_' → logprob: -4.875389099121094
    10. 'is' → logprob: -5.000389099121094

Token 93: ' d' (ID: 272)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7724329233169556
    2. ' ' → logprob: -1.8974329233169556
    3. 'd' → logprob: -2.022432804107666
    4. 'D' → logprob: -3.272432804107666
    5. ' _' → logprob: -3.272432804107666
    6. ' d' → logprob: -3.272432804107666
    7. 'dp' → logprob: -3.272432804107666
    8. 's' → logprob: -4.272432804107666
    9. 'a' → logprob: -4.522432804107666
    10. 'space' → logprob: -5.522432804107666

Token 94: ''une' (ID: 13337)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.1810169219970703
    2. ' ' → logprob: -1.1810169219970703
    3. 'e' → logprob: -1.4310169219970703
    4. ''' → logprob: -3.0560169219970703
    5. 'a' → logprob: -3.9310169219970703
    6. ' a' → logprob: -3.9310169219970703
    7. 'u' → logprob: -4.43101692199707
    8. ' e' → logprob: -4.68101692199707
    9. ' =' → logprob: -4.68101692199707
    10. ' '' → logprob: -5.18101692199707

Token 95: ' matr' (ID: 25095)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.4906257390975952
    2. ' liste' → logprob: -1.9906257390975952
    3. 'list' → logprob: -2.7406258583068848
    4. 'l' → logprob: -3.7406258583068848
    5. 'variable' → logprob: -4.365625858306885
    6. 'lst' → logprob: -4.490625858306885
    7. '#' → logprob: -4.490625858306885
    8. ' variable' → logprob: -4.615625858306885
    9. 'v' → logprob: -4.740625858306885
    10. 's' → logprob: -4.865625858306885

Token 96: 'ice' (ID: 603)
  Prédit: 'ice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ice' → logprob: -0.3187163174152374
    2. 'atrice' → logprob: -1.318716287612915
    3. 'rice' → logprob: -5.568716526031494
    4. 'ix' → logprob: -6.818716526031494
    5. 'ixe' → logprob: -9.443716049194336
    6. 'ices' → logprob: -9.568716049194336
    7. 'atrix' → logprob: -9.818716049194336
    8. 'atriz' → logprob: -9.943716049194336
    9. 'ière' → logprob: -10.068716049194336
    10. 'ic' → logprob: -10.568716049194336

Token 97: ' '' (ID: 461)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.12020640075206757
    2. ' dp' → logprob: -2.370206356048584
    3. 'DP' → logprob: -5.995206356048584
    4. ' =' → logprob: -6.245206356048584
    5. ' M' → logprob: -6.245206356048584
    6. 'd' → logprob: -6.495206356048584
    7. ' d' → logprob: -6.620206356048584
    8. ' de' → logprob: -6.620206356048584
    9. 'D' → logprob: -6.745206356048584
    10. ' DP' → logprob: -6.745206356048584

Token 98: 'd' (ID: 67)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.08944287896156311
    2. ' dp' → logprob: -3.4644429683685303
    3. 'DP' → logprob: -3.5894429683685303
    4. 'D' → logprob: -4.714442729949951
    5. ' DP' → logprob: -6.089442729949951
    6. 'C' → logprob: -6.089442729949951
    7. 'M' → logprob: -6.089442729949951
    8. 'F' → logprob: -6.714442729949951
    9. 'A' → logprob: -7.026942729949951
    10. 'E' → logprob: -7.526942729949951

Token 99: ''' (ID: 6)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.10974719375371933
    2. 'P' → logprob: -3.6097471714019775
    3. ' =' → logprob: -3.7347471714019775
    4. 'e' → logprob: -3.9847471714019775
    5. 'ist' → logprob: -4.984747409820557
    6. '_dp' → logprob: -5.359747409820557
    7. '_dynamic' → logprob: -5.734747409820557
    8. ''' → logprob: -5.984747409820557
    9. '')' → logprob: -6.109747409820557
    10. 'dp' → logprob: -6.109747409820557

Token 100: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0023151186760514975
    2. '=' → logprob: -6.377315044403076
    3. '[' → logprob: -8.627315521240234
    4. 'd' → logprob: -8.877315521240234
    5. ' d' → logprob: -9.127315521240234
    6. ' =[' → logprob: -9.627315521240234
    7. ' ' → logprob: -10.002315521240234
    8. '[]' → logprob: -10.877315521240234
    9. ',' → logprob: -11.252315521240234
    10. '=[' → logprob: -11.502315521240234

Token 101: ' taille' (ID: 41644)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.21328940987586975
    2. '[' → logprob: -2.588289499282837
    3. ' [[' → logprob: -2.588289499282837
    4. '0' → logprob: -4.338289260864258
    5. ' [' → logprob: -4.713289260864258
    6. '[N' → logprob: -4.713289260864258
    7. '[D' → logprob: -4.838289260864258
    8. 'size' → logprob: -6.963289260864258
    9. 'D' → logprob: -8.088289260864258
    10. ' ' → logprob: -8.338289260864258

Token 102: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.3450857698917389
    2. ' D' → logprob: -1.3450857400894165
    3. ' (' → logprob: -4.095085620880127
    4. ' ' → logprob: -5.095085620880127
    5. '(D' → logprob: -5.220085620880127
    6. '[D' → logprob: -6.095085620880127
    7. ' [' → logprob: -8.595086097717285
    8. '[' → logprob: -8.720086097717285
    9. '  ' → logprob: -8.845086097717285
    10. '   ' → logprob: -9.095086097717285

Token 103: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.6972174048423767
    2. 'x' → logprob: -1.1972174644470215
    3. 'D' → logprob: -2.6972174644470215
    4. '×' → logprob: -3.4472174644470215
    5. '[D' → logprob: -3.8222174644470215
    6. ' ' → logprob: -3.8222174644470215
    7. 'd' → logprob: -4.8222174644470215
    8. ' =' → logprob: -4.8222174644470215
    9. '[' → logprob: -5.0722174644470215
    10. '=' → logprob: -5.5722174644470215

Token 104: ' (' (ID: 350)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.018168555572628975
    2. ' D' → logprob: -4.0181684494018555
    3. ' ' → logprob: -11.268168449401855
    4. ' ' → logprob: -13.768168449401855
    5. '   ' → logprob: -13.893168449401855
    6. '	D' → logprob: -13.893168449401855
    7. ' (' → logprob: -14.393168449401855
    8. '(D' → logprob: -14.893168449401855
    9. 'd' → logprob: -15.018168449401855
    10. '```' → logprob: -15.143168449401855

Token 105: '2' (ID: 17)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.19062486290931702
    2. 'K' → logprob: -2.315624952316284
    3. '(D' → logprob: -3.190624952316284
    4. '(K' → logprob: -4.190624713897705
    5. '(' → logprob: -4.940624713897705
    6. ' (' → logprob: -5.315624713897705
    7. ' D' → logprob: -5.815624713897705
    8. '2' → logprob: -6.815624713897705
    9. 'N' → logprob: -7.065624713897705
    10. ' K' → logprob: -7.315624713897705

Token 106: '^' (ID: 61)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.4943891167640686
    2. ' *' → logprob: -1.1193890571594238
    3. '*K' → logprob: -2.994389057159424
    4. 'K' → logprob: -5.369389057159424
    5. 'D' → logprob: -5.494389057159424
    6. '**' → logprob: -6.244389057159424
    7. ')' → logprob: -7.369389057159424
    8. ' ' → logprob: -7.494389057159424
    9. '+' → logprob: -8.119389533996582
    10. '*N' → logprob: -8.244389533996582

Token 107: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.40575310587882996
    2. 'K' → logprob: -1.1557531356811523
    3. 'D' → logprob: -4.280753135681152
    4. '(N' → logprob: -6.030753135681152
    5. '(' → logprob: -6.530753135681152
    6. ' N' → logprob: -8.155753135681152
    7. '(K' → logprob: -8.405753135681152
    8. ' K' → logprob: -8.530753135681152
    9. ' (' → logprob: -8.780753135681152
    10. '(D' → logprob: -9.905753135681152

Token 108: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.258643239736557
    2. ',' → logprob: -2.13364315032959
    3. ' )' → logprob: -2.88364315032959
    4. ' ,' → logprob: -3.25864315032959
    5. ' ' → logprob: -5.63364315032959
    6. '**' → logprob: -5.63364315032959
    7. '),' → logprob: -5.75864315032959
    8. ' **' → logprob: -6.63364315032959
    9. ' ),' → logprob: -7.63364315032959
    10. '[' → logprob: -7.63364315032959

Token 109: '#' (ID: 2)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.22928540408611298
    2. ' d' → logprob: -1.6042853593826294
    3. '[' → logprob: -6.35428524017334
    4. ' =' → logprob: -6.60428524017334
    5. ' [' → logprob: -8.60428524017334
    6. ' ' → logprob: -8.72928524017334
    7. '[
' → logprob: -9.35428524017334
    8. ']' → logprob: -9.47928524017334
    9. ',' → logprob: -9.47928524017334
    10. ' [
' → logprob: -10.10428524017334

Token 110: ' Chaque' (ID: 94758)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.07006492465734482
    2. ' d' → logprob: -2.6950650215148926
    3. ' ' → logprob: -9.445064544677734
    4. '[' → logprob: -10.445064544677734
    5. '2' → logprob: -12.695064544677734
    6. '[
' → logprob: -12.695064544677734
    7. '```' → logprob: -12.820064544677734
    8. ']' → logprob: -13.195064544677734
    9. ' [' → logprob: -13.195064544677734
    10. '0' → logprob: -13.320064544677734

Token 111: ' élément' (ID: 99627)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6796472668647766
    2. ' d' → logprob: -1.6796472072601318
    3. ' [' → logprob: -2.179647207260132
    4. 'd' → logprob: -2.304647207260132
    5. ' row' → logprob: -3.304647207260132
    6. 'row' → logprob: -4.179647445678711
    7. ' ' → logprob: -4.804647445678711
    8. '[
' → logprob: -4.804647445678711
    9. '[d' → logprob: -5.304647445678711
    10. ' element' → logprob: -5.429647445678711

Token 112: ' d' (ID: 272)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4673002064228058
    2. '=' → logprob: -1.5923001766204834
    3. '[' → logprob: -2.4673001766204834
    4. ' d' → logprob: -2.7173001766204834
    5. ' de' → logprob: -5.0923004150390625
    6. 'd' → logprob: -5.3423004150390625
    7. ' est' → logprob: -5.9673004150390625
    8. ' [' → logprob: -6.8423004150390625
    9. ' ' → logprob: -7.0923004150390625
    10. ' is' → logprob: -7.7173004150390625

Token 113: '[i' (ID: 1768)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6807327270507812
    2. ' =' → logprob: -1.3057327270507812
    3. '['' → logprob: -1.8057327270507812
    4. '=' → logprob: -3.5557327270507812
    5. '[i' → logprob: -4.930732727050781
    6. '.append' → logprob: -5.555732727050781
    7. '[e' → logprob: -5.680732727050781
    8. 'e' → logprob: -6.180732727050781
    9. '=[' → logprob: -6.180732727050781
    10. '[]' → logprob: -6.555732727050781

Token 114: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.18043987452983856
    2. ']' → logprob: -1.805439829826355
    3. '].' → logprob: -8.805439949035645
    4. ' ][' → logprob: -8.930439949035645
    5. ']=' → logprob: -9.680439949035645
    6. '[' → logprob: -9.680439949035645
    7. '   ' → logprob: -9.930439949035645
    8. '][:' → logprob: -9.930439949035645
    9. '][]' → logprob: -9.930439949035645
    10. '],' → logprob: -10.930439949035645

Token 115: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.015125616453588009
    2. ' j' → logprob: -4.890125751495361
    3. ']' → logprob: -5.265125751495361
    4. ' ]' → logprob: -7.265125751495361
    5. 'k' → logprob: -8.140125274658203
    6. ' ' → logprob: -8.390125274658203
    7. '0' → logprob: -8.515125274658203
    8. '][' → logprob: -8.890125274658203
    9. 'x' → logprob: -9.202625274658203
    10. '2' → logprob: -9.452625274658203

Token 116: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002760533709079027
    2. ']=' → logprob: -6.627760410308838
    3. '=' → logprob: -7.252760410308838
    4. ' ]' → logprob: -7.502760410308838
    5. ' =' → logprob: -9.627760887145996
    6. '][' → logprob: -10.377760887145996
    7. ' is' → logprob: -10.877760887145996
    8. ')' → logprob: -11.252760887145996
    9. ' ' → logprob: -11.877760887145996
    10. '[' → logprob: -12.002760887145996

Token 117: ' sera' (ID: 15511)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6337790489196777
    2. ' =' → logprob: -0.7587790489196777
    3. ']' → logprob: -7.133779048919678
    4. ']=' → logprob: -8.883779525756836
    5. '=[' → logprob: -9.383779525756836
    6. '[' → logprob: -9.758779525756836
    7. '=[]' → logprob: -10.508779525756836
    8. ' ' → logprob: -10.883779525756836
    9. ' is' → logprob: -11.508779525756836
    10. '#' → logprob: -11.883779525756836

Token 118: ' initial' (ID: 4871)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -1.2388217449188232
    2. 'initial' → logprob: -1.3638217449188232
    3. ' initial' → logprob: -1.3638217449188232
    4. ' un' → logprob: -2.7388217449188232
    5. ' initialized' → logprob: -2.9888217449188232
    6. '0' → logprob: -3.1138217449188232
    7. ' ' → logprob: -4.488821983337402
    8. 'une' → logprob: -4.863821983337402
    9. ' utilisé' → logprob: -5.238821983337402
    10. 'initialized' → logprob: -5.238821983337402

Token 119: 'isé' (ID: 30065)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7281057834625244
    2. 'isé' → logprob: -1.1031057834625244
    3. 'sé' → logprob: -1.7281057834625244
    4. 'se' → logprob: -5.353105545043945
    5. '#' → logprob: -6.978105545043945
    6. 'isée' → logprob: -7.228105545043945
    7. 'ser' → logprob: -7.978105545043945
    8. 'z' → logprob: -9.228105545043945
    9. 'é' → logprob: -9.228105545043945
    10. 'sed' → logprob: -9.478105545043945

Token 120: ' à' (ID: 1221)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5459725856781006
    2. '=' → logprob: -1.2959725856781006
    3. ' à' → logprob: -2.0459725856781006
    4. 'à' → logprob: -4.42097282409668
    5. '[' → logprob: -6.67097282409668
    6. ',' → logprob: -6.92097282409668
    7. '=[' → logprob: -7.54597282409668
    8. ']' → logprob: -7.54597282409668
    9. '0' → logprob: -7.92097282409668
    10. ' par' → logprob: -8.17097282409668

Token 121: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.031759243458509445
    2. ' ' → logprob: -3.531759262084961
    3. '-' → logprob: -7.531759262084961
    4. 'float' → logprob: -7.531759262084961
    5. 'False' → logprob: -7.906759262084961
    6. '[]' → logprob: -9.156759262084961
    7. ' float' → logprob: -9.281759262084961
    8. ' -' → logprob: -9.531759262084961
    9. ' False' → logprob: -9.656759262084961
    10. '[' → logprob: -10.281759262084961

Token 122: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002719991374760866
    2. 'False' → logprob: -6.752719879150391
    3. 'float' → logprob: -7.377719879150391
    4. '[' → logprob: -8.25271987915039
    5. '[]' → logprob: -8.37771987915039
    6. ' ' → logprob: -8.62771987915039
    7. '-' → logprob: -8.87771987915039
    8. 'None' → logprob: -10.12771987915039
    9. '[]
' → logprob: -11.00271987915039
    10. '1' → logprob: -11.37771987915039

Token 123: '.
' (ID: 558)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.07478070259094238
    2. ' =' → logprob: -2.8247807025909424
    3. ' d' → logprob: -5.449780464172363
    4. '
' → logprob: -5.699780464172363
    5. '=' → logprob: -6.699780464172363
    6. ']' → logprob: -7.199780464172363
    7. ' =
' → logprob: -7.574780464172363
    8. '[' → logprob: -7.824780464172363
    9. ',' → logprob: -8.074780464172363
    10. ',
' → logprob: -8.199780464172363

Token 124: '#' (ID: 2)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -5.157039049663581e-05
    2. '[
' → logprob: -11.125051498413086
    3. ' d' → logprob: -11.375051498413086
    4. '
' → logprob: -11.500051498413086
    5. '```' → logprob: -12.250051498413086
    6. '`
' → logprob: -12.750051498413086
    7. '[' → logprob: -13.375051498413086
    8. '' → logprob: -14.000051498413086
    9. ' 
' → logprob: -14.500051498413086
    10. '``' → logprob: -14.500051498413086

Token 125: ' (' (ID: 350)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -8.721228368813172e-05
    2. '
' → logprob: -9.500086784362793
    3. ' d' → logprob: -11.875086784362793
    4. '```' → logprob: -13.000086784362793
    5. ' 
' → logprob: -13.875086784362793
    6. '

' → logprob: -14.375086784362793
    7. '`
' → logprob: -15.000086784362793
    8. '  
' → logprob: -15.375086784362793
    9. '``' → logprob: -15.625086784362793
    10. '#' → logprob: -15.875086784362793

Token 126: '1' (ID: 16)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.058492135256528854
    2. ')' → logprob: -3.6834921836853027
    3. ' d' → logprob: -3.9334921836853027
    4. ']' → logprob: -4.933492183685303
    5. ')d' → logprob: -6.933492183685303
    6. '[
' → logprob: -7.183492183685303
    7. '[' → logprob: -7.558492183685303
    8. ' )' → logprob: -7.683492183685303
    9. ')
' → logprob: -7.808492183685303
    10. ' ]' → logprob: -7.808492183685303

Token 127: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.6648645997047424
    2. ' <<' → logprob: -0.7898645997047424
    3. ')' → logprob: -4.164864540100098
    4. ']' → logprob: -5.289864540100098
    5. ',' → logprob: -5.789864540100098
    6. '[' → logprob: -6.414864540100098
    7. ' ' → logprob: -7.164864540100098
    8. ' )' → logprob: -7.289864540100098
    9. '<<(' → logprob: -7.289864540100098
    10. '0' → logprob: -7.414864540100098

Token 128: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.12721629440784454
    2. ' N' → logprob: -2.127216339111328
    3. ')' → logprob: -8.252216339111328
    4. ' ' → logprob: -11.002216339111328
    5. ' )' → logprob: -12.252216339111328
    6. '	N' → logprob: -13.002216339111328
    7. '
' → logprob: -14.752216339111328
    8. ' (' → logprob: -14.752216339111328
    9. ' ' → logprob: -14.752216339111328
    10. '(N' → logprob: -14.752216339111328

Token 129: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005998577689751983
    2. ' )' → logprob: -7.8755998611450195
    3. '+' → logprob: -9.00059986114502
    4. ')
' → logprob: -10.00059986114502
    5. ')

' → logprob: -11.75059986114502
    6. '))' → logprob: -12.25059986114502
    7. '),' → logprob: -12.50059986114502
    8. ' ' → logprob: -12.75059986114502
    9. ')>>' → logprob: -12.87559986114502
    10. '#' → logprob: -13.00059986114502

Token 130: ' vaut' (ID: 83004)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.210846409201622
    2. ')' → logprob: -1.8358464241027832
    3. ')]' → logprob: -5.210846424102783
    4. 'for' → logprob: -5.460846424102783
    5. ' ]' → logprob: -5.710846424102783
    6. 'd' → logprob: -5.710846424102783
    7. '][' → logprob: -5.835846424102783
    8. ']
' → logprob: -6.085846424102783
    9. ',' → logprob: -6.460846424102783
    10. '#' → logprob: -6.460846424102783

Token 131: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2898508310317993
    2. '2' → logprob: -1.4148508310317993
    3. '1' → logprob: -4.91485071182251
    4. ' (' → logprob: -7.16485071182251
    5. '(' → logprob: -8.539851188659668
    6. '0' → logprob: -8.789851188659668
    7. ' pow' → logprob: -10.039851188659668
    8. '102' → logprob: -10.539851188659668
    9. '32' → logprob: -10.914851188659668
    10. 'pow' → logprob: -11.039851188659668

Token 132: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.009662355296313763
    2. ' ' → logprob: -5.00966215133667
    3. '1' → logprob: -6.00966215133667
    4. 'pow' → logprob: -8.384662628173828
    5. '(' → logprob: -8.509662628173828
    6. ' (' → logprob: -10.759662628173828
    7. '102' → logprob: -11.009662628173828
    8. ' pow' → logprob: -11.634662628173828
    9. '104' → logprob: -12.884662628173828
    10. '  ' → logprob: -13.384662628173828

Token 133: ' à' (ID: 1221)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.0030917972326278687
    2. ' **' → logprob: -5.878091812133789
    3. ')' → logprob: -8.628091812133789
    4. '^' → logprob: -9.878091812133789
    5. ' ' → logprob: -11.003091812133789
    6. ')**' → logprob: -11.253091812133789
    7. 'N' → logprob: -11.503091812133789
    8. '*' → logprob: -12.128091812133789
    9. '**)' → logprob: -13.003091812133789
    10. '```' → logprob: -13.128091812133789

Token 134: ' la' (ID: 557)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.003283113706856966
    2. ' N' → logprob: -5.8782830238342285
    3. 'la' → logprob: -8.378283500671387
    4. ' la' → logprob: -9.128283500671387
    5. 'l' → logprob: -9.503283500671387
    6. '^' → logprob: -11.003283500671387
    7. 'n' → logprob: -11.628283500671387
    8. '**' → logprob: -12.128283500671387
    9. ')' → logprob: -12.503283500671387
    10. '```' → logprob: -12.628283500671387

Token 135: ' puissance' (ID: 63494)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00014287306112237275
    2. 'pu' → logprob: -9.750143051147461
    3. 'power' → logprob: -10.250143051147461
    4. ' puissance' → logprob: -10.625143051147461
    5. '```' → logprob: -12.000143051147461
    6. 'i' → logprob: -12.625143051147461
    7. '#' → logprob: -12.750143051147461
    8. 'pow' → logprob: -12.750143051147461
    9. 'Pu' → logprob: -13.125143051147461
    10. 'D' → logprob: -13.250143051147461

Token 136: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.023306040093302727
    2. ' N' → logprob: -3.773306131362915
    3. ' ' → logprob: -10.148305892944336
    4. '(N' → logprob: -11.648305892944336
    5. '	N' → logprob: -12.523305892944336
    6. ' (' → logprob: -13.273305892944336
    7. ' ' → logprob: -13.398305892944336
    8. 'D' → logprob: -14.023305892944336
    9. ',' → logprob: -14.273305892944336
    10. '  ' → logprob: -14.398305892944336

Token 137: ',' (ID: 11)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.3058196306228638
    2. '
' → logprob: -1.3058196306228638
    3. ']' → logprob: -1.5558196306228638
    4. ')' → logprob: -2.430819511413574
    5. ')
' → logprob: -2.555819511413574
    6. ']
' → logprob: -3.055819511413574
    7. '#' → logprob: -4.680819511413574
    8. ' d' → logprob: -4.930819511413574
    9. '' → logprob: -6.305819511413574
    10. '  
' → logprob: -6.305819511413574

Token 138: ' ce' (ID: 2357)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6496230959892273
    2. ')' → logprob: -1.399623155593872
    3. ' )' → logprob: -2.899623155593872
    4. ' dtype' → logprob: -3.524623155593872
    5. ' [' → logprob: -3.524623155593872
    6. ' D' → logprob: -4.024622917175293
    7. '[' → logprob: -4.274622917175293
    8. 'space' → logprob: -4.399622917175293
    9. ' space' → logprob: -4.649622917175293
    10. 'D' → logprob: -4.899622917175293

Token 139: ' qui' (ID: 2780)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.4890546798706055
    2. 'x' → logprob: -1.4890546798706055
    3. ']' → logprob: -2.1140546798706055
    4. '[' → logprob: -2.2390546798706055
    5. 'space' → logprob: -2.4890546798706055
    6. ' space' → logprob: -3.2390546798706055
    7. ')' → logprob: -3.4890546798706055
    8. 'n' → logprob: -4.1140546798706055
    9. '**' → logprob: -4.2390546798706055
    10. '=' → logprob: -4.2390546798706055

Token 140: ' donne' (ID: 30004)
  Prédit: ' représente'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' représente' → logprob: -0.919601321220398
    2. ')' → logprob: -1.919601321220398
    3. ' crée' → logprob: -2.0446014404296875
    4. ' signifie' → logprob: -2.2946014404296875
    5. '#' → logprob: -3.2946014404296875
    6. ' correspond' → logprob: -3.4196014404296875
    7. ' est' → logprob: -3.5446014404296875
    8. '**' → logprob: -3.9196014404296875
    9. '>>' → logprob: -4.2946014404296875
    10. '*' → logprob: -4.2946014404296875

Token 141: ' le' (ID: 505)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.20742382109165192
    2. ' le' → logprob: -1.8324238061904907
    3. 'le' → logprob: -4.582423686981201
    4. 'la' → logprob: -4.707423686981201
    5. ' ' → logprob: -5.582423686981201
    6. ' une' → logprob: -7.082423686981201
    7. '2' → logprob: -7.082423686981201
    8. ' l' → logprob: -7.332423686981201
    9. 'l' → logprob: -8.33242416381836
    10. ' the' → logprob: -8.45742416381836

Token 142: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.17984870076179504
    2. ' nombre' → logprob: -1.8048486709594727
    3. 'n' → logprob: -9.929848670959473
    4. 'total' → logprob: -11.429848670959473
    5. 'nb' → logprob: -11.804848670959473
    6. ' ' → logprob: -11.804848670959473
    7. 'number' → logprob: -11.804848670959473
    8. ' nombres' → logprob: -11.929848670959473
    9. 't' → logprob: -12.554848670959473
    10. 'size' → logprob: -13.054848670959473

Token 143: ' total' (ID: 3609)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.05927324295043945
    2. '_d' → logprob: -4.1842732429504395
    3. 'd' → logprob: -4.5592732429504395
    4. ' de' → logprob: -4.5592732429504395
    5. '_' → logprob: -4.8092732429504395
    6. ' des' → logprob: -5.5592732429504395
    7. ')' → logprob: -6.0592732429504395
    8. '<|end|>' → logprob: -6.3092732429504395
    9. ' ' → logprob: -7.4342732429504395
    10. 'total' → logprob: -7.6842732429504395

Token 144: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.6882287263870239
    2. ')' → logprob: -1.313228726387024
    3. ' de' → logprob: -2.1882286071777344
    4. '_d' → logprob: -3.4382286071777344
    5. ' of' → logprob: -3.5632286071777344
    6. 'd' → logprob: -4.063228607177734
    7. '_' → logprob: -4.688228607177734
    8. ' )' → logprob: -5.063228607177734
    9. ' des' → logprob: -5.438228607177734
    10. '=' → logprob: -5.813228607177734

Token 145: ' sé' (ID: 7462)
  Prédit: ' états'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' états' → logprob: -0.7837139368057251
    2. 'colon' → logprob: -1.408713936805725
    3. ' sé' → logprob: -3.0337138175964355
    4. 'states' → logprob: -3.4087138175964355
    5. ' colon' → logprob: -3.5337138175964355
    6. 's' → logprob: -3.6587138175964355
    7. ' sequences' → logprob: -3.7837138175964355
    8. 'sé' → logprob: -3.7837138175964355
    9. 'col' → logprob: -4.0337138175964355
    10. ' ' → logprob: -4.1587138175964355

Token 146: 'quences' (ID: 16559)
  Prédit: 'quences'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quences' → logprob: -4.4418171455617994e-05
    2. 'quence' → logprob: -11.125044822692871
    3. '   ' → logprob: -12.000044822692871
    4. '```' → logprob: -12.500044822692871
    5. '#' → logprob: -13.000044822692871
    6. '`' → logprob: -13.125044822692871
    7. 'q' → logprob: -13.125044822692871
    8. '``' → logprob: -13.500044822692871
    9. '' → logprob: -13.625044822692871
    10. '1' → logprob: -13.625044822692871

Token 147: ' bin' (ID: 6958)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.01129949092865
    2. 'd' → logprob: -1.76129949092865
    3. ' d' → logprob: -1.76129949092865
    4. 'bin' → logprob: -2.6362996101379395
    5. 'de' → logprob: -2.6362996101379395
    6. ')' → logprob: -3.6362996101379395
    7. ' possibles' → logprob: -3.8862996101379395
    8. '_bin' → logprob: -4.0112996101379395
    9. '_d' → logprob: -4.2612996101379395
    10. ' bin' → logprob: -4.5112996101379395

Token 148: 'aires' (ID: 8507)
  Prédit: 'aires'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aires' → logprob: -0.02669907920062542
    2. '{' → logprob: -4.151699066162109
    3. '#' → logprob: -6.401699066162109
    4. '```' → logprob: -6.651699066162109
    5. 'naires' → logprob: -6.901699066162109
    6. '(' → logprob: -7.026699066162109
    7. '1' → logprob: -7.526699066162109
    8. 'ées' → logprob: -7.651699066162109
    9. '=' → logprob: -7.651699066162109
    10. 'é' → logprob: -8.02669906616211

Token 149: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6050649285316467
    2. 'd' → logprob: -1.730064868927002
    3. ' d' → logprob: -2.105064868927002
    4. '.' → logprob: -3.855064868927002
    5. ').' → logprob: -3.855064868927002
    6. ' possibles' → logprob: -3.855064868927002
    7. ')
' → logprob: -3.980064868927002
    8. 'possible' → logprob: -4.605064868927002
    9. ' )' → logprob: -4.730064868927002
    10. ' possible' → logprob: -4.855064868927002

Token 150: ' longueur' (ID: 104613)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.01128536369651556
    2. ' N' → logprob: -4.511285305023193
    3. 'l' → logprob: -9.636285781860352
    4. 'n' → logprob: -10.136285781860352
    5. '```' → logprob: -10.636285781860352
    6. ' la' → logprob: -10.761285781860352
    7. 'la' → logprob: -11.011285781860352
    8. ' ' → logprob: -11.386285781860352
    9. ')' → logprob: -11.511285781860352
    10. '#' → logprob: -11.511285781860352

Token 151: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.17982222139835358
    2. ' N' → logprob: -1.8048222064971924
    3. ' ' → logprob: -9.804821968078613
    4. '	N' → logprob: -11.429821968078613
    5. ' ' → logprob: -12.304821968078613
    6. '   ' → logprob: -13.179821968078613
    7. 'n' → logprob: -13.929821968078613
    8. '  ' → logprob: -14.179821968078613
    9. '(N' → logprob: -14.304821968078613
    10. ',' → logprob: -14.554821968078613

Token 152: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5239251255989075
    2. ')
' → logprob: -1.0239250659942627
    3. 'd' → logprob: -3.2739250659942627
    4. ']' → logprob: -5.398925304412842
    5. ']
' → logprob: -6.648925304412842
    6. '#' → logprob: -7.398925304412842
    7. ')
' → logprob: -7.398925304412842
    8. ')d' → logprob: -7.398925304412842
    9. '
' → logprob: -7.523925304412842
    10. ' d' → logprob: -7.773925304412842

Token 153: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -8.65707261255011e-06
    2. ' d' → logprob: -12.375008583068848
    3. '
' → logprob: -12.500008583068848
    4. '```' → logprob: -15.375008583068848
    5. ' 
' → logprob: -16.125009536743164
    6. '#' → logprob: -16.125009536743164
    7. '  
' → logprob: -16.375009536743164
    8. '

' → logprob: -16.500009536743164
    9. '
' → logprob: -17.125009536743164
    10. '``' → logprob: -17.500009536743164

Token 154: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00976293720304966
    2. '=' → logprob: -4.634762763977051
    3. ' ' → logprob: -12.13476276397705
    4. ' =[' → logprob: -14.00976276397705
    5. '[' → logprob: -15.13476276397705
    6. '=[' → logprob: -15.63476276397705
    7. '  ' → logprob: -15.63476276397705
    8. '=[[' → logprob: -16.384763717651367
    9. '=[]' → logprob: -17.884763717651367
    10. ' ' → logprob: -17.884763717651367

Token 155: ' [[' (ID: 9237)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.008691034279763699
    2. ' [[' → logprob: -4.75869083404541
    3. '[' → logprob: -9.50869083404541
    4. ' [' → logprob: -13.00869083404541
    5. '[
' → logprob: -18.883691787719727
    6. '[]' → logprob: -19.633691787719727
    7. '([[' → logprob: -19.633691787719727
    8. ' ' → logprob: -20.133691787719727
    9. '[['' → logprob: -21.008691787719727
    10. '0' → logprob: -21.508691787719727

Token 156: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.250000953674316
    3. '   ' → logprob: -19.0
    4. '  ' → logprob: -20.25
    5. '
' → logprob: -20.5
    6. '    ' → logprob: -20.75
    7. '۰' → logprob: -21.0
    8. '     ' → logprob: -21.25
    9. '

' → logprob: -22.0
    10. '00' → logprob: -22.25

Token 157: ']' (ID: 60)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8012803196907043
    2. ']' → logprob: -1.0512802600860596
    3. 'for' → logprob: -1.6762802600860596
    4. ']*' → logprob: -4.426280498504639
    5. ']*(' → logprob: -5.926280498504639
    6. '	for' → logprob: -10.92628002166748
    7. ' ]' → logprob: -11.05128002166748
    8. '   ' → logprob: -11.80128002166748
    9. ' ' → logprob: -12.17628002166748
    10. ')' → logprob: -12.17628002166748

Token 158: ' *' (ID: 425)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4742293953895569
    2. 'for' → logprob: -0.9742293953895569
    3. ']' → logprob: -9.34922981262207
    4. '	for' → logprob: -10.59922981262207
    5. '   ' → logprob: -11.34922981262207
    6. ']*' → logprob: -11.34922981262207
    7. ']*(' → logprob: -11.59922981262207
    8. ' ' → logprob: -12.22422981262207
    9. '  ' → logprob: -14.59922981262207
    10. ' ' → logprob: -14.72422981262207

Token 159: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00026503115077503026
    2. ' (' → logprob: -8.250265121459961
    3. '((' → logprob: -12.500265121459961
    4. '   ' → logprob: -16.37526512145996
    5. '
' → logprob: -18.37526512145996
    6. '  ' → logprob: -19.75026512145996
    7. ' ' → logprob: -19.87526512145996
    8. ' ((' → logprob: -20.00026512145996
    9. '（' → logprob: -21.00026512145996
    10. '(
' → logprob: -21.12526512145996

Token 160: '1' (ID: 16)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0004377022560220212
    2. '1' → logprob: -7.7504377365112305
    3. ' (' → logprob: -11.87543773651123
    4. '   ' → logprob: -17.750436782836914
    5. ' ' → logprob: -17.875436782836914
    6. '
' → logprob: -18.500436782836914
    7. '((' → logprob: -19.750436782836914
    8. '[' → logprob: -21.000436782836914
    9. '(
' → logprob: -21.250436782836914
    10. '```' → logprob: -21.625436782836914

Token 161: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.3868725001811981
    2. ' <<' → logprob: -1.1368725299835205
    3. '<' → logprob: -14.261872291564941
    4. ' ' → logprob: -14.636872291564941
    5. ' ' → logprob: -15.136872291564941
    6. ' <' → logprob: -16.636873245239258
    7. '	' → logprob: -17.886873245239258
    8. '1' → logprob: -17.886873245239258
    9. '
' → logprob: -18.386873245239258
    10. ' <<
' → logprob: -18.511873245239258

Token 162: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0005532711511477828
    2. ' N' → logprob: -7.500553131103516
    3. '	N' → logprob: -15.375553131103516
    4. 'n' → logprob: -17.375553131103516
    5. '   ' → logprob: -17.625553131103516
    6. ' ' → logprob: -17.625553131103516
    7. 'K' → logprob: -18.625553131103516
    8. '(N' → logprob: -19.500553131103516
    9. '```' → logprob: -20.000553131103516
    10. 'Ｎ' → logprob: -20.125553131103516

Token 163: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004427051462698728
    2. ' )' → logprob: -7.7504425048828125
    3. ')]' → logprob: -11.500442504882812
    4. ' for' → logprob: -14.375442504882812
    5. 'for' → logprob: -14.750442504882812
    6. ']' → logprob: -14.750442504882812
    7. '))' → logprob: -15.875442504882812
    8. '   ' → logprob: -16.375442504882812
    9. ' ' → logprob: -16.625442504882812
    10. ')
' → logprob: -17.000442504882812

Token 164: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.16024108231067657
    2. 'for' → logprob: -1.9102411270141602
    3. ']' → logprob: -11.78524112701416
    4. '	for' → logprob: -12.03524112701416
    5. ' ' → logprob: -13.53524112701416
    6. ')' → logprob: -13.91024112701416
    7. '   ' → logprob: -14.16024112701416
    8. ' ]' → logprob: -15.41024112701416
    9. '  ' → logprob: -17.160240173339844
    10. ' ' → logprob: -17.410240173339844

Token 165: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.27799978852272034
    2. '_' → logprob: -2.2779998779296875
    3. 'range' → logprob: -2.7779998779296875
    4. ' _' → logprob: -3.0279998779296875
    5. ' i' → logprob: -3.6529998779296875
    6. 'i' → logprob: -6.1529998779296875
    7. '_range' → logprob: -7.1529998779296875
    8. '_i' → logprob: -8.402999877929688
    9. ' ' → logprob: -8.402999877929688
    10. ' in' → logprob: -8.527999877929688

Token 166: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.8282197713851929
    2. 'range' → logprob: -0.8282197713851929
    3. ' in' → logprob: -2.0782198905944824
    4. ' range' → logprob: -6.828219890594482
    5. 'i' → logprob: -9.453219413757324
    6. ' ' → logprob: -11.203219413757324
    7. '  ' → logprob: -12.703219413757324
    8. 'n' → logprob: -12.828219413757324
    9. ' i' → logprob: -12.828219413757324
    10. 'd' → logprob: -12.953219413757324

Token 167: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -9.65101717156358e-05
    2. ' range' → logprob: -9.250096321105957
    3. 'ange' → logprob: -15.000096321105957
    4. '(range' → logprob: -16.750097274780273
    5. ' ' → logprob: -17.125097274780273
    6. '   ' → logprob: -17.375097274780273
    7. '  ' → logprob: -18.250097274780273
    8. '	range' → logprob: -18.375097274780273
    9. 'rang' → logprob: -19.250097274780273
    10. 'ran' → logprob: -19.625097274780273

Token 168: '(D' (ID: 9908)
  Prédit: '(D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(D' → logprob: -5.7053759519476444e-05
    2. '(' → logprob: -10.125057220458984
    3. 'D' → logprob: -11.500057220458984
    4. ' (' → logprob: -12.125057220458984
    5. ')' → logprob: -15.375057220458984
    6. '](' → logprob: -15.500057220458984
    7. '(
' → logprob: -15.625057220458984
    8. '   ' → logprob: -15.625057220458984
    9. ')(' → logprob: -15.750057220458984
    10. '	D' → logprob: -15.875057220458984

Token 169: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -2.935296834039036e-06
    2. ')' → logprob: -13.12500286102295
    3. ']' → logprob: -14.12500286102295
    4. ' )' → logprob: -16.250003814697266
    5. ')],' → logprob: -17.125003814697266
    6. ')].' → logprob: -17.625003814697266
    7. ')]
' → logprob: -17.625003814697266
    8. '')]' → logprob: -18.875003814697266
    9. ')]

' → logprob: -19.250003814697266
    10. ')]
' → logprob: -19.375003814697266

Token 170: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5790024399757385
    2. 'd' → logprob: -1.3290023803710938
    3. 'for' → logprob: -1.9540023803710938
    4. 'i' → logprob: -3.9540023803710938
    5. ']' → logprob: -5.704002380371094
    6. ')' → logprob: -5.704002380371094
    7. ' for' → logprob: -6.454002380371094
    8. 'print' → logprob: -6.829002380371094
    9. '
' → logprob: -7.579002380371094
    10. '0' → logprob: -7.704002380371094

Token 171: ' Initial' (ID: 9209)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.48769429326057434
    2. 'd' → logprob: -1.112694263458252
    3. '#' → logprob: -3.237694263458252
    4. 'i' → logprob: -4.987694263458252
    5. 'print' → logprob: -5.362694263458252
    6. 'result' → logprob: -5.862694263458252
    7. 'dp' → logprob: -6.487694263458252
    8. 'j' → logprob: -7.612694263458252
    9. ' for' → logprob: -7.737694263458252
    10. 'def' → logprob: -8.86269474029541

Token 172: 'isation' (ID: 6993)
  Prédit: 'isation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isation' → logprob: -0.010660683736205101
    2. 'ization' → logprob: -4.635660648345947
    3. '#' → logprob: -7.885660648345947
    4. 'al' → logprob: -8.510661125183105
    5. 'z' → logprob: -8.760661125183105
    6. 'is' → logprob: -9.885661125183105
    7. '```' → logprob: -10.385661125183105
    8. 'd' → logprob: -10.885661125183105
    9. 's' → logprob: -11.385661125183105
    10. 'iz' → logprob: -11.510661125183105

Token 173: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.05536242946982384
    2. ' d' → logprob: -3.0553624629974365
    3. 'for' → logprob: -5.680362224578857
    4. '#' → logprob: -6.555362224578857
    5. ' for' → logprob: -7.680362224578857
    6. '[' → logprob: -7.805362224578857
    7. '<|end|>' → logprob: -8.305362701416016
    8. ' of' → logprob: -8.805362701416016
    9. ' =' → logprob: -9.055362701416016
    10. 's' → logprob: -9.180362701416016

Token 174: ''une' (ID: 13337)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.2306126356124878
    2. '[' → logprob: -1.9806126356124878
    3. 'd' → logprob: -2.8556127548217773
    4. 'a' → logprob: -5.730612754821777
    5. ' a' → logprob: -5.980612754821777
    6. ' [' → logprob: -6.480612754821777
    7. '['' → logprob: -6.980612754821777
    8. ' ' → logprob: -7.980612754821777
    9. '[d' → logprob: -8.105612754821777
    10. '[
' → logprob: -8.355612754821777

Token 175: ' matr' (ID: 25095)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3811294436454773
    2. 'range' → logprob: -2.881129503250122
    3. 'variable' → logprob: -2.881129503250122
    4. 'bou' → logprob: -3.006129503250122
    5. 'ligne' → logprob: -3.131129503250122
    6. 'd' → logprob: -3.631129503250122
    7. 'liste' → logprob: -3.756129503250122
    8. 'import' → logprob: -4.631129264831543
    9. 'val' → logprob: -4.756129264831543
    10. 's' → logprob: -5.506129264831543

Token 176: 'ice' (ID: 603)
  Prédit: 'ice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ice' → logprob: -0.00027897433028556406
    2. 'ix' → logprob: -8.625279426574707
    3. 'ce' → logprob: -10.125279426574707
    4. 'ixe' → logprob: -10.750279426574707
    5. 'ic' → logprob: -11.500279426574707
    6. 'atrice' → logprob: -12.125279426574707
    7. 'ique' → logprob: -12.625279426574707
    8. 'e' → logprob: -12.750279426574707
    9. '#' → logprob: -12.875279426574707
    10. 'rice' → logprob: -13.000279426574707

Token 177: ' '' (ID: 461)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6270965933799744
    2. 'f' → logprob: -1.8770966529846191
    3. 'dp' → logprob: -3.127096652984619
    4. ' '' → logprob: -3.377096652984619
    5. 'prev' → logprob: -3.377096652984619
    6. '[' → logprob: -3.752096652984619
    7. 'b' → logprob: -4.127096652984619
    8. ' d' → logprob: -4.252096652984619
    9. 't' → logprob: -4.252096652984619
    10. 's' → logprob: -4.502096652984619

Token 178: 'f' (ID: 69)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.9596189856529236
    2. 'd' → logprob: -2.0846190452575684
    3. 'c' → logprob: -2.2096190452575684
    4. 'cnt' → logprob: -2.8346190452575684
    5. 'f' → logprob: -3.0846190452575684
    6. 'p' → logprob: -3.0846190452575684
    7. 'ways' → logprob: -3.4596190452575684
    8. 'b' → logprob: -3.7096190452575684
    9. 'count' → logprob: -4.084619045257568
    10. 'g' → logprob: -4.084619045257568

Token 179: ''' (ID: 6)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014269167557358742
    2. '=' → logprob: -4.2642693519592285
    3. 'd' → logprob: -10.38926887512207
    4. 'f' → logprob: -10.51426887512207
    5. ' ' → logprob: -11.51426887512207
    6. 'a' → logprob: -11.76426887512207
    7. ']' → logprob: -12.38926887512207
    8. ' =[' → logprob: -13.01426887512207
    9. '=[' → logprob: -13.13926887512207
    10. '=[]' → logprob: -13.13926887512207

Token 180: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01251812744885683
    2. '=' → logprob: -4.387517929077148
    3. 'd' → logprob: -13.012517929077148
    4. '=[[' → logprob: -13.012517929077148
    5. '=[' → logprob: -13.512517929077148
    6. ' =[' → logprob: -13.887517929077148
    7. ' ' → logprob: -14.137517929077148
    8. 'f' → logprob: -14.512517929077148
    9. '=[]' → logprob: -16.13751792907715
    10. ',' → logprob: -16.26251792907715

Token 181: ' taille' (ID: 41644)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.0008901407127268612
    2. ' [[' → logprob: -7.250890254974365
    3. '0' → logprob: -9.625889778137207
    4. '[' → logprob: -9.625889778137207
    5. '[D' → logprob: -10.625889778137207
    6. '[N' → logprob: -12.000889778137207
    7. 'size' → logprob: -12.000889778137207
    8. '1' → logprob: -13.000889778137207
    9. '([[' → logprob: -13.250889778137207
    10. '[(' → logprob: -14.000889778137207

Token 182: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.7488693594932556
    2. '[D' → logprob: -0.8738693594932556
    3. ' D' → logprob: -3.3738694190979004
    4. '(D' → logprob: -3.8738694190979004
    5. ' (' → logprob: -4.1238694190979
    6. ' [' → logprob: -4.2488694190979
    7. '[[' → logprob: -4.2488694190979
    8. ' [[' → logprob: -5.2488694190979
    9. '[' → logprob: -5.9988694190979
    10. '[N' → logprob: -7.1238694190979

Token 183: ' x' (ID: 1215)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0702621936798096
    2. '=' → logprob: -1.6952621936798096
    3. 'f' → logprob: -2.0702621936798096
    4. '][' → logprob: -2.1952621936798096
    5. '[' → logprob: -2.9452621936798096
    6. ' f' → logprob: -3.0702621936798096
    7. ',' → logprob: -3.4452621936798096
    8. ']' → logprob: -3.6952621936798096
    9. 'd' → logprob: -3.8202621936798096
    10. ' [' → logprob: -4.6952619552612305

Token 184: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0520453080534935
    2. ' (' → logprob: -3.0520453453063965
    3. '((' → logprob: -6.3020453453063965
    4. '2' → logprob: -7.1770453453063965
    5. '(K' → logprob: -8.177044868469238
    6. '(N' → logprob: -8.927044868469238
    7. '(D' → logprob: -9.177044868469238
    8. 'K' → logprob: -9.427044868469238
    9. '[' → logprob: -9.552044868469238
    10. ' ((' → logprob: -10.177044868469238

Token 185: '2' (ID: 17)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02314857393503189
    2. '2' → logprob: -4.523148536682129
    3. '1' → logprob: -4.773148536682129
    4. 'K' → logprob: -6.148148536682129
    5. '(K' → logprob: -7.648148536682129
    6. ' (' → logprob: -7.898148536682129
    7. '3' → logprob: -8.398148536682129
    8. 'N' → logprob: -9.773148536682129
    9. '((' → logprob: -9.898148536682129
    10. 'D' → logprob: -10.398148536682129

Token 186: '^' (ID: 61)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.2228565514087677
    2. '*' → logprob: -2.3478565216064453
    3. ')' → logprob: -3.5978565216064453
    4. '+' → logprob: -3.7228565216064453
    5. '^' → logprob: -4.347856521606445
    6. ' ' → logprob: -4.722856521606445
    7. '<<' → logprob: -4.847856521606445
    8. ' ' → logprob: -5.472856521606445
    9. ' **' → logprob: -5.597856521606445
    10. 'N' → logprob: -5.722856521606445

Token 187: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0005767432739958167
    2. 'K' → logprob: -8.250576972961426
    3. '(' → logprob: -8.500576972961426
    4. '(N' → logprob: -9.375576972961426
    5. ' N' → logprob: -10.875576972961426
    6. ' (' → logprob: -12.875576972961426
    7. '```' → logprob: -13.375576972961426
    8. ' ' → logprob: -14.375576972961426
    9. '<N' → logprob: -14.938076972961426
    10. '	N' → logprob: -15.000576972961426

Token 188: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14302681386470795
    2. ')]' → logprob: -2.143026828765869
    3. ')]
' → logprob: -4.643026828765869
    4. ']' → logprob: -5.768026828765869
    5. 'd' → logprob: -7.393026828765869
    6. ')
' → logprob: -7.518026828765869
    7. ')][' → logprob: -8.018026351928711
    8. '[' → logprob: -8.643026351928711
    9. ')]
' → logprob: -8.643026351928711
    10. ' )' → logprob: -8.643026351928711

Token 189: '#' (ID: 2)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -4.246537173457909e-06
    2. ' f' → logprob: -12.875003814697266
    3. '#' → logprob: -13.875003814697266
    4. 'd' → logprob: -15.250003814697266
    5. '
' → logprob: -15.250003814697266
    6. '[' → logprob: -16.375003814697266
    7. '[f' → logprob: -17.000003814697266
    8. ' =' → logprob: -17.250003814697266
    9. '```' → logprob: -17.375003814697266
    10. ',' → logprob: -17.625003814697266

Token 190: ' Chaque' (ID: 94758)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -1.4259644558478612e-05
    2. ' f' → logprob: -11.625014305114746
    3. '
' → logprob: -13.125014305114746
    4. '#' → logprob: -13.125014305114746
    5. '```' → logprob: -14.875014305114746
    6. '[' → logprob: -15.125014305114746
    7. 'd' → logprob: -15.875014305114746
    8. 'for' → logprob: -16.37501335144043
    9. '[f' → logprob: -16.75001335144043
    10. '
' → logprob: -16.75001335144043

Token 191: ' élément' (ID: 99627)
  Prédit: '[f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[f' → logprob: -0.5034324526786804
    2. '[' → logprob: -1.5034325122833252
    3. 'f' → logprob: -2.378432512283325
    4. 'row' → logprob: -3.378432512283325
    5. '[i' → logprob: -4.378432273864746
    6. ' [' → logprob: -4.628432273864746
    7. ' row' → logprob: -5.378432273864746
    8. ']' → logprob: -5.628432273864746
    9. '[row' → logprob: -6.253432273864746
    10. '[j' → logprob: -6.253432273864746

Token 192: ' f' (ID: 285)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8925278782844543
    2. ' =' → logprob: -1.1425278186798096
    3. 'f' → logprob: -1.3925278186798096
    4. 'd' → logprob: -4.517528057098389
    5. '[' → logprob: -5.142528057098389
    6. '=f' → logprob: -6.267528057098389
    7. '[f' → logprob: -6.892528057098389
    8. '=[' → logprob: -7.142528057098389
    9. ' f' → logprob: -7.767528057098389
    10. ' d' → logprob: -7.892528057098389

Token 193: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.42334312200546265
    2. '=' → logprob: -1.2983431816101074
    3. ' =' → logprob: -2.7983431816101074
    4. '[' → logprob: -5.048343181610107
    5. ']' → logprob: -6.173343181610107
    6. ' [' → logprob: -7.423343181610107
    7. '.append' → logprob: -7.673343181610107
    8. '[d' → logprob: -7.923343181610107
    9. '[D' → logprob: -8.04834270477295
    10. '=[' → logprob: -8.29834270477295

Token 194: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0012251086300238967
    2. ']' → logprob: -6.751224994659424
    3. '[i' → logprob: -10.751225471496582
    4. '][]' → logprob: -11.251225471496582
    5. ']=' → logprob: -12.376225471496582
    6. ']][' → logprob: -12.501225471496582
    7. ' ][' → logprob: -12.501225471496582
    8. '[' → logprob: -12.751225471496582
    9. '=' → logprob: -13.251225471496582
    10. '].' → logprob: -13.876225471496582

Token 195: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.16511549055576324
    2. ']' → logprob: -2.1651155948638916
    3. '][' → logprob: -3.4151155948638916
    4. '[j' → logprob: -5.7901153564453125
    5. '0' → logprob: -8.165115356445312
    6. '
' → logprob: -8.165115356445312
    7. '[' → logprob: -8.290115356445312
    8. ']=' → logprob: -8.415115356445312
    9. ' j' → logprob: -8.790115356445312
    10. '

' → logprob: -10.415115356445312

Token 196: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0017896592617034912
    2. ']=' → logprob: -6.376789569854736
    3. ' ]' → logprob: -9.626790046691895
    4. '=' → logprob: -11.126790046691895
    5. ')' → logprob: -13.626790046691895
    6. '

' → logprob: -13.751790046691895
    7. 'd' → logprob: -14.939290046691895
    8. ' ' → logprob: -15.064290046691895
    9. ']+=' → logprob: -15.189290046691895
    10. 'is' → logprob: -15.189290046691895

Token 197: ' sera' (ID: 15511)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.017991075292229652
    2. ' =' → logprob: -4.142991065979004
    3. ']=' → logprob: -7.142991065979004
    4. ']' → logprob: -7.892991065979004
    5. '=[' → logprob: -7.892991065979004
    6. ' sera' → logprob: -9.392991065979004
    7. '[' → logprob: -9.392991065979004
    8. '#' → logprob: -9.642991065979004
    9. 'd' → logprob: -10.142991065979004
    10. 'est' → logprob: -10.142991065979004

Token 198: ' également' (ID: 15488)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09527396410703659
    2. '[' → logprob: -2.720273971557617
    3. ' [' → logprob: -4.220273971557617
    4. ' ' → logprob: -4.720273971557617
    5. ' =' → logprob: -7.345273971557617
    6. '=' → logprob: -8.220273971557617
    7. '1' → logprob: -8.470273971557617
    8. '[
' → logprob: -9.845273971557617
    9. '[i' → logprob: -10.470273971557617
    10. '[-' → logprob: -10.595273971557617

Token 199: ' initial' (ID: 4871)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0024808887392282486
    2. '=' → logprob: -6.752480983734131
    3. ' ' → logprob: -7.502480983734131
    4. '[' → logprob: -7.877480983734131
    5. ' =' → logprob: -8.127480506896973
    6. ' [' → logprob: -10.377480506896973
    7. ' initialized' → logprob: -10.377480506896973
    8. 'initialized' → logprob: -11.127480506896973
    9. '=[' → logprob: -12.877480506896973
    10. 'initial' → logprob: -13.627480506896973

Token 200: 'isé' (ID: 30065)
  Prédit: 'isé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isé' → logprob: -0.08652617782354355
    2. 's' → logprob: -2.7115261554718018
    3. '#' → logprob: -4.961526393890381
    4. 'sé' → logprob: -4.961526393890381
    5. 'isés' → logprob: -7.711526393890381
    6. 'z' → logprob: -8.086525917053223
    7. 'é' → logprob: -8.211525917053223
    8. 'alis' → logprob: -9.086525917053223
    9. 'és' → logprob: -9.211525917053223
    10. 'iz' → logprob: -9.336525917053223

Token 201: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.8861580491065979
    2. ' à' → logprob: -0.8861580491065979
    3. '=' → logprob: -1.8861579895019531
    4. ' =' → logprob: -3.886157989501953
    5. '0' → logprob: -6.636157989501953
    6. 'a' → logprob: -7.261157989501953
    7. '[' → logprob: -7.886157989501953
    8. ' ' → logprob: -8.136157989501953
    9. ''à' → logprob: -8.886157989501953
    10. '#' → logprob: -9.136157989501953

Token 202: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006234972272068262
    2. ' ' → logprob: -5.381235122680664
    3. '[' → logprob: -6.506235122680664
    4. ' [' → logprob: -9.131235122680664
    5. '[[' → logprob: -12.006235122680664
    6. ' ' → logprob: -13.881235122680664
    7. '   ' → logprob: -14.006235122680664
    8. '[
' → logprob: -14.256235122680664
    9. '  ' → logprob: -14.381235122680664
    10. '
' → logprob: -14.693735122680664

Token 203: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002165299083571881
    2. '[' → logprob: -9.125216484069824
    3. ' ' → logprob: -9.250216484069824
    4. '1' → logprob: -12.500216484069824
    5. '(' → logprob: -12.875216484069824
    6. ' [' → logprob: -13.812716484069824
    7. '
' → logprob: -13.937716484069824
    8. '[[' → logprob: -13.937716484069824
    9. '-' → logprob: -14.625216484069824
    10. '   ' → logprob: -14.812716484069824

Token 204: '.
' (ID: 558)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0010024434886872768
    2. 'd' → logprob: -7.126002311706543
    3. ']' → logprob: -8.876002311706543
    4. ' f' → logprob: -10.626002311706543
    5. ']
' → logprob: -11.251002311706543
    6. ',' → logprob: -11.751002311706543
    7. '#' → logprob: -12.876002311706543
    8. '
' → logprob: -13.251002311706543
    9. 'for' → logprob: -13.251002311706543
    10. '.' → logprob: -13.626002311706543

Token 205: '#' (ID: 2)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -2.7848862373502925e-05
    2. '
' → logprob: -10.500027656555176
    3. '```' → logprob: -16.000028610229492
    4. ' f' → logprob: -16.250028610229492
    5. '
' → logprob: -16.625028610229492
    6. '

' → logprob: -17.750028610229492
    7. '#' → logprob: -18.500028610229492
    8. '``' → logprob: -19.250028610229492
    9. '  
' → logprob: -20.000028610229492
    10. ']
' → logprob: -20.375028610229492

Token 206: ' Cette' (ID: 27383)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -1.4259644558478612e-05
    2. ' f' → logprob: -11.375014305114746
    3. '
' → logprob: -13.125014305114746
    4. '#' → logprob: -15.375014305114746
    5. '```' → logprob: -15.375014305114746
    6. '
' → logprob: -16.37501335144043
    7. '

' → logprob: -16.87501335144043
    8. 'for' → logprob: -17.37501335144043
    9. ' 
' → logprob: -17.62501335144043
    10. '``' → logprob: -17.87501335144043

Token 207: ' matr' (ID: 25095)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.03044394589960575
    2. ' f' → logprob: -4.405444145202637
    3. ' =' → logprob: -5.155444145202637
    4. '#' → logprob: -5.155444145202637
    5. '=' → logprob: -5.405444145202637
    6. 'd' → logprob: -8.155444145202637
    7. 'ligne' → logprob: -8.530444145202637
    8. 'n' → logprob: -8.905444145202637
    9. '```' → logprob: -9.155444145202637
    10. 'mat' → logprob: -9.405444145202637

Token 208: 'ice' (ID: 603)
  Prédit: 'ice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ice' → logprob: -0.009578057564795017
    2. 'ix' → logprob: -5.134578227996826
    3. '#' → logprob: -5.759578227996826
    4. '[' → logprob: -9.384577751159668
    5. 'rice' → logprob: -9.384577751159668
    6. 'ixe' → logprob: -9.384577751159668
    7. 'atrice' → logprob: -10.134577751159668
    8. 'ique' → logprob: -10.759577751159668
    9. 'e' → logprob: -10.884577751159668
    10. '   ' → logprob: -11.134577751159668

Token 209: ' va' (ID: 3423)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1129813939332962
    2. '=' → logprob: -2.2379813194274902
    3. '#' → logprob: -10.112981796264648
    4. 'f' → logprob: -10.362981796264648
    5. ' =
' → logprob: -10.487981796264648
    6. ',' → logprob: -11.237981796264648
    7. ']' → logprob: -11.737981796264648
    8. 's' → logprob: -12.112981796264648
    9. '=
' → logprob: -12.362981796264648
    10. '=[]' → logprob: -12.362981796264648

Token 210: ' probablement' (ID: 87740)
  Prédit: ' servir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' servir' → logprob: -0.01962866634130478
    2. '#' → logprob: -5.644628524780273
    3. '[' → logprob: -5.644628524780273
    4. 'serv' → logprob: -5.894628524780273
    5. ' être' → logprob: -6.019628524780273
    6. ' représ' → logprob: -6.269628524780273
    7. 'être' → logprob: -6.519628524780273
    8. ' [' → logprob: -7.144628524780273
    9. 'serve' → logprob: -7.394628524780273
    10. ' continuer' → logprob: -8.019628524780273

Token 211: ' stock' (ID: 6546)
  Prédit: ' servir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' servir' → logprob: -0.011407949961721897
    2. 'serv' → logprob: -4.761407852172852
    3. ' stock' → logprob: -6.761407852172852
    4. ' être' → logprob: -7.136407852172852
    5. 'être' → logprob: -8.011407852172852
    6. 'stock' → logprob: -9.136407852172852
    7. 'serve' → logprob: -9.386407852172852
    8. '#' → logprob: -9.886407852172852
    9. ' représ' → logprob: -10.011407852172852
    10. 's' → logprob: -10.011407852172852

Token 212: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.01762617938220501
    2. ' des' → logprob: -4.6426262855529785
    3. '   ' → logprob: -6.5176262855529785
    4. '#' → logprob: -6.7676262855529785
    5. ' ' → logprob: -6.7676262855529785
    6. '[' → logprob: -7.1426262855529785
    7. 'uer' → logprob: -7.7676262855529785
    8. ' les' → logprob: -7.8926262855529785
    9. 'e' → logprob: -8.39262580871582
    10. ' =' → logprob: -8.51762580871582

Token 213: ' des' (ID: 731)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.3238379955291748
    2. '[' → logprob: -1.4488379955291748
    3. '#' → logprob: -1.8238379955291748
    4. 'des' → logprob: -2.448837995529175
    5. 'les' → logprob: -2.573837995529175
    6. ' des' → logprob: -2.948837995529175
    7. 'False' → logprob: -3.698837995529175
    8. 'None' → logprob: -4.323838233947754
    9. ' ' → logprob: -4.448838233947754
    10. '[[' → logprob: -4.573838233947754

Token 214: ' valeurs' (ID: 73668)
  Prédit: ' nombres'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombres' → logprob: -1.5612812042236328
    2. ' bool' → logprob: -1.8112812042236328
    3. 'bool' → logprob: -2.311281204223633
    4. ' valeurs' → logprob: -2.436281204223633
    5. 'com' → logprob: -2.686281204223633
    6. ' résultats' → logprob: -2.936281204223633
    7. 'val' → logprob: -3.061281204223633
    8. ' états' → logprob: -3.311281204223633
    9. 'nombre' → logprob: -3.561281204223633
    10. ' flags' → logprob: -3.811281204223633

Token 215: ' liées' (ID: 122433)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.3320510983467102
    2. '[' → logprob: -2.8320510387420654
    3. ' =' → logprob: -2.8320510387420654
    4. 'd' → logprob: -3.7070510387420654
    5. 'import' → logprob: -3.7070510387420654
    6. '=' → logprob: -3.9570510387420654
    7. ' de' → logprob: -4.2070512771606445
    8. ' f' → logprob: -4.2070512771606445
    9. 'de' → logprob: -4.2070512771606445
    10. '#' → logprob: -4.7070512771606445

Token 216: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.5200548768043518
    2. ' aux' → logprob: -1.520054817199707
    3. 'aux' → logprob: -2.895054817199707
    4. 'à' → logprob: -3.020054817199707
    5. ' au' → logprob: -3.395054817199707
    6. 'au' → logprob: -3.520054817199707
    7. '#' → logprob: -4.270054817199707
    8. ' #' → logprob: -7.270054817199707
    9. '```' → logprob: -7.520054817199707
    10. ' ' → logprob: -7.520054817199707

Token 217: ' des' (ID: 731)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6285809874534607
    2. ' des' → logprob: -1.7535810470581055
    3. 'l' → logprob: -1.8785810470581055
    4. 'des' → logprob: -3.1285810470581055
    5. ' la' → logprob: -3.7535810470581055
    6. 'la' → logprob: -3.8785810470581055
    7. ' l' → logprob: -4.0035810470581055
    8. ' #' → logprob: -4.6285810470581055
    9. ' ' → logprob: -5.1285810470581055
    10. 'f' → logprob: -5.3785810470581055

Token 218: ' longue' (ID: 59564)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.5097477436065674
    2. 'com' → logprob: -1.6347477436065674
    3. 'prob' → logprob: -1.7597477436065674
    4. ' probabil' → logprob: -2.8847477436065674
    5. 'che' → logprob: -3.2597477436065674
    6. ' comb' → logprob: -3.3847477436065674
    7. 'scores' → logprob: -3.5097477436065674
    8. 'f' → logprob: -3.7597477436065674
    9. ' chemins' → logprob: -3.8847477436065674
    10. 's' → logprob: -3.8847477436065674

Token 219: 'urs' (ID: 1628)
  Prédit: 'urs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urs' → logprob: -0.033718667924404144
    2. 'r' → logprob: -3.7837185859680176
    3. 'ur' → logprob: -5.908718585968018
    4. 'eurs' → logprob: -6.033718585968018
    5. 'ueur' → logprob: -6.408718585968018
    6. '#' → logprob: -6.783718585968018
    7. 'ue' → logprob: -8.033719062805176
    8. '_' → logprob: -8.158719062805176
    9. 'rs' → logprob: -8.408719062805176
    10. 'urse' → logprob: -8.846219062805176

Token 220: ' de' (ID: 334)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.5912302136421204
    2. ' ou' → logprob: -2.0912301540374756
    3. '#' → logprob: -2.3412301540374756
    4. ' maxim' → logprob: -2.8412301540374756
    5. '_max' → logprob: -3.0912301540374756
    6. ' maximale' → logprob: -3.5912301540374756
    7. ' maximal' → logprob: -4.091230392456055
    8. ' des' → logprob: -4.216230392456055
    9. ' de' → logprob: -4.591230392456055
    10. 'maximum' → logprob: -4.716230392456055

Token 221: ' sé' (ID: 7462)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.45376837253570557
    2. 'sé' → logprob: -1.0787683725357056
    3. ' sé' → logprob: -4.703768253326416
    4. 'sub' → logprob: -5.703768253326416
    5. ' sous' → logprob: -6.078768253326416
    6. 'l' → logprob: -6.203768253326416
    7. '#' → logprob: -6.328768253326416
    8. 'long' → logprob: -6.828768253326416
    9. ' chaînes' → logprob: -6.828768253326416
    10. 'max' → logprob: -7.453768253326416

Token 222: 'quences' (ID: 16559)
  Prédit: 'quences'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quences' → logprob: -0.00041637211688794196
    2. 'quence' → logprob: -8.12541675567627
    3. '#' → logprob: -9.75041675567627
    4. 'ries' → logprob: -10.37541675567627
    5. 'qu' → logprob: -11.87541675567627
    6. 'q' → logprob: -12.00041675567627
    7. '```' → logprob: -12.62541675567627
    8. '[' → logprob: -13.12541675567627
    9. 'quent' → logprob: -13.25041675567627
    10. '   ' → logprob: -13.50041675567627

Token 223: ' particuli' (ID: 33812)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.9930562973022461
    2. '#' → logprob: -1.493056297302246
    3. ']' → logprob: -1.493056297302246
    4. 'f' → logprob: -2.993056297302246
    5. ' d' → logprob: -3.243056297302246
    6. ',' → logprob: -3.368056297302246
    7. 'import' → logprob: -4.743056297302246
    8. ' =' → logprob: -4.743056297302246
    9. 'D' → logprob: -5.493056297302246
    10. '.' → logprob: -5.493056297302246

Token 224: 'ères' (ID: 12614)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.6598876714706421
    2. 'a' → logprob: -2.5348877906799316
    3. 'é' → logprob: -2.9098877906799316
    4. 's' → logprob: -2.9098877906799316
    5. 'es' → logprob: -3.0348877906799316
    6. 'és' → logprob: -3.1598877906799316
    7. ' à' → logprob: -3.2848877906799316
    8. 'ément' → logprob: -3.4098877906799316
    9. '```' → logprob: -3.9098877906799316
    10. '#' → logprob: -4.159887790679932

Token 225: '.
' (ID: 558)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005516784731298685
    2. 'for' → logprob: -6.25551700592041
    3. 'd' → logprob: -6.63051700592041
    4. ' ]' → logprob: -6.75551700592041
    5. '#' → logprob: -7.38051700592041
    6. 'f' → logprob: -9.00551700592041
    7. '.' → logprob: -9.25551700592041
    8. 'import' → logprob: -9.75551700592041
    9. ' for' → logprob: -10.13051700592041
    10. ',' → logprob: -10.50551700592041

Token 226: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -1.3856492842023727e-06
    2. '
' → logprob: -14.125000953674316
    3. ' f' → logprob: -14.750000953674316
    4. '```' → logprob: -15.875000953674316
    5. '
' → logprob: -18.250001907348633
    6. '#' → logprob: -18.375001907348633
    7. '

' → logprob: -18.500001907348633
    8. '``' → logprob: -19.375001907348633
    9. 'd' → logprob: -19.500001907348633
    10. '  
' → logprob: -19.875001907348633

Token 227: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759544372558594
    2. '=' → logprob: -0.8259544372558594
    3. '[' → logprob: -11.57595443725586
    4. ' ' → logprob: -13.07595443725586
    5. '=[' → logprob: -14.07595443725586
    6. '=[[' → logprob: -14.82595443725586
    7. ']' → logprob: -14.95095443725586
    8. '[i' → logprob: -15.07595443725586
    9. ' =
' → logprob: -15.57595443725586
    10. '   ' → logprob: -15.57595443725586

Token 228: ' [[' (ID: 9237)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.0004309076175559312
    2. ' [[' → logprob: -7.750431060791016
    3. '0' → logprob: -16.125431060791016
    4. '[' → logprob: -16.500431060791016
    5. '([[' → logprob: -19.125431060791016
    6. ' ' → logprob: -19.250431060791016
    7. '   ' → logprob: -20.250431060791016
    8. 'd' → logprob: -20.375431060791016
    9. ' [' → logprob: -21.500431060791016
    10. '[
' → logprob: -22.125431060791016

Token 229: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.166338137816638e-05
    2. ' ' → logprob: -10.375031471252441
    3. '[' → logprob: -16.125032424926758
    4. '
' → logprob: -16.312532424926758
    5. '   ' → logprob: -17.000032424926758
    6. 'False' → logprob: -17.500032424926758
    7. '  ' → logprob: -17.687532424926758
    8. '۰' → logprob: -18.500032424926758
    9. '    ' → logprob: -18.625032424926758
    10. '(' → logprob: -18.687532424926758

Token 230: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00020902375399600714
    2. ']*' → logprob: -8.625208854675293
    3. ' ]' → logprob: -11.250208854675293
    4. ' for' → logprob: -11.375208854675293
    5. 'for' → logprob: -13.125208854675293
    6. ' ' → logprob: -14.375208854675293
    7. '*' → logprob: -14.375208854675293
    8. ')' → logprob: -14.375208854675293
    9. '   ' → logprob: -14.500208854675293
    10. ']*(' → logprob: -15.750208854675293

Token 231: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02739548124372959
    2. ' for' → logprob: -4.152395248413086
    3. ' *' → logprob: -5.527395248413086
    4. '*' → logprob: -5.527395248413086
    5. ']*' → logprob: -6.527395248413086
    6. 'for' → logprob: -6.777395248413086
    7. ' ]' → logprob: -8.152395248413086
    8. ' ' → logprob: -8.402395248413086
    9. '   ' → logprob: -8.652395248413086
    10. ')' → logprob: -10.402395248413086

Token 232: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.008614808320999146
    2. ' (' → logprob: -4.758615016937256
    3. '((' → logprob: -15.633614540100098
    4. ' ' → logprob: -16.383615493774414
    5. '   ' → logprob: -17.008615493774414
    6. '  ' → logprob: -17.633615493774414
    7. '
' → logprob: -18.133615493774414
    8. '1' → logprob: -18.508615493774414
    9. ',' → logprob: -18.633615493774414
    10. ']' → logprob: -19.508615493774414

Token 233: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05492188408970833
    2. '(' → logprob: -2.929921865463257
    3. ' (' → logprob: -10.929922103881836
    4. ' ' → logprob: -11.179922103881836
    5. '   ' → logprob: -12.054922103881836
    6. '  ' → logprob: -14.304922103881836
    7. '2' → logprob: -15.304922103881836
    8. '
' → logprob: -15.304922103881836
    9. ')' → logprob: -15.554922103881836
    10. '    ' → logprob: -16.054922103881836

Token 234: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.07919523119926453
    2. ' <<' → logprob: -2.579195261001587
    3. ' ' → logprob: -9.204195022583008
    4. ' ' → logprob: -9.204195022583008
    5. '```' → logprob: -10.329195022583008
    6. '<' → logprob: -10.829195022583008
    7. 'N' → logprob: -11.204195022583008
    8. '   ' → logprob: -11.329195022583008
    9. ' N' → logprob: -12.704195022583008
    10. '[' → logprob: -12.829195022583008

Token 235: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0002978048287332058
    2. ' N' → logprob: -8.125297546386719
    3. '   ' → logprob: -13.500297546386719
    4. ' ' → logprob: -15.750297546386719
    5. '	N' → logprob: -15.875297546386719
    6. '```' → logprob: -17.62529754638672
    7. '(N' → logprob: -18.12529754638672
    8. '  ' → logprob: -18.37529754638672
    9. '(' → logprob: -18.37529754638672
    10. '       ' → logprob: -18.62529754638672

Token 236: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4498052223643754e-05
    2. ')]' → logprob: -12.250014305114746
    3. 'for' → logprob: -12.375014305114746
    4. ' )' → logprob: -12.875014305114746
    5. ')
' → logprob: -13.750014305114746
    6. ']' → logprob: -14.500014305114746
    7. '))' → logprob: -15.000014305114746
    8. 'D' → logprob: -15.250014305114746
    9. 'd' → logprob: -15.750014305114746
    10. '[' → logprob: -15.875014305114746

Token 237: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.051746729761362076
    2. ' for' → logprob: -3.3017468452453613
    3. ')' → logprob: -4.301746845245361
    4. ']' → logprob: -9.676746368408203
    5. '	for' → logprob: -13.426746368408203
    6. ' ' → logprob: -13.926746368408203
    7. '   ' → logprob: -13.926746368408203
    8. '}' → logprob: -14.926746368408203
    9. ')]' → logprob: -15.551746368408203
    10. 'f' → logprob: -15.801746368408203

Token 238: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.07067124545574188
    2. '_' → logprob: -2.695671319961548
    3. '_range' → logprob: -7.945671081542969
    4. ' range' → logprob: -8.320671081542969
    5. '_in' → logprob: -10.195671081542969
    6. ' ' → logprob: -10.320671081542969
    7. 'range' → logprob: -10.570671081542969
    8. ' i' → logprob: -11.320671081542969
    9. ' in' → logprob: -11.820671081542969
    10. '_i' → logprob: -12.695671081542969

Token 239: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3146745264530182
    2. ' range' → logprob: -1.3146744966506958
    3. '_range' → logprob: -6.814674377441406
    4. '_' → logprob: -8.314674377441406
    5. '(range' → logprob: -10.189674377441406
    6. ' _' → logprob: -10.564674377441406
    7. ' in' → logprob: -13.189674377441406
    8. 'ange' → logprob: -13.439674377441406
    9. '	range' → logprob: -14.064674377441406
    10. ' ' → logprob: -14.689674377441406

Token 240: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.04859157279133797
    2. ' range' → logprob: -3.0485916137695312
    3. '(range' → logprob: -13.298591613769531
    4. '_range' → logprob: -13.298591613769531
    5. '_' → logprob: -14.173591613769531
    6. ' ' → logprob: -16.54859161376953
    7. '	range' → logprob: -16.79859161376953
    8. ' xrange' → logprob: -17.42359161376953
    9. '   ' → logprob: -17.54859161376953
    10. 'x' → logprob: -18.92359161376953

Token 241: '(D' (ID: 9908)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.6106352806091309
    2. '(D' → logprob: -1.3606352806091309
    3. ' range' → logprob: -1.6106352806091309
    4. '(range' → logprob: -7.610635280609131
    5. 'D' → logprob: -9.110635757446289
    6. ' (' → logprob: -9.860635757446289
    7. '   ' → logprob: -10.485635757446289
    8. ' D' → logprob: -11.110635757446289
    9. ' ' → logprob: -11.485635757446289
    10. 'Range' → logprob: -11.610635757446289

Token 242: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -5.080963092041202e-06
    2. ']' → logprob: -12.375004768371582
    3. ')' → logprob: -14.750004768371582
    4. ')]
' → logprob: -14.875004768371582
    5. ')]

' → logprob: -17.2500057220459
    6. ')]
' → logprob: -17.3750057220459
    7. ')],' → logprob: -18.0000057220459
    8. ')].' → logprob: -18.2500057220459
    9. ' )' → logprob: -19.0000057220459
    10. '))' → logprob: -19.0000057220459

Token 243: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.602872908115387
    2. '#' → logprob: -1.1028728485107422
    3. 'i' → logprob: -2.352872848510742
    4. 'f' → logprob: -4.352872848510742
    5. 'd' → logprob: -5.102872848510742
    6. ' for' → logprob: -6.727872848510742
    7. 'j' → logprob: -6.852872848510742
    8. 'n' → logprob: -7.227872848510742
    9. ')' → logprob: -7.352872848510742
    10. '(' → logprob: -7.852872848510742

Token 244: ' Rem' (ID: 6890)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.010358809493482113
    2. 'i' → logprob: -5.385358810424805
    3. 'd' → logprob: -6.135358810424805
    4. '#' → logprob: -6.260358810424805
    5. 'f' → logprob: -6.760358810424805
    6. 'mask' → logprob: -9.260358810424805
    7. 'result' → logprob: -9.385358810424805
    8. 'j' → logprob: -9.760358810424805
    9. 'def' → logprob: -10.135358810424805
    10. ' for' → logprob: -10.135358810424805

Token 245: 'pl' (ID: 528)
  Prédit: 'pl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pl' → logprob: -0.003305335296317935
    2. 'p' → logprob: -5.753305435180664
    3. 'placement' → logprob: -9.878305435180664
    4. '#' → logprob: -10.003305435180664
    5. 'plit' → logprob: -11.378305435180664
    6. 'placer' → logprob: -12.003305435180664
    7. 'pla' → logprob: -12.378305435180664
    8. 'pli' → logprob: -13.128305435180664
    9. '```' → logprob: -13.628305435180664
    10. 'pir' → logprob: -13.753305435180664

Token 246: 'issage' (ID: 63863)
  Prédit: 'pl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pl' → logprob: -0.10685912519693375
    2. 'u' → logprob: -3.4818592071533203
    3. 'p' → logprob: -3.7318592071533203
    4. 'er' → logprob: -4.35685920715332
    5. '#' → logprob: -4.73185920715332
    6. 'r' → logprob: -5.35685920715332
    7. 'for' → logprob: -5.73185920715332
    8. '   ' → logprob: -5.73185920715332
    9. 'a' → logprob: -5.85685920715332
    10. 'e' → logprob: -6.23185920715332

Token 247: ' de' (ID: 334)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08032269775867462
    2. ' for' → logprob: -2.830322742462158
    3. ':' → logprob: -4.830322742462158
    4. '#' → logprob: -4.830322742462158
    5. ')' → logprob: -7.705322742462158
    6. ']' → logprob: -8.205322265625
    7. '_' → logprob: -8.330322265625
    8. 'd' → logprob: -8.580322265625
    9. '=' → logprob: -8.830322265625
    10. ' of' → logprob: -8.955322265625

Token 248: ' la' (ID: 557)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.3998854160308838
    2. 'd' → logprob: -1.7748854160308838
    3. ' f' → logprob: -2.274885416030884
    4. 'f' → logprob: -3.399885416030884
    5. ' range' → logprob: -4.899885177612305
    6. ' i' → logprob: -5.149885177612305
    7. 'i' → logprob: -5.524885177612305
    8. 'range' → logprob: -5.649885177612305
    9. ' ' → logprob: -7.024885177612305
    10. '0' → logprob: -7.024885177612305

Token 249: ' matr' (ID: 25095)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6770544052124023
    2. 'f' → logprob: -0.9270544052124023
    3. 'for' → logprob: -2.4270544052124023
    4. 'range' → logprob: -5.677054405212402
    5. '#' → logprob: -6.302054405212402
    6. '0' → logprob: -7.302054405212402
    7. ' for' → logprob: -7.552054405212402
    8. ' d' → logprob: -7.927054405212402
    9. ' f' → logprob: -8.302054405212402
    10. '```' → logprob: -8.427054405212402

Token 250: 'ice' (ID: 603)
  Prédit: 'ice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ice' → logprob: -0.0007330321241170168
    2. 'ic' → logprob: -8.250733375549316
    3. 'i' → logprob: -8.625733375549316
    4. 'ix' → logprob: -8.875733375549316
    5. '#' → logprob: -9.625733375549316
    6. '```' → logprob: -10.875733375549316
    7. 'ixe' → logprob: -11.000733375549316
    8. '[' → logprob: -11.125733375549316
    9. 'ices' → logprob: -12.250733375549316
    10. '[i' → logprob: -12.250733375549316

Token 251: ' '' (ID: 461)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2000001072883606
    2. ' for' → logprob: -2.075000047683716
    3. 'd' → logprob: -3.200000047683716
    4. ' d' → logprob: -4.575000286102295
    5. 'f' → logprob: -6.450000286102295
    6. '#' → logprob: -6.700000286102295
    7. ' ' → logprob: -8.074999809265137
    8. ' f' → logprob: -8.449999809265137
    9. '[' → logprob: -8.574999809265137
    10. '
' → logprob: -8.824999809265137

Token 252: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.008774342946708202
    2. 'f' → logprob: -4.758774280548096
    3. ' d' → logprob: -9.008774757385254
    4. 'for' → logprob: -10.508774757385254
    5. ' f' → logprob: -13.008774757385254
    6. 's' → logprob: -13.383774757385254
    7. '#' → logprob: -13.508774757385254
    8. '```' → logprob: -13.758774757385254
    9. '`' → logprob: -14.133774757385254
    10. '0' → logprob: -14.383774757385254

Token 253: ''' (ID: 6)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.30343368649482727
    2. ']' → logprob: -1.4284336566925049
    3. ' for' → logprob: -4.678433895111084
    4. '[' → logprob: -4.678433895111084
    5. '#' → logprob: -5.928433895111084
    6. '
' → logprob: -8.928433418273926
    7. '][' → logprob: -8.928433418273926
    8. ')' → logprob: -9.178433418273926
    9. ']
' → logprob: -9.428433418273926
    10. ' ]' → logprob: -9.553433418273926

Token 254: ' avec' (ID: 3937)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0019110271241515875
    2. ' for' → logprob: -6.376911163330078
    3. ']' → logprob: -9.376911163330078
    4. 'd' → logprob: -9.876911163330078
    5. '
' → logprob: -10.501911163330078
    6. ')' → logprob: -10.626911163330078
    7. '```' → logprob: -11.751911163330078
    8. '[' → logprob: -12.251911163330078
    9. '#' → logprob: -12.501911163330078
    10. ':' → logprob: -13.876911163330078

Token 255: ' les' (ID: 1341)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.11478216201066971
    2. 'd' → logprob: -2.7397820949554443
    3. '#' → logprob: -4.114782333374023
    4. '0' → logprob: -4.989782333374023
    5. '...' → logprob: -4.989782333374023
    6. 'for' → logprob: -4.989782333374023
    7. '[' → logprob: -5.739782333374023
    8. 'f' → logprob: -6.989782333374023
    9. ' ' → logprob: -7.364782333374023
    10. '```' → logprob: -7.489782333374023

Token 256: ' valeurs' (ID: 73668)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6323733329772949
    2. 'for' → logprob: -1.007373332977295
    3. '0' → logprob: -3.007373332977295
    4. '#' → logprob: -3.632373332977295
    5. 'd' → logprob: -5.132373332977295
    6. ']' → logprob: -5.382373332977295
    7. '[' → logprob: -5.507373332977295
    8. ' for' → logprob: -5.632373332977295
    9. 'import' → logprob: -5.632373332977295
    10. ' ' → logprob: -6.382373332977295

Token 257: ' provenant' (ID: 172288)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0011689142556861043
    2. ' for' → logprob: -6.876168727874756
    3. '#' → logprob: -9.376169204711914
    4. ']' → logprob: -10.876169204711914
    5. 'import' → logprob: -11.501169204711914
    6. 'd' → logprob: -11.751169204711914
    7. '
' → logprob: -11.876169204711914
    8. '[' → logprob: -13.126169204711914
    9. '```' → logprob: -14.126169204711914
    10. ':' → logprob: -14.376169204711914

Token 258: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.6954769492149353
    2. 'for' → logprob: -1.57047700881958
    3. ' de' → logprob: -1.69547700881958
    4. 'des' → logprob: -2.69547700881958
    5. 'de' → logprob: -4.19547700881958
    6. '#' → logprob: -4.57047700881958
    7. ' du' → logprob: -5.32047700881958
    8. ' for' → logprob: -5.82047700881958
    9. 'du' → logprob: -6.07047700881958
    10. 'from' → logprob: -6.57047700881958

Token 259: ' entr' (ID: 7072)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.4205842614173889
    2. ' input' → logprob: -1.4205842018127441
    3. '#' → logprob: -3.170584201812744
    4. 'f' → logprob: -4.795584201812744
    5. 'inputs' → logprob: -4.920584201812744
    6. 'calcul' → logprob: -5.420584201812744
    7. ' inputs' → logprob: -5.670584201812744
    8. 'entr' → logprob: -5.670584201812744
    9. 'bin' → logprob: -5.795584201812744
    10. 'int' → logprob: -6.045584201812744

Token 260: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.0003391574718989432
    2. 'ée' → logprob: -8.37533950805664
    3. 'ees' → logprob: -9.50033950805664
    4. 'es' → logprob: -11.25033950805664
    5. 'nées' → logprob: -12.12533950805664
    6. 'êtes' → logprob: -12.50033950805664
    7. 'ies' → logprob: -13.00033950805664
    8. 'és' → logprob: -13.25033950805664
    9. '#' → logprob: -13.50033950805664
    10. '```' → logprob: -13.62533950805664

Token 261: ' suivantes' (ID: 106173)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00010342398309148848
    2. ' for' → logprob: -9.250102996826172
    3. '
' → logprob: -11.875102996826172
    4. 'd' → logprob: -16.375102996826172
    5. '```' → logprob: -17.375102996826172
    6. 'f' → logprob: -17.500102996826172
    7. '``' → logprob: -17.625102996826172
    8. '#' → logprob: -18.000102996826172
    9. ':' → logprob: -18.125102996826172
    10. '`
' → logprob: -18.625102996826172

Token 262: '.
' (ID: 558)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -7.517272024415433e-05
    2. ' for' → logprob: -9.500075340270996
    3. '
' → logprob: -16.25007438659668
    4. ']' → logprob: -17.12507438659668
    5. '#' → logprob: -17.50007438659668
    6. ':' → logprob: -17.87507438659668
    7. ')' → logprob: -18.12507438659668
    8. 'd' → logprob: -18.87507438659668
    9. 'f' → logprob: -19.12507438659668
    10. '.' → logprob: -19.62507438659668

Token 263: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -3.128163257315464e-07
    2. ' for' → logprob: -15.125
    3. '```' → logprob: -19.875
    4. '
' → logprob: -20.875
    5. '	for' → logprob: -21.25
    6. 'd' → logprob: -21.75
    7. 'fo' → logprob: -22.0
    8. '#' → logprob: -22.125
    9. 'f' → logprob: -22.875
    10. 'from' → logprob: -22.875

Token 264: ' Pour' (ID: 13931)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.9361264946837764e-07
    2. ' for' → logprob: -16.375
    3. 'from' → logprob: -22.0
    4. 'fo' → logprob: -22.0
    5. 'import' → logprob: -22.125
    6. '#' → logprob: -22.25
    7. '	for' → logprob: -22.75
    8. '```' → logprob: -22.75
    9. '
' → logprob: -23.125
    10. '   ' → logprob: -23.875

Token 265: ' chaque' (ID: 21194)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.005965414922684431
    2. ' i' → logprob: -5.130965232849121
    3. '_' → logprob: -10.755965232849121
    4. '_i' → logprob: -11.130965232849121
    5. '	i' → logprob: -14.380965232849121
    6. '```' → logprob: -16.380966186523438
    7. 'I' → logprob: -16.630966186523438
    8. ' ' → logprob: -17.255966186523438
    9. 'for' → logprob: -17.505966186523438
    10. ' _' → logprob: -17.755966186523438

Token 266: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.006733845453709364
    2. ' i' → logprob: -5.0067338943481445
    3. '_i' → logprob: -11.131733894348145
    4. '_' → logprob: -13.131733894348145
    5. '	i' → logprob: -14.006733894348145
    6. '```' → logprob: -14.881733894348145
    7. 'I' → logprob: -15.381733894348145
    8. '`' → logprob: -15.381733894348145
    9. ' ' → logprob: -16.131732940673828
    10. ' _' → logprob: -17.256732940673828

Token 267: ' de' (ID: 334)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005322227720171213
    2. 'in' → logprob: -5.255322456359863
    3. 'range' → logprob: -10.130322456359863
    4. ' ' → logprob: -11.505322456359863
    5. '_' → logprob: -12.005322456359863
    6. 'n' → logprob: -12.255322456359863
    7. 'd' → logprob: -12.505322456359863
    8. ',' → logprob: -12.505322456359863
    9. ' en' → logprob: -12.755322456359863
    10. ' i' → logprob: -12.755322456359863

Token 268: ' ' (ID: 220)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.31329455971717834
    2. ' range' → logprob: -1.313294529914856
    3. ' in' → logprob: -11.938294410705566
    4. 'in' → logprob: -11.938294410705566
    5. 'rang' → logprob: -12.063294410705566
    6. 'd' → logprob: -12.563294410705566
    7. 'r' → logprob: -12.563294410705566
    8. 'ra' → logprob: -13.063294410705566
    9. '_' → logprob: -13.813294410705566
    10. '_range' → logprob: -14.188294410705566

Token 269: '0' (ID: 15)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0015034328680485487
    2. ' range' → logprob: -6.5015034675598145
    3. 'rang' → logprob: -14.251502990722656
    4. 'r' → logprob: -15.251502990722656
    5. 'ra' → logprob: -16.126502990722656
    6. '0' → logprob: -17.876502990722656
    7. 'in' → logprob: -18.126502990722656
    8. '1' → logprob: -18.376502990722656
    9. '_range' → logprob: -18.751502990722656
    10. '	range' → logprob: -19.001502990722656

Token 270: ' à' (ID: 1221)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04652070254087448
    2. 'in' → logprob: -3.296520709991455
    3. 'range' → logprob: -5.671520709991455
    4. ',' → logprob: -5.921520709991455
    5. ' à' → logprob: -7.296520709991455
    6. ' ' → logprob: -7.796520709991455
    7. ' range' → logprob: -8.421520233154297
    8. 'd' → logprob: -8.671520233154297
    9. 'dans' → logprob: -8.671520233154297
    10. 'import' → logprob: -9.296520233154297

Token 271: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.30591005086898804
    2. ' D' → logprob: -1.8059101104736328
    3. 'N' → logprob: -2.430910110473633
    4. ' N' → logprob: -4.555910110473633
    5. ' range' → logprob: -7.555910110473633
    6. ' ' → logprob: -8.805910110473633
    7. 'range' → logprob: -9.930910110473633
    8. 'K' → logprob: -11.930910110473633
    9. ' ' → logprob: -12.180910110473633
    10. '(D' → logprob: -12.430910110473633

Token 272: '-' (ID: 12)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.024065108969807625
    2. '-' → logprob: -4.399065017700195
    3. ':
' → logprob: -4.899065017700195
    4. '):' → logprob: -6.774065017700195
    5. ' -' → logprob: -6.899065017700195
    6. ' :' → logprob: -6.899065017700195
    7. '):
' → logprob: -7.524065017700195
    8. ' :
' → logprob: -9.399065017700195
    9. '
' → logprob: -9.649065017700195
    10. ')' → logprob: -9.649065017700195

Token 273: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010136376367881894
    2. ' ' → logprob: -7.25101375579834
    3. '2' → logprob: -8.12601375579834
    4. '
' → logprob: -12.62601375579834
    5. 'D' → logprob: -13.12601375579834
    6. '   ' → logprob: -14.62601375579834
    7. '```' → logprob: -15.25101375579834
    8. 'd' → logprob: -15.31351375579834
    9. '

' → logprob: -15.37601375579834
    10. '-' → logprob: -15.37601375579834

Token 274: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012425827793776989
    2. ':
' → logprob: -4.762425899505615
    3. 'for' → logprob: -5.637425899505615
    4. ',' → logprob: -9.262425422668457
    5. ' for' → logprob: -9.387425422668457
    6. '):' → logprob: -10.262425422668457
    7. ' :' → logprob: -11.137425422668457
    8. '):
' → logprob: -12.887425422668457
    9. '
' → logprob: -13.012425422668457
    10. ')' → logprob: -13.137425422668457

Token 275: 'so' (ID: 786)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5934617519378662
    2. 'for' → logprob: -1.2184617519378662
    3. '):
' → logprob: -2.218461751937866
    4. ' for' → logprob: -4.343461990356445
    5. ':' → logprob: -4.718461990356445
    6. ')' → logprob: -4.968461990356445
    7. '
' → logprob: -5.093461990356445
    8. 'range' → logprob: -5.343461990356445
    9. ' range' → logprob: -7.093461990356445
    10. '   ' → logprob: -7.218461990356445

Token 276: 'it' (ID: 278)
  Prédit: 'ur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ur' → logprob: -0.07064859569072723
    2. 'range' → logprob: -3.320648670196533
    3. 'r' → logprob: -4.070648670196533
    4. 'u' → logprob: -4.820648670196533
    5. 'n' → logprob: -6.070648670196533
    6. 'ut' → logprob: -6.195648670196533
    7. 'nt' → logprob: -6.570648670196533
    8. 'rt' → logprob: -8.195648193359375
    9. 'rie' → logprob: -8.820648193359375
    10. ' range' → logprob: -9.070648193359375

Token 277: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.40481844544410706
    2. ' D' → logprob: -1.1548184156417847
    3. 'N' → logprob: -4.904818534851074
    4. ' range' → logprob: -5.529818534851074
    5. ' N' → logprob: -5.779818534851074
    6. 'range' → logprob: -6.404818534851074
    7. ' ' → logprob: -7.904818534851074
    8. '   ' → logprob: -8.279818534851074
    9. ')' → logprob: -8.529818534851074
    10. ' )' → logprob: -8.904818534851074

Token 278: ' lignes' (ID: 81687)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.11433779448270798
    2. '):
' → logprob: -2.239337682723999
    3. ':' → logprob: -7.364337921142578
    4. 'for' → logprob: -8.114337921142578
    5. '):
' → logprob: -8.739337921142578
    6. ')' → logprob: -8.864337921142578
    7. '
' → logprob: -9.239337921142578
    8. ' ):' → logprob: -9.864337921142578
    9. '-' → logprob: -9.989337921142578
    10. ':
' → logprob: -10.739337921142578

Token 279: ' de' (ID: 334)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5773546099662781
    2. '):
' → logprob: -0.8273546099662781
    3. ':' → logprob: -7.702354431152344
    4. 'for' → logprob: -7.827354431152344
    5. '):
' → logprob: -8.202354431152344
    6. ')' → logprob: -9.577354431152344
    7. ':
' → logprob: -9.827354431152344
    8. ' ):' → logprob: -9.952354431152344
    9. ' ):
' → logprob: -10.077354431152344
    10. ' for' → logprob: -10.827354431152344

Token 280: ' la' (ID: 557)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -1.261292815208435
    2. '(' → logprob: -1.511292815208435
    3. ' code' → logprob: -1.761292815208435
    4. ' input' → logprob: -1.761292815208435
    5. 'code' → logprob: -2.6362929344177246
    6. 'range' → logprob: -3.7612929344177246
    7. ' (' → logprob: -4.261292934417725
    8. '1' → logprob: -4.386292934417725
    9. 'entrée' → logprob: -5.386292934417725
    10. 'd' → logprob: -5.636292934417725

Token 281: ' matr' (ID: 25095)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3274528682231903
    2. 'input' → logprob: -2.2024528980255127
    3. '1' → logprob: -2.5774528980255127
    4. ' (' → logprob: -3.3274528980255127
    5. ' input' → logprob: -3.8274528980255127
    6. ')' → logprob: -5.202452659606934
    7. 'N' → logprob: -5.577452659606934
    8. '(input' → logprob: -5.702452659606934
    9. 'range' → logprob: -5.827452659606934
    10. 'd' → logprob: -6.327452659606934

Token 282: 'ice' (ID: 603)
  Prédit: 'ice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ice' → logprob: -0.002965223044157028
    2. 'ce' → logprob: -5.877965450286865
    3. 'ices' → logprob: -9.877964973449707
    4. 'ix' → logprob: -10.377964973449707
    5. 'rice' → logprob: -10.627964973449707
    6. '#' → logprob: -11.377964973449707
    7. 'ée' → logprob: -11.877964973449707
    8. 'çe' → logprob: -12.002964973449707
    9. 'ì' → logprob: -12.377964973449707
    10. 'che' → logprob: -12.877964973449707

Token 283: '),
' (ID: 2313)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.26729410886764526
    2. '):
' → logprob: -1.51729416847229
    3. ' ):' → logprob: -5.392293930053711
    4. 'd' → logprob: -5.642293930053711
    5. 'for' → logprob: -6.392293930053711
    6. ' ):
' → logprob: -6.517293930053711
    7. 'range' → logprob: -7.017293930053711
    8. ' d' → logprob: -7.392293930053711
    9. ')' → logprob: -7.392293930053711
    10. ' range' → logprob: -7.892293930053711

Token 284: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.020711800083518028
    2. ' for' → logprob: -3.895711898803711
    3. 'values' → logprob: -9.770711898803711
    4. 'j' → logprob: -9.895711898803711
    5. '   ' → logprob: -11.395711898803711
    6. 'data' → logprob: -11.770711898803711
    7. 'row' → logprob: -12.020711898803711
    8. 'line' → logprob: -12.270711898803711
    9. 'input' → logprob: -12.395711898803711
    10. ':' → logprob: -12.770711898803711

Token 285: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.04859759286046028
    2. 'i' → logprob: -3.048597574234009
    3. ' ' → logprob: -12.29859733581543
    4. '	i' → logprob: -13.17359733581543
    5. ' _' → logprob: -13.54859733581543
    6. '_i' → logprob: -14.04859733581543
    7. ' ' → logprob: -14.54859733581543
    8. '_' → logprob: -14.92359733581543
    9. '```' → logprob: -15.29859733581543
    10. 'I' → logprob: -15.54859733581543

Token 286: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11288022994995117
    2. 'in' → logprob: -2.237880229949951
    3. 'range' → logprob: -11.36288070678711
    4. ' ' → logprob: -11.86288070678711
    5. 'In' → logprob: -12.11288070678711
    6. 'd' → logprob: -12.23788070678711
    7. '	in' → logprob: -12.48788070678711
    8. ' ' → logprob: -12.73788070678711
    9. 's' → logprob: -12.86288070678711
    10. '0' → logprob: -13.23788070678711

Token 287: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.12692862749099731
    2. 'range' → logprob: -2.1269285678863525
    3. ' ' → logprob: -15.501928329467773
    4. '	range' → logprob: -15.501928329467773
    5. '(range' → logprob: -16.501928329467773
    6. ' ' → logprob: -18.001928329467773
    7. '  ' → logprob: -18.501928329467773
    8. ' in' → logprob: -18.626928329467773
    9. '_range' → logprob: -19.126928329467773
    10. ')' → logprob: -19.251928329467773

Token 288: '(D' (ID: 9908)
  Prédit: '(D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(D' → logprob: -7.147740689106286e-05
    2. '(' → logprob: -9.62507152557373
    3. '(
' → logprob: -12.50007152557373
    4. 'D' → logprob: -13.37507152557373
    5. '(d' → logprob: -16.750070571899414
    6. ' (' → logprob: -17.250070571899414
    7. '	D' → logprob: -18.250070571899414
    8. '(

' → logprob: -18.375070571899414
    9. ',D' → logprob: -18.625070571899414
    10. ' D' → logprob: -18.875070571899414

Token 289: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0007974773179739714
    2. '):
' → logprob: -7.250797271728516
    3. ' ):' → logprob: -9.375797271728516
    4. ')' → logprob: -13.375797271728516
    5. '):
' → logprob: -14.250797271728516
    6. '+' → logprob: -15.375797271728516
    7. ':' → logprob: -15.625797271728516
    8. '}:' → logprob: -16.375797271728516
    9. ']:' → logprob: -17.375797271728516
    10. '   ' → logprob: -17.750797271728516

Token 290: '   ' (ID: 271)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.8562355041503906
    2. 'row' → logprob: -1.7312355041503906
    3. ' line' → logprob: -2.3562355041503906
    4. 'vals' → logprob: -2.6062355041503906
    5. 'values' → logprob: -2.7312355041503906
    6. ' row' → logprob: -2.8562355041503906
    7. '   ' → logprob: -3.6062355041503906
    8. 'for' → logprob: -3.9812355041503906
    9. 'ligne' → logprob: -4.231235504150391
    10. ' vals' → logprob: -4.856235504150391

Token 291: ' #' (ID: 1069)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.9096366763114929
    2. 'row' → logprob: -1.4096367359161377
    3. 'values' → logprob: -2.0346367359161377
    4. 'vals' → logprob: -2.2846367359161377
    5. 'ligne' → logprob: -2.6596367359161377
    6. 'val' → logprob: -4.659636497497559
    7. ' line' → logprob: -4.659636497497559
    8. 'for' → logprob: -4.909636497497559
    9. ' row' → logprob: -5.034636497497559
    10. 'l' → logprob: -5.659636497497559

Token 292: ' input' (ID: 3422)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.6049657464027405
    2. 'row' → logprob: -1.6049656867980957
    3. 'ligne' → logprob: -1.8549656867980957
    4. 'values' → logprob: -3.1049656867980957
    5. 'vals' → logprob: -3.8549656867980957
    6. 'for' → logprob: -4.229965686798096
    7. 'l' → logprob: -5.229965686798096
    8. 'val' → logprob: -5.604965686798096
    9. ' line' → logprob: -5.979965686798096
    10. ' row' → logprob: -6.979965686798096

Token 293: '()' (ID: 416)
  Prédit: '_values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_values' → logprob: -0.3109036982059479
    2. '_line' → logprob: -1.6859036684036255
    3. '_vals' → logprob: -3.310903787612915
    4. '_val' → logprob: -4.685903549194336
    5. '_str' → logprob: -4.685903549194336
    6. '_l' → logprob: -4.810903549194336
    7. '_bits' → logprob: -5.310903549194336
    8. '_' → logprob: -5.310903549194336
    9. '_data' → logprob: -5.935903549194336
    10. 's' → logprob: -6.435903549194336

Token 294: ' lit' (ID: 11980)
  Prédit: '_values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_values' → logprob: -0.988529622554779
    2. 's' → logprob: -2.238529682159424
    3. '_vals' → logprob: -2.488529682159424
    4. '_line' → logprob: -2.863529682159424
    5. 'values' → logprob: -2.988529682159424
    6. 'val' → logprob: -3.113529682159424
    7. '_val' → logprob: -3.238529682159424
    8. 'vals' → logprob: -3.363529682159424
    9. '_data' → logprob: -3.488529682159424
    10. 'data' → logprob: -3.738529682159424

Token 295: ' une' (ID: 2463)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.48797082901000977
    2. '().' → logprob: -0.9879708290100098
    3. ' une' → logprob: -4.86297082901001
    4. ' la' → logprob: -6.98797082901001
    5. 's' → logprob: -6.98797082901001
    6. 'une' → logprob: -6.98797082901001
    7. 'les' → logprob: -7.36297082901001
    8. 'la' → logprob: -7.61297082901001
    9. 'a' → logprob: -8.112970352172852
    10. 'line' → logprob: -8.487970352172852

Token 296: ' chaîne' (ID: 89288)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -1.4226768016815186
    2. ' chaîne' → logprob: -1.4226768016815186
    3. ' ligne' → logprob: -1.5476768016815186
    4. 'ligne' → logprob: -2.1726768016815186
    5. '()' → logprob: -2.7976768016815186
    6. ' chaine' → logprob: -2.7976768016815186
    7. 'string' → logprob: -4.547677040100098
    8. ' string' → logprob: -4.672677040100098
    9. 's' → logprob: -4.672677040100098
    10. 'liste' → logprob: -5.172677040100098

Token 297: ' de' (ID: 334)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.08694928139448166
    2. '().' → logprob: -3.211949348449707
    3. '   ' → logprob: -4.711949348449707
    4. 'de' → logprob: -4.836949348449707
    5. ' =' → logprob: -4.961949348449707
    6. 's' → logprob: -5.336949348449707
    7. '=' → logprob: -6.086949348449707
    8. ' de' → logprob: -6.211949348449707
    9. 'split' → logprob: -6.586949348449707
    10. 'b' → logprob: -6.586949348449707

Token 298: ' ' (ID: 220)
  Prédit: ' caractères'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' caractères' → logprob: -0.41041216254234314
    2. 'car' → logprob: -1.1604121923446655
    3. '0' → logprob: -4.535412311553955
    4. 'ent' → logprob: -5.660412311553955
    5. ' caracteres' → logprob: -6.285412311553955
    6. 'chars' → logprob: -6.535412311553955
    7. 'val' → logprob: -6.910412311553955
    8. ' ' → logprob: -7.410412311553955
    9. 'entrée' → logprob: -7.785412311553955
    10. 'n' → logprob: -7.910412311553955

Token 299: '0' (ID: 15)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.19186191260814667
    2. ' caractères' → logprob: -2.941861867904663
    3. '0' → logprob: -3.066861867904663
    4. 'input' → logprob: -3.691861867904663
    5. 'bits' → logprob: -4.441862106323242
    6. 'str' → logprob: -4.441862106323242
    7. 'chars' → logprob: -4.941862106323242
    8. 'N' → logprob: -5.191862106323242
    9. 'ent' → logprob: -5.941862106323242
    10. 'entrée' → logprob: -6.316862106323242

Token 300: ' et' (ID: 859)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.11052113026380539
    2. '1' → logprob: -2.485521078109741
    3. ' ' → logprob: -4.73552131652832
    4. '*' → logprob: -6.11052131652832
    5. '01' → logprob: -6.36052131652832
    6. ')' → logprob: -6.48552131652832
    7. '0' → logprob: -6.61052131652832
    8. ',' → logprob: -6.98552131652832
    9. '012' → logprob: -6.98552131652832
    10. 'es' → logprob: -7.23552131652832

Token 301: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004102623555809259
    2. ' ' → logprob: -5.50410270690918
    3. 's' → logprob: -10.75410270690918
    4. ' ' → logprob: -13.62910270690918
    5. '   ' → logprob: -13.87910270690918
    6. 'un' → logprob: -15.37910270690918
    7. 'es' → logprob: -16.37910270690918
    8. 'space' → logprob: -16.50410270690918
    9. '  ' → logprob: -16.62910270690918
    10. '
' → logprob: -16.87910270690918

Token 302: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.625003814697266
    3. 's' → logprob: -14.250003814697266
    4. 'un' → logprob: -17.000003814697266
    5. '   ' → logprob: -17.250003814697266
    6. '
' → logprob: -18.125003814697266
    7. '

' → logprob: -18.500003814697266
    8. ' ' → logprob: -18.625003814697266
    9. 'es' → logprob: -19.000003814697266
    10. ''s' → logprob: -19.000003814697266

Token 303: '.
' (ID: 558)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5980668067932129
    2. ')' → logprob: -1.598066806793213
    3. '().' → logprob: -2.223066806793213
    4. '   ' → logprob: -3.348066806793213
    5. '()' → logprob: -3.598066806793213
    6. ',' → logprob: -3.848066806793213
    7. ' =' → logprob: -4.473066806793213
    8. '.' → logprob: -4.723066806793213
    9. ' )' → logprob: -4.723066806793213
    10. '),' → logprob: -5.723066806793213

Token 304: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4261222183704376
    2. ' s' → logprob: -1.8011221885681152
    3. ' line' → logprob: -2.1761221885681152
    4. 's' → logprob: -2.8011221885681152
    5. 'line' → logprob: -5.926122188568115
    6. ' for' → logprob: -6.676122188568115
    7. ' bits' → logprob: -6.676122188568115
    8. 'bits' → logprob: -7.551122188568115
    9. ' binary' → logprob: -7.676122188568115
    10. ' values' → logprob: -8.176122665405273

Token 305: ' #' (ID: 1069)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.64349764585495
    2. 's' → logprob: -1.3934977054595947
    3. ' line' → logprob: -2.1434977054595947
    4. 'row' → logprob: -3.0184977054595947
    5. ' s' → logprob: -3.8934977054595947
    6. 'bits' → logprob: -4.518497467041016
    7. ' row' → logprob: -4.768497467041016
    8. 'ligne' → logprob: -5.393497467041016
    9. '   ' → logprob: -5.893497467041016
    10. 'for' → logprob: -5.893497467041016

Token 306: ' enumerate' (ID: 29671)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.5018442273139954
    2. 's' → logprob: -2.0018441677093506
    3. 'bits' → logprob: -2.5018441677093506
    4. 'row' → logprob: -2.7518441677093506
    5. 'ligne' → logprob: -3.2518441677093506
    6. ' line' → logprob: -3.8768441677093506
    7. 'binary' → logprob: -4.25184440612793
    8. 'for' → logprob: -4.37684440612793
    9. 'bin' → logprob: -4.87684440612793
    10. 'values' → logprob: -5.75184440612793

Token 307: ' ren' (ID: 5427)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5424069762229919
    2. '(input' → logprob: -1.5424070358276367
    3. 'for' → logprob: -2.1674070358276367
    4. '(
' → logprob: -3.6674070358276367
    5. '(s' → logprob: -4.042407035827637
    6. '((' → logprob: -4.792407035827637
    7. '(line' → logprob: -4.792407035827637
    8. '(en' → logprob: -4.917407035827637
    9. ' for' → logprob: -5.167407035827637
    10. ' (' → logprob: -5.292407035827637

Token 308: 'voie' (ID: 70072)
  Prédit: 'umer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umer' → logprob: -0.37682250142097473
    2. 'range' → logprob: -2.2518224716186523
    3. '   ' → logprob: -3.7518224716186523
    4. 'ume' → logprob: -3.7518224716186523
    5. 'voie' → logprob: -4.251822471618652
    6. '(range' → logprob: -4.251822471618652
    7. 'um' → logprob: -4.376822471618652
    8. 'for' → logprob: -4.876822471618652
    9. 'umber' → logprob: -4.876822471618652
    10. '=' → logprob: -4.876822471618652

Token 309: ' à' (ID: 1221)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8633407950401306
    2. '(j' → logprob: -1.1133408546447754
    3. '(en' → logprob: -2.8633408546447754
    4. '(index' → logprob: -3.2383408546447754
    5. ',' → logprob: -3.2383408546447754
    6. '(_,' → logprob: -3.8633408546447754
    7. '(l' → logprob: -4.363340854644775
    8. '(char' → logprob: -4.613340854644775
    9. 'enumer' → logprob: -4.613340854644775
    10. 'index' → logprob: -4.988340854644775

Token 310: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.6978447437286377
    2. 'la' → logprob: -1.4478447437286377
    3. ' chaque' → logprob: -2.6978447437286377
    4. 'index' → logprob: -3.4478447437286377
    5. 'each' → logprob: -3.4478447437286377
    6. '(' → logprob: -3.6978447437286377
    7. 'i' → logprob: -4.322844505310059
    8. ' each' → logprob: -4.322844505310059
    9. 'l' → logprob: -4.447844505310059
    10. ')' → logprob: -4.572844505310059

Token 311: ' fois' (ID: 14697)
  Prédit: ' fois'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fois' → logprob: -0.5329135656356812
    2. 'position' → logprob: -1.5329135656356812
    3. 'fois' → logprob: -3.0329136848449707
    4. 'la' → logprob: -3.4079136848449707
    5. 'range' → logprob: -4.032913684844971
    6. 'part' → logprob: -4.282913684844971
    7. 'index' → logprob: -4.532913684844971
    8. '0' → logprob: -4.532913684844971
    9. 'indice' → logprob: -4.532913684844971
    10. ')' → logprob: -4.782913684844971

Token 312: ' l' (ID: 305)
  Prédit: '(_,'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(_,' → logprob: -0.8852410316467285
    2. '(index' → logprob: -1.8852410316467285
    3. '   ' → logprob: -2.2602410316467285
    4. '(j' → logprob: -2.7602410316467285
    5. '(' → logprob: -3.0102410316467285
    6. ' la' → logprob: -3.1352410316467285
    7. '_,' → logprob: -3.2602410316467285
    8. 'index' → logprob: -3.6352410316467285
    9. ' (' → logprob: -3.6352410316467285
    10. ' index' → logprob: -3.7602410316467285

Token 313: ''ind' (ID: 82245)
  Prédit: ' index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' index' → logprob: -0.132304385304451
    2. 'index' → logprob: -2.2573044300079346
    3. 'i' → logprob: -5.0073041915893555
    4. 'indice' → logprob: -5.5073041915893555
    5. ' idx' → logprob: -5.7573041915893555
    6. 'idx' → logprob: -6.3823041915893555
    7. ' i' → logprob: -6.7573041915893555
    8. ' indice' → logprob: -6.8823041915893555
    9. 'x' → logprob: -8.007304191589355
    10. 'e' → logprob: -8.007304191589355

Token 314: 'ice' (ID: 603)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.007616444956511259
    2. 'ice' → logprob: -4.8826165199279785
    3. 'exe' → logprob: -12.00761604309082
    4. 'e' → logprob: -13.63261604309082
    5. 'i' → logprob: -14.00761604309082
    6. 'ices' → logprob: -14.38261604309082
    7. 'exp' → logprob: -14.50761604309082
    8. 'index' → logprob: -15.25761604309082
    9. '   ' → logprob: -15.63261604309082
    10. 'expl' → logprob: -15.88261604309082

Token 315: ' j' (ID: 441)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001089258585125208
    2. ' ,' → logprob: -8.251089096069336
    3. '(j' → logprob: -8.251089096069336
    4. ',j' → logprob: -8.501089096069336
    5. 's' → logprob: -9.376089096069336
    6. '   ' → logprob: -9.501089096069336
    7. '_,' → logprob: -10.001089096069336
    8. ' et' → logprob: -10.126089096069336
    9. '(s' → logprob: -10.876089096069336
    10. '(i' → logprob: -11.501089096069336

Token 316: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -3.845798710244708e-05
    2. ' ,' → logprob: -10.375038146972656
    3. ',
' → logprob: -13.750038146972656
    4. ',j' → logprob: -14.000038146972656
    5. 'for' → logprob: -14.125038146972656
    6. '   ' → logprob: -14.500038146972656
    7. 's' → logprob: -14.625038146972656
    8. 'et' → logprob: -15.000038146972656
    9. '‌,' → logprob: -15.375038146972656
    10. ',de' → logprob: -15.375038146972656

Token 317: ' le' (ID: 505)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.4242134690284729
    2. ' le' → logprob: -1.9242134094238281
    3. 'le' → logprob: -2.299213409423828
    4. 'la' → logprob: -3.299213409423828
    5. 'c' → logprob: -3.674213409423828
    6. ' c' → logprob: -4.174213409423828
    7. 'car' → logprob: -4.674213409423828
    8. 'val' → logprob: -5.674213409423828
    9. 'char' → logprob: -6.174213409423828
    10. ' car' → logprob: -6.549213409423828

Token 318: ' caractère' (ID: 80509)
  Prédit: 'char'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'char' → logprob: -0.7577658295631409
    2. 'car' → logprob: -1.507765769958496
    3. 'val' → logprob: -1.632765769958496
    4. ' char' → logprob: -3.132765769958496
    5. ' caract' → logprob: -4.007765769958496
    6. 'c' → logprob: -4.132765769958496
    7. 'bit' → logprob: -4.507765769958496
    8. ' val' → logprob: -5.382765769958496
    9. ' caractère' → logprob: -5.382765769958496
    10. ' bit' → logprob: -5.507765769958496

Token 319: ' c' (ID: 274)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4056423306465149
    2. ' c' → logprob: -1.9056422710418701
    3. ' s' → logprob: -2.90564227104187
    4. 's' → logprob: -3.15564227104187
    5. ' de' → logprob: -4.155642509460449
    6. 'c' → logprob: -4.655642509460449
    7. ' ch' → logprob: -4.655642509460449
    8. ' for' → logprob: -4.655642509460449
    9. ' (' → logprob: -4.780642509460449
    10. ' dans' → logprob: -4.905642509460449

Token 320: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.311317503452301
    2. ' in' → logprob: -1.6863174438476562
    3. ' for' → logprob: -3.3113174438476562
    4. ',' → logprob: -3.6863174438476562
    5. 'for' → logprob: -4.811317443847656
    6. 'in' → logprob: -5.686317443847656
    7. ' pour' → logprob: -5.936317443847656
    8. ' dans' → logprob: -6.311317443847656
    9. ' en' → logprob: -6.436317443847656
    10. ' de' → logprob: -7.436317443847656

Token 321: ' chaque' (ID: 21194)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.03715088590979576
    2. ' j' → logprob: -3.7871508598327637
    3. 'c' → logprob: -4.787150859832764
    4. ' ' → logprob: -5.912150859832764
    5. ' ' → logprob: -6.287150859832764
    6. 'j' → logprob: -7.412150859832764
    7. ' _' → logprob: -9.162151336669922
    8. ' caract' → logprob: -10.162151336669922
    9. ' car' → logprob: -10.537151336669922
    10. ' chaque' → logprob: -11.162151336669922

Token 322: ' position' (ID: 4010)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.04712393879890442
    2. ' ' → logprob: -4.047123908996582
    3. ' in' → logprob: -4.172123908996582
    4. ' c' → logprob: -4.922123908996582
    5. ' ,' → logprob: -6.547123908996582
    6. 'j' → logprob: -6.672123908996582
    7. ',' → logprob: -6.922123908996582
    8. ' caract' → logprob: -7.172123908996582
    9. ' caractère' → logprob: -8.297123908996582
    10. ' char' → logprob: -8.422123908996582

Token 323: '.
' (ID: 558)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.37118226289749146
    2. ',' → logprob: -1.8711822032928467
    3. '   ' → logprob: -1.9961822032928467
    4. ' dans' → logprob: -4.746182441711426
    5. 'in' → logprob: -5.496182441711426
    6. ' ,' → logprob: -5.746182441711426
    7. ' de' → logprob: -6.371182441711426
    8. '    ' → logprob: -7.746182441711426
    9. 'dans' → logprob: -7.746182441711426
    10. ' en' → logprob: -8.371182441711426

Token 324: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -8.125210297293961e-05
    2. ' for' → logprob: -9.500081062316895
    3. 'for' → logprob: -12.125081062316895
    4. '   ' → logprob: -15.125081062316895
    5. '    
' → logprob: -15.250081062316895
    6. '       ' → logprob: -15.875081062316895
    7. '    ' → logprob: -16.12508201599121
    8. '
' → logprob: -17.50008201599121
    9. '  ' → logprob: -17.62508201599121
    10. ',' → logprob: -17.87508201599121

Token 325: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9182682633399963
    2. 'for' (adapté à ' for') → logprob: -1.5432682037353516
    3. ' for' → logprob: -1.6682682037353516
    4. ' line' → logprob: -1.7932682037353516
    5. 'line' → logprob: -3.5432682037353516
    6. 'ligne' → logprob: -6.918268203735352
    7. ' ligne' → logprob: -7.043268203735352
    8. 's' → logprob: -7.793268203735352
    9. ' s' → logprob: -8.168268203735352
    10. ' row' → logprob: -8.793268203735352

Token 326: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.34848660230636597
    2. 'j' → logprob: -1.2234866619110107
    3. ' ' → logprob: -10.59848690032959
    4. '	j' → logprob: -11.22348690032959
    5. '   ' → logprob: -13.84848690032959
    6. ' ' → logprob: -13.97348690032959
    7. ' ' → logprob: -14.47348690032959
    8. '```' → logprob: -15.09848690032959
    9. '  ' → logprob: -15.59848690032959
    10. ',' → logprob: -15.59848690032959

Token 327: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006603728979825974
    2. ' ,' → logprob: -7.500660419464111
    3. ' in' → logprob: -9.875659942626953
    4. ',c' → logprob: -10.375659942626953
    5. 'in' → logprob: -11.625659942626953
    6. ',char' → logprob: -12.500659942626953
    7. ',j' → logprob: -13.250659942626953
    8. '‌,' → logprob: -13.500659942626953
    9. ',s' → logprob: -14.000659942626953
    10. ',v' → logprob: -14.375659942626953

Token 328: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.20141451060771942
    2. 'c' → logprob: -1.7014144659042358
    3. ' ' → logprob: -14.326414108276367
    4. '	c' → logprob: -15.576414108276367
    5. ' ' → logprob: -16.076414108276367
    6. 'ch' → logprob: -16.326414108276367
    7. 'char' → logprob: -16.951414108276367
    8. '_c' → logprob: -17.201414108276367
    9. ')c' → logprob: -17.326414108276367
    10. ' ' → logprob: -17.451414108276367

Token 329: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0336613766849041
    2. 'in' → logprob: -3.408661365509033
    3. ' ' → logprob: -11.783661842346191
    4. ')' → logprob: -13.283661842346191
    5. '	in' → logprob: -13.408661842346191
    6. '<|end|>' → logprob: -13.533661842346191
    7. ',' → logprob: -13.783661842346191
    8. 's' → logprob: -14.033661842346191
    9. 'n' → logprob: -15.408661842346191
    10. 'inthe' → logprob: -15.908661842346191

Token 330: ' enumerate' (ID: 29671)
  Prédit: ' enumerate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enumerate' → logprob: -0.16022992134094238
    2. 'enumer' → logprob: -1.9102299213409424
    3. 'en' → logprob: -13.160229682922363
    4. ' in' → logprob: -13.535229682922363
    5. '```' → logprob: -14.410229682922363
    6. 'in' → logprob: -14.660229682922363
    7. ' ' → logprob: -14.785229682922363
    8. 'enum' → logprob: -15.160229682922363
    9. ' en' → logprob: -15.410229682922363
    10. '(en' → logprob: -15.785229682922363

Token 331: '(input' (ID: 10054)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.1455824226140976
    2. 'input' → logprob: -2.020582437515259
    3. '(input' → logprob: -5.89558219909668
    4. ' (' → logprob: -9.52058219909668
    5. ' in' → logprob: -10.64558219909668
    6. ' ' → logprob: -11.02058219909668
    7. '   ' → logprob: -11.77058219909668
    8. '(' → logprob: -11.89558219909668
    9. ')' → logprob: -11.89558219909668
    10. 'in' → logprob: -12.52058219909668

Token 332: '()):
' (ID: 83536)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03318730369210243
    2. '())' → logprob: -3.6581873893737793
    3. '().' → logprob: -5.658187389373779
    4. '():' → logprob: -6.283187389373779
    5. '()):
' → logprob: -6.658187389373779
    6. '());' → logprob: -9.033186912536621
    7. '()>' → logprob: -10.283186912536621
    8. '()){' → logprob: -11.533186912536621
    9. '()]' → logprob: -11.783186912536621
    10. ' ())' → logprob: -11.908186912536621

Token 333: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02144506573677063
    2. ':' → logprob: -4.271445274353027
    3. 'd' → logprob: -5.646445274353027
    4. '):' → logprob: -6.021445274353027
    5. '):
' → logprob: -7.521445274353027
    6. ')' → logprob: -8.146445274353027
    7. ':
' → logprob: -9.021445274353027
    8. '<|end|>' → logprob: -9.521445274353027
    9. '        
' → logprob: -9.771445274353027
    10. ' :' → logprob: -10.396445274353027

Token 334: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03915289789438248
    2. ' if' → logprob: -4.289153099060059
    3. '           ' → logprob: -4.539153099060059
    4. 'd' → logprob: -4.914153099060059
    5. ' d' → logprob: -5.164153099060059
    6. 'if' → logprob: -8.289153099060059
    7. '   ' → logprob: -8.289153099060059
    8. '        
' → logprob: -8.789153099060059
    9. '        ' → logprob: -9.039153099060059
    10. ' ' → logprob: -10.414153099060059

Token 335: ' Si' (ID: 7832)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.05580345168709755
    2. ' d' → logprob: -3.3058035373687744
    3. 'if' → logprob: -4.430803298950195
    4. ' if' → logprob: -5.680803298950195
    5. '       ' → logprob: -6.180803298950195
    6. '           ' → logprob: -9.180803298950195
    7. '   ' → logprob: -9.305803298950195
    8. ' ' → logprob: -11.305803298950195
    9. '	d' → logprob: -12.305803298950195
    10. '     ' → logprob: -13.618303298950195

Token 336: ' le' (ID: 505)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.020545389503240585
    2. 'c' → logprob: -3.895545482635498
    3. ' ' → logprob: -13.64554500579834
    4. '	c' → logprob: -14.02054500579834
    5. ' ' → logprob: -14.14554500579834
    6. '   ' → logprob: -15.02054500579834
    7. ')c' → logprob: -15.89554500579834
    8. '(c' → logprob: -16.270545959472656
    9. '    ' → logprob: -16.770545959472656
    10. '  ' → logprob: -17.145545959472656

Token 337: ' caractère' (ID: 80509)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0160356592386961
    2. ' c' → logprob: -4.141035556793213
    3. ' ' → logprob: -14.141036033630371
    4. '	c' → logprob: -14.891036033630371
    5. '   ' → logprob: -15.641036033630371
    6. 'int' → logprob: -16.891035079956055
    7. ' ' → logprob: -17.391035079956055
    8. ')c' → logprob: -17.766035079956055
    9. ' int' → logprob: -18.266035079956055
    10. '    ' → logprob: -18.266035079956055

Token 338: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.035309553146362305
    2. ' ==' → logprob: -3.9103095531463623
    3. 'c' → logprob: -4.410309791564941
    4. ' ' → logprob: -6.535309791564941
    5. '==' → logprob: -7.160309791564941
    6. ' s' → logprob: -9.035309791564941
    7. '=' → logprob: -9.535309791564941
    8. 's' → logprob: -10.660309791564941
    9. ' =' → logprob: -10.785309791564941
    10. ' is' → logprob: -11.785309791564941

Token 339: ' est' (ID: 893)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6944290399551392
    2. ' ==' → logprob: -0.6944290399551392
    3. '=' → logprob: -7.06942892074585
    4. '=='' → logprob: -8.069429397583008
    5. ' =' → logprob: -10.444429397583008
    6. '=="' → logprob: -11.069429397583008
    7. '[' → logprob: -11.194429397583008
    8. '===' → logprob: -11.444429397583008
    9. ' =='' → logprob: -11.694429397583008
    10. ' ' → logprob: -11.819429397583008

Token 340: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.16082130372524261
    2. ' '' → logprob: -1.9108213186264038
    3. '1' → logprob: -8.410820960998535
    4. ' ' → logprob: -9.035820960998535
    5. '"' → logprob: -9.285820960998535
    6. '   ' → logprob: -9.910820960998535
    7. ''un' → logprob: -10.910820960998535
    8. ''a' → logprob: -10.910820960998535
    9. '#' → logprob: -11.660820960998535
    10. '<|end|>' → logprob: -11.785820960998535

Token 341: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00013405199570115656
    2. '0' → logprob: -9.125134468078613
    3. ' ' → logprob: -10.750134468078613
    4. ''' → logprob: -12.875134468078613
    5. '#' → logprob: -14.375134468078613
    6. '')' → logprob: -16.250133514404297
    7. '-' → logprob: -16.625133514404297
    8. '.' → logprob: -17.062633514404297
    9. '*' → logprob: -17.312633514404297
    10. ' '' → logprob: -17.375133514404297

Token 342: '',' (ID: 787)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07999866455793381
    2. '':' → logprob: -3.329998731613159
    3. ':
' → logprob: -3.704998731613159
    4. '):' → logprob: -4.57999849319458
    5. '):
' → logprob: -5.95499849319458
    6. '':
' → logprob: -6.45499849319458
    7. ' :' → logprob: -6.82999849319458
    8. '           ' → logprob: -7.95499849319458
    9. '       ' → logprob: -8.579998970031738
    10. ''):
' → logprob: -9.454998970031738

Token 343: ' on' (ID: 402)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.7182386517524719
    2. '           ' → logprob: -0.7182386517524719
    3. 'd' → logprob: -3.718238592147827
    4. '       ' → logprob: -8.093238830566406
    5. '               ' → logprob: -9.343238830566406
    6. '   ' → logprob: -10.093238830566406
    7. '          ' → logprob: -10.968238830566406
    8. '		' → logprob: -11.218238830566406
    9. '	d' → logprob: -11.968238830566406
    10. '	       ' → logprob: -12.093238830566406

Token 344: ' place' (ID: 2475)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.7251278758049011
    2. '           ' → logprob: -0.8501278758049011
    3. ' d' → logprob: -3.100127935409546
    4. '       ' → logprob: -3.225127935409546
    5. '   ' → logprob: -7.475127696990967
    6. '          ' → logprob: -7.600127696990967
    7. '         ' → logprob: -7.725127696990967
    8. '=' → logprob: -7.975127696990967
    9. '        ' → logprob: -7.975127696990967
    10. ':' → logprob: -8.850128173828125

Token 345: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1994990110397339
    2. 'd' → logprob: -2.0744991302490234
    3. ' d' → logprob: -3.4494991302490234
    4. ' ' → logprob: -4.199499130249023
    5. '           ' → logprob: -5.074499130249023
    6. '   ' → logprob: -6.949499130249023
    7. '       ' → logprob: -6.949499130249023
    8. '0' → logprob: -8.949499130249023
    9. ' une' → logprob: -10.824499130249023
    10. '    ' → logprob: -11.324499130249023

Token 346: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03819308429956436
    2. 'd' → logprob: -3.2881929874420166
    3. ' ' → logprob: -10.038192749023438
    4. '       ' → logprob: -10.163192749023438
    5. ' d' → logprob: -10.288192749023438
    6. '   ' → logprob: -10.788192749023438
    7. '           ' → logprob: -11.788192749023438
    8. '0' → logprob: -12.663192749023438
    9. '#' → logprob: -14.288192749023438
    10. 'True' → logprob: -14.538192749023438

Token 347: ' dans' (ID: 2671)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.30645862221717834
    2. ' dans' → logprob: -2.4314587116241455
    3. '       ' → logprob: -3.0564587116241455
    4. ' in' → logprob: -3.3064587116241455
    5. '   ' → logprob: -3.8064587116241455
    6. 'd' → logprob: -4.306458473205566
    7. '            
' → logprob: -4.931458473205566
    8. ',' → logprob: -5.306458473205566
    9. ' at' → logprob: -5.431458473205566
    10. '          ' → logprob: -5.556458473205566

Token 348: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.026341291144490242
    2. ' d' → logprob: -3.651341199874878
    3. '   ' → logprob: -10.401341438293457
    4. '	d' → logprob: -12.651341438293457
    5. '       ' → logprob: -13.276341438293457
    6. ' ' → logprob: -13.401341438293457
    7. ' la' → logprob: -13.526341438293457
    8. ')' → logprob: -14.276341438293457
    9. ')d' → logprob: -14.526341438293457
    10. '#' → logprob: -14.901341438293457

Token 349: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.9153885558771435e-06
    2. '   ' → logprob: -13.000005722045898
    3. ' [' → logprob: -13.500005722045898
    4. 'd' → logprob: -14.375005722045898
    5. '[d' → logprob: -14.500005722045898
    6. '[' → logprob: -15.000005722045898
    7. '[j' → logprob: -15.500005722045898
    8. '```' → logprob: -15.500005722045898
    9. 'i' → logprob: -16.0000057220459
    10. '[I' → logprob: -16.3750057220459

Token 350: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0029347948729991913
    2. '[i' → logprob: -5.87793493270874
    3. ']' → logprob: -9.377934455871582
    4. ' ][' → logprob: -10.752934455871582
    5. '[j' → logprob: -11.752934455871582
    6. '[' → logprob: -11.752934455871582
    7. ''][' → logprob: -13.502934455871582
    8. '

' → logprob: -13.877934455871582
    9. ']][' → logprob: -14.002934455871582
    10. '"][' → logprob: -14.252934455871582

Token 351: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0002892258344218135
    2. ' j' → logprob: -8.250288963317871
    3. ']' → logprob: -11.375288963317871
    4. '   ' → logprob: -11.750288963317871
    5. ' ' → logprob: -13.000288963317871
    6. 'c' → logprob: -13.500288963317871
    7. 'd' → logprob: -13.875288963317871
    8. '][' → logprob: -14.250288963317871
    9. '[j' → logprob: -14.375288963317871
    10. '```' → logprob: -14.500288963317871

Token 352: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0035010038409382105
    2. ']=' → logprob: -6.503500938415527
    3. ' ]' → logprob: -6.628500938415527
    4. '       ' → logprob: -8.503500938415527
    5. '           ' → logprob: -8.753500938415527
    6. '[i' → logprob: -9.128500938415527
    7. '[j' → logprob: -9.253500938415527
    8. '   ' → logprob: -10.128500938415527
    9. '[' → logprob: -11.253500938415527
    10. 'if' → logprob: -11.378500938415527

Token 353: ' sinon' (ID: 52915)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08224041014909744
    2. ' d' → logprob: -2.707240343093872
    3. 'd' → logprob: -4.582240581512451
    4. ' if' → logprob: -7.207240581512451
    5. '               ' → logprob: -7.457240581512451
    6. '       ' → logprob: -7.582240581512451
    7. 'if' → logprob: -9.832240104675293
    8. '          ' → logprob: -10.457240104675293
    9. '   ' → logprob: -10.957240104675293
    10. ' ' → logprob: -10.957240104675293

Token 354: ' l' (ID: 305)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.676514744758606
    2. '0' → logprob: -1.051514744758606
    3. ' d' → logprob: -2.0515146255493164
    4. 'd' → logprob: -4.301514625549316
    5. ' ' → logprob: -10.301514625549316
    6. '        ' → logprob: -10.926514625549316
    7. '       ' → logprob: -11.051514625549316
    8. '<|end|>' → logprob: -11.301514625549316
    9. '           ' → logprob: -12.051514625549316
    10. '1' → logprob: -12.426514625549316

Token 355: ''' (ID: 6)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.732138991355896
    2. 'a' → logprob: -1.357138991355896
    3. 'd' → logprob: -1.857138991355896
    4. ' d' → logprob: -3.4821391105651855
    5. '[' → logprob: -3.6071391105651855
    6. ''' → logprob: -4.1071391105651855
    7. '0' → logprob: -4.7321391105651855
    8. 'es' → logprob: -5.2321391105651855
    9. '['' → logprob: -6.2321391105651855
    10. ''on' → logprob: -6.7321391105651855

Token 356: 'élé' (ID: 15228)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0644703358411789
    2. ' d' → logprob: -3.3144702911376953
    3. 'e' → logprob: -4.939470291137695
    4. '[' → logprob: -4.939470291137695
    5. '0' → logprob: -5.439470291137695
    6. 'a' → logprob: -5.564470291137695
    7. '#' → logprob: -7.439470291137695
    8. '=' → logprob: -8.064470291137695
    9. 'value' → logprob: -8.439470291137695
    10. 'es' → logprob: -8.564470291137695

Token 357: 'ment' (ID: 508)
  Prédit: 'ment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ment' → logprob: -1.0680663585662842
    2. 'ement' → logprob: -1.4430663585662842
    3. 'se' → logprob: -1.5680663585662842
    4. 'e' → logprob: -2.068066358566284
    5. 'ément' → logprob: -3.693066358566284
    6. '0' → logprob: -3.943066358566284
    7. 'd' → logprob: -4.068066596984863
    8. 'm' → logprob: -5.193066596984863
    9. 'else' → logprob: -5.693066596984863
    10. '#' → logprob: -5.818066596984863

Token 358: ' reste' (ID: 26769)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.8604763150215149
    2. ' d' → logprob: -1.3604762554168701
    3. '[i' → logprob: -2.11047625541687
    4. '=' → logprob: -2.48547625541687
    5. ' =' → logprob: -2.86047625541687
    6. 's' → logprob: -3.73547625541687
    7. ' est' → logprob: -4.485476493835449
    8. ' reste' → logprob: -4.860476493835449
    9. '[' → logprob: -5.610476493835449
    10. ']' → logprob: -6.360476493835449

Token 359: ' à' (ID: 1221)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0020025114063173532
    2. ' ' → logprob: -6.252002716064453
    3. 'd' → logprob: -9.627002716064453
    4. '   ' → logprob: -12.252002716064453
    5. ' à' → logprob: -13.627002716064453
    6. 'à' → logprob: -14.627002716064453
    7. ' d' → logprob: -14.752002716064453
    8. '=' → logprob: -15.127002716064453
    9. '       ' → logprob: -15.502002716064453
    10. '#' → logprob: -16.377002716064453

Token 360: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003843173326458782
    2. ' ' → logprob: -7.875384330749512
    3. 'd' → logprob: -13.125384330749512
    4. '#' → logprob: -13.875384330749512
    5. ' d' → logprob: -14.375384330749512
    6. ' #' → logprob: -14.500384330749512
    7. '   ' → logprob: -16.000383377075195
    8. '1' → logprob: -16.875383377075195
    9. 'c' → logprob: -17.750383377075195
    10. '       ' → logprob: -18.000383377075195

Token 361: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.375003814697266
    3. 'd' → logprob: -19.500003814697266
    4. '#' → logprob: -19.875003814697266
    5. 'z' → logprob: -20.125003814697266
    6. '   ' → logprob: -20.125003814697266
    7. '
' → logprob: -21.375003814697266
    8. '       ' → logprob: -21.875003814697266
    9. '```' → logprob: -22.500003814697266
    10. 'c' → logprob: -22.875003814697266

Token 362: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22914984822273254
    2. '           ' → logprob: -1.6041498184204102
    3. ':' → logprob: -6.22914981842041
    4. ' =' → logprob: -7.47914981842041
    5. ' if' → logprob: -7.85414981842041
    6. '=' → logprob: -8.35414981842041
    7. ',' → logprob: -8.97914981842041
    8. '               ' → logprob: -9.60414981842041
    9. '   ' → logprob: -9.85414981842041
    10. '        
' → logprob: -9.85414981842041

Token 363: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010472540743649006
    2. '           ' → logprob: -4.635472774505615
    3. 'd' → logprob: -8.010472297668457
    4. ' if' → logprob: -8.135472297668457
    5. ' d' → logprob: -10.385472297668457
    6. 'if' → logprob: -10.510472297668457
    7. '   ' → logprob: -11.385472297668457
    8. '        
' → logprob: -11.885472297668457
    9. ',' → logprob: -12.385472297668457
    10. '               ' → logprob: -13.385472297668457

Token 364: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9037902355194092
    2. 'if' (adapté à ' if') → logprob: -1.1537902355194092
    3. 'd' → logprob: -1.9037902355194092
    4. ' if' → logprob: -2.153790235519409
    5. ' d' → logprob: -4.778790473937988
    6. '           ' → logprob: -5.153790473937988
    7. '   ' → logprob: -8.153790473937988
    8. ' ' → logprob: -12.778790473937988
    9. '               ' → logprob: -13.278790473937988
    10. '	if' → logprob: -13.403790473937988

Token 365: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.1602262556552887
    2. 'c' → logprob: -1.9102262258529663
    3. ' ' → logprob: -13.910225868225098
    4. '	c' → logprob: -14.035225868225098
    5. '(c' → logprob: -16.160226821899414
    6. ' ' → logprob: -16.285226821899414
    7. ')c' → logprob: -16.535226821899414
    8. '    ' → logprob: -17.035226821899414
    9. '   ' → logprob: -17.285226821899414
    10. ' ' → logprob: -18.660226821899414

Token 366: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.14288824796676636
    2. '==' → logprob: -2.017888307571411
    3. '[' → logprob: -9.142888069152832
    4. '=' → logprob: -9.392888069152832
    5. ' =' → logprob: -11.892888069152832
    6. '=='' → logprob: -12.267888069152832
    7. ']==' → logprob: -13.142888069152832
    8. ' ' → logprob: -13.267888069152832
    9. ' =='' → logprob: -13.392888069152832
    10. '===' → logprob: -14.017888069152832

Token 367: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.12699006497859955
    2. ' '' → logprob: -2.1269900798797607
    3. '"' → logprob: -9.87699031829834
    4. '1' → logprob: -12.12699031829834
    5. ' ' → logprob: -12.50199031829834
    6. ' "' → logprob: -14.12699031829834
    7. ')' → logprob: -15.50199031829834
    8. ' ' → logprob: -15.62699031829834
    9. '`' → logprob: -15.75199031829834
    10. ''un' → logprob: -17.126989364624023

Token 368: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ''' → logprob: -16.125
    3. ' ' → logprob: -16.75
    4. '')' → logprob: -19.625
    5. '0' → logprob: -19.75
    6. '```' → logprob: -22.25
    7. ''>' → logprob: -22.75
    8. '' → logprob: -23.375
    9. ')' → logprob: -24.0
    10. '"' → logprob: -24.0

Token 369: '':
' (ID: 7669)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.22544772922992706
    2. ':
' → logprob: -2.600447654724121
    3. ']:' → logprob: -3.100447654724121
    4. '':' → logprob: -3.600447654724121
    5. ']' → logprob: -3.850447654724121
    6. '):' → logprob: -4.225447654724121
    7. '):
' → logprob: -5.225447654724121
    8. ']:
' → logprob: -5.225447654724121
    9. '':
' → logprob: -5.975447654724121
    10. '       ' → logprob: -5.975447654724121

Token 370: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005869421176612377
    2. 'd' → logprob: -5.505869388580322
    3. ':' → logprob: -7.380869388580322
    4. '               ' → logprob: -7.630869388580322
    5. ' d' → logprob: -8.38086986541748
    6. ':
' → logprob: -8.88086986541748
    7. '       ' → logprob: -8.88086986541748
    8. '):
' → logprob: -10.50586986541748
    9. '            
' → logprob: -10.50586986541748
    10. ')' → logprob: -11.13086986541748

Token 371: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.5759826898574829
    2. 'd' (adapté à ' d') → logprob: -0.8259826898574829
    3. '           ' → logprob: -10.200983047485352
    4. '               ' → logprob: -12.575983047485352
    5. '       ' → logprob: -13.950983047485352
    6. '   ' → logprob: -14.325983047485352
    7. '	d' → logprob: -14.325983047485352
    8. ' ' → logprob: -16.20098304748535
    9. ')d' → logprob: -16.20098304748535
    10. ' ' → logprob: -16.70098304748535

Token 372: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.981667537620524e-06
    2. '[' → logprob: -13.625001907348633
    3. ' [' → logprob: -15.250001907348633
    4. '[I' → logprob: -15.375001907348633
    5. '][' → logprob: -15.625001907348633
    6. ')[' → logprob: -16.125001907348633
    7. '[d' → logprob: -17.750001907348633
    8. '[j' → logprob: -17.875001907348633
    9. '[D' → logprob: -17.875001907348633
    10. '```' → logprob: -18.250001907348633

Token 373: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0434880331158638
    2. '[i' → logprob: -3.168488025665283
    3. ']' → logprob: -7.918488025665283
    4. '[j' → logprob: -10.043488502502441
    5. '[' → logprob: -10.293488502502441
    6. ' ][' → logprob: -11.043488502502441
    7. ')[' → logprob: -11.168488502502441
    8. '   ' → logprob: -11.668488502502441
    9. '[I' → logprob: -13.293488502502441
    10. '       ' → logprob: -13.668488502502441

Token 374: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -3.650518920039758e-06
    2. ' j' → logprob: -12.875003814697266
    3. '[j' → logprob: -14.625003814697266
    4. '   ' → logprob: -15.625003814697266
    5. '][' → logprob: -15.625003814697266
    6. '```' → logprob: -16.125003814697266
    7. ')' → logprob: -16.500003814697266
    8. ']' → logprob: -17.125003814697266
    9. '	j' → logprob: -17.250003814697266
    10. '           ' → logprob: -17.500003814697266

Token 375: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.003255669493228197
    2. ']=' → logprob: -5.753255844116211
    3. '=' → logprob: -9.503255844116211
    4. ' ]' → logprob: -13.253255844116211
    5. ']+=' → logprob: -14.003255844116211
    6. ' =' → logprob: -14.878255844116211
    7. ')' → logprob: -15.128255844116211
    8. '][' → logprob: -17.12825584411621
    9. '[' → logprob: -17.37825584411621
    10. ')=' → logprob: -17.75325584411621

Token 376: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0007100477814674377
    2. ' =' → logprob: -7.2507100105285645
    3. '+=' → logprob: -17.750709533691406
    4. '=
' → logprob: -18.500709533691406
    5. ']=' → logprob: -18.625709533691406
    6. '.=' → logprob: -18.875709533691406
    7. '=

' → logprob: -19.500709533691406
    8. ']' → logprob: -19.500709533691406
    9. ')=' → logprob: -19.750709533691406
    10. '＝' → logprob: -20.375709533691406

Token 377: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '   ' → logprob: -18.375
    4. '           ' → logprob: -21.5
    5. '0' → logprob: -21.625
    6. '```' → logprob: -22.875
    7. '' → logprob: -23.375
    8. '
' → logprob: -23.5
    9. '۱' → logprob: -23.5
    10. '       ' → logprob: -23.5

Token 378: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.25
    3. '   ' → logprob: -21.0
    4. '           ' → logprob: -23.625
    5. '
' → logprob: -25.0
    6. '       ' → logprob: -25.25
    7. '  ' → logprob: -25.75
    8. '' → logprob: -26.375
    9. '```' → logprob: -26.375
    10. '                   ' → logprob: -26.5

Token 379: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 380: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.638708770275116
    2. 'for' → logprob: -0.763708770275116
    3. 'max' → logprob: -6.013708591461182
    4. 'f' → logprob: -6.763708591461182
    5. 'K' → logprob: -7.638708591461182
    6. 'dp' → logprob: -7.763708591461182
    7. '
' → logprob: -7.888708591461182
    8. ' for' → logprob: -8.63870906829834
    9. 'mask' → logprob: -8.88870906829834
    10. 'D' → logprob: -9.01370906829834

Token 381: ' Construction' (ID: 31452)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.000770436367020011
    2. '#' → logprob: -7.875770568847656
    3. 'def' → logprob: -9.125770568847656
    4. 'from' → logprob: -9.500770568847656
    5. 'result' → logprob: -10.125770568847656
    6. 'dp' → logprob: -10.250770568847656
    7. 'f' → logprob: -10.500770568847656
    8. 'max' → logprob: -10.750770568847656
    9. 'res' → logprob: -10.875770568847656
    10. 'ans' → logprob: -10.875770568847656

Token 382: ' de' (ID: 334)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.159144788980484
    2. ' for' → logprob: -2.034144878387451
    3. '#' → logprob: -4.409144878387451
    4. ' of' → logprob: -6.909144878387451
    5. 'f' → logprob: -6.909144878387451
    6. 'def' → logprob: -7.909144878387451
    7. ' de' → logprob: -8.034144401550293
    8. 's' → logprob: -8.159144401550293
    9. ' f' → logprob: -8.284144401550293
    10. '_' → logprob: -8.784144401550293

Token 383: ' la' (ID: 557)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.683549165725708
    2. 'range' → logprob: -1.183549165725708
    3. 'for' → logprob: -2.433549165725708
    4. 'f' → logprob: -4.183548927307129
    5. 'i' → logprob: -4.308548927307129
    6. ' for' → logprob: -4.433548927307129
    7. 'd' → logprob: -4.558548927307129
    8. ' la' → logprob: -4.558548927307129
    9. ' f' → logprob: -4.683548927307129
    10. ' ' → logprob: -5.058548927307129

Token 384: ' matr' (ID: 25095)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.012110712938010693
    2. ' for' → logprob: -5.012110710144043
    3. '#' → logprob: -6.262110710144043
    4. 'def' → logprob: -7.137110710144043
    5. 'range' → logprob: -7.512110710144043
    6. 'f' → logprob: -7.637110710144043
    7. 'import' → logprob: -7.887110710144043
    8. 'prem' → logprob: -8.137110710144043
    9. 'bou' → logprob: -9.137110710144043
    10. '```' → logprob: -9.512110710144043

Token 385: 'ice' (ID: 603)
  Prédit: 'ice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ice' → logprob: -0.16862551867961884
    2. 't' → logprob: -2.793625593185425
    3. 'tr' → logprob: -3.043625593185425
    4. '#' → logprob: -3.543625593185425
    5. 'rice' → logprob: -5.668625354766846
    6. 'ce' → logprob: -5.918625354766846
    7. 'atrice' → logprob: -6.043625354766846
    8. 'i' → logprob: -6.168625354766846
    9. 'ix' → logprob: -6.293625354766846
    10. 'e' → logprob: -6.668625354766846

Token 386: ' f' (ID: 285)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.35099536180496216
    2. ' for' → logprob: -1.2259953022003174
    3. 'f' → logprob: -6.2259955406188965
    4. ' f' → logprob: -7.7259955406188965
    5. 's' → logprob: -9.725995063781738
    6. '#' → logprob: -10.975995063781738
    7. '```' → logprob: -11.350995063781738
    8. 'import' → logprob: -11.350995063781738
    9. 'd' → logprob: -12.475995063781738
    10. ' =' → logprob: -12.725995063781738

Token 387: '.
' (ID: 558)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.001093427068553865
    2. ' for' → logprob: -6.87609338760376
    3. ')' → logprob: -10.751093864440918
    4. ']' → logprob: -11.126093864440918
    5. '
' → logprob: -11.501093864440918
    6. 'f' → logprob: -11.626093864440918
    7. '```' → logprob: -13.126093864440918
    8. '#' → logprob: -14.001093864440918
    9. '=' → logprob: -14.501093864440918
    10. '[' → logprob: -14.876093864440918

Token 388: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.7432603272027336e-06
    2. ' for' → logprob: -13.500001907348633
    3. 'f' → logprob: -15.625001907348633
    4. '```' → logprob: -16.375001907348633
    5. ')' → logprob: -17.875001907348633
    6. '
' → logprob: -18.125001907348633
    7. '#' → logprob: -18.750001907348633
    8. ']' → logprob: -19.125001907348633
    9. 'from' → logprob: -19.500001907348633
    10. 'i' → logprob: -19.625001907348633

Token 389: ' Cette' (ID: 27383)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -3.2020991056924686e-05
    2. 'f' → logprob: -10.500032424926758
    3. ' for' → logprob: -13.125032424926758
    4. '#' → logprob: -13.125032424926758
    5. 'from' → logprob: -15.250032424926758
    6. '```' → logprob: -15.500032424926758
    7. '
' → logprob: -17.875032424926758
    8. 'def' → logprob: -18.125032424926758
    9. 'import' → logprob: -19.625032424926758
    10. ')' → logprob: -19.875032424926758

Token 390: ' matr' (ID: 25095)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.031917329877614975
    2. ' for' → logprob: -3.5319173336029053
    3. '#' → logprob: -6.406917095184326
    4. 'part' → logprob: -8.781917572021484
    5. ':' → logprob: -10.156917572021484
    6. 'pour' → logprob: -10.281917572021484
    7. 'n' → logprob: -10.281917572021484
    8. ' part' → logprob: -10.406917572021484
    9. 'range' → logprob: -10.406917572021484
    10. ' code' → logprob: -10.531917572021484

Token 391: 'ice' (ID: 603)
  Prédit: 'ice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ice' → logprob: -0.03437886759638786
    2. 'ix' → logprob: -3.90937876701355
    3. 'atrice' → logprob: -5.159379005432129
    4. '#' → logprob: -5.284379005432129
    5. 'ière' → logprob: -6.784379005432129
    6. 'rice' → logprob: -7.034379005432129
    7. 'ixe' → logprob: -7.534379005432129
    8. 'ices' → logprob: -9.284379005432129
    9. 'for' → logprob: -9.659379005432129
    10. 'ique' → logprob: -9.909379005432129

Token 392: ' va' (ID: 3423)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.20955200493335724
    2. 'for' → logprob: -1.8345520496368408
    3. ' for' → logprob: -3.834552049636841
    4. '#' → logprob: -6.459551811218262
    5. ' =' → logprob: -6.834551811218262
    6. '
' → logprob: -6.834551811218262
    7. '[i' → logprob: -6.959551811218262
    8. '```' → logprob: -7.584551811218262
    9. '=' → logprob: -7.834551811218262
    10. 'pour' → logprob: -8.459551811218262

Token 393: ' stock' (ID: 6546)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.14644381403923035
    2. ' for' → logprob: -2.0214438438415527
    3. ' maintenant' → logprob: -6.646443843841553
    4. ' être' → logprob: -7.146443843841553
    5. '#' → logprob: -7.396443843841553
    6. 'range' → logprob: -8.146443367004395
    7. ' now' → logprob: -8.771443367004395
    8. ' range' → logprob: -9.021443367004395
    9. ' pour' → logprob: -9.396443367004395
    10. 'être' → logprob: -9.646443367004395

Token 394: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.11130939424037933
    2. 'for' → logprob: -2.611309289932251
    3. '#' → logprob: -4.23630952835083
    4. '   ' → logprob: -4.86130952835083
    5. ' for' → logprob: -5.36130952835083
    6. 'iter' → logprob: -7.11130952835083
    7. 'urer' → logprob: -7.48630952835083
    8. 'uer' → logprob: -7.73630952835083
    9. 'import' → logprob: -7.98630952835083
    10. 'iner' → logprob: -8.111309051513672

Token 395: ' la' (ID: 557)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.2760274410247803
    2. 'for' → logprob: -2.1510274410247803
    3. 'les' → logprob: -3.1510274410247803
    4. ' f' → logprob: -3.4010274410247803
    5. ' les' → logprob: -4.401027679443359
    6. 'la' → logprob: -4.776027679443359
    7. 'd' → logprob: -5.401027679443359
    8. ' la' → logprob: -5.651027679443359
    9. 'des' → logprob: -6.026027679443359
    10. ' for' → logprob: -6.151027679443359

Token 396: ' longueur' (ID: 104613)
  Prédit: 'long'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'long' → logprob: -0.2192293405532837
    2. 'val' → logprob: -2.594229221343994
    3. 'plus' → logprob: -2.594229221343994
    4. 'max' → logprob: -4.094229221343994
    5. 'for' → logprob: -5.219229221343994
    6. 's' → logprob: -5.344229221343994
    7. '#' → logprob: -5.719229221343994
    8. 'm' → logprob: -5.844229221343994
    9. 'maximum' → logprob: -5.969229221343994
    10. 'f' → logprob: -6.594229221343994

Token 397: ' de' (ID: 334)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.099364995956421
    2. ' maximale' → logprob: -1.224364995956421
    3. 'max' → logprob: -1.474364995956421
    4. ' =' → logprob: -2.724364995956421
    5. ' max' → logprob: -4.099365234375
    6. '=' → logprob: -4.224365234375
    7. '_max' → logprob: -4.849365234375
    8. ' des' → logprob: -5.099365234375
    9. 'for' → logprob: -5.224365234375
    10. '1' → logprob: -5.474365234375

Token 398: ' la' (ID: 557)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5394254922866821
    2. 'la' → logprob: -1.4144254922866821
    3. 's' → logprob: -3.0394253730773926
    4. 'l' → logprob: -3.4144253730773926
    5. ' la' → logprob: -3.4144253730773926
    6. 'f' → logprob: -4.039425373077393
    7. '0' → logprob: -5.039425373077393
    8. 'plus' → logprob: -5.039425373077393
    9. ' sequences' → logprob: -5.164425373077393
    10. '#' → logprob: -5.414425373077393

Token 399: ' plus' (ID: 2932)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.009866821579635143
    2. ' plus' → logprob: -5.134866714477539
    3. 's' → logprob: -6.259866714477539
    4. 'long' → logprob: -7.509866714477539
    5. 'chaine' → logprob: -8.009866714477539
    6. 'pl' → logprob: -8.259866714477539
    7. 'suite' → logprob: -8.509866714477539
    8. 'sequence' → logprob: -9.259866714477539
    9. 'prem' → logprob: -9.509866714477539
    10. '+' → logprob: -9.759866714477539

Token 400: ' longue' (ID: 59564)
  Prédit: 'long'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'long' → logprob: -0.008708290755748749
    2. ' longue' → logprob: -4.883708477020264
    3. '#' → logprob: -7.133708477020264
    4. 'gr' → logprob: -8.883708000183105
    5. '```' → logprob: -10.008708000183105
    6. '_long' → logprob: -10.508708000183105
    7. 'import' → logprob: -10.633708000183105
    8. 'lange' → logprob: -10.883708000183105
    9. 'lon' → logprob: -11.758708000183105
    10. '
' → logprob: -12.633708000183105

Token 401: ' sé' (ID: 7462)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4851824939250946
    2. 'sub' → logprob: -2.110182523727417
    3. 'sequence' → logprob: -2.735182523727417
    4. 'sé' → logprob: -2.860182523727417
    5. ' sé' → logprob: -3.110182523727417
    6. 'suite' → logprob: -3.735182523727417
    7. 'substring' → logprob: -4.485182285308838
    8. '1' → logprob: -4.485182285308838
    9. 'chaine' → logprob: -4.735182285308838
    10. '#' → logprob: -4.985182285308838

Token 402: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.0014705838402733207
    2. 'quences' → logprob: -7.876470565795898
    3. 'q' → logprob: -8.001470565795898
    4. 'que' → logprob: -8.126470565795898
    5. '#' → logprob: -8.251470565795898
    6. 'quine' → logprob: -10.251470565795898
    7. 'QUENCE' → logprob: -10.376470565795898
    8. '   ' → logprob: -10.376470565795898
    9. 'qu' → logprob: -11.001470565795898
    10. 'rie' → logprob: -11.126470565795898

Token 403: ' de' (ID: 334)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.1956355571746826
    2. 'de' → logprob: -1.8206355571746826
    3. 'max' → logprob: -1.8206355571746826
    4. 'cons' → logprob: -2.6956355571746826
    5. '[i' → logprob: -2.8206355571746826
    6. 'possible' → logprob: -3.0706355571746826
    7. 'cont' → logprob: -3.1956355571746826
    8. 'continue' → logprob: -3.5706355571746826
    9. 'for' → logprob: -4.320635795593262
    10. 'cro' → logprob: -4.320635795593262

Token 404: ' bits' (ID: 18189)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07647359371185303
    2. 'uns' → logprob: -3.5764737129211426
    3. 'con' → logprob: -4.576473712921143
    4. ' ' → logprob: -4.701473712921143
    5. 'un' → logprob: -5.451473712921143
    6. 'bits' → logprob: -5.451473712921143
    7. 'v' → logprob: -5.951473712921143
    8. 'app' → logprob: -6.201473712921143
    9. 'l' → logprob: -6.201473712921143
    10. 's' → logprob: -6.701473712921143

Token 405: ' cons' (ID: 1473)
  Prédit: 'cons'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cons' → logprob: -0.6481102705001831
    2. 'cont' → logprob: -1.898110270500183
    3. 'continue' → logprob: -2.1481103897094727
    4. 'for' → logprob: -3.0231103897094727
    5. 'contin' → logprob: -3.2731103897094727
    6. 'pour' → logprob: -3.3981103897094727
    7. 'de' → logprob: -3.7731103897094727
    8. 'con' → logprob: -3.8981103897094727
    9. ' continue' → logprob: -4.648110389709473
    10. 'cro' → logprob: -5.273110389709473

Token 406: 'écut' (ID: 96392)
  Prédit: 'écut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'écut' → logprob: -0.0020931612234562635
    2. 'é' → logprob: -6.752093315124512
    3. 'ecut' → logprob: -7.877093315124512
    4. 'éc' → logprob: -8.002093315124512
    5. 'e' → logprob: -9.752093315124512
    6. '```' → logprob: -10.377093315124512
    7. 'écution' → logprob: -11.002093315124512
    8. '{' → logprob: -11.002093315124512
    9. 'ec' → logprob: -11.377093315124512
    10. '#' → logprob: -11.377093315124512

Token 407: 'ifs' (ID: 14119)
  Prédit: 'ive'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ive' → logprob: -0.03576042130589485
    2. 'utive' → logprob: -3.7857604026794434
    3. 'if' → logprob: -5.410760402679443
    4. 'ifs' → logprob: -5.785760402679443
    5. 'i' → logprob: -6.160760402679443
    6. 'u' → logprob: -7.160760402679443
    7. 'ives' → logprob: -7.535760402679443
    8. '   ' → logprob: -8.410760879516602
    9. 'ut' → logprob: -8.535760879516602
    10. 'f' → logprob: -8.660760879516602

Token 408: ',' (ID: 11)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.5598610043525696
    2. '1' → logprob: -1.8098609447479248
    3. ' de' → logprob: -2.309860944747925
    4. '#' → logprob: -3.309860944747925
    5. '   ' → logprob: -3.559860944747925
    6. '=' → logprob: -4.059861183166504
    7. ' ' → logprob: -4.559861183166504
    8. 'cons' → logprob: -4.809861183166504
    9. 'True' → logprob: -4.809861183166504
    10. '```' → logprob: -5.309861183166504

Token 409: ' ident' (ID: 3951)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.23434486985206604
    2. 'for' → logprob: -2.734344959259033
    3. ' #' → logprob: -3.359344959259033
    4. 'i' → logprob: -3.484344959259033
    5. ' for' → logprob: -4.609344959259033
    6. '0' → logprob: -4.859344959259033
    7. '1' → logprob: -4.859344959259033
    8. ' i' → logprob: -4.984344959259033
    9. 's' → logprob: -5.234344959259033
    10. '```' → logprob: -5.484344959259033

Token 410: 'iques' (ID: 11654)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.08316722512245178
    2. 'ique' → logprob: -3.208167314529419
    3. 'ques' → logprob: -4.33316707611084
    4. '#' → logprob: -4.58316707611084
    5. 'iques' → logprob: -5.20816707611084
    6. 't' → logprob: -5.45816707611084
    7. 'f' → logprob: -6.45816707611084
    8. '```' → logprob: -6.95816707611084
    9. 'fi' → logprob: -7.45816707611084
    10. 'tiques' → logprob: -7.58316707611084

Token 411: ',' (ID: 11)
  Prédit: 'dans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dans' → logprob: -1.6456409692764282
    2. 'sur' → logprob: -1.8956409692764282
    3. '   ' → logprob: -2.0206408500671387
    4. 'pour' → logprob: -2.6456408500671387
    5. 'for' → logprob: -2.8956408500671387
    6. ' dans' → logprob: -2.8956408500671387
    7. ' à' → logprob: -3.0206408500671387
    8. 'de' → logprob: -3.1456408500671387
    9. ',' → logprob: -3.3956408500671387
    10. 'à' → logprob: -3.7706408500671387

Token 412: ' au' (ID: 2791)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5431216955184937
    2. '   ' → logprob: -2.043121814727783
    3. 'for' → logprob: -2.543121814727783
    4. ' #' → logprob: -3.043121814727783
    5. ' ' → logprob: -3.918121814727783
    6. ' for' → logprob: -4.043121814727783
    7. 'sur' → logprob: -4.043121814727783
    8. '0' → logprob: -4.543121814727783
    9. 'dans' → logprob: -4.543121814727783
    10. '1' → logprob: -4.668121814727783

Token 413: ' début' (ID: 29589)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.220747947692871
    2. 'moins' → logprob: -1.720747947692871
    3. ' même' → logprob: -2.220747947692871
    4. '#' → logprob: -2.595747947692871
    5. 'j' → logprob: -2.595747947692871
    6. 'temps' → logprob: -3.095747947692871
    7. 'plus' → logprob: -3.720747947692871
    8. 'd' → logprob: -4.095747947692871
    9. 'max' → logprob: -4.095747947692871
    10. 'cours' → logprob: -4.220747947692871

Token 414: ' de' (ID: 334)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -1.3589915037155151
    2. '   ' → logprob: -1.7339915037155151
    3. 'for' → logprob: -1.7339915037155151
    4. ' de' → logprob: -2.1089916229248047
    5. 'de' → logprob: -2.4839916229248047
    6. 'd' → logprob: -2.7339916229248047
    7. ' d' → logprob: -3.9839916229248047
    8. '=' → logprob: -4.358991622924805
    9. ']' → logprob: -4.483991622924805
    10. ',' → logprob: -4.483991622924805

Token 415: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.7018877267837524
    2. 'f' → logprob: -0.9518877267837524
    3. 'l' → logprob: -3.326887607574463
    4. 'une' → logprob: -3.951887607574463
    5. ' chaque' → logprob: -4.326887607574463
    6. 'i' → logprob: -4.701887607574463
    7. 'cha' → logprob: -4.701887607574463
    8. 'each' → logprob: -5.076887607574463
    9. 'd' → logprob: -5.201887607574463
    10. ' la' → logprob: -5.576887607574463

Token 416: ' représentation' (ID: 162614)
  Prédit: ' même'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' même' → logprob: -1.5342371463775635
    2. 'ligne' → logprob: -1.5342371463775635
    3. 'prem' → logprob: -1.7842371463775635
    4. 'mat' → logprob: -2.6592371463775635
    5. 'sequence' → logprob: -3.0342371463775635
    6. 'chaine' → logprob: -3.4092371463775635
    7. 'm' → logprob: -3.5342371463775635
    8. 'range' → logprob: -3.5342371463775635
    9. 'i' → logprob: -3.6592371463775635
    10. 'd' → logprob: -3.6592371463775635

Token 417: ' b' (ID: 287)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.9954347014427185
    2. '[i' → logprob: -1.8704347610473633
    3. 'de' → logprob: -2.2454347610473633
    4. '[' → logprob: -2.3704347610473633
    5. ' d' → logprob: -2.4954347610473633
    6. ' de' → logprob: -2.7454347610473633
    7. '   ' → logprob: -3.2454347610473633
    8. 'f' → logprob: -3.9954347610473633
    9. 'b' → logprob: -4.495434761047363
    10. '[j' → logprob: -4.745434761047363

Token 418: 'inaire' (ID: 41465)
  Prédit: 'inaire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inaire' → logprob: -0.005151454359292984
    2. 'in' → logprob: -5.505151271820068
    3. 'ina' → logprob: -7.755151271820068
    4. 'it' → logprob: -8.255151748657227
    5. 'inary' → logprob: -8.630151748657227
    6. 'inar' → logprob: -10.130151748657227
    7. '[' → logprob: -10.380151748657227
    8. '{' → logprob: -10.755151748657227
    9. '[i' → logprob: -11.505151748657227
    10. '`' → logprob: -11.505151748657227

Token 419: ' de' (ID: 334)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1514783799648285
    2. ' for' → logprob: -2.1514782905578613
    3. '   ' → logprob: -4.901478290557861
    4. 'f' → logprob: -5.151478290557861
    5. 'd' → logprob: -5.526478290557861
    6. 'de' → logprob: -6.401478290557861
    7. ' of' → logprob: -6.776478290557861
    8. ')' → logprob: -7.151478290557861
    9. 's' → logprob: -7.151478290557861
    10. ' de' → logprob: -7.651478290557861

Token 420: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.2956637144088745
    2. 'f' → logprob: -1.5456637144088745
    3. 'd' → logprob: -4.420663833618164
    4. 'i' → logprob: -4.545663833618164
    5. ' j' → logprob: -5.170663833618164
    6. 'bin' → logprob: -5.920663833618164
    7. ' f' → logprob: -6.420663833618164
    8. '#' → logprob: -6.670663833618164
    9. 'each' → logprob: -6.670663833618164
    10. 'l' → logprob: -7.045663833618164

Token 421: '.
' (ID: 558)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1900377720594406
    2. ' for' → logprob: -1.940037727355957
    3. ':' → logprob: -3.940037727355957
    4. '   ' → logprob: -5.315037727355957
    5. ':
' → logprob: -6.690037727355957
    6. '):' → logprob: -6.815037727355957
    7. ']' → logprob: -7.315037727355957
    8. ']:' → logprob: -7.690037727355957
    9. ',' → logprob: -8.065037727355957
    10. ')' → logprob: -8.190037727355957

Token 422: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.009994172491133213
    2. ' for' → logprob: -4.634994029998779
    3. '   ' → logprob: -8.759994506835938
    4. '0' → logprob: -10.509994506835938
    5. ')' → logprob: -10.884994506835938
    6. '```' → logprob: -11.134994506835938
    7. 'f' → logprob: -12.259994506835938
    8. '
' → logprob: -12.259994506835938
    9. ']' → logprob: -13.009994506835938
    10. '#' → logprob: -13.259994506835938

Token 423: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00013285996101330966
    2. ' for' → logprob: -9.00013256072998
    3. '   ' → logprob: -11.75013256072998
    4. '```' → logprob: -14.37513256072998
    5. '
' → logprob: -15.00013256072998
    6. 'i' → logprob: -15.62513256072998
    7. ']' → logprob: -15.62513256072998
    8. ')' → logprob: -15.75013256072998
    9. '0' → logprob: -16.750133514404297
    10. 'def' → logprob: -17.250133514404297

Token 424: ' it' (ID: 480)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.011120688170194626
    2. ' for' → logprob: -4.511120796203613
    3. '#' → logprob: -11.136120796203613
    4. 's' → logprob: -11.761120796203613
    5. '=' → logprob: -11.761120796203613
    6. ' =' → logprob: -11.886120796203613
    7. 'pour' → logprob: -12.011120796203613
    8. 'or' → logprob: -12.136120796203613
    9. 'def' → logprob: -12.636120796203613
    10. 'range' → logprob: -12.636120796203613

Token 425: 'ère' (ID: 4346)
  Prédit: 'ère'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ère' → logprob: -0.9125205278396606
    2. 'n' → logprob: -1.6625205278396606
    3. 're' → logprob: -2.037520408630371
    4. '#' → logprob: -2.537520408630371
    5. 'for' → logprob: -3.412520408630371
    6. 'er' → logprob: -3.787520408630371
    7. 'range' → logprob: -4.162520408630371
    8. 'nte' → logprob: -4.287520408630371
    9. 'r' → logprob: -4.412520408630371
    10. 'ner' → logprob: -4.787520408630371

Token 426: ' sur' (ID: 1512)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2172788828611374
    2. ' for' → logprob: -2.0922789573669434
    3. ' in' → logprob: -3.4672789573669434
    4. 'in' → logprob: -3.5922789573669434
    5. '   ' → logprob: -4.842278957366943
    6. 'i' → logprob: -6.217278957366943
    7. ' over' → logprob: -6.967278957366943
    8. ' i' → logprob: -6.967278957366943
    9. ')' → logprob: -7.092278957366943
    10. 'over' → logprob: -8.717278480529785

Token 427: ' chaque' (ID: 21194)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7655091881752014
    2. 'range' → logprob: -0.7655091881752014
    3. ' range' → logprob: -2.8905091285705566
    4. ' i' → logprob: -4.265509128570557
    5. 'd' → logprob: -10.265509605407715
    6. 'j' → logprob: -10.265509605407715
    7. '   ' → logprob: -10.765509605407715
    8. '```' → logprob: -10.890509605407715
    9. 'l' → logprob: -11.015509605407715
    10. 'D' → logprob: -11.765509605407715

Token 428: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.005975246429443359
    2. ' i' → logprob: -5.505975246429443
    3. 'j' → logprob: -6.380975246429443
    4. 'range' → logprob: -9.505975723266602
    5. ' range' → logprob: -9.755975723266602
    6. ' j' → logprob: -11.255975723266602
    7. '   ' → logprob: -11.505975723266602
    8. 'k' → logprob: -12.005975723266602
    9. 'for' → logprob: -12.130975723266602
    10. '```' → logprob: -12.255975723266602

Token 429: ' de' (ID: 334)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5078288316726685
    2. 'for' → logprob: -1.5078288316726685
    3. ' in' → logprob: -1.7578288316726685
    4. ' for' → logprob: -5.882828712463379
    5. ')' → logprob: -6.882828712463379
    6. 'range' → logprob: -7.882828712463379
    7. ' range' → logprob: -9.882828712463379
    8. '```' → logprob: -10.007828712463379
    9. '   ' → logprob: -10.632828712463379
    10. ',' → logprob: -10.882828712463379

Token 430: ' ' (ID: 220)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0004311460361350328
    2. ' range' → logprob: -7.750431060791016
    3. '```' → logprob: -15.500431060791016
    4. 'r' → logprob: -16.625431060791016
    5. '1' → logprob: -17.000431060791016
    6. '0' → logprob: -17.000431060791016
    7. '(range' → logprob: -17.000431060791016
    8. 're' → logprob: -17.250431060791016
    9. 'rang' → logprob: -17.250431060791016
    10. '	range' → logprob: -17.375431060791016

Token 431: '1' (ID: 16)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0004311460361350328
    2. ' range' → logprob: -7.750431060791016
    3. '```' → logprob: -15.875431060791016
    4. 'D' → logprob: -16.125431060791016
    5. '(range' → logprob: -16.625431060791016
    6. '	range' → logprob: -16.875431060791016
    7. '1' → logprob: -17.500431060791016
    8. '0' → logprob: -17.500431060791016
    9. '`' → logprob: -18.000431060791016
    10. 'd' → logprob: -18.125431060791016

Token 432: ' à' (ID: 1221)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2745727002620697
    2. 'in' → logprob: -2.2745726108551025
    3. ' in' → logprob: -2.2745726108551025
    4. 'range' → logprob: -4.274572849273682
    5. ',D' → logprob: -4.774572849273682
    6. 'to' → logprob: -5.274572849273682
    7. ' range' → logprob: -6.649572849273682
    8. '   ' → logprob: -6.774572849273682
    9. '
' → logprob: -6.774572849273682
    10. ' ,' → logprob: -7.524572849273682

Token 433: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.003186147892847657
    2. ' D' → logprob: -5.753186225891113
    3. ' range' → logprob: -12.503186225891113
    4. '1' → logprob: -12.628186225891113
    5. 'range' → logprob: -14.753186225891113
    6. '   ' → logprob: -15.128186225891113
    7. ' ' → logprob: -15.253186225891113
    8. '
' → logprob: -15.378186225891113
    9. '(D' → logprob: -15.753186225891113
    10. 'N' → logprob: -16.503185272216797

Token 434: '-' (ID: 12)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5572836399078369
    2. 'range' → logprob: -0.9322836399078369
    3. ':' → logprob: -3.682283639907837
    4. ':
' → logprob: -5.557283401489258
    5. '(range' → logprob: -6.057283401489258
    6. ' range' → logprob: -6.807283401489258
    7. '(' → logprob: -8.557283401489258
    8. '):
' → logprob: -8.682283401489258
    9. '1' → logprob: -8.932283401489258
    10. 'in' → logprob: -8.932283401489258

Token 435: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2538481056690216
    2. 'D' → logprob: -1.5038480758666992
    3. 'N' → logprob: -6.503848075866699
    4. '-' → logprob: -9.1288480758667
    5. ' ' → logprob: -9.2538480758667
    6. ' D' → logprob: -9.6288480758667
    7. '```' → logprob: -10.3788480758667
    8. '   ' → logprob: -10.6288480758667
    9. 'range' → logprob: -11.2538480758667
    10. 'd' → logprob: -11.3788480758667

Token 436: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -6.754368223482743e-05
    2. ' for' → logprob: -10.000067710876465
    3. 'range' → logprob: -10.875067710876465
    4. '```' → logprob: -13.250067710876465
    5. ':' → logprob: -14.500067710876465
    6. ':
' → logprob: -14.875067710876465
    7. '   ' → logprob: -15.500067710876465
    8. '
' → logprob: -15.625067710876465
    9. 'in' → logprob: -15.625067710876465
    10. '(range' → logprob: -16.75006675720215

Token 437: ' représentant' (ID: 136122)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04876040294766426
    2. ' for' → logprob: -3.048760414123535
    3. '   ' → logprob: -9.423760414123535
    4. 'range' → logprob: -9.798760414123535
    5. ' range' → logprob: -10.298760414123535
    6. ')' → logprob: -13.923760414123535
    7. '```' → logprob: -14.548760414123535
    8. 'i' → logprob: -14.923760414123535
    9. '
' → logprob: -15.048760414123535
    10. ' in' → logprob: -15.173760414123535

Token 438: ' la' (ID: 557)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.30088183283805847
    2. 'range' → logprob: -1.4258818626403809
    3. ' D' → logprob: -5.050881862640381
    4. 'D' → logprob: -5.300881862640381
    5. '   ' → logprob: -5.675881862640381
    6. ')' → logprob: -5.675881862640381
    7. '1' → logprob: -7.550881862640381
    8. 'i' → logprob: -9.175881385803223
    9. ' i' → logprob: -9.425881385803223
    10. ' ' → logprob: -9.550881385803223

Token 439: ' longueur' (ID: 104613)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.4780060946941376
    2. 'range' → logprob: -0.97800612449646
    3. '1' → logprob: -6.353005886077881
    4. 'i' → logprob: -6.478005886077881
    5. 'D' → logprob: -7.853005886077881
    6. 'for' → logprob: -9.728006362915039
    7. '0' → logprob: -9.978006362915039
    8. 'd' → logprob: -10.603006362915039
    9. ' D' → logprob: -10.728006362915039
    10. ' i' → logprob: -10.728006362915039

Token 440: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1404324769973755
    2. ')' → logprob: -1.6404324769973755
    3. '(D' → logprob: -2.140432357788086
    4. '(' → logprob: -2.390432357788086
    5. ':' → logprob: -2.515432357788086
    6. ' (' → logprob: -3.765432357788086
    7. 'for' → logprob: -3.765432357788086
    8. '):' → logprob: -3.890432357788086
    9. 's' → logprob: -4.140432357788086
    10. ' D' → logprob: -4.765432357788086

Token 441: ' sé' (ID: 7462)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.8021250367164612
    2. ' range' → logprob: -1.5521249771118164
    3. 'D' → logprob: -1.9271249771118164
    4. 'N' → logprob: -2.0521249771118164
    5. 'd' → logprob: -4.052124977111816
    6. 'i' → logprob: -4.427124977111816
    7. '1' → logprob: -4.552124977111816
    8. 'la' → logprob: -4.802124977111816
    9. ' la' → logprob: -5.177124977111816
    10. 'l' → logprob: -6.177124977111816

Token 442: 'quences' (ID: 16559)
  Prédit: 'quence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.006872137077152729
    2. 'quences' → logprob: -5.006872177124023
    3. 'q' → logprob: -9.631872177124023
    4. '#' → logprob: -10.381872177124023
    5. '1' → logprob: -10.506872177124023
    6. 'QUENCE' → logprob: -12.131872177124023
    7. '`' → logprob: -12.756872177124023
    8. '(' → logprob: -12.756872177124023
    9. 'range' → logprob: -12.756872177124023
    10. '```' → logprob: -12.756872177124023

Token 443: ' bin' (ID: 6958)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0702451765537262
    2. 'range' → logprob: -3.1952452659606934
    3. '):' → logprob: -4.445245265960693
    4. '):
' → logprob: -5.570245265960693
    5. 'in' → logprob: -6.070245265960693
    6. ' for' → logprob: -6.195245265960693
    7. ':
' → logprob: -6.695245265960693
    8. '(' → logprob: -6.695245265960693
    9. ':' → logprob: -6.695245265960693
    10. ' range' → logprob: -7.195245265960693

Token 444: 'aires' (ID: 8507)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0830668210983276
    2. 'range' → logprob: -1.4580668210983276
    3. '   ' → logprob: -2.333066940307617
    4. 'D' → logprob: -2.708066940307617
    5. 'd' → logprob: -2.833066940307617
    6. '=' → logprob: -3.583066940307617
    7. ' range' → logprob: -3.708066940307617
    8. '#' → logprob: -3.958066940307617
    9. '       ' → logprob: -4.083066940307617
    10. 'é' → logprob: -4.333066940307617

Token 445: ' considér' (ID: 68502)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0390721932053566
    2. ':' → logprob: -4.039072036743164
    3. 'range' → logprob: -4.789072036743164
    4. ':
' → logprob: -5.289072036743164
    5. ' for' → logprob: -5.414072036743164
    6. 'in' → logprob: -6.414072036743164
    7. '(range' → logprob: -7.539072036743164
    8. ' range' → logprob: -8.539072036743164
    9. '):' → logprob: -9.164072036743164
    10. '):
' → logprob: -9.289072036743164

Token 446: 'ées' (ID: 5161)
  Prédit: 'ue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ue' → logprob: -1.041229248046875
    2. 'e' → logprob: -1.666229248046875
    3. 'range' → logprob: -1.916229248046875
    4. 'é' → logprob: -2.041229248046875
    5. ' range' → logprob: -2.791229248046875
    6. 'ues' → logprob: -3.291229248046875
    7. 'ée' → logprob: -3.291229248046875
    8. 'u' → logprob: -3.916229248046875
    9. '(D' → logprob: -5.041229248046875
    10. 'D' → logprob: -5.291229248046875

Token 447: '.
' (ID: 558)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0020549774635583162
    2. ' for' → logprob: -6.7520551681518555
    3. ':
' → logprob: -7.6270551681518555
    4. ':' → logprob: -8.002055168151855
    5. '   ' → logprob: -10.252055168151855
    6. 'range' → logprob: -11.627055168151855
    7. 'in' → logprob: -11.752055168151855
    8. '):
' → logprob: -12.127055168151855
    9. '):' → logprob: -13.127055168151855
    10. ')' → logprob: -14.002055168151855

Token 448: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.014267404563724995
    2. ' for' → logprob: -4.264267444610596
    3. '   ' → logprob: -10.139266967773438
    4. 'range' → logprob: -10.264266967773438
    5. 'i' → logprob: -10.639266967773438
    6. ' range' → logprob: -12.764266967773438
    7. '```' → logprob: -13.889266967773438
    8. ')' → logprob: -14.139266967773438
    9. ':' → logprob: -15.389266967773438
    10. '	for' → logprob: -15.514266967773438

Token 449: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.06197631359100342
    2. ' i' → logprob: -2.811976432800293
    3. 'j' → logprob: -12.436976432800293
    4. '	i' → logprob: -14.061976432800293
    5. '_i' → logprob: -14.311976432800293
    6. ' j' → logprob: -14.436976432800293
    7. ' ' → logprob: -14.561976432800293
    8. 'I' → logprob: -14.999476432800293
    9. '`' → logprob: -15.061976432800293
    10. 'd' → logprob: -15.311976432800293

Token 450: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06204767897725105
    2. 'in' → logprob: -2.8120477199554443
    3. '1' → logprob: -10.937047958374023
    4. ' ' → logprob: -10.937047958374023
    5. ',' → logprob: -11.812047958374023
    6. '+' → logprob: -11.937047958374023
    7. 'In' → logprob: -12.562047958374023
    8. ')' → logprob: -13.187047958374023
    9. '   ' → logprob: -13.187047958374023
    10. 'import' → logprob: -13.187047958374023

Token 451: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.054906439036130905
    2. ' range' → logprob: -2.9299063682556152
    3. '1' → logprob: -10.804906845092773
    4. ' ' → logprob: -13.679906845092773
    5. '(range' → logprob: -14.304906845092773
    6. 'in' → logprob: -14.554906845092773
    7. '   ' → logprob: -14.679906845092773
    8. '```' → logprob: -14.804906845092773
    9. ' in' → logprob: -15.679906845092773
    10. '	range' → logprob: -15.929906845092773

Token 452: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0280383548888494e-06
    2. '(D' → logprob: -14.000000953674316
    3. '1' → logprob: -16.125001907348633
    4. 'D' → logprob: -18.875001907348633
    5. ' (' → logprob: -19.000001907348633
    6. '(
' → logprob: -20.000001907348633
    7. '
' → logprob: -22.000001907348633
    8. '   ' → logprob: -22.000001907348633
    9. ',' → logprob: -22.250001907348633
    10. '

' → logprob: -22.500001907348633

Token 453: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00038980069803074
    2. 'D' → logprob: -7.875389575958252
    3. ' ' → logprob: -12.25039005279541
    4. '2' → logprob: -13.25039005279541
    5. '(' → logprob: -13.50039005279541
    6. '   ' → logprob: -14.62539005279541
    7. '
' → logprob: -15.00039005279541
    8. 'N' → logprob: -15.50039005279541
    9. ' D' → logprob: -15.81289005279541
    10. '

' → logprob: -16.000389099121094

Token 454: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0035434053279459476
    2. ',D' → logprob: -5.878543376922607
    3. '(D' → logprob: -7.503543376922607
    4. ' ,' → logprob: -8.628543853759766
    5. 'D' → logprob: -12.378543853759766
    6. '   ' → logprob: -13.503543853759766
    7. ' D' → logprob: -13.628543853759766
    8. '
' → logprob: -14.878543853759766
    9. ',
' → logprob: -15.503543853759766
    10. ' ' → logprob: -15.503543853759766

Token 455: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -4.5491004129871726e-05
    2. ' D' → logprob: -10.000045776367188
    3. '   ' → logprob: -16.625045776367188
    4. ' ' → logprob: -18.125045776367188
    5. ')' → logprob: -18.500045776367188
    6. 'N' → logprob: -19.125045776367188
    7. '	D' → logprob: -19.125045776367188
    8. '(D' → logprob: -19.500045776367188
    9. 'len' → logprob: -19.625045776367188
    10. ',' → logprob: -20.000045776367188

Token 456: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5759761333465576
    2. '):
' → logprob: -0.8259761333465576
    3. '):
' → logprob: -10.325976371765137
    4. ':' → logprob: -12.700976371765137
    5. ':
' → logprob: -15.075976371765137
    6. ')' → logprob: -15.575976371765137
    7. '   ' → logprob: -15.825976371765137
    8. ' ):' → logprob: -16.07597541809082
    9. '):

' → logprob: -16.32597541809082
    10. ' ):
' → logprob: -17.32597541809082

Token 457: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21630463004112244
    2. 'for' → logprob: -1.7163046598434448
    3. ' for' → logprob: -4.216304779052734
    4. '	for' → logprob: -10.716304779052734
    5. ' ' → logprob: -12.841304779052734
    6. '```' → logprob: -13.591304779052734
    7. '   ' → logprob: -14.716304779052734
    8. '       ' → logprob: -15.091304779052734
    9. '    
' → logprob: -15.341304779052734
    10. 'j' → logprob: -15.716304779052734

Token 458: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00423771608620882
    2. '   ' → logprob: -5.504237651824951
    3. ' for' → logprob: -8.75423812866211
    4. ' ' → logprob: -13.62923812866211
    5. '	for' → logprob: -15.37923812866211
    6. '  ' → logprob: -17.12923812866211
    7. 'mask' → logprob: -18.25423812866211
    8. 'f' → logprob: -18.50423812866211
    9. 'j' → logprob: -18.62923812866211
    10. '
' → logprob: -19.12923812866211

Token 459: ' Pour' (ID: 13931)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0280383548888494e-06
    2. '   ' → logprob: -14.750000953674316
    3. ' for' → logprob: -14.750000953674316
    4. 'mask' → logprob: -16.875001907348633
    5. 'f' → logprob: -17.375001907348633
    6. '
' → logprob: -17.875001907348633
    7. ' ' → logprob: -18.500001907348633
    8. 'j' → logprob: -18.625001907348633
    9. 'fo' → logprob: -18.750001907348633
    10. 'bit' → logprob: -19.875001907348633

Token 460: ' chaque' (ID: 21194)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.004624749533832073
    2. ' j' → logprob: -5.379624843597412
    3. 'mask' → logprob: -14.004624366760254
    4. 'k' → logprob: -14.129624366760254
    5. '_j' → logprob: -14.879624366760254
    6. '```' → logprob: -15.004624366760254
    7. '   ' → logprob: -15.004624366760254
    8. 'x' → logprob: -15.254624366760254
    9. '	j' → logprob: -15.629624366760254
    10. ')' → logprob: -15.817124366760254

Token 461: ' nombre' (ID: 9733)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0013279760023579001
    2. ' j' → logprob: -6.626327991485596
    3. '   ' → logprob: -13.876327514648438
    4. '```' → logprob: -15.001327514648438
    5. '(' → logprob: -15.626327514648438
    6. '_j' → logprob: -15.876327514648438
    7. ' ' → logprob: -16.376327514648438
    8. 'k' → logprob: -16.501327514648438
    9. '	j' → logprob: -16.751327514648438
    10. ')' → logprob: -16.876327514648438

Token 462: ' j' (ID: 441)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4894751310348511
    2. 'j' → logprob: -1.114475131034851
    3. ' j' → logprob: -2.8644752502441406
    4. 'in' → logprob: -7.364475250244141
    5. ',' → logprob: -7.614475250244141
    6. ',j' → logprob: -7.989475250244141
    7. ')' → logprob: -8.48947525024414
    8. '   ' → logprob: -8.98947525024414
    9. '_j' → logprob: -10.98947525024414
    10. '[j' → logprob: -11.23947525024414

Token 463: ' possible' (ID: 4149)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04305799677968025
    2. 'in' → logprob: -3.168057918548584
    3. ')' → logprob: -10.543058395385742
    4. ',' → logprob: -10.918058395385742
    5. '   ' → logprob: -12.168058395385742
    6. 'for' → logprob: -13.168058395385742
    7. '(' → logprob: -13.918058395385742
    8. ' ' → logprob: -13.918058395385742
    9. 'n' → logprob: -14.293058395385742
    10. 'range' → logprob: -14.418058395385742

Token 464: ' avec' (ID: 3937)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.48041045665740967
    2. ' in' → logprob: -0.9804104566574097
    3. '(' → logprob: -5.605410575866699
    4. 'for' → logprob: -6.355410575866699
    5. '   ' → logprob: -7.980410575866699
    6. ')' → logprob: -8.2304105758667
    7. ',' → logprob: -8.8554105758667
    8. ' for' → logprob: -9.8554105758667
    9. ' (' → logprob: -9.9804105758667
    10. 'range' → logprob: -11.4804105758667

Token 465: ' i' (ID: 575)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1280362904071808
    2. '1' → logprob: -2.5030362606048584
    3. 'range' → logprob: -3.6280362606048584
    4. ' (' → logprob: -4.8780364990234375
    5. ' range' → logprob: -6.0030364990234375
    6. 'j' → logprob: -7.0030364990234375
    7. '0' → logprob: -8.253036499023438
    8. 'i' → logprob: -8.878036499023438
    9. ')' → logprob: -9.503036499023438
    10. '<<' → logprob: -9.628036499023438

Token 466: ' bits' (ID: 18189)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.33434420824050903
    2. 'bits' → logprob: -1.9593441486358643
    3. ' bits' → logprob: -2.5843441486358643
    4. '_bits' → logprob: -3.0843441486358643
    5. 'in' → logprob: -4.334344387054443
    6. ' en' → logprob: -6.334344387054443
    7. 'bit' → logprob: -6.584344387054443
    8. 'range' → logprob: -6.959344387054443
    9. ')' → logprob: -7.209344387054443
    10. ' bit' → logprob: -7.334344387054443

Token 467: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.33317986130714417
    2. '   ' → logprob: -1.7081798315048218
    3. ' in' → logprob: -2.9581799507141113
    4. 'for' → logprob: -3.7081799507141113
    5. ':
' → logprob: -4.958179950714111
    6. 'in' → logprob: -5.083179950714111
    7. ' for' → logprob: -5.333179950714111
    8. '(' → logprob: -5.458179950714111
    9. '):' → logprob: -6.708179950714111
    10. ',' → logprob: -7.583179950714111

Token 468: 'all' (ID: 586)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10531347244977951
    2. '<<' → logprob: -3.355313539505005
    3. '(' → logprob: -3.730313539505005
    4. 'range' → logprob: -4.355313301086426
    5. 'j' → logprob: -4.980313301086426
    6. ' ' → logprob: -5.230313301086426
    7. '   ' → logprob: -5.355313301086426
    8. ' range' → logprob: -5.730313301086426
    9. ')' → logprob: -5.855313301086426
    10. ' (' → logprob: -6.605313301086426

Token 469: 'ant' (ID: 493)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.0690014362335205
    2. ')' → logprob: -1.6940014362335205
    3. '<<' → logprob: -2.1940014362335205
    4. '=' → logprob: -2.9440014362335205
    5. '   ' → logprob: -3.0690014362335205
    6. '):' → logprob: -3.1940014362335205
    7. ' <<=' → logprob: -3.1940014362335205
    8. ' in' → logprob: -3.4440014362335205
    9. ' <<' → logprob: -3.8190014362335205
    10. ' ' → logprob: -4.319001197814941

Token 470: ' de' (ID: 334)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.04069569334387779
    2. ')' → logprob: -4.790695667266846
    3. 'de' → logprob: -4.790695667266846
    4. 'range' → logprob: -5.040695667266846
    5. 'j' → logprob: -5.290695667266846
    6. '(' → logprob: -5.790695667266846
    7. ' de' → logprob: -6.165695667266846
    8. 'à' → logprob: -6.290695667266846
    9. ' from' → logprob: -6.665695667266846
    10. 'jus' → logprob: -7.290695667266846

Token 471: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.129266067640856e-05
    2. '(' → logprob: -11.500020980834961
    3. ' ' → logprob: -12.125020980834961
    4. '1' → logprob: -12.250020980834961
    5. ')' → logprob: -14.250020980834961
    6. '2' → logprob: -15.875020980834961
    7. '```' → logprob: -16.62502098083496
    8. '   ' → logprob: -17.00002098083496
    9. '
' → logprob: -17.12502098083496
    10. ' (' → logprob: -18.00002098083496

Token 472: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000714935187716037
    2. '(' → logprob: -7.3757147789001465
    3. '1' → logprob: -9.375715255737305
    4. ')' → logprob: -13.250715255737305
    5. ' ' → logprob: -14.500715255737305
    6. '(i' → logprob: -15.000715255737305
    7. '```' → logprob: -15.500715255737305
    8. '
' → logprob: -15.625715255737305
    9. '2' → logprob: -15.750715255737305
    10. ' (' → logprob: -15.750715255737305

Token 473: ' à' (ID: 1221)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011460506357252598
    2. '<<' → logprob: -5.636460304260254
    3. ')' → logprob: -6.011460304260254
    4. '   ' → logprob: -6.136460304260254
    5. ' to' → logprob: -7.386460304260254
    6. ' ,' → logprob: -7.386460304260254
    7. '(' → logprob: -7.511460304260254
    8. 'to' → logprob: -8.261460304260254
    9. '),' → logprob: -8.636460304260254
    10. 'for' → logprob: -8.886460304260254

Token 474: ' ' (ID: 220)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00035608073812909424
    2. ' (' → logprob: -8.25035572052002
    3. '1' → logprob: -9.37535572052002
    4. '   ' → logprob: -11.87535572052002
    5. '(i' → logprob: -13.37535572052002
    6. ' ' → logprob: -14.25035572052002
    7. '```' → logprob: -14.62535572052002
    8. ')' → logprob: -15.62535572052002
    9. '
' → logprob: -15.87535572052002
    10. '((' → logprob: -16.625356674194336

Token 475: '2' (ID: 17)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -3.9292415749514475e-05
    2. '1' → logprob: -10.875039100646973
    3. ' (' → logprob: -10.875039100646973
    4. '   ' → logprob: -14.125039100646973
    5. '```' → logprob: -14.750039100646973
    6. '(i' → logprob: -15.750039100646973
    7. ')' → logprob: -16.12504005432129
    8. ' ' → logprob: -16.25004005432129
    9. '
' → logprob: -17.50004005432129
    10. ',' → logprob: -17.50004005432129

Token 476: '^' (ID: 61)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1021474227309227
    2. '**' → logprob: -2.477147340774536
    3. ' i' → logprob: -5.352147579193115
    4. '(i' → logprob: -5.602147579193115
    5. ')i' → logprob: -6.727147579193115
    6. '[i' → logprob: -6.977147579193115
    7. ')' → logprob: -7.102147579193115
    8. '*i' → logprob: -7.352147579193115
    9. '   ' → logprob: -8.352147102355957
    10. ',i' → logprob: -8.477147102355957

Token 477: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0001975802006199956
    2. '(' → logprob: -9.375197410583496
    3. '(i' → logprob: -9.750197410583496
    4. 'N' → logprob: -10.625197410583496
    5. ' i' → logprob: -10.750197410583496
    6. ' (' → logprob: -12.125197410583496
    7. '(N' → logprob: -13.250197410583496
    8. 'j' → logprob: -14.750197410583496
    9. '```' → logprob: -14.750197410583496
    10. ')i' → logprob: -15.375197410583496

Token 478: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.526935875415802
    2. ' -' → logprob: -1.1519358158111572
    3. ')' → logprob: -2.9019358158111572
    4. '):' → logprob: -3.9019358158111572
    5. ')-' → logprob: -4.526936054229736
    6. 'i' → logprob: -6.401936054229736
    7. ' ' → logprob: -6.526936054229736
    8. '):
' → logprob: -6.526936054229736
    9. '   ' → logprob: -6.651936054229736
    10. '-i' → logprob: -6.776936054229736

Token 479: ' ' (ID: 220)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.006283067632466555
    2. '(i' → logprob: -5.756283283233643
    3. ' i' → logprob: -6.631283283233643
    4. '(' → logprob: -6.756283283233643
    5. ' (' → logprob: -8.006282806396484
    6. ')' → logprob: -8.506282806396484
    7. '   ' → logprob: -10.381282806396484
    8. '1' → logprob: -10.631282806396484
    9. ')i' → logprob: -11.256282806396484
    10. '
' → logprob: -12.381282806396484

Token 480: '1' (ID: 16)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0005594660760834813
    2. '(i' → logprob: -7.750559329986572
    3. ' i' → logprob: -9.62555980682373
    4. '(' → logprob: -10.37555980682373
    5. '   ' → logprob: -11.25055980682373
    6. ' (' → logprob: -11.37555980682373
    7. '
' → logprob: -13.25055980682373
    8. '1' → logprob: -13.37555980682373
    9. '```' → logprob: -13.62555980682373
    10. ')' → logprob: -14.12555980682373

Token 481: ')
' (ID: 446)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.12818488478660583
    2. '   ' → logprob: -3.0031847953796387
    3. '):
' → logprob: -3.2531847953796387
    4. ':' → logprob: -3.6281847953796387
    5. 'for' → logprob: -6.378184795379639
    6. '(' → logprob: -7.128184795379639
    7. '       ' → logprob: -7.253184795379639
    8. '<<' → logprob: -7.378184795379639
    9. ')' → logprob: -7.628184795379639
    10. ',' → logprob: -7.878184795379639

Token 482: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.32639065384864807
    2. ' for' → logprob: -1.4513906240463257
    3. '   ' → logprob: -3.3263907432556152
    4. ':' → logprob: -5.451390743255615
    5. 'in' → logprob: -6.076390743255615
    6. ' in' → logprob: -6.576390743255615
    7. 'range' → logprob: -9.451390266418457
    8. ':
' → logprob: -9.701390266418457
    9. ')' → logprob: -10.201390266418457
    10. ' range' → logprob: -10.576390266418457

Token 483: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.03234444558620453
    2. ' for' → logprob: -3.532344341278076
    3. '   ' → logprob: -6.157344341278076
    4. 'range' → logprob: -8.032344818115234
    5. ' range' → logprob: -9.532344818115234
    6. 'j' → logprob: -9.782344818115234
    7. ' ' → logprob: -12.157344818115234
    8. '(' → logprob: -12.157344818115234
    9. ' j' → logprob: -12.407344818115234
    10. '1' → logprob: -13.282344818115234

Token 484: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.018151111900806427
    2. ' j' → logprob: -4.01815128326416
    3. 'i' → logprob: -14.14315128326416
    4. '	j' → logprob: -15.14315128326416
    5. '   ' → logprob: -15.76815128326416
    6. ' ' → logprob: -16.268150329589844
    7. '```' → logprob: -17.018150329589844
    8. '`' → logprob: -18.143150329589844
    9. ' ' → logprob: -18.268150329589844
    10. ' i' → logprob: -18.268150329589844

Token 485: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11285275965929031
    2. 'in' → logprob: -2.2378528118133545
    3. 'range' → logprob: -10.487853050231934
    4. ' ' → logprob: -14.362853050231934
    5. '   ' → logprob: -14.987853050231934
    6. 'import' → logprob: -14.987853050231934
    7. ')' → logprob: -15.112853050231934
    8. 'd' → logprob: -15.487853050231934
    9. ' range' → logprob: -15.737853050231934
    10. ',' → logprob: -15.737853050231934

Token 486: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.004090035799890757
    2. ' range' → logprob: -5.504089832305908
    3. '(' → logprob: -12.004090309143066
    4. '(range' → logprob: -12.129090309143066
    5. '	range' → logprob: -17.37908935546875
    6. '   ' → logprob: -18.12908935546875
    7. ' ' → logprob: -18.37908935546875
    8. ')' → logprob: -18.37908935546875
    9. '0' → logprob: -19.37908935546875
    10. 'ran' → logprob: -19.62908935546875

Token 487: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014187720604240894
    2. '1' → logprob: -4.264187812805176
    3. '   ' → logprob: -10.889187812805176
    4. ' (' → logprob: -12.889187812805176
    5. '((' → logprob: -13.139187812805176
    6. ' ' → logprob: -14.014187812805176
    7. '(i' → logprob: -16.38918685913086
    8. '0' → logprob: -17.26418685913086
    9. '```' → logprob: -17.26418685913086
    10. '[' → logprob: -17.88918685913086

Token 488: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.018168672919273376
    2. '(' → logprob: -4.0181684494018555
    3. '   ' → logprob: -11.643168449401855
    4. ' ' → logprob: -11.893168449401855
    5. ' (' → logprob: -13.018168449401855
    6. '0' → logprob: -14.768168449401855
    7. '```' → logprob: -16.018169403076172
    8. ')' → logprob: -16.518169403076172
    9. '(i' → logprob: -16.643169403076172
    10. '[' → logprob: -16.643169403076172

Token 489: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.3171379566192627
    2. ' <<' → logprob: -1.6921379566192627
    3. ',' → logprob: -2.4421379566192627
    4. '(' → logprob: -8.317137718200684
    5. '1' → logprob: -8.692137718200684
    6. '   ' → logprob: -9.442137718200684
    7. '<<(' → logprob: -9.567137718200684
    8. ' ,' → logprob: -10.067137718200684
    9. ' ' → logprob: -10.442137718200684
    10. ' (' → logprob: -10.942137718200684

Token 490: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00011689399980241433
    2. '(i' → logprob: -9.250117301940918
    3. ' i' → logprob: -11.125117301940918
    4. '(' → logprob: -12.500117301940918
    5. '   ' → logprob: -13.750117301940918
    6. ' (' → logprob: -14.000117301940918
    7. '(N' → logprob: -16.0001163482666
    8. 'N' → logprob: -16.1251163482666
    9. ' ' → logprob: -16.5001163482666
    10. '```' → logprob: -16.6251163482666

Token 491: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3869342505931854
    2. '):
' → logprob: -1.1369342803955078
    3. '):
' → logprob: -10.136934280395508
    4. '   ' → logprob: -11.386934280395508
    5. ' ):' → logprob: -12.386934280395508
    6. '):

' → logprob: -13.136934280395508
    7. ':' → logprob: -13.386934280395508
    8. ' ):
' → logprob: -13.636934280395508
    9. ')' → logprob: -13.761934280395508
    10. '():
' → logprob: -14.386934280395508

Token 492: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0032074193004518747
    2. 'if' → logprob: -6.378207206726074
    3. ' if' → logprob: -7.503207206726074
    4. ':' → logprob: -8.003207206726074
    5. '#' → logprob: -8.628207206726074
    6. 'f' → logprob: -9.253207206726074
    7. '   ' → logprob: -9.378207206726074
    8. ',' → logprob: -10.003207206726074
    9. ' f' → logprob: -10.378207206726074
    10. 'for' → logprob: -10.628207206726074

Token 493: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.08699901401996613
    2. '       ' → logprob: -3.46199893951416
    3. 'f' → logprob: -4.08699893951416
    4. 'bit' → logprob: -4.33699893951416
    5. 'b' → logprob: -5.21199893951416
    6. '#' (adapté à ' #') → logprob: -5.21199893951416
    7. 'mask' → logprob: -5.46199893951416
    8. 'prefix' → logprob: -6.08699893951416
    9. 'prev' → logprob: -6.83699893951416
    10. 'bits' → logprob: -7.33699893951416

Token 494: ' t' (ID: 260)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.11876702308654785
    2. 'bit' → logprob: -3.118767023086548
    3. 'b' → logprob: -3.993767023086548
    4. 'prefix' → logprob: -4.368766784667969
    5. '       ' → logprob: -4.618766784667969
    6. 'f' → logprob: -4.868766784667969
    7. '#' → logprob: -5.618766784667969
    8. 'val' → logprob: -5.618766784667969
    9. 'bin' → logprob: -6.368766784667969
    10. 'prev' → logprob: -6.368766784667969

Token 495: ' récup' (ID: 62856)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1493755429983139
    2. '=' → logprob: -2.0243754386901855
    3. 'f' → logprob: -5.2743754386901855
    4. 'emp' → logprob: -7.0243754386901855
    5. 'mp' → logprob: -8.649375915527344
    6. 'if' → logprob: -9.274375915527344
    7. '=f' → logprob: -9.399375915527344
    8. ',' → logprob: -10.274375915527344
    9. ' if' → logprob: -10.399375915527344
    10. ' ' → logprob: -10.524375915527344

Token 496: 'ère' (ID: 4346)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03479906544089317
    2. ' =' → logprob: -3.409799098968506
    3. 'er' → logprob: -7.534799098968506
    4. '   ' → logprob: -8.659798622131348
    5. '       ' → logprob: -9.784798622131348
    6. '=j' → logprob: -9.909798622131348
    7. '=
' → logprob: -10.284798622131348
    8. 'ère' → logprob: -10.784798622131348
    9. 'érer' → logprob: -10.784798622131348
    10. 't' → logprob: -11.034798622131348

Token 497: ' la' (ID: 557)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.21122315526008606
    2. 'd' → logprob: -2.8362231254577637
    3. 'i' → logprob: -3.2112231254577637
    4. 'j' → logprob: -3.3362231254577637
    5. '(i' → logprob: -4.086223125457764
    6. 't' → logprob: -4.836223125457764
    7. '(f' → logprob: -4.836223125457764
    8. '0' → logprob: -5.086223125457764
    9. '       ' → logprob: -5.586223125457764
    10. ' f' → logprob: -5.586223125457764

Token 498: ' valeur' (ID: 41664)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.014843180775642395
    2. 'i' → logprob: -5.139842987060547
    3. 'd' → logprob: -6.139842987060547
    4. '0' → logprob: -6.264842987060547
    5. ' f' → logprob: -6.889842987060547
    6. 'j' → logprob: -7.014842987060547
    7. '(i' → logprob: -7.764842987060547
    8. 'int' → logprob: -7.889842987060547
    9. 'bin' → logprob: -8.264842987060547
    10. '(f' → logprob: -8.389842987060547

Token 499: ' du' (ID: 1462)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03460711985826492
    2. ' =' → logprob: -3.409607172012329
    3. '       ' → logprob: -7.65960693359375
    4. 'f' → logprob: -7.90960693359375
    5. '           ' → logprob: -9.53460693359375
    6. '   ' → logprob: -11.15960693359375
    7. '=f' → logprob: -11.40960693359375
    8. 'if' → logprob: -12.28460693359375
    9. 'd' → logprob: -12.53460693359375
    10. 't' → logprob: -12.78460693359375

Token 500: ' bit' (ID: 3546)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.01237179059535265
    2. 'd' → logprob: -5.262372016906738
    3. 'j' → logprob: -6.137372016906738
    4. ' f' → logprob: -6.262372016906738
    5. 'i' → logprob: -7.137372016906738
    6. 'b' → logprob: -8.012372016906738
    7. 'bit' → logprob: -8.012372016906738
    8. '   ' → logprob: -8.387372016906738
    9. 'nombre' → logprob: -8.512372016906738
    10. ' précédent' → logprob: -8.887372016906738

Token 501: ' le' (ID: 505)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6623181700706482
    2. ' =' → logprob: -1.162318229675293
    3. '       ' → logprob: -2.662318229675293
    4. 't' → logprob: -3.037318229675293
    5. '(' → logprob: -4.662318229675293
    6. ' (' → logprob: -4.912318229675293
    7. ' t' → logprob: -5.537318229675293
    8. 'j' → logprob: -5.787318229675293
    9. '           ' → logprob: -6.037318229675293
    10. 'f' → logprob: -6.037318229675293

Token 502: ' plus' (ID: 2932)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.9862121939659119
    2. '(i' → logprob: -1.1112122535705566
    3. ' plus' → logprob: -1.6112122535705566
    4. 'i' → logprob: -3.1112122535705566
    5. 'moins' → logprob: -3.9862122535705566
    6. ' (' → logprob: -4.736212253570557
    7. '(' → logprob: -5.361212253570557
    8. '(j' → logprob: -5.736212253570557
    9. '_plus' → logprob: -6.111212253570557
    10. ' i' → logprob: -6.111212253570557

Token 503: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.09016771614551544
    2. 'sign' → logprob: -2.715167760848999
    3. ' à' → logprob: -4.34016752243042
    4. 'i' → logprob: -5.59016752243042
    5. '```' → logprob: -7.21516752243042
    6. 'd' → logprob: -7.84016752243042
    7. ' ' → logprob: -8.090167999267578
    8. 'ancien' → logprob: -8.340167999267578
    9. ' signific' → logprob: -8.715167999267578
    10. ' significant' → logprob: -9.090167999267578

Token 504: ' gauche' (ID: 58367)
  Prédit: 'dro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dro' → logprob: -0.3760871887207031
    2. 'sign' → logprob: -2.001087188720703
    3. ' droite' → logprob: -2.876087188720703
    4. 'i' → logprob: -3.001087188720703
    5. 'g' → logprob: -4.001087188720703
    6. 'd' → logprob: -4.126087188720703
    7. '```' → logprob: -4.376087188720703
    8. 'moins' → logprob: -5.501087188720703
    9. ' gauche' → logprob: -5.626087188720703
    10. ' ' → logprob: -6.126087188720703

Token 505: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5256503820419312
    2. '=' → logprob: -0.9006503820419312
    3. '       ' → logprob: -6.275650501251221
    4. 't' → logprob: -9.150650024414062
    5. ' (' → logprob: -9.150650024414062
    6. '>>' → logprob: -9.275650024414062
    7. '(' → logprob: -9.400650024414062
    8. '=(' → logprob: -10.275650024414062
    9. '   ' → logprob: -10.525650024414062
    10. ' ' → logprob: -10.525650024414062

Token 506: 'bit' (ID: 6516)
  Prédit: '(j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.4525451362133026
    2. 'j' → logprob: -1.077545166015625
    3. ' (' → logprob: -4.077545166015625
    4. '(' → logprob: -5.577545166015625
    5. ')' → logprob: -7.202545166015625
    6. '(f' → logprob: -7.327545166015625
    7. ' j' → logprob: -7.327545166015625
    8. 'f' → logprob: -8.577545166015625
    9. '       ' → logprob: -8.577545166015625
    10. '(d' → logprob: -8.952545166015625

Token 507: ' de' (ID: 334)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -1.2498362064361572
    2. ' (' → logprob: -1.3748362064361572
    3. 'i' → logprob: -2.4998362064361572
    4. '=' → logprob: -2.6248362064361572
    5. ' =' → logprob: -2.6248362064361572
    6. ' i' → logprob: -2.7498362064361572
    7. '=i' → logprob: -3.1248362064361572
    8. '(' → logprob: -3.4998362064361572
    9. '       ' → logprob: -4.124835968017578
    10. 'j' → logprob: -4.374835968017578

Token 508: ' poids' (ID: 56058)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.017513614147901535
    2. 'i' → logprob: -4.642513751983643
    3. ' (' → logprob: -5.392513751983643
    4. '(' → logprob: -6.767513751983643
    5. '(j' → logprob: -6.892513751983643
    6. 'j' → logprob: -7.642513751983643
    7. ' i' → logprob: -7.892513751983643
    8. '1' → logprob: -9.142513275146484
    9. ' ' → logprob: -11.017513275146484
    10. ' j' → logprob: -11.517513275146484

Token 509: ' fort' (ID: 8024)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.9134087562561035
    2. 'i' → logprob: -1.0384087562561035
    3. ' i' → logprob: -1.7884087562561035
    4. ' ' → logprob: -3.2884087562561035
    5. '(i' → logprob: -3.9134087562561035
    6. ' (' → logprob: -4.7884087562561035
    7. '   ' → logprob: -5.6634087562561035
    8. 'j' → logprob: -6.9134087562561035
    9. '       ' → logprob: -7.0384087562561035
    10. '        ' → logprob: -7.0384087562561035

Token 510: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6790895462036133
    2. ' =' → logprob: -1.5540895462036133
    3. '=' → logprob: -2.5540895462036133
    4. ' (' → logprob: -2.8040895462036133
    5. '       ' → logprob: -3.4290895462036133
    6. '>>' → logprob: -3.5540895462036133
    7. '(' → logprob: -3.6790895462036133
    8. ',' → logprob: -3.9290895462036133
    9. ' >>' → logprob: -5.054089546203613
    10. '((' → logprob: -5.179089546203613

Token 511: ' de' (ID: 334)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.28334659337997437
    2. ' =' → logprob: -1.4083466529846191
    3. '       ' → logprob: -6.158346652984619
    4. 't' → logprob: -10.158346176147461
    5. '   ' → logprob: -11.283346176147461
    6. '           ' → logprob: -12.033346176147461
    7. '=(' → logprob: -12.408346176147461
    8. ',' → logprob: -12.908346176147461
    9. '        ' → logprob: -13.158346176147461
    10. ' ' → logprob: -13.283346176147461

Token 512: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.005498887505382299
    2. ' j' → logprob: -5.880498886108398
    3. '(j' → logprob: -6.630498886108398
    4. 'i' → logprob: -7.380498886108398
    5. ' (' → logprob: -8.380498886108398
    6. '(i' → logprob: -8.755498886108398
    7. '       ' → logprob: -9.130498886108398
    8. '   ' → logprob: -9.130498886108398
    9. '(' → logprob: -9.755498886108398
    10. '```' → logprob: -10.755498886108398

Token 513: '.
' (ID: 558)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3872595727443695
    2. '=' → logprob: -1.137259602546692
    3. '       ' → logprob: -8.012259483337402
    4. '   ' → logprob: -11.012259483337402
    5. ' ' → logprob: -11.637259483337402
    6. '=(' → logprob: -11.762259483337402
    7. 't' → logprob: -12.012259483337402
    8. '>>' → logprob: -12.387259483337402
    9. ',' → logprob: -13.012259483337402
    10. '(' → logprob: -13.762259483337402

Token 514: '       ' (ID: 309)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04469642788171768
    2. '=' → logprob: -3.54469633102417
    3. 't' → logprob: -4.91969633102417
    4. ' t' → logprob: -5.66969633102417
    5. '       ' → logprob: -5.91969633102417
    6. ' ' → logprob: -7.41969633102417
    7. '   ' → logprob: -8.419696807861328
    8. ' (' → logprob: -9.044696807861328
    9. '=t' → logprob: -9.544696807861328
    10. ' <<=' → logprob: -9.919696807861328

Token 515: ' #' (ID: 1069)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.010832510888576508
    2. '       ' → logprob: -5.1358323097229
    3. ' t' → logprob: -5.8858323097229
    4. '(t' → logprob: -6.6358323097229
    5. ' (' → logprob: -7.6358323097229
    6. '(' → logprob: -8.760832786560059
    7. ' =' → logprob: -9.760832786560059
    8. '=' → logprob: -10.010832786560059
    9. '           ' → logprob: -10.385832786560059
    10. '((' → logprob: -11.885832786560059

Token 516: ' On' (ID: 2160)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.007213291712105274
    2. '(t' → logprob: -5.382213115692139
    3. ' t' → logprob: -6.382213115692139
    4. ' (' → logprob: -7.632213115692139
    5. '       ' → logprob: -8.007213592529297
    6. '((' → logprob: -9.882213592529297
    7. '(' → logprob: -11.132213592529297
    8. '   ' → logprob: -12.382213592529297
    9. '(j' → logprob: -12.882213592529297
    10. '           ' → logprob: -13.257213592529297

Token 517: ' déc' (ID: 8498)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5004109740257263
    2. 't' → logprob: -1.000411033630371
    3. ' =' → logprob: -4.000411033630371
    4. ' t' → logprob: -6.375411033630371
    5. 'f' → logprob: -7.250411033630371
    6. 'j' → logprob: -7.375411033630371
    7. 's' → logprob: -7.750411033630371
    8. 'continue' → logprob: -7.875411033630371
    9. 'next' → logprob: -7.875411033630371
    10. '>>' → logprob: -7.875411033630371

Token 518: 'ale' (ID: 1167)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -1.0302624702453613
    2. '>>' → logprob: -2.0302624702453613
    3. '(j' → logprob: -2.5302624702453613
    4. '((' → logprob: -2.9052624702453613
    5. 'ode' → logprob: -3.0302624702453613
    6. '=' → logprob: -3.0302624702453613
    7. 'e' → logprob: -3.1552624702453613
    8. 'shift' → logprob: -3.4052624702453613
    9. '=(' → logprob: -3.4052624702453613
    10. 'r' → logprob: -3.5302624702453613

Token 519: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0049169547855854034
    2. ' j' → logprob: -5.754917144775391
    3. '(j' → logprob: -6.504917144775391
    4. ' (' → logprob: -8.75491714477539
    5. 't' → logprob: -10.37991714477539
    6. '(' → logprob: -10.62991714477539
    7. '   ' → logprob: -11.87991714477539
    8. '1' → logprob: -12.37991714477539
    9. '```' → logprob: -12.75491714477539
    10. '	j' → logprob: -12.75491714477539

Token 520: ' vers' (ID: 3640)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.33032867312431335
    2. '>>' → logprob: -1.8303287029266357
    3. ' =' → logprob: -3.3303287029266357
    4. '>>(' → logprob: -3.3303287029266357
    5. '(i' → logprob: -3.7053287029266357
    6. '=i' → logprob: -4.955328464508057
    7. '(' → logprob: -5.330328464508057
    8. ' >>' → logprob: -5.705328464508057
    9. ')' → logprob: -6.080328464508057
    10. 'j' → logprob: -6.330328464508057

Token 521: ' la' (ID: 557)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.22695326805114746
    2. '(i' → logprob: -1.6019532680511475
    3. '1' → logprob: -7.351953506469727
    4. ' i' → logprob: -7.601953506469727
    5. 'j' → logprob: -8.476953506469727
    6. ' (' → logprob: -10.101953506469727
    7. '(' → logprob: -10.101953506469727
    8. '{i' → logprob: -10.351953506469727
    9. '   ' → logprob: -10.851953506469727
    10. ',i' → logprob: -11.351953506469727

Token 522: ' droite' (ID: 61428)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.5833085179328918
    2. 'i' → logprob: -0.8333085179328918
    3. '1' → logprob: -5.583308696746826
    4. ' (' → logprob: -6.333308696746826
    5. ' i' → logprob: -7.333308696746826
    6. '(' → logprob: -7.583308696746826
    7. '>>(' → logprob: -8.458308219909668
    8. 'right' → logprob: -8.708308219909668
    9. '
' → logprob: -10.333308219909668
    10. ' ' → logprob: -10.458308219909668

Token 523: ' de' (ID: 334)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.20034174621105194
    2. '(' → logprob: -1.9503417015075684
    3. ' (' → logprob: -4.825341701507568
    4. '>>' → logprob: -4.950341701507568
    5. '1' → logprob: -5.075341701507568
    6. ',' → logprob: -5.450341701507568
    7. 'i' → logprob: -5.575341701507568
    8. '       ' → logprob: -6.075341701507568
    9. ')' → logprob: -6.325341701507568
    10. '=' → logprob: -6.450341701507568

Token 524: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.023585287854075432
    2. '(i' → logprob: -3.773585319519043
    3. '{i' → logprob: -8.023585319519043
    4. ' i' → logprob: -11.773585319519043
    5. '[i' → logprob: -13.648585319519043
    6. ' (' → logprob: -13.773585319519043
    7. '           ' → logprob: -14.273585319519043
    8. '
' → logprob: -15.023585319519043
    9. '(' → logprob: -15.023585319519043
    10. '       ' → logprob: -15.398585319519043

Token 525: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.008002758026123047
    2. ' -' → logprob: -4.883002758026123
    3. '1' → logprob: -8.008003234863281
    4. ' ' → logprob: -10.008003234863281
    5. ')' → logprob: -12.508003234863281
    6. 's' → logprob: -12.758003234863281
    7. '```' → logprob: -13.133003234863281
    8. '   ' → logprob: -13.383003234863281
    9. '`' → logprob: -13.508003234863281
    10. 'i' → logprob: -13.633003234863281

Token 526: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.061054359131958e-06
    2. ' ' → logprob: -11.875007629394531
    3. '```' → logprob: -14.375007629394531
    4. '-' → logprob: -14.875007629394531
    5. '   ' → logprob: -16.50000762939453
    6. '...' → logprob: -18.12500762939453
    7. '`' → logprob: -18.62500762939453
    8. '
' → logprob: -19.00000762939453
    9. '2' → logprob: -19.00000762939453
    10. '(' → logprob: -19.81250762939453

Token 527: ' positions' (ID: 15897)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0031812789384275675
    2. ' )' → logprob: -7.253181457519531
    3. '   ' → logprob: -7.628181457519531
    4. ')>>' → logprob: -7.628181457519531
    5. '1' → logprob: -7.878181457519531
    6. ' ' → logprob: -8.628181457519531
    7. ')
' → logprob: -8.753181457519531
    8. '```' → logprob: -9.003181457519531
    9. '       ' → logprob: -9.253181457519531
    10. ',' → logprob: -9.503181457519531

Token 528: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.056877851486206
    2. '       ' → logprob: -1.431877851486206
    3. ')' → logprob: -1.556877851486206
    4. ' =' → logprob: -2.306877851486206
    5. '>>' → logprob: -2.931877851486206
    6. 't' → logprob: -4.056878089904785
    7. ' >>' → logprob: -5.056878089904785
    8. ',' → logprob: -5.056878089904785
    9. '   ' → logprob: -5.181878089904785
    10. '>>>' → logprob: -5.806878089904785

Token 529: ' puis' (ID: 18766)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8285594582557678
    2. '>>' → logprob: -1.578559398651123
    3. 't' → logprob: -1.953559398651123
    4. ' &' → logprob: -2.953559398651123
    5. '>>>' → logprob: -3.203559398651123
    6. '1' → logprob: -3.328559398651123
    7. '&' → logprob: -3.578559398651123
    8. ' >>' → logprob: -4.828559398651123
    9. ' ' → logprob: -5.078559398651123
    10. '       ' → logprob: -5.203559398651123

Token 530: ' on' (ID: 402)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '&' → logprob: -0.01490298006683588
    2. ' &' → logprob: -4.3899030685424805
    3. ')&' → logprob: -7.2649030685424805
    4. ')' → logprob: -7.5149030685424805
    5. '&t' → logprob: -7.5149030685424805
    6. '&amp' → logprob: -7.6399030685424805
    7. '&nbsp' → logprob: -10.26490306854248
    8. '&r' → logprob: -10.51490306854248
    9. '"&' → logprob: -11.88990306854248
    10. '&p' → logprob: -12.26490306854248

Token 531: ' effect' (ID: 3159)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '&' → logprob: -0.036849670112133026
    2. ' &' → logprob: -3.4118497371673584
    3. '&amp' → logprob: -6.286849498748779
    4. '&r' → logprob: -8.036849975585938
    5. '&t' → logprob: -8.411849975585938
    6. ')' → logprob: -8.661849975585938
    7. ')&' → logprob: -8.786849975585938
    8. '&p' → logprob: -9.286849975585938
    9. 'and' → logprob: -9.411849975585938
    10. '&
' → logprob: -10.161849975585938

Token 532: 'ue' (ID: 466)
  Prédit: 'ue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.009980365633964539
    2. 'u' → logprob: -5.884980201721191
    3. 'uate' → logprob: -5.884980201721191
    4. 'ure' → logprob: -6.634980201721191
    5. 'uez' → logprob: -7.009980201721191
    6. 'e' → logprob: -7.884980201721191
    7. 'ues' → logprob: -8.134980201721191
    8. '>>' → logprob: -8.634980201721191
    9. 'ute' → logprob: -8.759980201721191
    10. 'uer' → logprob: -9.259980201721191

Token 533: ' un' (ID: 537)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '&' → logprob: -0.19536268711090088
    2. ' &' → logprob: -1.8203626871109009
    3. ')' → logprob: -6.070362567901611
    4. '(j' → logprob: -6.195362567901611
    5. 'j' → logprob: -6.320362567901611
    6. ' j' → logprob: -6.320362567901611
    7. ' (' → logprob: -6.445362567901611
    8. '&t' → logprob: -6.695362567901611
    9. '(' → logprob: -7.070362567901611
    10. '&nbsp' → logprob: -7.445362567901611

Token 534: ' ET' (ID: 23345)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '&' → logprob: -0.002899497514590621
    2. '&amp' → logprob: -6.127899646759033
    3. 'and' → logprob: -8.252899169921875
    4. ' &' → logprob: -8.377899169921875
    5. '&
' → logprob: -10.002899169921875
    6. '&r' → logprob: -10.252899169921875
    7. '&gt' → logprob: -10.377899169921875
    8. '>&' → logprob: -10.627899169921875
    9. 'AND' → logprob: -10.752899169921875
    10. '&t' → logprob: -11.002899169921875

Token 535: ' b' (ID: 287)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '&' → logprob: -0.04300752282142639
    2. '1' → logprob: -4.0430073738098145
    3. ' &' → logprob: -4.1680073738098145
    4. '(' → logprob: -5.2930073738098145
    5. '(&' → logprob: -6.9180073738098145
    6. '&
' → logprob: -7.0430073738098145
    7. ' ' → logprob: -7.4180073738098145
    8. '&t' → logprob: -7.6680073738098145
    9. ' (' → logprob: -8.168007850646973
    10. '('&' → logprob: -9.043007850646973

Token 536: 'inaire' (ID: 41465)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '&' → logprob: -0.062193091958761215
    2. '&
' → logprob: -3.3121931552886963
    3. '1' → logprob: -4.062192916870117
    4. 'it' → logprob: -5.437192916870117
    5. ' &' → logprob: -6.437192916870117
    6. '(' → logprob: -8.812192916870117
    7. ' &
' → logprob: -9.062192916870117
    8. '(j' → logprob: -9.437192916870117
    9. '&amp' → logprob: -9.812192916870117
    10. ')' → logprob: -10.437192916870117

Token 537: ' avec' (ID: 3937)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '&' → logprob: -0.06544090062379837
    2. ' &' → logprob: -3.0654408931732178
    3. '1' → logprob: -4.565441131591797
    4. '(' → logprob: -6.440441131591797
    5. ')' → logprob: -6.565441131591797
    6. '   ' → logprob: -7.690441131591797
    7. '&
' → logprob: -7.690441131591797
    8. '(&' → logprob: -7.815441131591797
    9. ')&' → logprob: -7.940441131591797
    10. '&t' → logprob: -8.190441131591797

Token 538: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.029486391693353653
    2. '(' → logprob: -3.6544864177703857
    3. ' ' → logprob: -6.279486179351807
    4. ' (' → logprob: -6.654486179351807
    5. '   ' → logprob: -11.529486656188965
    6. '0' → logprob: -12.904486656188965
    7. '((' → logprob: -13.279486656188965
    8. '```' → logprob: -13.529486656188965
    9. '`' → logprob: -13.779486656188965
    10. '(
' → logprob: -14.529486656188965

Token 539: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01826617866754532
    2. '(' → logprob: -4.018266201019287
    3. ' ' → logprob: -9.268265724182129
    4. ' (' → logprob: -10.893265724182129
    5. '0' → logprob: -13.018265724182129
    6. '   ' → logprob: -15.018265724182129
    7. '
' → logprob: -15.268265724182129
    8. '(
' → logprob: -15.393265724182129
    9. '((' → logprob: -15.768265724182129
    10. '`' → logprob: -16.143266677856445

Token 540: ' pour' (ID: 1930)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9028139710426331
    2. ' =' → logprob: -1.2778139114379883
    3. 't' → logprob: -1.5278139114379883
    4. ' t' → logprob: -3.9028139114379883
    5. '   ' → logprob: -4.277813911437988
    6. '=' → logprob: -4.277813911437988
    7. ')' → logprob: -4.652813911437988
    8. '
' → logprob: -4.777813911437988
    9. ',' → logprob: -5.402813911437988
    10. ' ' → logprob: -5.777813911437988

Token 541: ' isol' (ID: 16651)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.002333428245037794
    2. ' t' → logprob: -7.002333641052246
    3. 'get' → logprob: -8.002333641052246
    4. ')' → logprob: -8.502333641052246
    5. 'j' → logprob: -8.627333641052246
    6. ' (' → logprob: -8.877333641052246
    7. ' get' → logprob: -9.002333641052246
    8. '(t' → logprob: -9.252333641052246
    9. '(' → logprob: -9.627333641052246
    10. ' ' → logprob: -10.002333641052246

Token 542: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.10977187007665634
    2. '(j' → logprob: -3.109771966934204
    3. '       ' → logprob: -4.484771728515625
    4. '1' → logprob: -4.484771728515625
    5. ' j' → logprob: -4.859771728515625
    6. '   ' → logprob: -4.984771728515625
    7. ' (' → logprob: -5.109771728515625
    8. '(i' → logprob: -5.859771728515625
    9. '(' → logprob: -5.984771728515625
    10. ')' → logprob: -6.359771728515625

Token 543: ' le' (ID: 505)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.21834303438663483
    2. 't' → logprob: -2.3433430194854736
    3. '(j' → logprob: -2.9683430194854736
    4. '(' → logprob: -3.4683430194854736
    5. '(t' → logprob: -4.968343257904053
    6. 'j' → logprob: -5.343343257904053
    7. ')' → logprob: -6.343343257904053
    8. '1' → logprob: -6.593343257904053
    9. ' t' → logprob: -7.093343257904053
    10. ' j' → logprob: -7.218343257904053

Token 544: ' bit' (ID: 3546)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.09417104721069336
    2. '(' → logprob: -3.4691710472106934
    3. ' (' → logprob: -3.8441710472106934
    4. 't' → logprob: -4.094171047210693
    5. ' ' → logprob: -4.344171047210693
    6. 'j' → logprob: -6.094171047210693
    7. '0' → logprob: -6.469171047210693
    8. ' t' → logprob: -7.344171047210693
    9. ' j' → logprob: -7.344171047210693
    10. '   ' → logprob: -7.594171047210693

Token 545: '.
' (ID: 558)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.9830520749092102
    2. ' (' → logprob: -1.7330520153045654
    3. ' =' → logprob: -1.9830520153045654
    4. '1' → logprob: -2.1080520153045654
    5. '(' → logprob: -2.2330520153045654
    6. ')' → logprob: -3.8580520153045654
    7. ' &' → logprob: -4.4830522537231445
    8. ' ' → logprob: -4.7330522537231445
    9. '=' → logprob: -4.7330522537231445
    10. '(t' → logprob: -5.2330522537231445

Token 546: '       ' (ID: 309)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.15100574493408203
    2. '       ' → logprob: -2.401005744934082
    3. ' t' → logprob: -3.151005744934082
    4. ' =' → logprob: -5.526005744934082
    5. '   ' → logprob: -6.901005744934082
    6. '=' → logprob: -7.151005744934082
    7. '           ' → logprob: -8.151005744934082
    8. '        ' → logprob: -9.151005744934082
    9. ')' → logprob: -9.651005744934082
    10. '	t' → logprob: -9.776005744934082

Token 547: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' (adapté à ' t') → logprob: -0.0007897364557720721
    2. '       ' → logprob: -7.500789642333984
    3. ' t' → logprob: -8.375789642333984
    4. '   ' → logprob: -12.500789642333984
    5. '`t' → logprob: -13.125789642333984
    6. '	t' → logprob: -15.125789642333984
    7. '           ' → logprob: -15.750789642333984
    8. '```' → logprob: -15.875789642333984
    9. '        
' → logprob: -16.875789642333984
    10. '        ' → logprob: -17.500789642333984

Token 548: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519296407699585
    2. ' =' → logprob: -1.5019296407699585
    3. '=
' → logprob: -15.37692928314209
    4. ',' → logprob: -16.376930236816406
    5. ' ' → logprob: -16.501930236816406
    6. '=

' → logprob: -17.001930236816406
    7. '   ' → logprob: -17.001930236816406
    8. ' =
' → logprob: -17.126930236816406
    9. '＝' → logprob: -18.251930236816406
    10. ' ' → logprob: -18.251930236816406

Token 549: ' (' (ID: 350)
  Prédit: '(j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.01568836346268654
    2. ' (' → logprob: -4.265688419342041
    3. 'j' → logprob: -6.515688419342041
    4. ' j' → logprob: -10.515687942504883
    5. '(' → logprob: -11.265687942504883
    6. '   ' → logprob: -13.640687942504883
    7. '[j' → logprob: -13.890687942504883
    8. '((' → logprob: -14.890687942504883
    9. ' ' → logprob: -15.140687942504883
    10. '(
' → logprob: -15.390687942504883

Token 550: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -4.56102097814437e-05
    2. ' j' → logprob: -10.000045776367188
    3. '   ' → logprob: -16.375045776367188
    4. '	j' → logprob: -17.250045776367188
    5. '(j' → logprob: -17.875045776367188
    6. '[j' → logprob: -19.625045776367188
    7. ')' → logprob: -20.625045776367188
    8. '$j' → logprob: -20.875045776367188
    9. '_j' → logprob: -21.125045776367188
    10. ' ' → logprob: -21.375045776367188

Token 551: ' >>' (ID: 6832)
  Prédit: '>>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.3139278292655945
    2. ' >>' → logprob: -1.3139278888702393
    3. ')' → logprob: -8.06392765045166
    4. '>>(' → logprob: -8.43892765045166
    5. '>' → logprob: -9.31392765045166
    6. ')>>' → logprob: -11.06392765045166
    7. '>>
' → logprob: -12.06392765045166
    8. '>>>' → logprob: -12.06392765045166
    9. ' ' → logprob: -12.18892765045166
    10. ' >>
' → logprob: -13.31392765045166

Token 552: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.12701578438282013
    2. 'i' → logprob: -2.1270158290863037
    3. ' (' → logprob: -10.127016067504883
    4. '{i' → logprob: -10.752016067504883
    5. ' i' → logprob: -11.252016067504883
    6. '(' → logprob: -11.752016067504883
    7. '[i' → logprob: -12.752016067504883
    8. '   ' → logprob: -13.752016067504883
    9. ')i' → logprob: -15.002016067504883
    10. ',i' → logprob: -15.377016067504883

Token 553: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -6.630610641877865e-06
    2. '(i' → logprob: -12.000006675720215
    3. ' i' → logprob: -14.625006675720215
    4. ' (' → logprob: -18.5000057220459
    5. '{i' → logprob: -18.6250057220459
    6. ')i' → logprob: -19.0000057220459
    7. '[i' → logprob: -19.5000057220459
    8. '   ' → logprob: -20.0000057220459
    9. '(' → logprob: -20.2500057220459
    10. '	i' → logprob: -20.2500057220459

Token 554: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -4.842555426876061e-06
    2. ' -' → logprob: -12.625004768371582
    3. '1' → logprob: -13.500004768371582
    4. '   ' → logprob: -21.0000057220459
    5. '−' → logprob: -21.2500057220459
    6. '–' → logprob: -21.6250057220459
    7. ')-' → logprob: -21.6250057220459
    8. ')' → logprob: -21.6250057220459
    9. ''-' → logprob: -22.2500057220459
    10. '\-' → logprob: -22.2500057220459

Token 555: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. '   ' → logprob: -17.75
    4. '```' → logprob: -18.625
    5. '2' → logprob: -21.375
    6. '  ' → logprob: -22.125
    7. ')' → logprob: -22.125
    8. '       ' → logprob: -22.375
    9. '
' → logprob: -22.625
    10. '-' → logprob: -22.75

Token 556: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. '   ' → logprob: -18.25
    4. '```' → logprob: -19.375
    5. '
' → logprob: -19.75
    6. ')' → logprob: -21.125
    7. '2' → logprob: -21.5
    8. '  ' → logprob: -21.875
    9. '۱' → logprob: -22.4375
    10. '

' → logprob: -22.5625

Token 557: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.3868810832500458
    2. ')' → logprob: -1.1368811130523682
    3. ')&' → logprob: -12.636880874633789
    4. ' )' → logprob: -13.136880874633789
    5. '1' → logprob: -13.386880874633789
    6. ')
' → logprob: -14.261880874633789
    7. ' ))' → logprob: -14.511880874633789
    8. '])' → logprob: -14.886880874633789
    9. '   ' → logprob: -14.886880874633789
    10. '})' → logprob: -15.136880874633789

Token 558: ' &' (ID: 827)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.5990370512008667
    2. ')' → logprob: -0.8490370512008667
    3. ')&' → logprob: -4.099037170410156
    4. ' &' → logprob: -5.099037170410156
    5. '&amp' → logprob: -9.724037170410156
    6. '&
' → logprob: -10.474037170410156
    7. ' )' → logprob: -10.974037170410156
    8. '&)' → logprob: -11.599037170410156
    9. '1' → logprob: -12.224037170410156
    10. '&t' → logprob: -12.474037170410156

Token 559: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001398929744027555
    2. ' ' → logprob: -8.875140190124512
    3. '```' → logprob: -17.875139236450195
    4. '   ' → logprob: -18.500139236450195
    5. '
' → logprob: -18.875139236450195
    6. '`' → logprob: -19.500139236450195
    7. '0' → logprob: -20.500139236450195
    8. '  ' → logprob: -20.500139236450195
    9. ' ' → logprob: -20.500139236450195
    10. '' → logprob: -21.125139236450195

Token 560: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '```' → logprob: -19.125
    4. '0' → logprob: -19.375
    5. '   ' → logprob: -20.5
    6. '`' → logprob: -20.875
    7. '
' → logprob: -20.875
    8. '' → logprob: -21.875
    9. '(' → logprob: -22.5
    10. '01' → logprob: -23.125

Token 561: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07199936360120773
    2. '
' → logprob: -3.0719993114471436
    3. '<|end|>' → logprob: -4.946999549865723
    4. ' if' → logprob: -5.196999549865723
    5. 'if' → logprob: -5.196999549865723
    6. '        
' → logprob: -5.821999549865723
    7. '#' → logprob: -7.071999549865723
    8. '   ' → logprob: -8.821999549865723
    9. ')' → logprob: -8.946999549865723
    10. '```' → logprob: -9.071999549865723

Token 562: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021092500537633896
    2. 'if' → logprob: -4.146092414855957
    3. ' if' → logprob: -5.771092414855957
    4. '```' → logprob: -7.771092414855957
    5. 'f' → logprob: -8.021092414855957
    6. '        
' → logprob: -8.271092414855957
    7. ')' → logprob: -8.771092414855957
    8. '<|end|>' → logprob: -8.771092414855957
    9. '   ' → logprob: -8.896092414855957
    10. 't' → logprob: -9.021092414855957

Token 563: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.08355438709259033
    2. '       ' → logprob: -2.708554267883301
    3. ' if' → logprob: -4.708554267883301
    4. 'f' → logprob: -5.833554267883301
    5. '```' → logprob: -7.583554267883301
    6. 'for' → logprob: -7.958554267883301
    7. '#' (adapté à ' #') → logprob: -8.2085542678833
    8. 'prev' → logprob: -8.4585542678833
    9. '        
' → logprob: -10.0835542678833
    10. 'k' → logprob: -10.7085542678833

Token 564: ' r' (ID: 428)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0002810007717926055
    2. 'f' → logprob: -8.50028133392334
    3. '       ' → logprob: -9.87528133392334
    4. '#' → logprob: -11.50028133392334
    5. ' if' → logprob: -12.00028133392334
    6. 'prev' → logprob: -12.75028133392334
    7. 'length' → logprob: -13.37528133392334
    8. '```' → logprob: -14.12528133392334
    9. '
' → logprob: -14.50028133392334
    10. 'count' → logprob: -14.62528133392334

Token 565: ' compte' (ID: 19657)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06214738264679909
    2. '=' → logprob: -2.812147378921509
    3. ' ' → logprob: -9.06214714050293
    4. 'f' → logprob: -9.81214714050293
    5. '  ' → logprob: -13.81214714050293
    6. 'if' → logprob: -14.06214714050293
    7. '   ' → logprob: -14.18714714050293
    8. 't' → logprob: -14.56214714050293
    9. 's' → logprob: -14.56214714050293
    10. ',' → logprob: -14.56214714050293

Token 566: ' le' (ID: 505)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6356195211410522
    2. '=' → logprob: -0.7606195211410522
    3. 't' → logprob: -7.260619640350342
    4. ' ' → logprob: -7.260619640350342
    5. 'f' → logprob: -7.885619640350342
    6. '0' → logprob: -7.885619640350342
    7. 's' → logprob: -8.510619163513184
    8. '   ' → logprob: -9.260619163513184
    9. '1' → logprob: -9.385619163513184
    10. ')' → logprob: -9.510619163513184

Token 567: ' nombre' (ID: 9733)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.8763712048530579
    2. '0' → logprob: -1.001371145248413
    3. '1' → logprob: -2.001371145248413
    4. ' f' → logprob: -3.626371145248413
    5. ' ' → logprob: -4.001371383666992
    6. 'i' → logprob: -4.126371383666992
    7. '(' → logprob: -4.626371383666992
    8. '(i' → logprob: -5.751371383666992
    9. 't' → logprob: -6.251371383666992
    10. ' i' → logprob: -6.501371383666992

Token 568: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8654683828353882
    2. '_' → logprob: -1.6154683828353882
    3. '=' → logprob: -2.2404685020446777
    4. ' d' → logprob: -2.7404685020446777
    5. ' de' → logprob: -2.7404685020446777
    6. 'd' → logprob: -3.2404685020446777
    7. 'de' → logprob: -3.4904685020446777
    8. '       ' → logprob: -3.8654685020446777
    9. '   ' → logprob: -4.740468502044678
    10. '_con' → logprob: -4.865468502044678

Token 569: ' bits' (ID: 18189)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07493986934423447
    2. '0' → logprob: -3.5749399662017822
    3. ' ' → logprob: -4.199939727783203
    4. 'f' → logprob: -4.574939727783203
    5. 'con' → logprob: -5.074939727783203
    6. 'bits' → logprob: -5.699939727783203
    7. ' f' → logprob: -6.324939727783203
    8. '(' → logprob: -6.449939727783203
    9. 't' → logprob: -6.824939727783203
    10. ' bits' → logprob: -6.824939727783203

Token 570: ' init' (ID: 6327)
  Prédit: '_cons'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_cons' → logprob: -1.0723848342895508
    2. '_' → logprob: -1.3223848342895508
    3. '_con' → logprob: -2.322384834289551
    4. ' cons' → logprob: -2.572384834289551
    5. 'cons' → logprob: -2.822384834289551
    6. '   ' → logprob: -3.197384834289551
    7. 'con' → logprob: -3.572384834289551
    8. ' ' → logprob: -3.822384834289551
    9. ' =' → logprob: -4.197384834289551
    10. '_c' → logprob: -4.447384834289551

Token 571: 'iaux' (ID: 35231)
  Prédit: 'iaux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iaux' → logprob: -0.11304250359535217
    2. 'aux' → logprob: -2.2380425930023193
    3. 'au' → logprob: -9.738042831420898
    4. 'és' → logprob: -10.363042831420898
    5. 'i' → logprob: -10.613042831420898
    6. 'ia' → logprob: -10.738042831420898
    7. '   ' → logprob: -11.363042831420898
    8. ' ' → logprob: -11.613042831420898
    9. 'ég' → logprob: -11.738042831420898
    10. 'a' → logprob: -11.738042831420898

Token 572: ' (' (ID: 350)
  Prédit: ' cons'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cons' → logprob: -0.21875403821468353
    2. 'con' → logprob: -2.7187540531158447
    3. 'cons' → logprob: -2.9687540531158447
    4. ' =' → logprob: -3.9687540531158447
    5. '_cons' → logprob: -4.093753814697266
    6. ' ' → logprob: -4.343753814697266
    7. '_' → logprob: -4.843753814697266
    8. '_con' → logprob: -5.093753814697266
    9. '=' → logprob: -5.468753814697266
    10. 'd' → logprob: -5.968753814697266

Token 573: 'à' (ID: 708)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.9134780764579773
    2. 'f' → logprob: -0.9134780764579773
    3. 'd' → logprob: -3.163478136062622
    4. '0' → logprob: -3.163478136062622
    5. ' ' → logprob: -3.163478136062622
    6. 'i' → logprob: -3.788478136062622
    7. 't' → logprob: -4.038477897644043
    8. ' f' → logprob: -4.163477897644043
    9. ')' → logprob: -5.163477897644043
    10. ' i' → logprob: -5.788477897644043

Token 574: ' partir' (ID: 12100)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.16470637917518616
    2. '0' → logprob: -2.7897064685821533
    3. '1' → logprob: -2.9147064685821533
    4. 'f' → logprob: -4.789706230163574
    5. ' i' → logprob: -4.789706230163574
    6. 'r' → logprob: -5.039706230163574
    7. ' ' → logprob: -5.664706230163574
    8. 't' → logprob: -5.664706230163574
    9. 'contin' → logprob: -7.289706230163574
    10. 'continu' → logprob: -7.289706230163574

Token 575: ' du' (ID: 1462)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5340566039085388
    2. 'i' → logprob: -2.2840566635131836
    3. 'de' → logprob: -2.2840566635131836
    4. ' de' → logprob: -3.1590566635131836
    5. 'r' → logprob: -3.4090566635131836
    6. ' i' → logprob: -3.5340566635131836
    7. 'j' → logprob: -4.159056663513184
    8. ' j' → logprob: -4.284056663513184
    9. '       ' → logprob: -4.284056663513184
    10. 't' → logprob: -4.409056663513184

Token 576: ' bit' (ID: 3546)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.09775163233280182
    2. '0' → logprob: -2.5977516174316406
    3. ' ' → logprob: -5.597751617431641
    4. ' i' → logprob: -5.597751617431641
    5. 't' → logprob: -5.972751617431641
    6. '1' → logprob: -6.222751617431641
    7. 'd' → logprob: -7.097751617431641
    8. 'fin' → logprob: -7.597751617431641
    9. 'dé' → logprob: -7.597751617431641
    10. ' droite' → logprob: -7.722751617431641

Token 577: ' de' (ID: 334)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.22281724214553833
    2. ' i' → logprob: -2.3478171825408936
    3. '0' → logprob: -2.8478171825408936
    4. '1' → logprob: -4.222817420959473
    5. ' ' → logprob: -5.222817420959473
    6. '```' → logprob: -5.222817420959473
    7. '_i' → logprob: -5.972817420959473
    8. 't' → logprob: -5.972817420959473
    9. 'r' → logprob: -6.097817420959473
    10. '(i' → logprob: -6.222817420959473

Token 578: ' poids' (ID: 56058)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.16369500756263733
    2. '1' → logprob: -2.9136950969696045
    3. '0' → logprob: -3.0386950969696045
    4. 'l' → logprob: -3.6636950969696045
    5. 'la' → logprob: -5.538694858551025
    6. ' ' → logprob: -5.663694858551025
    7. 'j' → logprob: -5.788694858551025
    8. ' i' → logprob: -5.788694858551025
    9. 'r' → logprob: -6.038694858551025
    10. 't' → logprob: -6.288694858551025

Token 579: ' fort' (ID: 8024)
  Prédit: ' fort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fort' → logprob: -0.2712189555168152
    2. '1' → logprob: -2.02121901512146
    3. 'fort' → logprob: -2.39621901512146
    4. 'f' → logprob: -4.896218776702881
    5. ' i' → logprob: -6.646218776702881
    6. ' forts' → logprob: -7.021218776702881
    7. 't' → logprob: -7.021218776702881
    8. ' ' → logprob: -7.271218776702881
    9. '```' → logprob: -7.521218776702881
    10. 'i' → logprob: -7.771218776702881

Token 580: ')' (ID: 8)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.697449266910553
    2. ')' → logprob: -1.0724492073059082
    3. '+' → logprob: -3.197449207305908
    4. '1' → logprob: -4.072449207305908
    5. 't' → logprob: -4.447449207305908
    6. ' ' → logprob: -4.572449207305908
    7. '=' → logprob: -5.072449207305908
    8. 'd' → logprob: -5.072449207305908
    9. '   ' → logprob: -5.197449207305908
    10. 's' → logprob: -5.197449207305908

Token 581: ' qui' (ID: 2780)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9950153827667236
    2. '=' → logprob: -1.8700153827667236
    3. ' cons' → logprob: -1.8700153827667236
    4. 'con' → logprob: -2.6200153827667236
    5. '_' → logprob: -3.1200153827667236
    6. 'r' → logprob: -3.3700153827667236
    7. '_cons' → logprob: -3.3700153827667236
    8. '_con' → logprob: -3.4950153827667236
    9. '_cont' → logprob: -3.9950153827667236
    10. 'cons' → logprob: -4.2450151443481445

Token 582: ' valent' (ID: 148217)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7659391164779663
    2. '=' → logprob: -1.0159391164779663
    3. 's' → logprob: -2.515939235687256
    4. ' ' → logprob: -3.890939235687256
    5. ' sont' → logprob: -4.765939235687256
    6. 'ont' → logprob: -5.015939235687256
    7. '_' → logprob: -5.140939235687256
    8. '       ' → logprob: -5.265939235687256
    9. '   ' → logprob: -5.265939235687256
    10. ' s' → logprob: -5.390939235687256

Token 583: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.021092398092150688
    2. ' t' → logprob: -4.021092414855957
    3. '1' → logprob: -6.146092414855957
    4. 'i' → logprob: -8.146092414855957
    5. ' ' → logprob: -8.771092414855957
    6. '0' → logprob: -9.021092414855957
    7. '`t' → logprob: -9.396092414855957
    8. ' i' → logprob: -9.646092414855957
    9. '   ' → logprob: -10.396092414855957
    10. '```' → logprob: -11.021092414855957

Token 584: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6809574365615845
    2. ' =' → logprob: -1.9309574365615845
    3. '
' → logprob: -2.055957317352295
    4. '=' → logprob: -2.180957317352295
    5. 'r' → logprob: -2.430957317352295
    6. ',' → logprob: -4.930957317352295
    7. '        
' → logprob: -6.305957317352295
    8. '
' → logprob: -6.555957317352295
    9. '<|end|>' → logprob: -7.055957317352295
    10. '  
' → logprob: -7.055957317352295

Token 585: '       ' (ID: 309)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.5268540382385254
    2. '       ' → logprob: -0.9018540382385254
    3. ' r' → logprob: -6.901854038238525
    4. '        
' → logprob: -7.401854038238525
    5. 't' → logprob: -8.151853561401367
    6. '```' → logprob: -8.276853561401367
    7. ' ' → logprob: -8.651853561401367
    8. ' 
' → logprob: -8.901853561401367
    9. ' if' → logprob: -9.026853561401367
    10. '   ' → logprob: -9.151853561401367

Token 586: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.007763374131172895
    2. '       ' → logprob: -4.882763385772705
    3. ' r' → logprob: -9.632762908935547
    4. 'if' → logprob: -9.757762908935547
    5. '```' → logprob: -11.257762908935547
    6. 't' → logprob: -11.507762908935547
    7. '           ' → logprob: -12.882762908935547
    8. ' if' → logprob: -13.632762908935547
    9. '#' → logprob: -13.757762908935547
    10. 'k' → logprob: -13.882762908935547

Token 587: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931484341621399
    2. ' =' → logprob: -0.6931484341621399
    3. ' ' → logprob: -15.318148612976074
    4. ',' → logprob: -15.443148612976074
    5. '=
' → logprob: -15.568148612976074
    6. '   ' → logprob: -16.318147659301758
    7. '=r' → logprob: -16.318147659301758
    8. '=int' → logprob: -16.568147659301758
    9. ' =
' → logprob: -16.693147659301758
    10. '0' → logprob: -16.818147659301758

Token 588: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006733249872922897
    2. '0' → logprob: -5.506733417510986
    3. ' ' → logprob: -6.631733417510986
    4. 'f' → logprob: -6.881733417510986
    5. 'i' → logprob: -8.881732940673828
    6. '   ' → logprob: -9.131732940673828
    7. ' f' → logprob: -10.381732940673828
    8. '(i' → logprob: -11.881732940673828
    9. ' i' → logprob: -12.506732940673828
    10. '(' → logprob: -12.631732940673828

Token 589: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009066780097782612
    2. 'f' → logprob: -5.384066581726074
    3. '0' → logprob: -5.634066581726074
    4. ' ' → logprob: -7.884066581726074
    5. 'i' → logprob: -8.134066581726074
    6. '   ' → logprob: -9.509066581726074
    7. 'd' → logprob: -10.259066581726074
    8. '(i' → logprob: -10.384066581726074
    9. ' f' → logprob: -10.884066581726074
    10. '(f' → logprob: -11.384066581726074

Token 590: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.816807746887207
    2. 'while' → logprob: -1.191807746887207
    3. '       ' → logprob: -2.066807746887207
    4. ' while' → logprob: -2.441807746887207
    5. '<|end|>' → logprob: -3.566807746887207
    6. '        
' → logprob: -5.191807746887207
    7. '	while' → logprob: -6.191807746887207
    8. '  
' → logprob: -6.691807746887207
    9. '   ' → logprob: -6.691807746887207
    10. ' 
' → logprob: -7.566807746887207

Token 591: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6527508497238159
    2. ' while' → logprob: -1.402750849723816
    3. '<|end|>' → logprob: -2.1527509689331055
    4. 'while' → logprob: -2.2777509689331055
    5. ' for' → logprob: -5.5277509689331055
    6. '        
' → logprob: -6.0277509689331055
    7. '	while' → logprob: -6.5277509689331055
    8. '
' → logprob: -6.7777509689331055
    9. ' if' → logprob: -6.7777509689331055
    10. '   ' → logprob: -6.9027509689331055

Token 592: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.004930600989609957
    2. ' while' → logprob: -5.75493049621582
    3. '       ' → logprob: -6.62993049621582
    4. 'for' → logprob: -7.87993049621582
    5. '
' → logprob: -11.25493049621582
    6. '        
' → logprob: -11.75493049621582
    7. 'w' → logprob: -12.25493049621582
    8. '   ' → logprob: -12.25493049621582
    9. ' for' → logprob: -12.50493049621582
    10. 'if' → logprob: -12.75493049621582

Token 593: ' On' (ID: 2160)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.009341875091195107
    2. 'for' → logprob: -4.884341716766357
    3. ' while' → logprob: -6.884341716766357
    4. 'k' → logprob: -7.759341716766357
    5. '       ' → logprob: -9.134342193603516
    6. 'bit' → logprob: -9.884342193603516
    7. 'mask' → logprob: -10.259342193603516
    8. 'm' → logprob: -10.509342193603516
    9. 'pos' → logprob: -11.509342193603516
    10. 'b' → logprob: -11.634342193603516

Token 594: ' parc' (ID: 22138)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2717435359954834
    2. 'k' → logprob: -2.6467435359954834
    3. ' for' → logprob: -2.8967435359954834
    4. '=' → logprob: -2.8967435359954834
    5. 'while' → logprob: -3.0217435359954834
    6. ' =' → logprob: -5.8967437744140625
    7. ' while' → logprob: -6.6467437744140625
    8. '       ' → logprob: -7.0217437744140625
    9. ' <<=' → logprob: -7.6467437744140625
    10. 'm' → logprob: -7.7717437744140625

Token 595: 'ourt' (ID: 38600)
  Prédit: 'ours'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ours' → logprob: -0.4330706000328064
    2. 'our' → logprob: -1.5580706596374512
    3. 'ourt' → logprob: -2.558070659637451
    4. 'oure' → logprob: -3.808070659637451
    5. 'o' → logprob: -4.308070659637451
    6. '#' → logprob: -4.808070659637451
    7. '_' → logprob: -5.058070659637451
    8. 'ou' → logprob: -6.183070659637451
    9. 'c' → logprob: -6.308070659637451
    10. '[' → logprob: -6.933070659637451

Token 596: ' les' (ID: 1341)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.10290302336215973
    2. 'i' → logprob: -2.727903127670288
    3. ' k' → logprob: -4.352902889251709
    4. 'for' → logprob: -5.352902889251709
    5. 'range' → logprob: -5.602902889251709
    6. '_' → logprob: -5.852902889251709
    7. 'while' → logprob: -6.477902889251709
    8. ' i' → logprob: -6.602902889251709
    9. 'r' → logprob: -6.602902889251709
    10. '   ' → logprob: -7.352902889251709

Token 597: ' bits' (ID: 18189)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.3551749587059021
    2. 'range' → logprob: -2.355175018310547
    3. 'for' → logprob: -2.605175018310547
    4. 'bits' → logprob: -2.855175018310547
    5. 'i' → logprob: -3.230175018310547
    6. 'bit' → logprob: -4.480175018310547
    7. ' range' → logprob: -4.980175018310547
    8. 'while' → logprob: -5.605175018310547
    9. ' bits' → logprob: -5.980175018310547
    10. ' k' → logprob: -6.105175018310547

Token 598: ' du' (ID: 1462)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.8166489005088806
    2. 'for' → logprob: -1.0666489601135254
    3. ' for' → logprob: -1.8166489601135254
    4. 'i' → logprob: -4.066648960113525
    5. '       ' → logprob: -4.316648960113525
    6. ' in' → logprob: -5.191648960113525
    7. ' k' → logprob: -5.441648960113525
    8. 'in' → logprob: -5.566648960113525
    9. '   ' → logprob: -6.191648960113525
    10. ' i' → logprob: -6.566648960113525

Token 599: ' plus' (ID: 2932)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.050713710486888885
    2. 'for' → logprob: -4.175713539123535
    3. ' i' → logprob: -4.675713539123535
    4. ' range' → logprob: -4.675713539123535
    5. 'range' → logprob: -4.675713539123535
    6. 'j' → logprob: -5.675713539123535
    7. ' for' → logprob: -6.425713539123535
    8. 'bin' → logprob: -8.425713539123535
    9. ' code' → logprob: -9.050713539123535
    10. '   ' → logprob: -9.050713539123535

Token 600: ' signific' (ID: 5404)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.16754943132400513
    2. 'for' → logprob: -2.1675493717193604
    3. ' i' → logprob: -3.5425493717193604
    4. ' for' → logprob: -5.2925496101379395
    5. '```' → logprob: -6.7925496101379395
    6. ' ' → logprob: -6.9175496101379395
    7. 'haut' → logprob: -7.4175496101379395
    8. 'à' → logprob: -7.4175496101379395
    9. 'r' → logprob: -7.5425496101379395
    10. 't' → logprob: -8.042549133300781

Token 601: 'atif' (ID: 23984)
  Prédit: 'ant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.10808905214071274
    2. 'atif' → logprob: -2.483088970184326
    3. 't' → logprob: -4.358088970184326
    4. 'ent' → logprob: -5.858088970184326
    5. 'nt' → logprob: -7.108088970184326
    6. 'i' → logprob: -7.358088970184326
    7. 'ic' → logprob: -7.858088970184326
    8. 'for' → logprob: -8.233089447021484
    9. 'iant' → logprob: -8.608089447021484
    10. 'f' → logprob: -8.983089447021484

Token 602: ' au' (ID: 2791)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3649195432662964
    2. 'i' → logprob: -2.489919662475586
    3. ' for' → logprob: -2.739919662475586
    4. 'à' → logprob: -3.114919662475586
    5. ' à' → logprob: -3.239919662475586
    6. ',' → logprob: -4.864919662475586
    7. 'dans' → logprob: -4.864919662475586
    8. 'r' → logprob: -5.114919662475586
    9. ' i' → logprob: -5.114919662475586
    10. 'de' → logprob: -5.114919662475586

Token 603: ' moins' (ID: 15924)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.06792490184307098
    2. '0' → logprob: -3.692924976348877
    3. '(i' → logprob: -4.192924976348877
    4. ' i' → logprob: -4.692924976348877
    5. '(' → logprob: -5.317924976348877
    6. ' (' → logprob: -5.567924976348877
    7. '1' → logprob: -5.942924976348877
    8. 'range' → logprob: -6.442924976348877
    9. '
' → logprob: -6.567924976348877
    10. 'for' → logprob: -7.567924976348877

Token 604: ',' (ID: 11)
  Prédit: 'sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sign' → logprob: -0.3838261067867279
    2. 'i' → logprob: -1.7588261365890503
    3. 'for' → logprob: -2.7588260173797607
    4. 'à' → logprob: -3.5088260173797607
    5. ' i' → logprob: -3.5088260173797607
    6. ' significant' → logprob: -4.75882625579834
    7. ' à' → logprob: -5.50882625579834
    8. ' for' → logprob: -6.25882625579834
    9. ' signific' → logprob: -6.50882625579834
    10. '   ' → logprob: -6.50882625579834

Token 605: ' tant' (ID: 16235)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6943159103393555
    2. 'k' → logprob: -1.1943159103393555
    3. ' for' → logprob: -1.6943159103393555
    4. 'while' → logprob: -5.1943159103393555
    5. ' k' → logprob: -5.4443159103393555
    6. ' while' → logprob: -6.1943159103393555
    7. 'r' → logprob: -7.0693159103393555
    8. '       ' → logprob: -7.1943159103393555
    9. '   ' → logprob: -8.694315910339355
    10. 'b' → logprob: -9.694315910339355

Token 606: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.09248902648687363
    2. 'que' → logprob: -3.467489004135132
    3. '   ' → logprob: -3.967489004135132
    4. '       ' → logprob: -4.092489242553711
    5. 'r' → logprob: -4.967489242553711
    6. '#' → logprob: -5.092489242553711
    7. '    ' → logprob: -6.217489242553711
    8. '        ' → logprob: -6.467489242553711
    9. ' qu' → logprob: -7.717489242553711
    10. 'pas' → logprob: -7.717489242553711

Token 607: ' c' (ID: 274)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.18770505487918854
    2. ' r' → logprob: -3.1877050399780273
    3. ' (' → logprob: -3.5627050399780273
    4. '(r' → logprob: -3.5627050399780273
    5. 't' → logprob: -3.6877050399780273
    6. 'i' → logprob: -4.437705039978027
    7. '((' → logprob: -4.812705039978027
    8. ' t' → logprob: -5.062705039978027
    9. '(' → logprob: -5.062705039978027
    10. '(t' → logprob: -5.437705039978027

Token 608: ''est' (ID: 6616)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -1.3481332063674927
    2. 'i' → logprob: -1.5981332063674927
    3. 'r' → logprob: -1.5981332063674927
    4. ' (' → logprob: -1.8481332063674927
    5. '(i' → logprob: -3.098133087158203
    6. ' r' → logprob: -3.223133087158203
    7. '(r' → logprob: -3.848133087158203
    8. ' t' → logprob: -4.098133087158203
    9. 't' → logprob: -4.598133087158203
    10. '(' → logprob: -4.598133087158203

Token 609: ' égal' (ID: 15059)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.5284457206726074
    2. ' t' → logprob: -0.9034457206726074
    3. ' ' → logprob: -6.528445720672607
    4. ' True' → logprob: -7.153445720672607
    5. '1' → logprob: -7.653445720672607
    6. 'True' → logprob: -7.778445720672607
    7. '(t' → logprob: -8.028446197509766
    8. ' equal' → logprob: -8.403446197509766
    9. 'r' → logprob: -8.528446197509766
    10. '   ' → logprob: -8.528446197509766

Token 610: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.9638040065765381
    2. ' à' → logprob: -0.9638040065765381
    3. '   ' → logprob: -2.588804006576538
    4. '       ' → logprob: -3.338804006576538
    5. '(r' → logprob: -3.338804006576538
    6. ' aux' → logprob: -3.338804006576538
    7. '(i' → logprob: -4.463804244995117
    8. '(' → logprob: -4.713804244995117
    9. 'aux' → logprob: -4.838804244995117
    10. 'r' → logprob: -4.963804244995117

Token 611: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.014167623594403267
    2. ' t' → logprob: -4.264167785644531
    3. ' ' → logprob: -13.639167785644531
    4. '`t' → logprob: -13.889167785644531
    5. '   ' → logprob: -14.139167785644531
    6. '	t' → logprob: -14.514167785644531
    7. ' ' → logprob: -15.264167785644531
    8. '```' → logprob: -15.764167785644531
    9. '       ' → logprob: -15.889167785644531
    10. '(t' → logprob: -16.26416778564453

Token 612: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09050870686769485
    2. ' and' → logprob: -2.7155086994171143
    3. ':' → logprob: -4.590508937835693
    4. ':
' → logprob: -5.590508937835693
    5. 'and' → logprob: -6.215508937835693
    6. ',' → logprob: -6.715508937835693
    7. '   ' → logprob: -7.090508937835693
    8. ' for' → logprob: -7.090508937835693
    9. 'while' → logprob: -8.215508460998535
    10. '<|end|>' → logprob: -8.215508460998535

Token 613: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10307367891073227
    2. ' for' → logprob: -2.7280735969543457
    3. 'while' → logprob: -4.478073596954346
    4. ' while' → logprob: -4.478073596954346
    5. 'for' → logprob: -5.103073596954346
    6. '   ' → logprob: -6.478073596954346
    7. '<|end|>' → logprob: -7.103073596954346
    8. ' i' → logprob: -7.728073596954346
    9. 'i' → logprob: -8.478074073791504
    10. '```' → logprob: -9.353074073791504

Token 614: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.19976192712783813
    2. 'for' → logprob: -1.9497618675231934
    3. ' while' → logprob: -4.074761867523193
    4. 'k' → logprob: -4.574761867523193
    5. ' for' → logprob: -5.074761867523193
    6. '       ' → logprob: -5.324761867523193
    7. '   ' → logprob: -8.824762344360352
    8. ' k' → logprob: -10.199762344360352
    9. 'r' → logprob: -10.449762344360352
    10. '```' → logprob: -10.574762344360352

Token 615: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0026474790647625923
    2. 'i' → logprob: -6.752647399902344
    3. ' r' → logprob: -7.502647399902344
    4. '(r' → logprob: -7.502647399902344
    5. '(i' → logprob: -9.002647399902344
    6. '   ' → logprob: -9.002647399902344
    7. '((' → logprob: -10.252647399902344
    8. 'j' → logprob: -10.502647399902344
    9. ' ' → logprob: -11.252647399902344
    10. '(' → logprob: -11.252647399902344

Token 616: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.14211983978748322
    2. '<' → logprob: -2.142119884490967
    3. '<i' → logprob: -4.267119884490967
    4. '<len' → logprob: -7.267119884490967
    5. '<n' → logprob: -8.892119407653809
    6. '<N' → logprob: -10.392119407653809
    7. '<size' → logprob: -10.392119407653809
    8. '<int' → logprob: -10.642119407653809
    9. ' ' → logprob: -11.017119407653809
    10. '<I' → logprob: -11.142119407653809

Token 617: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00026205103495158255
    2. ' i' → logprob: -8.250262260437012
    3. '   ' → logprob: -14.625262260437012
    4. ' ' → logprob: -15.375262260437012
    5. '	i' → logprob: -17.250261306762695
    6. '
' → logprob: -17.500261306762695
    7. '(i' → logprob: -17.875261306762695
    8. '  ' → logprob: -18.000261306762695
    9. '       ' → logprob: -18.875261306762695
    10. 'N' → logprob: -18.875261306762695

Token 618: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.07889771461486816
    2. 'and' → logprob: -2.578897714614868
    3. '	and' → logprob: -12.828897476196289
    4. '       ' → logprob: -13.328897476196289
    5. '   ' → logprob: -13.828897476196289
    6. ' ' → logprob: -14.203897476196289
    7. '        ' → logprob: -14.703897476196289
    8. '           ' → logprob: -14.828897476196289
    9. '    ' → logprob: -15.453897476196289
    10. ' и' → logprob: -15.578897476196289

Token 619: ' ((' (ID: 3536)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.00044092073221690953
    2. ' ((' → logprob: -8.37544059753418
    3. '(((' → logprob: -9.25044059753418
    4. '   ' → logprob: -9.75044059753418
    5. '       ' → logprob: -10.87544059753418
    6. '(' → logprob: -11.87544059753418
    7. '           ' → logprob: -11.87544059753418
    8. '(j' → logprob: -12.50044059753418
    9. '     ' → logprob: -12.75044059753418
    10. '(t' → logprob: -12.87544059753418

Token 620: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0795464962720871
    2. '(j' → logprob: -2.5795464515686035
    3. ' (' → logprob: -8.079546928405762
    4. ' j' → logprob: -8.204546928405762
    5. '   ' → logprob: -10.204546928405762
    6. '((' → logprob: -11.454546928405762
    7. '[j' → logprob: -12.204546928405762
    8. '(' → logprob: -12.579546928405762
    9. '	j' → logprob: -12.579546928405762
    10. ' ' → logprob: -13.079546928405762

Token 621: ' >>' (ID: 6832)
  Prédit: '>>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.07057260721921921
    2. ' >>' → logprob: -2.6955726146698
    3. '>>(' → logprob: -7.570572376251221
    4. '>' → logprob: -9.445572853088379
    5. '   ' → logprob: -11.195572853088379
    6. ' ' → logprob: -11.570572853088379
    7. ')' → logprob: -13.070572853088379
    8. '>>
' → logprob: -13.195572853088379
    9. '       ' → logprob: -13.320572853088379
    10. '>>>' → logprob: -13.570572853088379

Token 622: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0006973040290176868
    2. '(' → logprob: -7.625697135925293
    3. ' (' → logprob: -8.875697135925293
    4. 'i' → logprob: -9.625697135925293
    5. '{i' → logprob: -14.000697135925293
    6. ')' → logprob: -14.250697135925293
    7. '((' → logprob: -14.375697135925293
    8. ')i' → logprob: -15.000697135925293
    9. '(I' → logprob: -15.750697135925293
    10. ' i' → logprob: -16.12569808959961

Token 623: 'i' (ID: 72)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.03480389714241028
    2. 'i' → logprob: -3.409803867340088
    3. ' (' → logprob: -7.534803867340088
    4. '(' → logprob: -7.534803867340088
    5. ' i' → logprob: -10.659804344177246
    6. ')i' → logprob: -10.909804344177246
    7. '{i' → logprob: -11.159804344177246
    8. ')' → logprob: -11.784804344177246
    9. '   ' → logprob: -12.159804344177246
    10. '[i' → logprob: -12.784804344177246

Token 624: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.03243850916624069
    2. '1' → logprob: -3.7824385166168213
    3. 'r' → logprob: -5.157438278198242
    4. ' -' → logprob: -5.907438278198242
    5. '-r' → logprob: -7.532438278198242
    6. ')' → logprob: -9.657438278198242
    7. ' ' → logprob: -10.282438278198242
    8. '   ' → logprob: -11.157438278198242
    9. ' r' → logprob: -11.282438278198242
    10. '           ' → logprob: -12.657438278198242

Token 625: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0034748632460832596
    2. 'r' → logprob: -6.003474712371826
    3. '(r' → logprob: -7.503474712371826
    4. '(' → logprob: -7.753474712371826
    5. '   ' → logprob: -12.003475189208984
    6. ' ' → logprob: -12.503475189208984
    7. ' (' → logprob: -13.003475189208984
    8. '(i' → logprob: -13.253475189208984
    9. '
' → logprob: -13.503475189208984
    10. ' r' → logprob: -14.253475189208984

Token 626: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.012102236971259117
    2. '(' → logprob: -4.762102127075195
    3. '(r' → logprob: -6.012102127075195
    4. 'r' → logprob: -6.887102127075195
    5. ' (' → logprob: -12.637102127075195
    6. '(i' → logprob: -13.262102127075195
    7. '
' → logprob: -13.262102127075195
    8. '   ' → logprob: -13.762102127075195
    9. ' ' → logprob: -13.762102127075195
    10. ' r' → logprob: -15.262102127075195

Token 627: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0392569936811924
    2. '-r' → logprob: -3.789257049560547
    3. '-' → logprob: -4.414257049560547
    4. ' -' → logprob: -5.664257049560547
    5. 'r' → logprob: -8.539257049560547
    6. ')-' → logprob: -10.414257049560547
    7. '-)' → logprob: -10.664257049560547
    8. '   ' → logprob: -10.914257049560547
    9. ' )' → logprob: -11.539257049560547
    10. '))' → logprob: -11.789257049560547

Token 628: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.9027791495318525e-05
    2. ' r' → logprob: -10.875019073486328
    3. '	r' → logprob: -18.125019073486328
    4. '_r' → logprob: -19.375019073486328
    5. ')' → logprob: -19.750019073486328
    6. ' ' → logprob: -20.000019073486328
    7. '   ' → logprob: -20.250019073486328
    8. '1' → logprob: -20.250019073486328
    9. '(r' → logprob: -20.250019073486328
    10. '```' → logprob: -21.125019073486328

Token 629: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006581080378964543
    2. '))' → logprob: -7.37565803527832
    3. ' )' → logprob: -10.62565803527832
    4. ')&' → logprob: -11.87565803527832
    5. '])' → logprob: -16.50065803527832
    6. '})' → logprob: -17.00065803527832
    7. '')' → logprob: -17.37565803527832
    8. '")' → logprob: -17.50065803527832
    9. '())' → logprob: -17.50065803527832
    10. '`)' → logprob: -17.75065803527832

Token 630: ' &' (ID: 827)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3638993203639984
    2. '==' → logprob: -1.3638993501663208
    3. ' ==' → logprob: -3.6138992309570312
    4. '&' → logprob: -4.488899230957031
    5. ')==' → logprob: -4.613899230957031
    6. ' &' → logprob: -7.488899230957031
    7. ' )' → logprob: -7.738899230957031
    8. '=' → logprob: -8.988899230957031
    9. ')&' → logprob: -9.238899230957031
    10. ' ' → logprob: -11.238899230957031

Token 631: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013484497321769595
    2. ' ' → logprob: -6.626348495483398
    3. 't' → logprob: -10.751348495483398
    4. ' t' → logprob: -14.376348495483398
    5. '   ' → logprob: -14.876348495483398
    6. '  ' → logprob: -17.1263484954834
    7. '`' → logprob: -17.7513484954834
    8. '255' → logprob: -17.7513484954834
    9. '```' → logprob: -18.1263484954834
    10. '`t' → logprob: -18.2513484954834

Token 632: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002478694950696081
    2. 't' → logprob: -8.375247955322266
    3. ' ' → logprob: -11.000247955322266
    4. ' t' → logprob: -15.625247955322266
    5. '   ' → logprob: -16.125247955322266
    6. '(' → logprob: -16.375247955322266
    7. '`t' → logprob: -16.375247955322266
    8. '255' → logprob: -16.500247955322266
    9. '`' → logprob: -17.375247955322266
    10. '  ' → logprob: -17.875247955322266

Token 633: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0012182132340967655
    2. ')==' → logprob: -6.751218318939209
    3. '==' → logprob: -10.25121784210205
    4. ' )' → logprob: -11.50121784210205
    5. ' ==' → logprob: -13.87621784210205
    6. '())' → logprob: -14.12621784210205
    7. '）' → logprob: -15.37621784210205
    8. '))' → logprob: -15.87621784210205
    9. '=' → logprob: -15.87621784210205
    10. '()' → logprob: -16.626218795776367

Token 634: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.00436935992911458
    2. ' ==' → logprob: -5.504369258880615
    3. '=' → logprob: -8.504369735717773
    4. ')==' → logprob: -9.754369735717773
    5. ')' → logprob: -11.129369735717773
    6. '==
' → logprob: -11.254369735717773
    7. ']==' → logprob: -13.504369735717773
    8. '===' → logprob: -14.379369735717773
    9. '()==' → logprob: -14.879369735717773
    10. '           ' → logprob: -16.629369735717773

Token 635: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.003177952254191041
    2. ' t' → logprob: -5.753178119659424
    3. '	t' → logprob: -16.128177642822266
    4. ' ' → logprob: -17.003177642822266
    5. '`t' → logprob: -17.128177642822266
    6. '   ' → logprob: -18.003177642822266
    7. '(t' → logprob: -19.128177642822266
    8. ' ' → logprob: -19.753177642822266
    9. '
' → logprob: -20.003177642822266
    10. '_t' → logprob: -20.128177642822266

Token 636: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.36019250750541687
    2. ':
' → logprob: -1.2351925373077393
    3. '       ' → logprob: -5.11019229888916
    4. '           ' → logprob: -5.23519229888916
    5. '):
' → logprob: -9.11019229888916
    6. '   ' → logprob: -9.86019229888916
    7. 'r' → logprob: -9.98519229888916
    8. '):' → logprob: -10.61019229888916
    9. ' and' → logprob: -10.98519229888916
    10. '```' → logprob: -11.48519229888916

Token 637: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10568312555551529
    2. '       ' → logprob: -2.3556830883026123
    3. 'r' → logprob: -5.980683326721191
    4. '   ' → logprob: -6.980683326721191
    5. '```' → logprob: -6.980683326721191
    6. '
' → logprob: -7.980683326721191
    7. ' r' → logprob: -8.230683326721191
    8. '               ' → logprob: -8.355683326721191
    9. '            
' → logprob: -9.730683326721191
    10. '	       ' → logprob: -10.230683326721191

Token 638: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.00459282286465168
    2. '           ' → logprob: -5.5045928955078125
    3. ' r' → logprob: -7.7545928955078125
    4. '               ' → logprob: -10.004592895507812
    5. '   ' → logprob: -10.504592895507812
    6. '       ' → logprob: -11.504592895507812
    7. '	r' → logprob: -13.254592895507812
    8. '		' → logprob: -15.254592895507812
    9. '                   ' → logprob: -15.379592895507812
    10. '++' → logprob: -15.629592895507812

Token 639: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.005239564459770918
    2. ' +=' → logprob: -5.255239486694336
    3. '+' → logprob: -12.255239486694336
    4. ']+=' → logprob: -14.880239486694336
    5. '   ' → logprob: -15.005239486694336
    6. '=' → logprob: -15.005239486694336
    7. '+='' → logprob: -18.380239486694336
    8. '++' → logprob: -18.755239486694336
    9. '+="' → logprob: -19.380239486694336
    10. '```' → logprob: -20.005239486694336

Token 640: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -11.125015258789062
    3. '```' → logprob: -19.125015258789062
    4. '   ' → logprob: -20.000015258789062
    5. '۱' → logprob: -21.000015258789062
    6. '<|end|>' → logprob: -21.500015258789062
    7. '0' → logprob: -21.562515258789062
    8. '１' → logprob: -21.687515258789062
    9. ' ' → logprob: -22.000015258789062
    10. '' → logprob: -22.312515258789062

Token 641: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '```' → logprob: -19.750001907348633
    4. '   ' → logprob: -20.750001907348633
    5. '  ' → logprob: -22.375001907348633
    6. '１' → logprob: -22.375001907348633
    7. '0' → logprob: -22.375001907348633
    8. '۱' → logprob: -22.437501907348633
    9. '
' → logprob: -22.875001907348633
    10. '`' → logprob: -23.062501907348633

Token 642: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5459690093994141
    2. '<|end|>' → logprob: -0.9209690093994141
    3. '
' → logprob: -4.045969009399414
    4. '        
' → logprob: -6.295969009399414
    5. '<|end|>' → logprob: -6.420969009399414
    6. ')' → logprob: -8.170969009399414
    7. '#' → logprob: -8.670969009399414
    8. '   ' → logprob: -8.795969009399414
    9. ',' → logprob: -9.170969009399414
    10. ' ' → logprob: -9.295969009399414

Token 643: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004659030120819807
    2. '<|end|>' → logprob: -6.504659175872803
    3. '        
' → logprob: -6.754659175872803
    4. '
' → logprob: -7.504659175872803
    5. ' f' → logprob: -7.754659175872803
    6. 'f' → logprob: -7.879659175872803
    7. '   ' → logprob: -9.129658699035645
    8. ' if' → logprob: -9.254658699035645
    9. '           ' → logprob: -9.754658699035645
    10. '#' → logprob: -9.754658699035645

Token 644: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5863108038902283
    2. 'f' → logprob: -0.8363108038902283
    3. ' f' → logprob: -4.586310863494873
    4. '	f' → logprob: -10.461310386657715
    5. 'if' → logprob: -10.586310386657715
    6. '   ' → logprob: -10.961310386657715
    7. '        
' → logprob: -11.711310386657715
    8. '
' → logprob: -11.961310386657715
    9. '```' → logprob: -11.961310386657715
    10. 'for' → logprob: -12.086310386657715

Token 645: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.002238874090835452
    2. 'if' → logprob: -6.127238750457764
    3. '       ' → logprob: -10.502239227294922
    4. ' f' → logprob: -11.877239227294922
    5. 'for' → logprob: -12.002239227294922
    6. '   ' → logprob: -12.002239227294922
    7. '#' → logprob: -12.877239227294922
    8. '           ' → logprob: -13.377239227294922
    9. '```' → logprob: -14.002239227294922
    10. ' if' → logprob: -14.627239227294922

Token 646: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.704273118884885e-07
    2. '   ' → logprob: -15.875000953674316
    3. ' [' → logprob: -15.875000953674316
    4. 'i' → logprob: -16.5
    5. '[' → logprob: -16.875
    6. '```' → logprob: -17.25
    7. '
' → logprob: -17.25
    8. '[f' → logprob: -17.375
    9. '[j' → logprob: -17.5
    10. '[I' → logprob: -17.625

Token 647: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.001433324534446001
    2. '[i' → logprob: -7.001433372497559
    3. '[j' → logprob: -7.626433372497559
    4. ']' → logprob: -10.751433372497559
    5. '   ' → logprob: -12.501433372497559
    6. '[' → logprob: -12.626433372497559
    7. ' ][' → logprob: -12.751433372497559
    8. '"][' → logprob: -14.876433372497559
    9. '```' → logprob: -15.126433372497559
    10. ')[' → logprob: -15.126433372497559

Token 648: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.6240566083070007e-06
    2. ' j' → logprob: -13.625001907348633
    3. '[j' → logprob: -15.500001907348633
    4. '   ' → logprob: -16.625001907348633
    5. '	j' → logprob: -17.375001907348633
    6. '           ' → logprob: -18.000001907348633
    7. '```' → logprob: -18.125001907348633
    8. '       ' → logprob: -18.125001907348633
    9. ']' → logprob: -18.625001907348633
    10. '
' → logprob: -18.875001907348633

Token 649: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.008872301317751408
    2. ' =' → logprob: -4.7588725090026855
    3. ']' → logprob: -8.633872032165527
    4. ']=' → logprob: -9.508872032165527
    5. '[' → logprob: -13.008872032165527
    6. '[r' → logprob: -13.883872032165527
    7. '   ' → logprob: -14.758872032165527
    8. '[i' → logprob: -15.008872032165527
    9. '[j' → logprob: -15.008872032165527
    10. '=r' → logprob: -15.008872032165527

Token 650: ' reçoit' (ID: 151051)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0019286326132714748
    2. ' =' → logprob: -6.251928806304932
    3. '   ' → logprob: -17.501928329467773
    4. '[' → logprob: -17.501928329467773
    5. '+=' → logprob: -18.001928329467773
    6. '=r' → logprob: -18.126928329467773
    7. '=f' → logprob: -18.751928329467773
    8. '=max' → logprob: -18.876928329467773
    9. '[i' → logprob: -19.126928329467773
    10. '=i' → logprob: -19.251928329467773

Token 651: ' la' (ID: 557)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.747814349073451e-05
    2. ' r' → logprob: -11.000017166137695
    3. 'max' → logprob: -15.000017166137695
    4. '   ' → logprob: -15.000017166137695
    5. ' max' → logprob: -19.000017166137695
    6. '	r' → logprob: -20.250017166137695
    7. '
' → logprob: -20.875017166137695
    8. '       ' → logprob: -20.875017166137695
    9. ' ' → logprob: -22.125017166137695
    10. '
' → logprob: -22.125017166137695

Token 652: ' longueur' (ID: 104613)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.002214250387623906
    2. 'max' → logprob: -6.127214431762695
    3. 'f' → logprob: -11.252214431762695
    4. ' r' → logprob: -12.252214431762695
    5. ' max' → logprob: -12.502214431762695
    6. '   ' → logprob: -12.627214431762695
    7. 'maximum' → logprob: -13.377214431762695
    8. '0' → logprob: -14.627214431762695
    9. '```' → logprob: -15.002214431762695
    10. 'min' → logprob: -15.002214431762695

Token 653: ' de' (ID: 334)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.10061196237802505
    2. ' =' → logprob: -3.350611925125122
    3. '=' → logprob: -3.475611925125122
    4. ' de' → logprob: -4.725612163543701
    5. 'f' → logprob: -4.975612163543701
    6. 'de' → logprob: -5.600612163543701
    7. '   ' → logprob: -5.975612163543701
    8. ' r' → logprob: -6.100612163543701
    9. '[r' → logprob: -6.975612163543701
    10. '       ' → logprob: -7.100612163543701

Token 654: ' ce' (ID: 2357)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0028072523418813944
    2. ' r' → logprob: -5.877807140350342
    3. ' la' → logprob: -13.3778076171875
    4. 'l' → logprob: -14.6278076171875
    5. ' ' → logprob: -16.0028076171875
    6. 'la' → logprob: -16.0028076171875
    7. 'f' → logprob: -16.6278076171875
    8. '	r' → logprob: -17.2528076171875
    9. '```' → logprob: -17.3778076171875
    10. '
' → logprob: -17.5028076171875

Token 655: ' pré' (ID: 9424)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0014586892211809754
    2. 'run' → logprob: -7.876458644866943
    3. 'segment' → logprob: -8.376459121704102
    4. ' r' → logprob: -8.501459121704102
    5. 'plus' → logprob: -8.876459121704102
    6. 'prefix' → logprob: -10.126459121704102
    7. 'max' → logprob: -10.126459121704102
    8. 'pré' → logprob: -10.126459121704102
    9. 'prem' → logprob: -10.251459121704102
    10. '+' → logprob: -10.376459121704102

Token 656: 'fix' (ID: 11853)
  Prédit: 'fix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fix' → logprob: -9.782141569303349e-05
    2. 'f' → logprob: -9.75009822845459
    3. 'fi' → logprob: -11.00009822845459
    4. '...' → logprob: -12.62509822845459
    5. '_fix' → logprob: -13.12509822845459
    6. '{' → logprob: -13.25009822845459
    7. '[' → logprob: -13.37509822845459
    8. 'face' → logprob: -13.75009822845459
    9. '

' → logprob: -14.00009822845459
    10. '#' → logprob: -14.00009822845459

Token 657: 'e' (ID: 68)
  Prédit: 'fix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fix' → logprob: -0.37128323316574097
    2. 'f' → logprob: -1.8712832927703857
    3. 'd' → logprob: -3.1212832927703857
    4. 'x' → logprob: -3.6212832927703857
    5. '   ' → logprob: -4.246283054351807
    6. 'de' → logprob: -4.371283054351807
    7. 'c' → logprob: -4.371283054351807
    8. 'r' → logprob: -4.621283054351807
    9. 'fi' → logprob: -4.871283054351807
    10. '[' → logprob: -5.371283054351807

Token 658: ' homog' (ID: 143289)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.03977309912443161
    2. '       ' → logprob: -4.414772987365723
    3. '=' → logprob: -4.664772987365723
    4. '[r' → logprob: -4.914772987365723
    5. ' =' → logprob: -5.414772987365723
    6. '[i' → logprob: -6.039772987365723
    7. '   ' → logprob: -6.914772987365723
    8. 'f' → logprob: -7.414772987365723
    9. '
' → logprob: -7.414772987365723
    10. '           ' → logprob: -8.539772987365723

Token 659: 'ène' (ID: 22902)
  Prédit: 'og'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'og' → logprob: -0.9148898124694824
    2. 'r' → logprob: -1.1648898124694824
    3. 'f' → logprob: -2.1648898124694824
    4. 'rog' → logprob: -2.5398898124694824
    5. 'g' → logprob: -4.289889812469482
    6. 'n' → logprob: -4.664889812469482
    7. 'd' → logprob: -5.164889812469482
    8. 'en' → logprob: -5.289889812469482
    9. 'ogene' → logprob: -5.289889812469482
    10. 'o' → logprob: -5.414889812469482

Token 660: '.
' (ID: 558)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.274542897939682
    2. '=' → logprob: -1.5245429277420044
    3. '       ' → logprob: -4.274542808532715
    4. '
' → logprob: -5.024542808532715
    5. 'f' → logprob: -7.024542808532715
    6. '<|end|>' → logprob: -8.649542808532715
    7. 'r' → logprob: -9.149542808532715
    8. ']' → logprob: -9.149542808532715
    9. '   ' → logprob: -9.399542808532715
    10. '        
' → logprob: -9.399542808532715

Token 661: '       ' (ID: 309)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.006725906860083342
    2. ' f' → logprob: -5.881725788116455
    3. '       ' → logprob: -6.006725788116455
    4. '=' → logprob: -6.631725788116455
    5. ' =' → logprob: -9.506726264953613
    6. '```' → logprob: -10.756726264953613
    7. '   ' → logprob: -11.756726264953613
    8. '        
' → logprob: -11.756726264953613
    9. '
' → logprob: -12.006726264953613
    10. '	f' → logprob: -12.381726264953613

Token 662: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' (adapté à ' f') → logprob: -1.676292231422849e-05
    2. ' f' → logprob: -11.250017166137695
    3. '       ' → logprob: -12.625017166137695
    4. '=' → logprob: -15.250017166137695
    5. '```' → logprob: -15.875017166137695
    6. ' =' → logprob: -17.250017166137695
    7. '
' → logprob: -17.750017166137695
    8. '_f' → logprob: -18.250017166137695
    9. '=f' → logprob: -18.500017166137695
    10. '   ' → logprob: -19.125017166137695

Token 663: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.0280383548888494e-06
    2. '[' → logprob: -15.000000953674316
    3. '[I' → logprob: -15.125000953674316
    4. '][' → logprob: -16.125001907348633
    5. ' [' → logprob: -16.125001907348633
    6. '```' → logprob: -16.500001907348633
    7. '
' → logprob: -17.875001907348633
    8. '\[' → logprob: -18.250001907348633
    9. '[f' → logprob: -18.500001907348633
    10. '   ' → logprob: -18.625001907348633

Token 664: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.008763829246163368
    2. '[i' → logprob: -4.758763790130615
    3. ']' → logprob: -9.008764266967773
    4. ' ][' → logprob: -11.258764266967773
    5. '[' → logprob: -12.383764266967773
    6. '   ' → logprob: -12.508764266967773
    7. '[I' → logprob: -12.883764266967773
    8. '```' → logprob: -14.008764266967773
    9. ']][' → logprob: -14.258764266967773
    10. 'i' → logprob: -15.133764266967773

Token 665: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.0280383548888494e-06
    2. ' j' → logprob: -14.750000953674316
    3. '	j' → logprob: -15.750000953674316
    4. '   ' → logprob: -16.125001907348633
    5. '```' → logprob: -16.250001907348633
    6. '][' → logprob: -16.625001907348633
    7. ' ' → logprob: -16.750001907348633
    8. '[j' → logprob: -17.375001907348633
    9. ']' → logprob: -17.875001907348633
    10. '$j' → logprob: -18.250001907348633

Token 666: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0015099779702723026
    2. ']=' → logprob: -6.501510143280029
    3. '=' → logprob: -11.876509666442871
    4. '[r' → logprob: -14.751509666442871
    5. '[' → logprob: -15.876509666442871
    6. 'f' → logprob: -16.501510620117188
    7. ' ]' → logprob: -16.751510620117188
    8. ')' → logprob: -17.751510620117188
    9. '=r' → logprob: -17.751510620117188
    10. '[i' → logprob: -18.001510620117188

Token 667: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -5.836499985889532e-05
    2. ' =' → logprob: -9.7500581741333
    3. '=r' → logprob: -17.875059127807617
    4. '=f' → logprob: -18.375059127807617
    5. '+=' → logprob: -19.250059127807617
    6. '.=' → logprob: -19.625059127807617
    7. '=

' → logprob: -20.875059127807617
    8. '=i' → logprob: -21.375059127807617
    9. '＝' → logprob: -21.375059127807617
    10. '=
' → logprob: -21.375059127807617

Token 668: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: 0.0
    2. ' r' → logprob: -17.875
    3. 'max' → logprob: -19.875
    4. '	r' → logprob: -22.125
    5. '   ' → logprob: -22.5
    6. ' ' → logprob: -25.75
    7. '
' → logprob: -25.875
    8. '_r' → logprob: -26.25
    9. '```' → logprob: -26.375
    10. '­r' → logprob: -27.125

Token 669: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 670: '#' (ID: 2)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.4146392047405243
    2. 'for' → logprob: -1.5396392345428467
    3. '#' → logprob: -2.1646392345428467
    4. '<|end|>' → logprob: -5.164638996124268
    5. ')' → logprob: -6.289638996124268
    6. ' for' → logprob: -6.914638996124268
    7. '
' → logprob: -7.789638996124268
    8. '``' → logprob: -8.789639472961426
    9. 'pass' → logprob: -9.039639472961426
    10. 'f' → logprob: -9.289639472961426

Token 671: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5794720649719238
    2. 'answer' → logprob: -2.204472064971924
    3. '#' → logprob: -2.329472064971924
    4. 'res' → logprob: -2.579472064971924
    5. 'result' → logprob: -2.704472064971924
    6. 'ans' → logprob: -2.704472064971924
    7. 'max' → logprob: -4.204472064971924
    8. 'total' → logprob: -6.204472064971924
    9. 'best' → logprob: -6.454472064971924
    10. 'answers' → logprob: -7.204472064971924

Token 672: ' cherche' (ID: 52345)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.056495655328035355
    2. '#' → logprob: -3.6814956665039062
    3. ' for' → logprob: -3.8064956665039062
    4. ' =' → logprob: -5.181495666503906
    5. '=' → logprob: -7.056495666503906
    6. ' #' → logprob: -7.306495666503906
    7. '
' → logprob: -8.431495666503906
    8. 'max' → logprob: -10.556495666503906
    9. '...' → logprob: -11.056495666503906
    10. 'or' → logprob: -11.056495666503906

Token 673: ' à' (ID: 1221)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.18645019829273224
    2. '#' → logprob: -1.8114502429962158
    3. ' for' → logprob: -6.186450004577637
    4. '=' → logprob: -6.561450004577637
    5. 'max' → logprob: -6.686450004577637
    6. ' =' → logprob: -8.061450004577637
    7. '_' → logprob: -8.186450004577637
    8. 'à' → logprob: -8.436450004577637
    9. ' #' → logprob: -8.936450004577637
    10. 'a' → logprob: -8.936450004577637

Token 674: ' identifier' (ID: 24577)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.035276636481285095
    2. 'max' → logprob: -3.9102766513824463
    3. '#' → logprob: -4.785276412963867
    4. 'min' → logprob: -5.660276412963867
    5. 'tr' → logprob: -6.535276412963867
    6. '```' → logprob: -8.535276412963867
    7. 'pour' → logprob: -9.035276412963867
    8. 'i' → logprob: -9.160276412963867
    9. ' for' → logprob: -9.285276412963867
    10. 'continue' → logprob: -9.410276412963867

Token 675: ' le' (ID: 505)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'les' → logprob: -1.1156435012817383
    2. 'for' → logprob: -1.7406435012817383
    3. 'la' → logprob: -1.7406435012817383
    4. 'le' → logprob: -1.9906435012817383
    5. 'une' → logprob: -2.7406435012817383
    6. '#' → logprob: -3.1156435012817383
    7. 'max' → logprob: -3.8656435012817383
    8. 'un' → logprob: -4.240643501281738
    9. 'l' → logprob: -4.240643501281738
    10. 'the' → logprob: -4.365643501281738

Token 676: ' plus' (ID: 2932)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.5735502243041992
    2. 'plus' → logprob: -1.5735502243041992
    3. 'max' → logprob: -1.6985502243041992
    4. 'maximum' → logprob: -1.8235502243041992
    5. 'long' → logprob: -2.698550224304199
    6. 'largest' → logprob: -2.823550224304199
    7. '#' → logprob: -3.198550224304199
    8. 'best' → logprob: -4.198550224304199
    9. '```' → logprob: -4.198550224304199
    10. 'me' → logprob: -4.573550224304199

Token 677: ' court' (ID: 10314)
  Prédit: 'long'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'long' → logprob: -0.011447775177657604
    2. 'grand' → logprob: -4.511447906494141
    3. '#' → logprob: -8.38644790649414
    4. ' long' → logprob: -9.63644790649414
    5. '```' → logprob: -10.01144790649414
    6. 'large' → logprob: -10.88644790649414
    7. 'court' → logprob: -11.63644790649414
    8. 'gr' → logprob: -12.26144790649414
    9. 'lange' → logprob: -12.38644790649414
    10. 'cour' → logprob: -13.01144790649414

Token 678: ' pré' (ID: 9424)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.5498976707458496
    2. 'interval' → logprob: -1.7998976707458496
    3. 'sequence' → logprob: -1.9248976707458496
    4. 's' → logprob: -1.9248976707458496
    5. 'k' → logprob: -2.4248976707458496
    6. 'segment' → logprob: -3.0498976707458496
    7. 'm' → logprob: -3.5498976707458496
    8. 'prefix' → logprob: -3.9248976707458496
    9. 'for' → logprob: -4.29989767074585
    10. 'sub' → logprob: -4.54989767074585

Token 679: 'fix' (ID: 11853)
  Prédit: 'fix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fix' → logprob: -0.00033522743615321815
    2. 'c' → logprob: -9.000335693359375
    3. 'cis' → logprob: -9.375335693359375
    4. 'f' → logprob: -9.750335693359375
    5. '#' → logprob: -10.875335693359375
    6. '```' → logprob: -11.000335693359375
    7. '``' → logprob: -11.375335693359375
    8. '...' → logprob: -12.875335693359375
    9. 'dict' → logprob: -13.375335693359375
    10. 'FIX' → logprob: -13.625335693359375

Token 680: 'e' (ID: 68)
  Prédit: 'fix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fix' → logprob: -0.0008996733813546598
    2. 'f' → logprob: -7.875899791717529
    3. 'x' → logprob: -8.500899314880371
    4. 'fi' → logprob: -9.500899314880371
    5. 'c' → logprob: -9.875899314880371
    6. ' fixe' → logprob: -10.125899314880371
    7. 'de' → logprob: -10.375899314880371
    8. '#' → logprob: -10.625899314880371
    9. '```' → logprob: -10.750899314880371
    10. 'ixe' → logprob: -10.750899314880371

Token 681: ' dont' (ID: 11562)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.065035343170166
    2. 'possible' → logprob: -1.190035343170166
    3. 'valid' → logprob: -1.690035343170166
    4. 'i' → logprob: -2.940035343170166
    5. '#' → logprob: -4.190035343170166
    6. 'minimum' → logprob: -4.190035343170166
    7. 'j' → logprob: -4.565035343170166
    8. 'min' → logprob: -4.565035343170166
    9. 'u' → logprob: -4.690035343170166
    10. 'optimal' → logprob: -5.065035343170166

Token 682: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.27359986305236816
    2. 'f' → logprob: -2.023599863052368
    3. 'l' → logprob: -2.898599863052368
    4. ' la' → logprob: -3.773599863052368
    5. 'len' → logprob: -5.273599624633789
    6. 'd' → logprob: -5.648599624633789
    7. 'une' → logprob: -5.773599624633789
    8. '#' → logprob: -6.023599624633789
    9. 'le' → logprob: -6.023599624633789
    10. 't' → logprob: -6.148599624633789

Token 683: ' somme' (ID: 64484)
  Prédit: 'long'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'long' → logprob: -0.5490990877151489
    2. 'val' → logprob: -1.174099087715149
    3. 's' → logprob: -2.7990989685058594
    4. ' longueur' → logprob: -3.6740989685058594
    5. 'f' → logprob: -4.549098968505859
    6. 'tail' → logprob: -5.174098968505859
    7. 'length' → logprob: -5.924098968505859
    8. 'distance' → logprob: -6.424098968505859
    9. 'fonction' → logprob: -6.424098968505859
    10. 'som' → logprob: -7.299098968505859

Token 684: ' atteint' (ID: 104876)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 685: ' au' (ID: 2791)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.089981310069561
    2. ' K' → logprob: -2.5899813175201416
    3. 'au' → logprob: -4.9649810791015625
    4. ' au' → logprob: -6.4649810791015625
    5. 'D' → logprob: -7.4649810791015625
    6. '1' → logprob: -8.214981079101562
    7. ' or' → logprob: -8.214981079101562
    8. 'ou' → logprob: -8.589981079101562
    9. ' ou' → logprob: -8.589981079101562
    10. ' ' → logprob: -8.714981079101562

Token 686: ' moins' (ID: 15924)
  Prédit: 'moins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'moins' → logprob: -0.00376314390450716
    2. 'mo' → logprob: -6.378763198852539
    3. ' moins' → logprob: -6.378763198852539
    4. 'least' → logprob: -8.503763198852539
    5. 'menos' → logprob: -9.503763198852539
    6. 'm' → logprob: -10.253763198852539
    7. 'less' → logprob: -11.253763198852539
    8. 'plus' → logprob: -11.628763198852539
    9. 'minimum' → logprob: -12.003763198852539
    10. '-mo' → logprob: -12.253763198852539

Token 687: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.00038598617538809776
    2. ' K' → logprob: -7.875385761260986
    3. '1' → logprob: -12.375386238098145
    4. 'N' → logprob: -14.375386238098145
    5. ' ' → logprob: -14.875386238098145
    6. 'k' → logprob: -15.625386238098145
    7. '100' → logprob: -16.125385284423828
    8. '=' → logprob: -16.125385284423828
    9. '   ' → logprob: -16.250385284423828
    10. '0' → logprob: -16.375385284423828

Token 688: '.
' (ID: 558)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0655888319015503
    2. 'answer' → logprob: -1.8155888319015503
    3. 'res' → logprob: -2.19058895111084
    4. 'i' → logprob: -2.44058895111084
    5. 'ans' → logprob: -2.69058895111084
    6. 'sum' → logprob: -3.19058895111084
    7. 'prefix' → logprob: -3.19058895111084
    8. 'found' → logprob: -3.31558895111084
    9. 'result' → logprob: -3.56558895111084
    10. 's' → logprob: -3.94058895111084

Token 689: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7610387802124023
    2. 'res' → logprob: -1.8860387802124023
    3. 'ans' → logprob: -2.2610387802124023
    4. 'answer' → logprob: -2.5110387802124023
    5. 'prefix' → logprob: -2.6360387802124023
    6. 'result' → logprob: -2.7610387802124023
    7. 'min' → logprob: -3.7610387802124023
    8. 'found' → logprob: -4.386038780212402
    9. 'sum' → logprob: -5.011038780212402
    10. 'dp' → logprob: -5.011038780212402

Token 690: ' On' (ID: 2160)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.5679072141647339
    2. 'answer' → logprob: -1.5679072141647339
    3. 'result' → logprob: -1.8179072141647339
    4. 'ans' → logprob: -1.8179072141647339
    5. 'for' → logprob: -1.9429072141647339
    6. 'prefix' → logprob: -2.9429073333740234
    7. 'found' → logprob: -3.8179073333740234
    8. 'min' → logprob: -3.8179073333740234
    9. 'best' → logprob: -5.192907333374023
    10. 's' → logprob: -5.817907333374023

Token 691: ' it' (ID: 480)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1643809825181961
    2. '=' → logprob: -3.0393810272216797
    3. ' =' → logprob: -3.1643810272216797
    4. ' for' → logprob: -3.5393810272216797
    5. 'sum' → logprob: -4.53938102722168
    6. 's' → logprob: -5.41438102722168
    7. 'i' → logprob: -5.53938102722168
    8. 'found' → logprob: -6.16438102722168
    9. '#' → logprob: -6.28938102722168
    10. 'res' → logprob: -6.41438102722168

Token 692: 'ère' (ID: 4346)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.002040817867964506
    2. 'i' → logprob: -7.502040863037109
    3. ' =' → logprob: -8.00204086303711
    4. 'for' → logprob: -8.75204086303711
    5. '=i' → logprob: -8.75204086303711
    6. 'é' → logprob: -9.00204086303711
    7. 'f' → logprob: -9.00204086303711
    8. '#' → logprob: -9.50204086303711
    9. 'érieur' → logprob: -9.50204086303711
    10. 'ér' → logprob: -9.87704086303711

Token 693: ' sur' (ID: 1512)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.021792713552713394
    2. ' for' → logprob: -4.271792888641357
    3. 'in' → logprob: -5.396792888641357
    4. ' in' → logprob: -6.896792888641357
    5. ' over' → logprob: -6.896792888641357
    6. 'i' → logprob: -8.2717924118042
    7. '=' → logprob: -8.3967924118042
    8. '   ' → logprob: -8.8967924118042
    9. 'over' → logprob: -9.1467924118042
    10. ' =' → logprob: -9.3967924118042

Token 694: ' tous' (ID: 10688)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.017039798200130463
    2. 'i' → logprob: -4.142039775848389
    3. ' range' → logprob: -7.017039775848389
    4. '_' → logprob: -9.517040252685547
    5. '```' → logprob: -11.767040252685547
    6. 'r' → logprob: -12.017040252685547
    7. 'D' → logprob: -12.392040252685547
    8. 'd' → logprob: -12.767040252685547
    9. '_range' → logprob: -13.267040252685547
    10. ' i' → logprob: -13.267040252685547

Token 695: ' les' (ID: 1341)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2849034070968628
    2. ' i' → logprob: -1.7849034070968628
    3. ' range' → logprob: -3.0349035263061523
    4. 'range' → logprob: -3.5349035263061523
    5. 'for' → logprob: -6.784903526306152
    6. '   ' → logprob: -7.784903526306152
    7. '_' → logprob: -7.909903526306152
    8. ' for' → logprob: -7.909903526306152
    9. '_i' → logprob: -8.909903526306152
    10. 'j' → logprob: -9.284903526306152

Token 696: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.008040240965783596
    2. 'range' → logprob: -5.133040428161621
    3. ' range' → logprob: -7.008040428161621
    4. 'for' → logprob: -7.508040428161621
    5. ' i' → logprob: -7.758040428161621
    6. 'j' → logprob: -9.383040428161621
    7. 'D' → logprob: -10.008040428161621
    8. '```' → logprob: -10.508040428161621
    9. ' for' → logprob: -10.633040428161621
    10. 'd' → logprob: -11.383040428161621

Token 697: ' de' (ID: 334)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3886576294898987
    2. 'in' → logprob: -1.138657569885254
    3. 'for' → logprob: -6.888657569885254
    4. ',' → logprob: -7.888657569885254
    5. 'range' → logprob: -9.388657569885254
    6. 'en' → logprob: -9.888657569885254
    7. ' en' → logprob: -10.138657569885254
    8. 'dans' → logprob: -10.513657569885254
    9. ')' → logprob: -10.763657569885254
    10. '
' → logprob: -11.013657569885254

Token 698: ' ' (ID: 220)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.001034714630804956
    2. ' range' → logprob: -6.876034736633301
    3. '1' → logprob: -14.0010347366333
    4. 'D' → logprob: -14.8760347366333
    5. '
' → logprob: -15.5010347366333
    6. '   ' → logprob: -16.001033782958984
    7. '(range' → logprob: -16.501033782958984
    8. '	range' → logprob: -16.501033782958984
    9. '```' → logprob: -17.001033782958984
    10. '0' → logprob: -17.126033782958984

Token 699: '0' (ID: 15)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00011784763046307489
    2. ' range' → logprob: -9.125118255615234
    3. 'D' → logprob: -12.125118255615234
    4. '1' → logprob: -13.250118255615234
    5. '
' → logprob: -14.750118255615234
    6. '   ' → logprob: -15.500118255615234
    7. 'd' → logprob: -15.625118255615234
    8. '```' → logprob: -15.750118255615234
    9. '(range' → logprob: -15.875118255615234
    10. '0' → logprob: -16.375118255615234

Token 700: ' à' (ID: 1221)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.3217383921146393
    2. ',' → logprob: -2.0717384815216064
    3. ' in' → logprob: -2.1967384815216064
    4. 'range' → logprob: -3.8217384815216064
    5. 'for' → logprob: -4.321738243103027
    6. ' range' → logprob: -7.196738243103027
    7. '
' → logprob: -7.446738243103027
    8. ',D' → logprob: -7.946738243103027
    9. 'import' → logprob: -8.571738243103027
    10. ')' → logprob: -8.696738243103027

Token 701: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.0006338051171042025
    2. 'N' → logprob: -7.750633716583252
    3. '(' → logprob: -9.37563419342041
    4. ' D' → logprob: -9.75063419342041
    5. '(D' → logprob: -9.87563419342041
    6. '1' → logprob: -12.62563419342041
    7. '(N' → logprob: -13.37563419342041
    8. ' ' → logprob: -14.25063419342041
    9. '2' → logprob: -14.37563419342041
    10. ' (' → logprob: -14.50063419342041

Token 702: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3297356367111206
    2. ':' → logprob: -1.4547356367111206
    3. '):' → logprob: -3.45473575592041
    4. ':
' → logprob: -4.95473575592041
    5. ' -' → logprob: -5.20473575592041
    6. '):
' → logprob: -5.82973575592041
    7. ')' → logprob: -8.82973575592041
    8. '
' → logprob: -9.95473575592041
    9. 'for' → logprob: -10.07973575592041
    10. '```' → logprob: -10.70473575592041

Token 703: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014794675633311272
    2. 'N' → logprob: -4.764794826507568
    3. '-' → logprob: -6.014794826507568
    4. 'D' → logprob: -6.764794826507568
    5. 'i' → logprob: -7.514794826507568
    6. '```' → logprob: -7.639794826507568
    7. 'M' → logprob: -7.764794826507568
    8. 'K' → logprob: -7.764794826507568
    9. '(' → logprob: -8.76479434967041
    10. ' ' → logprob: -9.26479434967041

Token 704: ' (' (ID: 350)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04847313091158867
    2. ':' → logprob: -3.1734731197357178
    3. ':
' → logprob: -5.923473358154297
    4. ' for' → logprob: -5.923473358154297
    5. 'range' → logprob: -10.298473358154297
    6. 'i' → logprob: -10.423473358154297
    7. '
' → logprob: -11.173473358154297
    8. ',' → logprob: -11.673473358154297
    9. 'sum' → logprob: -11.923473358154297
    10. 'in' → logprob: -12.673473358154297

Token 705: 'long' (ID: 8431)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.2503182590007782
    2. ')' → logprob: -2.6253182888031006
    3. ' range' → logprob: -3.2503182888031006
    4. ' D' → logprob: -3.3753182888031006
    5. ' for' → logprob: -3.5003182888031006
    6. 'for' → logprob: -3.6253182888031006
    7. 'range' → logprob: -4.7503180503845215
    8. '
' → logprob: -5.5003180503845215
    9. ' )' → logprob: -6.6253180503845215
    10. '):' → logprob: -6.7503180503845215

Token 706: 'ue' (ID: 466)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8975636959075928
    2. 'e' → logprob: -1.1475636959075928
    3. ')' → logprob: -2.6475636959075928
    4. '+' → logprob: -2.7725636959075928
    5. '   ' → logprob: -3.3975636959075928
    6. ' for' → logprob: -3.8975636959075928
    7. ']' → logprob: -3.8975636959075928
    8. '=' → logprob: -4.897563934326172
    9. 'u' → logprob: -4.897563934326172
    10. 'i' → logprob: -4.897563934326172

Token 707: 'urs' (ID: 1628)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.8830719590187073
    2. 'i' → logprob: -1.3830718994140625
    3. ')' → logprob: -1.5080718994140625
    4. '+' → logprob: -3.1330718994140625
    5. ' )' → logprob: -4.2580718994140625
    6. '=' → logprob: -4.2580718994140625
    7. ' =' → logprob: -4.3830718994140625
    8. 'r' → logprob: -5.2580718994140625
    9. 's' → logprob: -6.0080718994140625
    10. ' +=' → logprob: -6.1330718994140625

Token 708: ' de' (ID: 334)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.23233290016651154
    2. '+' → logprob: -1.9823329448699951
    3. '):
' → logprob: -3.482332944869995
    4. ')' → logprob: -4.107332706451416
    5. ' +' → logprob: -4.232332706451416
    6. ' ):' → logprob: -5.857332706451416
    7. '=' → logprob: -6.232332706451416
    8. ',' → logprob: -7.232332706451416
    9. ' =' → logprob: -7.357332706451416
    10. ':' → logprob: -8.357333183288574

Token 709: ' pré' (ID: 9424)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.12710164487361908
    2. 'd' → logprob: -3.0021016597747803
    3. 'i' → logprob: -3.0021016597747803
    4. 'range' → logprob: -4.002101421356201
    5. 'N' → logprob: -7.377101421356201
    6. ' range' → logprob: -8.12710189819336
    7. '```' → logprob: -8.62710189819336
    8. 'len' → logprob: -8.75210189819336
    9. ' D' → logprob: -9.12710189819336
    10. 'f' → logprob: -9.62710189819336

Token 710: 'fix' (ID: 11853)
  Prédit: 'fix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fix' → logprob: -0.0009037189302034676
    2. 'f' → logprob: -7.375903606414795
    3. 'd' → logprob: -9.500904083251953
    4. '```' → logprob: -9.625904083251953
    5. 'fi' → logprob: -10.375904083251953
    6. '#' → logprob: -10.750904083251953
    7. 'face' → logprob: -11.125904083251953
    8. '=' → logprob: -11.500904083251953
    9. 'Fix' → logprob: -12.000904083251953
    10. 's' → logprob: -12.125904083251953

Token 711: 'es' (ID: 268)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.05703560262918472
    2. 'fix' → logprob: -4.307035446166992
    3. 'ix' → logprob: -4.307035446166992
    4. 'ixe' → logprob: -4.682035446166992
    5. 'ixes' → logprob: -5.182035446166992
    6. 'f' → logprob: -5.682035446166992
    7. ')' → logprob: -5.807035446166992
    8. 's' → logprob: -6.307035446166992
    9. '```' → logprob: -6.557035446166992
    10. 'i' → logprob: -7.307035446166992

Token 712: ').
' (ID: 6294)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6392385959625244
    2. '):
' → logprob: -1.0142385959625244
    3. '+' → logprob: -2.2642385959625244
    4. ')' → logprob: -5.514238357543945
    5. ' +' → logprob: -6.889238357543945
    6. ':' → logprob: -8.139238357543945
    7. ':
' → logprob: -9.514238357543945
    8. ' ):' → logprob: -9.639238357543945
    9. ' ):
' → logprob: -9.889238357543945
    10. 'for' → logprob: -9.889238357543945

Token 713: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06698305904865265
    2. 'sum' → logprob: -3.5669829845428467
    3. 's' → logprob: -4.316983222961426
    4. 'prefix' → logprob: -4.316983222961426
    5. 'total' → logprob: -5.566983222961426
    6. ' for' → logprob: -5.941983222961426
    7. 'res' → logprob: -7.441983222961426
    8. 'i' → logprob: -7.566983222961426
    9. 'result' → logprob: -7.691983222961426
    10. 'ans' → logprob: -7.691983222961426

Token 714: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.004086355213075876
    2. ' i' → logprob: -5.504086494445801
    3. 'length' → logprob: -12.2540864944458
    4. '   ' → logprob: -14.0040864944458
    5. '```' → logprob: -14.6290864944458
    6. '	i' → logprob: -15.0040864944458
    7. 'prefix' → logprob: -15.0040864944458
    8. ' length' → logprob: -15.1290864944458
    9. '_i' → logprob: -15.6290864944458
    10. ' ' → logprob: -15.7540864944458

Token 715: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06198303773999214
    2. 'in' → logprob: -2.811983108520508
    3. ' ' → logprob: -12.186983108520508
    4. ',' → logprob: -12.811983108520508
    5. ')' → logprob: -13.186983108520508
    6. '	in' → logprob: -13.936983108520508
    7. 'In' → logprob: -14.061983108520508
    8. '0' → logprob: -14.436983108520508
    9. 'n' → logprob: -14.561983108520508
    10. '```' → logprob: -14.811983108520508

Token 716: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0024768433067947626
    2. ' range' → logprob: -6.002476692199707
    3. ' ' → logprob: -15.002476692199707
    4. '   ' → logprob: -15.127476692199707
    5. 'in' → logprob: -16.002477645874023
    6. '(range' → logprob: -16.377477645874023
    7. '
' → logprob: -16.502477645874023
    8. '```' → logprob: -17.002477645874023
    9. '

' → logprob: -17.252477645874023
    10. ')' → logprob: -17.502477645874023

Token 717: '(D' (ID: 9908)
  Prédit: '(D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(D' → logprob: -0.018366964533925056
    2. 'D' → logprob: -4.393366813659668
    3. 'range' → logprob: -5.643366813659668
    4. '(' → logprob: -6.518366813659668
    5. ' range' → logprob: -7.768366813659668
    6. ' D' → logprob: -9.518366813659668
    7. 'in' → logprob: -9.643366813659668
    8. '   ' → logprob: -9.643366813659668
    9. ')' → logprob: -9.768366813659668
    10. '0' → logprob: -10.143366813659668

Token 718: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.4319344162940979
    2. '):' → logprob: -1.6819343566894531
    3. '+' → logprob: -1.8069343566894531
    4. ' +' → logprob: -7.681934356689453
    5. '):
' → logprob: -9.556934356689453
    6. ')' → logprob: -11.181934356689453
    7. '   ' → logprob: -11.431934356689453
    8. ':' → logprob: -12.056934356689453
    9. ':
' → logprob: -12.556934356689453
    10. '+
' → logprob: -13.056934356689453

Token 719: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08606142550706863
    2. 'sum' → logprob: -2.836061477661133
    3. 'for' → logprob: -4.711061477661133
    4. 'total' → logprob: -5.211061477661133
    5. ' for' → logprob: -5.961061477661133
    6. 's' → logprob: -5.961061477661133
    7. ' sum' → logprob: -6.586061477661133
    8. ' total' → logprob: -7.461061477661133
    9. 'prefix' → logprob: -7.836061477661133
    10. ' s' → logprob: -7.961061477661133

Token 720: ' #' (ID: 1069)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5323456525802612
    2. 'for' → logprob: -1.6573456525802612
    3. 'total' → logprob: -1.7823456525802612
    4. 'sum' → logprob: -3.657345771789551
    5. 'if' → logprob: -4.407345771789551
    6. 'prefix' → logprob: -4.782345771789551
    7. 'acc' → logprob: -5.782345771789551
    8. 'current' → logprob: -6.532345771789551
    9. '   ' → logprob: -7.157345771789551
    10. 'count' → logprob: -7.907345771789551

Token 721: ' ii' (ID: 28354)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6407338976860046
    2. 'for' → logprob: -1.2657339572906494
    3. 'total' → logprob: -2.5157339572906494
    4. 'prefix' → logprob: -3.1407339572906494
    5. 'if' → logprob: -3.7657339572906494
    6. 'sum' → logprob: -4.14073371887207
    7. 'acc' → logprob: -4.26573371887207
    8. 'current' → logprob: -4.89073371887207
    9. 'cum' → logprob: -6.26573371887207
    10. 'curr' → logprob: -6.76573371887207

Token 722: ' parc' (ID: 22138)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1345413625240326
    2. '=' → logprob: -2.5095412731170654
    3. 'for' → logprob: -3.5095412731170654
    4. 'sum' → logprob: -5.7595415115356445
    5. ' in' → logprob: -6.1345415115356445
    6. 'in' → logprob: -6.2595415115356445
    7. ',' → logprob: -6.2595415115356445
    8. ' for' → logprob: -6.6345415115356445
    9. '_sum' → logprob: -6.7595415115356445
    10. '   ' → logprob: -6.8845415115356445

Token 723: 'ourt' (ID: 38600)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10107549279928207
    2. ' =' → logprob: -2.3510754108428955
    3. '=i' → logprob: -8.101075172424316
    4. '=None' → logprob: -9.101075172424316
    5. '=int' → logprob: -9.726075172424316
    6. 'ours' → logprob: -10.101075172424316
    7. ',' → logprob: -10.351075172424316
    8. 'ourt' → logprob: -11.101075172424316
    9. 'ount' → logprob: -11.101075172424316
    10. 'r' → logprob: -11.101075172424316

Token 724: ' tous' (ID: 10688)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.028202777728438377
    2. '(' → logprob: -3.653202772140503
    3. '1' → logprob: -6.528203010559082
    4. ' range' → logprob: -8.278203010559082
    5. '(range' → logprob: -9.403203010559082
    6. 'for' → logprob: -10.528203010559082
    7. 'j' → logprob: -10.778203010559082
    8. 'len' → logprob: -11.153203010559082
    9. '(i' → logprob: -11.153203010559082
    10. 'i' → logprob: -11.528203010559082

Token 725: ' les' (ID: 1341)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.36098513007164
    2. 'range' → logprob: -1.8609851598739624
    3. ' in' → logprob: -2.735985040664673
    4. 'in' → logprob: -3.235985040664673
    5. 'j' → logprob: -3.860985040664673
    6. ' range' → logprob: -4.735985279083252
    7. '(j' → logprob: -4.985985279083252
    8. ' (' → logprob: -5.610985279083252
    9. ' j' → logprob: -6.735985279083252
    10. '(range' → logprob: -7.110985279083252

Token 726: ' indices' (ID: 30378)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12153086811304092
    2. 'range' → logprob: -2.371530771255493
    3. '1' → logprob: -4.496531009674072
    4. 'j' → logprob: -4.621531009674072
    5. ' range' → logprob: -9.621530532836914
    6. '(range' → logprob: -10.996530532836914
    7. 'len' → logprob: -11.621530532836914
    8. '```' → logprob: -12.246530532836914
    9. 'i' → logprob: -12.871530532836914
    10. '(j' → logprob: -13.246530532836914

Token 727: ' strict' (ID: 12035)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.15257669985294342
    2. 'in' → logprob: -2.1525766849517822
    3. 'for' → logprob: -3.9025766849517822
    4. ' for' → logprob: -6.027576923370361
    5. '   ' → logprob: -7.152576923370361
    6. '(' → logprob: -7.902576923370361
    7. '=' → logprob: -8.027576446533203
    8. ',' → logprob: -8.152576446533203
    9. 'range' → logprob: -8.652576446533203
    10. 'j' → logprob: -8.902576446533203

Token 728: 'ement' (ID: 962)
  Prédit: 'ly'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ly' → logprob: -0.12779250741004944
    2. 'if' → logprob: -2.7527925968170166
    3. 'ement' → logprob: -4.3777923583984375
    4. 'ange' → logprob: -4.8777923583984375
    5. 'range' → logprob: -5.0027923583984375
    6. '=' → logprob: -5.2527923583984375
    7. 'ivement' → logprob: -6.1277923583984375
    8. '   ' → logprob: -6.1277923583984375
    9. '=i' → logprob: -6.1277923583984375
    10. 'ely' → logprob: -6.5027923583984375

Token 729: ' sup' (ID: 1982)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.23784694075584412
    2. 'range' → logprob: -2.362846851348877
    3. ' in' → logprob: -3.487846851348877
    4. 'i' → logprob: -3.487846851348877
    5. 'ii' → logprob: -4.112846851348877
    6. ' range' → logprob: -4.487846851348877
    7. '(i' → logprob: -4.737846851348877
    8. ' i' → logprob: -5.362846851348877
    9. 'j' → logprob: -5.487846851348877
    10. 'for' → logprob: -6.112846851348877

Token 730: 'érieurs' (ID: 97672)
  Prédit: 'érieurs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érieurs' → logprob: -0.03528952598571777
    2. 'érieur' → logprob: -3.4102895259857178
    3. 'éri' → logprob: -7.410289764404297
    4. 'é' → logprob: -7.410289764404297
    5. 'er' → logprob: -8.660289764404297
    6. 'r' → logprob: -9.285289764404297
    7. 'érieure' → logprob: -9.785289764404297
    8. 'érie' → logprob: -11.035289764404297
    9. 'ér' → logprob: -11.160289764404297
    10. 'ieurs' → logprob: -11.160289764404297

Token 731: ' à' (ID: 1221)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.8410401940345764
    2. 'range' → logprob: -1.4660401344299316
    3. '(i' → logprob: -1.8410401344299316
    4. 'in' → logprob: -2.0910401344299316
    5. ' range' → logprob: -3.7160401344299316
    6. 'for' → logprob: -4.466040134429932
    7. '   ' → logprob: -5.091040134429932
    8. '(range' → logprob: -5.466040134429932
    9. ' for' → logprob: -6.341040134429932
    10. '(ii' → logprob: -6.466040134429932

Token 732: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0010356683051213622
    2. ' i' → logprob: -6.876035690307617
    3. '0' → logprob: -14.001035690307617
    4. 'j' → logprob: -15.001035690307617
    5. 'for' → logprob: -15.001035690307617
    6. '   ' → logprob: -15.126035690307617
    7. 'range' → logprob: -15.376035690307617
    8. ' ' → logprob: -15.876035690307617
    9. '(i' → logprob: -16.126035690307617
    10. '=i' → logprob: -16.501035690307617

Token 733: ' jusqu' (ID: 21961)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7507591843605042
    2. '   ' → logprob: -0.8757591843605042
    3. ' for' → logprob: -2.2507591247558594
    4. ' in' → logprob: -5.500759124755859
    5. 'in' → logprob: -6.625759124755859
    6. ',' → logprob: -8.50075912475586
    7. 'range' → logprob: -8.75075912475586
    8. '
' → logprob: -9.37575912475586
    9. ' range' → logprob: -9.37575912475586
    10. ' =' → logprob: -9.75075912475586

Token 734: ''à' (ID: 33688)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.23624452948570251
    2. '   ' → logprob: -2.2362444400787354
    3. '(i' → logprob: -2.9862444400787354
    4. 'D' → logprob: -3.8612444400787354
    5. ' i' → logprob: -4.2362446784973145
    6. '(D' → logprob: -4.9862446784973145
    7. '=i' → logprob: -5.3612446784973145
    8. 'range' → logprob: -6.7362446784973145
    9. ',' → logprob: -7.2362446784973145
    10. ',i' → logprob: -7.4862446784973145

Token 735: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.004265015944838524
    2. ' D' → logprob: -5.504264831542969
    3. '(D' → logprob: -9.129264831542969
    4. '   ' → logprob: -10.629264831542969
    5. 'N' → logprob: -10.879264831542969
    6. 'range' → logprob: -11.379264831542969
    7. ' ' → logprob: -11.504264831542969
    8. ' range' → logprob: -12.254264831542969
    9. '(' → logprob: -13.254264831542969
    10. ' (' → logprob: -13.754264831542969

Token 736: '-' (ID: 12)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08198993653059006
    2. 'range' → logprob: -2.8319900035858154
    3. ' for' → logprob: -5.581989765167236
    4. '=' → logprob: -5.706989765167236
    5. 'in' → logprob: -5.956989765167236
    6. ' range' → logprob: -6.081989765167236
    7. '(range' → logprob: -6.706989765167236
    8. ':' → logprob: -6.706989765167236
    9. ',' → logprob: -6.956989765167236
    10. ')' → logprob: -7.206989765167236

Token 737: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7045902013778687
    2. 'i' → logprob: -1.5795902013778687
    3. 'D' → logprob: -2.329590320587158
    4. ')' → logprob: -2.454590320587158
    5. '(D' → logprob: -3.079590320587158
    6. '(' → logprob: -4.079590320587158
    7. '-' → logprob: -4.454590320587158
    8. 'N' → logprob: -4.704590320587158
    9. '(i' → logprob: -4.704590320587158
    10. 'range' → logprob: -5.454590320587158

Token 738: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2891455292701721
    2. 'for' → logprob: -1.9141454696655273
    3. ' for' → logprob: -2.2891454696655273
    4. ':' → logprob: -6.414145469665527
    5. '	for' → logprob: -8.039145469665527
    6. ':
' → logprob: -8.539145469665527
    7. '```' → logprob: -10.164145469665527
    8. '
' → logprob: -10.164145469665527
    9. '       ' → logprob: -11.039145469665527
    10. ',' → logprob: -11.914145469665527

Token 739: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03201235085725784
    2. ' for' → logprob: -3.782012462615967
    3. '   ' → logprob: -4.907012462615967
    4. '```' → logprob: -6.657012462615967
    5. '	for' → logprob: -10.407011985778809
    6. 'range' → logprob: -11.532011985778809
    7. ' range' → logprob: -12.657011985778809
    8. '       ' → logprob: -13.282011985778809
    9. '``' → logprob: -13.532011985778809
    10. '    
' → logprob: -14.407011985778809

Token 740: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0004419935867190361
    2. '   ' → logprob: -8.250441551208496
    3. ' for' → logprob: -8.625441551208496
    4. '```' → logprob: -13.875441551208496
    5. '	for' → logprob: -15.500441551208496
    6. ' ' → logprob: -17.625442504882812
    7. '
' → logprob: -17.625442504882812
    8. '       ' → logprob: -18.375442504882812
    9. 'i' → logprob: -18.750442504882812
    10. 'range' → logprob: -19.125442504882812

Token 741: ' ii' (ID: 28354)
  Prédit: 'ii'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ii' → logprob: -0.0019291093340143561
    2. ' ii' → logprob: -6.25192928314209
    3. '(ii' → logprob: -14.75192928314209
    4. '[ii' → logprob: -16.626928329467773
    5. 'jj' → logprob: -17.501928329467773
    6. '   ' → logprob: -18.751928329467773
    7. 'i' → logprob: -19.251928329467773
    8. 'iii' → logprob: -19.626928329467773
    9. 'ij' → logprob: -19.751928329467773
    10. ' ' → logprob: -20.126928329467773

Token 742: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.28122037649154663
    2. 'in' → logprob: -1.4062204360961914
    3. 'range' → logprob: -10.281220436096191
    4. ')' → logprob: -11.656220436096191
    5. '   ' → logprob: -12.156220436096191
    6. '
' → logprob: -12.406220436096191
    7. ' ' → logprob: -12.406220436096191
    8. 'In' → logprob: -12.656220436096191
    9. '  ' → logprob: -13.531220436096191
    10. 'import' → logprob: -13.656220436096191

Token 743: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0005530327325686812
    2. ' range' → logprob: -7.500553131103516
    3. '(range' → logprob: -18.375553131103516
    4. '   ' → logprob: -20.250553131103516
    5. '	range' → logprob: -20.625553131103516
    6. ' ' → logprob: -20.750553131103516
    7. '_range' → logprob: -22.125553131103516
    8. 'Range' → logprob: -22.375553131103516
    9. '  ' → logprob: -22.750553131103516
    10. '    ' → logprob: -23.250553131103516

Token 744: '(i' (ID: 3649)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7387429475784302
    2. '(i' → logprob: -0.7387429475784302
    3. ' i' → logprob: -3.1137428283691406
    4. '   ' → logprob: -9.48874282836914
    5. '(' → logprob: -11.23874282836914
    6. ' (' → logprob: -11.36374282836914
    7. ',' → logprob: -11.48874282836914
    8. ',i' → logprob: -11.61374282836914
    9. '	i' → logprob: -11.86374282836914
    10. '=i' → logprob: -12.36374282836914

Token 745: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.014177731238305569
    2. ' +' → logprob: -4.2641777992248535
    3. '+i' → logprob: -12.014177322387695
    4. '1' → logprob: -13.014177322387695
    5. ',' → logprob: -13.139177322387695
    6. '+
' → logprob: -13.639177322387695
    7. '   ' → logprob: -14.014177322387695
    8. '+,' → logprob: -14.139177322387695
    9. '()+' → logprob: -14.639177322387695
    10. 'i' → logprob: -15.389177322387695

Token 746: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0325924449716695e-05
    2. ' ' → logprob: -11.50001049041748
    3. 'D' → logprob: -15.75001049041748
    4. '   ' → logprob: -18.500009536743164
    5. ' D' → logprob: -18.750009536743164
    6. '2' → logprob: -19.125009536743164
    7. '```' → logprob: -19.125009536743164
    8. '0' → logprob: -19.500009536743164
    9. ',' → logprob: -20.375009536743164
    10. '<|end|>' → logprob: -20.625009536743164

Token 747: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.500001907348633
    3. 'D' → logprob: -16.750001907348633
    4. '2' → logprob: -17.125001907348633
    5. '0' → logprob: -18.000001907348633
    6. 'i' → logprob: -18.125001907348633
    7. '```' → logprob: -18.250001907348633
    8. '   ' → logprob: -18.375001907348633
    9. 'd' → logprob: -19.687501907348633
    10. '
' → logprob: -20.000001907348633

Token 748: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.314625690924004e-05
    2. ',D' → logprob: -10.000073432922363
    3. ' ,' → logprob: -10.500073432922363
    4. '(),' → logprob: -16.875072479248047
    5. ',d' → logprob: -17.375072479248047
    6. 'D' → logprob: -17.500072479248047
    7. ',
' → logprob: -18.250072479248047
    8. '_,' → logprob: -18.375072479248047
    9. '+,' → logprob: -18.625072479248047
    10. '(D' → logprob: -19.250072479248047

Token 749: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.0001238004770129919
    2. ' D' → logprob: -9.000123977661133
    3. '   ' → logprob: -15.125123977661133
    4. '	D' → logprob: -16.500123977661133
    5. ' ' → logprob: -19.250123977661133
    6. '       ' → logprob: -19.625123977661133
    7. '<D' → logprob: -20.625123977661133
    8. '(D' → logprob: -20.625123977661133
    9. '  ' → logprob: -20.875123977661133
    10. '    ' → logprob: -20.875123977661133

Token 750: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.25195372104644775
    2. '):
' → logprob: -1.5019537210464478
    3. ':' → logprob: -10.876954078674316
    4. '):
' → logprob: -12.251954078674316
    5. '):

' → logprob: -15.001954078674316
    6. '():' → logprob: -15.876954078674316
    7. ' ):' → logprob: -15.876954078674316
    8. ':
' → logprob: -16.251953125
    9. ')' → logprob: -16.501953125
    10. '():
' → logprob: -16.626953125

Token 751: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0377734899520874
    2. 'for' → logprob: -4.037773609161377
    3. ' for' → logprob: -4.287773609161377
    4. 'if' → logprob: -6.162773609161377
    5. ' if' → logprob: -6.412773609161377
    6. ':' → logprob: -7.912773609161377
    7. '   ' → logprob: -8.037773132324219
    8. '           ' → logprob: -8.287773132324219
    9. 'sum' → logprob: -8.412773132324219
    10. '#' → logprob: -8.662773132324219

Token 752: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1179199144244194
    2. 'if' → logprob: -3.242919921875
    3. '       ' → logprob: -3.492919921875
    4. 'sum' → logprob: -4.117919921875
    5. '   ' → logprob: -4.867919921875
    6. ' for' → logprob: -4.992919921875
    7. '           ' → logprob: -5.617919921875
    8. 's' → logprob: -5.867919921875
    9. '#' (adapté à ' #') → logprob: -5.992919921875
    10. 'total' → logprob: -7.742919921875

Token 753: ' z' (ID: 579)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0012524925405159593
    2. 'if' → logprob: -7.1262526512146
    3. '#' → logprob: -9.251252174377441
    4. 's' → logprob: -9.501252174377441
    5. '   ' → logprob: -9.751252174377441
    6. 'sum' → logprob: -10.251252174377441
    7. ' for' → logprob: -10.376252174377441
    8. '       ' → logprob: -10.876252174377441
    9. 'total' → logprob: -11.626252174377441
    10. 'mask' → logprob: -11.751252174377441

Token 754: ' est' (ID: 893)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08472031354904175
    2. '=' → logprob: -2.8347203731536865
    3. 'for' → logprob: -4.584720134735107
    4. 'sum' → logprob: -5.209720134735107
    5. '_sum' → logprob: -6.834720134735107
    6. 'max' → logprob: -7.084720134735107
    7. 'z' → logprob: -7.084720134735107
    8. 'f' → logprob: -7.334720134735107
    9. 's' → logprob: -8.084720611572266
    10. '=sum' → logprob: -8.334720611572266

Token 755: ' la' (ID: 557)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6881994009017944
    2. '0' → logprob: -1.6881994009017944
    3. 'sum' → logprob: -2.063199520111084
    4. 'z' → logprob: -2.563199520111084
    5. 'f' → logprob: -2.813199520111084
    6. ' d' → logprob: -3.938199520111084
    7. 'max' → logprob: -5.063199520111084
    8. 'K' → logprob: -5.688199520111084
    9. ' sum' → logprob: -5.813199520111084
    10. 'abs' → logprob: -6.063199520111084

Token 756: ' différence' (ID: 79196)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.3596055507659912
    2. 'sum' → logprob: -1.4846055507659912
    3. '0' → logprob: -1.6096055507659912
    4. 'f' → logprob: -2.859605550765991
    5. 'z' → logprob: -2.859605550765991
    6. 'max' → logprob: -2.859605550765991
    7. 'ii' → logprob: -3.109605550765991
    8. 'K' → logprob: -3.234605550765991
    9. 'D' → logprob: -3.609605550765991
    10. 'i' → logprob: -4.48460578918457

Token 757: ' entre' (ID: 3853)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01440406497567892
    2. ' =' → logprob: -4.264404296875
    3. '=z' → logprob: -9.264404296875
    4. '       ' → logprob: -9.639404296875
    5. 'z' → logprob: -10.389404296875
    6. '           ' → logprob: -11.014404296875
    7. '=sum' → logprob: -11.639404296875
    8. '=j' → logprob: -12.639404296875
    9. '+=' → logprob: -12.639404296875
    10. '=
' → logprob: -12.889404296875

Token 758: ' ii' (ID: 28354)
  Prédit: 'ii'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ii' → logprob: -0.19147875905036926
    2. 'f' → logprob: -1.9414787292480469
    3. 'd' → logprob: -3.691478729248047
    4. '(ii' → logprob: -6.316478729248047
    5. 'K' → logprob: -6.816478729248047
    6. 'D' → logprob: -6.941478729248047
    7. ' ii' → logprob: -7.316478729248047
    8. 'sum' → logprob: -7.566478729248047
    9. 'i' → logprob: -7.816478729248047
    10. ' f' → logprob: -9.816478729248047

Token 759: ' et' (ID: 859)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.795857846736908
    2. ' -' → logprob: -0.795857846736908
    3. '[i' → logprob: -3.0458579063415527
    4. ' and' → logprob: -3.9208579063415527
    5. '][' → logprob: -4.920857906341553
    6. ',' → logprob: -5.545857906341553
    7. ']' → logprob: -5.545857906341553
    8. 'and' → logprob: -5.670857906341553
    9. '   ' → logprob: -6.170857906341553
    10. '-i' → logprob: -6.170857906341553

Token 760: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0021895181853324175
    2. ' i' → logprob: -6.127189636230469
    3. '   ' → logprob: -13.252189636230469
    4. '       ' → logprob: -13.502189636230469
    5. '     ' → logprob: -15.627189636230469
    6. '
' → logprob: -15.752189636230469
    7. 'D' → logprob: -15.877189636230469
    8. ' ' → logprob: -16.00218963623047
    9. '           ' → logprob: -16.25218963623047
    10. 'N' → logprob: -16.37718963623047

Token 761: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0951605960726738
    2. '=' → logprob: -3.220160484313965
    3. ' =' → logprob: -3.220160484313965
    4. 'z' → logprob: -4.595160484313965
    5. ' z' → logprob: -8.220160484313965
    6. ',' → logprob: -8.595160484313965
    7. '+' → logprob: -9.470160484313965
    8. '-' → logprob: -9.720160484313965
    9. '=z' → logprob: -10.345160484313965
    10. '
' → logprob: -10.595160484313965

Token 762: ' c' (ID: 274)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.1976626217365265
    2. ' z' → logprob: -1.822662591934204
    3. 'ii' → logprob: -4.322662830352783
    4. ' ii' → logprob: -6.072662830352783
    5. '       ' → logprob: -6.447662830352783
    6. '(ii' → logprob: -8.572662353515625
    7. '=' → logprob: -9.197662353515625
    8. ' =' → logprob: -9.322662353515625
    9. '        ' → logprob: -9.822662353515625
    10. '[ii' → logprob: -10.072662353515625

Token 763: ''est' (ID: 6616)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.027994029223918915
    2. ' =' → logprob: -3.65299391746521
    3. '=
' → logprob: -7.777994155883789
    4. '+=' → logprob: -8.152994155883789
    5. '       ' → logprob: -8.277994155883789
    6. 'z' → logprob: -8.277994155883789
    7. '#' → logprob: -9.402994155883789
    8. '```' → logprob: -9.652994155883789
    9. '+' → logprob: -10.152994155883789
    10. '           ' → logprob: -10.527994155883789

Token 764: '-à' (ID: 56297)
  Prédit: 'ii'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ii' → logprob: -0.09026705473661423
    2. ' ii' → logprob: -2.4652669429779053
    3. '(ii' → logprob: -6.840267181396484
    4. 'f' → logprob: -9.215267181396484
    5. '   ' → logprob: -10.090267181396484
    6. '[ii' → logprob: -10.715267181396484
    7. ' f' → logprob: -10.965267181396484
    8. '1' → logprob: -11.090267181396484
    9. 'd' → logprob: -11.715267181396484
    10. 'D' → logprob: -12.340267181396484

Token 765: '-dire' (ID: 76064)
  Prédit: 'ii'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ii' → logprob: -0.061003975570201874
    2. ' ii' → logprob: -3.3110039234161377
    3. '(ii' → logprob: -3.8110039234161377
    4. '1' → logprob: -8.811003684997559
    5. '[ii' → logprob: -9.436003684997559
    6. '   ' → logprob: -9.936003684997559
    7. 'abs' → logprob: -10.061003684997559
    8. 'z' → logprob: -10.061003684997559
    9. '0' → logprob: -10.686003684997559
    10. ' (' → logprob: -10.686003684997559

Token 766: ' la' (ID: 557)
  Prédit: 'ii'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ii' → logprob: -0.03855811804533005
    2. ' ii' → logprob: -3.288558006286621
    3. '(ii' → logprob: -8.038558006286621
    4. '   ' → logprob: -9.538558006286621
    5. '       ' → logprob: -10.038558006286621
    6. 'z' → logprob: -10.288558006286621
    7. '[ii' → logprob: -11.163558006286621
    8. 'f' → logprob: -12.038558006286621
    9. '           ' → logprob: -12.163558006286621
    10. ' z' → logprob: -12.538558006286621

Token 767: ' longueur' (ID: 104613)
  Prédit: 'ii'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ii' → logprob: -0.001535812160000205
    2. ' ii' → logprob: -6.626535892486572
    3. 'z' → logprob: -9.376535415649414
    4. 'f' → logprob: -9.751535415649414
    5. '(ii' → logprob: -10.501535415649414
    6. 'sum' → logprob: -11.751535415649414
    7. '#' → logprob: -12.251535415649414
    8. 'i' → logprob: -12.501535415649414
    9. '[ii' → logprob: -12.751535415649414
    10. 'length' → logprob: -13.376535415649414

Token 768: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6757583022117615
    2. '=' → logprob: -0.8007583022117615
    3. 'z' → logprob: -3.3007583618164062
    4. '       ' → logprob: -5.425758361816406
    5. '   ' → logprob: -8.675758361816406
    6. '           ' → logprob: -8.675758361816406
    7. '=z' → logprob: -9.300758361816406
    8. ' of' → logprob: -9.425758361816406
    9. 'of' → logprob: -9.550758361816406
    10. ' z' → logprob: -9.675758361816406

Token 769: ' la' (ID: 557)
  Prédit: 'ii'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ii' → logprob: -0.16401568055152893
    2. 'z' → logprob: -2.289015769958496
    3. ' ii' → logprob: -3.914015769958496
    4. 'the' → logprob: -4.539015769958496
    5. 'f' → logprob: -5.039015769958496
    6. ' the' → logprob: -5.539015769958496
    7. ' z' → logprob: -5.664015769958496
    8. '(ii' → logprob: -6.039015769958496
    9. '[ii' → logprob: -7.164015769958496
    10. '   ' → logprob: -8.039015769958496

Token 770: ' sé' (ID: 7462)
  Prédit: 'ii'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ii' → logprob: -0.5168278217315674
    2. 'sub' → logprob: -2.2668278217315674
    3. 'prefix' → logprob: -2.5168278217315674
    4. 'z' → logprob: -2.7668278217315674
    5. 'substring' → logprob: -3.0168278217315674
    6. 'sequence' → logprob: -3.3918278217315674
    7. 'segment' → logprob: -4.016827583312988
    8. 'f' → logprob: -4.016827583312988
    9. 'window' → logprob: -4.891827583312988
    10. 'suffix' → logprob: -5.516827583312988

Token 771: 'quence' (ID: 6975)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.29418525099754333
    2. 'quence' → logprob: -2.669185161590576
    3. 'f' → logprob: -3.044185161590576
    4. 'ii' → logprob: -3.919185161590576
    5. '(ii' → logprob: -4.044185161590576
    6. 'q' → logprob: -4.169185161590576
    7. 'i' → logprob: -4.169185161590576
    8. '2' → logprob: -4.544185161590576
    9. 'z' → logprob: -4.794185161590576
    10. '
' → logprob: -4.919185161590576

Token 772: ' supplémentaire' (ID: 111252)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8477727770805359
    2. 'z' → logprob: -1.0977728366851807
    3. '=' → logprob: -1.4727728366851807
    4. '       ' → logprob: -5.222772598266602
    5. '=z' → logprob: -6.597772598266602
    6. '           ' → logprob: -6.847772598266602
    7. ' z' → logprob: -7.722772598266602
    8. '               ' → logprob: -9.222772598266602
    9. '   ' → logprob: -9.222772598266602
    10. '
' → logprob: -10.597772598266602

Token 773: '.
' (ID: 558)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8590335845947266
    2. ' =' → logprob: -1.3590335845947266
    3. '       ' → logprob: -1.4840335845947266
    4. 'z' → logprob: -2.4840335845947266
    5. '+' → logprob: -5.109033584594727
    6. ' z' → logprob: -7.234033584594727
    7. '#' → logprob: -7.484033584594727
    8. '           ' → logprob: -7.859033584594727
    9. ' +' → logprob: -8.234033584594727
    10. '-' → logprob: -8.609033584594727

Token 774: '       ' (ID: 309)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.5946483612060547
    2. 'for' → logprob: -1.4696483612060547
    3. '       ' → logprob: -1.5946483612060547
    4. ' for' → logprob: -4.344648361206055
    5. '           ' → logprob: -6.594648361206055
    6. ' z' → logprob: -7.344648361206055
    7. '   ' → logprob: -9.344648361206055
    8. '               ' → logprob: -10.469648361206055
    9. '#' → logprob: -10.469648361206055
    10. '        ' → logprob: -10.719648361206055

Token 775: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' (adapté à ' z') → logprob: -0.0002533528604544699
    2. '       ' → logprob: -8.375253677368164
    3. 'for' → logprob: -11.500253677368164
    4. ' z' → logprob: -12.000253677368164
    5. '           ' → logprob: -12.125253677368164
    6. '```' → logprob: -14.500253677368164
    7. '   ' → logprob: -15.250253677368164
    8. '               ' → logprob: -16.125253677368164
    9. ' for' → logprob: -16.625253677368164
    10. '	z' → logprob: -17.125253677368164

Token 776: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02975071594119072
    2. ' =' → logprob: -3.5297508239746094
    3. '=z' → logprob: -15.65475082397461
    4. '=i' → logprob: -18.02975082397461
    5. '＝' → logprob: -18.02975082397461
    6. '=
' → logprob: -18.15475082397461
    7. '=int' → logprob: -18.77975082397461
    8. ' ' → logprob: -19.40475082397461
    9. '=}' → logprob: -19.40475082397461
    10. '=

' → logprob: -19.65475082397461

Token 777: ' ii' (ID: 28354)
  Prédit: 'ii'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ii' → logprob: -0.005997759755700827
    2. ' ii' → logprob: -5.130997657775879
    3. '   ' → logprob: -10.005997657775879
    4. '(ii' → logprob: -10.755997657775879
    5. '[ii' → logprob: -14.380997657775879
    6. ' ' → logprob: -14.630997657775879
    7. '       ' → logprob: -14.755997657775879
    8. '  ' → logprob: -15.130997657775879
    9. '    ' → logprob: -15.255997657775879
    10. 'i' → logprob: -15.755997657775879

Token 778: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2014942169189453
    2. ' -' → logprob: -1.7014942169189453
    3. '-i' → logprob: -9.451494216918945
    4. '   ' → logprob: -13.826494216918945
    5. ' ' → logprob: -14.451494216918945
    6. '[i' → logprob: -15.076494216918945
    7. '−' → logprob: -16.826494216918945
    8. '-
' → logprob: -16.951494216918945
    9. '=' → logprob: -16.951494216918945
    10. '[' → logprob: -17.076494216918945

Token 779: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -7.493430894101039e-05
    2. ' i' → logprob: -9.500075340270996
    3. '	i' → logprob: -19.62507438659668
    4. ' ' → logprob: -20.50007438659668
    5. '   ' → logprob: -20.62507438659668
    6. '1' → logprob: -20.87507438659668
    7. '```' → logprob: -21.87507438659668
    8. '[i' → logprob: -22.25007438659668
    9. 'I' → logprob: -22.75007438659668
    10. '<|end|>' → logprob: -22.87507438659668

Token 780: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012564226053655148
    2. 'for' → logprob: -7.376256465911865
    3. ' for' → logprob: -8.501255989074707
    4. '#' → logprob: -8.751255989074707
    5. '
' → logprob: -9.001255989074707
    6. '<|end|>' → logprob: -9.751255989074707
    7. '        
' → logprob: -10.501255989074707
    8. ',' → logprob: -10.876255989074707
    9. '           ' → logprob: -11.751255989074707
    10. '   ' → logprob: -11.876255989074707

Token 781: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09133976697921753
    2. ' for' → logprob: -3.0913398265838623
    3. 'for' → logprob: -3.2163398265838623
    4. ',' → logprob: -7.716339588165283
    5. '<|end|>' → logprob: -8.216340065002441
    6. '#' → logprob: -8.341340065002441
    7. '           ' → logprob: -8.716340065002441
    8. '
' → logprob: -8.966340065002441
    9. ' if' → logprob: -8.966340065002441
    10. '```' → logprob: -9.216340065002441

Token 782: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0004778592265211046
    2. ' for' → logprob: -8.87547779083252
    3. '#' (adapté à ' #') → logprob: -9.00047779083252
    4. 'if' → logprob: -9.00047779083252
    5. '       ' → logprob: -9.37547779083252
    6. '   ' → logprob: -13.37547779083252
    7. 'sum' → logprob: -14.00047779083252
    8. '           ' → logprob: -14.37547779083252
    9. 'continue' → logprob: -14.50047779083252
    10. '```' → logprob: -14.75047779083252

Token 783: ' mask' (ID: 10910)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0006539395544677973
    2. '#' → logprob: -7.3756537437438965
    3. '       ' → logprob: -11.625654220581055
    4. ' for' → logprob: -11.875654220581055
    5. '   ' → logprob: -13.500654220581055
    6. 'max' → logprob: -13.750654220581055
    7. 's' → logprob: -13.875654220581055
    8. 'mask' → logprob: -13.875654220581055
    9. '
' → logprob: -14.250654220581055
    10. 'new' → logprob: -14.500654220581055

Token 784: ' permet' (ID: 11798)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868955969810486
    2. '=' → logprob: -1.1368956565856934
    3. '=(' → logprob: -11.011895179748535
    4. '=((' → logprob: -13.136895179748535
    5. ')' → logprob: -13.386895179748535
    6. ' =(' → logprob: -13.886895179748535
    7. 'mask' → logprob: -14.136895179748535
    8. 's' → logprob: -14.511895179748535
    9. '_mask' → logprob: -15.636895179748535
    10. '1' → logprob: -15.636895179748535

Token 785: ' d' (ID: 272)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '((' → logprob: -0.04108420014381409
    2. ' ((' → logprob: -3.9160842895507812
    3. '(z' → logprob: -4.416084289550781
    4. '(' → logprob: -5.416084289550781
    5. '(((' → logprob: -6.416084289550781
    6. 'z' → logprob: -7.291084289550781
    7. 'mask' → logprob: -7.416084289550781
    8. ' (' → logprob: -7.666084289550781
    9. ' z' → logprob: -9.041084289550781
    10. '   ' → logprob: -9.666084289550781

Token 786: ''ex' (ID: 23472)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '((' → logprob: -0.018656115978956223
    2. ' ((' → logprob: -4.518656253814697
    3. '(' → logprob: -5.018656253814697
    4. '(z' → logprob: -7.643656253814697
    5. '(((' → logprob: -8.018655776977539
    6. 'mask' → logprob: -9.268655776977539
    7. ' (' → logprob: -9.893655776977539
    8. '(mask' → logprob: -12.893655776977539
    9. 'z' → logprob: -13.018655776977539
    10. ' z' → logprob: -13.643655776977539

Token 787: 'tra' (ID: 1787)
  Prédit: 'tract'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tract' → logprob: -0.018335944041609764
    2. '(' → logprob: -4.268335819244385
    3. '(z' → logprob: -6.018335819244385
    4. '((' → logprob: -7.393335819244385
    5. 'clude' → logprob: -7.643335819244385
    6. '(i' → logprob: -8.268336296081543
    7. 'tr' → logprob: -9.143336296081543
    8. ' (' → logprob: -10.393336296081543
    9. 'z' → logprob: -10.643336296081543
    10. '=' → logprob: -10.768336296081543

Token 788: 'ire' (ID: 594)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ct' → logprob: -1.1368072032928467
    2. 're' → logprob: -1.6368072032928467
    3. 'quer' → logprob: -2.0118072032928467
    4. 'ire' → logprob: -2.1368072032928467
    5. 'cter' → logprob: -2.5118072032928467
    6. 'rer' → logprob: -3.3868072032928467
    7. 'indre' → logprob: -3.6368072032928467
    8. 'r' → logprob: -3.8868072032928467
    9. 'irer' → logprob: -4.011807441711426
    10. 'er' → logprob: -4.011807441711426

Token 789: ' les' (ID: 1341)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '((' → logprob: -0.6023970246315002
    2. '(z' → logprob: -1.2273969650268555
    3. '(' → logprob: -2.1023969650268555
    4. ' (' → logprob: -3.7273969650268555
    5. ' ((' → logprob: -4.8523969650268555
    6. 'z' → logprob: -5.7273969650268555
    7. '(j' → logprob: -6.9773969650268555
    8. 'mask' → logprob: -7.9773969650268555
    9. ' z' → logprob: -8.227396965026855
    10. '(((' → logprob: -8.352396965026855

Token 790: ' z' (ID: 579)
  Prédit: '(z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(z' → logprob: -0.6612645387649536
    2. '(' → logprob: -1.4112645387649536
    3. '((' → logprob: -1.5362645387649536
    4. 'z' → logprob: -4.286264419555664
    5. ' (' → logprob: -4.911264419555664
    6. '(i' → logprob: -6.536264419555664
    7. ' ((' → logprob: -6.661264419555664
    8. '(j' → logprob: -7.911264419555664
    9. ' z' → logprob: -8.536264419555664
    10. '(((' → logprob: -9.161264419555664

Token 791: ' derniers' (ID: 61275)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.8573171496391296
    2. ' -' → logprob: -1.4823172092437744
    3. 'bits' → logprob: -1.8573172092437744
    4. '_bits' → logprob: -2.4823172092437744
    5. ')' → logprob: -3.2323172092437744
    6. ' bits' → logprob: -3.7323172092437744
    7. ')-' → logprob: -3.9823172092437744
    8. '_mask' → logprob: -4.732316970825195
    9. 'mask' → logprob: -4.982316970825195
    10. ' z' → logprob: -5.982316970825195

Token 792: ' bits' (ID: 18189)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.090962253510952
    2. '((' → logprob: -3.4659621715545654
    3. '(' → logprob: -4.0909624099731445
    4. '(z' → logprob: -4.3409624099731445
    5. 'mask' → logprob: -4.9659624099731445
    6. ')' → logprob: -5.2159624099731445
    7. 'bits' → logprob: -5.7159624099731445
    8. ' z' → logprob: -5.9659624099731445
    9. '1' → logprob: -6.2159624099731445
    10. '_mask' → logprob: -6.8409624099731445

Token 793: ' de' (ID: 334)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1695115864276886
    2. ' =' → logprob: -1.9195115566253662
    3. '       ' → logprob: -5.669511795043945
    4. ')' → logprob: -5.669511795043945
    5. '((' → logprob: -6.794511795043945
    6. '(' → logprob: -8.419511795043945
    7. 'mask' → logprob: -8.669511795043945
    8. '=((' → logprob: -9.044511795043945
    9. 'z' → logprob: -9.419511795043945
    10. '=(' → logprob: -9.794511795043945

Token 794: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.013612840324640274
    2. '((' → logprob: -4.888612747192383
    3. ' j' → logprob: -5.763612747192383
    4. '(' → logprob: -6.263612747192383
    5. 'd' → logprob: -8.013612747192383
    6. ' ((' → logprob: -8.638612747192383
    7. ' (' → logprob: -9.388612747192383
    8. '(j' → logprob: -9.763612747192383
    9. 'N' → logprob: -9.888612747192383
    10. '```' → logprob: -10.013612747192383

Token 795: '.
' (ID: 558)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6313441395759583
    2. ' =' → logprob: -0.8813441395759583
    3. '       ' → logprob: -3.2563440799713135
    4. ')' → logprob: -5.631344318389893
    5. 'for' → logprob: -5.631344318389893
    6. ' for' → logprob: -6.506344318389893
    7. ' j' → logprob: -6.631344318389893
    8. 'j' → logprob: -7.006344318389893
    9. '<|end|>' → logprob: -7.006344318389893
    10. ',' → logprob: -7.756344318389893

Token 796: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.1382583379745483
    2. 'for' → logprob: -1.5132583379745483
    3. 'mask' → logprob: -2.263258457183838
    4. ' =' → logprob: -2.638258457183838
    5. '=' → logprob: -2.763258457183838
    6. ' mask' → logprob: -3.013258457183838
    7. ' j' → logprob: -3.638258457183838
    8. ' (' → logprob: -3.638258457183838
    9. '       ' → logprob: -3.888258457183838
    10. ')' → logprob: -4.138258457183838

Token 797: ' mask' (ID: 10910)
  Prédit: 'mask'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' (adapté à ' mask') → logprob: -0.8068897724151611
    2. '(' → logprob: -1.4318897724151611
    3. 'for' → logprob: -2.431889772415161
    4. ' (' → logprob: -2.431889772415161
    5. '(mask' → logprob: -2.806889772415161
    6. ' mask' → logprob: -3.681889772415161
    7. '((' → logprob: -4.431889533996582
    8. ' for' → logprob: -4.806889533996582
    9. 'j' → logprob: -5.306889533996582
    10. '(z' → logprob: -5.306889533996582

Token 798: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.061967913061380386
    2. ' =' → logprob: -2.8119678497314453
    3. '=
' → logprob: -16.311967849731445
    4. '=(' → logprob: -16.811967849731445
    5. ')' → logprob: -16.936967849731445
    6. ' ' → logprob: -17.436967849731445
    7. '＝' → logprob: -17.811967849731445
    8. '=z' → logprob: -18.061967849731445
    9. ' =(' → logprob: -18.311967849731445
    10. '=j' → logprob: -19.061967849731445

Token 799: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.012543906457722187
    2. ' (' → logprob: -4.387543678283691
    3. '((' → logprob: -10.637543678283691
    4. '(z' → logprob: -12.137543678283691
    5. '(j' → logprob: -14.012543678283691
    6. '   ' → logprob: -14.012543678283691
    7. '           ' → logprob: -14.512543678283691
    8. ' ' → logprob: -14.887543678283691
    9. '       ' → logprob: -14.887543678283691
    10. '(x' → logprob: -15.762543678283691

Token 800: '1' (ID: 16)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00024275471514556557
    2. '1' → logprob: -8.375243186950684
    3. ' (' → logprob: -11.375243186950684
    4. ')' → logprob: -15.125243186950684
    5. '   ' → logprob: -15.625243186950684
    6. ' ' → logprob: -16.250242233276367
    7. '(z' → logprob: -16.625242233276367
    8. '((' → logprob: -17.000242233276367
    9. '
' → logprob: -18.625242233276367
    10. '[' → logprob: -18.750242233276367

Token 801: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.050427213311195374
    2. ' <<' → logprob: -3.050427198410034
    3. '(' → logprob: -7.050427436828613
    4. '1' → logprob: -7.300427436828613
    5. '(z' → logprob: -8.925427436828613
    6. '>>' → logprob: -10.300427436828613
    7. ' (' → logprob: -10.300427436828613
    8. ')' → logprob: -10.550427436828613
    9. '   ' → logprob: -10.675427436828613
    10. ' ' → logprob: -11.175427436828613

Token 802: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -7.584239938296378e-06
    2. ' z' → logprob: -12.375007629394531
    3. '(z' → logprob: -13.000007629394531
    4. 'N' → logprob: -15.125007629394531
    5. '	z' → logprob: -15.500007629394531
    6. 'j' → logprob: -15.625007629394531
    7. '(N' → logprob: -16.75000762939453
    8. '(' → logprob: -16.75000762939453
    9. '   ' → logprob: -16.75000762939453
    10. '<|end|>' → logprob: -16.75000762939453

Token 803: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006303519476205111
    2. ')-' → logprob: -7.3756303787231445
    3. ' )' → logprob: -12.875630378723145
    4. '   ' → logprob: -15.250630378723145
    5. '1' → logprob: -15.875630378723145
    6. '#' → logprob: -16.000629425048828
    7. '")' → logprob: -16.000629425048828
    8. '')' → logprob: -16.750629425048828
    9. '```' → logprob: -16.875629425048828
    10. ']' → logprob: -17.125629425048828

Token 804: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00622750585898757
    2. ' -' → logprob: -5.131227493286133
    3. ')-' → logprob: -8.381227493286133
    4. ')' → logprob: -9.631227493286133
    5. '()-' → logprob: -12.881227493286133
    6. ']-' → logprob: -14.256227493286133
    7. '–' → logprob: -15.631227493286133
    8. '}-' → logprob: -15.881227493286133
    9. '
' → logprob: -16.756227493286133
    10. '−' → logprob: -16.756227493286133

Token 805: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9027791495318525e-05
    2. ' ' → logprob: -10.875019073486328
    3. '<|end|>' → logprob: -17.625019073486328
    4. ')' → logprob: -17.875019073486328
    5. '```' → logprob: -18.125019073486328
    6. 'z' → logprob: -18.250019073486328
    7. ' z' → logprob: -18.250019073486328
    8. '   ' → logprob: -19.250019073486328
    9. '<|end|>' → logprob: -20.125019073486328
    10. '(' → logprob: -20.250019073486328

Token 806: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '<|end|>' → logprob: -18.250001907348633
    4. '```' → logprob: -19.125001907348633
    5. '   ' → logprob: -20.125001907348633
    6. '۱' → logprob: -21.125001907348633
    7. '১' → logprob: -21.687501907348633
    8. '  ' → logprob: -22.000001907348633
    9. '' → logprob: -22.062501907348633
    10. '<|end|>' → logprob: -22.375001907348633

Token 807: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3193843364715576
    2. '<|end|>' → logprob: -1.4443843364715576
    3. '
' → logprob: -3.6943843364715576
    4. ' for' → logprob: -4.569384574890137
    5. '        
' → logprob: -7.069384574890137
    6. 'for' → logprob: -7.444384574890137
    7. '<|end|>' → logprob: -8.319384574890137
    8. '   ' → logprob: -9.194384574890137
    9. ')' → logprob: -9.569384574890137
    10. ' ' → logprob: -9.819384574890137

Token 808: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39976978302001953
    2. ' for' → logprob: -1.3997697830200195
    3. 'for' → logprob: -2.5247697830200195
    4. '<|end|>' → logprob: -6.3997697830200195
    5. '   ' → logprob: -7.5247697830200195
    6. '           ' → logprob: -9.02476978302002
    7. '#' → logprob: -9.27476978302002
    8. ',' → logprob: -9.64976978302002
    9. '	for' → logprob: -9.64976978302002
    10. '	' → logprob: -9.77476978302002

Token 809: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5507836937904358
    2. 'for' → logprob: -1.550783634185791
    3. '       ' → logprob: -1.675783634185791
    4. '<|end|>' → logprob: -4.300783634185791
    5. '   ' → logprob: -6.050783634185791
    6. ' ' → logprob: -6.175783634185791
    7. '#' (adapté à ' #') → logprob: -6.550783634185791
    8. '        
' → logprob: -7.300783634185791
    9. '        ' → logprob: -7.425783634185791
    10. 'j' → logprob: -7.925783634185791

Token 810: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -9.484132169745862e-05
    2. ' for' → logprob: -9.500094413757324
    3. '       ' → logprob: -11.250094413757324
    4. '#' → logprob: -12.750094413757324
    5. '   ' → logprob: -13.250094413757324
    6. '
' → logprob: -13.500094413757324
    7. '           ' → logprob: -15.750094413757324
    8. 'continue' → logprob: -16.00009536743164
    9. 'sum' → logprob: -16.37509536743164
    10. '```' → logprob: -16.50009536743164

Token 811: ' parc' (ID: 22138)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.28157520294189453
    2. ' for' → logprob: -1.4065752029418945
    3. '       ' → logprob: -8.656575202941895
    4. '   ' → logprob: -9.531575202941895
    5. '=' → logprob: -10.281575202941895
    6. ' =' → logprob: -10.531575202941895
    7. 'range' → logprob: -10.781575202941895
    8. 'continue' → logprob: -10.906575202941895
    9. ' continue' → logprob: -11.031575202941895
    10. ' range' → logprob: -11.781575202941895

Token 812: 'ourt' (ID: 38600)
  Prédit: 'ourt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ourt' → logprob: -0.08709036558866501
    2. 'ours' → logprob: -2.962090253829956
    3. 'our' → logprob: -3.587090253829956
    4. 'oure' → logprob: -5.712090492248535
    5. 'ourse' → logprob: -8.087090492248535
    6. '#' → logprob: -8.462090492248535
    7. '[' → logprob: -9.962090492248535
    8. '```' → logprob: -10.337090492248535
    9. 't' → logprob: -10.587090492248535
    10. 'r' → logprob: -11.462090492248535

Token 813: ' tous' (ID: 10688)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.47615790367126465
    2. ' (' → logprob: -1.7261579036712646
    3. 'range' → logprob: -2.2261579036712646
    4. ' range' → logprob: -2.7261579036712646
    5. 'j' → logprob: -4.476158142089844
    6. '   ' → logprob: -4.851158142089844
    7. ' j' → logprob: -5.476158142089844
    8. '1' → logprob: -6.101158142089844
    9. '       ' → logprob: -7.101158142089844
    10. ' ' → logprob: -8.601158142089844

Token 814: ' les' (ID: 1341)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.1275743693113327
    2. ' j' → logprob: -2.1275744438171387
    3. '   ' → logprob: -8.75257396697998
    4. '(' → logprob: -9.25257396697998
    5. '(j' → logprob: -9.25257396697998
    6. ' (' → logprob: -9.37757396697998
    7. ' range' → logprob: -10.12757396697998
    8. 'range' → logprob: -10.25257396697998
    9. '       ' → logprob: -10.50257396697998
    10. ' in' → logprob: -10.87757396697998

Token 815: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.26228398084640503
    2. '(' → logprob: -1.5122840404510498
    3. ' j' → logprob: -5.512283802032471
    4. ' (' → logprob: -5.762283802032471
    5. 'k' → logprob: -7.637283802032471
    6. 'D' → logprob: -7.637283802032471
    7. '```' → logprob: -7.762283802032471
    8. 'range' → logprob: -8.262284278869629
    9. '(D' → logprob: -8.512284278869629
    10. 'N' → logprob: -8.762284278869629

Token 816: ' possibles' (ID: 97753)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.21023620665073395
    2. 'in' → logprob: -1.7102361917495728
    3. 'for' → logprob: -5.085236072540283
    4. '   ' → logprob: -7.460236072540283
    5. ' for' → logprob: -7.460236072540283
    6. ')' → logprob: -7.585236072540283
    7. 'range' → logprob: -7.960236072540283
    8. ',' → logprob: -8.960236549377441
    9. ' en' → logprob: -9.335236549377441
    10. '(' → logprob: -9.585236549377441

Token 817: ' de' (ID: 334)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5002951622009277
    2. 'for' → logprob: -1.6252951622009277
    3. 'in' → logprob: -2.1252951622009277
    4. ' for' → logprob: -2.6252951622009277
    5. '   ' → logprob: -6.625295162200928
    6. '       ' → logprob: -7.000295162200928
    7. '(' → logprob: -7.000295162200928
    8. '```' → logprob: -7.250295162200928
    9. ',' → logprob: -8.000295639038086
    10. 'range' → logprob: -8.500295639038086

Token 818: ' longueur' (ID: 104613)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.06315700709819794
    2. '(z' → logprob: -3.563157081604004
    3. '(' → logprob: -3.938157081604004
    4. 'z' → logprob: -4.688157081604004
    5. ' range' → logprob: -5.938157081604004
    6. '(range' → logprob: -7.438157081604004
    7. '0' → logprob: -8.063157081604004
    8. '(D' → logprob: -8.813157081604004
    9. 'for' → logprob: -9.188157081604004
    10. '```' → logprob: -9.313157081604004

Token 819: ' ii' (ID: 28354)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.49681511521339417
    2. 'i' → logprob: -0.9968150854110718
    3. '   ' → logprob: -4.996815204620361
    4. 'N' → logprob: -5.121815204620361
    5. ' i' → logprob: -5.746815204620361
    6. ' z' → logprob: -5.871815204620361
    7. '(z' → logprob: -6.996815204620361
    8. '(i' → logprob: -7.246815204620361
    9. '(' → logprob: -7.871815204620361
    10. '1' → logprob: -7.996815204620361

Token 820: ' (' (ID: 350)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8911996483802795
    2. ':' → logprob: -1.6411995887756348
    3. 'for' → logprob: -1.7661995887756348
    4. '   ' → logprob: -2.7661995887756348
    5. '):' → logprob: -3.1411995887756348
    6. '):
' → logprob: -3.3911995887756348
    7. ' +' → logprob: -3.6411995887756348
    8. ':
' → logprob: -3.7661995887756348
    9. '       ' → logprob: -4.641199588775635
    10. ' for' → logprob: -5.141199588775635

Token 821: 'de' (ID: 613)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3914873003959656
    2. '(' → logprob: -1.2664873600006104
    3. ')' → logprob: -4.141487121582031
    4. 'range' → logprob: -4.266487121582031
    5. '   ' → logprob: -5.391487121582031
    6. ' (' → logprob: -6.516487121582031
    7. '0' → logprob: -6.766487121582031
    8. ' ' → logprob: -6.891487121582031
    9. 'ii' → logprob: -7.391487121582031
    10. '<<' → logprob: -7.766487121582031

Token 822: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04290338233113289
    2. '1' → logprob: -3.667903423309326
    3. '(' → logprob: -4.417903423309326
    4. 'z' → logprob: -6.417903423309326
    5. 'range' → logprob: -6.542903423309326
    6. '2' → logprob: -8.042902946472168
    7. ' ' → logprob: -8.167902946472168
    8. '   ' → logprob: -8.542902946472168
    9. '```' → logprob: -9.167902946472168
    10. ')' → logprob: -9.792902946472168

Token 823: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0571359284222126
    2. '(' → logprob: -3.057135820388794
    3. '1' → logprob: -4.807136058807373
    4. 'range' → logprob: -8.682135581970215
    5. 'z' → logprob: -10.057135581970215
    6. '2' → logprob: -10.182135581970215
    7. '```' → logprob: -11.182135581970215
    8. '(i' → logprob: -11.432135581970215
    9. 'ii' → logprob: -11.432135581970215
    10. ' ' → logprob: -11.682135581970215

Token 824: ' jusqu' (ID: 21961)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20290537178516388
    2. ' à' → logprob: -2.5779054164886475
    3. 'à' → logprob: -3.4529054164886475
    4. '<<' → logprob: -3.8279054164886475
    5. ')' → logprob: -4.327905178070068
    6. '   ' → logprob: -4.702905178070068
    7. '       ' → logprob: -4.827905178070068
    8. ' ,' → logprob: -5.452905178070068
    9. '```' → logprob: -5.452905178070068
    10. '           ' → logprob: -5.952905178070068

Token 825: ''à' (ID: 33688)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.922655463218689
    2. ' à' → logprob: -0.922655463218689
    3. ' (' → logprob: -2.0476555824279785
    4. ' to' → logprob: -3.5476555824279785
    5. '   ' → logprob: -4.6726555824279785
    6. '0' → logprob: -4.9226555824279785
    7. '1' → logprob: -5.1726555824279785
    8. '       ' → logprob: -5.5476555824279785
    9. 'to' → logprob: -5.5476555824279785
    10. 'à' → logprob: -5.6726555824279785

Token 826: ' ' (ID: 220)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006047774106264114
    2. '1' → logprob: -5.25604772567749
    3. ' (' → logprob: -7.13104772567749
    4. '```' → logprob: -11.631048202514648
    5. ' ' → logprob: -13.256048202514648
    6. '(ii' → logprob: -14.381048202514648
    7. '((' → logprob: -14.756048202514648
    8. '
' → logprob: -14.756048202514648
    9. '`' → logprob: -14.881048202514648
    10. '2' → logprob: -14.881048202514648

Token 827: '2' (ID: 17)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -7.541112427134067e-05
    2. '1' → logprob: -10.000075340270996
    3. ' (' → logprob: -10.500075340270996
    4. '   ' → logprob: -13.500075340270996
    5. '```' → logprob: -14.500075340270996
    6. '((' → logprob: -16.375076293945312
    7. '`' → logprob: -16.500076293945312
    8. '
' → logprob: -16.500076293945312
    9. ' ' → logprob: -16.625076293945312
    10. '``' → logprob: -17.750076293945312

Token 828: '^' (ID: 61)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.3023812472820282
    2. '^' → logprob: -1.8023812770843506
    3. 'ii' → logprob: -2.6773812770843506
    4. '(ii' → logprob: -4.6773810386657715
    5. '```' → logprob: -4.8023810386657715
    6. 'z' → logprob: -5.3023810386657715
    7. ')' → logprob: -6.3023810386657715
    8. '<<' → logprob: -7.3023810386657715
    9. '(' → logprob: -7.4273810386657715
    10. '(z' → logprob: -7.9273810386657715

Token 829: 'ii' (ID: 3573)
  Prédit: 'ii'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ii' → logprob: -0.0005287261446937919
    2. 'i' → logprob: -8.125528335571289
    3. 'z' → logprob: -9.250528335571289
    4. '(ii' → logprob: -9.250528335571289
    5. ' ii' → logprob: -10.375528335571289
    6. '(' → logprob: -12.750528335571289
    7. '   ' → logprob: -12.750528335571289
    8. '```' → logprob: -13.500528335571289
    9. '(i' → logprob: -13.750528335571289
    10. 'iii' → logprob: -15.625528335571289

Token 830: ' -' (ID: 533)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1307809054851532
    2. '):
' → logprob: -2.1307809352874756
    3. '+' → logprob: -6.2557806968688965
    4. ')' → logprob: -7.6307806968688965
    5. ':' → logprob: -7.6307806968688965
    6. '```' → logprob: -8.130781173706055
    7. '):
' → logprob: -8.505781173706055
    8. '   ' → logprob: -8.755781173706055
    9. '       ' → logprob: -9.255781173706055
    10. '():' → logprob: -10.505781173706055

Token 831: ' ' (ID: 220)
  Prédit: 'ii'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ii' → logprob: -0.06010177731513977
    2. '1' → logprob: -4.0601019859313965
    3. 'i' → logprob: -4.1851019859313965
    4. '(' → logprob: -4.1851019859313965
    5. '(ii' → logprob: -5.1851019859313965
    6. 'z' → logprob: -5.9351019859313965
    7. '(i' → logprob: -6.9351019859313965
    8. ' ii' → logprob: -7.1851019859313965
    9. ')' → logprob: -8.185101509094238
    10. ' (' → logprob: -8.935101509094238

Token 832: '1' (ID: 16)
  Prédit: 'ii'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ii' → logprob: -0.007901995442807674
    2. '1' → logprob: -5.007902145385742
    3. 'i' → logprob: -7.507902145385742
    4. '(ii' → logprob: -7.632902145385742
    5. '(' → logprob: -9.882902145385742
    6. ' ii' → logprob: -10.007902145385742
    7. ')' → logprob: -11.007902145385742
    8. '```' → logprob: -11.382902145385742
    9. '   ' → logprob: -11.757902145385742
    10. 'z' → logprob: -12.007902145385742

Token 833: ').
' (ID: 6294)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09217805415391922
    2. '):
' → logprob: -2.9671781063079834
    3. '):' → logprob: -4.092177867889404
    4. '           ' → logprob: -4.967177867889404
    5. ':' → logprob: -4.967177867889404
    6. '   ' → logprob: -5.342177867889404
    7. ':
' → logprob: -7.592177867889404
    8. 'for' → logprob: -8.342178344726562
    9. '```' → logprob: -9.592178344726562
    10. '(' → logprob: -9.717178344726562

Token 834: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3019910454750061
    2. '       ' → logprob: -2.0519909858703613
    3. '   ' → logprob: -2.5519909858703613
    4. ' for' → logprob: -2.9269909858703613
    5. '           ' → logprob: -7.426990985870361
    6. '```' → logprob: -9.67699146270752
    7. '	for' → logprob: -10.80199146270752
    8. ':' → logprob: -11.80199146270752
    9. ' ' → logprob: -12.55199146270752
    10. '               ' → logprob: -14.42699146270752

Token 835: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.06086714193224907
    2. ' for' → logprob: -3.0608670711517334
    3. '       ' → logprob: -5.0608673095703125
    4. 'range' → logprob: -5.6858673095703125
    5. '   ' → logprob: -6.4358673095703125
    6. ' range' → logprob: -7.4358673095703125
    7. '           ' → logprob: -8.810867309570312
    8. '```' → logprob: -9.560867309570312
    9. '(' → logprob: -10.685867309570312
    10. '               ' → logprob: -11.560867309570312

Token 836: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0019318510312587023
    2. ' j' → logprob: -6.251931667327881
    3. '   ' → logprob: -13.751932144165039
    4. '	j' → logprob: -13.876932144165039
    5. '```' → logprob: -14.001932144165039
    6. '_j' → logprob: -15.376932144165039
    7. 'i' → logprob: -16.75193214416504
    8. '       ' → logprob: -16.75193214416504
    9. ',j' → logprob: -17.00193214416504
    10. '`' → logprob: -17.12693214416504

Token 837: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.16025713086128235
    2. 'in' → logprob: -1.91025710105896
    3. '   ' → logprob: -11.410257339477539
    4. 'range' → logprob: -12.035257339477539
    5. '```' → logprob: -12.410257339477539
    6. ')' → logprob: -12.660257339477539
    7. ' ' → logprob: -12.660257339477539
    8. '  ' → logprob: -13.410257339477539
    9. '	in' → logprob: -13.410257339477539
    10. ' range' → logprob: -14.285257339477539

Token 838: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0036125436890870333
    2. ' range' → logprob: -5.628612518310547
    3. '(' → logprob: -12.503612518310547
    4. 'in' → logprob: -12.878612518310547
    5. '(range' → logprob: -13.003612518310547
    6. '   ' → logprob: -13.003612518310547
    7. ' in' → logprob: -14.753612518310547
    8. ' ' → logprob: -14.753612518310547
    9. '    ' → logprob: -15.753612518310547
    10. ')' → logprob: -16.003612518310547

Token 839: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0025103818625211716
    2. '1' → logprob: -6.0025105476379395
    3. ' (' → logprob: -10.502510070800781
    4. '   ' → logprob: -12.252510070800781
    5. '((' → logprob: -14.252510070800781
    6. '```' → logprob: -14.377510070800781
    7. '0' → logprob: -14.877510070800781
    8. ' ' → logprob: -14.877510070800781
    9. '2' → logprob: -15.627510070800781
    10. '(ii' → logprob: -16.37751007080078

Token 840: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03804539144039154
    2. '(' → logprob: -3.2880454063415527
    3. '   ' → logprob: -13.663044929504395
    4. ' ' → logprob: -13.788044929504395
    5. '```' → logprob: -14.163044929504395
    6. ' (' → logprob: -14.288044929504395
    7. '[' → logprob: -15.913044929504395
    8. ')' → logprob: -16.16304588317871
    9. '`' → logprob: -16.66304588317871
    10. '
' → logprob: -16.78804588317871

Token 841: ' <<' (ID: 2256)
  Prédit: ' <<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <<' → logprob: -0.47413569688796997
    2. '<<' → logprob: -0.97413569688797
    3. '<<(' → logprob: -10.224135398864746
    4. '(' → logprob: -11.349135398864746
    5. ' (' → logprob: -12.849135398864746
    6. ')<<' → logprob: -13.099135398864746
    7. ',' → logprob: -13.599135398864746
    8. '()<<' → logprob: -13.599135398864746
    9. '1' → logprob: -13.974135398864746
    10. ' <<=' → logprob: -14.724135398864746

Token 842: ' ii' (ID: 28354)
  Prédit: 'ii'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ii' → logprob: -0.0003926615754608065
    2. 'z' → logprob: -8.12539291381836
    3. ' ii' → logprob: -10.25039291381836
    4. '(ii' → logprob: -10.37539291381836
    5. '   ' → logprob: -10.87539291381836
    6. 'i' → logprob: -11.62539291381836
    7. '       ' → logprob: -14.12539291381836
    8. '(' → logprob: -15.12539291381836
    9. '           ' → logprob: -15.62539291381836
    10. 'iii' → logprob: -15.75039291381836

Token 843: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.25253787636756897
    2. '):
' → logprob: -1.5025378465652466
    3. '):
' → logprob: -7.502537727355957
    4. ':' → logprob: -10.627537727355957
    5. '       ' → logprob: -10.877537727355957
    6. ')' → logprob: -12.252537727355957
    7. '   ' → logprob: -12.752537727355957
    8. '):

' → logprob: -13.127537727355957
    9. '```' → logprob: -14.252537727355957
    10. '           ' → logprob: -14.502537727355957

Token 844: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8058390021324158
    2. 'if' → logprob: -1.0558390617370605
    3. ' if' → logprob: -2.0558390617370605
    4. '       ' → logprob: -2.9308390617370605
    5. '<|end|>' → logprob: -4.5558390617370605
    6. '#' → logprob: -5.1808390617370605
    7. '```' → logprob: -5.6808390617370605
    8. '   ' → logprob: -7.1808390617370605
    9. ':' → logprob: -7.4308390617370605
    10. '...' → logprob: -7.8058390617370605

Token 845: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.022521112114191055
    2. '           ' → logprob: -4.647521018981934
    3. 'f' → logprob: -5.147521018981934
    4. '               ' → logprob: -6.147521018981934
    5. 'val' → logprob: -7.022521018981934
    6. 'prev' → logprob: -7.022521018981934
    7. '#' (adapté à ' #') → logprob: -7.272521018981934
    8. 'd' → logprob: -7.397521018981934
    9. ' if' → logprob: -8.022521018981934
    10. 'sum' → logprob: -8.147521018981934

Token 846: ' On' (ID: 2160)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.017558826133608818
    2. 'f' → logprob: -4.767559051513672
    3. 'prev' → logprob: -5.767559051513672
    4. 'val' → logprob: -5.892559051513672
    5. 'd' → logprob: -7.017559051513672
    6. 'for' → logprob: -7.767559051513672
    7. 's' → logprob: -7.767559051513672
    8. 'sub' → logprob: -8.517559051513672
    9. 'p' → logprob: -8.642559051513672
    10. 'prefix' → logprob: -8.767559051513672

Token 847: ' ajoute' (ID: 91611)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.10069291293621063
    2. ' if' → logprob: -2.4756929874420166
    3. '#' → logprob: -4.7256927490234375
    4. '           ' → logprob: -6.6006927490234375
    5. 'continue' → logprob: -7.9756927490234375
    6. 's' → logprob: -8.475692749023438
    7. ' #' → logprob: -8.725692749023438
    8. 'for' → logprob: -8.850692749023438
    9. '=' → logprob: -9.600692749023438
    10. ' continue' → logprob: -9.725692749023438

Token 848: ' à' (ID: 1221)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.4317820966243744
    2. 'd' → logprob: -1.3067821264266968
    3. 'f' → logprob: -3.0567820072174072
    4. ' f' → logprob: -3.5567820072174072
    5. '           ' → logprob: -5.931782245635986
    6. ')' → logprob: -7.431782245635986
    7. ' (' → logprob: -8.306781768798828
    8. '               ' → logprob: -9.056781768798828
    9. '(f' → logprob: -9.056781768798828
    10. '(d' → logprob: -9.181781768798828

Token 849: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6484391689300537
    2. 'f' → logprob: -0.7734391689300537
    3. ' d' → logprob: -4.523439407348633
    4. ' f' → logprob: -5.398439407348633
    5. '           ' → logprob: -8.648439407348633
    6. '```' → logprob: -10.148439407348633
    7. '   ' → logprob: -10.398439407348633
    8. '`' → logprob: -11.148439407348633
    9. '
' → logprob: -11.273439407348633
    10. '               ' → logprob: -11.398439407348633

Token 850: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0019926358945667744
    2. '[ii' → logprob: -6.251992702484131
    3. '[j' → logprob: -10.251992225646973
    4. '[' → logprob: -11.376992225646973
    5. 'i' → logprob: -11.376992225646973
    6. ' [' → logprob: -13.251992225646973
    7. '```' → logprob: -14.001992225646973
    8. '   ' → logprob: -14.501992225646973
    9. '[z' → logprob: -14.501992225646973
    10. '           ' → logprob: -14.876992225646973

Token 851: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.010825198143720627
    2. '[j' → logprob: -4.635825157165527
    3. '[i' → logprob: -7.635825157165527
    4. '[' → logprob: -7.885825157165527
    5. ' ][' → logprob: -9.635825157165527
    6. ']' → logprob: -10.385825157165527
    7. '[z' → logprob: -11.010825157165527
    8. '[ii' → logprob: -11.260825157165527
    9. '```' → logprob: -11.385825157165527
    10. '   ' → logprob: -11.510825157165527

Token 852: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.004264777526259422
    2. ' j' → logprob: -5.504264831542969
    3. '[j' → logprob: -9.129264831542969
    4. '][' → logprob: -10.254264831542969
    5. '           ' → logprob: -11.379264831542969
    6. '```' → logprob: -11.504264831542969
    7. '   ' → logprob: -11.879264831542969
    8. ']' → logprob: -12.379264831542969
    9. ' ' → logprob: -13.504264831542969
    10. '	j' → logprob: -13.629264831542969

Token 853: ' >>' (ID: 6832)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '][' → logprob: -0.006712886039167643
    2. '[i' → logprob: -5.381712913513184
    3. '[j' → logprob: -7.131712913513184
    4. ']' → logprob: -7.631712913513184
    5. '[' → logprob: -8.006712913513184
    6. ' ][' → logprob: -8.381712913513184
    7. '           ' → logprob: -9.256712913513184
    8. '[ii' → logprob: -9.756712913513184
    9. '[z' → logprob: -11.381712913513184
    10. ' [' → logprob: -11.381712913513184

Token 854: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.010113727301359177
    2. '(z' → logprob: -4.760113716125488
    3. ' z' → logprob: -7.135113716125488
    4. '(i' → logprob: -8.260113716125488
    5. 'i' → logprob: -8.885113716125488
    6. '           ' → logprob: -9.510113716125488
    7. '```' → logprob: -9.635113716125488
    8. '1' → logprob: -10.135113716125488
    9. ' (' → logprob: -10.260113716125488
    10. '(' → logprob: -11.010113716125488

Token 855: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0006089136004447937
    2. '][' → logprob: -7.500608921051025
    3. '])' → logprob: -11.375608444213867
    4. ']+' → logprob: -11.375608444213867
    5. '](' → logprob: -12.125608444213867
    6. ']
' → logprob: -12.250608444213867
    7. ' ]' → logprob: -12.500608444213867
    8. '|' → logprob: -12.750608444213867
    9. 'z' → logprob: -12.875608444213867
    10. ']+=' → logprob: -13.125608444213867

Token 856: ' la' (ID: 557)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '][' → logprob: -0.9134340286254883
    2. '[' → logprob: -1.4134340286254883
    3. 'd' → logprob: -1.6634340286254883
    4. ']' → logprob: -3.4134340286254883
    5. '[j' → logprob: -3.5384340286254883
    6. '[d' → logprob: -3.5384340286254883
    7. ' +=' → logprob: -3.9134340286254883
    8. '           ' → logprob: -4.163434028625488
    9. ' d' → logprob: -4.413434028625488
    10. '[z' → logprob: -5.413434028625488

Token 857: ' valeur' (ID: 41664)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.00429149204865098
    2. ' d' → logprob: -5.504291534423828
    3. '+' → logprob: -9.129291534423828
    4. '   ' → logprob: -10.504291534423828
    5. 'f' → logprob: -11.004291534423828
    6. '           ' → logprob: -11.004291534423828
    7. '```' → logprob: -12.004291534423828
    8. ' +' → logprob: -12.254291534423828
    9. '1' → logprob: -12.504291534423828
    10. '`' → logprob: -12.754291534423828

Token 858: ' de' (ID: 334)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.19498218595981598
    2. '=' → logprob: -2.8199822902679443
    3. ' d' → logprob: -3.0699822902679443
    4. '           ' → logprob: -3.6949822902679443
    5. ']' → logprob: -4.069982051849365
    6. ' =' → logprob: -4.069982051849365
    7. '][' → logprob: -5.694982051849365
    8. '```' → logprob: -5.944982051849365
    9. '   ' → logprob: -7.319982051849365
    10. ':' → logprob: -7.569982051849365

Token 859: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0040835049003362656
    2. 'f' → logprob: -5.754083633422852
    3. ' d' → logprob: -7.254083633422852
    4. '   ' → logprob: -10.129083633422852
    5. '(' → logprob: -10.379083633422852
    6. '```' → logprob: -10.504083633422852
    7. '           ' → logprob: -10.754083633422852
    8. ' f' → logprob: -11.129083633422852
    9. '(d' → logprob: -11.129083633422852
    10. '       ' → logprob: -12.254083633422852

Token 860: '[ii' (ID: 75075)
  Prédit: '[ii'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[ii' → logprob: -0.02492685802280903
    2. '[i' → logprob: -3.7749269008636475
    3. 'ii' → logprob: -6.649926662445068
    4. '[z' → logprob: -8.149927139282227
    5. '[' → logprob: -10.274927139282227
    6. 'i' → logprob: -10.899927139282227
    7. ' ii' → logprob: -11.274927139282227
    8. '[j' → logprob: -11.774927139282227
    9. '(ii' → logprob: -11.774927139282227
    10. '   ' → logprob: -13.024927139282227

Token 861: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -6.504040356958285e-05
    2. ' ][' → logprob: -10.750064849853516
    3. '[i' → logprob: -11.125064849853516
    4. ']' → logprob: -11.750064849853516
    5. '[j' → logprob: -11.750064849853516
    6. '[' → logprob: -12.500064849853516
    7. '[(' → logprob: -13.000064849853516
    8. '   ' → logprob: -13.000064849853516
    9. '-' → logprob: -14.125064849853516
    10. ' ' → logprob: -14.625064849853516

Token 862: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0005373051972128451
    2. '(j' → logprob: -7.875537395477295
    3. ' j' → logprob: -9.250536918640137
    4. '[j' → logprob: -9.875536918640137
    5. '((' → logprob: -12.875536918640137
    6. '```' → logprob: -12.875536918640137
    7. ' (' → logprob: -13.500536918640137
    8. '
' → logprob: -14.000536918640137
    9. '(' → logprob: -14.500536918640137
    10. '   ' → logprob: -15.000536918640137

Token 863: '].
' (ID: 49887)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '][' → logprob: -0.19803829491138458
    2. ']' → logprob: -1.8230383396148682
    3. '])' → logprob: -5.198038101196289
    4. '[' → logprob: -6.073038101196289
    5. '           ' → logprob: -6.073038101196289
    6. '>>' → logprob: -6.698038101196289
    7. '       ' → logprob: -7.198038101196289
    8. '   ' → logprob: -7.323038101196289
    9. '               ' → logprob: -7.573038101196289
    10. ' -' → logprob: -7.823038101196289

Token 864: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2854782044887543
    2. ' d' → logprob: -1.5354782342910767
    3. 'd' → logprob: -4.535478115081787
    4. '                           ' → logprob: -5.035478115081787
    5. '               ' → logprob: -5.285478115081787
    6. ' +=' → logprob: -6.035478115081787
    7. '                       ' → logprob: -6.160478115081787
    8. ' +' → logprob: -6.285478115081787
    9. '                   ' → logprob: -6.660478115081787
    10. ' =' → logprob: -6.785478115081787

Token 865: ' #' (ID: 1069)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.10226257890462875
    2. ' d' → logprob: -2.352262496948242
    3. '           ' → logprob: -6.852262496948242
    4. '                           ' → logprob: -7.602262496948242
    5. '               ' → logprob: -8.602262496948242
    6. '                   ' → logprob: -9.352262496948242
    7. '                               ' → logprob: -9.352262496948242
    8. '                       ' → logprob: -9.602262496948242
    9. '                                   ' → logprob: -10.227262496948242
    10. '	d' → logprob: -11.602262496948242

Token 866: ' Cela' (ID: 44403)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.014202173799276352
    2. ' d' → logprob: -4.264202117919922
    3. '           ' → logprob: -11.139202117919922
    4. '                           ' → logprob: -11.514202117919922
    5. '                       ' → logprob: -11.889202117919922
    6. '                   ' → logprob: -12.889202117919922
    7. '               ' → logprob: -13.014202117919922
    8. '                               ' → logprob: -13.639202117919922
    9. '                                   ' → logprob: -14.764202117919922
    10. '	d' → logprob: -16.264202117919922

Token 867: ' correspond' (ID: 11095)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.5476444959640503
    2. '+=' → logprob: -1.0476444959640503
    3. ']+=' → logprob: -3.54764461517334
    4. '[' → logprob: -4.29764461517334
    5. '=' → logprob: -4.67264461517334
    6. ']' → logprob: -5.17264461517334
    7. ')' → logprob: -5.79764461517334
    8. '[i' → logprob: -6.04764461517334
    9. '           ' → logprob: -6.42264461517334
    10. '
' → logprob: -6.67264461517334

Token 868: ' à' (ID: 1221)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.24184995889663696
    2. '=' → logprob: -3.116849899291992
    3. '[' → logprob: -3.116849899291992
    4. '+=' → logprob: -3.241849899291992
    5. ' à' → logprob: -3.491849899291992
    6. '           ' → logprob: -3.866849899291992
    7. ' =' → logprob: -3.991849899291992
    8. ' to' → logprob: -5.616849899291992
    9. '[i' → logprob: -6.241849899291992
    10. '            ' → logprob: -6.366849899291992

Token 869: ' reg' (ID: 1324)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.4786834716796875
    2. ' d' → logprob: -0.9786834716796875
    3. ' +=' → logprob: -5.9786834716796875
    4. '+=' → logprob: -6.6036834716796875
    5. '+' → logprob: -7.8536834716796875
    6. ']' → logprob: -9.603683471679688
    7. ' +' → logprob: -10.353683471679688
    8. ']+=' → logprob: -10.478683471679688
    9. '+d' → logprob: -10.603683471679688
    10. '   ' → logprob: -11.103683471679688

Token 870: 'rou' (ID: 691)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.9800727367401123
    2. '[i' → logprob: -1.3550727367401123
    3. '[' → logprob: -2.2300727367401123
    4. ' +=' → logprob: -2.3550727367401123
    5. 'roup' → logprob: -2.8550727367401123
    6. '[j' → logprob: -3.8550727367401123
    7. 'd' → logprob: -4.105072975158691
    8. '   ' → logprob: -4.980072975158691
    9. '```' → logprob: -5.105072975158691
    10. '=' → logprob: -5.355072975158691

Token 871: 'per' (ID: 543)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.236910104751587
    2. 'geant' → logprob: -1.486910104751587
    3. 'p' → logprob: -1.736910104751587
    4. 'pant' → logprob: -2.111910104751587
    5. 'nant' → logprob: -3.736910104751587
    6. '           ' → logprob: -3.986910104751587
    7. 'rant' → logprob: -4.361909866333008
    8. 'n' → logprob: -4.486909866333008
    9. 'ant' → logprob: -4.486909866333008
    10. 'per' → logprob: -4.736909866333008

Token 872: ' par' (ID: 686)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.05201248824596405
    2. ' d' → logprob: -3.0520124435424805
    3. '           ' → logprob: -5.9270124435424805
    4. '[i' → logprob: -8.67701244354248
    5. '               ' → logprob: -8.80201244354248
    6. '                   ' → logprob: -9.55201244354248
    7. '   ' → logprob: -10.05201244354248
    8. '[d' → logprob: -10.05201244354248
    9. '          ' → logprob: -10.30201244354248
    10. ']' → logprob: -10.30201244354248

Token 873: ' le' (ID: 505)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.5494358539581299
    2. ' z' → logprob: -1.1744358539581299
    3. '1' → logprob: -2.92443585395813
    4. 'd' → logprob: -4.299435615539551
    5. ' d' → logprob: -4.424435615539551
    6. ' ' → logprob: -4.424435615539551
    7. ']' → logprob: -4.549435615539551
    8. 'j' → logprob: -6.799435615539551
    9. 'i' → logprob: -6.799435615539551
    10. 'mask' → logprob: -6.924435615539551

Token 874: ' pré' (ID: 9424)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.06868501752614975
    2. ' z' → logprob: -3.3186850547790527
    3. 'mask' → logprob: -4.943685054779053
    4. '```' → logprob: -5.193685054779053
    5. ' mask' → logprob: -5.943685054779053
    6. ' ' → logprob: -6.193685054779053
    7. '>>' → logprob: -6.693685054779053
    8. '   ' → logprob: -6.943685054779053
    9. 'd' → logprob: -6.943685054779053
    10. 'bits' → logprob: -7.068685054779053

Token 875: 'fix' (ID: 11853)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.1519705355167389
    2. 'fix' → logprob: -2.026970624923706
    3. 'i' → logprob: -6.151970386505127
    4. 'c' → logprob: -6.151970386505127
    5. '[i' → logprob: -6.401970386505127
    6. 'f' → logprob: -7.401970386505127
    7. '```' → logprob: -7.401970386505127
    8. 'ced' → logprob: -7.651970386505127
    9. 'for' → logprob: -8.151970863342285
    10. 'z' → logprob: -8.401970863342285

Token 876: 'e' (ID: 68)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8254452347755432
    2. ']' → logprob: -1.5754451751708984
    3. '>>' → logprob: -2.4504451751708984
    4. '   ' → logprob: -3.0754451751708984
    5. '][' → logprob: -3.0754451751708984
    6. 'fix' → logprob: -3.5754451751708984
    7. 'd' → logprob: -3.7004451751708984
    8. '           ' → logprob: -4.075445175170898
    9. 'ix' → logprob: -4.075445175170898
    10. '        ' → logprob: -4.325445175170898

Token 877: ' de' (ID: 334)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.1872119903564453
    2. '[j' → logprob: -1.8122119903564453
    3. '[' → logprob: -1.9372119903564453
    4. '][' → logprob: -1.9372119903564453
    5. ' [' → logprob: -2.6872119903564453
    6. '>>' → logprob: -2.8122119903564453
    7. ']' → logprob: -3.4372119903564453
    8. 'd' → logprob: -4.187211990356445
    9. ' >>' → logprob: -5.312211990356445
    10. '[z' → logprob: -5.312211990356445

Token 878: ' longueur' (ID: 104613)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.03747888654470444
    2. 'j' → logprob: -3.5374789237976074
    3. ' z' → logprob: -5.662478923797607
    4. 'i' → logprob: -5.912478923797607
    5. '```' → logprob: -7.662478923797607
    6. ' j' → logprob: -8.66247844696045
    7. '   ' → logprob: -8.78747844696045
    8. ' i' → logprob: -9.28747844696045
    9. ' ' → logprob: -9.41247844696045
    10. '`' → logprob: -9.41247844696045

Token 879: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6684181094169617
    2. 'z' → logprob: -0.9184181094169617
    3. ' i' → logprob: -2.7934181690216064
    4. ' z' → logprob: -3.6684181690216064
    5. '```' → logprob: -7.293417930603027
    6. 'j' → logprob: -8.793417930603027
    7. '   ' → logprob: -8.793417930603027
    8. '           ' → logprob: -9.043417930603027
    9. '          ' → logprob: -9.668417930603027
    10. 'ii' → logprob: -9.793417930603027

Token 880: '.
' (ID: 558)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '][' → logprob: -0.08755364269018173
    2. ']' → logprob: -2.8375537395477295
    3. '           ' → logprob: -4.71255350112915
    4. 'd' → logprob: -4.83755350112915
    5. '[j' → logprob: -6.21255350112915
    6. '               ' → logprob: -6.33755350112915
    7. '[' → logprob: -7.08755350112915
    8. ',' → logprob: -7.71255350112915
    9. '       ' → logprob: -8.087553977966309
    10. ']
' → logprob: -8.087553977966309

Token 881: '           ' (ID: 352)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.4444209039211273
    2. ' d' → logprob: -1.1944209337234497
    3. '           ' → logprob: -3.31942081451416
    4. '                           ' → logprob: -4.94442081451416
    5. ' +=' → logprob: -5.81942081451416
    6. '               ' → logprob: -6.19442081451416
    7. '                       ' → logprob: -6.44442081451416
    8. '                   ' → logprob: -7.06942081451416
    9. ']' → logprob: -7.19442081451416
    10. '+=' → logprob: -7.19442081451416

Token 882: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.011370229534804821
    2. ' d' → logprob: -4.5113701820373535
    3. '           ' → logprob: -9.011370658874512
    4. '                           ' → logprob: -9.136370658874512
    5. '                       ' → logprob: -10.511370658874512
    6. '                   ' → logprob: -10.636370658874512
    7. '               ' → logprob: -10.636370658874512
    8. '                               ' → logprob: -11.761370658874512
    9. '                                   ' → logprob: -13.386370658874512
    10. '+' → logprob: -13.761370658874512

Token 883: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00011272187111899257
    2. '[' → logprob: -9.500112533569336
    3. '[I' → logprob: -10.625112533569336
    4. '][' → logprob: -12.125112533569336
    5. '[j' → logprob: -13.500112533569336
    6. ' [' → logprob: -13.875112533569336
    7. '[s' → logprob: -13.875112533569336
    8. '[ip' → logprob: -14.250112533569336
    9. '[int' → logprob: -14.375112533569336
    10. '[
' → logprob: -14.750112533569336

Token 884: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0003212805895600468
    2. ']' → logprob: -8.375321388244629
    3. ' ][' → logprob: -10.500321388244629
    4. '[j' → logprob: -10.625321388244629
    5. '[' → logprob: -11.250321388244629
    6. '   ' → logprob: -11.875321388244629
    7. ']][' → logprob: -12.375321388244629
    8. '       ' → logprob: -12.625321388244629
    9. '][]' → logprob: -13.000321388244629
    10. ')][' → logprob: -14.125321388244629

Token 885: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.03391769155859947
    2. '(j' → logprob: -3.4089176654815674
    3. ' j' → logprob: -9.033917427062988
    4. ' (' → logprob: -9.283917427062988
    5. '[j' → logprob: -10.783917427062988
    6. '((' → logprob: -11.158917427062988
    7. '   ' → logprob: -11.408917427062988
    8. '	j' → logprob: -12.783917427062988
    9. '```' → logprob: -13.283917427062988
    10. ',j' → logprob: -13.408917427062988

Token 886: ' >>' (ID: 6832)
  Prédit: '>>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.02237633988261223
    2. ']' → logprob: -3.897376298904419
    3. ' >>' → logprob: -6.897376537322998
    4. '>>>' → logprob: -7.772376537322998
    5. '[' → logprob: -9.14737606048584
    6. '|' → logprob: -9.77237606048584
    7. '   ' → logprob: -10.14737606048584
    8. ' >>=' → logprob: -10.39737606048584
    9. '=' → logprob: -10.52237606048584
    10. '    ' → logprob: -10.77237606048584

Token 887: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.00012415809032972902
    2. ' z' → logprob: -9.000123977661133
    3. '	z' → logprob: -14.375123977661133
    4. '```' → logprob: -17.000123977661133
    5. '   ' → logprob: -17.500123977661133
    6. '(z' → logprob: -17.875123977661133
    7. '[z' → logprob: -18.000123977661133
    8. ''z' → logprob: -18.000123977661133
    9. '‌' → logprob: -19.250123977661133
    10. '‘z' → logprob: -19.375123977661133

Token 888: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0007357738213613629
    2. ']+=' → logprob: -7.250735759735107
    3. ']+' → logprob: -10.750736236572266
    4. ' ]' → logprob: -12.750736236572266
    5. '+]' → logprob: -15.125736236572266
    6. '`]' → logprob: -15.125736236572266
    7. '           ' → logprob: -15.625736236572266
    8. ')' → logprob: -15.875736236572266
    9. '][' → logprob: -16.250736236572266
    10. ']
' → logprob: -16.375736236572266

Token 889: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.014279029332101345
    2. ' +=' → logprob: -4.264278888702393
    3. '=' → logprob: -9.63927936553955
    4. '+' → logprob: -10.38927936553955
    5. ']+=' → logprob: -11.01427936553955
    6. '   ' → logprob: -13.88927936553955
    7. '    ' → logprob: -14.38927936553955
    8. '```' → logprob: -15.13927936553955
    9. '[' → logprob: -15.26427936553955
    10. '>' → logprob: -15.38927936553955

Token 890: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.00016027313540689647
    2. ' d' → logprob: -8.750160217285156
    3. '           ' → logprob: -13.500160217285156
    4. '   ' → logprob: -15.625160217285156
    5. '	d' → logprob: -15.875160217285156
    6. '               ' → logprob: -16.875160217285156
    7. '       ' → logprob: -17.250160217285156
    8. '          ' → logprob: -17.500160217285156
    9. '
' → logprob: -17.625160217285156
    10. '                   ' → logprob: -17.875160217285156

Token 891: '[ii' (ID: 75075)
  Prédit: '[ii'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[ii' → logprob: -8.97155623533763e-05
    2. '[i' → logprob: -9.625089645385742
    3. 'ii' → logprob: -11.000089645385742
    4. '(ii' → logprob: -13.000089645385742
    5. '[' → logprob: -13.375089645385742
    6. '[j' → logprob: -14.000089645385742
    7. '   ' → logprob: -14.250089645385742
    8. '[z' → logprob: -15.125089645385742
    9. '```' → logprob: -15.500089645385742
    10. 'i' → logprob: -15.750089645385742

Token 892: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.003610401414334774
    2. '[i' → logprob: -5.753610610961914
    3. '[j' → logprob: -8.128610610961914
    4. ']' → logprob: -9.503610610961914
    5. '[' → logprob: -10.128610610961914
    6. ' ][' → logprob: -11.503610610961914
    7. '   ' → logprob: -12.753610610961914
    8. ',i' → logprob: -13.128610610961914
    9. ')[' → logprob: -13.503610610961914
    10. ',' → logprob: -13.753610610961914

Token 893: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00012094692647224292
    2. 'z' → logprob: -9.750121116638184
    3. ' j' → logprob: -10.875121116638184
    4. 'mask' → logprob: -11.000121116638184
    5. 'i' → logprob: -11.250121116638184
    6. '```' → logprob: -12.250121116638184
    7. '   ' → logprob: -12.750121116638184
    8. ' ' → logprob: -13.000121116638184
    9. ']' → logprob: -13.625121116638184
    10. '[j' → logprob: -14.750121116638184

Token 894: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00046796895912848413
    2. ']
' → logprob: -8.500468254089355
    3. ' ]' → logprob: -8.750468254089355
    4. ')' → logprob: -9.500468254089355
    5. '])' → logprob: -11.250468254089355
    6. '<|end|>' → logprob: -12.375468254089355
    7. '           ' → logprob: -12.500468254089355
    8. ')]' → logprob: -12.500468254089355
    9. '       ' → logprob: -13.000468254089355
    10. '   ' → logprob: -14.250468254089355

Token 895: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005949417594820261
    2. 'if' → logprob: -6.2559494972229
    3. '       ' → logprob: -6.6309494972229
    4. '#' → logprob: -7.2559494972229
    5. '               ' → logprob: -8.005949020385742
    6. '```' → logprob: -8.005949020385742
    7. '<|end|>' → logprob: -8.380949020385742
    8. 'for' → logprob: -8.630949020385742
    9. ' if' → logprob: -9.005949020385742
    10. '                   ' → logprob: -9.130949020385742

Token 896: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 897: ' r' (ID: 428)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2939564287662506
    2. 'f' → logprob: -1.4189563989639282
    3. '           ' → logprob: -4.918956279754639
    4. '#' → logprob: -5.668956279754639
    5. 'd' → logprob: -6.418956279754639
    6. 'for' → logprob: -9.293956756591797
    7. ' if' → logprob: -9.418956756591797
    8. '```' → logprob: -10.543956756591797
    9. '       ' → logprob: -10.668956756591797
    10. '               ' → logprob: -10.918956756591797

Token 898: ' est' (ID: 893)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026844624429941177
    2. '=' → logprob: -3.6518447399139404
    3. 'f' → logprob: -8.52684497833252
    4. 'r' → logprob: -8.77684497833252
    5. '_r' → logprob: -10.40184497833252
    6. '=r' → logprob: -11.15184497833252
    7. ' ' → logprob: -11.27684497833252
    8. 'e' → logprob: -11.40184497833252
    9. '   ' → logprob: -11.40184497833252
    10. '_' → logprob: -11.65184497833252

Token 899: ' la' (ID: 557)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.10147256404161453
    2. ' f' → logprob: -2.3514726161956787
    3. '=' → logprob: -8.226472854614258
    4. '(f' → logprob: -8.476472854614258
    5. ' =' → logprob: -8.851472854614258
    6. '   ' → logprob: -9.226472854614258
    7. 'max' → logprob: -9.351472854614258
    8. ' min' → logprob: -9.726472854614258
    9. 'min' → logprob: -9.726472854614258
    10. ' (' → logprob: -9.851472854614258

Token 900: ' longueur' (ID: 104613)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.005439489148557186
    2. ' f' → logprob: -6.255439281463623
    3. 'min' → logprob: -6.505439281463623
    4. 'max' → logprob: -7.505439281463623
    5. 'r' → logprob: -7.630439281463623
    6. 'z' → logprob: -8.130439758300781
    7. '(f' → logprob: -8.505439758300781
    8. 'i' → logprob: -9.505439758300781
    9. 'd' → logprob: -9.630439758300781
    10. ' min' → logprob: -9.755439758300781

Token 901: ' du' (ID: 1462)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08174476772546768
    2. ' =' → logprob: -2.58174467086792
    3. 'f' → logprob: -6.20674467086792
    4. 'r' → logprob: -7.58174467086792
    5. '=f' → logprob: -8.331745147705078
    6. '           ' → logprob: -10.081745147705078
    7. ' f' → logprob: -11.206745147705078
    8. '=r' → logprob: -11.581745147705078
    9. '#' → logprob: -12.956745147705078
    10. '```' → logprob: -13.081745147705078

Token 902: ' pré' (ID: 9424)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0005087109748274088
    2. 'r' → logprob: -8.125508308410645
    3. ' f' → logprob: -9.500508308410645
    4. 'max' → logprob: -9.500508308410645
    5. 'z' → logprob: -10.750508308410645
    6. 'min' → logprob: -10.750508308410645
    7. 'd' → logprob: -13.125508308410645
    8. 'i' → logprob: -13.250508308410645
    9. '...' → logprob: -13.250508308410645
    10. 'minimum' → logprob: -13.500508308410645

Token 903: 'fix' (ID: 11853)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0003673940955195576
    2. 'fix' → logprob: -9.250367164611816
    3. 'd' → logprob: -10.125367164611816
    4. '       ' → logprob: -10.375367164611816
    5. 'e' → logprob: -10.625367164611816
    6. 'fx' → logprob: -10.750367164611816
    7. '=' → logprob: -10.875367164611816
    8. '           ' → logprob: -11.125367164611816
    9. ' f' → logprob: -11.375367164611816
    10. '```' → logprob: -11.500367164611816

Token 904: 'e' (ID: 68)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.23022635281085968
    2. 'x' → logprob: -1.9802263975143433
    3. 'fix' → logprob: -3.4802262783050537
    4. 'ix' → logprob: -3.6052262783050537
    5. '+' → logprob: -5.855226516723633
    6. 'fx' → logprob: -6.355226516723633
    7. ' f' → logprob: -7.105226516723633
    8. 'ux' → logprob: -7.605226516723633
    9. 's' → logprob: -7.730226516723633
    10. '[' → logprob: -8.105226516723633

Token 905: ' homog' (ID: 143289)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3115159571170807
    2. ' =' → logprob: -2.061516046524048
    3. 'f' → logprob: -2.186516046524048
    4. 'r' → logprob: -3.686516046524048
    5. '=f' → logprob: -6.436515808105469
    6. 'max' → logprob: -8.436515808105469
    7. '```' → logprob: -8.436515808105469
    8. 'of' → logprob: -8.811515808105469
    9. '=r' → logprob: -9.186515808105469
    10. ' f' → logprob: -9.686515808105469

Token 906: 'ène' (ID: 22902)
  Prédit: 'ote'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ote' → logprob: -0.3712283968925476
    2. '           ' → logprob: -1.7462284564971924
    3. 'ot' → logprob: -3.1212284564971924
    4. '               ' → logprob: -4.121228218078613
    5. 'o' → logprob: -4.246228218078613
    6. 'f' → logprob: -4.746228218078613
    7. '       ' → logprob: -4.746228218078613
    8. 'ète' → logprob: -4.996228218078613
    9. '                       ' → logprob: -5.121228218078613
    10. 'oto' → logprob: -5.121228218078613

Token 907: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3599921762943268
    2. ' =' → logprob: -1.2349921464920044
    3. '           ' → logprob: -5.109992027282715
    4. 'f' → logprob: -5.859992027282715
    5. 'r' → logprob: -6.484992027282715
    6. '=f' → logprob: -7.609992027282715
    7. '       ' → logprob: -8.734992027282715
    8. ' f' → logprob: -9.484992027282715
    9. '               ' → logprob: -9.859992027282715
    10. '   ' → logprob: -9.859992027282715

Token 908: ' calcul' (ID: 7559)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.26839810609817505
    2. 'r' → logprob: -1.5183980464935303
    3. ' f' → logprob: -4.393398284912109
    4. '           ' → logprob: -6.018398284912109
    5. ' r' → logprob: -7.268398284912109
    6. '=' → logprob: -7.643398284912109
    7. ' =' → logprob: -8.64339828491211
    8. 'z' → logprob: -10.26839828491211
    9. '       ' → logprob: -10.51839828491211
    10. '=f' → logprob: -10.51839828491211

Token 909: 'ée' (ID: 2894)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6744884252548218
    2. ' =' → logprob: -1.5494884252548218
    3. 'é' → logprob: -2.4244885444641113
    4. 'f' → logprob: -2.5494885444641113
    5. '           ' → logprob: -3.2994885444641113
    6. 'e' → logprob: -3.6744885444641113
    7. 'u' → logprob: -4.174488544464111
    8. '       ' → logprob: -4.299488544464111
    9. 'ue' → logprob: -5.424488544464111
    10. '   ' → logprob: -6.174488544464111

Token 910: ' sur' (ID: 1512)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8776534199714661
    2. 'f' → logprob: -1.2526533603668213
    3. ' =' → logprob: -1.2526533603668213
    4. '=f' → logprob: -4.8776535987854
    5. '[f' → logprob: -6.2526535987854
    6. 'r' → logprob: -7.1276535987854
    7. '(f' → logprob: -7.3776535987854
    8. ' f' → logprob: -7.5026535987854
    9. '           ' → logprob: -8.502653121948242
    10. '```' → logprob: -8.627653121948242

Token 911: ' les' (ID: 1341)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.7040586471557617
    2. 'z' → logprob: -0.7040586471557617
    3. 'j' → logprob: -5.454058647155762
    4. 'mask' → logprob: -6.454058647155762
    5. '           ' → logprob: -7.079058647155762
    6. '   ' → logprob: -7.079058647155762
    7. ' f' → logprob: -7.204058647155762
    8. 'd' → logprob: -7.454058647155762
    9. ' z' → logprob: -7.454058647155762
    10. '```' → logprob: -7.579058647155762

Token 912: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.3360098600387573
    2. 'f' → logprob: -1.5860098600387573
    3. 'j' → logprob: -3.461009979248047
    4. 'mask' → logprob: -4.211009979248047
    5. 'bits' → logprob: -4.711009979248047
    6. 'd' → logprob: -4.836009979248047
    7. 'i' → logprob: -5.586009979248047
    8. 'last' → logprob: -5.836009979248047
    9. ' z' → logprob: -6.211009979248047
    10. 'r' → logprob: -6.461009979248047

Token 913: ' derniers' (ID: 61275)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.8062423467636108
    2. 'f' → logprob: -1.1812423467636108
    3. 'r' → logprob: -2.5562424659729004
    4. ')' → logprob: -3.1812424659729004
    5. ']' → logprob: -3.3062424659729004
    6. '       ' → logprob: -3.9312424659729004
    7. '   ' → logprob: -4.1812424659729
    8. ' bits' → logprob: -4.8062424659729
    9. '+' → logprob: -4.9312424659729
    10. '-' → logprob: -5.1812424659729

Token 914: ' bits' (ID: 18189)
  Prédit: ' bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bits' → logprob: -0.4427606761455536
    2. 'bits' → logprob: -1.067760705947876
    3. '_bits' → logprob: -4.317760467529297
    4. ' ' → logprob: -8.567760467529297
    5. '_' → logprob: -8.817760467529297
    6. '   ' → logprob: -9.567760467529297
    7. 'b' → logprob: -9.692760467529297
    8. ' bit' → logprob: -10.192760467529297
    9. 'bit' → logprob: -10.442760467529297
    10. '_b' → logprob: -10.817760467529297

Token 915: ' de' (ID: 334)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6956757307052612
    2. ' =' → logprob: -0.6956757307052612
    3. '           ' → logprob: -6.195675849914551
    4. 'f' → logprob: -8.32067584991455
    5. '=f' → logprob: -8.94567584991455
    6. '       ' → logprob: -9.69567584991455
    7. 'r' → logprob: -10.94567584991455
    8. '   ' → logprob: -11.57067584991455
    9. '```' → logprob: -11.69567584991455
    10. '               ' → logprob: -12.57067584991455

Token 916: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.004354167729616165
    2. 'mask' → logprob: -5.629354000091553
    3. '```' → logprob: -7.754354000091553
    4. ' j' → logprob: -8.379354476928711
    5. '           ' → logprob: -10.379354476928711
    6. '   ' → logprob: -10.879354476928711
    7. ' mask' → logprob: -11.004354476928711
    8. '(mask' → logprob: -11.879354476928711
    9. '       ' → logprob: -12.254354476928711
    10. '``' → logprob: -12.379354476928711

Token 917: '.
' (ID: 558)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6271597146987915
    2. '           ' → logprob: -1.2521597146987915
    3. '=' → logprob: -1.7521597146987915
    4. 'r' → logprob: -5.627159595489502
    5. 'f' → logprob: -6.752159595489502
    6. '       ' → logprob: -6.877159595489502
    7. '               ' → logprob: -9.25216007232666
    8. '
' → logprob: -9.37716007232666
    9. '   ' → logprob: -9.37716007232666
    10. ',' → logprob: -9.50216007232666

Token 918: '           ' (ID: 352)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.07941470295190811
    2. '           ' → logprob: -2.5794146060943604
    3. '=' → logprob: -8.329414367675781
    4. '```' → logprob: -8.704414367675781
    5. ' =' → logprob: -9.579414367675781
    6. ' r' → logprob: -10.704414367675781
    7. '=r' → logprob: -11.454414367675781
    8. '       ' → logprob: -11.704414367675781
    9. '   ' → logprob: -12.829414367675781
    10. '               ' → logprob: -13.829414367675781

Token 919: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.0005545823951251805
    2. '           ' → logprob: -7.50055456161499
    3. ' r' → logprob: -13.625555038452148
    4. '```' → logprob: -15.000555038452148
    5. '   ' → logprob: -16.62555503845215
    6. '       ' → logprob: -16.75055503845215
    7. '          ' → logprob: -18.87555503845215
    8. '               ' → logprob: -19.00055503845215
    9. '            
' → logprob: -19.12555503845215
    10. '
' → logprob: -19.37555503845215

Token 920: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01416350994259119
    2. ' =' → logprob: -4.264163494110107
    3. '   ' → logprob: -18.639163970947266
    4. '=((' → logprob: -18.639163970947266
    5. '=(' → logprob: -20.014163970947266
    6. '=
' → logprob: -20.139163970947266
    7. '＝' → logprob: -20.264163970947266
    8. '       ' → logprob: -20.514163970947266
    9. ' ' → logprob: -20.764163970947266
    10. '	' → logprob: -20.889163970947266

Token 921: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0001475220051361248
    2. ' f' → logprob: -8.875147819519043
    3. '   ' → logprob: -12.875147819519043
    4. '(f' → logprob: -13.125147819519043
    5. 'z' → logprob: -13.750147819519043
    6. 'max' → logprob: -15.625147819519043
    7. '(z' → logprob: -15.750147819519043
    8. '0' → logprob: -15.875147819519043
    9. 'j' → logprob: -15.875147819519043
    10. ' ' → logprob: -15.875147819519043

Token 922: '[z' (ID: 105082)
  Prédit: '[z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[z' → logprob: -0.031201671808958054
    2. 'z' → logprob: -3.5312016010284424
    3. '[ii' → logprob: -6.7812018394470215
    4. '[i' → logprob: -8.531201362609863
    5. 'ii' → logprob: -9.156201362609863
    6. '(z' → logprob: -12.281201362609863
    7. '[' → logprob: -12.781201362609863
    8. ' z' → logprob: -13.156201362609863
    9. '```' → logprob: -14.031201362609863
    10. '(ii' → logprob: -14.906201362609863

Token 923: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.055762529373168945
    2. '[j' → logprob: -2.930762529373169
    3. '[' → logprob: -7.68076229095459
    4. ',j' → logprob: -8.43076229095459
    5. ']' → logprob: -9.80576229095459
    6. ',' → logprob: -9.80576229095459
    7. '[(' → logprob: -10.68076229095459
    8. 'j' → logprob: -11.55576229095459
    9. 'mask' → logprob: -11.55576229095459
    10. '   ' → logprob: -11.93076229095459

Token 924: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0018198858015239239
    2. '(j' → logprob: -6.501820087432861
    3. 'mask' → logprob: -8.376819610595703
    4. ' j' → logprob: -10.251819610595703
    5. '(mask' → logprob: -10.376819610595703
    6. '[j' → logprob: -11.376819610595703
    7. '(' → logprob: -12.876819610595703
    8. '```' → logprob: -13.251819610595703
    9. '((' → logprob: -13.376819610595703
    10. ' (' → logprob: -13.751819610595703

Token 925: ' &' (ID: 827)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.023271452635526657
    2. ' &' → logprob: -3.7732715606689453
    3. '&m' → logprob: -11.148271560668945
    4. '&(' → logprob: -12.523271560668945
    5. '&
' → logprob: -12.523271560668945
    6. ']' → logprob: -13.648271560668945
    7. '&amp' → logprob: -14.273271560668945
    8. '&r' → logprob: -14.648271560668945
    9. '>>' → logprob: -14.773271560668945
    10. '&M' → logprob: -15.148271560668945

Token 926: ' mask' (ID: 10910)
  Prédit: 'mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -4.572941179503687e-05
    2. ' mask' → logprob: -10.000045776367188
    3. '(mask' → logprob: -15.125045776367188
    4. '	mask' → logprob: -16.500045776367188
    5. '   ' → logprob: -17.250045776367188
    6. '       ' → logprob: -18.625045776367188
    7. '           ' → logprob: -18.625045776367188
    8. ' ' → logprob: -19.375045776367188
    9. '
' → logprob: -20.125045776367188
    10. '     ' → logprob: -20.250045776367188

Token 927: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.039845842868089676
    2. ']
' → logprob: -3.2898459434509277
    3. '           ' → logprob: -6.414845943450928
    4. '       ' → logprob: -9.91484546661377
    5. ']+' → logprob: -10.03984546661377
    6. ']
' → logprob: -11.28984546661377
    7. '               ' → logprob: -11.41484546661377
    8. ')' → logprob: -11.91484546661377
    9. '#' → logprob: -11.91484546661377
    10. '<|end|>' → logprob: -12.16484546661377

Token 928: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0365716926753521
    2. '```' → logprob: -3.786571741104126
    3. 'if' → logprob: -4.536571502685547
    4. ' if' → logprob: -6.161571502685547
    5. 'd' → logprob: -9.036571502685547
    6. '               ' → logprob: -9.286571502685547
    7. '``' → logprob: -9.411571502685547
    8. '       ' → logprob: -9.786571502685547
    9. '          ' → logprob: -11.036571502685547
    10. '                   ' → logprob: -11.161571502685547

Token 929: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13264727592468262
    2. 'if' → logprob: -2.1326472759246826
    3. ' if' → logprob: -5.632647514343262
    4. 'd' → logprob: -6.382647514343262
    5. '```' → logprob: -8.132647514343262
    6. 'for' → logprob: -9.757647514343262
    7. '+' → logprob: -11.007647514343262
    8. '                       ' → logprob: -11.382647514343262
    9. '               ' → logprob: -11.507647514343262
    10. ' d' → logprob: -12.132647514343262

Token 930: ' Si' (ID: 7832)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.02263043075799942
    2. 'd' → logprob: -4.397630214691162
    3. 'f' → logprob: -4.772630214691162
    4. '           ' → logprob: -6.897630214691162
    5. 'for' → logprob: -7.522630214691162
    6. ' if' → logprob: -10.52263069152832
    7. '#' → logprob: -11.77263069152832
    8. 'max' → logprob: -12.14763069152832
    9. 'while' → logprob: -12.39763069152832
    10. '               ' → logprob: -13.14763069152832

Token 931: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.016346009448170662
    2. ' r' → logprob: -4.141345977783203
    3. '           ' → logprob: -8.891345977783203
    4. 'd' → logprob: -9.641345977783203
    5. '   ' → logprob: -10.641345977783203
    6. 'K' → logprob: -10.891345977783203
    7. '(r' → logprob: -11.266345977783203
    8. 'f' → logprob: -11.391345977783203
    9. ' d' → logprob: -11.891345977783203
    10. '       ' → logprob: -12.266345977783203

Token 932: ' !=' (ID: 1666)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.6889575719833374
    2. ' >' → logprob: -1.6889575719833374
    3. '>' → logprob: -1.8139575719833374
    4. '<=' → logprob: -2.688957691192627
    5. ' >=' → logprob: -3.188957691192627
    6. ' ==' → logprob: -4.063957691192627
    7. '>=' → logprob: -4.188957691192627
    8. '==' → logprob: -4.813957691192627
    9. ' <' → logprob: -9.313957214355469
    10. '```' → logprob: -9.438957214355469

Token 933: ' z' (ID: 579)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.056313131004571915
    2. ' ' → logprob: -2.9313130378723145
    3. 'z' → logprob: -6.8063130378723145
    4. ' z' → logprob: -8.181313514709473
    5. 'r' → logprob: -11.056313514709473
    6. '=' → logprob: -11.056313514709473
    7. '1' → logprob: -12.931313514709473
    8. '```' → logprob: -12.931313514709473
    9. ' r' → logprob: -13.306313514709473
    10. 'K' → logprob: -13.931313514709473

Token 934: ',' (ID: 11)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.4878684878349304
    2. ':
' → logprob: -1.7378685474395752
    3. ':' → logprob: -1.9878685474395752
    4. 'and' → logprob: -2.987868547439575
    5. '           ' → logprob: -3.862868547439575
    6. '               ' → logprob: -6.737868309020996
    7. '==' → logprob: -7.737868309020996
    8. '       ' → logprob: -9.987868309020996
    9. ' ==' → logprob: -10.987868309020996
    10. '   ' → logprob: -11.112868309020996

Token 935: ' cela' (ID: 17542)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03378988429903984
    2. ' and' → logprob: -5.033790111541748
    3. ' continue' → logprob: -5.158790111541748
    4. '                       ' → logprob: -5.283790111541748
    5. '                               ' → logprob: -5.783790111541748
    6. ':' → logprob: -5.783790111541748
    7. '           ' → logprob: -6.033790111541748
    8. '                           ' → logprob: -6.033790111541748
    9. '                   ' → logprob: -6.033790111541748
    10. ' if' → logprob: -7.158790111541748

Token 936: ' signifie' (ID: 81149)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3008497357368469
    2. ' and' → logprob: -1.9258496761322021
    3. '           ' → logprob: -2.800849676132202
    4. 'and' → logprob: -3.175849676132202
    5. '               ' → logprob: -5.550849914550781
    6. '       ' → logprob: -6.550849914550781
    7. 'continue' → logprob: -6.675849914550781
    8. ' continue' → logprob: -6.800849914550781
    9. ' :' → logprob: -6.925849914550781
    10. '   ' → logprob: -7.550849914550781

Token 937: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.1624017208814621
    2. '           ' → logprob: -2.6624016761779785
    3. ' that' → logprob: -3.4124016761779785
    4. ' d' → logprob: -3.5374016761779785
    5. '               ' → logprob: -4.5374016761779785
    6. '            ' → logprob: -6.6624016761779785
    7. ' qu' → logprob: -6.7874016761779785
    8. 'that' → logprob: -7.2874016761779785
    9. '   ' → logprob: -7.4124016761779785
    10. ' ' → logprob: -7.6624016761779785

Token 938: ' la' (ID: 557)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.9411180019378662
    2. ' r' → logprob: -1.3161180019378662
    3. ' d' → logprob: -1.4411180019378662
    4. 'd' → logprob: -2.816118001937866
    5. ' not' → logprob: -3.566118001937866
    6. 'not' → logprob: -5.066118240356445
    7. ' f' → logprob: -5.316118240356445
    8. 'f' → logprob: -5.941118240356445
    9. '           ' → logprob: -7.816118240356445
    10. ' z' → logprob: -8.066118240356445

Token 939: ' fin' (ID: 2131)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.12219329178333282
    2. 'd' → logprob: -3.1221933364868164
    3. 'f' → logprob: -4.497193336486816
    4. 'last' → logprob: -4.622193336486816
    5. 'next' → logprob: -5.122193336486816
    6. 'bit' → logprob: -5.122193336486816
    7. 'mask' → logprob: -5.372193336486816
    8. 'j' → logprob: -5.372193336486816
    9. ' d' → logprob: -5.622193336486816
    10. '```' → logprob: -5.872193336486816

Token 940: ' de' (ID: 334)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.7905746698379517
    2. ' de' → logprob: -1.7905746698379517
    3. ' of' → logprob: -2.290574550628662
    4. ' d' → logprob: -2.915574550628662
    5. ' n' → logprob: -3.415574550628662
    6. ' ' → logprob: -3.540574550628662
    7. '[j' → logprob: -3.540574550628662
    8. 'r' → logprob: -3.915574550628662
    9. ' <' → logprob: -4.165574550628662
    10. '[' → logprob: -4.290574550628662

Token 941: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.6108957529067993
    2. 'la' → logprob: -1.3608957529067993
    3. 'd' → logprob: -1.9858957529067993
    4. 'l' → logprob: -3.9858956336975098
    5. ' la' → logprob: -4.11089563369751
    6. ' j' → logprob: -4.73589563369751
    7. ' d' → logprob: -5.23589563369751
    8. 'r' → logprob: -5.36089563369751
    9. 'f' → logprob: -5.98589563369751
    10. 'the' → logprob: -6.36089563369751

Token 942: ' n' (ID: 297)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.10799948126077652
    2. '!=' → logprob: -2.732999563217163
    3. ' n' → logprob: -3.607999563217163
    4. 'n' → logprob: -6.107999324798584
    5. '   ' → logprob: -6.357999324798584
    6. '```' → logprob: -7.107999324798584
    7. ' <' → logprob: -7.357999324798584
    8. '>' → logprob: -7.357999324798584
    9. ' >' → logprob: -7.482999324798584
    10. '           ' → logprob: -7.732999324798584

Token 943: ''est' (ID: 6616)
  Prédit: ''est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''est' → logprob: -0.22334861755371094
    2. '```' → logprob: -2.973348617553711
    3. 'est' → logprob: -3.098348617553711
    4. 'e' → logprob: -3.473348617553711
    5. '!=' → logprob: -4.223348617553711
    6. '#' → logprob: -4.598348617553711
    7. ''' → logprob: -4.848348617553711
    8. 'n' → logprob: -4.973348617553711
    9. ' n' → logprob: -5.098348617553711
    10. ''''' → logprob: -5.473348617553711

Token 944: ' pas' (ID: 2173)
  Prédit: ' pas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.4294675886631012
    2. 'pas' → logprob: -1.0544675588607788
    3. '```' → logprob: -8.05446720123291
    4. '_pas' → logprob: -8.92946720123291
    5. 'r' → logprob: -9.80446720123291
    6. 'not' → logprob: -9.92946720123291
    7. ' not' → logprob: -10.30446720123291
    8. '#' → logprob: -10.42946720123291
    9. 't' → logprob: -10.55446720123291
    10. 'Pas' → logprob: -10.55446720123291

Token 945: ' complètement' (ID: 81766)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.32644733786582947
    2. ' homog' → logprob: -1.9514473676681519
    3. 'z' → logprob: -3.0764472484588623
    4. 'f' → logprob: -3.9514472484588623
    5. ' homogeneous' → logprob: -4.201447486877441
    6. ' uniforme' → logprob: -4.326447486877441
    7. 'ident' → logprob: -4.826447486877441
    8. ' ident' → logprob: -4.826447486877441
    9. ' r' → logprob: -5.201447486877441
    10. 'hom' → logprob: -5.326447486877441

Token 946: ' homog' (ID: 143289)
  Prédit: 'hom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hom' → logprob: -0.13097846508026123
    2. ' homog' → logprob: -3.005978584289551
    3. 'uniform' → logprob: -3.005978584289551
    4. 'r' → logprob: -4.380978584289551
    5. 'f' → logprob: -5.755978584289551
    6. 'ident' → logprob: -6.380978584289551
    7. 'un' → logprob: -6.505978584289551
    8. 'const' → logprob: -6.880978584289551
    9. '```' → logprob: -7.005978584289551
    10. 'une' → logprob: -7.630978584289551

Token 947: 'ène' (ID: 22902)
  Prédit: 'ène'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ène' → logprob: -0.41832056641578674
    2. 'o' → logprob: -2.293320655822754
    3. 'og' → logprob: -2.668320655822754
    4. '`' → logprob: -3.543320655822754
    5. 'z' → logprob: -3.668320655822754
    6. 'r' → logprob: -4.043320655822754
    7. 'ane' → logprob: -4.168320655822754
    8. 'om' → logprob: -4.668320655822754
    9. '```' → logprob: -4.668320655822754
    10. 'a' → logprob: -5.543320655822754

Token 948: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.46304404735565186
    2. ':
' → logprob: -1.2130440473556519
    3. ' and' → logprob: -2.9630441665649414
    4. ',' → logprob: -4.588044166564941
    5. '           ' → logprob: -5.088044166564941
    6. '               ' → logprob: -5.963044166564941
    7. 'and' → logprob: -6.963044166564941
    8. ' or' → logprob: -7.213044166564941
    9. ' :' → logprob: -8.713044166564941
    10. '.' → logprob: -8.963044166564941

Token 949: '           ' (ID: 352)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.023412715643644333
    2. '           ' → logprob: -4.898412704467773
    3. ' if' → logprob: -5.148412704467773
    4. 'if' → logprob: -6.023412704467773
    5. '```' → logprob: -6.148412704467773
    6. '                       ' → logprob: -6.523412704467773
    7. '                               ' → logprob: -6.898412704467773
    8. '                   ' → logprob: -7.148412704467773
    9. '                           ' → logprob: -7.148412704467773
    10. ' and' → logprob: -7.273412704467773

Token 950: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.22603365778923035
    2. 'if' (adapté à ' if') → logprob: -2.2260336875915527
    3. '               ' → logprob: -2.6010336875915527
    4. ' if' → logprob: -3.9760336875915527
    5. '```' → logprob: -7.101033687591553
    6. '                   ' → logprob: -8.976033210754395
    7. '                       ' → logprob: -8.976033210754395
    8. '       ' → logprob: -9.101033210754395
    9. '   ' → logprob: -9.226033210754395
    10. '                           ' → logprob: -10.476033210754395

Token 951: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.4740900695323944
    2. 'r' → logprob: -0.9740900993347168
    3. ' not' → logprob: -11.974089622497559
    4. 'not' → logprob: -12.974089622497559
    5. '(r' → logprob: -13.349089622497559
    6. ' ' → logprob: -14.724089622497559
    7. ' ' → logprob: -14.724089622497559
    8. '   ' → logprob: -14.849089622497559
    9. 'f' → logprob: -14.849089622497559
    10. '	r' → logprob: -15.224089622497559

Token 952: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.38835957646369934
    2. '!=' → logprob: -1.138359546661377
    3. '<' → logprob: -6.888359546661377
    4. ' <' → logprob: -7.763359546661377
    5. '<|end|>' → logprob: -11.638360023498535
    6. '=' → logprob: -12.263360023498535
    7. ')!=' → logprob: -12.638360023498535
    8. '()!=' → logprob: -13.013360023498535
    9. '!==' → logprob: -13.013360023498535
    10. '==' → logprob: -13.138360023498535

Token 953: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.12692968547344208
    2. ' z' → logprob: -2.126929759979248
    3. '	z' → logprob: -14.12692928314209
    4. ' ' → logprob: -14.75192928314209
    5. '0' → logprob: -15.50192928314209
    6. ''z' → logprob: -16.376930236816406
    7. '```' → logprob: -16.876930236816406
    8. ' ' → logprob: -17.376930236816406
    9. '   ' → logprob: -17.876930236816406
    10. '​' → logprob: -18.376930236816406

Token 954: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.19875523447990417
    2. ':
' → logprob: -1.8237552642822266
    3. ' and' → logprob: -4.198755264282227
    4. '               ' → logprob: -6.073755264282227
    5. '           ' → logprob: -6.698755264282227
    6. 'and' → logprob: -9.698755264282227
    7. '                       ' → logprob: -9.948755264282227
    8. ' :' → logprob: -10.573755264282227
    9. '                           ' → logprob: -10.573755264282227
    10. ':
' → logprob: -10.698755264282227

Token 955: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0020227357745170593
    2. ' d' → logprob: -7.377022743225098
    3. '```' → logprob: -7.877022743225098
    4. '                               ' → logprob: -8.377022743225098
    5. '                   ' → logprob: -8.752022743225098
    6. '           ' → logprob: -8.877022743225098
    7. '                       ' → logprob: -8.877022743225098
    8. '                
' → logprob: -8.877022743225098
    9. '                           ' → logprob: -9.877022743225098
    10. ' and' → logprob: -10.502022743225098

Token 956: ' #' (ID: 1069)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.010030409321188927
    2. '                   ' → logprob: -5.635030269622803
    3. ' d' → logprob: -6.010030269622803
    4. 'if' → logprob: -6.260030269622803
    5. 'continue' → logprob: -7.135030269622803
    6. '               ' → logprob: -7.260030269622803
    7. 'prev' → logprob: -9.135030746459961
    8. 'for' → logprob: -9.510030746459961
    9. '   ' → logprob: -9.635030746459961
    10. '                       ' → logprob: -9.635030746459961

Token 957: ' On' (ID: 2160)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.07451928406953812
    2. 'f' → logprob: -3.699519395828247
    3. 'continue' → logprob: -3.699519395828247
    4. 'if' → logprob: -3.949519395828247
    5. 'val' → logprob: -7.324519157409668
    6. 'idx' → logprob: -7.699519157409668
    7. 'r' → logprob: -8.199519157409668
    8. 'x' → logprob: -8.824519157409668
    9. 'for' → logprob: -8.824519157409668
    10. 'k' → logprob: -8.824519157409668

Token 958: ' ajoute' (ID: 91611)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.21675170958042145
    2. 'if' → logprob: -2.59175181388855
    3. 'for' → logprob: -2.96675181388855
    4. 'continue' → logprob: -3.59175181388855
    5. '=' → logprob: -4.466751575469971
    6. '[' → logprob: -4.841751575469971
    7. 'break' → logprob: -5.341751575469971
    8. '#' → logprob: -5.716751575469971
    9. ' =' → logprob: -5.966751575469971
    10. ' for' → logprob: -6.841751575469971

Token 959: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.43756863474845886
    2. 'd' → logprob: -1.0625686645507812
    3. '1' → logprob: -5.187568664550781
    4. 'f' → logprob: -7.312568664550781
    5. ' ' → logprob: -7.562568664550781
    6. ' f' → logprob: -7.687568664550781
    7. '                   ' → logprob: -7.937568664550781
    8. '0' → logprob: -8.312568664550781
    9. '               ' → logprob: -8.437568664550781
    10. '           ' → logprob: -8.687568664550781

Token 960: '[ii' (ID: 75075)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.004102385137230158
    2. '[ii' → logprob: -5.5041022300720215
    3. '[z' → logprob: -11.25410270690918
    4. '[' → logprob: -12.12910270690918
    5. '[j' → logprob: -13.75410270690918
    6. 'i' → logprob: -13.87910270690918
    7. '[ip' → logprob: -13.87910270690918
    8. '[r' → logprob: -14.25410270690918
    9. '           ' → logprob: -14.75410270690918
    10. 'ii' → logprob: -14.87910270690918

Token 961: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.05106096714735031
    2. '[i' → logprob: -3.051060914993286
    3. '[j' → logprob: -6.426061153411865
    4. ' ][' → logprob: -8.676060676574707
    5. '       ' → logprob: -8.801060676574707
    6. '   ' → logprob: -9.051060676574707
    7. '[' → logprob: -9.426060676574707
    8. '```' → logprob: -9.801060676574707
    9. '-' → logprob: -10.051060676574707
    10. '           ' → logprob: -10.176060676574707

Token 962: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0011060406686738133
    2. '[j' → logprob: -6.876106262207031
    3. ' j' → logprob: -10.001106262207031
    4. '```' → logprob: -11.751106262207031
    5. '][' → logprob: -11.876106262207031
    6. '   ' → logprob: -12.626106262207031
    7. ']' → logprob: -13.251106262207031
    8. '           ' → logprob: -13.251106262207031
    9. '       ' → logprob: -13.501106262207031
    10. '[' → logprob: -14.376106262207031

Token 963: ']' (ID: 60)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.8483784198760986
    2. '[j' → logprob: -0.8483784198760986
    3. ']' → logprob: -2.7233784198760986
    4. '[' → logprob: -3.4733784198760986
    5. '])' → logprob: -4.7233781814575195
    6. '[i' → logprob: -4.9733781814575195
    7. '>>' → logprob: -5.2233781814575195
    8. '[r' → logprob: -5.2233781814575195
    9. '[(' → logprob: -5.4733781814575195
    10. '               ' → logprob: -5.7233781814575195

Token 964: ' à' (ID: 1221)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.6113153696060181
    2. 'to' → logprob: -2.1113152503967285
    3. '*' → logprob: -2.3613152503967285
    4. ' to' → logprob: -2.4863152503967285
    5. '                   ' → logprob: -2.7363152503967285
    6. '               ' → logprob: -2.7363152503967285
    7. '           ' → logprob: -4.3613152503967285
    8. 'd' → logprob: -5.3613152503967285
    9. '                       ' → logprob: -5.3613152503967285
    10. '   ' → logprob: -6.3613152503967285

Token 965: ' la' (ID: 557)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5336386561393738
    2. 'f' → logprob: -0.9086386561393738
    3. ' d' → logprob: -5.1586384773254395
    4. ' f' → logprob: -5.4086384773254395
    5. '           ' → logprob: -9.283638954162598
    6. '   ' → logprob: -9.783638954162598
    7. '                   ' → logprob: -10.783638954162598
    8. '	f' → logprob: -10.783638954162598
    9. '               ' → logprob: -11.533638954162598
    10. '       ' → logprob: -11.908638954162598

Token 966: ' case' (ID: 1890)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.05500776320695877
    2. 'f' → logprob: -2.9300076961517334
    3. ' d' → logprob: -9.430007934570312
    4. '```' → logprob: -11.180007934570312
    5. ' f' → logprob: -11.555007934570312
    6. '   ' → logprob: -12.555007934570312
    7. '           ' → logprob: -12.555007934570312
    8. 'for' → logprob: -13.305007934570312
    9. '
' → logprob: -13.555007934570312
    10. '       ' → logprob: -13.680007934570312

Token 967: ' correspondant' (ID: 146058)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.4130678176879883
    2. 'f' → logprob: -1.1630678176879883
    3. 'd' → logprob: -4.413067817687988
    4. '[f' → logprob: -5.663067817687988
    5. '                   ' → logprob: -5.913067817687988
    6. '               ' → logprob: -6.038067817687988
    7. '           ' → logprob: -6.163067817687988
    8. 'i' → logprob: -6.913067817687988
    9. ' f' → logprob: -6.913067817687988
    10. '   ' → logprob: -7.788067817687988

Token 968: ' à' (ID: 1221)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.16411715745925903
    2. '[d' → logprob: -2.9141170978546143
    3. ' d' → logprob: -3.6641170978546143
    4. 'à' → logprob: -3.6641170978546143
    5. ' à' → logprob: -4.289117336273193
    6. '                   ' → logprob: -4.539117336273193
    7. '               ' → logprob: -4.664117336273193
    8. 'a' → logprob: -5.414117336273193
    9. '   ' → logprob: -6.664117336273193
    10. '[' → logprob: -6.789117336273193

Token 969: ' un' (ID: 537)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.37521812319755554
    2. 'd' → logprob: -1.250218152999878
    3. 'f' → logprob: -3.750218152999878
    4. '   ' → logprob: -6.875217914581299
    5. '           ' → logprob: -7.500217914581299
    6. ' i' → logprob: -7.750217914581299
    7. ' d' → logprob: -8.750218391418457
    8. '       ' → logprob: -8.875218391418457
    9. '[i' → logprob: -9.000218391418457
    10. 'j' → logprob: -9.750218391418457

Token 970: ' pré' (ID: 9424)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4404264986515045
    2. 'd' → logprob: -2.4404265880584717
    3. '=' → logprob: -3.0654265880584717
    4. 'f' → logprob: -3.1904265880584717
    5. ' i' → logprob: -3.8154265880584717
    6. '[i' → logprob: -3.8154265880584717
    7. '   ' → logprob: -4.190426349639893
    8. ' =' → logprob: -4.315426349639893
    9. 'prefix' → logprob: -4.315426349639893
    10. '+' → logprob: -4.815426349639893

Token 971: 'fix' (ID: 11853)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.5543060302734375
    2. 'i' → logprob: -1.4293060302734375
    3. '[i' → logprob: -2.0543060302734375
    4. '       ' → logprob: -3.9293060302734375
    5. 'd' → logprob: -4.4293060302734375
    6. 'v' → logprob: -4.5543060302734375
    7. '           ' → logprob: -5.0543060302734375
    8. '               ' → logprob: -5.9293060302734375
    9. 'vious' → logprob: -6.0543060302734375
    10. 'r' → logprob: -6.5543060302734375

Token 972: 'e' (ID: 68)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.10794223845005035
    2. 'i' → logprob: -2.3579423427581787
    3. 'x' → logprob: -6.2329421043396
    4. 'd' → logprob: -6.8579421043396
    5. '][' → logprob: -6.8579421043396
    6. 'f' → logprob: -6.9829421043396
    7. '       ' → logprob: -6.9829421043396
    8. '[' → logprob: -8.357942581176758
    9. ' i' → logprob: -8.857942581176758
    10. 'r' → logprob: -8.982942581176758

Token 973: ' plus' (ID: 2932)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.002407169435173273
    2. '           ' → logprob: -7.127407073974609
    3. '   ' → logprob: -7.877407073974609
    4. '               ' → logprob: -7.877407073974609
    5. '       ' → logprob: -8.12740707397461
    6. '[' → logprob: -8.50240707397461
    7. '                   ' → logprob: -9.12740707397461
    8. 'i' → logprob: -9.87740707397461
    9. '[j' → logprob: -9.87740707397461
    10. 'd' → logprob: -10.12740707397461

Token 974: ' court' (ID: 10314)
  Prédit: 'court'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'court' → logprob: -0.5827993154525757
    2. 'long' → logprob: -1.2077993154525757
    3. 'grand' → logprob: -2.2077994346618652
    4. 'large' → logprob: -4.082799434661865
    5. 'pet' → logprob: -5.207799434661865
    6. 'cour' → logprob: -5.832799434661865
    7. 'pro' → logprob: -6.082799434661865
    8. 'i' → logprob: -6.207799434661865
    9. '```' → logprob: -7.457799434661865
    10. 'lo' → logprob: -7.832799434661865

Token 975: ' non' (ID: 2893)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.2399595081806183
    2. 'd' → logprob: -1.989959478378296
    3. '               ' → logprob: -3.489959478378296
    4. '                   ' → logprob: -4.239959716796875
    5. '[d' → logprob: -4.489959716796875
    6. '[' → logprob: -5.114959716796875
    7. ' d' → logprob: -5.614959716796875
    8. '][' → logprob: -5.739959716796875
    9. '           ' → logprob: -5.989959716796875
    10. ' [' → logprob: -6.989959716796875

Token 976: ' homog' (ID: 143289)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.34107351303100586
    2. '   ' → logprob: -2.966073513031006
    3. 'd' → logprob: -3.216073513031006
    4. '[i' → logprob: -3.216073513031006
    5. '           ' → logprob: -3.466073513031006
    6. '       ' → logprob: -3.841073513031006
    7. '               ' → logprob: -3.966073513031006
    8. ' i' → logprob: -4.091073513031006
    9. '(i' → logprob: -4.216073513031006
    10. 'r' → logprob: -4.466073513031006

Token 977: 'ène' (ID: 22902)
  Prédit: 'ène'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ène' → logprob: -0.1795666217803955
    2. 'og' → logprob: -2.0545666217803955
    3. 'éné' → logprob: -4.554566383361816
    4. 'e' → logprob: -5.304566383361816
    5. 'o' → logprob: -5.429566383361816
    6. 'ene' → logprob: -5.804566383361816
    7. '[i' → logprob: -6.054566383361816
    8. 'é' → logprob: -6.304566383361816
    9. '`' → logprob: -6.429566383361816
    10. '[' → logprob: -6.679566383361816

Token 978: '.
' (ID: 558)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.031342048197984695
    2. '[' → logprob: -4.031342029571533
    3. '               ' → logprob: -5.906342029571533
    4. 'd' → logprob: -6.281342029571533
    5. ' [' → logprob: -6.406342029571533
    6. '                   ' → logprob: -6.656342029571533
    7. '][' → logprob: -6.906342029571533
    8. '```' → logprob: -7.156342029571533
    9. '           ' → logprob: -7.406342029571533
    10. '   ' → logprob: -7.406342029571533

Token 979: '               ' (ID: 506)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.211253359913826
    2. ' d' → logprob: -1.7112534046173096
    3. '               ' → logprob: -5.4612531661987305
    4. '           ' → logprob: -6.3362531661987305
    5. '   ' → logprob: -6.7112531661987305
    6. '                   ' → logprob: -6.9612531661987305
    7. '```' → logprob: -6.9612531661987305
    8. '       ' → logprob: -8.83625316619873
    9. '[' → logprob: -8.83625316619873
    10. '	d' → logprob: -9.21125316619873

Token 980: ' #' (ID: 1069)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0004037402104586363
    2. ' d' → logprob: -7.875403881072998
    3. '           ' → logprob: -11.37540340423584
    4. '               ' → logprob: -12.12540340423584
    5. '                   ' → logprob: -12.12540340423584
    6. '   ' → logprob: -14.25040340423584
    7. '       ' → logprob: -15.50040340423584
    8. 'f' → logprob: -15.62540340423584
    9. '	d' → logprob: -16.000404357910156
    10. '                       ' → logprob: -17.000404357910156

Token 981: ' On' (ID: 2160)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0034755785018205643
    2. ' d' → logprob: -5.753475666046143
    3. '               ' → logprob: -9.128475189208984
    4. '           ' → logprob: -9.378475189208984
    5. '                   ' → logprob: -9.503475189208984
    6. 'f' → logprob: -11.378475189208984
    7. '   ' → logprob: -12.003475189208984
    8. '```' → logprob: -12.378475189208984
    9. '                       ' → logprob: -12.503475189208984
    10. '       ' → logprob: -13.503475189208984

Token 982: ' "' (ID: 392)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.0394389629364014
    2. '[i' → logprob: -1.4144389629364014
    3. '           ' → logprob: -2.5394389629364014
    4. 'for' → logprob: -2.6644389629364014
    5. 'i' → logprob: -2.7894389629364014
    6. '               ' → logprob: -3.1644389629364014
    7. '                   ' → logprob: -3.7894389629364014
    8. '=' → logprob: -4.0394392013549805
    9. '][' → logprob: -4.1644392013549805
    10. 'f' → logprob: -4.2894392013549805

Token 983: 'compact' (ID: 82805)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.3178318440914154
    2. 'for' → logprob: -2.6928317546844482
    3. '               ' → logprob: -3.1928317546844482
    4. '           ' → logprob: -3.3178317546844482
    5. 'f' → logprob: -3.4428317546844482
    6. ' d' → logprob: -3.8178317546844482
    7. '                   ' → logprob: -4.317831993103027
    8. ' for' → logprob: -4.942831993103027
    9. 'if' → logprob: -4.942831993103027
    10. '       ' → logprob: -5.067831993103027

Token 984: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.1206999272108078
    2. 'er' → logprob: -2.495699882507324
    3. '           ' → logprob: -4.995699882507324
    4. 'é' → logprob: -5.495699882507324
    5. '       ' → logprob: -5.745699882507324
    6. ']' → logprob: -5.745699882507324
    7. '   ' → logprob: -6.120699882507324
    8. '               ' → logprob: -6.370699882507324
    9. '[i' → logprob: -6.495699882507324
    10. '[e' → logprob: -6.620699882507324

Token 985: '"' (ID: 1)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.3229818046092987
    2. ' d' → logprob: -1.572981834411621
    3. '           ' → logprob: -3.822981834411621
    4. '                   ' → logprob: -4.072981834411621
    5. '               ' → logprob: -4.322981834411621
    6. '   ' → logprob: -5.072981834411621
    7. '       ' → logprob: -5.822981834411621
    8. ' ' → logprob: -6.822981834411621
    9. 'f' → logprob: -7.072981834411621
    10. '[d' → logprob: -7.322981834411621

Token 986: ' j' (ID: 441)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.09250523149967194
    2. ' d' → logprob: -2.8425052165985107
    3. '           ' → logprob: -4.71750545501709
    4. '                   ' → logprob: -4.84250545501709
    5. '[i' → logprob: -5.21750545501709
    6. '               ' → logprob: -5.71750545501709
    7. '[j' → logprob: -7.34250545501709
    8. '   ' → logprob: -7.71750545501709
    9. ' [' → logprob: -7.84250545501709
    10. '[' → logprob: -8.09250545501709

Token 987: ' en' (ID: 469)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.49038708209991455
    2. '[j' → logprob: -1.9903870820999146
    3. '[' → logprob: -2.490386962890625
    4. '>>' → logprob: -2.740386962890625
    5. '][' → logprob: -3.240386962890625
    6. '               ' → logprob: -3.865386962890625
    7. ' >>' → logprob: -4.990386962890625
    8. '   ' → logprob: -5.115386962890625
    9. '           ' → logprob: -5.365386962890625
    10. ']' → logprob: -5.365386962890625

Token 988: ' ramen' (ID: 90938)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.2972203493118286
    2. 'd' → logprob: -1.6722203493118286
    3. 'j' → logprob: -1.9222203493118286
    4. '>>' → logprob: -1.9222203493118286
    5. '(j' → logprob: -1.9222203493118286
    6. 'r' → logprob: -3.172220230102539
    7. '>>(' → logprob: -3.922220230102539
    8. '(' → logprob: -5.297220230102539
    9. '>' → logprob: -6.047220230102539
    10. '   ' → logprob: -6.172220230102539

Token 989: 'ant' (ID: 493)
  Prédit: 'geant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'geant' → logprob: -0.8561280965805054
    2. 'g' → logprob: -1.3561280965805054
    3. 'ge' → logprob: -2.231128215789795
    4. 'nant' → logprob: -3.106128215789795
    5. 'ant' → logprob: -3.231128215789795
    6. '[j' → logprob: -3.356128215789795
    7. 'ger' → logprob: -3.606128215789795
    8. 'd' → logprob: -4.231128215789795
    9. '   ' → logprob: -4.731128215789795
    10. '           ' → logprob: -4.856128215789795

Token 990: ' la' (ID: 557)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.2484833002090454
    2. 'd' → logprob: -1.6234833002090454
    3. 'j' → logprob: -1.9984833002090454
    4. '[j' → logprob: -1.9984833002090454
    5. 'i' → logprob: -2.748483180999756
    6. '   ' → logprob: -3.623483180999756
    7. 'r' → logprob: -3.998483180999756
    8. '(i' → logprob: -3.998483180999756
    9. ' (' → logprob: -4.373483180999756
    10. ' d' → logprob: -4.623483180999756

Token 991: ' sé' (ID: 7462)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.0491821765899658
    2. '>>' → logprob: -1.4241821765899658
    3. 'z' → logprob: -2.174182176589966
    4. 'r' → logprob: -2.174182176589966
    5. '1' → logprob: -3.049182176589966
    6. ' >>' → logprob: -3.674182176589966
    7. 'j' → logprob: -4.049181938171387
    8. '`' → logprob: -4.299181938171387
    9. '[i' → logprob: -4.299181938171387
    10. '(i' → logprob: -4.924181938171387

Token 992: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.0022141309455037117
    2. 'q' → logprob: -6.502213954925537
    3. 'quences' → logprob: -8.377214431762695
    4. 'lection' → logprob: -9.002214431762695
    5. 'quent' → logprob: -9.752214431762695
    6. 'rie' → logprob: -9.877214431762695
    7. 'qu' → logprob: -10.127214431762695
    8. 'que' → logprob: -10.252214431762695
    9. 'g' → logprob: -10.877214431762695
    10. 'lect' → logprob: -11.002214431762695

Token 993: ' d' (ID: 272)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.5069921612739563
    2. '>>' → logprob: -1.8819921016693115
    3. '[j' → logprob: -2.0069921016693115
    4. '[' → logprob: -3.8819921016693115
    5. '           ' → logprob: -4.131992340087891
    6. '   ' → logprob: -4.506992340087891
    7. '       ' → logprob: -4.756992340087891
    8. '               ' → logprob: -4.756992340087891
    9. 'i' → logprob: -4.881992340087891
    10. '[:' → logprob: -5.131992340087891

Token 994: ''ind' (ID: 82245)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.28783854842185974
    2. '[i' → logprob: -1.5378385782241821
    3. '   ' → logprob: -4.412838459014893
    4. 'f' → logprob: -4.662838459014893
    5. 'd' → logprob: -5.787838459014893
    6. 'e' → logprob: -6.537838459014893
    7. 'z' → logprob: -6.787838459014893
    8. 'r' → logprob: -7.037838459014893
    9. '           ' → logprob: -7.162838459014893
    10. 'j' → logprob: -7.287838459014893

Token 995: 'ice' (ID: 603)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.21119718253612518
    2. 'i' → logprob: -1.8361971378326416
    3. 'ices' → logprob: -4.836197376251221
    4. 'ice' → logprob: -4.961197376251221
    5. '`' → logprob: -5.461197376251221
    6. '```' → logprob: -5.961197376251221
    7. 'e' → logprob: -6.836197376251221
    8. '[i' → logprob: -6.961197376251221
    9. 'ixe' → logprob: -7.086197376251221
    10. 'j' → logprob: -7.211197376251221

Token 996: ' ii' (ID: 28354)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.22981178760528564
    2. '[i' → logprob: -2.979811668395996
    3. '   ' → logprob: -3.354811668395996
    4. '           ' → logprob: -3.729811668395996
    5. '```' → logprob: -4.104811668395996
    6. '       ' → logprob: -4.354811668395996
    7. '(i' → logprob: -4.479811668395996
    8. 'j' → logprob: -4.979811668395996
    9. '               ' → logprob: -5.354811668395996
    10. ' i' → logprob: -5.354811668395996

Token 997: ' à' (ID: 1221)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '][' → logprob: -0.1720815747976303
    2. '[i' → logprob: -2.297081470489502
    3. '+' → logprob: -4.547081470489502
    4. '   ' → logprob: -4.797081470489502
    5. '[j' → logprob: -4.797081470489502
    6. ']' → logprob: -5.172081470489502
    7. '       ' → logprob: -5.172081470489502
    8. '[' → logprob: -5.547081470489502
    9. '           ' → logprob: -5.672081470489502
    10. '>>' → logprob: -6.422081470489502

Token 998: ' une' (ID: 2463)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.370563268661499
    2. 'd' → logprob: -1.620563268661499
    3. '[i' → logprob: -2.495563268661499
    4. 'j' → logprob: -4.620563507080078
    5. 'r' → logprob: -5.870563507080078
    6. ' i' → logprob: -5.995563507080078
    7. '   ' → logprob: -6.120563507080078
    8. '(i' → logprob: -6.120563507080078
    9. '[j' → logprob: -6.120563507080078
    10. '```' → logprob: -6.495563507080078

Token 999: ' sé' (ID: 7462)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.8929870128631592
    2. 'i' → logprob: -1.6429870128631592
    3. 'tail' → logprob: -2.517987012863159
    4. 'case' → logprob: -3.017987012863159
    5. '1' → logprob: -3.392987012863159
    6. 'j' → logprob: -3.642987012863159
    7. '+' → logprob: -3.767987012863159
    8. 'r' → logprob: -4.017987251281738
    9. '```' → logprob: -4.142987251281738
    10. 'd' → logprob: -4.392987251281738

Token 1000: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.0011399771319702268
    2. 'q' → logprob: -7.501140117645264
    3. 'quent' → logprob: -9.376139640808105
    4. '   ' → logprob: -9.376139640808105
    5. '```' → logprob: -9.501139640808105
    6. 'quences' → logprob: -9.626139640808105
    7. '#' → logprob: -10.251139640808105
    8. '`' → logprob: -10.251139640808105
    9. 'QUENCE' → logprob: -10.501139640808105
    10. 'qu' → logprob: -10.626139640808105

Token 1001: ' de' (ID: 334)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.3590259850025177
    2. 'plus' → logprob: -2.6090259552001953
    3. '[j' → logprob: -2.9840259552001953
    4. 'i' → logprob: -3.2340259552001953
    5. '[' → logprob: -3.8590259552001953
    6. '   ' → logprob: -3.8590259552001953
    7. 'r' → logprob: -4.734025955200195
    8. ' plus' → logprob: -4.734025955200195
    9. '```' → logprob: -4.734025955200195
    10. '           ' → logprob: -5.109025955200195

Token 1002: ' longueur' (ID: 104613)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.686586320400238
    2. 'tail' → logprob: -1.4365863800048828
    3. 'i' → logprob: -1.9365863800048828
    4. 'length' → logprob: -2.936586380004883
    5. 'long' → logprob: -3.686586380004883
    6. 'r' → logprob: -4.811586380004883
    7. '[i' → logprob: -5.311586380004883
    8. ' longueur' → logprob: -5.436586380004883
    9. '```' → logprob: -5.436586380004883
    10. '(i' → logprob: -5.811586380004883

Token 1003: ' ii' (ID: 28354)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.3433750569820404
    2. 'i' → logprob: -1.4683750867843628
    3. 'r' → logprob: -2.8433749675750732
    4. ' z' → logprob: -7.343375205993652
    5. '   ' → logprob: -7.718375205993652
    6. ' i' → logprob: -7.968375205993652
    7. '```' → logprob: -8.218375205993652
    8. 'j' → logprob: -8.843375205993652
    9. '``' → logprob: -9.593375205993652
    10. ' r' → logprob: -9.968375205993652

Token 1004: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.05543100833892822
    2. ' -' → logprob: -3.1804308891296387
    3. '           ' → logprob: -5.305430889129639
    4. '       ' → logprob: -5.555430889129639
    5. '   ' → logprob: -6.805430889129639
    6. '               ' → logprob: -7.305430889129639
    7. '[i' → logprob: -7.805430889129639
    8. '-i' → logprob: -7.930430889129639
    9. 'i' → logprob: -8.680431365966797
    10. '                   ' → logprob: -8.930431365966797

Token 1005: ' r' (ID: 428)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00039373442996293306
    2. '   ' → logprob: -8.750393867492676
    3. 'z' → logprob: -9.125393867492676
    4. '	' → logprob: -10.250393867492676
    5. ' ' → logprob: -10.625393867492676
    6. 'r' → logprob: -11.625393867492676
    7. '           ' → logprob: -11.625393867492676
    8. '                   ' → logprob: -11.625393867492676
    9. '2' → logprob: -12.000393867492676
    10. '		' → logprob: -12.125393867492676

Token 1006: ',' (ID: 11)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.5886619091033936
    2. '][' → logprob: -1.0886619091033936
    3. 'd' → logprob: -3.8386619091033936
    4. '       ' → logprob: -3.9636619091033936
    5. '           ' → logprob: -4.088662147521973
    6. '[' → logprob: -4.588662147521973
    7. '               ' → logprob: -4.713662147521973
    8. '   ' → logprob: -4.838662147521973
    9. ']' → logprob: -4.963662147521973
    10. '-' → logprob: -5.588662147521973

Token 1007: ' 
' (ID: 793)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6957768797874451
    2. 'ii' → logprob: -1.1957769393920898
    3. '           ' → logprob: -3.19577693939209
    4. 'j' → logprob: -3.44577693939209
    5. '       ' → logprob: -3.69577693939209
    6. '               ' → logprob: -4.07077693939209
    7. '                   ' → logprob: -4.32077693939209
    8. '(ii' → logprob: -4.44577693939209
    9. '   ' → logprob: -4.57077693939209
    10. ' ii' → logprob: -4.69577693939209

Token 1008: '               ' (ID: 506)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.9365053772926331
    2. 'j' → logprob: -1.9365053176879883
    3. '           ' → logprob: -2.1865053176879883
    4. 'd' → logprob: -2.3115053176879883
    5. '               ' → logprob: -2.8115053176879883
    6. '                   ' → logprob: -3.0615053176879883
    7. '       ' → logprob: -3.1865053176879883
    8. 'f' → logprob: -3.5615053176879883
    9. '[i' → logprob: -4.186505317687988
    10. '   ' → logprob: -4.311505317687988

Token 1009: ' #' (ID: 1069)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.39127615094184875
    2. 'j' → logprob: -2.0162761211395264
    3. 'ii' → logprob: -2.1412761211395264
    4. '           ' → logprob: -3.8912761211395264
    5. '       ' → logprob: -4.1412763595581055
    6. '               ' → logprob: -4.7662763595581055
    7. '   ' → logprob: -5.0162763595581055
    8. 'd' → logprob: -5.0162763595581055
    9. '                   ' → logprob: -5.6412763595581055
    10. ' i' → logprob: -6.2662763595581055

Token 1010: ' On' (ID: 2160)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.8869026303291321
    2. 'i' → logprob: -1.0119025707244873
    3. '           ' → logprob: -2.8869025707244873
    4. '       ' → logprob: -3.6369025707244873
    5. '               ' → logprob: -3.8869025707244873
    6. '                   ' → logprob: -4.011902809143066
    7. 'ii' → logprob: -4.011902809143066
    8. '   ' → logprob: -4.261902809143066
    9. ' (' → logprob: -4.511902809143066
    10. '(' → logprob: -4.511902809143066

Token 1011: ' dé' (ID: 2393)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -1.4788471460342407
    2. '           ' → logprob: -2.103847026824951
    3. '][' → logprob: -2.103847026824951
    4. ' continue' → logprob: -2.478847026824951
    5. 'd' → logprob: -2.853847026824951
    6. 'for' → logprob: -2.978847026824951
    7. ']' → logprob: -3.228847026824951
    8. '       ' → logprob: -3.228847026824951
    9. 'j' → logprob: -3.728847026824951
    10. '               ' → logprob: -3.728847026824951

Token 1012: 'place' (ID: 3243)
  Prédit: 'cal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cal' → logprob: -0.5578792691230774
    2. 'i' → logprob: -1.8078792095184326
    3. '[i' → logprob: -2.3078792095184326
    4. 'c' → logprob: -2.6828792095184326
    5. 'caler' → logprob: -3.4328792095184326
    6. '   ' → logprob: -3.6828792095184326
    7. 'j' → logprob: -4.682879447937012
    8. 'cr' → logprob: -5.307879447937012
    9. 'cale' → logprob: -5.682879447937012
    10. 'd' → logprob: -5.807879447937012

Token 1013: ' le' (ID: 505)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.1902039796113968
    2. 'i' → logprob: -2.440203905105591
    3. '[i' → logprob: -3.190203905105591
    4. ' d' → logprob: -4.44020414352417
    5. 'j' → logprob: -4.69020414352417
    6. 'r' → logprob: -5.44020414352417
    7. '   ' → logprob: -5.44020414352417
    8. ' i' → logprob: -6.31520414352417
    9. '1' → logprob: -6.44020414352417
    10. '[j' → logprob: -6.56520414352417

Token 1014: ' pré' (ID: 9424)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5660723447799683
    2. 'd' → logprob: -1.3160723447799683
    3. 'j' → logprob: -2.566072463989258
    4. 'ii' → logprob: -3.566072463989258
    5. 'r' → logprob: -3.941072463989258
    6. '`' → logprob: -4.816072463989258
    7. '(i' → logprob: -4.816072463989258
    8. '```' → logprob: -5.066072463989258
    9. '[i' → logprob: -5.441072463989258
    10. 'f' → logprob: -6.191072463989258

Token 1015: 'fix' (ID: 11853)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.1271089315414429
    2. 'z' → logprob: -1.2521089315414429
    3. 'f' → logprob: -2.0021090507507324
    4. 'j' → logprob: -2.5021090507507324
    5. 'd' → logprob: -3.1271090507507324
    6. 'i' → logprob: -3.2521090507507324
    7. '       ' → logprob: -4.502109050750732
    8. 'cal' → logprob: -4.502109050750732
    9. '   ' → logprob: -4.877109050750732
    10. 'fi' → logprob: -5.127109050750732

Token 1016: 'e' (ID: 68)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.07704799622297287
    2. 's' → logprob: -3.5770480632781982
    3. '       ' → logprob: -4.702047824859619
    4. '   ' → logprob: -5.202047824859619
    5. 'xes' → logprob: -5.202047824859619
    6. 't' → logprob: -5.702047824859619
    7. 'ces' → logprob: -6.202047824859619
    8. '```' → logprob: -6.327047824859619
    9. 'ci' → logprob: -6.452047824859619
    10. 'c' → logprob: -6.827047824859619

Token 1017: ' de' (ID: 334)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.0761703252792358
    2. '>>' → logprob: -1.7011703252792358
    3. '<<' → logprob: -1.8261703252792358
    4. '   ' → logprob: -3.4511704444885254
    5. '```' → logprob: -3.5761704444885254
    6. '=' → logprob: -3.7011704444885254
    7. 'i' → logprob: -3.8261704444885254
    8. '       ' → logprob: -3.8261704444885254
    9. 'd' → logprob: -4.076170444488525
    10. '[j' → logprob: -4.201170444488525

Token 1018: ' j' (ID: 441)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.049424607306718826
    2. 'z' → logprob: -3.549424648284912
    3. 'j' → logprob: -4.674424648284912
    4. 'i' → logprob: -5.299424648284912
    5. '(r' → logprob: -6.424424648284912
    6. 'size' → logprob: -7.924424648284912
    7. 'length' → logprob: -7.924424648284912
    8. '[r' → logprob: -7.924424648284912
    9. '   ' → logprob: -8.049424171447754
    10. 'ii' → logprob: -8.424424171447754

Token 1019: ' >>' (ID: 6832)
  Prédit: '>>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.10018670558929443
    2. '<<' → logprob: -3.225186824798584
    3. '[i' → logprob: -4.475186824798584
    4. '>>(' → logprob: -5.100186824798584
    5. ' >>' → logprob: -5.350186824798584
    6. '```' → logprob: -5.350186824798584
    7. ')' → logprob: -5.725186824798584
    8. '           ' → logprob: -5.850186824798584
    9. '[j' → logprob: -5.975186824798584
    10. '   ' → logprob: -6.100186824798584

Token 1020: ' z' (ID: 579)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0732993483543396
    2. 'z' → logprob: -2.9482994079589844
    3. '(r' → logprob: -4.448299407958984
    4. '(z' → logprob: -5.573299407958984
    5. '(i' → logprob: -6.698299407958984
    6. ' r' → logprob: -7.573299407958984
    7. 'i' → logprob: -7.698299407958984
    8. '(' → logprob: -8.698299407958984
    9. ' (' → logprob: -8.823299407958984
    10. ' z' → logprob: -9.698299407958984

Token 1021: ' et' (ID: 859)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.0877094268798828
    2. '>>' → logprob: -1.3377094268798828
    3. '```' → logprob: -2.087709426879883
    4. '<<' → logprob: -2.587709426879883
    5. '-' → logprob: -2.837709426879883
    6. '       ' → logprob: -3.837709426879883
    7. ')' → logprob: -4.212709426879883
    8. '           ' → logprob: -4.337709426879883
    9. '   ' → logprob: -4.837709426879883
    10. '-r' → logprob: -4.837709426879883

Token 1022: ' on' (ID: 402)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.5314248204231262
    2. '(r' → logprob: -1.4064247608184814
    3. ' (' → logprob: -2.2814247608184814
    4. '((' → logprob: -3.5314247608184814
    5. ' r' → logprob: -4.0314249992370605
    6. ' ((' → logprob: -4.5314249992370605
    7. '(j' → logprob: -5.5314249992370605
    8. '(i' → logprob: -7.1564249992370605
    9. '(' → logprob: -7.6564249992370605
    10. '(f' → logprob: -7.6564249992370605

Token 1023: ' garde' (ID: 65309)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '((' → logprob: -0.4906909167766571
    2. '(r' → logprob: -1.2406909465789795
    3. 'r' → logprob: -2.8656909465789795
    4. '|' → logprob: -3.7406909465789795
    5. ' ((' → logprob: -5.4906907081604
    6. '(' → logprob: -5.7406907081604
    7. '(j' → logprob: -6.1156907081604
    8. ' (' → logprob: -6.2406907081604
    9. '(d' → logprob: -6.8656907081604
    10. '(|' → logprob: -6.8656907081604

Token 1024: ' les' (ID: 1341)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '((' → logprob: -0.9655743837356567
    2. '(r' → logprob: -1.2155743837356567
    3. '(j' → logprob: -1.4655743837356567
    4. 'r' → logprob: -2.840574264526367
    5. ' (' → logprob: -3.840574264526367
    6. ' ((' → logprob: -5.215574264526367
    7. '(((' → logprob: -6.465574264526367
    8. 'j' → logprob: -6.590574264526367
    9. ' r' → logprob: -7.340574264526367
    10. '(f' → logprob: -7.340574264526367

Token 1025: ' (' (ID: 350)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.3757614493370056
    2. '(r' → logprob: -2.1257615089416504
    3. '(j' → logprob: -2.3757615089416504
    4. ' (' → logprob: -2.7507615089416504
    5. ' r' → logprob: -4.25076150894165
    6. 'j' → logprob: -4.50076150894165
    7. '((' → logprob: -5.87576150894165
    8. ' j' → logprob: -6.37576150894165
    9. '(' → logprob: -6.50076150894165
    10. 'mask' → logprob: -6.87576150894165

Token 1026: 'z' (ID: 89)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.194467306137085
    2. 'r' → logprob: -1.319467306137085
    3. '(j' → logprob: -1.569467306137085
    4. 'mask' → logprob: -1.819467306137085
    5. '(r' → logprob: -3.194467306137085
    6. '(mask' → logprob: -4.819467544555664
    7. 'z' → logprob: -5.319467544555664
    8. '((' → logprob: -6.319467544555664
    9. ' (' → logprob: -6.694467544555664
    10. '(' → logprob: -7.194467544555664

Token 1027: ' -' (ID: 533)
  Prédit: '-r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-r' → logprob: -0.7218303084373474
    2. ' -' → logprob: -1.4718303680419922
    3. '-' → logprob: -1.8468303680419922
    4. 'r' → logprob: -2.096830368041992
    5. '   ' → logprob: -7.096830368041992
    6. ')' → logprob: -7.346830368041992
    7. '<<' → logprob: -7.971830368041992
    8. ' ' → logprob: -8.096830368041992
    9. '       ' → logprob: -8.346830368041992
    10. '_r' → logprob: -8.721830368041992

Token 1028: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.00023083435371518135
    2. ' r' → logprob: -8.37523078918457
    3. '1' → logprob: -16.50023078918457
    4. '_r' → logprob: -16.87523078918457
    5. '	r' → logprob: -17.12523078918457
    6. '   ' → logprob: -17.50023078918457
    7. ' ' → logprob: -18.00023078918457
    8. '```' → logprob: -18.37523078918457
    9. '           ' → logprob: -18.62523078918457
    10. '    ' → logprob: -18.75023078918457

Token 1029: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012858765199780464
    2. ' bits' → logprob: -5.637858867645264
    3. ' )' → logprob: -5.762858867645264
    4. 'bits' → logprob: -5.762858867645264
    5. '_bits' → logprob: -7.012858867645264
    6. ' ' → logprob: -7.637858867645264
    7. ')<<' → logprob: -8.137858390808105
    8. ')-' → logprob: -8.762858390808105
    9. 'r' → logprob: -9.137858390808105
    10. ')]' → logprob: -9.262858390808105

Token 1030: ' bits' (ID: 18189)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.7990619540214539
    2. '(j' → logprob: -1.6740620136260986
    3. ')' → logprob: -1.7990620136260986
    4. 'r' → logprob: -3.2990620136260986
    5. '((' → logprob: -3.4240620136260986
    6. '```' → logprob: -3.6740620136260986
    7. ' bits' → logprob: -3.9240620136260986
    8. 'j' → logprob: -4.2990617752075195
    9. '<<' → logprob: -4.9240617752075195
    10. ' ' → logprob: -5.1740617752075195

Token 1031: ' rest' (ID: 2867)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '|' → logprob: -0.7290501594543457
    2. '((' → logprob: -1.9790501594543457
    3. '<<' → logprob: -2.3540501594543457
    4. '[j' → logprob: -3.1040501594543457
    5. ' |' → logprob: -3.3540501594543457
    6. '>>' → logprob: -3.3540501594543457
    7. ')' → logprob: -3.4790501594543457
    8. '(j' → logprob: -3.4790501594543457
    9. '[(' → logprob: -4.104050159454346
    10. '```' → logprob: -4.104050159454346

Token 1032: 'ants' (ID: 2027)
  Prédit: 'ant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.6555447578430176
    2. 'ants' → logprob: -1.2805447578430176
    3. 'es' → logprob: -2.6555447578430176
    4. '[j' → logprob: -3.6555447578430176
    5. '(j' → logprob: -4.155544757843018
    6. '>>' → logprob: -4.280544757843018
    7. ']' → logprob: -4.405544757843018
    8. 'ante' → logprob: -4.530544757843018
    9. 'antes' → logprob: -5.030544757843018
    10. 're' → logprob: -5.155544757843018

Token 1033: ',' (ID: 11)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '|' → logprob: -0.7502060532569885
    2. '           ' → logprob: -2.5002059936523438
    3. '               ' → logprob: -2.5002059936523438
    4. '((' → logprob: -2.7502059936523438
    5. '[j' → logprob: -2.7502059936523438
    6. '                   ' → logprob: -3.1252059936523438
    7. '<<' → logprob: -3.1252059936523438
    8. ' |' → logprob: -3.2502059936523438
    9. '+' → logprob: -4.000205993652344
    10. '>>' → logprob: -4.125205993652344

Token 1034: ' 
' (ID: 793)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.3254470825195312
    2. '(j' → logprob: -1.4504470825195312
    3. 'j' → logprob: -1.8254470825195312
    4. '(' → logprob: -2.9504470825195312
    5. ' j' → logprob: -3.0754470825195312
    6. '|' → logprob: -3.2004470825195312
    7. '+' → logprob: -3.3254470825195312
    8. '```' → logprob: -3.3254470825195312
    9. '((' → logprob: -3.7004470825195312
    10. '`' → logprob: -3.9504470825195312

Token 1035: '               ' (ID: 506)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.0982407331466675
    2. '+' → logprob: -2.098240852355957
    3. '```' → logprob: -2.223240852355957
    4. 'j' → logprob: -2.473240852355957
    5. '(' → logprob: -3.098240852355957
    6. ' +' → logprob: -3.223240852355957
    7. ' j' → logprob: -3.598240852355957
    8. '((' → logprob: -3.598240852355957
    9. '(j' → logprob: -3.723240852355957
    10. '<<' → logprob: -3.848240852355957

Token 1036: ' #' (ID: 1069)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.2140610218048096
    2. '(j' → logprob: -1.3390610218048096
    3. '((' → logprob: -2.4640610218048096
    4. '(' → logprob: -2.7140610218048096
    5. 'j' → logprob: -3.0890610218048096
    6. '(r' → logprob: -3.2140610218048096
    7. '<<' → logprob: -3.3390610218048096
    8. '|' → logprob: -3.5890610218048096
    9. 'r' → logprob: -3.7140610218048096
    10. '+' → logprob: -3.8390610218048096

Token 1037: ' ce' (ID: 2357)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.3367257118225098
    2. '((' → logprob: -1.5867257118225098
    3. 'd' → logprob: -2.2117257118225098
    4. '(' → logprob: -2.3367257118225098
    5. '(j' → logprob: -2.7117257118225098
    6. 'j' → logprob: -3.3367257118225098
    7. '+' → logprob: -3.4617257118225098
    8. '(d' → logprob: -3.7117257118225098
    9. ' ((' → logprob: -3.8367257118225098
    10. '```' → logprob: -4.08672571182251

Token 1038: ' qui' (ID: 2780)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.9818849563598633
    2. '           ' → logprob: -1.9818849563598633
    3. '>>' → logprob: -1.9818849563598633
    4. '#' → logprob: -2.3568849563598633
    5. '<<' → logprob: -2.6068849563598633
    6. '   ' → logprob: -2.7318849563598633
    7. '               ' → logprob: -2.9818849563598633
    8. '          ' → logprob: -3.6068849563598633
    9. '=' → logprob: -3.7318849563598633
    10. ' >>' → logprob: -3.8568849563598633

Token 1039: ' permet' (ID: 11798)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.49574613571167
    2. ']' → logprob: -1.99574613571167
    3. '+' → logprob: -2.12074613571167
    4. ' continue' → logprob: -2.49574613571167
    5. ')' → logprob: -2.87074613571167
    6. '|' → logprob: -2.99574613571167
    7. ' j' → logprob: -2.99574613571167
    8. ' +=' → logprob: -3.37074613571167
    9. '```' → logprob: -3.49574613571167
    10. 'continue' → logprob: -3.62074613571167

Token 1040: ' de' (ID: 334)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.24517808854579926
    2. ' d' → logprob: -1.7451781034469604
    3. '           ' → logprob: -4.24517822265625
    4. '               ' → logprob: -4.74517822265625
    5. '       ' → logprob: -5.37017822265625
    6. '                   ' → logprob: -5.62017822265625
    7. '                       ' → logprob: -6.24517822265625
    8. '   ' → logprob: -6.37017822265625
    9. '(' → logprob: -6.49517822265625
    10. '(d' → logprob: -6.99517822265625

Token 1041: ' compt' (ID: 39238)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.006929800380021334
    2. 'f' → logprob: -6.131929874420166
    3. '```' → logprob: -7.006929874420166
    4. ' d' → logprob: -7.256929874420166
    5. '[j' → logprob: -7.631929874420166
    6. 'j' → logprob: -7.631929874420166
    7. '+' → logprob: -7.756929874420166
    8. 'continue' → logprob: -8.256929397583008
    9. 'add' → logprob: -8.631929397583008
    10. '[' → logprob: -9.381929397583008

Token 1042: 'abil' (ID: 4168)
  Prédit: 'enir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'enir' → logprob: -0.6518487930297852
    2. 'in' → logprob: -0.9018487930297852
    3. 'iner' → logprob: -4.026848793029785
    4. 'inu' → logprob: -4.401848793029785
    5. 'e' → logprob: -5.151848793029785
    6. 'i' → logprob: -5.151848793029785
    7. 'er' → logprob: -5.526848793029785
    8. 'é' → logprob: -5.651848793029785
    9. 'inue' → logprob: -5.776848793029785
    10. 'enant' → logprob: -5.776848793029785

Token 1043: 'iser' (ID: 7466)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.19668641686439514
    2. 'e' → logprob: -1.8216863870620728
    3. 'r' → logprob: -4.821686267852783
    4. 'ion' → logprob: -5.321686267852783
    5. 'd' → logprob: -6.821686267852783
    6. 'é' → logprob: -7.321686267852783
    7. 'ent' → logprob: -7.821686267852783
    8. 'es' → logprob: -8.321686744689941
    9. 'ation' → logprob: -8.446686744689941
    10. 'i' → logprob: -8.571686744689941

Token 1044: ' les' (ID: 1341)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.31183212995529175
    2. 'j' → logprob: -2.4368321895599365
    3. ' d' → logprob: -3.1868321895599365
    4. ' (' → logprob: -3.3118321895599365
    5. ' j' → logprob: -4.061831951141357
    6. '   ' → logprob: -4.186831951141357
    7. '[j' → logprob: -4.686831951141357
    8. '```' → logprob: -4.686831951141357
    9. '           ' → logprob: -4.811831951141357
    10. '(j' → logprob: -4.811831951141357

Token 1045: ' sé' (ID: 7462)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.3284113109111786
    2. 'j' → logprob: -2.703411340713501
    3. '(r' → logprob: -2.828411340713501
    4. '(z' → logprob: -3.453411340713501
    5. '(j' → logprob: -3.953411340713501
    6. 'd' → logprob: -3.953411340713501
    7. 'z' → logprob: -4.203411102294922
    8. ' (' → logprob: -4.453411102294922
    9. 'f' → logprob: -4.703411102294922
    10. 'bits' → logprob: -4.828411102294922

Token 1046: 'quences' (ID: 16559)
  Prédit: 'quences'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quences' → logprob: -0.016215719282627106
    2. 'quence' → logprob: -4.141215801239014
    3. 'q' → logprob: -9.266215324401855
    4. '#' → logprob: -10.516215324401855
    5. '```' → logprob: -11.266215324401855
    6. 'gments' → logprob: -11.641215324401855
    7. '   ' → logprob: -12.016215324401855
    8. '`' → logprob: -12.141215324401855
    9. ']' → logprob: -13.141215324401855
    10. 'quent' → logprob: -13.141215324401855

Token 1047: ' qui' (ID: 2780)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.7066709399223328
    2. '[i' → logprob: -1.2066709995269775
    3. '               ' → logprob: -3.0816709995269775
    4. '                   ' → logprob: -3.0816709995269775
    5. '[' → logprob: -3.4566709995269775
    6. '           ' → logprob: -3.8316709995269775
    7. '[z' → logprob: -3.9566709995269775
    8. '[(' → logprob: -5.081670761108398
    9. ' [' → logprob: -5.206670761108398
    10. '   ' → logprob: -5.581670761108398

Token 1048: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -2.2220678329467773
    2. ' continu' → logprob: -2.2220678329467773
    3. 'ont' → logprob: -2.4720678329467773
    4. '       ' → logprob: -2.7220678329467773
    5. '           ' → logprob: -2.7220678329467773
    6. '>>' → logprob: -2.8470678329467773
    7. '```' → logprob: -3.3470678329467773
    8. '   ' → logprob: -3.4720678329467773
    9. ' continue' → logprob: -3.5970678329467773
    10. ' >>' → logprob: -3.7220678329467773

Token 1049: ''ont' (ID: 64195)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.101449966430664
    2. 'ont' → logprob: -1.601449966430664
    3. '>' → logprob: -2.476449966430664
    4. ']' → logprob: -2.601449966430664
    5. 'pas' → logprob: -3.226449966430664
    6. ''ont' → logprob: -3.476449966430664
    7. ' =' → logprob: -3.726449966430664
    8. '>>' → logprob: -3.851449966430664
    9. ' pas' → logprob: -3.851449966430664
    10. '+' → logprob: -4.101449966430664

Token 1050: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.21594266593456268
    2. 'r' → logprob: -1.715942621231079
    3. ' pas' → logprob: -5.465942859649658
    4. 'not' → logprob: -5.840942859649658
    5. 'j' → logprob: -6.465942859649658
    6. 'd' → logprob: -6.590942859649658
    7. '       ' → logprob: -7.215942859649658
    8. '           ' → logprob: -8.0909423828125
    9. '```' → logprob: -8.0909423828125
    10. 'une' → logprob: -8.2159423828125

Token 1051: ' un' (ID: 537)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.11655432730913162
    2. '```' → logprob: -2.7415542602539062
    3. 'z' → logprob: -4.616554260253906
    4. 'f' → logprob: -5.241554260253906
    5. 'd' → logprob: -5.741554260253906
    6. '(r' → logprob: -5.991554260253906
    7. ']' → logprob: -6.241554260253906
    8. '`' → logprob: -6.241554260253906
    9. 's' → logprob: -6.491554260253906
    10. ' été' → logprob: -6.491554260253906

Token 1052: ' pré' (ID: 9424)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.0158464908599854
    2. 'r' → logprob: -1.6408464908599854
    3. '_' → logprob: -2.5158464908599854
    4. '1' → logprob: -3.1408464908599854
    5. 's' → logprob: -3.3908464908599854
    6. 'es' → logprob: -3.5158464908599854
    7. 'pré' → logprob: -3.5158464908599854
    8. 'suffix' → logprob: -3.6408464908599854
    9. '   ' → logprob: -4.015846252441406
    10. 'prefix' → logprob: -4.140846252441406

Token 1053: 'fix' (ID: 11853)
  Prédit: 'fix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fix' → logprob: -0.04781853035092354
    2. 'f' → logprob: -3.172818422317505
    3. ']' → logprob: -6.922818660736084
    4. 'z' → logprob: -7.297818660736084
    5. '```' → logprob: -7.297818660736084
    6. 'r' → logprob: -7.797818660736084
    7. ')' → logprob: -8.172818183898926
    8. 'd' → logprob: -8.297818183898926
    9. '][' → logprob: -8.672818183898926
    10. 'refix' → logprob: -8.797818183898926

Token 1054: 'e' (ID: 68)
  Prédit: 'ixe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ixe' → logprob: -0.6191903352737427
    2. 'fix' → logprob: -2.869190216064453
    3. 'f' → logprob: -3.244190216064453
    4. 'r' → logprob: -3.244190216064453
    5. 's' → logprob: -3.244190216064453
    6. '   ' → logprob: -3.619190216064453
    7. 'refix' → logprob: -3.619190216064453
    8. 'e' → logprob: -3.744190216064453
    9. 'z' → logprob: -3.994190216064453
    10. 'ix' → logprob: -4.119190216064453

Token 1055: ' homog' (ID: 143289)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.8532651662826538
    2. 'r' → logprob: -2.1032652854919434
    3. '           ' → logprob: -2.6032652854919434
    4. '+' → logprob: -3.1032652854919434
    5. '   ' → logprob: -3.1032652854919434
    6. '       ' → logprob: -3.1032652854919434
    7. ' -' → logprob: -3.1032652854919434
    8. '[j' → logprob: -3.1032652854919434
    9. ' +' → logprob: -3.2282652854919434
    10. '                   ' → logprob: -3.2282652854919434

Token 1056: 'ène' (ID: 22902)
  Prédit: 'ène'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ène' → logprob: -0.004930362105369568
    2. 'ene' → logprob: -5.87993049621582
    3. 'ènes' → logprob: -7.62993049621582
    4. 'ète' → logprob: -8.12993049621582
    5. 'og' → logprob: -8.37993049621582
    6. 'è' → logprob: -9.00493049621582
    7. '       ' → logprob: -9.25493049621582
    8. 'éné' → logprob: -9.50493049621582
    9. ')]' → logprob: -9.62993049621582
    10. 'e' → logprob: -9.87993049621582

Token 1057: ' complet' (ID: 5127)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.9354062080383301
    2. '[i' → logprob: -1.43540620803833
    3. '           ' → logprob: -2.31040620803833
    4. '                   ' → logprob: -2.31040620803833
    5. '[j' → logprob: -2.31040620803833
    6. '```' → logprob: -4.43540620803833
    7. '][' → logprob: -4.81040620803833
    8. '                       ' → logprob: -5.06040620803833
    9. '       ' → logprob: -5.31040620803833
    10. '   ' → logprob: -5.81040620803833

Token 1058: '.
' (ID: 558)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.13719646632671356
    2. '                   ' → logprob: -3.1371965408325195
    3. '[j' → logprob: -3.2621965408325195
    4. ' +' → logprob: -4.5121965408325195
    5. '[(' → logprob: -5.1371965408325195
    6. '           ' → logprob: -5.1371965408325195
    7. '][' → logprob: -5.5121965408325195
    8. '[' → logprob: -5.5121965408325195
    9. '                       ' → logprob: -6.1371965408325195
    10. '+' → logprob: -6.2621965408325195

Token 1059: '               ' (ID: 506)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.8552344441413879
    2. '               ' → logprob: -0.9802344441413879
    3. '                   ' → logprob: -2.355234384536743
    4. ' d' → logprob: -3.230234384536743
    5. 'f' → logprob: -3.355234384536743
    6. '           ' → logprob: -4.105234622955322
    7. '                       ' → logprob: -5.355234622955322
    8. ' f' → logprob: -5.480234622955322
    9. '```' → logprob: -6.355234622955322
    10. '       ' → logprob: -7.230234622955322

Token 1060: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.061193495988845825
    2. '                   ' → logprob: -3.6861934661865234
    3. '               ' → logprob: -4.061193466186523
    4. ' d' → logprob: -4.436193466186523
    5. '                       ' → logprob: -5.686193466186523
    6. '           ' → logprob: -7.186193466186523
    7. '                           ' → logprob: -7.436193466186523
    8. '                               ' → logprob: -8.811193466186523
    9. '   ' → logprob: -9.186193466186523
    10. '       ' → logprob: -10.186193466186523

Token 1061: '[ii' (ID: 75075)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00024323153775185347
    2. '[z' → logprob: -8.500243186950684
    3. '[r' → logprob: -11.250243186950684
    4. '[' → logprob: -11.250243186950684
    5. '[ii' → logprob: -11.375243186950684
    6. ' [' → logprob: -13.500243186950684
    7. '   ' → logprob: -15.125243186950684
    8. '[ip' → logprob: -16.000244140625
    9. '[j' → logprob: -16.750244140625
    10. '[I' → logprob: -17.000244140625

Token 1062: ' -' (ID: 533)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '][' → logprob: -0.003759228391572833
    2. '[i' → logprob: -5.753759384155273
    3. '   ' → logprob: -8.253759384155273
    4. ' ][' → logprob: -8.878759384155273
    5. '[' → logprob: -9.878759384155273
    6. '[ii' → logprob: -10.003759384155273
    7. '       ' → logprob: -10.628759384155273
    8. ']' → logprob: -11.503759384155273
    9. '           ' → logprob: -11.503759384155273
    10. '[j' → logprob: -11.628759384155273

Token 1063: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0002111694193445146
    2. 'z' → logprob: -8.750210762023926
    3. ' r' → logprob: -10.375210762023926
    4. '1' → logprob: -11.750210762023926
    5. '   ' → logprob: -12.125210762023926
    6. 'i' → logprob: -13.250210762023926
    7. ' ' → logprob: -13.875210762023926
    8. '           ' → logprob: -13.875210762023926
    9. 'd' → logprob: -14.125210762023926
    10. '       ' → logprob: -14.125210762023926

Token 1064: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0005169323412701488
    2. '[j' → logprob: -8.000516891479492
    3. '   ' → logprob: -10.000516891479492
    4. ' ][' → logprob: -10.125516891479492
    5. ']' → logprob: -10.625516891479492
    6. '           ' → logprob: -10.625516891479492
    7. '       ' → logprob: -10.875516891479492
    8. '               ' → logprob: -11.750516891479492
    9. '                   ' → logprob: -12.375516891479492
    10. '[' → logprob: -12.625516891479492

Token 1065: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.4079809784889221
    2. '(j' → logprob: -1.1579809188842773
    3. 'j' → logprob: -4.157980918884277
    4. '(((' → logprob: -5.782980918884277
    5. ' (' → logprob: -6.907980918884277
    6. ' ((' → logprob: -7.157980918884277
    7. '(d' → logprob: -8.782980918884277
    8. '(' → logprob: -8.907980918884277
    9. ' j' → logprob: -10.657980918884277
    10. '   ' → logprob: -10.782980918884277

Token 1066: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00015300170343834907
    2. ' j' → logprob: -9.375152587890625
    3. '(j' → logprob: -10.625152587890625
    4. 'i' → logprob: -11.250152587890625
    5. '((' → logprob: -11.625152587890625
    6. '   ' → logprob: -11.875152587890625
    7. '(' → logprob: -12.625152587890625
    8. '```' → logprob: -13.000152587890625
    9. ')' → logprob: -13.250152587890625
    10. ' (' → logprob: -13.875152587890625

Token 1067: ' >>' (ID: 6832)
  Prédit: '>>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.0037567326799035072
    2. ' >>' → logprob: -5.628756523132324
    3. '>>(' → logprob: -10.128756523132324
    4. ')>>' → logprob: -10.253756523132324
    5. '[j' → logprob: -10.628756523132324
    6. ']' → logprob: -10.628756523132324
    7. '[' → logprob: -11.753756523132324
    8. ')' → logprob: -12.128756523132324
    9. ' ' → logprob: -13.628756523132324
    10. '[i' → logprob: -13.753756523132324

Token 1068: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -8.339776832144707e-05
    2. '(z' → logprob: -9.750082969665527
    3. ' z' → logprob: -11.000082969665527
    4. '                   ' → logprob: -13.375082969665527
    5. '           ' → logprob: -13.500082969665527
    6. 'r' → logprob: -13.750082969665527
    7. '               ' → logprob: -14.250082969665527
    8. '(' → logprob: -14.250082969665527
    9. '   ' → logprob: -14.625082969665527
    10. '       ' → logprob: -14.625082969665527

Token 1069: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00031735055381432176
    2. ' )' → logprob: -9.750317573547363
    3. ')+' → logprob: -9.875317573547363
    4. ')<<' → logprob: -10.000317573547363
    5. '       ' → logprob: -10.250317573547363
    6. 'r' → logprob: -10.375317573547363
    7. 'z' → logprob: -10.500317573547363
    8. '   ' → logprob: -11.375317573547363
    9. '           ' → logprob: -11.375317573547363
    10. ')>>' → logprob: -11.750317573547363

Token 1070: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.11268918216228485
    2. ')' → logprob: -2.487689256668091
    3. ')<<' → logprob: -4.112689018249512
    4. ' <<' → logprob: -5.112689018249512
    5. '|' → logprob: -7.362689018249512
    6. '((' → logprob: -8.862689018249512
    7. ')((' → logprob: -9.362689018249512
    8. ']<<' → logprob: -9.737689018249512
    9. ')[' → logprob: -10.612689018249512
    10. '<<(' → logprob: -10.737689018249512

Token 1071: ' (' (ID: 350)
  Prédit: '(z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(z' → logprob: -0.00011903966515092179
    2. ' (' → logprob: -9.87511920928955
    3. '((' → logprob: -10.12511920928955
    4. '(j' → logprob: -11.50011920928955
    5. '(' → logprob: -11.62511920928955
    6. 'z' → logprob: -12.50011920928955
    7. '(q' → logprob: -14.12511920928955
    8. '           ' → logprob: -14.37511920928955
    9. '(k' → logprob: -14.37511920928955
    10. '(w' → logprob: -14.50011920928955

Token 1072: 'z' (ID: 89)
  Prédit: '(z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(z' → logprob: -0.06229715421795845
    2. 'z' → logprob: -2.8122971057891846
    3. 'r' → logprob: -8.312296867370605
    4. ' z' → logprob: -10.687296867370605
    5. '(r' → logprob: -10.687296867370605
    6. ' (' → logprob: -11.062296867370605
    7. '[z' → logprob: -11.062296867370605
    8. 'zr' → logprob: -12.687296867370605
    9. '(' → logprob: -13.062296867370605
    10. '0' → logprob: -14.687296867370605

Token 1073: ' -' (ID: 533)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.033155590295791626
    2. ')' → logprob: -4.15815544128418
    3. '1' → logprob: -4.28315544128418
    4. '(r' → logprob: -6.53315544128418
    5. '+' → logprob: -7.90815544128418
    6. ')+' → logprob: -7.90815544128418
    7. ' r' → logprob: -8.03315544128418
    8. '(' → logprob: -8.65815544128418
    9. '           ' → logprob: -9.28315544128418
    10. '_r' → logprob: -9.53315544128418

Token 1074: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -9.014684110297821e-06
    2. ' r' → logprob: -11.625008583068848
    3. '_r' → logprob: -18.000009536743164
    4. '```' → logprob: -19.625009536743164
    5. '
' → logprob: -20.000009536743164
    6. '(r' → logprob: -21.125009536743164
    7. '0' → logprob: -21.375009536743164
    8. '	r' → logprob: -21.375009536743164
    9. 'р' → logprob: -21.500009536743164
    10. '           ' → logprob: -22.125009536743164

Token 1075: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.719917630311102e-05
    2. ' )' → logprob: -9.875077247619629
    3. ')+' → logprob: -11.000077247619629
    4. ')]' → logprob: -12.500077247619629
    5. '))' → logprob: -13.500077247619629
    6. '')' → logprob: -14.250077247619629
    7. '       ' → logprob: -14.375077247619629
    8. ')+(' → logprob: -14.500077247619629
    9. ')<<' → logprob: -14.875077247619629
    10. '")' → logprob: -15.000077247619629

Token 1076: ' |' (ID: 1022)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -0.6792064309120178
    2. ')' → logprob: -0.9292064309120178
    3. '+' → logprob: -3.179206371307373
    4. ')+' → logprob: -3.554206371307373
    5. ']' → logprob: -3.804206371307373
    6. ']+' → logprob: -5.679206371307373
    7. ')+(' → logprob: -6.679206371307373
    8. '   ' → logprob: -8.179206848144531
    9. ' |' → logprob: -8.804206848144531
    10. ' +' → logprob: -8.929206848144531

Token 1077: ' (' (ID: 350)
  Prédit: '(j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.0002814775798469782
    2. '((' → logprob: -8.62528133392334
    3. ' (' → logprob: -9.25028133392334
    4. '(' → logprob: -12.25028133392334
    5. 'j' → logprob: -15.25028133392334
    6. '[j' → logprob: -15.25028133392334
    7. '(((' → logprob: -15.50028133392334
    8. '(
' → logprob: -15.87528133392334
    9. '
' → logprob: -17.250282287597656
    10. '   ' → logprob: -17.250282287597656

Token 1078: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.6335875988006592
    2. '(j' → logprob: -0.7585875988006592
    3. '((' → logprob: -7.258587837219238
    4. ' (' → logprob: -8.758587837219238
    5. 'mask' → logprob: -9.883587837219238
    6. ' j' → logprob: -10.008587837219238
    7. '(mask' → logprob: -11.008587837219238
    8. '(' → logprob: -12.258587837219238
    9. '[j' → logprob: -13.133587837219238
    10. '(((' → logprob: -13.883587837219238

Token 1079: ' &' (ID: 827)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.048621319234371185
    2. ' &' → logprob: -3.048621416091919
    3. '&r' → logprob: -11.67362117767334
    4. '&amp' → logprob: -12.04862117767334
    5. '>>' → logprob: -12.42362117767334
    6. '&(' → logprob: -12.67362117767334
    7. '&R' → logprob: -13.42362117767334
    8. '&m' → logprob: -13.54862117767334
    9. '&q' → logprob: -13.67362117767334
    10. '&w' → logprob: -13.92362117767334

Token 1080: ' ((' (ID: 3536)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.004127672873437405
    2. '(mask' → logprob: -5.504127502441406
    3. 'mask' → logprob: -10.504127502441406
    4. ' ((' → logprob: -11.254127502441406
    5. '(' → logprob: -11.754127502441406
    6. ' (' → logprob: -14.504127502441406
    7. ' mask' → logprob: -15.379127502441406
    8. '(m' → logprob: -16.254127502441406
    9. ' ' → logprob: -16.504127502441406
    10. '[(' → logprob: -17.004127502441406

Token 1081: '1' (ID: 16)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.0100624169572257e-05
    2. '1' → logprob: -10.875020027160645
    3. ' (' → logprob: -13.875020027160645
    4. '((' → logprob: -16.37502098083496
    5. '   ' → logprob: -17.75002098083496
    6. ' ' → logprob: -18.50002098083496
    7. '           ' → logprob: -19.25002098083496
    8. '(mask' → logprob: -19.25002098083496
    9. '{' → logprob: -20.25002098083496
    10. '[' → logprob: -20.25002098083496

Token 1082: ' <<' (ID: 2256)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.20815064013004303
    2. '(' → logprob: -1.7081506252288818
    3. '<<' → logprob: -5.208150863647461
    4. ' (' → logprob: -6.833150863647461
    5. '<<(' → logprob: -9.833150863647461
    6. '           ' → logprob: -10.833150863647461
    7. '```' → logprob: -10.833150863647461
    8. '   ' → logprob: -11.458150863647461
    9. '{' → logprob: -11.583150863647461
    10. '((' → logprob: -11.583150863647461

Token 1083: ' (' (ID: 350)
  Prédit: '(z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(z' → logprob: -5.800739018013701e-05
    2. '(r' → logprob: -10.1250581741333
    3. 'r' → logprob: -11.6250581741333
    4. '(' → logprob: -12.3750581741333
    5. ' (' → logprob: -12.3750581741333
    6. '(y' → logprob: -16.000057220458984
    7. '[z' → logprob: -16.625057220458984
    8. 'z' → logprob: -16.750057220458984
    9. '(
' → logprob: -16.750057220458984
    10. '(q' → logprob: -16.875057220458984

Token 1084: 'z' (ID: 89)
  Prédit: '(z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(z' → logprob: -0.01200789213180542
    2. '(r' → logprob: -4.637007713317871
    3. 'r' → logprob: -6.137007713317871
    4. ' (' → logprob: -9.762007713317871
    5. '(' → logprob: -10.887007713317871
    6. 'z' → logprob: -11.512007713317871
    7. ' ' → logprob: -14.512007713317871
    8. '(
' → logprob: -15.262007713317871
    9. '{' → logprob: -15.887007713317871
    10. '   ' → logprob: -16.137008666992188

Token 1085: ' -' (ID: 533)
  Prédit: '(z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(z' → logprob: -0.11820529401302338
    2. 'r' → logprob: -2.3682053089141846
    3. '(r' → logprob: -4.2432050704956055
    4. '           ' → logprob: -6.7432050704956055
    5. ' (' → logprob: -7.1182050704956055
    6. '(' → logprob: -7.8682050704956055
    7. '_r' → logprob: -8.243205070495605
    8. 'z' → logprob: -8.618205070495605
    9. '   ' → logprob: -8.993205070495605
    10. '       ' → logprob: -9.118205070495605

Token 1086: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -8.208653162000701e-05
    2. '(r' → logprob: -10.000082015991211
    3. ' r' → logprob: -10.500082015991211
    4. '           ' → logprob: -12.750082015991211
    5. '_r' → logprob: -13.000082015991211
    6. '(' → logprob: -13.750082015991211
    7. ' (' → logprob: -14.500082015991211
    8. '       ' → logprob: -15.125082015991211
    9. '```' → logprob: -15.250082015991211
    10. '   ' → logprob: -15.250082015991211

Token 1087: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012719656340777874
    2. ')-' → logprob: -4.387719631195068
    3. 'r' → logprob: -8.762720108032227
    4. '1' → logprob: -10.387720108032227
    5. '-' → logprob: -12.637720108032227
    6. '(r' → logprob: -12.887720108032227
    7. '```' → logprob: -12.887720108032227
    8. ' )' → logprob: -13.012720108032227
    9. '")' → logprob: -13.512720108032227
    10. '``' → logprob: -13.512720108032227

Token 1088: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07946106046438217
    2. ')-' → logprob: -2.579461097717285
    3. '1' → logprob: -8.204461097717285
    4. '-' → logprob: -8.954461097717285
    5. '(' → logprob: -9.329461097717285
    6. '(r' → logprob: -11.204461097717285
    7. '")' → logprob: -11.454461097717285
    8. 'r' → logprob: -11.704461097717285
    9. '((' → logprob: -11.829461097717285
    10. '```' → logprob: -12.079461097717285

Token 1089: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.375
    3. 'r' → logprob: -19.125
    4. '(' → logprob: -19.75
    5. '   ' → logprob: -20.625
    6. '0' → logprob: -20.75
    7. '
' → logprob: -20.875
    8. '```' → logprob: -21.0
    9. '-' → logprob: -21.875
    10. '``' → logprob: -22.0

Token 1090: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.25
    3. '
' → logprob: -17.625
    4. '```' → logprob: -19.875
    5. '   ' → logprob: -20.375
    6. '2' → logprob: -20.75
    7. '0' → logprob: -20.9375
    8. '``' → logprob: -21.0
    9. '3' → logprob: -21.125
    10. '-' → logprob: -21.3125

Token 1091: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.12396883219480515
    2. ')]' → logprob: -2.2489688396453857
    3. ')])' → logprob: -4.998968601226807
    4. ')))' → logprob: -6.248968601226807
    5. ')' → logprob: -6.373968601226807
    6. '))]
' → logprob: -7.623968601226807
    7. ')]
' → logprob: -9.498969078063965
    8. '))))' → logprob: -9.998969078063965
    9. '           ' → logprob: -11.123969078063965
    10. '               ' → logprob: -11.123969078063965

Token 1092: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0025578304193913937
    2. ']+=' → logprob: -6.002557754516602
    3. ')]' → logprob: -9.877557754516602
    4. '])' → logprob: -11.377557754516602
    5. '           ' → logprob: -12.377557754516602
    6. ')' → logprob: -12.627557754516602
    7. ']]' → logprob: -12.752557754516602
    8. ']+' → logprob: -12.877557754516602
    9. ']
' → logprob: -13.127557754516602
    10. ' ]' → logprob: -13.127557754516602

Token 1093: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.011390617117285728
    2. ' +=' → logprob: -4.511390686035156
    3. ']+=' → logprob: -8.261390686035156
    4. '           ' → logprob: -10.011390686035156
    5. '   ' → logprob: -11.011390686035156
    6. '```' → logprob: -11.511390686035156
    7. '       ' → logprob: -13.011390686035156
    8. '               ' → logprob: -13.011390686035156
    9. '+' → logprob: -13.136390686035156
    10. '                   ' → logprob: -14.011390686035156

Token 1094: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -5.8126592193730175e-05
    2. ' d' → logprob: -9.8750581741333
    3. '           ' → logprob: -12.7500581741333
    4. '                   ' → logprob: -13.0000581741333
    5. '               ' → logprob: -14.1250581741333
    6. '   ' → logprob: -14.6250581741333
    7. '	d' → logprob: -16.250057220458984
    8. '                       ' → logprob: -16.500057220458984
    9. '       ' → logprob: -16.875057220458984
    10. '                           ' → logprob: -17.875057220458984

Token 1095: '[ii' (ID: 75075)
  Prédit: '[ii'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[ii' → logprob: -4.584861744660884e-05
    2. 'ii' → logprob: -10.500045776367188
    3. '[i' → logprob: -12.125045776367188
    4. '(ii' → logprob: -12.250045776367188
    5. '[int' → logprob: -12.750045776367188
    6. '```' → logprob: -13.875045776367188
    7. '[' → logprob: -14.125045776367188
    8. '[[' → logprob: -14.125045776367188
    9. '
' → logprob: -14.125045776367188
    10. '   ' → logprob: -14.625045776367188

Token 1096: '][' (ID: 2696)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.1132095456123352
    2. '][' → logprob: -2.2382094860076904
    3. '   ' → logprob: -8.98820972442627
    4. '[' → logprob: -9.73820972442627
    5. '[r' → logprob: -9.73820972442627
    6. ']' → logprob: -10.36320972442627
    7. '       ' → logprob: -10.36320972442627
    8. ' [' → logprob: -10.98820972442627
    9. ' ][' → logprob: -10.98820972442627
    10. '[i' → logprob: -11.11320972442627

Token 1097: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -3.4121114822482923e-06
    2. ' j' → logprob: -13.250003814697266
    3. '   ' → logprob: -14.375003814697266
    4. '```' → logprob: -14.875003814697266
    5. '[j' → logprob: -15.750003814697266
    6. 'ii' → logprob: -16.000003814697266
    7. 'jj' → logprob: -16.375003814697266
    8. ' ' → logprob: -16.375003814697266
    9. '
' → logprob: -16.500003814697266
    10. '	j' → logprob: -17.000003814697266

Token 1098: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1162392795085907
    2. '           ' → logprob: -2.491239309310913
    3. ')' → logprob: -4.366239070892334
    4. '       ' → logprob: -5.241239070892334
    5. '               ' → logprob: -5.366239070892334
    6. '<|end|>' → logprob: -5.866239070892334
    7. ']
' → logprob: -8.241239547729492
    8. '}' → logprob: -8.741239547729492
    9. '])' → logprob: -8.741239547729492
    10. '   ' → logprob: -8.991239547729492

Token 1099: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1100: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.7703828811645508
    2. 'for' → logprob: -0.8953828811645508
    3. ')' → logprob: -3.520382881164551
    4. 'print' → logprob: -3.770382881164551
    5. 'if' → logprob: -3.895382881164551
    6. '```' → logprob: -3.895382881164551
    7. 'pass' → logprob: -4.395382881164551
    8. '<|end|>' → logprob: -5.145382881164551
    9. '   ' → logprob: -5.520382881164551
    10. ']' → logprob: -5.520382881164551

Token 1101: ' Après' (ID: 47562)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5167669653892517
    2. 'if' → logprob: -1.0167670249938965
    3. '   ' → logprob: -3.3917670249938965
    4. 'pass' → logprob: -5.5167670249938965
    5. '#' → logprob: -5.7667670249938965
    6. 'print' → logprob: -8.266766548156738
    7. 'found' → logprob: -8.516766548156738
    8. 'res' → logprob: -8.641766548156738
    9. 'result' → logprob: -8.891766548156738
    10. 'answer' → logprob: -9.766766548156738

Token 1102: ' ces' (ID: 10532)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4223167300224304
    2. '   ' → logprob: -1.9223167896270752
    3. 'i' → logprob: -2.172316789627075
    4. '#' → logprob: -3.422316789627075
    5. 'range' → logprob: -4.297316551208496
    6. ' i' → logprob: -4.797316551208496
    7. ' for' → logprob: -4.922316551208496
    8. 'd' → logprob: -5.547316551208496
    9. 'if' → logprob: -5.672316551208496
    10. '[i' → logprob: -5.922316551208496

Token 1103: ' étapes' (ID: 96583)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.30113646388053894
    2. '#' → logprob: -2.3011364936828613
    3. 'i' → logprob: -3.1761364936828613
    4. 'if' → logprob: -3.6761364936828613
    5. '...' → logprob: -3.6761364936828613
    6. ' for' → logprob: -3.9261364936828613
    7. 'd' → logprob: -4.801136493682861
    8. 'range' → logprob: -4.926136493682861
    9. 'calcul' → logprob: -5.176136493682861
    10. 'pass' → logprob: -5.301136493682861

Token 1104: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01781742088496685
    2. '#' → logprob: -4.392817497253418
    3. 'for' → logprob: -6.267817497253418
    4. '       ' → logprob: -6.392817497253418
    5. 'if' → logprob: -7.642817497253418
    6. ' for' → logprob: -7.767817497253418
    7. '
' → logprob: -8.767817497253418
    8. ' if' → logprob: -8.892817497253418
    9. ',' → logprob: -9.017817497253418
    10. '    
' → logprob: -9.642817497253418

Token 1105: ' propagation' (ID: 86772)
  Prédit: 'calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'calcul' → logprob: -1.3055956363677979
    2. 'for' → logprob: -1.4305956363677979
    3. '#' → logprob: -1.9305956363677979
    4. 'pré' → logprob: -2.555595636367798
    5. 'la' → logprob: -2.805595636367798
    6. 'pre' → logprob: -3.055595636367798
    7. 'l' → logprob: -3.305595636367798
    8. 'i' → logprob: -3.930595636367798
    9. 'trait' → logprob: -4.180595397949219
    10. 'pr' → logprob: -4.430595397949219

Token 1106: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12559929490089417
    2. '#' → logprob: -3.1255993843078613
    3. 'for' → logprob: -4.125599384307861
    4. '.' → logprob: -4.500599384307861
    5. ',' → logprob: -5.125599384307861
    6. 'd' → logprob: -5.125599384307861
    7. '<|end|>' → logprob: -5.250599384307861
    8. '
' → logprob: -5.375599384307861
    9. ' for' → logprob: -5.375599384307861
    10. ':' → logprob: -5.625599384307861

Token 1107: ' on' (ID: 402)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06301968544721603
    2. 'if' → logprob: -2.8130197525024414
    3. '   ' → logprob: -7.063019752502441
    4. 'found' → logprob: -9.188019752502441
    5. '#' → logprob: -9.563019752502441
    6. ' for' → logprob: -11.563019752502441
    7. '```' → logprob: -12.313019752502441
    8. '       ' → logprob: -13.063019752502441
    9. '
' → logprob: -13.938019752502441
    10. 'f' → logprob: -14.063019752502441

Token 1108: ' teste' (ID: 62670)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5816193222999573
    2. 'for' → logprob: -1.0816192626953125
    3. 'continue' → logprob: -3.2066192626953125
    4. ' for' → logprob: -3.7066192626953125
    5. '   ' → logprob: -4.4566192626953125
    6. 'if' → logprob: -4.8316192626953125
    7. ' #' → logprob: -4.8316192626953125
    8. 'print' → logprob: -5.3316192626953125
    9. ' continue' → logprob: -6.9566192626953125
    10. 'range' → logprob: -7.5816192626953125

Token 1109: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.341930627822876
    2. 'if' → logprob: -1.341930627822876
    3. ' if' → logprob: -3.591930627822876
    4. 'd' → logprob: -8.216930389404297
    5. ' si' → logprob: -8.841930389404297
    6. '
' → logprob: -9.091930389404297
    7. '    
' → logprob: -9.591930389404297
    8. '       ' → logprob: -10.091930389404297
    9. ' d' → logprob: -10.466930389404297
    10. '```' → logprob: -11.216930389404297

Token 1110: ' chaque' (ID: 21194)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.045996226370334625
    2. 'i' → logprob: -3.5459961891174316
    3. 'k' → logprob: -5.545996189117432
    4. 'ii' → logprob: -6.295996189117432
    5. 'K' → logprob: -6.420996189117432
    6. 'jj' → logprob: -6.670996189117432
    7. ' j' → logprob: -6.795996189117432
    8. 'idx' → logprob: -6.920996189117432
    9. 'x' → logprob: -7.170996189117432
    10. '   ' → logprob: -7.295996189117432

Token 1111: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0009741133544594049
    2. 'k' → logprob: -7.375974178314209
    3. 'jj' → logprob: -9.25097370147705
    4. ' j' → logprob: -9.50097370147705
    5. '
' → logprob: -10.00097370147705
    6. 'i' → logprob: -10.12597370147705
    7. '```' → logprob: -10.62597370147705
    8. '_j' → logprob: -10.87597370147705
    9. '   ' → logprob: -11.12597370147705
    10. 'val' → logprob: -12.37597370147705

Token 1112: ' de' (ID: 334)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.22034399211406708
    2. ' in' → logprob: -2.220344066619873
    3. '   ' → logprob: -2.845344066619873
    4. '       ' → logprob: -3.595344066619873
    5. ':' → logprob: -6.345344066619873
    6. 'for' → logprob: -7.595344066619873
    7. 'if' → logprob: -7.720344066619873
    8. '           ' → logprob: -8.220343589782715
    9. '[' → logprob: -8.470343589782715
    10. '```' → logprob: -9.345343589782715

Token 1113: ' longueur' (ID: 104613)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0003862245939671993
    2. ' range' → logprob: -7.8753862380981445
    3. '   ' → logprob: -12.500386238098145
    4. '(' → logprob: -14.375386238098145
    5. '```' → logprob: -14.375386238098145
    6. '0' → logprob: -14.625386238098145
    7. '(range' → logprob: -15.125386238098145
    8. '[' → logprob: -16.000385284423828
    9. 'length' → logprob: -16.250385284423828
    10. '1' → logprob: -16.625385284423828

Token 1114: ' i' (ID: 575)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.6336469054222107
    2. 'i' → logprob: -0.7586469054222107
    3. '0' → logprob: -7.1336469650268555
    4. '   ' → logprob: -9.758646965026855
    5. ' D' → logprob: -10.008646965026855
    6. ' i' → logprob: -10.258646965026855
    7. '```' → logprob: -10.633646965026855
    8. '(i' → logprob: -10.758646965026855
    9. '(D' → logprob: -10.883646965026855
    10. '`' → logprob: -11.383646965026855

Token 1115: ' :
' (ID: 10039)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7048654556274414
    2. 'for' → logprob: -1.5798654556274414
    3. ':' → logprob: -2.3298654556274414
    4. '       ' → logprob: -2.4548654556274414
    5. 'if' → logprob: -2.7048654556274414
    6. '(' → logprob: -4.204865455627441
    7. '```' → logprob: -4.704865455627441
    8. ' if' → logprob: -4.829865455627441
    9. ':
' → logprob: -5.079865455627441
    10. ' for' → logprob: -5.454865455627441

Token 1116: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2869164049625397
    2. '       ' → logprob: -1.7869163751602173
    3. 'for' → logprob: -2.536916494369507
    4. '```' → logprob: -6.411916255950928
    5. ' for' → logprob: -6.786916255950928
    6. '           ' → logprob: -9.786916732788086
    7. '	for' → logprob: -11.661916732788086
    8. ' ' → logprob: -13.911916732788086
    9. '``' → logprob: -13.911916732788086
    10. 'if' → logprob: -14.161916732788086

Token 1117: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.004941154737025499
    2. ' for' → logprob: -5.754940986633301
    3. '   ' → logprob: -6.504940986633301
    4. '```' → logprob: -8.2549409866333
    5. '       ' → logprob: -12.5049409866333
    6. 'range' → logprob: -13.8799409866333
    7. '	for' → logprob: -14.0049409866333
    8. '``' → logprob: -15.8799409866333
    9. ' ' → logprob: -16.754941940307617
    10. '           ' → logprob: -16.754941940307617

Token 1118: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0009125363430939615
    2. ' j' → logprob: -7.000912666320801
    3. '   ' → logprob: -14.1259126663208
    4. '	j' → logprob: -15.6259126663208
    5. '```' → logprob: -16.000911712646484
    6. '
' → logprob: -18.250911712646484
    7. '$j' → logprob: -18.625911712646484
    8. '[j' → logprob: -18.875911712646484
    9. ',j' → logprob: -18.875911712646484
    10. ' ' → logprob: -19.000911712646484

Token 1119: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.31330230832099915
    2. 'in' → logprob: -1.3133022785186768
    3. '   ' → logprob: -10.313302040100098
    4. 'range' → logprob: -12.938302040100098
    5. '```' → logprob: -13.438302040100098
    6. '(' → logprob: -14.313302040100098
    7. '0' → logprob: -14.563302040100098
    8. ' ' → logprob: -14.938302040100098
    9. ',' → logprob: -15.188302040100098
    10. '
' → logprob: -15.188302040100098

Token 1120: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0015030752401798964
    2. ' range' → logprob: -6.501502990722656
    3. '0' → logprob: -14.876502990722656
    4. '   ' → logprob: -16.126502990722656
    5. 'in' → logprob: -16.251502990722656
    6. '(range' → logprob: -16.751502990722656
    7. '(' → logprob: -17.126502990722656
    8. ' in' → logprob: -17.876502990722656
    9. ' ' → logprob: -18.001502990722656
    10. 'd' → logprob: -18.501502990722656

Token 1121: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00033165133208967745
    2. '1' → logprob: -8.12533187866211
    3. ' (' → logprob: -10.37533187866211
    4. '(i' → logprob: -12.75033187866211
    5. '   ' → logprob: -13.87533187866211
    6. '((' → logprob: -15.50033187866211
    7. '(len' → logprob: -15.87533187866211
    8. '0' → logprob: -16.37533187866211
    9. ' ' → logprob: -17.12533187866211
    10. '<<' → logprob: -17.75033187866211

Token 1122: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.20142006874084473
    2. '(' → logprob: -1.7014200687408447
    3. ' (' → logprob: -12.201419830322266
    4. ' ' → logprob: -13.701419830322266
    5. '[' → logprob: -15.576419830322266
    6. '   ' → logprob: -15.576419830322266
    7. '```' → logprob: -15.951419830322266
    8. 'len' → logprob: -17.576419830322266
    9. '(len' → logprob: -17.576419830322266
    10. '0' → logprob: -18.076419830322266

Token 1123: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.4308209717273712
    2. ' <<' → logprob: -1.0558209419250488
    3. '(i' → logprob: -7.180820941925049
    4. '):
' → logprob: -8.180821418762207
    5. '```' → logprob: -8.305821418762207
    6. '(' → logprob: -8.680821418762207
    7. '):' → logprob: -8.680821418762207
    8. ')' → logprob: -9.055821418762207
    9. ')<<' → logprob: -9.430821418762207
    10. '   ' → logprob: -9.555821418762207

Token 1124: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.4855663721391466e-05
    2. ' i' → logprob: -11.125015258789062
    3. '   ' → logprob: -17.375015258789062
    4. '(i' → logprob: -17.750015258789062
    5. '	i' → logprob: -19.500015258789062
    6. ' ' → logprob: -20.500015258789062
    7. '```' → logprob: -20.625015258789062
    8. '(' → logprob: -21.000015258789062
    9. 'N' → logprob: -21.625015258789062
    10. ')i' → logprob: -21.750015258789062

Token 1125: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.042222507297992706
    2. '):' → logprob: -3.542222499847412
    3. ':' → logprob: -4.917222499847412
    4. '   ' → logprob: -5.792222499847412
    5. ':
' → logprob: -6.417222499847412
    6. '       ' → logprob: -8.16722297668457
    7. 'if' → logprob: -10.66722297668457
    8. ')' → logprob: -10.91722297668457
    9. '():
' → logprob: -10.91722297668457
    10. '):
' → logprob: -11.41722297668457

Token 1126: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010570799931883812
    2. 'if' → logprob: -5.135571002960205
    3. ' if' → logprob: -5.385571002960205
    4. '```' → logprob: -10.635570526123047
    5. '   ' → logprob: -11.010570526123047
    6. '           ' → logprob: -12.135570526123047
    7. ' ' → logprob: -14.135570526123047
    8. '    ' → logprob: -14.260570526123047
    9. '	   ' → logprob: -15.135570526123047
    10. '	if' → logprob: -15.260570526123047

Token 1127: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.20328404009342194
    2. '       ' → logprob: -1.7032840251922607
    3. ' if' → logprob: -6.45328426361084
    4. '           ' → logprob: -8.20328426361084
    5. '```' → logprob: -11.20328426361084
    6. '   ' → logprob: -12.20328426361084
    7. '	if' → logprob: -14.45328426361084
    8. '               ' → logprob: -15.70328426361084
    9. '#' (adapté à ' #') → logprob: -16.328283309936523
    10. '	' → logprob: -16.828283309936523

Token 1128: ' Si' (ID: 7832)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0003436872211750597
    2. '       ' → logprob: -8.000343322753906
    3. '           ' → logprob: -12.125343322753906
    4. ' if' → logprob: -13.250343322753906
    5. '   ' → logprob: -13.875343322753906
    6. '```' → logprob: -17.875343322753906
    7. '	if' → logprob: -18.000343322753906
    8. '#' → logprob: -18.500343322753906
    9. '               ' → logprob: -18.875343322753906
    10. 'If' → logprob: -18.875343322753906

Token 1129: ' le' (ID: 505)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.28143107891082764
    2. ' d' → logprob: -1.4064310789108276
    3. '       ' → logprob: -8.406431198120117
    4. '   ' → logprob: -10.156431198120117
    5. '           ' → logprob: -12.406431198120117
    6. '	d' → logprob: -12.406431198120117
    7. '(d' → logprob: -12.656431198120117
    8. '#' → logprob: -13.406431198120117
    9. ' ' → logprob: -14.031431198120117
    10. ' ' → logprob: -14.156431198120117

Token 1130: ' nombre' (ID: 9733)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.005936501547694206
    2. ' d' → logprob: -5.130936622619629
    3. '   ' → logprob: -12.380936622619629
    4. 'j' → logprob: -14.255936622619629
    5. '	d' → logprob: -14.505936622619629
    6. ' ' → logprob: -14.630936622619629
    7. '#' → logprob: -14.880936622619629
    8. '       ' → logprob: -15.505936622619629
    9. ' ' → logprob: -15.630936622619629
    10. '(d' → logprob: -15.880936622619629

Token 1131: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6718250513076782
    2. ' d' → logprob: -1.2968250513076782
    3. '   ' → logprob: -2.0468249320983887
    4. '(d' → logprob: -3.6718249320983887
    5. '           ' → logprob: -3.7968249320983887
    6. '       ' → logprob: -4.171824932098389
    7. '_' → logprob: -5.171824932098389
    8. '_d' → logprob: -5.671824932098389
    9. '(' → logprob: -6.171824932098389
    10. ' (' → logprob: -6.421824932098389

Token 1132: ''occ' (ID: 158932)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.1825585514307022
    2. ' d' → logprob: -1.807558536529541
    3. '   ' → logprob: -6.432558536529541
    4. ' ' → logprob: -7.432558536529541
    5. '       ' → logprob: -8.5575590133667
    6. '  ' → logprob: -8.9325590133667
    7. '           ' → logprob: -10.1825590133667
    8. '     ' → logprob: -10.3075590133667
    9. '    ' → logprob: -10.4325590133667
    10. '[' → logprob: -10.6825590133667

Token 1133: 'urrences' (ID: 63292)
  Prédit: 'urrences'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urrences' → logprob: -0.0076728761196136475
    2. 'ur' → logprob: -5.8826727867126465
    3. 'urrence' → logprob: -5.8826727867126465
    4. 'urr' → logprob: -6.8826727867126465
    5. 'u' → logprob: -7.2576727867126465
    6. '[' → logprob: -10.007673263549805
    7. 'urre' → logprob: -10.132673263549805
    8. 'urred' → logprob: -10.132673263549805
    9. '   ' → logprob: -10.507673263549805
    10. 'urs' → logprob: -10.507673263549805

Token 1134: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.23826764523983002
    2. ' d' → logprob: -1.6132676601409912
    3. '[d' → logprob: -4.738267421722412
    4. '[' → logprob: -6.363267421722412
    5. '   ' → logprob: -7.238267421722412
    6. '       ' → logprob: -7.738267421722412
    7. '           ' → logprob: -8.48826789855957
    8. '>' → logprob: -8.61326789855957
    9. ' [' → logprob: -8.98826789855957
    10. '[j' → logprob: -9.23826789855957

Token 1135: '[i' (ID: 1768)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.18056954443454742
    2. ' d' → logprob: -1.8055695295333862
    3. '   ' → logprob: -7.805569648742676
    4. '[d' → logprob: -8.930569648742676
    5. ' [' → logprob: -9.805569648742676
    6. '[j' → logprob: -9.930569648742676
    7. '[i' → logprob: -10.430569648742676
    8. ' ' → logprob: -10.680569648742676
    9. ' j' → logprob: -10.680569648742676
    10. '	d' → logprob: -10.805569648742676

Token 1136: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0012014202075079083
    2. '[j' → logprob: -6.751201629638672
    3. ']' → logprob: -10.501201629638672
    4. '[' → logprob: -13.876201629638672
    5. ' ][' → logprob: -13.876201629638672
    6. ',j' → logprob: -14.751201629638672
    7. '"][' → logprob: -15.126201629638672
    8. '   ' → logprob: -15.251201629638672
    9. 'j' → logprob: -15.376201629638672
    10. ''][' → logprob: -15.376201629638672

Token 1137: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -7.505351095460355e-05
    2. ' j' → logprob: -9.500075340270996
    3. '   ' → logprob: -16.00007438659668
    4. '[j' → logprob: -17.00007438659668
    5. '```' → logprob: -17.00007438659668
    6. ']' → logprob: -18.12507438659668
    7. '
' → logprob: -18.12507438659668
    8. '       ' → logprob: -18.25007438659668
    9. ' ' → logprob: -18.37507438659668
    10. '	j' → logprob: -19.00007438659668

Token 1138: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.028505682945251465
    2. ']>=' → logprob: -3.653505802154541
    3. ']>' → logprob: -6.528505802154541
    4. ' ]' → logprob: -7.528505802154541
    5. '   ' → logprob: -10.153505325317383
    6. '[' → logprob: -10.278505325317383
    7. '[j' → logprob: -10.403505325317383
    8. ']==' → logprob: -10.528505325317383
    9. '       ' → logprob: -10.903505325317383
    10. '>=' → logprob: -11.278505325317383

Token 1139: ' est' (ID: 893)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.28687918186187744
    2. '>=' → logprob: -1.4118791818618774
    3. '>' → logprob: -6.036879062652588
    4. '           ' → logprob: -6.786879062652588
    5. ' >' → logprob: -6.911879062652588
    6. '       ' → logprob: -7.786879062652588
    7. '   ' → logprob: -8.286879539489746
    8. '==' → logprob: -8.786879539489746
    9. ' ==' → logprob: -8.786879539489746
    10. '```' → logprob: -10.286879539489746

Token 1140: ' supérieur' (ID: 98491)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.6342290043830872
    2. ' >=' → logprob: -0.7592290043830872
    3. '           ' → logprob: -7.2592291831970215
    4. '            ' → logprob: -8.134228706359863
    5. '>' → logprob: -8.634228706359863
    6. '        ' → logprob: -9.384228706359863
    7. '          ' → logprob: -9.884228706359863
    8. '    ' → logprob: -10.134228706359863
    9. '       ' → logprob: -10.134228706359863
    10. '≥' → logprob: -10.134228706359863

Token 1141: ' ou' (ID: 2031)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.7121931314468384
    2. ' à' → logprob: -1.4621931314468384
    3. '=' → logprob: -2.212193012237549
    4. 'à' → logprob: -2.837193012237549
    5. ' >' → logprob: -3.587193012237549
    6. '>=' → logprob: -3.837193012237549
    7. '           ' → logprob: -4.212193012237549
    8. '       ' → logprob: -4.462193012237549
    9. '   ' → logprob: -4.962193012237549
    10. ' ou' → logprob: -5.337193012237549

Token 1142: ' égal' (ID: 15059)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.09921154379844666
    2. 'égal' → logprob: -2.4742114543914795
    3. 'ég' → logprob: -4.974211692810059
    4. ' ég' → logprob: -6.474211692810059
    5. '=#' → logprob: -7.849211692810059
    6. 'eg' → logprob: -8.224211692810059
    7. 'à' → logprob: -8.224211692810059
    8. 'egal' → logprob: -8.474211692810059
    9. '#' → logprob: -8.599211692810059
    10. 'é' → logprob: -9.224211692810059

Token 1143: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.30922234058380127
    2. ' à' → logprob: -2.4342222213745117
    3. '=' → logprob: -2.5592222213745117
    4. '       ' → logprob: -3.0592222213745117
    5. 'K' → logprob: -3.9342222213745117
    6. 'to' → logprob: -4.184222221374512
    7. '           ' → logprob: -4.809222221374512
    8. ' K' → logprob: -5.934222221374512
    9. '>=' → logprob: -6.309222221374512
    10. '==' → logprob: -6.559222221374512

Token 1144: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.003178901970386505
    2. ' K' → logprob: -5.75317907333374
    3. '   ' → logprob: -13.878178596496582
    4. '	K' → logprob: -16.5031795501709
    5. ' ' → logprob: -16.6281795501709
    6. '       ' → logprob: -17.0031795501709
    7. ' ' → logprob: -17.3781795501709
    8. '```' → logprob: -17.8781795501709
    9. '>K' → logprob: -17.8781795501709
    10. '
' → logprob: -18.0031795501709

Token 1145: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.33952203392982483
    2. ':' → logprob: -1.8395220041275024
    3. ' and' → logprob: -2.214522123336792
    4. '       ' → logprob: -4.589521884918213
    5. ':
' → logprob: -4.964521884918213
    6. 'and' → logprob: -6.589521884918213
    7. ',' → logprob: -7.214521884918213
    8. '               ' → logprob: -8.964522361755371
    9. ' if' → logprob: -9.464522361755371
    10. 'if' → logprob: -9.839522361755371

Token 1146: '       ' (ID: 309)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.695011556148529
    2. '       ' → logprob: -0.945011556148529
    3. ':' → logprob: -2.320011615753174
    4. '```' → logprob: -5.320011615753174
    5. ' and' → logprob: -5.570011615753174
    6. ':
' → logprob: -5.945011615753174
    7. 'if' → logprob: -6.945011615753174
    8. ' if' → logprob: -7.070011615753174
    9. ',' → logprob: -8.445011138916016
    10. 'and' → logprob: -8.570011138916016

Token 1147: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6591067910194397
    2. '           ' → logprob: -1.409106731414795
    3. 'if' (adapté à ' if') → logprob: -1.784106731414795
    4. ' if' → logprob: -2.659106731414795
    5. '```' → logprob: -8.534107208251953
    6. '   ' → logprob: -9.534107208251953
    7. ':' → logprob: -9.784107208251953
    8. '               ' → logprob: -10.784107208251953
    9. ':
' → logprob: -11.409107208251953
    10. '
' → logprob: -14.034107208251953

Token 1148: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0012870213249698281
    2. ' d' → logprob: -6.75128698348999
    3. '           ' → logprob: -9.751287460327148
    4. '       ' → logprob: -9.876287460327148
    5. '   ' → logprob: -12.001287460327148
    6. '	d' → logprob: -14.501287460327148
    7. '         ' → logprob: -15.751287460327148
    8. '          ' → logprob: -15.751287460327148
    9. '     ' → logprob: -16.25128746032715
    10. '      ' → logprob: -16.50128746032715

Token 1149: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.7610454708337784e-05
    2. ' [' → logprob: -11.000027656555176
    3. 'i' → logprob: -12.250027656555176
    4. '[' → logprob: -12.750027656555176
    5. '   ' → logprob: -13.125027656555176
    6. ' i' → logprob: -14.375027656555176
    7. ' ' → logprob: -15.500027656555176
    8. '  ' → logprob: -15.875027656555176
    9. '```' → logprob: -16.00002670288086
    10. '
' → logprob: -16.50002670288086

Token 1150: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.03936758637428284
    2. '][' → logprob: -3.53936767578125
    3. '[j' → logprob: -4.66436767578125
    4. '[' → logprob: -9.78936767578125
    5. ')[' → logprob: -10.03936767578125
    6. '   ' → logprob: -11.03936767578125
    7. '}[' → logprob: -11.53936767578125
    8. '>[' → logprob: -11.91436767578125
    9. ' [' → logprob: -12.28936767578125
    10. '```' → logprob: -12.66436767578125

Token 1151: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -4.60414821645827e-06
    2. ' j' → logprob: -12.500004768371582
    3. '[j' → logprob: -14.500004768371582
    4. '
' → logprob: -15.750004768371582
    5. '   ' → logprob: -16.125003814697266
    6. '```' → logprob: -16.875003814697266
    7. '	j' → logprob: -17.000003814697266
    8. ',j' → logprob: -19.250003814697266
    9. '$j' → logprob: -19.250003814697266
    10. ' ' → logprob: -19.375003814697266

Token 1152: ']' (ID: 60)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.04871261119842529
    2. '>=' → logprob: -3.048712730407715
    3. ')>=' → logprob: -9.298712730407715
    4. ']>=' → logprob: -11.173712730407715
    5. ')' → logprob: -11.673712730407715
    6. '           ' → logprob: -11.923712730407715
    7. '   ' → logprob: -13.673712730407715
    8. '[' → logprob: -14.048712730407715
    9. '       ' → logprob: -14.798712730407715
    10. ' ' → logprob: -15.173712730407715

Token 1153: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.22664321959018707
    2. '>=' → logprob: -1.6016432046890259
    3. '>' → logprob: -7.976643085479736
    4. ' >' → logprob: -8.351643562316895
    5. ' !=' → logprob: -8.976643562316895
    6. '   ' → logprob: -8.976643562316895
    7. ' ==' → logprob: -9.226643562316895
    8. '           ' → logprob: -9.476643562316895
    9. '==' → logprob: -9.726643562316895
    10. ' <=' → logprob: -9.976643562316895

Token 1154: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -3.619311974034645e-05
    2. ' K' → logprob: -10.250036239624023
    3. '   ' → logprob: -14.625036239624023
    4. '1' → logprob: -16.125036239624023
    5. '       ' → logprob: -16.625036239624023
    6. '           ' → logprob: -16.625036239624023
    7. '	K' → logprob: -18.000036239624023
    8. '               ' → logprob: -19.375036239624023
    9. ' ' → logprob: -19.625036239624023
    10. '    ' → logprob: -19.750036239624023

Token 1155: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09368324279785156
    2. ':
' → logprob: -2.5936832427978516
    3. '           ' → logprob: -4.343683242797852
    4. '       ' → logprob: -6.593683242797852
    5. ' and' → logprob: -8.718683242797852
    6. '               ' → logprob: -11.093683242797852
    7. 'and' → logprob: -11.218683242797852
    8. ' :' → logprob: -11.218683242797852
    9. 'print' → logprob: -11.218683242797852
    10. '   ' → logprob: -11.343683242797852

Token 1156: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0059181274846196175
    2. 'print' → logprob: -5.255918025970459
    3. '       ' → logprob: -7.880918025970459
    4. ' print' → logprob: -8.380918502807617
    5. '```' → logprob: -10.255918502807617
    6. '   ' → logprob: -10.505918502807617
    7. '               ' → logprob: -12.005918502807617
    8. '          ' → logprob: -13.255918502807617
    9. '	       ' → logprob: -13.380918502807617
    10. '#' → logprob: -13.505918502807617

Token 1157: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.01834612898528576
    2. '           ' → logprob: -4.018346309661865
    3. ' print' → logprob: -9.393345832824707
    4. '       ' → logprob: -9.893345832824707
    5. '```' → logprob: -10.393345832824707
    6. '               ' → logprob: -10.643345832824707
    7. '   ' → logprob: -11.893345832824707
    8. '	print' → logprob: -15.518345832824707
    9. '``' → logprob: -15.518345832824707
    10. 'break' → logprob: -16.018346786499023

Token 1158: ' On' (ID: 2160)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.2200749754119897e-06
    2. '           ' → logprob: -13.625001907348633
    3. '   ' → logprob: -15.000001907348633
    4. '       ' → logprob: -15.250001907348633
    5. ' print' → logprob: -15.500001907348633
    6. 'result' → logprob: -17.000001907348633
    7. '#' → logprob: -17.500001907348633
    8. '#print' → logprob: -17.500001907348633
    9. 'if' → logprob: -18.000001907348633
    10. '```' → logprob: -18.750001907348633

Token 1159: ' garde' (ID: 65309)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -8.2994620242971e-06
    2. ' print' → logprob: -12.000008583068848
    3. '#print' → logprob: -14.500008583068848
    4. '
' → logprob: -14.625008583068848
    5. '           ' → logprob: -14.750008583068848
    6. '```' → logprob: -15.125008583068848
    7. '#' → logprob: -15.625008583068848
    8. '   ' → logprob: -15.750008583068848
    9. '       ' → logprob: -16.37500762939453
    10. 'import' → logprob: -17.75000762939453

Token 1160: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5768924951553345
    2. 'print' → logprob: -0.8268924951553345
    3. ' i' → logprob: -7.576892375946045
    4. '           ' → logprob: -8.451892852783203
    5. ' print' → logprob: -9.076892852783203
    6. '   ' → logprob: -9.826892852783203
    7. 'j' → logprob: -11.076892852783203
    8. 'break' → logprob: -11.576892852783203
    9. '(i' → logprob: -11.576892852783203
    10. 'min' → logprob: -12.201892852783203

Token 1161: ' et' (ID: 859)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0792565792798996
    2. '           ' → logprob: -3.079256534576416
    3. 'print' → logprob: -4.204256534576416
    4. 'return' → logprob: -5.204256534576416
    5. '+=' → logprob: -5.954256534576416
    6. ' =' → logprob: -6.079256534576416
    7. '=i' → logprob: -7.079256534576416
    8. ':' → logprob: -7.329256534576416
    9. '=
' → logprob: -8.079257011413574
    10. ':
' → logprob: -8.204257011413574

Token 1162: ' j' (ID: 441)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.07932473719120026
    2. 'print' → logprob: -2.579324722290039
    3. 'j' → logprob: -8.079324722290039
    4. '           ' → logprob: -9.079324722290039
    5. ' break' → logprob: -12.204324722290039
    6. 'exit' → logprob: -13.329324722290039
    7. '       ' → logprob: -13.704324722290039
    8. '
' → logprob: -14.454324722290039
    9. 'import' → logprob: -14.454324722290039
    10. 'return' → logprob: -14.579324722290039

Token 1163: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3822583258152008
    2. ',' → logprob: -1.2572582960128784
    3. ':' → logprob: -3.882258415222168
    4. '=' → logprob: -5.632258415222168
    5. '               ' → logprob: -6.507258415222168
    6. ' =' → logprob: -6.632258415222168
    7. '.' → logprob: -6.757258415222168
    8. ':
' → logprob: -6.757258415222168
    9. ',
' → logprob: -7.382258415222168
    10. ' ,' → logprob: -7.882258415222168

Token 1164: ' car' (ID: 1669)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002299301093444228
    2. 'break' → logprob: -6.2522993087768555
    3. ' break' → logprob: -8.627299308776855
    4. 'print' → logprob: -9.002299308776855
    5. '#' → logprob: -10.252299308776855
    6. '               ' → logprob: -11.127299308776855
    7. '            
' → logprob: -12.377299308776855
    8. '                       ' → logprob: -13.252299308776855
    9. '
' → logprob: -13.252299308776855
    10. ' #' → logprob: -13.502299308776855

Token 1165: ' c' (ID: 274)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7461787462234497
    2. '#' → logprob: -1.6211787462234497
    3. '           ' → logprob: -1.7461787462234497
    4. 'break' → logprob: -2.24617862701416
    5. ' print' → logprob: -4.12117862701416
    6. ' #' → logprob: -4.87117862701416
    7. ' break' → logprob: -4.87117862701416
    8. '               ' → logprob: -5.62117862701416
    9. 'len' → logprob: -6.62117862701416
    10. ' le' → logprob: -6.74617862701416

Token 1166: ''est' (ID: 6616)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7588265538215637
    2. '#' → logprob: -1.258826494216919
    3. ''est' → logprob: -1.508826494216919
    4. 'est' → logprob: -5.383826732635498
    5. 'ont' → logprob: -5.633826732635498
    6. 'e' → logprob: -5.883826732635498
    7. 'break' → logprob: -6.383826732635498
    8. 'ela' → logprob: -6.633826732635498
    9. 'ould' → logprob: -6.758826732635498
    10. '```' → logprob: -6.883826732635498

Token 1167: ' le' (ID: 505)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.26288852095603943
    2. 'i' → logprob: -2.1378884315490723
    3. ' le' → logprob: -3.8878884315490723
    4. '           ' → logprob: -4.012888431549072
    5. ' la' → logprob: -4.012888431549072
    6. ' True' → logprob: -4.137888431549072
    7. 'le' → logprob: -4.887888431549072
    8. 'len' → logprob: -5.012888431549072
    9. ' len' → logprob: -5.637888431549072
    10. ' the' → logprob: -6.012888431549072

Token 1168: ' plus' (ID: 2932)
  Prédit: 'minimum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'minimum' → logprob: -1.2116316556930542
    2. 'print' → logprob: -1.5866316556930542
    3. ' minimum' → logprob: -2.4616317749023438
    4. 'break' → logprob: -2.4616317749023438
    5. 'min' → logprob: -2.9616317749023438
    6. 'result' → logprob: -2.9616317749023438
    7. ' minimal' → logprob: -3.3366317749023438
    8. 'return' → logprob: -3.4616317749023438
    9. ' plus' → logprob: -3.7116317749023438
    10. 'prem' → logprob: -3.7116317749023438

Token 1169: ' court' (ID: 10314)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6375739574432373
    2. '```' → logprob: -0.8875739574432373
    3. 'short' → logprob: -4.387574195861816
    4. 'break' → logprob: -5.137574195861816
    5. 'pro' → logprob: -5.387574195861816
    6. 'i' → logprob: -5.512574195861816
    7. ' print' → logprob: -5.637574195861816
    8. '``' → logprob: -5.762574195861816
    9. '   ' → logprob: -5.887574195861816
    10. 'pet' → logprob: -6.137574195861816

Token 1170: ' pré' (ID: 9424)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.7155349254608154
    2. 'i' → logprob: -1.5905349254608154
    3. 'pré' → logprob: -2.0905349254608154
    4. ' i' → logprob: -3.2155349254608154
    5. '   ' → logprob: -3.3405349254608154
    6. ' prefix' → logprob: -3.5905349254608154
    7. '
' → logprob: -3.8405349254608154
    8. '_prefix' → logprob: -4.0905351638793945
    9. '```' → logprob: -4.5905351638793945
    10. '           ' → logprob: -5.2155351638793945

Token 1171: 'fix' (ID: 11853)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.3904859721660614
    2. '_prefix' → logprob: -2.390486001968384
    3. 'refix' → logprob: -2.640486001968384
    4. 'fix' → logprob: -2.765486001968384
    5. 's' → logprob: -3.515486001968384
    6. '```' → logprob: -3.890486001968384
    7. 'i' → logprob: -5.015485763549805
    8. '_' → logprob: -5.015485763549805
    9. 'f' → logprob: -5.640485763549805
    10. 'suffix' → logprob: -5.890485763549805

Token 1172: 'e' (ID: 68)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.3959380388259888
    2. 'e' → logprob: -2.270937919616699
    3. ' =' → logprob: -2.270937919616699
    4. '_prefix' → logprob: -2.520937919616699
    5. 'prefix' → logprob: -2.645937919616699
    6. '=' → logprob: -2.770937919616699
    7. '           ' → logprob: -3.020937919616699
    8. '```' → logprob: -3.270937919616699
    9. 'if' → logprob: -3.395937919616699
    10. 'x' → logprob: -3.395937919616699

Token 1173: ' (' (ID: 350)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012811335735023022
    2. '               ' → logprob: -5.262811183929443
    3. ':' → logprob: -6.262811183929443
    4. ':
' → logprob: -6.512811183929443
    5. 'return' → logprob: -7.012811183929443
    6. '```' → logprob: -7.012811183929443
    7. ',' → logprob: -7.512811183929443
    8. '   ' → logprob: -7.762811183929443
    9. '                   ' → logprob: -8.387811660766602
    10. 'print' → logprob: -8.762811660766602

Token 1174: 'par' (ID: 796)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.191805899143219
    2. '               ' → logprob: -2.691805839538574
    3. '```' → logprob: -3.316805839538574
    4. 'break' → logprob: -3.566805839538574
    5. '
' → logprob: -5.066805839538574
    6. '#' → logprob: -5.191805839538574
    7. 'i' → logprob: -5.316805839538574
    8. '=' → logprob: -5.816805839538574
    9. 'à' → logprob: -5.816805839538574
    10. ')' → logprob: -5.941805839538574

Token 1175: 'cours' (ID: 165989)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.6419424414634705
    2. 'break' → logprob: -1.1419425010681152
    3. 'int' → logprob: -2.6419425010681152
    4. 't' → logprob: -2.7669425010681152
    5. 'print' → logprob: -5.516942501068115
    6. '       ' → logprob: -6.266942501068115
    7. '
' → logprob: -6.391942501068115
    8. 'x' → logprob: -6.391942501068115
    9. 'nt' → logprob: -6.516942501068115
    10. '#' → logprob: -6.641942501068115

Token 1176: ' par' (ID: 686)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11840831488370895
    2. '               ' → logprob: -3.243408203125
    3. ' possible' → logprob: -4.118408203125
    4. ' break' → logprob: -4.368408203125
    5. 'possible' → logprob: -4.368408203125
    6. 'break' → logprob: -4.868408203125
    7. '       ' → logprob: -5.243408203125
    8. '                   ' → logprob: -5.368408203125
    9. '```' → logprob: -5.493408203125
    10. '   ' → logprob: -5.743408203125

Token 1177: ' i' (ID: 575)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.6968587636947632
    2. 'i' → logprob: -1.5718587636947632
    3. '   ' → logprob: -2.3218588829040527
    4. 'for' → logprob: -3.0718588829040527
    5. 'le' → logprob: -3.1968588829040527
    6. 'break' → logprob: -3.3218588829040527
    7. ' range' → logprob: -4.071858882904053
    8. ' ordre' → logprob: -4.321858882904053
    9. '#' → logprob: -4.696858882904053
    10. 'continue' → logprob: -4.946858882904053

Token 1178: ' cro' (ID: 11270)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.563420295715332
    2. '           ' → logprob: -1.563420295715332
    3. ' +' → logprob: -2.563420295715332
    4. ')' → logprob: -2.938420295715332
    5. ':' → logprob: -3.563420295715332
    6. '):
' → logprob: -3.813420295715332
    7. '):' → logprob: -4.438420295715332
    8. ':
' → logprob: -4.563420295715332
    9. '   ' → logprob: -5.063420295715332
    10. '               ' → logprob: -5.063420295715332

Token 1179: 'issant' (ID: 31359)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6184061765670776
    2. 'r' → logprob: -1.7434061765670776
    3. 'u' → logprob: -2.493406295776367
    4. 's' → logprob: -2.618406295776367
    5. 'ur' → logprob: -2.743406295776367
    6. 'i' → logprob: -4.493406295776367
    7. 'nt' → logprob: -5.118406295776367
    8. 'ins' → logprob: -5.243406295776367
    9. 'in' → logprob: -5.493406295776367
    10. 'inte' → logprob: -5.743406295776367

Token 1180: ')
' (ID: 446)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07753007858991623
    2. '               ' → logprob: -3.8275301456451416
    3. ')' → logprob: -3.9525301456451416
    4. ':' → logprob: -4.5775299072265625
    5. '):
' → logprob: -4.7025299072265625
    6. '):' → logprob: -5.0775299072265625
    7. ':
' → logprob: -5.9525299072265625
    8. ',' → logprob: -6.2025299072265625
    9. ' et' → logprob: -7.2025299072265625
    10. 'and' → logprob: -7.3275299072265625

Token 1181: '           ' (ID: 352)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6410865187644958
    2. '           ' → logprob: -0.7660865187644958
    3. ':' → logprob: -5.266086578369141
    4. 'print' → logprob: -6.516086578369141
    5. ':
' → logprob: -7.516086578369141
    6. '```' → logprob: -7.766086578369141
    7. ',' → logprob: -8.01608657836914
    8. '.' → logprob: -9.01608657836914
    9. '                       ' → logprob: -10.39108657836914
    10. '<|end|>' → logprob: -10.51608657836914

Token 1182: ' I' (ID: 357)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.06282759457826614
    2. 'break' → logprob: -3.3128275871276855
    3. 'result' → logprob: -4.0628275871276855
    4. 'answer' → logprob: -5.3128275871276855
    5. 'res' → logprob: -7.5628275871276855
    6. '           ' → logprob: -7.6878275871276855
    7. 'prefix' → logprob: -7.9378275871276855
    8. '       ' → logprob: -8.312828063964844
    9. 'best' → logprob: -8.562828063964844
    10. '   ' → logprob: -8.687828063964844

Token 1183: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.524288535118103
    2. ',' → logprob: -1.024288535118103
    3. ' =' → logprob: -3.0242886543273926
    4. ',I' → logprob: -9.149288177490234
    5. '=i' → logprob: -9.899288177490234
    6. 'f' → logprob: -10.149288177490234
    7. ' ,' → logprob: -10.274288177490234
    8. 'I' → logprob: -10.399288177490234
    9. 'n' → logprob: -10.524288177490234
    10. ',i' → logprob: -10.774288177490234

Token 1184: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0007101670489646494
    2. ' i' → logprob: -7.2507100105285645
    3. '0' → logprob: -15.500710487365723
    4. '   ' → logprob: -17.750709533691406
    5. '```' → logprob: -18.500709533691406
    6. '`' → logprob: -18.875709533691406
    7. '_i' → logprob: -19.250709533691406
    8. '	i' → logprob: -19.375709533691406
    9. '=i' → logprob: -19.875709533691406
    10. 'I' → logprob: -20.375709533691406

Token 1185: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13014762103557587
    2. '<|end|>' → logprob: -2.130147695541382
    3. ' 
' → logprob: -7.005147457122803
    4. ';' → logprob: -7.380147457122803
    5. '<|end|>' → logprob: -7.505147457122803
    6. '
' → logprob: -8.005147933959961
    7. '           ' → logprob: -8.880147933959961
    8. '  
' → logprob: -8.880147933959961
    9. ',' → logprob: -9.255147933959961
    10. ' =' → logprob: -9.505147933959961

Token 1186: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003925945144146681
    2. ',' → logprob: -6.878925800323486
    3. '<|end|>' → logprob: -7.253925800323486
    4. '                   ' → logprob: -8.003926277160645
    5. ' =' → logprob: -8.253926277160645
    6. '       ' → logprob: -8.253926277160645
    7. '               ' → logprob: -8.628926277160645
    8. '=' → logprob: -8.628926277160645
    9. '```' → logprob: -8.878926277160645
    10. '   ' → logprob: -9.003926277160645

Token 1187: ' J' (ID: 643)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.15627236664295197
    2. 'J' (adapté à ' J') → logprob: -2.0312724113464355
    3. ',' → logprob: -4.6562724113464355
    4. '
' → logprob: -6.7812724113464355
    5. '                   ' → logprob: -7.1562724113464355
    6. ' J' → logprob: -7.6562724113464355
    7. '               ' → logprob: -7.7812724113464355
    8. ',
' → logprob: -8.906271934509277
    9. '            
' → logprob: -9.031271934509277
    10. '#' → logprob: -9.281271934509277

Token 1188: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14280898869037628
    2. ' =' → logprob: -2.0178089141845703
    3. ',' → logprob: -9.89280891418457
    4. '<|end|>' → logprob: -10.39280891418457
    5. '=
' → logprob: -10.64280891418457
    6. ' =
' → logprob: -11.89280891418457
    7. ')' → logprob: -12.39280891418457
    8. '=j' → logprob: -12.51780891418457
    9. ' ' → logprob: -13.01780891418457
    10. '           ' → logprob: -13.39280891418457

Token 1189: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -2.1888679839321412e-05
    2. ' j' → logprob: -10.750021934509277
    3. '   ' → logprob: -15.000021934509277
    4. '```' → logprob: -16.50002098083496
    5. '$j' → logprob: -16.87502098083496
    6. '	j' → logprob: -17.12502098083496
    7. '           ' → logprob: -18.25002098083496
    8. '0' → logprob: -18.50002098083496
    9. '`' → logprob: -18.50002098083496
    10. '[j' → logprob: -19.62502098083496

Token 1190: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005282493657432497
    2. '<|end|>' → logprob: -8.625528335571289
    3. '
' → logprob: -9.250528335571289
    4. '       ' → logprob: -9.500528335571289
    5. '   ' → logprob: -10.375528335571289
    6. '               ' → logprob: -10.500528335571289
    7. '            
' → logprob: -11.250528335571289
    8. '                           ' → logprob: -11.250528335571289
    9. '\n' → logprob: -11.375528335571289
    10. 'break' → logprob: -11.500528335571289

Token 1191: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.1160349458805285e-05
    2. '               ' → logprob: -13.000011444091797
    3. '                   ' → logprob: -13.125011444091797
    4. '       ' → logprob: -13.750011444091797
    5. '                           ' → logprob: -13.875011444091797
    6. 'break' → logprob: -13.875011444091797
    7. '                       ' → logprob: -14.000011444091797
    8. '#' → logprob: -14.250011444091797
    9. '		' → logprob: -14.625011444091797
    10. '```' → logprob: -14.750011444091797

Token 1192: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008625447750091553
    2. 'break' → logprob: -4.758625507354736
    3. '```' → logprob: -12.133625030517578
    4. 'print' → logprob: -13.258625030517578
    5. '       ' → logprob: -13.258625030517578
    6. ' break' → logprob: -14.508625030517578
    7. '               ' → logprob: -14.758625030517578
    8. '            
' → logprob: -14.758625030517578
    9. '
' → logprob: -15.008625030517578
    10. '#' (adapté à ' #') → logprob: -16.008625030517578

Token 1193: ' On' (ID: 2160)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -1.0683535037969705e-05
    2. 'print' → logprob: -11.50001049041748
    3. '           ' → logprob: -14.62501049041748
    4. ' break' → logprob: -16.625011444091797
    5. 'return' → logprob: -17.125011444091797
    6. 'BREAK' → logprob: -18.625011444091797
    7. '```' → logprob: -19.250011444091797
    8. '#' → logprob: -19.500011444091797
    9. '       ' → logprob: -19.875011444091797
    10. 'breaking' → logprob: -20.250011444091797

Token 1194: ' s' (ID: 265)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.000932421418838203
    2. '           ' → logprob: -7.375932216644287
    3. ' break' → logprob: -8.875932693481445
    4. '_break' → logprob: -9.375932693481445
    5. '```' → logprob: -10.000932693481445
    6. '-break' → logprob: -11.000932693481445
    7. '	break' → logprob: -12.500932693481445
    8. 'BREAK' → logprob: -12.875932693481445
    9. '#' → logprob: -13.125932693481445
    10. '
' → logprob: -13.500932693481445

Token 1195: ''arr' (ID: 49695)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.02582899108529091
    2. '           ' → logprob: -3.7758290767669678
    3. '_break' → logprob: -6.400828838348389
    4. ' break' → logprob: -7.650828838348389
    5. '       ' → logprob: -9.025829315185547
    6. 'e' → logprob: -9.650829315185547
    7. '-break' → logprob: -9.775829315185547
    8. 'reak' → logprob: -9.900829315185547
    9. '#' → logprob: -10.525829315185547
    10. 't' → logprob: -10.650829315185547

Token 1196: 'ête' (ID: 16808)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05838295444846153
    2. 'aller' → logprob: -3.558382987976074
    3. '#' → logprob: -5.433382987976074
    4. 'p' → logprob: -6.058382987976074
    5. '               ' → logprob: -6.183382987976074
    6. 'vez' → logprob: -6.308382987976074
    7. 'l' → logprob: -6.433382987976074
    8. '   ' → logprob: -6.683382987976074
    9. 'rt' → logprob: -6.808382987976074
    10. 'r' → logprob: -7.058382987976074

Token 1197: ' dès' (ID: 37926)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.21358108520507812
    2. '               ' → logprob: -1.7135810852050781
    3. 'break' → logprob: -4.963581085205078
    4. '            ' → logprob: -6.838581085205078
    5. '                   ' → logprob: -6.963581085205078
    6. '                       ' → logprob: -7.463581085205078
    7. '            
' → logprob: -7.463581085205078
    8. '             ' → logprob: -7.588581085205078
    9. '
' → logprob: -8.713581085205078
    10. '                ' → logprob: -9.088581085205078

Token 1198: ' qu' (ID: 474)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.1057095155119896
    2. '           ' → logprob: -2.3557095527648926
    3. ' break' → logprob: -5.605709552764893
    4. '   ' → logprob: -7.355709552764893
    5. 'le' → logprob: -7.980709552764893
    6. 'la' → logprob: -8.355709075927734
    7. 'I' → logprob: -8.980709075927734
    8. '               ' → logprob: -9.105709075927734
    9. '_break' → logprob: -9.480709075927734
    10. 'l' → logprob: -9.605709075927734

Token 1199: ''on' (ID: 25812)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009499169886112213
    2. 'break' → logprob: -5.5094990730285645
    3. ' True' → logprob: -6.3844990730285645
    4. ' break' → logprob: -6.8844990730285645
    5. '            ' → logprob: -6.8844990730285645
    6. '               ' → logprob: -7.8844990730285645
    7. 'True' → logprob: -7.8844990730285645
    8. '   ' → logprob: -8.634499549865723
    9. '          ' → logprob: -8.634499549865723
    10. '                   ' → logprob: -9.509499549865723

Token 1200: ' a' (ID: 261)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.017433015629649162
    2. '           ' → logprob: -4.642433166503906
    3. ' break' → logprob: -4.892433166503906
    4. '```' → logprob: -10.267433166503906
    5. '
' → logprob: -10.392433166503906
    6. '       ' → logprob: -10.517433166503906
    7. '_break' → logprob: -11.142433166503906
    8. '#' → logprob: -11.767433166503906
    9. '   ' → logprob: -12.392433166503906
    10. 'print' → logprob: -12.517433166503906

Token 1201: ' trouvé' (ID: 60081)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.35157591104507446
    2. '           ' → logprob: -1.2265758514404297
    3. ' break' → logprob: -5.97657585144043
    4. 'print' → logprob: -8.72657585144043
    5. 'tr' → logprob: -8.97657585144043
    6. '```' → logprob: -9.10157585144043
    7. '_break' → logprob: -9.85157585144043
    8. '
' → logprob: -10.47657585144043
    9. '       ' → logprob: -10.72657585144043
    10. '               ' → logprob: -11.10157585144043

Token 1202: ' un' (ID: 537)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.009843680076301098
    2. '
' → logprob: -5.759843826293945
    3. ' break' → logprob: -6.134843826293945
    4. '           ' → logprob: -6.259843826293945
    5. '_break' → logprob: -7.134843826293945
    6. '               ' → logprob: -7.259843826293945
    7. '```' → logprob: -7.759843826293945
    8. '                   ' → logprob: -9.009843826293945
    9. '	break' → logprob: -9.134843826293945
    10. '   ' → logprob: -9.634843826293945

Token 1203: ' pré' (ID: 9424)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.003077421337366104
    2. '           ' → logprob: -6.253077507019043
    3. 'return' → logprob: -7.628077507019043
    4. '   ' → logprob: -8.378077507019043
    5. '
' → logprob: -9.003077507019043
    6. ' break' → logprob: -9.128077507019043
    7. '```' → logprob: -9.128077507019043
    8. '       ' → logprob: -10.503077507019043
    9. 'print' → logprob: -10.878077507019043
    10. '               ' → logprob: -11.628077507019043

Token 1204: 'fix' (ID: 11853)
  Prédit: 'fix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fix' → logprob: -0.0023141687270253897
    2. 'm' → logprob: -6.62731409072876
    3. 'f' → logprob: -7.37731409072876
    4. 'Fix' → logprob: -9.877314567565918
    5. 'mi' → logprob: -10.002314567565918
    6. '   ' → logprob: -10.377314567565918
    7. '_fix' → logprob: -10.502314567565918
    8. '```' → logprob: -10.752314567565918
    9. 'FIX' → logprob: -10.877314567565918
    10. '       ' → logprob: -10.877314567565918

Token 1205: 'e' (ID: 68)
  Prédit: 'fix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fix' → logprob: -0.5961535573005676
    2. 'x' → logprob: -1.0961534976959229
    3. 'i' → logprob: -2.846153497695923
    4. 'xi' → logprob: -4.346153736114502
    5. 's' → logprob: -5.221153736114502
    6. '#' → logprob: -5.346153736114502
    7. 'I' → logprob: -5.471153736114502
    8. 'ix' → logprob: -5.471153736114502
    9. 'xe' → logprob: -5.596153736114502
    10. 'ixe' → logprob: -6.096153736114502

Token 1206: ' valide' (ID: 137323)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -1.0129950046539307
    2. '           ' → logprob: -1.3879950046539307
    3. ' break' → logprob: -1.8879950046539307
    4. '
' → logprob: -3.1379950046539307
    5. '   ' → logprob: -3.1379950046539307
    6. '_break' → logprob: -3.5129950046539307
    7. '=' → logprob: -3.7629950046539307
    8. '               ' → logprob: -4.137994766235352
    9. '```' → logprob: -4.387994766235352
    10. '\n' → logprob: -4.512994766235352

Token 1207: ' (' (ID: 350)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0025873121339827776
    2. '               ' → logprob: -6.00258731842041
    3. '                   ' → logprob: -10.50258731842041
    4. '                       ' → logprob: -10.75258731842041
    5. '       ' → logprob: -11.00258731842041
    6. 'break' → logprob: -11.00258731842041
    7. '.' → logprob: -12.12758731842041
    8. ' break' → logprob: -12.50258731842041
    9. '```' → logprob: -12.50258731842041
    10. '		' → logprob: -12.75258731842041

Token 1208: 'break' (ID: 15354)
  Prédit: 'break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.0037467486690729856
    2. ' break' → logprob: -5.75374698638916
    3. '           ' → logprob: -7.50374698638916
    4. '               ' → logprob: -11.12874698638916
    5. '                   ' → logprob: -13.50374698638916
    6. '                       ' → logprob: -14.87874698638916
    7. '_break' → logprob: -15.00374698638916
    8. 'return' → logprob: -15.37874698638916
    9. '
' → logprob: -15.50374698638916
    10. '```' → logprob: -15.62874698638916

Token 1209: ' sort' (ID: 4506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.42995187640190125
    2. '
' → logprob: -1.9299519062042236
    3. '               ' → logprob: -1.9299519062042236
    4. '                   ' → logprob: -3.5549519062042236
    5. '<|end|>' → logprob: -4.1799516677856445
    6. ')' → logprob: -5.8049516677856445
    7. '```' → logprob: -5.8049516677856445
    8. '            
' → logprob: -6.9299516677856445
    9. 'break' → logprob: -6.9299516677856445
    10. '                       ' → logprob: -7.0549516677856445

Token 1210: ' de' (ID: 334)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4118691384792328
    2. ')' → logprob: -1.7868691682815552
    3. 'from' → logprob: -3.1618690490722656
    4. ' de' → logprob: -3.4118690490722656
    5. '       ' → logprob: -3.7868690490722656
    6. ' des' → logprob: -4.161869049072266
    7. '   ' → logprob: -4.286869049072266
    8. '```' → logprob: -4.661869049072266
    9. ' du' → logprob: -5.036869049072266
    10. '               ' → logprob: -5.286869049072266

Token 1211: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.261991024017334
    2. 'for' → logprob: -2.386991024017334
    3. 'the' → logprob: -2.511991024017334
    4. 'l' → logprob: -3.386991024017334
    5. '   ' → logprob: -5.761991024017334
    6. '1' → logprob: -5.761991024017334
    7. 'le' → logprob: -5.761991024017334
    8. 'de' → logprob: -6.011991024017334
    9. ' la' → logprob: -6.261991024017334
    10. 'loop' → logprob: -6.261991024017334

Token 1212: ' boucle' (ID: 174211)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07337933033704758
    2. 'bou' → logprob: -3.0733792781829834
    3. '```' → logprob: -4.8233795166015625
    4. 'loop' → logprob: -4.9483795166015625
    5. 'inner' → logprob: -5.0733795166015625
    6. ' boucle' → logprob: -6.3233795166015625
    7. ' for' → logprob: -8.198379516601562
    8. 'if' → logprob: -8.573379516601562
    9. 'b' → logprob: -8.698379516601562
    10. '
' → logprob: -9.198379516601562

Token 1213: ' sur' (ID: 1512)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.935573935508728
    2. '```' → logprob: -0.935573935508728
    3. '       ' → logprob: -2.4355740547180176
    4. '               ' → logprob: -3.0605740547180176
    5. 'for' → logprob: -3.3105740547180176
    6. '   ' → logprob: -4.685574054718018
    7. '\n' → logprob: -4.935574054718018
    8. '``' → logprob: -5.185574054718018
    9. ')' → logprob: -5.435574054718018
    10. '                   ' → logprob: -5.685574054718018

Token 1214: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.001396783976815641
    2. ' j' → logprob: -7.126396656036377
    3. 'for' → logprob: -8.376397132873535
    4. '```' → logprob: -8.501397132873535
    5. '   ' → logprob: -9.501397132873535
    6. 'i' → logprob: -11.126397132873535
    7. '`' → logprob: -11.251397132873535
    8. ' ' → logprob: -11.251397132873535
    9. 'la' → logprob: -11.251397132873535
    10. 'range' → logprob: -11.501397132873535

Token 1215: ')
' (ID: 446)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8917301297187805
    2. ')' → logprob: -1.0167300701141357
    3. ')
' → logprob: -1.5167300701141357
    4. '       ' → logprob: -5.266730308532715
    5. '               ' → logprob: -6.266730308532715
    6. '```' → logprob: -7.141730308532715
    7. '                   ' → logprob: -7.891730308532715
    8. '   ' → logprob: -8.766730308532715
    9. ').' → logprob: -9.391730308532715
    10. '`)' → logprob: -10.016730308532715

Token 1216: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -4.3464544432936236e-05
    2. '               ' → logprob: -10.375043869018555
    3. '		' → logprob: -12.000043869018555
    4. 'break' → logprob: -12.875043869018555
    5. '       ' → logprob: -13.000043869018555
    6. '                   ' → logprob: -14.375043869018555
    7. '```' → logprob: -14.875043869018555
    8. '                       ' → logprob: -15.750043869018555
    9. ' break' → logprob: -16.250043869018555
    10. '   ' → logprob: -17.750043869018555

Token 1217: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.5814863443374634
    2. '           ' → logprob: -0.8314863443374634
    3. ' break' → logprob: -5.581486225128174
    4. '               ' → logprob: -6.581486225128174
    5. '       ' → logprob: -8.706486701965332
    6. '```' → logprob: -9.331486701965332
    7. '                   ' → logprob: -9.956486701965332
    8. '	break' → logprob: -10.706486701965332
    9. '		' → logprob: -11.081486701965332
    10. '   ' → logprob: -11.456486701965332

Token 1218: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.036158327013254166
    2. '       ' → logprob: -3.411158323287964
    3. '           ' → logprob: -6.161158561706543
    4. '```' → logprob: -8.786158561706543
    5. 'else' → logprob: -9.036158561706543
    6. '<|end|>' → logprob: -9.911158561706543
    7. '    ' → logprob: -11.161158561706543
    8. '#' → logprob: -11.286158561706543
    9. '    
' → logprob: -11.411158561706543
    10. 'if' → logprob: -11.661158561706543

Token 1219: '#' (ID: 2)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3691856861114502
    2. '           ' → logprob: -1.9941856861114502
    3. '<|end|>' → logprob: -2.36918568611145
    4. '       ' → logprob: -3.24418568611145
    5. '```' → logprob: -3.99418568611145
    6. '#' → logprob: -4.619185447692871
    7. '
' → logprob: -6.119185447692871
    8. '\n' → logprob: -6.119185447692871
    9. 'else' → logprob: -6.619185447692871
    10. '    
' → logprob: -7.244185447692871

Token 1220: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5186479091644287
    2. 'if' → logprob: -1.3936479091644287
    3. '#' → logprob: -2.2686479091644287
    4. 'result' → logprob: -3.2686479091644287
    5. 'break' → logprob: -5.143648147583008
    6. 'mask' → logprob: -5.768648147583008
    7. 'res' → logprob: -6.393648147583008
    8. 'prefix' → logprob: -7.143648147583008
    9. 'for' → logprob: -7.268648147583008
    10. '```' → logprob: -7.768648147583008

Token 1221: 'ichage' (ID: 118475)
  Prédit: 'ichage'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ichage' → logprob: -0.006913099437952042
    2. '#' → logprob: -6.006913185119629
    3. 'iche' → logprob: -6.381913185119629
    4. 'f' → logprob: -6.756913185119629
    5. 'icher' → logprob: -7.006913185119629
    6. 'ich' → logprob: -8.006913185119629
    7. '```' → logprob: -8.256913185119629
    8. '``' → logprob: -10.631913185119629
    9. '=' → logprob: -11.631913185119629
    10. 'print' → logprob: -11.631913185119629

Token 1222: ' du' (ID: 1462)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.08981352299451828
    2. '(I' → logprob: -2.964813470840454
    3. 'I' → logprob: -3.964813470840454
    4. 'if' → logprob: -4.839813709259033
    5. '(' → logprob: -6.464813709259033
    6. 'for' → logprob: -6.589813709259033
    7. '()
' → logprob: -6.714813709259033
    8. '(
' → logprob: -7.214813709259033
    9. '("' → logprob: -7.339813709259033
    10. '(print' → logprob: -8.214813232421875

Token 1223: ' résultat' (ID: 62556)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.00013929695705883205
    2. 'i' → logprob: -9.125139236450195
    3. ' I' → logprob: -11.125139236450195
    4. '(I' → logprob: -11.500139236450195
    5. 'result' → logprob: -12.500139236450195
    6. 'f' → logprob: -15.000139236450195
    7. '   ' → logprob: -15.125139236450195
    8. 'min' → logprob: -15.125139236450195
    9. 'len' → logprob: -16.125139236450195
    10. '(i' → logprob: -16.250139236450195

Token 1224: '.
' (ID: 558)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00727472547441721
    2. 'if' → logprob: -5.007274627685547
    3. '```' → logprob: -7.507274627685547
    4. '``' → logprob: -11.632274627685547
    5. 'for' → logprob: -14.757274627685547
    6. ' print' → logprob: -15.132274627685547
    7. '
' → logprob: -15.257274627685547
    8. 'result' → logprob: -16.757274627685547
    9. ' if' → logprob: -17.007274627685547
    10. '#' → logprob: -17.257274627685547

Token 1225: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0005201471503823996
    2. '```' → logprob: -8.000519752502441
    3. 'if' → logprob: -8.625519752502441
    4. '``' → logprob: -12.375519752502441
    5. '
' → logprob: -14.500519752502441
    6. ' print' → logprob: -14.875519752502441
    7. 'for' → logprob: -17.000520706176758
    8. '`
' → logprob: -17.750520706176758
    9. '`' → logprob: -17.750520706176758
    10. 'I' → logprob: -17.750520706176758

Token 1226: ' Si' (ID: 7832)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.004664730280637741
    2. 'if' → logprob: -5.379664897918701
    3. '```' → logprob: -10.254664421081543
    4. 'result' → logprob: -12.004664421081543
    5. ' print' → logprob: -14.129664421081543
    6. 'prefix' → logprob: -14.379664421081543
    7. 'mask' → logprob: -14.754664421081543
    8. '``' → logprob: -14.879664421081543
    9. 'for' → logprob: -15.379664421081543
    10. '   ' → logprob: -15.504664421081543

Token 1227: ' I' (ID: 357)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.07325071096420288
    2. ' I' → logprob: -2.6982507705688477
    3. 'i' → logprob: -6.573250770568848
    4. ' i' → logprob: -6.948250770568848
    5. ''I' → logprob: -7.198250770568848
    6. ''' → logprob: -9.073250770568848
    7. ' '' → logprob: -10.198250770568848
    8. ' ' → logprob: -10.823250770568848
    9. ''i' → logprob: -11.198250770568848
    10. '(I' → logprob: -11.948250770568848

Token 1228: ' et' (ID: 859)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.048124637454748154
    2. '<' → logprob: -3.6731245517730713
    3. ' <=' → logprob: -4.17312479019165
    4. ' ==' → logprob: -6.29812479019165
    5. '<=' → logprob: -6.42312479019165
    6. ' !=' → logprob: -6.54812479019165
    7. ' >=' → logprob: -7.67312479019165
    8. '==' → logprob: -8.173124313354492
    9. '!=' → logprob: -8.798124313354492
    10. '<len' → logprob: -9.048124313354492

Token 1229: ' J' (ID: 643)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -1.7463626861572266
    2. ''i' → logprob: -1.7463626861572266
    3. 'i' → logprob: -1.8713626861572266
    4. 'K' → logprob: -2.1213626861572266
    5. ' i' → logprob: -2.1213626861572266
    6. 'I' → logprob: -2.2463626861572266
    7. '0' → logprob: -2.8713626861572266
    8. 'J' → logprob: -3.9963626861572266
    9. ' ' → logprob: -4.371362686157227
    10. ' '' → logprob: -4.621362686157227

Token 1230: ' sont' (ID: 5242)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.11436492204666138
    2. 'is' → logprob: -2.9893648624420166
    3. '!=' → logprob: -3.1143648624420166
    4. ' !=' → logprob: -5.114365100860596
    5. '>=' → logprob: -5.239365100860596
    6. ':' → logprob: -7.614365100860596
    7. '>' → logprob: -7.739365100860596
    8. ' >=' → logprob: -8.364364624023438
    9. '==' → logprob: -8.489364624023438
    10. 'if' → logprob: -8.739364624023438

Token 1231: ' tous' (ID: 10688)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.8553415536880493
    2. 'not' → logprob: -1.8553415536880493
    3. ' i' → logprob: -2.2303414344787598
    4. 'defined' → logprob: -2.3553414344787598
    5. '<' → logprob: -2.4803414344787598
    6. '0' → logprob: -2.6053414344787598
    7. 'I' → logprob: -2.6053414344787598
    8. ''i' → logprob: -2.6053414344787598
    9. ''' → logprob: -3.1053414344787598
    10. ' not' → logprob: -3.4803414344787598

Token 1232: ' deux' (ID: 10301)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.4265369772911072
    2. ' !=' → logprob: -1.926537036895752
    3. '=' → logprob: -3.301537036895752
    4. 'defined' → logprob: -3.426537036895752
    5. ' is' → logprob: -3.676537036895752
    6. 'is' → logprob: -4.551537036895752
    7. '==' → logprob: -4.676537036895752
    8. ' defined' → logprob: -4.801537036895752
    9. 'in' → logprob: -4.926537036895752
    10. '```' → logprob: -4.926537036895752

Token 1233: ' ég' (ID: 33150)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -1.0739288330078125
    2. ' in' → logprob: -1.3239288330078125
    3. 'in' → logprob: -1.8239288330078125
    4. ' not' → logprob: -1.9489288330078125
    5. 'defined' → logprob: -2.9489288330078125
    6. ''in' → logprob: -4.5739288330078125
    7. ''' → logprob: -4.8239288330078125
    8. ' defined' → logprob: -4.9489288330078125
    9. '<' → logprob: -5.9489288330078125
    10. '!=' → logprob: -6.5739288330078125

Token 1234: 'aux' (ID: 5454)
  Prédit: 'gal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'gal' → logprob: -0.38623034954071045
    2. 'q' → logprob: -1.5112303495407104
    3. 'x' → logprob: -3.13623046875
    4. 'g' → logprob: -4.63623046875
    5. 'qual' → logprob: -4.88623046875
    6. 'ql' → logprob: -5.26123046875
    7. 'r' → logprob: -5.38623046875
    8. 'e' → logprob: -6.01123046875
    9. 't' → logprob: -6.13623046875
    10. 'not' → logprob: -6.26123046875

Token 1235: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.06489451974630356
    2. ' à' → logprob: -3.314894437789917
    3. 'a' → logprob: -4.939894676208496
    4. '==' → logprob: -4.939894676208496
    5. '=' → logprob: -5.189894676208496
    6. ' ==' → logprob: -6.564894676208496
    7. ' ' → logprob: -6.689894676208496
    8. '```' → logprob: -7.439894676208496
    9. ''à' → logprob: -7.439894676208496
    10. '=None' → logprob: -7.814894676208496

Token 1236: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005131765268743038
    2. ' ' → logprob: -5.505131721496582
    3. 'D' → logprob: -7.255131721496582
    4. 'None' → logprob: -9.130131721496582
    5. 'I' → logprob: -9.380131721496582
    6. 'i' → logprob: -9.630131721496582
    7. ' D' → logprob: -10.505131721496582
    8. '-' → logprob: -10.880131721496582
    9. '=' → logprob: -12.005131721496582
    10. 'N' → logprob: -12.130131721496582

Token 1237: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000839046377222985
    2. 'D' → logprob: -7.6258392333984375
    3. ' ' → logprob: -8.125839233398438
    4. 'None' → logprob: -11.250839233398438
    5. 'N' → logprob: -11.500839233398438
    6. 'I' → logprob: -11.625839233398438
    7. '-' → logprob: -11.750839233398438
    8. ' D' → logprob: -12.500839233398438
    9. '=' → logprob: -12.875839233398438
    10. '1' → logprob: -13.125839233398438

Token 1238: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5389426946640015
    2. ':
' → logprob: -0.9139426946640015
    3. 'if' → logprob: -4.288942813873291
    4. ' and' → logprob: -7.788942813873291
    5. '==' → logprob: -7.788942813873291
    6. '```' → logprob: -7.788942813873291
    7. ' ==' → logprob: -8.038942337036133
    8. ' if' → logprob: -8.913942337036133
    9. 'and' → logprob: -9.288942337036133
    10. '   ' → logprob: -10.163942337036133

Token 1239: ' alors' (ID: 17971)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.44822755455970764
    2. 'if' → logprob: -1.3232275247573853
    3. '   ' → logprob: -2.948227643966675
    4. ' print' → logprob: -3.698227643966675
    5. ' if' → logprob: -4.073227405548096
    6. ':' → logprob: -8.198227882385254
    7. ':
' → logprob: -8.823227882385254
    8. '#' → logprob: -9.198227882385254
    9. '```' → logprob: -9.198227882385254
    10. 'I' → logprob: -10.323227882385254

Token 1240: ' on' (ID: 402)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.13650135695934296
    2. ' I' → logprob: -2.5115013122558594
    3. 'print' → logprob: -3.2615013122558594
    4. ' print' → logprob: -5.886501312255859
    5. '   ' → logprob: -6.511501312255859
    6. 'True' → logprob: -6.636501312255859
    7. ' True' → logprob: -7.011501312255859
    8. 'False' → logprob: -7.886501312255859
    9. 'i' → logprob: -8.01150131225586
    10. '
' → logprob: -8.51150131225586

Token 1241: ' affiche' (ID: 127479)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.15093307197093964
    2. '   ' → logprob: -3.025933027267456
    3. 'continue' → logprob: -3.400933027267456
    4. '#' → logprob: -3.900933027267456
    5. 'if' → logprob: -4.400933265686035
    6. ' print' → logprob: -4.525933265686035
    7. ' continue' → logprob: -4.900933265686035
    8. 'break' → logprob: -5.900933265686035
    9. '```' → logprob: -7.150933265686035
    10. 'else' → logprob: -7.275933265686035

Token 1242: ' la' (ID: 557)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004583445843309164
    2. '"' → logprob: -6.004583358764648
    3. ''' → logprob: -7.379583358764648
    4. 'I' → logprob: -7.629583358764648
    5. ' ' → logprob: -7.879583358764648
    6. '   ' → logprob: -8.504583358764648
    7. '-' → logprob: -9.004583358764648
    8. 'N' → logprob: -9.129583358764648
    9. 'print' → logprob: -10.129583358764648
    10. 'i' → logprob: -10.379583358764648

Token 1243: ' chaîne' (ID: 89288)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0013510684948414564
    2. ' ' → logprob: -7.1263508796691895
    3. '"' → logprob: -8.501351356506348
    4. ''' → logprob: -8.876351356506348
    5. 'I' → logprob: -9.251351356506348
    6. 'd' → logprob: -10.751351356506348
    7. 'print' → logprob: -11.001351356506348
    8. '`' → logprob: -11.376351356506348
    9. 'N' → logprob: -11.626351356506348
    10. 'break' → logprob: -12.126351356506348

Token 1244: ' vide' (ID: 21835)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '""' → logprob: -0.36542797088623047
    2. '''' → logprob: -1.7404279708862305
    3. ''' → logprob: -2.8654279708862305
    4. '"' → logprob: -2.9904279708862305
    5. 'print' → logprob: -5.4904279708862305
    6. '"\' → logprob: -5.4904279708862305
    7. ''\' → logprob: -5.6154279708862305
    8. '''
' → logprob: -5.8654279708862305
    9. 'if' → logprob: -5.9904279708862305
    10. '('' → logprob: -6.7404279708862305

Token 1245: ',
' (ID: 412)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.06237040460109711
    2. 'print' → logprob: -3.4373703002929688
    3. '""' → logprob: -4.187370300292969
    4. ' if' → logprob: -5.812370300292969
    5. '''' → logprob: -5.812370300292969
    6. '
' → logprob: -6.062370300292969
    7. '```' → logprob: -6.562370300292969
    8. '\n' → logprob: -7.187370300292969
    9. 'else' → logprob: -7.562370300292969
    10. '   ' → logprob: -7.812370300292969

Token 1246: '#' (ID: 2)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.507948637008667
    2. 'print' → logprob: -1.132948637008667
    3. '""' → logprob: -3.007948637008667
    4. '''' → logprob: -4.007948875427246
    5. 'if' → logprob: -5.132948875427246
    6. '   ' → logprob: -6.882948875427246
    7. '```' → logprob: -7.257948875427246
    8. '''
' → logprob: -8.632948875427246
    9. 'end' → logprob: -8.757948875427246
    10. 'elif' → logprob: -8.882948875427246

Token 1247: ' Sinon' (ID: 154924)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.02358412742614746
    2. 'else' → logprob: -3.8985841274261475
    3. '""' → logprob: -6.523584365844727
    4. 'if' → logprob: -7.023584365844727
    5. '```' → logprob: -8.398584365844727
    6. '''' → logprob: -8.523584365844727
    7. '   ' → logprob: -8.648584365844727
    8. ' print' → logprob: -10.273584365844727
    9. '``' → logprob: -11.648584365844727
    10. 'elif' → logprob: -11.773584365844727

Token 1248: ',' (ID: 11)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.18093250691890717
    2. ' print' → logprob: -1.9309325218200684
    3. 'if' → logprob: -4.680932521820068
    4. ' if' → logprob: -5.055932521820068
    5. '   ' → logprob: -5.430932521820068
    6. '           ' → logprob: -8.05593204498291
    7. '```' → logprob: -9.80593204498291
    8. '       ' → logprob: -9.93093204498291
    9. 'else' → logprob: -10.55593204498291
    10. '
' → logprob: -11.80593204498291

Token 1249: ' on' (ID: 402)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.10035191476345062
    2. ' print' → logprob: -2.3503518104553223
    3. '   ' → logprob: -9.60035228729248
    4. '
' → logprob: -9.97535228729248
    5. '```' → logprob: -11.10035228729248
    6. '           ' → logprob: -12.47535228729248
    7. 'for' → logprob: -12.47535228729248
    8. '       ' → logprob: -13.10035228729248
    9. ' for' → logprob: -13.10035228729248
    10. 'if' → logprob: -13.97535228729248

Token 1250: ' affiche' (ID: 127479)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.013464190997183323
    2. ' print' → logprob: -4.888463973999023
    3. 'for' → logprob: -5.513463973999023
    4. '#' → logprob: -7.263463973999023
    5. '   ' → logprob: -8.138463973999023
    6. ' for' → logprob: -8.513463973999023
    7. '```' → logprob: -8.763463973999023
    8. '
' → logprob: -9.013463973999023
    9. 'break' → logprob: -9.388463973999023
    10. 'if' → logprob: -9.763463973999023

Token 1251: ' la' (ID: 557)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bin' → logprob: -0.07911108434200287
    2. 'format' → logprob: -2.579111099243164
    3. 'print' → logprob: -9.079111099243164
    4. ' bin' → logprob: -9.704111099243164
    5. ' format' → logprob: -10.954111099243164
    6. '(bin' → logprob: -11.829111099243164
    7. ''' → logprob: -12.079111099243164
    8. '   ' → logprob: -12.204111099243164
    9. 'f' → logprob: -12.329111099243164
    10. ''{' → logprob: -12.454111099243164

Token 1252: ' représentation' (ID: 162614)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bin' → logprob: -0.13503263890743256
    2. 'format' → logprob: -2.1350326538085938
    3. ''' → logprob: -6.010032653808594
    4. 'print' → logprob: -6.010032653808594
    5. ' bin' → logprob: -6.760032653808594
    6. ' format' → logprob: -6.885032653808594
    7. '   ' → logprob: -8.010032653808594
    8. ''{' → logprob: -8.760032653808594
    9. '''.' → logprob: -9.135032653808594
    10. '0' → logprob: -9.635032653808594

Token 1253: ' b' (ID: 287)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bin' → logprob: -0.015284930355846882
    2. ' bin' → logprob: -4.640285015106201
    3. 'format' → logprob: -5.515285015106201
    4. '   ' → logprob: -7.265285015106201
    5. '(bin' → logprob: -8.015284538269043
    6. '```' → logprob: -9.390284538269043
    7. ''' → logprob: -9.640284538269043
    8. 'b' → logprob: -9.640284538269043
    9. ' format' → logprob: -9.890284538269043
    10. ' ' → logprob: -10.640284538269043

Token 1254: 'inaire' (ID: 41465)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.00022797346173319966
    2. ''' → logprob: -9.750227928161621
    3. 'inary' → logprob: -9.875227928161621
    4. '''' → logprob: -10.625227928161621
    5. '```' → logprob: -11.125227928161621
    6. '''
' → logprob: -11.375227928161621
    7. '
' → logprob: -11.500227928161621
    8. ''in' → logprob: -11.500227928161621
    9. '"' → logprob: -11.875227928161621
    10. 'inaire' → logprob: -12.000227928161621

Token 1255: ' de' (ID: 334)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7250039577484131
    2. 'print' → logprob: -0.8500039577484131
    3. '   ' → logprob: -3.475003957748413
    4. 'bin' → logprob: -3.975003957748413
    5. '()
' → logprob: -4.475004196166992
    6. ' if' → logprob: -5.225004196166992
    7. '
' → logprob: -5.600004196166992
    8. '(
' → logprob: -5.600004196166992
    9. '()' → logprob: -5.975004196166992
    10. '(bin' → logprob: -6.100004196166992

Token 1256: ' J' (ID: 643)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bin' → logprob: -0.2758461534976959
    2. 'J' → logprob: -1.5258461236953735
    3. 'I' → logprob: -4.150846004486084
    4. 'format' → logprob: -5.025846004486084
    5. ' bin' → logprob: -6.900846004486084
    6. 'f' → logprob: -8.775846481323242
    7. ' format' → logprob: -9.900846481323242
    8. '(bin' → logprob: -10.025846481323242
    9. '{' → logprob: -10.900846481323242
    10. '(I' → logprob: -11.150846481323242

Token 1257: ' sur' (ID: 1512)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.08149569481611252
    2. 'print' → logprob: -2.581495761871338
    3. '```' → logprob: -6.706495761871338
    4. ' if' → logprob: -7.331495761871338
    5. '
' → logprob: -8.33149528503418
    6. '   ' → logprob: -8.83149528503418
    7. '``' → logprob: -9.70649528503418
    8. 'I' → logprob: -9.70649528503418
    9. '+
' → logprob: -10.08149528503418
    10. '#' → logprob: -10.58149528503418

Token 1258: ' I' (ID: 357)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.0013716686517000198
    2. ' I' → logprob: -7.37637186050415
    3. 'i' → logprob: -7.50137186050415
    4. 'f' → logprob: -9.001371383666992
    5. '{' → logprob: -11.126371383666992
    6. ' i' → logprob: -11.126371383666992
    7. '{i' → logprob: -11.251371383666992
    8. '```' → logprob: -11.626371383666992
    9. '_I' → logprob: -12.001371383666992
    10. ' f' → logprob: -13.251371383666992

Token 1259: ' caractères' (ID: 183106)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7685889005661011
    2. 'print' → logprob: -0.8935889005661011
    3. ' if' → logprob: -2.3935890197753906
    4. '
' → logprob: -3.8935890197753906
    5. '\n' → logprob: -5.643589019775391
    6. '   ' → logprob: -5.768589019775391
    7. ':
' → logprob: -5.893589019775391
    8. '```' → logprob: -5.893589019775391
    9. ' print' → logprob: -7.643589019775391
    10. ':' → logprob: -8.26858901977539

Token 1260: ' (' (ID: 350)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.22836755216121674
    2. 'print' → logprob: -1.603367567062378
    3. '```' → logprob: -6.353367328643799
    4. ' if' → logprob: -7.853367328643799
    5. 'I' → logprob: -8.103367805480957
    6. '
' → logprob: -8.728367805480957
    7. '``' → logprob: -9.228367805480957
    8. '#' → logprob: -9.728367805480957
    9. '   ' → logprob: -9.978367805480957
    10. ':
' → logprob: -10.853367805480957

Token 1261: 'avec' (ID: 64065)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2081061154603958
    2. 'format' → logprob: -1.9581061601638794
    3. 'bin' → logprob: -3.45810604095459
    4. '   ' → logprob: -5.33310604095459
    5. ' format' → logprob: -6.08310604095459
    6. ')' → logprob: -6.33310604095459
    7. '{:' → logprob: -7.20810604095459
    8. ':' → logprob: -7.33310604095459
    9. '{' → logprob: -7.45810604095459
    10. ' print' → logprob: -7.45810604095459

Token 1262: ' des' (ID: 731)
  Prédit: 'format'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'format' → logprob: -0.07991458475589752
    2. 'f' → logprob: -3.4549145698547363
    3. 'bin' → logprob: -3.9549145698547363
    4. ' format' → logprob: -4.579914569854736
    5. 'print' → logprob: -5.329914569854736
    6. '0' → logprob: -5.454914569854736
    7. 'b' → logprob: -5.954914569854736
    8. '
' → logprob: -6.079914569854736
    9. ' f' → logprob: -6.829914569854736
    10. 'leading' → logprob: -8.954915046691895

Token 1263: ' z' (ID: 579)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.16531486809253693
    2. 'format' → logprob: -2.1653149127960205
    3. 'b' → logprob: -4.040314674377441
    4. 'f' → logprob: -4.415314674377441
    5. 'bin' → logprob: -5.540314674377441
    6. '{' → logprob: -6.540314674377441
    7. 'print' → logprob: -6.915314674377441
    8. ' format' → logprob: -7.540314674377441
    9. '{:' → logprob: -7.665314674377441
    10. 'z' → logprob: -8.415314674377441

Token 1264: 'éros' (ID: 120888)
  Prédit: 'ero'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ero' → logprob: -0.4019848108291626
    2. 'eros' → logprob: -1.4019848108291626
    3. 'fill' → logprob: -2.776984691619873
    4. 'éro' → logprob: -4.901984691619873
    5. 'er' → logprob: -5.026984691619873
    6. 'éros' → logprob: -5.151984691619873
    7. 'filled' → logprob: -7.151984691619873
    8. 'f' → logprob: -7.401984691619873
    9. '```' → logprob: -7.901984691619873
    10. 'erp' → logprob: -8.526985168457031

Token 1265: ' ajout' (ID: 64605)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16043514013290405
    2. 'rem' → logprob: -4.160435199737549
    3. 'b' → logprob: -4.410435199737549
    4. ' =' → logprob: -4.410435199737549
    5. 'f' → logprob: -4.535435199737549
    6. 'à' → logprob: -4.535435199737549
    7. '.fill' → logprob: -4.785435199737549
    8. 'z' → logprob: -5.035435199737549
    9. 'en' → logprob: -5.035435199737549
    10. ',' → logprob: -5.410435199737549

Token 1266: 'és' (ID: 1756)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.5068895816802979
    2. 'es' → logprob: -1.2568895816802979
    3. 'é' → logprob: -3.506889581680298
    4. '0' → logprob: -4.381889343261719
    5. 'ées' → logprob: -4.506889343261719
    6. 'fill' → logprob: -4.506889343261719
    7. ')' → logprob: -5.006889343261719
    8. 'ent' → logprob: -5.006889343261719
    9. 'z' → logprob: -5.131889343261719
    10. 'ée' → logprob: -5.756889343261719

Token 1267: ' à' (ID: 1221)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3541600704193115
    2. '```' → logprob: -2.3541600704193115
    3. ' =' → logprob: -2.9791600704193115
    4. 'fill' → logprob: -3.4791600704193115
    5. '.fill' → logprob: -3.4791600704193115
    6. '='' → logprob: -4.104160308837891
    7. '0' → logprob: -4.229160308837891
    8. ',' → logprob: -4.729160308837891
    9. ')' → logprob: -4.854160308837891
    10. 'à' → logprob: -5.104160308837891

Token 1268: ' gauche' (ID: 58367)
  Prédit: ''I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''I' → logprob: -0.07993549853563309
    2. ''' → logprob: -3.3299355506896973
    3. ''f' → logprob: -4.329935550689697
    4. 'I' → logprob: -5.204935550689697
    5. ''l' → logprob: -5.579935550689697
    6. 'f' → logprob: -5.579935550689697
    7. ''i' → logprob: -6.204935550689697
    8. 'leading' → logprob: -6.329935550689697
    9. ''b' → logprob: -6.329935550689697
    10. '0' → logprob: -6.329935550689697

Token 1269: ' si' (ID: 1784)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -1.0553537607192993
    2. ')' → logprob: -1.3053537607192993
    3. ').' → logprob: -1.6803537607192993
    4. 'print' → logprob: -2.0553536415100098
    5. ',' → logprob: -3.0553536415100098
    6. '   ' → logprob: -4.68035364151001
    7. '```' → logprob: -5.68035364151001
    8. '+' → logprob: -7.30535364151001
    9. '       ' → logprob: -7.30535364151001
    10. '           ' → logprob: -7.30535364151001

Token 1270: ' besoin' (ID: 27703)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.06099477782845497
    2. ' I' → logprob: -3.935994863510132
    3. 'i' → logprob: -4.060994625091553
    4. 'len' → logprob: -5.185994625091553
    5. ' i' → logprob: -5.310994625091553
    6. 'needed' → logprob: -5.685994625091553
    7. ' needed' → logprob: -6.060994625091553
    8. ' ' → logprob: -6.935994625091553
    9. '  ' → logprob: -7.185994625091553
    10. '   ' → logprob: -7.185994625091553

Token 1271: ').
' (ID: 6294)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.28528860211372375
    2. 'print' → logprob: -1.7852885723114014
    3. '   ' → logprob: -3.4102885723114014
    4. ')' → logprob: -3.7852885723114014
    5. ',' → logprob: -4.4102888107299805
    6. '           ' → logprob: -5.5352888107299805
    7. '       ' → logprob: -5.9102888107299805
    8. ':
' → logprob: -5.9102888107299805
    9. ':' → logprob: -7.2852888107299805
    10. '):' → logprob: -7.5352888107299805

Token 1272: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.20481418073177338
    2. 'print' → logprob: -1.7048141956329346
    3. '```' → logprob: -5.7048139572143555
    4. '``' → logprob: -10.454813957214355
    5. '
' → logprob: -11.579813957214355
    6. ' if' → logprob: -11.579813957214355
    7. 'i' → logprob: -12.704813957214355
    8. 'I' → logprob: -12.704813957214355
    9. 'pr' → logprob: -12.829813957214355
    10. 'p' → logprob: -13.329813957214355

Token 1273: ' I' (ID: 357)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.6344670653343201
    2. ' I' → logprob: -0.7594670653343201
    3. ''I' → logprob: -6.634467124938965
    4. '(I' → logprob: -8.134467124938965
    5. ' '' → logprob: -8.634467124938965
    6. ' (' → logprob: -10.134467124938965
    7. ' ' → logprob: -11.259467124938965
    8. ''' → logprob: -11.509467124938965
    9. ' not' → logprob: -12.134467124938965
    10. '"I' → logprob: -12.259467124938965

Token 1274: ' ==' (ID: 951)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.5375576615333557
    2. ' >' → logprob: -1.037557601928711
    3. ' ==' → logprob: -3.287557601928711
    4. '==' → logprob: -3.787557601928711
    5. ' !=' → logprob: -6.787557601928711
    6. '!=' → logprob: -7.912557601928711
    7. ':' → logprob: -11.287557601928711
    8. '=' → logprob: -13.537557601928711
    9. '>=' → logprob: -14.162557601928711
    10. '```' → logprob: -14.287557601928711

Token 1275: ' J' (ID: 643)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.018150178715586662
    2. ' ' → logprob: -4.018150329589844
    3. '=' → logprob: -15.143150329589844
    4. '  ' → logprob: -17.143150329589844
    5. 'I' → logprob: -17.643150329589844
    6. ' ' → logprob: -17.893150329589844
    7. '1' → logprob: -18.643150329589844
    8. '>' → logprob: -18.643150329589844
    9. '   ' → logprob: -18.768150329589844
    10. ' =' → logprob: -19.455650329589844

Token 1276: ' ==' (ID: 951)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5701375007629395
    2. '==' → logprob: -1.4451375007629395
    3. ' and' → logprob: -2.0701375007629395
    4. 'and' → logprob: -2.9451375007629395
    5. ' ==' → logprob: -4.4451375007629395
    6. ':
' → logprob: -4.9451375007629395
    7. '=' → logprob: -6.8201375007629395
    8. '   ' → logprob: -10.195137023925781
    9. '!=' → logprob: -10.570137023925781
    10. '>' → logprob: -10.820137023925781

Token 1277: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.7610454708337784e-05
    2. ' ' → logprob: -10.500027656555176
    3. '۰' → logprob: -21.87502670288086
    4. ' ' → logprob: -22.37502670288086
    5. '=' → logprob: -23.87502670288086
    6. ' ' → logprob: -23.87502670288086
    7. '   ' → logprob: -24.12502670288086
    8. '00' → logprob: -24.25002670288086
    9. '  ' → logprob: -24.62502670288086
    10. '```' → logprob: -24.62502670288086

Token 1278: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. '=' → logprob: -20.75
    4. '۰' → logprob: -20.75
    5. '```' → logprob: -22.625
    6. ' ' → logprob: -22.75
    7. '   ' → logprob: -23.5
    8. '00' → logprob: -23.875
    9. '>' → logprob: -24.0
    10. '０' → logprob: -24.25

Token 1279: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10129106044769287
    2. ':
' → logprob: -2.3512911796569824
    3. 'print' → logprob: -7.226291179656982
    4. '   ' → logprob: -7.976291179656982
    5. ':
' → logprob: -12.101290702819824
    6. ' print' → logprob: -12.476290702819824
    7. ' :' → logprob: -13.851290702819824
    8. ':#' → logprob: -14.601290702819824
    9. '==' → logprob: -14.851290702819824
    10. '=' → logprob: -15.226290702819824

Token 1280: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12720201909542084
    2. 'print' → logprob: -2.127202033996582
    3. ' print' → logprob: -8.252202033996582
    4. ':' → logprob: -12.127202033996582
    5. '	print' → logprob: -12.502202033996582
    6. '```' → logprob: -13.377202033996582
    7. ':
' → logprob: -14.002202033996582
    8. '
' → logprob: -14.752202033996582
    9. '       ' → logprob: -14.752202033996582
    10. '    
' → logprob: -15.252202033996582

Token 1281: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -5.512236498361744e-07
    2. ' print' → logprob: -15.125000953674316
    3. '   ' → logprob: -16.125
    4. 'prin' → logprob: -16.5
    5. '```' → logprob: -17.125
    6. '
' → logprob: -17.5
    7. 'pr' → logprob: -18.25
    8. 'pass' → logprob: -19.25
    9. '	print' → logprob: -20.125
    10. 'prit' → logprob: -20.375

Token 1282: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.5048530030981055e-06
    2. ' print' → logprob: -14.250001907348633
    3. 'pass' → logprob: -14.500001907348633
    4. '   ' → logprob: -16.125001907348633
    5. '```' → logprob: -16.500001907348633
    6. 'prin' → logprob: -17.000001907348633
    7. 'pr' → logprob: -17.750001907348633
    8. '
' → logprob: -18.750001907348633
    9. 'exit' → logprob: -19.125001907348633
    10. '#print' → logprob: -19.250001907348633

Token 1283: 'ichage' (ID: 118475)
  Prédit: 'icher'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icher' → logprob: -0.24651195108890533
    2. 'ichage' → logprob: -1.7465119361877441
    3. 'iche' → logprob: -3.746511936187744
    4. 'print' → logprob: -4.496511936187744
    5. 'ich' → logprob: -4.746511936187744
    6. ' print' → logprob: -8.496512413024902
    7. '#' → logprob: -8.871512413024902
    8. '   ' → logprob: -8.996512413024902
    9. '```' → logprob: -9.871512413024902
    10. 'iché' → logprob: -10.121512413024902

Token 1284: ' d' (ID: 272)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6490968465805054
    2. '("")' → logprob: -1.1490968465805054
    3. '()' → logprob: -1.8990968465805054
    4. '""' → logprob: -4.899096965789795
    5. '(""' → logprob: -6.774096965789795
    6. '('' → logprob: -7.024096965789795
    7. '()
' → logprob: -7.774096965789795
    8. '("")
' → logprob: -7.899096965789795
    9. '(print' → logprob: -8.899096488952637
    10. '(' → logprob: -9.024096488952637

Token 1285: ''une' (ID: 13337)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '""' → logprob: -0.1302211880683899
    2. '''' → logprob: -2.130221128463745
    3. '("")' → logprob: -6.380221366882324
    4. '"' → logprob: -6.755221366882324
    5. 'print' → logprob: -8.630221366882324
    6. ''' → logprob: -9.630221366882324
    7. '"""' → logprob: -9.755221366882324
    8. ''''' → logprob: -10.005221366882324
    9. '(""' → logprob: -10.005221366882324
    10. '('' → logprob: -11.755221366882324

Token 1286: ' chaîne' (ID: 89288)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '""' → logprob: -0.39450734853744507
    2. 'chaine' → logprob: -1.8945074081420898
    3. '"' → logprob: -2.14450740814209
    4. '''' → logprob: -3.39450740814209
    5. 'string' → logprob: -5.01950740814209
    6. 'print' → logprob: -5.39450740814209
    7. '
' → logprob: -5.76950740814209
    8. '"""' → logprob: -6.01950740814209
    9. ' chaîne' → logprob: -6.01950740814209
    10. 'cha' → logprob: -7.01950740814209

Token 1287: ' vide' (ID: 21835)
  Prédit: '("")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("")' → logprob: -0.7926030158996582
    2. '()' → logprob: -1.2926030158996582
    3. 'print' → logprob: -1.4176030158996582
    4. '""' → logprob: -4.167603015899658
    5. '''' → logprob: -4.917603015899658
    6. '('' → logprob: -5.292603015899658
    7. '(""' → logprob: -7.042603015899658
    8. '()
' → logprob: -7.792603015899658
    9. '   ' → logprob: -8.2926025390625
    10. '("")
' → logprob: -8.4176025390625

Token 1288: ' si' (ID: 1784)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0004528374411165714
    2. '
' → logprob: -8.125452995300293
    3. '""' → logprob: -9.625452995300293
    4. ' print' → logprob: -10.625452995300293
    5. '```' → logprob: -10.625452995300293
    6. '''' → logprob: -11.250452995300293
    7. '   ' → logprob: -11.750452995300293
    8. ')' → logprob: -12.250452995300293
    9. '("")' → logprob: -12.875452995300293
    10. '(print' → logprob: -13.250452995300293

Token 1289: ' on' (ID: 402)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '""' → logprob: -0.1883421689271927
    2. '''' → logprob: -2.4383420944213867
    3. 'True' → logprob: -2.5633420944213867
    4. '"' → logprob: -5.563342094421387
    5. 'I' → logprob: -6.438342094421387
    6. 'False' → logprob: -7.688342094421387
    7. 'print' → logprob: -7.813342094421387
    8. ' True' → logprob: -8.313342094421387
    9. '   ' → logprob: -8.563342094421387
    10. 'not' → logprob: -9.188342094421387

Token 1290: ' a' (ID: 261)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.8156796097755432
    2. 'n' → logprob: -1.3156795501708984
    3. 'not' → logprob: -2.6906795501708984
    4. 'print' → logprob: -2.8156795501708984
    5. ' n' → logprob: -3.5656795501708984
    6. '   ' → logprob: -3.6906795501708984
    7. ' I' → logprob: -3.6906795501708984
    8. '#' → logprob: -4.065679550170898
    9. 'pas' → logprob: -4.065679550170898
    10. ' not' → logprob: -4.565679550170898

Token 1291: ' une' (ID: 2463)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.8790267109870911
    2. '0' → logprob: -1.5040266513824463
    3. 'not' → logprob: -1.5040266513824463
    4. '   ' → logprob: -3.0040266513824463
    5. ' not' → logprob: -3.7540266513824463
    6. 'True' → logprob: -4.004026889801025
    7. 'pas' → logprob: -4.004026889801025
    8. 'pass' → logprob: -5.129026889801025
    9. ' I' → logprob: -5.379026889801025
    10. 'print' → logprob: -5.754026889801025

Token 1292: ' solution' (ID: 7578)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.5483413934707642
    2. '
' → logprob: -1.6733413934707642
    3. 'I' → logprob: -2.0483412742614746
    4. 'print' → logprob: -2.6733412742614746
    5. '#' → logprob: -3.0483412742614746
    6. 'chaine' → logprob: -3.0483412742614746
    7. 'continue' → logprob: -3.4233412742614746
    8. 'n' → logprob: -3.5483412742614746
    9. 'break' → logprob: -3.9233412742614746
    10. 'prem' → logprob: -3.9233412742614746

Token 1293: ' "' (ID: 392)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.07913553714752197
    2. '
' → logprob: -3.3291354179382324
    3. '   ' → logprob: -4.454135417938232
    4. '""' → logprob: -4.704135417938232
    5. '("")' → logprob: -5.204135417938232
    6. 'pass' → logprob: -5.579135417938232
    7. '()' → logprob: -5.954135417938232
    8. 'else' → logprob: -6.579135417938232
    9. '''' → logprob: -6.579135417938232
    10. '```' → logprob: -6.579135417938232

Token 1294: 'vide' (ID: 65239)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.759925365447998
    2. 'pass' → logprob: -1.259925365447998
    3. 'continue' → logprob: -1.634925365447998
    4. '""' → logprob: -4.259925365447998
    5. '```' → logprob: -4.384925365447998
    6. '''' → logprob: -4.509925365447998
    7. '\n' → logprob: -5.509925365447998
    8. '
' → logprob: -5.884925365447998
    9. 'else' → logprob: -6.509925365447998
    10. 'exit' → logprob: -7.134925365447998

Token 1295: '".
' (ID: 26880)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.19597074389457703
    2. '")' → logprob: -2.0709707736968994
    3. '"
' → logprob: -4.19597053527832
    4. '":' → logprob: -4.32097053527832
    5. '")
' → logprob: -5.07097053527832
    6. 'print' → logprob: -5.44597053527832
    7. '   ' → logprob: -6.32097053527832
    8. '".' → logprob: -6.44597053527832
    9. '"):
' → logprob: -6.69597053527832
    10. '```' → logprob: -6.69597053527832

Token 1296: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0001129602751461789
    2. '```' → logprob: -10.000112533569336
    3. 'pass' → logprob: -10.125112533569336
    4. ' print' → logprob: -10.875112533569336
    5. '   ' → logprob: -12.125112533569336
    6. '
' → logprob: -13.875112533569336
    7. 'prin' → logprob: -14.625112533569336
    8. 'pr' → logprob: -15.125112533569336
    9. '    
' → logprob: -15.500112533569336
    10. '``' → logprob: -15.500112533569336

Token 1297: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -3.650518920039758e-06
    2. 'pass' → logprob: -12.750003814697266
    3. '```' → logprob: -15.000003814697266
    4. ' print' → logprob: -15.250003814697266
    5. '   ' → logprob: -15.375003814697266
    6. 'prin' → logprob: -16.750003814697266
    7. 'pr' → logprob: -17.500003814697266
    8. '
' → logprob: -18.375003814697266
    9. 'exit' → logprob: -19.125003814697266
    10. '#print' → logprob: -19.500003814697266

Token 1298: '('')
' (ID: 74203)
  Prédit: '("")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("")' → logprob: -0.09711510688066483
    2. '()' → logprob: -3.0971150398254395
    3. '('' → logprob: -3.0971150398254395
    4. '""' → logprob: -6.3471150398254395
    5. '(' → logprob: -8.347115516662598
    6. '''' → logprob: -9.097115516662598
    7. '(""' → logprob: -9.472115516662598
    8. '("")
' → logprob: -11.597115516662598
    9. '("' → logprob: -14.722115516662598
    10. '('')
' → logprob: -14.722115516662598

Token 1299: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -2.2200749754119897e-06
    2. ' else' → logprob: -13.625001907348633
    3. 'elif' → logprob: -13.875001907348633
    4. '```' → logprob: -19.750001907348633
    5. 'els' → logprob: -20.125001907348633
    6. 'elses' → logprob: -20.250001907348633
    7. 'el' → logprob: -20.750001907348633
    8. 'elser' → logprob: -20.750001907348633
    9. '   ' → logprob: -20.875001907348633
    10. '}else' → logprob: -21.000001907348633

Token 1300: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1541786938905716
    2. ':' → logprob: -2.6541786193847656
    3. ':
' → logprob: -2.6541786193847656
    4. 'print' → logprob: -6.279178619384766
    5. ' print' → logprob: -8.529178619384766
    6. '       ' → logprob: -9.779178619384766
    7. ' :' → logprob: -10.654178619384766
    8. ' :
' → logprob: -11.654178619384766
    9. '(print' → logprob: -13.779178619384766
    10. ':
' → logprob: -14.279178619384766

Token 1301: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.015319209545850754
    2. '   ' → logprob: -4.265319347381592
    3. ' print' → logprob: -6.765319347381592
    4. '```' → logprob: -13.390318870544434
    5. '	print' → logprob: -15.515318870544434
    6. '       ' → logprob: -16.26531982421875
    7. '   ' → logprob: -16.89031982421875
    8. '  ' → logprob: -17.39031982421875
    9. ' ' → logprob: -17.64031982421875
    10. '           ' → logprob: -18.51531982421875

Token 1302: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -8.895480277715251e-06
    2. '   ' → logprob: -11.750008583068848
    3. ' print' → logprob: -13.875008583068848
    4. '```' → logprob: -21.250009536743164
    5. 'bin' → logprob: -21.375009536743164
    6. '	print' → logprob: -21.750009536743164
    7. '  ' → logprob: -22.000009536743164
    8. 'printf' → logprob: -22.125009536743164
    9. '       ' → logprob: -23.000009536743164
    10. '
' → logprob: -23.125009536743164

Token 1303: ' bin' (ID: 6958)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -7.896309739408025e-07
    2. 'bin' → logprob: -15.125000953674316
    3. ' print' → logprob: -15.625000953674316
    4. '   ' → logprob: -16.5
    5. 'binary' → logprob: -17.25
    6. 'b' → logprob: -17.625
    7. 'result' → logprob: -18.25
    8. 'format' → logprob: -19.0
    9. '
' → logprob: -20.0
    10. 's' → logprob: -20.375

Token 1304: '(J' (ID: 25268)
  Prédit: '(I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(I' → logprob: -0.19632776081562042
    2. '(J' → logprob: -2.0713276863098145
    3. 'print' → logprob: -3.1963276863098145
    4. '(' → logprob: -4.6963276863098145
    5. '(bin' → logprob: -7.0713276863098145
    6. '(print' → logprob: -7.6963276863098145
    7. '(int' → logprob: -8.821328163146973
    8. '(len' → logprob: -8.821328163146973
    9. 'str' → logprob: -9.071328163146973
    10. '((' → logprob: -9.571328163146973

Token 1305: ')' (ID: 8)
  Prédit: ')['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')[' → logprob: -0.6309098601341248
    2. '()[' → logprob: -1.0059099197387695
    3. '())[' → logprob: -2.7559099197387695
    4. '(J' → logprob: -4.8809099197387695
    5. '(I' → logprob: -5.1309099197387695
    6. '')[' → logprob: -5.2559099197387695
    7. '[J' → logprob: -5.5059099197387695
    8. '[' → logprob: -6.0059099197387695
    9. '[I' → logprob: -6.0059099197387695
    10. '   ' → logprob: -6.6309099197387695

Token 1306: ' produit' (ID: 29429)
  Prédit: '()['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()[' → logprob: -0.012468562461435795
    2. '[' → logprob: -4.762468338012695
    3. 'print' → logprob: -6.512468338012695
    4. '()' → logprob: -7.262468338012695
    5. 'bin' → logprob: -8.137468338012695
    6. ')[' → logprob: -8.262468338012695
    7. '().' → logprob: -8.387468338012695
    8. '_bin' → logprob: -8.887468338012695
    9. '[I' → logprob: -8.887468338012695
    10. '[J' → logprob: -9.137468338012695

Token 1307: ' une' (ID: 2463)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bin' → logprob: -0.13387642800807953
    2. '(bin' → logprob: -2.133876323699951
    3. ' bin' → logprob: -5.008876323699951
    4. '   ' → logprob: -9.00887680053711
    5. 'format' → logprob: -10.13387680053711
    6. ''' → logprob: -10.75887680053711
    7. 'f' → logprob: -11.38387680053711
    8. '/bin' → logprob: -11.50887680053711
    9. '('' → logprob: -11.75887680053711
    10. '0' → logprob: -12.13387680053711

Token 1308: ' chaîne' (ID: 89288)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bin' → logprob: -0.1668274998664856
    2. 'b' → logprob: -1.9168274402618408
    3. ' bin' → logprob: -6.04182767868042
    4. 'format' → logprob: -7.04182767868042
    5. '(bin' → logprob: -7.16682767868042
    6. 'print' → logprob: -7.41682767868042
    7. '[' → logprob: -7.79182767868042
    8. 'binary' → logprob: -7.79182767868042
    9. 'string' → logprob: -7.91682767868042
    10. '0' → logprob: -8.041827201843262

Token 1309: ' du' (ID: 1462)
  Prédit: '(bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(bin' → logprob: -0.3138042986392975
    2. '()[' → logprob: -1.688804268836975
    3. '(J' → logprob: -2.6888043880462646
    4. '[' → logprob: -5.5638041496276855
    5. '('' → logprob: -5.8138041496276855
    6. '()' → logprob: -5.9388041496276855
    7. '(' → logprob: -6.3138041496276855
    8. '((' → logprob: -6.9388041496276855
    9. 'bin' → logprob: -7.1888041496276855
    10. '[J' → logprob: -7.4388041496276855

Token 1310: ' genre' (ID: 20910)
  Prédit: ''b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''b' → logprob: -0.8327571153640747
    2. 'bin' → logprob: -1.5827571153640747
    3. ''' → logprob: -1.7077571153640747
    4. 'b' → logprob: -2.582756996154785
    5. 'format' → logprob: -2.582756996154785
    6. 'type' → logprob: -4.207756996154785
    7. 'code' → logprob: -4.957756996154785
    8. '0' → logprob: -7.082756996154785
    9. 'J' → logprob: -7.082756996154785
    10. 'form' → logprob: -7.457756996154785

Token 1311: ' '' (ID: 461)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bin' → logprob: -0.024883486330509186
    2. ''' → logprob: -3.774883508682251
    3. ' bin' → logprob: -7.024883270263672
    4. '0' → logprob: -7.899883270263672
    5. ''b' → logprob: -8.649883270263672
    6. 'b' → logprob: -9.399883270263672
    7. '(bin' → logprob: -9.399883270263672
    8. '   ' → logprob: -11.024883270263672
    9. 'format' → logprob: -11.649883270263672
    10. '('' → logprob: -12.524883270263672

Token 1312: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10247896611690521
    2. 'bin' → logprob: -2.3524789810180664
    3. ''' → logprob: -6.102478981018066
    4. ' bin' → logprob: -10.852478981018066
    5. 'b' → logprob: -11.602478981018066
    6. ''b' → logprob: -12.852478981018066
    7. '/bin' → logprob: -14.477478981018066
    8. '(bin' → logprob: -15.102478981018066
    9. '`' → logprob: -15.852478981018066
    10. '   ' → logprob: -15.977478981018066

Token 1313: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -4.320199877838604e-07
    2. ''b' → logprob: -14.75
    3. 'bin' → logprob: -18.75
    4. '	b' → logprob: -19.125
    5. '
' → logprob: -19.625
    6. ':b' → logprob: -19.875
    7. '```' → logprob: -20.125
    8. ' b' → logprob: -20.75
    9. '[b' → logprob: -21.125
    10. ''' → logprob: -21.375

Token 1314: '101' (ID: 7959)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.741367757320404
    2. 'bin' → logprob: -0.866367757320404
    3. ' bin' → logprob: -3.241367816925049
    4. ''' → logprob: -3.741367816925049
    5. '(bin' → logprob: -4.241367816925049
    6. '{' → logprob: -4.866367816925049
    7. '')' → logprob: -5.116367816925049
    8. '1' → logprob: -5.866367816925049
    9. ''''' → logprob: -6.491367816925049
    10. '''' → logprob: -6.616367816925049

Token 1315: '';' (ID: 15290)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.9184958934783936
    2. 'in' → logprob: -1.2934958934783936
    3. '1' → logprob: -2.6684958934783936
    4. '')' → logprob: -3.0434958934783936
    5. '[' → logprob: -3.7934958934783936
    6. '...' → logprob: -3.7934958934783936
    7. '''' → logprob: -3.9184958934783936
    8. ')' → logprob: -4.168496131896973
    9. 'bin' → logprob: -4.168496131896973
    10. 'b' → logprob: -4.418496131896973

Token 1316: ' on' (ID: 402)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.21720175445079803
    2. 'bin' → logprob: -2.4672017097473145
    3. '   ' → logprob: -2.9672017097473145
    4. 'b' → logprob: -3.5922017097473145
    5. 'result' → logprob: -4.8422017097473145
    6. 'res' → logprob: -4.9672017097473145
    7. 's' → logprob: -5.7172017097473145
    8. 'rep' → logprob: -5.7172017097473145
    9. ' print' → logprob: -5.9672017097473145
    10. 'binary' → logprob: -6.0922017097473145

Token 1317: ' prend' (ID: 37463)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.14919042587280273
    2. 'bin' → logprob: -2.0241904258728027
    3. 'code' → logprob: -5.524190425872803
    4. 'format' → logprob: -7.899190425872803
    5. '
' → logprob: -8.024190902709961
    6. 'bit' → logprob: -8.024190902709961
    7. '_bin' → logprob: -8.149190902709961
    8. ' bin' → logprob: -8.774190902709961
    9. 'b' → logprob: -9.149190902709961
    10. 'z' → logprob: -9.149190902709961

Token 1318: ' tout' (ID: 5501)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bin' → logprob: -0.16733506321907043
    2. '[' → logprob: -1.917335033416748
    3. ' bin' → logprob: -5.792335033416748
    4. '```' → logprob: -6.167335033416748
    5. '(bin' → logprob: -7.042335033416748
    6. '()[' → logprob: -7.417335033416748
    7. 'b' → logprob: -9.292335510253906
    8. ')[' → logprob: -9.417335510253906
    9. '
' → logprob: -9.417335510253906
    10. 'print' → logprob: -10.417335510253906

Token 1319: ' après' (ID: 16460)
  Prédit: '()['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()[' → logprob: -0.029854850843548775
    2. '[' → logprob: -3.5298547744750977
    3. '()' → logprob: -10.029854774475098
    4. 'bin' → logprob: -11.029854774475098
    5. '(' → logprob: -11.154854774475098
    6. '```' → logprob: -11.154854774475098
    7. '   ' → logprob: -11.904854774475098
    8. 'print' → logprob: -12.654854774475098
    9. '(bin' → logprob: -13.904854774475098
    10. '()
' → logprob: -14.529854774475098

Token 1320: ' le' (ID: 505)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0103793144226074
    2. '2' → logprob: -1.5103793144226074
    3. 'bin' → logprob: -1.7603793144226074
    4. ''' → logprob: -2.0103793144226074
    5. 'b' → logprob: -3.5103793144226074
    6. '('' → logprob: -3.6353793144226074
    7. ''b' → logprob: -3.8853793144226074
    8. '(' → logprob: -4.260379314422607
    9. 'the' → logprob: -4.885379314422607
    10. '   ' → logprob: -5.885379314422607

Token 1321: ' '' (ID: 461)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.10460885614156723
    2. 'b' → logprob: -3.2296087741851807
    3. ''' → logprob: -3.4796087741851807
    4. ''b' → logprob: -3.6046087741851807
    5. '[' → logprob: -6.97960901260376
    6. 'bin' → logprob: -8.229608535766602
    7. '`' → logprob: -8.854608535766602
    8. '"' → logprob: -8.979608535766602
    9. '```' → logprob: -9.104608535766602
    10. 'print' → logprob: -9.604608535766602

Token 1322: '0' (ID: 15)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.023287054151296616
    2. '2' → logprob: -3.773287057876587
    3. '0' → logprob: -10.648286819458008
    4. ''b' → logprob: -11.273286819458008
    5. ''' → logprob: -12.648286819458008
    6. 'bin' → logprob: -14.398286819458008
    7. 'x' → logprob: -14.773286819458008
    8. '#' → logprob: -15.523286819458008
    9. '')' → logprob: -15.523286819458008
    10. '[b' → logprob: -16.023286819458008

Token 1323: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -6.704273118884885e-07
    2. ':b' → logprob: -15.625000953674316
    3. '2' → logprob: -15.750000953674316
    4. ''b' → logprob: -16.375
    5. '
' → logprob: -16.5
    6. '   ' → logprob: -16.625
    7. '[b' → logprob: -17.25
    8. 'bin' → logprob: -17.25
    9. '```' → logprob: -17.75
    10. '	b' → logprob: -17.875

Token 1324: '',' (ID: 787)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0013680962147191167
    2. ')[' → logprob: -7.251368045806885
    3. ''[' → logprob: -8.001368522644043
    4. '')[' → logprob: -9.126368522644043
    5. '1' → logprob: -9.626368522644043
    6. ',' → logprob: -9.751368522644043
    7. ''' → logprob: -10.751368522644043
    8. '][' → logprob: -11.001368522644043
    9. 'print' → logprob: -11.751368522644043
    10. '2' → logprob: -12.126368522644043

Token 1325: ' et' (ID: 859)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bin' → logprob: -0.5620487928390503
    2. 'print' → logprob: -1.6870487928390503
    3. '[' → logprob: -2.06204891204834
    4. '   ' → logprob: -2.68704891204834
    5. ')[' → logprob: -3.81204891204834
    6. 'z' → logprob: -3.93704891204834
    7. '()[' → logprob: -6.68704891204834
    8. '       ' → logprob: -6.81204891204834
    9. 'format' → logprob: -6.93704891204834
    10. '```' → logprob: -6.93704891204834

Token 1326: ' on' (ID: 402)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.3058721423149109
    2. 'print' → logprob: -1.4308722019195557
    3. '.z' → logprob: -4.055871963500977
    4. '   ' → logprob: -5.305871963500977
    5. 'bin' → logprob: -6.555871963500977
    6. ' z' → logprob: -8.305871963500977
    7. '.' → logprob: -8.805871963500977
    8. 'b' → logprob: -9.930871963500977
    9. '       ' → logprob: -10.055871963500977
    10. ':' → logprob: -10.055871963500977

Token 1327: ' complète' (ID: 75660)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.20302154123783112
    2. 'z' → logprob: -1.70302152633667
    3. '.z' → logprob: -6.70302152633667
    4. 'r' → logprob: -7.95302152633667
    5. 'fill' → logprob: -11.453022003173828
    6. ' print' → logprob: -12.453022003173828
    7. ' z' → logprob: -12.703022003173828
    8. 'format' → logprob: -13.078022003173828
    9. '   ' → logprob: -13.703022003173828
    10. '```' → logprob: -13.953022003173828

Token 1328: ' à' (ID: 1221)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.8504977822303772
    2. '(' → logprob: -1.3504977226257324
    3. '.z' → logprob: -1.9754977226257324
    4. 'with' → logprob: -3.2254977226257324
    5. 'z' → logprob: -3.2254977226257324
    6. '   ' → logprob: -4.350497722625732
    7. '('').' → logprob: -4.350497722625732
    8. '().' → logprob: -4.725497722625732
    9. '.' → logprob: -4.850497722625732
    10. '(('' → logprob: -5.100497722625732

Token 1329: ' gauche' (ID: 58367)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.04977093264460564
    2. ''I' → logprob: -3.0497708320617676
    3. ' I' → logprob: -7.424770832061768
    4. ''' → logprob: -8.799771308898926
    5. 'i' → logprob: -9.299771308898926
    6. '(I' → logprob: -9.424771308898926
    7. '.I' → logprob: -10.424771308898926
    8. '_I' → logprob: -10.424771308898926
    9. 'l' → logprob: -10.549771308898926
    10. '
' → logprob: -10.674771308898926

Token 1330: ' avec' (ID: 3937)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.053347889333963394
    2. '().' → logprob: -3.4283478260040283
    3. '   ' → logprob: -4.803348064422607
    4. '.z' → logprob: -5.678348064422607
    5. '.fill' → logprob: -6.678348064422607
    6. '(' → logprob: -6.803348064422607
    7. '       ' → logprob: -7.053348064422607
    8. '.' → logprob: -7.303348064422607
    9. 'with' → logprob: -7.428348064422607
    10. 'fill' → logprob: -7.553348064422607

Token 1331: ' des' (ID: 731)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.003061015158891678
    2. '0' → logprob: -6.753060817718506
    3. ''z' → logprob: -6.753060817718506
    4. 'zeros' → logprob: -8.003061294555664
    5. 'str' → logprob: -8.628061294555664
    6. ' zeros' → logprob: -9.253061294555664
    7. ''f' → logprob: -10.753061294555664
    8. '`' → logprob: -11.128061294555664
    9. '"' → logprob: -11.378061294555664
    10. ' '' → logprob: -11.378061294555664

Token 1332: ' z' (ID: 579)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04500803351402283
    2. ''' → logprob: -3.1700079441070557
    3. 'zeros' → logprob: -6.545008182525635
    4. 'z' → logprob: -7.795008182525635
    5. ''z' → logprob: -8.920007705688477
    6. ' zeros' → logprob: -11.420007705688477
    7. 'zero' → logprob: -12.795007705688477
    8. 'car' → logprob: -13.045007705688477
    9. '000' → logprob: -13.795007705688477
    10. 'str' → logprob: -13.920007705688477

Token 1333: 'éros' (ID: 120888)
  Prédit: 'eros'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eros' → logprob: -0.492030531167984
    2. 'éros' → logprob: -0.9920305013656616
    3. ''' → logprob: -4.492030620574951
    4. 'éro' → logprob: -5.742030620574951
    5. 'fill' → logprob: -6.617030620574951
    6. 'ero' → logprob: -6.742030620574951
    7. 'zeros' → logprob: -8.242030143737793
    8. '0' → logprob: -8.367030143737793
    9. ''z' → logprob: -9.617030143737793
    10. '"' → logprob: -10.617030143737793

Token 1334: ' pour' (ID: 1930)
  Prédit: '(I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(I' → logprob: -1.0149552822113037
    2. '().' → logprob: -1.6399552822113037
    3. '.z' → logprob: -2.0149552822113037
    4. '(bin' → logprob: -2.2649552822113037
    5. '(' → logprob: -2.8899552822113037
    6. '(J' → logprob: -3.0149552822113037
    7. '('' → logprob: -3.7649552822113037
    8. '(fill' → logprob: -4.389955520629883
    9. 'bin' → logprob: -4.764955520629883
    10. ').' → logprob: -4.889955520629883

Token 1335: ' obtenir' (ID: 54423)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'I' → logprob: -1.0494381189346313
    2. 'print' → logprob: -1.5494381189346313
    3. 'i' → logprob: -1.6744381189346313
    4. '```' → logprob: -2.924437999725342
    5. 'fill' → logprob: -3.049437999725342
    6. ''I' → logprob: -4.299437999725342
    7. 'form' → logprob: -4.549437999725342
    8. 'length' → logprob: -4.549437999725342
    9. 'width' → logprob: -4.549437999725342
    10. '0' → logprob: -4.674437999725342

Token 1336: ' I' (ID: 357)
  Prédit: ''I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''I' → logprob: -0.8225114941596985
    2. ''' → logprob: -2.0725114345550537
    3. 'bin' → logprob: -2.3225114345550537
    4. '0' → logprob: -2.3225114345550537
    5. 'f' → logprob: -2.8225114345550537
    6. '   ' → logprob: -3.0725114345550537
    7. 'str' → logprob: -3.1975114345550537
    8. '{' → logprob: -4.072511672973633
    9. 'I' → logprob: -4.072511672973633
    10. 'b' → logprob: -4.572511672973633

Token 1337: ' caractères' (ID: 183106)
  Prédit: ').'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ').' → logprob: -0.6393172144889832
    2. 'bin' → logprob: -2.264317274093628
    3. '.z' → logprob: -2.639317274093628
    4. 'b' → logprob: -3.264317274093628
    5. '```' → logprob: -3.639317274093628
    6. ')' → logprob: -3.764317274093628
    7. '
' → logprob: -3.764317274093628
    8. 'str' → logprob: -3.889317274093628
    9. '.bin' → logprob: -3.889317274093628
    10. ' .' → logprob: -4.014317035675049

Token 1338: '.
' (ID: 558)
  Prédit: ').'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ').' → logprob: -0.8439788818359375
    2. '.z' → logprob: -0.9689788818359375
    3. '().' → logprob: -1.8439788818359375
    4. '.' → logprob: -4.3439788818359375
    5. ',' → logprob: -5.3439788818359375
    6. ')' → logprob: -5.9689788818359375
    7. 'print' → logprob: -5.9689788818359375
    8. 'z' → logprob: -6.0939788818359375
    9. '[' → logprob: -6.2189788818359375
    10. ' .' → logprob: -6.8439788818359375

Token 1339: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.02344474010169506
    2. '   ' → logprob: -3.773444652557373
    3. ' print' → logprob: -8.648445129394531
    4. '       ' → logprob: -10.773445129394531
    5. ',' → logprob: -14.273445129394531
    6. '    ' → logprob: -14.523445129394531
    7. '  ' → logprob: -14.773445129394531
    8. '           ' → logprob: -15.023445129394531
    9. '	print' → logprob: -15.148445129394531
    10. '{' → logprob: -16.14844512939453

Token 1340: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -2.2246291337069124e-05
    2. '   ' → logprob: -10.750021934509277
    3. ' print' → logprob: -14.125021934509277
    4. '  ' → logprob: -20.750022888183594
    5. '       ' → logprob: -20.875022888183594
    6. '	print' → logprob: -21.250022888183594
    7. 'printf' → logprob: -22.625022888183594
    8. ' ' → logprob: -22.750022888183594
    9. '```' → logprob: -23.000022888183594
    10. '    
' → logprob: -23.375022888183594

Token 1341: '(bin' (ID: 117327)
  Prédit: '(bin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(bin' → logprob: -0.01482838112860918
    2. 'bin' → logprob: -4.514828205108643
    3. '(format' → logprob: -5.764828205108643
    4. '(f' → logprob: -7.514828205108643
    5. 'format' → logprob: -9.5148286819458
    6. ' bin' → logprob: -11.2648286819458
    7. '('{' → logprob: -13.0148286819458
    8. '(' → logprob: -13.7648286819458
    9. '(str' → logprob: -14.0148286819458
    10. '('' → logprob: -14.3898286819458

Token 1342: '(J' (ID: 25268)
  Prédit: '(J'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(J' → logprob: -6.480199954239652e-05
    2. '[J' → logprob: -10.000064849853516
    3. 'J' → logprob: -10.875064849853516
    4. '(' → logprob: -15.750064849853516
    5. '(j' → logprob: -15.750064849853516
    6. '(
' → logprob: -17.375064849853516
    7. '(I' → logprob: -17.375064849853516
    8. '	J' → logprob: -17.750064849853516
    9. ' (' → logprob: -18.125064849853516
    10. ')' → logprob: -18.250064849853516

Token 1343: ')[' (ID: 13637)
  Prédit: ')['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')[' → logprob: -6.034592388459714e-06
    2. '[I' → logprob: -12.625005722045898
    3. '())[' → logprob: -13.750005722045898
    4. ').' → logprob: -13.875005722045898
    5. ' )[' → logprob: -15.375005722045898
    6. ')' → logprob: -15.500005722045898
    7. '[' → logprob: -16.2500057220459
    8. '   ' → logprob: -16.3750057220459
    9. '[i' → logprob: -17.2500057220459
    10. '(I' → logprob: -17.3750057220459

Token 1344: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.200166469876422e-06
    2. '
' → logprob: -12.375004768371582
    3. ':' → logprob: -15.250004768371582
    4. ' ' → logprob: -15.250004768371582
    5. '3' → logprob: -15.500004768371582
    6. '

' → logprob: -16.3750057220459
    7. '   ' → logprob: -16.7500057220459
    8. '
' → logprob: -17.2500057220459
    9. '﻿' → logprob: -17.7500057220459
    10. '```' → logprob: -17.7500057220459

Token 1345: ':].' (ID: 193388)
  Prédit: ':].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':].' → logprob: -3.650518920039758e-06
    2. ':' → logprob: -13.625003814697266
    3. ').' → logprob: -13.875003814697266
    4. '].' → logprob: -13.875003814697266
    5. '.' → logprob: -15.625003814697266
    6. ':]' → logprob: -15.750003814697266
    7. ':I' → logprob: -17.000003814697266
    8. ':],' → logprob: -17.875003814697266
    9. '
' → logprob: -18.000003814697266
    10. '   ' → logprob: -18.125003814697266

Token 1346: 'z' (ID: 89)
  Prédit: 'z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.2519354820251465
    2. 'r' → logprob: -1.5019354820251465
    3. '.z' → logprob: -12.001935958862305
    4. ' z' → logprob: -15.376935958862305
    5. ' r' → logprob: -17.751935958862305
    6. '```' → logprob: -17.751935958862305
    7. '.r' → logprob: -18.001935958862305
    8. 'rstrip' → logprob: -19.001935958862305
    9. '
' → logprob: -19.251935958862305
    10. ''z' → logprob: -19.751935958862305

Token 1347: 'fill' (ID: 12413)
  Prédit: 'fill'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fill' → logprob: -3.128163257315464e-07
    2. 'filled' → logprob: -16.25
    3. '```' → logprob: -16.5
    4. '_fill' → logprob: -17.375
    5. 'pad' → logprob: -17.5
    6. 'f' → logprob: -18.0
    7. '.fill' → logprob: -18.375
    8. 'fills' → logprob: -18.5
    9. '(fill' → logprob: -18.5
    10. '
' → logprob: -19.25

Token 1348: '(I' (ID: 16705)
  Prédit: '(I'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(I' → logprob: -0.011048054322600365
    2. 'I' → logprob: -4.511047840118408
    3. '(' → logprob: -16.26104736328125
    4. '(i' → logprob: -16.38604736328125
    5. ' I' → logprob: -17.38604736328125
    6. ')' → logprob: -17.51104736328125
    7. '[I' → logprob: -18.01104736328125
    8. '   ' → logprob: -18.76104736328125
    9. '	I' → logprob: -19.01104736328125
    10. '```' → logprob: -19.38604736328125

Token 1349: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.004081009421497583
    2. ')' → logprob: -5.504080772399902
    3. ')))' → logprob: -13.379080772399902
    4. ' ))' → logprob: -14.754080772399902
    5. '))
' → logprob: -14.879080772399902
    6. '()))' → logprob: -16.00408172607422
    7. ').' → logprob: -16.87908172607422
    8. '),' → logprob: -17.12908172607422
    9. '   ' → logprob: -17.12908172607422
    10. ''))' → logprob: -17.25408172607422


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1347
Tokens correctement prédits (1ère position, stricte): 276
Tokens correctement prédits (1ère position, avec adaptation): 294
Tokens correctement prédits (top 10): 714
Précision stricte (1ère position): 20.49%
Précision adaptée (1ère position): 21.83%
Précision (top 10): 53.01%
================================================================================
