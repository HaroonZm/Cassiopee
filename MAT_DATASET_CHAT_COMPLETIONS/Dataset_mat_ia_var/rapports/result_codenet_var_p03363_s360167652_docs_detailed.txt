================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:19:58
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import bisect
import math
import itertools
import string
import queue
import copy
import numpy as np
import scipy
from collections import Counter, defaultdict, deque
from itertools import permutations, combinations
from heapq import heappop, heappush

# Augmenter la limite de récursion à un grand nombre pour éviter les erreurs de récursion dans des cas extrêmes
sys.setrecursionlimit(10**8)
# Définir le mod pour les opérations de modulos fréquentes
mod = 10**9 + 7

def inp():
    """
    Lit une valeur entière à partir de l'entrée standard.

    Returns:
        int: La valeur entière lue.
    """
    return int(input())

def inpm():
    """
    Lit une ligne d'entiers séparés par un espace à partir de l'entrée standard.

    Returns:
        tuple: Un tuple contenant les entiers lus.
    """
    return map(int, input().split())

def inpl():
    """
    Lit une ligne d'entiers séparés par un espace et les retourne sous forme de liste.

    Returns:
        list: La liste des entiers lus.
    """
    return list(map(int, input().split()))

def inpls():
    """
    Lit une ligne d'entrées séparées par un espace et les retourne sous forme de liste de chaînes.

    Returns:
        list: La liste des chaînes lues.
    """
    return list(input().split())

def inplm(n):
    """
    Lit n entiers, chaque entier provient d'une ligne séparée.

    Args:
        n (int): Le nombre de lignes à lire.

    Returns:
        list: La liste des entiers lus.
    """
    return [int(input()) for _ in range(n)]

def inplL(n):
    """
    Lit n lignes, chaque ligne étant interprétée comme une liste de caractères (chaîne).

    Args:
        n (int): Le nombre de lignes à lire.

    Returns:
        list: Une liste de listes de caractères.
    """
    return [list(input()) for _ in range(n)]

def inplT(n):
    """
    Lit n lignes, chaque ligne étant convertie en tuple de caractères (chaîne).

    Args:
        n (int): Le nombre de lignes à lire.

    Returns:
        list: Une liste de tuples de caractères.
    """
    return [tuple(input()) for _ in range(n)]

def inpll(n):
    """
    Lit n lignes, chaque ligne contenant des entiers séparés par des espaces,
    et retourne une liste de listes.

    Args:
        n (int): Le nombre de lignes à lire.

    Returns:
        list: Une liste de listes d'entiers.
    """
    return [list(map(int, input().split())) for _ in range(n)]

def inplt(n):
    """
    Lit n lignes, chaque ligne contenant des entiers séparés par des espaces,
    et retourne une liste de tuples.

    Args:
        n (int): Le nombre de lignes à lire.

    Returns:
        list: Une liste de tuples d'entiers.
    """
    return [tuple(map(int, input().split())) for _ in range(n)]

def inplls(n):
    """
    Lit n lignes d'entiers séparés par des espaces et retourne une liste
    triée de listes d'entiers.

    Args:
        n (int): Le nombre de lignes à lire.

    Returns:
        list: Une liste triée de listes d'entiers.
    """
    return sorted([list(map(int, input().split())) for _ in range(n)])


# Lecture de la taille du tableau
n = inp()
# Lecture de la liste des entiers
A = inpl()

# Construction de la somme partielle (table de préfixes)
ruiseki = [0]
for i in range(n):
    # Ajoute la somme cumulée jusqu'à A[i]
    ruiseki.append(ruiseki[i] + A[i])

# On compte la fréquence de chaque valeur de la somme partielle
C = Counter(ruiseki)

# Initialiser la réponse à 0
ans = 0

# Pour chaque valeur de fréquence trouvée dans les préfixes
for c in C.values():
    # S'il n'y a qu'une seule occurrence, il n'y a pas de combinaison possible
    if c == 1:
        continue
    # Pour chaque groupe d'occurrences identiques, le nombre de paires est c * (c - 1) // 2
    ans += c * (c - 1) // 2

# Affiche la réponse finale : le nombre de sous-tableaux dont la somme est nulle
print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.29731935262680054
    2. '\n' → logprob: -1.5473194122314453
    3. '<|end|>' → logprob: -3.7973194122314453
    4. '\' → logprob: -4.922319412231445
    5. 'newline' → logprob: -5.672319412231445
    6. 'import' → logprob: -5.672319412231445
    7. '<|end|>' → logprob: -6.047319412231445
    8. '
' → logprob: -6.922319412231445
    9. '```' → logprob: -6.922319412231445
    10. '' → logprob: -7.672319412231445

Token 4: ' bis' (ID: 7204)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.0001818489981815219
    2. 'os' → logprob: -8.625182151794434
    3. ' math' → logprob: -13.875182151794434
    4. '"os' → logprob: -15.000182151794434
    5. ' re' → logprob: -15.500182151794434
    6. ' ' → logprob: -15.500182151794434
    7. ' json' → logprob: -15.875182151794434
    8. ' o' → logprob: -16.125181198120117
    9. '	os' → logprob: -16.500181198120117
    10. '_os' → logprob: -16.875181198120117

Token 5: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -1.664371848164592e-05
    2. 't' → logprob: -11.750016212463379
    3. 'ected' → logprob: -12.125016212463379
    4. 'e' → logprob: -13.875016212463379
    5. 'ection' → logprob: -13.875016212463379
    6. 'ec' → logprob: -14.000016212463379
    7. 'ector' → logprob: -15.500016212463379
    8. 'ectl' → logprob: -15.750016212463379
    9. 'ects' → logprob: -16.625017166137695
    10. 'ective' → logprob: -16.750017166137695

Token 6: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.558323323726654
    2. '<|end|>' → logprob: -2.058323383331299
    3. '
' → logprob: -2.308323383331299
    4. '

' → logprob: -2.433323383331299
    5. '\n' → logprob: -3.558323383331299
    6. '' → logprob: -3.808323383331299
    7. '\' → logprob: -4.683323383331299
    8. ' ' → logprob: -4.683323383331299
    9. 'import' → logprob: -4.808323383331299
    10. 'newline' → logprob: -4.933323383331299

Token 7: 'import' (ID: 561)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.290268898010254
    2. '

' → logprob: -1.415268898010254
    3. '.' → logprob: -1.540268898010254
    4. '' → logprob: -3.290268898010254
    5. '


' → logprob: -3.415268898010254
    6. 'import' → logprob: -3.415268898010254
    7. '\n' → logprob: -3.415268898010254
    8. '<|end|>' → logprob: -3.915268898010254
    9. '```' → logprob: -4.290268898010254
    10. '
' → logprob: -4.290268898010254

Token 8: ' math' (ID: 13324)
  Prédit: ' math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.4218725562095642
    2. ' heap' → logprob: -1.796872615814209
    3. 'math' → logprob: -3.046872615814209
    4. ' collections' → logprob: -3.171872615814209
    5. ' itertools' → logprob: -3.296872615814209
    6. 'heap' → logprob: -3.421872615814209
    7. 'collections' → logprob: -4.046872615814209
    8. ' threading' → logprob: -6.796872615814209
    9. ' os' → logprob: -7.796872615814209
    10. 'os' → logprob: -9.54687213897705

Token 9: '
' (ID: 198)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.5114505887031555
    2. '```' → logprob: -2.3864505290985107
    3. '.' → logprob: -2.5114505290985107
    4. '
' → logprob: -2.8864505290985107
    5. '\' → logprob: -3.1364505290985107
    6. 'import' → logprob: -3.6364505290985107
    7. 'def' → logprob: -3.6364505290985107
    8. '\n' → logprob: -3.7614505290985107
    9. '<|end|>' → logprob: -4.88645076751709
    10. '' → logprob: -4.88645076751709

Token 10: 'import' (ID: 561)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.4912196099758148
    2. 'def' → logprob: -1.6162196397781372
    3. '
' → logprob: -2.7412195205688477
    4. '```' → logprob: -3.3662195205688477
    5. 'import' → logprob: -3.9912195205688477
    6. '.' → logprob: -3.9912195205688477
    7. '\' → logprob: -4.116219520568848
    8. '\n' → logprob: -4.991219520568848
    9. '


' → logprob: -5.241219520568848
    10. '.

' → logprob: -5.491219520568848

Token 11: ' itertools' (ID: 103178)
  Prédit: ' heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' heap' → logprob: -0.5025157928466797
    2. ' collections' → logprob: -1.8775157928466797
    3. ' itertools' → logprob: -2.1275157928466797
    4. 'collections' → logprob: -3.0025157928466797
    5. 'heap' → logprob: -3.2525157928466797
    6. ' random' → logprob: -4.25251579284668
    7. 'random' → logprob: -4.50251579284668
    8. ' os' → logprob: -5.12751579284668
    9. ' threading' → logprob: -6.87751579284668
    10. 'os' → logprob: -7.37751579284668

Token 12: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.4155715703964233
    2. 'import' → logprob: -1.6655715703964233
    3. '\n' → logprob: -2.040571689605713
    4. '

' → logprob: -2.040571689605713
    5. '\' → logprob: -2.165571689605713
    6. '```' → logprob: -2.415571689605713
    7. '.' → logprob: -2.915571689605713
    8. 'def' → logprob: -4.540571689605713
    9. '' → logprob: -4.790571689605713
    10. ',' → logprob: -5.165571689605713

Token 13: 'import' (ID: 561)
  Prédit: 'import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.8745580911636353
    2. '
' → logprob: -1.7495580911636353
    3. '```' → logprob: -1.9995580911636353
    4. '

' → logprob: -2.1245579719543457
    5. 'def' → logprob: -2.3745579719543457
    6. 'from' → logprob: -3.8745579719543457
    7. '\n' → logprob: -4.499557971954346
    8. '' → logprob: -5.374557971954346
    9. '\' → logprob: -5.749557971954346
    10. '
' → logprob: -5.874557971954346

Token 14: ' string' (ID: 1621)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.04885350167751312
    2. 'operator' → logprob: -3.9238533973693848
    3. ' collections' → logprob: -4.173853397369385
    4. 'heap' → logprob: -5.173853397369385
    5. 'os' → logprob: -5.798853397369385
    6. 'fun' → logprob: -6.423853397369385
    7. 'random' → logprob: -7.173853397369385
    8. ' operator' → logprob: -7.423853397369385
    9. ' functools' → logprob: -7.923853397369385
    10. 'fra' → logprob: -8.298853874206543

Token 15: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9381005764007568
    2. 'import' → logprob: -1.5631005764007568
    3. '

' → logprob: -1.5631005764007568
    4. '\n' → logprob: -2.438100576400757
    5. '<|end|>' → logprob: -2.688100576400757
    6. '```' → logprob: -4.688100814819336
    7. ',' → logprob: -5.063100814819336
    8. '' → logprob: -5.563100814819336
    9. '\' → logprob: -5.813100814819336
    10. '#' → logprob: -6.188100814819336

Token 16: 'import' (ID: 561)
  Prédit: 'import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.6483713388442993
    2. '
' → logprob: -1.5233713388442993
    3. '

' → logprob: -1.7733713388442993
    4. '\n' → logprob: -3.6483712196350098
    5. 'def' → logprob: -4.27337121963501
    6. 'from' → logprob: -4.39837121963501
    7. '#' → logprob: -4.64837121963501
    8. '```' → logprob: -4.89837121963501
    9. '' → logprob: -5.02337121963501
    10. '<|end|>' → logprob: -5.39837121963501

Token 17: ' queue' (ID: 13661)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.0624103881418705
    2. ' collections' → logprob: -3.312410354614258
    3. 'random' → logprob: -4.187410354614258
    4. 're' → logprob: -5.687410354614258
    5. ' random' → logprob: -6.062410354614258
    6. 'os' → logprob: -6.062410354614258
    7. ' re' → logprob: -8.187410354614258
    8. ' os' → logprob: -8.687410354614258
    9. ' functools' → logprob: -9.187410354614258
    10. 'operator' → logprob: -9.687410354614258

Token 18: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5035099387168884
    2. 'import' → logprob: -1.7535099983215332
    3. '

' → logprob: -2.378509998321533
    4. '<|end|>' → logprob: -2.628509998321533
    5. '\n' → logprob: -3.503509998321533
    6. '.' → logprob: -5.003509998321533
    7. '<|end|>' → logprob: -5.128509998321533
    8. '#' → logprob: -5.253509998321533
    9. '```' → logprob: -5.753509998321533
    10. ',' → logprob: -6.628509998321533

Token 19: 'import' (ID: 561)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.678310215473175
    2. 'import' → logprob: -1.0533101558685303
    3. '

' → logprob: -2.1783101558685303
    4. '<|end|>' → logprob: -4.053310394287109
    5. '\n' → logprob: -5.428310394287109
    6. '```' → logprob: -6.053310394287109
    7. '#' → logprob: -6.553310394287109
    8. '' → logprob: -6.803310394287109
    9. '
' → logprob: -6.928310394287109
    10. ',' → logprob: -7.428310394287109

Token 20: ' copy' (ID: 5150)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.2805151641368866
    2. ' collections' → logprob: -1.655515193939209
    3. 'random' → logprob: -3.530515193939209
    4. 'heap' → logprob: -4.780515193939209
    5. ' threading' → logprob: -5.155515193939209
    6. ' random' → logprob: -5.780515193939209
    7. 'thread' → logprob: -6.280515193939209
    8. 'os' → logprob: -6.405515193939209
    9. ' heap' → logprob: -6.655515193939209
    10. 'time' → logprob: -7.280515193939209

Token 21: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6027286052703857
    2. '<|end|>' → logprob: -1.3527286052703857
    3. 'import' → logprob: -1.8527286052703857
    4. '

' → logprob: -3.8527286052703857
    5. '\n' → logprob: -5.102728843688965
    6. '<|end|>' → logprob: -5.602728843688965
    7. '#' → logprob: -6.227728843688965
    8. '```' → logprob: -6.352728843688965
    9. '
' → logprob: -7.602728843688965
    10. '' → logprob: -7.852728843688965

Token 22: 'import' (ID: 561)
  Prédit: 'import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.6999669075012207
    2. '
' → logprob: -0.9499669075012207
    3. '

' → logprob: -2.6999669075012207
    4. '<|end|>' → logprob: -3.6999669075012207
    5. '\n' → logprob: -4.949966907501221
    6. '#' → logprob: -5.074966907501221
    7. '```' → logprob: -5.824966907501221
    8. 'def' → logprob: -6.949966907501221
    9. '' → logprob: -6.949966907501221
    10. 'from' → logprob: -7.074966907501221

Token 23: ' numpy' (ID: 19529)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.4823070466518402
    2. ' collections' → logprob: -1.1073070764541626
    3. 'heap' → logprob: -3.857306957244873
    4. 'random' → logprob: -3.982306957244873
    5. ' heap' → logprob: -5.107306957244873
    6. ' random' → logprob: -5.982306957244873
    7. ' threading' → logprob: -6.232306957244873
    8. ' functools' → logprob: -7.107306957244873
    9. 'thread' → logprob: -8.357307434082031
    10. 're' → logprob: -9.107307434082031

Token 24: ' as' (ID: 472)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.02661689929664135
    2. ' as' → logprob: -4.276617050170898
    3. '<|end|>' → logprob: -4.526617050170898
    4. 'as' → logprob: -7.776617050170898
    5. '.ndarray' → logprob: -8.151617050170898
    6. '.random' → logprob: -8.401617050170898
    7. '<|end|>' → logprob: -8.901617050170898
    8. '.as' → logprob: -9.026617050170898
    9. '.pyplot' → logprob: -9.651617050170898
    10. '.numpy' → logprob: -10.026617050170898

Token 25: ' np' (ID: 5374)
  Prédit: ' np'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' np' → logprob: -0.22390173375606537
    2. ' ndarray' → logprob: -1.8489017486572266
    3. ' array' → logprob: -3.4739017486572266
    4. ' ' → logprob: -4.848901748657227
    5. ' numpy' → logprob: -6.723901748657227
    6. 'array' → logprob: -6.973901748657227
    7. '.ndarray' → logprob: -7.223901748657227
    8. ' random' → logprob: -8.098901748657227
    9. ' nd' → logprob: -8.098901748657227
    10. 'rray' → logprob: -8.473901748657227

Token 26: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.36951252818107605
    2. '
' → logprob: -2.3695125579833984
    3. '<|end|>' → logprob: -2.3695125579833984
    4. '\n' → logprob: -2.8695125579833984
    5. '#' → logprob: -3.3695125579833984
    6. 'import' → logprob: -4.869512557983398
    7. '\' → logprob: -4.869512557983398
    8. '' → logprob: -6.119512557983398
    9. '```' → logprob: -6.119512557983398
    10. '

' → logprob: -6.119512557983398

Token 27: 'import' (ID: 561)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 28: ' scipy' (ID: 68933)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.972924530506134
    2. ' pandas' → logprob: -1.0979244709014893
    3. 'random' → logprob: -1.7229244709014893
    4. ' random' → logprob: -3.4729244709014893
    5. 'collections' → logprob: -3.4729244709014893
    6. ' scipy' → logprob: -3.8479244709014893
    7. ' sys' → logprob: -4.972924709320068
    8. 'sys' → logprob: -5.097924709320068
    9. ' collections' → logprob: -5.347924709320068
    10. 'sc' → logprob: -6.222924709320068

Token 29: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.004415397997945547
    2. '.optimize' → logprob: -5.754415512084961
    3. '.linalg' → logprob: -7.629415512084961
    4. '.s' → logprob: -7.754415512084961
    5. '.stats' → logprob: -9.754415512084961
    6. '<|end|>' → logprob: -10.004415512084961
    7. '.special' → logprob: -10.129415512084961
    8. '.pyplot' → logprob: -10.254415512084961
    9. '.interpolate' → logprob: -10.504415512084961
    10. ' .' → logprob: -10.879415512084961

Token 30: 'from' (ID: 2845)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.010320352390408516
    2. 'import' → logprob: -5.38532018661499
    3. '<|end|>' → logprob: -5.76032018661499
    4. '
' → logprob: -7.13532018661499
    5. 'from' → logprob: -8.260320663452148
    6. ',' → logprob: -8.635320663452148
    7. '.pyplot' → logprob: -8.760320663452148
    8. '.
' → logprob: -9.135320663452148
    9. '<|end|>' → logprob: -9.135320663452148
    10. '.import' → logprob: -9.260320663452148

Token 31: ' collections' (ID: 22690)
  Prédit: ' scipy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' scipy' → logprob: -0.31110459566116333
    2. ' sklearn' → logprob: -1.4361045360565186
    3. ' collections' → logprob: -3.8111045360565186
    4. ' stats' → logprob: -6.186104774475098
    5. 'sk' → logprob: -6.436104774475098
    6. 'collections' → logprob: -6.686104774475098
    7. 'stats' → logprob: -7.686104774475098
    8. ' numpy' → logprob: -7.936104774475098
    9. ' ' → logprob: -8.061104774475098
    10. ' math' → logprob: -8.311104774475098

Token 32: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.12288891524076462
    2. ' import' → logprob: -2.3728888034820557
    3. '.' → logprob: -5.122889041900635
    4. '<|end|>' → logprob: -5.122889041900635
    5. 'abc' → logprob: -5.247889041900635
    6. 'from' → logprob: -6.497889041900635
    7. '	import' → logprob: -7.497889041900635
    8. ' ' → logprob: -8.247888565063477
    9. '```' → logprob: -8.247888565063477
    10. 'ertools' → logprob: -8.497888565063477

Token 33: ' Counter' (ID: 32251)
  Prédit: ' defaultdict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.035542551428079605
    2. ' deque' → logprob: -3.4105424880981445
    3. ' abc' → logprob: -6.7855424880981445
    4. 'deque' → logprob: -7.7855424880981445
    5. ' collections' → logprob: -8.285542488098145
    6. ' ' → logprob: -10.410542488098145
    7. ' Counter' → logprob: -10.660542488098145
    8. 'default' → logprob: -11.035542488098145
    9. ' ' → logprob: -11.910542488098145
    10. ' default' → logprob: -12.035542488098145

Token 34: ',' (ID: 11)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.971260666847229
    2. '\n' → logprob: -1.721260666847229
    3. '<|end|>' → logprob: -1.846260666847229
    4. '
' → logprob: -1.971260666847229
    5. ',' → logprob: -2.9712605476379395
    6. '.' → logprob: -3.0962605476379395
    7. 'newline' → logprob: -4.7212605476379395
    8. 'n' → logprob: -5.0962605476379395
    9. '<|end|>' → logprob: -5.2212605476379395
    10. '\' → logprob: -5.4712605476379395

Token 35: ' defaultdict' (ID: 107098)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.4140107333660126
    2. ' defaultdict' → logprob: -1.164010763168335
    3. 'deque' → logprob: -3.664010763168335
    4. ' deque' → logprob: -6.789010524749756
    5. 'Ordered' → logprob: -11.789011001586914
    6. ' default' → logprob: -12.039011001586914
    7. 'named' → logprob: -12.914011001586914
    8. ' Ordered' → logprob: -14.039011001586914
    9. 'de' → logprob: -14.289011001586914
    10. '"default' → logprob: -14.914011001586914

Token 36: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.445936381816864
    2. '<|end|>' → logprob: -1.9459364414215088
    3. ',' → logprob: -2.570936441421509
    4. 'import' → logprob: -2.695936441421509
    5. '

' → logprob: -3.445936441421509
    6. '\n' → logprob: -3.820936441421509
    7. '' → logprob: -5.82093620300293
    8. '.' → logprob: -6.07093620300293
    9. '<|end|>' → logprob: -6.19593620300293
    10. '#' → logprob: -6.32093620300293

Token 37: ' deque' (ID: 90347)
  Prédit: ' deque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deque' → logprob: -0.576056957244873
    2. 'deque' → logprob: -0.826056957244873
    3. ' Ordered' → logprob: -10.076057434082031
    4. 'Ordered' → logprob: -10.576057434082031
    5. ' named' → logprob: -10.951057434082031
    6. 'named' → logprob: -11.076057434082031
    7. 'heap' → logprob: -12.076057434082031
    8. 'de' → logprob: -12.326057434082031
    9. 'Deque' → logprob: -12.326057434082031
    10. ' heap' → logprob: -13.576057434082031

Token 38: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5350560545921326
    2. 'import' → logprob: -1.7850561141967773
    3. ',' → logprob: -2.1600561141967773
    4. '<|end|>' → logprob: -2.6600561141967773
    5. '

' → logprob: -3.5350561141967773
    6. '\n' → logprob: -4.160056114196777
    7. ',
' → logprob: -5.660056114196777
    8. '' → logprob: -5.910056114196777
    9. '<|end|>' → logprob: -6.160056114196777
    10. '```' → logprob: -6.285056114196777

Token 39: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6586385369300842
    2. '<|end|>' → logprob: -1.4086384773254395
    3. 'import' → logprob: -2.0336384773254395
    4. '

' → logprob: -2.7836384773254395
    5. '\n' → logprob: -4.4086384773254395
    6. '#' → logprob: -4.6586384773254395
    7. ',' → logprob: -4.6586384773254395
    8. '```' → logprob: -5.7836384773254395
    9. '' → logprob: -5.9086384773254395
    10. '<|end|>' → logprob: -6.2836384773254395

Token 40: ' itertools' (ID: 103178)
  Prédit: ' typing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' typing' → logprob: -0.5404403805732727
    2. ' heap' → logprob: -1.790440320968628
    3. 'typing' → logprob: -2.040440320968628
    4. 'heap' → logprob: -2.665440320968628
    5. ' functools' → logprob: -4.415440559387207
    6. ' operator' → logprob: -4.665440559387207
    7. 'operator' → logprob: -4.790440559387207
    8. ' threading' → logprob: -5.790440559387207
    9. ' math' → logprob: -5.915440559387207
    10. ' itertools' → logprob: -5.915440559387207

Token 41: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.031589481979608536
    2. 'import' → logprob: -3.5315895080566406
    3. ' ' → logprob: -7.031589508056641
    4. '<|end|>' → logprob: -7.156589508056641
    5. '	import' → logprob: -9.40658950805664
    6. '.' → logprob: -10.03158950805664
    7. '<|end|>' → logprob: -10.78158950805664
    8. '_import' → logprob: -11.03158950805664
    9. ' ' → logprob: -12.78158950805664
    10. '_' → logprob: -14.15658950805664

Token 42: ' permutations' (ID: 174595)
  Prédit: ' permutations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' permutations' → logprob: -0.482685923576355
    2. ' combinations' → logprob: -2.1076860427856445
    3. ' accumulate' → logprob: -2.2326860427856445
    4. ' product' → logprob: -3.3576860427856445
    5. ' group' → logprob: -3.3576860427856445
    6. ' chain' → logprob: -3.4826860427856445
    7. 'com' → logprob: -4.1076860427856445
    8. 'product' → logprob: -4.7326860427856445
    9. 'per' → logprob: -4.7326860427856445
    10. ' cycle' → logprob: -5.2326860427856445

Token 43: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 44: ' combinations' (ID: 43835)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.10710547864437103
    2. ' combinations' → logprob: -2.8571054935455322
    3. 'product' → logprob: -3.3571054935455322
    4. ' product' → logprob: -4.732105255126953
    5. 'chain' → logprob: -8.982105255126953
    6. '	com' → logprob: -9.107105255126953
    7. 'comb' → logprob: -9.982105255126953
    8. '```' → logprob: -9.982105255126953
    9. 'acc' → logprob: -10.232105255126953
    10. ' chain' → logprob: -10.732105255126953

Token 45: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.509388267993927
    2. '<|end|>' → logprob: -1.6343882083892822
    3. 'import' → logprob: -2.2593882083892822
    4. '
' → logprob: -3.1343882083892822
    5. '\n' → logprob: -3.5093882083892822
    6. 'from' → logprob: -4.759388446807861
    7. ',
' → logprob: -5.134388446807861
    8. '<|end|>' → logprob: -5.384388446807861
    9. '

' → logprob: -6.134388446807861
    10. '```' → logprob: -7.134388446807861

Token 46: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5951140522956848
    2. '

' → logprob: -1.22011399269104
    3. 'import' → logprob: -3.09511399269104
    4. ',' → logprob: -3.22011399269104
    5. '<|end|>' → logprob: -3.72011399269104
    6. '\n' → logprob: -3.97011399269104
    7. 'def' → logprob: -4.720114231109619
    8. '```' → logprob: -5.345114231109619
    9. 'from' → logprob: -5.970114231109619
    10. ',
' → logprob: -6.095114231109619

Token 47: ' heap' (ID: 37237)
  Prédit: ' operator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -1.1449588537216187
    2. ' math' → logprob: -1.2699588537216187
    3. ' functools' → logprob: -1.2699588537216187
    4. 'math' → logprob: -3.144958972930908
    5. ' heap' → logprob: -3.894958972930908
    6. 'operator' → logprob: -4.269958972930908
    7. ' fractions' → logprob: -4.519958972930908
    8. 'fra' → logprob: -4.644958972930908
    9. ' random' → logprob: -4.769958972930908
    10. 'fun' → logprob: -6.019958972930908

Token 48: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.9361264946837764e-07
    2. 'queue' → logprob: -16.375
    3. ' queue' → logprob: -18.0
    4. 'n' → logprob: -18.375
    5. 'u' → logprob: -18.5
    6. 'import' → logprob: -19.0
    7. 'i' → logprob: -19.0
    8. ')' → logprob: -19.0
    9. 's' → logprob: -19.0
    10. 't' → logprob: -19.0

Token 49: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.0961155891418457
    2. 'import' → logprob: -2.4711155891418457
    3. ' ' → logprob: -5.471115589141846
    4. '<|end|>' → logprob: -5.846115589141846
    5. '.' → logprob: -10.846115112304688
    6. '	import' → logprob: -11.721115112304688
    7. '<|end|>' → logprob: -12.721115112304688
    8. '  ' → logprob: -12.846115112304688
    9. '_import' → logprob: -12.846115112304688
    10. ' ```' → logprob: -13.096115112304688

Token 50: ' he' (ID: 501)
  Prédit: ' he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' he' → logprob: -0.1845354288816452
    2. 'he' → logprob: -1.8095353841781616
    3. 'heap' → logprob: -5.559535503387451
    4. ' heap' → logprob: -7.809535503387451
    5. 'n' → logprob: -9.059535026550293
    6. 'merge' → logprob: -9.184535026550293
    7. ' ' → logprob: -9.184535026550293
    8. '```' → logprob: -9.184535026550293
    9. 'nl' → logprob: -10.434535026550293
    10. ' n' → logprob: -10.809535026550293

Token 51: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.023423198610544205
    2. 'ap' → logprob: -3.773423194885254
    3. 'a' → logprob: -8.648423194885254
    4. 'aq' → logprob: -13.898423194885254
    5. 'ап' → logprob: -14.273423194885254
    6. '```' → logprob: -15.523423194885254
    7. 'apl' → logprob: -16.64842414855957
    8. '	app' → logprob: -16.77342414855957
    9. 'apput' → logprob: -16.77342414855957
    10. 'aps' → logprob: -16.77342414855957

Token 52: 'op' (ID: 467)
  Prédit: 'ush'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.011048642918467522
    2. 'op' → logprob: -4.511048793792725
    3. '[' → logprob: -15.761048316955566
    4. 'us' → logprob: -15.761048316955566
    5. '```' → logprob: -15.886048316955566
    6. '   ' → logprob: -16.636049270629883
    7. '

' → logprob: -16.636049270629883
    8. 'u' → logprob: -16.636049270629883
    9. '
' → logprob: -17.136049270629883
    10. 'o' → logprob: -17.386049270629883

Token 53: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009852928342297673
    2. ' ,' → logprob: -8.000985145568848
    3. 'he' → logprob: -8.250985145568848
    4. 'import' → logprob: -8.375985145568848
    5. ' ' → logprob: -9.625985145568848
    6. ' he' → logprob: -10.625985145568848
    7. '<|end|>' → logprob: -11.000985145568848
    8. ',p' → logprob: -11.375985145568848
    9. ',
' → logprob: -12.250985145568848
    10. ',h' → logprob: -12.375985145568848

Token 54: ' he' (ID: 501)
  Prédit: ' he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' he' → logprob: -0.011924726888537407
    2. 'he' → logprob: -4.511924743652344
    3. ' heap' → logprob: -7.261924743652344
    4. 'heap' → logprob: -8.761924743652344
    5. ' ' → logprob: -12.136924743652344
    6. '```' → logprob: -12.511924743652344
    7. ' heaps' → logprob: -13.011924743652344
    8. '_he' → logprob: -13.136924743652344
    9. ' hea' → logprob: -13.511924743652344
    10. '.he' → logprob: -13.886924743652344

Token 55: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.00012368128227535635
    2. 'ap' → logprob: -9.000123977661133
    3. 'a' → logprob: -16.625123977661133
    4. 'APP' → logprob: -16.625123977661133
    5. 'appen' → logprob: -17.500123977661133
    6. 'ап' → logprob: -17.875123977661133
    7. ' app' → logprob: -18.375123977661133
    8. 'pp' → logprob: -19.000123977661133
    9. 'push' → logprob: -19.250123977661133
    10. '	app' → logprob: -19.375123977661133

Token 56: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -5.319370302458992e-06
    2. 'op' → logprob: -12.250005722045898
    3. 'push' → logprob: -15.000005722045898
    4. 'p' → logprob: -17.1250057220459
    5. '```' → logprob: -17.6250057220459
    6. 'sh' → logprob: -17.8750057220459
    7. 'USH' → logprob: -19.0000057220459
    8. 'us' → logprob: -19.2500057220459
    9. 'u' → logprob: -19.8750057220459
    10. '   ' → logprob: -20.1250057220459

Token 57: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5157238245010376
    2. '

' → logprob: -1.0157238245010376
    3. 'def' → logprob: -3.765723705291748
    4. '\n' → logprob: -5.265723705291748
    5. '```' → logprob: -6.265723705291748
    6. '<|end|>' → logprob: -6.265723705291748
    7. 'import' → logprob: -6.515723705291748
    8. '\' → logprob: -6.515723705291748
    9. 'class' → logprob: -6.640723705291748
    10. '#' → logprob: -6.765723705291748

Token 58: '#' (ID: 2)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.4853723645210266
    2. 'def' → logprob: -1.1103723049163818
    3. '#' → logprob: -3.860372304916382
    4. '\' → logprob: -4.235372543334961
    5. '
' → logprob: -4.610372543334961
    6. 'class' → logprob: -5.735372543334961
    7. 'n' → logprob: -5.985372543334961
    8. '\n' → logprob: -6.985372543334961
    9. 'a' → logprob: -7.110372543334961
    10. '```' → logprob: -7.735372543334961

Token 59: ' Aug' (ID: 6025)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0035738153383135796
    2. 'd' → logprob: -5.878573894500732
    3. '#' → logprob: -8.253573417663574
    4. 'def' → logprob: -8.378573417663574
    5. '_' → logprob: -9.378573417663574
    6. ' #' → logprob: -9.878573417663574
    7. ' 
' → logprob: -10.378573417663574
    8. 'a' → logprob: -11.378573417663574
    9. 'de' → logprob: -11.503573417663574
    10. ' ```' → logprob: -11.503573417663574

Token 60: 'ment' (ID: 508)
  Prédit: 'ment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ment' → logprob: -0.2831369936466217
    2. 'mented' → logprob: -1.4081369638442993
    3. 'mentation' → logprob: -6.78313684463501
    4. '#' → logprob: -7.78313684463501
    5. 'm' → logprob: -8.908137321472168
    6. 'mentor' → logprob: -9.283137321472168
    7. '_' → logprob: -9.533137321472168
    8. ' ment' → logprob: -10.533137321472168
    9. 'ments' → logprob: -10.658137321472168
    10. 'men' → logprob: -10.783137321472168

Token 61: 'er' (ID: 259)
  Prédit: 'ed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.6742255687713623
    2. 'ation' → logprob: -1.1742255687713623
    3. ' ' → logprob: -2.4242255687713623
    4. 'ing' → logprob: -3.0492255687713623
    5. '_' → logprob: -3.5492255687713623
    6. 'def' → logprob: -5.299225807189941
    7. 'd' → logprob: -5.924225807189941
    8. 'er' → logprob: -6.049225807189941
    9. 'e' → logprob: -6.299225807189941
    10. '  ' → logprob: -7.049225807189941

Token 62: ' la' (ID: 557)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2104751616716385
    2. 'class' → logprob: -2.335475206375122
    3. ' ' → logprob: -3.460475206375122
    4. '(' → logprob: -4.210474967956543
    5. '_' → logprob: -4.335474967956543
    6. 's' → logprob: -4.585474967956543
    7. ' =' → logprob: -5.085474967956543
    8. ' class' → logprob: -5.085474967956543
    9. '=' → logprob: -5.960474967956543
    10. 'def' → logprob: -6.085474967956543

Token 63: ' limite' (ID: 48939)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5236184597015381
    2. 'data' → logprob: -2.273618459701538
    3. 'liste' → logprob: -2.398618459701538
    4. 'd' → logprob: -2.898618459701538
    5. '_' → logprob: -3.398618459701538
    6. '#' → logprob: -3.773618459701538
    7. ' #' → logprob: -4.898618698120117
    8. 's' → logprob: -5.023618698120117
    9. ' data' → logprob: -5.148618698120117
    10. 'texte' → logprob: -5.148618698120117

Token 64: ' de' (ID: 334)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.4519227147102356
    2. '_' → logprob: -1.5769226551055908
    3. 'import' → logprob: -2.451922655105591
    4. '_sys' → logprob: -3.701922655105591
    5. ' sys' → logprob: -3.826922655105591
    6. 's' → logprob: -4.82692289352417
    7. '(sys' → logprob: -5.20192289352417
    8. '=sys' → logprob: -5.45192289352417
    9. '#' → logprob: -7.07692289352417
    10. 'd' → logprob: -7.20192289352417

Token 65: ' réc' (ID: 36254)
  Prédit: 'rec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.03703923895955086
    2. 'la' → logprob: -4.037039279937744
    3. 'r' → logprob: -5.037039279937744
    4. ' recursion' → logprob: -5.412039279937744
    5. 're' → logprob: -6.162039279937744
    6. 'l' → logprob: -6.287039279937744
    7. ' réc' → logprob: -6.412039279937744
    8. '_rec' → logprob: -7.537039279937744
    9. 'recursive' → logprob: -7.912039279937744
    10. 'ré' → logprob: -8.037038803100586

Token 66: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.003948028665035963
    2. 'urs' → logprob: -5.628948211669922
    3. 'ur' → logprob: -8.753948211669922
    4. 'ursive' → logprob: -9.128948211669922
    5. '```' → logprob: -10.253948211669922
    6. 'u' → logprob: -10.753948211669922
    7. '#' → logprob: -12.378948211669922
    8. 'usion' → logprob: -12.378948211669922
    9. 'usr' → logprob: -13.003948211669922
    10. '##' → logprob: -13.253948211669922

Token 67: ' à' (ID: 1221)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.3018951416015625
    2. 'import' → logprob: -1.8018951416015625
    3. ':' → logprob: -2.6768951416015625
    4. 's' → logprob: -5.0518951416015625
    5. ' sys' → logprob: -5.1768951416015625
    6. '```' → logprob: -5.5518951416015625
    7. ''s' → logprob: -6.0518951416015625
    8. '\n' → logprob: -6.4268951416015625
    9. '_' → logprob: -6.9268951416015625
    10. '\' → logprob: -6.9268951416015625

Token 68: ' un' (ID: 537)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.1843404620885849
    2. '100' → logprob: -1.809340476989746
    3. 'sys' → logprob: -5.684340476989746
    4. ' ' → logprob: -7.934340476989746
    5. '300' → logprob: -8.559340476989746
    6. '500' → logprob: -8.809340476989746
    7. '150' → logprob: -8.934340476989746
    8. '200' → logprob: -9.184340476989746
    9. 'int' → logprob: -9.684340476989746
    10. '250' → logprob: -9.934340476989746

Token 69: ' grand' (ID: 6363)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.5365836024284363
    2. ' large' → logprob: -1.661583662033081
    3. ' million' → logprob: -2.286583662033081
    4. 'large' → logprob: -3.786583662033081
    5. ' maximum' → logprob: -4.536583423614502
    6. '```' → logprob: -4.536583423614502
    7. 'e' → logprob: -5.036583423614502
    8. '`' → logprob: -5.036583423614502
    9. ' recursion' → logprob: -5.036583423614502
    10. ' depth' → logprob: -5.161583423614502

Token 70: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.7331848740577698
    2. '_nombre' → logprob: -2.108184814453125
    3. '_' → logprob: -2.233184814453125
    4. 'val' → logprob: -2.358184814453125
    5. 'niveau' → logprob: -2.733184814453125
    6. ' nombre' → logprob: -3.108184814453125
    7. 'sys' → logprob: -4.858184814453125
    8. '_val' → logprob: -4.858184814453125
    9. '_rec' → logprob: -4.983184814453125
    10. 'int' → logprob: -5.108184814453125

Token 71: ' pour' (ID: 1930)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.026237014681100845
    2. ' sys' → logprob: -4.0262370109558105
    3. '(sys' → logprob: -5.6512370109558105
    4. '
' → logprob: -6.9012370109558105
    5. 'import' → logprob: -6.9012370109558105
    6. '\' → logprob: -7.7762370109558105
    7. '\n' → logprob: -7.7762370109558105
    8. '_sys' → logprob: -7.7762370109558105
    9. '=sys' → logprob: -8.026237487792969
    10. '_' → logprob: -8.526237487792969

Token 72: ' éviter' (ID: 64013)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -1.0034109354019165
    2. ' permettre' → logprob: -1.0034109354019165
    3. ' éviter' → logprob: -2.128410816192627
    4. ' pouvoir' → logprob: -3.378410816192627
    5. 'sys' → logprob: -3.628410816192627
    6. ' gérer' → logprob: -4.378410816192627
    7. ' support' → logprob: -4.753410816192627
    8. ' augmenter' → logprob: -4.753410816192627
    9. ' ' → logprob: -4.878410816192627
    10. '```' → logprob: -5.003410816192627

Token 73: ' les' (ID: 1341)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.007736751344054937
    2. ' l' → logprob: -6.007736682891846
    3. '  ' → logprob: -6.257736682891846
    4. ' ' → logprob: -6.382736682891846
    5. '<|end|>' → logprob: -7.382736682891846
    6. '_' → logprob: -8.382737159729004
    7. 's' → logprob: -8.882737159729004
    8. '  
' → logprob: -8.882737159729004
    9. 'l' → logprob: -9.507737159729004
    10. '\' → logprob: -10.382737159729004

Token 74: ' erreurs' (ID: 139891)
  Prédit: ' Rec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Rec' → logprob: -0.1593150794506073
    2. 'Rec' → logprob: -2.0343151092529297
    3. ' Runtime' → logprob: -5.15931510925293
    4. ' erreurs' → logprob: -5.90931510925293
    5. ' dépasse' → logprob: -6.03431510925293
    6. ' problèmes' → logprob: -6.40931510925293
    7. ' crash' → logprob: -6.78431510925293
    8. 'Overflow' → logprob: -7.40931510925293
    9. 'Runtime' → logprob: -7.53431510925293
    10. ' recursion' → logprob: -7.53431510925293

Token 75: ' de' (ID: 334)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.7336989641189575
    2. ' sys' → logprob: -1.1086989641189575
    3. 'import' → logprob: -2.483698844909668
    4. '(sys' → logprob: -3.483698844909668
    5. ' :' → logprob: -3.608698844909668
    6. ':' → logprob: -4.108698844909668
    7. ' ' → logprob: -5.358698844909668
    8. ' recursion' → logprob: -5.608698844909668
    9. '\' → logprob: -5.983698844909668
    10. '\n' → logprob: -6.108698844909668

Token 76: ' réc' (ID: 36254)
  Prédit: 'rec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.6707992553710938
    2. ' réc' → logprob: -1.5457992553710938
    3. 'Rec' → logprob: -1.9207992553710938
    4. 'r' → logprob: -2.6707992553710938
    5. ' Rec' → logprob: -3.6707992553710938
    6. ' recursion' → logprob: -3.6707992553710938
    7. ' profondeur' → logprob: -6.045799255371094
    8. ' dépasse' → logprob: -6.420799255371094
    9. 'd' → logprob: -6.795799255371094
    10. 'R' → logprob: -7.170799255371094

Token 77: 'ursion' (ID: 41658)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.0005933052161708474
    2. 'urs' → logprob: -8.000593185424805
    3. 'ursion' → logprob: -8.625593185424805
    4. 'ur' → logprob: -9.500593185424805
    5. 'urse' → logprob: -14.000593185424805
    6. 's' → logprob: -14.875593185424805
    7. '(u' → logprob: -15.000593185424805
    8. 'r' → logprob: -15.000593185424805
    9. 'ü' → logprob: -15.250593185424805
    10. 'us' → logprob: -15.625593185424805

Token 78: ' dans' (ID: 2671)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.7533233165740967
    2. '
' → logprob: -1.8783233165740967
    3. '\' → logprob: -2.0033233165740967
    4. ' sys' → logprob: -2.6283233165740967
    5. 'import' → logprob: -3.7533233165740967
    6. ':' → logprob: -3.7533233165740967
    7. '(sys' → logprob: -3.8783233165740967
    8. '' → logprob: -4.253323554992676
    9. '\n' → logprob: -4.503323554992676
    10. '(' → logprob: -4.628323554992676

Token 79: ' des' (ID: 731)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0331742763519287
    2. ' l' → logprob: -1.0331742763519287
    3. ' Python' → logprob: -2.2831742763519287
    4. ' le' → logprob: -2.6581742763519287
    5. ' les' → logprob: -2.7831742763519287
    6. ' la' → logprob: -3.2831742763519287
    7. ' ' → logprob: -5.408174514770508
    8. ' code' → logprob: -5.783174514770508
    9. ' des' → logprob: -6.783174514770508
    10. ' recursive' → logprob: -6.783174514770508

Token 80: ' cas' (ID: 2108)
  Prédit: ' cas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cas' → logprob: -0.013606134802103043
    2. ' tests' → logprob: -6.013606071472168
    3. ' code' → logprob: -6.138606071472168
    4. 'cas' → logprob: -6.388606071472168
    5. ' programmes' → logprob: -6.513606071472168
    6. ' scripts' → logprob: -6.638606071472168
    7. ' problèmes' → logprob: -7.263606071472168
    8. ' projets' → logprob: -7.513606071472168
    9. ' codes' → logprob: -8.138606071472168
    10. ' réc' → logprob: -8.138606071472168

Token 81: ' extr' (ID: 15674)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.22418348491191864
    2. '_' → logprob: -1.849183440208435
    3. '<|end|>' → logprob: -4.474183559417725
    4. '  ' → logprob: -4.849183559417725
    5. ' de' → logprob: -4.974183559417725
    6. 's' → logprob: -5.474183559417725
    7. ' d' → logprob: -5.724183559417725
    8. ' ' → logprob: -6.349183559417725
    9. ' _' → logprob: -6.474183559417725
    10. ' ‌' → logprob: -7.099183559417725

Token 82: 'êmes' (ID: 49694)
  Prédit: 'êmes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êmes' → logprob: -0.7150532007217407
    2. 'ê' → logprob: -1.2150532007217407
    3. 'ême' → logprob: -1.7150532007217407
    4. '^' → logprob: -4.590053081512451
    5. 'êmement' → logprob: -5.090053081512451
    6. 'é' → logprob: -5.465053081512451
    7. '�' → logprob: -5.840053081512451
    8. '```' → logprob: -5.965053081512451
    9. 'êm' → logprob: -6.215053081512451
    10. 'èmes' → logprob: -6.840053081512451

Token 83: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.42866790294647217
    2. 'sys' → logprob: -1.4286679029464722
    3. '\' → logprob: -3.3036680221557617
    4. '' → logprob: -3.9286680221557617
    5. '\n' → logprob: -4.303668022155762
    6. ' sys' → logprob: -4.553668022155762
    7. '

' → logprob: -5.053668022155762
    8. '(sys' → logprob: -5.178668022155762
    9. '  
' → logprob: -5.303668022155762
    10. '
' → logprob: -5.303668022155762

Token 84: 'sys' (ID: 17324)
  Prédit: 'sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.03339831158518791
    2. '
' → logprob: -3.908398389816284
    3. ' sys' → logprob: -4.783398151397705
    4. 'import' → logprob: -6.783398151397705
    5. '\' → logprob: -6.908398151397705
    6. '\n' → logprob: -7.533398151397705
    7. '(sys' → logprob: -7.658398151397705
    8. '' → logprob: -8.283398628234863
    9. '

' → logprob: -8.658398628234863
    10. '=sys' → logprob: -8.783398628234863

Token 85: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.001965508796274662
    2. '.set' → logprob: -6.876965522766113
    3. '.setdefault' → logprob: -7.126965522766113
    4. ' .' → logprob: -9.251965522766113
    5. '.argv' → logprob: -12.001965522766113
    6. '.stdout' → logprob: -12.376965522766113
    7. '.stdin' → logprob: -12.501965522766113
    8. '.stderr' → logprob: -13.626965522766113
    9. '.exit' → logprob: -13.626965522766113
    10. '.`' → logprob: -13.751965522766113

Token 86: 'rec' (ID: 9285)
  Prédit: '_rec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rec' → logprob: -0.20946189761161804
    2. 'rec' → logprob: -2.0844619274139404
    3. '_' → logprob: -3.5844619274139404
    4. '_limit' → logprob: -4.084461688995361
    5. '_recursive' → logprob: -5.084461688995361
    6. '_max' → logprob: -5.709461688995361
    7. '_stack' → logprob: -5.709461688995361
    8. '_execution' → logprob: -6.959461688995361
    9. '_depth' → logprob: -7.209461688995361
    10. ' _' → logprob: -7.334461688995361

Token 87: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -4.8232690460281447e-05
    2. '_limit' → logprob: -10.625048637390137
    3. '_' → logprob: -11.375048637390137
    4. 'limit' → logprob: -12.750048637390137
    5. 'urs' → logprob: -12.750048637390137
    6. 'ur' → logprob: -13.125048637390137
    7. 'ursive' → logprob: -13.250048637390137
    8. 'usion' → logprob: -13.875048637390137
    9. '__' → logprob: -14.875048637390137
    10. '_set' → logprob: -15.000048637390137

Token 88: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.011057964526116848
    2. '_limit' → logprob: -4.5110578536987305
    3. 'lim' → logprob: -12.26105785369873
    4. '_' → logprob: -13.13605785369873
    5. '_depth' → logprob: -13.63605785369873
    6. 'depth' → logprob: -13.88605785369873
    7. '_LIMIT' → logprob: -14.38605785369873
    8. ' limit' → logprob: -15.38605785369873
    9. '_lim' → logprob: -15.88605785369873
    10. 'ault' → logprob: -16.386058807373047

Token 89: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0325924449716695e-05
    2. ' (' → logprob: -12.62501049041748
    3. '(
' → logprob: -12.87501049041748
    4. '((' → logprob: -13.00001049041748
    5. '(

' → logprob: -14.00001049041748
    6. '("("' → logprob: -15.25001049041748
    7. '()' → logprob: -15.37501049041748
    8. '(int' → logprob: -15.37501049041748
    9. '(`' → logprob: -16.000009536743164
    10. '```' → logprob: -16.500009536743164

Token 90: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.25196346640586853
    2. '100' → logprob: -1.501963496208191
    3. '1' → logprob: -10.50196361541748
    4. ' ' → logprob: -12.25196361541748
    5. '500' → logprob: -14.12696361541748
    6. '200' → logprob: -14.12696361541748
    7. '300' → logprob: -15.12696361541748
    8. '999' → logprob: -16.501962661743164
    9. '250' → logprob: -16.501962661743164
    10. '400' → logprob: -16.501962661743164

Token 91: '**' (ID: 410)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.3489460051059723
    2. '6' → logprob: -1.34894597530365
    3. '000' → logprob: -3.4739460945129395
    4. '8' → logprob: -6.5989460945129395
    5. '**' → logprob: -6.8489460945129395
    6. '00' → logprob: -7.2239460945129395
    7. '5' → logprob: -7.3489460945129395
    8. '0' → logprob: -8.973945617675781
    9. '07' → logprob: -9.598945617675781
    10. '06' → logprob: -10.223945617675781

Token 92: '8' (ID: 23)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0055207000114023685
    2. '9' → logprob: -5.255520820617676
    3. '8' → logprob: -8.630520820617676
    4. '6' → logprob: -9.130520820617676
    5. '**' → logprob: -17.75551986694336
    6. '```' → logprob: -19.00551986694336
    7. ' ' → logprob: -20.00551986694336
    8. '

' → logprob: -20.13051986694336
    9. '}' → logprob: -21.13051986694336
    10. '+' → logprob: -21.25551986694336

Token 93: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.7697225252486533e-06
    2. ' )' → logprob: -12.625003814697266
    3. ')
' → logprob: -15.125003814697266
    4. '))' → logprob: -16.750003814697266
    5. '0' → logprob: -18.125003814697266
    6. ')

' → logprob: -18.375003814697266
    7. '),' → logprob: -18.750003814697266
    8. ')
' → logprob: -18.875003814697266
    9. '6' → logprob: -19.000003814697266
    10. ')`' → logprob: -19.375003814697266

Token 94: '#' (ID: 2)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.0810733363032341
    2. '
' → logprob: -2.58107328414917
    3. '


' → logprob: -6.95607328414917
    4. '
' → logprob: -7.20607328414917
    5. '' → logprob: -8.956073760986328
    6. '

' → logprob: -9.081073760986328
    7. '#' → logprob: -9.706073760986328
    8. '\n' → logprob: -9.831073760986328
    9. '\' → logprob: -10.206073760986328
    10. '



' → logprob: -10.581073760986328

Token 95: ' Dé' (ID: 27247)
  Prédit: ' 

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' 

' → logprob: -0.6595533490180969
    2. 'def' → logprob: -1.7845532894134521
    3. '#' → logprob: -1.9095532894134521
    4. ' 
' → logprob: -2.284553289413452
    5. '
' → logprob: -4.159553527832031
    6. '

' → logprob: -4.284553527832031
    7. ' 
 
' → logprob: -4.659553527832031
    8. ' def' → logprob: -5.159553527832031
    9. ' ' → logprob: -5.534553527832031
    10. ' 


' → logprob: -6.034553527832031

Token 96: 'fin' (ID: 6994)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.5768237709999084
    2. 'fin' → logprob: -0.8268237709999084
    3. 'fi' → logprob: -7.326823711395264
    4. '#' → logprob: -9.076824188232422
    5. 'fen' → logprob: -9.576824188232422
    6. 'fic' → logprob: -12.076824188232422
    7. 'finite' → logprob: -12.451824188232422
    8. 'fim' → logprob: -12.451824188232422
    9. 'fa' → logprob: -12.951824188232422
    10. 'faire' → logprob: -12.951824188232422

Token 97: 'ir' (ID: 380)
  Prédit: 'ir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ir' → logprob: -0.0027775357011705637
    2. 'i' → logprob: -6.877777576446533
    3. 'inir' → logprob: -7.127777576446533
    4. '#' → logprob: -7.502777576446533
    5. 'er' → logprob: -9.252777099609375
    6. 'r' → logprob: -10.127777099609375
    7. 'nir' → logprob: -10.127777099609375
    8. 'class' → logprob: -10.127777099609375
    9. 'import' → logprob: -10.752777099609375
    10. ' #' → logprob: -10.877777099609375

Token 98: ' le' (ID: 505)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.7781533598899841
    2. ' une' → logprob: -1.403153419494629
    3. ' l' → logprob: -2.153153419494629
    4. ' ' → logprob: -2.528153419494629
    5. ' ' → logprob: -3.653153419494629
    6. '_' → logprob: -3.778153419494629
    7. ' a' → logprob: -3.903153419494629
    8. ' un' → logprob: -4.653153419494629
    9. ' le' → logprob: -4.778153419494629
    10. ' _' → logprob: -6.778153419494629

Token 99: ' mod' (ID: 1812)
  Prédit: ' nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.7738714814186096
    2. 'nombre' → logprob: -1.5238714218139648
    3. 't' → logprob: -3.148871421813965
    4. ' format' → logprob: -3.898871421813965
    5. ' main' → logprob: -4.023871421813965
    6. 'n' → logprob: -4.273871421813965
    7. 'max' → logprob: -4.398871421813965
    8. ' code' → logprob: -4.523871421813965
    9. 'precision' → logprob: -4.648871421813965
    10. ' random' → logprob: -4.648871421813965

Token 100: ' pour' (ID: 1930)
  Prédit: 'ule'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ule' → logprob: -0.8686955571174622
    2. ' =' → logprob: -1.1186954975128174
    3. '=' → logprob: -1.4936954975128174
    4. 'ulus' → logprob: -4.1186957359313965
    5. 'ulo' → logprob: -4.8686957359313965
    6. 'ULO' → logprob: -5.9936957359313965
    7. 'u' → logprob: -7.9936957359313965
    8. 'ULE' → logprob: -8.118695259094238
    9. 'e' → logprob: -8.368695259094238
    10. 'ulaire' → logprob: -8.368695259094238

Token 101: ' les' (ID: 1341)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.15063491463661194
    2. '100' → logprob: -3.650635004043579
    3. '10' → logprob: -3.650635004043579
    4. '998' → logprob: -4.525634765625
    5. ' mod' → logprob: -5.150634765625
    6. 'uler' → logprob: -5.150634765625
    7. ' MOD' → logprob: -5.275634765625
    8. ' modulo' → logprob: -5.275634765625
    9. ' int' → logprob: -5.400634765625
    10. ' =' → logprob: -5.525634765625

Token 102: ' opérations' (ID: 102793)
  Prédit: ' calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calcul' → logprob: -0.03478272259235382
    2. ' opérations' → logprob: -3.659782648086548
    3. ' calculations' → logprob: -5.284782886505127
    4. 'calcul' → logprob: -6.284782886505127
    5. ' problèmes' → logprob: -7.284782886505127
    6. ' nombres' → logprob: -8.909782409667969
    7. ' ' → logprob: -9.659782409667969
    8. 'Calcul' → logprob: -9.784782409667969
    9. ' computations' → logprob: -10.159782409667969
    10. ' mod' → logprob: -10.347282409667969

Token 103: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.01035656314343214
    2. '  ' → logprob: -5.010356426239014
    3. '_' → logprob: -7.385356426239014
    4. '<|end|>' → logprob: -7.385356426239014
    5. ' =' → logprob: -8.010356903076172
    6. ' )' → logprob: -8.385356903076172
    7. ' ,' → logprob: -8.510356903076172
    8. ' space' → logprob: -8.885356903076172
    9. ' modulo' → logprob: -8.885356903076172
    10. ' (' → logprob: -8.885356903076172

Token 104: ' mod' (ID: 1812)
  Prédit: ' modulo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' modulo' → logprob: -0.8181259036064148
    2. ' mod' → logprob: -1.9431259632110596
    3. ' modular' → logprob: -2.3181259632110596
    4. ' modulus' → logprob: -2.4431259632110596
    5. 'mod' → logprob: -2.9431259632110596
    6. '100' → logprob: -3.0681259632110596
    7. ' ' → logprob: -3.3181259632110596
    8. '```' → logprob: -4.0681257247924805
    9. '10' → logprob: -4.4431257247924805
    10. ' l' → logprob: -4.4431257247924805

Token 105: 'ulos' (ID: 23205)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8379589319229126
    2. 'ulo' → logprob: -0.8379589319229126
    3. 'ular' → logprob: -2.712958812713623
    4. 'uler' → logprob: -4.962958812713623
    5. 'ulus' → logprob: -4.962958812713623
    6. '  ' → logprob: -5.087958812713623
    7. 'ULO' → logprob: -5.087958812713623
    8. '26' → logprob: -5.212958812713623
    9. ' =' → logprob: -5.212958812713623
    10. 'ulaire' → logprob: -5.212958812713623

Token 106: ' fréqu' (ID: 150035)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.40638992190361023
    2. '=' → logprob: -2.0313899517059326
    3. ' ' → logprob: -2.2813899517059326
    4. '10' → logprob: -3.4063899517059326
    5. 'mod' → logprob: -4.4063897132873535
    6. '_' → logprob: -4.4063897132873535
    7. '_mod' → logprob: -4.4063897132873535
    8. 'MOD' → logprob: -4.4063897132873535
    9. '_MOD' → logprob: -5.5313897132873535
    10. '100' → logprob: -5.9063897132873535

Token 107: 'entes' (ID: 5651)
  Prédit: 'ule'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ule' → logprob: -0.8587515950202942
    2. 'ulaire' → logprob: -1.4837515354156494
    3. 'ulo' → logprob: -2.1087515354156494
    4. ' ' → logprob: -2.8587515354156494
    5. 'ula' → logprob: -3.4837515354156494
    6. 'u' → logprob: -3.4837515354156494
    7. 'ular' → logprob: -3.8587515354156494
    8. ' (' → logprob: -4.3587517738342285
    9. 'ules' → logprob: -4.3587517738342285
    10. ' ' → logprob: -5.1087517738342285

Token 108: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.278971791267395
    2. 'mod' → logprob: -1.403971791267395
    3. '10' → logprob: -1.528971791267395
    4. 'MOD' → logprob: -2.5289716720581055
    5. '_' → logprob: -3.1539716720581055
    6. '=' → logprob: -3.6539716720581055
    7. '(' → logprob: -3.7789716720581055
    8. '_mod' → logprob: -3.9039716720581055
    9. ' =' → logprob: -4.2789716720581055
    10. '_MOD' → logprob: -4.6539716720581055

Token 109: 'mod' (ID: 4847)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.45117098093032837
    2. 'mod' → logprob: -2.2011709213256836
    3. '_MOD' → logprob: -2.2011709213256836
    4. ' MOD' → logprob: -2.9511709213256836
    5. '_mod' → logprob: -3.2011709213256836
    6. ' ' → logprob: -3.5761709213256836
    7. '_' → logprob: -5.076170921325684
    8. ' mod' → logprob: -5.326170921325684
    9. ' =' → logprob: -5.951170921325684
    10. 'M' → logprob: -6.326170921325684

Token 110: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00232712528668344
    2. '=' → logprob: -6.127326965332031
    3. ' ' → logprob: -9.127326965332031
    4. '_' → logprob: -11.252326965332031
    5. 'space' → logprob: -12.627326965332031
    6. ' =
' → logprob: -12.752326965332031
    7. '  ' → logprob: -12.752326965332031
    8. ' ' → logprob: -12.877326965332031
    9. ' _' → logprob: -13.127326965332031
    10. ' ,' → logprob: -13.252326965332031

Token 111: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.12720002233982086
    2. ' ' → logprob: -2.127200126647949
    3. '100' → logprob: -8.25220012664795
    4. '1' → logprob: -12.12720012664795
    5. '998' → logprob: -12.25220012664795
    6. 'int' → logprob: -14.62720012664795
    7. '999' → logprob: -16.127199172973633
    8. '0' → logprob: -16.502199172973633
    9. ' int' → logprob: -16.627199172973633
    10. ' ' → logprob: -16.627199172973633

Token 112: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0004055282333865762
    2. '100' → logprob: -8.000405311584473
    3. ' ' → logprob: -9.625405311584473
    4. '998' → logprob: -13.250405311584473
    5. '1' → logprob: -13.625405311584473
    6. 'int' → logprob: -13.875405311584473
    7. '(' → logprob: -17.37540626525879
    8. '999' → logprob: -18.75040626525879
    9. '109' → logprob: -19.37540626525879
    10. '123' → logprob: -19.87540626525879

Token 113: '**' (ID: 410)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.3884541094303131
    2. '**' → logprob: -1.1384540796279907
    3. '09' → logprob: -6.638453960418701
    4. '+' → logprob: -9.01345443725586
    5. '000' → logprob: -10.13845443725586
    6. ' ' → logprob: -10.26345443725586
    7. '7' → logprob: -10.88845443725586
    8. '^' → logprob: -11.26345443725586
    9. '*' → logprob: -11.38845443725586
    10. '```' → logprob: -11.51345443725586

Token 114: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -1.9361264946837764e-07
    2. '09' → logprob: -16.125
    3. ' ' → logprob: -17.875
    4. '10' → logprob: -19.625
    5. '```' → logprob: -20.25
    6. '+' → logprob: -20.5
    7. '19' → logprob: -21.125
    8. '7' → logprob: -21.5
    9. '4' → logprob: -21.75
    10. '18' → logprob: -22.0

Token 115: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.005245498847216368
    2. ' +' → logprob: -5.255245685577393
    3. '7' → logprob: -12.005245208740234
    4. '+
' → logprob: -12.505245208740234
    5. ' ' → logprob: -14.255245208740234
    6. ' +
' → logprob: -15.005245208740234
    7. ' plus' → logprob: -15.380245208740234
    8. '＋' → logprob: -15.755245208740234
    9. '+

' → logprob: -15.880245208740234
    10. ' ' → logprob: -16.505245208740234

Token 116: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -1.8624639324116288e-06
    2. '+' → logprob: -13.375001907348633
    3. ' ' → logprob: -15.625001907348633
    4. '07' → logprob: -17.500001907348633
    5. '9' → logprob: -17.625001907348633
    6. '```' → logprob: -17.750001907348633
    7. '

' → logprob: -18.500001907348633
    8. '' → logprob: -18.875001907348633
    9. ' +' → logprob: -19.875001907348633
    10. '   ' → logprob: -19.875001907348633

Token 117: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. '+' → logprob: -18.625
    3. '```' → logprob: -19.125
    4. '

' → logprob: -19.75
    5. '07' → logprob: -20.0
    6. ' ' → logprob: -20.125
    7. '
' → logprob: -21.25
    8. '9' → logprob: -21.375
    9. '' → logprob: -21.5
    10. '۷' → logprob: -22.25

Token 118: '

' (ID: 279)
  Prédit: '

'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.2264171838760376
    2. '
' → logprob: -1.6014171838760376
    3. '
' → logprob: -8.101417541503906
    4. '


' → logprob: -8.101417541503906
    5. ' 

' → logprob: -9.601417541503906
    6. '\n' → logprob: -9.726417541503906
    7. '<|end|>' → logprob: -9.726417541503906
    8. '' → logprob: -10.101417541503906
    9. '
 
' → logprob: -10.226417541503906
    10. '

' → logprob: -10.851417541503906

Token 119: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3231774568557739
    2. '

' → logprob: -1.323177456855774
    3. 'def' → logprob: -5.323177337646484
    4. '
' → logprob: -5.698177337646484
    5. '


' → logprob: -7.823177337646484
    6. 'n' → logprob: -7.948177337646484
    7. 'd' → logprob: -8.323177337646484
    8. '#' → logprob: -8.448177337646484
    9. '' → logprob: -8.698177337646484
    10. 'class' → logprob: -9.573177337646484

Token 120: ' inp' (ID: 64450)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.02080298773944378
    2. ' main' → logprob: -5.020802974700928
    3. ' solve' → logprob: -5.395802974700928
    4. ' factorial' → logprob: -5.395802974700928
    5. ' factor' → logprob: -6.895802974700928
    6. '_' → logprob: -7.520802974700928
    7. ' f' → logprob: -8.020803451538086
    8. ' binary' → logprob: -8.145803451538086
    9. ' ' → logprob: -8.145803451538086
    10. ' _' → logprob: -8.270803451538086

Token 121: '():
' (ID: 8595)
  Prédit: 'ut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ut' → logprob: -0.0006348780007101595
    2. '():' → logprob: -7.500634670257568
    3. '()' → logprob: -10.250635147094727
    4. 'u' → logprob: -11.000635147094727
    5. '():
' → logprob: -11.375635147094727
    6. ' ut' → logprob: -12.125635147094727
    7. '(' → logprob: -12.750635147094727
    8. 'ут' → logprob: -13.000635147094727
    9. '().' → logprob: -13.875635147094727
    10. 'uts' → logprob: -13.875635147094727

Token 122: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.012884068302810192
    2. '()' → logprob: -4.512884140014648
    3. ' ():' → logprob: -6.637884140014648
    4. ' ()' → logprob: -8.387884140014648
    5. '():
' → logprob: -8.637884140014648
    6. ':' → logprob: -10.387884140014648
    7. '(' → logprob: -10.762884140014648
    8. '):' → logprob: -10.887884140014648
    9. ' :' → logprob: -11.012884140014648
    10. ' =' → logprob: -11.387884140014648

Token 123: ' """
' (ID: 7037)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5798336267471313
    2. ' return' → logprob: -0.8298336267471313
    3. 'int' → logprob: -6.204833507537842
    4. 'input' → logprob: -7.204833507537842
    5. ' input' → logprob: -7.954833507537842
    6. ' ' → logprob: -8.204833984375
    7. ' int' → logprob: -8.204833984375
    8. '   ' → logprob: -9.579833984375
    9. ' list' → logprob: -10.454833984375
    10. 'map' → logprob: -10.579833984375

Token 124: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7776229381561279
    2. ' return' → logprob: -1.027622938156128
    3. 'return' → logprob: -1.777622938156128
    4. '()' → logprob: -4.902623176574707
    5. ')' → logprob: -5.402623176574707
    6. '    ' → logprob: -7.652623176574707
    7. ' ' → logprob: -8.902623176574707
    8. ' )' → logprob: -9.027623176574707
    9. '  ' → logprob: -9.277623176574707
    10. 'eturn' → logprob: -9.277623176574707

Token 125: ' Lit' (ID: 45595)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.720635175704956
    2. 'return' → logprob: -0.720635175704956
    3. 'r' → logprob: -3.845635175704956
    4. '   ' → logprob: -5.720635414123535
    5. 'ret' → logprob: -7.345635414123535
    6. ' r' → logprob: -7.470635414123535
    7. ')' → logprob: -8.220635414123535
    8. ' ' → logprob: -8.345635414123535
    9. 'n' → logprob: -8.720635414123535
    10. 're' → logprob: -9.220635414123535

Token 126: ' une' (ID: 2463)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0057637072168290615
    2. '().' → logprob: -5.630763530731201
    3. '():' → logprob: -6.880763530731201
    4. ' une' → logprob: -7.505763530731201
    5. ' ()' → logprob: -9.00576400756836
    6. ' la' → logprob: -10.00576400756836
    7. 'une' → logprob: -10.25576400756836
    8. '()<' → logprob: -10.25576400756836
    9. '()
' → logprob: -10.38076400756836
    10. '   ' → logprob: -10.50576400756836

Token 127: ' valeur' (ID: 41664)
  Prédit: ' ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.08693486452102661
    2. 'ligne' → logprob: -2.711934804916382
    3. 'l' → logprob: -4.836935043334961
    4. ' ' → logprob: -5.211935043334961
    5. ' chaîne' → logprob: -6.711935043334961
    6. ' l' → logprob: -6.836935043334961
    7. ' line' → logprob: -8.461935043334961
    8. 'line' → logprob: -8.961935043334961
    9. '  ' → logprob: -9.086935043334961
    10. ' chaine' → logprob: -9.461935043334961

Token 128: ' entière' (ID: 61583)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3830299973487854
    2. 'int' → logprob: -2.5080299377441406
    3. ' entière' → logprob: -2.6330299377441406
    4. ' ' → logprob: -3.1330299377441406
    5. '  ' → logprob: -3.7580299377441406
    6. '   ' → logprob: -4.758029937744141
    7. '_ent' → logprob: -4.758029937744141
    8. ' ent' → logprob: -4.883029937744141
    9. '(' → logprob: -4.883029937744141
    10. ')' → logprob: -5.008029937744141

Token 129: ' à' (ID: 1221)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.002157041570171714
    2. '():' → logprob: -6.877157211303711
    3. '()
' → logprob: -8.002157211303711
    4. ' ()' → logprob: -8.502157211303711
    5. '()\' → logprob: -8.752157211303711
    6. '\n' → logprob: -9.127157211303711
    7. '(' → logprob: -9.502157211303711
    8. ':' → logprob: -10.002157211303711
    9. '   ' → logprob: -10.127157211303711
    10. '.' → logprob: -10.127157211303711

Token 130: ' partir' (ID: 12100)
  Prédit: ' partir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' partir' → logprob: -0.023354724049568176
    2. 'part' → logprob: -4.273354530334473
    3. 'l' → logprob: -5.023354530334473
    4. 'input' → logprob: -7.023354530334473
    5. ' input' → logprob: -7.648354530334473
    6. 'n' → logprob: -8.023354530334473
    7. ' partire' → logprob: -8.648354530334473
    8. ' ' → logprob: -9.023354530334473
    9. ' l' → logprob: -9.148354530334473
    10. ' part' → logprob: -9.398354530334473

Token 131: ' de' (ID: 334)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.052372973412275314
    2. ' d' → logprob: -3.552372932434082
    3. ' de' → logprob: -5.052372932434082
    4. 'd' → logprob: -5.552372932434082
    5. '   ' → logprob: -5.677372932434082
    6. 'de' → logprob: -6.052372932434082
    7. ')' → logprob: -6.927372932434082
    8. '()\' → logprob: -6.927372932434082
    9. '()
' → logprob: -7.052372932434082
    10. '(' → logprob: -7.302372932434082

Token 132: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.7608879804611206
    2. ' l' → logprob: -1.1358879804611206
    3. ' input' → logprob: -1.8858879804611206
    4. 'input' → logprob: -2.88588809967041
    5. ' la' → logprob: -6.26088809967041
    6. ' ' → logprob: -6.88588809967041
    7. 'la' → logprob: -7.63588809967041
    8. ' une' → logprob: -8.76088809967041
    9. '   ' → logprob: -8.88588809967041
    10. ' stdin' → logprob: -9.51088809967041

Token 133: ''entrée' (ID: 115820)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.7973542213439941
    2. ''entrée' → logprob: -0.7973542213439941
    3. 'a' → logprob: -3.047354221343994
    4. 'entrée' → logprob: -3.172354221343994
    5. ' input' → logprob: -5.172354221343994
    6. ''' → logprob: -6.422354221343994
    7. 'e' → logprob: -6.797354221343994
    8. 'stdin' → logprob: -8.297353744506836
    9. '’entrée' → logprob: -8.547353744506836
    10. 'es' → logprob: -9.547353744506836

Token 134: ' standard' (ID: 7024)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0005272957496345043
    2. '()\' → logprob: -8.375527381896973
    3. '()
' → logprob: -8.500527381896973
    4. '().' → logprob: -10.875527381896973
    5. '\n' → logprob: -11.125527381896973
    6. '.' → logprob: -11.250527381896973
    7. ' ()' → logprob: -11.625527381896973
    8. 'standard' → logprob: -12.000527381896973
    9. '(' → logprob: -12.625527381896973
    10. ')' → logprob: -12.875527381896973

Token 135: '.

' (ID: 364)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.037553176283836365
    2. ')' → logprob: -4.412553310394287
    3. '   ' → logprob: -4.912553310394287
    4. '():' → logprob: -4.912553310394287
    5. '()
' → logprob: -5.162553310394287
    6. ':' → logprob: -7.037553310394287
    7. 'return' → logprob: -7.162553310394287
    8. '.' → logprob: -7.162553310394287
    9. '\n' → logprob: -7.912553310394287
    10. '()\' → logprob: -8.287552833557129

Token 136: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28909510374069214
    2. 'return' → logprob: -1.789095163345337
    3. ' return' → logprob: -2.539095163345337
    4. ')' → logprob: -5.789094924926758
    5. 'r' → logprob: -7.664094924926758
    6. '    
' → logprob: -8.289094924926758
    7. ' ' → logprob: -8.539094924926758
    8. 'n' → logprob: -8.664094924926758
    9. ' 
' → logprob: -8.789094924926758
    10. '
' → logprob: -8.789094924926758

Token 137: ' Returns' (ID: 9609)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0007095710025168955
    2. ' return' → logprob: -7.375709533691406
    3. '   ' → logprob: -9.625709533691406
    4. 'r' → logprob: -11.250709533691406
    5. 'ret' → logprob: -12.875709533691406
    6. 're' → logprob: -14.625709533691406
    7. ' ' → logprob: -15.375709533691406
    8. 'n' → logprob: -15.500709533691406
    9. ':return' → logprob: -15.500709533691406
    10. '"""' → logprob: -16.000709533691406

Token 138: ':
' (ID: 734)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.08772280067205429
    2. 'int' → logprob: -2.7127227783203125
    3. '   ' → logprob: -4.8377227783203125
    4. ' ' → logprob: -5.5877227783203125
    5. '    ' → logprob: -6.5877227783203125
    6. ' :' → logprob: -6.8377227783203125
    7. ':int' → logprob: -6.9627227783203125
    8. ':' → logprob: -7.0877227783203125
    9. ' ' → logprob: -7.4627227783203125
    10. '  ' → logprob: -7.8377227783203125

Token 139: '       ' (ID: 309)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.020492488518357277
    2. 'int' → logprob: -4.0204925537109375
    3. '   ' → logprob: -6.1454925537109375
    4. ' n' → logprob: -9.520492553710938
    5. ' ' → logprob: -9.645492553710938
    6. '    ' → logprob: -10.270492553710938
    7. ' ' → logprob: -12.020492553710938
    8. 'n' → logprob: -12.520492553710938
    9. ':int' → logprob: -13.020492553710938
    10. '  ' → logprob: -13.270492553710938

Token 140: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' (adapté à ' int') → logprob: -0.003600544296205044
    2. ' int' → logprob: -5.628600597381592
    3. '   ' → logprob: -15.628600120544434
    4. 'in' → logprob: -16.50360107421875
    5. '(int' → logprob: -16.62860107421875
    6. '`' → logprob: -17.12860107421875
    7. 'i' → logprob: -17.12860107421875
    8. '[int' → logprob: -17.12860107421875
    9. 'n' → logprob: -17.25360107421875
    10. ':int' → logprob: -17.75360107421875

Token 141: ':' (ID: 25)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.002736639464274049
    2. '(' → logprob: -6.377736568450928
    3. '():' → logprob: -7.752736568450928
    4. '()
' → logprob: -8.127737045288086
    5. ':' → logprob: -9.127737045288086
    6. '(
' → logprob: -10.002737045288086
    7. '<|end|>' → logprob: -10.627737045288086
    8. ')' → logprob: -10.877737045288086
    9. '()`' → logprob: -11.002737045288086
    10. '()\' → logprob: -11.002737045288086

Token 142: ' La' (ID: 3038)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.023510070517659187
    2. 'int' → logprob: -3.773509979248047
    3. '   ' → logprob: -9.148509979248047
    4. ' ' → logprob: -9.398509979248047
    5. ' input' → logprob: -10.898509979248047
    6. '    ' → logprob: -11.273509979248047
    7. ' ' → logprob: -11.523509979248047
    8. '(int' → logprob: -11.898509979248047
    9. '=int' → logprob: -12.023509979248047
    10. ' n' → logprob: -12.398509979248047

Token 143: ' valeur' (ID: 41664)
  Prédit: ' valeur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' valeur' → logprob: -0.15818265080451965
    2. ' prochaine' → logprob: -2.0331826210021973
    3. 'val' → logprob: -4.908182621002197
    4. 'ent' → logprob: -6.283182621002197
    5. 'n' → logprob: -6.283182621002197
    6. ' ' → logprob: -7.158182621002197
    7. ' suivante' → logprob: -7.283182621002197
    8. 'int' → logprob: -7.783182621002197
    9. ' prochain' → logprob: -7.783182621002197
    10. ' entière' → logprob: -8.283183097839355

Token 144: ' entière' (ID: 61583)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 145: ' l' (ID: 305)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 146: 'ue' (ID: 466)
  Prédit: 'ue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -1.0564331205387134e-05
    2. 'u' → logprob: -11.62501049041748
    3. 'e' → logprob: -14.12501049041748
    4. 'ire' → logprob: -16.000011444091797
    5. 'ues' → logprob: -16.125011444091797
    6. '   ' → logprob: -16.375011444091797
    7. '#' → logprob: -16.500011444091797
    8. 'ecture' → logprob: -17.125011444091797
    9. 'us' → logprob: -17.250011444091797
    10. 'uée' → logprob: -17.250011444091797

Token 147: '.
' (ID: 558)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00882350280880928
    2. '()
' → logprob: -4.758823394775391
    3. '()`' → logprob: -9.88382339477539
    4. ' ()' → logprob: -10.00882339477539
    5. '()\' → logprob: -10.13382339477539
    6. '().' → logprob: -11.13382339477539
    7. '(' → logprob: -11.25882339477539
    8. '()

' → logprob: -11.75882339477539
    9. ')' → logprob: -12.00882339477539
    10. '();' → logprob: -12.63382339477539

Token 148: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6614775061607361
    2. '\n' → logprob: -1.6614775657653809
    3. ')' → logprob: -2.411477565765381
    4. '
' → logprob: -2.536477565765381
    5. '"""' → logprob: -2.911477565765381
    6. 'return' → logprob: -4.286477565765381
    7. '    
' → logprob: -4.536477565765381
    8. ' return' → logprob: -4.536477565765381
    9. '"""
' → logprob: -4.661477565765381
    10. '"' → logprob: -5.411477565765381

Token 149: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6186901926994324
    2. '"""' → logprob: -1.6186902523040771
    3. ')' → logprob: -1.7436902523040771
    4. 'return' → logprob: -3.243690252304077
    5. '
' → logprob: -3.993690252304077
    6. '\n' → logprob: -4.868690013885498
    7. ' return' → logprob: -4.868690013885498
    8. '"""
' (adapté à ' """
') → logprob: -5.243690013885498
    9. '    
' → logprob: -5.368690013885498
    10. ' 
' → logprob: -6.118690013885498

Token 150: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6965441703796387
    2. 'return' → logprob: -0.6965441703796387
    3. ' return' → logprob: -5.696544170379639
    4. 'ret' → logprob: -11.571544647216797
    5. 'r' → logprob: -11.821544647216797
    6. '	return' → logprob: -12.321544647216797
    7. '    
' → logprob: -13.071544647216797
    8. ' ' → logprob: -13.196544647216797
    9. '   ' → logprob: -13.196544647216797
    10. '  ' → logprob: -13.571544647216797

Token 151: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -3.2617008400848135e-05
    2. ' return' → logprob: -10.375032424926758
    3. '   ' → logprob: -13.750032424926758
    4. 'ret' → logprob: -15.250032424926758
    5. '	return' → logprob: -18.625032424926758
    6. 'r' → logprob: -18.750032424926758
    7. 'n' → logprob: -19.000032424926758
    8. 's' → logprob: -19.875032424926758
    9. 'try' → logprob: -20.125032424926758
    10. '    
' → logprob: -20.250032424926758

Token 152: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.0052605606615543365
    2. 'int' → logprob: -5.255260467529297
    3. ' ' → logprob: -10.630260467529297
    4. ' map' → logprob: -14.005260467529297
    5. ' in' → logprob: -14.505260467529297
    6. '  ' → logprob: -15.130260467529297
    7. '(int' → logprob: -15.255260467529297
    8. ' input' → logprob: -15.505260467529297
    9. '	int' → logprob: -15.630260467529297
    10. ' list' → logprob: -15.630260467529297

Token 153: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.25446441769599915
    2. '(' → logprob: -1.5044643878936768
    3. '(sys' → logprob: -6.004464626312256
    4. 'input' → logprob: -9.879464149475098
    5. '(
' → logprob: -11.629464149475098
    6. '(stdin' → logprob: -13.754464149475098
    7. '()' → logprob: -14.254464149475098
    8. ' (' → logprob: -14.629464149475098
    9. '(

' → logprob: -14.629464149475098
    10. '(inp' → logprob: -14.754464149475098

Token 154: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0027586298529058695
    2. '()' → logprob: -6.377758502960205
    3. '().' → logprob: -6.877758502960205
    4. '()))' → logprob: -11.377758979797363
    5. ' ())' → logprob: -11.752758979797363
    6. '(' → logprob: -13.002758979797363
    7. '())
' → logprob: -13.377758979797363
    8. '();)' → logprob: -14.502758979797363
    9. ')' → logprob: -14.627758979797363
    10. '()),' → logprob: -15.127758979797363

Token 155: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5657836198806763
    2. '
' → logprob: -1.1907836198806763
    3. '

' → logprob: -2.0657835006713867
    4. '
' → logprob: -7.440783500671387
    5. '


' → logprob: -8.440783500671387
    6. '\n' → logprob: -9.065783500671387
    7. ' def' → logprob: -9.440783500671387
    8. '  
' → logprob: -9.940783500671387
    9. '
    
' → logprob: -10.065783500671387
    10. ' 

' → logprob: -10.315783500671387

Token 156: ' in' (ID: 306)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8917601704597473
    2. 's' → logprob: -1.7667601108551025
    3. ' list' → logprob: -2.2667601108551025
    4. 'str' → logprob: -2.7667601108551025
    5. ' ' → logprob: -3.1417601108551025
    6. '_list' → logprob: -3.2667601108551025
    7. ' lst' → logprob: -3.8917601108551025
    8. ' input' → logprob: -4.016760349273682
    9. 'lst' → logprob: -4.266760349273682
    10. ' _' → logprob: -4.516760349273682

Token 157: 'pm' (ID: 6991)
  Prédit: 'put'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'put' → logprob: -0.0010418595047667623
    2. 't' → logprob: -7.126041889190674
    3. 'p' → logprob: -8.376041412353516
    4. 'pt' → logprob: -12.751041412353516
    5. 'puts' → logprob: -12.751041412353516
    6. 'pu' → logprob: -14.001041412353516
    7. 'it' → logprob: -16.001041412353516
    8. 'pute' → logprob: -16.626041412353516
    9. ' put' → logprob: -16.876041412353516
    10. 'ut' → logprob: -17.001041412353516

Token 158: '():
' (ID: 8595)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.033578045666217804
    2. '():' → logprob: -4.783577919006348
    3. 'ut' → logprob: -4.908577919006348
    4. 'ul' → logprob: -5.033577919006348
    5. '():
' → logprob: -5.533577919006348
    6. 't' → logprob: -6.033577919006348
    7. 'ult' → logprob: -6.533577919006348
    8. 'ap' → logprob: -7.158577919006348
    9. 'ulti' → logprob: -7.408577919006348
    10. 'atrix' → logprob: -8.533577919006348

Token 159: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.03271866217255592
    2. '()' → logprob: -3.6577186584472656
    3. '().' → logprob: -5.657718658447266
    4. '():
' → logprob: -6.032718658447266
    5. '()[' → logprob: -8.157718658447266
    6. ' ():' → logprob: -9.032718658447266
    7. ' ()' → logprob: -10.157718658447266
    8. '('' → logprob: -10.907718658447266
    9. '(' → logprob: -11.782718658447266
    10. ':' → logprob: -12.407718658447266

Token 160: ' """
' (ID: 7037)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.2636873126029968
    2. 'lambda' → logprob: -1.6386873722076416
    3. ' list' → logprob: -3.8886873722076416
    4. ' lambda' → logprob: -5.0136871337890625
    5. 'map' → logprob: -5.2636871337890625
    6. '   ' → logprob: -6.8886871337890625
    7. '()' → logprob: -7.5136871337890625
    8. '(lambda' → logprob: -7.6386871337890625
    9. '():' → logprob: -8.013687133789062
    10. ' map' → logprob: -8.138687133789062

Token 161: '   ' (ID: 271)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -1.0929092168807983
    2. '   ' → logprob: -1.4679092168807983
    3. '"""
' → logprob: -1.4679092168807983
    4. '"
' → logprob: -2.217909336090088
    5. '""' → logprob: -3.342909336090088
    6. '()' → logprob: -4.467909336090088
    7. '"""' → logprob: -4.592909336090088
    8. ' """
' → logprob: -4.842909336090088
    9. '()
' → logprob: -5.092909336090088
    10. '")' → logprob: -5.217909336090088

Token 162: ' Lit' (ID: 45595)
  Prédit: '"""
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""
' → logprob: -0.33754289150238037
    2. 'Lit' (adapté à ' Lit') → logprob: -1.5875428915023804
    3. ' Lit' → logprob: -2.96254301071167
    4. ' """
' → logprob: -5.46254301071167
    5. '"""' → logprob: -5.58754301071167
    6. '()
' → logprob: -5.58754301071167
    7. 'Lire' → logprob: -5.58754301071167
    8. '   ' → logprob: -5.58754301071167
    9. '()' → logprob: -6.08754301071167
    10. 'lit' → logprob: -6.33754301071167

Token 163: ' une' (ID: 2463)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.30974847078323364
    2. '()' → logprob: -1.8097484111785889
    3. '().' → logprob: -3.184748411178589
    4. ' une' → logprob: -3.434748411178589
    5. '():
' → logprob: -4.184748649597168
    6. ' la' → logprob: -6.184748649597168
    7. 'list' → logprob: -6.309748649597168
    8. 'une' → logprob: -6.309748649597168
    9. ' un' → logprob: -6.309748649597168
    10. ' list' → logprob: -6.684748649597168

Token 164: ' ligne' (ID: 19583)
  Prédit: ' liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.579119086265564
    2. 'liste' → logprob: -1.454119086265564
    3. 'ligne' → logprob: -2.3291192054748535
    4. ' ligne' → logprob: -2.3291192054748535
    5. 'l' → logprob: -5.8291192054748535
    6. 'list' → logprob: -6.0791192054748535
    7. 'map' → logprob: -6.7041192054748535
    8. ' list' → logprob: -7.2041192054748535
    9. ' map' → logprob: -7.2041192054748535
    10. 'val' → logprob: -7.5791192054748535

Token 165: ' d' (ID: 272)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.2307422161102295
    2. '()' → logprob: -1.6057422161102295
    3. '.strip' → logprob: -6.730742454528809
    4. '.split' → logprob: -6.980742454528809
    5. 'split' → logprob: -7.230742454528809
    6. ' de' → logprob: -7.355742454528809
    7. 'de' → logprob: -7.855742454528809
    8. ')' → logprob: -8.230742454528809
    9. ' complète' → logprob: -8.605742454528809
    10. ' ' → logprob: -8.730742454528809

Token 166: ''ent' (ID: 53422)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.703808605670929
    2. ' ent' → logprob: -2.078808546066284
    3. ''ent' → logprob: -2.078808546066284
    4. 'input' → logprob: -2.578808546066284
    5. 'entrée' → logprob: -2.703808546066284
    6. ''entrée' → logprob: -3.078808546066284
    7. ' input' → logprob: -3.203808546066284
    8. ' integers' → logprob: -4.953808784484863
    9. 'inte' → logprob: -5.078808784484863
    10. 'int' → logprob: -5.828808784484863

Token 167: 'iers' (ID: 11012)
  Prédit: 'rée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rée' → logprob: -0.1186458170413971
    2. 'r' → logprob: -2.2436459064483643
    3. 'ree' → logprob: -5.618645668029785
    4. 'ée' → logprob: -6.618645668029785
    5. 'rees' → logprob: -7.993645668029785
    6. 'ré' → logprob: -8.618645668029785
    7. 're' → logprob: -8.618645668029785
    8. 'ées' → logprob: -10.618645668029785
    9. 'rés' → logprob: -10.868645668029785
    10. 'rès' → logprob: -11.118645668029785

Token 168: ' sépar' (ID: 97160)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.012713411822915077
    2. '().' → logprob: -4.512713432312012
    3. '   ' → logprob: -7.887713432312012
    4. '():' → logprob: -8.262713432312012
    5. ' ()' → logprob: -8.387713432312012
    6. '()[' → logprob: -8.762713432312012
    7. ',' → logprob: -9.262713432312012
    8. '(),' → logprob: -9.762713432312012
    9. '.' → logprob: -9.762713432312012
    10. '():
' → logprob: -9.762713432312012

Token 169: 'és' (ID: 1756)
  Prédit: 'ée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.4377502202987671
    2. 'és' → logprob: -1.812750220298767
    3. 'par' → logprob: -2.3127503395080566
    4. ' par' → logprob: -2.4377503395080566
    5. 'ées' → logprob: -6.687750339508057
    6. 'es' → logprob: -7.187750339508057
    7. 'é' → logprob: -7.187750339508057
    8. 'ie' → logprob: -7.312750339508057
    9. 'by' → logprob: -7.687750339508057
    10. 'e' → logprob: -8.187749862670898

Token 170: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.1435348242521286
    2. 'par' → logprob: -2.0185348987579346
    3. '()' → logprob: -8.393534660339355
    4. '(par' → logprob: -8.518534660339355
    5. 'es' → logprob: -8.768534660339355
    6. 'e' → logprob: -9.268534660339355
    7. 'de' → logprob: -10.143534660339355
    8. ' ' → logprob: -10.518534660339355
    9. '('' → logprob: -10.768534660339355
    10. '   ' → logprob: -10.768534660339355

Token 171: ' un' (ID: 537)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'des' → logprob: -0.23933766782283783
    2. ' des' → logprob: -2.614337682723999
    3. 'un' → logprob: -2.864337682723999
    4. 'esp' → logprob: -2.989337682723999
    5. 'es' → logprob: -4.36433744430542
    6. ' espaces' → logprob: -4.86433744430542
    7. ' espace' → logprob: -6.23933744430542
    8. ''' → logprob: -6.36433744430542
    9. 'space' → logprob: -6.36433744430542
    10. ' un' → logprob: -6.61433744430542

Token 172: ' espace' (ID: 66004)
  Prédit: ' espace'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espace' → logprob: -0.5705151557922363
    2. 'es' → logprob: -1.1955151557922363
    3. ' espaces' → logprob: -2.5705151557922363
    4. ''espace' → logprob: -3.4455151557922363
    5. 'esp' → logprob: -4.445515155792236
    6. ' ' → logprob: -5.570515155792236
    7. 'space' → logprob: -6.320515155792236
    8. 's' → logprob: -6.445515155792236
    9. ''esp' → logprob: -6.695515155792236
    10. '’espace' → logprob: -6.945515155792236

Token 173: ' à' (ID: 1221)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3542948365211487
    2. '().' → logprob: -1.354294776916504
    3. '.' → logprob: -4.479294776916504
    4. ')' → logprob: -4.479294776916504
    5. 's' → logprob: -5.354294776916504
    6. ',' → logprob: -5.479294776916504
    7. '   ' → logprob: -5.854294776916504
    8. '()
' → logprob: -6.229294776916504
    9. ' et' → logprob: -6.854294776916504
    10. ').' → logprob: -7.479294776916504

Token 174: ' partir' (ID: 12100)
  Prédit: ' partir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' partir' → logprob: -0.14624720811843872
    2. 'input' → logprob: -2.771247148513794
    3. 'map' → logprob: -3.771247148513794
    4. ' input' → logprob: -4.396247386932373
    5. 'list' → logprob: -4.771247386932373
    6. 'l' → logprob: -4.771247386932373
    7. 'part' → logprob: -5.146247386932373
    8. 'return' → logprob: -6.271247386932373
    9. 'split' → logprob: -6.271247386932373
    10. ' map' → logprob: -6.646247386932373

Token 175: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.3591924011707306
    2. 'de' → logprob: -1.2341923713684082
    3. ' d' → logprob: -4.609192371368408
    4. 'def' → logprob: -8.109192848205566
    5. 'd' → logprob: -8.234192848205566
    6. '   ' → logprob: -9.359192848205566
    7. '()' → logprob: -10.859192848205566
    8. ' ' → logprob: -10.859192848205566
    9. 'e' → logprob: -11.984192848205566
    10. ')' → logprob: -11.984192848205566

Token 176: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.28801429271698
    2. 'input' → logprob: -1.91301429271698
    3. ' input' → logprob: -2.9130144119262695
    4. ' l' → logprob: -3.0380144119262695
    5. 'la' → logprob: -8.78801441192627
    6. '(input' → logprob: -10.16301441192627
    7. '=input' → logprob: -10.16301441192627
    8. 'entrée' → logprob: -10.91301441192627
    9. 'une' → logprob: -11.28801441192627
    10. '   ' → logprob: -11.41301441192627

Token 177: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.0005975929088890553
    2. 'entrée' → logprob: -8.250597953796387
    3. ''' → logprob: -8.500597953796387
    4. 'input' → logprob: -9.250597953796387
    5. '’entrée' → logprob: -11.750597953796387
    6. 'a' → logprob: -11.875597953796387
    7. ' input' → logprob: -12.125597953796387
    8. 'e' → logprob: -12.125597953796387
    9. ''ent' → logprob: -12.375597953796387
    10. ' entrée' → logprob: -12.875597953796387

Token 178: ' standard' (ID: 7024)
  Prédit: 'standard'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'standard' → logprob: -0.6590798497200012
    2. ' standard' → logprob: -1.1590797901153564
    3. '()' → logprob: -1.7840797901153564
    4. ')' → logprob: -7.9090800285339355
    5. '())' → logprob: -8.159079551696777
    6. '().' → logprob: -8.409079551696777
    7. ' ()' → logprob: -11.534079551696777
    8. ' стандарт' → logprob: -11.909079551696777
    9. '()
' → logprob: -12.034079551696777
    10. ' estándar' → logprob: -12.034079551696777

Token 179: '.

' (ID: 364)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.3841298520565033
    2. '.' → logprob: -1.7591298818588257
    3. '()' → logprob: -2.384129762649536
    4. ')' → logprob: -3.384129762649536
    5. ').' → logprob: -4.134130001068115
    6. '   ' → logprob: -6.384130001068115
    7. ',' → logprob: -6.634130001068115
    8. '.split' → logprob: -7.009130001068115
    9. ':' → logprob: -9.009129524230957
    10. 'def' → logprob: -9.134129524230957

Token 180: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0041479687206447124
    2. 'return' → logprob: -6.129148006439209
    3. ' return' → logprob: -7.504148006439209
    4. ')' → logprob: -7.504148006439209
    5. '    
' → logprob: -8.00414752960205
    6. '()
' → logprob: -8.87914752960205
    7. ')
' → logprob: -9.25414752960205
    8. '
' → logprob: -9.50414752960205
    9. '  
' → logprob: -10.12914752960205
    10. 'def' → logprob: -10.12914752960205

Token 181: ' Returns' (ID: 9609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5891216993331909
    2. 'return' → logprob: -0.8391216993331909
    3. ' return' → logprob: -4.3391218185424805
    4. ' ' → logprob: -11.83912181854248
    5. '    
' → logprob: -11.83912181854248
    6. 'def' → logprob: -11.96412181854248
    7. '
' → logprob: -12.08912181854248
    8. '  ' → logprob: -12.33912181854248
    9. '```' → logprob: -12.46412181854248
    10. '	return' → logprob: -12.71412181854248

Token 182: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48669537901878357
    2. ' list' → logprob: -1.236695408821106
    3. ':list' → logprob: -3.7366952896118164
    4. '=list' → logprob: -3.8616952896118164
    5. ':' → logprob: -4.236695289611816
    6. 'list' → logprob: -4.861695289611816
    7. '    ' → logprob: -5.111695289611816
    8. 'List' → logprob: -5.486695289611816
    9. '[]' → logprob: -5.736695289611816
    10. '[' → logprob: -5.861695289611816

Token 183: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010373443365097046
    2. ' list' → logprob: -4.635373592376709
    3. 'list' → logprob: -7.760373592376709
    4. 'List' → logprob: -9.88537311553955
    5. '       ' → logprob: -10.01037311553955
    6. '    ' → logprob: -10.13537311553955
    7. '    
' → logprob: -10.88537311553955
    8. '  ' → logprob: -11.63537311553955
    9. '[]' → logprob: -11.88537311553955
    10. '[' → logprob: -12.51037311553955

Token 184: ' tuple' (ID: 31311)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.009910731576383114
    2. 'List' → logprob: -5.009910583496094
    3. ' list' → logprob: -5.759910583496094
    4. '   ' → logprob: -10.384910583496094
    5. ' List' → logprob: -12.134910583496094
    6. '[list' → logprob: -13.884910583496094
    7. 'map' → logprob: -14.259910583496094
    8. '[List' → logprob: -14.759910583496094
    9. '_list' → logprob: -15.384910583496094
    10. '    ' → logprob: -16.634910583496094

Token 185: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0315801240503788
    2. '[int' → logprob: -3.5315802097320557
    3. '(int' → logprob: -6.906579971313477
    4. ' of' → logprob: -8.281579971313477
    5. '<int' → logprob: -8.781579971313477
    6. ':int' → logprob: -8.781579971313477
    7. ' :' → logprob: -9.281579971313477
    8. '):' → logprob: -9.531579971313477
    9. '(map' → logprob: -10.406579971313477
    10. '[' → logprob: -11.031579971313477

Token 186: ' Un' (ID: 1367)
  Prédit: ' map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.41925767064094543
    2. ' tuple' → logprob: -1.544257640838623
    3. 'map' → logprob: -2.169257640838623
    4. 'tuple' → logprob: -4.544257640838623
    5. '(tuple' → logprob: -6.669257640838623
    6. '   ' → logprob: -6.919257640838623
    7. '(map' → logprob: -6.919257640838623
    8. ' ' → logprob: -8.044258117675781
    9. '    ' → logprob: -8.544258117675781
    10. '  ' → logprob: -8.794258117675781

Token 187: ' tuple' (ID: 31311)
  Prédit: ' tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tuple' → logprob: -0.10542622953653336
    2. 'tuple' → logprob: -2.73042631149292
    3. ' map' → logprob: -4.60542631149292
    4. 's' → logprob: -5.10542631149292
    5. 'map' → logprob: -5.10542631149292
    6. ' ' → logprob: -5.73042631149292
    7. 'int' → logprob: -5.85542631149292
    8. '(tuple' → logprob: -6.48042631149292
    9. ' des' → logprob: -6.60542631149292
    10. '  ' → logprob: -6.85542631149292

Token 188: ' contenant' (ID: 131049)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.9113959670066833
    2. ' of' → logprob: -1.4113960266113281
    3. '<|end|>' → logprob: -1.9113960266113281
    4. '[int' → logprob: -2.411396026611328
    5. 'des' → logprob: -3.161396026611328
    6. '<int' → logprob: -3.911396026611328
    7. ' de' → logprob: -4.661396026611328
    8. '(int' → logprob: -4.786396026611328
    9. '(' → logprob: -5.036396026611328
    10. '[' → logprob: -5.161396026611328

Token 189: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.8074824213981628
    2. 'les' → logprob: -1.0574824810028076
    3. 'map' → logprob: -2.8074824810028076
    4. 'int' → logprob: -3.1824824810028076
    5. '(int' → logprob: -3.1824824810028076
    6. ' des' → logprob: -3.8074824810028076
    7. '[int' → logprob: -4.1824822425842285
    8. ' map' → logprob: -5.0574822425842285
    9. '(map' → logprob: -5.6824822425842285
    10. 'des' → logprob: -6.0574822425842285

Token 190: ' ent' (ID: 1121)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.5924800634384155
    2. 'int' → logprob: -1.0924800634384155
    3. 'ints' → logprob: -2.967480182647705
    4. ' ent' → logprob: -3.342480182647705
    5. 'inte' → logprob: -4.217480182647705
    6. ' int' → logprob: -5.217480182647705
    7. 'val' → logprob: -6.842480182647705
    8. ' integers' → logprob: -6.967480182647705
    9. 'map' → logprob: -7.092480182647705
    10. '[int' → logprob: -7.592480182647705

Token 191: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.0002330992283532396
    2. 'ières' → logprob: -9.250232696533203
    3. 'gers' → logprob: -9.500232696533203
    4. 'ers' → logprob: -10.875232696533203
    5. 'i' → logprob: -11.500232696533203
    6. 't' → logprob: -11.625232696533203
    7. 's' → logprob: -12.250232696533203
    8. '   ' → logprob: -12.375232696533203
    9. 'ints' → logprob: -12.875232696533203
    10. 'eurs' → logprob: -13.125232696533203

Token 192: ' lus' (ID: 54762)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 193: '.
' (ID: 558)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3729081451892853
    2. ')' → logprob: -1.622908115386963
    3. ',' → logprob: -2.247908115386963
    4. '=' → logprob: -6.247908115386963
    5. ' =' → logprob: -6.747908115386963
    6. '.' → logprob: -6.997908115386963
    7. '   ' → logprob: -7.122908115386963
    8. '(),' → logprob: -7.247908115386963
    9. ']' → logprob: -7.497908115386963
    10. '()
' → logprob: -8.122908592224121

Token 194: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012101413682103157
    2. '    
' → logprob: -5.012101650238037
    3. ')' → logprob: -6.262101650238037
    4. '
' → logprob: -6.887101650238037
    5. 'return' → logprob: -6.887101650238037
    6. '()' → logprob: -7.387101650238037
    7. '()
' → logprob: -8.512101173400879
    8. '  
' → logprob: -9.137101173400879
    9. '   
' → logprob: -9.387101173400879
    10. ' return' → logprob: -9.512101173400879

Token 195: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025694454088807106
    2. '    
' → logprob: -4.275694370269775
    3. 'return' → logprob: -5.150694370269775
    4. '
' → logprob: -5.650694370269775
    5. ' return' → logprob: -7.150694370269775
    6. ')' → logprob: -7.525694370269775
    7. '   
' → logprob: -8.275694847106934
    8. ' 
' → logprob: -8.650694847106934
    9. '  
' → logprob: -8.900694847106934
    10. '"""
' (adapté à ' """
') → logprob: -9.400694847106934

Token 196: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000654654751997441
    2. 'return' → logprob: -7.375654697418213
    3. ' return' → logprob: -10.750654220581055
    4. '	return' → logprob: -13.125654220581055
    5. '    
' → logprob: -13.250654220581055
    6. '   ' → logprob: -13.625654220581055
    7. '  ' → logprob: -14.750654220581055
    8. '       ' → logprob: -14.875654220581055
    9. '    ' → logprob: -15.375654220581055
    10. '
' → logprob: -16.375654220581055

Token 197: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0010711579816415906
    2. '   ' → logprob: -7.001070976257324
    3. ' return' → logprob: -8.751070976257324
    4. '    
' → logprob: -14.376070976257324
    5. '
' → logprob: -14.626070976257324
    6. '  ' → logprob: -16.25107192993164
    7. '	return' → logprob: -16.75107192993164
    8. ' ' → logprob: -17.37607192993164
    9. '```' → logprob: -18.00107192993164
    10. 's' → logprob: -18.12607192993164

Token 198: ' map' (ID: 4014)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.03405492380261421
    2. ' tuple' → logprob: -3.78405499458313
    3. 'map' → logprob: -4.534054756164551
    4. ' map' → logprob: -11.28405475616455
    5. '(tuple' → logprob: -14.03405475616455
    6. '   ' → logprob: -14.28405475616455
    7. '  ' → logprob: -16.284055709838867
    8. ' ' → logprob: -16.784055709838867
    9. 'tu' → logprob: -17.784055709838867
    10. '(map' → logprob: -19.034055709838867

Token 199: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.000431861262768507
    2. '(' → logprob: -7.750432014465332
    3. 'int' → logprob: -14.625432014465332
    4. '(in' → logprob: -14.875432014465332
    5. '[int' → logprob: -16.375431060791016
    6. '(
' → logprob: -16.500431060791016
    7. ' (' → logprob: -17.125431060791016
    8. '<int' → logprob: -17.125431060791016
    9. '=int' → logprob: -17.250431060791016
    10. '(i' → logprob: -18.375431060791016

Token 200: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.8087061643600464
    2. ',' → logprob: -1.3087061643600464
    3. '(input' → logprob: -1.3087061643600464
    4. 'input' → logprob: -4.933706283569336
    5. '(' → logprob: -5.808706283569336
    6. ')' → logprob: -5.933706283569336
    7. '(),' → logprob: -7.183706283569336
    8. ' (' → logprob: -8.183706283569336
    9. ' input' → logprob: -8.933706283569336
    10. '   ' → logprob: -9.433706283569336

Token 201: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0011715330183506012
    2. ' input' → logprob: -6.751171588897705
    3. ')' → logprob: -14.626171112060547
    4. '   ' → logprob: -15.001171112060547
    5. ' ' → logprob: -15.376171112060547
    6. '(input' → logprob: -15.626171112060547
    7. ',input' → logprob: -17.251171112060547
    8. '	input' → logprob: -17.376171112060547
    9. '  ' → logprob: -17.501171112060547
    10. '<input' → logprob: -17.626171112060547

Token 202: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.008129963040119e-06
    2. '()' → logprob: -12.625003814697266
    3. ' ().' → logprob: -14.625003814697266
    4. '(' → logprob: -16.250003814697266
    5. ')' → logprob: -17.875003814697266
    6. '())' → logprob: -18.375003814697266
    7. '.split' → logprob: -19.750003814697266
    8. '   ' → logprob: -20.750003814697266
    9. '()).' → logprob: -21.000003814697266
    10. ').' → logprob: -21.125003814697266

Token 203: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0015030752401798964
    2. 'strip' → logprob: -6.501502990722656
    3. ' split' → logprob: -15.001502990722656
    4. 'rstrip' → logprob: -15.001502990722656
    5. '(split' → logprob: -17.501502990722656
    6. ')' → logprob: -17.751502990722656
    7. 'spl' → logprob: -18.251502990722656
    8. 's' → logprob: -19.376502990722656
    9. '.split' → logprob: -20.126502990722656
    10. ' strip' → logprob: -20.501502990722656

Token 204: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0019989388529211283
    2. ')' → logprob: -6.5019989013671875
    3. '()' → logprob: -7.6269989013671875
    4. '()))' → logprob: -12.126998901367188
    5. '(' → logprob: -13.501998901367188
    6. '())
' → logprob: -13.751998901367188
    7. ' ())' → logprob: -14.001998901367188
    8. '))' → logprob: -14.501998901367188
    9. ' )' → logprob: -16.126998901367188
    10. '());' → logprob: -17.126998901367188

Token 205: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.002304650843143463
    2. '
' → logprob: -6.127304553985596
    3. '

' → logprob: -9.377305030822754
    4. '\' → logprob: -10.627305030822754
    5. 'd' → logprob: -12.377305030822754
    6. '\n' → logprob: -13.252305030822754
    7. '#' → logprob: -14.127305030822754
    8. '  
' → logprob: -14.252305030822754
    9. 'class' → logprob: -14.752305030822754
    10. ' 
' → logprob: -14.752305030822754

Token 206: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.23993100225925446
    2. ' in' → logprob: -2.239931106567383
    3. 'int' → logprob: -3.489931106567383
    4. 'input' → logprob: -3.489931106567383
    5. 'ins' → logprob: -4.489931106567383
    6. 'inp' → logprob: -4.864931106567383
    7. ' input' → logprob: -4.989931106567383
    8. 'n' → logprob: -5.364931106567383
    9. 'str' → logprob: -6.114931106567383
    10. ' inp' → logprob: -6.239931106567383

Token 207: 'pl' (ID: 528)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.025945035740733147
    2. 'p' → logprob: -3.775944948196411
    3. 'put' → logprob: -6.27594518661499
    4. 'pt' → logprob: -7.40094518661499
    5. 's' → logprob: -10.150944709777832
    6. '()' → logprob: -10.650944709777832
    7. 'pl' → logprob: -10.900944709777832
    8. 'pu' → logprob: -11.275944709777832
    9. 'tuple' → logprob: -11.275944709777832
    10. 'it' → logprob: -11.525944709777832

Token 208: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.6568218469619751
    2. '()' → logprob: -0.7818218469619751
    3. '():
' → logprob: -4.5318217277526855
    4. 'ist' → logprob: -4.7818217277526855
    5. 'ine' → logprob: -5.4068217277526855
    6. '():

' → logprob: -9.406822204589844
    7. '():
' → logprob: -9.531822204589844
    8. 'ines' → logprob: -10.406822204589844
    9. ' ()' → logprob: -10.906822204589844
    10. 'def' → logprob: -11.031822204589844

Token 209: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.08218638598918915
    2. '):' → logprob: -3.457186460494995
    3. ':' → logprob: -4.207186222076416
    4. '():
' → logprob: -4.207186222076416
    5. '   ' → logprob: -4.582186222076416
    6. '):
' → logprob: -6.207186222076416
    7. '[]' → logprob: -6.457186222076416
    8. '()' → logprob: -6.707186222076416
    9. ':
' → logprob: -7.457186222076416
    10. '[' → logprob: -7.957186222076416

Token 210: ' """
' (ID: 7037)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.08134887367486954
    2. 'return' → logprob: -2.8313488960266113
    3. 'lambda' → logprob: -4.581348896026611
    4. 'def' → logprob: -5.956348896026611
    5. 'map' → logprob: -6.081348896026611
    6. 'ist' → logprob: -6.456348896026611
    7. '):
' → logprob: -7.081348896026611
    8. '"""
' (adapté à ' """
') → logprob: -7.331348896026611
    9. '   ' → logprob: -7.706348896026611
    10. ' list' → logprob: -9.456348419189453

Token 211: '   ' (ID: 271)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.9366747140884399
    2. 'ist' → logprob: -1.31167471408844
    3. '   ' → logprob: -1.93667471408844
    4. ')' → logprob: -2.4366745948791504
    5. 'return' → logprob: -3.6866745948791504
    6. 'list' → logprob: -4.43667459487915
    7. 'st' → logprob: -4.56167459487915
    8. 'ine' → logprob: -4.68667459487915
    9. 't' → logprob: -4.68667459487915
    10. '"""
' → logprob: -4.81167459487915

Token 212: ' Lit' (ID: 45595)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6127036213874817
    2. '"""
' → logprob: -1.487703561782837
    3. 'return' → logprob: -1.612703561782837
    4. '   ' → logprob: -4.362703800201416
    5. '"""' → logprob: -4.862703800201416
    6. 'Lire' → logprob: -5.612703800201416
    7. 'Lit' (adapté à ' Lit') → logprob: -5.737703800201416
    8. '
' → logprob: -6.612703800201416
    9. '[]
' → logprob: -7.237703800201416
    10. 'Retour' → logprob: -7.612703800201416

Token 213: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.32312119007110596
    2. 'une' → logprob: -1.698121190071106
    3. 'a' → logprob: -3.1981210708618164
    4. ' list' → logprob: -4.323121070861816
    5. '   ' → logprob: -4.573121070861816
    6. ' a' → logprob: -4.573121070861816
    7. 'list' → logprob: -4.698121070861816
    8. 'int' → logprob: -5.823121070861816
    9. ' la' → logprob: -6.198121070861816
    10. 'ine' → logprob: -7.073121070861816

Token 214: ' ligne' (ID: 19583)
  Prédit: 'iste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'iste' → logprob: -0.5424047708511353
    2. 'liste' → logprob: -1.6674047708511353
    3. 'ist' → logprob: -2.1674046516418457
    4. 'ine' → logprob: -2.5424046516418457
    5. 'igne' → logprob: -4.292404651641846
    6. 'ligne' → logprob: -4.792404651641846
    7. 'list' → logprob: -4.917404651641846
    8. 'line' → logprob: -6.542404651641846
    9. ' liste' → logprob: -7.417404651641846
    10. 'is' → logprob: -7.417404651641846

Token 215: ' d' (ID: 272)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03027511015534401
    2. '   ' → logprob: -4.030275344848633
    3. 'de' → logprob: -5.905275344848633
    4. ' de' → logprob: -6.405275344848633
    5. '(' → logprob: -6.530275344848633
    6. '[]' → logprob: -6.655275344848633
    7. 'def' → logprob: -6.780275344848633
    8. '[int' → logprob: -7.655275344848633
    9. '(int' → logprob: -7.655275344848633
    10. '[' → logprob: -7.905275344848633

Token 216: ''ent' (ID: 53422)
  Prédit: ''ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ent' → logprob: -0.004580245818942785
    2. 'ent' → logprob: -5.879580020904541
    3. '_ent' → logprob: -7.379580020904541
    4. '’ent' → logprob: -7.379580020904541
    5. 'e' → logprob: -8.5045804977417
    6. ''entrée' → logprob: -9.0045804977417
    7. '(ent' → logprob: -9.5045804977417
    8. ' ent' → logprob: -9.7545804977417
    9. ''' → logprob: -10.8795804977417
    10. ''entre' → logprob: -11.5045804977417

Token 217: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.0008971701608970761
    2. 't' → logprob: -7.250897407531738
    3. 'ers' → logprob: -9.375897407531738
    4. 'ières' → logprob: -9.625897407531738
    5. 'ters' → logprob: -11.125897407531738
    6. 'tiers' → logprob: -12.500897407531738
    7. 'i' → logprob: -12.875897407531738
    8. 'gers' → logprob: -13.000897407531738
    9. 'ti' → logprob: -13.000897407531738
    10. 'ts' → logprob: -13.000897407531738

Token 218: ' sépar' (ID: 97160)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.24707813560962677
    2. 's' → logprob: -1.9970781803131104
    3. '[]' → logprob: -3.4970781803131104
    4. '_list' → logprob: -3.4970781803131104
    5. '_' → logprob: -4.872077941894531
    6. '   ' → logprob: -5.372077941894531
    7. '[' → logprob: -6.247077941894531
    8. '(' → logprob: -6.372077941894531
    9. ' =' → logprob: -6.997077941894531
    10. 'List' → logprob: -7.372077941894531

Token 219: 'és' (ID: 1756)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.703425407409668
    2. 'ie' → logprob: -0.703425407409668
    3. 'ée' → logprob: -5.453425407409668
    4. 'és' → logprob: -5.953425407409668
    5. 's' → logprob: -6.453425407409668
    6. 'e' → logprob: -8.328425407409668
    7. 'ar' → logprob: -8.578425407409668
    8. 'ies' → logprob: -8.703425407409668
    9. 'par' → logprob: -8.828425407409668
    10. 'é' → logprob: -9.453425407409668

Token 220: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.07904290407896042
    2. 'par' → logprob: -2.579042911529541
    3. '()' → logprob: -9.954042434692383
    4. '(par' → logprob: -10.204042434692383
    5. '_par' → logprob: -10.579042434692383
    6. 'by' → logprob: -10.954042434692383
    7. 'Par' → logprob: -11.454042434692383
    8. ' by' → logprob: -12.204042434692383
    9. 'def' → logprob: -12.829042434692383
    10. ',' → logprob: -12.954042434692383

Token 221: ' un' (ID: 537)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.18542130291461945
    2. ' un' → logprob: -2.5604212284088135
    3. 'space' → logprob: -3.6854212284088135
    4. ''' → logprob: -4.435421466827393
    5. ' espace' → logprob: -4.435421466827393
    6. 'es' → logprob: -4.435421466827393
    7. ''espace' → logprob: -4.560421466827393
    8. 'esp' → logprob: -4.685421466827393
    9. 'l' → logprob: -5.560421466827393
    10. ''un' → logprob: -5.935421466827393

Token 222: ' espace' (ID: 66004)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.7345241904258728
    2. ' espace' → logprob: -0.7345241904258728
    3. ''espace' → logprob: -3.9845242500305176
    4. 'esp' → logprob: -4.484524250030518
    5. 'space' → logprob: -5.109524250030518
    6. ' space' → logprob: -6.484524250030518
    7. '’espace' → logprob: -6.609524250030518
    8. ' espaces' → logprob: -6.984524250030518
    9. 'e' → logprob: -7.734524250030518
    10. 's' → logprob: -9.35952377319336

Token 223: ' et' (ID: 859)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.03612934798002243
    2. '   ' → logprob: -4.161129474639893
    3. 'à' → logprob: -4.536129474639893
    4. '()' → logprob: -5.286129474639893
    5. ')' → logprob: -6.411129474639893
    6. ',' → logprob: -7.286129474639893
    7. ' =' → logprob: -7.786129474639893
    8. ' ' → logprob: -7.786129474639893
    9. 'def' → logprob: -8.161128997802734
    10. ' en' → logprob: -9.036128997802734

Token 224: ' les' (ID: 1341)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6973283290863037
    2. ' retourne' → logprob: -1.3223283290863037
    3. 'ret' → logprob: -2.1973283290863037
    4. 'returns' → logprob: -2.8223283290863037
    5. ' returns' → logprob: -3.0723283290863037
    6. ' return' → logprob: -4.197328567504883
    7. 'ren' → logprob: -6.197328567504883
    8. 'r' → logprob: -8.072328567504883
    9. 'returned' → logprob: -8.822328567504883
    10. ' retour' → logprob: -8.822328567504883

Token 225: ' retourne' (ID: 178818)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2946769595146179
    2. ' retourne' → logprob: -1.7946770191192627
    3. 'ret' → logprob: -2.7946770191192627
    4. ' return' → logprob: -4.044676780700684
    5. 'convert' → logprob: -5.919676780700684
    6. ' transforme' → logprob: -6.044676780700684
    7. 'transform' → logprob: -6.544676780700684
    8. 'returns' → logprob: -6.794676780700684
    9. 'liste' → logprob: -7.169676780700684
    10. 'ren' → logprob: -7.169676780700684

Token 226: ' sous' (ID: 14487)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.7882816195487976
    2. ' sous' → logprob: -0.7882816195487976
    3. ' as' → logprob: -2.7882816791534424
    4. 's' → logprob: -4.288281440734863
    5. '[]' → logprob: -5.538281440734863
    6. 'as' → logprob: -5.538281440734863
    7. ' comme' → logprob: -5.663281440734863
    8. '   ' → logprob: -7.038281440734863
    9. ' ' → logprob: -7.413281440734863
    10. ' under' → logprob: -7.413281440734863

Token 227: ' forme' (ID: 27450)
  Prédit: ' forme'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' forme' → logprob: -0.214369535446167
    2. 'forme' → logprob: -1.964369535446167
    3. 'form' → logprob: -2.964369535446167
    4. ' form' → logprob: -7.964369773864746
    5. 'forma' → logprob: -8.214369773864746
    6. 'liste' → logprob: -8.214369773864746
    7. 'list' → logprob: -8.589369773864746
    8. ' forma' → logprob: -11.339369773864746
    9. '   ' → logprob: -11.964369773864746
    10. 'la' → logprob: -12.089369773864746

Token 228: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.10755166411399841
    2. ' d' → logprob: -2.4825515747070312
    3. 'de' → logprob: -4.232551574707031
    4. 'd' → logprob: -5.732551574707031
    5. ' list' → logprob: -8.232551574707031
    6. '[]' → logprob: -8.732551574707031
    7. 'def' → logprob: -9.482551574707031
    8. ' of' → logprob: -9.732551574707031
    9. '   ' → logprob: -10.232551574707031
    10. 'list' → logprob: -10.732551574707031

Token 229: ' liste' (ID: 31719)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.6081341505050659
    2. 'liste' → logprob: -0.8581341505050659
    3. ' list' → logprob: -3.9831342697143555
    4. ' liste' → logprob: -4.3581342697143555
    5. 'l' → logprob: -8.983134269714355
    6. 'une' → logprob: -9.983134269714355
    7. 'lista' → logprob: -10.233134269714355
    8. 'lst' → logprob: -11.108134269714355
    9. 'lis' → logprob: -11.983134269714355
    10. '[]' → logprob: -11.983134269714355

Token 230: '.

' (ID: 364)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.13504774868488312
    2. ':' → logprob: -2.760047674179077
    3. '()' → logprob: -3.135047674179077
    4. '   ' → logprob: -4.635047912597656
    5. '.' → logprob: -5.385047912597656
    6. '):' → logprob: -6.260047912597656
    7. '[int' → logprob: -6.885047912597656
    8. ')' → logprob: -7.635047912597656
    9. '():
' → logprob: -7.635047912597656
    10. ',' → logprob: -8.135047912597656

Token 231: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -4.060365608893335e-05
    2. '    
' → logprob: -11.250041007995605
    3. ')' → logprob: -12.000041007995605
    4. '```' → logprob: -12.500041007995605
    5. '()' → logprob: -12.750041007995605
    6. 'return' → logprob: -13.125041007995605
    7. '  ' → logprob: -13.250041007995605
    8. '
' → logprob: -13.250041007995605
    9. '[]' → logprob: -13.375041007995605
    10. ' return' → logprob: -13.375041007995605

Token 232: ' Returns' (ID: 9609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007150325924158096
    2. ' return' → logprob: -5.382150173187256
    3. 'return' → logprob: -6.007150173187256
    4. '    
' → logprob: -10.882150650024414
    5. '  ' → logprob: -11.382150650024414
    6. ' ' → logprob: -11.507150650024414
    7. '```' → logprob: -12.257150650024414
    8. '    ' → logprob: -12.382150650024414
    9. '  
' → logprob: -12.632150650024414
    10. ' 
' → logprob: -12.632150650024414

Token 233: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11229631304740906
    2. '   ' → logprob: -2.4872963428497314
    3. '[int' → logprob: -4.612296104431152
    4. ' :' → logprob: -5.112296104431152
    5. 'def' → logprob: -6.237296104431152
    6. ':int' → logprob: -6.862296104431152
    7. '[' → logprob: -7.362296104431152
    8. '[]' → logprob: -7.362296104431152
    9. ':list' → logprob: -7.487296104431152
    10. 'int' → logprob: -7.987296104431152

Token 234: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005682280287146568
    2. ':' → logprob: -6.630682468414307
    3. '       ' → logprob: -6.630682468414307
    4. '[]' → logprob: -7.255682468414307
    5. 'List' → logprob: -7.255682468414307
    6. 'def' → logprob: -7.880682468414307
    7. '[' → logprob: -8.130681991577148
    8. ':
' → logprob: -8.630681991577148
    9. '```' → logprob: -9.130681991577148
    10. '[List' → logprob: -9.380681991577148

Token 235: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' (adapté à ' list') → logprob: -0.0013036915333941579
    2. ' list' → logprob: -6.751303672790527
    3. 'List' → logprob: -9.001303672790527
    4. '   ' → logprob: -11.501303672790527
    5. '       ' → logprob: -17.126304626464844
    6. '[list' → logprob: -17.626304626464844
    7. ' List' → logprob: -18.251304626464844
    8. 'int' → logprob: -18.376304626464844
    9. ':list' → logprob: -18.876304626464844
    10. '_list' → logprob: -19.126304626464844

Token 236: ':' (ID: 25)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.00955184642225504
    2. '<int' → logprob: -5.509552001953125
    3. '(int' → logprob: -5.634552001953125
    4. ':' → logprob: -6.634552001953125
    5. ' of' → logprob: -8.634552001953125
    6. '=int' → logprob: -8.884552001953125
    7. 'int' → logprob: -9.009552001953125
    8. '<|end|>' → logprob: -10.009552001953125
    9. '[' → logprob: -10.759552001953125
    10. ' =' → logprob: -11.134552001953125

Token 237: ' La' (ID: 3038)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.10777774453163147
    2. '[int' → logprob: -2.4827778339385986
    3. 'list' → logprob: -4.4827775955200195
    4. 'int' → logprob: -5.2327775955200195
    5. ' int' → logprob: -7.4827775955200195
    6. ' [' → logprob: -7.4827775955200195
    7. 'List' → logprob: -8.60777759552002
    8. '   ' → logprob: -8.60777759552002
    9. '<int' → logprob: -8.73277759552002
    10. '[' → logprob: -9.23277759552002

Token 238: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.3058287799358368
    2. ' list' → logprob: -1.5558288097381592
    3. 'liste' → logprob: -3.305828809738159
    4. 'list' → logprob: -4.18082857131958
    5. ' ' → logprob: -8.680829048156738
    6. '[int' → logprob: -10.055829048156738
    7. ' lis' → logprob: -10.055829048156738
    8. 'l' → logprob: -10.305829048156738
    9. 'lis' → logprob: -10.555829048156738
    10. ' [' → logprob: -10.680829048156738

Token 239: ' des' (ID: 731)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.6151925921440125
    2. ' des' → logprob: -0.8651925921440125
    3. 'des' → logprob: -4.240192413330078
    4. '<int' → logprob: -4.240192413330078
    5. ' of' → logprob: -5.615192413330078
    6. '(int' → logprob: -6.615192413330078
    7. '[' → logprob: -6.740192413330078
    8. ' d' → logprob: -6.990192413330078
    9. ' de' → logprob: -7.365192413330078
    10. 'd' → logprob: -7.365192413330078

Token 240: ' ent' (ID: 1121)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.0187147855758667
    2. ' ent' → logprob: -1.2687147855758667
    3. 'ent' → logprob: -1.5187147855758667
    4. ' int' → logprob: -2.0187149047851562
    5. 'ints' → logprob: -5.768714904785156
    6. ' integers' → logprob: -6.143714904785156
    7. 'inte' → logprob: -8.143714904785156
    8. ' ints' → logprob: -8.643714904785156
    9. '[int' → logprob: -9.893714904785156
    10. ' entier' → logprob: -10.018714904785156

Token 241: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -4.787507714354433e-05
    2. 'ières' → logprob: -10.00004768371582
    3. 'i' → logprob: -13.62504768371582
    4. 'ints' → logprob: -15.00004768371582
    5. 'ier' → logprob: -15.25004768371582
    6. 'ires' → logprob: -15.62504768371582
    7. 'ers' → logprob: -16.25004768371582
    8. 'I' → logprob: -16.37504768371582
    9. ' ints' → logprob: -16.75004768371582
    10. 'ieurs' → logprob: -16.75004768371582

Token 242: ' lus' (ID: 54762)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -1.2877781391143799
    2. '_l' → logprob: -2.16277813911438
    3. ')' → logprob: -2.28777813911438
    4. ' l' → logprob: -2.41277813911438
    5. 's' → logprob: -2.53777813911438
    6. 'l' → logprob: -2.91277813911438
    7. '.' → logprob: -3.16277813911438
    8. '()' → logprob: -3.28777813911438
    9. '<|end|>' → logprob: -3.41277813911438
    10. '   ' → logprob: -3.78777813911438

Token 243: '.
' (ID: 558)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4938133656978607
    2. '.' → logprob: -1.243813395500183
    3. '().' → logprob: -2.6188132762908936
    4. ']' → logprob: -4.368813514709473
    5. '   ' → logprob: -4.868813514709473
    6. '()
' → logprob: -5.618813514709473
    7. '.
' → logprob: -6.118813514709473
    8. '].' → logprob: -7.243813514709473
    9. '().
' → logprob: -7.493813514709473
    10. ')' → logprob: -7.618813514709473

Token 244: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000940642727073282
    2. '
' → logprob: -8.500940322875977
    3. '"""' → logprob: -8.625940322875977
    4. ')' → logprob: -8.875940322875977
    5. '"""
' → logprob: -8.875940322875977
    6. '```' → logprob: -9.250940322875977
    7. '    
' → logprob: -9.500940322875977
    8. 'return' → logprob: -10.250940322875977
    9. '()
' → logprob: -11.000940322875977
    10. ')
' → logprob: -11.500940322875977

Token 245: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7600419521331787
    2. '"""
' (adapté à ' """
') → logprob: -0.7600419521331787
    3. '"""' → logprob: -2.7600419521331787
    4. '```' → logprob: -7.260042190551758
    5. 'return' → logprob: -8.885042190551758
    6. ')' → logprob: -9.010042190551758
    7. ' """
' → logprob: -9.010042190551758
    8. '"""

' → logprob: -9.260042190551758
    9. '""' → logprob: -10.260042190551758
    10. '  ' → logprob: -10.635042190551758

Token 246: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00011188744247192517
    2. 'return' → logprob: -9.25011157989502
    3. ' return' → logprob: -11.12511157989502
    4. '   ' → logprob: -14.62511157989502
    5. '	return' → logprob: -14.87511157989502
    6. '  ' → logprob: -16.875112533569336
    7. '```' → logprob: -16.875112533569336
    8. '       ' → logprob: -16.875112533569336
    9. '    ' → logprob: -17.750112533569336
    10. '   ' → logprob: -18.625112533569336

Token 247: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0007105246186256409
    2. ' return' → logprob: -7.250710487365723
    3. '   ' → logprob: -14.625710487365723
    4. 'list' → logprob: -16.00071144104004
    5. 'ret' → logprob: -18.87571144104004
    6. '	return' → logprob: -19.37571144104004
    7. '```' → logprob: -20.12571144104004
    8. 'eturn' → logprob: -20.25071144104004
    9. 'Return' → logprob: -21.25071144104004
    10. ':return' → logprob: -21.62571144104004

Token 248: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.10022187232971191
    2. ' list' → logprob: -2.350221872329712
    3. '[list' → logprob: -11.100221633911133
    4. '[' → logprob: -16.100221633911133
    5. '=list' → logprob: -18.350221633911133
    6. '	list' → logprob: -18.725221633911133
    7. '(list' → logprob: -18.975221633911133
    8. ' [' → logprob: -19.100221633911133
    9. 'List' → logprob: -19.100221633911133
    10. '[int' → logprob: -19.725221633911133

Token 249: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.00449325842782855
    2. '(' → logprob: -5.879493236541748
    3. '(int' → logprob: -6.754493236541748
    4. '(in' → logprob: -7.629493236541748
    5. '(input' → logprob: -10.879493713378906
    6. 'map' → logprob: -11.504493713378906
    7. '(list' → logprob: -13.004493713378906
    8. '(inp' → logprob: -13.254493713378906
    9. ' (' → logprob: -14.129493713378906
    10. ' map' → logprob: -14.754493713378906

Token 250: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0005006087594665587
    2. '(' → logprob: -7.625500679016113
    3. 'int' → logprob: -12.250500679016113
    4. ' (' → logprob: -12.625500679016113
    5. '<int' → logprob: -12.875500679016113
    6. '=int' → logprob: -14.375500679016113
    7. '[int' → logprob: -14.875500679016113
    8. '(in' → logprob: -15.125500679016113
    9. ',int' → logprob: -15.250500679016113
    10. '(
' → logprob: -15.500500679016113

Token 251: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003217879915609956
    2. ',input' → logprob: -5.753217697143555
    3. '(input' → logprob: -10.628217697143555
    4. ' ,' → logprob: -11.253217697143555
    5. '(' → logprob: -13.253217697143555
    6. 'input' → logprob: -13.878217697143555
    7. ',int' → logprob: -15.628217697143555
    8. '```' → logprob: -17.503217697143555
    9. ' input' → logprob: -17.628217697143555
    10. ',
' → logprob: -17.878217697143555

Token 252: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.02978578582406044
    2. ' input' → logprob: -3.5297858715057373
    3. '(input' → logprob: -10.404786109924316
    4. '<input' → logprob: -13.904786109924316
    5. ',input' → logprob: -13.904786109924316
    6. ')' → logprob: -14.029786109924316
    7. '=input' → logprob: -14.279786109924316
    8. '[input' → logprob: -14.529786109924316
    9. ' ' → logprob: -15.029786109924316
    10. '	input' → logprob: -15.404786109924316

Token 253: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.8889261304575484e-06
    2. '()' → logprob: -12.875003814697266
    3. ',' → logprob: -14.250003814697266
    4. '(),' → logprob: -15.250003814697266
    5. '(' → logprob: -15.625003814697266
    6. ' ().' → logprob: -16.375003814697266
    7. '()
' → logprob: -16.875003814697266
    8. '.split' → logprob: -18.000003814697266
    9. '   ' → logprob: -19.375003814697266
    10. '()))' → logprob: -19.625003814697266

Token 254: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.45848218582978e-06
    2. ' split' → logprob: -13.37500286102295
    3. ')' → logprob: -15.00000286102295
    4. 'strip' → logprob: -15.37500286102295
    5. '(split' → logprob: -15.37500286102295
    6. 'rstrip' → logprob: -17.375001907348633
    7. 'plit' → logprob: -18.000001907348633
    8. 'spl' → logprob: -18.000001907348633
    9. '.split' → logprob: -18.250001907348633
    10. '_split' → logprob: -18.625001907348633

Token 255: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.01848761737346649
    2. '))' → logprob: -4.018487453460693
    3. '()' → logprob: -8.268487930297852
    4. '())' → logprob: -9.893487930297852
    5. '()))
' → logprob: -10.518487930297852
    6. '(' → logprob: -13.268487930297852
    7. '()))

' → logprob: -14.393487930297852
    8. '()));' → logprob: -14.893487930297852
    9. '())))' → logprob: -15.643487930297852
    10. ')' → logprob: -15.643487930297852

Token 256: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00022713904036208987
    2. 'class' → logprob: -8.875226974487305
    3. '
' → logprob: -9.500226974487305
    4. '#' → logprob: -12.500226974487305
    5. '

' → logprob: -12.500226974487305
    6. '\' → logprob: -12.750226974487305
    7. 'n' → logprob: -14.375226974487305
    8. ' def' → logprob: -15.125226974487305
    9. 'ndef' → logprob: -15.250226974487305
    10. 'd' → logprob: -15.375226974487305

Token 257: ' in' (ID: 306)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.7191002368927002
    2. ' in' → logprob: -1.8441002368927002
    3. 'in' → logprob: -2.3441002368927
    4. 'str' → logprob: -2.7191002368927
    5. 'main' → logprob: -2.9691002368927
    6. ' solve' → logprob: -3.5941002368927
    7. ' out' → logprob: -4.219099998474121
    8. 'solve' → logprob: -4.344099998474121
    9. ' str' → logprob: -4.469099998474121
    10. ' input' → logprob: -4.594099998474121

Token 258: 'pls' (ID: 118628)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.5775985717773438
    2. 't' → logprob: -1.0775985717773438
    3. 's' → logprob: -2.7025985717773438
    4. 'pl' → logprob: -3.9525985717773438
    5. 'put' → logprob: -4.702598571777344
    6. 'l' → logprob: -7.577598571777344
    7. 'q' → logprob: -7.827598571777344
    8. 'r' → logprob: -8.077598571777344
    9. 'pt' → logprob: -8.452598571777344
    10. '():
' → logprob: -8.577598571777344

Token 259: '():
' (ID: 8595)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.12755873799324036
    2. '():' → logprob: -2.127558708190918
    3. ' ()' → logprob: -7.627558708190918
    4. '():
' → logprob: -9.502558708190918
    5. '()>' → logprob: -10.627558708190918
    6. '()">' → logprob: -12.127558708190918
    7. '():

' → logprob: -12.127558708190918
    8. '()]' → logprob: -12.377558708190918
    9. '().' → logprob: -12.752558708190918
    10. '()`' → logprob: -12.877558708190918

Token 260: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.026714984327554703
    2. '():
' → logprob: -3.651715040206909
    3. '()' → logprob: -7.90171480178833
    4. '():
' → logprob: -11.151715278625488
    5. ' ():' → logprob: -11.776715278625488
    6. 'def' → logprob: -12.151715278625488
    7. '   ' → logprob: -12.276715278625488
    8. '()[' → logprob: -12.776715278625488
    9. '():

' → logprob: -12.776715278625488
    10. '):' → logprob: -13.151715278625488

Token 261: ' """
' (ID: 7037)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.5385271310806274
    2. '()' → logprob: -1.2885271310806274
    3. '():
' → logprob: -3.288527011871338
    4. '):' → logprob: -3.288527011871338
    5. ')' → logprob: -3.538527011871338
    6. 'def' → logprob: -4.413527011871338
    7. 'list' → logprob: -4.788527011871338
    8. '):
' → logprob: -5.413527011871338
    9. '   ' → logprob: -5.663527011871338
    10. 'return' → logprob: -6.163527011871338

Token 262: '   ' (ID: 271)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -1.0806729793548584
    2. '():' → logprob: -1.0806729793548584
    3. '):
' → logprob: -2.3306729793548584
    4. '   ' → logprob: -2.7056729793548584
    5. '():
' → logprob: -2.8306729793548584
    6. ')' → logprob: -3.3306729793548584
    7. '()' → logprob: -3.8306729793548584
    8. '"' → logprob: -4.4556732177734375
    9. '"""
' → logprob: -4.7056732177734375
    10. '"""' → logprob: -4.7056732177734375

Token 263: ' Lit' (ID: 45595)
  Prédit: '"""
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""
' → logprob: -0.4346138834953308
    2. 'return' → logprob: -1.9346139430999756
    3. 'def' → logprob: -1.9346139430999756
    4. '   ' → logprob: -2.8096139430999756
    5. '"""' → logprob: -5.9346137046813965
    6. ' return' → logprob: -8.184614181518555
    7. 'list' → logprob: -9.059614181518555
    8. ' """
' → logprob: -9.559614181518555
    9. '""' → logprob: -10.309614181518555
    10. '    
' → logprob: -10.559614181518555

Token 264: ' une' (ID: 2463)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.06445178389549255
    2. 'list' → logprob: -3.5644516944885254
    3. '()' → logprob: -4.189451694488525
    4. 's' → logprob: -5.564451694488525
    5. 'a' → logprob: -5.689451694488525
    6. '   ' → logprob: -5.814451694488525
    7. '():' → logprob: -5.939451694488525
    8. ')' → logprob: -6.564451694488525
    9. 'line' → logprob: -6.564451694488525
    10. 'str' → logprob: -7.189451694488525

Token 265: ' ligne' (ID: 19583)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.8877565264701843
    2. 'string' → logprob: -1.387756586074829
    3. 'list' → logprob: -2.137756586074829
    4. 'str' → logprob: -2.137756586074829
    5. '()' → logprob: -3.762756586074829
    6. 'ligne' → logprob: -4.01275634765625
    7. 'input' → logprob: -4.26275634765625
    8. 's' → logprob: -4.51275634765625
    9. 'ine' → logprob: -4.63775634765625
    10. 'liste' → logprob: -5.38775634765625

Token 266: ' d' (ID: 272)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.2986038029193878
    2. '()' → logprob: -1.4236037731170654
    3. 's' → logprob: -4.4236040115356445
    4. 'de' → logprob: -6.0486040115356445
    5. 'def' → logprob: -7.2986040115356445
    6. 'str' → logprob: -7.2986040115356445
    7. '   ' → logprob: -8.423604011535645
    8. 'd' → logprob: -8.423604011535645
    9. '()
' → logprob: -8.548604011535645
    10. ' de' → logprob: -8.798604011535645

Token 267: ''' (ID: 6)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'str' → logprob: -1.0616806745529175
    2. '()' → logprob: -1.5616806745529175
    3. 'string' → logprob: -1.8116806745529175
    4. 'e' → logprob: -2.811680793762207
    5. 'tring' → logprob: -3.311680793762207
    6. '(str' → logprob: -3.311680793762207
    7. 's' → logprob: -3.311680793762207
    8. '_' → logprob: -3.561680793762207
    9. '_str' → logprob: -3.811680793762207
    10. 'es' → logprob: -4.561680793762207

Token 268: 'entr' (ID: 12792)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.7615651488304138
    2. 'string' → logprob: -1.0115652084350586
    3. 'input' → logprob: -2.0115652084350586
    4. 'ent' → logprob: -3.8865652084350586
    5. 'strings' → logprob: -4.636565208435059
    6. 's' → logprob: -6.261565208435059
    7. 'int' → logprob: -7.011565208435059
    8. 'chaine' → logprob: -7.261565208435059
    9. 'n' → logprob: -8.011565208435059
    10. 'e' → logprob: -8.261565208435059

Token 269: 'ées' (ID: 5161)
  Prédit: 'ée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.05479832738637924
    2. 'ées' → logprob: -3.0547983646392822
    3. 'ees' → logprob: -5.679798126220703
    4. 'ee' → logprob: -6.054798126220703
    5. 'e' → logprob: -8.054798126220703
    6. 'es' → logprob: -9.554798126220703
    7. 'é' → logprob: -10.304798126220703
    8. 'eed' → logprob: -12.554798126220703
    9. 'ies' → logprob: -13.679798126220703
    10. 'er' → logprob: -13.929798126220703

Token 270: ' sépar' (ID: 97160)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.9708033204078674
    2. '()' → logprob: -1.4708032608032227
    3. '   ' → logprob: -1.5958032608032227
    4. 'str' → logprob: -2.9708032608032227
    5. 's' → logprob: -3.0958032608032227
    6. 'string' → logprob: -3.3458032608032227
    7. 'de' → logprob: -3.4708032608032227
    8. ' =' → logprob: -5.595803260803223
    9. ',' → logprob: -5.720803260803223
    10. ' de' → logprob: -5.845803260803223

Token 271: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.04545988515019417
    2. 'ée' → logprob: -3.6704599857330322
    3. 'par' → logprob: -5.045459747314453
    4. 'é' → logprob: -5.170459747314453
    5. ' par' → logprob: -5.420459747314453
    6. 'er' → logprob: -6.170459747314453
    7. 'es' → logprob: -9.295459747314453
    8. 'és' → logprob: -9.670459747314453
    9. 'ed' → logprob: -10.170459747314453
    10. 'è' → logprob: -10.920459747314453

Token 272: ' par' (ID: 686)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.02975395694375038
    2. ' par' → logprob: -3.5297539234161377
    3. '_par' → logprob: -13.779753684997559
    4. ' ' → logprob: -14.279753684997559
    5. '(par' → logprob: -14.404753684997559
    6. 'Par' → logprob: -15.029753684997559
    7. '	par' → logprob: -15.404753684997559
    8. 'by' → logprob: -15.404753684997559
    9. '   ' → logprob: -16.154754638671875
    10. ',' → logprob: -16.279754638671875

Token 273: ' un' (ID: 537)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.35859644412994385
    2. ''' → logprob: -2.3585963249206543
    3. 'esp' → logprob: -2.9835963249206543
    4. ' un' → logprob: -3.2335963249206543
    5. '"' → logprob: -3.6085963249206543
    6. ''un' → logprob: -3.7335963249206543
    7. ''espace' → logprob: -3.7335963249206543
    8. 'es' → logprob: -4.233596324920654
    9. ' espace' → logprob: -4.983596324920654
    10. 'space' → logprob: -5.483596324920654

Token 274: ' espace' (ID: 66004)
  Prédit: ' espace'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espace' → logprob: -0.8349186182022095
    2. ''espace' → logprob: -1.2099186182022095
    3. 'es' → logprob: -1.5849186182022095
    4. 'esp' → logprob: -3.08491849899292
    5. ' espaces' → logprob: -5.58491849899292
    6. '’espace' → logprob: -5.83491849899292
    7. ''esp' → logprob: -5.83491849899292
    8. 'space' → logprob: -5.95991849899292
    9. '"' → logprob: -5.95991849899292
    10. ''' → logprob: -6.45991849899292

Token 275: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03616522252559662
    2. 'def' → logprob: -4.661165237426758
    3. '.' → logprob: -4.786165237426758
    4. '()' → logprob: -5.036165237426758
    5. ')' → logprob: -5.786165237426758
    6. 'et' → logprob: -6.036165237426758
    7. ' et' → logprob: -6.411165237426758
    8. ',' → logprob: -6.661165237426758
    9. '().' → logprob: -7.036165237426758
    10. 's' → logprob: -7.911165237426758

Token 276: ' les' (ID: 1341)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.3875107765197754
    2. 'ret' → logprob: -1.1375107765197754
    3. ' retourne' → logprob: -8.387510299682617
    4. '   ' → logprob: -8.762510299682617
    5. 'returns' → logprob: -9.012510299682617
    6. 'les' → logprob: -10.012510299682617
    7. 'ren' → logprob: -10.137510299682617
    8. 'Retour' → logprob: -11.637510299682617
    9. ' return' → logprob: -11.762510299682617
    10. '{return' → logprob: -12.387510299682617

Token 277: ' retourne' (ID: 178818)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.3140329420566559
    2. 'ret' → logprob: -1.3140329122543335
    3. ' retourne' → logprob: -7.439033031463623
    4. '   ' → logprob: -9.314032554626465
    5. ' return' → logprob: -10.314032554626465
    6. 'Retour' → logprob: -11.064032554626465
    7. 'returns' → logprob: -11.439032554626465
    8. 'returned' → logprob: -11.939032554626465
    9. 'ren' → logprob: -12.314032554626465
    10. 'split' → logprob: -12.439032554626465

Token 278: ' sous' (ID: 14487)
  Prédit: ' sous'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sous' → logprob: -0.8703256845474243
    2. ' list' → logprob: -1.3703256845474243
    3. 'list' → logprob: -1.8703256845474243
    4. '   ' → logprob: -1.9953256845474243
    5. 'def' → logprob: -4.745325565338135
    6. '.split' → logprob: -4.995325565338135
    7. 'split' → logprob: -5.370325565338135
    8. 's' → logprob: -5.370325565338135
    9. ' en' → logprob: -5.870325565338135
    10. ' as' → logprob: -6.620325565338135

Token 279: ' forme' (ID: 27450)
  Prédit: 'form'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'form' → logprob: -0.3919888734817505
    2. 'forme' → logprob: -1.3919888734817505
    3. ' forme' → logprob: -2.641988754272461
    4. ' form' → logprob: -6.141988754272461
    5. 'forma' → logprob: -7.141988754272461
    6. 'str' → logprob: -8.016988754272461
    7. 'liste' → logprob: -8.016988754272461
    8. 'format' → logprob: -8.141988754272461
    9. 'f' → logprob: -8.391988754272461
    10. 'list' → logprob: -8.641988754272461

Token 280: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.02392975240945816
    2. 'de' → logprob: -4.148929595947266
    3. 'def' → logprob: -5.898929595947266
    4. 'str' → logprob: -6.148929595947266
    5. 'd' → logprob: -6.773929595947266
    6. '[str' → logprob: -7.148929595947266
    7. ' d' → logprob: -8.398929595947266
    8. 's' → logprob: -8.523929595947266
    9. 'list' → logprob: -9.273929595947266
    10. '=str' → logprob: -9.398929595947266

Token 281: ' liste' (ID: 31719)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.007133162580430508
    2. 'str' → logprob: -5.0071330070495605
    3. 'liste' → logprob: -8.007133483886719
    4. 'strings' → logprob: -10.007133483886719
    5. ' list' → logprob: -10.757133483886719
    6. 'string' → logprob: -11.007133483886719
    7. 's' → logprob: -13.882133483886719
    8. '[str' → logprob: -15.007133483886719
    9. 'lis' → logprob: -16.00713348388672
    10. 'lista' → logprob: -16.50713348388672

Token 282: ' de' (ID: 334)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.31953009963035583
    2. '   ' → logprob: -1.9445301294326782
    3. 'def' → logprob: -2.3195300102233887
    4. '[str' → logprob: -3.5695300102233887
    5. '.' → logprob: -6.819530010223389
    6. '()
' → logprob: -7.194530010223389
    7. '[]' → logprob: -7.819530010223389
    8. 'de' → logprob: -8.069530487060547
    9. 'of' → logprob: -8.194530487060547
    10. '[' → logprob: -8.194530487060547

Token 283: ' chaînes' (ID: 179904)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.0009608853724785149
    2. 'strings' → logprob: -7.000960826873779
    3. 'string' → logprob: -10.500961303710938
    4. ' chaînes' → logprob: -11.625961303710938
    5. 'chain' → logprob: -11.750961303710938
    6. 'chaine' → logprob: -12.625961303710938
    7. ' str' → logprob: -14.125961303710938
    8. 'cha' → logprob: -15.125961303710938
    9. 'chains' → logprob: -15.500961303710938
    10. 'stri' → logprob: -15.500961303710938

Token 284: '.

' (ID: 364)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.7037674784660339
    2. 'de' → logprob: -0.9537674784660339
    3. '()' → logprob: -3.3287675380706787
    4. '[str' → logprob: -3.4537675380706787
    5. '(str' → logprob: -4.7037672996521
    6. 'str' → logprob: -4.7037672996521
    7. 's' → logprob: -5.0787672996521
    8. '(strings' → logprob: -5.0787672996521
    9. 'def' → logprob: -5.5787672996521
    10. 'strings' → logprob: -5.7037672996521

Token 285: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -2.8206473871250637e-05
    2. 'def' → logprob: -11.375028610229492
    3. '    
' → logprob: -11.500028610229492
    4. '```' → logprob: -13.500028610229492
    5. '
' → logprob: -13.625028610229492
    6. '    ' → logprob: -14.125028610229492
    7. '  ' → logprob: -14.125028610229492
    8. '       ' → logprob: -14.500028610229492
    9. '<|end|>' → logprob: -14.750028610229492
    10. ' ' → logprob: -15.125028610229492

Token 286: ' Returns' (ID: 9609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00025549851125106215
    2. 'def' → logprob: -8.750255584716797
    3. '```' → logprob: -9.500255584716797
    4. 'return' → logprob: -11.125255584716797
    5. '
' → logprob: -12.875255584716797
    6. '    
' → logprob: -13.500255584716797
    7. '  ' → logprob: -14.125255584716797
    8. '"""
' → logprob: -14.125255584716797
    9. ' ' → logprob: -14.375255584716797
    10. '    ' → logprob: -14.625255584716797

Token 287: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03982912376523018
    2. '   ' → logprob: -3.4148290157318115
    3. ':
' → logprob: -5.289829254150391
    4. '():' → logprob: -7.789829254150391
    5. ' :' → logprob: -8.41482925415039
    6. '[' → logprob: -8.66482925415039
    7. 'def' → logprob: -9.91482925415039
    8. '):' → logprob: -10.16482925415039
    9. '<|end|>' → logprob: -10.16482925415039
    10. '():
' → logprob: -10.53982925415039

Token 288: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001212614355608821
    2. '[
' → logprob: -7.8762125968933105
    3. '[' → logprob: -8.376213073730469
    4. ':' → logprob: -8.501213073730469
    5. '       ' → logprob: -8.876213073730469
    6. '[]' → logprob: -9.251213073730469
    7. ':
' → logprob: -10.001213073730469
    8. '```' → logprob: -10.001213073730469
    9. 'def' → logprob: -10.626213073730469
    10. '    ' → logprob: -11.626213073730469

Token 289: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' (adapté à ' list') → logprob: -2.975612187583465e-05
    2. ' list' → logprob: -10.750029563903809
    3. '   ' → logprob: -11.750029563903809
    4. 'List' → logprob: -15.500029563903809
    5. '[list' → logprob: -16.250030517578125
    6. '```' → logprob: -19.250030517578125
    7. '	list' → logprob: -19.750030517578125
    8. '       ' → logprob: -20.250030517578125
    9. '[
' → logprob: -20.500030517578125
    10. 'def' → logprob: -21.000030517578125

Token 290: ':' (ID: 25)
  Prédit: '[str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -0.0944872722029686
    2. ':' → logprob: -2.719487190246582
    3. '(str' → logprob: -4.594487190246582
    4. ':str' → logprob: -5.094487190246582
    5. '<|end|>' → logprob: -5.344487190246582
    6. '=str' → logprob: -7.219487190246582
    7. ')' → logprob: -7.844487190246582
    8. '[' → logprob: -8.344487190246582
    9. '(strings' → logprob: -8.344487190246582
    10. 'def' → logprob: -8.719487190246582

Token 291: ' La' (ID: 3038)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.260578453540802
    2. 'input' → logprob: -2.0105783939361572
    3. ' list' → logprob: -2.5105783939361572
    4. 'str' → logprob: -4.635578632354736
    5. ' input' → logprob: -5.635578632354736
    6. '[str' → logprob: -8.385578155517578
    7. ' str' → logprob: -8.385578155517578
    8. '[input' → logprob: -8.510578155517578
    9. '   ' → logprob: -8.885578155517578
    10. 'string' → logprob: -9.135578155517578

Token 292: ' liste' (ID: 31719)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.37384599447250366
    2. '[str' → logprob: -1.2488460540771484
    3. 'strings' → logprob: -4.373846054077148
    4. 'list' → logprob: -5.373846054077148
    5. ' str' → logprob: -5.623846054077148
    6. 's' → logprob: -6.498846054077148
    7. 'string' → logprob: -6.873846054077148
    8. ' list' → logprob: -7.373846054077148
    9. '[string' → logprob: -7.998846054077148
    10. ' strings' → logprob: -7.998846054077148

Token 293: ' des' (ID: 731)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 294: ' chaînes' (ID: 179904)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.027676483616232872
    2. ' chaînes' → logprob: -3.777676582336426
    3. 'strings' → logprob: -5.527676582336426
    4. ' str' → logprob: -8.527676582336426
    5. 'cha' → logprob: -9.277676582336426
    6. 'string' → logprob: -9.652676582336426
    7. 'chain' → logprob: -9.777676582336426
    8. ' strings' → logprob: -11.027676582336426
    9. ' chain' → logprob: -11.652676582336426
    10. 'chaine' → logprob: -12.777676582336426

Token 295: ' l' (ID: 305)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6340814232826233
    2. ']' → logprob: -0.8840814232826233
    3. '()]' → logprob: -4.2590813636779785
    4. 's' → logprob: -4.2590813636779785
    5. ')' → logprob: -5.1340813636779785
    6. '[str' → logprob: -5.1340813636779785
    7. '(' → logprob: -5.7590813636779785
    8. '[' → logprob: -6.3840813636779785
    9. 'de' → logprob: -6.5090813636779785
    10. '(strings' → logprob: -6.6340813636779785

Token 296: 'ues' (ID: 1406)
  Prédit: 'ues'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ues' → logprob: -0.0007881867350079119
    2. 'us' → logprob: -8.000787734985352
    3. 'u' → logprob: -8.500787734985352
    4. 'ue' → logprob: -8.625787734985352
    5. 'istes' → logprob: -10.500787734985352
    6. 'es' → logprob: -11.000787734985352
    7. '```' → logprob: -11.375787734985352
    8. 'ist' → logprob: -12.250787734985352
    9. '#' → logprob: -13.250787734985352
    10. 'is' → logprob: -13.375787734985352

Token 297: '.
' (ID: 558)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.201081320643425
    2. '   ' → logprob: -2.4510812759399414
    3. ')' → logprob: -3.2010812759399414
    4. '.' → logprob: -3.4510812759399414
    5. ']' → logprob: -4.451081275939941
    6. '()]' → logprob: -5.826081275939941
    7. 'def' → logprob: -6.326081275939941
    8. '()
' → logprob: -6.326081275939941
    9. '```' → logprob: -6.576081275939941
    10. '().' → logprob: -6.951081275939941

Token 298: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020285168662667274
    2. '"""
' → logprob: -4.145285129547119
    3. '"""' → logprob: -5.645285129547119
    4. '```' → logprob: -8.520285606384277
    5. '""' → logprob: -8.895285606384277
    6. '()' → logprob: -9.020285606384277
    7. ')' → logprob: -9.270285606384277
    8. ']' → logprob: -10.520285606384277
    9. '    
' → logprob: -11.020285606384277
    10. '
' → logprob: -11.145285606384277

Token 299: ' """
' (ID: 7037)
  Prédit: '"""
'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""
' (adapté à ' """
') → logprob: -0.5776110291481018
    2. '   ' → logprob: -1.077610969543457
    3. '"""' → logprob: -2.327610969543457
    4. '""' → logprob: -7.952610969543457
    5. '```' → logprob: -8.202610969543457
    6. '*/
' → logprob: -9.452610969543457
    7. '*/' → logprob: -9.827610969543457
    8. '"""

' → logprob: -10.827610969543457
    9. '"""
' → logprob: -11.202610969543457
    10. '"' → logprob: -11.202610969543457

Token 300: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0015193840954452753
    2. 'return' → logprob: -6.501519203186035
    3. ' return' → logprob: -11.001519203186035
    4. '```' → logprob: -15.251519203186035
    5. '	return' → logprob: -16.50152015686035
    6. '   ' → logprob: -17.75152015686035
    7. ' ' → logprob: -17.87652015686035
    8. '
' → logprob: -18.00152015686035
    9. '  ' → logprob: -18.12652015686035
    10. 'def' → logprob: -18.87652015686035

Token 301: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -3.4121114822482923e-06
    2. ' return' → logprob: -12.750003814697266
    3. '   ' → logprob: -14.500003814697266
    4. '
' → logprob: -20.375003814697266
    5. '	return' → logprob: -21.750003814697266
    6. '```' → logprob: -22.000003814697266
    7. 'def' → logprob: -22.750003814697266
    8. 'eturn' → logprob: -23.750003814697266
    9. '    
' → logprob: -23.875003814697266
    10. 'Return' → logprob: -24.125003814697266

Token 302: ' list' (ID: 1562)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0011918948730453849
    2. 'list' → logprob: -6.751192092895508
    3. ' input' → logprob: -10.751192092895508
    4. ' list' → logprob: -15.501192092895508
    5. '(input' → logprob: -20.376192092895508
    6. '[input' → logprob: -20.751192092895508
    7. '   ' → logprob: -22.001192092895508
    8. '=input' → logprob: -22.376192092895508
    9. '<input' → logprob: -22.751192092895508
    10. 'string' → logprob: -23.501192092895508

Token 303: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.012074553407728672
    2. '(map' → logprob: -4.5120744705200195
    3. '(' → logprob: -6.8870744705200195
    4. 'input' → logprob: -13.26207447052002
    5. '(str' → logprob: -14.01207447052002
    6. ' (' → logprob: -14.38707447052002
    7. '=input' → logprob: -14.63707447052002
    8. 'map' → logprob: -14.88707447052002
    9. '(string' → logprob: -15.26207447052002
    10. '(split' → logprob: -15.63707447052002

Token 304: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00012642296496778727
    2. '()' → logprob: -9.000126838684082
    3. '())' → logprob: -12.750126838684082
    4. '(' → logprob: -16.875125885009766
    5. ' ().' → logprob: -17.250125885009766
    6. ')' → logprob: -18.000125885009766
    7. '()
' → logprob: -19.125125885009766
    8. '()[' → logprob: -19.250125885009766
    9. '().'' → logprob: -19.875125885009766
    10. 'split' → logprob: -20.000125885009766

Token 305: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0005537479883059859
    2. 'strip' → logprob: -7.500553607940674
    3. 'rstrip' → logprob: -14.250554084777832
    4. 'spl' → logprob: -17.375553131103516
    5. ' split' → logprob: -18.375553131103516
    6. '(split' → logprob: -18.875553131103516
    7. '_split' → logprob: -22.000553131103516
    8. '.split' → logprob: -22.500553131103516
    9. 'replace' → logprob: -23.000553131103516
    10. 'str' → logprob: -23.125553131103516

Token 306: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0015424765879288316
    2. '()' → logprob: -6.501542568206787
    3. ')' → logprob: -10.251542091369629
    4. ' ())' → logprob: -12.751542091369629
    5. '(' → logprob: -13.751542091369629
    6. '())
' → logprob: -14.501542091369629
    7. '()))' → logprob: -16.501543045043945
    8. '()]' → logprob: -16.501543045043945
    9. '();)' → logprob: -16.876543045043945
    10. '())

' → logprob: -17.501543045043945

Token 307: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0014001181116327643
    2. '#' → logprob: -7.501399993896484
    3. '
' → logprob: -7.501399993896484
    4. 'class' → logprob: -8.626399993896484
    5. '\' → logprob: -10.001399993896484
    6. 'd' → logprob: -10.876399993896484
    7. 'n' → logprob: -11.001399993896484
    8. '

' → logprob: -11.501399993896484
    9. '\n' → logprob: -11.626399993896484
    10. '  
' → logprob: -12.876399993896484

Token 308: ' in' (ID: 306)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.5005093812942505
    2. 'main' → logprob: -1.0005093812942505
    3. 'solve' → logprob: -4.875509262084961
    4. ' solve' → logprob: -5.000509262084961
    5. 'print' → logprob: -5.750509262084961
    6. ' factorial' → logprob: -6.375509262084961
    7. ' print' → logprob: -6.500509262084961
    8. 'input' → logprob: -7.000509262084961
    9. 's' → logprob: -7.500509262084961
    10. 'factor' → logprob: -7.750509262084961

Token 309: 'pl' (ID: 528)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.004262057598680258
    2. 'put' → logprob: -5.6292619705200195
    3. 'p' → logprob: -7.5042619705200195
    4. 'pt' → logprob: -10.37926197052002
    5. 'tp' → logprob: -11.12926197052002
    6. 'it' → logprob: -11.25426197052002
    7. 's' → logprob: -12.25426197052002
    8. 'ut' → logprob: -12.25426197052002
    9. 'dex' → logprob: -12.25426197052002
    10. 'tpl' → logprob: -12.50426197052002

Token 310: 'm' (ID: 76)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5292393565177917
    2. '():' → logprob: -0.9042393565177917
    3. 'n' → logprob: -5.654239177703857
    4. 's' → logprob: -6.904239177703857
    5. '():
' → logprob: -8.029239654541016
    6. 'ines' → logprob: -8.154239654541016
    7. 'ine' → logprob: -8.404239654541016
    8. ' ()' → logprob: -8.529239654541016
    9. 'ist' → logprob: -9.279239654541016
    10. 'st' → logprob: -9.779239654541016

Token 311: '(n' (ID: 2406)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.01424836553633213
    2. '():
' → logprob: -4.389248371124268
    3. '()' → logprob: -6.389248371124268
    4. ' ():' → logprob: -10.01424789428711
    5. '):' → logprob: -12.51424789428711
    6. 's' → logprob: -12.63924789428711
    7. ':' → logprob: -13.51424789428711
    8. '():
' → logprob: -13.76424789428711
    9. '():

' → logprob: -14.13924789428711
    10. 'a' → logprob: -14.51424789428711

Token 312: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0015579510945826769
    2. ')' → logprob: -6.50155782699585
    3. '():' → logprob: -10.751558303833008
    4. ':' → logprob: -11.126558303833008
    5. '):
' → logprob: -11.126558303833008
    6. ' ):' → logprob: -13.376558303833008
    7. '=' → logprob: -13.626558303833008
    8. '()' → logprob: -14.751558303833008
    9. ',' → logprob: -14.751558303833008
    10. '):

' → logprob: -15.626558303833008

Token 313: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8608408570289612
    2. ':' → logprob: -0.8608408570289612
    3. '   ' → logprob: -1.9858407974243164
    4. '(n' → logprob: -4.860840797424316
    5. '(
' → logprob: -5.860840797424316
    6. ',' → logprob: -6.735840797424316
    7. '):' → logprob: -7.110840797424316
    8. ' :' → logprob: -7.235840797424316
    9. '(":' → logprob: -7.235840797424316
    10. '[' → logprob: -7.735840797424316

Token 314: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05030977725982666
    2. '
' → logprob: -4.300309658050537
    3. '"""
' (adapté à ' """
') → logprob: -4.925309658050537
    4. '    
' → logprob: -5.300309658050537
    5. ' return' → logprob: -5.300309658050537
    6. ' ' → logprob: -5.550309658050537
    7. '[' → logprob: -6.050309658050537
    8. ' 
' → logprob: -6.300309658050537
    9. '"' → logprob: -6.425309658050537
    10. '    ' → logprob: -6.675309658050537

Token 315: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06741029769182205
    2. '"""
' → logprob: -2.8174102306365967
    3. '"""' → logprob: -5.442410469055176
    4. '"' → logprob: -6.942410469055176
    5. ' """
' → logprob: -9.567410469055176
    6. '"
' → logprob: -10.942410469055176
    7. '
' → logprob: -11.317410469055176
    8. '""' → logprob: -11.442410469055176
    9. ' """' → logprob: -12.692410469055176
    10. '[
' → logprob: -13.067410469055176

Token 316: ' Lit' (ID: 45595)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9959811568260193
    2. ' """
' → logprob: -1.745981216430664
    3. ' return' → logprob: -1.995981216430664
    4. ' """' → logprob: -2.370981216430664
    5. ' lines' → logprob: -2.495981216430664
    6. '"""
' → logprob: -2.995981216430664
    7. '"""' → logprob: -3.620981216430664
    8. 'def' → logprob: -4.620981216430664
    9. 'return' → logprob: -5.120981216430664
    10. ' data' → logprob: -5.245981216430664

Token 317: ' n' (ID: 297)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.6605400443077087
    2. 'n' → logprob: -1.2855401039123535
    3. '[n' → logprob: -2.0355401039123535
    4. ' n' → logprob: -4.0355401039123535
    5. '(
' → logprob: -4.2855401039123535
    6. '[' → logprob: -4.2855401039123535
    7. '[
' → logprob: -4.5355401039123535
    8. '   ' → logprob: -5.1605401039123535
    9. '
' → logprob: -5.9105401039123535
    10. '(' → logprob: -6.5355401039123535

Token 318: ' ent' (ID: 1121)
  Prédit: ' lignes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lignes' → logprob: -1.0929832458496094
    2. '(' → logprob: -1.3429832458496094
    3. ' lines' → logprob: -1.7179832458496094
    4. '()' → logprob: -1.7179832458496094
    5. '(
' → logprob: -4.342983245849609
    6. 'l' → logprob: -5.217983245849609
    7. '(n' → logprob: -5.217983245849609
    8. '(lines' → logprob: -5.717983245849609
    9. 'lines' → logprob: -5.717983245849609
    10. ' (' → logprob: -5.967983245849609

Token 319: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.6938804388046265
    2. 'ières' → logprob: -0.6938804388046265
    3. 'ieres' → logprob: -7.818880558013916
    4. 'ier' → logprob: -8.568880081176758
    5. 'i' → logprob: -9.568880081176758
    6. 'ière' → logprob: -10.443880081176758
    7. 'ires' → logprob: -10.818880081176758
    8. '   ' → logprob: -11.443880081176758
    9. '```' → logprob: -12.443880081176758
    10. 'ères' → logprob: -13.693880081176758

Token 320: ',' (ID: 11)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.09918109327554703
    2. 'à' → logprob: -3.5991811752319336
    3. '(n' → logprob: -3.9741811752319336
    4. '(' → logprob: -4.474181175231934
    5. 's' → logprob: -4.474181175231934
    6. '(
' → logprob: -5.474181175231934
    7. 'from' → logprob: -5.724181175231934
    8. '():' → logprob: -5.849181175231934
    9. 'n' → logprob: -5.974181175231934
    10. 'lines' → logprob: -6.224181175231934

Token 321: ' chaque' (ID: 21194)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.37485265731811523
    2. '[]' → logprob: -1.9998526573181152
    3. '[' → logprob: -3.1248526573181152
    4. ' [' → logprob: -3.7498526573181152
    5. '[
' → logprob: -4.124852657318115
    6. 'def' → logprob: -4.374852657318115
    7. ' ligne' → logprob: -4.499852657318115
    8. ' []' → logprob: -4.499852657318115
    9. ' n' → logprob: -4.874852657318115
    10. ' les' → logprob: -5.499852657318115

Token 322: ' entier' (ID: 80473)
  Prédit: ' ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.7113373279571533
    2. '_' → logprob: -1.2113373279571533
    3. '()' → logprob: -2.3363373279571533
    4. 'ligne' → logprob: -2.5863373279571533
    5. '_line' → logprob: -4.836337089538574
    6. ' line' → logprob: -4.836337089538574
    7. '_l' → logprob: -5.211337089538574
    8. ' ' → logprob: -5.586337089538574
    9. ' ()' → logprob: -6.086337089538574
    10. ' _' → logprob: -6.211337089538574

Token 323: ' prov' (ID: 2656)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.589941680431366
    2. 's' → logprob: -1.5899417400360107
    3. '   ' → logprob: -2.2149417400360107
    4. ' =' → logprob: -3.7149417400360107
    5. ' en' → logprob: -4.589941501617432
    6. ':' → logprob: -4.714941501617432
    7. ')' → logprob: -4.839941501617432
    8. ' à' → logprob: -4.964941501617432
    9. '_' → logprob: -5.089941501617432
    10. '=' → logprob: -5.214941501617432

Token 324: 'ient' (ID: 773)
  Prédit: 'enant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enant' → logprob: -0.01872035674750805
    2. 'ient' → logprob: -4.0187201499938965
    3. 'ent' → logprob: -7.6437201499938965
    4. 'iant' → logprob: -10.268720626831055
    5. 'en' → logprob: -10.768720626831055
    6. 'ant' → logprob: -10.893720626831055
    7. 'iennent' → logprob: -11.768720626831055
    8. 'e' → logprob: -13.143720626831055
    9. '   ' → logprob: -13.268720626831055
    10. 'enants' → logprob: -13.643720626831055

Token 325: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.11576425284147263
    2. ' de' → logprob: -2.3657641410827637
    3. ' des' → logprob: -4.865764141082764
    4. ' du' → logprob: -5.615764141082764
    5. 'd' → logprob: -6.365764141082764
    6. 'de' → logprob: -7.490764141082764
    7. 'e' → logprob: -7.740764141082764
    8. ')' → logprob: -7.990764141082764
    9. '_' → logprob: -8.115764617919922
    10. '()' → logprob: -8.490764617919922

Token 326: ''une' (ID: 13337)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.781343936920166
    2. ''une' → logprob: -1.281343936920166
    3. 'une' → logprob: -1.906343936920166
    4. 'e' → logprob: -2.406343936920166
    5. ' l' → logprob: -4.656343936920166
    6. ' input' → logprob: -5.531343936920166
    7. ' un' → logprob: -6.281343936920166
    8. '’une' → logprob: -6.406343936920166
    9. ''un' → logprob: -6.656343936920166
    10. '_' → logprob: -7.156343936920166

Token 327: ' ligne' (ID: 19583)
  Prédit: ' ligne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.19310373067855835
    2. ' input' → logprob: -2.068103790283203
    3. ' line' → logprob: -3.693103790283203
    4. 'ligne' → logprob: -4.568103790283203
    5. 'input' → logprob: -6.068103790283203
    6. ' range' → logprob: -6.068103790283203
    7. 'entrée' → logprob: -6.443103790283203
    8. ' ' → logprob: -6.443103790283203
    9. '_' → logprob: -6.693103790283203
    10. ' liste' → logprob: -7.193103790283203

Token 328: ' sépar' (ID: 97160)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.455452561378479
    2. '<|end|>' → logprob: -1.455452561378479
    3. ',' → logprob: -2.2054524421691895
    4. ')' → logprob: -2.2054524421691895
    5. '   ' → logprob: -2.4554524421691895
    6. ' suivante' → logprob: -3.4554524421691895
    7. '...' → logprob: -4.0804524421691895
    8. ' complète' → logprob: -4.2054524421691895
    9. '\n' → logprob: -4.3304524421691895
    10. ' distinct' → logprob: -4.3304524421691895

Token 329: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -2.093505099765025e-05
    2. 'é' → logprob: -11.625020980834961
    3. 'ées' → logprob: -11.875020980834961
    4. 'ément' → logprob: -12.625020980834961
    5. 'ate' → logprob: -14.000020980834961
    6. 'és' → logprob: -15.500020980834961
    7. 'née' → logprob: -15.750020980834961
    8. 'e' → logprob: -16.00002098083496
    9. '```' → logprob: -16.50002098083496
    10. 'par' → logprob: -17.00002098083496

Token 330: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29509106278419495
    2. ',' → logprob: -1.9200910329818726
    3. '.' → logprob: -3.170091152191162
    4. ')' → logprob: -4.045091152191162
    5. ',
' → logprob: -4.420091152191162
    6. 'def' → logprob: -4.670091152191162
    7. '()' → logprob: -4.795091152191162
    8. '(' → logprob: -5.170091152191162
    9. '(
' → logprob: -6.045091152191162
    10. '(n' → logprob: -6.420091152191162

Token 331: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006164243910461664
    2. '    
' → logprob: -5.631164073944092
    3. '  
' → logprob: -7.256164073944092
    4. '\n' → logprob: -7.256164073944092
    5. '
' → logprob: -8.25616455078125
    6. ')' → logprob: -8.88116455078125
    7. ' 
' → logprob: -9.00616455078125
    8. 'n' → logprob: -9.50616455078125
    9. '   
' → logprob: -9.75616455078125
    10. '<|end|>' → logprob: -9.88116455078125

Token 332: ' Args' (ID: 39185)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -1.1570627689361572
    2. '   ' → logprob: -1.9070627689361572
    3. 'return' → logprob: -1.9070627689361572
    4. ' res' → logprob: -2.6570627689361572
    5. 'res' → logprob: -2.7820627689361572
    6. ' lst' → logprob: -2.7820627689361572
    7. 'result' → logprob: -3.1570627689361572
    8. ' lines' → logprob: -3.1570627689361572
    9. 'lst' → logprob: -3.5320627689361572
    10. ' result' → logprob: -3.7820627689361572

Token 333: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.43481871485710144
    2. '(n' → logprob: -1.3098187446594238
    3. '(' → logprob: -3.184818744659424
    4. '   ' → logprob: -3.684818744659424
    5. '=' → logprob: -5.059818744659424
    6. ',' → logprob: -5.684818744659424
    7. '):' → logprob: -6.059818744659424
    8. ')' → logprob: -6.559818744659424
    9. '[n' → logprob: -7.309818744659424
    10. ':
' → logprob: -7.434818744659424

Token 334: '       ' (ID: 309)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7023383378982544
    2. '   ' → logprob: -1.0773383378982544
    3. ' 
' → logprob: -2.452338218688965
    4. ' n' → logprob: -3.077338218688965
    5. ')' → logprob: -4.077338218688965
    6. ' ' → logprob: -5.327338218688965
    7. '(n' → logprob: -5.827338218688965
    8. '    
' → logprob: -5.952338218688965
    9. '    ' → logprob: -6.202338218688965
    10. '	n' → logprob: -7.077338218688965

Token 335: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.03824218362569809
    2. ' n' → logprob: -3.2882421016693115
    3. '   ' → logprob: -8.53824234008789
    4. '	n' → logprob: -12.78824234008789
    5. '    
' → logprob: -14.53824234008789
    6. ' ' → logprob: -14.66324234008789
    7. ')' → logprob: -15.16324234008789
    8. ')n' → logprob: -15.28824234008789
    9. ' 
' → logprob: -15.41324234008789
    10. '  ' → logprob: -16.16324234008789

Token 336: ' (' (ID: 350)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.09054572135210037
    2. ':' → logprob: -2.465545654296875
    3. ')' → logprob: -7.215545654296875
    4. ':int' → logprob: -7.340545654296875
    5. '):
' → logprob: -8.590545654296875
    6. ' :' → logprob: -11.215545654296875
    7. ' ):' → logprob: -11.715545654296875
    8. 'int' → logprob: -12.965545654296875
    9. '=int' → logprob: -13.715545654296875
    10. '<int' → logprob: -13.715545654296875

Token 337: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0006522706826217473
    2. '):' → logprob: -7.500652313232422
    3. ' int' → logprob: -9.500652313232422
    4. ')' → logprob: -10.875652313232422
    5. '):
' → logprob: -13.000652313232422
    6. ':int' → logprob: -13.875652313232422
    7. '=int' → logprob: -13.875652313232422
    8. '[int' → logprob: -13.875652313232422
    9. '(int' → logprob: -15.125652313232422
    10. ']int' → logprob: -16.750652313232422

Token 338: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01049778237938881
    2. ')' → logprob: -4.635497570037842
    3. '):
' → logprob: -7.635497570037842
    4. ':' → logprob: -8.385498046875
    5. '):

' → logprob: -11.885498046875
    6. ' ):' → logprob: -11.885498046875
    7. '<|end|>' → logprob: -12.135498046875
    8. '   ' → logprob: -13.510498046875
    9. '<|end|>' → logprob: -13.510498046875
    10. '**' → logprob: -13.760498046875

Token 339: ' Le' (ID: 2018)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.07026161998510361
    2. ' n' → logprob: -3.4452617168426514
    3. 'n' → logprob: -4.070261478424072
    4. ')' → logprob: -4.945261478424072
    5. 'int' → logprob: -5.195261478424072
    6. ' number' → logprob: -6.945261478424072
    7. '<|end|>' → logprob: -7.070261478424072
    8. ' ' → logprob: -7.320261478424072
    9. ' None' → logprob: -7.820261478424072
    10. ' ' → logprob: -7.945261478424072

Token 340: ' nombre' (ID: 9733)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.16580836474895477
    2. ' n' → logprob: -2.5408084392547607
    3. ' nombre' → logprob: -3.2908084392547607
    4. 'n' → logprob: -4.165808200836182
    5. ' )' → logprob: -4.790808200836182
    6. ' number' → logprob: -5.290808200836182
    7. ')' → logprob: -6.040808200836182
    8. '  ' → logprob: -6.290808200836182
    9. 'nombre' → logprob: -7.415808200836182
    10. ' ' → logprob: -7.540808200836182

Token 341: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9114868640899658
    2. ')' → logprob: -1.5364868640899658
    3. ' de' → logprob: -1.9114868640899658
    4. ' des' → logprob: -2.661486864089966
    5. ' )' → logprob: -3.036486864089966
    6. '<|end|>' → logprob: -3.036486864089966
    7. ' d' → logprob: -3.786486864089966
    8. '  ' → logprob: -3.911486864089966
    9. ' of' → logprob: -5.036486625671387
    10. '=' → logprob: -5.661486625671387

Token 342: ' lignes' (ID: 81687)
  Prédit: ' lignes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lignes' → logprob: -0.45455649495124817
    2. ' ' → logprob: -1.7045564651489258
    3. ' ent' → logprob: -1.9545564651489258
    4. ')' → logprob: -4.829556465148926
    5. ' lines' → logprob: -5.079556465148926
    6. 'l' → logprob: -5.204556465148926
    7. ' valeurs' → logprob: -5.454556465148926
    8. 'ent' → logprob: -5.704556465148926
    9. ' integers' → logprob: -5.829556465148926
    10. ' lign' → logprob: -6.079556465148926

Token 343: ' à' (ID: 1221)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04979531839489937
    2. '):' → logprob: -3.424795389175415
    3. '):
' → logprob: -4.924795150756836
    4. ' à' → logprob: -5.299795150756836
    5. '   ' → logprob: -6.924795150756836
    6. 'à' → logprob: -7.549795150756836
    7. '
' → logprob: -7.674795150756836
    8. ')n' → logprob: -7.674795150756836
    9. ' )' → logprob: -7.799795150756836
    10. ' ' → logprob: -8.799795150756836

Token 344: ' lire' (ID: 46082)
  Prédit: ' lire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lire' → logprob: -0.026680273935198784
    2. 'l' → logprob: -3.6516802310943604
    3. 'Lire' → logprob: -8.651679992675781
    4. ' read' → logprob: -9.776679992675781
    5. 'lit' → logprob: -10.026679992675781
    6. 'read' → logprob: -10.151679992675781
    7. 'lect' → logprob: -11.026679992675781
    8. ' Lire' → logprob: -11.401679992675781
    9. ' readline' → logprob: -12.276679992675781
    10. ' l' → logprob: -12.776679992675781

Token 345: '.

' (ID: 364)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.1725783497095108
    2. '):' → logprob: -2.1725783348083496
    3. ')' → logprob: -3.2975783348083496
    4. '   ' → logprob: -5.17257833480835
    5. '
' → logprob: -6.67257833480835
    6. '):
' → logprob: -8.172578811645508
    7. ')
' → logprob: -9.172578811645508
    8. '```' → logprob: -9.172578811645508
    9. '):

' → logprob: -9.422578811645508
    10. ')\' → logprob: -10.047578811645508

Token 346: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019865231588482857
    2. ')' → logprob: -4.644865036010742
    3. '
' → logprob: -5.144865036010742
    4. '    
' → logprob: -6.644865036010742
    5. '\n' → logprob: -7.394865036010742
    6. '```' → logprob: -7.519865036010742
    7. ' 
' → logprob: -8.144865036010742
    8. ')
' → logprob: -8.394865036010742
    9. '  
' → logprob: -9.019865036010742
    10. '):' → logprob: -9.019865036010742

Token 347: ' Returns' (ID: 9609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.174740269780159
    2. ' lines' → logprob: -3.0497403144836426
    3. 'for' → logprob: -3.7997403144836426
    4. '
' → logprob: -3.7997403144836426
    5. '"""
' → logprob: -3.9247403144836426
    6. '    
' → logprob: -4.424740314483643
    7. 'lines' → logprob: -4.424740314483643
    8. ' for' → logprob: -4.674740314483643
    9. ' 
' → logprob: -6.174740314483643
    10. '"""' → logprob: -6.174740314483643

Token 348: ':
' (ID: 734)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.8339361548423767
    2. ' [' → logprob: -1.4589362144470215
    3. '   ' → logprob: -1.5839362144470215
    4. ' [
' → logprob: -2.7089362144470215
    5. '[' → logprob: -3.5839362144470215
    6. 'list' → logprob: -4.3339362144470215
    7. ' =' → logprob: -5.2089362144470215
    8. '[
' → logprob: -5.8339362144470215
    9. '[:]' → logprob: -6.0839362144470215
    10. ')' → logprob: -6.4589362144470215

Token 349: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.283500999212265
    2. ' [' → logprob: -1.7835010290145874
    3. '[' → logprob: -3.033500909805298
    4. ' list' → logprob: -4.033501148223877
    5. '[list' → logprob: -4.658501148223877
    6. 'list' → logprob: -6.658501148223877
    7. '[
' → logprob: -6.783501148223877
    8. ' [
' → logprob: -8.158500671386719
    9. '[]' → logprob: -8.283500671386719
    10. ' []' → logprob: -9.033500671386719

Token 350: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' (adapté à ' list') → logprob: -0.0024184645153582096
    2. ' list' → logprob: -6.502418518066406
    3. '[list' → logprob: -7.002418518066406
    4. 'List' → logprob: -12.877418518066406
    5. '[' → logprob: -13.502418518066406
    6. '[List' → logprob: -13.752418518066406
    7. '   ' → logprob: -14.252418518066406
    8. '[int' → logprob: -16.752418518066406
    9. '_list' → logprob: -16.877418518066406
    10. ':list' → logprob: -17.002418518066406

Token 351: ':' (ID: 25)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 352: ' La' (ID: 3038)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.24897755682468414
    2. '[list' → logprob: -1.998977541923523
    3. '[' → logprob: -2.6239776611328125
    4. '[int' → logprob: -5.2489776611328125
    5. '[List' → logprob: -5.6239776611328125
    6. '[n' → logprob: -6.1239776611328125
    7. '[num' → logprob: -7.8739776611328125
    8. '   ' → logprob: -8.998977661132812
    9. '[line' → logprob: -9.498977661132812
    10. '[]' → logprob: -9.998977661132812

Token 353: ' liste' (ID: 31719)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -1.0249637365341187
    2. '[list' → logprob: -1.2749637365341187
    3. '[' → logprob: -1.5249637365341187
    4. ' [' → logprob: -2.274963855743408
    5. ' []' → logprob: -4.274963855743408
    6. '[n' → logprob: -5.024963855743408
    7. ' list' → logprob: -5.024963855743408
    8. '[int' → logprob: -5.149963855743408
    9. 'list' → logprob: -6.274963855743408
    10. '[
' → logprob: -6.274963855743408

Token 354: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.23391540348529816
    2. '[int' → logprob: -2.358915328979492
    3. '<|end|>' → logprob: -2.358915328979492
    4. ' of' → logprob: -4.858915328979492
    5. 'des' → logprob: -5.858915328979492
    6. '[' → logprob: -5.858915328979492
    7. ' de' → logprob: -6.108915328979492
    8. '[str' → logprob: -6.733915328979492
    9. '<int' → logprob: -7.108915328979492
    10. 's' → logprob: -8.233915328979492

Token 355: ' ent' (ID: 1121)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -1.1653670072555542
    2. 'ent' → logprob: -1.4153670072555542
    3. ' ent' → logprob: -2.0403671264648438
    4. 'int' → logprob: -2.0403671264648438
    5. 'n' → logprob: -2.5403671264648438
    6. 'ints' → logprob: -3.4153671264648438
    7. ' int' → logprob: -3.5403671264648438
    8. ' integers' → logprob: -4.040367126464844
    9. ' n' → logprob: -4.665367126464844
    10. '[n' → logprob: -4.915367126464844

Token 356: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.0011013990733772516
    2. 'ières' → logprob: -7.001101493835449
    3. 'i' → logprob: -9.00110149383545
    4. 't' → logprob: -10.12610149383545
    5. 'ires' → logprob: -11.37610149383545
    6. 'ints' → logprob: -12.25110149383545
    7. '```' → logprob: -12.75110149383545
    8. 'ti' → logprob: -13.25110149383545
    9. 'irs' → logprob: -13.62610149383545
    10. 'ers' → logprob: -14.00110149383545

Token 357: ' lus' (ID: 54762)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.9031100869178772
    2. '<|end|>' → logprob: -1.9031100273132324
    3. '   ' → logprob: -2.1531100273132324
    4. 's' → logprob: -2.6531100273132324
    5. '[]' → logprob: -3.2781100273132324
    6. ')' → logprob: -3.4031100273132324
    7. 'read' → logprob: -3.7781100273132324
    8. 'import' → logprob: -4.028110027313232
    9. ' read' → logprob: -4.153110027313232
    10. ']' → logprob: -4.403110027313232

Token 358: '.
' (ID: 558)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.9990730285644531
    2. ')' → logprob: -1.3740730285644531
    3. ':' → logprob: -2.499073028564453
    4. '(' → logprob: -2.999073028564453
    5. ']' → logprob: -3.124073028564453
    6. '(n' → logprob: -3.249073028564453
    7. '   ' → logprob: -3.249073028564453
    8. '[' → logprob: -3.874073028564453
    9. '<|end|>' → logprob: -4.249073028564453
    10. ',' → logprob: -4.499073028564453

Token 359: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007529490161687136
    2. '[]' → logprob: -6.382529258728027
    3. '```' → logprob: -6.507529258728027
    4. '[]
' → logprob: -6.757529258728027
    5. ':
' → logprob: -6.882529258728027
    6. '[' → logprob: -8.132529258728027
    7. '[
' → logprob: -8.132529258728027
    8. 'def' → logprob: -8.257529258728027
    9. ':' → logprob: -8.382529258728027
    10. '
' → logprob: -8.507529258728027

Token 360: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007742435671389103
    2. '
' → logprob: -5.632742404937744
    3. '    
' → logprob: -5.632742404937744
    4. '"""
' (adapté à ' """
') → logprob: -8.757742881774902
    5. '   
' → logprob: -9.382742881774902
    6. '\n' → logprob: -9.882742881774902
    7. ' 
' → logprob: -9.882742881774902
    8. '```' → logprob: -9.882742881774902
    9. '  
' → logprob: -10.257742881774902
    10. '    ' → logprob: -10.507742881774902

Token 361: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -5.8961017202818766e-05
    2. 'data' → logprob: -11.125059127807617
    3. 'return' → logprob: -11.125059127807617
    4. ' return' → logprob: -12.125059127807617
    5. '[' → logprob: -12.250059127807617
    6. 'result' → logprob: -12.250059127807617
    7. '```' → logprob: -12.375059127807617
    8. '    
' → logprob: -13.250059127807617
    9. '   ' → logprob: -13.250059127807617
    10. '    ' → logprob: -14.000059127807617

Token 362: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.008090737275779247
    2. 'res' → logprob: -5.508090972900391
    3. '   ' → logprob: -6.008090972900391
    4. ' return' → logprob: -7.008090972900391
    5. 'result' → logprob: -7.883090972900391
    6. 'arr' → logprob: -9.00809097290039
    7. 'lst' → logprob: -9.63309097290039
    8. 'l' → logprob: -10.25809097290039
    9. 'ret' → logprob: -11.25809097290039
    10. 'data' → logprob: -11.38309097290039

Token 363: ' [' (ID: 723)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.4767238199710846
    2. '[' → logprob: -1.2267237901687622
    3. '[int' → logprob: -2.7267239093780518
    4. ' [' → logprob: -4.226723670959473
    5. '[input' → logprob: -6.601723670959473
    6. '[List' → logprob: -6.726723670959473
    7. '[n' → logprob: -7.101723670959473
    8. '[in' → logprob: -7.351723670959473
    9. '[np' → logprob: -7.476723670959473
    10. '[line' → logprob: -7.976723670959473

Token 364: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.3133131265640259
    2. 'inp' → logprob: -1.3133131265640259
    3. ' inp' → logprob: -11.063313484191895
    4. 'in' → logprob: -11.188313484191895
    5. ' int' → logprob: -11.938313484191895
    6. 'input' → logprob: -12.438313484191895
    7. 'ints' → logprob: -13.188313484191895
    8. 'intval' → logprob: -13.688313484191895
    9. '```' → logprob: -13.813313484191895
    10. '(inp' → logprob: -14.063313484191895

Token 365: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -6.158350151963532e-05
    2. 'input' → logprob: -9.750061988830566
    3. '(' → logprob: -13.125061988830566
    4. '(sys' → logprob: -14.125061988830566
    5. '()' → logprob: -14.875061988830566
    6. '(
' → logprob: -15.625061988830566
    7. '()]' → logprob: -17.87506103515625
    8. ' input' → logprob: -18.00006103515625
    9. '=input' → logprob: -18.50006103515625
    10. 'sys' → logprob: -18.75006103515625

Token 366: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -5.931863051955588e-05
    2. '().' → logprob: -9.750059127807617
    3. '())
' → logprob: -14.500059127807617
    4. '()' → logprob: -15.000059127807617
    5. '()]' → logprob: -16.500059127807617
    6. ' ())' → logprob: -17.000059127807617
    7. '()))' → logprob: -17.625059127807617
    8. ')' → logprob: -18.875059127807617
    9. '()
' → logprob: -19.625059127807617
    10. '(' → logprob: -19.750059127807617

Token 367: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4985074996948242
    2. '()' → logprob: -0.9985074996948242
    3. ' for' → logprob: -3.748507499694824
    4. ')' → logprob: -7.498507499694824
    5. '	for' → logprob: -11.748507499694824
    6. ']' → logprob: -11.873507499694824
    7. '   ' → logprob: -12.623507499694824
    8. ' ()' → logprob: -12.623507499694824
    9. '().' → logprob: -12.873507499694824
    10. '()]' → logprob: -13.498507499694824

Token 368: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00038014890742488205
    2. ' _' → logprob: -7.875380039215088
    3. '_i' → logprob: -17.00037956237793
    4. ' ' → logprob: -17.62537956237793
    5. ' ' → logprob: -18.12537956237793
    6. 'i' → logprob: -18.25037956237793
    7. '_n' → logprob: -18.75037956237793
    8. '_=' → logprob: -18.75037956237793
    9. '_range' → logprob: -19.00037956237793
    10. ' in' → logprob: -19.25037956237793

Token 369: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0007227989844977856
    2. 'in' → logprob: -7.250722885131836
    3. 'range' → logprob: -11.750722885131836
    4. ' _' → logprob: -13.125722885131836
    5. 'i' → logprob: -13.750722885131836
    6. ' ' → logprob: -14.000722885131836
    7. ' i' → logprob: -14.250722885131836
    8. ' range' → logprob: -15.500722885131836
    9. '	in' → logprob: -16.625722885131836
    10. 'n' → logprob: -17.250722885131836

Token 370: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0007100477814674377
    2. ' range' → logprob: -7.2507100105285645
    3. '_range' → logprob: -16.750709533691406
    4. '_' → logprob: -17.000709533691406
    5. '	range' → logprob: -17.625709533691406
    6. '(range' → logprob: -18.375709533691406
    7. 'rang' → logprob: -18.875709533691406
    8. ' ' → logprob: -20.000709533691406
    9. '   ' → logprob: -20.750709533691406
    10. 'ra' → logprob: -21.125709533691406

Token 371: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0009293294278904796
    2. 'n' → logprob: -7.000929355621338
    3. '(' → logprob: -11.00092887878418
    4. ' n' → logprob: -13.75092887878418
    5. ' (' → logprob: -17.00092887878418
    6. '(
' → logprob: -17.62592887878418
    7. '	n' → logprob: -18.50092887878418
    8. ')n' → logprob: -19.37592887878418
    9. '_n' → logprob: -21.00092887878418
    10. '<n' → logprob: -22.50092887878418

Token 372: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -7.5649528298527e-05
    2. ']' → logprob: -9.500075340270996
    3. ')]
' → logprob: -14.750075340270996
    4. ')' → logprob: -15.125075340270996
    5. '}]' → logprob: -17.125076293945312
    6. ']
' → logprob: -17.875076293945312
    7. ' ]' → logprob: -18.250076293945312
    8. ']]' → logprob: -18.375076293945312
    9. '')]' → logprob: -18.750076293945312
    10. '()]' → logprob: -18.875076293945312

Token 373: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6745396852493286
    2. 'def' → logprob: -0.7995396852493286
    3. '<|end|>' → logprob: -3.424539566040039
    4. '#' → logprob: -5.674539566040039
    5. '

' → logprob: -6.299539566040039
    6. '\n' → logprob: -6.424539566040039
    7. '```' → logprob: -7.174539566040039
    8. '<|end|>' → logprob: -8.299539566040039
    9. '    
' → logprob: -8.799539566040039
    10. '  
' → logprob: -9.049539566040039

Token 374: ' in' (ID: 306)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.1768028438091278
    2. 'main' → logprob: -3.05180287361145
    3. ' in' → logprob: -3.55180287361145
    4. ' solve' → logprob: -3.67680287361145
    5. ' factorial' → logprob: -3.67680287361145
    6. 'in' → logprob: -4.176802635192871
    7. 'solve' → logprob: -5.051802635192871
    8. ' inp' → logprob: -6.426802635192871
    9. ' pl' → logprob: -6.551802635192871
    10. 'inp' → logprob: -6.801802635192871

Token 375: 'pl' (ID: 528)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.4309965670108795
    2. 'pl' → logprob: -1.4309965372085571
    3. 't' → logprob: -2.3059966564178467
    4. 'put' → logprob: -4.680996417999268
    5. 's' → logprob: -7.930996417999268
    6. 'pm' → logprob: -7.930996417999268
    7. 'pt' → logprob: -8.055996894836426
    8. 'puts' → logprob: -8.180996894836426
    9. 'pls' → logprob: -8.305996894836426
    10. 'tpl' → logprob: -9.430996894836426

Token 376: 'L' (ID: 43)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.261286735534668
    2. 'n' → logprob: -1.761286735534668
    3. '()' → logprob: -1.761286735534668
    4. 's' → logprob: -2.136286735534668
    5. 'ist' → logprob: -2.261286735534668
    6. '(n' → logprob: -2.386286735534668
    7. 'l' → logprob: -4.011286735534668
    8. 'st' → logprob: -4.386286735534668
    9. '(' → logprob: -5.011286735534668
    10. '())' → logprob: -5.511286735534668

Token 377: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.2940685451030731
    2. '(' → logprob: -1.4190685749053955
    3. 'ist' → logprob: -5.044068336486816
    4. 'ines' → logprob: -6.044068336486816
    5. 'ine' → logprob: -6.419068336486816
    6. '()' → logprob: -7.044068336486816
    7. 'n' → logprob: -7.169068336486816
    8. 'o' → logprob: -8.294068336486816
    9. '():' → logprob: -8.544068336486816
    10. 'i' → logprob: -10.169068336486816

Token 378: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00021962920436635613
    2. ')' → logprob: -9.250219345092773
    3. '(n' → logprob: -9.625219345092773
    4. '):
' → logprob: -9.875219345092773
    5. ' ):' → logprob: -12.875219345092773
    6. 'n' → logprob: -13.375219345092773
    7. ':' → logprob: -14.625219345092773
    8. '):

' → logprob: -14.625219345092773
    9. '(' → logprob: -15.750219345092773
    10. '=' → logprob: -15.875219345092773

Token 379: '   ' (ID: 271)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.033662643283605576
    2. '(' → logprob: -3.6586625576019287
    3. '(
' → logprob: -5.033662796020508
    4. '   ' → logprob: -7.783662796020508
    5. ':' → logprob: -8.408662796020508
    6. 'n' → logprob: -9.533662796020508
    7. 'def' → logprob: -10.033662796020508
    8. '):' → logprob: -11.408662796020508
    9. ' :' → logprob: -12.158662796020508
    10. ':
' → logprob: -12.283662796020508

Token 380: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1272848844528198
    2. 'return' → logprob: -1.3772848844528198
    3. '(n' → logprob: -1.6272848844528198
    4. 'n' → logprob: -2.2522850036621094
    5. '[
' → logprob: -3.0022850036621094
    6. 'def' → logprob: -3.7522850036621094
    7. ' return' → logprob: -4.627285003662109
    8. 'list' → logprob: -4.752285003662109
    9. ':
' → logprob: -5.127285003662109
    10. '(
' → logprob: -5.377285003662109

Token 381: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014221567660570145
    2. '"""
' → logprob: -4.764221668243408
    3. '"' → logprob: -5.264221668243408
    4. '"""' → logprob: -8.76422119140625
    5. '"
' → logprob: -9.01422119140625
    6. ' """
' → logprob: -9.38922119140625
    7. 'def' → logprob: -10.26422119140625
    8. '  ' → logprob: -12.38922119140625
    9. '    ' → logprob: -12.51422119140625
    10. '
' → logprob: -12.88922119140625

Token 382: ' Lit' (ID: 45595)
  Prédit: '"""
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""
' → logprob: -0.5612018704414368
    2. '   ' → logprob: -0.9362018704414368
    3. 'Reads' → logprob: -4.061202049255371
    4. 'def' → logprob: -4.436202049255371
    5. 'return' → logprob: -5.436202049255371
    6. '"""' → logprob: -6.311202049255371
    7. 'Returns' → logprob: -7.311202049255371
    8. '
' → logprob: -7.561202049255371
    9. 'Lire' → logprob: -8.686202049255371
    10. 'Lit' (adapté à ' Lit') → logprob: -8.686202049255371

Token 383: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2548585534095764
    2. ' n' → logprob: -1.5048584938049316
    3. '(n' → logprob: -5.879858493804932
    4. '[n' → logprob: -9.12985897064209
    5. '   ' → logprob: -12.37985897064209
    6. '	n' → logprob: -13.00485897064209
    7. ',n' → logprob: -13.37985897064209
    8. 'a' → logprob: -13.50485897064209
    9. 'def' → logprob: -13.62985897064209
    10. '[' → logprob: -14.00485897064209

Token 384: ' lignes' (ID: 81687)
  Prédit: ' lignes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lignes' → logprob: -0.09158779680728912
    2. ' lines' → logprob: -2.466587781906128
    3. 'l' → logprob: -7.466588020324707
    4. ' listes' → logprob: -7.716588020324707
    5. 'lines' → logprob: -8.091588020324707
    6. ' ligne' → logprob: -8.466588020324707
    7. ' lign' → logprob: -8.591588020324707
    8. ' list' → logprob: -8.591588020324707
    9. ' linhas' → logprob: -8.716588020324707
    10. ' ' → logprob: -9.466588020324707

Token 385: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1450815349817276
    2. '(n' → logprob: -2.3950815200805664
    3. ' de' → logprob: -3.3950815200805664
    4. 'de' → logprob: -6.020081520080566
    5. '   ' → logprob: -6.270081520080566
    6. '[n' → logprob: -7.145081520080566
    7. 'def' → logprob: -7.645081520080566
    8. ' (' → logprob: -7.770081520080566
    9. ':' → logprob: -7.895081520080566
    10. ' chacune' → logprob: -7.895081520080566

Token 386: ' chaque' (ID: 21194)
  Prédit: ' each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' each' → logprob: -0.6551397442817688
    2. '   ' → logprob: -1.405139684677124
    3. 'each' → logprob: -2.155139684677124
    4. ' chacune' → logprob: -2.655139684677124
    5. ' chaque' → logprob: -3.280139684677124
    6. 'def' → logprob: -5.655139923095703
    7. ' chacun' → logprob: -6.155139923095703
    8. 'Each' → logprob: -6.905139923095703
    9. ' def' → logprob: -6.905139923095703
    10. 'Chaque' → logprob: -7.780139923095703

Token 387: ' ligne' (ID: 19583)
  Prédit: ' ligne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.06040289252996445
    2. ' line' → logprob: -3.5604028701782227
    3. 'ligne' → logprob: -3.9354028701782227
    4. ' ' → logprob: -5.435402870178223
    5. '_' → logprob: -5.560402870178223
    6. 'line' → logprob: -7.060402870178223
    7. ' _' → logprob: -8.060402870178223
    8. '   ' → logprob: -8.185402870178223
    9. ' contenant' → logprob: -8.560402870178223
    10. 'l' → logprob: -8.560402870178223

Token 388: ' étant' (ID: 47869)
  Prédit: ' contenant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' contenant' → logprob: -1.1736600399017334
    2. ' =' → logprob: -1.4236600399017334
    3. 'cont' → logprob: -1.7986600399017334
    4. '=' → logprob: -2.0486600399017334
    5. '_cont' → logprob: -3.0486600399017334
    6. ' contient' → logprob: -3.5486600399017334
    7. ' est' → logprob: -4.5486602783203125
    8. ' containing' → logprob: -4.6736602783203125
    9. ' de' → logprob: -4.6736602783203125
    10. '()' → logprob: -5.2986602783203125

Token 389: ' interpr' (ID: 106412)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.20756419003009796
    2. ' list' → logprob: -1.7075642347335815
    3. ' une' → logprob: -5.582564353942871
    4. 'une' → logprob: -6.082564353942871
    5. 'in' → logprob: -10.582564353942871
    6. '   ' → logprob: -11.082564353942871
    7. 'liste' → logprob: -11.457564353942871
    8. ' in' → logprob: -11.957564353942871
    9. '=list' → logprob: -12.082564353942871
    10. '	list' → logprob: -12.707564353942871

Token 390: 'ét' (ID: 3913)
  Prédit: 'ét'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ét' → logprob: -0.014593218453228474
    2. 'et' → logprob: -4.389593124389648
    3. 't' → logprob: -6.389593124389648
    4. 'été' → logprob: -8.889593124389648
    5. 'êt' → logprob: -8.889593124389648
    6. 'étés' → logprob: -10.639593124389648
    7. 'étation' → logprob: -10.639593124389648
    8. 'ет' → logprob: -10.889593124389648
    9. 'é' → logprob: -11.389593124389648
    10. 'èt' → logprob: -11.764593124389648

Token 391: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.004810661543160677
    2. 'é' → logprob: -5.379810810089111
    3. 'ées' → logprob: -9.129810333251953
    4. 'ee' → logprob: -10.379810333251953
    5. '```' → logprob: -10.754810333251953
    6. '   ' → logprob: -11.879810333251953
    7. 'ed' → logprob: -13.004810333251953
    8. '
' → logprob: -13.254810333251953
    9. 'e' → logprob: -13.504810333251953
    10. '"""' → logprob: -13.629810333251953

Token 392: ' comme' (ID: 7971)
  Prédit: ' comme'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' comme' → logprob: -0.5235692858695984
    2. '()' → logprob: -1.7735693454742432
    3. '   ' → logprob: -2.023569345474243
    4. 'comme' → logprob: -2.523569345474243
    5. 'as' → logprob: -4.773569107055664
    6. ' as' → logprob: -5.023569107055664
    7. ' en' → logprob: -5.648569107055664
    8. '[]' → logprob: -6.398569107055664
    9. '    ' → logprob: -6.523569107055664
    10. ' ' → logprob: -6.648569107055664

Token 393: ' une' (ID: 2463)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.030193224549293518
    2. ' list' → logprob: -3.530193328857422
    3. 'une' → logprob: -8.280193328857422
    4. 'in' → logprob: -9.030193328857422
    5. 'liste' → logprob: -10.280193328857422
    6. ' une' → logprob: -11.030193328857422
    7. '   ' → logprob: -11.780193328857422
    8. ' in' → logprob: -12.530193328857422
    9. 'la' → logprob: -13.280193328857422
    10. 'int' → logprob: -13.530193328857422

Token 394: ' liste' (ID: 31719)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0833224356174469
    2. ' list' → logprob: -2.958322525024414
    3. 'liste' → logprob: -3.708322525024414
    4. ' liste' → logprob: -6.083322525024414
    5. '   ' → logprob: -6.708322525024414
    6. 'int' → logprob: -12.958322525024414
    7. 'lista' → logprob: -13.583322525024414
    8. 'str' → logprob: -13.583322525024414
    9. 'tuple' → logprob: -13.583322525024414
    10. '_list' → logprob: -13.583322525024414

Token 395: ' de' (ID: 334)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.4663473665714264
    2. ' de' → logprob: -1.716347336769104
    3. '[list' → logprob: -2.4663474559783936
    4. '[List' → logprob: -3.5913474559783936
    5. ' of' → logprob: -3.5913474559783936
    6. '[' → logprob: -3.7163474559783936
    7. '<int' → logprob: -4.8413472175598145
    8. 'd' → logprob: -5.7163472175598145
    9. '   ' → logprob: -5.8413472175598145
    10. 'de' → logprob: -6.0913472175598145

Token 396: ' caractères' (ID: 183106)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.005813486874103546
    2. ' int' → logprob: -5.5058135986328125
    3. 'ints' → logprob: -7.0058135986328125
    4. 'ent' → logprob: -7.8808135986328125
    5. '[int' → logprob: -8.130813598632812
    6. '<int' → logprob: -9.505813598632812
    7. 'inte' → logprob: -11.005813598632812
    8. '(int' → logprob: -11.005813598632812
    9. ' ints' → logprob: -11.005813598632812
    10. ' integers' → logprob: -11.255813598632812

Token 397: ' (' (ID: 350)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.3730980157852173
    2. ':' → logprob: -1.3730980157852173
    3. ']' → logprob: -1.8730980157852173
    4. '[' → logprob: -1.8730980157852173
    5. '(' → logprob: -3.3730978965759277
    6. '):' → logprob: -3.4980978965759277
    7. '   ' → logprob: -3.6230978965759277
    8. ')' → logprob: -3.6230978965759277
    9. ' =' → logprob: -4.373097896575928
    10. ',' → logprob: -4.998097896575928

Token 398: 'cha' (ID: 3836)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5063977837562561
    2. 'str' → logprob: -1.2563977241516113
    3. '[str' → logprob: -2.8813977241516113
    4. ')]' → logprob: -3.6313977241516113
    5. ' str' → logprob: -4.256397724151611
    6. 'list' → logprob: -5.881397724151611
    7. ').' → logprob: -6.131397724151611
    8. ']' → logprob: -6.131397724151611
    9. '])' → logprob: -6.381397724151611
    10. ')]
' → logprob: -6.756397724151611

Token 399: 'îne' (ID: 55188)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.013622486963868141
    2. 'îne' → logprob: -4.388622283935547
    3. 'înes' → logprob: -7.638622283935547
    4. 'î' → logprob: -8.388622283935547
    5. '   ' → logprob: -8.388622283935547
    6. 'rne' → logprob: -9.763622283935547
    7. 'rs' → logprob: -10.638622283935547
    8. '```' → logprob: -10.638622283935547
    9. 'ine' → logprob: -11.138622283935547
    10. 'rine' → logprob: -11.513622283935547

Token 400: ').

' (ID: 3991)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1349664181470871
    2. ').' → logprob: -2.6349663734436035
    3. ')]' → logprob: -3.8849663734436035
    4. '):' → logprob: -4.2599663734436035
    5. '):
' → logprob: -4.6349663734436035
    6. 's' → logprob: -5.6349663734436035
    7. ')])' → logprob: -6.6349663734436035
    8. ' de' → logprob: -7.0099663734436035
    9. '[str' → logprob: -7.0099663734436035
    10. ')].' → logprob: -7.2599663734436035

Token 401: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -8.542423165636137e-05
    2. '    
' → logprob: -10.375085830688477
    3. 'def' → logprob: -10.500085830688477
    4. '
' → logprob: -11.000085830688477
    5. '```' → logprob: -12.625085830688477
    6. '"""
' → logprob: -13.500085830688477
    7. ')' → logprob: -13.625085830688477
    8. '{
' → logprob: -14.250085830688477
    9. ':
' → logprob: -14.875085830688477
    10. '"""' → logprob: -15.250085830688477

Token 402: ' Args' (ID: 39185)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004845546092838049
    2. '
' → logprob: -6.37984561920166
    3. 'def' → logprob: -6.50484561920166
    4. '    
' → logprob: -7.12984561920166
    5. '"""
' → logprob: -8.12984561920166
    6. ' 
' → logprob: -9.12984561920166
    7. '"""' → logprob: -9.25484561920166
    8. '    ' → logprob: -9.50484561920166
    9. ')' → logprob: -9.75484561920166
    10. ' def' → logprob: -10.00484561920166

Token 403: ':
' (ID: 734)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.05033539608120918
    2. '   ' → logprob: -3.67533540725708
    3. ':' → logprob: -4.05033540725708
    4. ':
' → logprob: -6.05033540725708
    5. '(' → logprob: -7.05033540725708
    6. 'def' → logprob: -7.05033540725708
    7. '):
' → logprob: -7.30033540725708
    8. ' (' → logprob: -7.92533540725708
    9. '[n' → logprob: -8.300334930419922
    10. '```' → logprob: -8.300334930419922

Token 404: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0037885543424636126
    2. 'n' → logprob: -5.628788471221924
    3. '       ' → logprob: -9.003788948059082
    4. ' n' → logprob: -10.878788948059082
    5. ' ' → logprob: -11.003788948059082
    6. '
' → logprob: -12.003788948059082
    7. '	n' → logprob: -12.003788948059082
    8. '(n' → logprob: -12.628788948059082
    9. '    ' → logprob: -12.878788948059082
    10. '  ' → logprob: -12.878788948059082

Token 405: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -2.696889623621246e-06
    2. '   ' → logprob: -13.00000286102295
    3. ' n' → logprob: -15.00000286102295
    4. 'self' → logprob: -17.500001907348633
    5. '	n' → logprob: -18.625001907348633
    6. '```' → logprob: -18.750001907348633
    7. '       ' → logprob: -19.500001907348633
    8. '
' → logprob: -20.125001907348633
    9. '`' → logprob: -20.375001907348633
    10. 'num' → logprob: -20.625001907348633

Token 406: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10143055766820908
    2. ':int' → logprob: -3.101430654525757
    3. '):' → logprob: -3.601430654525757
    4. ' (' → logprob: -4.351430416107178
    5. '(int' → logprob: -5.226430416107178
    6. ' :' → logprob: -6.351430416107178
    7. ')' → logprob: -6.976430416107178
    8. '   ' → logprob: -7.101430416107178
    9. '):
' → logprob: -7.601430416107178
    10. 'int' → logprob: -7.726430416107178

Token 407: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -3.128163257315464e-07
    2. ' int' → logprob: -15.25
    3. ':int' → logprob: -21.375
    4. '[int' → logprob: -21.375
    5. '=int' → logprob: -21.5
    6. ')' → logprob: -21.75
    7. '   ' → logprob: -21.875
    8. '(int' → logprob: -22.625
    9. '):
' → logprob: -23.75
    10. '	int' → logprob: -24.5

Token 408: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0013357169227674603
    2. '):
' → logprob: -7.126335620880127
    3. ':' → logprob: -8.251336097717285
    4. ')' → logprob: -8.251336097717285
    5. '):

' → logprob: -12.626336097717285
    6. ':int' → logprob: -13.126336097717285
    7. '):
' → logprob: -13.751336097717285
    8. ' ):' → logprob: -13.876336097717285
    9. '   ' → logprob: -14.251336097717285
    10. '**' → logprob: -14.626336097717285

Token 409: ' Le' (ID: 2018)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.5761603713035583
    2. 'int' → logprob: -0.8261603713035583
    3. '   ' → logprob: -8.451160430908203
    4. ' ' → logprob: -12.451160430908203
    5. '    ' → logprob: -13.826160430908203
    6. '(int' → logprob: -14.451160430908203
    7. 'n' → logprob: -15.076160430908203
    8. '	int' → logprob: -15.326160430908203
    9. '[int' → logprob: -15.326160430908203
    10. ':int' → logprob: -15.576160430908203

Token 410: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.5237088799476624
    2. 'nombre' → logprob: -1.0237088203430176
    3. ' number' → logprob: -3.5237088203430176
    4. 'n' → logprob: -4.148708820343018
    5. 'number' → logprob: -6.148708820343018
    6. ')' → logprob: -7.523708820343018
    7. ' nombres' → logprob: -9.148709297180176
    8. '   ' → logprob: -9.523709297180176
    9. '):' → logprob: -9.773709297180176
    10. ' n' → logprob: -9.898709297180176

Token 411: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.46013209223747253
    2. ' lignes' → logprob: -1.835132122039795
    3. ')' → logprob: -2.585132122039795
    4. ' lines' → logprob: -2.710132122039795
    5. ' des' → logprob: -3.585132122039795
    6. '_lines' → logprob: -3.960132122039795
    7. '):' → logprob: -5.460132122039795
    8. 'de' → logprob: -6.085132122039795
    9. 'def' → logprob: -6.960132122039795
    10. ' line' → logprob: -6.960132122039795

Token 412: ' lignes' (ID: 81687)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.7567138671875
    2. ' lines' → logprob: -1.1317138671875
    3. ' lignes' → logprob: -1.7567138671875
    4. 'l' → logprob: -3.3817138671875
    5. '	lines' → logprob: -7.2567138671875
    6. ' linhas' → logprob: -8.2567138671875
    7. ')' → logprob: -8.3817138671875
    8. 'ligne' → logprob: -9.0067138671875
    9. 'n' → logprob: -9.1317138671875
    10. 'rows' → logprob: -9.6317138671875

Token 413: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9729138612747192
    2. ' à' → logprob: -1.2229138612747192
    3. '):
' → logprob: -1.8479138612747192
    4. 'à' → logprob: -2.3479137420654297
    5. '):' → logprob: -3.0979137420654297
    6. ')' → logprob: -3.8479137420654297
    7. ':' → logprob: -5.47291374206543
    8. 'def' → logprob: -6.59791374206543
    9. ''à' → logprob: -7.22291374206543
    10. ':
' → logprob: -8.22291374206543

Token 414: ' lire' (ID: 46082)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.7818772196769714
    2. ' lire' → logprob: -0.7818772196769714
    3. 'l' → logprob: -2.531877279281616
    4. ' read' → logprob: -6.156877040863037
    5. 'Lire' → logprob: -6.531877040863037
    6. 'lit' → logprob: -7.656877040863037
    7. '_read' → logprob: -8.531877517700195
    8. '```' → logprob: -8.781877517700195
    9. 'n' → logprob: -9.031877517700195
    10. 'lect' → logprob: -9.406877517700195

Token 415: '.

' (ID: 364)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.40855157375335693
    2. '):
' → logprob: -1.158551573753357
    3. ')' → logprob: -4.2835516929626465
    4. '   ' → logprob: -4.9085516929626465
    5. '):
' → logprob: -8.283551216125488
    6. '):

' → logprob: -12.033551216125488
    7. 'def' → logprob: -12.033551216125488
    8. 'n' → logprob: -14.158551216125488
    9. ')
' → logprob: -14.283551216125488
    10. ' ' → logprob: -14.408551216125488

Token 416: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00191399990580976
    2. ')' → logprob: -6.626914024353027
    3. '
' → logprob: -8.876914024353027
    4. '"""' → logprob: -9.001914024353027
    5. '"""
' → logprob: -9.126914024353027
    6. 'def' → logprob: -9.751914024353027
    7. '    
' → logprob: -9.876914024353027
    8. '```' → logprob: -9.876914024353027
    9. '):
' → logprob: -11.126914024353027
    10. ')
' → logprob: -11.251914024353027

Token 417: ' Returns' (ID: 9609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005232575349509716
    2. 'Returns' (adapté à ' Returns') → logprob: -5.880232810974121
    3. '"""
' → logprob: -6.130232810974121
    4. 'returns' → logprob: -9.130232810974121
    5. '
' → logprob: -9.880232810974121
    6. '    
' → logprob: -10.880232810974121
    7. 'return' → logprob: -11.005232810974121
    8. '"""' → logprob: -11.130232810974121
    9. '```' → logprob: -11.880232810974121
    10. '    ' → logprob: -12.005232810974121

Token 418: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7515260577201843
    2. ':' → logprob: -1.876526117324829
    3. ':
' → logprob: -2.001526117324829
    4. '[
' → logprob: -2.251526117324829
    5. 'def' → logprob: -2.876526117324829
    6. ' [
' → logprob: -4.12652587890625
    7. '[' → logprob: -4.25152587890625
    8. '[List' → logprob: -4.62652587890625
    9. ':list' → logprob: -5.12652587890625
    10. ' list' → logprob: -5.25152587890625

Token 419: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.4140441635390744e-05
    2. ' list' → logprob: -12.000014305114746
    3. '    ' → logprob: -12.625014305114746
    4. 'def' → logprob: -13.000014305114746
    5. '  ' → logprob: -14.500014305114746
    6. '   ' → logprob: -14.750014305114746
    7. 'list' → logprob: -15.000014305114746
    8. '    
' → logprob: -15.125014305114746
    9. '[' → logprob: -15.625014305114746
    10. ' ' → logprob: -15.875014305114746

Token 420: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' (adapté à ' list') → logprob: -0.00044616201194003224
    2. ' list' → logprob: -7.750446319580078
    3. '[list' → logprob: -11.500446319580078
    4. '   ' → logprob: -12.625446319580078
    5. 'List' → logprob: -13.125446319580078
    6. 'def' → logprob: -17.625446319580078
    7. '[' → logprob: -18.250446319580078
    8. '```' → logprob: -18.875446319580078
    9. '_list' → logprob: -19.000446319580078
    10. '[List' → logprob: -19.000446319580078

Token 421: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06313160806894302
    2. '[str' → logprob: -3.43813157081604
    3. ' of' → logprob: -3.68813157081604
    4. '   ' → logprob: -6.313131809234619
    5. 'of' → logprob: -7.438131809234619
    6. '[' → logprob: -7.813131809234619
    7. '[List' → logprob: -7.813131809234619
    8. ':
' → logprob: -7.938131809234619
    9. '[list' → logprob: -8.188131332397461
    10. ' :' → logprob: -9.563131332397461

Token 422: ' Une' (ID: 19758)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.14401356875896454
    2. ' [' → logprob: -2.1440136432647705
    3. '[str' → logprob: -4.894013404846191
    4. '[List' → logprob: -5.644013404846191
    5. '[string' → logprob: -5.644013404846191
    6. '[' → logprob: -7.019013404846191
    7. '[line' → logprob: -7.269013404846191
    8. '[input' → logprob: -7.644013404846191
    9. '[int' → logprob: -9.144013404846191
    10. '   ' → logprob: -9.269013404846191

Token 423: ' liste' (ID: 31719)
  Prédit: '[str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[str' → logprob: -0.8887461423873901
    2. ' list' → logprob: -1.0137461423873901
    3. '[list' → logprob: -2.0137462615966797
    4. '[' → logprob: -3.2637462615966797
    5. ' [' → logprob: -3.8887462615966797
    6. 'list' → logprob: -4.01374626159668
    7. '[List' → logprob: -5.38874626159668
    8. '[n' → logprob: -5.76374626159668
    9. '[string' → logprob: -5.76374626159668
    10. '[
' → logprob: -6.01374626159668

Token 424: ' de' (ID: 334)
  Prédit: '[str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -0.36811739206314087
    2. ' of' → logprob: -1.243117332458496
    3. '   ' → logprob: -4.868117332458496
    4. 'of' → logprob: -5.243117332458496
    5. ' de' → logprob: -5.618117332458496
    6. '[' → logprob: -6.618117332458496
    7. ' des' → logprob: -7.243117332458496
    8. '[list' → logprob: -8.493117332458496
    9. '[List' → logprob: -9.243117332458496
    10. '```' → logprob: -9.618117332458496

Token 425: ' listes' (ID: 179198)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.06815654784440994
    2. 'list' → logprob: -2.8181564807891846
    3. '[str' → logprob: -5.693156719207764
    4. 'strings' → logprob: -6.068156719207764
    5. 'lists' → logprob: -8.193156242370605
    6. ' str' → logprob: -8.568156242370605
    7. ' list' → logprob: -11.943156242370605
    8. '[list' → logprob: -12.818156242370605
    9. 'string' → logprob: -12.943156242370605
    10. ' strings' → logprob: -13.193156242370605

Token 426: ' de' (ID: 334)
  Prédit: '[str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -0.021607711911201477
    2. 'of' → logprob: -5.396607875823975
    3. ' of' → logprob: -5.646607875823975
    4. '[list' → logprob: -5.771607875823975
    5. '(str' → logprob: -5.896607875823975
    6. ' de' → logprob: -6.021607875823975
    7. '(list' → logprob: -6.271607875823975
    8. 'de' → logprob: -6.396607875823975
    9. '   ' → logprob: -7.146607875823975
    10. '[List' → logprob: -8.396607398986816

Token 427: ' caractères' (ID: 183106)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.024201028048992157
    2. ' str' → logprob: -4.774200916290283
    3. 'list' → logprob: -4.774200916290283
    4. '[str' → logprob: -5.149200916290283
    5. 'char' → logprob: -7.399200916290283
    6. ' list' → logprob: -7.899200916290283
    7. 'chars' → logprob: -8.524201393127441
    8. 'strings' → logprob: -11.024201393127441
    9. '(str' → logprob: -12.649201393127441
    10. 'characters' → logprob: -12.649201393127441

Token 428: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4125562906265259
    2. '[n' → logprob: -2.2875561714172363
    3. '(n' → logprob: -3.2875561714172363
    4. ',' → logprob: -3.2875561714172363
    5. '[' → logprob: -3.4125561714172363
    6. '```' → logprob: -3.6625561714172363
    7. ']' → logprob: -4.037556171417236
    8. ':' → logprob: -4.412556171417236
    9. '[str' → logprob: -4.412556171417236
    10. '[['' → logprob: -5.037556171417236

Token 429: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -7.171581091824919e-05
    2. '
' → logprob: -10.87507152557373
    3. '    
' → logprob: -10.87507152557373
    4. 'def' → logprob: -11.00007152557373
    5. '```' → logprob: -11.87507152557373
    6. ']' → logprob: -12.75007152557373
    7. '"""
' → logprob: -13.75007152557373
    8. '[' → logprob: -13.87507152557373
    9. ')' → logprob: -14.00007152557373
    10. '[
' → logprob: -14.37507152557373

Token 430: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005120449932292104
    2. '"""
' (adapté à ' """
') → logprob: -7.62551212310791
    3. 'def' → logprob: -11.75051212310791
    4. '"""' → logprob: -12.87551212310791
    5. '    
' → logprob: -13.00051212310791
    6. 'return' → logprob: -13.00051212310791
    7. '```' → logprob: -13.00051212310791
    8. '
' → logprob: -13.37551212310791
    9. '    ' → logprob: -13.62551212310791
    10. ')' → logprob: -14.00051212310791

Token 431: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.9862216504407115e-05
    2. 'return' → logprob: -11.000020027160645
    3. ' return' → logprob: -12.875020027160645
    4. '   ' → logprob: -15.625020027160645
    5. '    ' → logprob: -16.125019073486328
    6. '
' → logprob: -16.125019073486328
    7. '    
' → logprob: -16.250019073486328
    8. '```' → logprob: -17.375019073486328
    9. '  ' → logprob: -18.000019073486328
    10. 'def' → logprob: -18.375019073486328

Token 432: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0071554225869476795
    2. ' return' → logprob: -5.257155418395996
    3. '   ' → logprob: -6.257155418395996
    4. 'result' → logprob: -13.882155418395996
    5. '	return' → logprob: -14.757155418395996
    6. 'lines' → logprob: -15.007155418395996
    7. 'res' → logprob: -15.007155418395996
    8. '[' → logprob: -15.507155418395996
    9. 'def' → logprob: -15.632155418395996
    10. '
' → logprob: -15.757155418395996

Token 433: ' [' (ID: 723)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.001786086824722588
    2. '[input' → logprob: -7.251786231994629
    3. ' [' → logprob: -7.501786231994629
    4. '[' → logprob: -8.251786231994629
    5. '[List' → logprob: -8.501786231994629
    6. '[line' → logprob: -10.251786231994629
    7. '[array' → logprob: -11.876786231994629
    8. '[int' → logprob: -12.251786231994629
    9. '[string' → logprob: -12.501786231994629
    10. '[l' → logprob: -13.001786231994629

Token 434: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -1.1472419600977446e-06
    2. ' list' → logprob: -14.375000953674316
    3. 'input' → logprob: -15.000000953674316
    4. '[list' → logprob: -16.500001907348633
    5. '(list' → logprob: -17.375001907348633
    6. '=list' → logprob: -19.125001907348633
    7. '	list' → logprob: -19.375001907348633
    8. '   ' → logprob: -19.375001907348633
    9. '```' → logprob: -19.875001907348633
    10. 'List' → logprob: -20.750001907348633

Token 435: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.00020377879263833165
    2. 'input' → logprob: -8.500204086303711
    3. '(' → logprob: -16.12520408630371
    4. '(str' → logprob: -16.37520408630371
    5. ' input' → logprob: -16.87520408630371
    6. '<input' → logprob: -18.25020408630371
    7. ',input' → logprob: -18.75020408630371
    8. '=input' → logprob: -18.75020408630371
    9. '[input' → logprob: -20.37520408630371
    10. '(sys' → logprob: -20.50020408630371

Token 436: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0019329203059896827
    2. '().' → logprob: -6.2519330978393555
    3. '()' → logprob: -12.876933097839355
    4. ' ())' → logprob: -14.001933097839355
    5. '())
' → logprob: -14.626933097839355
    6. '()))' → logprob: -14.876933097839355
    7. '()]' → logprob: -15.876933097839355
    8. '())
' → logprob: -18.50193214416504
    9. '();)' → logprob: -19.00193214416504
    10. '(' → logprob: -19.25193214416504

Token 437: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0011142584262415767
    2. 'for' → logprob: -6.876114368438721
    3. ' for' → logprob: -9.501113891601562
    4. ')' → logprob: -12.251113891601562
    5. '().' → logprob: -14.126113891601562
    6. '())' → logprob: -15.126113891601562
    7. '()]' → logprob: -15.251113891601562
    8. '(n' → logprob: -15.376113891601562
    9. ' ()' → logprob: -15.626113891601562
    10. '(' → logprob: -16.001113891601562

Token 438: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.011050059460103512
    2. ' _' → logprob: -4.511050224304199
    3. ' range' → logprob: -13.3860502243042
    4. ' ' → logprob: -14.6360502243042
    5. '_range' → logprob: -16.136049270629883
    6. 'range' → logprob: -16.636049270629883
    7. ' in' → logprob: -17.636049270629883
    8. '_=' → logprob: -18.386049270629883
    9. '‌' → logprob: -20.136049270629883
    10. '_]' → logprob: -20.261049270629883

Token 439: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.06271776556968689
    2. ' range' → logprob: -2.8127176761627197
    3. '_' → logprob: -7.937717914581299
    4. '_range' → logprob: -7.937717914581299
    5. ' in' → logprob: -10.31271743774414
    6. 'in' → logprob: -13.18771743774414
    7. '(range' → logprob: -15.06271743774414
    8. ' _' → logprob: -15.18771743774414
    9. '	range' → logprob: -16.06271743774414
    10. '_in' → logprob: -16.93771743774414

Token 440: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0007099286303855479
    2. ' range' → logprob: -7.2507100105285645
    3. '_range' → logprob: -18.875709533691406
    4. '(range' → logprob: -19.750709533691406
    5. '	range' → logprob: -20.875709533691406
    6. '_' → logprob: -21.750709533691406
    7. 'n' → logprob: -23.000709533691406
    8. 'in' → logprob: -24.375709533691406
    9. '
' → logprob: -24.625709533691406
    10. '.range' → logprob: -24.750709533691406

Token 441: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.001956348307430744
    2. 'n' → logprob: -6.251956462860107
    3. '(' → logprob: -10.50195598602295
    4. ' (' → logprob: -16.001956939697266
    5. ' n' → logprob: -16.376956939697266
    6. '(
' → logprob: -16.876956939697266
    7. '	n' → logprob: -18.501956939697266
    8. ')n' → logprob: -19.126956939697266
    9. '_n' → logprob: -20.501956939697266
    10. ',n' → logprob: -21.251956939697266

Token 442: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -1.1472419600977446e-06
    2. ')' → logprob: -14.125000953674316
    3. ')]
' → logprob: -15.875000953674316
    4. ']' → logprob: -15.875000953674316
    5. '()]' → logprob: -16.750001907348633
    6. '())' → logprob: -18.250001907348633
    7. '')]' → logprob: -18.250001907348633
    8. ')].' → logprob: -18.500001907348633
    9. ')}' → logprob: -18.875001907348633
    10. ')],' → logprob: -18.875001907348633

Token 443: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.003308896441012621
    2. '<|end|>' → logprob: -6.5033087730407715
    3. '
' → logprob: -6.7533087730407715
    4. 'class' → logprob: -7.5033087730407715
    5. '#' → logprob: -10.00330924987793
    6. '```' → logprob: -11.25330924987793
    7. '

' → logprob: -11.50330924987793
    8. '<|end|>' → logprob: -11.87830924987793
    9. '\' → logprob: -12.62830924987793
    10. '  
' → logprob: -13.62830924987793

Token 444: ' in' (ID: 306)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.10834687203168869
    2. ' main' → logprob: -3.608346939086914
    3. 'in' → logprob: -3.858346939086914
    4. 'solve' → logprob: -4.358346939086914
    5. 'factor' → logprob: -4.483346939086914
    6. 'print' → logprob: -5.358346939086914
    7. 'binary' → logprob: -5.358346939086914
    8. 'def' → logprob: -5.608346939086914
    9. 'debug' → logprob: -5.733346939086914
    10. 'out' → logprob: -6.108346939086914

Token 445: 'pl' (ID: 528)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.2543167173862457
    2. 'pl' → logprob: -1.8793166875839233
    3. 'put' → logprob: -3.504316806793213
    4. 'p' → logprob: -4.254316806793213
    5. 'def' → logprob: -5.129316806793213
    6. 'it' → logprob: -5.129316806793213
    7. 'pt' → logprob: -5.879316806793213
    8. 's' → logprob: -6.129316806793213
    9. 'd' → logprob: -6.754316806793213
    10. 'tl' → logprob: -6.879316806793213

Token 446: 'T' (ID: 51)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5651825666427612
    2. '(n' → logprob: -1.5651825666427612
    3. 't' → logprob: -2.565182685852051
    4. 'm' → logprob: -2.690182685852051
    5. 'n' → logprob: -3.815182685852051
    6. 'S' → logprob: -4.440182685852051
    7. 'L' → logprob: -4.940182685852051
    8. '(' → logprob: -5.190182685852051
    9. 'w' → logprob: -5.315182685852051
    10. 'd' → logprob: -5.440182685852051

Token 447: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.003352378262206912
    2. '(' → logprob: -5.878352165222168
    3. '()' → logprob: -8.253352165222168
    4. 'uple' → logprob: -9.128352165222168
    5. 'def' → logprob: -10.003352165222168
    6. '(k' → logprob: -10.128352165222168
    7. '():' → logprob: -10.503352165222168
    8. '(m' → logprob: -11.753352165222168
    9. '():
' → logprob: -12.128352165222168
    10. '(s' → logprob: -12.128352165222168

Token 448: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0028726309537887573
    2. '):
' → logprob: -5.877872467041016
    3. '(n' → logprob: -9.877872467041016
    4. ')' → logprob: -11.252872467041016
    5. ' ):' → logprob: -13.627872467041016
    6. ':' → logprob: -14.252872467041016
    7. 'n' → logprob: -14.627872467041016
    8. '):
' → logprob: -14.752872467041016
    9. '=' → logprob: -15.377872467041016
    10. ',' → logprob: -15.752872467041016

Token 449: '   ' (ID: 271)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.6318651437759399
    2. 'def' → logprob: -1.25686514377594
    3. '   ' → logprob: -2.3818650245666504
    4. ':' → logprob: -3.5068650245666504
    5. '):' → logprob: -3.5068650245666504
    6. '(' → logprob: -4.25686502456665
    7. '(
' → logprob: -4.75686502456665
    8. '):
' → logprob: -6.00686502456665
    9. ':
' → logprob: -6.38186502456665
    10. 'n' → logprob: -7.13186502456665

Token 450: ' """
' (ID: 7037)
  Prédit: '"""
'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""
' (adapté à ' """
') → logprob: -0.006300961598753929
    2. 'def' → logprob: -5.381300926208496
    3. '   ' → logprob: -6.756300926208496
    4. 'return' → logprob: -7.881300926208496
    5. '[
' → logprob: -9.881300926208496
    6. '"""' → logprob: -10.506300926208496
    7. ' """
' → logprob: -11.131300926208496
    8. ''''
' → logprob: -11.381300926208496
    9. '[' → logprob: -12.131300926208496
    10. '"""
' → logprob: -12.631300926208496

Token 451: '   ' (ID: 271)
  Prédit: '"""
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""
' → logprob: -0.013385972939431667
    2. '   ' → logprob: -4.763385772705078
    3. 'def' → logprob: -5.388385772705078
    4. '"
' → logprob: -8.763385772705078
    5. 'return' → logprob: -11.388385772705078
    6. ' """
' → logprob: -11.763385772705078
    7. '"""' → logprob: -12.138385772705078
    8. ' def' → logprob: -12.888385772705078
    9. '"""
' → logprob: -13.638385772705078
    10. '"' → logprob: -13.763385772705078

Token 452: ' Lit' (ID: 45595)
  Prédit: '"""
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""
' → logprob: -0.6840096712112427
    2. 'def' → logprob: -0.9340096712112427
    3. 'return' → logprob: -2.309009552001953
    4. '   ' → logprob: -6.184009552001953
    5. '
' → logprob: -7.684009552001953
    6. '"""' → logprob: -8.809009552001953
    7. ' return' → logprob: -9.059009552001953
    8. ''''
' → logprob: -9.309009552001953
    9. ' def' → logprob: -9.809009552001953
    10. '[
' → logprob: -10.184009552001953

Token 453: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.038380660116672516
    2. '(n' → logprob: -3.2883806228637695
    3. ' n' → logprob: -8.03838062286377
    4. 'def' → logprob: -12.41338062286377
    5. '[n' → logprob: -12.66338062286377
    6. '	n' → logprob: -13.03838062286377
    7. '   ' → logprob: -13.28838062286377
    8. 'int' → logprob: -13.41338062286377
    9. 'tuple' → logprob: -13.41338062286377
    10. 't' → logprob: -14.41338062286377

Token 454: ' lignes' (ID: 81687)
  Prédit: ' lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.21460561454296112
    2. 'lines' → logprob: -2.4646055698394775
    3. ' tuples' → logprob: -2.7146055698394775
    4. '(n' → logprob: -3.8396055698394775
    5. ' lignes' → logprob: -5.089605808258057
    6. '(lines' → logprob: -5.464605808258057
    7. '_lines' → logprob: -5.464605808258057
    8. 'uples' → logprob: -6.589605808258057
    9. ' tuple' → logprob: -6.839605808258057
    10. '()' → logprob: -7.714605808258057

Token 455: ',' (ID: 11)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.13764303922653198
    2. ',' → logprob: -2.5126430988311768
    3. 'def' → logprob: -3.6376430988311768
    4. '(' → logprob: -4.012642860412598
    5. '   ' → logprob: -7.012642860412598
    6. '(
' → logprob: -7.012642860412598
    7. '(lambda' → logprob: -7.762642860412598
    8. 'for' → logprob: -8.512642860412598
    9. ' (' → logprob: -9.137642860412598
    10. 's' → logprob: -9.262642860412598

Token 456: ' chaque' (ID: 21194)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'each' → logprob: -0.7764123678207397
    2. '   ' → logprob: -1.1514123678207397
    3. ' each' → logprob: -1.6514123678207397
    4. ')' → logprob: -4.151412487030029
    5. 'lambda' → logprob: -5.026412487030029
    6. 'n' → logprob: -5.651412487030029
    7. ' lambda' → logprob: -6.026412487030029
    8. 'def' → logprob: -6.401412487030029
    9. 'Each' → logprob: -7.651412487030029
    10. ' ' → logprob: -8.151412010192871

Token 457: ' ligne' (ID: 19583)
  Prédit: ' ligne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.20445017516613007
    2. ' line' → logprob: -2.2044501304626465
    3. 'ligne' → logprob: -3.0794501304626465
    4. 'line' → logprob: -4.4544501304626465
    5. '   ' → logprob: -4.8294501304626465
    6. ' fois' → logprob: -5.9544501304626465
    7. '()' → logprob: -6.2044501304626465
    8. ' lignes' → logprob: -7.4544501304626465
    9. '_' → logprob: -8.079450607299805
    10. ' =' → logprob: -8.329450607299805

Token 458: ' étant' (ID: 47869)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.19246873259544373
    2. ' =' → logprob: -2.1924686431884766
    3. '   ' → logprob: -3.4424686431884766
    4. ' étant' → logprob: -4.942468643188477
    5. '=list' → logprob: -5.067468643188477
    6. ' being' → logprob: -5.942468643188477
    7. ')' → logprob: -6.067468643188477
    8. ' est' → logprob: -6.192468643188477
    9. ':' → logprob: -6.317468643188477
    10. '()' → logprob: -6.442468643188477

Token 459: ' convert' (ID: 8452)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.3825366199016571
    2. 'tuple' → logprob: -1.6325366497039795
    3. ' list' → logprob: -2.7575366497039795
    4. ' tuple' → logprob: -2.8825366497039795
    5. ' une' → logprob: -7.1325364112854
    6. 't' → logprob: -7.1325364112854
    7. 'a' → logprob: -8.007536888122559
    8. '=list' → logprob: -8.507536888122559
    9. 'une' → logprob: -8.632536888122559
    10. '(tuple' → logprob: -9.132536888122559

Token 460: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.11557067185640335
    2. 'i' → logprob: -2.2405707836151123
    3. 'ies' → logprob: -6.615570545196533
    4. ' en' → logprob: -6.740570545196533
    5. 'e' → logprob: -9.490571022033691
    6. '   ' → logprob: -10.115571022033691
    7. 'is' → logprob: -10.115571022033691
    8. 'it' → logprob: -10.615571022033691
    9. 'ée' → logprob: -12.365571022033691
    10. 'ir' → logprob: -12.490571022033691

Token 461: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.019457172602415085
    2. '   ' → logprob: -5.1444573402404785
    3. 'en' → logprob: -5.8944573402404785
    4. '(' → logprob: -6.6444573402404785
    5. ' à' → logprob: -7.0194573402404785
    6. 'à' → logprob: -7.1444573402404785
    7. '=list' → logprob: -7.1444573402404785
    8. 'def' → logprob: -7.2694573402404785
    9. '()' → logprob: -7.2694573402404785
    10. 'list' → logprob: -7.3944573402404785

Token 462: ' tuple' (ID: 31311)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.32372716069221497
    2. ' tuple' → logprob: -1.3237271308898926
    3. 'list' → logprob: -4.698727130889893
    4. ' list' → logprob: -6.698727130889893
    5. 'tu' → logprob: -11.07372760772705
    6. ' tuples' → logprob: -11.07372760772705
    7. 't' → logprob: -11.19872760772705
    8. 'str' → logprob: -11.57372760772705
    9. '   ' → logprob: -11.94872760772705
    10. '(tuple' → logprob: -12.69872760772705

Token 463: ' de' (ID: 334)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.2720579206943512
    2. '(map' → logprob: -2.5220580101013184
    3. '(list' → logprob: -3.6470580101013184
    4. '(' → logprob: -4.022058010101318
    5. 's' → logprob: -4.022058010101318
    6. '(int' → logprob: -4.147058010101318
    7. '([' → logprob: -4.522058010101318
    8. ')' → logprob: -4.772058010101318
    9. '[int' → logprob: -4.772058010101318
    10. '(tuple' → logprob: -4.772058010101318

Token 464: ' caractères' (ID: 183106)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.07071378082036972
    2. 'ints' → logprob: -2.945713758468628
    3. 'map' → logprob: -4.820713996887207
    4. '(int' → logprob: -5.195713996887207
    5. 'strings' → logprob: -7.195713996887207
    6. 'inte' → logprob: -7.820713996887207
    7. '(map' → logprob: -7.945713996887207
    8. ' int' → logprob: -8.570713996887207
    9. 'str' → logprob: -9.070713996887207
    10. ' ints' → logprob: -9.445713996887207

Token 465: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.7797266840934753
    2. '(input' → logprob: -1.2797267436981201
    3. '   ' → logprob: -2.40472674369812
    4. '.' → logprob: -3.65472674369812
    5. ' for' → logprob: -3.65472674369812
    6. ' (' → logprob: -3.65472674369812
    7. ')' → logprob: -3.77972674369812
    8. 'for' → logprob: -3.77972674369812
    9. '(' → logprob: -3.90472674369812
    10. ',' → logprob: -3.90472674369812

Token 466: 'cha' (ID: 3836)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03080180659890175
    2. '   ' → logprob: -3.780801773071289
    3. ')
' → logprob: -6.405801773071289
    4. ')n' → logprob: -6.655801773071289
    5. '):
' → logprob: -6.780801773071289
    6. 'n' → logprob: -7.155801773071289
    7. 'char' → logprob: -7.530801773071289
    8. 'chars' → logprob: -7.655801773071289
    9. 'str' → logprob: -7.905801773071289
    10. '(n' → logprob: -8.030801773071289

Token 467: 'îne' (ID: 55188)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.649214506149292
    2. '   ' → logprob: -0.774214506149292
    3. 'îne' → logprob: -5.024214744567871
    4. 'înes' → logprob: -5.649214744567871
    5. 'ines' → logprob: -7.024214744567871
    6. 'acters' → logprob: -7.649214744567871
    7. '"""
' → logprob: -8.024214744567871
    8. 'î' → logprob: -8.024214744567871
    9. '\' → logprob: -8.149214744567871
    10. ''''
' → logprob: -8.149214744567871

Token 468: ').

' (ID: 3991)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.666584312915802
    2. ').' → logprob: -1.0415842533111572
    3. '):' → logprob: -2.0415842533111572
    4. '):
' → logprob: -5.916584491729736
    5. '):

' → logprob: -8.541584014892578
    6. '   ' → logprob: -8.666584014892578
    7. '.' → logprob: -9.166584014892578
    8. 's' → logprob: -9.291584014892578
    9. ')**' → logprob: -9.416584014892578
    10. ').
' → logprob: -9.416584014892578

Token 469: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007846755906939507
    2. 'def' → logprob: -4.882846832275391
    3. ' def' → logprob: -9.13284683227539
    4. '```' → logprob: -9.88284683227539
    5. ')' → logprob: -10.13284683227539
    6. '
' → logprob: -11.75784683227539
    7. '  ' → logprob: -12.00784683227539
    8. '    ' → logprob: -12.13284683227539
    9. '<|end|>' → logprob: -12.13284683227539
    10. '[' → logprob: -12.75784683227539

Token 470: ' Args' (ID: 39185)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25275659561157227
    2. 'def' → logprob: -1.5027565956115723
    3. ' def' → logprob: -7.377756595611572
    4. '
' → logprob: -9.502756118774414
    5. '```' → logprob: -9.627756118774414
    6. '"""
' → logprob: -10.127756118774414
    7. ')' → logprob: -12.377756118774414
    8. '    
' → logprob: -12.752756118774414
    9. '  ' → logprob: -12.877756118774414
    10. '    ' → logprob: -13.252756118774414

Token 471: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07110912352800369
    2. '       ' → logprob: -3.5711090564727783
    3. '(n' → logprob: -3.6961090564727783
    4. ':' → logprob: -4.696109294891357
    5. '(' → logprob: -6.696109294891357
    6. ':
' → logprob: -6.821109294891357
    7. '):
' → logprob: -6.946109294891357
    8. ',' → logprob: -7.446109294891357
    9. '[' → logprob: -7.446109294891357
    10. '):' → logprob: -7.571109294891357

Token 472: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3880579471588135
    2. '       ' → logprob: -1.1380579471588135
    3. '    ' → logprob: -8.263057708740234
    4. '        ' → logprob: -8.513057708740234
    5. '     ' → logprob: -8.513057708740234
    6. 'n' → logprob: -9.013057708740234
    7. 'def' → logprob: -9.388057708740234
    8. '           ' → logprob: -9.513057708740234
    9. '```' → logprob: -9.513057708740234
    10. '      ' → logprob: -9.763057708740234

Token 473: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -1.5928495486150496e-05
    2. ' n' → logprob: -11.750016212463379
    3. '   ' → logprob: -11.750016212463379
    4. '```' → logprob: -17.625015258789062
    5. '	n' → logprob: -17.875015258789062
    6. '       ' → logprob: -18.500015258789062
    7. 'def' → logprob: -19.000015258789062
    8. 'int' → logprob: -19.125015258789062
    9. '(n' → logprob: -19.500015258789062
    10. '_n' → logprob: -19.750015258789062

Token 474: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.1523207128047943
    2. ' (' → logprob: -2.027320623397827
    3. '(int' → logprob: -5.527320861816406
    4. ':' → logprob: -5.777320861816406
    5. '):' → logprob: -7.152320861816406
    6. ')' → logprob: -7.527320861816406
    7. '):
' → logprob: -7.652320861816406
    8. '(' → logprob: -7.652320861816406
    9. ')(' → logprob: -9.777320861816406
    10. 'n' → logprob: -10.652320861816406

Token 475: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -8.061054359131958e-06
    2. 'n' → logprob: -11.750007629394531
    3. ' int' → logprob: -16.37500762939453
    4. '[int' → logprob: -18.62500762939453
    5. '(int' → logprob: -19.50000762939453
    6. ':int' → logprob: -19.87500762939453
    7. '=int' → logprob: -19.87500762939453
    8. ')' → logprob: -21.12500762939453
    9. '<int' → logprob: -21.12500762939453
    10. '   ' → logprob: -21.25000762939453

Token 476: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.021688200533390045
    2. ':' → logprob: -4.146687984466553
    3. '):
' → logprob: -5.271687984466553
    4. '(n' → logprob: -8.021688461303711
    5. '   ' → logprob: -10.396688461303711
    6. 'n' → logprob: -10.646688461303711
    7. '
' → logprob: -10.771688461303711
    8. '```' → logprob: -10.896688461303711
    9. ')' → logprob: -11.146688461303711
    10. ':n' → logprob: -11.771688461303711

Token 477: ' Le' (ID: 2018)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.939958930015564
    2. 'int' → logprob: -1.439958930015564
    3. ' n' → logprob: -1.564958930015564
    4. ' int' → logprob: -1.814958930015564
    5. '   ' → logprob: -8.439958572387695
    6. '[int' → logprob: -9.689958572387695
    7. '[n' → logprob: -9.939958572387695
    8. ' ' → logprob: -10.189958572387695
    9. '(n' → logprob: -10.314958572387695
    10. '(int' → logprob: -11.314958572387695

Token 478: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.6991210579872131
    2. 'nombre' → logprob: -0.9491210579872131
    3. 'n' → logprob: -2.1991209983825684
    4. 'int' → logprob: -6.074120998382568
    5. ' n' → logprob: -6.074120998382568
    6. ' int' → logprob: -9.074121475219727
    7. '(n' → logprob: -9.574121475219727
    8. ' nombres' → logprob: -9.574121475219727
    9. 'number' → logprob: -10.324121475219727
    10. ' number' → logprob: -10.574121475219727

Token 479: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23984912037849426
    2. ':' → logprob: -2.864849090576172
    3. ')' → logprob: -2.989849090576172
    4. ' de' → logprob: -3.364849090576172
    5. ' à' → logprob: -4.114849090576172
    6. '(n' → logprob: -4.364849090576172
    7. 'def' → logprob: -4.489849090576172
    8. '):' → logprob: -4.739849090576172
    9. 'd' → logprob: -5.739849090576172
    10. ' d' → logprob: -5.864849090576172

Token 480: ' lignes' (ID: 81687)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0922766625881195
    2. ' lignes' → logprob: -2.4672765731811523
    3. 'lines' → logprob: -5.967276573181152
    4. 'ligne' → logprob: -7.592276573181152
    5. ' lines' → logprob: -8.467276573181152
    6. '```' → logprob: -11.092276573181152
    7. '_lines' → logprob: -11.717276573181152
    8. '_l' → logprob: -11.842276573181152
    9. 'line' → logprob: -12.592276573181152
    10. 'lig' → logprob: -12.592276573181152

Token 481: ' à' (ID: 1221)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.063522107899189
    2. '   ' → logprob: -3.4385221004486084
    3. '):
' → logprob: -3.6885221004486084
    4. ')' → logprob: -5.5635223388671875
    5. ':' → logprob: -8.313522338867188
    6. '(n' → logprob: -9.438522338867188
    7. '    ' → logprob: -9.938522338867188
    8. 'def' → logprob: -10.188522338867188
    9. '():' → logprob: -10.313522338867188
    10. ',' → logprob: -10.563522338867188

Token 482: ' lire' (ID: 46082)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.48464152216911316
    2. 'read' → logprob: -0.9846415519714355
    3. ' range' → logprob: -5.2346415519714355
    4. ' lire' → logprob: -5.4846415519714355
    5. 'l' → logprob: -7.4846415519714355
    6. ' read' → logprob: -8.484641075134277
    7. 'Lire' → logprob: -8.859641075134277
    8. 'return' → logprob: -9.984641075134277
    9. '_read' → logprob: -10.609641075134277
    10. ' Lire' → logprob: -11.984641075134277

Token 483: '.

' (ID: 364)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02921181730926037
    2. '):
' → logprob: -3.7792117595672607
    3. ')' → logprob: -6.02921199798584
    4. '   ' → logprob: -6.02921199798584
    5. '(n' → logprob: -7.15421199798584
    6. 'n' → logprob: -8.02921199798584
    7. '):
' → logprob: -12.27921199798584
    8. ',' → logprob: -12.40421199798584
    9. '):

' → logprob: -12.65421199798584
    10. ')n' → logprob: -12.90421199798584

Token 484: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008750136941671371
    2. ')' → logprob: -4.883749961853027
    3. 'def' → logprob: -7.508749961853027
    4. '
' → logprob: -8.883749961853027
    5. '```' → logprob: -9.008749961853027
    6. 'return' → logprob: -9.383749961853027
    7. 'n' → logprob: -9.383749961853027
    8. '):
' → logprob: -9.758749961853027
    9. ')
' → logprob: -10.633749961853027
    10. '    
' → logprob: -10.758749961853027

Token 485: ' Returns' (ID: 9609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009874965064227581
    2. 'def' → logprob: -5.5098748207092285
    3. 'return' → logprob: -6.5098748207092285
    4. '
' → logprob: -6.7598748207092285
    5. '```' → logprob: -6.7598748207092285
    6. 'n' → logprob: -7.0098748207092285
    7. '"""
' → logprob: -7.6348748207092285
    8. 'returns' → logprob: -8.259875297546387
    9. 'Returns' (adapté à ' Returns') → logprob: -8.884875297546387
    10. '``' → logprob: -9.759875297546387

Token 486: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.9308515191078186
    2. ':' → logprob: -1.0558514595031738
    3. '   ' → logprob: -2.430851459503174
    4. '(n' → logprob: -2.805851459503174
    5. '):
' → logprob: -3.305851459503174
    6. 'def' → logprob: -3.555851459503174
    7. '[n' → logprob: -4.305851459503174
    8. '```' → logprob: -4.805851459503174
    9. 'n' → logprob: -5.055851459503174
    10. '[
' → logprob: -5.805851459503174

Token 487: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0024943258613348007
    2. '       ' → logprob: -6.2524943351745605
    3. '    ' → logprob: -8.127493858337402
    4. 'n' → logprob: -9.127493858337402
    5. '```' → logprob: -9.877493858337402
    6. '  ' → logprob: -11.002493858337402
    7. '      ' → logprob: -11.002493858337402
    8. '   ' → logprob: -11.127493858337402
    9. '     ' → logprob: -11.377493858337402
    10. '(n' → logprob: -11.877493858337402

Token 488: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' (adapté à ' list') → logprob: -0.00033546582562848926
    2. ' list' → logprob: -8.000335693359375
    3. 'tuple' → logprob: -17.125335693359375
    4. '[list' → logprob: -17.375335693359375
    5. '   ' → logprob: -18.750335693359375
    6. ' tuple' → logprob: -20.000335693359375
    7. 'List' → logprob: -20.375335693359375
    8. '```' → logprob: -20.500335693359375
    9. '       ' → logprob: -20.750335693359375
    10. '	list' → logprob: -20.875335693359375

Token 489: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0012621370842680335
    2. '<|end|>' → logprob: -7.501262187957764
    3. '[' → logprob: -8.626261711120605
    4. ':
' → logprob: -8.876261711120605
    5. '   ' → logprob: -9.001261711120605
    6. '):' → logprob: -9.126261711120605
    7. ' of' → logprob: -10.501261711120605
    8. '[int' → logprob: -10.626261711120605
    9. '<|end|>' → logprob: -10.876261711120605
    10. '=' → logprob: -11.376261711120605

Token 490: ' Une' (ID: 19758)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.055248845368623734
    2. ' [' → logprob: -3.805248737335205
    3. '[list' → logprob: -3.805248737335205
    4. '[t' → logprob: -4.805248737335205
    5. '   ' → logprob: -7.305248737335205
    6. '[T' → logprob: -9.055249214172363
    7. '[List' → logprob: -9.305249214172363
    8. '[int' → logprob: -9.805249214172363
    9. '[to' → logprob: -10.180249214172363
    10. '[type' → logprob: -10.430249214172363

Token 491: ' liste' (ID: 31719)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.037363722920417786
    2. 'list' → logprob: -3.7873637676239014
    3. '[list' → logprob: -4.412363529205322
    4. '[' → logprob: -6.412363529205322
    5. '[
' → logprob: -9.03736400604248
    6. ' [' → logprob: -10.53736400604248
    7. '=list' → logprob: -11.16236400604248
    8. 's' → logprob: -11.16236400604248
    9. '[List' → logprob: -11.16236400604248
    10. ' [
' → logprob: -11.91236400604248

Token 492: ' de' (ID: 334)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.10497845709323883
    2. '<|end|>' → logprob: -2.604978561401367
    3. '[' → logprob: -4.229978561401367
    4. ' des' → logprob: -5.479978561401367
    5. 'of' → logprob: -5.979978561401367
    6. ' de' → logprob: -6.729978561401367
    7. '<|end|>' → logprob: -7.229978561401367
    8. ')' → logprob: -7.854978561401367
    9. '   ' → logprob: -7.979978561401367
    10. '[
' → logprob: -8.229978561401367

Token 493: ' tuples' (ID: 112464)
  Prédit: 'tu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tu' → logprob: -0.33035874366760254
    2. ' tuples' → logprob: -1.3303587436676025
    3. 'tuple' → logprob: -4.080358505249023
    4. ' tuple' → logprob: -10.580358505249023
    5. '(tuple' → logprob: -11.205358505249023
    6. 'tokens' → logprob: -12.705358505249023
    7. 't' → logprob: -12.705358505249023
    8. 'Tu' → logprob: -13.080358505249023
    9. 'uples' → logprob: -13.580358505249023
    10. '-tu' → logprob: -14.205358505249023

Token 494: ' de' (ID: 334)
  Prédit: '[str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[str' → logprob: -0.5769128203392029
    2. ' of' → logprob: -1.7019128799438477
    3. '[' → logprob: -2.0769128799438477
    4. '<|end|>' → logprob: -3.4519128799438477
    5. 'of' → logprob: -4.076912879943848
    6. ')' → logprob: -4.201912879943848
    7. ',' → logprob: -4.951912879943848
    8. '   ' → logprob: -4.951912879943848
    9. '[list' → logprob: -4.951912879943848
    10. '(' → logprob: -5.076912879943848

Token 495: ' caractères' (ID: 183106)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.23793986439704895
    2. 'characters' → logprob: -2.1129398345947266
    3. 'chars' → logprob: -2.6129398345947266
    4. '(str' → logprob: -4.862939834594727
    5. ' caractères' → logprob: -5.737939834594727
    6. 'char' → logprob: -6.362939834594727
    7. ' characters' → logprob: -6.487939834594727
    8. '(char' → logprob: -6.862939834594727
    9. ' str' → logprob: -6.987939834594727
    10. 'strings' → logprob: -8.112939834594727

Token 496: '.
' (ID: 558)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.4631969928741455
    2. ')' → logprob: -1.2131969928741455
    3. ']' → logprob: -4.213196754455566
    4. '()' → logprob: -4.338196754455566
    5. 'for' → logprob: -4.713196754455566
    6. ' for' → logprob: -4.838196754455566
    7. '(input' → logprob: -4.963196754455566
    8. '   ' → logprob: -5.213196754455566
    9. '```' → logprob: -5.338196754455566
    10. '[n' → logprob: -5.838196754455566

Token 497: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030620263889431953
    2. '<|end|>' → logprob: -4.155620098114014
    3. ')' → logprob: -5.280620098114014
    4. '(n' → logprob: -5.655620098114014
    5. 'def' → logprob: -6.155620098114014
    6. '```' → logprob: -6.280620098114014
    7. '[' → logprob: -7.655620098114014
    8. '(' → logprob: -7.780620098114014
    9. '<|end|>' → logprob: -8.780620574951172
    10. ']' → logprob: -8.905620574951172

Token 498: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006914764177054167
    2. '"""
' (adapté à ' """
') → logprob: -5.2569146156311035
    3. '```' → logprob: -6.6319146156311035
    4. '<|end|>' → logprob: -8.881915092468262
    5. '"""' → logprob: -9.506915092468262
    6. ')' → logprob: -9.756915092468262
    7. 'def' → logprob: -10.131915092468262
    8. ']' → logprob: -11.756915092468262
    9. '  ' → logprob: -11.881915092468262
    10. ' """
' → logprob: -12.006915092468262

Token 499: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -3.91732100979425e-05
    2. 'return' → logprob: -10.250039100646973
    3. 'def' → logprob: -12.875039100646973
    4. ' return' → logprob: -15.000039100646973
    5. '    ' → logprob: -15.500039100646973
    6. ')' → logprob: -15.500039100646973
    7. '  ' → logprob: -15.625039100646973
    8. '```' → logprob: -16.25004005432129
    9. '[' → logprob: -16.50004005432129
    10. '
' → logprob: -17.37504005432129

Token 500: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.03829323872923851
    2. '   ' → logprob: -3.2882931232452393
    3. ' return' → logprob: -8.28829288482666
    4. 'def' → logprob: -16.038293838500977
    5. '	return' → logprob: -16.163293838500977
    6. '
' → logprob: -16.913293838500977
    7. '```' → logprob: -16.913293838500977
    8. '  ' → logprob: -18.913293838500977
    9. '{return' → logprob: -19.163293838500977
    10. ')return' → logprob: -19.913293838500977

Token 501: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.17293930053710938
    2. '[list' → logprob: -2.4229393005371094
    3. ' [' → logprob: -2.6729393005371094
    4. '[t' → logprob: -6.922939300537109
    5. '[List' → logprob: -9.67293930053711
    6. 'tuple' → logprob: -10.17293930053711
    7. '[to' → logprob: -12.42293930053711
    8. '[type' → logprob: -12.92293930053711
    9. '[int' → logprob: -13.17293930053711
    10. ' tuple' → logprob: -13.42293930053711

Token 502: 'tuple' (ID: 52834)
  Prédit: 'tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -1.8624639324116288e-06
    2. ' tuple' → logprob: -13.250001907348633
    3. '(tuple' → logprob: -17.000001907348633
    4. 'tu' → logprob: -20.750001907348633
    5. 'Tuple' → logprob: -24.375001907348633
    6. 'list' → logprob: -24.750001907348633
    7. '_tuple' → logprob: -25.125001907348633
    8. '   ' → logprob: -25.500001907348633
    9. 't' → logprob: -25.750001907348633
    10. 'tpl' → logprob: -26.250001907348633

Token 503: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.006912748795002699
    2. 'input' → logprob: -5.006912708282471
    3. '(list' → logprob: -8.756913185119629
    4. 'list' → logprob: -10.131913185119629
    5. ' input' → logprob: -16.006912231445312
    6. '(map' → logprob: -17.256912231445312
    7. '[input' → logprob: -17.631912231445312
    8. '=input' → logprob: -18.006912231445312
    9. '(' → logprob: -18.131912231445312
    10. '<input' → logprob: -18.256912231445312

Token 504: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.00034177995985373855
    2. '().' → logprob: -8.250341415405273
    3. '()' → logprob: -9.500341415405273
    4. '()[' → logprob: -12.750341415405273
    5. '()]' → logprob: -13.375341415405273
    6. ' ())' → logprob: -14.500341415405273
    7. '())
' → logprob: -14.750341415405273
    8. '()))' → logprob: -15.500341415405273
    9. '()
' → logprob: -16.750341415405273
    10. '()),' → logprob: -17.000341415405273

Token 505: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1532171368598938
    2. ' for' → logprob: -2.153217077255249
    3. '()' → logprob: -3.653217077255249
    4. ')' → logprob: -10.403217315673828
    5. '   ' → logprob: -11.778217315673828
    6. '	for' → logprob: -15.278217315673828
    7. 'n' → logprob: -15.653217315673828
    8. ' ' → logprob: -15.778217315673828
    9. '())' → logprob: -16.028217315673828
    10. ' ()' → logprob: -16.153217315673828

Token 506: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0003362966235727072
    2. ' _' → logprob: -8.000336647033691
    3. ' range' → logprob: -14.250336647033691
    4. '_range' → logprob: -16.125335693359375
    5. ' ' → logprob: -17.250335693359375
    6. ' in' → logprob: -17.375335693359375
    7. 'range' → logprob: -17.875335693359375
    8. 'in' → logprob: -19.875335693359375
    9. '_in' → logprob: -20.250335693359375
    10. 'n' → logprob: -20.375335693359375

Token 507: ' in' (ID: 306)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.05272893235087395
    2. 'range' → logprob: -3.0527288913726807
    3. ' range' → logprob: -5.55272912979126
    4. '_range' → logprob: -8.302728652954102
    5. ' _' → logprob: -11.802728652954102
    6. ' in' → logprob: -14.552728652954102
    7. 'in' → logprob: -16.3027286529541
    8. '(range' → logprob: -16.8027286529541
    9. '_=' → logprob: -17.0527286529541
    10. '_

' → logprob: -18.0527286529541

Token 508: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.03812927380204201
    2. ' range' → logprob: -3.2881293296813965
    3. '_' → logprob: -10.038128852844238
    4. '_range' → logprob: -10.038128852844238
    5. '(range' → logprob: -14.913128852844238
    6. '	range' → logprob: -18.163129806518555
    7. 'n' → logprob: -18.913129806518555
    8. ' in' → logprob: -20.413129806518555
    9. 'in' → logprob: -20.538129806518555
    10. ' _' → logprob: -20.788129806518555

Token 509: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.01815052703022957
    2. 'n' → logprob: -4.018150329589844
    3. '(' → logprob: -14.643150329589844
    4. ' (' → logprob: -15.643150329589844
    5. ' n' → logprob: -16.643150329589844
    6. ')' → logprob: -20.893150329589844
    7. '[n' → logprob: -21.018150329589844
    8. ')n' → logprob: -21.518150329589844
    9. 'range' → logprob: -21.893150329589844
    10. '	n' → logprob: -21.893150329589844

Token 510: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.005419326946139336
    2. 'n' → logprob: -5.5054192543029785
    3. '(n' → logprob: -6.6304192543029785
    4. ')n' → logprob: -11.755419731140137
    5. ')' → logprob: -11.880419731140137
    6. ' n' → logprob: -13.505419731140137
    7. '(' → logprob: -13.880419731140137
    8. '_n' → logprob: -14.380419731140137
    9. ')])' → logprob: -14.755419731140137
    10. ')],' → logprob: -14.880419731140137

Token 511: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0016726837493479252
    2. '<|end|>' → logprob: -6.876672744750977
    3. '
' → logprob: -8.376672744750977
    4. '#' → logprob: -8.876672744750977
    5. '\' → logprob: -9.126672744750977
    6. 'class' → logprob: -9.876672744750977
    7. '```' → logprob: -9.876672744750977
    8. '\n' → logprob: -10.751672744750977
    9. '

' → logprob: -11.876672744750977
    10. '<|end|>' → logprob: -11.876672744750977

Token 512: ' in' (ID: 306)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.3666114807128906
    2. ' main' → logprob: -1.2416114807128906
    3. 'in' → logprob: -4.991611480712891
    4. 'def' → logprob: -5.616611480712891
    5. 'solve' → logprob: -6.616611480712891
    6. 'input' → logprob: -6.866611480712891
    7. ' in' → logprob: -6.991611480712891
    8. 'print' → logprob: -7.491611480712891
    9. 'thread' → logprob: -7.866611480712891
    10. 'factor' → logprob: -7.866611480712891

Token 513: 'pll' (ID: 187560)
  Prédit: 'pl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pl' → logprob: -0.8273638486862183
    2. 't' → logprob: -1.0773638486862183
    3. 'put' → logprob: -1.9523638486862183
    4. 'p' → logprob: -3.202363967895508
    5. 'def' → logprob: -3.577363967895508
    6. 'pt' → logprob: -5.077363967895508
    7. 'd' → logprob: -6.327363967895508
    8. 'range' → logprob: -7.702363967895508
    9. 'puts' → logprob: -7.702363967895508
    10. 'g' → logprob: -8.452363967895508

Token 514: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.012702003121376038
    2. '():' → logprob: -4.387701988220215
    3. 'n' → logprob: -9.137701988220215
    4. '(' → logprob: -10.512701988220215
    5. '():
' → logprob: -10.512701988220215
    6. '()' → logprob: -10.887701988220215
    7. '):' → logprob: -12.262701988220215
    8. 'def' → logprob: -13.137701988220215
    9. 's' → logprob: -13.512701988220215
    10. '(s' → logprob: -13.637701988220215

Token 515: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03044624626636505
    2. '):
' → logprob: -3.5304462909698486
    3. '(n' → logprob: -7.2804460525512695
    4. ')' → logprob: -12.28044605255127
    5. '):
' → logprob: -13.90544605255127
    6. 'n' → logprob: -14.65544605255127
    7. ':' → logprob: -15.15544605255127
    8. '):

' → logprob: -15.65544605255127
    9. 'def' → logprob: -16.280447006225586
    10. ' ):' → logprob: -16.905447006225586

Token 516: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.49824440479278564
    2. '   ' → logprob: -1.1232444047927856
    3. '(n' → logprob: -2.748244285583496
    4. 'n' → logprob: -6.498244285583496
    5. ' def' → logprob: -7.123244285583496
    6. '(
' → logprob: -8.498244285583496
    7. '):' → logprob: -8.873244285583496
    8. '(' → logprob: -9.498244285583496
    9. ':' → logprob: -9.623244285583496
    10. ')' → logprob: -9.998244285583496

Token 517: ' """
' (ID: 7037)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.306243360042572
    2. 'return' → logprob: -1.6812434196472168
    3. '   ' → logprob: -3.056243419647217
    4. '(n' → logprob: -4.806243419647217
    5. '):
' → logprob: -5.181243419647217
    6. 'n' → logprob: -5.806243419647217
    7. 'lst' → logprob: -5.931243419647217
    8. ':
' → logprob: -6.181243419647217
    9. 'list' → logprob: -6.431243419647217
    10. '):' → logprob: -6.556243419647217

Token 518: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.46799781918525696
    2. '"""
' → logprob: -1.4679977893829346
    3. 'n' → logprob: -1.9679977893829346
    4. 'def' → logprob: -5.717998027801514
    5. '"""' → logprob: -9.092997550964355
    6. '"' → logprob: -9.592997550964355
    7. 'int' → logprob: -9.717997550964355
    8. '"
' → logprob: -10.717997550964355
    9. '"""
' → logprob: -11.217997550964355
    10. '
' → logprob: -11.467997550964355

Token 519: ' Lit' (ID: 45595)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3869887590408325
    2. '"""
' → logprob: -1.1369887590408325
    3. '"""' → logprob: -10.136988639831543
    4. '   ' → logprob: -10.136988639831543
    5. ' def' → logprob: -10.511988639831543
    6. ''''
' → logprob: -12.261988639831543
    7. 'return' → logprob: -12.636988639831543
    8. '
' → logprob: -14.136988639831543
    9. '"
' → logprob: -14.511988639831543
    10. ' """
' → logprob: -14.761988639831543

Token 520: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0022906139492988586
    2. '(n' → logprob: -6.127290725708008
    3. ' n' → logprob: -9.252290725708008
    4. 'int' → logprob: -12.627290725708008
    5. '   ' → logprob: -12.627290725708008
    6. 'def' → logprob: -13.627290725708008
    7. '[n' → logprob: -14.002290725708008
    8. '	n' → logprob: -15.377290725708008
    9. 'nt' → logprob: -15.502290725708008
    10. 'nn' → logprob: -15.877290725708008

Token 521: ' lignes' (ID: 81687)
  Prédit: ' lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.6845839619636536
    2. 'lines' → logprob: -1.1845839023590088
    3. '(n' → logprob: -2.934583902359009
    4. '()' → logprob: -3.309583902359009
    5. '():' → logprob: -3.559583902359009
    6. '():
' → logprob: -3.684583902359009
    7. ' lignes' → logprob: -3.934583902359009
    8. '_lines' → logprob: -4.684584140777588
    9. '(lines' → logprob: -5.434584140777588
    10. ' integers' → logprob: -6.559584140777588

Token 522: ',' (ID: 11)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.652204155921936
    2. ',' → logprob: -0.777204155921936
    3. 'def' → logprob: -4.0272040367126465
    4. '   ' → logprob: -6.5272040367126465
    5. ',n' → logprob: -10.777204513549805
    6. '):
' → logprob: -11.277204513549805
    7. ' def' → logprob: -11.277204513549805
    8. ',
' → logprob: -11.402204513549805
    9. '(' → logprob: -11.402204513549805
    10. '[n' → logprob: -11.777204513549805

Token 523: ' chaque' (ID: 21194)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2765718400478363
    2. 'def' → logprob: -1.5265718698501587
    3. 'each' → logprob: -4.526571750640869
    4. ' each' → logprob: -5.526571750640869
    5. '[' → logprob: -5.776571750640869
    6. ' def' → logprob: -6.151571750640869
    7. ' chaque' → logprob: -6.651571750640869
    8. '[
' → logprob: -7.401571750640869
    9. 'lambda' → logprob: -7.526571750640869
    10. 'Each' → logprob: -8.026572227478027

Token 524: ' ligne' (ID: 19583)
  Prédit: ' lignes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lignes' → logprob: -1.5699591636657715
    2. ' ligne' → logprob: -1.6949591636657715
    3. '   ' → logprob: -1.9449591636657715
    4. '(n' → logprob: -2.0699591636657715
    5. 'ligne' → logprob: -2.0699591636657715
    6. 'lines' → logprob: -3.0699591636657715
    7. ' lines' → logprob: -3.0699591636657715
    8. 'l' → logprob: -4.1949591636657715
    9. '()' → logprob: -4.3199591636657715
    10. 'def' → logprob: -4.3199591636657715

Token 525: ' contenant' (ID: 131049)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.8577572703361511
    2. '   ' → logprob: -1.357757329940796
    3. ' =' → logprob: -1.982757329940796
    4. '=' → logprob: -1.982757329940796
    5. ')' → logprob: -4.232757091522217
    6. 'def' → logprob: -4.732757091522217
    7. '=lambda' → logprob: -5.732757091522217
    8. ':' → logprob: -5.857757091522217
    9. ',' → logprob: -6.482757091522217
    10. 'for' → logprob: -6.857757091522217

Token 526: ' des' (ID: 731)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.04820654168725014
    2. 'une' → logprob: -4.173206329345703
    3. 'tuple' → logprob: -4.673206329345703
    4. 'a' → logprob: -4.798206329345703
    5. ' une' → logprob: -6.048206329345703
    6. 'un' → logprob: -6.298206329345703
    7. 'des' → logprob: -6.423206329345703
    8. 'liste' → logprob: -6.548206329345703
    9. 's' → logprob: -7.173206329345703
    10. ' list' → logprob: -7.173206329345703

Token 527: ' ent' (ID: 1121)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.5353350639343262
    2. 'ent' → logprob: -1.2853350639343262
    3. 'ints' → logprob: -2.160335063934326
    4. 'list' → logprob: -4.785335063934326
    5. 'inte' → logprob: -5.285335063934326
    6. 'tuple' → logprob: -6.035335063934326
    7. 'tu' → logprob: -6.410335063934326
    8. ' ent' → logprob: -6.535335063934326
    9. ' int' → logprob: -7.285335063934326
    10. ' tuples' → logprob: -7.660335063934326

Token 528: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -8.339776832144707e-05
    2. 'i' → logprob: -9.625082969665527
    3. 'ières' → logprob: -11.750082969665527
    4. 'ers' → logprob: -12.000082969665527
    5. '```' → logprob: -14.125082969665527
    6. '   ' → logprob: -14.250082969665527
    7. 'eg' → logprob: -14.625082969665527
    8. 'gers' → logprob: -14.750082969665527
    9. 'ier' → logprob: -15.500082969665527
    10. ' ints' → logprob: -16.500083923339844

Token 529: ' sépar' (ID: 97160)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.02717740274965763
    2. '[' → logprob: -5.152177333831787
    3. '   ' → logprob: -5.152177333831787
    4. '()[' → logprob: -5.902177333831787
    5. '[]' → logprob: -6.027177333831787
    6. '(n' → logprob: -6.027177333831787
    7. ',' → logprob: -6.527177333831787
    8. '(' → logprob: -6.777177333831787
    9. '().' → logprob: -6.777177333831787
    10. ')' → logprob: -6.902177333831787

Token 530: 'és' (ID: 1756)
  Prédit: ' par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.9382228851318359
    2. 'par' → logprob: -1.688222885131836
    3. 'e' → logprob: -2.188222885131836
    4. 'és' → logprob: -2.188222885131836
    5. 'é' → logprob: -2.188222885131836
    6. 'by' → logprob: -3.188222885131836
    7. ' by' → logprob: -3.938222885131836
    8. '   ' → logprob: -5.188222885131836
    9. 'def' → logprob: -5.188222885131836
    10. 'er' → logprob: -5.188222885131836

Token 531: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.22571039199829102
    2. 'par' → logprob: -1.600710391998291
    3. 'by' → logprob: -9.225709915161133
    4. '   ' → logprob: -9.725709915161133
    5. ' by' → logprob: -9.850709915161133
    6. ' ' → logprob: -10.475709915161133
    7. '_par' → logprob: -10.850709915161133
    8. '  ' → logprob: -11.350709915161133
    9. '(par' → logprob: -11.350709915161133
    10. ',' → logprob: -12.725709915161133

Token 532: ' des' (ID: 731)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.6556633710861206
    2. 'un' → logprob: -1.7806633710861206
    3. ''' → logprob: -2.15566349029541
    4. ' espace' → logprob: -2.28066349029541
    5. ''espace' → logprob: -3.40566349029541
    6. ' espaces' → logprob: -4.15566349029541
    7. ''un' → logprob: -4.28066349029541
    8. 'space' → logprob: -5.15566349029541
    9. 'esp' → logprob: -5.15566349029541
    10. ' des' → logprob: -5.15566349029541

Token 533: ' espaces' (ID: 98361)
  Prédit: 'esp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'esp' → logprob: -0.07000190019607544
    2. ' espaces' → logprob: -2.8200018405914307
    3. 'es' → logprob: -5.44500207901001
    4. ''esp' → logprob: -6.19500207901001
    5. ''espace' → logprob: -7.44500207901001
    6. 'spaces' → logprob: -7.69500207901001
    7. 'space' → logprob: -8.570001602172852
    8. ' espace' → logprob: -8.945001602172852
    9. 'Esp' → logprob: -9.445001602172852
    10. ' ' → logprob: -10.320001602172852

Token 534: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5043187737464905
    2. ')' → logprob: -2.3793187141418457
    3. 'def' → logprob: -2.3793187141418457
    4. '.' → logprob: -2.5043187141418457
    5. ',' → logprob: -2.7543187141418457
    6. '):' → logprob: -4.129318714141846
    7. '[' → logprob: -4.629318714141846
    8. '=' → logprob: -5.129318714141846
    9. 'for' → logprob: -5.379318714141846
    10. ' =' → logprob: -5.629318714141846

Token 535: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09077643603086472
    2. 'def' → logprob: -2.4657764434814453
    3. ' def' → logprob: -7.590776443481445
    4. 'and' → logprob: -8.590776443481445
    5. 'each' → logprob: -8.590776443481445
    6. 'return' → logprob: -8.715776443481445
    7. ' and' → logprob: -8.715776443481445
    8. ')' → logprob: -8.715776443481445
    9. 'et' → logprob: -9.465776443481445
    10. '    ' → logprob: -9.590776443481445

Token 536: ' et' (ID: 859)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.13544854521751404
    2. '   ' → logprob: -2.135448455810547
    3. 'et' (adapté à ' et') → logprob: -5.760448455810547
    4. ' et' → logprob: -6.385448455810547
    5. 'return' → logprob: -6.510448455810547
    6. ' def' → logprob: -6.885448455810547
    7. '
' → logprob: -8.135448455810547
    8. ' return' → logprob: -8.135448455810547
    9. 'and' → logprob: -9.385448455810547
    10. 'returns' → logprob: -9.760448455810547

Token 537: ' retourne' (ID: 178818)
  Prédit: ' retourne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' retourne' → logprob: -0.6372211575508118
    2. '   ' → logprob: -1.012221097946167
    3. 'return' → logprob: -2.887221097946167
    4. ' return' → logprob: -3.762221097946167
    5. ' les' → logprob: -4.762221336364746
    6. 'ret' → logprob: -5.137221336364746
    7. 'def' → logprob: -5.262221336364746
    8. ' retourn' → logprob: -6.012221336364746
    9. ' returns' → logprob: -6.387221336364746
    10. ' retour' → logprob: -7.012221336364746

Token 538: ' une' (ID: 2463)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.41049307584762573
    2. '[' → logprob: -1.1604931354522705
    3. '[n' → logprob: -4.035492897033691
    4. '   ' → logprob: -5.660492897033691
    5. '[list' → logprob: -7.285492897033691
    6. '[num' → logprob: -8.535492897033691
    7. '[l' → logprob: -8.785492897033691
    8. ' une' → logprob: -8.910492897033691
    9. '[s' → logprob: -8.910492897033691
    10. ' la' → logprob: -8.910492897033691

Token 539: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.5514935851097107
    2. 'list' → logprob: -1.3014936447143555
    3. ' liste' → logprob: -1.9264936447143555
    4. ' list' → logprob: -5.8014936447143555
    5. '[' → logprob: -5.9264936447143555
    6. ' [' → logprob: -8.801493644714355
    7. '_list' → logprob: -10.051493644714355
    8. 's' → logprob: -10.176493644714355
    9. 'lista' → logprob: -10.426493644714355
    10. 'l' → logprob: -10.426493644714355

Token 540: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5356693863868713
    2. '[' → logprob: -1.5356693267822266
    3. '[list' → logprob: -2.6606693267822266
    4. ' of' → logprob: -3.5356693267822266
    5. 'of' → logprob: -3.6606693267822266
    6. '[
' → logprob: -3.7856693267822266
    7. '[List' → logprob: -3.7856693267822266
    8. '[n' → logprob: -5.660669326782227
    9. 'de' → logprob: -5.660669326782227
    10. '
' → logprob: -5.660669326782227

Token 541: ' listes' (ID: 179198)
  Prédit: 'lists'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lists' → logprob: -0.3873269259929657
    2. 'list' → logprob: -1.137326955795288
    3. ' lists' → logprob: -8.387327194213867
    4. 'tu' → logprob: -9.387327194213867
    5. 'tuple' → logprob: -10.012327194213867
    6. ' tuples' → logprob: -10.262327194213867
    7. 'liste' → logprob: -10.387327194213867
    8. ' listes' → logprob: -11.262327194213867
    9. ' list' → logprob: -12.512327194213867
    10. 'l' → logprob: -12.762327194213867

Token 542: '.

' (ID: 364)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.030721761286258698
    2. '<int' → logprob: -4.655721664428711
    3. '(int' → logprob: -4.905721664428711
    4. '   ' → logprob: -5.530721664428711
    5. '<|end|>' → logprob: -6.030721664428711
    6. ' of' → logprob: -6.405721664428711
    7. '(map' → logprob: -6.655721664428711
    8. '[' → logprob: -6.905721664428711
    9. '```' → logprob: -7.405721664428711
    10. '[]' → logprob: -8.030721664428711

Token 543: '   ' (ID: 271)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.4943711757659912
    2. '   ' → logprob: -1.3693711757659912
    3. '```' → logprob: -2.244371175765991
    4. 'def' → logprob: -3.994371175765991
    5. '(' → logprob: -4.99437141418457
    6. '[n' → logprob: -6.49437141418457
    7. '(
' → logprob: -6.86937141418457
    8. '[
' → logprob: -7.61937141418457
    9. '[' → logprob: -7.99437141418457
    10. '``' → logprob: -8.36937141418457

Token 544: ' Args' (ID: 39185)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6400169730186462
    2. '   ' → logprob: -0.7650169730186462
    3. '(n' → logprob: -5.890017032623291
    4. '```' → logprob: -6.390017032623291
    5. '"""
' → logprob: -6.515017032623291
    6. ' def' → logprob: -7.515017032623291
    7. '
' → logprob: -7.515017032623291
    8. '{
' → logprob: -9.640016555786133
    9. '(
' → logprob: -9.890016555786133
    10. '[
' → logprob: -10.015016555786133

Token 545: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44389981031417847
    2. '(n' → logprob: -1.0688998699188232
    3. 'def' → logprob: -4.818899631500244
    4. '(
' → logprob: -6.193899631500244
    5. '):
' → logprob: -7.193899631500244
    6. '[
' → logprob: -7.193899631500244
    7. '[n' → logprob: -7.318899631500244
    8. ':' → logprob: -7.318899631500244
    9. '(' → logprob: -7.443899631500244
    10. ':
' → logprob: -7.818899631500244

Token 546: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02130911499261856
    2. 'n' → logprob: -3.8963091373443604
    3. '(n' → logprob: -7.396308898925781
    4. ' n' → logprob: -9.521308898925781
    5. '       ' → logprob: -10.271308898925781
    6. '    ' → logprob: -11.396308898925781
    7. '	n' → logprob: -12.021308898925781
    8. '[n' → logprob: -12.146308898925781
    9. '  ' → logprob: -12.271308898925781
    10. ' ' → logprob: -12.396308898925781

Token 547: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.0012440400896593928
    2. 'int' → logprob: -6.751244068145752
    3. 'def' → logprob: -9.626243591308594
    4. '   ' → logprob: -12.751243591308594
    5. ' n' → logprob: -12.751243591308594
    6. '```' → logprob: -14.376243591308594
    7. '[int' → logprob: -15.001243591308594
    8. '(n' → logprob: -15.626243591308594
    9. 'list' → logprob: -15.751243591308594
    10. '[n' → logprob: -16.001243591308594

Token 548: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.20120766758918762
    2. ':' → logprob: -2.8262076377868652
    3. '(int' → logprob: -3.0762076377868652
    4. '):' → logprob: -3.4512076377868652
    5. ')' → logprob: -4.076207637786865
    6. '   ' → logprob: -4.701207637786865
    7. '(n' → logprob: -5.201207637786865
    8. '):
' → logprob: -5.326207637786865
    9. ' ' → logprob: -6.451207637786865
    10. '(' → logprob: -6.576207637786865

Token 549: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -6.034592388459714e-06
    2. ' int' → logprob: -12.375005722045898
    3. 'n' → logprob: -13.750005722045898
    4. ')' → logprob: -14.750005722045898
    5. '[int' → logprob: -15.625005722045898
    6. '(int' → logprob: -16.6250057220459
    7. ':int' → logprob: -17.8750057220459
    8. '   ' → logprob: -17.8750057220459
    9. '=int' → logprob: -18.0000057220459
    10. '):' → logprob: -18.0000057220459

Token 550: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003184125293046236
    2. ':' → logprob: -6.2531843185424805
    3. '):
' → logprob: -6.7531843185424805
    4. ')' → logprob: -9.50318431854248
    5. '   ' → logprob: -12.25318431854248
    6. '):
' → logprob: -12.87818431854248
    7. ':int' → logprob: -13.50318431854248
    8. '):

' → logprob: -13.62818431854248
    9. ' ):' → logprob: -13.75318431854248
    10. 'int' → logprob: -15.00318431854248

Token 551: ' Le' (ID: 2018)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0009484992478974164
    2. '   ' → logprob: -7.500948429107666
    3. 'n' → logprob: -8.500948905944824
    4. ' int' → logprob: -9.375948905944824
    5. '(int' → logprob: -10.125948905944824
    6. '[int' → logprob: -10.625948905944824
    7. 'def' → logprob: -11.250948905944824
    8. '(n' → logprob: -11.500948905944824
    9. '       ' → logprob: -12.375948905944824
    10. 'La' → logprob: -13.000948905944824

Token 552: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.4168578088283539
    2. ' nombre' → logprob: -1.7918578386306763
    3. 'n' → logprob: -2.1668577194213867
    4. ' number' → logprob: -3.2918577194213867
    5. 'number' → logprob: -3.9168577194213867
    6. 'int' → logprob: -6.666857719421387
    7. ' n' → logprob: -7.666857719421387
    8. ' nombres' → logprob: -7.916857719421387
    9. ' int' → logprob: -8.791857719421387
    10. ' lines' → logprob: -9.291857719421387

Token 553: ' de' (ID: 334)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -1.1455622911453247
    2. '   ' → logprob: -1.2705622911453247
    3. ' de' → logprob: -1.8955622911453247
    4. '(n' → logprob: -2.270562171936035
    5. 'n' → logprob: -3.270562171936035
    6. 'def' → logprob: -3.645562171936035
    7. ')' → logprob: -3.770562171936035
    8. 'des' → logprob: -4.270562171936035
    9. ' of' → logprob: -5.020562171936035
    10. ' n' → logprob: -5.145562171936035

Token 554: ' lignes' (ID: 81687)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0014127352042123675
    2. ' lignes' → logprob: -7.126412868499756
    3. 'lines' → logprob: -7.501412868499756
    4. 'ligne' → logprob: -10.001412391662598
    5. 'n' → logprob: -13.251412391662598
    6. '```' → logprob: -13.501412391662598
    7. 'lin' → logprob: -13.876412391662598
    8. 'li' → logprob: -13.876412391662598
    9. '_l' → logprob: -14.001412391662598
    10. ' lines' → logprob: -14.126412391662598

Token 555: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27120161056518555
    2. ' à' → logprob: -2.3962016105651855
    3. '):' → logprob: -2.7712016105651855
    4. ')' → logprob: -3.1462016105651855
    5. '):
' → logprob: -4.5212016105651855
    6. ':' → logprob: -4.6462016105651855
    7. 'à' → logprob: -4.7712016105651855
    8. 'def' → logprob: -4.7712016105651855
    9. 'n' → logprob: -7.2712016105651855
    10. ',' → logprob: -7.7712016105651855

Token 556: ' lire' (ID: 46082)
  Prédit: ' lire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lire' → logprob: -0.4666905999183655
    2. 'l' → logprob: -1.0916905403137207
    3. 'read' → logprob: -3.5916905403137207
    4. '```' → logprob: -5.466690540313721
    5. 'Lire' → logprob: -6.341690540313721
    6. 'lect' → logprob: -6.716690540313721
    7. '_read' → logprob: -7.716690540313721
    8. ' read' → logprob: -8.091691017150879
    9. '   ' → logprob: -8.091691017150879
    10. ' Lire' → logprob: -8.841691017150879

Token 557: '.

' (ID: 364)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.7797499299049377
    2. '(n' → logprob: -1.529749870300293
    3. '):' → logprob: -1.904749870300293
    4. '   ' → logprob: -2.154749870300293
    5. ')' → logprob: -3.154749870300293
    6. 'def' → logprob: -4.779749870300293
    7. '
' → logprob: -5.654749870300293
    8. 'n' → logprob: -6.029749870300293
    9. ':
' → logprob: -6.529749870300293
    10. ':' → logprob: -7.779749870300293

Token 558: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -5.919942486798391e-05
    2. ')' → logprob: -10.625059127807617
    3. '):
' → logprob: -10.875059127807617
    4. 'def' → logprob: -11.500059127807617
    5. '    
' → logprob: -13.000059127807617
    6. '```' → logprob: -13.625059127807617
    7. ')
' → logprob: -14.250059127807617
    8. '
' → logprob: -14.625059127807617
    9. '):' → logprob: -14.875059127807617
    10. '"""
' → logprob: -14.875059127807617

Token 559: ' Returns' (ID: 9609)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4768415689468384
    2. '"""
' → logprob: -1.2268415689468384
    3. '   ' → logprob: -2.601841449737549
    4. ')
' → logprob: -5.601841449737549
    5. ')' → logprob: -5.851841449737549
    6. '):
' → logprob: -6.101841449737549
    7. '
' → logprob: -6.851841449737549
    8. '```' → logprob: -7.101841449737549
    9. 'return' → logprob: -7.976841449737549
    10. '"""' → logprob: -8.351841926574707

Token 560: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2666524350643158
    2. 'def' → logprob: -2.8916523456573486
    3. '[' → logprob: -3.0166523456573486
    4. ' list' → logprob: -3.2666523456573486
    5. '[
' → logprob: -3.8916523456573486
    6. '[List' → logprob: -3.8916523456573486
    7. ':
' → logprob: -4.266652584075928
    8. '[list' → logprob: -4.891652584075928
    9. 'list' → logprob: -5.516652584075928
    10. ':list' → logprob: -5.516652584075928

Token 561: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0164344422519207
    2. '[' → logprob: -4.641434669494629
    3. '[n' → logprob: -6.141434669494629
    4. '[List' → logprob: -6.516434669494629
    5. '[list' → logprob: -6.516434669494629
    6. ' [' → logprob: -6.766434669494629
    7. '[
' → logprob: -8.641434669494629
    8. ' list' → logprob: -9.141434669494629
    9. '```' → logprob: -10.141434669494629
    10. '    ' → logprob: -10.391434669494629

Token 562: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' (adapté à ' list') → logprob: -0.000433291686931625
    2. ' list' → logprob: -7.750433444976807
    3. '   ' → logprob: -13.125432968139648
    4. '[list' → logprob: -14.500432968139648
    5. 'List' → logprob: -15.875432968139648
    6. '
' → logprob: -17.87543296813965
    7. '```' → logprob: -18.12543296813965
    8. '       ' → logprob: -18.37543296813965
    9. 'lists' → logprob: -18.50043296813965
    10. 'def' → logprob: -19.25043296813965

Token 563: ':' (ID: 25)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22389239072799683
    2. ':' → logprob: -2.5988924503326416
    3. 'def' → logprob: -2.7238924503326416
    4. ':
' → logprob: -3.9738924503326416
    5. ' =' → logprob: -4.8488922119140625
    6. '[' → logprob: -4.9738922119140625
    7. '(n' → logprob: -5.3488922119140625
    8. '[List' → logprob: -5.5988922119140625
    9. '):
' → logprob: -5.7238922119140625
    10. '=' → logprob: -5.8488922119140625

Token 564: ' Une' (ID: 19758)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.30719438195228577
    2. '[' → logprob: -1.8071943521499634
    3. '[List' → logprob: -3.057194471359253
    4. ' [' → logprob: -3.307194471359253
    5. '   ' → logprob: -4.307194232940674
    6. '[line' → logprob: -6.557194232940674
    7. '[n' → logprob: -7.182194232940674
    8. '[int' → logprob: -8.432194709777832
    9. '[class' → logprob: -8.557194709777832
    10. '[result' → logprob: -9.057194709777832

Token 565: ' liste' (ID: 31719)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.7725927829742432
    2. '[' → logprob: -1.3975927829742432
    3. ' list' → logprob: -2.022592782974243
    4. ' [' → logprob: -2.772592782974243
    5. '[List' → logprob: -2.772592782974243
    6. 'list' → logprob: -3.647592782974243
    7. '[
' → logprob: -5.772592544555664
    8. '[n' → logprob: -6.772592544555664
    9. '   ' → logprob: -7.147592544555664
    10. 's' → logprob: -7.772592544555664

Token 566: ' de' (ID: 334)
  Prédit: '[List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[List' → logprob: -0.9346723556518555
    2. '[
' → logprob: -1.5596723556518555
    3. ' of' → logprob: -1.9346723556518555
    4. '[list' → logprob: -2.0596723556518555
    5. '[' → logprob: -2.3096723556518555
    6. '   ' → logprob: -4.6846723556518555
    7. 'of' → logprob: -5.0596723556518555
    8. '```' → logprob: -6.5596723556518555
    9. '[int' → logprob: -6.9346723556518555
    10. '[n' → logprob: -7.1846723556518555

Token 567: ' listes' (ID: 179198)
  Prédit: 'lists'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lists' → logprob: -0.5764915943145752
    2. 'list' → logprob: -0.8264915943145752
    3. ' lists' → logprob: -7.576491355895996
    4. '[list' → logprob: -10.701491355895996
    5. ' list' → logprob: -12.326491355895996
    6. 'listas' → logprob: -12.451491355895996
    7. 'liste' → logprob: -12.951491355895996
    8. '```' → logprob: -13.451491355895996
    9. 'l' → logprob: -13.701491355895996
    10. '_lists' → logprob: -13.951491355895996

Token 568: ' d' (ID: 272)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'of' → logprob: -1.529392957687378
    2. '<|end|>' → logprob: -1.529392957687378
    3. ' of' → logprob: -1.779392957687378
    4. '[' → logprob: -1.779392957687378
    5. '[list' → logprob: -3.029392957687378
    6. '[int' → logprob: -3.154392957687378
    7. '   ' → logprob: -3.279392957687378
    8. '[
' → logprob: -3.279392957687378
    9. '[List' → logprob: -3.779392957687378
    10. '```' → logprob: -4.279393196105957

Token 569: ''ent' (ID: 53422)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.6513769626617432
    2. 'int' → logprob: -1.1513769626617432
    3. 'lists' → logprob: -2.651376962661743
    4. 'list' → logprob: -2.901376962661743
    5. 'ints' → logprob: -3.901376962661743
    6. '(int' → logprob: -4.776376724243164
    7. '<int' → logprob: -5.651376724243164
    8. ' lists' → logprob: -6.026376724243164
    9. '[list' → logprob: -6.901376724243164
    10. '[' → logprob: -8.526376724243164

Token 570: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.2977373003959656
    2. 'ints' → logprob: -1.9227373600006104
    3. 'int' → logprob: -3.0477373600006104
    4. '[int' → logprob: -3.5477373600006104
    5. 'ières' → logprob: -4.047737121582031
    6. '<int' → logprob: -5.797737121582031
    7. 'eurs' → logprob: -6.547737121582031
    8. '[' → logprob: -6.547737121582031
    9. ' ints' → logprob: -6.547737121582031
    10. '   ' → logprob: -6.672737121582031

Token 571: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5607699751853943
    2. '<|end|>' → logprob: -1.560770034790039
    3. '(n' → logprob: -2.685770034790039
    4. ')' → logprob: -3.185770034790039
    5. '[' → logprob: -3.560770034790039
    6. '[n' → logprob: -3.935770034790039
    7. ']' → logprob: -4.185770034790039
    8. '<|end|>' → logprob: -4.560770034790039
    9. ',' → logprob: -4.935770034790039
    10. '[
' → logprob: -5.435770034790039

Token 572: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01164623349905014
    2. '```' → logprob: -4.761646270751953
    3. '
' → logprob: -6.761646270751953
    4. 'def' → logprob: -6.886646270751953
    5. '"""
' → logprob: -7.386646270751953
    6. '``' → logprob: -10.136646270751953
    7. '    
' → logprob: -10.386646270751953
    8. '[
' → logprob: -10.761646270751953
    9. '<|end|>' → logprob: -10.761646270751953
    10. '(n' → logprob: -10.761646270751953

Token 573: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0038568400777876377
    2. 'def' → logprob: -6.253856658935547
    3. '```' → logprob: -7.003856658935547
    4. '
' → logprob: -7.378856658935547
    5. '"""
' (adapté à ' """
') → logprob: -8.503856658935547
    6. '[
' → logprob: -10.128856658935547
    7. '    
' → logprob: -10.253856658935547
    8. 'return' → logprob: -10.378856658935547
    9. '    ' → logprob: -11.003856658935547
    10. '  ' → logprob: -11.253856658935547

Token 574: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.8670179997570813e-05
    2. 'return' → logprob: -11.000019073486328
    3. 'def' → logprob: -13.500019073486328
    4. ' return' → logprob: -15.500019073486328
    5. '   ' → logprob: -16.500019073486328
    6. '```' → logprob: -16.500019073486328
    7. '[' → logprob: -16.875019073486328
    8. '
' → logprob: -18.500019073486328
    9. '[]' → logprob: -18.625019073486328
    10. '	return' → logprob: -18.875019073486328

Token 575: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.4741608500480652
    2. '   ' → logprob: -0.9741608500480652
    3. ' return' → logprob: -9.474161148071289
    4. 'def' → logprob: -12.474161148071289
    5. '```' → logprob: -12.849161148071289
    6. '
' → logprob: -14.724161148071289
    7. '	return' → logprob: -15.474161148071289
    8. '    
' → logprob: -18.22416114807129
    9. '  ' → logprob: -18.34916114807129
    10. '``' → logprob: -19.34916114807129

Token 576: ' [' (ID: 723)
  Prédit: '[in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[in' → logprob: -0.04079733043909073
    2. '[list' → logprob: -3.290797233581543
    3. '[' → logprob: -6.040797233581543
    4. ' [' → logprob: -8.040797233581543
    5. '[List' → logprob: -10.040797233581543
    6. '[l' → logprob: -12.665797233581543
    7. '[line' → logprob: -13.415797233581543
    8. '[int' → logprob: -14.415797233581543
    9. '[input' → logprob: -14.540797233581543
    10. '[out' → logprob: -14.915797233581543

Token 577: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0024934951215982437
    2. 'in' → logprob: -6.002493381500244
    3. ' list' → logprob: -11.002493858337402
    4. 'List' → logprob: -15.127493858337402
    5. '[' → logprob: -15.502493858337402
    6. '[list' → logprob: -15.502493858337402
    7. ' in' → logprob: -15.877493858337402
    8. '(list' → logprob: -16.127492904663086
    9. '```' → logprob: -17.252492904663086
    10. '	list' → logprob: -17.377492904663086

Token 578: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -6.392202976712724e-06
    2. 'map' → logprob: -12.250006675720215
    3. '(' → logprob: -13.375006675720215
    4. '(int' → logprob: -16.7500057220459
    5. '(in' → logprob: -17.5000057220459
    6. '(m' → logprob: -18.6250057220459
    7. ' map' → logprob: -18.7500057220459
    8. '(
' → logprob: -19.5000057220459
    9. '()' → logprob: -19.6250057220459
    10. '	map' → logprob: -19.6250057220459

Token 579: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.06200768053531647
    2. 'int' → logprob: -2.8120076656341553
    3. '[int' → logprob: -10.312007904052734
    4. '<int' → logprob: -13.437007904052734
    5. '   ' → logprob: -13.562007904052734
    6. ' int' → logprob: -13.687007904052734
    7. '```' → logprob: -13.812007904052734
    8. '=int' → logprob: -13.812007904052734
    9. ',int' → logprob: -15.062007904052734
    10. ']int' → logprob: -15.187007904052734

Token 580: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008736420422792435
    2. ',input' → logprob: -4.883736610412598
    3. '(input' → logprob: -6.883736610412598
    4. 'input' → logprob: -9.258736610412598
    5. ' ,' → logprob: -11.758736610412598
    6. ' input' → logprob: -14.258736610412598
    7. '(' → logprob: -14.508736610412598
    8. ' (' → logprob: -14.883736610412598
    9. '(),' → logprob: -15.008736610412598
    10. ',
' → logprob: -15.758736610412598

Token 581: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0024758970830589533
    2. ' input' → logprob: -6.002475738525391
    3. '(input' → logprob: -15.87747573852539
    4. '   ' → logprob: -17.12747573852539
    5. ' ' → logprob: -17.75247573852539
    6. '<input' → logprob: -18.50247573852539
    7. '	input' → logprob: -19.87747573852539
    8. '[input' → logprob: -20.00247573852539
    9. ',input' → logprob: -20.00247573852539
    10. 'sys' → logprob: -20.37747573852539

Token 582: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.5776860184123507e-06
    2. '()' → logprob: -13.37500286102295
    3. '.split' → logprob: -14.12500286102295
    4. '(' → logprob: -16.500001907348633
    5. 'split' → logprob: -16.875001907348633
    6. ' ().' → logprob: -16.875001907348633
    7. '.' → logprob: -17.750001907348633
    8. '   ' → logprob: -18.250001907348633
    9. '.readline' → logprob: -18.500001907348633
    10. ' ' → logprob: -18.750001907348633

Token 583: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.320199877838604e-07
    2. ' split' → logprob: -14.875
    3. 'strip' → logprob: -18.25
    4. '.split' → logprob: -18.875
    5. '   ' → logprob: -19.0
    6. '(split' → logprob: -20.75
    7. ' ' → logprob: -20.875
    8. 'spl' → logprob: -21.25
    9. 'rstrip' → logprob: -21.5
    10. '().' → logprob: -21.75

Token 584: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.00013381359167397022
    2. '))' → logprob: -9.375133514404297
    3. '()))
' → logprob: -10.375133514404297
    4. '()' → logprob: -11.625133514404297
    5. '())' → logprob: -12.000133514404297
    6. '())))' → logprob: -14.000133514404297
    7. '()));' → logprob: -14.750133514404297
    8. '()
' → logprob: -15.000133514404297
    9. '(' → logprob: -15.250133514404297
    10. '())).' → logprob: -15.250133514404297

Token 585: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.21631614863872528
    2. '()' → logprob: -1.9663161039352417
    3. ' for' → logprob: -2.9663162231445312
    4. '(n' → logprob: -5.841316223144531
    5. ')' → logprob: -9.341316223144531
    6. '   ' → logprob: -9.966316223144531
    7. 'n' → logprob: -11.966316223144531
    8. '	for' → logprob: -12.591316223144531
    9. '(' → logprob: -12.841316223144531
    10. '())' → logprob: -14.091316223144531

Token 586: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -4.5491004129871726e-05
    2. ' _' → logprob: -10.125045776367188
    3. ' range' → logprob: -12.625045776367188
    4. '_range' → logprob: -13.125045776367188
    5. 'range' → logprob: -16.375045776367188
    6. '   ' → logprob: -19.750045776367188
    7. ' ' → logprob: -20.125045776367188
    8. ' in' → logprob: -20.125045776367188
    9. 'n' → logprob: -20.375045776367188
    10. ' n' → logprob: -20.750045776367188

Token 587: ' in' (ID: 306)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.48766109347343445
    2. ' in' → logprob: -0.9876611232757568
    3. 'in' → logprob: -4.862660884857178
    4. 'range' → logprob: -5.237660884857178
    5. '_range' → logprob: -8.362661361694336
    6. ' _' → logprob: -9.112661361694336
    7. ' range' → logprob: -9.487661361694336
    8. 'i' → logprob: -11.362661361694336
    9. '_in' → logprob: -11.487661361694336
    10. ' i' → logprob: -12.737661361694336

Token 588: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.004092174116522074
    2. ' range' → logprob: -5.504092216491699
    3. '_' → logprob: -11.5040922164917
    4. '_range' → logprob: -12.5040922164917
    5. '(range' → logprob: -17.629091262817383
    6. '	range' → logprob: -18.004091262817383
    7. 'n' → logprob: -22.004091262817383
    8. ' ' → logprob: -22.129091262817383
    9. 'in' → logprob: -22.129091262817383
    10. '.range' → logprob: -22.504091262817383

Token 589: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.04863244667649269
    2. 'n' → logprob: -3.0486323833465576
    3. ' n' → logprob: -10.673632621765137
    4. '(' → logprob: -10.798632621765137
    5. ' (' → logprob: -13.548632621765137
    6. '(
' → logprob: -15.923632621765137
    7. '	n' → logprob: -16.67363166809082
    8. ')n' → logprob: -19.17363166809082
    9. '_n' → logprob: -19.67363166809082
    10. '   ' → logprob: -20.79863166809082

Token 590: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -5.764977686339989e-05
    2. ']' → logprob: -10.500057220458984
    3. 'n' → logprob: -11.125057220458984
    4. ')' → logprob: -11.500057220458984
    5. '(n' → logprob: -12.500057220458984
    6. ')n' → logprob: -13.875057220458984
    7. ')]
' → logprob: -16.000057220458984
    8. '   ' → logprob: -16.000057220458984
    9. '()]' → logprob: -16.250057220458984
    10. ')],' → logprob: -16.875057220458984

Token 591: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4467519521713257
    2. '
' → logprob: -1.1967519521713257
    3. '

' → logprob: -3.4467520713806152
    4. '<|end|>' → logprob: -4.071752071380615
    5. '```' → logprob: -5.946752071380615
    6. '#' → logprob: -6.071752071380615
    7. '\' → logprob: -6.821752071380615
    8. '\n' → logprob: -7.071752071380615
    9. '<|end|>' → logprob: -7.321752071380615
    10. '


' → logprob: -7.571752071380615

Token 592: ' in' (ID: 306)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.31794625520706177
    2. 'out' → logprob: -1.692946195602417
    3. 'in' → logprob: -3.317946195602417
    4. ' main' → logprob: -4.067946434020996
    5. 'print' → logprob: -4.442946434020996
    6. 'def' → logprob: -5.067946434020996
    7. 'inp' → logprob: -5.692946434020996
    8. 'solve' → logprob: -5.817946434020996
    9. 'input' → logprob: -6.317946434020996
    10. ' in' → logprob: -6.692946434020996

Token 593: 'plt' (ID: 20940)
  Prédit: 'pl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pl' → logprob: -0.3378985524177551
    2. 'p' → logprob: -2.5878984928131104
    3. 'l' → logprob: -2.7128984928131104
    4. 'put' → logprob: -3.3378984928131104
    5. 'm' → logprob: -4.2128987312316895
    6. 't' → logprob: -4.3378987312316895
    7. 'r' → logprob: -4.5878987312316895
    8. 'pm' → logprob: -4.7128987312316895
    9. 'pls' → logprob: -5.0878987312316895
    10. 'pll' → logprob: -5.3378987312316895

Token 594: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0002775438770186156
    2. '(' → logprob: -9.000277519226074
    3. '()' → logprob: -9.250277519226074
    4. 's' → logprob: -11.375277519226074
    5. 'l' → logprob: -11.625277519226074
    6. '(l' → logprob: -11.875277519226074
    7. '():
' → logprob: -12.625277519226074
    8. 'p' → logprob: -12.625277519226074
    9. '(line' → logprob: -12.625277519226074
    10. 'n' → logprob: -12.875277519226074

Token 595: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07986517250537872
    2. '(n' → logprob: -2.5798652172088623
    3. '):
' → logprob: -6.954864978790283
    4. ')' → logprob: -11.579865455627441
    5. 'n' → logprob: -12.204865455627441
    6. ':' → logprob: -13.204865455627441
    7. '(' → logprob: -13.454865455627441
    8. '):
' → logprob: -13.829865455627441
    9. 'def' → logprob: -14.204865455627441
    10. '(p' → logprob: -15.204865455627441

Token 596: '   ' (ID: 271)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.12782670557498932
    2. 'def' → logprob: -2.752826690673828
    3. '   ' → logprob: -3.502826690673828
    4. 'n' → logprob: -4.002826690673828
    5. '(
' → logprob: -5.002826690673828
    6. ':' → logprob: -9.002826690673828
    7. ':
' → logprob: -9.002826690673828
    8. ' def' → logprob: -9.002826690673828
    9. '(' → logprob: -9.127826690673828
    10. '):
' → logprob: -9.127826690673828

Token 597: ' """
' (ID: 7037)
  Prédit: '[
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[
' → logprob: -0.9257270097732544
    2. 'def' → logprob: -1.1757270097732544
    3. '   ' → logprob: -1.3007270097732544
    4. '[' → logprob: -4.550726890563965
    5. '[n' → logprob: -4.800726890563965
    6. ' def' → logprob: -6.800726890563965
    7. '"""
' (adapté à ' """
') → logprob: -6.800726890563965
    8. '[]
' → logprob: -7.425726890563965
    9. '[]' → logprob: -7.800726890563965
    10. '
' → logprob: -8.300726890563965

Token 598: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26999610662460327
    2. '"""
' → logprob: -2.019996166229248
    3. 'def' → logprob: -2.269996166229248
    4. 'n' → logprob: -8.14499568939209
    5. ')
' → logprob: -9.64499568939209
    6. 'list' → logprob: -9.76999568939209
    7. ' def' → logprob: -10.26999568939209
    8. '
' → logprob: -10.39499568939209
    9. 'return' → logprob: -10.51999568939209
    10. '"""' → logprob: -10.76999568939209

Token 599: ' Lit' (ID: 45595)
  Prédit: '"""
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""
' → logprob: -0.014671577140688896
    2. 'def' → logprob: -4.264671802520752
    3. '"""' → logprob: -7.764671802520752
    4. '   ' → logprob: -9.639671325683594
    5. '"""
' → logprob: -11.889671325683594
    6. ''''
' → logprob: -12.514671325683594
    7. ' """
' → logprob: -12.639671325683594
    8. 'return' → logprob: -13.514671325683594
    9. '
' → logprob: -13.639671325683594
    10. ' def' → logprob: -14.264671325683594

Token 600: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.06283968687057495
    2. '(n' → logprob: -2.8128397464752197
    3. '[n' → logprob: -7.437839508056641
    4. ' n' → logprob: -8.31283950805664
    5. 'def' → logprob: -10.31283950805664
    6. '	n' → logprob: -13.18783950805664
    7. 'list' → logprob: -13.93783950805664
    8. '
' → logprob: -14.43783950805664
    9. 'int' → logprob: -15.31283950805664
    10. '   ' → logprob: -16.06283950805664

Token 601: ' lignes' (ID: 81687)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.282328337430954
    2. ' lines' → logprob: -1.5323283672332764
    3. '(lines' → logprob: -4.657328128814697
    4. '(n' → logprob: -5.282328128814697
    5. '_lines' → logprob: -5.407328128814697
    6. ' lignes' → logprob: -6.032328128814697
    7. '[' → logprob: -6.157328128814697
    8. 'list' → logprob: -6.657328128814697
    9. '(
' → logprob: -7.157328128814697
    10. 'n' → logprob: -7.657328128814697

Token 602: ',' (ID: 11)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.027882395312190056
    2. 'def' → logprob: -4.0278825759887695
    3. '   ' → logprob: -5.7778825759887695
    4. '[' → logprob: -6.2778825759887695
    5. ',' → logprob: -6.5278825759887695
    6. '(' → logprob: -7.2778825759887695
    7. '[n' → logprob: -7.4028825759887695
    8. '<|end|>' → logprob: -7.4028825759887695
    9. 'for' → logprob: -7.7778825759887695
    10. '<|end|>' → logprob: -9.15288257598877

Token 603: ' chaque' (ID: 21194)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'each' → logprob: -0.8819353580474854
    2. ' each' → logprob: -1.1319353580474854
    3. 'lambda' → logprob: -2.1319353580474854
    4. '   ' → logprob: -2.3819353580474854
    5. ' lambda' → logprob: -3.3819353580474854
    6. 'def' → logprob: -4.631935119628906
    7. ' ' → logprob: -6.131935119628906
    8. 'Each' → logprob: -6.506935119628906
    9. 'n' → logprob: -6.506935119628906
    10. '[' → logprob: -7.256935119628906

Token 604: ' ligne' (ID: 19583)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.3994724750518799
    2. 'ligne' → logprob: -1.8994724750518799
    3. 'line' → logprob: -2.89947247505188
    4. '   ' → logprob: -2.89947247505188
    5. ' list' → logprob: -3.27447247505188
    6. 'l' → logprob: -5.149472236633301
    7. 'def' → logprob: -5.649472236633301
    8. '_' → logprob: -5.899472236633301
    9. ' line' → logprob: -5.899472236633301
    10. 'liste' → logprob: -6.399472236633301

Token 605: ' contenant' (ID: 131049)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1470709890127182
    2. ' =' → logprob: -2.64707088470459
    3. '=list' → logprob: -3.27207088470459
    4. '   ' → logprob: -3.77207088470459
    5. ' étant' → logprob: -6.89707088470459
    6. '=lambda' → logprob: -7.27207088470459
    7. ':' → logprob: -7.27207088470459
    8. 'def' → logprob: -7.52207088470459
    9. ' being' → logprob: -8.02207088470459
    10. 'list' → logprob: -8.64707088470459

Token 606: ' des' (ID: 731)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.02062562294304371
    2. ' list' → logprob: -3.895625591278076
    3. '[list' → logprob: -10.395626068115234
    4. '
' → logprob: -11.645626068115234
    5. '(list' → logprob: -11.770626068115234
    6. 'str' → logprob: -11.895626068115234
    7. 'input' → logprob: -12.270626068115234
    8. '   ' → logprob: -12.270626068115234
    9. 'a' → logprob: -12.395626068115234
    10. 'int' → logprob: -12.770626068115234

Token 607: ' ent' (ID: 1121)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.5865874290466309
    2. 'list' → logprob: -1.2115874290466309
    3. 'ints' → logprob: -2.336587429046631
    4. 'ent' → logprob: -3.336587429046631
    5. 'tuple' → logprob: -5.086587429046631
    6. ' list' → logprob: -5.836587429046631
    7. ' int' → logprob: -6.336587429046631
    8. 'inte' → logprob: -7.086587429046631
    9. ' ent' → logprob: -7.336587429046631
    10. 'tokens' → logprob: -8.461587905883789

Token 608: 'iers' (ID: 11012)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.7245393395423889
    2. 'er' → logprob: -1.3495392799377441
    3. 'iers' → logprob: -2.224539279937744
    4. 't' → logprob: -2.974539279937744
    5. 's' → logprob: -3.599539279937744
    6. '   ' → logprob: -3.974539279937744
    7. 'ières' → logprob: -4.599539279937744
    8. 'r' → logprob: -4.599539279937744
    9. 'ers' → logprob: -4.974539279937744
    10. 'ier' → logprob: -5.224539279937744

Token 609: ' sépar' (ID: 97160)
  Prédit: ' sépar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sépar' → logprob: -0.8070423007011414
    2. ' separated' → logprob: -2.057042360305786
    3. ')' → logprob: -2.182042360305786
    4. '()' → logprob: -2.682042360305786
    5. '[' → logprob: -2.807042360305786
    6. 's' → logprob: -3.057042360305786
    7. '(' → logprob: -3.432042360305786
    8. ',' → logprob: -4.182042121887207
    9. '(n' → logprob: -4.182042121887207
    10. 'split' → logprob: -4.557042121887207

Token 610: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.0005125218303874135
    2. 'ées' → logprob: -7.750512599945068
    3. 'es' → logprob: -9.62551212310791
    4. 'ed' → logprob: -11.87551212310791
    5. 'é' → logprob: -12.37551212310791
    6. '   ' → logprob: -13.25051212310791
    7. 'par' → logprob: -13.75051212310791
    8. 'éd' → logprob: -14.87551212310791
    9. '__' → logprob: -15.12551212310791
    10. '[' → logprob: -15.25051212310791

Token 611: ' par' (ID: 686)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.27604734897613525
    2. ' par' → logprob: -1.5260473489761353
    3. '()' → logprob: -4.526047229766846
    4. '   ' → logprob: -4.651047229766846
    5. 'by' → logprob: -6.026047229766846
    6. ' by' → logprob: -7.526047229766846
    7. ')' → logprob: -9.401047706604004
    8. ',' → logprob: -9.776047706604004
    9. ' ' → logprob: -9.901047706604004
    10. 'def' → logprob: -9.901047706604004

Token 612: ' des' (ID: 731)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5708543062210083
    2. ' des' → logprob: -1.4458543062210083
    3. 's' → logprob: -3.0708541870117188
    4. ' ' → logprob: -3.0708541870117188
    5. 'des' → logprob: -3.9458541870117188
    6. ' un' → logprob: -4.320854187011719
    7. 'list' → logprob: -4.695854187011719
    8. ' list' → logprob: -5.195854187011719
    9. ' '' → logprob: -5.320854187011719
    10. ')' → logprob: -5.320854187011719

Token 613: ' espaces' (ID: 98361)
  Prédit: ' espaces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espaces' → logprob: -0.7393269538879395
    2. 'esp' → logprob: -1.8643269538879395
    3. ' spaces' → logprob: -2.4893269538879395
    4. 'es' → logprob: -2.4893269538879395
    5. 'spaces' → logprob: -2.7393269538879395
    6. ' espace' → logprob: -3.2393269538879395
    7. 'space' → logprob: -3.3643269538879395
    8. 's' → logprob: -3.9893269538879395
    9. ''espace' → logprob: -3.9893269538879395
    10. ' space' → logprob: -4.3643269538879395

Token 614: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9399148225784302
    2. ')' → logprob: -1.4399148225784302
    3. ',' → logprob: -1.9399148225784302
    4. ' for' → logprob: -2.4399147033691406
    5. 'for' → logprob: -2.5649147033691406
    6. 'def' → logprob: -3.3149147033691406
    7. ' pour' → logprob: -4.314914703369141
    8. '),' → logprob: -6.314914703369141
    9. '.' → logprob: -6.314914703369141
    10. '=' → logprob: -6.564914703369141

Token 615: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2079552561044693
    2. 'def' → logprob: -1.707955241203308
    3. ')' → logprob: -5.207955360412598
    4. ' def' → logprob: -7.082955360412598
    5. '    ' → logprob: -8.957955360412598
    6. '       ' → logprob: -10.582955360412598
    7. '  ' → logprob: -11.582955360412598
    8. '    
' → logprob: -11.957955360412598
    9. '[]' → logprob: -12.582955360412598
    10. 'n' → logprob: -12.707955360412598

Token 616: ' et' (ID: 859)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.16037634015083313
    2. '   ' → logprob: -1.9103763103485107
    3. ' def' → logprob: -9.16037654876709
    4. '
' → logprob: -10.53537654876709
    5. 'return' → logprob: -12.16037654876709
    6. 'returns' → logprob: -12.66037654876709
    7. ')' → logprob: -13.03537654876709
    8. 'and' → logprob: -13.28537654876709
    9. '```' → logprob: -13.41037654876709
    10. '       ' → logprob: -13.41037654876709

Token 617: ' retourne' (ID: 178818)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9884481430053711
    2. ' retourne' → logprob: -0.9884481430053711
    3. 'def' → logprob: -1.863448143005371
    4. ' return' → logprob: -3.113448143005371
    5. 'return' → logprob: -3.613448143005371
    6. ' def' → logprob: -4.238448143005371
    7. ' returns' → logprob: -4.988448143005371
    8. 'ret' → logprob: -5.738448143005371
    9. 'returns' → logprob: -6.238448143005371
    10. ' retourner' → logprob: -6.863448143005371

Token 618: ' une' (ID: 2463)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.13757728040218353
    2. '[' → logprob: -2.1375772953033447
    3. ' [' → logprob: -4.762577056884766
    4. '[n' → logprob: -6.512577056884766
    5. '[List' → logprob: -8.137577056884766
    6. '[line' → logprob: -8.512577056884766
    7. '[in' → logprob: -11.012577056884766
    8. '[l' → logprob: -11.887577056884766
    9. 'list' → logprob: -12.012577056884766
    10. '[t' → logprob: -12.137577056884766

Token 619: ' liste' (ID: 31719)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.46242931485176086
    2. '[' → logprob: -1.9624292850494385
    3. 'list' → logprob: -2.2124292850494385
    4. ' list' → logprob: -2.7124292850494385
    5. ' [' → logprob: -3.0874292850494385
    6. '[n' → logprob: -4.962429523468018
    7. '[List' → logprob: -7.712429523468018
    8. '   ' → logprob: -8.58742904663086
    9. '[line' → logprob: -9.21242904663086
    10. '[
' → logprob: -9.21242904663086

Token 620: ' de' (ID: 334)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.12859514355659485
    2. '<|end|>' → logprob: -3.5035951137542725
    3. '[
' → logprob: -3.8785951137542725
    4. '[list' → logprob: -4.128595352172852
    5. '[List' → logprob: -4.378595352172852
    6. '(' → logprob: -4.503595352172852
    7. ' of' → logprob: -5.128595352172852
    8. '```' → logprob: -5.753595352172852
    9. '[int' → logprob: -6.003595352172852
    10. '(
' → logprob: -6.128595352172852

Token 621: ' tuples' (ID: 112464)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.6188434958457947
    2. 'lists' → logprob: -1.4938435554504395
    3. 'list' → logprob: -1.6188435554504395
    4. '[n' → logprob: -3.8688435554504395
    5. '[' → logprob: -4.3688435554504395
    6. ' lists' → logprob: -6.4938435554504395
    7. ' [' → logprob: -6.7438435554504395
    8. '[str' → logprob: -7.1188435554504395
    9. '[len' → logprob: -7.6188435554504395
    10. '[int' → logprob: -8.243843078613281

Token 622: '.

' (ID: 364)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7251695394515991
    2. '(' → logprob: -1.9751695394515991
    3. '(n' → logprob: -2.3501696586608887
    4. ' for' → logprob: -2.3501696586608887
    5. '[' → logprob: -2.6001696586608887
    6. '<|end|>' → logprob: -3.4751696586608887
    7. 'def' → logprob: -4.350169658660889
    8. '   ' → logprob: -4.725169658660889
    9. '[n' → logprob: -4.975169658660889
    10. '[
' → logprob: -5.225169658660889

Token 623: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1977100819349289
    2. '   ' → logprob: -2.1977100372314453
    3. '(n' → logprob: -2.6977100372314453
    4. ' def' → logprob: -7.322710037231445
    5. '(' → logprob: -8.447710037231445
    6. '[
' → logprob: -10.947710037231445
    7. '(
' → logprob: -11.072710037231445
    8. '[n' → logprob: -11.197710037231445
    9. '```' → logprob: -11.197710037231445
    10. '_def' → logprob: -11.322710037231445

Token 624: ' Args' (ID: 39185)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.001997273648157716
    2. '   ' → logprob: -6.251997470855713
    3. ' def' → logprob: -10.001996994018555
    4. '```' → logprob: -11.251996994018555
    5. '(n' → logprob: -12.001996994018555
    6. '[
' → logprob: -14.001996994018555
    7. 'n' → logprob: -14.126996994018555
    8. '"""
' → logprob: -14.501996994018555
    9. '(def' → logprob: -14.876996994018555
    10. '(
' → logprob: -15.001996994018555

Token 625: ':
' (ID: 734)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.32551664113998413
    2. '   ' → logprob: -1.825516700744629
    3. '       ' → logprob: -2.200516700744629
    4. '(' → logprob: -6.325516700744629
    5. '(
' → logprob: -6.325516700744629
    6. 'def' → logprob: -7.450516700744629
    7. '[n' → logprob: -7.825516700744629
    8. '```' → logprob: -7.950516700744629
    9. ':' → logprob: -8.575516700744629
    10. '[' → logprob: -8.700516700744629

Token 626: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21051187813282013
    2. 'def' → logprob: -2.3355119228363037
    3. '(n' → logprob: -2.4605119228363037
    4. 'n' → logprob: -5.210511684417725
    5. '       ' → logprob: -6.460511684417725
    6. ' def' → logprob: -8.585512161254883
    7. '[n' → logprob: -8.835512161254883
    8. ' n' → logprob: -9.085512161254883
    9. '    ' → logprob: -9.710512161254883
    10. '```' → logprob: -10.210512161254883

Token 627: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -1.8670179997570813e-05
    2. ' n' → logprob: -11.000019073486328
    3. '   ' → logprob: -13.250019073486328
    4. 'def' → logprob: -17.125019073486328
    5. '	n' → logprob: -17.875019073486328
    6. '(n' → logprob: -18.250019073486328
    7. 'int' → logprob: -18.500019073486328
    8. '       ' → logprob: -20.250019073486328
    9. '
' → logprob: -20.375019073486328
    10. '_n' → logprob: -20.500019073486328

Token 628: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.012192446738481522
    2. '(int' → logprob: -4.887192249298096
    3. ' (' → logprob: -5.637192249298096
    4. '(' → logprob: -7.762192249298096
    5. '   ' → logprob: -8.512192726135254
    6. ')' → logprob: -8.637192726135254
    7. 'n' → logprob: -9.887192726135254
    8. 'int' → logprob: -10.137192726135254
    9. ':' → logprob: -10.637192726135254
    10. '(
' → logprob: -10.887192726135254

Token 629: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -2.45848218582978e-06
    2. ' int' → logprob: -13.50000286102295
    3. 'n' → logprob: -13.87500286102295
    4. '=int' → logprob: -18.250001907348633
    5. '(int' → logprob: -18.625001907348633
    6. '[int' → logprob: -19.500001907348633
    7. ':int' → logprob: -19.625001907348633
    8. 'in' → logprob: -19.750001907348633
    9. '<int' → logprob: -21.250001907348633
    10. 'def' → logprob: -21.750001907348633

Token 630: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04355080425739288
    2. ':' → logprob: -3.543550729751587
    3. '):
' → logprob: -4.543550968170166
    4. '(n' → logprob: -7.043550968170166
    5. ':int' → logprob: -7.043550968170166
    6. '**' → logprob: -8.043550491333008
    7. '```' → logprob: -8.418550491333008
    8. 'int' → logprob: -8.543550491333008
    9. '   ' → logprob: -8.668550491333008
    10. ')' → logprob: -8.793550491333008

Token 631: ' Le' (ID: 2018)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.02060144767165184
    2. ' n' → logprob: -4.395601272583008
    3. '(n' → logprob: -4.895601272583008
    4. 'int' → logprob: -8.645601272583008
    5. '   ' → logprob: -8.645601272583008
    6. '       ' → logprob: -8.770601272583008
    7. '[n' → logprob: -10.145601272583008
    8. '	n' → logprob: -11.395601272583008
    9. 'def' → logprob: -12.145601272583008
    10. '<n' → logprob: -12.520601272583008

Token 632: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.00532412389293313
    2. ' nombre' → logprob: -5.255323886871338
    3. 'number' → logprob: -9.630324363708496
    4. 'n' → logprob: -10.880324363708496
    5. 'name' → logprob: -13.755324363708496
    6. '_nombre' → logprob: -13.755324363708496
    7. 'nom' → logprob: -14.505324363708496
    8. '(nombre' → logprob: -14.505324363708496
    9. ' number' → logprob: -14.630324363708496
    10. 'Nombre' → logprob: -14.880324363708496

Token 633: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.1560022383928299
    2. '(n' → logprob: -2.7810022830963135
    3. ' of' → logprob: -3.2810022830963135
    4. 'n' → logprob: -4.156002044677734
    5. '   ' → logprob: -5.156002044677734
    6. ')' → logprob: -5.406002044677734
    7. 'de' → logprob: -5.656002044677734
    8. 'of' → logprob: -5.906002044677734
    9. ' des' → logprob: -6.281002044677734
    10. ' n' → logprob: -6.406002044677734

Token 634: ' lignes' (ID: 81687)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.07251104712486267
    2. 'lines' → logprob: -2.8225109577178955
    3. ' lignes' → logprob: -4.822511196136475
    4. ' lines' → logprob: -6.072511196136475
    5. 'ligne' → logprob: -9.572510719299316
    6. '_lines' → logprob: -10.447510719299316
    7. '_l' → logprob: -11.447510719299316
    8. 'lin' → logprob: -12.197510719299316
    9. '```' → logprob: -12.697510719299316
    10. 'n' → logprob: -12.822510719299316

Token 635: ' à' (ID: 1221)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4122355282306671
    2. ')' → logprob: -2.2872354984283447
    3. '):
' → logprob: -2.6622354984283447
    4. ':' → logprob: -2.6622354984283447
    5. '   ' → logprob: -2.7872354984283447
    6. '(n' → logprob: -3.5372354984283447
    7. '=' → logprob: -6.537235736846924
    8. ':
' → logprob: -6.787235736846924
    9. 'à' → logprob: -7.287235736846924
    10. 'def' → logprob: -7.662235736846924

Token 636: ' lire' (ID: 46082)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.03306206688284874
    2. ' read' → logprob: -4.033061981201172
    3. '_read' → logprob: -4.408061981201172
    4. ' lire' → logprob: -6.033061981201172
    5. 'l' → logprob: -9.908061981201172
    6. 'range' → logprob: -10.283061981201172
    7. 'n' → logprob: -10.408061981201172
    8. '   ' → logprob: -11.283061981201172
    9. '_reads' → logprob: -11.408061981201172
    10. '(read' → logprob: -11.783061981201172

Token 637: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.757841169834137
    2. '(n' → logprob: -1.6328411102294922
    3. '):
' → logprob: -1.6328411102294922
    4. '):' → logprob: -2.132841110229492
    5. ')' → logprob: -4.132841110229492
    6. 'def' → logprob: -5.257841110229492
    7. 'n' → logprob: -7.882841110229492
    8. '):
' → logprob: -9.632841110229492
    9. ':' → logprob: -9.882841110229492
    10. ',' → logprob: -10.132841110229492

Token 638: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0003034074034076184
    2. 'return' → logprob: -8.625303268432617
    3. ')' → logprob: -9.250303268432617
    4. '):
' → logprob: -11.250303268432617
    5. ' return' → logprob: -11.625303268432617
    6. '```' → logprob: -13.000303268432617
    7. '  ' → logprob: -14.375303268432617
    8. 'def' → logprob: -14.375303268432617
    9. ')
' → logprob: -14.500303268432617
    10. ')return' → logprob: -14.875303268432617

Token 639: ' Returns' (ID: 9609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006736215204000473
    2. 'def' → logprob: -5.2567362785339355
    3. 'return' → logprob: -6.6317362785339355
    4. '```' → logprob: -9.381735801696777
    5. '"""
' → logprob: -10.256735801696777
    6. '
' → logprob: -10.631735801696777
    7. ')' → logprob: -11.006735801696777
    8. ' return' → logprob: -12.381735801696777
    9. '  ' → logprob: -12.506735801696777
    10. '"""' → logprob: -12.756735801696777

Token 640: ':
' (ID: 734)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.7499469518661499
    2. '[n' → logprob: -1.62494695186615
    3. '   ' → logprob: -1.87494695186615
    4. '[' → logprob: -2.7499470710754395
    5. ':' → logprob: -2.8749470710754395
    6. ')' → logprob: -4.4999470710754395
    7. ' =' → logprob: -4.7499470710754395
    8. 'def' → logprob: -5.2499470710754395
    9. ' [' → logprob: -5.3749470710754395
    10. ' (' → logprob: -5.3749470710754395

Token 641: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00019293125660624355
    2. '[' → logprob: -9.000192642211914
    3. '       ' → logprob: -10.375192642211914
    4. '    ' → logprob: -10.750192642211914
    5. '```' → logprob: -12.625192642211914
    6. '   ' → logprob: -12.750192642211914
    7. '  ' → logprob: -13.250192642211914
    8. ' [' → logprob: -13.500192642211914
    9. '	' → logprob: -13.500192642211914
    10. '
' → logprob: -13.875192642211914

Token 642: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' (adapté à ' list') → logprob: -0.2218737155199051
    2. ' list' → logprob: -1.7218737602233887
    3. '[list' → logprob: -4.096873760223389
    4. '[' → logprob: -5.846873760223389
    5. ' [' → logprob: -7.846873760223389
    6. '[List' → logprob: -8.72187328338623
    7. '   ' → logprob: -9.22187328338623
    8. 'List' → logprob: -10.22187328338623
    9. '[t' → logprob: -10.97187328338623
    10. 'tuple' → logprob: -11.72187328338623

Token 643: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4870976209640503
    2. '[' → logprob: -0.9870976209640503
    3. ' =' → logprob: -5.23709774017334
    4. '[List' → logprob: -6.61209774017334
    5. '[
' → logprob: -6.86209774017334
    6. '   ' → logprob: -6.98709774017334
    7. '<|end|>' → logprob: -7.23709774017334
    8. ' of' → logprob: -7.36209774017334
    9. ')' → logprob: -7.61209774017334
    10. '=' → logprob: -7.73709774017334

Token 644: ' Une' (ID: 19758)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0010161371901631355
    2. ' [' → logprob: -7.376016139984131
    3. '[t' → logprob: -8.376015663146973
    4. '[list' → logprob: -9.001015663146973
    5. '[List' → logprob: -10.626015663146973
    6. '[int' → logprob: -13.251015663146973
    7. '[type' → logprob: -13.376015663146973
    8. '[T' → logprob: -13.376015663146973
    9. '   ' → logprob: -13.626015663146973
    10. '[to' → logprob: -13.751015663146973

Token 645: ' liste' (ID: 31719)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.025487037375569344
    2. ' [' → logprob: -3.900486946105957
    3. ' list' → logprob: -6.150486946105957
    4. '[list' → logprob: -7.275486946105957
    5. 'space' → logprob: -7.525486946105957
    6. 'list' → logprob: -8.150486946105957
    7. '[List' → logprob: -8.525486946105957
    8. ' [
' → logprob: -8.775486946105957
    9. '[
' → logprob: -8.775486946105957
    10. ')' → logprob: -8.900486946105957

Token 646: ' de' (ID: 334)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5519800186157227
    2. ' of' → logprob: -0.9269800186157227
    3. 'of' → logprob: -4.301980018615723
    4. '<|end|>' → logprob: -4.301980018615723
    5. '[
' → logprob: -7.676980018615723
    6. '<|end|>' → logprob: -8.301980018615723
    7. '[]' → logprob: -8.676980018615723
    8. '_of' → logprob: -9.551980018615723
    9. '_' → logprob: -9.801980018615723
    10. '	of' → logprob: -9.801980018615723

Token 647: ' tuples' (ID: 112464)
  Prédit: 'tu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tu' → logprob: -0.018695320934057236
    2. ' tuples' → logprob: -4.01869535446167
    3. 'tuple' → logprob: -7.51869535446167
    4. 'lists' → logprob: -13.893694877624512
    5. 'list' → logprob: -14.893694877624512
    6. 't' → logprob: -15.018694877624512
    7. ' tuple' → logprob: -15.143694877624512
    8. '[' → logprob: -15.393694877624512
    9. 'Tu' → logprob: -15.893694877624512
    10. ' tu' → logprob: -16.393695831298828

Token 648: ' d' (ID: 272)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.23677073419094086
    2. ' for' → logprob: -2.8617706298828125
    3. '[' → logprob: -2.9867706298828125
    4. 'of' → logprob: -3.4867706298828125
    5. ' of' → logprob: -3.7367706298828125
    6. ')' → logprob: -3.9867706298828125
    7. '(map' → logprob: -4.7367706298828125
    8. 's' → logprob: -5.7367706298828125
    9. '[(' → logprob: -5.8617706298828125
    10. '(' → logprob: -6.2367706298828125

Token 649: ''ent' (ID: 53422)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.41040870547294617
    2. 'uples' → logprob: -1.4104087352752686
    3. 'int' → logprob: -3.4104087352752686
    4. '<int' → logprob: -3.9104087352752686
    5. ' tuples' → logprob: -3.9104087352752686
    6. '[int' → logprob: -5.2854084968566895
    7. 'uple' → logprob: -5.2854084968566895
    8. ' int' → logprob: -6.1604084968566895
    9. '(tuple' → logprob: -6.2854084968566895
    10. ' integers' → logprob: -6.4104084968566895

Token 650: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.022995511069893837
    2. 'ers' → logprob: -4.522995471954346
    3. 'gers' → logprob: -4.647995471954346
    4. 'eurs' → logprob: -7.022995471954346
    5. 'ières' → logprob: -7.397995471954346
    6. 'aires' → logprob: -8.272995948791504
    7. 'airs' → logprob: -8.522995948791504
    8. 'ires' → logprob: -8.897995948791504
    9. 'èrs' → logprob: -9.647995948791504
    10. 'ints' → logprob: -10.772995948791504

Token 651: '.
' (ID: 558)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.1236263513565063
    2. ')' → logprob: -1.2486263513565063
    3. 'for' → logprob: -1.4986263513565063
    4. ']' → logprob: -2.748626232147217
    5. '(n' → logprob: -2.998626232147217
    6. '   ' → logprob: -3.998626232147217
    7. '<|end|>' → logprob: -4.498626232147217
    8. '[n' → logprob: -4.873626232147217
    9. 's' → logprob: -6.123626232147217
    10. '[' → logprob: -6.123626232147217

Token 652: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3110223114490509
    2. '(n' → logprob: -1.4360222816467285
    3. '[' → logprob: -4.5610222816467285
    4. '[n' → logprob: -5.0610222816467285
    5. '<|end|>' → logprob: -5.1860222816467285
    6. 'def' → logprob: -6.4360222816467285
    7. 'for' → logprob: -6.6860222816467285
    8. ')' → logprob: -6.9360222816467285
    9. ' for' → logprob: -7.0610222816467285
    10. '(' → logprob: -7.4360222816467285

Token 653: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008182140998542309
    2. 'def' → logprob: -5.758182048797607
    3. ']' → logprob: -6.508182048797607
    4. ')' → logprob: -6.758182048797607
    5. '```' → logprob: -7.008182048797607
    6. '"""
' (adapté à ' """
') → logprob: -7.258182048797607
    7. '(n' → logprob: -8.508182525634766
    8. '[n' → logprob: -9.008182525634766
    9. '[
' → logprob: -9.633182525634766
    10. '    ' → logprob: -9.758182525634766

Token 654: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0001242772996192798
    2. 'return' → logprob: -9.375123977661133
    3. '[' → logprob: -10.375123977661133
    4. 'def' → logprob: -12.250123977661133
    5. ' return' → logprob: -13.625123977661133
    6. '```' → logprob: -13.625123977661133
    7. '[]' → logprob: -15.375123977661133
    8. '{return' → logprob: -15.500123977661133
    9. '[
' → logprob: -15.625123977661133
    10. '	return' → logprob: -16.375123977661133

Token 655: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.023554086685180664
    2. '   ' → logprob: -3.7735540866851807
    3. ' return' → logprob: -8.273553848266602
    4. 'def' → logprob: -10.148553848266602
    5. '[' → logprob: -12.148553848266602
    6. '```' → logprob: -12.648553848266602
    7. '
' → logprob: -13.023553848266602
    8. '{return' → logprob: -13.523553848266602
    9. '	return' → logprob: -14.023553848266602
    10. '[
' → logprob: -14.648553848266602

Token 656: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.005356620531529188
    2. '[list' → logprob: -5.255356788635254
    3. ' [' → logprob: -9.630356788635254
    4. '[List' → logprob: -10.255356788635254
    5. '[in' → logprob: -11.005356788635254
    6. '[t' → logprob: -12.505356788635254
    7. '[int' → logprob: -14.005356788635254
    8. '   ' → logprob: -15.880356788635254
    9. '[to' → logprob: -15.880356788635254
    10. '[line' → logprob: -16.130355834960938

Token 657: 'tuple' (ID: 52834)
  Prédit: 'tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -6.2729995988775045e-06
    2. ' tuple' → logprob: -12.000006675720215
    3. '(tuple' → logprob: -19.3750057220459
    4. 'tu' → logprob: -20.3750057220459
    5. 't' → logprob: -22.6250057220459
    6. '   ' → logprob: -24.5000057220459
    7. 'tpl' → logprob: -24.5000057220459
    8. 'Tuple' → logprob: -25.0000057220459
    9. '_tuple' → logprob: -25.6250057220459
    10. ' ' → logprob: -26.2500057220459

Token 658: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.007626745849847794
    2. '(input' → logprob: -5.007626533508301
    3. '(int' → logprob: -7.007626533508301
    4. 'map' → logprob: -12.7576265335083
    5. '(list' → logprob: -13.5076265335083
    6. '(in' → logprob: -14.2576265335083
    7. 'int' → logprob: -14.7576265335083
    8. 'input' → logprob: -15.1326265335083
    9. '(' → logprob: -15.3826265335083
    10. '[int' → logprob: -17.757627487182617

Token 659: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0033345604315400124
    2. 'int' → logprob: -5.7533345222473145
    3. '<int' → logprob: -9.253334999084473
    4. '[int' → logprob: -10.253334999084473
    5. ',int' → logprob: -11.378334999084473
    6. '=int' → logprob: -12.003334999084473
    7. ' int' → logprob: -12.128334999084473
    8. ']int' → logprob: -13.128334999084473
    9. ':int' → logprob: -14.628334999084473
    10. '(' → logprob: -16.128334045410156

Token 660: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00034177995985373855
    2. ',input' → logprob: -8.000341415405273
    3. '(input' → logprob: -12.375341415405273
    4. ' ,' → logprob: -13.750341415405273
    5. 'input' → logprob: -14.250341415405273
    6. '(' → logprob: -15.000341415405273
    7. '(),' → logprob: -17.625341415405273
    8. ' (' → logprob: -18.375341415405273
    9. ' input' → logprob: -18.500341415405273
    10. ',
' → logprob: -19.875341415405273

Token 661: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.005234002135694027
    2. ' input' → logprob: -5.2552337646484375
    3. '(input' → logprob: -15.380233764648438
    4. ',input' → logprob: -19.005233764648438
    5. '<input' → logprob: -19.380233764648438
    6. '[input' → logprob: -19.630233764648438
    7. '_input' → logprob: -20.130233764648438
    8. ' ' → logprob: -20.380233764648438
    9. '	input' → logprob: -20.880233764648438
    10. '=input' → logprob: -20.880233764648438

Token 662: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.8624639324116288e-06
    2. '()' → logprob: -13.375001907348633
    3. '.split' → logprob: -16.500001907348633
    4. ' ().' → logprob: -16.750001907348633
    5. '(' → logprob: -17.125001907348633
    6. '()
' → logprob: -17.750001907348633
    7. '()[' → logprob: -18.875001907348633
    8. '(),' → logprob: -19.000001907348633
    9. ',' → logprob: -19.250001907348633
    10. 'split' → logprob: -19.375001907348633

Token 663: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -3.128163257315464e-07
    2. ' split' → logprob: -15.75
    3. ')' → logprob: -17.25
    4. '(split' → logprob: -17.5
    5. '().' → logprob: -17.625
    6. 'strip' → logprob: -18.625
    7. '_split' → logprob: -18.875
    8. '.split' → logprob: -19.0
    9. 'spl' → logprob: -19.625
    10. ').' → logprob: -20.0

Token 664: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.011234206147491932
    2. '))' → logprob: -4.511234283447266
    3. '())' → logprob: -9.261234283447266
    4. '()' → logprob: -9.386234283447266
    5. '()))
' → logprob: -12.261234283447266
    6. ' ))' → logprob: -14.636234283447266
    7. '   ' → logprob: -14.761234283447266
    8. '()[' → logprob: -15.136234283447266
    9. '())))' → logprob: -15.261234283447266
    10. '(' → logprob: -15.386234283447266

Token 665: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16907548904418945
    2. '()' → logprob: -2.4190754890441895
    3. ' for' → logprob: -2.9190754890441895
    4. ')' → logprob: -4.4190754890441895
    5. '(n' → logprob: -7.6690754890441895
    6. '(for' → logprob: -10.669075012207031
    7. '(' → logprob: -11.544075012207031
    8. '   ' → logprob: -12.044075012207031
    9. ']' → logprob: -12.294075012207031
    10. '	for' → logprob: -12.294075012207031

Token 666: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00020354038861114532
    2. ' _' → logprob: -8.500203132629395
    3. ' ' → logprob: -18.37520408630371
    4. ' ' → logprob: -19.25020408630371
    5. '_range' → logprob: -20.50020408630371
    6. ' in' → logprob: -21.00020408630371
    7. '_=' → logprob: -21.50020408630371
    8. 'n' → logprob: -21.75020408630371
    9. '\' → logprob: -21.75020408630371
    10. ' range' → logprob: -22.00020408630371

Token 667: ' in' (ID: 306)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -5.12127808178775e-05
    2. 'range' → logprob: -10.250051498413086
    3. '_range' → logprob: -11.250051498413086
    4. ' range' → logprob: -13.250051498413086
    5. ' _' → logprob: -14.125051498413086
    6. ' in' → logprob: -15.375051498413086
    7. 'in' → logprob: -16.250051498413086
    8. 'n' → logprob: -17.500051498413086
    9. 'i' → logprob: -17.875051498413086
    10. '_=' → logprob: -18.000051498413086

Token 668: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.17308931052684784
    2. ' range' → logprob: -1.9230892658233643
    3. '_range' → logprob: -4.673089504241943
    4. '_' → logprob: -5.673089504241943
    5. '(range' → logprob: -13.798089027404785
    6. ' _' → logprob: -14.423089027404785
    7. '	range' → logprob: -14.798089027404785
    8. 'n' → logprob: -17.0480899810791
    9. '_rng' → logprob: -17.0480899810791
    10. '_in' → logprob: -18.4230899810791

Token 669: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.04670024290680885
    2. '_' → logprob: -4.046700477600098
    3. ' n' → logprob: -4.046700477600098
    4. 'range' → logprob: -4.796700477600098
    5. ' range' → logprob: -6.171700477600098
    6. '(n' → logprob: -8.796700477600098
    7. '_n' → logprob: -8.921700477600098
    8. '_range' → logprob: -10.296700477600098
    9. ' _' → logprob: -13.421700477600098
    10. '(range' → logprob: -13.921700477600098

Token 670: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00016551809676457196
    2. ')' → logprob: -9.000165939331055
    3. ']' → logprob: -10.125165939331055
    4. ')]
' → logprob: -14.750165939331055
    5. ')n' → logprob: -15.125165939331055
    6. ')])' → logprob: -15.625165939331055
    7. '')]' → logprob: -15.750165939331055
    8. ')],' → logprob: -15.875165939331055
    9. 'n' → logprob: -15.875165939331055
    10. '])]' → logprob: -15.875165939331055

Token 671: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.007362645119428635
    2. '
' → logprob: -5.3823628425598145
    3. '\' → logprob: -6.1323628425598145
    4. '#' → logprob: -8.507362365722656
    5. '<|end|>' → logprob: -8.882362365722656
    6. '\n' → logprob: -9.132362365722656
    7. 'd' → logprob: -9.757362365722656
    8. '```' → logprob: -10.757362365722656
    9. '

' → logprob: -11.632362365722656
    10. '' → logprob: -12.507362365722656

Token 672: ' in' (ID: 306)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.059294022619724274
    2. 'main' → logprob: -3.0592939853668213
    3. ' solve' → logprob: -5.9342942237854
    4. ' factorial' → logprob: -6.1842942237854
    5. ' binary' → logprob: -6.9342942237854
    6. 'solve' → logprob: -7.1842942237854
    7. 'in' → logprob: -7.3092942237854
    8. ' pow' → logprob: -7.4342942237854
    9. 'factor' → logprob: -8.309293746948242
    10. 'binary' → logprob: -8.434293746948242

Token 673: 'pl' (ID: 528)
  Prédit: 'put'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'put' → logprob: -0.2705928087234497
    2. 'p' → logprob: -2.52059268951416
    3. 't' → logprob: -2.77059268951416
    4. 'pl' → logprob: -3.14559268951416
    5. 'pt' → logprob: -3.77059268951416
    6. 'puts' → logprob: -4.02059268951416
    7. 'def' → logprob: -5.64559268951416
    8. 'it' → logprob: -6.89559268951416
    9. 's' → logprob: -7.14559268951416
    10. 'plt' → logprob: -7.27059268951416

Token 674: 'ls' (ID: 3973)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.3045750856399536
    2. '(n' → logprob: -1.3045750856399536
    3. 's' → logprob: -1.6795750856399536
    4. 'l' → logprob: -2.554574966430664
    5. 'n' → logprob: -3.304574966430664
    6. 'L' → logprob: -3.804574966430664
    7. 'T' → logprob: -3.804574966430664
    8. 'M' → logprob: -4.054574966430664
    9. 'd' → logprob: -4.054574966430664
    10. 'def' → logprob: -4.054574966430664

Token 675: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0007933051674626768
    2. '(' → logprob: -7.50079345703125
    3. 'def' → logprob: -9.62579345703125
    4. 'n' → logprob: -9.87579345703125
    5. 't' → logprob: -10.00079345703125
    6. 's' → logprob: -10.75079345703125
    7. '<|end|>' → logprob: -11.12579345703125
    8. ' (' → logprob: -11.37579345703125
    9. '<|end|>' → logprob: -11.50079345703125
    10. ')' → logprob: -12.75079345703125

Token 676: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.025576278567314148
    2. '(n' → logprob: -3.77557635307312
    3. '):
' → logprob: -6.400576114654541
    4. ')' → logprob: -7.400576114654541
    5. ')(' → logprob: -10.6505765914917
    6. 'n' → logprob: -11.2755765914917
    7. ':' → logprob: -12.4005765914917
    8. 'def' → logprob: -12.6505765914917
    9. '   ' → logprob: -13.0255765914917
    10. ')n' → logprob: -13.0255765914917

Token 677: '   ' (ID: 271)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.002948578679934144
    2. '   ' → logprob: -6.252948760986328
    3. '(' → logprob: -7.627948760986328
    4. '(
' → logprob: -7.877948760986328
    5. 'n' → logprob: -9.627948760986328
    6. 'def' → logprob: -9.877948760986328
    7. ':' → logprob: -10.877948760986328
    8. ' (' → logprob: -12.377948760986328
    9. 's' → logprob: -13.127948760986328
    10. '  ' → logprob: -13.252948760986328

Token 678: ' """
' (ID: 7037)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05807267129421234
    2. '   ' → logprob: -3.683072566986084
    3. '(n' → logprob: -3.683072566986084
    4. '(
' → logprob: -6.058072566986084
    5. '(' → logprob: -6.683072566986084
    6. ' def' → logprob: -7.058072566986084
    7. 'n' → logprob: -7.433072566986084
    8. '[' → logprob: -7.808072566986084
    9. '[
' → logprob: -8.058073043823242
    10. '"""
' (adapté à ' """
') → logprob: -9.308073043823242

Token 679: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06209607422351837
    2. 'def' → logprob: -3.812096118927002
    3. '"""
' → logprob: -4.062096118927002
    4. '"' → logprob: -4.187096118927002
    5. '[' → logprob: -6.062096118927002
    6. '[
' → logprob: -6.312096118927002
    7. '"""' → logprob: -6.812096118927002
    8. '"
' → logprob: -8.062095642089844
    9. ' def' → logprob: -9.562095642089844
    10. '{
' → logprob: -11.312095642089844

Token 680: ' Lit' (ID: 45595)
  Prédit: '"""
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""
' → logprob: -0.16585643589496613
    2. 'def' → logprob: -2.29085636138916
    3. '   ' → logprob: -3.16585636138916
    4. 'return' → logprob: -5.29085636138916
    5. '"""' → logprob: -5.54085636138916
    6. 'Return' → logprob: -8.54085636138916
    7. 'Returns' → logprob: -9.41585636138916
    8. '[
' → logprob: -9.91585636138916
    9. '[' → logprob: -10.16585636138916
    10. ''''
' → logprob: -10.16585636138916

Token 681: ' n' (ID: 297)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.28255295753479004
    2. 'n' → logprob: -1.53255295753479
    3. '[n' → logprob: -4.282552719116211
    4. ' n' → logprob: -4.407552719116211
    5. '[' → logprob: -5.657552719116211
    6. ' [' → logprob: -8.657552719116211
    7. ' (' → logprob: -9.032552719116211
    8. '(' → logprob: -9.407552719116211
    9. 's' → logprob: -9.407552719116211
    10. '[
' → logprob: -9.532552719116211

Token 682: ' lignes' (ID: 81687)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.4912201762199402
    2. ' lignes' → logprob: -1.866220235824585
    3. ' lines' → logprob: -2.241220235824585
    4. 'lines' → logprob: -3.241220235824585
    5. '_lines' → logprob: -3.366220235824585
    6. 'l' → logprob: -4.741219997406006
    7. '(lines' → logprob: -4.741219997406006
    8. 'L' → logprob: -4.866219997406006
    9. ' (' → logprob: -5.366219997406006
    10. '(' → logprob: -5.741219997406006

Token 683: ' d' (ID: 272)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.5987247228622437
    2. ',' → logprob: -0.8487247228622437
    3. '(' → logprob: -4.598724842071533
    4. '   ' → logprob: -4.848724842071533
    5. '<|end|>' → logprob: -6.723724842071533
    6. 'for' → logprob: -7.348724842071533
    7. ',n' → logprob: -7.348724842071533
    8. ' for' → logprob: -7.598724842071533
    9. 'def' → logprob: -7.848724842071533
    10. '(
' → logprob: -8.473724365234375

Token 684: ''ent' (ID: 53422)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.3246178925037384
    2. 'e' → logprob: -2.199617862701416
    3. 'ent' → logprob: -2.699617862701416
    4. ''ent' → logprob: -3.449617862701416
    5. '```' → logprob: -3.824617862701416
    6. '(' → logprob: -4.949617862701416
    7. 'strings' → logprob: -5.449617862701416
    8. '_strings' → logprob: -5.699617862701416
    9. 's' → logprob: -5.824617862701416
    10. 'list' → logprob: -5.949617862701416

Token 685: 'iers' (ID: 11012)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.9907743334770203
    2. 'ières' → logprob: -1.115774393081665
    3. 'ées' → logprob: -1.865774393081665
    4. 'rees' → logprob: -2.365774393081665
    5. 'êtes' → logprob: -3.865774393081665
    6. 'érées' → logprob: -4.615774154663086
    7. 'rée' → logprob: -4.740774154663086
    8. '```' → logprob: -5.490774154663086
    9. 'iers' → logprob: -6.865774154663086
    10. '   ' → logprob: -7.240774154663086

Token 686: ' sépar' (ID: 97160)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006246937904506922
    2. '()' → logprob: -6.506247043609619
    3. '(n' → logprob: -7.006247043609619
    4. 's' → logprob: -7.256247043609619
    5. '[' → logprob: -7.256247043609619
    6. 'for' → logprob: -7.631247043609619
    7. '[]' → logprob: -8.006246566772461
    8. ',n' → logprob: -8.256246566772461
    9. '[n' → logprob: -8.381246566772461
    10. '   ' → logprob: -8.381246566772461

Token 687: 'és' (ID: 1756)
  Prédit: 'ées'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.08383846282958984
    2. 'és' → logprob: -2.58383846282959
    3. 'é' → logprob: -5.58383846282959
    4. 'par' → logprob: -7.08383846282959
    5. ' par' → logprob: -8.33383846282959
    6. 'ée' → logprob: -10.45883846282959
    7. 'es' → logprob: -10.45883846282959
    8. 'e' → logprob: -11.33383846282959
    9. ' by' → logprob: -11.95883846282959
    10. 'ed' → logprob: -12.20883846282959

Token 688: ' par' (ID: 686)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.3133041262626648
    2. ' par' → logprob: -1.3133041858673096
    3. '(par' → logprob: -11.56330394744873
    4. '_par' → logprob: -11.68830394744873
    5. '   ' → logprob: -11.93830394744873
    6. 'Par' → logprob: -12.06330394744873
    7. '```' → logprob: -12.68830394744873
    8. ' ' → logprob: -13.18830394744873
    9. 'by' → logprob: -13.43830394744873
    10. ' ' → logprob: -13.56330394744873

Token 689: ' des' (ID: 731)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.6567957997322083
    2. ' des' → logprob: -1.7817957401275635
    3. 'des' → logprob: -2.1567957401275635
    4. ''espace' → logprob: -2.7817957401275635
    5. 'spaces' → logprob: -3.0317957401275635
    6. ''esp' → logprob: -3.9067957401275635
    7. '"' → logprob: -4.281795978546143
    8. ''un' → logprob: -4.406795978546143
    9. 'space' → logprob: -4.531795978546143
    10. ' espaces' → logprob: -4.531795978546143

Token 690: ' espaces' (ID: 98361)
  Prédit: 'esp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'esp' → logprob: -0.4407710134983063
    2. ' espaces' → logprob: -1.1907709836959839
    3. 'es' → logprob: -3.4407711029052734
    4. 'spaces' → logprob: -4.440771102905273
    5. ''esp' → logprob: -4.940771102905273
    6. ''espace' → logprob: -7.190771102905273
    7. ' espace' → logprob: -9.065771102905273
    8. 'space' → logprob: -9.065771102905273
    9. ' spaces' → logprob: -9.065771102905273
    10. '’esp' → logprob: -9.065771102905273

Token 691: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7973244786262512
    2. ',' → logprob: -1.1723244190216064
    3. '.' → logprob: -2.7973244190216064
    4. 'for' → logprob: -2.9223244190216064
    5. ')' → logprob: -3.4223244190216064
    6. '(n' → logprob: -3.4223244190216064
    7. 'def' → logprob: -4.1723246574401855
    8. '[' → logprob: -4.6723246574401855
    9. ' for' → logprob: -4.6723246574401855
    10. '(' → logprob: -5.4223246574401855

Token 692: ' retourne' (ID: 178818)
  Prédit: ' retourne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' retourne' → logprob: -0.7550237774848938
    2. 'returns' → logprob: -1.505023717880249
    3. 'return' → logprob: -2.380023717880249
    4. ' returns' → logprob: -2.505023717880249
    5. '   ' → logprob: -2.755023717880249
    6. ' return' → logprob: -3.630023717880249
    7. ' les' → logprob: -4.880023956298828
    8. 'ret' → logprob: -5.130023956298828
    9. '[]' → logprob: -5.630023956298828
    10. 's' → logprob: -5.880023956298828

Token 693: ' une' (ID: 2463)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.3431748151779175
    2. '[' → logprob: -1.5931748151779175
    3. '[n' → logprob: -3.218174934387207
    4. '[list' → logprob: -3.468174934387207
    5. 'une' → logprob: -4.968174934387207
    6. ' une' → logprob: -5.718174934387207
    7. ' la' → logprob: -6.468174934387207
    8. ' list' → logprob: -6.718174934387207
    9. '   ' → logprob: -7.468174934387207
    10. 'list' → logprob: -7.968174934387207

Token 694: ' liste' (ID: 31719)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.8823361992835999
    2. '[' → logprob: -1.382336139678955
    3. '[list' → logprob: -2.257336139678955
    4. ' list' → logprob: -2.382336139678955
    5. 'liste' → logprob: -2.757336139678955
    6. '[]' → logprob: -3.757336139678955
    7. ' [' → logprob: -3.757336139678955
    8. ' liste' → logprob: -4.382336139678955
    9. '[n' → logprob: -5.257336139678955
    10. '[
' → logprob: -5.757336139678955

Token 695: '
' (ID: 198)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6702204346656799
    2. '[
' → logprob: -2.295220375061035
    3. 'def' → logprob: -2.545220375061035
    4. '   ' → logprob: -3.045220375061035
    5. '<|end|>' → logprob: -3.170220375061035
    6. ' of' → logprob: -3.295220375061035
    7. '[]' → logprob: -3.545220375061035
    8. 's' → logprob: -3.920220375061035
    9. '[List' → logprob: -3.920220375061035
    10. 'des' → logprob: -4.170220375061035

Token 696: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7108983993530273
    2. '[' → logprob: -2.0858983993530273
    3. '[
' → logprob: -2.3358983993530273
    4. ' of' → logprob: -2.7108983993530273
    5. '<|end|>' → logprob: -2.9608983993530273
    6. 'def' → logprob: -3.0858983993530273
    7. '[]' → logprob: -3.7108983993530273
    8. '[List' → logprob: -4.085898399353027
    9. '[list' → logprob: -4.460898399353027
    10. '...' → logprob: -4.585898399353027

Token 697: ' tri' (ID: 12665)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.3741647005081177
    2. '[' → logprob: -1.7491647005081177
    3. ' of' → logprob: -2.124164581298828
    4. '   ' → logprob: -2.374164581298828
    5. 'of' → logprob: -2.624164581298828
    6. '<|end|>' → logprob: -2.749164581298828
    7. '[list' → logprob: -3.124164581298828
    8. ' de' → logprob: -3.374164581298828
    9. '[List' → logprob: -3.499164581298828
    10. 'des' → logprob: -3.624164581298828

Token 698: 'ée' (ID: 2894)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.49427181482315063
    2. 'sted' → logprob: -1.8692717552185059
    3. 'stes' → logprob: -2.369271755218506
    4. 'ste' → logprob: -2.744271755218506
    5. 'sts' → logprob: -3.119271755218506
    6. 's' → logprob: -3.744271755218506
    7. '[' → logprob: -5.244271755218506
    8. '[[' → logprob: -6.869271755218506
    9. 'sting' → logprob: -7.619271755218506
    10. 'sta' → logprob: -7.744271755218506

Token 699: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03099922090768814
    2. '(
' → logprob: -3.780999183654785
    3. 'def' → logprob: -5.530999183654785
    4. '[' → logprob: -6.280999183654785
    5. '(sorted' → logprob: -7.405999183654785
    6. '(n' → logprob: -8.030999183654785
    7. '.' → logprob: -8.905999183654785
    8. ',' → logprob: -8.905999183654785
    9. '(list' → logprob: -9.280999183654785
    10. '([' → logprob: -9.655999183654785

Token 700: ' listes' (ID: 179198)
  Prédit: 'lists'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lists' → logprob: -0.6538162231445312
    2. 'list' → logprob: -0.7788162231445312
    3. 'int' → logprob: -4.153816223144531
    4. '[int' → logprob: -6.028816223144531
    5. '[list' → logprob: -6.903816223144531
    6. 'ints' → logprob: -7.278816223144531
    7. ' lists' → logprob: -8.028816223144531
    8. 'all' → logprob: -8.778816223144531
    9. '[' → logprob: -9.153816223144531
    10. '[]' → logprob: -9.403816223144531

Token 701: ' d' (ID: 272)
  Prédit: '(sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(sorted' → logprob: -1.0132473707199097
    2. '[' → logprob: -1.7632473707199097
    3. '[int' → logprob: -1.7632473707199097
    4. 'd' → logprob: -2.763247489929199
    5. '[
' → logprob: -2.888247489929199
    6. 'de' → logprob: -3.513247489929199
    7. '(
' → logprob: -3.638247489929199
    8. '[list' → logprob: -4.013247489929199
    9. '```' → logprob: -4.263247489929199
    10. '.' → logprob: -5.013247489929199

Token 702: ''ent' (ID: 53422)
  Prédit: ''ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ent' → logprob: -0.8042054772377014
    2. '[int' → logprob: -1.1792054176330566
    3. '<int' → logprob: -1.8042054176330566
    4. 'ent' → logprob: -3.5542054176330566
    5. 'int' → logprob: -3.6792054176330566
    6. ''int' → logprob: -4.679205417633057
    7. '(int' → logprob: -5.429205417633057
    8. 'ints' → logprob: -6.429205417633057
    9. ']int' → logprob: -6.429205417633057
    10. '```' → logprob: -6.429205417633057

Token 703: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.0013345248298719525
    2. 'ières' → logprob: -6.6263346672058105
    3. 'i' → logprob: -12.501334190368652
    4. 'ier' → logprob: -13.501334190368652
    5. 'ires' → logprob: -13.876334190368652
    6. 'ieurs' → logprob: -14.876334190368652
    7. 'ieres' → logprob: -15.001334190368652
    8. 'I' → logprob: -15.126334190368652
    9. '```' → logprob: -15.126334190368652
    10. 'ints' → logprob: -15.251334190368652

Token 704: '.

' (ID: 364)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.5103403329849243
    2. '   ' → logprob: -1.6353403329849243
    3. '(n' → logprob: -1.7603403329849243
    4. '(' → logprob: -2.1353402137756348
    5. '(
' → logprob: -2.3853402137756348
    6. ']' → logprob: -2.8853402137756348
    7. 'for' → logprob: -3.2603402137756348
    8. '[' → logprob: -3.5103402137756348
    9. ')' → logprob: -4.010340213775635
    10. '[
' → logprob: -4.135340213775635

Token 705: '   ' (ID: 271)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.10964688658714294
    2. '(' → logprob: -2.984646797180176
    3. '   ' → logprob: -2.984646797180176
    4. '(
' → logprob: -6.484646797180176
    5. 'def' → logprob: -7.359646797180176
    6. '[n' → logprob: -8.859646797180176
    7. 'n' → logprob: -9.359646797180176
    8. '"""
' → logprob: -9.859646797180176
    9. '[' → logprob: -9.984646797180176
    10. '\n' → logprob: -10.234646797180176

Token 706: ' Args' (ID: 39185)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02714352309703827
    2. 'def' → logprob: -3.9021434783935547
    3. 'return' → logprob: -6.027143478393555
    4. '(n' → logprob: -6.402143478393555
    5. 'n' → logprob: -7.152143478393555
    6. ':' → logprob: -7.527143478393555
    7. ')' → logprob: -8.152143478393555
    8. ']' → logprob: -8.277143478393555
    9. '[n' → logprob: -9.027143478393555
    10. ' return' → logprob: -9.152143478393555

Token 707: ':
' (ID: 734)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.112318255007267
    2. '   ' → logprob: -2.862318277359009
    3. ':' → logprob: -3.362318277359009
    4. '[n' → logprob: -5.73731803894043
    5. 'def' → logprob: -5.86231803894043
    6. '(' → logprob: -5.86231803894043
    7. '(
' → logprob: -6.36231803894043
    8. ',' → logprob: -6.48731803894043
    9. '[' → logprob: -7.36231803894043
    10. ':
' → logprob: -7.86231803894043

Token 708: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02024286985397339
    2. '       ' → logprob: -4.395242691040039
    3. 'n' → logprob: -5.645242691040039
    4. '(n' → logprob: -5.645242691040039
    5. 'def' → logprob: -8.020242691040039
    6. '```' → logprob: -8.520242691040039
    7. ' n' → logprob: -11.020242691040039
    8. '    
' → logprob: -11.145242691040039
    9. '[n' → logprob: -11.395242691040039
    10. '     ' → logprob: -11.520242691040039

Token 709: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.0012666594702750444
    2. ' n' → logprob: -7.2512664794921875
    3. '   ' → logprob: -7.5012664794921875
    4. '
' → logprob: -13.501266479492188
    5. 'int' → logprob: -14.126266479492188
    6. 'def' → logprob: -14.251266479492188
    7. '(n' → logprob: -15.001266479492188
    8. '    
' → logprob: -15.001266479492188
    9. '	n' → logprob: -15.126266479492188
    10. '```' → logprob: -15.751266479492188

Token 710: ' (' (ID: 350)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.7871308922767639
    2. ':' → logprob: -1.4121308326721191
    3. '   ' → logprob: -2.162130832672119
    4. ')' → logprob: -2.662130832672119
    5. '(n' → logprob: -3.287130832672119
    6. '):
' → logprob: -3.662130832672119
    7. '=' → logprob: -3.912130832672119
    8. ',' → logprob: -4.412130832672119
    9. ' (' → logprob: -5.162130832672119
    10. ' :' → logprob: -5.537130832672119

Token 711: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -9.186122770188376e-05
    2. 'n' → logprob: -9.375091552734375
    3. ' int' → logprob: -12.875091552734375
    4. ')' → logprob: -13.625091552734375
    5. '[int' → logprob: -13.625091552734375
    6. '(int' → logprob: -13.875091552734375
    7. ':int' → logprob: -14.500091552734375
    8. '=int' → logprob: -14.750091552734375
    9. '
' → logprob: -16.625091552734375
    10. '):' → logprob: -17.125091552734375

Token 712: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0028689466416835785
    2. ':' → logprob: -6.127869129180908
    3. '   ' → logprob: -7.877869129180908
    4. '):
' → logprob: -8.37786865234375
    5. ')' → logprob: -9.87786865234375
    6. '(n' → logprob: -11.37786865234375
    7. ' ):' → logprob: -12.75286865234375
    8. 'n' → logprob: -13.12786865234375
    9. '=' → logprob: -13.62786865234375
    10. 'def' → logprob: -13.75286865234375

Token 713: ' Le' (ID: 2018)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.37709149718284607
    2. 'n' → logprob: -1.2520915269851685
    3. '   ' → logprob: -3.877091407775879
    4. ' int' → logprob: -5.877091407775879
    5. 'def' → logprob: -6.127091407775879
    6. ' n' → logprob: -6.752091407775879
    7. '[int' → logprob: -7.252091407775879
    8. '       ' → logprob: -8.752091407775879
    9. '(n' → logprob: -8.877091407775879
    10. '(int' → logprob: -9.502091407775879

Token 714: ' nombre' (ID: 9733)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3093903660774231
    2. ')' → logprob: -1.9343903064727783
    3. '_' → logprob: -2.6843903064727783
    4. ':' → logprob: -4.059390544891357
    5. ' n' → logprob: -4.184390544891357
    6. ' in' → logprob: -5.684390544891357
    7. '(n' → logprob: -6.434390544891357
    8. ' _' → logprob: -6.559390544891357
    9. ' )' → logprob: -6.684390544891357
    10. ',' → logprob: -6.934390544891357

Token 715: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4673999845981598
    2. ':' → logprob: -2.092400074005127
    3. '):' → logprob: -2.717400074005127
    4. '(n' → logprob: -2.967400074005127
    5. ')' → logprob: -3.092400074005127
    6. 'def' → logprob: -3.342400074005127
    7. 'n' → logprob: -3.842400074005127
    8. ' des' → logprob: -4.842400074005127
    9. ' n' → logprob: -5.717400074005127
    10. '):
' → logprob: -5.842400074005127

Token 716: ' lignes' (ID: 81687)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.02607930637896061
    2. ' lignes' → logprob: -4.026079177856445
    3. 'lines' → logprob: -5.151079177856445
    4. ' lines' → logprob: -6.776079177856445
    5. 'n' → logprob: -7.276079177856445
    6. '_lines' → logprob: -9.651079177856445
    7. 'ligne' → logprob: -10.276079177856445
    8. 'lin' → logprob: -10.526079177856445
    9. 'int' → logprob: -10.776079177856445
    10. '_l' → logprob: -10.901079177856445

Token 717: ' à' (ID: 1221)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3475344181060791
    2. '   ' → logprob: -1.972534418106079
    3. '):
' → logprob: -3.097534418106079
    4. ' à' → logprob: -3.347534418106079
    5. ':' → logprob: -3.472534418106079
    6. ')' → logprob: -4.0975341796875
    7. 'à' → logprob: -4.7225341796875
    8. ',' → logprob: -5.2225341796875
    9. '(n' → logprob: -5.8475341796875
    10. 'def' → logprob: -5.8475341796875

Token 718: ' lire' (ID: 46082)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.6671940088272095
    2. ' lire' → logprob: -1.0421940088272095
    3. 'l' → logprob: -2.29219388961792
    4. 'Lire' → logprob: -4.16719388961792
    5. '_read' → logprob: -5.04219388961792
    6. '```' → logprob: -5.41719388961792
    7. ' read' → logprob: -5.66719388961792
    8. '読む' → logprob: -7.04219388961792
    9. 'range' → logprob: -8.042194366455078
    10. 'reads' → logprob: -8.417194366455078

Token 719: '.

' (ID: 364)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8384084105491638
    2. '):' → logprob: -1.3384084701538086
    3. '   ' → logprob: -1.5884084701538086
    4. '):
' → logprob: -2.3384084701538086
    5. '(n' → logprob: -6.463408470153809
    6. 'def' → logprob: -7.213408470153809
    7. ')
' → logprob: -7.338408470153809
    8. ',' → logprob: -7.588408470153809
    9. '[n' → logprob: -7.963408470153809
    10. ']' → logprob: -8.088408470153809

Token 720: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004369828850030899
    2. ')' → logprob: -6.004369735717773
    3. '```' → logprob: -7.629369735717773
    4. 'def' → logprob: -7.879369735717773
    5. '
' → logprob: -8.254369735717773
    6. ')
' → logprob: -8.504369735717773
    7. '    
' → logprob: -8.629369735717773
    8. '):
' → logprob: -8.754369735717773
    9. '"""
' → logprob: -9.004369735717773
    10. '"""' → logprob: -10.629369735717773

Token 721: ' Returns' (ID: 9609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00020711649267468601
    2. ')' → logprob: -9.75020694732666
    3. '
' → logprob: -9.87520694732666
    4. 'return' → logprob: -10.50020694732666
    5. '```' → logprob: -10.50020694732666
    6. ')
' → logprob: -11.00020694732666
    7. '"""
' → logprob: -11.62520694732666
    8. '    
' → logprob: -11.87520694732666
    9. 'def' → logprob: -12.12520694732666
    10. '"""' → logprob: -13.50020694732666

Token 722: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5258375406265259
    2. '[' → logprob: -1.1508375406265259
    3. ' [' → logprob: -2.5258374214172363
    4. '[list' → logprob: -5.650837421417236
    5. '[List' → logprob: -6.275837421417236
    6. '[n' → logprob: -6.650837421417236
    7. ' sorted' → logprob: -6.650837421417236
    8. ' =' → logprob: -6.900837421417236
    9. '(sorted' → logprob: -7.400837421417236
    10. ':' → logprob: -7.525837421417236

Token 723: '       ' (ID: 309)
  Prédit: ' sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sorted' → logprob: -0.31783929467201233
    2. '   ' → logprob: -1.44283926486969
    3. 'sorted' → logprob: -3.4428393840789795
    4. '[' → logprob: -5.8178391456604
    5. ' [' → logprob: -7.5678391456604
    6. ')' → logprob: -9.067839622497559
    7. '    ' → logprob: -9.317839622497559
    8. '(sorted' → logprob: -10.067839622497559
    9. ']' → logprob: -10.442839622497559
    10. '=' → logprob: -10.567839622497559

Token 724: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' (adapté à ' list') → logprob: -0.7166222333908081
    2. 'sorted' → logprob: -0.7166222333908081
    3. '[list' → logprob: -4.341622352600098
    4. ' list' → logprob: -5.591622352600098
    5. ' sorted' → logprob: -5.716622352600098
    6. '[List' → logprob: -6.216622352600098
    7. '[' → logprob: -7.216622352600098
    8. '   ' → logprob: -8.341622352600098
    9. 'List' → logprob: -9.341622352600098
    10. '[s' → logprob: -10.216622352600098

Token 725: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8205227255821228
    2. '=' → logprob: -1.3205227851867676
    3. '[' → logprob: -1.8205227851867676
    4. '   ' → logprob: -2.1955227851867676
    5. ' =' → logprob: -4.945522785186768
    6. '(sorted' → logprob: -4.945522785186768
    7. 'def' → logprob: -6.945522785186768
    8. '(' → logprob: -7.070522785186768
    9. '(
' → logprob: -7.695522785186768
    10. ':
' → logprob: -7.945522785186768

Token 726: ' Une' (ID: 19758)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.014762031845748425
    2. ' sorted' → logprob: -4.389761924743652
    3. '   ' → logprob: -6.139761924743652
    4. '(sorted' → logprob: -10.639761924743652
    5. 'sort' → logprob: -10.889761924743652
    6. 's' → logprob: -10.889761924743652
    7. '[' → logprob: -11.389761924743652
    8. 'return' → logprob: -12.264761924743652
    9. '[s' → logprob: -12.639761924743652
    10. ' ' → logprob: -13.014761924743652

Token 727: ' liste' (ID: 31719)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.07342994213104248
    2. ' sorted' → logprob: -2.948430061340332
    3. '[' → logprob: -4.448430061340332
    4. '(sorted' → logprob: -6.448430061340332
    5. 's' → logprob: -6.823430061340332
    6. '_sorted' → logprob: -7.198430061340332
    7. 'list' → logprob: -7.448430061340332
    8. '[]' → logprob: -7.823430061340332
    9. '[list' → logprob: -7.823430061340332
    10. '[
' → logprob: -8.073430061340332

Token 728: ' tri' (ID: 12665)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2874472141265869
    2. '<|end|>' → logprob: -2.537447214126587
    3. ' de' → logprob: -2.662447214126587
    4. ' of' → logprob: -3.537447214126587
    5. 'de' → logprob: -4.412446975708008
    6. '(sorted' → logprob: -4.662446975708008
    7. 'sorted' → logprob: -4.787446975708008
    8. '_sorted' → logprob: -4.912446975708008
    9. '[str' → logprob: -5.287446975708008
    10. 'def' → logprob: -5.537446975708008

Token 729: 'ée' (ID: 2894)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.26215073466300964
    2. 'ed' → logprob: -3.387150764465332
    3. 'ée' → logprob: -3.637150764465332
    4. '[
' → logprob: -3.762150764465332
    5. '[List' → logprob: -3.762150764465332
    6. '   ' → logprob: -3.887150764465332
    7. 'sorted' → logprob: -4.137150764465332
    8. 'e' → logprob: -4.262150764465332
    9. 'def' → logprob: -4.387150764465332
    10. 'ées' → logprob: -4.512150764465332

Token 730: ' de' (ID: 334)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6407092809677124
    2. '(' → logprob: -1.1407092809677124
    3. '(
' → logprob: -2.390709400177002
    4. '(sorted' → logprob: -3.390709400177002
    5. '[
' → logprob: -4.640709400177002
    6. '[list' → logprob: -5.265709400177002
    7. 'of' → logprob: -5.765709400177002
    8. '[List' → logprob: -5.890709400177002
    9. '   ' → logprob: -6.515709400177002
    10. '(list' → logprob: -6.640709400177002

Token 731: ' listes' (ID: 179198)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.3940986096858978
    2. 'lists' → logprob: -1.1440986394882202
    3. '[list' → logprob: -5.01909875869751
    4. ' lists' → logprob: -7.51909875869751
    5. ' list' → logprob: -11.269098281860352
    6. 'sorted' → logprob: -11.394098281860352
    7. 'listas' → logprob: -11.769098281860352
    8. '[' → logprob: -12.394098281860352
    9. '(list' → logprob: -12.769098281860352
    10. '[List' → logprob: -13.019098281860352

Token 732: ' d' (ID: 272)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.04695459455251694
    2. '<|end|>' → logprob: -4.54695463180542
    3. '(map' → logprob: -4.92195463180542
    4. '(sorted' → logprob: -5.17195463180542
    5. '(' → logprob: -5.67195463180542
    6. 'for' → logprob: -5.67195463180542
    7. '[
' → logprob: -5.67195463180542
    8. '[int' → logprob: -6.04695463180542
    9. '(
' → logprob: -6.42195463180542
    10. ')' → logprob: -6.54695463180542

Token 733: ''ent' (ID: 53422)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.013028807938098907
    2. 'int' → logprob: -5.138028621673584
    3. '(int' → logprob: -5.888028621673584
    4. '<int' → logprob: -6.138028621673584
    5. 'ints' → logprob: -6.513028621673584
    6. '[' → logprob: -8.763029098510742
    7. 'ents' → logprob: -8.763029098510742
    8. ']int' → logprob: -9.138029098510742
    9. 'ent' → logprob: -10.138029098510742
    10. '=int' → logprob: -10.513029098510742

Token 734: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.3321658968925476
    2. 'ières' → logprob: -1.3321659564971924
    3. 'érieurs' → logprob: -5.457165718078613
    4. 'ints' → logprob: -5.832165718078613
    5. '```' → logprob: -6.332165718078613
    6. 'eurs' → logprob: -6.457165718078613
    7. 'êts' → logprob: -6.582165718078613
    8. 'ieurs' → logprob: -6.707165718078613
    9. 'égr' → logprob: -6.707165718078613
    10. 'ents' → logprob: -7.207165718078613

Token 735: '.
' (ID: 558)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5050927996635437
    2. 'for' → logprob: -1.3800928592681885
    3. '(n' → logprob: -2.8800928592681885
    4. ' for' → logprob: -3.5050928592681885
    5. '   ' → logprob: -4.255092620849609
    6. '[' → logprob: -4.505092620849609
    7. '[n' → logprob: -4.755092620849609
    8. '[
' → logprob: -5.130092620849609
    9. '(
' → logprob: -5.380092620849609
    10. ')' → logprob: -5.755092620849609

Token 736: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05408235266804695
    2. '(n' → logprob: -3.6790823936462402
    3. '[' → logprob: -4.67908239364624
    4. '(' → logprob: -4.80408239364624
    5. '[
' → logprob: -5.67908239364624
    6. 'def' → logprob: -6.05408239364624
    7. '(
' → logprob: -6.55408239364624
    8. 'for' → logprob: -7.05408239364624
    9. '[n' → logprob: -7.05408239364624
    10. ']' → logprob: -8.429081916809082

Token 737: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005066845333203673
    2. '[' → logprob: -9.000506401062012
    3. ']' → logprob: -9.750506401062012
    4. ':' → logprob: -9.875506401062012
    5. ')' → logprob: -10.125506401062012
    6. 'return' → logprob: -10.250506401062012
    7. '```' → logprob: -10.250506401062012
    8. 'def' → logprob: -10.500506401062012
    9. '=' → logprob: -11.000506401062012
    10. ' return' → logprob: -11.125506401062012

Token 738: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0003878934367094189
    2. 'return' → logprob: -7.875387668609619
    3. '[' → logprob: -12.375388145446777
    4. ' return' → logprob: -13.375388145446777
    5. '[
' → logprob: -14.625388145446777
    6. '   ' → logprob: -14.625388145446777
    7. '[]' → logprob: -15.250388145446777
    8. '{return' → logprob: -15.375388145446777
    9. '```' → logprob: -15.375388145446777
    10. '	return' → logprob: -16.12538719177246

Token 739: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.014406658709049225
    2. '   ' → logprob: -4.264406681060791
    3. ' return' → logprob: -8.639406204223633
    4. 'def' → logprob: -9.764406204223633
    5. '```' → logprob: -12.014406204223633
    6. 'sorted' → logprob: -14.389406204223633
    7. '
' → logprob: -14.639406204223633
    8. '    
' → logprob: -14.639406204223633
    9. '{return' → logprob: -15.639406204223633
    10. '[' → logprob: -15.764406204223633

Token 740: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.07104050368070602
    2. ' sorted' → logprob: -2.696040391921997
    3. '[' → logprob: -7.071040630340576
    4. '   ' → logprob: -9.446040153503418
    5. '(sorted' → logprob: -9.446040153503418
    6. ' [' → logprob: -9.571040153503418
    7. ' ' → logprob: -12.071040153503418
    8. '[s' → logprob: -12.571040153503418
    9. 's' → logprob: -12.821040153503418
    10. 'sort' → logprob: -12.821040153503418

Token 741: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.021166395395994186
    2. '(list' → logprob: -4.0211663246154785
    3. '[list' → logprob: -6.3961663246154785
    4. '(in' → logprob: -6.8961663246154785
    5. '(' → logprob: -9.021166801452637
    6. '[' → logprob: -9.146166801452637
    7. '[in' → logprob: -9.646166801452637
    8. 'in' → logprob: -11.396166801452637
    9. '((' → logprob: -12.146166801452637
    10. '(
' → logprob: -12.396166801452637

Token 742: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -6.749814019713085e-06
    2. 'in' → logprob: -12.125006675720215
    3. ' list' → logprob: -13.875006675720215
    4. 'map' → logprob: -15.375006675720215
    5. 'tuple' → logprob: -16.62500762939453
    6. '```' → logprob: -17.25000762939453
    7. '(list' → logprob: -17.75000762939453
    8. 'List' → logprob: -17.87500762939453
    9. '	list' → logprob: -18.12500762939453
    10. 'lists' → logprob: -18.62500762939453

Token 743: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.00018208740220870823
    2. 'map' → logprob: -8.625182151794434
    3. '(' → logprob: -13.125182151794434
    4. ' map' → logprob: -15.375182151794434
    5. ',map' → logprob: -16.125181198120117
    6. '	map' → logprob: -16.375181198120117
    7. '(
' → logprob: -17.250181198120117
    8. ' (' → logprob: -17.750181198120117
    9. '```' → logprob: -18.375181198120117
    10. '<|end|>' → logprob: -18.500181198120117

Token 744: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.02069358341395855
    2. 'int' → logprob: -3.89569354057312
    3. ',int' → logprob: -10.1456937789917
    4. '[int' → logprob: -10.1456937789917
    5. '<int' → logprob: -10.3956937789917
    6. ']int' → logprob: -11.0206937789917
    7. ' int' → logprob: -11.3956937789917
    8. 'input' → logprob: -12.1456937789917
    9. '=int' → logprob: -12.2706937789917
    10. '(input' → logprob: -13.2706937789917

Token 745: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.3904987871646881
    2. ',' → logprob: -1.3904987573623657
    3. ',input' → logprob: -2.6404988765716553
    4. 'input' → logprob: -6.015498638153076
    5. '(' → logprob: -7.640498638153076
    6. ' input' → logprob: -10.265499114990234
    7. '=input' → logprob: -11.015499114990234
    8. ')' → logprob: -11.390499114990234
    9. '),' → logprob: -11.640499114990234
    10. '[input' → logprob: -12.140499114990234

Token 746: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.02976287715137005
    2. ' input' → logprob: -3.5297629833221436
    3. '(input' → logprob: -11.529763221740723
    4. ',input' → logprob: -14.279763221740723
    5. '<input' → logprob: -14.904763221740723
    6. '=input' → logprob: -14.904763221740723
    7. '[input' → logprob: -14.904763221740723
    8. '	input' → logprob: -15.029763221740723
    9. ' ' → logprob: -15.654763221740723
    10. '   ' → logprob: -15.904763221740723

Token 747: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -6.511406809295295e-06
    2. '.split' → logprob: -12.000006675720215
    3. '()' → logprob: -15.500006675720215
    4. '   ' → logprob: -16.8750057220459
    5. 'split' → logprob: -16.8750057220459
    6. '.' → logprob: -17.1250057220459
    7. 'spl' → logprob: -17.5000057220459
    8. '.py' → logprob: -17.7500057220459
    9. ').' → logprob: -18.5000057220459
    10. 's' → logprob: -18.7500057220459

Token 748: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.320199877838604e-07
    2. ' split' → logprob: -14.75
    3. '(split' → logprob: -18.5
    4. 'spl' → logprob: -19.25
    5. ')' → logprob: -20.125
    6. 'plit' → logprob: -21.0
    7. '.split' → logprob: -21.0
    8. 's' → logprob: -21.875
    9. '_split' → logprob: -22.0
    10. 'strip' → logprob: -22.5

Token 749: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.006041019689291716
    2. '))' → logprob: -5.131041049957275
    3. '()))
' → logprob: -10.131040573120117
    4. '())' → logprob: -10.256040573120117
    5. '()' → logprob: -10.756040573120117
    6. '())))' → logprob: -11.631040573120117
    7. '()
' → logprob: -13.631040573120117
    8. ')))' → logprob: -13.631040573120117
    9. '   ' → logprob: -14.006040573120117
    10. ' ))' → logprob: -14.131040573120117

Token 750: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2520667016506195
    2. ' for' → logprob: -1.502066731452942
    3. '()' → logprob: -9.252066612243652
    4. ')' → logprob: -10.502066612243652
    5. '   ' → logprob: -11.252066612243652
    6. '	for' → logprob: -14.752066612243652
    7. '    ' → logprob: -15.002066612243652
    8. ']' → logprob: -15.377066612243652
    9. '(for' → logprob: -16.75206756591797
    10. ' ' → logprob: -16.87706756591797

Token 751: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.014176792465150356
    2. ' _' → logprob: -4.264176845550537
    3. '_range' → logprob: -11.389176368713379
    4. ' range' → logprob: -13.264176368713379
    5. ' in' → logprob: -15.264176368713379
    6. 'range' → logprob: -16.514177322387695
    7. '_in' → logprob: -16.764177322387695
    8. ' ' → logprob: -16.889177322387695
    9. '_i' → logprob: -20.264177322387695
    10. '_
' → logprob: -20.264177322387695

Token 752: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5779794454574585
    2. '_' → logprob: -1.0779794454574585
    3. ' range' → logprob: -3.077979564666748
    4. '_range' → logprob: -3.202979564666748
    5. ' in' → logprob: -4.577979564666748
    6. ' _' → logprob: -6.452979564666748
    7. 'in' → logprob: -8.95297908782959
    8. '(range' → logprob: -12.07797908782959
    9. '_in' → logprob: -12.95297908782959
    10. 'ange' → logprob: -14.32797908782959

Token 753: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.024359844624996185
    2. ' range' → logprob: -3.774359941482544
    3. '_range' → logprob: -7.274359703063965
    4. '_' → logprob: -7.774359703063965
    5. ' _' → logprob: -15.899359703063965
    6. '(range' → logprob: -15.899359703063965
    7. '	range' → logprob: -16.64936065673828
    8. '_r' → logprob: -19.39936065673828
    9. '.range' → logprob: -19.89936065673828
    10. 'rang' → logprob: -20.39936065673828

Token 754: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.02324839122593403
    2. 'n' → logprob: -3.7732484340667725
    3. ' n' → logprob: -13.273248672485352
    4. '(' → logprob: -14.398248672485352
    5. ' (' → logprob: -14.398248672485352
    6. '   ' → logprob: -18.52324867248535
    7. '(
' → logprob: -18.64824867248535
    8. '	n' → logprob: -19.02324867248535
    9. ')n' → logprob: -19.27324867248535
    10. '
' → logprob: -19.77324867248535

Token 755: ')]' (ID: 15710)
  Prédit: ')])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')])' → logprob: -0.20260344445705414
    2. '])' → logprob: -1.7026034593582153
    3. ')]' → logprob: -7.577603340148926
    4. ')' → logprob: -7.952603340148926
    5. '])]' → logprob: -8.077603340148926
    6. ' ])' → logprob: -12.327603340148926
    7. ']])' → logprob: -12.577603340148926
    8. ']))' → logprob: -13.202603340148926
    9. ')],' → logprob: -13.327603340148926
    10. 'n' → logprob: -13.702603340148926

Token 756: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.2200749754119897e-06
    2. ')
' → logprob: -14.000001907348633
    3. '))' → logprob: -14.375001907348633
    4. ' )' → logprob: -15.125001907348633
    5. '])' → logprob: -15.500001907348633
    6. ')n' → logprob: -15.750001907348633
    7. ']' → logprob: -17.000001907348633
    8. '   ' → logprob: -17.250001907348633
    9. ')`' → logprob: -17.250001907348633
    10. ')return' → logprob: -17.375001907348633

Token 757: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0003520277969073504
    2. '
' → logprob: -8.500351905822754
    3. '<|end|>' → logprob: -9.125351905822754
    4. '#' → logprob: -10.875351905822754
    5. '\' → logprob: -11.500351905822754
    6. 'class' → logprob: -11.875351905822754
    7. '\n' → logprob: -13.875351905822754
    8. '```' → logprob: -14.125351905822754
    9. 'ndef' → logprob: -15.125351905822754
    10. 'de' → logprob: -15.500351905822754

Token 758: ' Lecture' (ID: 106534)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0027237986214458942
    2. 'class' → logprob: -6.502723693847656
    3. '#' → logprob: -6.752723693847656
    4. '
' → logprob: -11.002723693847656
    5. 'd' → logprob: -11.377723693847656
    6. 'de' → logprob: -12.002723693847656
    7. '<|end|>' → logprob: -12.627723693847656
    8. ' ' → logprob: -12.752723693847656
    9. 'import' → logprob: -12.877723693847656
    10. 'if' → logprob: -13.377723693847656

Token 759: ' de' (ID: 334)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6209973692893982
    2. 'def' → logprob: -1.120997428894043
    3. 'n' → logprob: -2.870997428894043
    4. '(' → logprob: -2.995997428894043
    5. '#' → logprob: -4.620997428894043
    6. 's' → logprob: -5.120997428894043
    7. '_' → logprob: -5.745997428894043
    8. '(n' → logprob: -6.495997428894043
    9. 'data' → logprob: -6.620997428894043
    10. '(
' → logprob: -6.745997428894043

Token 760: ' la' (ID: 557)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.07663822919130325
    2. 't' → logprob: -3.2016382217407227
    3. 'def' → logprob: -3.9516382217407227
    4. '()' → logprob: -4.576638221740723
    5. '(n' → logprob: -6.326638221740723
    6. '#' → logprob: -7.576638221740723
    7. 'l' → logprob: -7.951638221740723
    8. '1' → logprob: -8.951638221740723
    9. 'int' → logprob: -9.326638221740723
    10. 'N' → logprob: -9.451638221740723

Token 761: ' taille' (ID: 41644)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1077498123049736
    2. 'def' → logprob: -2.7327497005462646
    3. 't' → logprob: -3.3577497005462646
    4. '#' → logprob: -7.357749938964844
    5. 'nombre' → logprob: -7.357749938964844
    6. 'T' → logprob: -8.482749938964844
    7. 'input' → logprob: -8.982749938964844
    8. 'entrée' → logprob: -9.107749938964844
    9. 'int' → logprob: -9.232749938964844
    10. 'N' → logprob: -9.482749938964844

Token 762: ' du' (ID: 1462)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.15100297331809998
    2. 'n' → logprob: -2.026002883911133
    3. '(n' → logprob: -5.776002883911133
    4. ' =' → logprob: -6.276002883911133
    5. '()
' → logprob: -6.901002883911133
    6. '=' → logprob: -7.151002883911133
    7. '(' → logprob: -7.526002883911133
    8. 'def' → logprob: -8.526002883911133
    9. 'a' → logprob: -8.651002883911133
    10. 's' → logprob: -8.651002883911133

Token 763: ' tableau' (ID: 67053)
  Prédit: 'table'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'table' → logprob: -0.06855089217424393
    2. 'gr' → logprob: -3.0685508251190186
    3. 'texte' → logprob: -5.318551063537598
    4. 'plate' → logprob: -5.943551063537598
    5. 'tab' → logprob: -6.318551063537598
    6. '#' → logprob: -6.318551063537598
    7. ' tableau' → logprob: -6.693551063537598
    8. 'data' → logprob: -6.818551063537598
    9. 'terrain' → logprob: -7.068551063537598
    10. 't' → logprob: -7.068551063537598

Token 764: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00018208740220870823
    2. 'arr' → logprob: -9.125182151794434
    3. 'N' → logprob: -10.375182151794434
    4. 'size' → logprob: -11.250182151794434
    5. 't' → logprob: -11.375182151794434
    6. 'a' → logprob: -11.500182151794434
    7. '```' → logprob: -13.750182151794434
    8. '
' → logprob: -13.750182151794434
    9. ' n' → logprob: -13.875182151794434
    10. 'A' → logprob: -14.250182151794434

Token 765: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -2.7848862373502925e-05
    2. 'N' → logprob: -11.250027656555176
    3. 'arr' → logprob: -11.750027656555176
    4. 't' → logprob: -12.250027656555176
    5. '
' → logprob: -13.875027656555176
    6. 'size' → logprob: -14.625027656555176
    7. ' n' → logprob: -14.750027656555176
    8. 'a' → logprob: -15.625027656555176
    9. '```' → logprob: -16.000028610229492
    10. 's' → logprob: -16.750028610229492

Token 766: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47410252690315247
    2. '=' → logprob: -0.9741024971008301
    3. ',' → logprob: -10.724102973937988
    4. '=int' → logprob: -13.224102973937988
    5. ' ' → logprob: -14.849102973937988
    6. '=input' → logprob: -15.099102973937988
    7. ' ' → logprob: -15.474102973937988
    8. ' =
' → logprob: -15.599102973937988
    9. ' ,' → logprob: -15.724102973937988
    10. ')' → logprob: -15.974102973937988

Token 767: ' inp' (ID: 64450)
  Prédit: 'inp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inp' → logprob: -0.24888063967227936
    2. ' inp' → logprob: -1.8738806247711182
    3. 'int' → logprob: -3.248880624771118
    4. 'in' → logprob: -3.748880624771118
    5. ' int' → logprob: -5.623880863189697
    6. ' in' → logprob: -7.123880863189697
    7. '(inp' → logprob: -11.998880386352539
    8. 'input' → logprob: -12.998880386352539
    9. 'Inp' → logprob: -13.248880386352539
    10. 'inf' → logprob: -13.373880386352539

Token 768: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00027325618430040777
    2. '()
' → logprob: -8.250273704528809
    3. ')' → logprob: -12.375273704528809
    4. '(' → logprob: -12.625273704528809
    5. '())' → logprob: -13.375273704528809
    6. ' ()' → logprob: -13.625273704528809
    7. '()

' → logprob: -14.500273704528809
    8. '()\' → logprob: -14.875273704528809
    9. '#' → logprob: -15.625273704528809
    10. '()
' → logprob: -15.625273704528809

Token 769: '#' (ID: 2)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.318756103515625
    2. 'a' → logprob: -1.443756103515625
    3. 'array' → logprob: -4.193756103515625
    4. 'data' → logprob: -4.443756103515625
    5. '<|end|>' → logprob: -5.318756103515625
    6. 'lst' → logprob: -6.318756103515625
    7. '#' → logprob: -6.943756103515625
    8. 'A' → logprob: -7.068756103515625
    9. '
' → logprob: -7.318756103515625
    10. 'arra' → logprob: -9.068756103515625

Token 770: ' Lecture' (ID: 106534)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.10174587368965149
    2. 'a' → logprob: -2.351745843887329
    3. 'lst' → logprob: -7.351746082305908
    4. 'l' → logprob: -7.601746082305908
    5. 'A' → logprob: -8.22674560546875
    6. 'data' → logprob: -9.72674560546875
    7. 'array' → logprob: -10.47674560546875
    8. 'ar' → logprob: -11.60174560546875
    9. 'tab' → logprob: -11.97674560546875
    10. 'v' → logprob: -11.97674560546875

Token 771: ' de' (ID: 334)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.017597949132323265
    2. '_' → logprob: -4.7675981521606445
    3. ' =' → logprob: -5.7675981521606445
    4. '=' → logprob: -7.2675981521606445
    5. 'l' → logprob: -7.5175981521606445
    6. '_list' → logprob: -7.6425981521606445
    7. 'of' → logprob: -7.7675981521606445
    8. 'des' → logprob: -8.142598152160645
    9. 'de' → logprob: -8.267598152160645
    10. 't' → logprob: -8.392598152160645

Token 772: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.7511433959007263
    2. 'in' → logprob: -1.376143455505371
    3. 'arr' → logprob: -1.876143455505371
    4. 'l' → logprob: -2.376143455505371
    5. 'lst' → logprob: -4.501143455505371
    6. 'a' → logprob: -5.251143455505371
    7. 'the' → logprob: -5.626143455505371
    8. 'pl' → logprob: -5.876143455505371
    9. 'le' → logprob: -5.876143455505371
    10. 'n' → logprob: -6.876143455505371

Token 773: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.49882233142852783
    2. 'list' → logprob: -1.8738223314285278
    3. 'in' → logprob: -2.1238222122192383
    4. 'l' → logprob: -3.2488222122192383
    5. 'lst' → logprob: -3.2488222122192383
    6. 'pl' → logprob: -3.3738222122192383
    7. 'array' → logprob: -5.248822212219238
    8. 'n' → logprob: -6.998822212219238
    9. 'arr' → logprob: -7.873822212219238
    10. '```' → logprob: -8.248822212219238

Token 774: ' des' (ID: 731)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5394064784049988
    2. 'arr' → logprob: -1.4144065380096436
    3. ' =' → logprob: -2.2894065380096436
    4. 'l' → logprob: -3.6644065380096436
    5. 'A' → logprob: -4.0394062995910645
    6. '=' → logprob: -4.6644062995910645
    7. 'lst' → logprob: -4.9144062995910645
    8. 't' → logprob: -5.7894062995910645
    9. 'data' → logprob: -5.9144062995910645
    10. 'de' → logprob: -6.7894062995910645

Token 775: ' ent' (ID: 1121)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.4107937514781952
    2. 'ent' → logprob: -1.5357937812805176
    3. 'élé' → logprob: -3.4107937812805176
    4. 'n' → logprob: -3.6607937812805176
    5. 'in' → logprob: -3.6607937812805176
    6. 'elements' → logprob: -3.6607937812805176
    7. 'values' → logprob: -4.910793781280518
    8. 'arr' → logprob: -6.910793781280518
    9. 'vals' → logprob: -6.910793781280518
    10. 'inte' → logprob: -7.785793781280518

Token 776: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -2.45848218582978e-06
    2. 'ires' → logprob: -14.12500286102295
    3. 'ers' → logprob: -14.25000286102295
    4. 'ières' → logprob: -14.37500286102295
    5. 'ier' → logprob: -15.50000286102295
    6. 'ieres' → logprob: -17.000001907348633
    7. 'i' → logprob: -17.125001907348633
    8. 'riers' → logprob: -18.875001907348633
    9. 'eurs' → logprob: -19.250001907348633
    10. '   ' → logprob: -19.875001907348633

Token 777: '
' (ID: 198)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.46772831678390503
    2. 'a' → logprob: -1.0927283763885498
    3. 'l' → logprob: -4.092728137969971
    4. 'lst' → logprob: -4.717728137969971
    5. 'A' → logprob: -5.217728137969971
    6. ' =' → logprob: -6.092728137969971
    7. 's' → logprob: -7.092728137969971
    8. 'L' → logprob: -7.217728137969971
    9. 'array' → logprob: -7.217728137969971
    10. 't' → logprob: -7.592728137969971

Token 778: 'A' (ID: 32)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.013324696570634842
    2. 'a' → logprob: -4.888324737548828
    3. 'lst' → logprob: -5.388324737548828
    4. 'l' → logprob: -6.888324737548828
    5. 'A' → logprob: -10.263324737548828
    6. 'nums' → logprob: -10.513324737548828
    7. 'data' → logprob: -11.138324737548828
    8. 'v' → logprob: -11.638324737548828
    9. 'li' → logprob: -11.763324737548828
    10. 'L' → logprob: -12.513324737548828

Token 779: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47407791018486023
    2. '=' → logprob: -0.9740779399871826
    3. '.' → logprob: -15.474078178405762
    4. '_' → logprob: -15.974078178405762
    5. '=list' → logprob: -15.974078178405762
    6. ' ' → logprob: -16.474077224731445
    7. '=A' → logprob: -16.474077224731445
    8. '=[]' → logprob: -16.724077224731445
    9. ')' → logprob: -16.849077224731445
    10. ' ' → logprob: -16.849077224731445

Token 780: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.0011703446507453918
    2. ' in' → logprob: -6.7511701583862305
    3. '	in' → logprob: -16.876171112060547
    4. 'In' → logprob: -17.126171112060547
    5. 'list' → logprob: -18.751171112060547
    6. 'inp' → logprob: -18.876171112060547
    7. '```' → logprob: -18.876171112060547
    8. '(in' → logprob: -19.501171112060547
    9. '[in' → logprob: -19.501171112060547
    10. '   ' → logprob: -19.751171112060547

Token 781: 'pl' (ID: 528)
  Prédit: 'pl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pl' → logprob: -3.531315314830863e-06
    2. 'l' → logprob: -13.375003814697266
    3. 'pls' → logprob: -14.250003814697266
    4. 'p' → logprob: -14.625003814697266
    5. 'plt' → logprob: -14.750003814697266
    6. 'pll' → logprob: -14.875003814697266
    7. 'pr' → logprob: -16.750003814697266
    8. ' pl' → logprob: -17.125003814697266
    9. 'bl' → logprob: -17.500003814697266
    10. 'Pl' → logprob: -17.500003814697266

Token 782: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.008975457400083542
    2. '(n' → logprob: -4.758975505828857
    3. '(' → logprob: -8.1339750289917
    4. '()(' → logprob: -10.1339750289917
    5. ' ()' → logprob: -10.7589750289917
    6. 's' → logprob: -13.5089750289917
    7. '()
' → logprob: -13.7589750289917
    8. '().' → logprob: -13.8839750289917
    9. '（）' → logprob: -14.1339750289917
    10. '()`' → logprob: -14.5089750289917

Token 783: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6491685509681702
    2. '
' → logprob: -1.3991684913635254
    3. 'def' → logprob: -1.5241684913635254
    4. 'max' → logprob: -5.149168491363525
    5. 'd' → logprob: -6.649168491363525
    6. 'dp' → logprob: -6.649168491363525
    7. 'for' → logprob: -6.774168491363525
    8. 's' → logprob: -7.899168491363525
    9. '

' → logprob: -8.149168968200684
    10. 'ans' → logprob: -8.149168968200684

Token 784: ' Construction' (ID: 31452)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.22422263026237488
    2. 'def' → logprob: -2.2242226600646973
    3. '#' → logprob: -3.4742226600646973
    4. 'freq' → logprob: -3.9742226600646973
    5. 'count' → logprob: -4.224222660064697
    6. 'max' → logprob: -5.099222660064697
    7. 'res' → logprob: -5.599222660064697
    8. 'ans' → logprob: -5.724222660064697
    9. 'cnt' → logprob: -6.099222660064697
    10. 'sorted' → logprob: -6.349222660064697

Token 785: ' de' (ID: 334)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.308045744895935
    2. ' =' → logprob: -1.808045744895935
    3. 'dp' → logprob: -2.1830458641052246
    4. '#' → logprob: -2.3080458641052246
    5. 'A' → logprob: -2.5580458641052246
    6. 'd' → logprob: -3.0580458641052246
    7. 'max' → logprob: -3.3080458641052246
    8. 'sorted' → logprob: -3.8080458641052246
    9. '_' → logprob: -3.9330458641052246
    10. '(
' → logprob: -4.183045864105225

Token 786: ' la' (ID: 557)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.33429840207099915
    2. 'A' → logprob: -3.2092983722686768
    3. '[]' → logprob: -3.3342983722686768
    4. 'freq' → logprob: -3.5842983722686768
    5. 'un' → logprob: -3.7092983722686768
    6. 'default' → logprob: -3.8342983722686768
    7. 'a' → logprob: -3.9592983722686768
    8. 'la' → logprob: -3.9592983722686768
    9. '[' → logprob: -4.334298610687256
    10. 'counter' → logprob: -4.334298610687256

Token 787: ' somme' (ID: 64484)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.06661597639322281
    2. 'default' → logprob: -3.5666160583496094
    3. 'freq' → logprob: -4.441616058349609
    4. 'Counter' → logprob: -5.066616058349609
    5. 'counter' → logprob: -5.316616058349609
    6. 'sorted' → logprob: -6.066616058349609
    7. 'graph' → logprob: -6.566616058349609
    8. 'segment' → logprob: -6.691616058349609
    9. 'prefix' → logprob: -6.691616058349609
    10. 'def' → logprob: -7.066616058349609

Token 788: ' part' (ID: 997)
  Prédit: '_prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_prefix' → logprob: -0.716231107711792
    2. '_' → logprob: -1.091231107711792
    3. 's' → logprob: -1.966231107711792
    4. 'A' → logprob: -3.966231107711792
    5. 'prefix' → logprob: -4.341231346130371
    6. '_pref' → logprob: -7.466231346130371
    7. '_s' → logprob: -7.841231346130371
    8. '_A' → logprob: -7.966231346130371
    9. 'pref' → logprob: -8.466231346130371
    10. '_part' → logprob: -8.466231346130371

Token 789: 'ielle' (ID: 22380)
  Prédit: 'iale'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iale' → logprob: -0.6072746515274048
    2. 'ielle' → logprob: -0.8572746515274048
    3. 'ale' → logprob: -4.357274532318115
    4. 'e' → logprob: -5.232274532318115
    5. 's' → logprob: -5.232274532318115
    6. 'es' → logprob: -5.857274532318115
    7. 'ial' → logprob: -6.482274532318115
    8. 'sum' → logprob: -7.107274532318115
    9. 'A' → logprob: -7.732274532318115
    10. 'aire' → logprob: -7.982274532318115

Token 790: ' (' (ID: 350)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.20006100833415985
    2. 'prefix' → logprob: -2.325061082839966
    3. '_' → logprob: -3.700061082839966
    4. ' =' → logprob: -4.200060844421387
    5. 'psum' → logprob: -4.200060844421387
    6. '_prefix' → logprob: -4.575060844421387
    7. '=' → logprob: -5.075060844421387
    8. 'A' → logprob: -5.700060844421387
    9. '[' → logprob: -6.950060844421387
    10. 'ps' → logprob: -6.950060844421387

Token 791: 'table' (ID: 4202)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.3025328814983368
    2. ')' → logprob: -2.177532911300659
    3. 's' → logprob: -2.677532911300659
    4. '[' → logprob: -3.927532911300659
    5. 'pref' → logprob: -4.30253267288208
    6. ' prefix' → logprob: -4.80253267288208
    7. 'psum' → logprob: -4.80253267288208
    8. 'A' → logprob: -5.05253267288208
    9. 'S' → logprob: -5.05253267288208
    10. 'pre' → logprob: -5.42753267288208

Token 792: ' de' (ID: 334)
  Prédit: 'au'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'au' → logprob: -0.3936713933944702
    2. '_' → logprob: -2.8936715126037598
    3. ')' → logprob: -3.0186715126037598
    4. ' =' → logprob: -3.1436715126037598
    5. '[]' → logprob: -3.1436715126037598
    6. '_sum' → logprob: -3.1436715126037598
    7. '=' → logprob: -3.3936715126037598
    8. '=[]' → logprob: -4.01867151260376
    9. 'sum' → logprob: -4.64367151260376
    10. '_prefix' → logprob: -4.64367151260376

Token 793: ' pré' (ID: 9424)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.4590422511100769
    2. 'pré' → logprob: -1.3340423107147217
    3. 's' → logprob: -2.7090423107147217
    4. 'pref' → logprob: -3.8340423107147217
    5. 'pr' → logprob: -4.709042072296143
    6. 'suffix' → logprob: -5.959042072296143
    7. 'c' → logprob: -6.084042072296143
    8. 'acc' → logprob: -7.334042072296143
    9. 'cum' → logprob: -7.584042072296143
    10. 'pre' → logprob: -7.709042072296143

Token 794: 'fix' (ID: 11853)
  Prédit: 'fix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fix' → logprob: -0.23684053122997284
    2. 'sum' → logprob: -1.9868404865264893
    3. 'som' → logprob: -2.9868404865264893
    4. 's' → logprob: -3.9868404865264893
    5. '```' → logprob: -5.986840724945068
    6. '#' → logprob: -8.11184024810791
    7. 'cision' → logprob: -8.73684024810791
    8. '``' → logprob: -8.98684024810791
    9. 'suffix' → logprob: -8.98684024810791
    10. '[' → logprob: -9.36184024810791

Token 795: 'es' (ID: 268)
  Prédit: 'ixe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ixe' → logprob: -0.4785548448562622
    2. 'ixes' → logprob: -1.7285548448562622
    3. 'ix' → logprob: -2.2285547256469727
    4. 'sum' → logprob: -2.8535547256469727
    5. '_sum' → logprob: -3.6035547256469727
    6. 'ic' → logprob: -6.353554725646973
    7. 'x' → logprob: -7.228554725646973
    8. 'Sum' → logprob: -7.228554725646973
    9. '(sum' → logprob: -7.228554725646973
    10. ' somme' → logprob: -7.478554725646973

Token 796: ')
' (ID: 446)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.47621816396713257
    2. ')' → logprob: -0.9762181639671326
    3. ')
' → logprob: -6.976218223571777
    4. ' )' → logprob: -7.976218223571777
    5. 'A' → logprob: -8.101218223571777
    6. 'sum' → logprob: -8.976218223571777
    7. '_s' → logprob: -9.601218223571777
    8. ' s' → logprob: -9.726218223571777
    9. '_' → logprob: -9.851218223571777
    10. '_sum' → logprob: -9.851218223571777

Token 797: 'ru' (ID: 1942)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.01329775806516409
    2. 'pref' → logprob: -5.1382975578308105
    3. ' prefix' → logprob: -5.7632975578308105
    4. 'psum' → logprob: -6.6382975578308105
    5. 'P' → logprob: -6.8882975578308105
    6. 'pre' → logprob: -7.0132975578308105
    7. 'S' → logprob: -7.7632975578308105
    8. 's' → logprob: -7.8882975578308105
    9. 'ps' → logprob: -10.013298034667969
    10. 'pres' → logprob: -10.138298034667969

Token 798: 'is' (ID: 276)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.14370334148406982
    2. 'm' → logprob: -2.8937034606933594
    3. 'ns' → logprob: -3.5187034606933594
    4. 'f' → logprob: -4.268703460693359
    5. '=' → logprob: -5.143703460693359
    6. ' =' → logprob: -5.393703460693359
    7. '``' → logprob: -6.268703460693359
    8. 'ff' → logprob: -6.768703460693359
    9. 'nn' → logprob: -6.893703460693359
    10. 'ne' → logprob: -7.018703460693359

Token 799: 'eki' (ID: 30639)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.3442867696285248
    2. 'um' → logprob: -2.3442866802215576
    3. 'eki' → logprob: -2.4692866802215576
    4. 'u' → logprob: -3.5942866802215576
    5. 'h' → logprob: -4.094286918640137
    6. ' =' → logprob: -4.344286918640137
    7. 'hu' → logprob: -4.844286918640137
    8. 'ho' → logprob: -5.594286918640137
    9. 'oku' → logprob: -5.719286918640137
    10. 'umi' → logprob: -5.844286918640137

Token 800: ' =' (ID: 314)
  Prédit: 'wa'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wa' → logprob: -0.0596621036529541
    2. 'sum' → logprob: -3.559662103652954
    3. 'A' → logprob: -4.059661865234375
    4. 'w' → logprob: -5.309661865234375
    5. '_sum' → logprob: -6.559661865234375
    6. '[]' → logprob: -6.809661865234375
    7. '_A' → logprob: -7.059661865234375
    8. 'wari' → logprob: -7.684661865234375
    9. '[A' → logprob: -7.934661865234375
    10. 'd' → logprob: -8.059661865234375

Token 801: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00862521305680275
    2. '[A' → logprob: -4.758625030517578
    3. '[np' → logprob: -12.383625030517578
    4. ' [' → logprob: -13.508625030517578
    5. '[n' → logprob: -13.633625030517578
    6. '[len' → logprob: -13.633625030517578
    7. 'A' → logprob: -13.758625030517578
    8. '[int' → logprob: -14.508625030517578
    9. '[list' → logprob: -14.758625030517578
    10. '[it' → logprob: -15.758625030517578

Token 802: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. 'A' → logprob: -17.375
    3. ' ' → logprob: -18.5
    4. '۰' → logprob: -19.875
    5. '０' → logprob: -20.625
    6. '
' → logprob: -21.25
    7. '[' → logprob: -21.75
    8. '00' → logprob: -21.75
    9. '   ' → logprob: -22.0
    10. 'a' → logprob: -22.75

Token 803: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0006461950251832604
    2. ']
' → logprob: -7.625646114349365
    3. ']+' → logprob: -9.125646591186523
    4. ']*(' → logprob: -10.500646591186523
    5. ' ]' → logprob: -11.625646591186523
    6. '0' → logprob: -12.250646591186523
    7. ',' → logprob: -12.750646591186523
    8. ']*' → logprob: -13.000646591186523
    9. ')' → logprob: -13.750646591186523
    10. ']
' → logprob: -14.250646591186523

Token 804: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0005558936391025782
    2. ' for' → logprob: -7.500555992126465
    3. '
' → logprob: -13.250555992126465
    4. 'i' → logprob: -14.375555992126465
    5. '+' → logprob: -15.750555992126465
    6. '0' → logprob: -15.750555992126465
    7. 'f' → logprob: -16.87555503845215
    8. 's' → logprob: -16.87555503845215
    9. '   ' → logprob: -17.25055503845215
    10. 'fo' → logprob: -17.50055503845215

Token 805: ' i' (ID: 575)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.027845997363328934
    2. 'x' → logprob: -4.027845859527588
    3. 'i' → logprob: -4.777845859527588
    4. 'num' → logprob: -6.902845859527588
    5. 'ai' → logprob: -8.527846336364746
    6. ' a' → logprob: -11.027846336364746
    7. 'val' → logprob: -12.027846336364746
    8. 'v' → logprob: -12.652846336364746
    9. ' i' → logprob: -13.152846336364746
    10. 'value' → logprob: -13.277846336364746

Token 806: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04859054833650589
    2. 'in' → logprob: -3.048590660095215
    3. ' ' → logprob: -13.548590660095215
    4. ',' → logprob: -14.173590660095215
    5. '   ' → logprob: -14.923590660095215
    6. '_in' → logprob: -15.923590660095215
    7. '	in' → logprob: -16.0485897064209
    8. '  ' → logprob: -16.1735897064209
    9. 'import' → logprob: -16.5485897064209
    10. '1' → logprob: -16.5485897064209

Token 807: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00021307668066583574
    2. ' range' → logprob: -8.500212669372559
    3. 'A' → logprob: -11.625212669372559
    4. '   ' → logprob: -15.625212669372559
    5. 'rang' → logprob: -15.750212669372559
    6. 'r' → logprob: -16.125213623046875
    7. '	range' → logprob: -17.000213623046875
    8. '  ' → logprob: -17.125213623046875
    9. '(range' → logprob: -17.250213623046875
    10. 'ran' → logprob: -17.500213623046875

Token 808: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00023274161503650248
    2. '(' → logprob: -9.000232696533203
    3. '(len' → logprob: -9.125232696533203
    4. 'n' → logprob: -15.500232696533203
    5. '(
' → logprob: -15.500232696533203
    6. 'len' → logprob: -17.500232696533203
    7. ' (' → logprob: -19.125232696533203
    8. '(num' → logprob: -19.250232696533203
    9. '	n' → logprob: -19.500232696533203
    10. ' n' → logprob: -19.625232696533203

Token 809: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04881422594189644
    2. '):
' → logprob: -3.048814296722412
    3. '):
' → logprob: -9.423813819885254
    4. ' ):' → logprob: -9.423813819885254
    5. '+' → logprob: -10.423813819885254
    6. ')' → logprob: -11.173813819885254
    7. ']:' → logprob: -11.798813819885254
    8. ':' → logprob: -12.048813819885254
    9. '1' → logprob: -12.673813819885254
    10. ' ):
' → logprob: -13.423813819885254

Token 810: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0042292894795536995
    2. 'ru' → logprob: -5.6292290687561035
    3. ' ru' → logprob: -7.5042290687561035
    4. ' r' → logprob: -9.754229545593262
    5. '	' → logprob: -12.254229545593262
    6. '_ru' → logprob: -12.629229545593262
    7. '   ' → logprob: -12.754229545593262
    8. '```' → logprob: -13.629229545593262
    9. '  ' → logprob: -13.754229545593262
    10. ' ' → logprob: -14.129229545593262

Token 811: ' #' (ID: 1069)
  Prédit: 'ru'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ru' → logprob: -0.28312036395072937
    2. '   ' → logprob: -1.4081203937530518
    3. ' ru' → logprob: -7.033120155334473
    4. 'r' → logprob: -8.033120155334473
    5. ' r' → logprob: -8.158120155334473
    6. 'rui' → logprob: -8.658120155334473
    7. '	' → logprob: -9.533120155334473
    8. ' ' → logprob: -10.283120155334473
    9. '  ' → logprob: -10.408120155334473
    10. 'ri' → logprob: -10.720620155334473

Token 812: ' Aj' (ID: 28294)
  Prédit: 'ru'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ru' → logprob: -0.038987357169389725
    2. '   ' → logprob: -3.288987398147583
    3. ' ru' → logprob: -7.288987159729004
    4. 'rui' → logprob: -9.413987159729004
    5. 'r' → logprob: -10.163987159729004
    6. 'ri' → logprob: -10.413987159729004
    7. '	' → logprob: -10.788987159729004
    8. ' r' → logprob: -11.038987159729004
    9. '_ru' → logprob: -11.601487159729004
    10. ' ' → logprob: -11.788987159729004

Token 813: 'oute' (ID: 3509)
  Prédit: 'outer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'outer' → logprob: -0.526902437210083
    2. '   ' → logprob: -1.901902437210083
    3. 'oute' → logprob: -2.026902437210083
    4. 'outez' → logprob: -2.776902437210083
    5. 'out' → logprob: -3.026902437210083
    6. 'ru' → logprob: -4.901902198791504
    7. 'ust' → logprob: -6.276902198791504
    8. '```' → logprob: -6.776902198791504
    9. '=' → logprob: -6.901902198791504
    10. ']' → logprob: -7.526902198791504

Token 814: ' la' (ID: 557)
  Prédit: 'ru'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ru' → logprob: -0.5775755643844604
    2. '   ' → logprob: -1.3275755643844604
    3. ' r' → logprob: -2.07757568359375
    4. ' ru' → logprob: -3.20257568359375
    5. 'r' → logprob: -6.07757568359375
    6. '    ' → logprob: -6.07757568359375
    7. '(' → logprob: -6.57757568359375
    8. 'A' → logprob: -7.70257568359375
    9. '_ru' → logprob: -8.07757568359375
    10. ' A' → logprob: -8.57757568359375

Token 815: ' somme' (ID: 64484)
  Prédit: 'ru'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ru' → logprob: -0.015146980993449688
    2. ' ru' → logprob: -4.7651472091674805
    3. 'A' → logprob: -6.2651472091674805
    4. 'r' → logprob: -6.5151472091674805
    5. '   ' → logprob: -6.5151472091674805
    6. ' A' → logprob: -7.2651472091674805
    7. ' r' → logprob: -7.5151472091674805
    8. 'rui' → logprob: -9.64014720916748
    9. ' somme' → logprob: -10.01514720916748
    10. ' ' → logprob: -10.14014720916748

Token 816: ' cumul' (ID: 163119)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6886365413665771
    2. '   ' → logprob: -1.1886365413665771
    3. 'ru' → logprob: -2.438636541366577
    4. ' +=' → logprob: -2.688636541366577
    5. ' (' → logprob: -4.188636779785156
    6. ' =' → logprob: -5.063636779785156
    7. '=' → logprob: -5.188636779785156
    8. '+=' → logprob: -5.688636779785156
    9. '_ru' → logprob: -6.188636779785156
    10. '_' → logprob: -7.063636779785156

Token 817: 'ée' (ID: 2894)
  Prédit: 'ulative'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ulative' → logprob: -0.4275680482387543
    2. 'ative' → logprob: -1.9275680780410767
    3. 'ée' → logprob: -2.177567958831787
    4. 'ul' → logprob: -2.802567958831787
    5. '   ' → logprob: -3.802567958831787
    6. ' ul' → logprob: -6.427567958831787
    7. 'utive' → logprob: -6.427567958831787
    8. '[' → logprob: -7.052567958831787
    9. 'e' → logprob: -8.052568435668945
    10. 'lée' → logprob: -8.052568435668945

Token 818: ' jusqu' (ID: 21961)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12997490167617798
    2. 'ru' → logprob: -2.379974842071533
    3. '+' → logprob: -5.254974842071533
    4. ' +=' → logprob: -5.379974842071533
    5. ' +' → logprob: -5.629974842071533
    6. '=' → logprob: -5.629974842071533
    7. '(' → logprob: -5.754974842071533
    8. ' =' → logprob: -6.004974842071533
    9. '+=' → logprob: -7.004974842071533
    10. ' de' → logprob: -7.129974842071533

Token 819: ''à' (ID: 33688)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5738231539726257
    2. 'i' → logprob: -2.1988232135772705
    3. 'à' → logprob: -2.1988232135772705
    4. ' à' → logprob: -2.3238232135772705
    5. '(i' → logprob: -3.4488232135772705
    6. ''à' → logprob: -3.8238232135772705
    7. '[i' → logprob: -4.198822975158691
    8. 'au' → logprob: -4.323822975158691
    9. '=' → logprob: -4.698822975158691
    10. ' i' → logprob: -4.948822975158691

Token 820: ' A' (ID: 355)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0017428892897441983
    2. '   ' → logprob: -6.626742839813232
    3. 'A' → logprob: -8.00174331665039
    4. ' i' → logprob: -10.87674331665039
    5. 'à' → logprob: -11.00174331665039
    6. '(i' → logprob: -11.37674331665039
    7. 'index' → logprob: -11.62674331665039
    8. '[i' → logprob: -11.75174331665039
    9. 'a' → logprob: -12.87674331665039
    10. 'l' → logprob: -13.25174331665039

Token 821: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.049755782238208e-05
    2. 'i' → logprob: -10.62505054473877
    3. '[' → logprob: -12.12505054473877
    4. ' [' → logprob: -12.12505054473877
    5. ' ' → logprob: -12.50005054473877
    6. ' i' → logprob: -12.62505054473877
    7. '   ' → logprob: -13.12505054473877
    8. '[
' → logprob: -13.25005054473877
    9. ']' → logprob: -13.50005054473877
    10. '][' → logprob: -14.37505054473877

Token 822: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06193496286869049
    2. '])' → logprob: -3.3119349479675293
    3. '[i' → logprob: -4.436934947967529
    4. ']+' → logprob: -4.936934947967529
    5. '])
' → logprob: -6.186934947967529
    6. '+' → logprob: -7.311934947967529
    7. ' ]' → logprob: -7.436934947967529
    8. ']
' → logprob: -7.561934947967529
    9. 'i' → logprob: -8.686935424804688
    10. '])+' → logprob: -9.061935424804688

Token 823: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.039294805377721786
    2. 'ru' → logprob: -3.789294719696045
    3. ' +=' → logprob: -5.164294719696045
    4. '.append' → logprob: -5.539294719696045
    5. ':' → logprob: -6.414294719696045
    6. ' ru' → logprob: -6.914294719696045
    7. '
' → logprob: -7.539294719696045
    8. ' =' → logprob: -7.539294719696045
    9. ':
' → logprob: -7.539294719696045
    10. '+' → logprob: -7.914294719696045

Token 824: ' r' (ID: 428)
  Prédit: 'ru'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ru' → logprob: -0.024533187970519066
    2. '   ' → logprob: -4.274533271789551
    3. ' r' → logprob: -5.274533271789551
    4. ' ru' → logprob: -6.024533271789551
    5. 'r' (adapté à ' r') → logprob: -6.399533271789551
    6. 'rui' → logprob: -7.399533271789551
    7. 'ri' → logprob: -8.27453327178955
    8. '_ru' → logprob: -10.58703327178955
    9. ' ' → logprob: -10.64953327178955
    10. 'ra' → logprob: -10.96203327178955

Token 825: 'uis' (ID: 4560)
  Prédit: 'uis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uis' → logprob: -0.0007849719258956611
    2. 'u' → logprob: -7.500784873962402
    3. 'is' → logprob: -9.250784873962402
    4. 'uisce' → logprob: -9.250784873962402
    5. 'ui' → logprob: -11.625784873962402
    6. 'uais' → logprob: -12.125784873962402
    7. ' =' → logprob: -12.250784873962402
    8. 'us' → logprob: -12.625784873962402
    9. 'ru' → logprob: -12.750784873962402
    10. ' u' → logprob: -13.000784873962402

Token 826: 'eki' (ID: 30639)
  Prédit: 'eki'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eki' → logprob: -0.0003598952607717365
    2. 'se' → logprob: -8.250359535217285
    3. 'eku' → logprob: -10.000359535217285
    4. 'ek' → logprob: -10.375359535217285
    5. 'eksi' → logprob: -11.625359535217285
    6. '=' → logprob: -12.875359535217285
    7. 'e' → logprob: -13.000359535217285
    8. ' eki' → logprob: -13.000359535217285
    9. ' =' → logprob: -13.500359535217285
    10. '   ' → logprob: -14.000359535217285

Token 827: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -7.660315895918757e-05
    2. '.' → logprob: -9.500076293945312
    3. '.extend' → logprob: -14.250076293945312
    4. ' .' → logprob: -14.750076293945312
    5. '[-' → logprob: -15.125076293945312
    6. '.app' → logprob: -15.875076293945312
    7. 'append' → logprob: -16.125076293945312
    8. '.ap' → logprob: -16.625076293945312
    9. '=' → logprob: -17.875076293945312
    10. '_append' → logprob: -18.000076293945312

Token 828: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.339278580620885e-06
    2. 'ru' → logprob: -13.125001907348633
    3. '   ' → logprob: -15.875001907348633
    4. ' (' → logprob: -16.000001907348633
    5. '(r' → logprob: -17.625001907348633
    6. '(
' → logprob: -17.875001907348633
    7. ' ru' → logprob: -18.000001907348633
    8. '	' → logprob: -18.125001907348633
    9. '((' → logprob: -18.250001907348633
    10. '_ru' → logprob: -18.625001907348633

Token 829: 'ru' (ID: 1942)
  Prédit: 'ru'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ru' → logprob: -0.0012788071762770414
    2. ' ru' → logprob: -7.251278877258301
    3. ' r' → logprob: -7.626278877258301
    4. 'rui' → logprob: -10.5012788772583
    5. '(' → logprob: -11.3762788772583
    6. '   ' → logprob: -11.7512788772583
    7. 'r' → logprob: -12.0012788772583
    8. 'ri' → logprob: -12.1262788772583
    9. '_ru' → logprob: -12.5012788772583
    10. ' ' → logprob: -12.6262788772583

Token 830: 'is' (ID: 276)
  Prédit: 'is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.006426517851650715
    2. 'se' → logprob: -5.3814263343811035
    3. 'isek' → logprob: -6.6314263343811035
    4. 'iski' → logprob: -8.131426811218262
    5. 'i' → logprob: -9.881426811218262
    6. 'sek' → logprob: -9.881426811218262
    7. 's' → logprob: -10.756426811218262
    8. '>' → logprob: -12.006426811218262
    9. '[' → logprob: -12.131426811218262
    10. 'A' → logprob: -12.256426811218262

Token 831: 'eki' (ID: 30639)
  Prédit: 'eki'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eki' → logprob: -0.3532405197620392
    2. 'ki' → logprob: -1.2282404899597168
    3. 'kei' → logprob: -6.353240489959717
    4. 'se' → logprob: -6.603240489959717
    5. '[' → logprob: -7.478240489959717
    6. 'k' → logprob: -8.353240966796875
    7. 'sek' → logprob: -8.728240966796875
    8. 'ek' → logprob: -8.853240966796875
    9. 'ke' → logprob: -9.228240966796875
    10. 'ku' → logprob: -9.603240966796875

Token 832: '[i' (ID: 1768)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.0019288709154352546
    2. '[i' → logprob: -6.251928806304932
    3. ' [-' → logprob: -16.126928329467773
    4. '[' → logprob: -16.501928329467773
    5. '[
' → logprob: -19.251928329467773
    6. '[len' → logprob: -19.501928329467773
    7. '```' → logprob: -21.001928329467773
    8. ' ' → logprob: -21.251928329467773
    9. '[j' → logprob: -21.501928329467773
    10. '[I' → logprob: -21.501928329467773

Token 833: ']' (ID: 60)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.4742407500743866
    2. '+' → logprob: -0.974240779876709
    3. '+A' → logprob: -8.72424030303955
    4. '+
' → logprob: -15.09924030303955
    5. ' ' → logprob: -15.47424030303955
    6. ' plus' → logprob: -15.97424030303955
    7. ' +
' → logprob: -15.97424030303955
    8. ' ' → logprob: -16.599241256713867
    9. ']+' → logprob: -16.599241256713867
    10. '+B' → logprob: -16.599241256713867

Token 834: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1282532513141632
    2. ' +' → logprob: -2.128253221511841
    3. '+A' → logprob: -6.62825345993042
    4. '+
' → logprob: -13.753252983093262
    5. '
' → logprob: -15.378252983093262
    6. 'A' → logprob: -15.628252983093262
    7. ' A' → logprob: -16.253253936767578
    8. ' ' → logprob: -16.753253936767578
    9. '+a' → logprob: -17.128253936767578
    10. ' +
' → logprob: -17.253253936767578

Token 835: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0052342405542731285
    2. ' A' → logprob: -5.255234241485596
    3. '   ' → logprob: -15.130233764648438
    4. ' ' → logprob: -16.255233764648438
    5. 'a' → logprob: -17.130233764648438
    6. '	A' → logprob: -17.755233764648438
    7. '(A' → logprob: -18.005233764648438
    8. '  ' → logprob: -18.880233764648438
    9. ' ' → logprob: -19.505233764648438
    10. '_A' → logprob: -19.630233764648438

Token 836: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.2664456789934775e-06
    2. '[' → logprob: -13.875000953674316
    3. '[
' → logprob: -16.500001907348633
    4. ')' → logprob: -16.750001907348633
    5. ' [' → logprob: -17.625001907348633
    6. 'i' → logprob: -17.875001907348633
    7. '```' → logprob: -18.000001907348633
    8. '[I' → logprob: -19.000001907348633
    9. ']' → logprob: -19.625001907348633
    10. '
' → logprob: -20.125001907348633

Token 837: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.176947600673884e-05
    2. ')
' → logprob: -11.000021934509277
    3. ' )' → logprob: -12.250021934509277
    4. '))' → logprob: -15.500021934509277
    5. ')`' → logprob: -17.37502098083496
    6. ')

' → logprob: -17.50002098083496
    7. '
' → logprob: -18.37502098083496
    8. '`)' → logprob: -18.37502098083496
    9. '),' → logprob: -18.50002098083496
    10. '```' → logprob: -18.62502098083496

Token 838: '#' (ID: 2)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.9433360695838928
    2. '
' → logprob: -1.193336009979248
    3. 'k' → logprob: -2.318336009979248
    4. '#' → logprob: -2.318336009979248
    5. 'for' → logprob: -4.193336009979248
    6. 'dp' → logprob: -4.568336009979248
    7. 'def' → logprob: -4.568336009979248
    8. 's' → logprob: -4.693336009979248
    9. 'sum' → logprob: -5.193336009979248
    10. 'n' → logprob: -5.193336009979248

Token 839: ' On' (ID: 2160)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3227798342704773
    2. '#' → logprob: -2.572779893875122
    3. 'def' → logprob: -2.947779893875122
    4. 'ans' → logprob: -3.072779893875122
    5. 'q' → logprob: -3.572779893875122
    6. 'max' → logprob: -3.947779893875122
    7. 'res' → logprob: -4.322779655456543
    8. 'result' → logprob: -4.697779655456543
    9. 'answer' → logprob: -4.697779655456543
    10. 'm' → logprob: -5.822779655456543

Token 840: ' compte' (ID: 19657)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7434762716293335
    2. 'dp' → logprob: -1.9934762716293335
    3. '#' → logprob: -2.118476390838623
    4. 'max' → logprob: -2.368476390838623
    5. ' =' → logprob: -3.618476390838623
    6. ' for' → logprob: -3.618476390838623
    7. 'def' → logprob: -3.868476390838623
    8. '
' → logprob: -3.993476390838623
    9. '_' → logprob: -3.993476390838623
    10. '_max' → logprob: -4.743476390838623

Token 841: ' la' (ID: 557)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0719565153121948
    2. '_' → logprob: -1.8219565153121948
    3. '_counter' → logprob: -2.4469566345214844
    4. ' =' → logprob: -2.5719566345214844
    5. 'freq' → logprob: -2.6969566345214844
    6. 'counter' → logprob: -3.0719566345214844
    7. '(' → logprob: -3.4469566345214844
    8. 'les' → logprob: -3.6969566345214844
    9. 's' → logprob: -4.196956634521484
    10. 'count' → logprob: -4.196956634521484

Token 842: ' fréquence' (ID: 174518)
  Prédit: 'fr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fr' → logprob: -0.3852812647819519
    2. 'freq' → logprob: -2.2602813243865967
    3. 'nombre' → logprob: -3.2602813243865967
    4. 's' → logprob: -3.2602813243865967
    5. 'counter' → logprob: -3.2602813243865967
    6. 'cnt' → logprob: -4.135281085968018
    7. 'occur' → logprob: -4.510281085968018
    8. 'suffix' → logprob: -4.760281085968018
    9. 'total' → logprob: -4.885281085968018
    10. 'nb' → logprob: -5.135281085968018

Token 843: ' de' (ID: 334)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'des' → logprob: -0.8274455666542053
    2. 's' → logprob: -1.0774455070495605
    3. 'de' → logprob: -1.9524455070495605
    4. '=' → logprob: -3.8274455070495605
    5. 'd' → logprob: -3.9524455070495605
    6. ' =' → logprob: -4.4524455070495605
    7. ' des' → logprob: -5.4524455070495605
    8. 'counter' → logprob: -5.8274455070495605
    9. 'du' → logprob: -5.9524455070495605
    10. 'A' → logprob: -6.2024455070495605

Token 844: ' chaque' (ID: 21194)
  Prédit: 'ru'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ru' → logprob: -0.48958849906921387
    2. 's' → logprob: -1.7395884990692139
    3. ' chaque' → logprob: -2.114588499069214
    4. 'la' → logprob: -3.864588499069214
    5. 'A' → logprob: -4.114588737487793
    6. ' la' → logprob: -4.489588737487793
    7. 'cha' → logprob: -4.864588737487793
    8. 'each' → logprob: -5.364588737487793
    9. 'r' → logprob: -5.614588737487793
    10. ' ru' → logprob: -5.989588737487793

Token 845: ' valeur' (ID: 41664)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9361982941627502
    2. 'val' → logprob: -1.1861982345581055
    3. 'élé' → logprob: -2.3111982345581055
    4. 'prefix' → logprob: -2.9361982345581055
    5. 'nombre' → logprob: -3.6861982345581055
    6. 'element' → logprob: -3.8111982345581055
    7. 'som' → logprob: -3.9361982345581055
    8. 'pré' → logprob: -4.1861982345581055
    9. 'ru' → logprob: -4.3111982345581055
    10. 'sum' → logprob: -4.5611982345581055

Token 846: ' de' (ID: 334)
  Prédit: 'counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'counter' → logprob: -0.38333678245544434
    2. 'freq' → logprob: -1.7583367824554443
    3. 'count' → logprob: -3.3833367824554443
    4. 'counts' → logprob: -3.6333367824554443
    5. 'Counter' → logprob: -4.008337020874023
    6. 'cnt' → logprob: -4.633337020874023
    7. ',' → logprob: -4.758337020874023
    8. 'A' → logprob: -4.758337020874023
    9. 'from' → logprob: -5.008337020874023
    10. 'fre' → logprob: -5.508337020874023

Token 847: ' la' (ID: 557)
  Prédit: 'ru'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ru' → logprob: -0.01428467407822609
    2. 's' → logprob: -5.514284610748291
    3. 'la' → logprob: -5.514284610748291
    4. 'prefix' → logprob: -6.389284610748291
    5. 'A' → logprob: -6.764284610748291
    6. ' la' → logprob: -6.889284610748291
    7. ' ru' → logprob: -7.514284610748291
    8. 'c' → logprob: -8.13928508758545
    9. ' A' → logprob: -8.38928508758545
    10. 'pr' → logprob: -9.13928508758545

Token 848: ' somme' (ID: 64484)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.18404161930084229
    2. 'ru' → logprob: -2.0590415000915527
    3. 'prefix' → logprob: -4.559041500091553
    4. 'som' → logprob: -4.809041500091553
    5. 'c' → logprob: -5.184041500091553
    6. 'pré' → logprob: -5.434041500091553
    7. 'suffix' → logprob: -5.684041500091553
    8. '```' → logprob: -6.184041500091553
    9. 'pr' → logprob: -6.934041500091553
    10. ' somme' → logprob: -7.434041500091553

Token 849: ' part' (ID: 997)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.12407244741916656
    2. 'ru' → logprob: -3.499072551727295
    3. 'c' → logprob: -3.749072551727295
    4. '_' → logprob: -4.249072551727295
    5. '_c' → logprob: -4.374072551727295
    6. '_part' → logprob: -4.624072551727295
    7. 'cum' → logprob: -4.749072551727295
    8. 'prefix' → logprob: -4.874072551727295
    9. '_prefix' → logprob: -5.499072551727295
    10. ' part' → logprob: -6.499072551727295

Token 850: 'ielle' (ID: 22380)
  Prédit: 'ielle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ielle' → logprob: -0.002399912802502513
    2. 'iale' → logprob: -6.627399921417236
    3. 'ie' → logprob: -7.752399921417236
    4. 'ru' → logprob: -8.377399444580078
    5. 'i' → logprob: -8.877399444580078
    6. 'iel' → logprob: -9.502399444580078
    7. 's' → logprob: -10.377399444580078
    8. 'ialis' → logprob: -10.502399444580078
    9. '#' → logprob: -10.877399444580078
    10. 'ai' → logprob: -11.252399444580078

Token 851: '
' (ID: 198)
  Prédit: 'counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'counter' → logprob: -0.22170917689800262
    2. 'freq' → logprob: -2.2217092514038086
    3. 'count' → logprob: -3.7217092514038086
    4. 'cnt' → logprob: -3.8467092514038086
    5. 'cum' → logprob: -4.221709251403809
    6. 'ru' → logprob: -4.971709251403809
    7. 'Counter' → logprob: -5.471709251403809
    8. 'sum' → logprob: -5.721709251403809
    9. 'counts' → logprob: -5.721709251403809
    10. 'fr' → logprob: -5.971709251403809

Token 852: 'C' (ID: 34)
  Prédit: 'freq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'freq' → logprob: -0.6804620027542114
    2. 'counter' → logprob: -0.9304620027542114
    3. 'count' → logprob: -2.430461883544922
    4. 'counts' → logprob: -5.055461883544922
    5. 'cnt' → logprob: -6.055461883544922
    6. 'c' → logprob: -7.180461883544922
    7. 'frequency' → logprob: -7.430461883544922
    8. 'from' → logprob: -7.805461883544922
    9. 'comp' → logprob: -7.930461883544922
    10. 'Counter' → logprob: -8.555461883544922

Token 853: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7601531744003296
    2. '=' → logprob: -0.8851531744003296
    3. 'ounter' → logprob: -2.135153293609619
    4. 'ount' → logprob: -7.010153293609619
    5. 'r' → logprob: -7.885153293609619
    6. 'ounters' → logprob: -10.135152816772461
    7. '=C' → logprob: -10.260152816772461
    8. '[' → logprob: -10.510152816772461
    9. 'u' → logprob: -11.010152816772461
    10. '_' → logprob: -11.260152816772461

Token 854: ' Counter' (ID: 32251)
  Prédit: 'Counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Counter' → logprob: -0.003197204554453492
    2. 'default' → logprob: -5.753197193145752
    3. ' Counter' → logprob: -10.87819766998291
    4. 'Default' → logprob: -15.87819766998291
    5. ' defaultdict' → logprob: -15.87819766998291
    6. '.Counter' → logprob: -16.003196716308594
    7. 'counter' → logprob: -16.253196716308594
    8. '   ' → logprob: -17.753196716308594
    9. '_counter' → logprob: -17.753196716308594
    10. ' ' → logprob: -19.503196716308594

Token 855: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00012190054985694587
    2. '()' → logprob: -9.2501220703125
    3. 'ru' → logprob: -10.6251220703125
    4. '(list' → logprob: -15.0001220703125
    5. '([' → logprob: -15.2501220703125
    6. '((' → logprob: -15.6251220703125
    7. '_ru' → logprob: -15.6251220703125
    8. '()
' → logprob: -16.3751220703125
    9. ' (' → logprob: -16.5001220703125
    10. '[' → logprob: -16.7501220703125

Token 856: 'ru' (ID: 1942)
  Prédit: 'ru'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ru' → logprob: -0.0022819340229034424
    2. '(' → logprob: -6.12728214263916
    3. ')' → logprob: -10.00228214263916
    4. ' ru' → logprob: -10.50228214263916
    5. '[' → logprob: -11.50228214263916
    6. '{' → logprob: -12.00228214263916
    7. '_ru' → logprob: -13.12728214263916
    8. ')(' → logprob: -14.37728214263916
    9. '```' → logprob: -14.50228214263916
    10. '   ' → logprob: -14.62728214263916

Token 857: 'is' (ID: 276)
  Prédit: 'is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.004345260094851255
    2. 'se' → logprob: -5.629345417022705
    3. 'isek' → logprob: -7.379345417022705
    4. 'iski' → logprob: -10.129344940185547
    5. 'iseks' → logprob: -11.004344940185547
    6. 'sek' → logprob: -11.129344940185547
    7. 'iseksi' → logprob: -11.129344940185547
    8. '>' → logprob: -12.254344940185547
    9. 'ise' → logprob: -12.504344940185547
    10. 's' → logprob: -12.629344940185547

Token 858: 'eki' (ID: 30639)
  Prédit: 'eki'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eki' → logprob: -2.8087270038668066e-05
    2. 'ki' → logprob: -11.750027656555176
    3. 'ek' → logprob: -12.125027656555176
    4. 'еки' → logprob: -12.250027656555176
    5. 'eku' → logprob: -13.250027656555176
    6. ' eki' → logprob: -13.625027656555176
    7. 'e' → logprob: -14.000027656555176
    8. 'kei' → logprob: -14.125027656555176
    9. 'eksi' → logprob: -14.250027656555176
    10. '[' → logprob: -14.375027656555176

Token 859: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0683535037969705e-05
    2. ')
' → logprob: -12.12501049041748
    3. ' )' → logprob: -12.37501049041748
    4. '))' → logprob: -14.62501049041748
    5. '[' → logprob: -15.75001049041748
    6. ')`' → logprob: -16.375011444091797
    7. ')

' → logprob: -16.625011444091797
    8. ')
' → logprob: -17.250011444091797
    9. '())' → logprob: -17.375011444091797
    10. ').' → logprob: -17.500011444091797

Token 860: '#' (ID: 2)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.45613542199134827
    2. 'res' → logprob: -1.7061353921890259
    3. 'answer' → logprob: -2.0811355113983154
    4. 'result' → logprob: -3.3311355113983154
    5. 'total' → logprob: -4.831135272979736
    6. '#' → logprob: -5.456135272979736
    7. 'count' → logprob: -5.956135272979736
    8. 'pairs' → logprob: -6.081135272979736
    9. 'ret' → logprob: -6.581135272979736
    10. 'dp' → logprob: -6.581135272979736

Token 861: ' Initial' (ID: 9209)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.14690540730953217
    2. 'answer' → logprob: -2.6469054222106934
    3. 'res' → logprob: -3.2719054222106934
    4. 'result' → logprob: -3.6469054222106934
    5. 'total' → logprob: -6.896905422210693
    6. '#' → logprob: -7.771905422210693
    7. 'count' → logprob: -9.271904945373535
    8. 'ret' → logprob: -10.021904945373535
    9. 'pairs' → logprob: -10.396904945373535
    10. 'cnt' → logprob: -10.896904945373535

Token 862: 'iser' (ID: 7466)
  Prédit: 'ize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ize' → logprob: -1.3779815435409546
    2. 'ze' → logprob: -1.3779815435409546
    3. 'ement' → logprob: -2.252981662750244
    4. 'iser' → logprob: -2.752981662750244
    5. 's' → logprob: -3.377981662750244
    6. 'er' → logprob: -3.377981662750244
    7. 'ment' → logprob: -3.502981662750244
    8. '#' → logprob: -3.627981662750244
    9. 'max' → logprob: -3.877981662750244
    10. 'izer' → logprob: -4.002981662750244

Token 863: ' la' (ID: 557)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.12078264355659485
    2. 'res' → logprob: -2.8707826137542725
    3. 'answer' → logprob: -3.1207826137542725
    4. ' ans' → logprob: -4.495782852172852
    5. 'result' → logprob: -6.620782852172852
    6. ' answer' → logprob: -8.120782852172852
    7. 'count' → logprob: -9.370782852172852
    8. 'total' → logprob: -10.120782852172852
    9. ' res' → logprob: -11.245782852172852
    10. 'r' → logprob: -11.245782852172852

Token 864: ' réponse' (ID: 50332)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.43806734681129456
    2. 'res' → logprob: -1.4380673170089722
    3. 'result' → logprob: -2.6880674362182617
    4. 'answer' → logprob: -3.0630674362182617
    5. 'count' → logprob: -6.188067436218262
    6. 'total' → logprob: -8.063067436218262
    7. 'cnt' → logprob: -9.938067436218262
    8. 'dp' → logprob: -10.063067436218262
    9. '```' → logprob: -10.438067436218262
    10. 'rés' → logprob: -10.813067436218262

Token 865: ' à' (ID: 1221)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.029834603890776634
    2. 'answer' → logprob: -3.779834508895874
    3. 'res' → logprob: -5.029834747314453
    4. 'result' → logprob: -11.404834747314453
    5. ' ans' → logprob: -12.154834747314453
    6. '=' → logprob: -12.779834747314453
    7. 'r' → logprob: -13.404834747314453
    8. '(ans' → logprob: -13.654834747314453
    9. '_ans' → logprob: -13.779834747314453
    10. ' =' → logprob: -14.529834747314453

Token 866: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00023154958034865558
    2. '1' → logprob: -8.750231742858887
    3. ' ' → logprob: -9.625231742858887
    4. 'len' → logprob: -12.875231742858887
    5. 'n' → logprob: -13.250231742858887
    6. 'ans' → logprob: -13.625231742858887
    7. 'pow' → logprob: -14.500231742858887
    8. '(' → logprob: -15.250231742858887
    9. 'max' → logprob: -15.625231742858887
    10. 'res' → logprob: -16.25023078918457

Token 867: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.153795766294934e-06
    2. ' ' → logprob: -12.625005722045898
    3. '1' → logprob: -13.125005722045898
    4. 'max' → logprob: -15.375005722045898
    5. 'ans' → logprob: -15.625005722045898
    6. 'n' → logprob: -15.750005722045898
    7. 'len' → logprob: -16.3750057220459
    8. 'int' → logprob: -16.8750057220459
    9. '(' → logprob: -17.0000057220459
    10. 'pow' → logprob: -17.0000057220459

Token 868: '
' (ID: 198)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.026006024330854416
    2. 'answer' → logprob: -3.776005983352661
    3. 'res' → logprob: -5.90100622177124
    4. 'result' → logprob: -11.776005744934082
    5. '
' → logprob: -12.401005744934082
    6. ' ans' → logprob: -12.776005744934082
    7. 'r' → logprob: -13.776005744934082
    8. 'ANS' → logprob: -14.026005744934082
    9. '_ans' → logprob: -14.276005744934082
    10. '(ans' → logprob: -14.651005744934082

Token 869: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.12408729642629623
    2. 'answer' → logprob: -2.624087333679199
    3. 'res' → logprob: -3.124087333679199
    4. 'result' → logprob: -8.4990873336792
    5. 'ret' → logprob: -12.7490873336792
    6. 'total' → logprob: -13.8740873336792
    7. 'r' → logprob: -13.9990873336792
    8. '_ans' → logprob: -14.3740873336792
    9. 'resp' → logprob: -14.3740873336792
    10. '(ans' → logprob: -14.4990873336792

Token 870: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04859009385108948
    2. '=' → logprob: -3.0485901832580566
    3. ' ' → logprob: -13.548589706420898
    4. ')' → logprob: -14.673589706420898
    5. '_' → logprob: -15.048589706420898
    6. ' =
' → logprob: -15.923589706420898
    7. 's' → logprob: -16.0485897064209
    8. ' +=' → logprob: -16.0485897064209
    9. ' ' → logprob: -16.2985897064209
    10. '0' → logprob: -16.6735897064209

Token 871: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.623244553338736e-05
    2. ' ' → logprob: -9.625065803527832
    3. '1' → logprob: -16.12506675720215
    4. '(' → logprob: -19.68756675720215
    5. '۰' → logprob: -19.68756675720215
    6. 'int' → logprob: -19.75006675720215
    7. '=' → logprob: -19.81256675720215
    8. '   ' → logprob: -19.93756675720215
    9. ' ' → logprob: -19.93756675720215
    10. '2' → logprob: -20.06256675720215

Token 872: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.75
    3. '1' → logprob: -17.5
    4. 'sum' → logprob: -20.0
    5. 'ans' → logprob: -20.125
    6. 'int' → logprob: -20.25
    7. '2' → logprob: -20.375
    8. 'max' → logprob: -21.0
    9. '(' → logprob: -21.5
    10. 'C' → logprob: -21.625

Token 873: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07989224046468735
    2. '
' → logprob: -2.579892158508301
    3. ' for' → logprob: -6.954892158508301
    4. '
' → logprob: -11.0798921585083
    5. ' 
' → logprob: -11.3298921585083
    6. '

' → logprob: -12.0798921585083
    7. '' → logprob: -12.0798921585083
    8. ')
' → logprob: -13.0798921585083
    9. '\n' → logprob: -13.7048921585083
    10. '  
' → logprob: -14.0798921585083

Token 874: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -3.650518920039758e-06
    2. '
' → logprob: -13.250003814697266
    3. ' for' → logprob: -13.250003814697266
    4. ')' → logprob: -18.000003814697266
    5. '	for' → logprob: -18.375003814697266
    6. '
' → logprob: -18.750003814697266
    7. ' 
' → logprob: -18.750003814697266
    8. '  
' → logprob: -18.875003814697266
    9. '    
' → logprob: -19.000003814697266
    10. '```' → logprob: -19.125003814697266

Token 875: ' Pour' (ID: 13931)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.5048530030981055e-06
    2. '
' → logprob: -13.500001907348633
    3. ' for' → logprob: -18.000001907348633
    4. '
' → logprob: -19.000001907348633
    5. 'from' → logprob: -19.000001907348633
    6. '```' → logprob: -19.250001907348633
    7. 'fo' → logprob: -19.625001907348633
    8. '    
' → logprob: -20.250001907348633
    9. '  
' → logprob: -20.250001907348633
    10. 'def' → logprob: -20.750001907348633

Token 876: ' chaque' (ID: 21194)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.9682912826538086
    2. 'key' → logprob: -1.5932912826538086
    3. 'value' → logprob: -1.8432912826538086
    4. 'x' → logprob: -2.3432912826538086
    5. 'v' → logprob: -3.3432912826538086
    6. 'freq' → logprob: -3.4682912826538086
    7. ' val' → logprob: -3.8432912826538086
    8. 'c' → logprob: -3.9682912826538086
    9. 'count' → logprob: -4.093291282653809
    10. 'k' → logprob: -4.218291282653809

Token 877: ' valeur' (ID: 41664)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.8167138695716858
    2. 'value' → logprob: -1.816713809967041
    3. 'k' → logprob: -1.941713809967041
    4. 'v' → logprob: -2.566713809967041
    5. 'val' → logprob: -2.566713809967041
    6. ' key' → logprob: -3.691713809967041
    7. 'freq' → logprob: -3.816713809967041
    8. 'count' → logprob: -3.941713809967041
    9. 'c' → logprob: -4.316713809967041
    10. 'x' → logprob: -5.066713809967041

Token 878: ' de' (ID: 334)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005649559665471315
    2. ',val' → logprob: -6.130649566650391
    3. ' dans' → logprob: -6.880649566650391
    4. ' in' → logprob: -7.755649566650391
    5. ',c' → logprob: -8.13064956665039
    6. ',v' → logprob: -8.38064956665039
    7. ',count' → logprob: -8.38064956665039
    8. '_,' → logprob: -8.50564956665039
    9. 'dans' → logprob: -8.50564956665039
    10. 'freq' → logprob: -8.75564956665039

Token 879: ' fréquence' (ID: 174518)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0024773201439529657
    2. ' C' → logprob: -6.002477169036865
    3. ' la' → logprob: -14.502477645874023
    4. 'ru' → logprob: -14.877477645874023
    5. 'r' → logprob: -15.502477645874023
    6. 'val' → logprob: -16.377477645874023
    7. 'value' → logprob: -16.502477645874023
    8. 'la' → logprob: -16.627477645874023
    9. 'range' → logprob: -16.627477645874023
    10. 'c' → logprob: -16.877477645874023

Token 880: ' trouv' (ID: 40254)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05186886712908745
    2. 'in' → logprob: -3.8018689155578613
    3. ',val' → logprob: -4.676868915557861
    4. ' in' → logprob: -4.801868915557861
    5. ',value' → logprob: -5.926868915557861
    6. ',v' → logprob: -6.176868915557861
    7. 'c' → logprob: -6.551868915557861
    8. 'val' → logprob: -6.551868915557861
    9. 'v' → logprob: -7.176868915557861
    10. ' ,' → logprob: -7.801868915557861

Token 881: 'ée' (ID: 2894)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.924034833908081
    2. 'ue' → logprob: -1.299034833908081
    3. 'u' → logprob: -2.549034833908081
    4. ' in' → logprob: -2.549034833908081
    5. 'e' → logprob: -2.674034833908081
    6. 'ée' → logprob: -3.424034833908081
    7. ',' → logprob: -4.79903507232666
    8. 'é' → logprob: -4.79903507232666
    9. 'ie' → logprob: -4.79903507232666
    10. 'C' → logprob: -4.92403507232666

Token 882: ' dans' (ID: 2671)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.1110202074050903
    2. ' in' → logprob: -1.1110202074050903
    3. ',' → logprob: -1.8610202074050903
    4. 'in' → logprob: -2.111020088195801
    5. 'v' → logprob: -3.486020088195801
    6. '   ' → logprob: -4.486020088195801
    7. ':
' → logprob: -5.111020088195801
    8. ' v' → logprob: -5.361020088195801
    9. 'for' → logprob: -5.361020088195801
    10. ',v' → logprob: -6.361020088195801

Token 883: ' les' (ID: 1341)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -1.2664456789934775e-06
    2. ' C' → logprob: -13.625000953674316
    3. '
' → logprob: -20.125001907348633
    4. 'list' → logprob: -20.125001907348633
    5. '(C' → logprob: -20.250001907348633
    6. 'values' → logprob: -20.500001907348633
    7. '   ' → logprob: -21.000001907348633
    8. 'range' → logprob: -21.000001907348633
    9. '[C' → logprob: -21.125001907348633
    10. ' ' → logprob: -21.625001907348633

Token 884: ' pré' (ID: 9424)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -9.088346359931165e-07
    2. 'values' → logprob: -14.250000953674316
    3. ' C' → logprob: -15.250000953674316
    4. '(C' → logprob: -18.0
    5. '
' → logprob: -18.375
    6. 'value' → logprob: -18.5
    7. 'list' → logprob: -18.5
    8. ')' → logprob: -19.25
    9. '	C' → logprob: -19.625
    10. 'range' → logprob: -19.75

Token 885: 'fix' (ID: 11853)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0005404045223258436
    2. 'values' → logprob: -8.375540733337402
    3. 'f' → logprob: -9.250540733337402
    4. ' C' → logprob: -9.750540733337402
    5. 'sum' → logprob: -10.250540733337402
    6. 'ru' → logprob: -10.375540733337402
    7. 'for' → logprob: -10.750540733337402
    8. 's' → logprob: -10.875540733337402
    9. 'r' → logprob: -11.625540733337402
    10. 'val' → logprob: -12.125540733337402

Token 886: 'es' (ID: 268)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.86126309633255
    2. '   ' → logprob: -1.1112630367279053
    3. 's' → logprob: -2.1112630367279053
    4. 'f' → logprob: -3.6112630367279053
    5. 'x' → logprob: -3.6112630367279053
    6. 'r' → logprob: -4.111263275146484
    7. 'ixes' → logprob: -4.736263275146484
    8. ' ' → logprob: -5.111263275146484
    9. ' C' → logprob: -5.236263275146484
    10. '```' → logprob: -5.361263275146484

Token 887: '
' (ID: 198)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.7461219429969788
    2. 'for' → logprob: -0.9961219429969788
    3. ':' → logprob: -1.871121883392334
    4. ' for' → logprob: -6.121121883392334
    5. 'in' → logprob: -9.496122360229492
    6. ',' → logprob: -9.496122360229492
    7. 'values' → logprob: -10.121122360229492
    8. '.values' → logprob: -10.121122360229492
    9. '):
' → logprob: -10.621122360229492
    10. ' :
' → logprob: -10.996122360229492

Token 888: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0002342912630410865
    2. ' for' → logprob: -8.375234603881836
    3. ':' → logprob: -13.000234603881836
    4. '   ' → logprob: -14.750234603881836
    5. '```' → logprob: -15.000234603881836
    6. ':
' → logprob: -15.375234603881836
    7. ',' → logprob: -15.625234603881836
    8. 'in' → logprob: -16.000234603881836
    9. ')' → logprob: -16.375234603881836
    10. '
' → logprob: -16.875234603881836

Token 889: ' c' (ID: 274)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.7253354787826538
    2. 'freq' → logprob: -0.9753354787826538
    3. 'count' → logprob: -2.8503355979919434
    4. 'value' → logprob: -3.1003355979919434
    5. '_,' → logprob: -4.475335597991943
    6. 'c' → logprob: -4.975335597991943
    7. 'val' → logprob: -5.100335597991943
    8. 'k' → logprob: -5.475335597991943
    9. 'cnt' → logprob: -5.850335597991943
    10. 'key' → logprob: -5.975335597991943

Token 890: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6483662724494934
    2. 'in' → logprob: -0.7733662724494934
    3. ' ' → logprob: -5.023366451263428
    4. ',' → logprob: -5.273366451263428
    5. '_' → logprob: -7.023366451263428
    6. ' ,' → logprob: -7.273366451263428
    7. 's' → logprob: -7.398366451263428
    8. '_in' → logprob: -8.02336597442627
    9. '  ' → logprob: -8.27336597442627
    10. '   ' → logprob: -8.64836597442627

Token 891: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -9.13388703338569e-06
    2. ' C' → logprob: -11.625009536743164
    3. '(C' → logprob: -16.750009536743164
    4. '   ' → logprob: -18.000009536743164
    5. ' ' → logprob: -18.250009536743164
    6. '	C' → logprob: -18.375009536743164
    7. 'range' → logprob: -18.500009536743164
    8. '_C' → logprob: -18.750009536743164
    9. 'list' → logprob: -18.750009536743164
    10. '[C' → logprob: -18.750009536743164

Token 892: '.values' (ID: 20422)
  Prédit: '.values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.values' → logprob: -0.007218142040073872
    2. 'values' → logprob: -5.257218360900879
    3. '[c' → logprob: -7.132218360900879
    4. '[' → logprob: -7.257218360900879
    5. ':' → logprob: -8.757218360900879
    6. '.' → logprob: -9.632218360900879
    7. 'value' → logprob: -9.632218360900879
    8. ':
' → logprob: -10.007218360900879
    9. '_values' → logprob: -10.132218360900879
    10. '.value' → logprob: -10.382218360900879

Token 893: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.026638491079211235
    2. ':' → logprob: -4.276638507843018
    3. '():
' → logprob: -4.401638507843018
    4. '   ' → logprob: -9.90163803100586
    5. '()' → logprob: -10.15163803100586
    6. ':
' → logprob: -10.52663803100586
    7. '):' → logprob: -11.02663803100586
    8. ' :' → logprob: -12.77663803100586
    9. '():
' → logprob: -13.15163803100586
    10. ' ():' → logprob: -13.77663803100586

Token 894: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00032259183353744447
    2. '	ans' → logprob: -8.125322341918945
    3. ' ans' → logprob: -11.500322341918945
    4. '   ' → logprob: -11.750322341918945
    5. 'ans' → logprob: -12.500322341918945
    6. '```' → logprob: -12.875322341918945
    7. '    
' → logprob: -14.250322341918945
    8. '   ' → logprob: -15.000322341918945
    9. '
' → logprob: -15.125322341918945
    10. '(ans' → logprob: -15.125322341918945

Token 895: ' #' (ID: 1069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.03616408258676529
    2. '   ' → logprob: -3.4111640453338623
    3. ' ans' → logprob: -6.161164283752441
    4. 'if' → logprob: -8.161164283752441
    5. '	ans' → logprob: -9.161164283752441
    6. '(ans' → logprob: -11.911164283752441
    7. ' if' → logprob: -12.536164283752441
    8. '    
' → logprob: -13.661164283752441
    9. '_ans' → logprob: -14.161164283752441
    10. '  ' → logprob: -14.661164283752441

Token 896: ' S' (ID: 336)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.002886783331632614
    2. 'if' → logprob: -5.877886772155762
    3. '   ' → logprob: -9.502886772155762
    4. ' ans' → logprob: -12.127886772155762
    5. '	ans' → logprob: -14.502886772155762
    6. '(ans' → logprob: -15.127886772155762
    7. '    
' → logprob: -15.252886772155762
    8. '#' → logprob: -15.502886772155762
    9. ' if' → logprob: -15.877886772155762
    10. '
' → logprob: -16.377887725830078

Token 897: ''il' (ID: 14683)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0027826502919197083
    2. '(ans' → logprob: -6.377782821655273
    3. '   ' → logprob: -7.752782821655273
    4. ' ans' → logprob: -8.252782821655273
    5. '	ans' → logprob: -8.502782821655273
    6. '#' → logprob: -9.627782821655273
    7. '
' → logprob: -10.252782821655273
    8. 'if' → logprob: -10.252782821655273
    9. '_ans' → logprob: -11.002782821655273
    10. '+=' → logprob: -11.502782821655273

Token 898: ' n' (ID: 297)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.5240277051925659
    2. ' c' → logprob: -1.774027705192566
    3. ' >' → logprob: -2.2740278244018555
    4. '>' → logprob: -2.3990278244018555
    5. '   ' → logprob: -3.6490278244018555
    6. '>=' → logprob: -4.5240278244018555
    7. 'c' → logprob: -5.0240278244018555
    8. ' ' → logprob: -8.024027824401855
    9. 'a' → logprob: -8.399027824401855
    10. '  ' → logprob: -9.149027824401855

Token 899: ''y' (ID: 27913)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.1741408109664917
    2. ' >' → logprob: -1.9241408109664917
    3. '   ' → logprob: -4.799140930175781
    4. 'e' → logprob: -6.174140930175781
    5. ' >=' → logprob: -6.799140930175781
    6. '>=' → logprob: -7.674140930175781
    7. ''est' → logprob: -7.924140930175781
    8. ''' → logprob: -8.049140930175781
    9. 'u' → logprob: -8.299140930175781
    10. 'a' → logprob: -8.549140930175781

Token 900: ' a' (ID: 261)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.9362877011299133
    2. 'a' → logprob: -1.1862876415252686
    3. 'est' → logprob: -1.4362876415252686
    4. ''est' → logprob: -3.5612876415252686
    5. 'ex' → logprob: -5.061287879943848
    6. ''a' → logprob: -5.061287879943848
    7. 'y' → logprob: -5.186287879943848
    8. '#' → logprob: -5.436287879943848
    9. '1' → logprob: -5.936287879943848
    10. ''>' → logprob: -6.311287879943848

Token 901: ' qu' (ID: 474)
  Prédit: ' more'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' more' → logprob: -1.5495615005493164
    2. 'plus' → logprob: -1.5495615005493164
    3. '>' → logprob: -2.0495615005493164
    4. ' ' → logprob: -2.1745615005493164
    5. ' plus' → logprob: -2.2995615005493164
    6. ' au' → logprob: -2.5495615005493164
    7. 'au' → logprob: -3.0495615005493164
    8. 'more' → logprob: -3.5495615005493164
    9. ' >' → logprob: -3.7995615005493164
    10. '1' → logprob: -4.174561500549316

Token 902: ''une' (ID: 13337)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.14168530702590942
    2. ''un' → logprob: -2.6416852474212646
    3. ''' → logprob: -3.8916852474212646
    4. '   ' → logprob: -4.141685485839844
    5. 'u' → logprob: -4.766685485839844
    6. ''une' → logprob: -4.891685485839844
    7. ' ' → logprob: -5.891685485839844
    8. 'a' → logprob: -6.641685485839844
    9. 'c' → logprob: -7.016685485839844
    10. '1' → logprob: -7.641685485839844

Token 903: ' seule' (ID: 41983)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.46817001700401306
    2. ' ou' → logprob: -2.218169927597046
    3. '1' → logprob: -2.718169927597046
    4. ' space' → logprob: -3.093169927597046
    5. ' pas' → logprob: -3.343169927597046
    6. ' espace' → logprob: -3.343169927597046
    7. ' que' → logprob: -3.968169927597046
    8. 'pas' → logprob: -5.093170166015625
    9. ' rien' → logprob: -5.218170166015625
    10. ' seule' → logprob: -5.343170166015625

Token 904: ' occurrence' (ID: 55807)
  Prédit: ' occurrence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' occurrence' → logprob: -0.6161625385284424
    2. 'occ' → logprob: -1.2411625385284424
    3. ' occur' → logprob: -2.8661625385284424
    4. 'occur' → logprob: -2.9911625385284424
    5. ' fois' → logprob: -3.9911625385284424
    6. 'fois' → logprob: -3.9911625385284424
    7. ' ' → logprob: -4.616162300109863
    8. '1' → logprob: -5.241162300109863
    9. 'c' → logprob: -5.866162300109863
    10. ' c' → logprob: -5.866162300109863

Token 905: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6634140610694885
    2. ':' → logprob: -1.2884140014648438
    3. ',' → logprob: -1.9134140014648438
    4. '       ' → logprob: -3.1634140014648438
    5. '    ' → logprob: -5.163414001464844
    6. ' :' → logprob: -5.288414001464844
    7. ' continue' → logprob: -5.288414001464844
    8. 'continue' → logprob: -7.038414001464844
    9. '	continue' → logprob: -7.538414001464844
    10. ':
' → logprob: -7.663414001464844

Token 906: ' il' (ID: 1793)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7428959012031555
    2. ' continue' → logprob: -1.2428958415985107
    3. '       ' → logprob: -1.6178958415985107
    4. 'continue' → logprob: -3.3678958415985107
    5. '	continue' → logprob: -5.99289608001709
    6. '    ' → logprob: -8.36789608001709
    7. ' continues' → logprob: -10.11789608001709
    8. 'contin' → logprob: -10.61789608001709
    9. '           ' → logprob: -10.74289608001709
    10. '     ' → logprob: -10.86789608001709

Token 907: ' n' (ID: 297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013204469345510006
    2. ' continue' → logprob: -4.513204574584961
    3. 'continue' → logprob: -7.138204574584961
    4. '	continue' → logprob: -7.388204574584961
    5. '       ' → logprob: -7.888204574584961
    6. 'n' → logprob: -8.888204574584961
    7. '    ' → logprob: -9.138204574584961
    8. ' continues' → logprob: -9.763204574584961
    9. 's' → logprob: -10.888204574584961
    10. '  ' → logprob: -11.013204574584961

Token 908: ''y' (ID: 27913)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0028555169701576233
    2. ' continue' → logprob: -6.62785530090332
    3. '    ' → logprob: -7.62785530090332
    4. '  ' → logprob: -8.62785530090332
    5. '>' → logprob: -8.75285530090332
    6. 'n' → logprob: -8.87785530090332
    7. ' n' → logprob: -8.87785530090332
    8. 'continue' → logprob: -9.37785530090332
    9. ' >' → logprob: -9.62785530090332
    10. '       ' → logprob: -9.87785530090332

Token 909: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.12573039531707764
    2. 'pas' → logprob: -2.250730514526367
    3. '   ' → logprob: -5.125730514526367
    4. 'n' → logprob: -5.625730514526367
    5. ' a' → logprob: -6.500730514526367
    6. 'y' → logprob: -8.000730514526367
    7. 'is' → logprob: -8.000730514526367
    8. '```' → logprob: -8.500730514526367
    9. 'n't' → logprob: -8.625730514526367
    10. 'f' → logprob: -9.000730514526367

Token 910: ' pas' (ID: 2173)
  Prédit: ' pas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.15230698883533478
    2. ' rien' → logprob: -2.7773070335388184
    3. 'pas' → logprob: -3.6523070335388184
    4. ' ' → logprob: -4.027307033538818
    5. ' continue' → logprob: -4.027307033538818
    6. '   ' → logprob: -5.027307033538818
    7. ' aucun' → logprob: -5.652307033538818
    8. ' no' → logprob: -6.152307033538818
    9. 'continue' → logprob: -6.402307033538818
    10. '  ' → logprob: -6.652307033538818

Token 911: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.38728880882263184
    2. ' d' → logprob: -1.8872888088226318
    3. '   ' → logprob: -2.262288808822632
    4. 'de' → logprob: -3.762288808822632
    5. 'd' → logprob: -4.137289047241211
    6. '_' → logprob: -4.512289047241211
    7. ' ' → logprob: -5.262289047241211
    8. '    ' → logprob: -6.012289047241211
    9. '    
' → logprob: -6.262289047241211
    10. '  ' → logprob: -7.012289047241211

Token 912: ' combinaison' (ID: 165933)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.9343879818916321
    2. 'comb' → logprob: -0.9343879818916321
    3. ' c' → logprob: -2.4343879222869873
    4. '```' → logprob: -4.184388160705566
    5. '2' → logprob: -4.434388160705566
    6. '
' → logprob: -4.434388160705566
    7. 'cho' → logprob: -4.934388160705566
    8. ' combinaison' → logprob: -5.059388160705566
    9. '0' → logprob: -5.184388160705566
    10. '  
' → logprob: -5.184388160705566

Token 913: ' possible' (ID: 4149)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08732733130455017
    2. ' de' → logprob: -3.587327241897583
    3. ' possible' → logprob: -3.712327241897583
    4. '    
' → logprob: -4.337327480316162
    5. ',' → logprob: -4.462327480316162
    6. ' ,' → logprob: -6.212327480316162
    7. '    ' → logprob: -7.087327480316162
    8. 'possible' → logprob: -7.087327480316162
    9. '       ' → logprob: -7.712327480316162
    10. '     
' → logprob: -7.837327480316162

Token 914: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.174391970038414
    2. '       ' → logprob: -2.549391984939575
    3. ',' → logprob: -3.174391984939575
    4. ':' → logprob: -3.299391984939575
    5. ' continue' → logprob: -6.299391746520996
    6. '    ' → logprob: -7.674391746520996
    7. 'continue' → logprob: -8.049391746520996
    8. '	continue' → logprob: -8.924391746520996
    9. ' :' → logprob: -9.924391746520996
    10. ':
' → logprob: -9.924391746520996

Token 915: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08931390196084976
    2. ':' → logprob: -3.0893139839172363
    3. '       ' → logprob: -3.4643139839172363
    4. ',' → logprob: -4.839313983917236
    5. ':
' → logprob: -8.464313507080078
    6. ' :' → logprob: -8.964313507080078
    7. ' if' → logprob: -9.089313507080078
    8. '    ' → logprob: -9.589313507080078
    9. '    
' → logprob: -10.589313507080078
    10. ' and' → logprob: -10.839313507080078

Token 916: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014593573287129402
    2. ' if' → logprob: -4.889593601226807
    3. 'if' (adapté à ' if') → logprob: -5.014593601226807
    4. ' continue' → logprob: -9.139593124389648
    5. 'continue' → logprob: -9.389593124389648
    6. '	if' → logprob: -9.889593124389648
    7. '       ' → logprob: -10.264593124389648
    8. '	continue' → logprob: -10.889593124389648
    9. '    ' → logprob: -11.514593124389648
    10. '    
' → logprob: -12.014593124389648

Token 917: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.06197250634431839
    2. 'c' → logprob: -2.8119726181030273
    3. '   ' → logprob: -12.811972618103027
    4. ' ' → logprob: -13.936972618103027
    5. '	c' → logprob: -14.061972618103027
    6. ' ' → logprob: -15.186972618103027
    7. '  ' → logprob: -16.43697166442871
    8. '    ' → logprob: -16.93697166442871
    9. ' not' → logprob: -17.06197166442871
    10. ')c' → logprob: -17.18697166442871

Token 918: ' ==' (ID: 951)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.584505558013916
    2. '>' → logprob: -0.834505558013916
    3. ' <' → logprob: -6.084505558013916
    4. ' <=' → logprob: -6.209505558013916
    5. '>=' → logprob: -6.834505558013916
    6. ' >=' → logprob: -6.959505558013916
    7. '<' → logprob: -7.084505558013916
    8. '<=' → logprob: -7.084505558013916
    9. '   ' → logprob: -8.209505081176758
    10. '==' → logprob: -8.959505081176758

Token 919: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002978048287332058
    2. ' ' → logprob: -8.125297546386719
    3. '0' → logprob: -13.875297546386719
    4. '   ' → logprob: -14.500297546386719
    5. '2' → logprob: -16.62529754638672
    6. '>' → logprob: -17.75029754638672
    7. '<' → logprob: -17.87529754638672
    8. '  ' → logprob: -17.87529754638672
    9. '    ' → logprob: -18.25029754638672
    10. '```' → logprob: -18.75029754638672

Token 920: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.250001907348633
    3. '>' → logprob: -16.125001907348633
    4. '<' → logprob: -16.500001907348633
    5. '0' → logprob: -17.250001907348633
    6. '=' → logprob: -17.250001907348633
    7. '2' → logprob: -17.625001907348633
    8. '   ' → logprob: -18.000001907348633
    9. '">' → logprob: -19.125001907348633
    10. '۱' → logprob: -19.250001907348633

Token 921: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1483774334192276
    2. '       ' → logprob: -2.5233774185180664
    3. '   ' → logprob: -3.6483774185180664
    4. ':
' → logprob: -3.6483774185180664
    5. 'continue' → logprob: -6.023377418518066
    6. ' continue' → logprob: -6.148377418518066
    7. '	continue' → logprob: -6.898377418518066
    8. ' continues' → logprob: -11.148377418518066
    9. ',' → logprob: -11.648377418518066
    10. '	' → logprob: -11.648377418518066

Token 922: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1601519137620926
    2. ':' → logprob: -2.035151958465576
    3. '   ' → logprob: -4.410151958465576
    4. ' continue' → logprob: -5.785151958465576
    5. ':
' → logprob: -6.785151958465576
    6. 'continue' → logprob: -7.660151958465576
    7. '	continue' → logprob: -7.910151958465576
    8. '	' → logprob: -9.910151481628418
    9. ' continues' → logprob: -11.035151481628418
    10. ' :' → logprob: -11.035151481628418

Token 923: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.06335440278053284
    2. '   ' → logprob: -3.8133544921875
    3. ' continue' → logprob: -3.8133544921875
    4. '       ' → logprob: -4.3133544921875
    5. '	continue' → logprob: -5.5633544921875
    6. 'contin' → logprob: -11.6883544921875
    7. '_continue' → logprob: -12.9383544921875
    8. '```' → logprob: -13.5633544921875
    9. '	' → logprob: -14.0633544921875
    10. '           ' → logprob: -14.0633544921875

Token 924: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005220594350248575
    2. '
' → logprob: -5.380220413208008
    3. '    
' → logprob: -7.630220413208008
    4. 'ans' → logprob: -9.255220413208008
    5. '	ans' → logprob: -12.755220413208008
    6. '  
' → logprob: -13.005220413208008
    7. ' 
' → logprob: -13.005220413208008
    8. ' ans' → logprob: -13.380220413208008
    9. '#' → logprob: -13.380220413208008
    10. ')' → logprob: -13.630220413208008

Token 925: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01076399814337492
    2. 'ans' → logprob: -4.635764122009277
    3. ' ans' → logprob: -7.260764122009277
    4. '	ans' → logprob: -9.010764122009277
    5. '    
' → logprob: -9.510764122009277
    6. '
' → logprob: -9.510764122009277
    7. '(ans' → logprob: -11.010764122009277
    8. ' 
' → logprob: -12.385764122009277
    9. '   ' → logprob: -12.635764122009277
    10. ' for' → logprob: -13.260764122009277

Token 926: ' #' (ID: 1069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.043554119765758514
    2. '   ' → logprob: -3.1685540676116943
    3. ' ans' → logprob: -7.918554306030273
    4. '	ans' → logprob: -9.168554306030273
    5. '    
' → logprob: -10.293554306030273
    6. '
' → logprob: -10.543554306030273
    7. '(ans' → logprob: -10.918554306030273
    8. '_ans' → logprob: -12.793554306030273
    9. 'for' → logprob: -13.543554306030273
    10. '#' (adapté à ' #') → logprob: -14.418554306030273

Token 927: ' Pour' (ID: 13931)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0005056116497144103
    2. '#' → logprob: -8.125505447387695
    3. '   ' → logprob: -8.500505447387695
    4. ' ans' → logprob: -13.125505447387695
    5. '    
' → logprob: -13.500505447387695
    6. 'else' → logprob: -13.875505447387695
    7. '	ans' → logprob: -14.125505447387695
    8. '
' → logprob: -14.625505447387695
    9. '(ans' → logprob: -15.375505447387695
    10. 'for' → logprob: -15.750505447387695

Token 928: ' chaque' (ID: 21194)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.20744222402572632
    2. ' i' → logprob: -1.957442283630371
    3. 'c' → logprob: -3.707442283630371
    4. 'k' → logprob: -4.582442283630371
    5. ' c' → logprob: -5.332442283630371
    6. ' k' → logprob: -6.082442283630371
    7. 'j' → logprob: -6.332442283630371
    8. 'x' → logprob: -7.082442283630371
    9. 'r' → logprob: -8.082442283630371
    10. 'comb' → logprob: -8.207442283630371

Token 929: ' groupe' (ID: 29494)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5266162157058716
    2. ' k' → logprob: -1.2766162157058716
    3. 'i' → logprob: -2.901616096496582
    4. ' c' → logprob: -3.276616096496582
    5. 'k' → logprob: -3.776616096496582
    6. ' _' → logprob: -5.276616096496582
    7. 'c' → logprob: -5.651616096496582
    8. ' j' → logprob: -6.151616096496582
    9. '_' → logprob: -6.276616096496582
    10. ' ' → logprob: -7.776616096496582

Token 930: ' d' (ID: 272)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12954041361808777
    2. ',' → logprob: -3.37954044342041
    3. ' de' → logprob: -3.87954044342041
    4. '_' → logprob: -4.12954044342041
    5. ' c' → logprob: -4.25454044342041
    6. '_c' → logprob: -5.50454044342041
    7. '    ' → logprob: -5.62954044342041
    8. ' ,' → logprob: -5.87954044342041
    9. ' of' → logprob: -5.87954044342041
    10. '_,' → logprob: -5.87954044342041

Token 931: ''occ' (ID: 158932)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.38591423630714417
    2. ' c' → logprob: -1.5109142065048218
    3. ' taille' → logprob: -3.5109143257141113
    4. 'i' → logprob: -3.7609143257141113
    5. ' i' → logprob: -4.135914325714111
    6. 'size' → logprob: -5.135914325714111
    7. ' size' → logprob: -5.260914325714111
    8. '   ' → logprob: -5.885914325714111
    9. 'range' → logprob: -5.885914325714111
    10. 'k' → logprob: -6.010914325714111

Token 932: 'urrences' (ID: 63292)
  Prédit: 'urrences'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urrences' → logprob: -0.008262904360890388
    2. 'ur' → logprob: -5.133263111114502
    3. 'urrence' → logprob: -6.383263111114502
    4. 'u' → logprob: -8.758262634277344
    5. 'urrencies' → logprob: -9.133262634277344
    6. '```' → logprob: -9.383262634277344
    7. 'urr' → logprob: -9.633262634277344
    8. 'curr' → logprob: -9.883262634277344
    9. 'URRENC' → logprob: -10.883262634277344
    10. '#' → logprob: -11.133262634277344

Token 933: ' ident' (ID: 3951)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2344963103532791
    2. ',' → logprob: -2.1094963550567627
    3. ':' → logprob: -2.8594963550567627
    4. '       ' → logprob: -3.9844963550567627
    5. '    ' → logprob: -5.984496116638184
    6. ' :' → logprob: -6.109496116638184
    7. ':
' → logprob: -6.109496116638184
    8. ' ,' → logprob: -7.234496116638184
    9. '  ' → logprob: -7.859496116638184
    10. ' c' → logprob: -7.859496116638184

Token 934: 'iques' (ID: 11654)
  Prédit: 'iques'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iques' → logprob: -0.002670780522748828
    2. 'ique' → logprob: -6.002670764923096
    3. 'ical' → logprob: -9.002671241760254
    4. 't' → logprob: -10.627671241760254
    5. 'c' → logprob: -11.127671241760254
    6. 'ifiées' → logprob: -11.627671241760254
    7. 'tiques' → logprob: -12.252671241760254
    8. '```' → logprob: -12.752671241760254
    9. '=' → logprob: -12.877671241760254
    10. 'cal' → logprob: -13.377671241760254

Token 935: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.053189318627119064
    2. ',' → logprob: -3.053189277648926
    3. ':' → logprob: -5.553189277648926
    4. '       ' → logprob: -8.053189277648926
    5. ' ,' → logprob: -9.178189277648926
    6. ':
' → logprob: -9.678189277648926
    7. ' :' → logprob: -9.803189277648926
    8. ',
' → logprob: -10.053189277648926
    9. '    ' → logprob: -10.178189277648926
    10. '  ' → logprob: -10.428189277648926

Token 936: ' le' (ID: 505)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6669221520423889
    2. 'ans' → logprob: -0.7919221520423889
    3. ' ans' → logprob: -3.416922092437744
    4. '	ans' → logprob: -7.166922092437744
    5. '(ans' → logprob: -9.916922569274902
    6. '```' → logprob: -11.041922569274902
    7. '
' → logprob: -11.166922569274902
    8. '    
' → logprob: -11.166922569274902
    9. '  ' → logprob: -11.416922569274902
    10. '    ' → logprob: -11.666922569274902

Token 937: ' nombre' (ID: 9733)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.00025204161647707224
    2. '#' → logprob: -9.250251770019531
    3. '   ' → logprob: -9.375251770019531
    4. ' ans' → logprob: -9.625251770019531
    5. '
' → logprob: -13.250251770019531
    6. '	ans' → logprob: -13.625251770019531
    7. '    
' → logprob: -14.375251770019531
    8. '(ans' → logprob: -14.500251770019531
    9. '```' → logprob: -15.375251770019531
    10. ' #' → logprob: -16.00025177001953

Token 938: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.2050251960754395
    2. '_c' → logprob: -1.4550251960754395
    3. '   ' → logprob: -1.5800251960754395
    4. 'd' → logprob: -2.7050251960754395
    5. ' d' → logprob: -3.3300251960754395
    6. '*' → logprob: -3.9550251960754395
    7. ' de' → logprob: -4.0800251960754395
    8. ' +=' → logprob: -4.2050251960754395
    9. '```' → logprob: -4.2050251960754395
    10. '_d' → logprob: -4.4550251960754395

Token 939: ' p' (ID: 275)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.3992682099342346
    2. ' c' → logprob: -1.8992681503295898
    3. 'com' → logprob: -2.39926815032959
    4. 'tokens' → logprob: -3.52426815032959
    5. '(c' → logprob: -3.89926815032959
    6. 'comb' → logprob: -4.14926815032959
    7. ' tokens' → logprob: -5.02426815032959
    8. ' comb' → logprob: -5.14926815032959
    9. '   ' → logprob: -6.27426815032959
    10. ' (' → logprob: -6.39926815032959

Token 940: 'aires' (ID: 8507)
  Prédit: 'aires'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aires' → logprob: -0.5849839448928833
    2. 'airs' → logprob: -0.8349839448928833
    3. 'air' → logprob: -5.334983825683594
    4. '#' → logprob: -6.334983825683594
    5. 'r' → logprob: -6.709983825683594
    6. 'oss' → logprob: -7.709983825683594
    7. 'aris' → logprob: -8.709983825683594
    8. 'aire' → logprob: -8.834983825683594
    9. 'a' → logprob: -10.209983825683594
    10. 'oints' → logprob: -10.209983825683594

Token 941: ' est' (ID: 893)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26693105697631836
    2. ' +=' → logprob: -2.3919310569763184
    3. '+=' → logprob: -2.6419310569763184
    4. '=' → logprob: -3.2669310569763184
    5. ' =' → logprob: -4.016931056976318
    6. '*=' → logprob: -5.891931056976318
    7. ' *=' → logprob: -6.391931056976318
    8. '*' → logprob: -6.766931056976318
    9. ' *' → logprob: -6.766931056976318
    10. '*(' → logprob: -6.891931056976318

Token 942: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.36478742957115173
    2. ' c' → logprob: -1.6147874593734741
    3. '   ' → logprob: -2.2397873401641846
    4. '(c' → logprob: -9.239787101745605
    5. ' (' → logprob: -9.489787101745605
    6. '    ' → logprob: -10.739787101745605
    7. '	c' → logprob: -10.864787101745605
    8. '  ' → logprob: -11.114787101745605
    9. ' ' → logprob: -12.114787101745605
    10. '(' → logprob: -12.364787101745605

Token 943: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.0037292989436537027
    2. ' *' → logprob: -5.753729343414307
    3. '*(' → logprob: -7.503729343414307
    4. ' ' → logprob: -16.25372886657715
    5. '   ' → logprob: -16.62872886657715
    6. ' ' → logprob: -16.75372886657715
    7. '**' → logprob: -16.75372886657715
    8. '
' → logprob: -17.25372886657715
    9. '-' → logprob: -17.50372886657715
    10. '  ' → logprob: -17.62872886657715

Token 944: ' (' (ID: 350)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.0005794849130325019
    2. '(' → logprob: -7.625579357147217
    3. ' (' → logprob: -9.375579833984375
    4. '   ' → logprob: -13.125579833984375
    5. '`' → logprob: -13.500579833984375
    6. '(n' → logprob: -14.375579833984375
    7. '
' → logprob: -14.500579833984375
    8. '```' → logprob: -14.500579833984375
    9. '(C' → logprob: -15.250579833984375
    10. ' ' → logprob: -16.125579833984375

Token 945: 'c' (ID: 66)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -6.027225754223764e-05
    2. '(' → logprob: -10.750060081481934
    3. ' (' → logprob: -10.750060081481934
    4. 'c' → logprob: -11.375060081481934
    5. '   ' → logprob: -12.500060081481934
    6. ')c' → logprob: -14.500060081481934
    7. ')' → logprob: -14.625060081481934
    8. '[c' → logprob: -15.375060081481934
    9. '`' → logprob: -15.875060081481934
    10. '
' → logprob: -15.875060081481934

Token 946: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.004622372332960367
    2. ' -' → logprob: -5.379622459411621
    3. '```' → logprob: -13.379622459411621
    4. ')' → logprob: -14.879622459411621
    5. '
' → logprob: -16.379621505737305
    6. '1' → logprob: -16.504621505737305
    7. '−' → logprob: -17.129621505737305
    8. '-)' → logprob: -17.629621505737305
    9. ' ' → logprob: -17.754621505737305
    10. '...' → logprob: -18.129621505737305

Token 947: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5213274309644476e-05
    2. ' ' → logprob: -11.125015258789062
    3. '```' → logprob: -15.875015258789062
    4. '   ' → logprob: -16.000015258789062
    5. ')' → logprob: -16.625015258789062
    6. '
' → logprob: -20.375015258789062
    7. '2' → logprob: -20.625015258789062
    8. ' )' → logprob: -20.625015258789062
    9. '`' → logprob: -20.875015258789062
    10. '...' → logprob: -21.250015258789062

Token 948: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -13.625000953674316
    3. '```' → logprob: -16.875001907348633
    4. '   ' → logprob: -17.500001907348633
    5. ')' → logprob: -19.125001907348633
    6. '
' → logprob: -19.125001907348633
    7. '2' → logprob: -20.625001907348633
    8. '...' → logprob: -21.375001907348633
    9. '`' → logprob: -21.875001907348633
    10. '  ' → logprob: -21.875001907348633

Token 949: ')' (ID: 8)
  Prédit: ' //'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.12017172574996948
    2. ')' → logprob: -2.7451717853546143
    3. '//' → logprob: -3.1201717853546143
    4. ')//' → logprob: -5.370171546936035
    5. '   ' → logprob: -8.995171546936035
    6. ' )' → logprob: -9.745171546936035
    7. '```' → logprob: -12.995171546936035
    8. '#' → logprob: -13.245171546936035
    9. '`' → logprob: -13.620171546936035
    10. ' ' → logprob: -13.620171546936035

Token 950: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.2015320509672165
    2. '//' → logprob: -1.701532006263733
    3. '   ' → logprob: -9.701532363891602
    4. '#' → logprob: -9.951532363891602
    5. '
' → logprob: -12.701532363891602
    6. ' #' → logprob: -13.326532363891602
    7. ')' → logprob: -13.451532363891602
    8. '```' → logprob: -13.451532363891602
    9. ' ' → logprob: -14.326532363891602
    10. ')//' → logprob: -14.826532363891602

Token 951: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '   ' → logprob: -19.375003814697266
    4. '
' → logprob: -20.875003814697266
    5. '```' → logprob: -21.000003814697266
    6. '۲' → logprob: -22.500003814697266
    7. '２' → logprob: -22.750003814697266
    8. '    ' → logprob: -23.000003814697266
    9. '  ' → logprob: -23.500003814697266
    10. '1' → logprob: -23.750003814697266

Token 952: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '
' → logprob: -19.75
    4. '   ' → logprob: -19.875
    5. '1' → logprob: -20.25
    6. '```' → logprob: -20.375
    7. '۲' → logprob: -22.0
    8. '
' → logprob: -22.9375
    9. '3' → logprob: -23.125
    10. '  ' → logprob: -23.125

Token 953: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000116655595775228
    2. '
' → logprob: -9.750116348266602
    3. 'ans' → logprob: -10.500116348266602
    4. ')' → logprob: -11.500116348266602
    5. '    
' → logprob: -11.750116348266602
    6. '.' → logprob: -13.125116348266602
    7. '	ans' → logprob: -13.125116348266602
    8. ',' → logprob: -13.250116348266602
    9. '       ' → logprob: -13.375116348266602
    10. '  ' → logprob: -13.750116348266602

Token 954: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003960855305194855
    2. ' ans' → logprob: -5.878961086273193
    3. 'ans' → logprob: -7.003961086273193
    4. ':' → logprob: -9.253960609436035
    5. '	ans' → logprob: -9.503960609436035
    6. '    
' → logprob: -10.878960609436035
    7. '
' → logprob: -11.128960609436035
    8. '  ' → logprob: -11.253960609436035
    9. '(ans' → logprob: -11.253960609436035
    10. ',' → logprob: -12.128960609436035

Token 955: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.10031234472990036
    2. '   ' → logprob: -2.3503122329711914
    3. ' ans' → logprob: -9.350312232971191
    4. '	ans' → logprob: -11.100312232971191
    5. '(ans' → logprob: -13.475312232971191
    6. '
' → logprob: -14.350312232971191
    7. '       ' → logprob: -14.850312232971191
    8. '    
' → logprob: -14.850312232971191
    9. '```' → logprob: -15.350312232971191
    10. '   ' → logprob: -15.975312232971191

Token 956: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.10021303594112396
    2. '+=' → logprob: -2.350213050842285
    3. '+=(' → logprob: -12.975213050842285
    4. '=' → logprob: -13.975213050842285
    5. '+' → logprob: -14.225213050842285
    6. ']+=' → logprob: -14.225213050842285
    7. '   ' → logprob: -14.350213050842285
    8. '    ' → logprob: -14.725213050842285
    9. ' ' → logprob: -14.975213050842285
    10. '	' → logprob: -16.35021209716797

Token 957: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -9.782141569303349e-05
    2. ' c' → logprob: -9.25009822845459
    3. '(c' → logprob: -13.37509822845459
    4. '   ' → logprob: -16.375097274780273
    5. '	c' → logprob: -18.625097274780273
    6. '(' → logprob: -20.375097274780273
    7. ' (' → logprob: -20.500097274780273
    8. '
' → logprob: -20.625097274780273
    9. ' ' → logprob: -20.750097274780273
    10. '_c' → logprob: -20.750097274780273

Token 958: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.022202517837285995
    2. '*(' → logprob: -4.397202491760254
    3. '*' → logprob: -4.647202491760254
    4. '-' → logprob: -11.397202491760254
    5. ' -' → logprob: -11.397202491760254
    6. ' *(' → logprob: -11.897202491760254
    7. '<|end|>' → logprob: -12.147202491760254
    8. '**' → logprob: -12.397202491760254
    9. ' ' → logprob: -12.522202491760254
    10. '```' → logprob: -12.522202491760254

Token 959: ' (' (ID: 350)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -7.815280696377158e-05
    2. ' (' → logprob: -9.625078201293945
    3. '(' → logprob: -11.375078201293945
    4. '(
' → logprob: -16.375078201293945
    5. '(C' → logprob: -16.625078201293945
    6. '   ' → logprob: -17.125078201293945
    7. '(com' → logprob: -17.250078201293945
    8. '(cin' → logprob: -17.875078201293945
    9. '(cur' → logprob: -18.000078201293945
    10. '(cipher' → logprob: -18.000078201293945

Token 960: 'c' (ID: 66)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -1.9027791495318525e-05
    2. ' (' → logprob: -11.500019073486328
    3. '(' → logprob: -11.750019073486328
    4. '(
' → logprob: -14.250019073486328
    5. '   ' → logprob: -16.250019073486328
    6. '-' → logprob: -16.375019073486328
    7. 'c' → logprob: -17.250019073486328
    8. '(n' → logprob: -17.500019073486328
    9. '((' → logprob: -17.625019073486328
    10. '(C' → logprob: -17.625019073486328

Token 961: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.38689136505126953
    2. ' -' → logprob: -1.1368913650512695
    3. ')' → logprob: -11.76189136505127
    4. ' ' → logprob: -12.13689136505127
    5. '   ' → logprob: -13.38689136505127
    6. '```' → logprob: -13.63689136505127
    7. '<|end|>' → logprob: -13.63689136505127
    8. '_minus' → logprob: -13.88689136505127
    9. '
' → logprob: -14.26189136505127
    10. '1' → logprob: -15.01189136505127

Token 962: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.9153885558771435e-06
    2. ' ' → logprob: -12.500005722045898
    3. '   ' → logprob: -13.375005722045898
    4. '```' → logprob: -14.500005722045898
    5. '
' → logprob: -17.7500057220459
    6. '  ' → logprob: -18.0000057220459
    7. '...' → logprob: -18.3750057220459
    8. ')' → logprob: -18.7500057220459
    9. '    ' → logprob: -18.8750057220459
    10. '       ' → logprob: -19.5000057220459

Token 963: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. '```' → logprob: -15.625
    3. ' ' → logprob: -16.125
    4. '   ' → logprob: -17.75
    5. '
' → logprob: -18.75
    6. '<|end|>' → logprob: -19.25
    7. '...' → logprob: -19.5
    8. 'import' → logprob: -19.875
    9. '"""' → logprob: -20.1875
    10. 'python' → logprob: -20.25

Token 964: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09170950949192047
    2. ' //' → logprob: -2.716709613800049
    3. '//' → logprob: -3.966709613800049
    4. ')//' → logprob: -6.091709613800049
    5. ' )' → logprob: -8.34170913696289
    6. '```' → logprob: -9.71670913696289
    7. '   ' → logprob: -11.09170913696289
    8. '
' → logprob: -11.71670913696289
    9. '#' → logprob: -11.84170913696289
    10. ']' → logprob: -12.96670913696289

Token 965: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.5760161876678467
    2. '//' → logprob: -0.8260161876678467
    3. '```' → logprob: -10.076016426086426
    4. '
' → logprob: -11.826016426086426
    5. '#' → logprob: -11.951016426086426
    6. '"' → logprob: -12.076016426086426
    7. ')' → logprob: -12.201016426086426
    8. '   ' → logprob: -12.951016426086426
    9. '	' → logprob: -13.326016426086426
    10. ')//' → logprob: -13.576016426086426

Token 966: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. '   ' → logprob: -17.875
    4. '
' → logprob: -19.75
    5. '۲' → logprob: -20.5
    6. '２' → logprob: -20.875
    7. '```' → logprob: -21.125
    8. '  ' → logprob: -21.75
    9. '২' → logprob: -22.125
    10. '२' → logprob: -22.375

Token 967: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. ' ' → logprob: -18.375
    3. '   ' → logprob: -20.875
    4. '```' → logprob: -20.875
    5. '۲' → logprob: -21.25
    6. '
' → logprob: -22.0
    7. '<|end|>' → logprob: -23.0
    8. '২' → logprob: -23.125
    9. '２' → logprob: -23.25
    10. '२' → logprob: -23.5

Token 968: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.666993507067673e-05
    2. '
' → logprob: -10.250036239624023
    3. ' print' → logprob: -14.125036239624023
    4. '#print' → logprob: -15.250036239624023
    5. '#' → logprob: -16.250036239624023
    6. '```' → logprob: -16.875036239624023
    7. '
' → logprob: -17.250036239624023
    8. '  
' → logprob: -18.000036239624023
    9. '

' → logprob: -18.000036239624023
    10. '.print' → logprob: -18.625036239624023

Token 969: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.5954712075181305e-05
    2. '
' → logprob: -10.250036239624023
    3. ' print' → logprob: -14.625036239624023
    4. '#print' → logprob: -17.250036239624023
    5. '
' → logprob: -17.375036239624023
    6. '```' → logprob: -17.375036239624023
    7. '<|end|>' → logprob: -18.500036239624023
    8. '(print' → logprob: -18.625036239624023
    9. '.print' → logprob: -19.000036239624023
    10. '#' → logprob: -19.125036239624023

Token 970: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. ' print' → logprob: -21.625
    3. '#print' → logprob: -22.375
    4. 'pr' → logprob: -23.125
    5. '
' → logprob: -23.625
    6. '```' → logprob: -24.25
    7. 'prin' → logprob: -24.75
    8. '#' → logprob: -26.0
    9. 'printf' → logprob: -26.125
    10. 'prit' → logprob: -26.5

Token 971: 'iche' (ID: 7509)
  Prédit: 'icher'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icher' → logprob: -0.036176037043333054
    2. 'iche' → logprob: -3.9111759662628174
    3. 'ich' → logprob: -4.4111762046813965
    4. 'ichage' → logprob: -6.4111762046813965
    5. '#' → logprob: -6.6611762046813965
    6. 'f' → logprob: -8.411175727844238
    7. 'print' → logprob: -8.911175727844238
    8. 'cher' → logprob: -10.536175727844238
    9. 'ic' → logprob: -11.536175727844238
    10. 'ichier' → logprob: -11.536175727844238

Token 972: ' la' (ID: 557)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.00010163593105971813
    2. '(' → logprob: -9.250102043151855
    3. 'ans' → logprob: -12.375102043151855
    4. '(
' → logprob: -14.375102043151855
    5. '(answer' → logprob: -14.625102043151855
    6. '()' → logprob: -16.87510108947754
    7. ' (' → logprob: -17.25010108947754
    8. 'd' → logprob: -17.50010108947754
    9. '(an' → logprob: -17.50010108947754
    10. '(a' → logprob: -17.62510108947754

Token 973: ' réponse' (ID: 50332)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.05168231949210167
    2. 'ans' → logprob: -3.301682233810425
    3. 'print' → logprob: -4.301682472229004
    4. '(' → logprob: -13.801682472229004
    5. 'answer' → logprob: -14.051682472229004
    6. '(answer' → logprob: -15.051682472229004
    7. 'result' → logprob: -15.551682472229004
    8. '(print' → logprob: -15.926682472229004
    9. 'r' → logprob: -17.301681518554688
    10. ' ans' → logprob: -17.926681518554688

Token 974: ' finale' (ID: 37759)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00026264708139933646
    2. '
' → logprob: -8.250262260437012
    3. 'ans' → logprob: -14.750262260437012
    4. ' print' → logprob: -15.000262260437012
    5. '(print' → logprob: -15.250262260437012
    6. '(ans' → logprob: -15.375262260437012
    7. '```' → logprob: -16.375263214111328
    8. '(' → logprob: -17.250263214111328
    9. '()
' → logprob: -17.250263214111328
    10. ')
' → logprob: -17.375263214111328

Token 975: ' :' (ID: 712)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00015908108616713434
    2. '
' → logprob: -8.75015926361084
    3. '```' → logprob: -14.75015926361084
    4. ' print' → logprob: -15.75015926361084
    5. '
' → logprob: -17.875158309936523
    6. '(print' → logprob: -19.500158309936523
    7. '\n' → logprob: -19.750158309936523
    8. '#print' → logprob: -20.125158309936523
    9. ')
' → logprob: -20.625158309936523
    10. 'ans' → logprob: -20.625158309936523

Token 976: ' le' (ID: 505)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. ' print' → logprob: -21.0
    3. '```' → logprob: -23.0
    4. '
' → logprob: -25.375
    5. 'pr' → logprob: -26.375
    6. 'printf' → logprob: -27.25
    7. 'ans' → logprob: -27.375
    8. 'prin' → logprob: -28.375
    9. '#print' → logprob: -28.5
    10. 'Print' → logprob: -28.75

Token 977: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.5280596017837524
    2. 'nombre' → logprob: -0.9030596017837524
    3. 'ans' → logprob: -5.528059482574463
    4. 'n' → logprob: -8.278059959411621
    5. 's' → logprob: -8.278059959411621
    6. ' nombres' → logprob: -9.153059959411621
    7. 'number' → logprob: -9.653059959411621
    8. 'result' → logprob: -10.028059959411621
    9. ' number' → logprob: -10.153059959411621
    10. ' résultat' → logprob: -10.153059959411621

Token 978: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4141373932361603
    2. '(ans' → logprob: -1.664137363433838
    3. ' de' → logprob: -2.539137363433838
    4. 'de' → logprob: -2.914137363433838
    5. 'des' → logprob: -5.289137363433838
    6. 'print' → logprob: -5.914137363433838
    7. ' des' → logprob: -6.289137363433838
    8. '()' → logprob: -6.789137363433838
    9. 'ans' → logprob: -6.789137363433838
    10. ' (' → logprob: -7.289137363433838

Token 979: ' sous' (ID: 14487)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.017914963886141777
    2. ' sous' → logprob: -4.267914772033691
    3. '   ' → logprob: -6.267914772033691
    4. 'p' → logprob: -7.142914772033691
    5. 'sub' → logprob: -7.892914772033691
    6. '```' → logprob: -8.642914772033691
    7. '
' → logprob: -8.892914772033691
    8. '#' → logprob: -8.892914772033691
    9. 'segments' → logprob: -10.392914772033691
    10. 'ss' → logprob: -10.642914772033691

Token 980: '-table' (ID: 35909)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.1231762170791626
    2. '_sequences' → logprob: -2.123176097869873
    3. '-table' → logprob: -2.248176097869873
    4. 'sé' → logprob: -2.498176097869873
    5. '-s' → logprob: -2.498176097869873
    6. '_s' → logprob: -2.623176097869873
    7. '_table' → logprob: -3.248176097869873
    8. 'table' → logprob: -3.498176097869873
    9. '_' → logprob: -3.748176097869873
    10. 's' → logprob: -3.873176097869873

Token 981: 'aux' (ID: 5454)
  Prédit: 'aux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aux' → logprob: -0.00035143180866725743
    2. 'ux' → logprob: -8.375351905822754
    3. 'au' → logprob: -9.750351905822754
    4. 'ttes' → logprob: -10.625351905822754
    5. 'x' → logprob: -11.375351905822754
    6. 'xes' → logprob: -11.500351905822754
    7. 'bles' → logprob: -12.875351905822754
    8. 'ouches' → logprob: -13.250351905822754
    9. 'eux' → logprob: -13.375351905822754
    10. 'ranges' → logprob: -13.625351905822754

Token 982: ' dont' (ID: 11562)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.010264418087899685
    2. '(' → logprob: -5.0102643966674805
    3. 'with' → logprob: -6.8852643966674805
    4. '(print' → logprob: -7.0102643966674805
    5. '()' → logprob: -7.5102643966674805
    6. 'dont' → logprob: -8.26026439666748
    7. '(ans' → logprob: -8.88526439666748
    8. 'avec' → logprob: -8.88526439666748
    9. ',' → logprob: -9.13526439666748
    10. ' print' → logprob: -9.88526439666748

Token 983: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.00029244067263789475
    2. 's' → logprob: -8.625292778015137
    3. ' la' → logprob: -9.625292778015137
    4. 'le' → logprob: -11.250292778015137
    5. '   ' → logprob: -11.750292778015137
    6. '#' → logprob: -12.250292778015137
    7. '```' → logprob: -12.250292778015137
    8. 'som' → logprob: -12.750292778015137
    9. 'sum' → logprob: -13.625292778015137
    10. 'La' → logprob: -13.875292778015137

Token 984: ' somme' (ID: 64484)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00035488870344124734
    2. 'som' → logprob: -8.250354766845703
    3. ' somme' → logprob: -10.125354766845703
    4. '#' → logprob: -10.375354766845703
    5. '```' → logprob: -11.750354766845703
    6. 'sum' → logprob: -12.000354766845703
    7. '
' → logprob: -12.375354766845703
    8. '   ' → logprob: -13.625354766845703
    9. '0' → logprob: -14.875354766845703
    10. '  
' → logprob: -15.625354766845703

Token 985: ' est' (ID: 893)
  Prédit: 'est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.3145100176334381
    2. ' est' → logprob: -1.3145099878311157
    3. ' =' → logprob: -8.689510345458984
    4. '```' → logprob: -8.689510345458984
    5. ' vaut' → logprob: -8.814510345458984
    6. '0' → logprob: -8.939510345458984
    7. ' ==' → logprob: -8.939510345458984
    8. '==' → logprob: -9.064510345458984
    9. '=' → logprob: -9.314510345458984
    10. 'ég' → logprob: -9.689510345458984

Token 986: ' n' (ID: 297)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.28379565477371216
    2. 'n' → logprob: -1.4087955951690674
    3. 'zero' → logprob: -7.1587958335876465
    4. 'ég' → logprob: -7.5337958335876465
    5. 'z' → logprob: -7.6587958335876465
    6. 'nul' → logprob: -8.283795356750488
    7. '```' → logprob: -8.533795356750488
    8. '   ' → logprob: -8.783795356750488
    9. ' n' → logprob: -9.658795356750488
    10. ' ' → logprob: -10.158795356750488

Token 987: 'ulle' (ID: 14644)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.004405905492603779
    2. ')
' → logprob: -6.254405975341797
    3. '
' → logprob: -6.379405975341797
    4. ' print' → logprob: -7.879405975341797
    5. '(ans' → logprob: -8.879405975341797
    6. ')' → logprob: -9.254405975341797
    7. 'ans' → logprob: -9.629405975341797
    8. '()
' → logprob: -10.004405975341797
    9. '(print' → logprob: -11.254405975341797
    10. '```' → logprob: -11.379405975341797

Token 988: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0003360582049936056
    2. '
' → logprob: -8.000335693359375
    3. ' print' → logprob: -15.125335693359375
    4. '```' → logprob: -15.625335693359375
    5. '
' → logprob: -16.375335693359375
    6. '\n' → logprob: -16.875335693359375
    7. '#print' → logprob: -18.500335693359375
    8. ')
' → logprob: -18.625335693359375
    9. '(print' → logprob: -19.375335693359375
    10. '\' → logprob: -19.750335693359375

Token 989: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. '```' → logprob: -21.5
    3. '
' → logprob: -23.125
    4. ' print' → logprob: -23.5
    5. 'pr' → logprob: -26.625
    6. 'println' → logprob: -26.75
    7. 'printf' → logprob: -27.0
    8. '#print' → logprob: -27.0
    9. 'prin' → logprob: -27.625
    10. '``' → logprob: -28.375

Token 990: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -1.2948405128554441e-05
    2. '(' → logprob: -11.75001335144043
    3. 'ans' → logprob: -12.25001335144043
    4. ' (' → logprob: -16.50001335144043
    5. '0' → logprob: -17.50001335144043
    6. '(
' → logprob: -18.12501335144043
    7. '	ans' → logprob: -19.12501335144043
    8. '(abs' → logprob: -19.50001335144043
    9. '(answer' → logprob: -20.00001335144043
    10. '()' → logprob: -20.50001335144043

Token 991: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.896309739408025e-07
    2. ' )' → logprob: -14.375000953674316
    3. ')`' → logprob: -16.5
    4. '))' → logprob: -18.25
    5. ')
' → logprob: -18.375
    6. '())' → logprob: -18.5
    7. '`)' → logprob: -19.125
    8. '()' → logprob: -20.25
    9. ')#' → logprob: -20.25
    10. '）' → logprob: -20.5


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 989
Tokens correctement prédits (1ère position, stricte): 281
Tokens correctement prédits (1ère position, avec adaptation): 310
Tokens correctement prédits (top 10): 664
Précision stricte (1ère position): 28.41%
Précision adaptée (1ère position): 31.34%
Précision (top 10): 67.14%
================================================================================
