================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:49:13
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import re
from collections import deque, defaultdict, Counter
from math import ceil, sqrt, hypot, factorial, pi, sin, cos, tan, asin, acos, atan, radians, degrees
from itertools import accumulate, permutations, combinations, combinations_with_replacement, product, groupby
from operator import itemgetter, mul
from copy import deepcopy
from string import ascii_lowercase, ascii_uppercase, digits
from bisect import bisect, bisect_left, insort, insort_left
from fractions import gcd
from heapq import heappush, heappop
from functools import reduce

def input():
    return sys.stdin.readline().strip()

def INT():
    return int(input())

def MAP():
    return map(int, input().split())

def LIST():
    return list(map(int, input().split()))

def ZIP(n):
    return zip(*(MAP() for _ in range(n)))

sys.setrecursionlimit(10 ** 9)
INF = float('inf')
mod = 10 ** 9 + 7

N, M = MAP()
AB = [LIST() for _ in range(N)]
AB.sort(key=lambda x: x[0])

ans = 0
i = 0
B = []

for j in range(1, M + 1):
    while i < N and AB[i][0] <= j:
        heappush(B, -AB[i][1])
        i += 1
    if B:
        ans += -heappop(B)

print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5976144671440125
    2. '.' → logprob: -0.9726144671440125
    3. '<|end|>' → logprob: -3.8476145267486572
    4. '\' → logprob: -3.9726145267486572
    5. 'import' → logprob: -4.347614288330078
    6. 'newline' → logprob: -5.222614288330078
    7. '' → logprob: -5.972614288330078
    8. '\r' → logprob: -6.222614288330078
    9. '
' → logprob: -6.222614288330078
    10. '<|end|>' → logprob: -6.347614288330078

Token 4: ' re' (ID: 322)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.0007113590254448354
    2. 'os' → logprob: -7.250711441040039
    3. ' math' → logprob: -14.250711441040039
    4. ' re' → logprob: -15.125711441040039
    5. '"os' → logprob: -15.250711441040039
    6. ' json' → logprob: -16.37571144104004
    7. '_os' → logprob: -16.37571144104004
    8. '	os' → logprob: -17.25071144104004
    9. ' io' → logprob: -18.12571144104004
    10. ' ' → logprob: -18.62571144104004

Token 5: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.024717416614294052
    2. '
' → logprob: -4.774717330932617
    3. 'import' → logprob: -5.649717330932617
    4. '

' → logprob: -5.899717330932617
    5. '\' → logprob: -6.024717330932617
    6. '.' → logprob: -6.149717330932617
    7. '<|end|>' → logprob: -6.524717330932617
    8. '' → logprob: -7.149717330932617
    9. '```' → logprob: -7.524717330932617
    10. '[' → logprob: -7.524717330932617

Token 6: 'from' (ID: 2845)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.598105251789093
    2. 'import' → logprob: -1.0981051921844482
    3. '```' → logprob: -2.5981051921844482
    4. '[' → logprob: -4.723105430603027
    5. '^' → logprob: -5.098105430603027
    6. '
' → logprob: -5.223105430603027
    7. '\b' → logprob: -5.473105430603027
    8. '\' → logprob: -6.098105430603027
    9. '.' → logprob: -6.473105430603027
    10. 'def' → logprob: -6.473105430603027

Token 7: ' collections' (ID: 22690)
  Prédit: ' collections'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.32039839029312134
    2. ' os' → logprob: -1.6953983306884766
    3. ' typing' → logprob: -3.0703983306884766
    4. 'collections' → logprob: -3.6953983306884766
    5. 'os' → logprob: -5.070398330688477
    6. ' pathlib' → logprob: -5.195398330688477
    7. ' datetime' → logprob: -5.945398330688477
    8. ' math' → logprob: -6.945398330688477
    9. ' io' → logprob: -7.195398330688477
    10. ' subprocess' → logprob: -7.570398330688477

Token 8: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.255354106426239
    2. ' import' → logprob: -1.5053541660308838
    3. '.' → logprob: -5.755353927612305
    4. ' ' → logprob: -9.880353927612305
    5. '.Counter' → logprob: -10.255353927612305
    6. '<|end|>' → logprob: -10.255353927612305
    7. ' defaultdict' → logprob: -10.380353927612305
    8. '```' → logprob: -10.755353927612305
    9. '	import' → logprob: -11.005353927612305
    10. '.import' → logprob: -11.255353927612305

Token 9: ' deque' (ID: 90347)
  Prédit: ' defaultdict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.0955728143453598
    2. ' deque' → logprob: -2.9705727100372314
    3. 'deque' → logprob: -4.0955729484558105
    4. ' abc' → logprob: -4.0955729484558105
    5. ' named' → logprob: -5.8455729484558105
    6. 'default' → logprob: -6.7205729484558105
    7. 'abc' → logprob: -7.0955729484558105
    8. 'named' → logprob: -7.2205729484558105
    9. ' Counter' → logprob: -7.2205729484558105
    10. 'Counter' → logprob: -9.345572471618652

Token 10: ',' (ID: 11)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.49642443656921387
    2. 'import' → logprob: -1.7464244365692139
    3. '```' → logprob: -2.246424436569214
    4. '<|end|>' → logprob: -3.621424436569214
    5. '\' → logprob: -3.746424436569214
    6. '
' → logprob: -3.871424436569214
    7. '

' → logprob: -4.496424674987793
    8. '#' → logprob: -4.746424674987793
    9. '<|end|>' → logprob: -5.871424674987793
    10. 'newline' → logprob: -5.871424674987793

Token 11: ' defaultdict' (ID: 107098)
  Prédit: ' defaultdict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.12188033759593964
    2. 'default' → logprob: -2.371880292892456
    3. ' named' → logprob: -4.621880531311035
    4. 'named' → logprob: -4.746880531311035
    5. 'Ordered' → logprob: -6.746880531311035
    6. 'Counter' → logprob: -7.121880531311035
    7. ' Ordered' → logprob: -7.746880531311035
    8. ' Counter' → logprob: -7.746880531311035
    9. ' default' → logprob: -10.496880531311035
    10. 'abc' → logprob: -11.496880531311035

Token 12: ',' (ID: 11)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -1.0169535875320435
    2. '
' → logprob: -1.5169535875320435
    3. '```' → logprob: -1.7669535875320435
    4. 'import' → logprob: -2.391953468322754
    5. '\n' → logprob: -2.391953468322754
    6. '\' → logprob: -4.641953468322754
    7. '' → logprob: -4.641953468322754
    8. ',' → logprob: -4.766953468322754
    9. '#' → logprob: -5.141953468322754
    10. ' 

' → logprob: -5.266953468322754

Token 13: ' Counter' (ID: 32251)
  Prédit: 'Counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Counter' → logprob: -0.9152393341064453
    2. ' Counter' → logprob: -0.9152393341064453
    3. 'named' → logprob: -2.6652393341064453
    4. ' named' → logprob: -2.7902393341064453
    5. 'Ordered' → logprob: -3.2902393341064453
    6. ' Ordered' → logprob: -3.7902393341064453
    7. ' defaultdict' → logprob: -5.165239334106445
    8. 'deque' → logprob: -7.540239334106445
    9. 'Chain' → logprob: -7.665239334106445
    10. ' deque' → logprob: -7.915239334106445

Token 14: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0476540327072144
    2. '\n' → logprob: -1.2976540327072144
    3. '```' → logprob: -1.9226540327072144
    4. 'import' → logprob: -2.297654151916504
    5. '

' → logprob: -2.547654151916504
    6. ',' → logprob: -4.297654151916504
    7. '<|end|>' → logprob: -4.297654151916504
    8. '\' → logprob: -5.047654151916504
    9. '#' → logprob: -5.922654151916504
    10. 'newline' → logprob: -6.172654151916504

Token 15: 'from' (ID: 2845)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.40016508102417
    2. 'import' → logprob: -1.65016508102417
    3. '\n' → logprob: -1.65016508102417
    4. 'def' → logprob: -2.40016508102417
    5. '

' → logprob: -2.40016508102417
    6. '
' → logprob: -2.90016508102417
    7. ',' → logprob: -3.52516508102417
    8. '<|end|>' → logprob: -3.65016508102417
    9. '#' → logprob: -3.77516508102417
    10. '\' → logprob: -4.40016508102417

Token 16: ' math' (ID: 13324)
  Prédit: ' itertools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.7059110403060913
    2. ' typing' → logprob: -1.0809110403060913
    3. ' heap' → logprob: -2.455911159515381
    4. 'typing' → logprob: -3.705911159515381
    5. 'heap' → logprob: -4.080911159515381
    6. ' math' → logprob: -4.080911159515381
    7. 'math' → logprob: -5.080911159515381
    8. ' threading' → logprob: -5.830911159515381
    9. ' functools' → logprob: -6.080911159515381
    10. ' copy' → logprob: -6.080911159515381

Token 17: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.0326542928814888
    2. 'import' → logprob: -3.907654285430908
    3. ' ' → logprob: -4.532654285430908
    4. '<|end|>' → logprob: -7.032654285430908
    5. '<|end|>' → logprob: -9.032654762268066
    6. ' ```' → logprob: -9.657654762268066
    7. ' ,' → logprob: -10.157654762268066
    8. ' sqrt' → logprob: -10.407654762268066
    9. '	import' → logprob: -10.907654762268066
    10. '```' → logprob: -11.032654762268066

Token 18: ' ceil' (ID: 35964)
  Prédit: ' sqrt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sqrt' → logprob: -0.9154735803604126
    2. 'sqrt' → logprob: -0.9154735803604126
    3. 'log' → logprob: -2.665473461151123
    4. ' ceil' → logprob: -2.915473461151123
    5. ' inf' → logprob: -3.790473461151123
    6. ' log' → logprob: -3.790473461151123
    7. 'ceil' → logprob: -4.165473461151123
    8. ' factorial' → logprob: -5.165473461151123
    9. ' gcd' → logprob: -6.040473461151123
    10. ' floor' → logprob: -6.290473461151123

Token 19: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8587837815284729
    2. '

' → logprob: -1.7337837219238281
    3. 'import' → logprob: -1.9837837219238281
    4. '
' → logprob: -2.483783721923828
    5. '<|end|>' → logprob: -2.483783721923828
    6. '```' → logprob: -3.108783721923828
    7. '\n' → logprob: -4.483783721923828
    8. 'def' → logprob: -5.233783721923828
    9. '#' → logprob: -5.233783721923828
    10. '<|end|>' → logprob: -5.483783721923828

Token 20: ' sqrt' (ID: 44237)
  Prédit: 'floor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'floor' → logprob: -0.5388940572738647
    2. 'log' → logprob: -1.1638940572738647
    3. 'sqrt' → logprob: -2.4138941764831543
    4. ' floor' → logprob: -5.163894176483154
    5. 'inf' → logprob: -5.288894176483154
    6. 'fabs' → logprob: -6.913894176483154
    7. 'pow' → logprob: -6.913894176483154
    8. ' sqrt' → logprob: -7.538894176483154
    9. ' log' → logprob: -7.663894176483154
    10. 'cos' → logprob: -8.413893699645996

Token 21: ',' (ID: 11)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.7469309568405151
    2. '
' → logprob: -1.7469309568405151
    3. '```' → logprob: -1.7469309568405151
    4. 'import' → logprob: -2.8719310760498047
    5. '\n' → logprob: -3.4969310760498047
    6. ',' → logprob: -3.4969310760498047
    7. '#' → logprob: -3.9969310760498047
    8. '`' → logprob: -4.371931076049805
    9. '``' → logprob: -4.996931076049805
    10. '\' → logprob: -5.496931076049805

Token 22: ' hypot' (ID: 85756)
  Prédit: 'floor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'floor' → logprob: -1.021059513092041
    2. ' floor' → logprob: -1.271059513092041
    3. 'log' → logprob: -1.771059513092041
    4. ' factorial' → logprob: -2.271059513092041
    5. ' log' → logprob: -3.271059513092041
    6. 'pow' → logprob: -4.146059513092041
    7. ' comb' → logprob: -5.146059513092041
    8. 'factor' → logprob: -5.146059513092041
    9. ' pow' → logprob: -5.771059513092041
    10. 'is' → logprob: -6.396059513092041

Token 23: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7368131875991821
    2. '
' → logprob: -1.4868131875991821
    3. 'import' → logprob: -2.2368130683898926
    4. '

' → logprob: -3.1118130683898926
    5. '```' → logprob: -3.1118130683898926
    6. '\n' → logprob: -3.3618130683898926
    7. ',
' → logprob: -3.6118130683898926
    8. '' → logprob: -4.486813068389893
    9. '\' → logprob: -4.986813068389893
    10. ',

' → logprob: -5.486813068389893

Token 24: ' factorial' (ID: 111204)
  Prédit: 'atan'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'atan' → logprob: -0.1939709186553955
    2. 'floor' → logprob: -3.4439709186553955
    3. 'acos' → logprob: -3.4439709186553955
    4. 'sin' → logprob: -3.9439709186553955
    5. 'cos' → logprob: -4.068970680236816
    6. ' atan' → logprob: -4.318970680236816
    7. 'pow' → logprob: -4.693970680236816
    8. 'log' → logprob: -4.818970680236816
    9. 'pi' → logprob: -4.943970680236816
    10. ' acos' → logprob: -5.068970680236816

Token 25: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.19007545709609985
    2. '
' → logprob: -3.065075397491455
    3. 'import' → logprob: -3.440075397491455
    4. '\n' → logprob: -3.690075397491455
    5. '' → logprob: -4.065075397491455
    6. ',
' → logprob: -4.440075397491455
    7. '```' → logprob: -4.440075397491455
    8. '<|end|>' → logprob: -4.815075397491455
    9. '

' → logprob: -5.190075397491455
    10. '\' → logprob: -5.690075397491455

Token 26: ' pi' (ID: 6404)
  Prédit: 'log'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'log' → logprob: -0.37771841883659363
    2. 'pow' → logprob: -2.627718448638916
    3. 'floor' → logprob: -3.127718448638916
    4. 'sin' → logprob: -3.377718448638916
    5. 'cos' → logprob: -3.502718448638916
    6. 'atan' → logprob: -3.752718448638916
    7. 'pi' → logprob: -4.002718448638916
    8. 'inf' → logprob: -4.252718448638916
    9. 'is' → logprob: -4.377718448638916
    10. 'comb' → logprob: -4.627718448638916

Token 27: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3186323344707489
    2. '
' → logprob: -2.0686323642730713
    3. '<|end|>' → logprob: -2.4436323642730713
    4. 'import' → logprob: -3.8186323642730713
    5. '\n' → logprob: -4.193632125854492
    6. ',
' → logprob: -4.818632125854492
    7. '' → logprob: -5.943632125854492
    8. '

' → logprob: -5.943632125854492
    9. '```' → logprob: -6.193632125854492
    10. '<|end|>' → logprob: -6.818632125854492

Token 28: ' sin' (ID: 2187)
  Prédit: 'cos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cos' → logprob: -0.8136381506919861
    2. 'e' → logprob: -1.5636382102966309
    3. 'sin' → logprob: -1.9386382102966309
    4. 'inf' → logprob: -2.938638210296631
    5. ' e' → logprob: -3.063638210296631
    6. 'log' → logprob: -3.813638210296631
    7. ' cos' → logprob: -4.063638210296631
    8. ' inf' → logprob: -4.438638210296631
    9. 'pow' → logprob: -4.438638210296631
    10. 'atan' → logprob: -4.563638210296631

Token 29: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00452660396695137
    2. '(' → logprob: -6.129526615142822
    3. ')' → logprob: -7.254526615142822
    4. ',
' → logprob: -7.879526615142822
    5. '<|end|>' → logprob: -7.879526615142822
    6. ' ' → logprob: -8.129526138305664
    7. 's' → logprob: -9.754526138305664
    8. ' ,' → logprob: -9.754526138305664
    9. '\' → logprob: -10.004526138305664
    10. '' → logprob: -10.129526138305664

Token 30: ' cos' (ID: 8974)
  Prédit: 'cos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cos' → logprob: -0.5232038497924805
    2. ' cos' → logprob: -0.8982038497924805
    3. 'atan' → logprob: -11.52320384979248
    4. '_cos' → logprob: -11.77320384979248
    5. '1' → logprob: -11.89820384979248
    6. ' radians' → logprob: -12.39820384979248
    7. ' acos' → logprob: -12.39820384979248
    8. 'os' → logprob: -12.52320384979248
    9. '```' → logprob: -12.52320384979248
    10. 'log' → logprob: -12.64820384979248

Token 31: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012168419547379017
    2. '<|end|>' → logprob: -5.2621684074401855
    3. '\n' → logprob: -6.3871684074401855
    4. ')' → logprob: -6.8871684074401855
    5. 'import' → logprob: -7.0121684074401855
    6. ',
' → logprob: -7.3871684074401855
    7. '
' → logprob: -7.5121684074401855
    8. '\' → logprob: -7.7621684074401855
    9. '' → logprob: -8.387168884277344
    10. ',n' → logprob: -8.637168884277344

Token 32: ' tan' (ID: 8323)
  Prédit: 'atan'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atan' → logprob: -0.7722331881523132
    2. 'tan' → logprob: -1.022233247756958
    3. ' tan' → logprob: -1.772233247756958
    4. 'log' → logprob: -5.522233009338379
    5. 't' → logprob: -6.397233009338379
    6. ' asin' → logprob: -7.397233009338379
    7. ' atan' → logprob: -7.522233009338379
    8. ' radians' → logprob: -8.147233009338379
    9. ' log' → logprob: -8.272233009338379
    10. ' acos' → logprob: -8.647233009338379

Token 33: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4643906056880951
    2. '<|end|>' → logprob: -1.8393906354904175
    3. '
' → logprob: -2.714390516281128
    4. '\n' → logprob: -2.839390516281128
    5. 'import' → logprob: -3.339390516281128
    6. '\' → logprob: -4.464390754699707
    7. '' → logprob: -4.589390754699707
    8. ',
' → logprob: -4.964390754699707
    9. ' ' → logprob: -5.214390754699707
    10. '```' → logprob: -5.589390754699707

Token 34: ' asin' (ID: 140249)
  Prédit: ' asin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' asin' → logprob: -0.8885448575019836
    2. 'atan' → logprob: -1.0135447978973389
    3. ' radians' → logprob: -2.263544797897339
    4. 'log' → logprob: -3.138544797897339
    5. ' acos' → logprob: -3.638544797897339
    6. ' log' → logprob: -3.763544797897339
    7. ' atan' → logprob: -3.888544797897339
    8. 'acos' → logprob: -5.638545036315918
    9. 'asin' → logprob: -6.013545036315918
    10. '```' → logprob: -7.388545036315918

Token 35: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.018807517364621162
    2. '<|end|>' → logprob: -4.018807411193848
    3. ')' → logprob: -8.268807411193848
    4. ',
' → logprob: -8.893807411193848
    5. '(' → logprob: -9.393807411193848
    6. '<|end|>' → logprob: -9.893807411193848
    7. ' ,' → logprob: -10.518807411193848
    8. 'import' → logprob: -10.643807411193848
    9. '```' → logprob: -11.393807411193848
    10. '(
' → logprob: -12.018807411193848

Token 36: ' acos' (ID: 185572)
  Prédit: ' acos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' acos' → logprob: -0.4359480142593384
    2. 'acos' → logprob: -1.1859480142593384
    3. 'atan' → logprob: -3.060947895050049
    4. ' radians' → logprob: -8.185948371887207
    5. ' atan' → logprob: -8.935948371887207
    6. '<|end|>' → logprob: -9.060948371887207
    7. 'cos' → logprob: -9.185948371887207
    8. 'log' → logprob: -9.685948371887207
    9. 'ac' → logprob: -9.810948371887207
    10. 'fabs' → logprob: -10.185948371887207

Token 37: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00654543936252594
    2. '<|end|>' → logprob: -5.631545543670654
    3. 'import' → logprob: -6.756545543670654
    4. ',
' → logprob: -7.131545543670654
    5. 'from' → logprob: -7.881545543670654
    6. ' ,' → logprob: -8.631545066833496
    7. '
' → logprob: -9.381545066833496
    8. '\n' → logprob: -9.631545066833496
    9. '```' → logprob: -10.256545066833496
    10. ',n' → logprob: -10.256545066833496

Token 38: ' atan' (ID: 70327)
  Prédit: 'atan'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atan' → logprob: -0.0005237233126536012
    2. ' atan' → logprob: -7.750523567199707
    3. 'log' → logprob: -9.500523567199707
    4. '```' → logprob: -11.875523567199707
    5. 'exp' → logprob: -12.250523567199707
    6. 'acos' → logprob: -13.250523567199707
    7. ' radians' → logprob: -13.375523567199707
    8. 'fabs' → logprob: -14.625523567199707
    9. '.atan' → logprob: -14.750523567199707
    10. 'r' → logprob: -14.750523567199707

Token 39: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14011764526367188
    2. '
' → logprob: -3.015117645263672
    3. '<|end|>' → logprob: -3.265117645263672
    4. ',
' → logprob: -4.515117645263672
    5. '\n' → logprob: -4.515117645263672
    6. '\' → logprob: -4.765117645263672
    7. 'import' → logprob: -5.140117645263672
    8. '' → logprob: -6.765117645263672
    9. '```' → logprob: -7.015117645263672
    10. '

' → logprob: -7.265117645263672

Token 40: ' radians' (ID: 126525)
  Prédit: 'atan'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atan' → logprob: -0.00259539601393044
    2. ' atan' → logprob: -6.2525954246521
    3. 'log' → logprob: -7.7525954246521
    4. 'degrees' → logprob: -9.127594947814941
    5. 'exp' → logprob: -10.127594947814941
    6. ' degrees' → logprob: -10.627594947814941
    7. ' radians' → logprob: -10.627594947814941
    8. 'r' → logprob: -11.127594947814941
    9. '```' → logprob: -11.377594947814941
    10. 'pow' → logprob: -12.752594947814941

Token 41: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3501549959182739
    2. '<|end|>' → logprob: -1.475154995918274
    3. '
' → logprob: -3.6001548767089844
    4. 'import' → logprob: -4.350154876708984
    5. '\n' → logprob: -4.600154876708984
    6. ',
' → logprob: -5.975154876708984
    7. '<|end|>' → logprob: -6.100154876708984
    8. '\' → logprob: -6.100154876708984
    9. '```' → logprob: -6.600154876708984
    10. ' ' → logprob: -6.725154876708984

Token 42: ' degrees' (ID: 18210)
  Prédit: 'degrees'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'degrees' → logprob: -0.34355542063713074
    2. ' degrees' → logprob: -1.5935554504394531
    3. 'atan' → logprob: -2.468555450439453
    4. 'log' → logprob: -6.218555450439453
    5. ' atan' → logprob: -8.218555450439453
    6. 'exp' → logprob: -9.218555450439453
    7. 'pow' → logprob: -9.343555450439453
    8. '```' → logprob: -9.593555450439453
    9. ' log' → logprob: -10.093555450439453
    10. 'ceil' → logprob: -10.093555450439453

Token 43: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3580009639263153
    2. '<|end|>' → logprob: -1.6080009937286377
    3. '
' → logprob: -2.6080009937286377
    4. ',
' → logprob: -4.733000755310059
    5. 'import' → logprob: -5.358000755310059
    6. '\n' → logprob: -5.483000755310059
    7. '```' → logprob: -6.358000755310059
    8. '

' → logprob: -6.483000755310059
    9. '<|end|>' → logprob: -6.733000755310059
    10. ' ,' → logprob: -6.858000755310059

Token 44: 'from' (ID: 2845)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6256071925163269
    2. '

' → logprob: -1.5006072521209717
    3. '
' → logprob: -2.5006072521209717
    4. '<|end|>' → logprob: -2.6256072521209717
    5. 'import' → logprob: -3.2506072521209717
    6. ',

' → logprob: -4.125607013702393
    7. ',
' → logprob: -4.375607013702393
    8. 'def' → logprob: -5.625607013702393
    9. '\n' → logprob: -6.000607013702393
    10. ' 

' → logprob: -6.375607013702393

Token 45: ' itertools' (ID: 103178)
  Prédit: ' itertools'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.18492987751960754
    2. 'random' → logprob: -3.059929847717285
    3. ' random' → logprob: -3.184929847717285
    4. ' os' → logprob: -3.684929847717285
    5. ' numpy' → logprob: -4.434929847717285
    6. ' functools' → logprob: -4.809929847717285
    7. 'numpy' → logprob: -5.184929847717285
    8. ' typing' → logprob: -5.434929847717285
    9. ' operator' → logprob: -5.684929847717285
    10. 'os' → logprob: -5.684929847717285

Token 46: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.02832411229610443
    2. 'import' → logprob: -4.403324127197266
    3. '.' → logprob: -4.778324127197266
    4. ' .' → logprob: -5.278324127197266
    5. ' itertools' → logprob: -6.653324127197266
    6. '.import' → logprob: -8.278324127197266
    7. '	import' → logprob: -8.653324127197266
    8. '<|end|>' → logprob: -8.778324127197266
    9. '.groupby' → logprob: -9.153324127197266
    10. 'ertools' → logprob: -9.528324127197266

Token 47: ' accumulate' (ID: 74226)
  Prédit: ' permutations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' permutations' → logprob: -0.7855760455131531
    2. ' product' → logprob: -0.9105760455131531
    3. ' chain' → logprob: -2.535576105117798
    4. ' combinations' → logprob: -3.410576105117798
    5. ' count' → logprob: -4.910575866699219
    6. ' cycle' → logprob: -5.160575866699219
    7. 'com' → logprob: -5.285575866699219
    8. ' accumulate' → logprob: -5.410575866699219
    9. ' group' → logprob: -5.910575866699219
    10. 'per' → logprob: -6.535575866699219

Token 48: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06592772901058197
    2. '<|end|>' → logprob: -3.315927743911743
    3. 'import' → logprob: -4.940927505493164
    4. ',
' → logprob: -5.190927505493164
    5. '\n' → logprob: -5.190927505493164
    6. ' ,' → logprob: -6.315927505493164
    7. '
' → logprob: -6.690927505493164
    8. 'from' → logprob: -6.690927505493164
    9. '<|end|>' → logprob: -7.065927505493164
    10. '\' → logprob: -7.065927505493164

Token 49: ' permutations' (ID: 174595)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -1.1743685007095337
    2. ' chain' → logprob: -1.6743685007095337
    3. 'product' → logprob: -2.049368381500244
    4. 'chain' → logprob: -2.174368381500244
    5. ' product' → logprob: -2.299368381500244
    6. ' permutations' → logprob: -2.799368381500244
    7. 'per' → logprob: -3.299368381500244
    8. 'group' → logprob: -3.674368381500244
    9. ' group' → logprob: -3.924368381500244
    10. ' combinations' → logprob: -5.174368381500244

Token 50: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1835937798023224
    2. '<|end|>' → logprob: -1.80859375
    3. 'import' → logprob: -6.55859375
    4. ',
' → logprob: -7.68359375
    5. '<|end|>' → logprob: -7.68359375
    6. '\n' → logprob: -8.05859375
    7. ' ,' → logprob: -8.05859375
    8. 'from' → logprob: -8.30859375
    9. ' ' → logprob: -9.05859375
    10. '
' → logprob: -9.30859375

Token 51: ' combinations' (ID: 43835)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.1766759753227234
    2. ' combinations' → logprob: -2.301676034927368
    3. 'product' → logprob: -3.426676034927368
    4. ' product' → logprob: -3.551676034927368
    5. 'chain' → logprob: -8.301675796508789
    6. ' chain' → logprob: -8.676675796508789
    7. '	com' → logprob: -9.551675796508789
    8. 'comb' → logprob: -9.926675796508789
    9. 'group' → logprob: -10.301675796508789
    10. '```' → logprob: -10.301675796508789

Token 52: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.36243000626564026
    2. '
' → logprob: -2.2374300956726074
    3. '

' → logprob: -2.3624300956726074
    4. 'import' → logprob: -2.8624300956726074
    5. ',
' → logprob: -3.9874300956726074
    6. '<|end|>' → logprob: -4.987430095672607
    7. '\n' → logprob: -5.112430095672607
    8. 'from' → logprob: -5.362430095672607
    9. 'def' → logprob: -5.737430095672607
    10. ',

' → logprob: -5.862430095672607

Token 53: ' combinations' (ID: 43835)
  Prédit: 'product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'product' → logprob: -0.20381644368171692
    2. ' product' → logprob: -1.7038164138793945
    3. 'com' → logprob: -6.5788164138793945
    4. 'chain' → logprob: -7.4538164138793945
    5. ' chain' → logprob: -8.453816413879395
    6. ' combinations' → logprob: -9.078816413879395
    7. '```' → logprob: -10.203816413879395
    8. 'group' → logprob: -10.203816413879395
    9. ' group' → logprob: -11.453816413879395
    10. 'prod' → logprob: -12.578816413879395

Token 54: '_with' (ID: 14161)
  Prédit: '_with'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_with' → logprob: -0.0033191151451319456
    2. 'with' → logprob: -5.753319263458252
    3. 'With' → logprob: -9.253318786621094
    4. '-with' → logprob: -10.878318786621094
    5. '_WITH' → logprob: -11.128318786621094
    6. '_without' → logprob: -12.753318786621094
    7. '```' → logprob: -12.753318786621094
    8. '<|end|>' → logprob: -13.378318786621094
    9. 'WITH' → logprob: -13.628318786621094

Token 55: '_re' (ID: 3067)
  Prédit: 'replacement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'replacement' → logprob: -0.006973002105951309
    2. '_re' → logprob: -5.131972789764404
    3. ' replacement' → logprob: -7.006972789764404
    4. 're' → logprob: -10.006973266601562
    5. 'replace' → logprob: -10.131973266601562
    6. 'out' → logprob: -10.631973266601562
    7. 'Replacement' → logprob: -11.506973266601562
    8. 'rep' → logprob: -11.631973266601562
    9. ' replacements' → logprob: -12.506973266601562
    10. 'in' → logprob: -13.756973266601562

Token 56: 'placement' (ID: 17947)
  Prédit: 'placement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'placement' → logprob: -0.037309277802705765
    2. 'peat' → logprob: -3.412309169769287
    3. 'place' → logprob: -5.912309169769287
    4. 'placements' → logprob: -7.912309169769287
    5. 'p' → logprob: -8.037309646606445
    6. 'pe' → logprob: -9.037309646606445
    7. 'peated' → logprob: -10.412309646606445
    8. 'petition' → logprob: -10.662309646606445
    9. ' placement' → logprob: -11.287309646606445
    10. 'plac' → logprob: -11.412309646606445

Token 57: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5833306312561035
    2. '\n' → logprob: -0.9583306312561035
    3. ',
' → logprob: -3.3333306312561035
    4. '
' → logprob: -4.7083306312561035
    5. 'import' → logprob: -5.4583306312561035
    6. '\' → logprob: -5.9583306312561035
    7. '<|end|>' → logprob: -6.5833306312561035
    8. '' → logprob: -6.7083306312561035
    9. '

' → logprob: -6.9583306312561035
    10. '```' → logprob: -7.3333306312561035

Token 58: ' product' (ID: 1888)
  Prédit: 'product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'product' → logprob: -0.03731169179081917
    2. ' product' → logprob: -3.7873117923736572
    3. 'chain' → logprob: -4.662311553955078
    4. 'group' → logprob: -5.537311553955078
    5. ' chain' → logprob: -8.412311553955078
    6. 'count' → logprob: -8.787311553955078
    7. ' group' → logprob: -9.787311553955078
    8. 'cycle' → logprob: -10.162311553955078
    9. 'zip' → logprob: -10.662311553955078
    10. 'com' → logprob: -10.662311553955078

Token 59: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3634061813354492
    2. '\n' → logprob: -1.4884061813354492
    3. '.' → logprob: -1.7384061813354492
    4. '\' → logprob: -2.113406181335449
    5. '<|end|>' → logprob: -2.488406181335449
    6. '
' → logprob: -2.738406181335449
    7. '' → logprob: -4.363406181335449
    8. '

' → logprob: -4.488406181335449
    9. '(' → logprob: -4.863406181335449
    10. ',
' → logprob: -5.113406181335449

Token 60: ' group' (ID: 3566)
  Prédit: 'chain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chain' → logprob: -0.656302273273468
    2. ' chain' → logprob: -1.4063022136688232
    3. 'group' → logprob: -1.9063022136688232
    4. ' group' → logprob: -2.7813022136688232
    5. 'count' → logprob: -5.281302452087402
    6. 'cycle' → logprob: -5.281302452087402
    7. 'st' → logprob: -5.656302452087402
    8. 'zip' → logprob: -6.031302452087402
    9. 'is' → logprob: -6.156302452087402
    10. 'filter' → logprob: -6.406302452087402

Token 61: 'by' (ID: 2345)
  Prédit: 'by'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'by' → logprob: -2.939851037808694e-05
    2. 'ing' → logprob: -11.250029563903809
    3. 'y' → logprob: -11.375029563903809
    4. 'ed' → logprob: -12.625029563903809
    5. 'b' → logprob: -13.625029563903809
    6. 'ings' → logprob: -16.125028610229492
    7. 'by's' → logprob: -16.250028610229492
    8. ' by' → logprob: -16.375028610229492
    9. 's' → logprob: -17.750028610229492
    10. 'py' → logprob: -18.000028610229492

Token 62: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.125072956085205
    2. '\n' → logprob: -1.250072956085205
    3. '<|end|>' → logprob: -1.625072956085205
    4. '
' → logprob: -2.625072956085205
    5. 'import' → logprob: -3.125072956085205
    6. '\' → logprob: -3.500072956085205
    7. '

' → logprob: -4.000072956085205
    8. '```' → logprob: -5.125072956085205
    9. '' → logprob: -5.500072956085205
    10. '<|end|>' → logprob: -5.500072956085205

Token 63: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1284171342849731
    2. ',' → logprob: -1.3784171342849731
    3. '#' → logprob: -1.8784171342849731
    4. '' → logprob: -2.8784170150756836
    5. '.' → logprob: -3.2534170150756836
    6. 'def' → logprob: -3.5034170150756836
    7. '

' → logprob: -3.6284170150756836
    8. ',
' → logprob: -4.253417015075684
    9. 'd' → logprob: -4.378417015075684
    10. '\' → logprob: -4.378417015075684

Token 64: ' operator' (ID: 11019)
  Prédit: ' functools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' functools' → logprob: -0.5062806010246277
    2. ' operator' → logprob: -1.7562806606292725
    3. ' typing' → logprob: -3.5062806606292725
    4. 'operator' → logprob: -3.5062806606292725
    5. ' heap' → logprob: -3.6312806606292725
    6. ' os' → logprob: -3.6312806606292725
    7. ' random' → logprob: -4.006280422210693
    8. 'fun' → logprob: -4.256280422210693
    9. 'os' → logprob: -4.256280422210693
    10. 'random' → logprob: -4.506280422210693

Token 65: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.02227327972650528
    2. 'import' → logprob: -4.272273063659668
    3. '<|end|>' → logprob: -5.147273063659668
    4. ' ' → logprob: -6.272273063659668
    5. '	import' → logprob: -8.522273063659668
    6. '.' → logprob: -9.647273063659668
    7. '<|end|>' → logprob: -10.522273063659668
    8. '_import' → logprob: -11.397273063659668
    9. ' as' → logprob: -11.647273063659668
    10. ' ,' → logprob: -11.647273063659668

Token 66: ' item' (ID: 2169)
  Prédit: ' item'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' item' → logprob: -0.013639887794852257
    2. ' attr' → logprob: -4.6386399269104
    3. ' ' → logprob: -6.5136399269104
    4. 'item' → logprob: -6.6386399269104
    5. ' add' → logprob: -7.3886399269104
    6. ' method' → logprob: -9.138639450073242
    7. ' import' → logprob: -9.388639450073242
    8. ' mul' → logprob: -9.513639450073242
    9. '	item' → logprob: -10.013639450073242
    10. '.item' → logprob: -10.638639450073242

Token 67: 'getter' (ID: 132812)
  Prédit: 'getter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'getter' → logprob: -0.0002624086628202349
    2. 'get' → logprob: -8.250262260437012
    3. 'getitem' → logprob: -14.500262260437012
    4. 'gett' → logprob: -15.125262260437012
    5. 'Getter' → logprob: -16.625263214111328
    6. 'attr' → logprob: -16.625263214111328
    7. 's' → logprob: -17.000263214111328
    8. 'g' → logprob: -17.250263214111328
    9. '_get' → logprob: -17.250263214111328
    10. ' getter' → logprob: -17.500263214111328

Token 68: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11652906984090805
    2. 'import' → logprob: -3.4915289878845215
    3. '
' → logprob: -3.8665289878845215
    4. '

' → logprob: -4.1165289878845215
    5. '<|end|>' → logprob: -4.3665289878845215
    6. '\n' → logprob: -4.4915289878845215
    7. 'def' → logprob: -5.3665289878845215
    8. ',
' → logprob: -5.7415289878845215
    9. '.' → logprob: -6.2415289878845215
    10. '' → logprob: -6.4915289878845215

Token 69: ' mul' (ID: 9975)
  Prédit: 'attr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'attr' → logprob: -0.09075313806533813
    2. ' attr' → logprob: -2.4657530784606934
    3. 'method' → logprob: -6.590753078460693
    4. ' method' → logprob: -9.090753555297852
    5. 'mul' → logprob: -9.590753555297852
    6. '.attr' → logprob: -10.090753555297852
    7. 'add' → logprob: -10.215753555297852
    8. '```' → logprob: -10.340753555297852
    9. '	attr' → logprob: -10.465753555297852
    10. ' ' → logprob: -10.715753555297852

Token 70: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09068258851766586
    2. '<|end|>' → logprob: -2.9656825065612793
    3. '\n' → logprob: -4.465682506561279
    4. '\' → logprob: -5.340682506561279
    5. ',
' → logprob: -5.590682506561279
    6. '
' → logprob: -5.715682506561279
    7. '' → logprob: -5.965682506561279
    8. 'import' → logprob: -5.965682506561279
    9. ' ' → logprob: -6.340682506561279
    10. '  
' → logprob: -7.465682506561279

Token 71: 'from' (ID: 2845)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.000686526298523
    2. '#' → logprob: -1.500686526298523
    3. '
' → logprob: -1.500686526298523
    4. '<|end|>' → logprob: -3.6256866455078125
    5. ',
' → logprob: -3.7506866455078125
    6. '\n' → logprob: -3.8756866455078125
    7. '' → logprob: -4.0006866455078125
    8. '.' → logprob: -4.2506866455078125
    9. '

' → logprob: -4.3756866455078125
    10. '_' → logprob: -4.3756866455078125

Token 72: ' copy' (ID: 5150)
  Prédit: ' functools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' functools' → logprob: -0.043669261038303375
    2. 'fun' → logprob: -3.1686692237854004
    3. '_fun' → logprob: -8.918669700622559
    4. ' heap' → logprob: -9.168669700622559
    5. 'heap' → logprob: -9.293669700622559
    6. 'random' → logprob: -9.418669700622559
    7. 'os' → logprob: -9.793669700622559
    8. ' random' → logprob: -9.793669700622559
    9. '_f' → logprob: -10.793669700622559
    10. '_func' → logprob: -10.918669700622559

Token 73: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.014440956525504589
    2. 'import' → logprob: -4.264441013336182
    3. ' ' → logprob: -8.764440536499023
    4. '	import' → logprob: -9.389440536499023
    5. '.deepcopy' → logprob: -11.639440536499023
    6. ' im' → logprob: -11.639440536499023
    7. ' deepcopy' → logprob: -12.139440536499023
    8. ' ' → logprob: -13.014440536499023
    9. ' importar' → logprob: -13.014440536499023
    10. ' imports' → logprob: -13.264440536499023

Token 74: ' deepcopy' (ID: 130230)
  Prédit: ' deepcopy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deepcopy' → logprob: -0.0007903324440121651
    2. '.deepcopy' → logprob: -7.875790119171143
    3. 'deep' → logprob: -8.5007905960083
    4. ' copy' → logprob: -8.6257905960083
    5. 'copy' → logprob: -10.6257905960083
    6. ' deep' → logprob: -13.3757905960083
    7. ' dee' → logprob: -13.6257905960083
    8. 'dee' → logprob: -15.1257905960083
    9. 'de' → logprob: -16.875789642333984
    10. 'deque' → logprob: -17.000789642333984

Token 75: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 76: 'from' (ID: 2845)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8430689573287964
    2. '
' → logprob: -1.0930689573287964
    3. 'def' → logprob: -2.343069076538086
    4. '

' → logprob: -2.843069076538086
    5. '' → logprob: -4.343069076538086
    6. '\n' → logprob: -4.593069076538086
    7. ',' → logprob: -4.718069076538086
    8. 'd' → logprob: -5.218069076538086
    9. 'import' → logprob: -5.343069076538086
    10. '```' → logprob: -5.468069076538086

Token 77: ' string' (ID: 1621)
  Prédit: ' functools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' functools' → logprob: -0.7282592058181763
    2. ' itertools' → logprob: -1.1032592058181763
    3. ' math' → logprob: -1.9782592058181763
    4. ' random' → logprob: -3.9782590866088867
    5. ' heap' → logprob: -4.728259086608887
    6. ' collections' → logprob: -5.228259086608887
    7. ' io' → logprob: -5.603259086608887
    8. ' typing' → logprob: -5.978259086608887
    9. ' dat' → logprob: -6.603259086608887
    10. ' pprint' → logprob: -6.603259086608887

Token 78: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.024573901668190956
    2. 'import' → logprob: -3.899573802947998
    3. '<|end|>' → logprob: -5.649573802947998
    4. ' ' → logprob: -8.274574279785156
    5. '.' → logprob: -9.024574279785156
    6. '	import' → logprob: -9.774574279785156
    7. '<|end|>' → logprob: -10.524574279785156
    8. ' im' → logprob: -11.524574279785156
    9. '```' → logprob: -11.774574279785156
    10. '  ' → logprob: -12.024574279785156

Token 79: ' ascii' (ID: 104363)
  Prédit: ' ascii'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ascii' → logprob: -0.03482174500823021
    2. 'ascii' → logprob: -3.4098217487335205
    3. ' punctuation' → logprob: -7.284821510314941
    4. ' whitespace' → logprob: -8.284821510314941
    5. ' ' → logprob: -9.034821510314941
    6. '```' → logprob: -9.909821510314941
    7. '.as' → logprob: -10.409821510314941
    8. ' Template' → logprob: -11.784821510314941
    9. ' asci' → logprob: -11.909821510314941
    10. 'as' → logprob: -12.034821510314941

Token 80: '_lower' (ID: 72335)
  Prédit: '_letters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_letters' → logprob: -0.38707196712493896
    2. '_lower' → logprob: -1.137071967124939
    3. 'letters' → logprob: -8.88707160949707
    4. '_upper' → logprob: -10.13707160949707
    5. 'lower' → logprob: -10.88707160949707
    6. '_l' → logprob: -13.13707160949707
    7. '_' → logprob: -13.26207160949707
    8. 'abcdefghijklmnopqrstuvwxyz' → logprob: -15.13707160949707
    9. 'l' → logprob: -16.13707160949707
    10. 'Lower' → logprob: -16.26207160949707

Token 81: 'case' (ID: 9994)
  Prédit: 'case'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'case' → logprob: -0.011506236158311367
    2. 'abcdefghijklmnopqrstuvwxyz' → logprob: -5.261506080627441
    3. 'ase' → logprob: -6.386506080627441
    4. 'letters' → logprob: -6.636506080627441
    5. '_letters' → logprob: -6.886506080627441
    6. 'a' → logprob: -7.136506080627441
    7. 'et' → logprob: -8.011506080627441
    8. 'abc' → logprob: -9.136506080627441
    9. 'alphabet' → logprob: -9.386506080627441
    10. 'as' → logprob: -9.636506080627441

Token 82: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6124830842018127
    2. '<|end|>' → logprob: -0.8624830842018127
    3. ',' → logprob: -4.237483024597168
    4. '

' → logprob: -5.112483024597168
    5. 'import' → logprob: -5.112483024597168
    6. '' → logprob: -5.862483024597168
    7. '\n' → logprob: -6.362483024597168
    8. '<|end|>' → logprob: -6.487483024597168
    9. '
' → logprob: -7.362483024597168
    10. '```' → logprob: -7.487483024597168

Token 83: ' ascii' (ID: 104363)
  Prédit: ' ascii'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ascii' → logprob: -0.2256535142660141
    2. 'ascii' → logprob: -1.6006535291671753
    3. ' digits' → logprob: -9.100653648376465
    4. ' whitespace' → logprob: -10.475653648376465
    5. 'digits' → logprob: -10.725653648376465
    6. ' asci' → logprob: -10.725653648376465
    7. '_ascii' → logprob: -11.100653648376465
    8. '.as' → logprob: -11.100653648376465
    9. ' punctuation' → logprob: -11.600653648376465
    10. ' ' → logprob: -12.225653648376465

Token 84: '_upper' (ID: 82658)
  Prédit: '_upper'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_upper' → logprob: -0.25864487886428833
    2. '_letters' → logprob: -1.5086448192596436
    3. '_lower' → logprob: -5.008645057678223
    4. 'uppercase' → logprob: -11.508645057678223
    5. '_' → logprob: -13.508645057678223
    6. 'letters' → logprob: -13.633645057678223
    7. '95' → logprob: -15.508645057678223
    8. '_up' → logprob: -15.508645057678223
    9. '```' → logprob: -16.883644104003906
    10. '_digits' → logprob: -17.258644104003906

Token 85: 'case' (ID: 9994)
  Prédit: 'case'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'case' → logprob: -8.180258191714529e-06
    2. 'letters' → logprob: -12.750008583068848
    3. 'abcdefghijklmnopqrstuvwxyz' → logprob: -13.125008583068848
    4. '_letters' → logprob: -13.125008583068848
    5. '_case' → logprob: -14.250008583068848
    6. 'ase' → logprob: -15.625008583068848
    7. 'cases' → logprob: -15.750008583068848
    8. '```' → logprob: -16.75000762939453
    9. 'lower' → logprob: -17.00000762939453
    10. 'alphabet' → logprob: -17.12500762939453

Token 86: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7152067422866821
    2. '<|end|>' → logprob: -1.2152067422866821
    3. '

' → logprob: -2.0902066230773926
    4. ',' → logprob: -2.8402066230773926
    5. 'import' → logprob: -4.715206623077393
    6. '' → logprob: -5.090206623077393
    7. '\n' → logprob: -5.965206623077393
    8. '#' → logprob: -6.090206623077393
    9. ' 

' → logprob: -6.340206623077393
    10. ' ' → logprob: -6.465206623077393

Token 87: ' digits' (ID: 37806)
  Prédit: ' digits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' digits' → logprob: -0.8621257543563843
    2. 'digits' → logprob: -0.8621257543563843
    3. 'ascii' → logprob: -2.487125873565674
    4. ' ascii' → logprob: -2.737125873565674
    5. ' whitespace' → logprob: -5.612125873565674
    6. ' punctuation' → logprob: -5.862125873565674
    7. 'wh' → logprob: -7.487125873565674
    8. 'string' → logprob: -9.112125396728516
    9. ' string' → logprob: -9.362125396728516
    10. '_digits' → logprob: -9.612125396728516

Token 88: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6454674601554871
    2. ',' → logprob: -1.3954675197601318
    3. '

' → logprob: -2.020467519760132
    4. '<|end|>' → logprob: -3.145467519760132
    5. '' → logprob: -4.270467281341553
    6. 'import' → logprob: -4.520467281341553
    7. '```' → logprob: -5.645467281341553
    8. '#' → logprob: -5.645467281341553
    9. '
' → logprob: -5.770467281341553
    10. ',
' → logprob: -5.770467281341553

Token 89: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8912708759307861
    2. '

' → logprob: -1.2662708759307861
    3. '<|end|>' → logprob: -1.5162708759307861
    4. ',' → logprob: -3.391270875930786
    5. '#' → logprob: -4.391270637512207
    6. 'import' → logprob: -4.516270637512207
    7. '' → logprob: -5.016270637512207
    8. '\n' → logprob: -5.391270637512207
    9. '```' → logprob: -5.641270637512207
    10. ' 

' → logprob: -5.891270637512207

Token 90: ' bis' (ID: 7204)
  Prédit: ' random'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' random' → logprob: -1.3448548316955566
    2. ' functools' → logprob: -1.4698548316955566
    3. ' keyword' → logprob: -1.5948548316955566
    4. 'random' → logprob: -2.3448548316955566
    5. 'keyword' → logprob: -2.3448548316955566
    6. 'os' → logprob: -3.7198548316955566
    7. ' typing' → logprob: -4.469854831695557
    8. ' math' → logprob: -4.844854831695557
    9. ' os' → logprob: -4.844854831695557
    10. 'fun' → logprob: -4.844854831695557

Token 91: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -2.2007883671903983e-05
    2. 'e' → logprob: -11.375021934509277
    3. 'ected' → logprob: -12.250021934509277
    4. 'ec' → logprob: -12.875021934509277
    5. 'ector' → logprob: -13.125021934509277
    6. 'ecta' → logprob: -14.875021934509277
    7. 'ects' → logprob: -15.250021934509277
    8. 'ection' → logprob: -15.500021934509277
    9. 'ectl' → logprob: -15.625021934509277
    10. 'ective' → logprob: -16.875022888183594

Token 92: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.03874644637107849
    2. 'import' → logprob: -3.9137463569641113
    3. ' ' → logprob: -4.413746356964111
    4. '.' → logprob: -5.663746356964111
    5. '_' → logprob: -6.663746356964111
    6. 'ort' → logprob: -7.788746356964111
    7. '<|end|>' → logprob: -7.788746356964111
    8. '	import' → logprob: -9.03874683380127
    9. ' ' → logprob: -9.53874683380127
    10. ' .' → logprob: -10.53874683380127

Token 93: ' bis' (ID: 7204)
  Prédit: ' bis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bis' → logprob: -0.1640269160270691
    2. 'bis' → logprob: -1.9140269756317139
    3. 'ins' → logprob: -5.664026737213135
    4. ' ins' → logprob: -8.039027214050293
    5. '	b' → logprob: -13.039027214050293
    6. 'b' → logprob: -14.539027214050293
    7. '```' → logprob: -14.539027214050293
    8. '.b' → logprob: -15.039027214050293
    9. '_ins' → logprob: -15.039027214050293
    10. 'Bis' → logprob: -15.914027214050293

Token 94: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -2.339278580620885e-06
    2. 'e' → logprob: -13.250001907348633
    3. 'ected' → logprob: -14.750001907348633
    4. 'ec' → logprob: -17.250001907348633
    5. 'sect' → logprob: -17.250001907348633
    6. 'ecta' → logprob: -17.875001907348633
    7. 'ects' → logprob: -18.375001907348633
    8. 'ex' → logprob: -18.625001907348633
    9. 'ector' → logprob: -19.500001907348633
    10. 'ection' → logprob: -19.625001907348633

Token 95: ',' (ID: 11)
  Prédit: '_left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.007834215648472309
    2. '_' → logprob: -5.382834434509277
    3. '_right' → logprob: -5.757834434509277
    4. '_
' → logprob: -10.882834434509277
    5. '_,' → logprob: -11.757834434509277
    6. ',' → logprob: -11.757834434509277
    7. '_

' → logprob: -12.257834434509277
    8. '_ins' → logprob: -12.882834434509277
    9. 'left' → logprob: -13.757834434509277
    10. ' _' → logprob: -13.757834434509277

Token 96: ' bis' (ID: 7204)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bis' → logprob: -0.5663683414459229
    2. 'ins' → logprob: -1.0663683414459229
    3. ' ins' → logprob: -2.816368341445923
    4. ' bis' → logprob: -3.566368341445923
    5. '```' → logprob: -10.066368103027344
    6. '_ins' → logprob: -11.066368103027344
    7. '.ins' → logprob: -11.441368103027344
    8. ''ins' → logprob: -12.691368103027344
    9. 'he' → logprob: -12.941368103027344
    10. 'in' → logprob: -13.566368103027344

Token 97: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.0034016903955489397
    2. 'e' → logprob: -5.878401756286621
    3. 'n' → logprob: -8.628401756286621
    4. 'sect' → logprob: -8.878401756286621
    5. 'ec' → logprob: -9.253401756286621
    6. 'ct' → logprob: -9.378401756286621
    7. 't' → logprob: -10.378401756286621
    8. 's' → logprob: -11.253401756286621
    9. 'd' → logprob: -11.628401756286621
    10. 'r' → logprob: -11.878401756286621

Token 98: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.0015262868255376816
    2. '_right' → logprob: -6.751526355743408
    3. '_' → logprob: -8.12652587890625
    4. '_le' → logprob: -9.75152587890625
    5. '_
' → logprob: -14.12652587890625
    6. '_

' → logprob: -14.75152587890625
    7. 'left' → logprob: -15.12652587890625
    8. '_l' → logprob: -15.25152587890625
    9. '_ins' → logprob: -15.87652587890625
    10. 'l' → logprob: -16.12652587890625

Token 99: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005356363253667951
    2. 'from' → logprob: -8.75053596496582
    3. '<|end|>' → logprob: -9.12553596496582
    4. ',b' → logprob: -9.25053596496582
    5. ',
' → logprob: -9.25053596496582
    6. 'import' → logprob: -10.25053596496582
    7. ' ,' → logprob: -10.87553596496582
    8. ' ' → logprob: -11.25053596496582
    9. '```' → logprob: -13.12553596496582
    10. ' from' → logprob: -13.50053596496582

Token 100: ' ins' (ID: 2215)
  Prédit: ' bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bis' → logprob: -0.4287547171115875
    2. 'bis' → logprob: -1.0537546873092651
    3. 'b' → logprob: -11.053754806518555
    4. '```' → logprob: -11.553754806518555
    5. ' ' → logprob: -11.678754806518555
    6. 'ins' → logprob: -11.678754806518555
    7. ' ins' → logprob: -12.678754806518555
    8. '	b' → logprob: -13.116254806518555
    9. '-b' → logprob: -14.616254806518555
    10. ''b' → logprob: -14.616254806518555

Token 101: 'ort' (ID: 390)
  Prédit: 'ert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ert' → logprob: -0.3923611342906952
    2. 'ort' → logprob: -1.1423611640930176
    3. '```' → logprob: -5.267361164093018
    4. 'e' → logprob: -9.26736068725586
    5. ' ert' → logprob: -10.14236068725586
    6. '``' → logprob: -10.51736068725586
    7. ' ' → logprob: -10.51736068725586
    8. 'er' → logprob: -10.89236068725586
    9. '

' → logprob: -11.14236068725586
    10. 'ерт' → logprob: -11.51736068725586

Token 102: ',' (ID: 11)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4817291498184204
    2. ',' → logprob: -1.1067291498184204
    3. '<|end|>' → logprob: -4.231729030609131
    4. '
' → logprob: -4.356729030609131
    5. '' → logprob: -5.231729030609131
    6. '_
' → logprob: -5.356729030609131
    7. 'import' → logprob: -6.106729030609131
    8. ' ' → logprob: -6.356729030609131
    9. '_,' → logprob: -6.356729030609131
    10. '  
' → logprob: -6.606729030609131

Token 103: ' ins' (ID: 2215)
  Prédit: ' bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bis' → logprob: -0.37623336911201477
    2. ' ins' → logprob: -1.3762333393096924
    3. 'bis' → logprob: -2.8762333393096924
    4. 'ins' → logprob: -5.3762335777282715
    5. '```' → logprob: -10.126233100891113
    6. 's' → logprob: -12.876233100891113
    7. '<|end|>' → logprob: -13.001233100891113
    8. ' he' → logprob: -13.001233100891113
    9. 'he' → logprob: -13.626233100891113
    10. '(ins' → logprob: -13.751233100891113

Token 104: 'ort' (ID: 390)
  Prédit: 'ort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ort' → logprob: -0.0027852654457092285
    2. 'ert' → logprob: -6.0027852058410645
    3. 'o' → logprob: -8.627785682678223
    4. 'e' → logprob: -9.502785682678223
    5. '```' → logprob: -10.377785682678223
    6. 'орт' → logprob: -12.127785682678223
    7. '
' → logprob: -12.252785682678223
    8. '**' → logprob: -13.127785682678223
    9. '

' → logprob: -13.502785682678223
    10. 's' → logprob: -13.627785682678223

Token 105: '_left' (ID: 22189)
  Prédit: '_right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -0.6041712164878845
    2. '_left' → logprob: -1.1041712760925293
    3. '_' → logprob: -2.1041712760925293
    4. 'right' → logprob: -10.979170799255371
    5. ' _' → logprob: -11.604170799255371
    6. '_

' → logprob: -12.729170799255371
    7. 'left' → logprob: -13.229170799255371
    8. '_RIGHT' → logprob: -13.479170799255371
    9. '_
' → logprob: -13.479170799255371
    10. '```' → logprob: -13.604170799255371

Token 106: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 107: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8058150410652161
    2. '<|end|>' → logprob: -1.3058149814605713
    3. '

' → logprob: -2.0558149814605713
    4. 'import' → logprob: -2.9308149814605713
    5. '#' → logprob: -3.5558149814605713
    6. ',' → logprob: -4.55581521987915
    7. '\n' → logprob: -4.68081521987915
    8. '' → logprob: -4.80581521987915
    9. ' 

' → logprob: -4.93081521987915
    10. '```' → logprob: -5.05581521987915

Token 108: ' fractions' (ID: 110523)
  Prédit: ' heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' heap' → logprob: -0.08134909719228745
    2. 'heap' → logprob: -2.8313491344451904
    3. ' functools' → logprob: -4.331348896026611
    4. ' random' → logprob: -6.206348896026611
    5. ' math' → logprob: -6.331348896026611
    6. 'random' → logprob: -7.706348896026611
    7. 'math' → logprob: -8.08134937286377
    8. ' os' → logprob: -8.45634937286377
    9. ' io' → logprob: -8.58134937286377
    10. 'io' → logprob: -8.83134937286377

Token 109: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.0451710969209671
    2. 'import' → logprob: -3.420171022415161
    3. '<|end|>' → logprob: -4.67017126083374
    4. ' ' → logprob: -6.79517126083374
    5. '	import' → logprob: -7.42017126083374
    6. '<|end|>' → logprob: -9.170170783996582
    7. '_import' → logprob: -9.295170783996582
    8. '.' → logprob: -9.920170783996582
    9. ' ' → logprob: -10.295170783996582
    10. '_' → logprob: -11.545170783996582

Token 110: ' gcd' (ID: 106918)
  Prédit: ' Fraction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Fraction' → logprob: -0.008620839565992355
    2. 'Fraction' → logprob: -4.758620738983154
    3. ' fractions' → logprob: -13.008621215820312
    4. '_fraction' → logprob: -13.883621215820312
    5. ' gcd' → logprob: -14.008621215820312
    6. '	F' → logprob: -14.633621215820312
    7. ' fraction' → logprob: -14.633621215820312
    8. ' ' → logprob: -15.133621215820312
    9. ' Fra' → logprob: -15.133621215820312
    10. '```' → logprob: -15.758621215820312

Token 111: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 112: 'from' (ID: 2845)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4261925518512726
    2. '<|end|>' → logprob: -1.5511925220489502
    3. ')' → logprob: -3.67619252204895
    4. '#' → logprob: -3.67619252204895
    5. '
' → logprob: -3.80119252204895
    6. '_' → logprob: -4.551192760467529
    7. ' as' → logprob: -4.676192760467529
    8. 'as' → logprob: -5.051192760467529
    9. ',
' → logprob: -5.051192760467529
    10. '.' → logprob: -5.301192760467529

Token 113: ' heap' (ID: 37237)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.018171953037381172
    2. ' math' → logprob: -4.018171787261963
    3. 'fun' → logprob: -12.018172264099121
    4. ' functools' → logprob: -12.018172264099121
    5. 'decimal' → logprob: -12.268172264099121
    6. 'cmath' → logprob: -13.393172264099121
    7. 'heap' → logprob: -13.893172264099121
    8. 'fra' → logprob: -14.143172264099121
    9. 'random' → logprob: -14.268172264099121
    10. 'operator' → logprob: -15.018172264099121

Token 114: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.9361264946837764e-07
    2. 'import' → logprob: -16.625
    3. 'queue' → logprob: -18.0
    4. '<|end|>' → logprob: -18.0
    5. 'n' → logprob: -18.125
    6. '_' → logprob: -18.625
    7. 'dict' → logprob: -19.0
    8. 'u' → logprob: -19.625
    9. 't' → logprob: -19.875
    10. ' queue' → logprob: -20.375

Token 115: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.017874930053949356
    2. 'import' → logprob: -4.392874717712402
    3. ' ' → logprob: -5.392874717712402
    4. '<|end|>' → logprob: -7.267874717712402
    5. '	import' → logprob: -9.392874717712402
    6. ' ' → logprob: -11.892874717712402
    7. ' im' → logprob: -12.892874717712402
    8. '_import' → logprob: -13.017874717712402
    9. '<|end|>' → logprob: -13.642874717712402
    10. '_' → logprob: -13.767874717712402

Token 116: ' he' (ID: 501)
  Prédit: ' he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' he' → logprob: -0.10866537690162659
    2. 'he' → logprob: -2.3586654663085938
    3. 'heap' → logprob: -5.358665466308594
    4. ' heap' → logprob: -5.608665466308594
    5. ' n' → logprob: -10.983665466308594
    6. '.he' → logprob: -11.733665466308594
    7. ' ' → logprob: -11.983665466308594
    8. 'nl' → logprob: -12.483665466308594
    9. 'merge' → logprob: -12.483665466308594
    10. ' merge' → logprob: -12.983665466308594

Token 117: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.16070356965065002
    2. 'ap' → logprob: -1.9107035398483276
    3. 'a' → logprob: -7.660703659057617
    4. 'aq' → logprob: -11.910703659057617
    5. 'ап' → logprob: -14.535703659057617
    6. 'q' → logprob: -14.535703659057617
    7. 'apl' → logprob: -16.035703659057617
    8. '[' → logprob: -16.535703659057617
    9. 'appen' → logprob: -16.535703659057617
    10. 'aps' → logprob: -16.660703659057617

Token 118: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.0015028368216007948
    2. 'op' → logprob: -6.501502990722656
    3. 'u' → logprob: -16.251502990722656
    4. 'push' → logprob: -16.376502990722656
    5. '[' → logprob: -16.876502990722656
    6. '```' → logprob: -16.876502990722656
    7. 'us' → logprob: -17.001502990722656
    8. 'ut' → logprob: -17.501502990722656
    9. 'p' → logprob: -17.626502990722656
    10. 'uf' → logprob: -18.126502990722656

Token 119: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14463156461715698
    2. '<|end|>' → logprob: -2.3946316242218018
    3. ' ' → logprob: -3.2696316242218018
    4. '(' → logprob: -6.269631385803223
    5. ' ,' → logprob: -6.894631385803223
    6. 'he' → logprob: -7.144631385803223
    7. ' he' → logprob: -7.769631385803223
    8. ')' → logprob: -7.769631385803223
    9. ',
' → logprob: -8.144631385803223
    10. ' 
' → logprob: -9.019631385803223

Token 120: ' he' (ID: 501)
  Prédit: ' he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' he' → logprob: -0.03367728367447853
    2. 'he' → logprob: -3.408677339553833
    3. 'heap' → logprob: -11.533677101135254
    4. '<|end|>' → logprob: -11.658677101135254
    5. ' heap' → logprob: -11.783677101135254
    6. ' ' → logprob: -13.158677101135254
    7. '.he' → logprob: -13.533677101135254
    8. '_he' → logprob: -14.158677101135254
    9. ' he'd' → logprob: -15.658677101135254
    10. ' hea' → logprob: -16.22117805480957

Token 121: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.0024799390230327845
    2. 'ap' → logprob: -6.0024800300598145
    3. 'a' → logprob: -12.752479553222656
    4. 'ап' → logprob: -14.502479553222656
    5. ' app' → logprob: -15.752479553222656
    6. '```' → logprob: -15.752479553222656
    7. '	app' → logprob: -15.877479553222656
    8. 'appen' → logprob: -16.377479553222656
    9. '(app' → logprob: -16.502479553222656
    10. '_app' → logprob: -16.877479553222656

Token 122: 'op' (ID: 467)
  Prédit: 'ush'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.28131142258644104
    2. 'op' → logprob: -1.4063113927841187
    3. '<|end|>' → logprob: -9.65631103515625
    4. 'e' → logprob: -11.03131103515625
    5. 'oard' → logprob: -11.53131103515625
    6. 'o' → logprob: -11.90631103515625
    7. 'app' → logprob: -12.03131103515625
    8. 'ust' → logprob: -12.40631103515625
    9. 'he' → logprob: -12.40631103515625
    10. 'us' → logprob: -12.53131103515625

Token 123: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 124: 'from' (ID: 2845)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 125: ' functools' (ID: 142636)
  Prédit: 'random'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'random' → logprob: -0.7251840829849243
    2. ' random' → logprob: -0.9751840829849243
    3. ' functools' → logprob: -3.1001839637756348
    4. 'math' → logprob: -4.225183963775635
    5. ' threading' → logprob: -4.475183963775635
    6. ' queue' → logprob: -4.475183963775635
    7. ' math' → logprob: -4.600183963775635
    8. ' statistics' → logprob: -5.225183963775635
    9. 'io' → logprob: -5.225183963775635
    10. 'queue' → logprob: -5.350183963775635

Token 126: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.08093284070491791
    2. 'import' → logprob: -2.580932855606079
    3. '<|end|>' → logprob: -6.9559326171875
    4. ' ' → logprob: -7.5809326171875
    5. '_import' → logprob: -8.0809326171875
    6. '	import' → logprob: -8.9559326171875
    7. '_' → logprob: -10.2059326171875
    8. '.' → logprob: -10.5809326171875
    9. 'from' → logprob: -10.8309326171875
    10. '<|end|>' → logprob: -11.2059326171875

Token 127: ' reduce' (ID: 10389)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.44985172152519226
    2. ' reduce' → logprob: -1.3248517513275146
    3. 'reduce' → logprob: -3.1998517513275146
    4. ' wraps' → logprob: -3.5748517513275146
    5. ' partial' → logprob: -4.1998515129089355
    6. 'l' → logprob: -4.5748515129089355
    7. 'partial' → logprob: -6.9498515129089355
    8. 'wrap' → logprob: -7.3248515129089355
    9. ' cmp' → logprob: -7.5748515129089355
    10. ' ' → logprob: -9.824851989746094

Token 128: '

' (ID: 279)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.029210779815912247
    2. '<|end|>' → logprob: -3.7792108058929443
    3. 'import' → logprob: -6.029210567474365
    4. ' ,' → logprob: -6.654210567474365
    5. ' ' → logprob: -7.404210567474365
    6. ',
' → logprob: -7.529210567474365
    7. ')' → logprob: -7.779210567474365
    8. '<|end|>' → logprob: -8.654211044311523
    9. ' 
' → logprob: -9.529211044311523
    10. '(' → logprob: -9.654211044311523

Token 129: 'def' (ID: 1314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8294649124145508
    2. 'def' → logprob: -1.7044649124145508
    3. '#' → logprob: -2.079464912414551
    4. ':' → logprob: -2.954464912414551
    5. '_' → logprob: -3.204464912414551
    6. '
' → logprob: -3.329464912414551
    7. ')' → logprob: -3.579464912414551
    8. ' 
' → logprob: -4.329464912414551
    9. '<|end|>' → logprob: -4.454464912414551
    10. 'import' → logprob: -4.579464912414551

Token 130: ' input' (ID: 3422)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5864107608795166
    2. '_' → logprob: -1.2114107608795166
    3. ' _' → logprob: -2.2114107608795166
    4. ' main' → logprob: -4.7114105224609375
    5. ' factorial' → logprob: -4.7114105224609375
    6. ' calculate' → logprob: -5.8364105224609375
    7. '_factor' → logprob: -5.9614105224609375
    8. ' solve' → logprob: -6.0864105224609375
    9. ' space' → logprob: -6.8364105224609375
    10. ' dfs' → logprob: -7.2114105224609375

Token 131: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.013462075032293797
    2. '(' → logprob: -4.638462066650391
    3. '()' → logprob: -5.763462066650391
    4. ' ():' → logprob: -8.01346206665039
    5. '():
' → logprob: -8.88846206665039
    6. '(prompt' → logprob: -10.51346206665039
    7. ':' → logprob: -10.88846206665039
    8. '_' → logprob: -11.63846206665039
    9. '(
' → logprob: -12.26346206665039
    10. ' ()' → logprob: -12.51346206665039

Token 132: '   ' (ID: 271)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -1.0117747783660889
    2. ' sys' → logprob: -1.2617747783660889
    3. ' ' → logprob: -1.8867747783660889
    4. ' input' → logprob: -2.136774778366089
    5. 'return' → logprob: -3.136774778366089
    6. '()' → logprob: -4.261775016784668
    7. 'input' → logprob: -4.386775016784668
    8. 'sys' → logprob: -5.136775016784668
    9. ' ()' → logprob: -6.261775016784668
    10. ' 
' → logprob: -7.386775016784668

Token 133: ' return' (ID: 622)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.10180015116930008
    2. 'sys' → logprob: -2.3518002033233643
    3. 'return' (adapté à ' return') → logprob: -7.351799964904785
    4. ' return' → logprob: -7.476799964904785
    5. 'input' → logprob: -8.851799964904785
    6. ' input' → logprob: -8.976799964904785
    7. ' ' → logprob: -9.476799964904785
    8. '	sys' → logprob: -11.101799964904785
    9. 's' → logprob: -11.851799964904785
    10. '=sys' → logprob: -12.351799964904785

Token 134: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.0015053401002660394
    2. 'sys' → logprob: -6.501505374908447
    3. ' input' → logprob: -13.126504898071289
    4. '	sys' → logprob: -14.876504898071289
    5. 'input' → logprob: -15.126504898071289
    6. ' ' → logprob: -15.376504898071289
    7. '=sys' → logprob: -16.75150489807129
    8. '(sys' → logprob: -17.62650489807129
    9. ' raw' → logprob: -18.37650489807129
    10. ' ' → logprob: -18.62650489807129

Token 135: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0007675791857764125
    2. '.stdout' → logprob: -7.625767707824707
    3. '.' → logprob: -8.250767707824707
    4. '.readline' → logprob: -12.500767707824707
    5. '.std' → logprob: -12.625767707824707
    6. ' .' → logprob: -12.875767707824707
    7. '._' → logprob: -13.125767707824707
    8. ' stdin' → logprob: -13.250767707824707
    9. 'stdin' → logprob: -13.250767707824707
    10. '.__' → logprob: -13.625767707824707

Token 136: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -3.7697225252486533e-06
    2. '.read' → logprob: -13.125003814697266
    3. '.' → logprob: -13.875003814697266
    4. ' readline' → logprob: -14.500003814697266
    5. 'read' → logprob: -15.500003814697266
    6. '.readlines' → logprob: -17.375003814697266
    7. '.buffer' → logprob: -18.125003814697266
    8. '_read' → logprob: -19.125003814697266
    9. 'buffer' → logprob: -20.500003814697266
    10. '.Read' → logprob: -21.500003814697266

Token 137: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.062000520527362823
    2. '()' → logprob: -2.8120005130767822
    3. '()
' → logprob: -11.562000274658203
    4. '(' → logprob: -11.562000274658203
    5. '.strip' → logprob: -12.062000274658203
    6. '.rstrip' → logprob: -13.062000274658203
    7. '()\' → logprob: -13.187000274658203
    8. '()

' → logprob: -13.937000274658203
    9. 'rstrip' → logprob: -14.062000274658203
    10. '()[' → logprob: -14.562000274658203

Token 138: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.023253517225384712
    2. 'rstrip' → logprob: -3.7732534408569336
    3. 'r' → logprob: -12.273253440856934
    4. ' strip' → logprob: -12.773253440856934
    5. 'replace' → logprob: -15.398253440856934
    6. 'rst' → logprob: -15.523253440856934
    7. '_strip' → logprob: -16.77325439453125
    8. 'split' → logprob: -17.39825439453125
    9. '-strip' → logprob: -17.64825439453125
    10. 'str' → logprob: -17.77325439453125

Token 139: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.022463880479335785
    2. '(' → logprob: -4.147463798522949
    3. '()
' → logprob: -6.022463798522949
    4. '()

' → logprob: -6.147463798522949
    5. '
' → logprob: -7.022463798522949
    6. '(
' → logprob: -7.397463798522949
    7. '(

' → logprob: -9.64746379852295
    8. '

' → logprob: -9.77246379852295
    9. '<|end|>' → logprob: -9.77246379852295
    10. '()\' → logprob: -10.39746379852295

Token 140: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1927769035100937
    2. '#' → logprob: -2.567776918411255
    3. '
' → logprob: -2.692776918411255
    4. 'class' → logprob: -4.442776679992676
    5. '<|end|>' → logprob: -5.942776679992676
    6. '@' → logprob: -6.067776679992676
    7. '\' → logprob: -6.192776679992676
    8. ' 
' → logprob: -6.442776679992676
    9. 'a' → logprob: -6.567776679992676
    10. '(' → logprob: -6.817776679992676

Token 141: ' INT' (ID: 20104)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.027586493641138077
    2. ' solve' → logprob: -3.7775864601135254
    3. '_' → logprob: -6.402586460113525
    4. ' map' → logprob: -7.152586460113525
    5. 'main' → logprob: -7.902586460113525
    6. '_main' → logprob: -8.777586936950684
    7. ' print' → logprob: -8.902586936950684
    8. ' ' → logprob: -9.027586936950684
    9. ' dfs' → logprob: -9.027586936950684
    10. ' factorial' → logprob: -9.027586936950684

Token 142: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.22973817586898804
    2. '()' → logprob: -1.6047382354736328
    3. ' ()' → logprob: -6.104738235473633
    4. ' (' → logprob: -7.104738235473633
    5. '[]' → logprob: -8.104738235473633
    6. '_' → logprob: -8.354738235473633
    7. '[' → logprob: -9.229738235473633
    8. ')' → logprob: -9.354738235473633
    9. ',' → logprob: -9.729738235473633
    10. '("")' → logprob: -9.979738235473633

Token 143: '   ' (ID: 271)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2595770061016083
    2. 'return' → logprob: -2.5095770359039307
    3. 'int' → logprob: -2.6345770359039307
    4. ' return' → logprob: -3.2595770359039307
    5. '(int' → logprob: -3.7595770359039307
    6. ' ()' → logprob: -4.884576797485352
    7. '(' → logprob: -6.509576797485352
    8. '():' → logprob: -6.509576797485352
    9. '=int' → logprob: -7.134576797485352
    10. '[int' → logprob: -7.759576797485352

Token 144: ' return' (ID: 622)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.388509064912796
    2. ' int' → logprob: -1.1385090351104736
    3. ' return' → logprob: -6.638509273529053
    4. 'return' (adapté à ' return') → logprob: -8.638508796691895
    5. '(int' → logprob: -9.513508796691895
    6. ' ' → logprob: -10.013508796691895
    7. '[int' → logprob: -11.138508796691895
    8. '=int' → logprob: -11.888508796691895
    9. ' map' → logprob: -12.013508796691895
    10. 'map' → logprob: -13.388508796691895

Token 145: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.003638915251940489
    2. 'int' → logprob: -5.628638744354248
    3. ' in' → logprob: -11.378639221191406
    4. '(int' → logprob: -11.378639221191406
    5. ' map' → logprob: -11.753639221191406
    6. '	int' → logprob: -12.753639221191406
    7. ' ' → logprob: -12.753639221191406
    8. '<int' → logprob: -14.003639221191406
    9. '[int' → logprob: -14.378639221191406
    10. ' ' → logprob: -15.503639221191406

Token 146: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.008620839565992355
    2. '(' → logprob: -4.758620738983154
    3. 'input' → logprob: -12.758621215820312
    4. '()' → logprob: -13.383621215820312
    5. '(
' → logprob: -13.758621215820312
    6. ' (' → logprob: -15.633621215820312
    7. '(int' → logprob: -15.883621215820312
    8. ' input' → logprob: -16.133621215820312
    9. '(inp' → logprob: -16.133621215820312
    10. '(INPUT' → logprob: -16.258621215820312

Token 147: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0005681642796844244
    2. '()' → logprob: -7.500568389892578
    3. ')' → logprob: -11.500568389892578
    4. ' ())' → logprob: -12.875568389892578
    5. '(' → logprob: -14.375568389892578
    6. '())
' → logprob: -14.500568389892578
    7. '().' → logprob: -14.625568389892578
    8. '()))' → logprob: -14.750568389892578
    9. '();)' → logprob: -15.500568389892578
    10. '())

' → logprob: -15.750568389892578

Token 148: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.017776206135749817
    2. '(' → logprob: -5.142776012420654
    3. '()' → logprob: -5.517776012420654
    4. '
' → logprob: -5.892776012420654
    5. ' def' → logprob: -6.142776012420654
    6. 's' → logprob: -7.392776012420654
    7. '\' → logprob: -7.767776012420654
    8. '_' → logprob: -7.767776012420654
    9. '(def' → logprob: -7.892776012420654
    10. '\n' → logprob: -8.392776489257812

Token 149: ' MAP' (ID: 53455)
  Prédit: 'LIST'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LIST' → logprob: -0.604503870010376
    2. ' MAP' → logprob: -1.729503870010376
    3. 'MAP' → logprob: -1.979503870010376
    4. ' LIST' → logprob: -2.229503870010376
    5. 'STR' → logprob: -4.229503631591797
    6. ' STR' → logprob: -5.854503631591797
    7. '```' → logprob: -5.979503631591797
    8. 'list' → logprob: -6.229503631591797
    9. ' map' → logprob: -6.354503631591797
    10. 'FLOAT' → logprob: -6.604503631591797

Token 150: '():
' (ID: 8595)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.11508651077747345
    2. '():' → logprob: -2.240086555480957
    3. '(' → logprob: -7.240086555480957
    4. '()>' → logprob: -7.990086555480957
    5. '().' → logprob: -8.365086555480957
    6. '()">' → logprob: -8.365086555480957
    7. '():
' → logprob: -8.740086555480957
    8. '()*' → logprob: -8.990086555480957
    9. ' ()' → logprob: -9.115086555480957
    10. '(){' → logprob: -9.240086555480957

Token 151: '   ' (ID: 271)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.588375985622406
    2. 'map' → logprob: -0.963375985622406
    3. '(map' → logprob: -3.838376045227051
    4. '()' → logprob: -3.963376045227051
    5. ' map' → logprob: -4.713376045227051
    6. 'return' → logprob: -5.213376045227051
    7. 'lambda' → logprob: -6.338376045227051
    8. ' list' → logprob: -6.463376045227051
    9. '(list' → logprob: -6.713376045227051
    10. '=list' → logprob: -6.713376045227051

Token 152: ' return' (ID: 622)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.07509700953960419
    2. 'list' → logprob: -2.82509708404541
    3. ' map' → logprob: -4.82509708404541
    4. 'return' (adapté à ' return') → logprob: -5.32509708404541
    5. ' list' → logprob: -9.20009708404541
    6. ' return' → logprob: -10.20009708404541
    7. 'lambda' → logprob: -11.70009708404541
    8. ' ' → logprob: -13.70009708404541
    9. '   ' → logprob: -13.95009708404541
    10. 'tuple' → logprob: -14.95009708404541

Token 153: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.06712820380926132
    2. 'list' → logprob: -3.0671281814575195
    3. ' map' → logprob: -4.0671281814575195
    4. ' list' → logprob: -6.6921281814575195
    5. '	map' → logprob: -14.19212818145752
    6. '(map' → logprob: -14.31712818145752
    7. ' ' → logprob: -14.56712818145752
    8. 'lambda' → logprob: -14.56712818145752
    9. 'm' → logprob: -15.56712818145752
    10. 'tuple' → logprob: -15.81712818145752

Token 154: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00034702493576332927
    2. '(' → logprob: -8.000347137451172
    3. 'int' → logprob: -11.500347137451172
    4. '<int' → logprob: -14.125347137451172
    5. '(
' → logprob: -15.250347137451172
    6. ',int' → logprob: -16.125347137451172
    7. '()' → logprob: -16.375347137451172
    8. '=int' → logprob: -17.125347137451172
    9. '[int' → logprob: -17.125347137451172
    10. ' (' → logprob: -17.375347137451172

Token 155: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10302476584911346
    2. ',input' → logprob: -2.35302472114563
    3. '(),' → logprob: -6.353024959564209
    4. ')' → logprob: -7.853024959564209
    5. ' ,' → logprob: -7.978024959564209
    6. 'input' → logprob: -8.60302448272705
    7. '()' → logprob: -9.60302448272705
    8. '(input' → logprob: -10.35302448272705
    9. '())' → logprob: -10.85302448272705
    10. '(' → logprob: -10.85302448272705

Token 156: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.25193825364112854
    2. ' input' → logprob: -1.5019382238388062
    3. ' ' → logprob: -12.001937866210938
    4. '	input' → logprob: -13.251937866210938
    5. '(input' → logprob: -14.376937866210938
    6. ')' → logprob: -15.626937866210938
    7. '   ' → logprob: -16.126937866210938
    8. ',input' → logprob: -16.251937866210938
    9. '  ' → logprob: -16.501937866210938
    10. '=input' → logprob: -16.751937866210938

Token 157: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.6240566083070007e-06
    2. '()' → logprob: -13.625001907348633
    3. ' ().' → logprob: -15.000001907348633
    4. '(' → logprob: -20.000001907348633
    5. 'split' → logprob: -20.000001907348633
    6. '.split' → logprob: -21.000001907348633
    7. '().'' → logprob: -21.375001907348633
    8. ')' → logprob: -21.625001907348633
    9. '())' → logprob: -21.750001907348633
    10. '()
' → logprob: -22.250001907348633

Token 158: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -5.88418151892256e-05
    2. 'strip' → logprob: -9.750059127807617
    3. ' split' → logprob: -15.125059127807617
    4. 'rstrip' → logprob: -16.125059127807617
    5. 'spl' → logprob: -16.125059127807617
    6. '(split' → logprob: -16.625059127807617
    7. 's' → logprob: -19.000059127807617
    8. 'plit' → logprob: -19.125059127807617
    9. 'sp' → logprob: -20.000059127807617
    10. '.split' → logprob: -20.125059127807617

Token 159: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.012716596946120262
    2. '()' → logprob: -5.262716770172119
    3. ')' → logprob: -5.512716770172119
    4. '()))' → logprob: -5.762716770172119
    5. '))' → logprob: -8.262716293334961
    6. '())
' → logprob: -11.637716293334961
    7. '(' → logprob: -12.012716293334961
    8. ' ())' → logprob: -13.262716293334961
    9. '()
' → logprob: -14.262716293334961
    10. '()))
' → logprob: -15.012716293334961

Token 160: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03843194246292114
    2. 'D' → logprob: -4.0384321212768555
    3. 'class' → logprob: -4.2884321212768555
    4. '\' → logprob: -5.9134321212768555
    5. 'N' → logprob: -7.0384321212768555
    6. 'S' → logprob: -7.1634321212768555
    7. '#' → logprob: -7.7884321212768555
    8. 'd' → logprob: -7.7884321212768555
    9. '_' → logprob: -8.038432121276855
    10. 'A' → logprob: -8.788432121276855

Token 161: ' LIST' (ID: 49854)
  Prédit: 'LIST'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LIST' → logprob: -0.011248945258557796
    2. ' LIST' → logprob: -4.51124906539917
    3. 'list' → logprob: -9.761248588562012
    4. 'S' → logprob: -10.136248588562012
    5. 'List' → logprob: -10.511248588562012
    6. 'LS' → logprob: -10.761248588562012
    7. '_LIST' → logprob: -11.136248588562012
    8. 'L' → logprob: -11.261248588562012
    9. 'STR' → logprob: -11.761248588562012
    10. 'LIN' → logprob: -12.386248588562012

Token 162: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.013518892228603363
    2. '()' → logprob: -4.388518810272217
    3. '(' → logprob: -7.013518810272217
    4. '():
' → logprob: -9.388519287109375
    5. '()>' → logprob: -12.013519287109375
    6. '()">' → logprob: -12.263519287109375
    7. '()*' → logprob: -12.888519287109375
    8. '():

' → logprob: -13.138519287109375
    9. '()[' → logprob: -13.513519287109375
    10. '();' → logprob: -13.638519287109375

Token 163: '   ' (ID: 271)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.09973927587270737
    2. 'list' → logprob: -3.2247393131256104
    3. '(list' → logprob: -4.099739074707031
    4. '(' → logprob: -4.224739074707031
    5. 'return' → logprob: -4.974739074707031
    6. ' list' → logprob: -5.849739074707031
    7. '=list' → logprob: -5.974739074707031
    8. '(int' → logprob: -6.099739074707031
    9. '(map' → logprob: -6.849739074707031
    10. '()[' → logprob: -6.974739074707031

Token 164: ' return' (ID: 622)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0030070615466684103
    2. ' list' → logprob: -6.503006935119629
    3. 'map' → logprob: -6.753006935119629
    4. 'return' (adapté à ' return') → logprob: -8.003006935119629
    5. ' map' → logprob: -13.753006935119629
    6. ' return' → logprob: -14.503006935119629
    7. 'lambda' → logprob: -15.878006935119629
    8. ':list' → logprob: -17.253007888793945
    9. '=list' → logprob: -17.878007888793945
    10. '   ' → logprob: -18.503007888793945

Token 165: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -3.547789674485102e-05
    2. ' list' → logprob: -10.500035285949707
    3. '[list' → logprob: -11.750035285949707
    4. '[' → logprob: -17.500036239624023
    5. '[int' → logprob: -18.375036239624023
    6. '(list' → logprob: -19.375036239624023
    7. '[input' → logprob: -20.625036239624023
    8. '=list' → logprob: -20.750036239624023
    9. ':list' → logprob: -21.000036239624023
    10. '	list' → logprob: -21.125036239624023

Token 166: '(map' (ID: 16946)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.436134934425354
    2. '(' → logprob: -1.186134934425354
    3. '(int' → logprob: -3.8111348152160645
    4. '(map' → logprob: -4.3111348152160645
    5. '()' → logprob: -4.4361348152160645
    6. '(M' → logprob: -8.436135292053223
    7. '(INPUT' → logprob: -9.061135292053223
    8. '(INT' → logprob: -9.186135292053223
    9. '(split' → logprob: -9.686135292053223
    10. 'input' → logprob: -9.936135292053223

Token 167: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.01824125461280346
    2. '(' → logprob: -4.0182414054870605
    3. 'int' → logprob: -10.143240928649902
    4. '<int' → logprob: -10.893240928649902
    5. ')' → logprob: -11.518240928649902
    6. '(
' → logprob: -11.643240928649902
    7. '[int' → logprob: -12.393240928649902
    8. ',int' → logprob: -12.518240928649902
    9. '(INT' → logprob: -12.893240928649902
    10. ' (' → logprob: -13.518240928649902

Token 168: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4770890474319458
    2. ',input' → logprob: -0.9770890474319458
    3. '(input' → logprob: -5.977088928222656
    4. '(),' → logprob: -7.977088928222656
    5. ' ,' → logprob: -9.727088928222656
    6. '(' → logprob: -10.352088928222656
    7. 'input' → logprob: -10.727088928222656
    8. '))' → logprob: -12.227088928222656
    9. ',int' → logprob: -12.977088928222656
    10. ',(' → logprob: -13.102088928222656

Token 169: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.31326761841773987
    2. 'input' → logprob: -1.3132675886154175
    3. ')' → logprob: -12.563267707824707
    4. '(input' → logprob: -13.313267707824707
    5. ' )' → logprob: -15.438267707824707
    6. ',input' → logprob: -15.938267707824707
    7. ' ' → logprob: -16.18826675415039
    8. '	input' → logprob: -16.43826675415039
    9. '))' → logprob: -16.56326675415039
    10. '=input' → logprob: -16.81326675415039

Token 170: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.008129963040119e-06
    2. '()))' → logprob: -13.000003814697266
    3. '()' → logprob: -14.000003814697266
    4. '))' → logprob: -14.125003814697266
    5. ')' → logprob: -16.625003814697266
    6. ' ().' → logprob: -16.750003814697266
    7. '(' → logprob: -17.375003814697266
    8. '())' → logprob: -18.000003814697266
    9. '.' → logprob: -18.750003814697266
    10. '()));' → logprob: -19.375003814697266

Token 171: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -7.195421494543552e-05
    2. ')' → logprob: -10.62507152557373
    3. 'strip' → logprob: -10.62507152557373
    4. '))' → logprob: -11.00007152557373
    5. ' split' → logprob: -12.12507152557373
    6. 'spl' → logprob: -14.37507152557373
    7. '(split' → logprob: -16.375072479248047
    8. 'rstrip' → logprob: -16.375072479248047
    9. 'sl' → logprob: -16.500072479248047
    10. '()))' → logprob: -16.500072479248047

Token 172: '()))

' (ID: 125972)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.4771462082862854
    2. '()))' → logprob: -0.9771462082862854
    3. '()' → logprob: -5.977146148681641
    4. '())' → logprob: -7.852146148681641
    5. ')' → logprob: -8.97714614868164
    6. '(' → logprob: -11.72714614868164
    7. '()))
' → logprob: -12.97714614868164
    8. '()));' → logprob: -14.10214614868164
    9. ')))' → logprob: -14.22714614868164
    10. ' ))' → logprob: -14.97714614868164

Token 173: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.005112322513014078
    2. 'class' → logprob: -5.505112171173096
    3. 'd' → logprob: -7.380112171173096
    4. '#' → logprob: -8.255112648010254
    5. '\' → logprob: -9.630112648010254
    6. 'n' → logprob: -10.505112648010254
    7. '
' → logprob: -11.255112648010254
    8. 'D' → logprob: -11.755112648010254
    9. 'ndef' → logprob: -12.505112648010254
    10. 'de' → logprob: -12.755112648010254

Token 174: ' ZIP' (ID: 81278)
  Prédit: 'STR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'STR' → logprob: -0.03995112329721451
    2. ' STR' → logprob: -4.039951324462891
    3. 'S' → logprob: -4.164951324462891
    4. 'ST' → logprob: -6.664951324462891
    5. ' S' → logprob: -6.914951324462891
    6. 'STRING' → logprob: -7.289951324462891
    7. 'YES' → logprob: -7.414951324462891
    8. ' main' → logprob: -7.539951324462891
    9. 'main' → logprob: -7.789951324462891
    10. 'print' → logprob: -8.03995132446289

Token 175: '(n' (ID: 2406)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.1273101270198822
    2. '()' → logprob: -2.252310037612915
    3. '(' → logprob: -4.252310276031494
    4. '():
' → logprob: -9.627309799194336
    5. ' ()' → logprob: -10.627309799194336
    6. '(()' → logprob: -11.627309799194336
    7. ' ():' → logprob: -11.627309799194336
    8. '()*' → logprob: -12.252309799194336
    9. '(*' → logprob: -12.377309799194336
    10. '(
' → logprob: -12.627309799194336

Token 176: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.007802041247487068
    2. '):
' → logprob: -5.2578020095825195
    3. ')' → logprob: -6.5078020095825195
    4. ',' → logprob: -6.8828020095825195
    5. ' ):' → logprob: -10.88280200958252
    6. '):
' → logprob: -11.88280200958252
    7. ',n' → logprob: -11.88280200958252
    8. '=' → logprob: -12.63280200958252
    9. 's' → logprob: -12.75780200958252
    10. ':' → logprob: -13.25780200958252

Token 177: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9486027956008911
    2. '   ' → logprob: -1.1986027956008911
    3. ':
' → logprob: -1.9486027956008911
    4. ' return' → logprob: -2.4486026763916016
    5. ' =' → logprob: -3.1986026763916016
    6. '():' → logprob: -4.573602676391602
    7. '(list' → logprob: -5.323602676391602
    8. '=' → logprob: -5.698602676391602
    9. '	return' → logprob: -5.948602676391602
    10. ' :' → logprob: -5.948602676391602

Token 178: ' return' (ID: 622)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3408575654029846
    2. ' [' → logprob: -1.9658575057983398
    3. 'return' (adapté à ' return') → logprob: -2.71585750579834
    4. '[list' → logprob: -3.71585750579834
    5. '[i' → logprob: -4.59085750579834
    6. '[item' → logprob: -4.84085750579834
    7. ' return' → logprob: -5.46585750579834
    8. 'list' → logprob: -5.46585750579834
    9. '[n' → logprob: -6.09085750579834
    10. '[line' → logprob: -6.21585750579834

Token 179: ' zip' (ID: 16216)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7468131184577942
    2. 'list' → logprob: -1.3718130588531494
    3. 'zip' → logprob: -2.3718130588531494
    4. '[list' → logprob: -2.4968130588531494
    5. ' [' → logprob: -2.8718130588531494
    6. ' zip' → logprob: -4.8718132972717285
    7. ' list' → logprob: -5.1218132972717285
    8. '[item' → logprob: -5.6218132972717285
    9. '[i' → logprob: -5.7468132972717285
    10. '[(' → logprob: -5.9968132972717285

Token 180: '(*(' (ID: 103513)
  Prédit: '(range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.05671723932027817
    2. '(*' → logprob: -3.4317171573638916
    3. '(' → logprob: -3.9317171573638916
    4. '(map' → logprob: -7.056717395782471
    5. '(*(' → logprob: -7.181717395782471
    6. '([' → logprob: -7.681717395782471
    7. '(*)' → logprob: -8.181716918945312
    8. 'range' → logprob: -8.306716918945312
    9. '((' → logprob: -8.306716918945312
    10. '(list' → logprob: -9.056716918945312

Token 181: 'MAP' (ID: 36751)
  Prédit: 'LIST'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LIST' → logprob: -0.08622745424509048
    2. 'list' → logprob: -2.7112274169921875
    3. 'input' → logprob: -4.5862274169921875
    4. '[' → logprob: -6.0862274169921875
    5. 'map' → logprob: -6.2112274169921875
    6. 'MAP' → logprob: -7.4612274169921875
    7. '[input' → logprob: -8.211227416992188
    8. '[L' → logprob: -8.836227416992188
    9. 'tuple' → logprob: -8.961227416992188
    10. '_list' → logprob: -9.461227416992188

Token 182: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0037285841535776854
    2. '())' → logprob: -5.62872838973999
    3. ' ()' → logprob: -9.503728866577148
    4. '()))' → logprob: -11.253728866577148
    5. ')' → logprob: -11.503728866577148
    6. '()
' → logprob: -11.628728866577148
    7. '(),' → logprob: -12.253728866577148
    8. '())))' → logprob: -12.878728866577148
    9. '(' → logprob: -13.003728866577148
    10. '(n' → logprob: -13.253728866577148

Token 183: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7652866840362549
    2. '()' → logprob: -1.0152866840362549
    3. ' for' → logprob: -1.7652866840362549
    4. ')' → logprob: -6.765286445617676
    5. '(n' → logprob: -9.640286445617676
    6. '	for' → logprob: -10.140286445617676
    7. 'n' → logprob: -10.640286445617676
    8. '(' → logprob: -10.765286445617676
    9. '())' → logprob: -11.015286445617676
    10. ' ()' → logprob: -11.765286445617676

Token 184: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.5762401223182678
    2. '_' → logprob: -0.8262401223182678
    3. ' range' → logprob: -8.701240539550781
    4. '_i' → logprob: -9.951240539550781
    5. ' i' → logprob: -10.701240539550781
    6. '_range' → logprob: -10.826240539550781
    7. 'range' → logprob: -10.951240539550781
    8. 'i' → logprob: -11.951240539550781
    9. '__' → logprob: -12.201240539550781
    10. ' ' → logprob: -12.826240539550781

Token 185: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.07911825180053711
    2. ' in' → logprob: -2.579118251800537
    3. 'range' → logprob: -8.454118728637695
    4. 'n' → logprob: -11.829118728637695
    5. 'i' → logprob: -12.204118728637695
    6. ')' → logprob: -14.204118728637695
    7. ' ' → logprob: -14.454118728637695
    8. '	in' → logprob: -14.579118728637695
    9. '(' → logprob: -14.704118728637695
    10. ' range' → logprob: -14.829118728637695

Token 186: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.01815146580338478
    2. ' range' → logprob: -4.01815128326416
    3. '	range' → logprob: -14.01815128326416
    4. ' ' → logprob: -15.26815128326416
    5. '(range' → logprob: -15.76815128326416
    6. 'r' → logprob: -16.143152236938477
    7. ')' → logprob: -16.768152236938477
    8. '   ' → logprob: -16.768152236938477
    9. 'rang' → logprob: -16.893152236938477
    10. '  ' → logprob: -17.393152236938477

Token 187: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -6.551721889991313e-05
    2. '(' → logprob: -10.000065803527832
    3. 'n' → logprob: -11.000065803527832
    4. '(
' → logprob: -13.000065803527832
    5. ' n' → logprob: -13.875065803527832
    6. ' (' → logprob: -16.125064849853516
    7. '	n' → logprob: -16.500064849853516
    8. ')n' → logprob: -17.250064849853516
    9. ',n' → logprob: -19.500064849853516
    10. ' ' → logprob: -19.750064849853516

Token 188: ')))

' (ID: 46526)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0019498213659971952
    2. ')))' → logprob: -6.251949787139893
    3. ')' → logprob: -11.12695026397705
    4. '))
' → logprob: -12.62695026397705
    5. '()))' → logprob: -13.12695026397705
    6. ' ))' → logprob: -14.12695026397705
    7. '))))' → logprob: -15.25195026397705
    8. ']))' → logprob: -17.126949310302734
    9. ' ' → logprob: -17.251949310302734
    10. '}))' → logprob: -17.376949310302734

Token 189: 'sys' (ID: 17324)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.005786108784377575
    2. '#' → logprob: -5.630785942077637
    3. 'class' → logprob: -7.755785942077637
    4. ')' → logprob: -7.880785942077637
    5. 'd' → logprob: -8.130785942077637
    6. 'n' → logprob: -8.380785942077637
    7. '<|end|>' → logprob: -8.755785942077637
    8. ':' → logprob: -8.880785942077637
    9. '(' → logprob: -9.005785942077637
    10. '\' → logprob: -9.755785942077637

Token 190: '.set' (ID: 1230)
  Prédit: '.exit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.exit' → logprob: -0.8868274688720703
    2. '.' → logprob: -1.1368274688720703
    3. '.stdout' → logprob: -1.8868274688720703
    4. '.stdin' → logprob: -2.2618274688720703
    5. '.argv' → logprob: -5.01182746887207
    6. '.stderr' → logprob: -5.88682746887207
    7. '.version' → logprob: -7.01182746887207
    8. '.path' → logprob: -7.13682746887207
    9. '.setdefault' → logprob: -9.01182746887207
    10. '.modules' → logprob: -10.13682746887207

Token 191: 'rec' (ID: 9285)
  Prédit: 'rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.0012555881403386593
    2. '_rec' → logprob: -7.626255512237549
    3. 'limit' → logprob: -8.126255989074707
    4. 'ursion' → logprob: -8.251255989074707
    5. 'set' → logprob: -10.001255989074707
    6. ' recursion' → logprob: -10.001255989074707
    7. '_limit' → logprob: -10.501255989074707
    8. 'ecution' → logprob: -11.626255989074707
    9. 'exit' → logprob: -12.126255989074707
    10. '_' → logprob: -12.126255989074707

Token 192: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.00037800322752445936
    2. 'limit' → logprob: -8.500377655029297
    3. 'ursive' → logprob: -9.625377655029297
    4. 'urs' → logprob: -9.750377655029297
    5. 'ur' → logprob: -10.750377655029297
    6. '_limit' → logprob: -11.125377655029297
    7. 'ursor' → logprob: -12.125377655029297
    8. 'urf' → logprob: -12.625377655029297
    9. 'urst' → logprob: -13.875377655029297
    10. 'urse' → logprob: -14.250377655029297

Token 193: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -8.77627644513268e-06
    2. '_limit' → logprob: -12.500008583068848
    3. ' limit' → logprob: -12.625008583068848
    4. 'lim' → logprob: -13.625008583068848
    5. 'depth' → logprob: -14.500008583068848
    6. 'Limit' → logprob: -16.750009536743164
    7. '(limit' → logprob: -18.875009536743164
    8. 'limits' → logprob: -19.000009536743164
    9. 'LIMIT' → logprob: -19.375009536743164
    10. '-limit' → logprob: -19.625009536743164

Token 194: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0001426346570951864
    2. '(
' → logprob: -8.875143051147461
    3. ' (' → logprob: -14.000143051147461
    4. '((' → logprob: -14.125143051147461
    5. '()' → logprob: -14.875143051147461
    6. '(

' → logprob: -14.875143051147461
    7. '(int' → logprob: -15.750143051147461
    8. '100' → logprob: -16.12514305114746
    9. '(
' → logprob: -16.25014305114746
    10. '250' → logprob: -18.75014305114746

Token 195: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0008159428252838552
    2. '100' → logprob: -7.1258158683776855
    3. '200' → logprob: -12.250816345214844
    4. '410' → logprob: -13.125816345214844
    5. '300' → logprob: -13.625816345214844
    6. 'pow' → logprob: -14.000816345214844
    7. '500' → logprob: -14.250816345214844
    8. '1' → logprob: -14.625816345214844
    9. '150' → logprob: -15.250816345214844
    10. '2' → logprob: -15.500816345214844

Token 196: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.09778730571269989
    2. '7' → logprob: -2.472787380218506
    3. '9' → logprob: -5.847787380218506
    4. '8' → logprob: -6.472787380218506
    5. '00' → logprob: -6.597787380218506
    6. '0' → logprob: -6.597787380218506
    7. '6' → logprob: -6.972787380218506
    8. '07' → logprob: -7.972787380218506
    9. '000' → logprob: -8.347786903381348
    10. '007' → logprob: -9.722786903381348

Token 197: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '7' → logprob: -0.014319810084998608
    2. '9' → logprob: -4.264319896697998
    3. '8' → logprob: -8.76431941986084
    4. '**' → logprob: -15.76431941986084
    5. '6' → logprob: -17.264320373535156
    6. '７' → logprob: -18.139320373535156
    7. '10' → logprob: -18.389320373535156
    8. '+' → logprob: -18.639320373535156
    9. '​' → logprob: -19.139320373535156
    10. '```' → logprob: -19.764320373535156

Token 198: '9' (ID: 24)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.018349992111325264
    2. '9' → logprob: -4.018350124359131
    3. '8' → logprob: -8.518349647521973
    4. '**' → logprob: -15.518349647521973
    5. '6' → logprob: -16.39335060119629
    6. '10' → logprob: -17.89335060119629
    7. '

' → logprob: -18.01835060119629
    8. '７' → logprob: -18.01835060119629
    9. '```' → logprob: -18.76835060119629
    10. '​' → logprob: -19.14335060119629

Token 199: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.981667537620524e-06
    2. ' )' → logprob: -13.250001907348633
    3. ')
' → logprob: -16.500001907348633
    4. '))' → logprob: -18.875001907348633
    5. '),' → logprob: -19.125001907348633
    6. ')

' → logprob: -19.250001907348633
    7. ')
' → logprob: -19.500001907348633
    8. ')}' → logprob: -20.250001907348633
    9. '}' → logprob: -20.375001907348633
    10. ')`' → logprob: -20.500001907348633

Token 200: 'INF' (ID: 64358)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4289666414260864
    2. '
' → logprob: -1.8039666414260864
    3. 'class' → logprob: -2.178966522216797
    4. 'n' → logprob: -3.178966522216797
    5. '

' → logprob: -4.178966522216797
    6. '\' → logprob: -5.928966522216797
    7. 'd' → logprob: -6.053966522216797
    8. '#' → logprob: -6.053966522216797
    9. '\n' → logprob: -6.553966522216797
    10. ' 
' → logprob: -6.928966522216797

Token 201: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25198042392730713
    2. '=' → logprob: -1.5019804239273071
    3. ',' → logprob: -10.501980781555176
    4. '_' → logprob: -11.876980781555176
    5. '＝' → logprob: -12.001980781555176
    6. '=int' → logprob: -12.876980781555176
    7. ' =
' → logprob: -13.126980781555176
    8. ' ' → logprob: -13.501980781555176
    9. ' ' → logprob: -13.751980781555176
    10. ')' → logprob: -14.376980781555176

Token 202: ' float' (ID: 4428)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.2550993859767914
    2. 'float' → logprob: -1.5050994157791138
    3. ' float' → logprob: -6.380099296569824
    4. ' ' → logprob: -6.630099296569824
    5. '1' → logprob: -8.880099296569824
    6. 'int' → logprob: -11.880099296569824
    7. '9' → logprob: -13.630099296569824
    8. '100' → logprob: -14.005099296569824
    9. 'pow' → logprob: -14.505099296569824
    10. '	float' → logprob: -14.630099296569824

Token 203: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.00014776040916331112
    2. '(' → logprob: -9.125147819519043
    3. ''' → logprob: -10.875147819519043
    4. '("' → logprob: -11.125147819519043
    5. ''in' → logprob: -12.375147819519043
    6. '('+' → logprob: -14.875147819519043
    7. '(in' → logprob: -16.625146865844727
    8. '()' → logprob: -16.750146865844727
    9. ''s' → logprob: -17.125146865844727
    10. '"' → logprob: -17.250146865844727

Token 204: 'inf' (ID: 22226)
  Prédit: ''in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''in' → logprob: -0.35758039355278015
    2. ''' → logprob: -1.7325804233551025
    3. 'inf' → logprob: -2.1075804233551025
    4. '"' → logprob: -7.107580184936523
    5. ''ins' → logprob: -8.732580184936523
    6. ''information' → logprob: -8.732580184936523
    7. ''inc' → logprob: -9.107580184936523
    8. ''int' → logprob: -9.357580184936523
    9. ''i' → logprob: -9.732580184936523
    10. ' inf' → logprob: -9.732580184936523

Token 205: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.038046542555093765
    2. '')' → logprob: -3.2880465984344482
    3. ' )' → logprob: -13.288046836853027
    4. '")' → logprob: -13.413046836853027
    5. ')
' → logprob: -14.538046836853027
    6. ')'' → logprob: -14.788046836853027
    7. '')
' → logprob: -15.038046836853027
    8. ')
' → logprob: -16.41304588317871
    9. '))' → logprob: -16.66304588317871
    10. '}')' → logprob: -16.78804588317871

Token 206: 'mod' (ID: 4847)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.5263137817382812
    2. 'def' → logprob: -1.0263137817382812
    3. 'mod' → logprob: -4.651313781738281
    4. 'N' → logprob: -4.651313781738281
    5. '#' → logprob: -4.901313781738281
    6. 'class' → logprob: -5.151313781738281
    7. 'DEBUG' → logprob: -5.151313781738281
    8. 'n' → logprob: -6.026313781738281
    9. 'EPS' → logprob: -6.026313781738281
    10. 'YES' → logprob: -6.651313781738281

Token 207: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2594556212425232
    2. '=' → logprob: -1.509455680847168
    3. '_' → logprob: -5.384455680847168
    4. ' ' → logprob: -6.134455680847168
    5. '<|end|>' → logprob: -8.009455680847168
    6. ',' → logprob: -9.384455680847168
    7. '1' → logprob: -10.134455680847168
    8. ' _' → logprob: -10.134455680847168
    9. '_=' → logprob: -10.634455680847168
    10. '  ' → logprob: -10.884455680847168

Token 208: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.31345996260643005
    2. '10' → logprob: -1.3134599924087524
    3. '1' → logprob: -9.063460350036621
    4. '100' → logprob: -9.438460350036621
    5. '998' → logprob: -13.188460350036621
    6. 'int' → logprob: -15.813460350036621
    7. ' ' → logprob: -16.063459396362305
    8. ' int' → logprob: -16.313459396362305
    9. ' 
' → logprob: -16.438459396362305
    10. '  ' → logprob: -16.688459396362305

Token 209: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0009049110230989754
    2. '100' → logprob: -7.5009050369262695
    3. '998' → logprob: -8.00090503692627
    4. '1' → logprob: -11.12590503692627
    5. ' ' → logprob: -13.25090503692627
    6. 'int' → logprob: -16.000904083251953
    7. '(' → logprob: -17.375904083251953
    8. '１０' → logprob: -17.500904083251953
    9. 'pow' → logprob: -18.000904083251953
    10. '999' → logprob: -18.875904083251953

Token 210: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.4756031930446625
    2. '9' → logprob: -0.9756032228469849
    3. '09' → logprob: -6.725603103637695
    4. ' ' → logprob: -9.225603103637695
    5. '+' → logprob: -9.225603103637695
    6. '000' → logprob: -10.350603103637695
    7. '```' → logprob: -10.350603103637695
    8. ' **' → logprob: -10.475603103637695
    9. '009' → logprob: -11.350603103637695
    10. '*' → logprob: -11.600603103637695

Token 211: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -3.128163257315464e-07
    2. '09' → logprob: -15.375
    3. ' ' → logprob: -20.375
    4. '+' → logprob: -20.5
    5. '９' → logprob: -21.125
    6. '```' → logprob: -21.375
    7. '
' → logprob: -22.875
    8. '_' → logprob: -23.0
    9. '009' → logprob: -23.625
    10. '0' → logprob: -24.375

Token 212: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: 0.0
    2. '09' → logprob: -18.0
    3. '９' → logprob: -21.125
    4. '```' → logprob: -23.0
    5. '+' → logprob: -23.5
    6. '10' → logprob: -24.0
    7. '18' → logprob: -24.625
    8. '
' → logprob: -25.0
    9. ' ' → logprob: -25.375
    10. '19' → logprob: -25.5

Token 213: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.002039629500359297
    2. ' +' → logprob: -6.252039432525635
    3. '7' → logprob: -9.127039909362793
    4. '+
' → logprob: -13.377039909362793
    5. '＋' → logprob: -14.627039909362793
    6. ' ' → logprob: -16.752038955688477
    7. ' plus' → logprob: -16.877038955688477
    8. '9' → logprob: -17.252038955688477
    9. ' +
' → logprob: -17.377038955688477
    10. 'plus' → logprob: -17.502038955688477

Token 214: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. '+' → logprob: -19.875
    3. ' ' → logprob: -20.0
    4. '```' → logprob: -21.125
    5. '9' → logprob: -22.125
    6. '07' → logprob: -22.375
    7. '   ' → logprob: -22.625
    8. '' → logprob: -22.875
    9. '７' → logprob: -23.0
    10. '

' → logprob: -23.0

Token 215: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. '07' → logprob: -21.5
    3. ' ' → logprob: -21.875
    4. '+' → logprob: -22.125
    5. '７' → logprob: -22.125
    6. '```' → logprob: -22.125
    7. '' → logprob: -22.75
    8. '७' → logprob: -23.75
    9. '۷' → logprob: -24.0
    10. '   ' → logprob: -24.125

Token 216: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6966535449028015
    2. '#' → logprob: -1.4466536045074463
    3. 'def' → logprob: -1.8216536045074463
    4. ':' → logprob: -3.5716536045074463
    5. '_' → logprob: -3.6966536045074463
    6. '(' → logprob: -4.071653366088867
    7. '' → logprob: -5.071653366088867
    8. ',' → logprob: -5.446653366088867
    9. '\n' → logprob: -5.696653366088867
    10. '\' → logprob: -5.821653366088867

Token 217: 'N' (ID: 45)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0529320165514946
    2. 'def' → logprob: -3.052932024002075
    3. '#' → logprob: -6.052931785583496
    4. 'n' → logprob: -6.927931785583496
    5. 'D' → logprob: -7.802931785583496
    6. 'a' → logprob: -8.552931785583496
    7. 'class' → logprob: -9.052931785583496
    8. '\' → logprob: -9.427931785583496
    9. 'c' → logprob: -9.802931785583496
    10. '.' → logprob: -10.302931785583496

Token 218: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.694585919380188
    2. ' ' → logprob: -1.194585919380188
    3. '=' → logprob: -1.694585919380188
    4. ',' → logprob: -4.444585800170898
    5. '<|end|>' → logprob: -6.569585800170898
    6. ' ,' → logprob: -7.444585800170898
    7. ')' → logprob: -8.944585800170898
    8. '.' → logprob: -9.444585800170898
    9. ' =
' → logprob: -9.694585800170898
    10. ' =)' → logprob: -10.069585800170898

Token 219: ' M' (ID: 391)
  Prédit: ' K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' K' → logprob: -1.0512042045593262
    2. 'K' → logprob: -1.1762042045593262
    3. ' M' → logprob: -1.8012042045593262
    4. 'M' → logprob: -1.8012042045593262
    5. ' ' → logprob: -4.551204204559326
    6. '_' → logprob: -8.051204681396484
    7. ' =' → logprob: -8.176204681396484
    8. '=' → logprob: -8.801204681396484
    9. 'Q' → logprob: -8.801204681396484
    10. '<|end|>' → logprob: -8.926204681396484

Token 220: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1606435775756836
    2. ' =' → logprob: -1.9106435775756836
    3. ',' → logprob: -7.785643577575684
    4. '=input' → logprob: -13.410643577575684
    5. ' ' → logprob: -14.910643577575684
    6. '＝' → logprob: -15.410643577575684
    7. '<|end|>' → logprob: -15.410643577575684
    8. '=N' → logprob: -15.660643577575684
    9. ')' → logprob: -15.785643577575684
    10. ' =
' → logprob: -15.785643577575684

Token 221: ' MAP' (ID: 53455)
  Prédit: 'MAP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MAP' → logprob: -0.18143673241138458
    2. ' MAP' → logprob: -2.681436777114868
    3. ' map' → logprob: -2.931436777114868
    4. 'map' → logprob: -3.306436777114868
    5. 'LIST' → logprob: -5.056436538696289
    6. ' LIST' → logprob: -8.181436538696289
    7. 'ZIP' → logprob: -8.431436538696289
    8. ' ' → logprob: -8.681436538696289
    9. 'list' → logprob: -9.181436538696289
    10. ' ZIP' → logprob: -9.306436538696289

Token 222: '()
' (ID: 1234)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 223: 'AB' (ID: 2912)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06490468233823776
    2. '\n' → logprob: -4.189904689788818
    3. '<|end|>' → logprob: -4.189904689788818
    4. '
' → logprob: -4.814904689788818
    5. '' → logprob: -4.939904689788818
    6. '[' → logprob: -5.439904689788818
    7. 'for' → logprob: -5.689904689788818
    8. '[]' → logprob: -5.939904689788818
    9. '  
' → logprob: -6.564904689788818
    10. '[
' → logprob: -6.814904689788818

Token 224: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.008692453615367413
    2. ' =' → logprob: -4.758692264556885
    3. '_' → logprob: -10.258692741394043
    4. '=[]' → logprob: -10.758692741394043
    5. '[]' → logprob: -12.008692741394043
    6. 's' → logprob: -12.008692741394043
    7. '_list' → logprob: -12.883692741394043
    8. ')' → logprob: -13.508692741394043
    9. ',' → logprob: -13.633692741394043
    10. '＝' → logprob: -14.133692741394043

Token 225: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.05211727321147919
    2. '[List' → logprob: -3.052117347717285
    3. '[list' → logprob: -5.802117347717285
    4. '[L' → logprob: -8.677117347717285
    5. 'LIST' → logprob: -9.052117347717285
    6. ' [' → logprob: -9.177117347717285
    7. 'list' → logprob: -9.677117347717285
    8. '[]' → logprob: -10.427117347717285
    9. 'List' → logprob: -13.052117347717285
    10. '[MAX' → logprob: -13.302117347717285

Token 226: 'LIST' (ID: 44615)
  Prédit: 'LIST'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LIST' → logprob: -0.14771372079849243
    2. 'tuple' → logprob: -2.1477136611938477
    3. 'list' → logprob: -3.8977136611938477
    4. ' tuple' → logprob: -8.397713661193848
    5. '(tuple' → logprob: -10.147713661193848
    6. ' LIST' → logprob: -12.147713661193848
    7. ' list' → logprob: -12.272713661193848
    8. '(list' → logprob: -12.772713661193848
    9. '(L' → logprob: -13.647713661193848
    10. ']' → logprob: -13.772713661193848

Token 227: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.007160392589867115
    2. '()]' → logprob: -5.007160186767578
    3. '())' → logprob: -7.757160186767578
    4. '()
' → logprob: -11.632160186767578
    5. ')' → logprob: -12.632160186767578
    6. ' ()' → logprob: -13.382160186767578
    7. '()`' → logprob: -13.882160186767578
    8. '()
' → logprob: -14.757160186767578
    9. ']()' → logprob: -14.882160186767578
    10. '(),' → logprob: -15.257160186767578

Token 228: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -2.2127087504486553e-05
    2. 'for' → logprob: -11.500021934509277
    3. '(N' → logprob: -12.625021934509277
    4. ' ()' → logprob: -13.250021934509277
    5. ')' → logprob: -13.375021934509277
    6. '(' → logprob: -13.500021934509277
    7. '()]' → logprob: -13.625021934509277
    8. '()
' → logprob: -13.750021934509277
    9. ' for' → logprob: -14.125021934509277
    10. '(M' → logprob: -14.250021934509277

Token 229: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7169879674911499
    2. ' range' → logprob: -0.7169879674911499
    3. 'range' → logprob: -3.8419880867004395
    4. ' _' → logprob: -6.7169880867004395
    5. '_range' → logprob: -7.0919880867004395
    6. '	range' → logprob: -10.216987609863281
    7. ' in' → logprob: -11.466987609863281
    8. '(range' → logprob: -11.591987609863281
    9. ' ' → logprob: -12.591987609863281
    10. 'in' → logprob: -13.091987609863281

Token 230: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.000765552744269371
    2. ' range' → logprob: -7.250765323638916
    3. 'in' → logprob: -9.875765800476074
    4. ' in' → logprob: -12.500765800476074
    5. '	range' → logprob: -15.375765800476074
    6. '(range' → logprob: -16.500764846801758
    7. '_range' → logprob: -17.000764846801758
    8. '_' → logprob: -17.000764846801758
    9. 'rang' → logprob: -17.875764846801758
    10. 'ran' → logprob: -18.125764846801758

Token 231: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.008616461418569088
    2. ' range' → logprob: -4.7586164474487305
    3. '(range' → logprob: -13.63361644744873
    4. '	range' → logprob: -14.25861644744873
    5. 'r' → logprob: -18.133617401123047
    6. 'rang' → logprob: -18.258617401123047
    7. 'ran' → logprob: -18.633617401123047
    8. ' ' → logprob: -18.883617401123047
    9. 'ra' → logprob: -18.883617401123047
    10. '.range' → logprob: -19.633617401123047

Token 232: '(N' (ID: 10564)
  Prédit: '(M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -9.849109119386412e-06
    2. '(' → logprob: -12.250009536743164
    3. '(N' → logprob: -12.625009536743164
    4. 'M' → logprob: -13.375009536743164
    5. '(m' → logprob: -17.500009536743164
    6. ' (' → logprob: -17.750009536743164
    7. '	M' → logprob: -17.875009536743164
    8. '(
' → logprob: -18.125009536743164
    9. ' M' → logprob: -18.500009536743164
    10. '(A' → logprob: -18.875009536743164

Token 233: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -3.5954712075181305e-05
    2. ')' → logprob: -10.875036239624023
    3. ']' → logprob: -11.250036239624023
    4. ' )' → logprob: -13.750036239624023
    5. '()]' → logprob: -13.750036239624023
    6. ')]
' → logprob: -14.250036239624023
    7. ')],' → logprob: -15.125036239624023
    8. '())' → logprob: -16.000036239624023
    9. '}]' → logprob: -16.000036239624023
    10. ')])' → logprob: -16.250036239624023

Token 234: 'AB' (ID: 2912)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2933502793312073
    2. '<|end|>' → logprob: -2.9183502197265625
    3. '\n' → logprob: -2.9183502197265625
    4. 'for' → logprob: -3.4183502197265625
    5. '#' → logprob: -3.9183502197265625
    6. 'A' → logprob: -3.9183502197265625
    7. '[' → logprob: -4.0433502197265625
    8. 'a' → logprob: -4.6683502197265625
    9. 'd' → logprob: -5.4183502197265625
    10. 'n' → logprob: -5.6683502197265625

Token 235: '.sort' (ID: 19551)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 236: '(key' (ID: 8932)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.014216749928891659
    2. '(key' → logprob: -4.264216899871826
    3. '(' → logprob: -10.889216423034668
    4. '(reverse' → logprob: -10.889216423034668
    5. '()
' → logprob: -11.389216423034668
    6. 'key' → logprob: -13.264216423034668
    7. '(lambda' → logprob: -14.264216423034668
    8. '()]' → logprob: -14.764216423034668
    9. '();' → logprob: -15.264216423034668
    10. '(Key' → logprob: -15.389216423034668

Token 237: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.06580416858196259
    2. '=' → logprob: -2.8158042430877686
    3. '=item' → logprob: -5.5658040046691895
    4. '=A' → logprob: -14.065804481506348
    5. '=_' → logprob: -14.815804481506348
    6. '=l' → logprob: -14.815804481506348
    7. '=
' → logprob: -14.815804481506348
    8. '=len' → logprob: -15.065804481506348
    9. '=

' → logprob: -16.31580352783203
    10. '＝' → logprob: -17.06580352783203

Token 238: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.5026901960372925
    2. 'x' → logprob: -1.0026901960372925
    3. ':' → logprob: -4.377690315246582
    4. ' lambda' → logprob: -4.877690315246582
    5. 'lambda' → logprob: -5.377690315246582
    6. 'AB' → logprob: -6.627690315246582
    7. '=lambda' → logprob: -7.502690315246582
    8. ' AB' → logprob: -7.627690315246582
    9. ' ' → logprob: -8.127690315246582
    10. ':x' → logprob: -8.377690315246582

Token 239: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.018169142305850983
    2. ':x' → logprob: -4.018168926239014
    3. ' :' → logprob: -10.893169403076172
    4. 'x' → logprob: -15.268169403076172
    5. ':
' → logprob: -15.518169403076172
    6. '[' → logprob: -17.018169403076172
    7. ':[' → logprob: -17.643169403076172
    8. '：' → logprob: -17.768169403076172
    9. ':(' → logprob: -18.268169403076172
    10. ':

' → logprob: -18.393169403076172

Token 240: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.11339560151100159
    2. ' x' → logprob: -2.2383956909179688
    3. '(x' → logprob: -7.738395690917969
    4. ' (' → logprob: -9.363395690917969
    5. '(' → logprob: -10.238395690917969
    6. '-' → logprob: -12.113395690917969
    7. ' -' → logprob: -12.488395690917969
    8. '-x' → logprob: -13.113395690917969
    9. '	x' → logprob: -13.363395690917969
    10. '(-' → logprob: -14.488395690917969

Token 241: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0052526104263961315
    2. ':' → logprob: -5.255252838134766
    3. '[-' → logprob: -11.880252838134766
    4. ':[' → logprob: -12.255252838134766
    5. '[:' → logprob: -13.130252838134766
    6. ':x' → logprob: -13.255252838134766
    7. ' [' → logprob: -14.005252838134766
    8. ' :' → logprob: -14.380252838134766
    9. ')' → logprob: -14.880252838134766
    10. '[]' → logprob: -14.880252838134766

Token 242: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.48374485969543457
    2. '0' → logprob: -1.2337448596954346
    3. 'x' → logprob: -2.9837448596954346
    4. ' ' → logprob: -3.3587448596954346
    5. ' x' → logprob: -5.6087446212768555
    6. '-' → logprob: -6.1087446212768555
    7. ':' → logprob: -7.8587446212768555
    8. '[' → logprob: -8.108744621276855
    9. ' -' → logprob: -9.108744621276855
    10. '(' → logprob: -9.483744621276855

Token 243: '])

' (ID: 21045)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.03040752187371254
    2. ')' → logprob: -3.530407428741455
    3. ')])' → logprob: -8.030407905578613
    4. ')]' → logprob: -8.530407905578613
    5. '[' → logprob: -10.530407905578613
    6. ']' → logprob: -10.780407905578613
    7. '))' → logprob: -10.780407905578613
    8. '],' → logprob: -11.280407905578613
    9. '),' → logprob: -11.405407905578613
    10. ',' → logprob: -11.530407905578613

Token 244: 'ans' (ID: 616)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.4396132230758667
    2. ':' → logprob: -1.5646132230758667
    3. ')' → logprob: -2.0646133422851562
    4. 'for' → logprob: -2.5646133422851562
    5. ']' → logprob: -2.8146133422851562
    6. ',' → logprob: -2.8146133422851562
    7. '[]' → logprob: -3.1896133422851562
    8. 'A' → logprob: -3.4396133422851562
    9. 'd' → logprob: -3.6896133422851562
    10. 'a' → logprob: -3.8146133422851562

Token 245: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1604018211364746
    2. '=' → logprob: -1.9104018211364746
    3. ' ' → logprob: -8.910402297973633
    4. ',' → logprob: -11.035402297973633
    5. '_' → logprob: -11.410402297973633
    6. '=[]' → logprob: -12.535402297973633
    7. ' =
' → logprob: -13.160402297973633
    8. ' +=' → logprob: -13.410402297973633
    9. '[' → logprob: -13.410402297973633
    10. ':' → logprob: -13.660402297973633

Token 246: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09107793867588043
    2. '[]' → logprob: -2.591078042984009
    3. ' ' → logprob: -4.84107780456543
    4. '[' → logprob: -6.96607780456543
    5. ' []' → logprob: -7.21607780456543
    6. '1' → logprob: -7.34107780456543
    7. '-' → logprob: -7.46607780456543
    8. 'float' → logprob: -8.21607780456543
    9. 'INF' → logprob: -8.34107780456543
    10. '{}' → logprob: -8.84107780456543

Token 247: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03629663959145546
    2. '[]' → logprob: -3.4112966060638428
    3. 'INF' → logprob: -7.286296844482422
    4. 'default' → logprob: -7.661296844482422
    5. 'deque' → logprob: -7.786296844482422
    6. '[' → logprob: -7.911296844482422
    7. '1' → logprob: -8.661296844482422
    8. '{}' → logprob: -9.161296844482422
    9. 'float' → logprob: -9.161296844482422
    10. 'M' → logprob: -9.911296844482422

Token 248: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13736708462238312
    2. 'for' → logprob: -3.012367010116577
    3. ',
' → logprob: -3.012367010116577
    4. '
' → logprob: -3.762367010116577
    5. ' for' → logprob: -6.012367248535156
    6. 'idx' → logprob: -6.637367248535156
    7. '' → logprob: -8.012367248535156
    8. '=' → logprob: -8.012367248535156
    9. 'd' → logprob: -8.137367248535156
    10. '
' → logprob: -8.262367248535156

Token 249: 'i' (ID: 72)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -1.4390472173690796
    2. 'd' → logprob: -1.5640472173690796
    3. 'dq' → logprob: -1.5640472173690796
    4. 'q' → logprob: -2.314047336578369
    5. 'from' → logprob: -3.064047336578369
    6. 'heap' → logprob: -3.189047336578369
    7. 'i' → logprob: -3.314047336578369
    8. 'pq' → logprob: -3.564047336578369
    9. 'for' → logprob: -3.939047336578369
    10. 'idx' → logprob: -4.314047336578369

Token 250: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10031568259000778
    2. '=' → logprob: -2.350315570831299
    3. ',' → logprob: -9.225316047668457
    4. ' ' → logprob: -11.975316047668457
    5. ' ,' → logprob: -13.225316047668457
    6. ' =
' → logprob: -14.600316047668457
    7. 'x' → logprob: -14.600316047668457
    8. ' +=' → logprob: -14.725316047668457
    9. 'n' → logprob: -15.475316047668457
    10. '0' → logprob: -15.850316047668457

Token 251: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005931997671723366
    2. ' ' → logprob: -5.130931854248047
    3. '1' → logprob: -12.880931854248047
    4. '<|end|>' → logprob: -15.880931854248047
    5. '  ' → logprob: -15.943431854248047
    6. '   ' → logprob: -16.630931854248047
    7. ' ' → logprob: -16.755931854248047
    8. '-' → logprob: -17.130931854248047
    9. '```' → logprob: -17.130931854248047
    10. '=' → logprob: -17.130931854248047

Token 252: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001617035741219297
    2. ' ' → logprob: -8.750162124633789
    3. '1' → logprob: -12.750162124633789
    4. '-' → logprob: -15.937662124633789
    5. 'M' → logprob: -18.00016212463379
    6. '```' → logprob: -18.00016212463379
    7. '  ' → logprob: -18.18766212463379
    8. '[' → logprob: -18.25016212463379
    9. 'N' → logprob: -18.25016212463379
    10. '(' → logprob: -18.31266212463379

Token 253: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5715702772140503
    2. 'while' → logprob: -1.5715702772140503
    3. ' ' → logprob: -2.94657039642334
    4. ',' → logprob: -2.94657039642334
    5. ' while' → logprob: -3.19657039642334
    6. 'for' → logprob: -3.57157039642334
    7. ' 
' → logprob: -3.82157039642334
    8. '' → logprob: -4.32157039642334
    9. '<|end|>' → logprob: -4.57157039642334
    10. ' ,' → logprob: -6.44657039642334

Token 254: 'B' (ID: 33)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.8396605849266052
    2. '
' → logprob: -1.21466064453125
    3. 'for' → logprob: -2.33966064453125
    4. ',' → logprob: -2.46466064453125
    5. ' while' → logprob: -3.58966064453125
    6. ' 
' → logprob: -3.83966064453125
    7. '0' → logprob: -4.46466064453125
    8. ' ' → logprob: -4.83966064453125
    9. '<|end|>' → logprob: -5.21466064453125
    10. '' → logprob: -5.33966064453125

Token 255: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.37630707025527954
    2. '=' → logprob: -1.5013070106506348
    3. '_sum' → logprob: -3.1263070106506348
    4. '_' → logprob: -5.001307010650635
    5. '_count' → logprob: -5.376307010650635
    6. 'sum' → logprob: -5.376307010650635
    7. '_remaining' → logprob: -5.501307010650635
    8. '=[]' → logprob: -5.626307010650635
    9. '_counter' → logprob: -5.751307010650635
    10. '_cnt' → logprob: -6.001307010650635

Token 256: ' []

' (ID: 32833)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2687106728553772
    2. '[]' → logprob: -1.6437106132507324
    3. '[' → logprob: -4.143710613250732
    4. ' ' → logprob: -4.893710613250732
    5. 'M' → logprob: -5.143710613250732
    6. ' []' → logprob: -5.268710613250732
    7. '[M' → logprob: -5.518710613250732
    8. 'deque' → logprob: -6.768710613250732
    9. ' defaultdict' → logprob: -7.268710613250732
    10. '[]
' → logprob: -7.393710613250732

Token 257: 'for' (ID: 1938)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.2835838794708252
    2. 'for' → logprob: -1.7835838794708252
    3. ')' → logprob: -3.533583879470825
    4. '<|end|>' → logprob: -3.658583879470825
    5. '[' → logprob: -5.033583641052246
    6. '0' → logprob: -5.533583641052246
    7. ' while' → logprob: -5.533583641052246
    8. ']' → logprob: -5.658583641052246
    9. '[]' → logprob: -6.408583641052246
    10. '=' → logprob: -7.283583641052246

Token 258: ' j' (ID: 441)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.09939374029636383
    2. 'a' → logprob: -2.599393844604492
    3. ' A' → logprob: -5.224393844604492
    4. ' _' → logprob: -5.349393844604492
    5. ' j' → logprob: -5.474393844604492
    6. 'A' → logprob: -5.724393844604492
    7. 'j' → logprob: -7.224393844604492
    8. ' x' → logprob: -7.599393844604492
    9. '_' → logprob: -8.599393844604492
    10. ' ab' → logprob: -8.724393844604492

Token 259: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5760071277618408
    2. ' in' → logprob: -0.8260071277618408
    3. ',' → logprob: -10.076006889343262
    4. ' ' → logprob: -11.701006889343262
    5. 'range' → logprob: -12.201006889343262
    6. '	in' → logprob: -12.451006889343262
    7. ')' → logprob: -12.951006889343262
    8. 'import' → logprob: -13.701006889343262
    9. ' ,' → logprob: -14.076006889343262
    10. ',in' → logprob: -14.576006889343262

Token 260: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.008627224713563919
    2. ' range' → logprob: -4.758627414703369
    3. '	range' → logprob: -12.758626937866211
    4. ')' → logprob: -13.008626937866211
    5. '(range' → logprob: -13.008626937866211
    6. ' ' → logprob: -13.383626937866211
    7. 'ran' → logprob: -13.633626937866211
    8. 'AB' → logprob: -14.508626937866211
    9. 'rang' → logprob: -14.758626937866211
    10. 'B' → logprob: -14.883626937866211

Token 261: '(' (ID: 7)
  Prédit: '(M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.026422683149576187
    2. '(N' → logprob: -3.6514227390289307
    3. '(' → logprob: -9.276422500610352
    4. 'M' → logprob: -10.901422500610352
    5. '(len' → logprob: -11.901422500610352
    6. 'N' → logprob: -14.151422500610352
    7. '(A' → logprob: -14.276422500610352
    8. '(B' → logprob: -14.401422500610352
    9. ' M' → logprob: -15.526422500610352
    10. '(
' → logprob: -15.651422500610352

Token 262: '1' (ID: 16)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.12694543600082397
    2. 'N' → logprob: -2.1269454956054688
    3. ' M' → logprob: -11.751945495605469
    4. 'len' → logprob: -12.376945495605469
    5. '   ' → logprob: -13.626945495605469
    6. '1' → logprob: -13.751945495605469
    7. '0' → logprob: -14.126945495605469
    8. ' N' → logprob: -14.501945495605469
    9. '	M' → logprob: -15.001945495605469
    10. 'A' → logprob: -15.626945495605469

Token 263: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00032485672272741795
    2. ' ,' → logprob: -8.375325202941895
    3. ',M' → logprob: -9.500325202941895
    4. ',N' → logprob: -11.500325202941895
    5. ',
' → logprob: -11.875325202941895
    6. ',n' → logprob: -13.625325202941895
    7. ',m' → logprob: -14.500325202941895
    8. 'M' → logprob: -15.250325202941895
    9. ',len' → logprob: -16.125324249267578
    10. ')' → logprob: -16.375324249267578

Token 264: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.0036120666190981865
    2. ' M' → logprob: -5.753612041473389
    3. 'N' → logprob: -7.753612041473389
    4. '10' → logprob: -13.628612518310547
    5. ' N' → logprob: -13.753612518310547
    6. ' ' → logprob: -14.128612518310547
    7. '   ' → logprob: -14.753612518310547
    8. 'len' → logprob: -15.128612518310547
    9. '  ' → logprob: -15.628612518310547
    10. '100' → logprob: -15.628612518310547

Token 265: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.09016924351453781
    2. ' +' → logprob: -2.4651691913604736
    3. '):' → logprob: -6.715169429779053
    4. ')' → logprob: -12.215168952941895
    5. '):
' → logprob: -12.465168952941895
    6. ' ):' → logprob: -13.090168952941895
    7. '+n' → logprob: -13.215168952941895
    8. '+i' → logprob: -14.215168952941895
    9. '1' → logprob: -14.465168952941895
    10. ',' → logprob: -14.840168952941895

Token 266: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009120595059357584
    2. ' ' → logprob: -7.000912189483643
    3. '2' → logprob: -15.000911712646484
    4. '+' → logprob: -17.125911712646484
    5. '   ' → logprob: -17.125911712646484
    6. '```' → logprob: -17.750911712646484
    7. '  ' → logprob: -18.125911712646484
    8. 'N' → logprob: -18.250911712646484
    9. ')' → logprob: -18.250911712646484
    10. '１' → logprob: -18.938411712646484

Token 267: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014036978245712817
    2. ' ' → logprob: -8.875140190124512
    3. '2' → logprob: -15.000140190124512
    4. '   ' → logprob: -17.000141143798828
    5. ')' → logprob: -17.562641143798828
    6. '+' → logprob: -17.750141143798828
    7. '  ' → logprob: -18.000141143798828
    8. '
' → logprob: -18.187641143798828
    9. '11' → logprob: -18.562641143798828
    10. '```' → logprob: -18.562641143798828

Token 268: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0007105246186256409
    2. ':' → logprob: -7.875710487365723
    3. '):
' → logprob: -8.750710487365723
    4. ')' → logprob: -9.375710487365723
    5. ' ):' → logprob: -9.375710487365723
    6. ',' → logprob: -13.250710487365723
    7. '):
' → logprob: -15.625710487365723
    8. '():' → logprob: -15.625710487365723
    9. ' :' → logprob: -15.875710487365723
    10. ']:' → logprob: -16.50071144104004

Token 269: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6969582438468933
    2. ' while' → logprob: -1.446958303451538
    3. 'while' → logprob: -2.321958303451538
    4. ' if' → logprob: -2.696958303451538
    5. '	while' → logprob: -3.446958303451538
    6. 'if' → logprob: -3.696958303451538
    7. '<|end|>' → logprob: -4.321958065032959
    8. 'B' → logprob: -4.696958065032959
    9. ' ' → logprob: -4.821958065032959
    10. '	if' → logprob: -5.571958065032959

Token 270: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.021354280412197113
    2. '   ' → logprob: -5.0213541984558105
    3. ' while' → logprob: -5.2713541984558105
    4. 'if' → logprob: -5.2713541984558105
    5. 'B' → logprob: -6.7713541984558105
    6. 'count' → logprob: -7.3963541984558105
    7. 'b' → logprob: -7.7713541984558105
    8. 'for' → logprob: -7.8963541984558105
    9. 'k' → logprob: -8.646354675292969
    10. 'w' → logprob: -8.896354675292969

Token 271: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.04304886236786842
    2. ' i' → logprob: -3.168048858642578
    3. '(i' → logprob: -10.668048858642578
    4. '	i' → logprob: -11.043048858642578
    5. 'True' → logprob: -11.668048858642578
    6. '   ' → logprob: -15.043048858642578
    7. 'j' → logprob: -15.543048858642578
    8. 'not' → logprob: -15.793048858642578
    9. '<i' → logprob: -15.793048858642578
    10. ' True' → logprob: -16.168048858642578

Token 272: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.09664063900709152
    2. '<N' → logprob: -2.5966405868530273
    3. ' <' → logprob: -4.096640586853027
    4. '<len' → logprob: -7.096640586853027
    5. '<n' → logprob: -8.971640586853027
    6. '<M' → logprob: -11.971640586853027
    7. '<Q' → logprob: -14.096640586853027
    8. '<B' → logprob: -14.096640586853027
    9. '<num' → logprob: -14.471640586853027
    10. '<size' → logprob: -14.971640586853027

Token 273: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -5.5577775128767826e-06
    2. ' N' → logprob: -12.750005722045898
    3. 'len' → logprob: -12.875005722045898
    4. '   ' → logprob: -17.1250057220459
    5. 'n' → logprob: -17.5000057220459
    6. '	N' → logprob: -18.7500057220459
    7. '
' → logprob: -19.1250057220459
    8. ' len' → logprob: -19.5000057220459
    9. ' ' → logprob: -19.8750057220459
    10. '  ' → logprob: -20.8750057220459

Token 274: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.3132658004760742
    2. ' and' → logprob: -1.3132658004760742
    3. '[' → logprob: -13.438265800476074
    4. 'a' → logprob: -14.438265800476074
    5. '   ' → logprob: -14.438265800476074
    6. ' ' → logprob: -14.688265800476074
    7. ':' → logprob: -14.938265800476074
    8. '0' → logprob: -15.563265800476074
    9. '	and' → logprob: -15.813265800476074
    10. ' a' → logprob: -16.18826675415039

Token 275: ' AB' (ID: 16520)
  Prédit: 'AB'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AB' → logprob: -0.004081485792994499
    2. ' AB' → logprob: -5.5040812492370605
    3. '_AB' → logprob: -13.254081726074219
    4. '   ' → logprob: -14.254081726074219
    5. 'ab' → logprob: -14.879081726074219
    6. ' ' → logprob: -16.62908172607422
    7. '[' → logprob: -17.00408172607422
    8. 'abs' → logprob: -17.37908172607422
    9. '(' → logprob: -17.37908172607422
    10. 'ABL' → logprob: -17.50408172607422

Token 276: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.465036105713807e-06
    2. '[' → logprob: -11.875007629394531
    3. '[j' → logprob: -14.625007629394531
    4. '[I' → logprob: -18.75000762939453
    5. ' [' → logprob: -18.87500762939453
    6. '][' → logprob: -20.00000762939453
    7. '[][' → logprob: -20.25000762939453
    8. ')[' → logprob: -20.62500762939453
    9. '[a' → logprob: -21.12500762939453
    10. '[n' → logprob: -21.12500762939453

Token 277: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.006722944788634777
    2. '][' → logprob: -5.006722927093506
    3. ')[' → logprob: -12.381723403930664
    4. ' [' → logprob: -14.256723403930664
    5. '
' → logprob: -14.381723403930664
    6. ']' → logprob: -14.506723403930664
    7. '[
' → logprob: -15.131723403930664
    8. '}[' → logprob: -15.381723403930664
    9. '[i' → logprob: -15.506723403930664
    10. '0' → logprob: -15.881723403930664

Token 278: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.676981345459353e-06
    2. '1' → logprob: -12.625005722045898
    3. ' ' → logprob: -13.375005722045898
    4. '
' → logprob: -15.312505722045898
    5. '[' → logprob: -15.500005722045898
    6. '۰' → logprob: -16.3125057220459
    7. '```' → logprob: -16.8750057220459
    8. '০' → logprob: -17.3125057220459
    9. ':' → logprob: -17.4375057220459
    10. '   ' → logprob: -17.5625057220459

Token 279: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.8262174129486084
    2. ']' → logprob: -1.3262174129486084
    3. ']==' → logprob: -2.2012174129486084
    4. '<=' → logprob: -2.3262174129486084
    5. ' ==' → logprob: -2.8262174129486084
    6. ' <=' → logprob: -3.8262174129486084
    7. ']<=' → logprob: -4.9512176513671875
    8. ')' → logprob: -8.701217651367188
    9. ')<=' → logprob: -10.076217651367188
    10. ' ]' → logprob: -10.076217651367188

Token 280: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.050292883068323135
    2. '==' → logprob: -3.17529296875
    3. ' <=' → logprob: -5.05029296875
    4. ' ==' → logprob: -7.17529296875
    5. '<' → logprob: -10.17529296875
    6. '>=' → logprob: -10.55029296875
    7. '=' → logprob: -10.92529296875
    8. ')<=' → logprob: -12.55029296875
    9. '

' → logprob: -13.17529296875
    10. ']<=' → logprob: -13.42529296875

Token 281: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0067156096920371056
    2. ' j' → logprob: -5.006715774536133
    3. '	j' → logprob: -15.506715774536133
    4. ' ' → logprob: -17.381715774536133
    5. '   ' → logprob: -18.631715774536133
    6. '
' → logprob: -20.381715774536133
    7. ':j' → logprob: -20.506715774536133
    8. '<|end|>' → logprob: -20.756715774536133
    9. '$j' → logprob: -20.881715774536133
    10. '[j' → logprob: -21.131715774536133

Token 282: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006085088476538658
    2. ':
' → logprob: -5.63108491897583
    3. ' and' → logprob: -6.13108491897583
    4. 'and' → logprob: -8.256085395812988
    5. '):' → logprob: -10.631085395812988
    6. ' :' → logprob: -12.006085395812988
    7. ':B' → logprob: -12.506085395812988
    8. ']:' → logprob: -12.756085395812988
    9. '[' → logprob: -13.131085395812988
    10. ':
' → logprob: -13.381085395812988

Token 283: '       ' (ID: 309)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.4478401839733124
    2. '   ' → logprob: -1.3228402137756348
    3. '       ' → logprob: -2.6978402137756348
    4. 'he' → logprob: -4.447840213775635
    5. ':' → logprob: -4.572840213775635
    6. ' B' → logprob: -6.197840213775635
    7. 'i' → logprob: -7.072840213775635
    8. 'ins' → logprob: -7.322840213775635
    9. ':
' → logprob: -7.697840213775635
    10. 'if' → logprob: -8.947839736938477

Token 284: ' he' (ID: 501)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.809740424156189
    2. 'he' (adapté à ' he') → logprob: -0.809740424156189
    3. 'B' → logprob: -2.3097405433654785
    4. 'ins' → logprob: -4.9347405433654785
    5. ' he' → logprob: -6.1847405433654785
    6. ' B' → logprob: -8.05974006652832
    7. 'heap' → logprob: -8.05974006652832
    8. '       ' → logprob: -9.05974006652832
    9. '```' → logprob: -9.30974006652832
    10. ' ins' → logprob: -9.43474006652832

Token 285: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.0003943304473068565
    2. 'ap' → logprob: -7.875394344329834
    3. '```' → logprob: -11.625393867492676
    4. 'a' → logprob: -12.750393867492676
    5. 'push' → logprob: -13.500393867492676
    6. 'pp' → logprob: -15.000393867492676
    7. 'p' → logprob: -16.250394821166992
    8. 'q' → logprob: -16.250394821166992
    9. '``' → logprob: -16.375394821166992
    10. '[' → logprob: -16.500394821166992

Token 286: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.00012594614236149937
    2. 'push' → logprob: -9.000125885009766
    3. 'op' → logprob: -13.250125885009766
    4. 'app' → logprob: -15.500125885009766
    5. 'us' → logprob: -15.750125885009766
    6. 'u' → logprob: -16.125125885009766
    7. 'p' → logprob: -16.500125885009766
    8. '```' → logprob: -16.500125885009766
    9. 'sh' → logprob: -16.750125885009766
    10. 'q' → logprob: -18.250125885009766

Token 287: '(B' (ID: 8409)
  Prédit: '(B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -2.2007883671903983e-05
    2. '(' → logprob: -11.125021934509277
    3. 'B' → logprob: -12.000021934509277
    4. '(A' → logprob: -14.250021934509277
    5. ',B' → logprob: -16.125022888183594
    6. '(
' → logprob: -16.250022888183594
    7. '(b' → logprob: -16.875022888183594
    8. ' B' → logprob: -17.875022888183594
    9. ',' → logprob: -18.000022888183594
    10. '	B' → logprob: -18.250022888183594

Token 288: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.9146995327901095e-05
    2. 'AB' → logprob: -11.625019073486328
    3. ' ,' → logprob: -13.000019073486328
    4. '(' → logprob: -13.250019073486328
    5. ',
' → logprob: -13.500019073486328
    6. ',[' → logprob: -13.750019073486328
    7. '),' → logprob: -13.750019073486328
    8. ',(' → logprob: -13.875019073486328
    9. ')' → logprob: -14.500019073486328
    10. '‌,' → logprob: -15.625019073486328

Token 289: ' -' (ID: 533)
  Prédit: 'AB'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AB' → logprob: -0.002864200621843338
    2. ' AB' → logprob: -5.877864360809326
    3. '-' → logprob: -10.002863883972168
    4. '(' → logprob: -12.252863883972168
    5. '_AB' → logprob: -12.252863883972168
    6. 'ab' → logprob: -13.377863883972168
    7. ' -' → logprob: -13.377863883972168
    8. '   ' → logprob: -14.877863883972168
    9. ' ' → logprob: -15.002863883972168
    10. '[' → logprob: -15.127863883972168

Token 290: 'AB' (ID: 2912)
  Prédit: 'AB'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AB' → logprob: -7.584239938296378e-06
    2. ' AB' → logprob: -11.875007629394531
    3. '_AB' → logprob: -14.750007629394531
    4. 'ab' → logprob: -16.00000762939453
    5. '[' → logprob: -17.25000762939453
    6. '   ' → logprob: -17.50000762939453
    7. '(' → logprob: -17.87500762939453
    8. 'ABB' → logprob: -19.12500762939453
    9. ' ' → logprob: -19.25000762939453
    10. 'ABC' → logprob: -19.37500762939453

Token 291: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.704273118884885e-07
    2. '[' → logprob: -14.875000953674316
    3. '[j' → logprob: -15.750000953674316
    4. 'i' → logprob: -17.125
    5. '[
' → logprob: -17.125
    6. '[A' → logprob: -17.875
    7. '[I' → logprob: -18.5
    8. ')i' → logprob: -19.0
    9. ')[' → logprob: -19.125
    10. '```' → logprob: -19.25

Token 292: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.06997212022542953
    2. '[' → logprob: -2.694972038269043
    3. ']' → logprob: -10.819972038269043
    4. ')[' → logprob: -11.944972038269043
    5. '"][' → logprob: -13.194972038269043
    6. '1' → logprob: -13.194972038269043
    7. ' ][' → logprob: -13.319972038269043
    8. '}[' → logprob: -13.319972038269043
    9. ''][' → logprob: -13.819972038269043
    10. '[i' → logprob: -15.819972038269043

Token 293: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.625001907348633
    3. '[' → logprob: -15.437501907348633
    4. '
' → logprob: -15.562501907348633
    5. '2' → logprob: -16.562501907348633
    6. ']' → logprob: -16.562501907348633
    7. '][' → logprob: -16.750001907348633
    8. '   ' → logprob: -17.187501907348633
    9. '```' → logprob: -17.562501907348633
    10. '۱' → logprob: -18.125001907348633

Token 294: '])
' (ID: 5169)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.030035680159926414
    2. ')' → logprob: -3.5300357341766357
    3. ')
' → logprob: -8.905035972595215
    4. '])
' → logprob: -9.280035972595215
    5. '))
' → logprob: -10.280035972595215
    6. ')i' → logprob: -11.655035972595215
    7. ' )
' → logprob: -11.905035972595215
    8. '])' → logprob: -13.155035972595215
    9. ')')
' → logprob: -13.280035972595215
    10. ')`
' → logprob: -13.905035972595215

Token 295: '       ' (ID: 309)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.012039575725793839
    2. '   ' → logprob: -4.762039661407471
    3. ' i' → logprob: -5.762039661407471
    4. '       ' → logprob: -8.887039184570312
    5. '	i' → logprob: -9.387039184570312
    6. ',i' → logprob: -10.887039184570312
    7. '[i' → logprob: -11.137039184570312
    8. '_i' → logprob: -12.012039184570312
    9. '
' → logprob: -13.012039184570312
    10. ',' → logprob: -13.137039184570312

Token 296: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -3.5954712075181305e-05
    2. ' i' → logprob: -10.250036239624023
    3. '   ' → logprob: -14.625036239624023
    4. '       ' → logprob: -17.625036239624023
    5. '	i' → logprob: -19.000036239624023
    6. '
' → logprob: -20.500036239624023
    7. '           ' → logprob: -23.000036239624023
    8. '_i' → logprob: -23.125036239624023
    9. '```' → logprob: -23.125036239624023
    10. '  ' → logprob: -23.375036239624023

Token 297: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.08214893937110901
    2. '+' → logprob: -2.582149028778076
    3. ' +=' → logprob: -5.832149028778076
    4. '<|end|>' → logprob: -8.332148551940918
    5. '++' → logprob: -9.957148551940918
    6. ']+=' → logprob: -11.832148551940918
    7. '+='' → logprob: -12.082148551940918
    8. ')' → logprob: -12.207148551940918
    9. '+="' → logprob: -12.332148551940918
    10. '+++' → logprob: -12.957148551940918

Token 298: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -11.875006675720215
    3. '
' → logprob: -21.50000762939453
    4. '   ' → logprob: -21.87500762939453
    5. '  ' → logprob: -22.25000762939453
    6. '```' → logprob: -22.25000762939453
    7. '１' → logprob: -23.00000762939453
    8. '<|end|>' → logprob: -23.12500762939453
    9. '۱' → logprob: -23.62500762939453
    10. ' ' → logprob: -24.68750762939453

Token 299: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '```' → logprob: -21.250001907348633
    4. '   ' → logprob: -21.500001907348633
    5. '１' → logprob: -22.000001907348633
    6. '  ' → logprob: -23.125001907348633
    7. '۱' → logprob: -23.250001907348633
    8. '<|end|>' → logprob: -23.625001907348633
    9. '১' → logprob: -23.812501907348633
    10. '१' → logprob: -23.937501907348633

Token 300: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.040518052875995636
    2. '    
' → logprob: -4.415518283843994
    3. ' if' → logprob: -4.415518283843994
    4. ' 
' → logprob: -5.290518283843994
    5. '
' → logprob: -5.665518283843994
    6. 'if' → logprob: -5.915518283843994
    7. ' while' → logprob: -6.665518283843994
    8. '<|end|>' → logprob: -7.290518283843994
    9. 'while' → logprob: -7.665518283843994
    10. ')' → logprob: -7.665518283843994

Token 301: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5551509857177734
    2. 'if' → logprob: -1.0551509857177734
    3. ' if' → logprob: -2.5551509857177734
    4. 'while' → logprob: -9.555150985717773
    5. '    
' → logprob: -9.805150985717773
    6. '
' → logprob: -11.055150985717773
    7. ' 
' → logprob: -11.305150985717773
    8. ' while' → logprob: -11.305150985717773
    9. '	if' → logprob: -11.430150985717773
    10. '```' → logprob: -12.430150985717773

Token 302: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -5.943783253314905e-05
    2. ' if' → logprob: -9.875059127807617
    3. '   ' → logprob: -11.875059127807617
    4. 'while' → logprob: -14.000059127807617
    5. 'If' → logprob: -15.750059127807617
    6. 'i' → logprob: -16.875059127807617
    7. ' ' → logprob: -17.375059127807617
    8. '    
' → logprob: -17.750059127807617
    9. '	if' → logprob: -18.750059127807617
    10. '```' → logprob: -19.625059127807617

Token 303: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.016102410852909088
    2. ' B' → logprob: -4.141102313995361
    3. ' len' → logprob: -10.39110279083252
    4. 'len' → logprob: -10.39110279083252
    5. ' not' → logprob: -12.76610279083252
    6. ' ' → logprob: -12.89110279083252
    7. 'not' → logprob: -14.26610279083252
    8. '	B' → logprob: -15.01610279083252
    9. '   ' → logprob: -16.016101837158203
    10. ' ' → logprob: -16.266101837158203

Token 304: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0020091719925403595
    2. '):' → logprob: -6.252009391784668
    3. '>:' → logprob: -10.002009391784668
    4. ':
' → logprob: -11.627009391784668
    5. ':**' → logprob: -11.877009391784668
    6. ')' → logprob: -12.502009391784668
    7. '!=' → logprob: -13.002009391784668
    8. '>' → logprob: -13.127009391784668
    9. ':not' → logprob: -13.252009391784668
    10. '<|end|>' → logprob: -13.377009391784668

Token 305: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.22438950836658478
    2. '   ' → logprob: -2.3493895530700684
    3. '       ' → logprob: -2.8493895530700684
    4. ':
' → logprob: -3.7243895530700684
    5. ',' → logprob: -4.474389553070068
    6. '):' → logprob: -5.849389553070068
    7. ')' → logprob: -5.974389553070068
    8. '    ' → logprob: -6.974389553070068
    9. '):
' → logprob: -7.099389553070068
    10. '=' → logprob: -7.599389553070068

Token 306: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.0029263533651828766
    2. ' ans' → logprob: -5.877926349639893
    3. 'v' → logprob: -9.87792682647705
    4. 'val' → logprob: -10.62792682647705
    5. '	ans' → logprob: -11.00292682647705
    6. 'a' → logprob: -11.12792682647705
    7. 'x' → logprob: -12.00292682647705
    8. '   ' → logprob: -12.75292682647705
    9. 't' → logprob: -13.87792682647705
    10. 'tmp' → logprob: -14.00292682647705

Token 307: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.5677865147590637
    2. '-=' → logprob: -0.9427865147590637
    3. ' -=' → logprob: -3.317786455154419
    4. ' +=' → logprob: -5.442786693572998
    5. '-' → logprob: -5.817786693572998
    6. '>' → logprob: -9.94278621673584
    7. '+' → logprob: -10.31778621673584
    8. '   ' → logprob: -10.69278621673584
    9. ' -' → logprob: -11.44278621673584
    10. '+-' → logprob: -11.56778621673584

Token 308: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.05539096146821976
    2. '-he' → logprob: -3.5553910732269287
    3. '-' → logprob: -4.30539083480835
    4. '-p' → logprob: -4.80539083480835
    5. '-m' → logprob: -5.93039083480835
    6. '-s' → logprob: -8.180391311645508
    7. '-h' → logprob: -9.305391311645508
    8. '-max' → logprob: -9.555391311645508
    9. '-bs' → logprob: -9.805391311645508
    10. '-num' → logprob: -10.305391311645508

Token 309: 'he' (ID: 273)
  Prédit: 'he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -6.704273118884885e-07
    2. ' he' → logprob: -14.750000953674316
    3. 'B' → logprob: -16.0
    4. 'heap' → logprob: -16.0
    5. 'ho' → logprob: -18.375
    6. 'heme' → logprob: -20.25
    7. '```' → logprob: -20.625
    8. '.he' → logprob: -21.5
    9. 'h' → logprob: -21.625
    10. '_he' → logprob: -22.125

Token 310: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.017938150092959404
    2. 'op' → logprob: -4.517938137054443
    3. 'ap' → logprob: -5.017938137054443
    4. 'q' → logprob: -8.642938613891602
    5. 'pop' → logprob: -10.517938613891602
    6. 'a' → logprob: -11.642938613891602
    7. '[' → logprob: -11.642938613891602
    8. 'pp' → logprob: -11.892938613891602
    9. '```' → logprob: -11.892938613891602
    10. 'p' → logprob: -12.642938613891602

Token 311: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -1.0280383548888494e-06
    2. 'o' → logprob: -14.000000953674316
    3. ' op' → logprob: -17.125001907348633
    4. '	op' → logprob: -17.500001907348633
    5. 'pop' → logprob: -17.875001907348633
    6. 'оп' → logprob: -18.125001907348633
    7. '   ' → logprob: -18.125001907348633
    8. '[' → logprob: -18.250001907348633
    9. 'opf' → logprob: -19.000001907348633
    10. 'ush' → logprob: -19.125001907348633

Token 312: '(B' (ID: 8409)
  Prédit: '(B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -6.659005157416686e-05
    2. '(' → logprob: -9.625066757202148
    3. '(
' → logprob: -14.625066757202148
    4. 'B' → logprob: -19.25006675720215
    5. '(

' → logprob: -19.25006675720215
    6. ' (' → logprob: -19.62506675720215
    7. '```' → logprob: -19.62506675720215
    8. '(`' → logprob: -19.87506675720215
    9. '(A' → logprob: -20.87506675720215
    10. '(
' → logprob: -21.00006675720215

Token 313: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00194565299898386
    2. ')
' → logprob: -6.251945495605469
    3. ' )' → logprob: -12.001945495605469
    4. '())' → logprob: -12.001945495605469
    5. '))' → logprob: -13.501945495605469
    6. '()' → logprob: -13.501945495605469
    7. ')
' → logprob: -13.876945495605469
    8. ')

' → logprob: -15.001945495605469
    9. ')`' → logprob: -15.126945495605469
    10. ' )
' → logprob: -16.62694549560547

Token 314: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.004615726415067911
    2. '
' → logprob: -5.504615783691406
    3. ' print' → logprob: -7.629615783691406
    4. ' 
' → logprob: -10.254615783691406
    5. '(print' → logprob: -11.879615783691406
    6. '\n' → logprob: -12.504615783691406
    7. '
' → logprob: -13.504615783691406
    8. '.print' → logprob: -14.004615783691406
    9. '```' → logprob: -14.004615783691406
    10. '<|end|>' → logprob: -14.129615783691406

Token 315: '(ans' (ID: 70054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20143204927444458
    2. '(ans' → logprob: -1.7014319896697998
    3. '('' → logprob: -11.951432228088379
    4. '("("' → logprob: -12.326432228088379
    5. '(answer' → logprob: -13.076432228088379
    6. '(a' → logprob: -13.451432228088379
    7. '(
' → logprob: -13.826432228088379
    8. '(`' → logprob: -14.576432228088379
    9. '(ord' → logprob: -14.701432228088379
    10. '()' → logprob: -15.201432228088379

Token 316: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.392202976712724e-06
    2. ' )' → logprob: -12.000006675720215
    3. ')
' → logprob: -17.2500057220459
    4. ')`' → logprob: -17.7500057220459
    5. '`)' → logprob: -18.8750057220459
    6. '))' → logprob: -19.2500057220459
    7. '()' → logprob: -19.7500057220459
    8. '')' → logprob: -19.7500057220459
    9. '())' → logprob: -19.8750057220459
    10. '）' → logprob: -20.1250057220459


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 314
Tokens correctement prédits (1ère position, stricte): 128
Tokens correctement prédits (1ère position, avec adaptation): 132
Tokens correctement prédits (top 10): 261
Précision stricte (1ère position): 40.76%
Précision adaptée (1ère position): 42.04%
Précision (top 10): 83.12%
================================================================================
