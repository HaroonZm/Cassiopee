================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:56:59
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n=int(input())
l=[int(x) for x in input().split()]
m=[]
fun = lambda a,b: abs(a-b)
acc = 0
total = sum(l)
for idx in range(n-1):
    acc += l[idx]
    m += [fun(acc, total-acc)]
print(sorted(m)[0])
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: '=int' (ID: 37431)
  → Token d'amorce (pas de prédiction)

Token 2: '(input' (ID: 10054)
  → Token d'amorce (pas de prédiction)

Token 3: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2951568067073822
    2. '(' → logprob: -1.4201568365097046
    3. '())' → logprob: -5.295156955718994
    4. '()' → logprob: -5.545156955718994
    5. '```' → logprob: -6.170156955718994
    6. '<|end|>' → logprob: -7.295156955718994
    7. '(
' → logprob: -7.670156955718994
    8. '")' → logprob: -7.920156955718994
    9. '`)' → logprob: -8.545156478881836
    10. '')' → logprob: -8.670156478881836

Token 4: 'l' (ID: 75)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6412162780761719
    2. 'for' → logprob: -1.2662162780761719
    3. 'i' → logprob: -2.766216278076172
    4. 's' → logprob: -3.016216278076172
    5. '\n' → logprob: -3.891216278076172
    6. '*' → logprob: -4.016216278076172
    7. '#' → logprob: -4.641216278076172
    8. ')' → logprob: -5.016216278076172
    9. '\' → logprob: -5.766216278076172
    10. '+' → logprob: -6.141216278076172

Token 5: '=[' (ID: 13370)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.01249117124825716
    2. '.' → logprob: -4.762491226196289
    3. 's' → logprob: -6.262491226196289
    4. '\[' → logprob: -7.137491226196289
    5. '=' → logprob: -7.512491226196289
    6. 'i' → logprob: -8.762491226196289
    7. '[:]' → logprob: -9.512491226196289
    8. '[i' → logprob: -9.637491226196289
    9. 'ist' → logprob: -9.637491226196289
    10. '[]' → logprob: -10.012491226196289

Token 6: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.5442620515823364
    2. ']' → logprob: -1.2942620515823364
    3. '0' → logprob: -2.169261932373047
    4. 'i' → logprob: -4.544261932373047
    5. ')' → logprob: -4.544261932373047
    6. ']int' → logprob: -5.044261932373047
    7. 'input' → logprob: -7.044261932373047
    8. ' ' → logprob: -7.169261932373047
    9. ' ]' → logprob: -7.794261932373047
    10. '])' → logprob: -7.919261932373047

Token 7: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.049292080104351044
    2. '(input' → logprob: -3.0492920875549316
    3. '(x' → logprob: -7.674292087554932
    4. '(i' → logprob: -9.424291610717773
    5. '()' → logprob: -9.799291610717773
    6. '(a' → logprob: -10.424291610717773
    7. '()]' → logprob: -10.549291610717773
    8. ']' → logprob: -11.424291610717773
    9. ' (' → logprob: -12.299291610717773
    10. ')' → logprob: -12.424291610717773

Token 8: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008089198730885983
    2. '(input' → logprob: -5.008089065551758
    3. ')]' → logprob: -7.633089065551758
    4. '(x' → logprob: -7.883089065551758
    5. '())' → logprob: -8.383089065551758
    6. 'input' → logprob: -9.133089065551758
    7. '(' → logprob: -10.008089065551758
    8. ' )' → logprob: -10.383089065551758
    9. ')])' → logprob: -10.383089065551758
    10. 'for' → logprob: -11.633089065551758

Token 9: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.302634060382843
    2. ' for' → logprob: -1.9276340007781982
    3. ')' → logprob: -2.1776340007781982
    4. '(x' → logprob: -6.427634239196777
    5. '(input' → logprob: -8.052634239196777
    6. '(' → logprob: -8.427634239196777
    7. 'x' → logprob: -10.177634239196777
    8. ' )' → logprob: -10.302634239196777
    9. 'input' → logprob: -10.802634239196777
    10. ')]' → logprob: -10.927634239196777

Token 10: ' x' (ID: 1215)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.030532635748386383
    2. 'input' → logprob: -3.6555325984954834
    3. '(input' → logprob: -5.7805328369140625
    4. '<|end|>' → logprob: -7.6555328369140625
    5. ' range' → logprob: -8.655532836914062
    6. ' ' → logprob: -8.655532836914062
    7. '=input' → logprob: -8.780532836914062
    8. '<|end|>' → logprob: -9.905532836914062
    9. '_input' → logprob: -10.530532836914062
    10. 'range' → logprob: -10.905532836914062

Token 11: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.28131017088890076
    2. 'in' → logprob: -1.4063102006912231
    3. 'input' → logprob: -9.531310081481934
    4. ' ' → logprob: -10.406310081481934
    5. '(input' → logprob: -11.656310081481934
    6. 'n' → logprob: -11.906310081481934
    7. 'range' → logprob: -12.156310081481934
    8. '	in' → logprob: -12.156310081481934
    9. ')' → logprob: -12.406310081481934
    10. '<|end|>' → logprob: -12.781310081481934

Token 12: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.06197015196084976
    2. ' input' → logprob: -2.8119702339172363
    3. '(input' → logprob: -13.061969757080078
    4. 'range' → logprob: -14.811969757080078
    5. ' range' → logprob: -17.561969757080078
    6. '=input' → logprob: -17.686969757080078
    7. '<input' → logprob: -18.561969757080078
    8. ',input' → logprob: -19.186969757080078
    9. ' ' → logprob: -19.311969757080078
    10. '(' → logprob: -19.561969757080078

Token 13: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.28038710355758667
    2. '().' → logprob: -2.0303871631622314
    3. '()]' → logprob: -2.2803871631622314
    4. '())' → logprob: -4.530386924743652
    5. '()].' → logprob: -9.530386924743652
    6. '(' → logprob: -9.655386924743652
    7. '()][' → logprob: -10.780386924743652
    8. '()))' → logprob: -12.530386924743652
    9. '()>' → logprob: -12.530386924743652
    10. '());' → logprob: -12.655386924743652

Token 14: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0001717166742309928
    2. 'strip' → logprob: -8.750171661376953
    3. 'rstrip' → logprob: -11.250171661376953
    4. ' split' → logprob: -15.375171661376953
    5. '(split' → logprob: -18.000171661376953
    6. 'spl' → logprob: -18.125171661376953
    7. 'replace' → logprob: -20.500171661376953
    8. 's' → logprob: -20.625171661376953
    9. '.split' → logprob: -20.875171661376953
    10. 'sp' → logprob: -21.500171661376953

Token 15: '()]
' (ID: 67155)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.384755402803421
    2. '())' → logprob: -1.3847553730010986
    3. '()' → logprob: -3.3847553730010986
    4. '(' → logprob: -3.3847553730010986
    5. ')]' → logprob: -7.009755611419678
    6. '('' → logprob: -9.00975513458252
    7. ')' → logprob: -9.38475513458252
    8. ']' → logprob: -10.13475513458252
    9. '')]' → logprob: -11.38475513458252
    10. '()][' → logprob: -11.88475513458252

Token 16: 'm' (ID: 76)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3603774309158325
    2. 'c' → logprob: -2.735377311706543
    3. '#' → logprob: -2.985377311706543
    4. 'r' → logprob: -3.235377311706543
    5. 'l' → logprob: -3.485377311706543
    6. ']' → logprob: -3.485377311706543
    7. 'a' → logprob: -4.110377311706543
    8. ')' → logprob: -4.360377311706543
    9. 'd' → logprob: -4.735377311706543
    10. 'n' → logprob: -4.985377311706543

Token 17: '=[]
' (ID: 63466)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.007791278418153524
    2. '[a' → logprob: -5.632791042327881
    3. 'ax' → logprob: -6.507791042327881
    4. '.a' → logprob: -6.882791042327881
    5. '.' → logprob: -7.132791042327881
    6. '[' → logprob: -7.632791042327881
    7. '_a' → logprob: -8.882791519165039
    8. '=a' → logprob: -9.382791519165039
    9. '=' → logprob: -9.757791519165039
    10. 'o' → logprob: -11.007791519165039

Token 18: 'fun' (ID: 18142)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.024632984772324562
    2. 'f' → logprob: -3.8996329307556152
    3. ' for' → logprob: -6.399632930755615
    4. 'i' → logprob: -6.774632930755615
    5. 'c' → logprob: -7.274632930755615
    6. '_' → logprob: -8.274633407592773
    7. 's' → logprob: -8.899633407592773
    8. 'd' → logprob: -10.024633407592773
    9. 'l' → logprob: -10.649633407592773
    10. 'k' → logprob: -10.899633407592773

Token 19: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.28688517212867737
    2. 'c' → logprob: -1.411885142326355
    3. '()' → logprob: -5.2868852615356445
    4. 'ction' → logprob: -7.9118852615356445
    5. 'ct' → logprob: -9.036885261535645
    6. 's' → logprob: -10.536885261535645
    7. '```' → logprob: -10.786885261535645
    8. '(c' → logprob: -11.286885261535645
    9. 't' → logprob: -11.286885261535645
    10. '(`' → logprob: -11.411885261535645

Token 20: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.010234798304736614
    2. '(lambda' → logprob: -5.260234832763672
    3. ' lambda' → logprob: -5.635234832763672
    4. 'max' → logprob: -6.635234832763672
    5. 'min' → logprob: -10.135234832763672
    6. 'len' → logprob: -10.385234832763672
    7. 'sum' → logprob: -11.135234832763672
    8. 'def' → logprob: -12.135234832763672
    9. ' max' → logprob: -12.260234832763672
    10. '=lambda' → logprob: -12.385234832763672

Token 21: ' a' (ID: 261)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.1799839287996292
    2. 'x' → logprob: -1.8049839735031128
    3. ' l' → logprob: -9.429984092712402
    4. ' a' → logprob: -9.929984092712402
    5. 'a' → logprob: -10.054984092712402
    6. ' i' → logprob: -11.179984092712402
    7. ' ' → logprob: -11.304984092712402
    8. ' n' → logprob: -11.429984092712402
    9. 'l' → logprob: -11.679984092712402
    10. ' y' → logprob: -12.679984092712402

Token 22: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6068741083145142
    2. ':' → logprob: -1.3568741083145142
    3. ' :' → logprob: -2.2318739891052246
    4. ',a' → logprob: -2.7318739891052246
    5. ' ,' → logprob: -4.606873989105225
    6. ' a' → logprob: -4.606873989105225
    7. 'a' → logprob: -5.981873989105225
    8. ':a' → logprob: -7.231873989105225
    9. ',b' → logprob: -7.481873989105225
    10. ' x' → logprob: -7.481873989105225

Token 23: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.026587532833218575
    2. ':a' → logprob: -4.02658748626709
    3. ' :' → logprob: -4.90158748626709
    4. ',a' → logprob: -7.27658748626709
    5. ',' → logprob: -9.15158748626709
    6. 'a' → logprob: -9.77658748626709
    7. ':max' → logprob: -10.65158748626709
    8. ',:' → logprob: -11.40158748626709
    9. ' a' → logprob: -11.52658748626709
    10. ':(' → logprob: -11.77658748626709

Token 24: ' abs' (ID: 8443)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.29121479392051697
    2. ' a' → logprob: -1.4162148237228394
    3. ' max' → logprob: -5.041214942932129
    4. 'max' → logprob: -6.166214942932129
    5. ' abs' → logprob: -7.916214942932129
    6. 'abs' → logprob: -8.166214942932129
    7. ' (' → logprob: -8.541214942932129
    8. '(a' → logprob: -8.666214942932129
    9. ' min' → logprob: -8.791214942932129
    10. 'min' → logprob: -9.541214942932129

Token 25: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.018152397125959396
    2. '(' → logprob: -4.018152236938477
    3. 'a' → logprob: -13.143152236938477
    4. '((' → logprob: -15.768152236938477
    5. '(b' → logprob: -16.143152236938477
    6. '(
' → logprob: -16.518152236938477
    7. '(x' → logprob: -16.768152236938477
    8. '(i' → logprob: -17.643152236938477
    9. '(s' → logprob: -17.768152236938477
    10. '(abs' → logprob: -18.518152236938477

Token 26: '-b' (ID: 2118)
  Prédit: '-b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-b' → logprob: -0.610264003276825
    2. '-' → logprob: -0.985264003276825
    3. ' -' → logprob: -2.4852640628814697
    4. ' ' → logprob: -9.73526382446289
    5. 'b' → logprob: -10.11026382446289
    6. ' b' → logprob: -10.61026382446289
    7. '+b' → logprob: -11.86026382446289
    8. '+' → logprob: -12.48526382446289
    9. ')' → logprob: -13.11026382446289
    10. '-
' → logprob: -13.61026382446289

Token 27: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.049755782238208e-05
    2. '))' → logprob: -10.12505054473877
    3. ' )' → logprob: -12.50005054473877
    4. ')
' → logprob: -13.87505054473877
    5. '),' → logprob: -14.12505054473877
    6. ')))' → logprob: -14.25005054473877
    7. ')m' → logprob: -14.37505054473877
    8. ' ' → logprob: -14.62505054473877
    9. ')**' → logprob: -14.75005054473877
    10. ')>' → logprob: -14.75005054473877

Token 28: 'acc' (ID: 3717)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08697890490293503
    2. '\n' → logprob: -3.0869789123535156
    3. '[' → logprob: -4.336978912353516
    4. ' for' → logprob: -4.711978912353516
    5. ')' → logprob: -5.086978912353516
    6. '
' → logprob: -6.086978912353516
    7. '(' → logprob: -6.336978912353516
    8. ' ' → logprob: -6.461978912353516
    9. '\' → logprob: -7.211978912353516
    10. '<|end|>' → logprob: -7.836978912353516

Token 29: ' =' (ID: 314)
  Prédit: 'umulate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'umulate' → logprob: -0.06845749914646149
    2. 'um' → logprob: -2.81845760345459
    3. 'umulator' → logprob: -5.19345760345459
    4. '[' → logprob: -8.31845760345459
    5. 'umul' → logprob: -8.31845760345459
    6. 'umulative' → logprob: -8.81845760345459
    7. 'u' → logprob: -9.19345760345459
    8. '.append' → logprob: -9.69345760345459
    9. '(' → logprob: -10.19345760345459
    10. 'umu' → logprob: -11.44345760345459

Token 30: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.023115606978535652
    2. '[' → logprob: -4.773115634918213
    3. 'l' → logprob: -5.023115634918213
    4. ' ' → logprob: -6.398115634918213
    5. 'm' → logprob: -6.523115634918213
    6. 'fun' → logprob: -6.648115634918213
    7. '[l' → logprob: -7.023115634918213
    8. '[]' → logprob: -7.148115634918213
    9. 'sum' → logprob: -7.898115634918213
    10. '[m' → logprob: -8.273115158081055

Token 31: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.18269528448581696
    2. '[' → logprob: -3.0576953887939453
    3. 'l' → logprob: -3.1826953887939453
    4. 'fun' → logprob: -4.057695388793945
    5. 'm' → logprob: -4.182695388793945
    6. 'sum' → logprob: -4.307695388793945
    7. '[]' → logprob: -4.682695388793945
    8. '[l' → logprob: -4.682695388793945
    9. 'float' → logprob: -5.182695388793945
    10. '[m' → logprob: -5.932695388793945

Token 32: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.050307054072618484
    2. ' for' → logprob: -3.175307035446167
    3. '
' → logprob: -5.300307273864746
    4. '\n' → logprob: -6.175307273864746
    5. '<|end|>' → logprob: -8.925307273864746
    6. 'n' → logprob: -11.050307273864746
    7. ')' → logprob: -11.675307273864746
    8. 'i' → logprob: -12.050307273864746
    9. ' ' → logprob: -12.050307273864746
    10. ' 
' → logprob: -12.175307273864746

Token 33: 'total' (ID: 9577)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.017286231741309166
    2. ' for' → logprob: -4.51728630065918
    3. '
' → logprob: -5.14228630065918
    4. '\n' → logprob: -8.64228630065918
    5. '<|end|>' → logprob: -8.76728630065918
    6. '' → logprob: -11.64228630065918
    7. 'i' → logprob: -12.14228630065918
    8. '	for' → logprob: -12.26728630065918
    9. ')' → logprob: -12.64228630065918
    10. 'n' → logprob: -13.01728630065918

Token 34: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.6517453193664551
    2. '+' → logprob: -1.151745319366455
    3. '+=' → logprob: -2.151745319366455
    4. '=' → logprob: -3.776745319366455
    5. ' +' → logprob: -4.151745319366455
    6. ' =' → logprob: -5.276745319366455
    7. '_' → logprob: -6.651745319366455
    8. '<|end|>' → logprob: -7.526745319366455
    9. ' ' → logprob: -8.151744842529297
    10. ')' → logprob: -8.901744842529297

Token 35: ' sum' (ID: 4215)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4472206234931946
    2. 'sum' → logprob: -1.3222205638885498
    3. ' sum' → logprob: -2.82222056388855
    4. ' ' → logprob: -3.57222056388855
    5. 'len' → logprob: -5.697220802307129
    6. 'l' → logprob: -7.197220802307129
    7. ' len' → logprob: -7.447220802307129
    8. 'acc' → logprob: -7.822220802307129
    9. ' l' → logprob: -8.197220802307129
    10. '100' → logprob: -8.447220802307129

Token 36: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.006168624851852655
    2. '(' → logprob: -5.131168842315674
    3. '(m' → logprob: -8.756168365478516
    4. 'l' → logprob: -9.756168365478516
    5. '(s' → logprob: -11.756168365478516
    6. '([' → logprob: -12.256168365478516
    7. '(n' → logprob: -13.256168365478516
    8. '((' → logprob: -13.381168365478516
    9. '(abs' → logprob: -13.756168365478516
    10. ' (' → logprob: -13.881168365478516

Token 37: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.579495235811919e-05
    2. ' )' → logprob: -9.75009536743164
    3. ')
' → logprob: -10.87509536743164
    4. '))' → logprob: -11.50009536743164
    5. ')

' → logprob: -13.00009536743164
    6. '(' → logprob: -13.87509536743164
    7. '-' → logprob: -14.25009536743164
    8. '()' → logprob: -14.37509536743164
    9. ')))' → logprob: -14.37509536743164
    10. ')-' → logprob: -14.37509536743164

Token 38: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7053017616271973
    2. '
' → logprob: -1.8303017616271973
    3. '\n' → logprob: -1.8303017616271973
    4. ' for' → logprob: -2.0803017616271973
    5. ' 
' → logprob: -3.0803017616271973
    6. ' ' → logprob: -5.580301761627197
    7. '+' → logprob: -6.830301761627197
    8. '\' → logprob: -6.955301761627197
    9. '' → logprob: -7.080301761627197
    10. ')' → logprob: -7.080301761627197

Token 39: ' idx' (ID: 14016)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.002961653983220458
    2. 'i' → logprob: -6.7529616355896
    3. ' x' → logprob: -6.8779616355896
    4. ' ' → logprob: -8.002962112426758
    5. ' l' → logprob: -9.252962112426758
    6. ' range' → logprob: -9.377962112426758
    7. ' _' → logprob: -9.377962112426758
    8. '_' → logprob: -10.377962112426758
    9. '  ' → logprob: -11.002962112426758
    10. '   ' → logprob: -11.002962112426758

Token 40: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.023176638409495354
    2. ',' → logprob: -4.523176670074463
    3. 'in' → logprob: -4.648176670074463
    4. ' ,' → logprob: -6.523176670074463
    5. ' ' → logprob: -7.273176670074463
    6. ',l' → logprob: -9.023176193237305
    7. ',value' → logprob: -10.398176193237305
    8. ',in' → logprob: -10.398176193237305
    9. '	in' → logprob: -10.898176193237305
    10. '  ' → logprob: -11.148176193237305

Token 41: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5771137475967407
    2. 'range' → logprob: -0.8271137475967407
    3. 'l' → logprob: -7.452113628387451
    4. ' l' → logprob: -7.452113628387451
    5. '(range' → logprob: -11.95211410522461
    6. '	range' → logprob: -12.70211410522461
    7. ' xrange' → logprob: -13.82711410522461
    8. 'm' → logprob: -14.07711410522461
    9. ' ' → logprob: -14.45211410522461
    10. '```' → logprob: -15.20211410522461

Token 42: '(n' (ID: 2406)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.16068235039710999
    2. '(' → logprob: -1.9106823205947876
    3. '(n' → logprob: -7.785682201385498
    4. ' (' → logprob: -10.160682678222656
    5. '(l' → logprob: -14.160682678222656
    6. '(length' → logprob: -14.160682678222656
    7. ' len' → logprob: -14.785682678222656
    8. '(
' → logprob: -14.910682678222656
    9. '(total' → logprob: -15.035682678222656
    10. '(

' → logprob: -15.035682678222656

Token 43: '-' (ID: 12)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.15841618180274963
    2. '-' → logprob: -2.158416271209717
    3. ' ):' → logprob: -3.783416271209717
    4. ' -' → logprob: -5.158416271209717
    5. ')' → logprob: -6.658416271209717
    6. '):
' → logprob: -6.908416271209717
    7. '+' → logprob: -9.533415794372559
    8. ' ' → logprob: -9.908415794372559
    9. ' )' → logprob: -10.408415794372559
    10. ' ):
' → logprob: -11.033415794372559

Token 44: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001831565605243668
    2. ' ' → logprob: -8.62518310546875
    3. '2' → logprob: -12.62518310546875
    4. '-' → logprob: -16.37518310546875
    5. ')' → logprob: -16.75018310546875
    6. '１' → logprob: -17.31268310546875
    7. '```' → logprob: -17.50018310546875
    8. '   ' → logprob: -17.75018310546875
    9. '  ' → logprob: -17.81268310546875
    10. '3' → logprob: -17.93768310546875

Token 45: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0233257245272398
    2. ' ):' → logprob: -4.2733259201049805
    3. ')' → logprob: -5.2733259201049805
    4. ':' → logprob: -5.6483259201049805
    5. '):
' → logprob: -8.52332592010498
    6. '+' → logprob: -8.77332592010498
    7. ' )' → logprob: -10.02332592010498
    8. ',' → logprob: -10.39832592010498
    9. ' :' → logprob: -10.77332592010498
    10. ' ):
' → logprob: -12.77332592010498

Token 46: '   ' (ID: 271)
  Prédit: ' m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -1.54420804977417
    2. ' acc' → logprob: -1.66920804977417
    3. '	acc' → logprob: -2.04420804977417
    4. ' 
' → logprob: -2.29420804977417
    5. 'acc' → logprob: -2.41920804977417
    6. '   ' → logprob: -2.54420804977417
    7. ' ' → logprob: -2.79420804977417
    8. '<|end|>' → logprob: -2.91920804977417
    9. '```' → logprob: -3.79420804977417
    10. '(acc' → logprob: -4.16920804977417

Token 47: ' acc' (ID: 1259)
  Prédit: ' acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' acc' → logprob: -0.4706352651119232
    2. 'acc' (adapté à ' acc') → logprob: -1.2206352949142456
    3. ' m' → logprob: -3.345635175704956
    4. '	acc' → logprob: -4.845635414123535
    5. 'm' → logprob: -4.970635414123535
    6. 'a' → logprob: -5.095635414123535
    7. ' a' → logprob: -5.095635414123535
    8. '   ' → logprob: -5.470635414123535
    9. 't' → logprob: -6.470635414123535
    10. ' t' → logprob: -6.595635414123535

Token 48: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.47459644079208374
    2. ' +=' → logprob: -0.9745964407920837
    3. '+' → logprob: -8.34959602355957
    4. '+=(' → logprob: -8.84959602355957
    5. '=' → logprob: -9.72459602355957
    6. ']+=' → logprob: -10.34959602355957
    7. ' =' → logprob: -10.47459602355957
    8. '+='' → logprob: -11.47459602355957
    9. ' +' → logprob: -12.47459602355957
    10. '+="' → logprob: -13.47459602355957

Token 49: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.005244429688900709
    2. ' l' → logprob: -5.255244255065918
    3. 'fun' → logprob: -12.130244255065918
    4. 'm' → logprob: -13.630244255065918
    5. '   ' → logprob: -13.755244255065918
    6. '	l' → logprob: -13.880244255065918
    7. ' ' → logprob: -14.255244255065918
    8. ' fun' → logprob: -14.505244255065918
    9. '```' → logprob: -16.380245208740234
    10. '    ' → logprob: -16.505245208740234

Token 50: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.0001817297888919711
    2. '[' → logprob: -8.625182151794434
    3. 'idx' → logprob: -14.125182151794434
    4. '```' → logprob: -15.250182151794434
    5. '[i' → logprob: -15.500182151794434
    6. ' [' → logprob: -15.625182151794434
    7. '[index' → logprob: -15.875182151794434
    8. '[id' → logprob: -16.375181198120117
    9. '\[' → logprob: -16.625181198120117
    10. '[token' → logprob: -16.625181198120117

Token 51: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15205727517604828
    2. ')
' → logprob: -2.02705717086792
    3. ']' → logprob: -5.27705717086792
    4. '])' → logprob: -5.77705717086792
    5. ']
' → logprob: -8.652057647705078
    6. ' )' → logprob: -8.777057647705078
    7. ')
' → logprob: -8.777057647705078
    8. '   ' → logprob: -8.902057647705078
    9. '+' → logprob: -9.152057647705078
    10. ')]' → logprob: -9.152057647705078

Token 52: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.41192445158958435
    2. 'm' → logprob: -1.4119244813919067
    3. ' m' → logprob: -2.661924362182617
    4. '<|end|>' → logprob: -4.536924362182617
    5. '
' → logprob: -6.036924362182617
    6. '    
' → logprob: -6.286924362182617
    7. ' ' → logprob: -6.411924362182617
    8. 's' → logprob: -6.911924362182617
    9. 'token' → logprob: -7.036924362182617
    10. '```' → logprob: -7.411924362182617

Token 53: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' (adapté à ' m') → logprob: -0.007674772758036852
    2. ' m' → logprob: -5.007674694061279
    3. 'print' → logprob: -8.257675170898438
    4. '   ' → logprob: -8.507675170898438
    5. 'if' → logprob: -9.257675170898438
    6. 'total' → logprob: -10.007675170898438
    7. 'acc' → logprob: -10.257675170898438
    8. 'token' → logprob: -10.382675170898438
    9. ' if' → logprob: -10.507675170898438
    10. 't' → logprob: -10.632675170898438

Token 54: ' +=' (ID: 2757)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.06214996054768562
    2. '.append' → logprob: -2.812150001525879
    3. '.app' → logprob: -9.687150001525879
    4. '.ap' → logprob: -9.687150001525879
    5. ' .' → logprob: -10.437150001525879
    6. '.a' → logprob: -10.687150001525879
    7. '.extend' → logprob: -12.937150001525879
    8. '.Append' → logprob: -14.062150001525879
    9. '.APP' → logprob: -14.312150001525879
    10. 'appen' → logprob: -14.562150001525879

Token 55: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.013733836822211742
    2. ' [' → logprob: -4.638733863830566
    3. '[f' → logprob: -6.388733863830566
    4. '[int' → logprob: -6.513733863830566
    5. '[min' → logprob: -8.638733863830566
    6. '[max' → logprob: -9.013733863830566
    7. '[m' → logprob: -9.388733863830566
    8. '[(' → logprob: -9.763733863830566
    9. '[str' → logprob: -9.763733863830566
    10. '[val' → logprob: -10.013733863830566

Token 56: 'fun' (ID: 18142)
  Prédit: 'fun'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fun' → logprob: -0.0018217855831608176
    2. 'abs' → logprob: -6.876821994781494
    3. ' fun' → logprob: -7.251821994781494
    4. 'acc' → logprob: -10.626821517944336
    5. 'func' → logprob: -10.751821517944336
    6. '(fun' → logprob: -11.126821517944336
    7. ' abs' → logprob: -11.751821517944336
    8. 'min' → logprob: -13.251821517944336
    9. 'max' → logprob: -13.376821517944336
    10. '   ' → logprob: -13.501821517944336

Token 57: '(acc' (ID: 82668)
  Prédit: '(acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(acc' → logprob: -0.019478680565953255
    2. '(' → logprob: -4.019478797912598
    3. '(total' → logprob: -6.769478797912598
    4. ' (' → logprob: -9.269478797912598
    5. '(m' → logprob: -9.894478797912598
    6. '(l' → logprob: -11.269478797912598
    7. ')' → logprob: -12.144478797912598
    8. '(abs' → logprob: -12.519478797912598
    9. ')(' → logprob: -12.519478797912598
    10. '(
' → logprob: -13.144478797912598

Token 58: ',' (ID: 11)
  Prédit: ',total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',total' → logprob: -0.11378559470176697
    2. ',' → logprob: -2.2387855052948
    3. 'total' → logprob: -7.363785743713379
    4. ' ,' → logprob: -8.738785743713379
    5. ' total' → logprob: -9.988785743713379
    6. '(total' → logprob: -10.738785743713379
    7. ',sum' → logprob: -11.488785743713379
    8. ',
' → logprob: -11.488785743713379
    9. ',t' → logprob: -11.613785743713379
    10. ',m' → logprob: -11.863785743713379

Token 59: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.014502177014946938
    2. ' total' → logprob: -4.264502048492432
    3. '(total' → logprob: -8.63950252532959
    4. '   ' → logprob: -8.88950252532959
    5. ' ' → logprob: -11.51450252532959
    6. '  ' → logprob: -12.76450252532959
    7. ',total' → logprob: -12.76450252532959
    8. '	total' → logprob: -13.26450252532959
    9. ')' → logprob: -13.51450252532959
    10. ' (' → logprob: -13.88950252532959

Token 60: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.1269584596157074
    2. ' -' → logprob: -2.1269583702087402
    3. '-ac' → logprob: -10.751958847045898
    4. '-ass' → logprob: -12.001958847045898
    5. ' ' → logprob: -14.376958847045898
    6. '-ex' → logprob: -15.126958847045898
    7. '-c' → logprob: -15.126958847045898
    8. '-
' → logprob: -15.376958847045898
    9. ')' → logprob: -15.876958847045898
    10. '-occ' → logprob: -16.0019588470459

Token 61: 'acc' (ID: 3717)
  Prédit: 'acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.0015052208909764886
    2. ' acc' → logprob: -6.501505374908447
    3. '	acc' → logprob: -13.751504898071289
    4. '(acc' → logprob: -14.126504898071289
    5. ' ' → logprob: -15.001504898071289
    6. '   ' → logprob: -15.001504898071289
    7. 'ac' → logprob: -15.251504898071289
    8. '  ' → logprob: -15.751504898071289
    9. ''acc' → logprob: -17.50150489807129
    10. '_acc' → logprob: -18.00150489807129

Token 62: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.023381974548101425
    2. ')' → logprob: -3.7733819484710693
    3. ')]
' → logprob: -9.898382186889648
    4. ')
' → logprob: -10.023382186889648
    5. '))' → logprob: -10.773382186889648
    6. ']' → logprob: -12.023382186889648
    7. ')])' → logprob: -12.148382186889648
    8. ' )' → logprob: -12.773382186889648
    9. ')}' → logprob: -13.398382186889648
    10. ')]

' → logprob: -13.773382186889648

Token 63: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.027632301673293114
    2. 'm' → logprob: -4.652632236480713
    3. 'max' → logprob: -5.027632236480713
    4. '<|end|>' → logprob: -6.027632236480713
    5. 'min' → logprob: -6.152632236480713
    6. ')' → logprob: -6.277632236480713
    7. 'p' → logprob: -7.027632236480713
    8. ']' → logprob: -7.277632236480713
    9. '
' → logprob: -7.527632236480713
    10. '[' → logprob: -7.902632236480713

Token 64: '(sorted' (ID: 92488)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.25873178243637085
    2. '(m' → logprob: -1.5087318420410156
    3. '(max' → logprob: -5.258731842041016
    4. '(len' → logprob: -7.133731842041016
    5. '(min' → logprob: -7.758731842041016
    6. '(*' → logprob: -8.883731842041016
    7. '(sum' → logprob: -9.133731842041016
    8. '()' → logprob: -9.883731842041016
    9. '('' → logprob: -10.258731842041016
    10. '("("' → logprob: -12.258731842041016

Token 65: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.0001593195047462359
    2. '(' → logprob: -8.75015926361084
    3. 'm' → logprob: -14.00015926361084
    4. ')m' → logprob: -17.875160217285156
    5. '(
' → logprob: -18.375160217285156
    6. ' (' → logprob: -18.625160217285156
    7. ')' → logprob: -18.625160217285156
    8. '([' → logprob: -18.750160217285156
    9. '(l' → logprob: -18.750160217285156
    10. '(s' → logprob: -19.000160217285156

Token 66: ')[' (ID: 13637)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3927450478076935
    2. '))' → logprob: -1.142745018005371
    3. ')[' → logprob: -5.267745018005371
    4. '())' → logprob: -7.517745018005371
    5. ')))' → logprob: -10.017745018005371
    6. '()))' → logprob: -10.267745018005371
    7. '()' → logprob: -10.517745018005371
    8. '])' → logprob: -10.767745018005371
    9. ')`' → logprob: -12.392745018005371
    10. ')])' → logprob: -12.392745018005371

Token 67: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008203497272916138
    2. '-' → logprob: -7.250820159912109
    3. ' ' → logprob: -9.37582015991211
    4. '1' → logprob: -11.12582015991211
    5. ' -' → logprob: -13.12582015991211
    6. '(' → logprob: -13.25082015991211
    7. 'len' → logprob: -13.25082015991211
    8. ':' → logprob: -13.50082015991211
    9. 'n' → logprob: -13.50082015991211
    10. '   ' → logprob: -14.12582015991211

Token 68: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04888074845075607
    2. '])' → logprob: -3.0488808155059814
    3. '))' → logprob: -8.298880577087402
    4. '})' → logprob: -10.548880577087402
    5. ')])' → logprob: -11.423880577087402
    6. ')]' → logprob: -13.298880577087402
    7. ']' → logprob: -13.673880577087402
    8. '）' → logprob: -13.923880577087402
    9. ')
' → logprob: -14.048880577087402
    10. '>)' → logprob: -14.423880577087402


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 66
Tokens correctement prédits (1ère position, stricte): 23
Tokens correctement prédits (1ère position, avec adaptation): 24
Tokens correctement prédits (top 10): 51
Précision stricte (1ère position): 34.85%
Précision adaptée (1ère position): 36.36%
Précision (top 10): 77.27%
================================================================================
