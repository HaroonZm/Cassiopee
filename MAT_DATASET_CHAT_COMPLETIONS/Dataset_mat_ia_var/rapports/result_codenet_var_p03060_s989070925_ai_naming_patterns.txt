================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:02:03
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
input_count = int(input())
value_list = list(map(int, input().split()))
cost_list = list(map(int, input().split()))
total_score = 0
for index in range(input_count):
    difference_score = value_list[index] - cost_list[index]
    if difference_score > 0:
        total_score += difference_score
print(total_score)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'input' (ID: 2586)
  → Token d'amorce (pas de prédiction)

Token 1: '_count' (ID: 7536)
  → Token d'amorce (pas de prédiction)

Token 2: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 3: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1412188857793808
    2. '0' → logprob: -2.141218900680542
    3. '1' → logprob: -4.516218662261963
    4. '4' → logprob: -6.141218662261963
    5. 'input' → logprob: -8.266219139099121
    6. ' input' → logprob: -8.391219139099121
    7. '10' → logprob: -8.641219139099121
    8. '5' → logprob: -8.641219139099121
    9. ' len' → logprob: -9.516219139099121
    10. ' int' → logprob: -10.391219139099121

Token 4: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0010919966734945774
    2. '```' → logprob: -7.501091957092285
    3. '(input' → logprob: -8.251091957092285
    4. '`' → logprob: -9.501091957092285
    5. ''' → logprob: -10.251091957092285
    6. '(user' → logprob: -10.501091957092285
    7. '("("' → logprob: -11.001091957092285
    8. ' (' → logprob: -11.001091957092285
    9. '('' → logprob: -11.251091957092285
    10. '40' → logprob: -11.251091957092285

Token 5: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5919724702835083
    2. ')' → logprob: -0.8419724702835083
    3. '()' → logprob: -4.466972351074219
    4. '())' → logprob: -5.591972351074219
    5. '))' → logprob: -8.716972351074219
    6. '')' → logprob: -9.091972351074219
    7. '")' → logprob: -9.466972351074219
    8. '(
' → logprob: -9.591972351074219
    9. '('' → logprob: -9.841972351074219
    10. '```' → logprob: -10.341972351074219

Token 6: 'value' (ID: 1594)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3262232542037964
    2. '*' → logprob: -2.201223373413086
    3. ')' → logprob: -2.701223373413086
    4. '=' → logprob: -4.076223373413086
    5. '#' → logprob: -4.201223373413086
    6. 'for' → logprob: -4.576223373413086
    7. '%' → logprob: -4.826223373413086
    8. '.' → logprob: -4.826223373413086
    9. '\n' → logprob: -5.076223373413086
    10. ':' → logprob: -5.326223373413086

Token 7: '_list' (ID: 4162)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7359934449195862
    2. 's' → logprob: -0.7359934449195862
    3. '[' → logprob: -4.110993385314941
    4. '_s' → logprob: -4.610993385314941
    5. ')' → logprob: -5.110993385314941
    6. ' =' → logprob: -5.235993385314941
    7. '_counts' → logprob: -7.110993385314941
    8. '(' → logprob: -7.235993385314941
    9. '=' → logprob: -7.735993385314941
    10. '.' → logprob: -7.985993385314941

Token 8: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.08978747576475143
    2. '.' → logprob: -2.839787483215332
    3. '.append' → logprob: -4.089787483215332
    4. '=' → logprob: -6.214787483215332
    5. 's' → logprob: -6.339787483215332
    6. '[]' → logprob: -6.339787483215332
    7. '[:]' → logprob: -6.714787483215332
    8. '_' → logprob: -6.839787483215332
    9. ' =' → logprob: -7.089787483215332
    10. '```' → logprob: -7.964787483215332

Token 9: ' list' (ID: 1562)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.04249114543199539
    2. '[]' → logprob: -3.9174911975860596
    3. ' [' → logprob: -4.5424909591674805
    4. '[' → logprob: -4.6674909591674805
    5. ' list' → logprob: -7.7924909591674805
    6. '[input' → logprob: -7.7924909591674805
    7. ' ' → logprob: -7.9174909591674805
    8. 'list' → logprob: -8.04249095916748
    9. '[int' → logprob: -9.29249095916748
    10. 'input' → logprob: -10.66749095916748

Token 10: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006241129711270332
    2. '[' → logprob: -5.506241321563721
    3. '[(' → logprob: -7.256241321563721
    4. '(range' → logprob: -7.506241321563721
    5. '```' → logprob: -7.756241321563721
    6. ')' → logprob: -8.756240844726562
    7. '[int' → logprob: -10.006240844726562
    8. '(value' → logprob: -10.006240844726562
    9. ' (' → logprob: -10.881240844726562
    10. '("("' → logprob: -11.131240844726562

Token 11: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0066109225153923035
    2. '(' → logprob: -5.631610870361328
    3. '(input' → logprob: -6.131610870361328
    4. '(lambda' → logprob: -7.881610870361328
    5. '(str' → logprob: -9.131610870361328
    6. '<int' → logprob: -9.256610870361328
    7. ')' → logprob: -9.506610870361328
    8. 'int' → logprob: -9.756610870361328
    9. '=int' → logprob: -10.256610870361328
    10. '(eval' → logprob: -10.756610870361328

Token 12: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.003998496104031801
    2. '(' → logprob: -6.628998279571533
    3. ',input' → logprob: -6.878998279571533
    4. '))' → logprob: -6.878998279571533
    5. ',' → logprob: -8.003998756408691
    6. 'input' → logprob: -9.003998756408691
    7. ')' → logprob: -9.503998756408691
    8. '=input' → logprob: -10.753998756408691
    9. '[input' → logprob: -11.503998756408691
    10. ' (' → logprob: -11.628998756408691

Token 13: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.02641037292778492
    2. ' input' → logprob: -3.6514103412628174
    3. '(input' → logprob: -9.151410102844238
    4. ',input' → logprob: -13.651410102844238
    5. 'range' → logprob: -13.901410102844238
    6. '<input' → logprob: -14.526410102844238
    7. ' ' → logprob: -14.901410102844238
    8. '	input' → logprob: -15.151410102844238
    9. '=input' → logprob: -15.276410102844238
    10. ')' → logprob: -15.901410102844238

Token 14: '().' (ID: 1454)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.49029648303985596
    2. '()' → logprob: -1.365296483039856
    3. '())' → logprob: -2.1152963638305664
    4. '().' → logprob: -4.740296363830566
    5. '()));' → logprob: -6.490296363830566
    6. '())))' → logprob: -7.740296363830566
    7. '(' → logprob: -7.990296363830566
    8. '()>' → logprob: -8.490296363830566
    9. ')' → logprob: -9.240296363830566
    10. '))' → logprob: -9.365296363830566

Token 15: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00020568605395965278
    2. 'strip' → logprob: -8.500205993652344
    3. 'rstrip' → logprob: -13.250205993652344
    4. ' split' → logprob: -14.875205993652344
    5. '(split' → logprob: -17.125205993652344
    6. 'spl' → logprob: -17.250205993652344
    7. ')' → logprob: -19.375205993652344
    8. '.split' → logprob: -19.500205993652344
    9. 'sp' → logprob: -20.125205993652344
    10. ' strip' → logprob: -21.125205993652344

Token 16: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.20919261872768402
    2. '))' → logprob: -2.2091925144195557
    3. '())' → logprob: -2.7091925144195557
    4. ')' → logprob: -4.959192752838135
    5. '()' → logprob: -5.459192752838135
    6. '(' → logprob: -6.959192752838135
    7. '())))' → logprob: -10.459192276000977
    8. '()))
' → logprob: -10.584192276000977
    9. ')))' → logprob: -10.834192276000977
    10. ''))' → logprob: -10.959192276000977

Token 17: 'cost' (ID: 33457)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.36480093002319336
    2. ')' → logprob: -2.3648009300231934
    3. 'sum' → logprob: -2.6148009300231934
    4. 'result' → logprob: -3.2398009300231934
    5. 'total' → logprob: -3.4898009300231934
    6. 's' → logprob: -4.114800930023193
    7. 'if' → logprob: -4.239800930023193
    8. '#' → logprob: -4.864800930023193
    9. '[' → logprob: -5.739800930023193
    10. 'max' → logprob: -5.864800930023193

Token 18: '_list' (ID: 4162)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9145110249519348
    2. 's' → logprob: -1.03951096534729
    3. '[' → logprob: -1.53951096534729
    4. ')' → logprob: -4.289511203765869
    5. '_s' → logprob: -5.289511203765869
    6. '_list' → logprob: -5.289511203765869
    7. '_per' → logprob: -6.664511203765869
    8. '[s' → logprob: -7.164511203765869
    9. '[]' → logprob: -7.289511203765869
    10. ' =' → logprob: -7.414511203765869

Token 19: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10587198287248611
    2. '=' → logprob: -2.4808719158172607
    3. '[' → logprob: -4.10587215423584
    4. ')' → logprob: -9.35587215423584
    5. ' =[' → logprob: -9.73087215423584
    6. '<|end|>' → logprob: -10.60587215423584
    7. '[:]' → logprob: -10.73087215423584
    8. '[int' → logprob: -10.98087215423584
    9. '=[' → logprob: -11.10587215423584
    10. '=[]' → logprob: -11.35587215423584

Token 20: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.47420448064804077
    2. ' list' → logprob: -0.9742044806480408
    3. '(list' → logprob: -9.349204063415527
    4. '[' → logprob: -10.474204063415527
    5. ' []' → logprob: -12.724204063415527
    6. '[list' → logprob: -12.849204063415527
    7. ' [' → logprob: -12.974204063415527
    8. '=list' → logprob: -13.599204063415527
    9. '[]' → logprob: -13.849204063415527
    10. ' ' → logprob: -14.599204063415527

Token 21: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.14537206292152405
    2. '(map' → logprob: -2.020372152328491
    3. '(int' → logprob: -7.270371913909912
    4. '((' → logprob: -7.395371913909912
    5. '(.' → logprob: -8.02037239074707
    6. '(list' → logprob: -8.27037239074707
    7. '(cost' → logprob: -8.64537239074707
    8. '(
' → logprob: -8.89537239074707
    9. '(range' → logprob: -9.14537239074707
    10. '(

' → logprob: -9.39537239074707

Token 22: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0017380056669935584
    2. '(' → logprob: -6.37673807144165
    3. '<int' → logprob: -11.626737594604492
    4. ' (' → logprob: -11.876737594604492
    5. '(lambda' → logprob: -12.376737594604492
    6. '```' → logprob: -12.501737594604492
    7. 'int' → logprob: -12.876737594604492
    8. '[int' → logprob: -13.126737594604492
    9. '=int' → logprob: -13.376737594604492
    10. '(str' → logprob: -13.501737594604492

Token 23: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7685981392860413
    2. ',input' → logprob: -0.7685981392860413
    3. '(input' → logprob: -2.6435980796813965
    4. ',int' → logprob: -7.8935980796813965
    5. '(' → logprob: -7.8935980796813965
    6. '`,' → logprob: -8.393598556518555
    7. '(int' → logprob: -8.768598556518555
    8. 'input' → logprob: -9.143598556518555
    9. '```' → logprob: -9.268598556518555
    10. ' ,' → logprob: -9.393598556518555

Token 24: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.20143595337867737
    2. ' input' → logprob: -1.701435923576355
    3. '(input' → logprob: -10.951436042785645
    4. 'int' → logprob: -12.451436042785645
    5. '<input' → logprob: -14.826436042785645
    6. ',input' → logprob: -15.451436042785645
    7. '=input' → logprob: -15.826436042785645
    8. ' ' → logprob: -15.951436042785645
    9. '	input' → logprob: -16.076435089111328
    10. '```' → logprob: -16.826435089111328

Token 25: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.5332478142227046e-05
    2. '()' → logprob: -11.125015258789062
    3. ' ().' → logprob: -16.000015258789062
    4. '.' → logprob: -16.125015258789062
    5. '(.' → logprob: -16.125015258789062
    6. '(' → logprob: -16.625015258789062
    7. '()
' → logprob: -18.000015258789062
    8. '()).' → logprob: -19.375015258789062
    9. '()))' → logprob: -19.500015258789062
    10. '(),' → logprob: -19.875015258789062

Token 26: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -3.4121114822482923e-06
    2. 'strip' → logprob: -12.750003814697266
    3. ' split' → logprob: -14.750003814697266
    4. 'rstrip' → logprob: -17.250003814697266
    5. ')' → logprob: -17.375003814697266
    6. '(split' → logprob: -17.625003814697266
    7. 'spl' → logprob: -17.750003814697266
    8. 'plit' → logprob: -18.375003814697266
    9. '```' → logprob: -20.625003814697266
    10. '.split' → logprob: -20.625003814697266

Token 27: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.04292896389961243
    2. '()' → logprob: -4.167929172515869
    3. '())' → logprob: -4.167929172515869
    4. '))' → logprob: -4.542929172515869
    5. ')' → logprob: -8.042928695678711
    6. '(' → logprob: -10.417928695678711
    7. '()))
' → logprob: -10.542928695678711
    8. '()));' → logprob: -11.542928695678711
    9. '()))

' → logprob: -12.167928695678711
    10. '()>' → logprob: -12.292928695678711

Token 28: 'total' (ID: 9577)
  Prédit: 'total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.6459241509437561
    2. 'result' → logprob: -1.2709240913391113
    3. 'profit' → logprob: -2.1459240913391113
    4. 'answer' → logprob: -4.270924091339111
    5. 'sum' → logprob: -4.395924091339111
    6. 'max' → logprob: -4.520924091339111
    7. 's' → logprob: -4.645924091339111
    8. 'res' → logprob: -5.770924091339111
    9. 'output' → logprob: -5.770924091339111
    10. 'for' → logprob: -6.020924091339111

Token 29: '_score' (ID: 22555)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0712757557630539
    2. '_cost' → logprob: -3.1962757110595703
    3. '_sum' → logprob: -3.9462757110595703
    4. '(' → logprob: -5.57127571105957
    5. '_value' → logprob: -6.57127571105957
    6. '_price' → logprob: -7.32127571105957
    7. '_amount' → logprob: -7.44627571105957
    8. '_space' → logprob: -7.69627571105957
    9. ')' → logprob: -7.82127571105957
    10. '_count' → logprob: -7.94627571105957

Token 30: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03442389890551567
    2. '=' → logprob: -3.784423828125
    3. ' +=' → logprob: -4.659423828125
    4. ' ' → logprob: -7.034423828125
    5. '_' → logprob: -7.284423828125
    6. '+=' → logprob: -10.784423828125
    7. '_space' → logprob: -11.534423828125
    8. ' _' → logprob: -12.034423828125
    9. ' =)' → logprob: -12.034423828125
    10. ')' → logprob: -12.159423828125

Token 31: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.14278429746627808
    2. ' ' → logprob: -2.017784357070923
    3. ' value' → logprob: -10.392784118652344
    4. 'value' → logprob: -10.517784118652344
    5. 'sum' → logprob: -10.517784118652344
    6. ' sum' → logprob: -11.017784118652344
    7. ' ' → logprob: -13.267784118652344
    8. 'cost' → logprob: -13.392784118652344
    9. ' cost' → logprob: -14.392784118652344
    10. ')' → logprob: -14.517784118652344

Token 32: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0013452349230647087
    2. ' ' → logprob: -7.001345157623291
    3. 'sum' → logprob: -7.876345157623291
    4. 'value' → logprob: -10.50134563446045
    5. ' sum' → logprob: -11.00134563446045
    6. ' value' → logprob: -13.12634563446045
    7. 'max' → logprob: -13.37634563446045
    8. '(' → logprob: -14.00134563446045
    9. 'cost' → logprob: -14.00134563446045
    10. '(sum' → logprob: -14.37634563446045

Token 33: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.017256468534469604
    2. '\n' → logprob: -4.267256259918213
    3. '
' → logprob: -6.017256259918213
    4. ' for' → logprob: -7.642256259918213
    5. '```' → logprob: -9.267256736755371
    6. '\' → logprob: -9.892256736755371
    7. '' → logprob: -11.142256736755371
    8. 'n' → logprob: -12.392256736755371
    9. '
' → logprob: -12.892256736755371
    10. '\r' → logprob: -13.892256736755371

Token 34: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0003430912329349667
    2. '\n' → logprob: -8.875343322753906
    3. '
' → logprob: -9.125343322753906
    4. '```' → logprob: -9.875343322753906
    5. ' for' → logprob: -10.250343322753906
    6. '\' → logprob: -12.625343322753906
    7. 'n' → logprob: -13.000343322753906
    8. '' → logprob: -14.750343322753906
    9. '``' → logprob: -15.375343322753906
    10. 'i' → logprob: -15.625343322753906

Token 35: ' index' (ID: 3472)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.07690020650625229
    2. ' ' → logprob: -3.3269002437591553
    3. ' _' → logprob: -3.3269002437591553
    4. '_' → logprob: -7.076900005340576
    5. ' item' → logprob: -7.326900005340576
    6. '  ' → logprob: -8.076900482177734
    7. ' value' → logprob: -8.076900482177734
    8. ' ‌' → logprob: -10.076900482177734
    9. ' index' → logprob: -11.076900482177734
    10. ' idx' → logprob: -12.326900482177734

Token 36: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07148775458335876
    2. 'in' → logprob: -2.6964876651763916
    3. ' ' → logprob: -6.821487903594971
    4. '<|end|>' → logprob: -8.696487426757812
    5. '[' → logprob: -9.321487426757812
    6. ')' → logprob: -9.696487426757812
    7. '  ' → logprob: -10.196487426757812
    8. ' i' → logprob: -10.571487426757812
    9. ',' → logprob: -11.696487426757812
    10. '<|end|>' → logprob: -12.008987426757812

Token 37: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.008829296566545963
    2. 'range' → logprob: -4.758829116821289
    3. ' value' → logprob: -8.633829116821289
    4. ' ' → logprob: -11.258829116821289
    5. '(range' → logprob: -11.383829116821289
    6. '	range' → logprob: -12.133829116821289
    7. 'value' → logprob: -13.008829116821289
    8. ')' → logprob: -14.133829116821289
    9. ' xrange' → logprob: -14.133829116821289
    10. '```' → logprob: -14.133829116821289

Token 38: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3955772817134857
    2. '(input' → logprob: -1.145577311515808
    3. '(len' → logprob: -4.895577430725098
    4. ' (' → logprob: -6.770577430725098
    5. '(value' → logprob: -10.895577430725098
    6. '(in' → logprob: -11.520577430725098
    7. '(length' → logprob: -12.020577430725098
    8. '(
' → logprob: -13.020577430725098
    9. '(`' → logprob: -13.645577430725098
    10. '(

' → logprob: -13.895577430725098

Token 39: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -3.531315314830863e-06
    2. '_' → logprob: -13.750003814697266
    3. '(_' → logprob: -13.750003814697266
    4. '_counts' → logprob: -14.625003814697266
    5. '(' → logprob: -15.000003814697266
    6. ')_' → logprob: -15.500003814697266
    7. '(count' → logprob: -16.125003814697266
    8. ')' → logprob: -16.625003814697266
    9. '_COUNT' → logprob: -16.875003814697266
    10. '```' → logprob: -17.500003814697266

Token 40: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3886184096336365
    2. ')' → logprob: -1.1386184692382812
    3. ' ):' → logprob: -7.138618469238281
    4. '+' → logprob: -7.513618469238281
    5. ' )' → logprob: -8.263618469238281
    6. ':' → logprob: -9.638618469238281
    7. '):
' → logprob: -10.013618469238281
    8. '[' → logprob: -11.513618469238281
    9. ' +' → logprob: -12.638618469238281
    10. ' ' → logprob: -12.763618469238281

Token 41: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5223256945610046
    2. '   ' → logprob: -1.7723257541656494
    3. ' :' → logprob: -2.3973257541656494
    4. ' ' → logprob: -2.7723257541656494
    5. ' if' → logprob: -3.6473257541656494
    6. ' total' → logprob: -3.7723257541656494
    7. '    ' → logprob: -4.52232551574707
    8. '):' → logprob: -5.27232551574707
    9. ')' → logprob: -5.89732551574707
    10. 'total' → logprob: -6.27232551574707

Token 42: ' difference' (ID: 9809)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4092119336128235
    2. ' total' → logprob: -1.4092118740081787
    3. ' ' → logprob: -2.6592118740081787
    4. 'total' → logprob: -4.534212112426758
    5. 'if' → logprob: -5.034212112426758
    6. ' value' → logprob: -6.659212112426758
    7. '    ' → logprob: -7.534212112426758
    8. 'value' → logprob: -7.909212112426758
    9. ' )' → logprob: -7.909212112426758
    10. ' cost' → logprob: -8.159212112426758

Token 43: '_score' (ID: 22555)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.022532299160957336
    2. '=' → logprob: -4.0225324630737305
    3. '_' → logprob: -5.5225324630737305
    4. ' ' → logprob: -8.89753246307373
    5. '   ' → logprob: -9.77253246307373
    6. 's' → logprob: -9.77253246307373
    7. ')' → logprob: -10.02253246307373
    8. '    ' → logprob: -11.02253246307373
    9. '>' → logprob: -11.77253246307373
    10. ' _' → logprob: -11.89753246307373

Token 44: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006804421544075012
    2. '=' → logprob: -5.006804466247559
    3. ' ' → logprob: -9.631804466247559
    4. 's' → logprob: -11.631804466247559
    5. ' +=' → logprob: -11.756804466247559
    6. '_' → logprob: -12.381804466247559
    7. ' -=' → logprob: -14.631804466247559
    8. '   ' → logprob: -14.881804466247559
    9. ')' → logprob: -15.256804466247559
    10. '  ' → logprob: -15.506804466247559

Token 45: ' value' (ID: 1432)
  Prédit: ' value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.12823469936847687
    2. 'value' → logprob: -2.628234624862671
    3. ' cost' → logprob: -3.253234624862671
    4. 'cost' → logprob: -5.37823486328125
    5. ' abs' → logprob: -6.00323486328125
    6. 'abs' → logprob: -6.37823486328125
    7. ' max' → logprob: -8.37823486328125
    8. '(value' → logprob: -8.62823486328125
    9. ' (' → logprob: -9.50323486328125
    10. 'max' → logprob: -9.62823486328125

Token 46: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -1.9385402993066236e-05
    2. 's' → logprob: -11.625019073486328
    3. '[_' → logprob: -12.000019073486328
    4. '[index' → logprob: -13.875019073486328
    5. '[' → logprob: -14.000019073486328
    6. '_lists' → logprob: -14.125019073486328
    7. '```' → logprob: -14.500019073486328
    8. '_lst' → logprob: -15.000019073486328
    9. 'List' → logprob: -15.625019073486328
    10. '_' → logprob: -15.625019073486328

Token 47: '[index' (ID: 11815)
  Prédit: '[index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[index' → logprob: -0.023447535932064056
    2. '[' → logprob: -3.7734475135803223
    3. '[Index' → logprob: -9.27344799041748
    4. '[token' → logprob: -10.52344799041748
    5. '```' → logprob: -10.77344799041748
    6. ' [' → logprob: -11.14844799041748
    7. '[input' → logprob: -12.02344799041748
    8. '[idx' → logprob: -12.14844799041748
    9. '[-' → logprob: -12.64844799041748
    10. '[value' → logprob: -12.64844799041748

Token 48: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.47389891743659973
    2. ')' → logprob: -1.5988988876342773
    3. '-' → logprob: -1.9738988876342773
    4. ']' → logprob: -3.4738988876342773
    5. ' )' → logprob: -5.973898887634277
    6. ' ' → logprob: -6.348898887634277
    7. ' ]' → logprob: -7.598898887634277
    8. '   ' → logprob: -7.973898887634277
    9. '[' → logprob: -10.223898887634277
    10. '    ' → logprob: -10.473898887634277

Token 49: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.13040170073509216
    2. '-' → logprob: -2.255401611328125
    3. ' *' → logprob: -4.755401611328125
    4. '*' → logprob: -4.880401611328125
    5. ' ' → logprob: -6.880401611328125
    6. '-cost' → logprob: -9.255401611328125
    7. '+' → logprob: -10.505401611328125
    8. ' ' → logprob: -11.005401611328125
    9. '>' → logprob: -11.005401611328125
    10. ')' → logprob: -12.130401611328125

Token 50: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.17977261543273926
    2. ' cost' → logprob: -1.8047726154327393
    3. '(cost' → logprob: -11.42977237701416
    4. '   ' → logprob: -11.92977237701416
    5. '_cost' → logprob: -12.67977237701416
    6. ' ' → logprob: -13.42977237701416
    7. '0' → logprob: -13.67977237701416
    8. '-cost' → logprob: -14.17977237701416
    9. '1' → logprob: -14.42977237701416
    10. '.cost' → logprob: -15.05477237701416

Token 51: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -2.141186450899113e-05
    2. '[_' → logprob: -10.875020980834961
    3. '```' → logprob: -14.750020980834961
    4. '_cost' → logprob: -15.000020980834961
    5. '[index' → logprob: -15.000020980834961
    6. 's' → logprob: -15.250020980834961
    7. 'list' → logprob: -15.500020980834961
    8. '_lst' → logprob: -15.750020980834961
    9. 'List' → logprob: -16.12502098083496
    10. '_score' → logprob: -16.25002098083496

Token 52: '[index' (ID: 11815)
  Prédit: '[index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[index' → logprob: -0.0001422770437784493
    2. '[' → logprob: -9.000142097473145
    3. '_list' → logprob: -12.125142097473145
    4. '```' → logprob: -12.375142097473145
    5. '[_' → logprob: -12.500142097473145
    6. ' [' → logprob: -12.750142097473145
    7. '[input' → logprob: -14.375142097473145
    8. 'index' → logprob: -15.500142097473145
    9. '[in' → logprob: -15.625142097473145
    10. '[
' → logprob: -15.750142097473145

Token 53: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003123439964838326
    2. '   ' → logprob: -8.750312805175781
    3. ' )' → logprob: -9.000312805175781
    4. ')
' → logprob: -11.000312805175781
    5. '))' → logprob: -12.250312805175781
    6. ' ' → logprob: -13.125312805175781
    7. '])' → logprob: -13.500312805175781
    8. ']' → logprob: -13.750312805175781
    9. '）' → logprob: -14.750312805175781
    10. '):' → logprob: -14.875312805175781

Token 54: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01984138786792755
    2. ' if' → logprob: -4.269841194152832
    3. '
' → logprob: -6.144841194152832
    4. 'if' → logprob: -6.894841194152832
    5. '    
' → logprob: -7.144841194152832
    6. ')' → logprob: -7.519841194152832
    7. '<|end|>' → logprob: -7.769841194152832
    8. ' ' → logprob: -8.519841194152832
    9. '  
' → logprob: -9.144841194152832
    10. ' 
' → logprob: -9.519841194152832

Token 55: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20778104662895203
    2. ' if' → logprob: -2.2077810764312744
    3. 'if' (adapté à ' if') → logprob: -2.7077810764312744
    4. ' ' → logprob: -5.082780838012695
    5. 'total' → logprob: -6.082780838012695
    6. ' total' → logprob: -6.582780838012695
    7. '    ' → logprob: -8.332780838012695
    8. ')' → logprob: -8.457780838012695
    9. '<|end|>' → logprob: -8.832780838012695
    10. '    
' → logprob: -8.957780838012695

Token 56: ' difference' (ID: 9809)
  Prédit: ' difference'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' difference' → logprob: -0.0026278579607605934
    2. 'difference' → logprob: -6.127627849578857
    3. ' ' → logprob: -7.752627849578857
    4. ' ' → logprob: -12.627628326416016
    5. ' space' → logprob: -12.752628326416016
    6. '_difference' → logprob: -13.002628326416016
    7. ' value' → logprob: -13.627628326416016
    8. ' (' → logprob: -14.002628326416016
    9. ' different' → logprob: -14.377628326416016
    10. ' diferencia' → logprob: -14.502628326416016

Token 57: '_score' (ID: 22555)
  Prédit: '_score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -0.022772256284952164
    2. '>' → logprob: -4.147772312164307
    3. '_' → logprob: -5.522772312164307
    4. ' >' → logprob: -6.147772312164307
    5. ' _' → logprob: -8.022771835327148
    6. '_scores' → logprob: -9.022771835327148
    7. '_s' → logprob: -10.147771835327148
    8. '```' → logprob: -10.647771835327148
    9. ' ' → logprob: -11.397771835327148
    10. '   ' → logprob: -11.647771835327148

Token 58: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.3133010268211365
    2. '>' → logprob: -1.3133010864257812
    3. ' >=' → logprob: -10.688301086425781
    4. ' ' → logprob: -11.563301086425781
    5. '>=' → logprob: -12.813301086425781
    6. ':' → logprob: -13.563301086425781
    7. ' ' → logprob: -13.938301086425781
    8. '.' → logprob: -14.938301086425781
    9. '   ' → logprob: -15.063301086425781
    10. '<|end|>' → logprob: -15.563301086425781

Token 59: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04858771339058876
    2. ' ' → logprob: -3.0485877990722656
    3. '۰' → logprob: -16.798587799072266
    4. '=' → logprob: -16.923587799072266
    5. '<|end|>' → logprob: -16.923587799072266
    6. '   ' → logprob: -17.048587799072266
    7. ' ' → logprob: -17.298587799072266
    8. '1' → logprob: -17.611087799072266
    9. '  ' → logprob: -17.798587799072266
    10. '>' → logprob: -18.673587799072266

Token 60: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007166040013544261
    2. ' ' → logprob: -7.250716686248779
    3. '-' → logprob: -13.250716209411621
    4. '1' → logprob: -13.375716209411621
    5. '=' → logprob: -13.750716209411621
    6. '10' → logprob: -14.625716209411621
    7. '2' → logprob: -15.688216209411621
    8. '5' → logprob: -15.688216209411621
    9. '100' → logprob: -15.750716209411621
    10. '9' → logprob: -15.750716209411621

Token 61: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006532243569381535
    2. '       ' → logprob: -7.875653266906738
    3. '   ' → logprob: -9.000653266906738
    4. ':
' → logprob: -9.500653266906738
    5. ' :' → logprob: -9.750653266906738
    6. '):' → logprob: -11.500653266906738
    7. '    ' → logprob: -13.500653266906738
    8. '<|end|>' → logprob: -14.250653266906738
    9. ')' → logprob: -14.375653266906738
    10. ':**' → logprob: -14.375653266906738

Token 62: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003366050310432911
    2. ' total' → logprob: -6.503365993499756
    3. 'total' → logprob: -7.378365993499756
    4. '   ' → logprob: -7.378365993499756
    5. '+' → logprob: -8.753366470336914
    6. ' ' → logprob: -9.128366470336914
    7. '        
' → logprob: -10.003366470336914
    8. ':' → logprob: -10.128366470336914
    9. '(total' → logprob: -10.253366470336914
    10. '    ' → logprob: -10.253366470336914

Token 63: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.1962650716304779
    2. 'total' (adapté à ' total') → logprob: -1.8212651014328003
    3. '           ' → logprob: -4.57126522064209
    4. '       ' → logprob: -5.44626522064209
    5. '   ' → logprob: -7.07126522064209
    6. '+' → logprob: -7.94626522064209
    7. '	total' → logprob: -8.32126522064209
    8. ' ' → logprob: -9.44626522064209
    9. ' +' → logprob: -9.94626522064209
    10. ',total' → logprob: -10.44626522064209

Token 64: '_score' (ID: 22555)
  Prédit: '_score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -2.7372048862162046e-05
    2. '_' → logprob: -10.625027656555176
    3. '_s' → logprob: -13.625027656555176
    4. '_scores' → logprob: -13.875027656555176
    5. '_sc' → logprob: -14.625027656555176
    6. ' +=' → logprob: -15.875027656555176
    7. '_code' → logprob: -16.75002670288086
    8. 'score' → logprob: -17.00002670288086
    9. '_SCORE' → logprob: -17.00002670288086
    10. ' _' → logprob: -17.25002670288086

Token 65: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.006734795868396759
    2. '+=' → logprob: -5.006734848022461
    3. '+' → logprob: -11.381734848022461
    4. ' ' → logprob: -12.256734848022461
    5. ' +' → logprob: -13.506734848022461
    6. ' ' → logprob: -14.506734848022461
    7. ']+=' → logprob: -15.381734848022461
    8. '+='' → logprob: -15.381734848022461
    9. ' =' → logprob: -15.631734848022461
    10. '=' → logprob: -15.631734848022461

Token 66: ' difference' (ID: 9809)
  Prédit: ' difference'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' difference' → logprob: -0.2519509494304657
    2. 'difference' → logprob: -1.501950979232788
    3. 'd' → logprob: -11.501951217651367
    4. ' ' → logprob: -12.126951217651367
    5. '   ' → logprob: -13.626951217651367
    6. ' value' → logprob: -13.876951217651367
    7. ' ' → logprob: -14.126951217651367
    8. 'dif' → logprob: -14.251951217651367
    9. 'diff' → logprob: -14.876951217651367
    10. '	d' → logprob: -14.876951217651367

Token 67: '_score' (ID: 22555)
  Prédit: '_score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -0.0029029434081166983
    2. '_' → logprob: -5.877902984619141
    3. '_s' → logprob: -9.62790298461914
    4. '_sc' → logprob: -11.37790298461914
    5. '_scores' → logprob: -11.50290298461914
    6. '__' → logprob: -13.75290298461914
    7. '_S' → logprob: -14.00290298461914
    8. '_token' → logprob: -14.00290298461914
    9. '_difference' → logprob: -14.00290298461914
    10. '```' → logprob: -14.25290298461914

Token 68: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.002909488743171096
    2. '
' → logprob: -6.3779096603393555
    3. ' print' → logprob: -7.5029096603393555
    4. '<|end|>' → logprob: -8.252909660339355
    5. '\n' → logprob: -8.627909660339355
    6. '```' → logprob: -9.502909660339355
    7. ')' → logprob: -10.002909660339355
    8. '(print' → logprob: -10.502909660339355
    9. '\' → logprob: -11.002909660339355
    10. '#' → logprob: -11.627909660339355

Token 69: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.001710997661575675
    2. ' print' → logprob: -7.751710891723633
    3. '
' → logprob: -7.876710891723633
    4. '<|end|>' → logprob: -8.126710891723633
    5. '\n' → logprob: -8.626710891723633
    6. '#' → logprob: -8.751710891723633
    7. ')' → logprob: -9.251710891723633
    8. '```' → logprob: -9.876710891723633
    9. '(print' → logprob: -10.376710891723633
    10. '\' → logprob: -10.751710891723633

Token 70: '(total' (ID: 39744)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0010513884481042624
    2. '('' → logprob: -7.376051425933838
    3. '("("' → logprob: -8.25105094909668
    4. '(total' → logprob: -8.75105094909668
    5. '()' → logprob: -13.25105094909668
    6. ' (' → logprob: -13.62605094909668
    7. '(`' → logprob: -14.75105094909668
    8. '((' → logprob: -14.87605094909668
    9. '(

' → logprob: -15.12605094909668
    10. 'total' → logprob: -15.50105094909668

Token 71: '_score' (ID: 22555)
  Prédit: '_score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -0.00010247035970678553
    2. '_' → logprob: -9.250102043151855
    3. '_scores' → logprob: -13.000102043151855
    4. '_sc' → logprob: -13.500102043151855
    5. '_s' → logprob: -13.875102043151855
    6. ')_' → logprob: -14.375102043151855
    7. ')' → logprob: -15.000102043151855
    8. '_)' → logprob: -15.125102043151855
    9. '_total' → logprob: -16.250102996826172
    10. '_SCORE' → logprob: -16.250102996826172

Token 72: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ' )' → logprob: -15.875
    3. '))' → logprob: -16.5
    4. ')`' → logprob: -16.875
    5. ')
' → logprob: -17.375
    6. ')}' → logprob: -19.625
    7. '`)' → logprob: -20.25
    8. '),' → logprob: -20.5
    9. '(' → logprob: -20.625
    10. '')' → logprob: -21.0


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 70
Tokens correctement prédits (1ère position, stricte): 35
Tokens correctement prédits (1ère position, avec adaptation): 35
Tokens correctement prédits (top 10): 61
Précision stricte (1ère position): 50.00%
Précision adaptée (1ère position): 50.00%
Précision (top 10): 87.14%
================================================================================
