================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:42:28
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from numpy import *  # Importe toutes les fonctions du module numpy dans l'espace de noms courant, ici principalement pour ses types de données et opérations de tableau
from scipy.sparse import *  # Importe toutes les fonctions du module scipy.sparse, utilisé pour représenter des matrices creuses (sparse matrices) efficacement

def main():  # Déclaration de la fonction principale du programme

    # f représentera la fonction Floyd-Warshall, qui calcule les plus courts chemins entre tous les couples de sommets d'un graphe pondéré
    f = csgraph.floyd_warshall

    # Lecture de toute l'entrée depuis stdin. 'open(0)' ouvre le descripteur de fichier 0, qui correspond à l'entrée standard (stdin).
    # 'read()' lit tout d'un coup. 'split()' sépare la chaîne selon les espaces et retours à la ligne.
    # On convertit le tout en un tableau numpy d'entiers 32 bits avec 'int32'.
    t = int32(open(0).read().split())

    # Assignation des 3 premiers nombres lus à n, m, l. 'n' est probablement le nombre de sommets du graphe,
    # 'm' le nombre d'arêtes, et 'l' une limite quelconque (ici, une limite sur la longueur des chemins)
    n, m, l = t[:3]

    # La variable 't' reçoit le reste du tableau, excluant les trois premiers entiers, pour traiter le reste des données (arêtes + requêtes)
    t = t[3:]

    # On multiplie m par 3 car chaque arête du graphe est probablement codée sur 3 entiers (sommet départ, sommet arrivée, poids)
    m *= 3

    # Construction d'une matrice creuse (sparse), qui sera le graphe pondéré à traiter :
    # - Les 'données' de la matrice sont t[2:m:3] c'est-à-dire les poids des arêtes
    # - Les 'lignes' sont les indices des sommets de départ t[:m:3]
    # - Les 'colonnes' sont les indices des sommets d'arrivée t[1:m:3]
    # - La forme de la matrice est (n+1, n+1), on ajoute 1 car, dans certains cas, les indices sont numérotés à partir de 0
    matrix = csr_matrix((t[2:m:3], (t[:m:3], t[1:m:3])), (n+1, n+1))

    # Première application de l'algorithme de Floyd-Warshall pour obtenir toutes les distances minimales entre tous les couples de sommets
    fw1 = f(matrix, 0)  # '0' ici indique probablement que les distances ne sont pas dirigées

    # On compare les distances obtenues à la limite l, en générant une matrice booléenne : Vrai si longueur <= l, Faux sinon
    within_limit = fw1 <= l

    # On réapplique Floyd-Warshall sur la matrice booléenne (type cast possible implicite) pour propager l'information
    # Cela construira, pour chaque couple de sommets, le nombre minimal d'étapes nécessaires pour atteindre un sommet en utilisant uniquement des arêtes de longueur maximum l
    fw2 = f(within_limit)

    # Pour chaque requête, on extrait les indices source et cible à partir du tableau t :
    # - t[m+1::2] = à partir de l'indice m+1, un sur deux, ce sont les indices source des requêtes
    # - t[m+2::2] = à partir de l'indice m+2, un sur deux, ce sont les indices cible des requêtes
    src_indices = t[m+1::2]
    dst_indices = t[m+2::2]

    # On extrait, pour chaque requête, la valeur correspondante (plus court chemin en nombre de "sauts" de <= l) dans la matrice de résultats fw2
    results = fw2[src_indices, dst_indices]

    # On "clip" les résultats pour qu'ils soient au minimum 0 et au maximum n (pour éviter des valeurs aberrantes comme l'infini)
    results_clipped = clip(results, 0, n)

    # On convertit les résultats en entiers (ils sont probablement des floats, ou valeurs spéciales)
    results_int = results_clipped.astype(int)

    # On calcule (résultat % n) - 1 pour chaque élément.
    # Cela peut servir à renvoyer -1 en cas d'inaccessibilité (infinis) ou à normaliser les réponses selon les besoins du problème.
    final_results = (results_int % n) - 1

    # On convertit chaque résultat en chaîne de caractères pour affichage
    # 'map(str, ...)' applique str à chaque élément
    # 'join' rassemble les lignes avec des sauts de ligne
    output = '\n'.join(map(str, final_results))

    # Affiche le résultat final à l'entrée standard
    print(output)

# Exécution de la fonction principale
main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' numpy' (ID: 19529)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' *' (ID: 425)
  Prédit: 'array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'array' → logprob: -0.6354337930679321
    2. ' array' → logprob: -0.7604337930679321
    3. ' as' → logprob: -7.010433673858643
    4. 'random' → logprob: -7.010433673858643
    5. ' random' → logprob: -7.385433673858643
    6. ' ndarray' → logprob: -8.7604341506958
    7. 'empty' → logprob: -10.0104341506958
    8. '```' → logprob: -10.3854341506958
    9. ' np' → logprob: -10.6354341506958
    10. 'as' → logprob: -10.6354341506958

Token 4: ' ' (ID: 220)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.12305337190628052
    2. '(' → logprob: -2.2480533123016357
    3. 'a' → logprob: -6.123053550720215
    4. 'import' → logprob: -6.248053550720215
    5. '`' → logprob: -7.123053550720215
    6. ')' → logprob: -7.873053550720215
    7. '\(' → logprob: -7.873053550720215
    8. '```' → logprob: -8.123053550720215
    9. ',' → logprob: -8.248053550720215
    10. '(
' → logprob: -8.373053550720215

Token 5: ' #' (ID: 1069)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.409975290298462
    2. '.' → logprob: -1.534975290298462
    3. 'as' → logprob: -1.659975290298462
    4. '(' → logprob: -1.784975290298462
    5. 'random' → logprob: -2.534975290298462
    6. 'array' → logprob: -3.034975290298462
    7. 'import' → logprob: -3.784975290298462
    8. 'ar' → logprob: -4.534975051879883
    9. ' as' → logprob: -6.159975051879883
    10. 'newline' → logprob: -6.284975051879883

Token 6: ' Im' (ID: 3133)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.19526249170303345
    2. '*' → logprob: -1.8202624320983887
    3. ' *' → logprob: -5.320262432098389
    4. 'import' → logprob: -5.320262432098389
    5. 'a' → logprob: -6.945262432098389
    6. '<|end|>' → logprob: -7.570262432098389
    7. ' import' → logprob: -7.695262432098389
    8. '.' → logprob: -7.820262432098389
    9. ' `' → logprob: -8.070262908935547
    10. ' **' → logprob: -8.070262908935547

Token 7: 'porte' (ID: 17761)
  Prédit: 'port'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'port' → logprob: -1.9981420336989686e-05
    2. 'import' → logprob: -12.125020027160645
    3. 'ports' → logprob: -12.750020027160645
    4. 'ported' → logprob: -12.750020027160645
    5. 'p' → logprob: -12.875020027160645
    6. 'por' → logprob: -14.000020027160645
    7. '```' → logprob: -14.125020027160645
    8. '#' → logprob: -14.125020027160645
    9. 'portable' → logprob: -14.125020027160645
    10. 'porter' → logprob: -14.375020027160645

Token 8: ' toutes' (ID: 17502)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.06558705121278763
    2. ' ' → logprob: -3.065587043762207
    3. 'nt' → logprob: -5.690587043762207
    4. 'space' → logprob: -5.940587043762207
    5. 'rt' → logprob: -6.190587043762207
    6. ' r' → logprob: -6.190587043762207
    7. 'l' → logprob: -7.315587043762207
    8. '_' → logprob: -7.440587043762207
    9. 's' → logprob: -7.440587043762207
    10. 't' → logprob: -7.565587043762207

Token 9: ' les' (ID: 1341)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.11091043800115585
    2. '(' → logprob: -2.360910415649414
    3. ' (' → logprob: -5.110910415649414
    4. '  ' → logprob: -6.735910415649414
    5. '()' → logprob: -7.110910415649414
    6. '<|end|>' → logprob: -7.110910415649414
    7. '_' → logprob: -7.610910415649414
    8. '(space' → logprob: -8.235910415649414
    9. 'space' → logprob: -8.735910415649414
    10. ' les' → logprob: -9.110910415649414

Token 10: ' fonctions' (ID: 87283)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0150201320648193
    2. 'array' → logprob: -1.8900201320648193
    3. ' numpy' → logprob: -2.2650201320648193
    4. 'arrays' → logprob: -2.6400201320648193
    5. ' fonctions' → logprob: -2.7650201320648193
    6. ' arrays' → logprob: -2.7650201320648193
    7. ' array' → logprob: -3.3900201320648193
    8. ' matrices' → logprob: -3.3900201320648193
    9. 'numpy' → logprob: -4.140020370483398
    10. '_' → logprob: -4.515020370483398

Token 11: ' du' (ID: 1462)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.1730515956878662
    2. ' ' → logprob: -1.2980515956878662
    3. ',' → logprob: -1.4230515956878662
    4. 'import' → logprob: -2.673051595687866
    5. '<|end|>' → logprob: -3.423051595687866
    6. '\' → logprob: -4.298051834106445
    7. ')' → logprob: -4.423051834106445
    8. 'as' → logprob: -4.673051834106445
    9. ' as' → logprob: -4.673051834106445
    10. '```' → logprob: -5.548051834106445

Token 12: ' module' (ID: 8827)
  Prédit: ' numpy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' numpy' → logprob: -0.31542569398880005
    2. 'numpy' → logprob: -1.3154256343841553
    3. '_numpy' → logprob: -6.315425872802734
    4. ' ' → logprob: -9.690425872802734
    5. 'os' → logprob: -10.190425872802734
    6. ' ndarray' → logprob: -10.440425872802734
    7. 'math' → logprob: -10.440425872802734
    8. ' math' → logprob: -10.565425872802734
    9. ' os' → logprob: -10.690425872802734
    10. ' ' → logprob: -10.815425872802734

Token 13: ' numpy' (ID: 19529)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.10795476287603378
    2. ' ' → logprob: -2.982954740524292
    3. 'import' → logprob: -3.232954740524292
    4. ',' → logprob: -5.732954978942871
    5. 'a' → logprob: -6.607954978942871
    6. '`' → logprob: -6.857954978942871
    7. '\' → logprob: -6.857954978942871
    8. ')' → logprob: -7.482954978942871
    9. '_' → logprob: -7.607954978942871
    10. ' .' → logprob: -7.607954978942871

Token 14: ' dans' (ID: 2671)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5616255402565002
    2. 'import' → logprob: -1.4366254806518555
    3. ' ' → logprob: -1.9366254806518555
    4. '<|end|>' → logprob: -4.5616254806518555
    5. '\' → logprob: -4.8116254806518555
    6. '\n' → logprob: -5.1866254806518555
    7. ',' → logprob: -5.8116254806518555
    8. ' import' → logprob: -6.1866254806518555
    9. 'newline' → logprob: -6.1866254806518555
    10. '```' → logprob: -6.1866254806518555

Token 15: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.6356263160705566
    2. ' ' → logprob: -1.7606263160705566
    3. ' la' → logprob: -2.2606263160705566
    4. 'l' → logprob: -2.5106263160705566
    5. ' le' → logprob: -3.0106263160705566
    6. 'la' → logprob: -3.5106263160705566
    7. 'le' → logprob: -4.510626316070557
    8. ' numpy' → logprob: -5.260626316070557
    9. ' ' → logprob: -5.635626316070557
    10. '  ' → logprob: -5.635626316070557

Token 16: ''espace' (ID: 118124)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.7861565351486206
    2. ''espace' → logprob: -1.5361565351486206
    3. 'a' → logprob: -1.7861565351486206
    4. 'es' → logprob: -3.16115665435791
    5. 'e' → logprob: -3.28615665435791
    6. ''environnement' → logprob: -3.41115665435791
    7. 'u' → logprob: -4.91115665435791
    8. 's' → logprob: -5.53615665435791
    9. ' '' → logprob: -5.66115665435791
    10. '_' → logprob: -5.78615665435791

Token 17: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.29435890913009644
    2. '_' → logprob: -1.5443589687347412
    3. 's' → logprob: -3.794358968734741
    4. ')' → logprob: -4.794358730316162
    5. '  ' → logprob: -6.294358730316162
    6. ' de' → logprob: -6.294358730316162
    7. ' )' → logprob: -7.044358730316162
    8. '.' → logprob: -7.169358730316162
    9. 'd' → logprob: -7.294358730316162
    10. 'import' → logprob: -7.419358730316162

Token 18: ' noms' (ID: 97041)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.18741482496261597
    2. 'nom' → logprob: -1.8124148845672607
    3. ' noms' → logprob: -4.937414646148682
    4. ' nom' → logprob: -8.06241512298584
    5. '__' → logprob: -10.18741512298584
    6. ' n' → logprob: -10.81241512298584
    7. '{}' → logprob: -11.06241512298584
    8. ' ' → logprob: -11.31241512298584
    9. '```' → logprob: -11.31241512298584
    10. 'names' → logprob: -11.68741512298584

Token 19: ' courant' (ID: 74694)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.044724941253662
    2. ' ' → logprob: -1.294724941253662
    3. '.' → logprob: -1.419724941253662
    4. '<|end|>' → logprob: -3.669724941253662
    5. '\n' → logprob: -3.919724941253662
    6. 'a' → logprob: -3.919724941253662
    7. '
' → logprob: -4.419724941253662
    8. ',' → logprob: -4.669724941253662
    9. '#' → logprob: -4.669724941253662
    10. ' 
' → logprob: -4.919724941253662

Token 20: ',' (ID: 11)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.32034817337989807
    2. 'import' → logprob: -2.0703482627868652
    3. ' ' → logprob: -2.6953482627868652
    4. 'a' → logprob: -3.5703482627868652
    5. ',' → logprob: -4.070348262786865
    6. '
' → logprob: -4.945348262786865
    7. '#' → logprob: -5.070348262786865
    8. ')' → logprob: -5.945348262786865
    9. '\n' → logprob: -5.945348262786865
    10. ' 
' → logprob: -6.195348262786865

Token 21: ' ici' (ID: 27994)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3430370092391968
    2. ' 
' → logprob: -2.2180371284484863
    3. 'import' → logprob: -2.3430371284484863
    4. '  
' → logprob: -3.3430371284484863
    5. 'a' → logprob: -4.718037128448486
    6. '*' → logprob: -5.093037128448486
    7. '<|end|>' → logprob: -5.218037128448486
    8. '
' → logprob: -5.218037128448486
    9. '#' → logprob: -5.718037128448486
    10. '   
' → logprob: -5.718037128448486

Token 22: ' principalement' (ID: 90942)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.02995527721941471
    2. 'import' → logprob: -4.1549553871154785
    3. ' import' → logprob: -5.5299553871154785
    4. ' numpy' → logprob: -5.9049553871154785
    5. '<|end|>' → logprob: -6.0299553871154785
    6. '  ' → logprob: -7.0299553871154785
    7. ',' → logprob: -7.4049553871154785
    8. ' as' → logprob: -7.5299553871154785
    9. ' ,' → logprob: -7.5299553871154785
    10. ' 
' → logprob: -8.15495491027832

Token 23: ' pour' (ID: 1930)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.7176417112350464
    2. ' ' → logprob: -1.0926417112350464
    3. ' as' → logprob: -2.842641830444336
    4. ',' → logprob: -3.217641830444336
    5. 'as' → logprob: -3.342641830444336
    6. '`' → logprob: -4.717641830444336
    7. 'a' → logprob: -5.092641830444336
    8. 'numpy' → logprob: -5.217641830444336
    9. ' numpy' → logprob: -5.592641830444336
    10. ' import' → logprob: -6.217641830444336

Token 24: ' ses' (ID: 6707)
  Prédit: ' manip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' manip' → logprob: -0.5266919732093811
    2. 'l' → logprob: -1.7766919136047363
    3. ' l' → logprob: -3.0266919136047363
    4. 'la' → logprob: -3.6516919136047363
    5. ' travailler' → logprob: -3.9016919136047363
    6. ' la' → logprob: -3.9016919136047363
    7. ' faciliter' → logprob: -4.151691913604736
    8. 'calcul' → logprob: -4.526691913604736
    9. 'les' → logprob: -4.651691913604736
    10. ' effectuer' → logprob: -4.776691913604736

Token 25: ' types' (ID: 6009)
  Prédit: ' fonctions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' fonctions' → logprob: -0.24656963348388672
    2. ' fonctionnalités' → logprob: -3.3715696334838867
    3. ' tableaux' → logprob: -3.3715696334838867
    4. ' arrays' → logprob: -3.7465696334838867
    5. ' array' → logprob: -4.371569633483887
    6. 'array' → logprob: -4.621569633483887
    7. 's' → logprob: -4.746569633483887
    8. 'arrays' → logprob: -4.746569633483887
    9. ' matrices' → logprob: -4.871569633483887
    10. ' vect' → logprob: -4.871569633483887

Token 26: ' de' (ID: 334)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4325050413608551
    2. 'import' → logprob: -2.9325051307678223
    3. '\n' → logprob: -3.0575051307678223
    4. ' ' → logprob: -3.3075051307678223
    5. ',' → logprob: -3.4325051307678223
    6. ' 
' → logprob: -3.4325051307678223
    7. ' 

' → logprob: -3.6825051307678223
    8. '#' → logprob: -3.8075051307678223
    9. '.' → logprob: -3.9325051307678223
    10. '  
' → logprob: -4.182505130767822

Token 27: ' données' (ID: 30580)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.45193907618522644
    2. ' données' → logprob: -1.2019391059875488
    3. 'array' → logprob: -4.576939105987549
    4. 'nd' → logprob: -4.951939105987549
    5. 'types' → logprob: -4.951939105987549
    6. 'dtype' → logprob: -4.951939105987549
    7. ' tableaux' → logprob: -4.951939105987549
    8. 'data' → logprob: -5.201939105987549
    9. 'don' → logprob: -5.951939105987549
    10. ' d' → logprob: -6.076939105987549

Token 28: ' et' (ID: 859)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1380215883255005
    2. '.' → logprob: -1.5130215883255005
    3. 'import' → logprob: -1.8880215883255005
    4. ',' → logprob: -2.638021469116211
    5. '\n' → logprob: -3.013021469116211
    6. '
' → logprob: -3.013021469116211
    7. '#' → logprob: -3.263021469116211
    8. ' 
' → logprob: -3.888021469116211
    9. '' → logprob: -4.013021469116211
    10. 'a' → logprob: -4.138021469116211

Token 29: ' opérations' (ID: 102793)
  Prédit: ' fonctions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fonctions' → logprob: -0.17584733664989471
    2. ' ses' → logprob: -3.175847291946411
    3. 'l' → logprob: -4.30084753036499
    4. ' constantes' → logprob: -4.55084753036499
    5. ' fonctionnalités' → logprob: -4.55084753036499
    6. ' opérations' → logprob: -4.55084753036499
    7. 'array' → logprob: -4.67584753036499
    8. ' l' → logprob: -5.05084753036499
    9. ' structures' → logprob: -5.17584753036499
    10. 'les' → logprob: -5.55084753036499

Token 30: ' de' (ID: 334)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.425791621208191
    2. 'a' → logprob: -1.675791621208191
    3. '
' → logprob: -1.800791621208191
    4. '.' → logprob: -2.3007917404174805
    5. '\n' → logprob: -2.6757917404174805
    6. '#' → logprob: -3.1757917404174805
    7. ' ' → logprob: -3.3007917404174805
    8. ',' → logprob: -3.6757917404174805
    9. 'n' → logprob: -4.1757917404174805
    10. '\' → logprob: -4.3007917404174805

Token 31: ' tableau' (ID: 67053)
  Prédit: ' calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calcul' → logprob: -0.3683837652206421
    2. 'calcul' → logprob: -1.868383765220642
    3. ' tableau' → logprob: -3.7433838844299316
    4. 'array' → logprob: -3.8683838844299316
    5. 'mat' → logprob: -4.118383884429932
    6. ' array' → logprob: -4.368383884429932
    7. ' manipulation' → logprob: -4.618383884429932
    8. ' matrices' → logprob: -4.618383884429932
    9. ' numpy' → logprob: -4.993383884429932
    10. ' tableaux' → logprob: -5.118383884429932

Token 32: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.4449334144592285
    2. '
' → logprob: -1.8199334144592285
    3. 'import' → logprob: -2.0699334144592285
    4. '.' → logprob: -2.1949334144592285
    5. ' ' → logprob: -2.4449334144592285
    6. 'a' → logprob: -2.4449334144592285
    7. '#' → logprob: -3.0699334144592285
    8. '' → logprob: -3.1949334144592285
    9. 'n' → logprob: -3.8199334144592285
    10. ' 
' → logprob: -4.0699334144592285

Token 33: 'from' (ID: 2845)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.262678861618042
    2. '#' → logprob: -1.637678861618042
    3. 'a' → logprob: -2.012678861618042
    4. '
' → logprob: -2.387678861618042
    5. 'import' → logprob: -2.512678861618042
    6. '' → logprob: -3.262678861618042
    7. '\' → logprob: -3.387678861618042
    8. ' 
' → logprob: -3.512678861618042
    9. '.' → logprob: -3.762678861618042
    10. '  
' → logprob: -4.137679100036621

Token 34: ' scipy' (ID: 68933)
  Prédit: ' pandas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pandas' → logprob: -0.8029299974441528
    2. ' math' → logprob: -1.4279299974441528
    3. ' scipy' → logprob: -1.8029299974441528
    4. ' numpy' → logprob: -2.1779298782348633
    5. ' sklearn' → logprob: -4.302929878234863
    6. ' sym' → logprob: -5.052929878234863
    7. ' matplotlib' → logprob: -5.552929878234863
    8. ' sys' → logprob: -6.052929878234863
    9. ' tensorflow' → logprob: -6.177929878234863
    10. ' random' → logprob: -6.177929878234863

Token 35: '.s' (ID: 640)
  Prédit: ' import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.20601779222488403
    2. '.' → logprob: -1.9560177326202393
    3. '.linalg' → logprob: -3.5810177326202393
    4. 'import' → logprob: -4.706017971038818
    5. '.stats' → logprob: -5.956017971038818
    6. '.optimize' → logprob: -6.331017971038818
    7. ' .' → logprob: -6.706017971038818
    8. '.signal' → logprob: -7.081017971038818
    9. '.interpolate' → logprob: -7.456017971038818
    10. '.special' → logprob: -7.831017971038818

Token 36: 'parse' (ID: 4841)
  Prédit: 'ci'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ci' → logprob: -1.5778882503509521
    2. 'p' → logprob: -1.8278882503509521
    3. 'patial' → logprob: -1.8278882503509521
    4. 'parse' → logprob: -1.9528882503509521
    5. 'pecial' → logprob: -2.077888250350952
    6. 'pi' → logprob: -2.577888250350952
    7. 'cip' → logprob: -3.077888250350952
    8. 'c' → logprob: -3.827888250350952
    9. 'pat' → logprob: -4.202888488769531
    10. 'ignal' → logprob: -4.702888488769531

Token 37: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.10175589472055435
    2. 'import' → logprob: -2.3517558574676514
    3. '.linalg' → logprob: -6.8517560958862305
    4. '	import' → logprob: -8.35175609588623
    5. '.' → logprob: -8.85175609588623
    6. ' ' → logprob: -9.85175609588623
    7. '.c' → logprob: -11.35175609588623
    8. ' im' → logprob: -11.47675609588623
    9. ' .' → logprob: -11.85175609588623
    10. '.import' → logprob: -12.10175609588623

Token 38: ' *' (ID: 425)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.7395012378692627
    2. ' csr' → logprob: -1.3645012378692627
    3. ' ' → logprob: -1.7395012378692627
    4. ' co' → logprob: -3.2395012378692627
    5. 'csr' → logprob: -4.239500999450684
    6. ' b' → logprob: -4.489500999450684
    7. ' lil' → logprob: -4.739500999450684
    8. 'c' → logprob: -4.864500999450684
    9. ' cs' → logprob: -6.489500999450684
    10. 'co' → logprob: -6.489500999450684

Token 39: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.416328489780426
    2. '<|end|>' → logprob: -1.1663284301757812
    3. 'import' → logprob: -4.041328430175781
    4. ' 
' → logprob: -5.041328430175781
    5. ' 

' → logprob: -6.166328430175781
    6. 'from' → logprob: -7.541328430175781
    7. '<|end|>' → logprob: -8.041328430175781
    8. '
' → logprob: -8.291328430175781
    9. ' import' → logprob: -8.416328430175781
    10. '[' → logprob: -8.666328430175781

Token 40: ' #' (ID: 1069)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1166069507598877
    2. 'from' → logprob: -1.2416069507598877
    3. 'import' → logprob: -1.7416069507598877
    4. '\n' → logprob: -2.4916069507598877
    5. '#' → logprob: -3.6166069507598877
    6. 's' → logprob: -3.8666069507598877
    7. ',' → logprob: -4.616606712341309
    8. '.' → logprob: -4.616606712341309
    9. ' 
' → logprob: -4.991606712341309
    10. '' → logprob: -4.991606712341309

Token 41: ' Im' (ID: 3133)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.18701088428497314
    2. 'from' → logprob: -2.6870107650756836
    3. ' from' → logprob: -3.6870107650756836
    4. ' ' → logprob: -4.062010765075684
    5. 'import' → logprob: -4.187010765075684
    6. ' scipy' → logprob: -4.562010765075684
    7. 's' → logprob: -4.687010765075684
    8. ' import' → logprob: -4.687010765075684
    9. '<|end|>' → logprob: -4.687010765075684
    10. '*' → logprob: -5.937010765075684

Token 42: 'porte' (ID: 17761)
  Prédit: 'port'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'port' → logprob: -0.10222362726926804
    2. 'porte' → logprob: -2.3522236347198486
    3. 'porter' → logprob: -6.8522233963012695
    4. 'por' → logprob: -7.8522233963012695
    5. 'import' → logprob: -9.10222339630127
    6. 'po' → logprob: -9.10222339630127
    7. 'orte' → logprob: -9.22722339630127
    8. 'p' → logprob: -9.72722339630127
    9. 'porta' → logprob: -9.97722339630127
    10. 'ported' → logprob: -10.72722339630127

Token 43: ' toutes' (ID: 17502)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.19529150426387787
    2. '<|end|>' → logprob: -2.945291519165039
    3. ' ' → logprob: -3.195291519165039
    4. ' scipy' → logprob: -3.570291519165039
    5. 's' → logprob: -4.320291519165039
    6. 'from' → logprob: -4.945291519165039
    7. 'all' → logprob: -5.320291519165039
    8. 'the' → logprob: -5.570291519165039
    9. '*' → logprob: -5.695291519165039
    10. 'everything' → logprob: -5.945291519165039

Token 44: ' les' (ID: 1341)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 45: ' fonctions' (ID: 87283)
  Prédit: ' fonctions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fonctions' → logprob: -0.24715495109558105
    2. 'fon' → logprob: -2.497154951095581
    3. ' functions' → logprob: -3.247154951095581
    4. 'functions' → logprob: -3.247154951095581
    5. 'fonction' → logprob: -3.497154951095581
    6. 'modules' → logprob: -4.74715518951416
    7. ' ' → logprob: -4.87215518951416
    8. 'f' → logprob: -5.99715518951416
    9. ' fonctionnalités' → logprob: -6.12215518951416
    10. 's' → logprob: -6.74715518951416

Token 46: ' du' (ID: 1462)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 47: ' module' (ID: 8827)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7896344065666199
    2. 'numpy' → logprob: -2.0396344661712646
    3. ' scipy' → logprob: -2.1646344661712646
    4. 'sc' → logprob: -2.1646344661712646
    5. '.' → logprob: -3.0396344661712646
    6. '.linalg' → logprob: -3.0396344661712646
    7. 'l' → logprob: -3.9146344661712646
    8. ' ' → logprob: -4.1646342277526855
    9. '.s' → logprob: -4.2896342277526855
    10. ' numpy' → logprob: -5.2896342277526855

Token 48: ' scipy' (ID: 68933)
  Prédit: ' scipy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' scipy' → logprob: -0.15426033735275269
    2. 'sc' → logprob: -2.4042603969573975
    3. ' ' → logprob: -3.2792603969573975
    4. 's' → logprob: -4.404260158538818
    5. ' ' → logprob: -6.529260158538818
    6. 'space' → logprob: -8.154260635375977
    7. 'sp' → logprob: -8.404260635375977
    8. ' numpy' → logprob: -8.529260635375977
    9. 'numpy' → logprob: -9.154260635375977
    10. ' space' → logprob: -9.779260635375977

Token 49: '.s' (ID: 640)
  Prédit: '.s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.s' → logprob: -0.5223264694213867
    2. '.' → logprob: -1.0223264694213867
    3. 's' → logprob: -3.3973264694213867
    4. '_s' → logprob: -5.397326469421387
    5. '.linalg' → logprob: -5.647326469421387
    6. '_sparse' → logprob: -6.147326469421387
    7. 'import' → logprob: -6.647326469421387
    8. '._' → logprob: -7.647326469421387
    9. '<|end|>' → logprob: -7.897326469421387
    10. '_' → logprob: -8.397326469421387

Token 50: 'parse' (ID: 4841)
  Prédit: 'parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.008321654051542282
    2. 'par' → logprob: -5.008321762084961
    3. 'pa' → logprob: -6.758321762084961
    4. 'p' → logprob: -8.758321762084961
    5. 'patial' → logprob: -9.883321762084961
    6. 'parsed' → logprob: -10.008321762084961
    7. 'pars' → logprob: -10.133321762084961
    8. 'pare' → logprob: -10.133321762084961
    9. 'pm' → logprob: -11.133321762084961
    10. '```' → logprob: -11.133321762084961

Token 51: ',' (ID: 11)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.8433394432067871
    2. ' ' → logprob: -1.718339443206787
    3. 'from' → logprob: -2.218339443206787
    4. '#' → logprob: -2.718339443206787
    5. '<|end|>' → logprob: -2.968339443206787
    6. '\n' → logprob: -3.343339443206787
    7. '
' → logprob: -3.468339443206787
    8. '.' → logprob: -3.968339443206787
    9. '_' → logprob: -4.093339443206787
    10. '' → logprob: -4.343339443206787

Token 52: ' utilisé' (ID: 53138)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.012706235982477665
    2. 'import' → logprob: -4.887706279754639
    3. '<|end|>' → logprob: -6.387706279754639
    4. '#' → logprob: -6.887706279754639
    5. ' import' → logprob: -7.512706279754639
    6. ' #' → logprob: -7.887706279754639
    7. ' 
' → logprob: -8.51270580291748
    8. 's' → logprob: -8.76270580291748
    9. ' )' → logprob: -9.01270580291748
    10. '  ' → logprob: -9.01270580291748

Token 53: ' pour' (ID: 1930)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7898550033569336
    2. ' ' → logprob: -1.0398550033569336
    3. ' pour' → logprob: -2.4148550033569336
    4. 'pour' → logprob: -3.2898550033569336
    5. '.' → logprob: -3.4148550033569336
    6. 'for' → logprob: -4.039855003356934
    7. '<|end|>' → logprob: -5.039855003356934
    8. ' ' → logprob: -6.414855003356934
    9. ' to' → logprob: -6.664855003356934
    10. 's' → logprob: -7.039855003356934

Token 54: ' représ' (ID: 31534)
  Prédit: ' manip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' manip' → logprob: -1.4022399187088013
    2. 'la' → logprob: -1.5272399187088013
    3. ' la' → logprob: -1.6522399187088013
    4. ' gérer' → logprob: -1.9022399187088013
    5. 'l' → logprob: -2.5272397994995117
    6. ' travailler' → logprob: -3.1522397994995117
    7. 'man' → logprob: -3.9022397994995117
    8. ' créer' → logprob: -4.402239799499512
    9. 'g' → logprob: -5.027239799499512
    10. ' traiter' → logprob: -5.152239799499512

Token 55: 'enter' (ID: 3547)
  Prédit: 'enter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enter' → logprob: -0.06497126817703247
    2. 'ent' → logprob: -3.3149712085723877
    3. 'ente' → logprob: -4.189971446990967
    4. 'entation' → logprob: -5.189971446990967
    5. 'import' → logprob: -6.814971446990967
    6. 'u' → logprob: -7.189971446990967
    7. 'entes' → logprob: -7.314971446990967
    8. 's' → logprob: -7.689971446990967
    9. 'resenter' → logprob: -7.689971446990967
    10. '```' → logprob: -7.814971446990967

Token 56: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.3266024887561798
    2. ' ' → logprob: -2.7016024589538574
    3. '<|end|>' → logprob: -2.7016024589538574
    4. 's' → logprob: -3.3266024589538574
    5. 'les' → logprob: -3.4516024589538574
    6. ' les' → logprob: -3.5766024589538574
    7. 'des' → logprob: -4.326602458953857
    8. ' matrices' → logprob: -4.326602458953857
    9. 'l' → logprob: -4.951602458953857
    10. ' scipy' → logprob: -5.701602458953857

Token 57: ' matrices' (ID: 75935)
  Prédit: ' matrices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' matrices' → logprob: -0.07943408191204071
    2. 'mat' → logprob: -2.5794341564178467
    3. ' matr' → logprob: -8.079434394836426
    4. ' ' → logprob: -10.204434394836426
    5. 'matrix' → logprob: -10.204434394836426
    6. ' matrix' → logprob: -10.329434394836426
    7. ' matric' → logprob: -10.579434394836426
    8. ' mat' → logprob: -10.704434394836426
    9. 'm' → logprob: -10.954434394836426
    10. ' ' → logprob: -10.954434394836426

Token 58: ' cre' (ID: 1519)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 59: 'uses' (ID: 5977)
  Prédit: 'uses'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uses' → logprob: -0.26307371258735657
    2. 'use' → logprob: -2.513073682785034
    3. 'ux' → logprob: -2.638073682785034
    4. 'u' → logprob: -3.013073682785034
    5. '```' → logprob: -4.888073921203613
    6. 's' → logprob: -5.388073921203613
    7. 'e' → logprob: -5.388073921203613
    8. 'a' → logprob: -6.263073921203613
    9. 'us' → logprob: -6.388073921203613
    10. 'es' → logprob: -6.888073921203613

Token 60: ' (' (ID: 350)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4718831181526184
    2. '#' → logprob: -2.3468830585479736
    3. '' → logprob: -2.3468830585479736
    4. '

' → logprob: -3.2218830585479736
    5. '\n' → logprob: -3.3468830585479736
    6. ' 
' → logprob: -3.8468830585479736
    7. ' 

' → logprob: -4.221883296966553
    8. 'import' → logprob: -4.471883296966553
    9. 'def' → logprob: -4.846883296966553
    10. ' 
 
' → logprob: -4.971883296966553

Token 61: 's' (ID: 82)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6378451585769653
    2. ' scipy' → logprob: -1.5128451585769653
    3. 's' → logprob: -2.262845039367676
    4. 'sc' → logprob: -3.512845039367676
    5. ' )' → logprob: -3.762845039367676
    6. ' matrices' → logprob: -4.012845039367676
    7. 'l' → logprob: -4.262845039367676
    8. '<|end|>' → logprob: -4.762845039367676
    9. 'mat' → logprob: -5.012845039367676
    10. ' ' → logprob: -5.387845039367676

Token 62: 'parse' (ID: 4841)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.8118283748626709
    2. 'parse' → logprob: -1.436828374862671
    3. 'p' → logprob: -1.686828374862671
    4. 'pa' → logprob: -4.43682861328125
    5. 'parser' → logprob: -4.43682861328125
    6. 'parsed' → logprob: -4.43682861328125
    7. 'c' → logprob: -5.06182861328125
    8. 'u' → logprob: -5.18682861328125
    9. '#' → logprob: -5.18682861328125
    10. '```' → logprob: -5.24932861328125

Token 63: ' matrices' (ID: 75935)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09819845110177994
    2. ' )' → logprob: -2.723198413848877
    3. ' matrices' → logprob: -3.723198413848877
    4. 'mat' → logprob: -6.348198413848877
    5. ' ' → logprob: -8.098198890686035
    6. 's' → logprob: -8.223198890686035
    7. '_)' → logprob: -8.473198890686035
    8. ').' → logprob: -8.598198890686035
    9. '_' → logprob: -8.598198890686035
    10. 'es' → logprob: -8.973198890686035

Token 64: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00021807955636177212
    2. ')
' → logprob: -9.500218391418457
    3. ' )' → logprob: -10.125218391418457
    4. ',' → logprob: -11.500218391418457
    5. '')' → logprob: -11.500218391418457
    6. '<|end|>' → logprob: -11.500218391418457
    7. '#' → logprob: -11.625218391418457
    8. 'import' → logprob: -11.750218391418457
    9. '```' → logprob: -11.750218391418457
    10. '*' → logprob: -11.750218391418457

Token 65: ' efficacement' (ID: 155449)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4642637372016907
    2. '#' → logprob: -1.589263677597046
    3. '' → logprob: -2.589263677597046
    4. 'd' → logprob: -3.964263677597046
    5. '

' → logprob: -4.339263916015625
    6. 'n' → logprob: -4.339263916015625
    7. 'import' → logprob: -4.714263916015625
    8. ' 
' → logprob: -5.214263916015625
    9. '\n' → logprob: -5.464263916015625
    10. '
' → logprob: -5.589263916015625

Token 66: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2882760465145111
    2. '' → logprob: -2.413275957107544
    3. '#' → logprob: -2.788275957107544
    4. 'import' → logprob: -4.413276195526123
    5. '

' → logprob: -4.413276195526123
    6. ' 
' → logprob: -4.538276195526123
    7. 'x' → logprob: -4.538276195526123
    8. '
' → logprob: -4.788276195526123
    9. 'd' → logprob: -5.038276195526123
    10. 'a' → logprob: -5.163276195526123

Token 67: 'def' (ID: 1314)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.061988353729248
    2. 'd' → logprob: -1.436988353729248
    3. 'def' → logprob: -1.436988353729248
    4. '
' → logprob: -3.061988353729248
    5. '' → logprob: -3.186988353729248
    6. '

' → logprob: -3.936988353729248
    7. 'x' → logprob: -4.311988353729248
    8. 'a' → logprob: -4.561988353729248
    9. 'c' → logprob: -4.686988353729248
    10. 'import' → logprob: -4.686988353729248

Token 68: ' main' (ID: 2758)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.02555222436785698
    2. ' ' → logprob: -4.650552272796631
    3. ' matrix' → logprob: -5.525552272796631
    4. ' create' → logprob: -5.650552272796631
    5. ' dense' → logprob: -6.400552272796631
    6. ' space' → logprob: -6.650552272796631
    7. ' s' → logprob: -7.025552272796631
    8. ' convert' → logprob: -7.650552272796631
    9. ' my' → logprob: -7.650552272796631
    10. ' sparse' → logprob: -7.900552272796631

Token 69: '():' (ID: 9442)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004785988014191389
    2. '_' → logprob: -5.504786014556885
    3. '():' → logprob: -7.754786014556885
    4. ':' → logprob: -9.004785537719727
    5. ' (' → logprob: -9.254785537719727
    6. '()' → logprob: -10.879785537719727
    7. '(:' → logprob: -11.629785537719727
    8. ')' → logprob: -12.004785537719727
    9. '(
' → logprob: -12.254785537719727
    10. '(_' → logprob: -12.629785537719727

Token 70: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31049251556396484
    2. ' ' → logprob: -1.9354925155639648
    3. '[' → logprob: -3.435492515563965
    4. ' 
' → logprob: -3.685492515563965
    5. '    
' → logprob: -3.810492515563965
    6. '(' → logprob: -4.060492515563965
    7. '    ' → logprob: -4.185492515563965
    8. '
' → logprob: -5.935492515563965
    9. 'a' → logprob: -6.935492515563965
    10. ' (' → logprob: -7.185492515563965

Token 71: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0151253938674927
    2. ' 
' → logprob: -1.3901253938674927
    3. ' ' → logprob: -1.5151253938674927
    4. '    
' → logprob: -3.390125274658203
    5. ' A' → logprob: -3.765125274658203
    6. 'a' → logprob: -4.015125274658203
    7. '
' → logprob: -4.015125274658203
    8. 'x' → logprob: -4.265125274658203
    9. 'n' → logprob: -4.390125274658203
    10. ' a' → logprob: -4.515125274658203

Token 72: ' Dé' (ID: 27247)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.034694064408540726
    2. ' 
' → logprob: -4.659694194793701
    3. ' pass' → logprob: -5.284694194793701
    4. '    ' → logprob: -5.284694194793701
    5. '  ' → logprob: -5.784694194793701
    6. ' ' → logprob: -6.159694194793701
    7. '   ' → logprob: -6.659694194793701
    8. ' #' → logprob: -6.784694194793701
    9. '#' → logprob: -6.784694194793701
    10. '     
' → logprob: -6.909694194793701

Token 73: 'claration' (ID: 21396)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.1175495982170105
    2. 'fin' → logprob: -2.3675496578216553
    3. 'fine' → logprob: -4.367549419403076
    4. 'fi' → logprob: -6.242549419403076
    5. 'clare' → logprob: -6.992549419403076
    6. '' → logprob: -8.492549896240234
    7. '   ' → logprob: -8.617549896240234
    8. 'fen' → logprob: -8.742549896240234
    9. 'velop' → logprob: -9.242549896240234
    10. 'mar' → logprob: -9.492549896240234

Token 74: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6965867877006531
    2. '(' → logprob: -0.8215867877006531
    3. ' (' → logprob: -2.821586847305298
    4. ' ' → logprob: -7.571586608886719
    5. ''' → logprob: -8.071586608886719
    6. '  ' → logprob: -8.071586608886719
    7. '    ' → logprob: -8.071586608886719
    8. '   ' → logprob: -8.446586608886719
    9. ' a' → logprob: -8.571586608886719
    10. '(space' → logprob: -8.821586608886719

Token 75: ' la' (ID: 557)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0008352391887456179
    2. ' (' → logprob: -9.000835418701172
    3. '_' → logprob: -9.125835418701172
    4. ' ' → logprob: -9.375835418701172
    5. ' )' → logprob: -9.375835418701172
    6. '(' → logprob: -9.625835418701172
    7. '  ' → logprob: -9.625835418701172
    8. 'space' → logprob: -9.750835418701172
    9. '  ' → logprob: -9.875835418701172
    10. ')' → logprob: -10.750835418701172

Token 76: ' fonction' (ID: 17610)
  Prédit: ' fonction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fonction' → logprob: -0.483807235956192
    2. 'fonction' → logprob: -1.6088072061538696
    3. ' ' → logprob: -2.983807325363159
    4. ' function' → logprob: -3.358807325363159
    5. ' ' → logprob: -3.608807325363159
    6. ' matr' → logprob: -3.858807325363159
    7. ' `' → logprob: -4.48380708694458
    8. ' f' → logprob: -5.23380708694458
    9. ' matrix' → logprob: -5.35880708694458
    10. 'f' → logprob: -5.85880708694458

Token 77: ' principale' (ID: 68926)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.42925646901130676
    2. '(' → logprob: -1.1792564392089844
    3. ' (' → logprob: -3.4292564392089844
    4. '_' → logprob: -6.304256439208984
    5. ' ()' → logprob: -6.304256439208984
    6. ' )' → logprob: -6.679256439208984
    7. '()' → logprob: -6.679256439208984
    8. ' (
' → logprob: -7.304256439208984
    9. '(
' → logprob: -7.804256439208984
    10. '  ' → logprob: -7.929256439208984

Token 78: ' du' (ID: 1462)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.46246835589408875
    2. ':' → logprob: -1.7124683856964111
    3. '(' → logprob: -2.712468385696411
    4. '\' → logprob: -3.087468385696411
    5. '
' → logprob: -3.962468385696411
    6. ' ' → logprob: -3.962468385696411
    7. '    
' → logprob: -5.087468147277832
    8. '    ' → logprob: -5.212468147277832
    9. ' 
' → logprob: -5.212468147277832
    10. ')' → logprob: -5.837468147277832

Token 79: ' programme' (ID: 18190)
  Prédit: ' programme'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' programme' → logprob: -0.6181929111480713
    2. ' ' → logprob: -1.1181929111480713
    3. ' code' → logprob: -2.6181929111480713
    4. ' script' → logprob: -3.3681929111480713
    5. ' program' → logprob: -4.118192672729492
    6. 'programme' → logprob: -5.118192672729492
    7. 'program' → logprob: -6.868192672729492
    8. ' space' → logprob: -7.743192672729492
    9. ' ' → logprob: -7.868192672729492
    10. ' ```' → logprob: -8.118192672729492

Token 80: '

' (ID: 279)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9029087424278259
    2. '   ' → logprob: -1.2779088020324707
    3. '(' → logprob: -1.9029088020324707
    4. ' ' → logprob: -3.0279088020324707
    5. '\' → logprob: -3.4029088020324707
    6. '
' → logprob: -3.6529088020324707
    7. ' 
' → logprob: -4.152908802032471
    8. '    ' → logprob: -4.527908802032471
    9. '    
' → logprob: -5.027908802032471
    10. '(
' → logprob: -5.527908802032471

Token 81: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39927369356155396
    2. ' ' → logprob: -1.2742736339569092
    3. ' 
' → logprob: -4.399273872375488
    4. 'n' → logprob: -4.774273872375488
    5. '    
' → logprob: -4.899273872375488
    6. 'x' → logprob: -5.524273872375488
    7. 'a' → logprob: -5.774273872375488
    8. '    ' → logprob: -5.899273872375488
    9. '[' → logprob: -6.149273872375488
    10. '' → logprob: -6.524273872375488

Token 82: ' #' (ID: 1069)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.103746697306633
    2. ' A' → logprob: -3.7287466526031494
    3. 'n' → logprob: -3.8537466526031494
    4. '#' (adapté à ' #') → logprob: -3.9787466526031494
    5. 'x' → logprob: -5.3537468910217285
    6. '   ' → logprob: -5.6037468910217285
    7. 'M' → logprob: -5.6037468910217285
    8. 'a' → logprob: -5.6037468910217285
    9. 'data' → logprob: -5.8537468910217285
    10. 'matrix' → logprob: -5.9787468910217285

Token 83: ' f' (ID: 285)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.6281231641769409
    2. 'A' → logprob: -2.6281232833862305
    3. ' n' → logprob: -2.7531232833862305
    4. ' matrix' → logprob: -2.7531232833862305
    5. ' data' → logprob: -3.3781232833862305
    6. ' #' → logprob: -3.5031232833862305
    7. '#' → logprob: -3.6281232833862305
    8. 'n' → logprob: -3.7531232833862305
    9. ' ' → logprob: -3.7531232833862305
    10. ' a' → logprob: -4.5031232833862305

Token 84: ' représent' (ID: 42664)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.06496769189834595
    2. 'ilename' → logprob: -4.189967632293701
    3. 'ile' → logprob: -4.939967632293701
    4. 'o' → logprob: -4.939967632293701
    5. '   ' → logprob: -5.189967632293701
    6. 'ormat' → logprob: -5.189967632293701
    7. ' =' → logprob: -5.314967632293701
    8. 'i' → logprob: -6.064967632293701
    9. 'rom' → logprob: -6.314967632293701
    10. ' ' → logprob: -6.814967632293701

Token 85: 'era' (ID: 2060)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0684342309832573
    2. 'é' → logprob: -3.568434238433838
    3. 'ée' → logprob: -4.068434238433838
    4. 'er' → logprob: -4.693434238433838
    5. 'ant' → logprob: -4.818434238433838
    6. 'ee' → logprob: -6.193434238433838
    7. 'ed' → logprob: -7.818434238433838
    8. 'ation' → logprob: -7.943434238433838
    9. 'ent' → logprob: -8.31843376159668
    10. 'a' → logprob: -8.81843376159668

Token 86: ' la' (ID: 557)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.5701702833175659
    2. ' la' → logprob: -1.945170283317566
    3. ' un' → logprob: -2.3201704025268555
    4. ' ' → logprob: -2.8201704025268555
    5. ' des' → logprob: -3.5701704025268555
    6. ' l' → logprob: -4.0701704025268555
    7. ' le' → logprob: -4.1951704025268555
    8. '   ' → logprob: -4.1951704025268555
    9. ' =' → logprob: -4.3201704025268555
    10. '  ' → logprob: -4.9451704025268555

Token 87: ' fonction' (ID: 17610)
  Prédit: ' matr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' matr' → logprob: -0.7002350687980652
    2. ' fonction' → logprob: -1.45023512840271
    3. ' fréquence' → logprob: -3.20023512840271
    4. 'fonction' → logprob: -3.32523512840271
    5. 'on' → logprob: -4.137734889984131
    6. '   ' → logprob: -4.637734889984131
    7. ' liste' → logprob: -4.637734889984131
    8. ' matrix' → logprob: -5.137734889984131
    9. 'a' → logprob: -5.137734889984131
    10. 's' → logprob: -5.200234889984131

Token 88: ' Floyd' (ID: 76639)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4914444088935852
    2. ' ' → logprob: -1.4914443492889404
    3. ' =' → logprob: -2.1164443492889404
    4. '   ' → logprob: -5.2414445877075195
    5. '    ' → logprob: -5.3664445877075195
    6. '<|end|>' → logprob: -5.4914445877075195
    7. '(' → logprob: -5.6164445877075195
    8. '  ' → logprob: -5.6164445877075195
    9. '=' → logprob: -5.6164445877075195
    10. ',' → logprob: -5.7414445877075195

Token 89: '-W' (ID: 14439)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.029595185071229935
    2. '(' → logprob: -4.029595375061035
    3. ' ' → logprob: -5.529595375061035
    4. '   ' → logprob: -6.404595375061035
    5. ''s' → logprob: -7.279595375061035
    6. ' _' → logprob: -7.279595375061035
    7. ',' → logprob: -7.529595375061035
    8. ' (' → logprob: -7.654595375061035
    9. '<|end|>' → logprob: -8.029595375061035
    10. ''' → logprob: -8.279595375061035

Token 90: 'ar' (ID: 277)
  Prédit: 'ar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.013599434867501259
    2. '```' → logprob: -4.513599395751953
    3. 'arshal' → logprob: -6.263599395751953
    4. 'a' → logprob: -8.138599395751953
    5. '``' → logprob: -9.763599395751953
    6. 'ars' → logprob: -10.888599395751953
    7. '%' → logprob: -11.013599395751953
    8. 'arle' → logprob: -11.388599395751953
    9. '' → logprob: -11.451099395751953
    10. '

' → logprob: -11.451099395751953

Token 91: 'shall' (ID: 30275)
  Prédit: 'shall'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shall' → logprob: -0.0382077656686306
    2. 'all' → logprob: -3.663207769393921
    3. '```' → logprob: -5.288207530975342
    4. 'll' → logprob: -5.538207530975342
    5. 'sh' → logprob: -7.288207530975342
    6. 'ar' → logprob: -7.538207530975342
    7. 'shal' → logprob: -7.913207530975342
    8. '``' → logprob: -8.6632080078125
    9. 's' → logprob: -9.5382080078125
    10. 'hall' → logprob: -9.6632080078125

Token 92: ',' (ID: 11)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.03019275702536106
    2. '(' → logprob: -3.9051928520202637
    3. ' ' → logprob: -6.405192852020264
    4. '   ' → logprob: -7.030192852020264
    5. '(n' → logprob: -7.280192852020264
    6. ',' → logprob: -7.405192852020264
    7. '_matrix' → logprob: -7.530192852020264
    8. 's' → logprob: -7.655192852020264
    9. 'n' → logprob: -8.030192375183105
    10. '(f' → logprob: -8.030192375183105

Token 93: ' qui' (ID: 2780)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5154333114624023
    2. '    ' → logprob: -1.5154333114624023
    3. 'n' → logprob: -3.3904333114624023
    4. ' ' → logprob: -3.3904333114624023
    5. '  ' → logprob: -4.515433311462402
    6. ' n' → logprob: -4.640433311462402
    7. ' pass' → logprob: -4.890433311462402
    8. ' ' → logprob: -4.890433311462402
    9. '    
' → logprob: -5.140433311462402
    10. 'def' → logprob: -5.265433311462402

Token 94: ' calc' (ID: 25691)
  Prédit: ' calc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calc' → logprob: -0.9064838886260986
    2. ' compute' → logprob: -2.6564838886260986
    3. ' calculates' → logprob: -2.6564838886260986
    4. ' a' → logprob: -2.9064838886260986
    5. '_' → logprob: -3.0314838886260986
    6. 'n' → logprob: -3.1564838886260986
    7. ' calcul' → logprob: -3.2814838886260986
    8. ' permet' → logprob: -3.2814838886260986
    9. '   ' → logprob: -3.2814838886260986
    10. ' réalise' → logprob: -3.6564838886260986

Token 95: 'ule' (ID: 1601)
  Prédit: 'ule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ule' → logprob: -0.24634481966495514
    2. 'ul' → logprob: -1.621344804763794
    3. 'uler' → logprob: -5.246345043182373
    4. 'ulé' → logprob: -5.496345043182373
    5. 'cule' → logprob: -6.246345043182373
    6. 'l' → logprob: -6.871345043182373
    7. '\' → logprob: -7.121345043182373
    8. 'ulate' → logprob: -7.121345043182373
    9. '*' → logprob: -7.371345043182373
    10. 'u' → logprob: -7.496345043182373

Token 96: ' les' (ID: 1341)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.1068047285079956
    2. ' la' → logprob: -1.2318047285079956
    3. ' les' → logprob: -1.9818047285079956
    4. 's' → logprob: -2.981804847717285
    5. ' le' → logprob: -3.106804847717285
    6. '_' → logprob: -3.606804847717285
    7. '   ' → logprob: -3.606804847717285
    8. 'les' → logprob: -4.106804847717285
    9. ' l' → logprob: -4.481804847717285
    10. ' ' → logprob: -4.981804847717285

Token 97: ' plus' (ID: 2932)
  Prédit: ' plus'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' plus' → logprob: -0.1711120903491974
    2. ' shortest' → logprob: -2.921112060546875
    3. 'plus' → logprob: -3.546112060546875
    4. ' distances' → logprob: -3.671112060546875
    5. 's' → logprob: -4.296112060546875
    6. ' chemin' → logprob: -4.671112060546875
    7. ' chemins' → logprob: -4.796112060546875
    8. '  ' → logprob: -5.171112060546875
    9. 'e' → logprob: -6.671112060546875
    10. '+' → logprob: -7.046112060546875

Token 98: ' courts' (ID: 33374)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.12821194529533386
    2. ' court' → logprob: -2.7532119750976562
    3. ' courts' → logprob: -4.253211975097656
    4. 'court' → logprob: -4.378211975097656
    5. ' _' → logprob: -5.003211975097656
    6. '```' → logprob: -5.003211975097656
    7. 'cour' → logprob: -5.378211975097656
    8. '_c' → logprob: -5.503211975097656
    9. '_short' → logprob: -6.253211975097656
    10. ' courte' → logprob: -6.753211975097656

Token 99: ' chemins' (ID: 192063)
  Prédit: ' chemins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chemins' → logprob: -0.16045869886875153
    2. ' paths' → logprob: -2.53545880317688
    3. ' chemin' → logprob: -3.53545880317688
    4. '_paths' → logprob: -4.160458564758301
    5. '_' → logprob: -4.910458564758301
    6. ' distances' → logprob: -5.785458564758301
    7. '_che' → logprob: -5.785458564758301
    8. ' des' → logprob: -6.285458564758301
    9. '<|end|>' → logprob: -6.285458564758301
    10. ' caminos' → logprob: -6.410458564758301

Token 100: ' entre' (ID: 3853)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.748500645160675
    2. '(' → logprob: -1.6235005855560303
    3. '_' → logprob: -1.8735005855560303
    4. ' ' → logprob: -2.1235005855560303
    5. 'def' → logprob: -4.123500823974609
    6. ' (' → logprob: -4.498500823974609
    7. '  ' → logprob: -5.123500823974609
    8. ')' → logprob: -5.873500823974609
    9. '    ' → logprob: -5.998500823974609
    10. '(
' → logprob: -5.998500823974609

Token 101: ' tous' (ID: 10688)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.7820956707000732
    2. ' toutes' → logprob: -1.5320956707000732
    3. ' tous' → logprob: -1.6570956707000732
    4. 'les' → logprob: -3.2820956707000732
    5. '<|end|>' → logprob: -3.4070956707000732
    6. 'all' → logprob: -4.282095909118652
    7. 's' → logprob: -4.282095909118652
    8. 'tout' → logprob: -4.657095909118652
    9. ' ' → logprob: -4.782095909118652
    10. ' all' → logprob: -5.032095909118652

Token 102: ' les' (ID: 1341)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 103: ' couples' (ID: 29972)
  Prédit: ' couples'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' couples' → logprob: -1.4088671207427979
    2. ' pairs' → logprob: -1.6588671207427979
    3. ' ' → logprob: -1.9088671207427979
    4. ' points' → logprob: -2.033867120742798
    5. 's' → logprob: -2.408867120742798
    6. ' couple' → logprob: -2.533867120742798
    7. ' p' → logprob: -3.408867120742798
    8. 'cou' → logprob: -3.783867120742798
    9. 'points' → logprob: -4.283866882324219
    10. 'p' → logprob: -4.533866882324219

Token 104: ' de' (ID: 334)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 105: ' somm' (ID: 44830)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 106: 'ets' (ID: 1719)
  Prédit: 'ets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ets' → logprob: -0.0017652629176154733
    2. 'et' → logprob: -6.626765251159668
    3. '#' → logprob: -9.001765251159668
    4. 'êts' → logprob: -9.126765251159668
    5. '```' → logprob: -10.376765251159668
    6. 'mets' → logprob: -11.251765251159668
    7. 'ètres' → logprob: -11.314265251159668
    8. 'e' → logprob: -11.564265251159668
    9. 's' → logprob: -11.876765251159668
    10. '' → logprob: -11.876765251159668

Token 107: ' d' (ID: 272)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01570526510477066
    2. '(' → logprob: -5.515705108642578
    3. '    ' → logprob: -6.140705108642578
    4. 'def' → logprob: -6.515705108642578
    5. '  ' → logprob: -6.640705108642578
    6. '_' → logprob: -6.640705108642578
    7. ' ' → logprob: -6.765705108642578
    8. 'n' → logprob: -6.890705108642578
    9. 's' → logprob: -7.640705108642578
    10. '(n' → logprob: -7.890705108642578

Token 108: ''un' (ID: 9788)
  Prédit: ''un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''un' → logprob: -0.07226921617984772
    2. 'un' → logprob: -3.5722692012786865
    3. 'u' → logprob: -4.322269439697266
    4. ''une' → logprob: -4.697269439697266
    5. ' un' → logprob: -5.322269439697266
    6. '’un' → logprob: -5.322269439697266
    7. ''' → logprob: -6.197269439697266
    8. ' ' → logprob: -6.572269439697266
    9. 'e' → logprob: -6.572269439697266
    10. 'es' → logprob: -6.822269439697266

Token 109: ' grap' (ID: 60955)
  Prédit: ' grap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grap' → logprob: -0.5933070778846741
    2. 'gr' → logprob: -1.0933070182800293
    3. ' graph' → logprob: -2.7183070182800293
    4. 'graph' → logprob: -3.0933070182800293
    5. ' ' → logprob: -7.718307018280029
    6. '	graph' → logprob: -8.593307495117188
    7. ' ' → logprob: -9.593307495117188
    8. 's' → logprob: -9.718307495117188
    9. '```' → logprob: -9.968307495117188
    10. 'es' → logprob: -10.093307495117188

Token 110: 'he' (ID: 273)
  Prédit: 'raph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raph' → logprob: -0.27101609110832214
    2. 'rap' → logprob: -2.0210161209106445
    3. 'rès' → logprob: -3.1460161209106445
    4. 'es' → logprob: -3.7710161209106445
    5. 'res' → logprob: -4.5210161209106445
    6. 're' → logprob: -4.8960161209106445
    7. 'e' → logprob: -4.8960161209106445
    8. 'r' → logprob: -5.0210161209106445
    9. 'le' → logprob: -6.7710161209106445
    10. 'he' → logprob: -6.7710161209106445

Token 111: ' pond' (ID: 42367)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021718300879001617
    2. '(' → logprob: -5.396718502044678
    3. '    ' → logprob: -5.646718502044678
    4. 'def' → logprob: -5.771718502044678
    5. 'n' → logprob: -6.271718502044678
    6. '_' → logprob: -6.396718502044678
    7. 'f' → logprob: -6.896718502044678
    8. '  ' → logprob: -7.021718502044678
    9. '(n' → logprob: -7.146718502044678
    10. ')' → logprob: -7.396718502044678

Token 112: 'éré' (ID: 33338)
  Prédit: 'éré'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'éré' → logprob: -0.5459645390510559
    2. 'érés' → logprob: -1.1709644794464111
    3. 'u' → logprob: -3.420964479446411
    4. 'raph' → logprob: -3.920964479446411
    5. 'er' → logprob: -3.920964479446411
    6. 'érées' → logprob: -5.17096471786499
    7. 'r' → logprob: -5.42096471786499
    8. 'def' → logprob: -5.67096471786499
    9. 'é' → logprob: -5.67096471786499
    10. 'érée' → logprob: -6.17096471786499

Token 113: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36373525857925415
    2. 'n' → logprob: -2.9887351989746094
    3. 'def' → logprob: -2.9887351989746094
    4. ' ' → logprob: -3.1137351989746094
    5. '
' → logprob: -3.1137351989746094
    6. '(n' → logprob: -3.6137351989746094
    7. '(' → logprob: -3.9887351989746094
    8. ':' → logprob: -4.488735198974609
    9. '(s' → logprob: -4.488735198974609
    10. '  ' → logprob: -4.738735198974609

Token 114: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03190497308969498
    2. 'n' → logprob: -4.156905174255371
    3. '
' → logprob: -5.281905174255371
    4. '  ' → logprob: -6.281905174255371
    5. '    ' → logprob: -6.406905174255371
    6. ' ' → logprob: -6.406905174255371
    7. '    
' → logprob: -7.156905174255371
    8. 's' → logprob: -7.406905174255371
    9. 'def' → logprob: -7.406905174255371
    10. 'a' → logprob: -7.781905174255371

Token 115: ' f' (ID: 285)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16209177672863007
    2. 'def' → logprob: -2.2870917320251465
    3. '
' → logprob: -3.7870917320251465
    4. 'n' → logprob: -4.6620917320251465
    5. '    
' → logprob: -5.5370917320251465
    6. 'f' (adapté à ' f') → logprob: -6.1620917320251465
    7. ' def' → logprob: -6.1620917320251465
    8. ' 
' → logprob: -6.2870917320251465
    9. ' f' → logprob: -6.5370917320251465
    10. '    ' → logprob: -6.7870917320251465

Token 116: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18072019517421722
    2. '=' → logprob: -1.8057202100753784
    3. '(' → logprob: -8.055720329284668
    4. '.' → logprob: -8.430720329284668
    5. ' ' → logprob: -8.430720329284668
    6. '  ' → logprob: -10.430720329284668
    7. '_' → logprob: -10.430720329284668
    8. ',' → logprob: -10.805720329284668
    9. ' =
' → logprob: -10.805720329284668
    10. ')' → logprob: -10.805720329284668

Token 117: ' cs' (ID: 14980)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.6392201781272888
    2. ' flo' → logprob: -0.7642201781272888
    3. 'flo' → logprob: -5.264220237731934
    4. 'lambda' → logprob: -7.139220237731934
    5. 'fl' → logprob: -8.389220237731934
    6. ' lambda' → logprob: -9.514220237731934
    7. ' ' → logprob: -9.639220237731934
    8. '	f' → logprob: -10.264220237731934
    9. 'cs' → logprob: -10.389220237731934
    10. '```' → logprob: -10.514220237731934

Token 118: 'graph' (ID: 7978)
  Prédit: 'graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.15811191499233246
    2. 'r' → logprob: -2.033111810684204
    3. '_graph' → logprob: -6.408112049102783
    4. 'sp' → logprob: -6.658112049102783
    5. 'f' → logprob: -6.658112049102783
    6. 'd' → logprob: -6.908112049102783
    7. 'rg' → logprob: -7.033112049102783
    8. 'spy' → logprob: -7.158112049102783
    9. 'rip' → logprob: -7.283112049102783
    10. 'graphs' → logprob: -7.283112049102783

Token 119: '.f' (ID: 1196)
  Prédit: '.f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.f' → logprob: -0.3267207145690918
    2. '_f' → logprob: -1.9517207145690918
    3. '_.' → logprob: -2.951720714569092
    4. '_' → logprob: -3.451720714569092
    5. '.' → logprob: -3.826720714569092
    6. 'f' → logprob: -4.326720714569092
    7. '._' → logprob: -4.576720714569092
    8. 'F' → logprob: -6.326720714569092
    9. '.F' → logprob: -6.826720714569092
    10. '_short' → logprob: -6.826720714569092

Token 120: 'loyd' (ID: 58664)
  Prédit: 'loyd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'loyd' → logprob: -0.02162042073905468
    2. 'lo' → logprob: -4.271620273590088
    3. '_f' → logprob: -5.521620273590088
    4. 'l' → logprob: -6.646620273590088
    5. 'w' → logprob: -7.146620273590088
    6. 'f' → logprob: -7.771620273590088
    7. '_' → logprob: -7.896620273590088
    8. '_lo' → logprob: -9.021620750427246
    9. 'lib' → logprob: -9.146620750427246
    10. '_l' → logprob: -9.896620750427246

Token 121: '_w' (ID: 3567)
  Prédit: '_w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_w' → logprob: -0.0001427538663847372
    2. 'war' → logprob: -9.125143051147461
    3. 'War' → logprob: -12.125143051147461
    4. 'w' → logprob: -12.375143051147461
    5. '-war' → logprob: -12.375143051147461
    6. '_' → logprob: -13.000143051147461
    7. '```' → logprob: -13.000143051147461
    8. '_warn' → logprob: -13.500143051147461
    9. '_W' → logprob: -13.875143051147461
    10. '\' → logprob: -14.000143051147461

Token 122: 'ar' (ID: 277)
  Prédit: 'ar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.0001805377542041242
    2. 'arshal' → logprob: -8.6251802444458
    3. 'shall' → logprob: -14.7501802444458
    4. 'arle' → logprob: -15.7501802444458
    5. 'arp' → logprob: -16.375181198120117
    6. '$ar' → logprob: -16.625181198120117
    7. 'arlo' → logprob: -16.875181198120117
    8. 'ар' → logprob: -16.875181198120117
    9. '(ar' → logprob: -17.250181198120117
    10. 'arlar' → logprob: -17.250181198120117

Token 123: 'shall' (ID: 30275)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.0031275674700737
    2. 'shall' → logprob: -6.378127574920654
    3. 'all' → logprob: -7.128127574920654
    4. 'arshal' → logprob: -7.503127574920654
    5. 'll' → logprob: -10.253127098083496
    6. 'sh' → logprob: -11.378127098083496
    7. '```' → logprob: -12.753127098083496
    8. 'ash' → logprob: -12.878127098083496
    9. 'al' → logprob: -12.878127098083496
    10. 's' → logprob: -13.503127098083496

Token 124: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02535768412053585
    2. '(
' → logprob: -3.775357723236084
    3. '()' → logprob: -6.525357723236084
    4. ' (' → logprob: -8.900357246398926
    5. '(

' → logprob: -9.150357246398926
    6. ')' → logprob: -9.650357246398926
    7. '(s' → logprob: -9.900357246398926
    8. ' ' → logprob: -10.400357246398926
    9. ',' → logprob: -10.525357246398926
    10. '   ' → logprob: -10.900357246398926

Token 125: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10806133598089218
    2. '(
' → logprob: -3.1080613136291504
    3. '   ' → logprob: -3.3580613136291504
    4. '()' → logprob: -4.73306131362915
    5. '<|end|>' → logprob: -5.73306131362915
    6. '
' → logprob: -6.10806131362915
    7. ')' → logprob: -6.35806131362915
    8. ' ' → logprob: -6.60806131362915
    9. ',' → logprob: -6.98306131362915
    10. '    
' → logprob: -7.10806131362915

Token 126: ' #' (ID: 1069)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20228311419487
    2. '()' → logprob: -2.3272831439971924
    3. '(
' → logprob: -2.5772831439971924
    4. '(graph' → logprob: -6.577282905578613
    5. '
' → logprob: -6.702282905578613
    6. '(

' → logprob: -6.702282905578613
    7. '   ' → logprob: -7.077282905578613
    8. '()
' → logprob: -7.577282905578613
    9. '(matrix' → logprob: -7.702282905578613
    10. ' ' → logprob: -7.827282905578613

Token 127: ' Lecture' (ID: 106534)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.9270458221435547
    2. '   ' → logprob: -1.9270458221435547
    3. ' graph' → logprob: -1.9270458221435547
    4. ' #' → logprob: -2.9270458221435547
    5. ' A' → logprob: -3.1770458221435547
    6. 'graph' → logprob: -3.3020458221435547
    7. ' dist' → logprob: -3.4270458221435547
    8. ' d' → logprob: -3.5520458221435547
    9. ' mat' → logprob: -3.5520458221435547
    10. ' matrix' → logprob: -3.6770458221435547

Token 128: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09138132631778717
    2. '()' → logprob: -2.841381311416626
    3. '(
' → logprob: -4.466381549835205
    4. '   ' → logprob: -5.216381549835205
    5. ' (' → logprob: -5.591381549835205
    6. ' des' → logprob: -6.591381549835205
    7. '("' → logprob: -7.091381549835205
    8. '('' → logprob: -7.466381549835205
    9. ',' → logprob: -7.591381549835205
    10. '<|end|>' → logprob: -7.591381549835205

Token 129: ' toute' (ID: 16825)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.02842596545815468
    2. ' ()' → logprob: -4.278426170349121
    3. '(' → logprob: -5.153426170349121
    4. ' l' → logprob: -5.778426170349121
    5. ' la' → logprob: -6.278426170349121
    6. ' (' → logprob: -7.028426170349121
    7. '("' → logprob: -7.903426170349121
    8. ' le' → logprob: -8.153426170349121
    9. 'l' → logprob: -8.153426170349121
    10. '(stdin' → logprob: -8.153426170349121

Token 130: ' l' (ID: 305)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.025869421660900116
    2. 'l' → logprob: -5.025869369506836
    3. ' ()' → logprob: -5.150869369506836
    4. ' l' → logprob: -5.525869369506836
    5. ' la' → logprob: -6.275869369506836
    6. '(' → logprob: -6.275869369506836
    7. '()
' → logprob: -6.775869369506836
    8. '(stdin' → logprob: -7.650869369506836
    9. '(sys' → logprob: -7.650869369506836
    10. 's' → logprob: -7.775869369506836

Token 131: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.5342949628829956
    2. 'a' → logprob: -1.5342949628829956
    3. 'entrée' → logprob: -1.7842949628829956
    4. 'input' → logprob: -4.159295082092285
    5. 'e' → logprob: -4.659295082092285
    6. '’entrée' → logprob: -6.659295082092285
    7. 'es' → logprob: -7.034295082092285
    8. 'stdin' → logprob: -7.159295082092285
    9. ' entrée' → logprob: -7.284295082092285
    10. ' input' → logprob: -8.284295082092285

Token 132: ' depuis' (ID: 16277)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.000841311237309128
    2. ' ()' → logprob: -7.62584114074707
    3. '(' → logprob: -8.87584114074707
    4. '()
' → logprob: -9.75084114074707
    5. 'data' → logprob: -10.12584114074707
    6. 'import' → logprob: -11.00084114074707
    7. '   ' → logprob: -11.37584114074707
    8. '_' → logprob: -11.62584114074707
    9. 's' → logprob: -11.87584114074707
    10. '_input' → logprob: -11.87584114074707

Token 133: ' stdin' (ID: 75143)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5040186047554016
    2. ''' → logprob: -2.754018545150757
    3. 'stdin' → logprob: -3.004018545150757
    4. ' ' → logprob: -3.254018545150757
    5. ' stdin' → logprob: -3.254018545150757
    6. ' sys' → logprob: -3.504018545150757
    7. '(stdin' → logprob: -3.504018545150757
    8. 'sys' → logprob: -3.629018545150757
    9. '"' → logprob: -3.879018545150757
    10. '   ' → logprob: -4.004018783569336

Token 134: '.' (ID: 13)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.02322276495397091
    2. 'data' → logprob: -4.273222923278809
    3. 'import' → logprob: -5.773222923278809
    4. '(' → logprob: -6.148222923278809
    5. 's' → logprob: -7.023222923278809
    6. 'input' → logprob: -7.148222923278809
    7. 'lines' → logprob: -7.898222923278809
    8. ' lines' → logprob: -8.273222923278809
    9. ',' → logprob: -8.648222923278809
    10. '()
' → logprob: -8.648222923278809

Token 135: ' '' (ID: 461)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2140052318572998
    2. 'data' → logprob: -2.2140052318573
    3. ' data' → logprob: -3.3390052318573
    4. 'input' → logprob: -4.464005470275879
    5. 'import' → logprob: -4.839005470275879
    6. ' lines' → logprob: -5.089005470275879
    7. ' input' → logprob: -5.339005470275879
    8. '()
' → logprob: -5.339005470275879
    9. '   ' → logprob: -5.714005470275879
    10. 'lines' → logprob: -5.839005470275879

Token 136: 'open' (ID: 3843)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -1.186960220336914
    2. 'import' → logprob: -1.311960220336914
    3. 'input' → logprob: -1.436960220336914
    4. 'stdin' → logprob: -2.436960220336914
    5. ' data' → logprob: -3.436960220336914
    6. 'lines' → logprob: -3.811960220336914
    7. ' input' → logprob: -4.561960220336914
    8. 'sys' → logprob: -4.936960220336914
    9. ' stdin' → logprob: -5.061960220336914
    10. 'content' → logprob: -5.436960220336914

Token 137: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.19853562116622925
    2. '()' → logprob: -2.448535680770874
    3. ''' → logprob: -3.198535680770874
    4. '('' → logprob: -3.448535680770874
    5. '("' → logprob: -4.823535442352295
    6. '("/' → logprob: -5.073535442352295
    7. '('/' → logprob: -5.698535442352295
    8. '()(' → logprob: -6.573535442352295
    9. '(sys' → logprob: -7.323535442352295
    10. '(stdin' → logprob: -8.698535919189453

Token 138: '0' (ID: 15)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.038484249264001846
    2. '0' → logprob: -3.6634843349456787
    3. '('/' → logprob: -5.5384840965271
    4. ''/' → logprob: -6.1634840965271
    5. ')' → logprob: -6.2884840965271
    6. '("/' → logprob: -6.6634840965271
    7. '"/' → logprob: -6.9134840965271
    8. ''' → logprob: -7.4134840965271
    9. '')' → logprob: -8.288484573364258
    10. '('' → logprob: -8.413484573364258

Token 139: ')'' (ID: 45517)
  Prédit: ').'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.7557873725891113
    2. ')' → logprob: -1.6307873725891113
    3. ',' → logprob: -1.6307873725891113
    4. ')'' → logprob: -2.3807873725891113
    5. ','' → logprob: -3.6307873725891113
    6. ',"' → logprob: -5.255787372589111
    7. '(),'' → logprob: -5.630787372589111
    8. ' ).' → logprob: -6.755787372589111
    9. ' ,' → logprob: -7.005787372589111
    10. '(),' → logprob: -7.005787372589111

Token 140: ' ouvre' (ID: 144763)
  Prédit: ').'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ').' → logprob: -0.44018951058387756
    2. '().' → logprob: -1.4401894807815552
    3. ')' → logprob: -2.8151895999908447
    4. ',' → logprob: -3.3151895999908447
    5. '()' → logprob: -4.940189361572266
    6. ' ).' → logprob: -5.315189361572266
    7. '.read' → logprob: -5.565189361572266
    8. '(),' → logprob: -6.440189361572266
    9. '()).' → logprob: -7.065189361572266
    10. '(' → logprob: -7.315189361572266

Token 141: ' le' (ID: 505)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5287297964096069
    2. '()' → logprob: -0.9037297964096069
    3. '('/' → logprob: -6.1537299156188965
    4. '('' → logprob: -6.2787299156188965
    5. '0' → logprob: -7.0287299156188965
    6. '().' → logprob: -8.903729438781738
    7. ')' → logprob: -8.903729438781738
    8. '("/' → logprob: -9.028729438781738
    9. '```' → logprob: -10.028729438781738
    10. '("' → logprob: -10.153729438781738

Token 142: ' des' (ID: 731)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.3070146441459656
    2. ' fichier' → logprob: -2.9320147037506104
    3. 'file' → logprob: -3.3070147037506104
    4. ')' → logprob: -3.3070147037506104
    5. '0' → logprob: -3.4320147037506104
    6. 'stdin' → logprob: -3.5570147037506104
    7. 'flux' → logprob: -4.182014465332031
    8. ' file' → logprob: -4.557014465332031
    9. 'r' → logprob: -4.932014465332031
    10. 'fd' → logprob: -5.057014465332031

Token 143: 'crip' (ID: 1197)
  Prédit: 'criptor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'criptor' → logprob: -0.18431152403354645
    2. 'crip' → logprob: -1.9343115091323853
    3. 'cript' → logprob: -4.309311389923096
    4. 'criptors' → logprob: -4.809311389923096
    5. 'cription' → logprob: -7.559311389923096
    6. 'cr' → logprob: -7.934311389923096
    7. 'f' → logprob: -8.059311866760254
    8. 't' → logprob: -8.434311866760254
    9. 'c' → logprob: -8.684311866760254
    10. 'script' → logprob: -9.434311866760254

Token 144: 'teur' (ID: 45262)
  Prédit: 'teur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'teur' → logprob: -0.001547479536384344
    2. 'te' → logprob: -6.626547336578369
    3. '```' → logprob: -9.001547813415527
    4. 'teurs' → logprob: -10.376547813415527
    5. 't' → logprob: -10.751547813415527
    6. '	' → logprob: -11.876547813415527
    7. 'iteur' → logprob: -11.876547813415527
    8. ' te' → logprob: -12.001547813415527
    9. 'ter' → logprob: -12.001547813415527
    10. '   ' → logprob: -12.501547813415527

Token 145: ' de' (ID: 334)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9565004706382751
    2. '('' → logprob: -1.33150053024292
    3. ' de' → logprob: -2.33150053024292
    4. '(' → logprob: -2.70650053024292
    5. '='' → logprob: -2.83150053024292
    6. 'de' → logprob: -3.33150053024292
    7. ')' → logprob: -3.58150053024292
    8. ' =' → logprob: -4.70650053024292
    9. '```' → logprob: -5.08150053024292
    10. ' en' → logprob: -5.20650053024292

Token 146: ' fichier' (ID: 69637)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.022582536563277245
    2. 'file' → logprob: -4.522582530975342
    3. 'fil' → logprob: -5.772582530975342
    4. ' fichier' → logprob: -5.897582530975342
    5. 'fd' → logprob: -6.272582530975342
    6. ' ' → logprob: -6.647582530975342
    7. ' file' → logprob: -7.147582530975342
    8. '```' → logprob: -7.522582530975342
    9. 'flux' → logprob: -7.772582530975342
    10. 'stdin' → logprob: -9.1475830078125

Token 147: ' ' (ID: 220)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4857780337333679
    2. '(' → logprob: -1.3607780933380127
    3. ')' → logprob: -2.3607780933380127
    4. '('' → logprob: -4.110777854919434
    5. '```' → logprob: -5.235777854919434
    6. '(),' → logprob: -5.485777854919434
    7. '())' → logprob: -5.610777854919434
    8. ',' → logprob: -6.360777854919434
    9. '0' → logprob: -7.360777854919434
    10. '(),'' → logprob: -7.860777854919434

Token 148: '0' (ID: 15)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0672314241528511
    2. 'standard' → logprob: -3.5672314167022705
    3. '0' → logprob: -4.19223165512085
    4. '```' → logprob: -5.19223165512085
    5. 'stdin' → logprob: -5.69223165512085
    6. '(stdin' → logprob: -5.69223165512085
    7. '()' → logprob: -6.19223165512085
    8. 'en' → logprob: -6.44223165512085
    9. 'std' → logprob: -6.56723165512085
    10. 'de' → logprob: -7.06723165512085

Token 149: ',' (ID: 11)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.061960622668266296
    2. '('' → logprob: -2.9369606971740723
    3. '(' → logprob: -5.936960697174072
    4. ')' → logprob: -6.936960697174072
    5. '("' → logprob: -6.936960697174072
    6. '(),' → logprob: -6.936960697174072
    7. '())' → logprob: -7.311960697174072
    8. '(),'' → logprob: -7.936960697174072
    9. '().' → logprob: -8.186960220336914
    10. ',' → logprob: -9.686960220336914

Token 150: ' qui' (ID: 2780)
  Prédit: ''r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''r' → logprob: -0.8665046095848083
    2. ' '' → logprob: -1.4915046691894531
    3. ')' → logprob: -1.8665046691894531
    4. ''' → logprob: -1.8665046691894531
    5. 'mode' → logprob: -4.366504669189453
    6. ''m' → logprob: -4.616504669189453
    7. '"' → logprob: -4.616504669189453
    8. ' )' → logprob: -5.991504669189453
    9. ''t' → logprob: -6.116504669189453
    10. ' "' → logprob: -6.616504669189453

Token 151: ' correspond' (ID: 11095)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.31615564227104187
    2. ' correspond' → logprob: -2.0661556720733643
    3. 'est' → logprob: -2.1911556720733643
    4. ' is' → logprob: -4.066155433654785
    5. ' corresponds' → logprob: -4.816155433654785
    6. ' représente' → logprob: -6.066155433654785
    7. ' ' → logprob: -6.566155433654785
    8. 'cor' → logprob: -7.191155433654785
    9. 'is' → logprob: -7.566155433654785
    10. ')' → logprob: -7.691155433654785

Token 152: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.6002963185310364
    2. '=' → logprob: -1.1002962589263916
    3. ' ' → logprob: -2.9752962589263916
    4. ')' → logprob: -3.9752962589263916
    5. ' =' → logprob: -4.350296497344971
    6. ' to' → logprob: -4.475296497344971
    7. ' au' → logprob: -5.100296497344971
    8. ' a' → logprob: -5.225296497344971
    9. ' )' → logprob: -5.725296497344971
    10. 'à' → logprob: -5.850296497344971

Token 153: ' l' (ID: 305)
  Prédit: ' stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stdin' → logprob: -0.9871927499771118
    2. 'stdin' → logprob: -1.4871927499771118
    3. ' sys' → logprob: -1.7371927499771118
    4. 'sys' → logprob: -2.7371926307678223
    5. ' ' → logprob: -3.1121926307678223
    6. 'import' → logprob: -3.3621926307678223
    7. '0' → logprob: -3.7371926307678223
    8. ' l' → logprob: -4.862192630767822
    9. ' '' → logprob: -4.987192630767822
    10. '```' → logprob: -4.987192630767822

Token 154: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.9006242156028748
    2. 'stdin' → logprob: -1.5256242752075195
    3. ''' → logprob: -1.7756242752075195
    4. 'a' → logprob: -2.2756242752075195
    5. 'es' → logprob: -3.7756242752075195
    6. 'input' → logprob: -3.9006242752075195
    7. 'entrée' → logprob: -4.2756242752075195
    8. ' stdin' → logprob: -5.1506242752075195
    9. '```' → logprob: -5.4006242752075195
    10. 'e' → logprob: -5.6506242752075195

Token 155: ' standard' (ID: 7024)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5850603580474854
    2. ')' → logprob: -1.9600603580474854
    3. '```' → logprob: -2.0850603580474854
    4. 'standard' → logprob: -2.7100603580474854
    5. '=' → logprob: -3.8350603580474854
    6. 'f' → logprob: -4.210060119628906
    7. 'import' → logprob: -4.585060119628906
    8. 'stdin' → logprob: -4.585060119628906
    9. '(stdin' → logprob: -4.585060119628906
    10. ' =' → logprob: -5.085060119628906

Token 156: ' (' (ID: 350)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.36091288924217224
    2. '().' → logprob: -1.2359129190444946
    3. '(' → logprob: -4.485912799835205
    4. '('' → logprob: -7.235912799835205
    5. ')' → logprob: -9.360913276672363
    6. '("' → logprob: -9.860913276672363
    7. '(),' → logprob: -9.860913276672363
    8. ',' → logprob: -10.110913276672363
    9. ').' → logprob: -10.610913276672363
    10. ' ()' → logprob: -10.610913276672363

Token 157: 'stdin' (ID: 132953)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0485689714550972
    2. ''' → logprob: -4.298569202423096
    3. ' )' → logprob: -4.423569202423096
    4. ').' → logprob: -4.673569202423096
    5. ',' → logprob: -5.423569202423096
    6. '),' → logprob: -5.548569202423096
    7. ')'' → logprob: -7.423569202423096
    8. 'sys' → logprob: -7.548569202423096
    9. '')' → logprob: -7.673569202423096
    10. 'mode' → logprob: -7.798569202423096

Token 158: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09659203886985779
    2. ').' → logprob: -2.8465919494628906
    3. ',' → logprob: -3.7215919494628906
    4. '))' → logprob: -5.596591949462891
    5. ' )' → logprob: -5.596591949462891
    6. ' ,' → logprob: -7.846591949462891
    7. ' ' → logprob: -8.34659194946289
    8. ' ).' → logprob: -8.34659194946289
    9. ','' → logprob: -8.34659194946289
    10. ')`' → logprob: -8.34659194946289

Token 159: '   ' (ID: 271)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.07281943410634995
    2. '().' → logprob: -2.822819471359253
    3. ')' → logprob: -5.447819232940674
    4. ').' → logprob: -6.572819232940674
    5. '('' → logprob: -6.947819232940674
    6. ',' → logprob: -6.947819232940674
    7. '(),' → logprob: -6.947819232940674
    8. '())' → logprob: -7.072819232940674
    9. '()).' → logprob: -7.447819232940674
    10. '(' → logprob: -8.447819709777832

Token 160: ' #' (ID: 1069)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0947292298078537
    2. 'lines' → logprob: -2.96972918510437
    3. 'data' → logprob: -3.84472918510437
    4. '().' → logprob: -4.344729423522949
    5. '(' → logprob: -6.844729423522949
    6. ')' → logprob: -7.469729423522949
    7. ' lines' → logprob: -7.719729423522949
    8. 'read' → logprob: -7.844729423522949
    9. 'l' → logprob: -7.969729423522949
    10. ' ()' → logprob: -8.46972942352295

Token 161: ' '' (ID: 461)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -1.3289586305618286
    2. ' data' → logprob: -1.3289586305618286
    3. 'lines' → logprob: -1.4539586305618286
    4. ' lines' → logprob: -1.8289586305618286
    5. 'read' → logprob: -3.203958511352539
    6. 'import' → logprob: -4.453958511352539
    7. 'input' → logprob: -5.828958511352539
    8. ' read' → logprob: -5.953958511352539
    9. ')' → logprob: -6.078958511352539
    10. 'text' → logprob: -6.203958511352539

Token 162: 'read' (ID: 1293)
  Prédit: 'open'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'open' → logprob: -0.38495880365371704
    2. 'read' → logprob: -1.3849587440490723
    3. 'lines' → logprob: -3.6349587440490723
    4. ''' → logprob: -5.009958744049072
    5. 'data' → logprob: -5.009958744049072
    6. 'input' → logprob: -5.634958744049072
    7. ')' → logprob: -6.009958744049072
    8. 'text' → logprob: -6.259958744049072
    9. '"' → logprob: -6.259958744049072
    10. 'strip' → logprob: -6.384958744049072

Token 163: '()' (ID: 416)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.5212757587432861
    2. '()' → logprob: -1.2712757587432861
    3. 'line' → logprob: -2.271275758743286
    4. '().' → logprob: -4.146275520324707
    5. ''' → logprob: -5.396275520324707
    6. 'lin' → logprob: -7.271275520324707
    7. 'li' → logprob: -8.396275520324707
    8. 'l' → logprob: -8.396275520324707
    9. '_lines' → logprob: -8.646275520324707
    10. '()`' → logprob: -8.771275520324707

Token 164: ''' (ID: 6)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.10483440011739731
    2. '())' → logprob: -3.1048343181610107
    3. '()).' → logprob: -3.9798343181610107
    4. '().' → logprob: -4.35483455657959
    5. ')'' → logprob: -4.85483455657959
    6. '('' → logprob: -5.10483455657959
    7. '(),'' → logprob: -6.22983455657959
    8. ').' → logprob: -6.35483455657959
    9. ''' → logprob: -6.60483455657959
    10. '().'' → logprob: -6.97983455657959

Token 165: ' lit' (ID: 11980)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.1008305475115776
    2. '().' → logprob: -2.350830554962158
    3. ' ()' → logprob: -7.975830554962158
    4. '())' → logprob: -8.975830078125
    5. '(' → logprob: -9.475830078125
    6. ')' → logprob: -10.600830078125
    7. '(),' → logprob: -11.475830078125
    8. ' ())' → logprob: -11.975830078125
    9. '()).' → logprob: -12.100830078125
    10. ' .' → logprob: -12.600830078125

Token 166: ' tout' (ID: 5501)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0018628339748829603
    2. '())' → logprob: -7.0018630027771
    3. '().' → logprob: -7.2518630027771
    4. ' ()' → logprob: -9.001862525939941
    5. ')' → logprob: -9.501862525939941
    6. '(' → logprob: -11.501862525939941
    7. 'l' → logprob: -12.626862525939941
    8. ' ())' → logprob: -12.626862525939941
    9. ' )' → logprob: -12.751862525939941
    10. 'le' → logprob: -12.751862525939941

Token 167: ' d' (ID: 272)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0011402154341340065
    2. '())' → logprob: -7.376140117645264
    3. '().' → logprob: -7.751140117645264
    4. ' ()' → logprob: -10.626140594482422
    5. '(' → logprob: -11.001140594482422
    6. ')' → logprob: -11.501140594482422
    7. 'open' → logprob: -12.126140594482422
    8. '(open' → logprob: -12.376140594482422
    9. 'l' → logprob: -12.626140594482422
    10. '()
' → logprob: -12.876140594482422

Token 168: ''un' (ID: 9788)
  Prédit: 'ata'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ata' → logprob: -1.2474159002304077
    2. '()' → logprob: -1.7474159002304077
    3. 'e' → logprob: -1.8724159002304077
    4. '```' → logprob: -1.8724159002304077
    5. '   ' → logprob: -3.4974160194396973
    6. 'es' → logprob: -3.6224160194396973
    7. 'onnées' → logprob: -3.9974160194396973
    8. '(stdin' → logprob: -4.372416019439697
    9. '''' → logprob: -4.747416019439697
    10. '(sys' → logprob: -4.747416019439697

Token 169: ' coup' (ID: 25465)
  Prédit: ' open'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' open' → logprob: -0.5804882049560547
    2. 'open' → logprob: -0.8304882049560547
    3. '(open' → logprob: -6.205488204956055
    4. ' sys' → logprob: -6.955488204956055
    5. ' file' → logprob: -8.080488204956055
    6. 'sys' → logprob: -8.080488204956055
    7. ' ' → logprob: -8.205488204956055
    8. '=open' → logprob: -9.080488204956055
    9. 'file' → logprob: -9.705488204956055
    10. ' fichier' → logprob: -9.830488204956055

Token 170: '.' (ID: 13)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -5.657694418914616e-05
    2. '().' → logprob: -10.375056266784668
    3. ' ()' → logprob: -11.375056266784668
    4. '(' → logprob: -11.750056266784668
    5. '())' → logprob: -12.250056266784668
    6. '(),' → logprob: -15.250056266784668
    7. '('' → logprob: -15.250056266784668
    8. ')' → logprob: -16.250057220458984
    9. '()
' → logprob: -16.250057220458984
    10. '("")' → logprob: -16.750057220458984

Token 171: ' '' (ID: 461)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.011596971191465855
    2. '().' → logprob: -4.886597156524658
    3. ' ()' → logprob: -6.261597156524658
    4. 'open' → logprob: -7.261597156524658
    5. '   ' → logprob: -8.0115966796875
    6. '(' → logprob: -8.3865966796875
    7. '())' → logprob: -8.6365966796875
    8. 'data' → logprob: -8.7615966796875
    9. '()
' → logprob: -9.6365966796875
    10. 'import' → logprob: -9.6365966796875

Token 172: 'split' (ID: 13627)
  Prédit: 'open'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'open' → logprob: -0.5446174740791321
    2. 'strip' → logprob: -1.1696174144744873
    3. ' open' → logprob: -3.2946174144744873
    4. 'decode' → logprob: -3.5446174144744873
    5. 'read' → logprob: -3.9196174144744873
    6. '().' → logprob: -5.419617652893066
    7. ')' → logprob: -5.419617652893066
    8. ' strip' → logprob: -6.169617652893066
    9. 'input' → logprob: -6.794617652893066
    10. ''' → logprob: -7.044617652893066

Token 173: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0054367585107684135
    2. '('' → logprob: -6.130436897277832
    3. 'lines' → logprob: -6.380436897277832
    4. '(' → logprob: -6.755436897277832
    5. '('\' → logprob: -9.130436897277832
    6. '()
' → logprob: -9.255436897277832
    7. ' ()' → logprob: -9.755436897277832
    8. 'line' → logprob: -10.630436897277832
    9. '()]' → logprob: -10.755436897277832
    10. '())' → logprob: -11.005436897277832

Token 174: ''' (ID: 6)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.012829465791583061
    2. '())' → logprob: -5.012829303741455
    3. '('' → logprob: -5.387829303741455
    4. '()"' → logprob: -7.262829303741455
    5. '(' → logprob: -8.637829780578613
    6. '()`' → logprob: -8.762829780578613
    7. ' ()' → logprob: -9.262829780578613
    8. ')' → logprob: -9.637829780578613
    9. '()
' → logprob: -9.637829780578613
    10. '("' → logprob: -10.012829780578613

Token 175: ' sé' (ID: 7462)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.013499714434146881
    2. '(' → logprob: -4.388499736785889
    3. '('' → logprob: -7.263499736785889
    4. ' ()' → logprob: -8.63849925994873
    5. '()
' → logprob: -11.51349925994873
    6. '('\' → logprob: -11.63849925994873
    7. '   ' → logprob: -11.76349925994873
    8. '())' → logprob: -11.76349925994873
    9. '()[' → logprob: -11.88849925994873
    10. '().' → logprob: -11.88849925994873

Token 176: 'pare' (ID: 6900)
  Prédit: 'pare'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pare' → logprob: -0.0010353106772527099
    2. 'par' → logprob: -7.126035213470459
    3. 'parent' → logprob: -8.876035690307617
    4. 'parer' → logprob: -9.876035690307617
    5. 'paration' → logprob: -11.501035690307617
    6. 'p' → logprob: -11.501035690307617
    7. 'parate' → logprob: -12.001035690307617
    8. 'para' → logprob: -12.626035690307617
    9. 'pares' → logprob: -12.876035690307617
    10. 'paren' → logprob: -12.876035690307617

Token 177: ' la' (ID: 557)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00015943869948387146
    2. '('\' → logprob: -9.87515926361084
    3. 'lines' → logprob: -10.62515926361084
    4. ')' → logprob: -10.62515926361084
    5. '())' → logprob: -11.12515926361084
    6. '()\' → logprob: -11.12515926361084
    7. '(' → logprob: -11.62515926361084
    8. '('' → logprob: -11.75015926361084
    9. '()
' → logprob: -12.62515926361084
    10. ' ()' → logprob: -13.00015926361084

Token 178: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.891482949256897
    2. 'chaine' → logprob: -1.641482949256897
    3. 'entrée' → logprob: -1.891482949256897
    4. 'texte' → logprob: -2.7664828300476074
    5. ' chaînes' → logprob: -2.7664828300476074
    6. ' chaine' → logprob: -3.8914828300476074
    7. '()' → logprob: -3.8914828300476074
    8. ' input' → logprob: -4.391482830047607
    9. ' chain' → logprob: -4.641482830047607
    10. 'chain' → logprob: -4.641482830047607

Token 179: ' selon' (ID: 27571)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0006900362786836922
    2. 'par' → logprob: -7.87568998336792
    3. '('\' → logprob: -9.000690460205078
    4. '()\' → logprob: -9.375690460205078
    5. 'lines' → logprob: -10.875690460205078
    6. '(' → logprob: -11.250690460205078
    7. '()
' → logprob: -11.375690460205078
    8. ' ()' → logprob: -11.375690460205078
    9. '()[' → logprob: -11.875690460205078
    10. '('' → logprob: -12.250690460205078

Token 180: ' les' (ID: 1341)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.005237906239926815
    2. ' les' → logprob: -5.880238056182861
    3. '('\' → logprob: -7.380238056182861
    4. 'lines' → logprob: -7.505238056182861
    5. 'les' → logprob: -7.630238056182861
    6. '()\' → logprob: -8.380237579345703
    7. '()
' → logprob: -9.005237579345703
    8. ' l' → logprob: -9.880237579345703
    9. ' ()' → logprob: -10.005237579345703
    10. 'None' → logprob: -10.005237579345703

Token 181: ' espaces' (ID: 98361)
  Prédit: ' espaces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espaces' → logprob: -0.10235060751438141
    2. 'esp' → logprob: -2.3523507118225098
    3. ' blancs' → logprob: -7.97735071182251
    4. '()' → logprob: -8.477350234985352
    5. 'spaces' → logprob: -8.477350234985352
    6. ' lignes' → logprob: -8.602350234985352
    7. 'car' → logprob: -8.602350234985352
    8. '\n' → logprob: -8.727350234985352
    9. 'bl' → logprob: -8.727350234985352
    10. 'l' → logprob: -9.352350234985352

Token 182: ' et' (ID: 859)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.007905538193881512
    2. ')' → logprob: -5.38290548324585
    3. '(' → logprob: -6.25790548324585
    4. '())' → logprob: -7.50790548324585
    5. '   ' → logprob: -8.382905960083008
    6. '()
' → logprob: -9.257905960083008
    7. '(),' → logprob: -9.382905960083008
    8. ' )' → logprob: -10.132905960083008
    9. '('' → logprob: -10.132905960083008
    10. '#' → logprob: -10.257905960083008

Token 183: ' ret' (ID: 2881)
  Prédit: ''\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''\' → logprob: -0.42583900690078735
    2. 'None' → logprob: -1.8008389472961426
    3. 'lines' → logprob: -2.1758389472961426
    4. ' None' → logprob: -3.1758389472961426
    5. '\n' → logprob: -4.675838947296143
    6. ' '\' → logprob: -4.925838947296143
    7. ' lignes' → logprob: -6.425838947296143
    8. '('\' → logprob: -6.425838947296143
    9. 'n' → logprob: -6.550838947296143
    10. '"\' → logprob: -6.550838947296143

Token 184: 'ours' (ID: 2327)
  Prédit: 'urn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urn' → logprob: -0.03417440131306648
    2. 'our' → logprob: -3.7841744422912598
    3. 'ur' → logprob: -4.78417444229126
    4. 'ours' → logprob: -7.28417444229126
    5. 'u' → logprob: -8.159173965454102
    6. 'val' → logprob: -8.284173965454102
    7. '   ' → logprob: -8.409173965454102
    8. 'okens' → logprob: -8.534173965454102
    9. 'ab' → logprob: -8.659173965454102
    10. '()' → logprob: -9.534173965454102

Token 185: ' à' (ID: 1221)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.856743574142456
    2. ' à' → logprob: -1.856743574142456
    3. ' ' → logprob: -2.231743574142456
    4. 'à' → logprob: -2.481743574142456
    5. 'ligne' → logprob: -2.606743574142456
    6. 'ch' → logprob: -3.231743574142456
    7. 'ar' → logprob: -3.856743574142456
    8. 'char' → logprob: -4.106743812561035
    9. 'car' → logprob: -4.356743812561035
    10. ' a' → logprob: -4.606743812561035

Token 186: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.000837384897749871
    2. 'l' → logprob: -7.250837326049805
    3. ' ' → logprob: -10.000837326049805
    4. ' la' → logprob: -10.625837326049805
    5. '   ' → logprob: -11.375837326049805
    6. 'ligne' → logprob: -11.375837326049805
    7. '\' → logprob: -12.125837326049805
    8. '  ' → logprob: -12.125837326049805
    9. 'lal' → logprob: -12.500837326049805
    10. '_la' → logprob: -12.875837326049805

Token 187: ' ligne' (ID: 19583)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.009980011731386185
    2. 'l' → logprob: -4.634980201721191
    3. 'line' → logprob: -9.634980201721191
    4. 'la' → logprob: -9.884980201721191
    5. 'lin' → logprob: -10.384980201721191
    6. 'lig' → logprob: -10.384980201721191
    7. ' ligne' → logprob: -10.759980201721191
    8. 'a' → logprob: -12.884980201721191
    9. '10' → logprob: -13.009980201721191
    10. '9' → logprob: -13.009980201721191

Token 188: '.
' (ID: 558)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.001910788589157164
    2. '(' → logprob: -6.75191068649292
    3. '()
' → logprob: -8.376911163330078
    4. '())' → logprob: -8.626911163330078
    5. ' ()' → logprob: -9.001911163330078
    6. ')' → logprob: -9.876911163330078
    7. '   ' → logprob: -10.626911163330078
    8. '(),' → logprob: -10.876911163330078
    9. '()

' → logprob: -11.126911163330078
    10. '();' → logprob: -11.376911163330078

Token 189: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2806206941604614
    2. 'data' → logprob: -1.6556206941604614
    3. 'tokens' → logprob: -4.280620574951172
    4. '()' → logprob: -4.405620574951172
    5. ' data' → logprob: -4.530620574951172
    6. 'lines' → logprob: -5.405620574951172
    7. '()
' → logprob: -5.655620574951172
    8. 'input' → logprob: -6.405620574951172
    9. '    
' → logprob: -6.530620574951172
    10. 'inputs' → logprob: -7.405620574951172

Token 190: ' #' (ID: 1069)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.1594914197921753
    2. ' data' → logprob: -2.534491539001465
    3. 'lines' → logprob: -3.159491539001465
    4. 'L' → logprob: -4.909491539001465
    5. 'l' → logprob: -5.284491539001465
    6. ' lines' → logprob: -6.034491539001465
    7. ' L' → logprob: -6.284491539001465
    8. 'numbers' → logprob: -6.659491539001465
    9. 'values' → logprob: -7.284491539001465
    10. '   ' → logprob: -7.409491539001465

Token 191: ' On' (ID: 2160)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.1862623244524002
    2. ' data' → logprob: -1.9362623691558838
    3. 'lines' → logprob: -4.561262130737305
    4. 'L' → logprob: -5.686262130737305
    5. 'input' → logprob: -6.186262130737305
    6. 'l' → logprob: -6.436262130737305
    7. 'n' → logprob: -6.561262130737305
    8. ' L' → logprob: -6.936262130737305
    9. 'tokens' → logprob: -6.936262130737305
    10. 'values' → logprob: -7.436262130737305

Token 192: ' convert' (ID: 8452)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47556594014167786
    2. '=' → logprob: -1.8505659103393555
    3. 'data' → logprob: -2.1005659103393555
    4. ' data' → logprob: -3.4755659103393555
    5. '_data' → logprob: -3.9755659103393555
    6. 'values' → logprob: -4.7255659103393555
    7. 'n' → logprob: -5.3505659103393555
    8. 'tokens' → logprob: -5.6005659103393555
    9. '_values' → logprob: -5.7255659103393555
    10. 's' → logprob: -5.9755659103393555

Token 193: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.34912022948265076
    2. 'ir' → logprob: -1.7241202592849731
    3. 'map' → logprob: -2.9741201400756836
    4. 'is' → logprob: -4.099120140075684
    5. 'list' → logprob: -4.224120140075684
    6. 'i' → logprob: -5.349120140075684
    7. 'int' → logprob: -5.599120140075684
    8. ' map' → logprob: -5.599120140075684
    9. ')' → logprob: -6.099120140075684
    10. 'e' → logprob: -6.224120140075684

Token 194: ' le' (ID: 505)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' list' → logprob: -1.138048529624939
    2. ' les' → logprob: -1.263048529624939
    3. ' la' → logprob: -2.5130486488342285
    4. 'list' → logprob: -2.5130486488342285
    5. ' map' → logprob: -2.5130486488342285
    6. '(map' → logprob: -3.0130486488342285
    7. 'map' → logprob: -3.3880486488342285
    8. '(' → logprob: -4.1380486488342285
    9. 'les' → logprob: -4.6380486488342285
    10. '(list' → logprob: -4.7630486488342285

Token 195: ' tout' (ID: 5501)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.9066736102104187
    2. 'list' → logprob: -1.7816736698150635
    3. ' map' → logprob: -2.6566736698150635
    4. ' array' → logprob: -2.7816736698150635
    5. ' numpy' → logprob: -3.2816736698150635
    6. ' data' → logprob: -3.7816736698150635
    7. 'array' → logprob: -3.7816736698150635
    8. ' ' → logprob: -3.9066736698150635
    9. 'map' → logprob: -3.9066736698150635
    10. 'int' → logprob: -3.9066736698150635

Token 196: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.786293089389801
    2. '   ' → logprob: -2.1612930297851562
    3. '(' → logprob: -2.4112930297851562
    4. ' list' → logprob: -2.6612930297851562
    5. '(int' → logprob: -2.7862930297851562
    6. 'int' → logprob: -3.0362930297851562
    7. 'list' → logprob: -3.4112930297851562
    8. '(map' → logprob: -3.4112930297851562
    9. ' map' → logprob: -3.6612930297851562
    10. 'map' → logprob: -4.036293029785156

Token 197: ' un' (ID: 537)
  Prédit: ' array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' array' → logprob: -0.3943552076816559
    2. 'array' → logprob: -1.8943551778793335
    3. ' list' → logprob: -2.144355297088623
    4. 'int' → logprob: -3.519355297088623
    5. ' int' → logprob: -4.144355297088623
    6. 'list' → logprob: -4.394355297088623
    7. ' ndarray' → logprob: -9.019354820251465
    8. '```' → logprob: -9.519354820251465
    9. ' float' → logprob: -9.644354820251465
    10. 'float' → logprob: -10.519354820251465

Token 198: ' tableau' (ID: 67053)
  Prédit: ' array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' array' → logprob: -0.584097146987915
    2. 'array' → logprob: -1.084097146987915
    3. 'rray' → logprob: -2.834097146987915
    4. ' ndarray' → logprob: -5.459096908569336
    5. 'list' → logprob: -5.584096908569336
    6. ' numpy' → logprob: -5.709096908569336
    7. 'arr' → logprob: -5.834096908569336
    8. ' list' → logprob: -5.959096908569336
    9. ' tableau' → logprob: -5.959096908569336
    10. 'nd' → logprob: -6.084096908569336

Token 199: ' numpy' (ID: 19529)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.8862517476081848
    2. '(' → logprob: -1.38625168800354
    3. '(array' → logprob: -1.76125168800354
    4. 'int' → logprob: -2.13625168800354
    5. 'array' → logprob: -4.511251926422119
    6. ' array' → logprob: -4.761251926422119
    7. '<int' → logprob: -5.511251926422119
    8. '([' → logprob: -5.636251926422119
    9. '[int' → logprob: -5.636251926422119
    10. '=array' → logprob: -5.761251926422119

Token 200: ' d' (ID: 272)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7000851035118103
    2. '(array' → logprob: -0.8250851035118103
    3. '(map' → logprob: -3.950085163116455
    4. '(list' → logprob: -3.950085163116455
    5. '(int' → logprob: -4.200085163116455
    6. 'array' → logprob: -6.200085163116455
    7. '(arr' → logprob: -6.325085163116455
    8. '([' → logprob: -6.825085163116455
    9. '   ' → logprob: -7.075085163116455
    10. '(open' → logprob: -7.325085163116455

Token 201: ''ent' (ID: 53422)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.23742131888866425
    2. ' int' → logprob: -2.6124212741851807
    3. 'ent' → logprob: -2.7374212741851807
    4. ''ent' → logprob: -4.36242151260376
    5. '(int' → logprob: -4.48742151260376
    6. 'type' → logprob: -4.61242151260376
    7. ' integers' → logprob: -4.98742151260376
    8. 'dtype' → logprob: -5.11242151260376
    9. 'e' → logprob: -5.61242151260376
    10. '```' → logprob: -5.86242151260376

Token 202: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.0015199800254777074
    2. 'ier' → logprob: -6.501520156860352
    3. 'i' → logprob: -11.876520156860352
    4. 'ières' → logprob: -11.876520156860352
    5. 'ers' → logprob: -13.126520156860352
    6. '```' → logprob: -14.251520156860352
    7. '   ' → logprob: -15.376520156860352
    8. 'ieres' → logprob: -15.376520156860352
    9. 'er' → logprob: -15.501520156860352
    10. 'iert' → logprob: -16.25152015686035

Token 203: ' ' (ID: 220)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08017098158597946
    2. 'data' → logprob: -3.5801708698272705
    3. '(array' → logprob: -4.08017110824585
    4. '(data' → logprob: -4.95517110824585
    5. '(arr' → logprob: -5.45517110824585
    6. '(map' → logprob: -5.70517110824585
    7. '(open' → logprob: -5.83017110824585
    8. '(int' → logprob: -6.20517110824585
    9. '(
' → logprob: -6.33017110824585
    10. '(argv' → logprob: -6.70517110824585

Token 204: '32' (ID: 1398)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -1.4810309410095215
    2. '(array' → logprob: -1.4810309410095215
    3. '(' → logprob: -2.2310309410095215
    4. '(data' → logprob: -2.4810309410095215
    5. '(arr' → logprob: -2.6060309410095215
    6. '(map' → logprob: -2.6060309410095215
    7. '(int' → logprob: -2.7310309410095215
    8. 'int' → logprob: -3.2310309410095215
    9. 'array' → logprob: -3.9810309410095215
    10. '   ' → logprob: -4.2310309410095215

Token 205: ' bits' (ID: 18189)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.07464972883462906
    2. '32' → logprob: -3.0746498107910156
    3. ' int' → logprob: -4.824649810791016
    4. ')' → logprob: -5.074649810791016
    5. ',' → logprob: -5.699649810791016
    6. '(int' → logprob: -6.449649810791016
    7. '[int' → logprob: -6.949649810791016
    8. 'bits' → logprob: -7.074649810791016
    9. 't' → logprob: -7.199649810791016
    10. 'bit' → logprob: -7.449649810791016

Token 206: ' avec' (ID: 3937)
  Prédit: '(data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(data' → logprob: -1.6285585165023804
    2. '(array' → logprob: -1.6285585165023804
    3. 'data' → logprob: -1.8785585165023804
    4. '(' → logprob: -2.00355863571167
    5. '(int' → logprob: -2.25355863571167
    6. '(arr' → logprob: -2.50355863571167
    7. '(map' → logprob: -3.50355863571167
    8. 'int' → logprob: -4.00355863571167
    9. '   ' → logprob: -4.12855863571167
    10. '(argv' → logprob: -4.50355863571167

Token 207: ' '' (ID: 461)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.29383307695388794
    2. 'array' → logprob: -1.6688330173492432
    3. ' int' → logprob: -3.293833017349243
    4. ' array' → logprob: -3.668833017349243
    5. 'from' → logprob: -6.418833255767822
    6. 'astype' → logprob: -7.168833255767822
    7. 'dtype' → logprob: -7.668833255767822
    8. '```' → logprob: -8.543832778930664
    9. ' dtype' → logprob: -8.793832778930664
    10. 'arr' → logprob: -9.043832778930664

Token 208: 'int' (ID: 491)
  Prédit: 'array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'array' → logprob: -0.04915487393736839
    2. 'from' → logprob: -3.049154758453369
    3. 'int' → logprob: -7.549154758453369
    4. 'as' → logprob: -10.799155235290527
    5. 'arr' → logprob: -12.049155235290527
    6. 'astype' → logprob: -12.174155235290527
    7. '```' → logprob: -13.049155235290527
    8. ' array' → logprob: -13.174155235290527
    9. '.array' → logprob: -13.424155235290527
    10. '(array' → logprob: -14.049155235290527

Token 209: '32' (ID: 1398)
  Prédit: '32'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '32' → logprob: -2.1008713702030946e-06
    2. '64' → logprob: -13.500001907348633
    3. '8' → logprob: -14.375001907348633
    4. '3' → logprob: -17.250001907348633
    5. '_' → logprob: -17.250001907348633
    6. 'c' → logprob: -17.750001907348633
    7. 's' → logprob: -17.875001907348633
    8. '16' → logprob: -18.250001907348633
    9. '```' → logprob: -18.250001907348633
    10. '(' → logprob: -18.875001907348633

Token 210: ''.
' (ID: 49980)
  Prédit: ')''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')'' → logprob: -0.03336568921804428
    2. ')' → logprob: -3.7833657264709473
    3. ')',' → logprob: -5.658365726470947
    4. '')' → logprob: -6.283365726470947
    5. ')'
' → logprob: -6.658365726470947
    6. ''' → logprob: -6.908365726470947
    7. ').'' → logprob: -7.533365726470947
    8. ')').' → logprob: -7.658365726470947
    9. ').' → logprob: -8.033365249633789
    10. '()' → logprob: -8.283365249633789

Token 211: '   ' (ID: 271)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.6812443733215332
    2. ' data' → logprob: -0.9312443733215332
    3. '   ' → logprob: -2.931244373321533
    4. 'tokens' → logprob: -5.181244373321533
    5. 'input' → logprob: -5.306244373321533
    6. '(' → logprob: -5.306244373321533
    7. ' tokens' → logprob: -5.806244373321533
    8. 'stdin' → logprob: -5.931244373321533
    9. 'import' → logprob: -6.056244373321533
    10. 'arr' → logprob: -6.181244373321533

Token 212: ' t' (ID: 260)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.1225224956870079
    2. 'arr' → logprob: -3.7475225925445557
    3. 'a' → logprob: -3.8725225925445557
    4. 'A' → logprob: -4.497522354125977
    5. ' data' → logprob: -4.622522354125977
    6. 'lines' → logprob: -5.247522354125977
    7. 'values' → logprob: -5.372522354125977
    8. 'dist' → logprob: -5.497522354125977
    9. 'stdin' → logprob: -5.747522354125977
    10. 'input' → logprob: -5.872522354125977

Token 213: ' =' (ID: 314)
  Prédit: 'ext'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ext' → logprob: -0.6314544081687927
    2. ' =' → logprob: -1.2564544677734375
    3. 'okens' → logprob: -2.8814544677734375
    4. '_data' → logprob: -3.2564544677734375
    5. '=' → logprob: -3.6314544677734375
    6. 's' → logprob: -4.2564544677734375
    7. 'data' → logprob: -4.2564544677734375
    8. 'xt' → logprob: -5.0064544677734375
    9. '=int' → logprob: -5.3814544677734375
    10. 'able' → logprob: -6.0064544677734375

Token 214: ' int' (ID: 677)
  Prédit: 'array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'array' → logprob: -0.043874990195035934
    2. ' array' → logprob: -3.168874979019165
    3. 'from' → logprob: -7.418875217437744
    4. 'int' → logprob: -8.293874740600586
    5. ' from' → logprob: -11.293874740600586
    6. '	array' → logprob: -12.793874740600586
    7. '(array' → logprob: -13.168874740600586
    8. '.array' → logprob: -13.293874740600586
    9. 'numpy' → logprob: -13.418874740600586
    10. ' int' → logprob: -13.543874740600586

Token 215: '32' (ID: 1398)
  Prédit: '32'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '32' → logprob: -4.978233846486546e-05
    2. '3' → logprob: -11.000049591064453
    3. '_' → logprob: -11.000049591064453
    4. '64' → logprob: -11.375049591064453
    5. '_(' → logprob: -13.125049591064453
    6. '(' → logprob: -14.000049591064453
    7. 'array' → logprob: -14.000049591064453
    8. '8' → logprob: -15.125049591064453
    9. 's' → logprob: -15.375049591064453
    10. '(int' → logprob: -16.000049591064453

Token 216: '(open' (ID: 62785)
  Prédit: '(open'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(open' → logprob: -0.03755168244242668
    2. '(list' → logprob: -4.1625518798828125
    3. '(array' → logprob: -4.2875518798828125
    4. '(' → logprob: -5.2875518798828125
    5. ' (' → logprob: -6.0375518798828125
    6. '(read' → logprob: -10.412551879882812
    7. 'open' → logprob: -11.287551879882812
    8. '(input' → logprob: -11.787551879882812
    9. 'array' → logprob: -12.037551879882812
    10. ')(' → logprob: -12.287551879882812

Token 217: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.4617256056226324e-05
    2. '0' → logprob: -12.000014305114746
    3. ' (' → logprob: -12.375014305114746
    4. '(
' → logprob: -12.875014305114746
    5. ')(' → logprob: -14.000014305114746
    6. ')' → logprob: -14.375014305114746
    7. '```' → logprob: -16.625015258789062
    8. '((' → logprob: -17.000015258789062
    9. 'open' → logprob: -17.500015258789062
    10. ' ' → logprob: -18.500015258789062

Token 218: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.85104202805087e-05
    2. '(' → logprob: -9.500078201293945
    3. ')' → logprob: -12.875078201293945
    4. ' ' → logprob: -14.125078201293945
    5. '   ' → logprob: -15.750078201293945
    6. '"' → logprob: -17.125078201293945
    7. ''' → logprob: -17.625078201293945
    8. '```' → logprob: -17.625078201293945
    9. '
' → logprob: -18.125078201293945
    10. ' (' → logprob: -18.625078201293945

Token 219: ').' (ID: 741)
  Prédit: ').'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.0056257350370287895
    2. ')' → logprob: -5.7556257247924805
    3. '()).' → logprob: -6.6306257247924805
    4. ' ).' → logprob: -7.0056257247924805
    5. ' ' → logprob: -9.63062572479248
    6. '()' → logprob: -9.63062572479248
    7. '().' → logprob: -11.00562572479248
    8. '   ' → logprob: -11.13062572479248
    9. ',' → logprob: -11.25562572479248
    10. '	' → logprob: -11.38062572479248

Token 220: 'read' (ID: 1293)
  Prédit: 'read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -3.054500666621607e-06
    2. ' read' → logprob: -12.75000286102295
    3. '.read' → logprob: -17.000003814697266
    4. ' ' → logprob: -20.500003814697266
    5. ')' → logprob: -20.750003814697266
    6. '	read' → logprob: -20.750003814697266
    7. '_read' → logprob: -21.000003814697266
    8. '  ' → logprob: -23.000003814697266
    9. ').' → logprob: -23.000003814697266
    10. '   ' → logprob: -23.375003814697266

Token 221: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.005312854424118996
    2. '()' → logprob: -5.255312919616699
    3. '())' → logprob: -9.7553129196167
    4. '()).' → logprob: -11.8803129196167
    5. '(' → logprob: -12.1303129196167
    6. ' ().' → logprob: -12.5053129196167
    7. ')' → logprob: -13.2553129196167
    8. '()
' → logprob: -13.8803129196167
    9. '()))' → logprob: -14.3803129196167
    10. '(),' → logprob: -14.7553129196167

Token 222: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0009906532941386104
    2. 'strip' → logprob: -7.000990867614746
    3. ' split' → logprob: -9.750990867614746
    4. 'decode' → logprob: -10.875990867614746
    5. 'read' → logprob: -13.250990867614746
    6. ')' → logprob: -15.250990867614746
    7. 'replace' → logprob: -16.87598991394043
    8. 'rstrip' → logprob: -17.12598991394043
    9. ' strip' → logprob: -17.75098991394043
    10. ' ' → logprob: -18.12598991394043

Token 223: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0798453614115715
    2. '()' → logprob: -3.079845428466797
    3. '('' → logprob: -4.579845428466797
    4. '(' → logprob: -4.704845428466797
    5. '()))' → logprob: -4.954845428466797
    6. '(','' → logprob: -6.329845428466797
    7. '(),' → logprob: -6.954845428466797
    8. '()[' → logprob: -8.204845428466797
    9. ')' → logprob: -8.204845428466797
    10. '())
' → logprob: -8.829845428466797

Token 224: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6990134119987488
    2. '[' → logprob: -0.6990134119987488
    3. '()' → logprob: -6.1990132331848145
    4. ')' → logprob: -6.3240132331848145
    5. '(
' → logprob: -7.8240132331848145
    6. '('' → logprob: -8.574013710021973
    7. '([' → logprob: -8.699013710021973
    8. '   ' → logprob: -8.699013710021973
    9. ',' → logprob: -8.949013710021973
    10. '[:]' → logprob: -8.949013710021973

Token 225: ' #' (ID: 1069)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.48868969082832336
    2. '(' → logprob: -0.988689661026001
    3. ',' → logprob: -5.36368989944458
    4. '(
' → logprob: -5.73868989944458
    5. '[
' → logprob: -6.73868989944458
    6. '0' → logprob: -7.48868989944458
    7. '([' → logprob: -7.48868989944458
    8. ':' → logprob: -7.48868989944458
    9. '.' → logprob: -7.86368989944458
    10. '#' (adapté à ' #') → logprob: -8.113689422607422

Token 226: ' Assign' (ID: 60840)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.03774421289563179
    2. ' n' → logprob: -4.787744045257568
    3. 'V' → logprob: -5.287744045257568
    4. 'nb' → logprob: -5.412744045257568
    5. '#' → logprob: -5.912744045257568
    6. 'N' → logprob: -6.037744045257568
    7. 'p' → logprob: -6.412744045257568
    8. 'm' → logprob: -6.537744045257568
    9. 't' → logprob: -6.787744045257568
    10. 'def' → logprob: -7.037744045257568

Token 227: 'ation' (ID: 387)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8814020156860352
    2. 'er' → logprob: -1.0064020156860352
    3. '=' → logprob: -3.131402015686035
    4. 'e' → logprob: -3.256402015686035
    5. 'ation' → logprob: -4.131402015686035
    6. '[' → logprob: -4.256402015686035
    7. 's' → logprob: -4.381402015686035
    8. '()' → logprob: -4.381402015686035
    9. 'ment' → logprob: -4.506402015686035
    10. '   ' → logprob: -4.631402015686035

Token 228: ' des' (ID: 731)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6576629281044006
    2. 's' → logprob: -1.0326628684997559
    3. '=' → logprob: -2.907662868499756
    4. '(' → logprob: -3.282662868499756
    5. 't' → logprob: -5.157662868499756
    6. '[' → logprob: -5.282662868499756
    7. '(
' → logprob: -5.782662868499756
    8. ' t' → logprob: -5.907662868499756
    9. ',' → logprob: -6.157662868499756
    10. '   ' → logprob: -6.532662868499756

Token 229: ' ' (ID: 220)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.8480398654937744
    2. 'n' → logprob: -1.2230398654937744
    3. ' t' → logprob: -2.2230398654937744
    4. 't' → logprob: -2.5980398654937744
    5. ' variables' → logprob: -3.7230398654937744
    6. '[' → logprob: -4.723039627075195
    7. 'N' → logprob: -4.848039627075195
    8. 'm' → logprob: -4.973039627075195
    9. ' =' → logprob: -5.348039627075195
    10. ' m' → logprob: -5.598039627075195

Token 230: '3' (ID: 18)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.38527533411979675
    2. 'n' → logprob: -1.5102753639221191
    3. 'm' → logprob: -4.010275363922119
    4. '[t' → logprob: -4.010275363922119
    5. '[n' → logprob: -4.635275363922119
    6. '(t' → logprob: -4.885275363922119
    7. 'variables' → logprob: -4.885275363922119
    8. '[' → logprob: -5.385275363922119
    9. 'N' → logprob: -5.510275363922119
    10. 'size' → logprob: -6.135275363922119

Token 231: ' premiers' (ID: 59140)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.002176073845475912
    2. ' =' → logprob: -7.002176284790039
    3. '0' → logprob: -7.752176284790039
    4. 'first' → logprob: -8.127176284790039
    5. ' [' → logprob: -9.127176284790039
    6. 's' → logprob: -9.502176284790039
    7. ' ' → logprob: -10.377176284790039
    8. '=' → logprob: -10.502176284790039
    9. '[int' → logprob: -10.502176284790039
    10. '[:]' → logprob: -10.502176284790039

Token 232: ' nombres' (ID: 76205)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6330805420875549
    2. ' =' → logprob: -1.2580804824829102
    3. '[' → logprob: -2.38308048248291
    4. 'tokens' → logprob: -3.63308048248291
    5. 't' → logprob: -3.75808048248291
    6. '[:]' → logprob: -4.38308048248291
    7. '(' → logprob: -5.38308048248291
    8. ' t' → logprob: -5.50808048248291
    9. '<|end|>' → logprob: -5.88308048248291
    10. 'indices' → logprob: -5.88308048248291

Token 233: ' lus' (ID: 54762)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5989347696304321
    2. '[' → logprob: -1.2239347696304321
    3. '   ' → logprob: -2.7239346504211426
    4. '=' → logprob: -2.9739346504211426
    5. '[:]' → logprob: -4.598934650421143
    6. ',' → logprob: -5.223934650421143
    7. '(t' → logprob: -5.223934650421143
    8. 't' → logprob: -5.348934650421143
    9. 's' → logprob: -5.848934650421143
    10. ' t' → logprob: -5.848934650421143

Token 234: ' à' (ID: 1221)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.054544597864151
    2. '=' → logprob: -4.179544448852539
    3. ' =' → logprob: -4.304544448852539
    4. '[:]' → logprob: -4.304544448852539
    5. 't' → logprob: -5.554544448852539
    6. ',' → logprob: -5.929544448852539
    7. '[:' → logprob: -6.554544448852539
    8. ' t' → logprob: -7.679544448852539
    9. '(' → logprob: -7.804544448852539
    10. '   ' → logprob: -8.304544448852539

Token 235: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.04277033731341362
    2. 'N' → logprob: -3.7927703857421875
    3. '(n' → logprob: -5.2927703857421875
    4. ' n' → logprob: -5.4177703857421875
    5. 't' → logprob: -5.7927703857421875
    6. 'nb' → logprob: -7.1677703857421875
    7. 'V' → logprob: -7.2927703857421875
    8. 'a' → logprob: -7.5427703857421875
    9. '[n' → logprob: -7.9177703857421875
    10. 'm' → logprob: -7.9177703857421875

Token 236: ',' (ID: 11)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.07596581429243088
    2. ' =' → logprob: -3.3259658813476562
    3. ',' → logprob: -3.4509658813476562
    4. '=' → logprob: -5.450965881347656
    5. '(' → logprob: -8.325965881347656
    6. '[n' → logprob: -8.575965881347656
    7. '[:]' → logprob: -9.200965881347656
    8. '   ' → logprob: -9.325965881347656
    9. ',n' → logprob: -9.575965881347656
    10. ' ' → logprob: -9.575965881347656

Token 237: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.9986178278923035
    2. 'n' → logprob: -1.2486178874969482
    3. 't' → logprob: -1.9986178874969482
    4. ' n' → logprob: -2.6236178874969482
    5. ' m' → logprob: -2.6236178874969482
    6. ' t' → logprob: -3.4986178874969482
    7. 'a' → logprob: -4.623617649078369
    8. 'i' → logprob: -5.123617649078369
    9. 's' → logprob: -5.248617649078369
    10. 'p' → logprob: -6.248617649078369

Token 238: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.031868599355220795
    2. '=' → logprob: -4.0318684577941895
    3. ' =' → logprob: -4.7818684577941895
    4. '[' → logprob: -5.7818684577941895
    5. ',n' → logprob: -6.4068684577941895
    6. ' ,' → logprob: -8.656868934631348
    7. ',t' → logprob: -9.281868934631348
    8. '=n' → logprob: -9.531868934631348
    9. 'n' → logprob: -9.781868934631348
    10. '[n' → logprob: -10.281868934631348

Token 239: ' l' (ID: 305)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.27529439330101013
    2. 'k' → logprob: -2.650294303894043
    3. 'd' → logprob: -2.900294303894043
    4. 's' → logprob: -3.275294303894043
    5. 'q' → logprob: -3.275294303894043
    6. ' p' → logprob: -4.025294303894043
    7. '_' → logprob: -5.775294303894043
    8. ' s' → logprob: -6.025294303894043
    9. ' d' → logprob: -6.275294303894043
    10. ' k' → logprob: -6.400294303894043

Token 240: '.' (ID: 13)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.19947488605976105
    2. ' =' → logprob: -2.074474811553955
    3. '[' → logprob: -3.449474811553955
    4. ',' → logprob: -3.824474811553955
    5. '=n' → logprob: -6.949474811553955
    6. 'n' → logprob: -8.324475288391113
    7. '[n' → logprob: -9.324475288391113
    8. ',n' → logprob: -9.949475288391113
    9. '[:]' → logprob: -10.074475288391113
    10. 't' → logprob: -10.199475288391113

Token 241: ' '' (ID: 461)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3662971556186676
    2. 'n' → logprob: -1.7412971258163452
    3. '=' → logprob: -2.4912972450256348
    4. ' =' → logprob: -3.8662972450256348
    5. ' n' → logprob: -4.616297245025635
    6. '[n' → logprob: -4.991297245025635
    7. ',' → logprob: -5.116297245025635
    8. '0' → logprob: -6.616297245025635
    9. '=n' → logprob: -6.991297245025635
    10. '(' → logprob: -7.491297245025635

Token 242: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.005086818244308233
    2. ' n' → logprob: -6.380086898803711
    3. '=' → logprob: -6.630086898803711
    4. ',' → logprob: -7.130086898803711
    5. '(n' → logprob: -7.630086898803711
    6. '=n' → logprob: -8.255086898803711
    7. '[n' → logprob: -9.005086898803711
    8. ',n' → logprob: -9.130086898803711
    9. ')' → logprob: -9.755086898803711
    10. '[' → logprob: -10.005086898803711

Token 243: ''' (ID: 6)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2442300170660019
    2. '[' → logprob: -1.744230031967163
    3. '=' → logprob: -4.369229793548584
    4. ',n' → logprob: -4.369229793548584
    5. ' =' → logprob: -4.869229793548584
    6. ',m' → logprob: -5.119229793548584
    7. ' ,' → logprob: -7.369229793548584
    8. ')' → logprob: -7.869229793548584
    9. '[n' → logprob: -8.244230270385742
    10. ',
' → logprob: -8.869230270385742

Token 244: ' est' (ID: 893)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5477513074874878
    2. ',' → logprob: -1.0477513074874878
    3. ' =' → logprob: -2.6727514266967773
    4. ',n' → logprob: -7.172751426696777
    5. ',m' → logprob: -7.672751426696777
    6. '[' → logprob: -8.047751426696777
    7. ' ,' → logprob: -9.172751426696777
    8. '=n' → logprob: -9.297751426696777
    9. '=m' → logprob: -9.547751426696777
    10. ' ' → logprob: -10.922751426696777

Token 245: ' probablement' (ID: 87740)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.2255460023880005
    2. ' t' → logprob: -1.6005460023880005
    3. ' ' → logprob: -9.975545883178711
    4. ' int' → logprob: -10.350545883178711
    5. 'int' → logprob: -10.600545883178711
    6. '	t' → logprob: -10.600545883178711
    7. '  ' → logprob: -13.850545883178711
    8. ' n' → logprob: -14.100545883178711
    9. ' ' → logprob: -14.600545883178711
    10. 'n' → logprob: -14.725545883178711

Token 246: ' le' (ID: 505)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.014206637628376484
    2. ' t' → logprob: -4.264206409454346
    3. 'int' → logprob: -10.889206886291504
    4. ' ' → logprob: -11.264206886291504
    5. ' int' → logprob: -12.139206886291504
    6. '	t' → logprob: -12.889206886291504
    7. '  ' → logprob: -13.389206886291504
    8. 'n' → logprob: -14.389206886291504
    9. '`t' → logprob: -14.889206886291504
    10. ',' → logprob: -15.014206886291504

Token 247: ' nombre' (ID: 9733)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.4269242584705353
    2. ' nombre' → logprob: -1.551924228668213
    3. 'nombre' → logprob: -2.426924228668213
    4. ' number' → logprob: -3.926924228668213
    5. ' t' → logprob: -4.176924228668213
    6. 'n' → logprob: -5.301924228668213
    7. 'number' → logprob: -5.926924228668213
    8. ' premier' → logprob: -6.676924228668213
    9. ' n' → logprob: -7.426924228668213
    10. ' entier' → logprob: -7.676924228668213

Token 248: ' de' (ID: 334)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.07269684970378876
    2. '(' → logprob: -2.6976969242095947
    3. '(n' → logprob: -7.322696685791016
    4. ' (' → logprob: -7.822696685791016
    5. '   ' → logprob: -8.197696685791016
    6. 's' → logprob: -8.447696685791016
    7. '(
' → logprob: -8.572696685791016
    8. 'n' → logprob: -8.697696685791016
    9. '[
' → logprob: -8.697696685791016
    10. '[n' → logprob: -9.197696685791016

Token 249: ' somm' (ID: 44830)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9247608184814453
    2. 'vertices' → logprob: -1.7997608184814453
    3. 'graph' → logprob: -2.6747608184814453
    4. 's' → logprob: -2.9247608184814453
    5. ' vertices' → logprob: -3.1747608184814453
    6. ' graph' → logprob: -3.1747608184814453
    7. 't' → logprob: -3.5497608184814453
    8. '_' → logprob: -3.7997608184814453
    9. 'n' → logprob: -3.9247608184814453
    10. '_vertices' → logprob: -3.9247608184814453

Token 250: 'ets' (ID: 1719)
  Prédit: 'ets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ets' → logprob: -0.19631436467170715
    2. 'et' → logprob: -2.9463143348693848
    3. '_vertices' → logprob: -3.5713143348693848
    4. '[' → logprob: -3.8213143348693848
    5. 'êtres' → logprob: -3.8213143348693848
    6. '   ' → logprob: -4.321314334869385
    7. 'ètres' → logprob: -4.446314334869385
    8. 'e' → logprob: -5.446314334869385
    9. '_nodes' → logprob: -5.571314334869385
    10. 'vertices' → logprob: -5.946314334869385

Token 251: ' du' (ID: 1462)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.11082196980714798
    2. ',' → logprob: -2.3608219623565674
    3. '(' → logprob: -5.6108222007751465
    4. ' =' → logprob: -5.7358222007751465
    5. '=' → logprob: -6.3608222007751465
    6. '[n' → logprob: -7.7358222007751465
    7. '(n' → logprob: -8.110821723937988
    8. 'n' → logprob: -8.235821723937988
    9. '   ' → logprob: -8.860821723937988
    10. ',n' → logprob: -9.110821723937988

Token 252: ' grap' (ID: 60955)
  Prédit: ' grap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grap' → logprob: -0.3146120309829712
    2. ' t' → logprob: -1.8146120309829712
    3. ' graph' → logprob: -3.0646119117736816
    4. 'graph' → logprob: -3.3146119117736816
    5. 't' → logprob: -3.8146119117736816
    6. 'gr' → logprob: -7.689611911773682
    7. ' ' → logprob: -8.18961238861084
    8. ' Grap' → logprob: -8.31461238861084
    9. ')' → logprob: -8.43961238861084
    10. ' n' → logprob: -8.81461238861084

Token 253: 'he' (ID: 273)
  Prédit: 'aphe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aphe' → logprob: -0.03483683243393898
    2. '[' → logprob: -4.409836769104004
    3. 'aph' → logprob: -4.659836769104004
    4. 'ap' → logprob: -5.534836769104004
    5. '[]' → logprob: -6.909836769104004
    6. ',' → logprob: -7.159836769104004
    7. 'he' → logprob: -7.409836769104004
    8. '   ' → logprob: -7.409836769104004
    9. 'ph' → logprob: -7.534836769104004
    10. 'e' → logprob: -7.659836769104004

Token 254: ',
' (ID: 412)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0919765904545784
    2. ',' → logprob: -2.4669766426086426
    3. '[n' → logprob: -6.966976642608643
    4. '(' → logprob: -7.466976642608643
    5. ' =' → logprob: -7.716976642608643
    6. ',n' → logprob: -8.091976165771484
    7. 'n' → logprob: -8.591976165771484
    8. '=' → logprob: -8.716976165771484
    9. ')' → logprob: -9.841976165771484
    10. '(n' → logprob: -9.966976165771484

Token 255: '   ' (ID: 271)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.6305946707725525
    2. ' t' → logprob: -2.0055947303771973
    3. '0' → logprob: -2.1305947303771973
    4. 'n' → logprob: -2.5055947303771973
    5. '[' → logprob: -3.1305947303771973
    6. ',' → logprob: -3.6305947303771973
    7. ' n' → logprob: -3.6305947303771973
    8. '=' → logprob: -4.630594730377197
    9. ' ' → logprob: -4.630594730377197
    10. ' =' → logprob: -4.880594730377197

Token 256: ' #' (ID: 1069)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.602314293384552
    2. '0' → logprob: -1.4773142337799072
    3. ',' → logprob: -2.6023142337799072
    4. ' n' → logprob: -2.6023142337799072
    5. ' ' → logprob: -3.8523142337799072
    6. '=' → logprob: -3.9773142337799072
    7. '[' → logprob: -4.227314472198486
    8. 't' → logprob: -5.102314472198486
    9. ' =' → logprob: -5.602314472198486
    10. '   ' → logprob: -6.352314472198486

Token 257: ' '' (ID: 461)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.043497391045093536
    2. 'n' → logprob: -3.668497323989868
    3. ' m' → logprob: -4.168497562408447
    4. ' n' → logprob: -6.918497562408447
    5. '   ' → logprob: -9.168497085571289
    6. '[' → logprob: -9.543497085571289
    7. '    ' → logprob: -9.793497085571289
    8. ',' → logprob: -10.043497085571289
    9. ' ' → logprob: -10.043497085571289
    10. ')' → logprob: -10.543497085571289

Token 258: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.01126850862056017
    2. ' m' → logprob: -4.511268615722656
    3. ')' → logprob: -8.886268615722656
    4. ' ' → logprob: -10.886268615722656
    5. ',' → logprob: -10.886268615722656
    6. '=' → logprob: -11.011268615722656
    7. ' =' → logprob: -12.011268615722656
    8. ' 
' → logprob: -12.136268615722656
    9. '   ' → logprob: -12.761268615722656
    10. '  ' → logprob: -13.261268615722656

Token 259: ''' (ID: 6)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2658122181892395
    2. ',' → logprob: -1.7658121585845947
    3. ' =' → logprob: -4.015812397003174
    4. ',n' → logprob: -4.265812397003174
    5. '[n' → logprob: -4.390812397003174
    6. '=' → logprob: -5.015812397003174
    7. 'n' → logprob: -5.890812397003174
    8. ')' → logprob: -6.015812397003174
    9. ',
' → logprob: -6.265812397003174
    10. '   ' → logprob: -6.765812397003174

Token 260: ' le' (ID: 505)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4864911437034607
    2. '=' → logprob: -1.1114912033081055
    3. '[' → logprob: -3.1114912033081055
    4. ' =' → logprob: -4.7364912033081055
    5. ',n' → logprob: -6.1114912033081055
    6. '[n' → logprob: -8.861491203308105
    7. 'n' → logprob: -9.111491203308105
    8. ',
' → logprob: -9.486491203308105
    9. ' ,' → logprob: -9.611491203308105
    10. '=n' → logprob: -9.736491203308105

Token 261: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.6977465748786926
    2. 'nombre' → logprob: -0.6977465748786926
    3. '_nombre' → logprob: -5.822746753692627
    4. ' nombres' → logprob: -7.697746753692627
    5. ' ' → logprob: -7.947746753692627
    6. 'n' → logprob: -8.197746276855469
    7. '=' → logprob: -8.697746276855469
    8. '_' → logprob: -9.447746276855469
    9. ' de' → logprob: -10.072746276855469
    10. '  ' → logprob: -10.197746276855469

Token 262: ' d' (ID: 272)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.16846708953380585
    2. '=' → logprob: -2.1684670448303223
    3. ' =' → logprob: -3.7934670448303223
    4. ',' → logprob: -4.918467044830322
    5. '   ' → logprob: -5.293467044830322
    6. '[n' → logprob: -7.168467044830322
    7. ')' → logprob: -7.293467044830322
    8. '  ' → logprob: -7.418467044830322
    9. '[int' → logprob: -7.918467044830322
    10. '(' → logprob: -7.918467044830322

Token 263: ''ar' (ID: 54307)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.4234148263931274
    2. ' =' → logprob: -1.4234148263931274
    3. '[' → logprob: -1.6734148263931274
    4. ' de' → logprob: -2.548414707183838
    5. '_vertices' → logprob: -2.548414707183838
    6. ' des' → logprob: -3.173414707183838
    7. '_nodes' → logprob: -3.173414707183838
    8. '_of' → logprob: -3.923414707183838
    9. '_des' → logprob: -4.673414707183838
    10. '_tokens' → logprob: -4.923414707183838

Token 264: 'êtes' (ID: 23720)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -1.5925506353378296
    2. 'r' → logprob: -1.5925506353378296
    3. '[' → logprob: -1.7175506353378296
    4. 'gs' → logprob: -1.7175506353378296
    5. 'ray' → logprob: -2.467550754547119
    6. 'gv' → logprob: -2.467550754547119
    7. 'cs' → logprob: -3.842550754547119
    8. '=' → logprob: -4.217550754547119
    9. 'range' → logprob: -4.592550754547119
    10. 'rg' → logprob: -5.092550754547119

Token 265: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.016039881855249405
    2. ',n' → logprob: -5.016039848327637
    3. '=' → logprob: -5.891039848327637
    4. 'n' → logprob: -6.266039848327637
    5. '[' → logprob: -6.391039848327637
    6. ' =' → logprob: -6.766039848327637
    7. '(n' → logprob: -7.516039848327637
    8. '[n' → logprob: -7.891039848327637
    9. '=n' → logprob: -8.141039848327637
    10. ' ,' → logprob: -8.766039848327637

Token 266: ' et' (ID: 859)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.48925814032554626
    2. 'n' → logprob: -1.9892581701278687
    3. ' l' → logprob: -2.114258050918579
    4. ' n' → logprob: -2.364258050918579
    5. ' =' → logprob: -4.114258289337158
    6. '=' → logprob: -5.114258289337158
    7. ',' → logprob: -5.364258289337158
    8. ' ' → logprob: -6.739258289337158
    9. ''' → logprob: -6.864258289337158
    10. '   ' → logprob: -7.364258289337158

Token 267: ' '' (ID: 461)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.6365974545478821
    2. 'l' → logprob: -0.7615974545478821
    3. ''' → logprob: -6.636597633361816
    4. ' n' → logprob: -7.136597633361816
    5. '   ' → logprob: -7.511597633361816
    6. ' ' → logprob: -8.011597633361816
    7. ' '' → logprob: -8.136597633361816
    8. 'n' → logprob: -8.136597633361816
    9. ''l' → logprob: -9.136597633361816
    10. '	l' → logprob: -9.386597633361816

Token 268: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.030934959650039673
    2. ' l' → logprob: -3.530935049057007
    3. ')' → logprob: -8.655935287475586
    4. '=' → logprob: -8.780935287475586
    5. '')' → logprob: -8.780935287475586
    6. ' =' → logprob: -9.155935287475586
    7. ''' → logprob: -9.155935287475586
    8. ' ' → logprob: -9.280935287475586
    9. 'n' → logprob: -9.530935287475586
    10. ']' → logprob: -10.280935287475586

Token 269: ''' (ID: 6)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.17717978358268738
    2. ' =' → logprob: -2.4271798133850098
    3. '=' → logprob: -3.1771798133850098
    4. ')' → logprob: -4.92717981338501
    5. '[n' → logprob: -5.17717981338501
    6. '='' → logprob: -5.67717981338501
    7. ']' → logprob: -5.67717981338501
    8. ''' → logprob: -6.17717981338501
    9. '')' → logprob: -6.30217981338501
    10. ',' → logprob: -6.55217981338501

Token 270: ' une' (ID: 2463)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07361879199743271
    2. ' =' → logprob: -2.6986188888549805
    3. ',' → logprob: -6.0736188888549805
    4. '=n' → logprob: -7.1986188888549805
    5. '=
' → logprob: -8.19861888885498
    6. ',n' → logprob: -8.57361888885498
    7. ' ' → logprob: -10.19861888885498
    8. '   ' → logprob: -10.32361888885498
    9. '[' → logprob: -10.82361888885498
    10. '=int' → logprob: -11.07361888885498

Token 271: ' limite' (ID: 48939)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.9691429138183594
    2. 'long' → logprob: -2.7191429138183594
    3. ':' → logprob: -2.8441429138183594
    4. 'n' → logprob: -2.8441429138183594
    5. 'limit' → logprob: -2.9691429138183594
    6. 'distance' → logprob: -2.9691429138183594
    7. '<|end|>' → logprob: -3.0941429138183594
    8. '=' → logprob: -3.2191429138183594
    9. '[' → logprob: -3.4691429138183594
    10. 'range' → logprob: -3.5941429138183594

Token 272: ' quelcon' (ID: 199130)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7978487610816956
    2. ' =' → logprob: -1.1728487014770508
    3. '[' → logprob: -2.297848701477051
    4. '(' → logprob: -3.172848701477051
    5. '(n' → logprob: -3.297848701477051
    6. ',' → logprob: -3.547848701477051
    7. '=n' → logprob: -4.547848701477051
    8. 'n' → logprob: -5.172848701477051
    9. '[n' → logprob: -5.672848701477051
    10. ')' → logprob: -5.922848701477051

Token 273: 'que' (ID: 1126)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07381589710712433
    2. ' =' → logprob: -3.0738158226013184
    3. 'e' → logprob: -4.573815822601318
    4. ')' → logprob: -4.698815822601318
    5. '   ' → logprob: -5.948815822601318
    6. '  ' → logprob: -7.198815822601318
    7. ' de' → logprob: -7.823815822601318
    8. '=int' → logprob: -7.948815822601318
    9. ' ' → logprob: -8.573816299438477
    10. ',' → logprob: -8.573816299438477

Token 274: ' (' (ID: 350)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6327720284461975
    2. ',' → logprob: -1.2577719688415527
    3. ' =' → logprob: -2.3827719688415527
    4. 'n' → logprob: -3.2577719688415527
    5. '=n' → logprob: -3.7577719688415527
    6. ',n' → logprob: -4.257771968841553
    7. '(n' → logprob: -4.882771968841553
    8. '[' → logprob: -5.632771968841553
    9. ' n' → logprob: -6.007771968841553
    10. '[n' → logprob: -6.632771968841553

Token 275: 'ici' (ID: 3757)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.188913956284523
    2. '[' → logprob: -2.8139140605926514
    3. ' )' → logprob: -2.8139140605926514
    4. '   ' → logprob: -3.5639140605926514
    5. '[n' → logprob: -5.188913822174072
    6. '(n' → logprob: -5.438913822174072
    7. '(' → logprob: -6.313913822174072
    8. 'n' → logprob: -6.438913822174072
    9. ' ' → logprob: -6.563913822174072
    10. ')
' → logprob: -7.063913822174072

Token 276: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.21401774883270264
    2. ' )' → logprob: -1.8390177488327026
    3. '=' → logprob: -3.839017868041992
    4. ' probablement' → logprob: -5.714017868041992
    5. ' =' → logprob: -5.839017868041992
    6. ',' → logprob: -6.964017868041992
    7. ' ' → logprob: -7.839017868041992
    8. ' la' → logprob: -7.964017868041992
    9. '=int' → logprob: -7.964017868041992
    10. ' ' → logprob: -8.089017868041992

Token 277: ' une' (ID: 2463)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4153360426425934
    2. ' )' → logprob: -1.540336012840271
    3. ' n' → logprob: -3.0403361320495605
    4. ' probablement' → logprob: -3.7903361320495605
    5. 'n' → logprob: -4.2903361320495605
    6. ' ' → logprob: -4.7903361320495605
    7. ' la' → logprob: -5.0403361320495605
    8. 'l' → logprob: -5.5403361320495605
    9. ' l' → logprob: -5.9153361320495605
    10. '  ' → logprob: -5.9153361320495605

Token 278: ' limite' (ID: 48939)
  Prédit: ' limite'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' limite' → logprob: -0.3052408695220947
    2. 'lim' → logprob: -2.3052408695220947
    3. ' distance' → logprob: -2.5552408695220947
    4. 'distance' → logprob: -2.6802408695220947
    5. ' longueur' → logprob: -5.555240631103516
    6. ' limitation' → logprob: -6.055240631103516
    7. 'max' → logprob: -6.305240631103516
    8. ' )' → logprob: -7.430240631103516
    9. ' borne' → logprob: -7.430240631103516
    10. ')' → logprob: -7.555240631103516

Token 279: ' sur' (ID: 1512)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8244138360023499
    2. ' =' → logprob: -0.8244138360023499
    3. ')' → logprob: -3.074413776397705
    4. ' de' → logprob: -3.574413776397705
    5. ' )' → logprob: -3.574413776397705
    6. 'de' → logprob: -5.324413776397705
    7. 'sur' → logprob: -5.824413776397705
    8. 'pour' → logprob: -6.574413776397705
    9. '=int' → logprob: -6.699413776397705
    10. ' des' → logprob: -6.699413776397705

Token 280: ' la' (ID: 557)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.23184017837047577
    2. ' )' → logprob: -2.731840133666992
    3. ' la' → logprob: -2.731840133666992
    4. ' le' → logprob: -3.981840133666992
    5. ' les' → logprob: -4.231840133666992
    6. 'le' → logprob: -4.356840133666992
    7. ' l' → logprob: -4.731840133666992
    8. 'l' → logprob: -5.106840133666992
    9. ' the' → logprob: -5.731840133666992
    10. ' ' → logprob: -5.856840133666992

Token 281: ' longueur' (ID: 104613)
  Prédit: ' longueur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' longueur' → logprob: -0.4270337224006653
    2. 'long' → logprob: -1.8020336627960205
    3. ' distance' → logprob: -2.1770336627960205
    4. 'distance' → logprob: -3.1770336627960205
    5. ' long' → logprob: -4.8020339012146
    6. ' longue' → logprob: -4.9270339012146
    7. '_long' → logprob: -6.0520339012146
    8. ' longe' → logprob: -6.6770339012146
    9. ' length' → logprob: -6.8020339012146
    10. 'length' → logprob: -6.8020339012146

Token 282: ' des' (ID: 731)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.39554595947265625
    2. ' )' → logprob: -1.1455459594726562
    3. ' des' → logprob: -5.395545959472656
    4. 'des' → logprob: -6.770545959472656
    5. '[' → logprob: -7.395545959472656
    6. '   ' → logprob: -8.020545959472656
    7. ' =' → logprob: -8.020545959472656
    8. '=' → logprob: -8.395545959472656
    9. ' ' → logprob: -8.770545959472656
    10. 'n' → logprob: -8.895545959472656

Token 283: ' chemins' (ID: 192063)
  Prédit: ' chemins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chemins' → logprob: -0.3908019959926605
    2. ' plus' → logprob: -2.1408019065856934
    3. ')' → logprob: -2.7658019065856934
    4. ' chemin' → logprob: -3.2658019065856934
    5. ' paths' → logprob: -3.8908019065856934
    6. 'che' → logprob: -4.015801906585693
    7. 'plus' → logprob: -4.265801906585693
    8. ' )' → logprob: -4.265801906585693
    9. 'paths' → logprob: -5.515801906585693
    10. ' trajet' → logprob: -5.515801906585693

Token 284: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.020192988216876984
    2. '[' → logprob: -4.520193099975586
    3. '   ' → logprob: -5.145193099975586
    4. ' )' → logprob: -6.770193099975586
    5. '[n' → logprob: -7.270193099975586
    6. 'n' → logprob: -7.520193099975586
    7. ')
' → logprob: -8.270193099975586
    8. ').' → logprob: -9.270193099975586
    9. ',' → logprob: -9.270193099975586
    10. '(n' → logprob: -9.520193099975586

Token 285: '   ' (ID: 271)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.047758638858795166
    2. '(' → logprob: -3.4227585792541504
    3. '[n' → logprob: -5.04775857925415
    4. '(n' → logprob: -5.92275857925415
    5. 'n' → logprob: -6.42275857925415
    6. ' =' → logprob: -7.54775857925415
    7. '[
' → logprob: -7.54775857925415
    8. '[:' → logprob: -7.79775857925415
    9. '=' → logprob: -7.79775857925415
    10. ',' → logprob: -8.047759056091309

Token 286: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -1.1478570699691772
    2. '=' → logprob: -1.3978570699691772
    3. ' =' → logprob: -1.7728570699691772
    4. ',' → logprob: -2.147857189178467
    5. '[' → logprob: -3.022857189178467
    6. '=n' → logprob: -3.022857189178467
    7. ' n' → logprob: -3.647857189178467
    8. ',n' → logprob: -3.897857189178467
    9. '[n' → logprob: -6.022857189178467
    10. ' ,' → logprob: -7.522857189178467

Token 287: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.041686393320560455
    2. ',m' → logprob: -3.2916862964630127
    3. '=' → logprob: -5.791686534881592
    4. ' =' → logprob: -8.166686058044434
    5. '=m' → logprob: -8.791686058044434
    6. ',n' → logprob: -9.541686058044434
    7. ',
' → logprob: -11.041686058044434
    8. ' ,' → logprob: -11.291686058044434
    9. 'm' → logprob: -11.416686058044434
    10. ',t' → logprob: -11.666686058044434

Token 288: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.5759880542755127
    2. 'm' → logprob: -0.8259880542755127
    3. ' ' → logprob: -10.075987815856934
    4. ' ' → logprob: -13.200987815856934
    5. '	m' → logprob: -13.325987815856934
    6. '  ' → logprob: -14.575987815856934
    7. ' 
' → logprob: -14.825987815856934
    8. ',' → logprob: -15.450987815856934
    9. ',m' → logprob: -15.450987815856934
    10. '<|end|>' → logprob: -15.575987815856934

Token 289: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.566264295950532e-05
    2. '=' → logprob: -10.250085830688477
    3. ',m' → logprob: -10.750085830688477
    4. ',l' → logprob: -11.000085830688477
    5. ' ,' → logprob: -12.000085830688477
    6. ' =' → logprob: -12.625085830688477
    7. ',n' → logprob: -13.250085830688477
    8. ',
' → logprob: -15.125085830688477
    9. ',

' → logprob: -16.750085830688477
    10. ',\
' → logprob: -16.875085830688477

Token 290: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.10020915418863297
    2. ' l' → logprob: -2.3502092361450195
    3. ' ' → logprob: -13.35020923614502
    4. '	l' → logprob: -14.35020923614502
    5. '*l' → logprob: -16.100208282470703
    6. '_l' → logprob: -16.350208282470703
    7. ',l' → logprob: -16.600208282470703
    8. 'L' → logprob: -17.225208282470703
    9. 'n' → logprob: -17.350208282470703
    10. '  ' → logprob: -17.600208282470703

Token 291: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20941945910453796
    2. ' =' → logprob: -1.7094194889068604
    3. ',' → logprob: -4.834419250488281
    4. '=t' → logprob: -12.209419250488281
    5. ')=' → logprob: -12.834419250488281
    6. ')' → logprob: -13.334419250488281
    7. '=n' → logprob: -13.459419250488281
    8. '=int' → logprob: -13.584419250488281
    9. ' ' → logprob: -13.834419250488281
    10. ',t' → logprob: -13.834419250488281

Token 292: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.20150494575500488
    2. ' t' → logprob: -1.7015049457550049
    3. ' ' → logprob: -9.826504707336426
    4. '	t' → logprob: -11.326504707336426
    5. 'tuple' → logprob: -11.451504707336426
    6. '(t' → logprob: -12.576504707336426
    7. 'int' → logprob: -12.826504707336426
    8. '  ' → logprob: -13.201504707336426
    9. ' tuple' → logprob: -13.201504707336426
    10. ' ' → logprob: -14.326504707336426

Token 293: '[:' (ID: 7808)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6932042837142944
    2. '[:' → logprob: -0.6932042837142944
    3. '0' → logprob: -10.193203926086426
    4. '[
' → logprob: -11.318203926086426
    5. '[[' → logprob: -12.318203926086426
    6. ' [:' → logprob: -14.193203926086426
    7. '[:]' → logprob: -14.318203926086426
    8. ':' → logprob: -14.443203926086426
    9. '[...,' → logprob: -15.193203926086426
    10. '[...]' → logprob: -15.943203926086426

Token 294: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0004336493439041078
    2. ' ' → logprob: -7.750433444976807
    3. '  ' → logprob: -13.000433921813965
    4. '   ' → logprob: -14.375433921813965
    5. '
' → logprob: -17.37543296813965
    6. ',' → logprob: -17.75043296813965
    7. '    ' → logprob: -17.87543296813965
    8. ']' → logprob: -18.37543296813965
    9. ' ' → logprob: -18.81293296813965
    10. '' → logprob: -18.93793296813965

Token 295: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.000407316314522177
    2. ' ]' → logprob: -8.125407218933105
    3. '],' → logprob: -10.500407218933105
    4. ')' → logprob: -10.750407218933105
    5. ']
' → logprob: -11.000407218933105
    6. '].' → logprob: -11.125407218933105
    7. '])' → logprob: -11.375407218933105
    8. '];' → logprob: -11.750407218933105
    9. '[' → logprob: -12.875407218933105
    10. ',' → logprob: -13.625407218933105

Token 296: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 297: ' #' (ID: 1069)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -1.5120513439178467
    2. 'i' → logprob: -1.7620513439178467
    3. 'data' → logprob: -1.7620513439178467
    4. ',' → logprob: -2.6370513439178467
    5. 'a' → logprob: -2.6370513439178467
    6. 'r' → logprob: -3.0120513439178467
    7. 'A' → logprob: -3.3870513439178467
    8. 'ind' → logprob: -3.3870513439178467
    9. 'idx' → logprob: -3.5120513439178467
    10. 'x' → logprob: -4.137051582336426

Token 298: ' La' (ID: 3038)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -1.1317394971847534
    2. 'idx' → logprob: -2.006739616394043
    3. 'data' → logprob: -2.131739616394043
    4. 'edges' → logprob: -2.256739616394043
    5. 'ind' → logprob: -3.006739616394043
    6. 'pos' → logprob: -3.256739616394043
    7. 'A' → logprob: -3.506739616394043
    8. 'ar' → logprob: -3.506739616394043
    9. 'arr' → logprob: -3.756739616394043
    10. '#' → logprob: -4.006739616394043

Token 299: ' variable' (ID: 11076)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.347791463136673
    2. ' t' → logprob: -2.4727914333343506
    3. 'rest' → logprob: -2.9727914333343506
    4. ' rest' → logprob: -3.4727914333343506
    5. ' data' → logprob: -3.5977914333343506
    6. 'data' → logprob: -3.9727914333343506
    7. ' remaining' → logprob: -4.47279167175293
    8. 'r' → logprob: -4.84779167175293
    9. '#' → logprob: -4.97279167175293
    10. 'remaining' → logprob: -5.22279167175293

Token 300: ' '' (ID: 461)
  Prédit: ' data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' data' → logprob: -1.7818351984024048
    2. ' t' → logprob: -2.4068350791931152
    3. 'A' → logprob: -2.5318350791931152
    4. ' A' → logprob: -2.6568350791931152
    5. 'data' → logprob: -2.6568350791931152
    6. ' rest' → logprob: -2.9068350791931152
    7. ' =' → logprob: -2.9068350791931152
    8. 't' → logprob: -3.1568350791931152
    9. ' mat' → logprob: -3.4068350791931152
    10. 'rest' → logprob: -3.6568350791931152

Token 301: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.7961957454681396
    2. 'a' → logprob: -2.2961957454681396
    3. 'data' → logprob: -2.5461957454681396
    4. 'A' → logprob: -2.9211957454681396
    5. 'edges' → logprob: -2.9211957454681396
    6. 'ind' → logprob: -3.1711957454681396
    7. 'idx' → logprob: -3.7961957454681396
    8. 'ar' → logprob: -3.7961957454681396
    9. 'pos' → logprob: -3.9211957454681396
    10. 'd' → logprob: -4.171195983886719

Token 302: ''' (ID: 6)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08966574817895889
    2. ' =' → logprob: -2.464665651321411
    3. '[' → logprob: -8.839665412902832
    4. ')' → logprob: -8.839665412902832
    5. '=n' → logprob: -8.839665412902832
    6. ',' → logprob: -9.589665412902832
    7. '=t' → logprob: -9.589665412902832
    8. '=np' → logprob: -10.464665412902832
    9. ']' → logprob: -10.714665412902832
    10. '=m' → logprob: -11.464665412902832

Token 303: ' reçoit' (ID: 151051)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08904732763767242
    2. ' =' → logprob: -2.464047431945801
    3. '=t' → logprob: -9.5890474319458
    4. '[' → logprob: -11.3390474319458
    5. '=n' → logprob: -11.5890474319458
    6. ',' → logprob: -11.5890474319458
    7. '=
' → logprob: -13.3390474319458
    8. '=np' → logprob: -13.3390474319458
    9. '=int' → logprob: -14.0890474319458
    10. ' ' → logprob: -14.3390474319458

Token 304: ' le' (ID: 505)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -1.0209975242614746
    2. ' t' → logprob: -1.0209975242614746
    3. '[' → logprob: -1.5209975242614746
    4. ' =' → logprob: -3.6459975242614746
    5. 's' → logprob: -4.020997524261475
    6. '=' → logprob: -5.395997524261475
    7. ' the' → logprob: -5.770997524261475
    8. 'n' → logprob: -6.520997524261475
    9. ' les' → logprob: -6.770997524261475
    10. ' ' → logprob: -7.145997524261475

Token 305: ' reste' (ID: 26769)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.3954995572566986
    2. ' t' → logprob: -1.770499587059021
    3. '[' → logprob: -2.7704994678497314
    4. '3' → logprob: -3.2704994678497314
    5. ' rest' → logprob: -3.3954994678497314
    6. 'rest' → logprob: -5.1454997062683105
    7. ' ' → logprob: -5.3954997062683105
    8. ' array' → logprob: -6.0204997062683105
    9. 's' → logprob: -6.2704997062683105
    10. 'slice' → logprob: -6.7704997062683105

Token 306: ' du' (ID: 1462)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.009032868780195713
    2. '(' → logprob: -5.009032726287842
    3. 't' → logprob: -6.259032726287842
    4. '(t' → logprob: -8.884033203125
    5. '<|end|>' → logprob: -9.884033203125
    6. '()[' → logprob: -10.134033203125
    7. ' =' → logprob: -10.259033203125
    8. ' t' → logprob: -10.384033203125
    9. ' [' → logprob: -10.509033203125
    10. '([' → logprob: -10.759033203125

Token 307: ' tableau' (ID: 67053)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.02650301717221737
    2. ' t' → logprob: -3.651503086090088
    3. 'array' → logprob: -9.65150260925293
    4. ' ' → logprob: -10.15150260925293
    5. ' array' → logprob: -10.15150260925293
    6. 's' → logprob: -10.65150260925293
    7. '[]' → logprob: -12.27650260925293
    8. 'arr' → logprob: -12.52650260925293
    9. 'int' → logprob: -12.77650260925293
    10. ' code' → logprob: -12.77650260925293

Token 308: ',' (ID: 11)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7879011034965515
    2. ' =' → logprob: -0.7879011034965515
    3. '=' → logprob: -2.4129011631011963
    4. '(' → logprob: -7.537900924682617
    5. 't' → logprob: -8.787900924682617
    6. 'n' → logprob: -10.412900924682617
    7. ',' → logprob: -10.537900924682617
    8. ' [' → logprob: -10.662900924682617
    9. '=[' → logprob: -10.912900924682617
    10. 's' → logprob: -11.412900924682617

Token 309: ' excl' (ID: 57282)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.20153555274009705
    2. ' t' → logprob: -1.7015355825424194
    3. ' =' → logprob: -10.07653522491455
    4. '=' → logprob: -10.32653522491455
    5. '   ' → logprob: -11.20153522491455
    6. ' ' → logprob: -11.57653522491455
    7. ':' → logprob: -11.82653522491455
    8. '1' → logprob: -12.82653522491455
    9. '[' → logprob: -13.32653522491455
    10. '...' → logprob: -13.45153522491455

Token 310: 'uant' (ID: 44411)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -1.0085160732269287
    2. '=t' → logprob: -1.2585160732269287
    3. ' t' → logprob: -1.7585160732269287
    4. '=' → logprob: -2.3835160732269287
    5. ' =' → logprob: -3.1335160732269287
    6. '=[' → logprob: -4.383516311645508
    7. '=(' → logprob: -4.883516311645508
    8. '(t' → logprob: -4.883516311645508
    9. '   ' → logprob: -5.633516311645508
    10. '[]' → logprob: -5.758516311645508

Token 311: ' les' (ID: 1341)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.12042178958654404
    2. ' t' → logprob: -2.495421886444092
    3. ' ' → logprob: -4.745421886444092
    4. '3' → logprob: -4.745421886444092
    5. ':' → logprob: -4.995421886444092
    6. '(' → logprob: -6.495421886444092
    7. ' the' → logprob: -6.995421886444092
    8. 'the' → logprob: -6.995421886444092
    9. ' les' → logprob: -7.495421886444092
    10. ' :' → logprob: -7.495421886444092

Token 312: ' trois' (ID: 25564)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.4251820743083954
    2. ':' → logprob: -1.9251821041107178
    3. ' ' → logprob: -2.0501821041107178
    4. '3' → logprob: -2.8001821041107178
    5. ' t' → logprob: -5.425181865692139
    6. '[:' → logprob: -5.550181865692139
    7. 't' → logprob: -7.050181865692139
    8. '0' → logprob: -7.425181865692139
    9. ':t' → logprob: -7.425181865692139
    10. ' three' → logprob: -7.925181865692139

Token 313: ' premiers' (ID: 59140)
  Prédit: ' premiers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' premiers' → logprob: -0.516434907913208
    2. 'prem' → logprob: -2.266434907913208
    3. '[' → logprob: -2.766434907913208
    4. '3' → logprob: -2.766434907913208
    5. '0' → logprob: -2.891434907913208
    6. ' premières' → logprob: -3.891434907913208
    7. 'elements' → logprob: -4.141434669494629
    8. '(' → logprob: -4.266434669494629
    9. 'first' → logprob: -4.391434669494629
    10. '<|end|>' → logprob: -4.391434669494629

Token 314: ' ent' (ID: 1121)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.41330263018608093
    2. '[' → logprob: -1.5383026599884033
    3. '(' → logprob: -3.0383026599884033
    4. '=' → logprob: -3.2883026599884033
    5. ' =' → logprob: -4.538302421569824
    6. '(t' → logprob: -4.663302421569824
    7. ',' → logprob: -4.913302421569824
    8. ' t' → logprob: -5.788302421569824
    9. '.' → logprob: -6.538302421569824
    10. ':' → logprob: -6.913302421569824

Token 315: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.3325871229171753
    2. 't' → logprob: -1.8325871229171753
    3. 'ries' → logprob: -2.332587242126465
    4. 'ières' → logprob: -4.582587242126465
    5. '3' → logprob: -5.207587242126465
    6. '[' → logprob: -5.582587242126465
    7. 'r' → logprob: -6.332587242126465
    8. 'rees' → logprob: -7.082587242126465
    9. '[:' → logprob: -7.207587242126465
    10. 'ités' → logprob: -7.332587242126465

Token 316: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0233014989644289
    2. ' =' → logprob: -3.773301601409912
    3. '[' → logprob: -10.398301124572754
    4. 't' → logprob: -11.523301124572754
    5. ',' → logprob: -12.023301124572754
    6. '=
' → logprob: -12.523301124572754
    7. '=t' → logprob: -12.648301124572754
    8. '=n' → logprob: -14.523301124572754
    9. '   ' → logprob: -15.148301124572754
    10. ')' → logprob: -15.148301124572754

Token 317: ' pour' (ID: 1930)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.11271719634532928
    2. ' t' → logprob: -2.3627171516418457
    3. '=' → logprob: -5.862717151641846
    4. ' =' → logprob: -5.987717151641846
    5. 'n' → logprob: -6.362717151641846
    6. ':' → logprob: -6.362717151641846
    7. '[' → logprob: -6.987717151641846
    8. '1' → logprob: -7.362717151641846
    9. '   ' → logprob: -7.612717151641846
    10. ' ' → logprob: -7.862717151641846

Token 318: ' traiter' (ID: 105852)
  Prédit: 'reshape'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reshape' → logprob: -0.3837085962295532
    2. 't' → logprob: -1.8837085962295532
    3. ' reshape' → logprob: -2.5087084770202637
    4. ' t' → logprob: -3.8837084770202637
    5. 'm' → logprob: -4.133708477020264
    6. '.reshape' → logprob: -4.883708477020264
    7. '...' → logprob: -5.383708477020264
    8. ')' → logprob: -5.508708477020264
    9. ' array' → logprob: -5.633708477020264
    10. ' be' → logprob: -6.133708477020264

Token 319: ' le' (ID: 505)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.4722340703010559
    2. ' t' → logprob: -1.2222340106964111
    3. ' les' → logprob: -3.347234010696411
    4. ' the' → logprob: -4.22223424911499
    5. ' le' → logprob: -4.47223424911499
    6. ' ' → logprob: -5.22223424911499
    7. ' la' → logprob: -5.34723424911499
    8. 'the' → logprob: -6.84723424911499
    9. ' =' → logprob: -7.09723424911499
    10. '=' → logprob: -7.09723424911499

Token 320: ' reste' (ID: 26769)
  Prédit: ' edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.9050266742706299
    2. ' reste' → logprob: -1.6550266742706299
    3. 'rest' → logprob: -1.9050266742706299
    4. 'edges' → logprob: -2.53002667427063
    5. 'ar' → logprob: -2.78002667427063
    6. ' rest' → logprob: -3.28002667427063
    7. 'reste' → logprob: -4.405026435852051
    8. ' trip' → logprob: -4.530026435852051
    9. ' ar' → logprob: -4.905026435852051
    10. 'trip' → logprob: -5.030026435852051

Token 321: ' des' (ID: 731)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7323406338691711
    2. ' =' → logprob: -1.2323405742645264
    3. 't' → logprob: -1.6073405742645264
    4. '[' → logprob: -3.7323405742645264
    5. '=t' → logprob: -6.4823408126831055
    6. '(t' → logprob: -7.6073408126831055
    7. ' t' → logprob: -7.6073408126831055
    8. '(' → logprob: -8.607340812683105
    9. ']' → logprob: -8.982340812683105
    10. '.' → logprob: -9.232340812683105

Token 322: ' données' (ID: 30580)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.030217276886105537
    2. ' t' → logprob: -3.655217170715332
    3. ' données' → logprob: -6.280217170715332
    4. ' data' → logprob: -7.530217170715332
    5. 'data' → logprob: -7.780217170715332
    6. 'tokens' → logprob: -8.155217170715332
    7. 'd' → logprob: -8.780217170715332
    8. 'values' → logprob: -9.655217170715332
    9. 'elements' → logprob: -9.905217170715332
    10. ' elements' → logprob: -9.905217170715332

Token 323: ' (' (ID: 350)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22558407485485077
    2. ' =' → logprob: -1.6005840301513672
    3. '[' → logprob: -8.975584030151367
    4. 't' → logprob: -11.350584030151367
    5. '=
' → logprob: -11.350584030151367
    6. ',' → logprob: -12.100584030151367
    7. '=t' → logprob: -12.475584030151367
    8. '  ' → logprob: -13.100584030151367
    9. '=n' → logprob: -13.225584030151367
    10. ' ' → logprob: -13.225584030151367

Token 324: 'ar' (ID: 277)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9358459711074829
    2. ')[' → logprob: -1.185845971107483
    3. ')' → logprob: -1.935845971107483
    4. '3' → logprob: -2.0608458518981934
    5. ')
' → logprob: -4.685845851898193
    6. 't' → logprob: -5.060845851898193
    7. 'm' → logprob: -5.310845851898193
    8. '(' → logprob: -6.185845851898193
    9. 'n' → logprob: -6.435845851898193
    10. '1' → logprob: -7.185845851898193

Token 325: 'êtes' (ID: 23720)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.04522465169429779
    2. '[' → logprob: -3.545224666595459
    3. ']' → logprob: -4.795224666595459
    4. ':]' → logprob: -6.295224666595459
    5. 't' → logprob: -6.420224666595459
    6. ':' → logprob: -7.295224666595459
    7. ')' → logprob: -7.545224666595459
    8. '[m' → logprob: -7.670224666595459
    9. '```' → logprob: -7.670224666595459
    10. '(' → logprob: -8.4202241897583

Token 326: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008986800909042358
    2. '[' → logprob: -5.383986949920654
    3. '   ' → logprob: -6.383986949920654
    4. ' )' → logprob: -7.383986949920654
    5. ')[' → logprob: -7.383986949920654
    6. ').' → logprob: -7.758986949920654
    7. '])' → logprob: -8.008986473083496
    8. ')
' → logprob: -8.883986473083496
    9. ' =' → logprob: -9.133986473083496
    10. 't' → logprob: -9.133986473083496

Token 327: ' requ' (ID: 7028)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3641979992389679
    2. '1' → logprob: -2.1141979694366455
    3. ' )' → logprob: -3.1141979694366455
    4. ' poids' → logprob: -3.2391979694366455
    5. '2' → logprob: -3.7391979694366455
    6. '...)' → logprob: -4.989198207855225
    7. 'indices' → logprob: -4.989198207855225
    8. ' distances' → logprob: -4.989198207855225
    9. ' indices' → logprob: -5.239198207855225
    10. '...' → logprob: -5.239198207855225

Token 328: 'êtes' (ID: 23720)
  Prédit: 'êtes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êtes' → logprob: -0.16389356553554535
    2. 'es' → logprob: -2.413893461227417
    3. 'ées' → logprob: -3.663893461227417
    4. 'etes' → logprob: -4.413893699645996
    5. 'êts' → logprob: -5.163893699645996
    6. 'tes' → logprob: -5.163893699645996
    7. 't' → logprob: -6.413893699645996
    8. 'e' → logprob: -6.413893699645996
    9. 'nées' → logprob: -6.663893699645996
    10. 'èces' → logprob: -6.913893699645996

Token 329: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012191735208034515
    2. '[' → logprob: -4.7621917724609375
    3. 't' → logprob: -6.5121917724609375
    4. ']' → logprob: -7.2621917724609375
    5. '])' → logprob: -7.6371917724609375
    6. ' )' → logprob: -8.012191772460938
    7. '   ' → logprob: -8.762191772460938
    8. ')[' → logprob: -8.762191772460938
    9. ').' → logprob: -9.762191772460938
    10. ',' → logprob: -10.387191772460938

Token 330: '   ' (ID: 271)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.055161189287900925
    2. ' =' → logprob: -2.930161237716675
    3. '[' → logprob: -8.430161476135254
    4. ',' → logprob: -11.055161476135254
    5. 't' → logprob: -11.055161476135254
    6. '=
' → logprob: -11.430161476135254
    7. '=t' → logprob: -11.430161476135254
    8. ' ' → logprob: -13.305161476135254
    9. '=n' → logprob: -13.805161476135254
    10. '   ' → logprob: -13.805161476135254

Token 331: ' t' (ID: 260)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22575880587100983
    2. ' =' → logprob: -1.6007587909698486
    3. 't' (adapté à ' t') → logprob: -8.60075855255127
    4. '=t' → logprob: -8.97575855255127
    5. ' t' → logprob: -11.60075855255127
    6. ',' → logprob: -11.97575855255127
    7. '=
' → logprob: -12.35075855255127
    8. '[' → logprob: -12.60075855255127
    9. '   ' → logprob: -13.10075855255127
    10. ' ' → logprob: -13.35075855255127

Token 332: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014191831462085247
    2. ' =' → logprob: -4.264191627502441
    3. '=t' → logprob: -10.764191627502441
    4. '=
' → logprob: -12.264191627502441
    5. ' ' → logprob: -14.139191627502441
    6. ',' → logprob: -14.764191627502441
    7. '=

' → logprob: -15.264191627502441
    8. 't' → logprob: -15.639191627502441
    9. '=n' → logprob: -15.639191627502441
    10. '   ' → logprob: -16.014192581176758

Token 333: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.5231754183769226
    2. 't' → logprob: -0.8981754183769226
    3. 'int' → logprob: -10.773175239562988
    4. '	t' → logprob: -11.398175239562988
    5. ' ' → logprob: -11.898175239562988
    6. ' int' → logprob: -12.023175239562988
    7. '(t' → logprob: -12.773175239562988
    8. 'array' → logprob: -13.898175239562988
    9. '   ' → logprob: -14.148175239562988
    10. ' array' → logprob: -14.273175239562988

Token 334: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.816093228830141e-06
    2. '3' → logprob: -13.75000286102295
    3. ' [' → logprob: -14.12500286102295
    4. '```' → logprob: -15.50000286102295
    5. 'from' → logprob: -15.50000286102295
    6. '=' → logprob: -15.87500286102295
    7. '   ' → logprob: -16.500001907348633
    8. '(' → logprob: -16.625001907348633
    9. ' ' → logprob: -16.750001907348633
    10. ':' → logprob: -17.000001907348633

Token 335: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -4.8232690460281447e-05
    2. ' ' → logprob: -10.000048637390137
    3. '   ' → logprob: -13.000048637390137
    4. '  ' → logprob: -15.375048637390137
    5. ':' → logprob: -16.62504768371582
    6. '
' → logprob: -16.62504768371582
    7. '    ' → logprob: -16.93754768371582
    8. '```' → logprob: -17.25004768371582
    9. '...' → logprob: -17.43754768371582
    10. '۳' → logprob: -17.50004768371582

Token 336: ':]

' (ID: 170549)
  Prédit: ':]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':]' → logprob: -0.0004158953088335693
    2. ':' → logprob: -8.000415802001953
    3. ':].' → logprob: -10.250415802001953
    4. ']' → logprob: -11.000415802001953
    5. ' :]' → logprob: -11.500415802001953
    6. ':]

' → logprob: -11.625415802001953
    7. ':]
' → logprob: -12.625415802001953
    8. '3' → logprob: -13.375415802001953
    9. ':],' → logprob: -14.125415802001953
    10. '...]' → logprob: -14.375415802001953

Token 337: '   ' (ID: 271)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7727786898612976
    2. '
' → logprob: -1.7727787494659424
    3. '[' → logprob: -2.0227787494659424
    4. 's' → logprob: -3.3977787494659424
    5. '   ' → logprob: -3.3977787494659424
    6. '  
' → logprob: -3.6477787494659424
    7. '[n' → logprob: -3.8977787494659424
    8. '    
' → logprob: -4.147778511047363
    9. ' 
' → logprob: -4.272778511047363
    10. '[
' → logprob: -4.272778511047363

Token 338: ' #' (ID: 1069)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.008556604385376
    2. 'n' → logprob: -1.883556604385376
    3. '   ' → logprob: -2.008556604385376
    4. 'g' → logprob: -2.383556604385376
    5. 's' → logprob: -3.383556604385376
    6. 'a' → logprob: -3.508556604385376
    7. 'G' → logprob: -3.508556604385376
    8. 'M' → logprob: -3.883556604385376
    9. 'graph' → logprob: -4.133556365966797
    10. ' A' → logprob: -4.258556365966797

Token 339: ' On' (ID: 2160)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.4728729724884033
    2. 'G' → logprob: -2.0978729724884033
    3. 'M' → logprob: -2.5978729724884033
    4. '#' → logprob: -2.8478729724884033
    5. 'rows' → logprob: -2.9728729724884033
    6. 'row' → logprob: -3.2228729724884033
    7. 'g' → logprob: -3.3478729724884033
    8. 'I' → logprob: -3.4728729724884033
    9. 'edges' → logprob: -3.4728729724884033
    10. 'i' → logprob: -3.8478729724884033

Token 340: ' multipl' (ID: 44269)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.76068115234375
    2. '#' → logprob: -1.51068115234375
    3. 'm' → logprob: -3.26068115234375
    4. 's' → logprob: -3.38568115234375
    5. ' =' → logprob: -3.76068115234375
    6. '   ' → logprob: -3.88568115234375
    7. '=' → logprob: -4.01068115234375
    8. 'v' → logprob: -4.13568115234375
    9. '.reshape' → logprob: -4.63568115234375
    10. ' #' → logprob: -4.76068115234375

Token 341: 'ie' (ID: 396)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0680309310555458
    2. 'ies' → logprob: -2.943030834197998
    3. 't' → logprob: -5.568030834197998
    4. 'ipl' → logprob: -6.193030834197998
    5. 'ly' → logprob: -6.318030834197998
    6. 'ip' → logprob: -6.443030834197998
    7. 'ot' → logprob: -7.318030834197998
    8. 'yt' → logprob: -7.443030834197998
    9. 'ie' → logprob: -7.943030834197998
    10. 'ipy' → logprob: -7.943030834197998

Token 342: ' m' (ID: 284)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.803480327129364
    2. 't' → logprob: -2.053480386734009
    3. '(n' → logprob: -2.303480386734009
    4. 'm' → logprob: -3.303480386734009
    5. '(t' → logprob: -3.428480386734009
    6. '(m' → logprob: -3.428480386734009
    7. 'l' → logprob: -3.678480386734009
    8. '(
' → logprob: -3.803480386734009
    9. ' l' → logprob: -3.928480386734009
    10. ')' → logprob: -3.928480386734009

Token 343: ' par' (ID: 686)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5877118110656738
    2. ' *' → logprob: -1.5877118110656738
    3. ' by' → logprob: -2.337711811065674
    4. '[' → logprob: -2.962711811065674
    5. ')' → logprob: -3.712711811065674
    6. 'by' → logprob: -3.962711811065674
    7. '*m' → logprob: -4.462711811065674
    8. '[:,' → logprob: -4.712711811065674
    9. ',' → logprob: -4.837711811065674
    10. '[...,' → logprob: -5.712711811065674

Token 344: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10024787485599518
    2. '3' → logprob: -2.600247859954834
    3. '2' → logprob: -4.225247859954834
    4. '4' → logprob: -5.850247859954834
    5. '6' → logprob: -6.475247859954834
    6. '7' → logprob: -7.350247859954834
    7. '9' → logprob: -7.725247859954834
    8. '5' → logprob: -7.725247859954834
    9. '8' → logprob: -8.600248336791992
    10. '12' → logprob: -8.975248336791992

Token 345: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.11933108419179916
    2. '4' → logprob: -2.869331121444702
    3. '5' → logprob: -3.369331121444702
    4. '6' → logprob: -4.494330883026123
    5. '7' → logprob: -5.119330883026123
    6. '2' → logprob: -5.994330883026123
    7. '8' → logprob: -7.244330883026123
    8. ' ' → logprob: -7.619330883026123
    9. '9' → logprob: -7.994330883026123
    10. '10' → logprob: -9.744331359863281

Token 346: ' car' (ID: 1669)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.3084346354007721
    2. '*' → logprob: -2.0584347248077393
    3. 'm' → logprob: -3.3084347248077393
    4. '   ' → logprob: -3.4334347248077393
    5. ')' → logprob: -3.8084347248077393
    6. '*m' → logprob: -4.05843448638916
    7. ',' → logprob: -4.68343448638916
    8. ']' → logprob: -6.05843448638916
    9. ' ' → logprob: -6.18343448638916
    10. '    ' → logprob: -6.18343448638916

Token 347: ' chaque' (ID: 21194)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.7735136151313782
    2. ' m' → logprob: -0.8985136151313782
    3. ' the' → logprob: -3.1485135555267334
    4. 'm' → logprob: -3.3985135555267334
    5. ' ' → logprob: -3.5235135555267334
    6. ' len' → logprob: -4.7735137939453125
    7. ' t' → logprob: -5.2735137939453125
    8. ' each' → logprob: -6.0235137939453125
    9. ' les' → logprob: -6.3985137939453125
    10. ' we' → logprob: -6.8985137939453125

Token 348: ' ar' (ID: 646)
  Prédit: ' ar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ar' → logprob: -0.35564643144607544
    2. 'ar' → logprob: -1.6056463718414307
    3. ' edge' → logprob: -3.2306463718414307
    4. ' trip' → logprob: -3.8556463718414307
    5. 'edge' → logprob: -3.9806463718414307
    6. 'aré' → logprob: -5.23064661026001
    7. 'arest' → logprob: -5.85564661026001
    8. 'entrée' → logprob: -6.60564661026001
    9. 'arc' → logprob: -6.98064661026001
    10. 'm' → logprob: -6.98064661026001

Token 349: 'ête' (ID: 16808)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.6249025464057922
    2. 'ête' → logprob: -1.4999024868011475
    3. 'm' → logprob: -2.4999024868011475
    4. 'g' → logprob: -2.6249024868011475
    5. 'êt' → logprob: -4.124902725219727
    6. 'r' → logprob: -4.249902725219727
    7. 'e' → logprob: -5.374902725219727
    8. 'êche' → logprob: -5.374902725219727
    9. 'ètre' → logprob: -5.374902725219727
    10. 'ea' → logprob: -5.499902725219727

Token 350: ' du' (ID: 1462)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.8893265128135681
    2. ' *' → logprob: -1.514326572418213
    3. ',' → logprob: -2.014326572418213
    4. ')' → logprob: -2.514326572418213
    5. ' ' → logprob: -3.889326572418213
    6. 's' → logprob: -4.389326572418213
    7. '[' → logprob: -4.514326572418213
    8. ' ,' → logprob: -4.514326572418213
    9. ' is' → logprob: -4.639326572418213
    10. 't' → logprob: -4.889326572418213

Token 351: ' grap' (ID: 60955)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.7148479223251343
    2. ' m' → logprob: -1.7148479223251343
    3. 'm' → logprob: -1.8398479223251343
    4. ' ' → logprob: -2.214848041534424
    5. ' trip' → logprob: -3.339848041534424
    6. 't' → logprob: -5.214848041534424
    7. ' t' → logprob: -5.964848041534424
    8. 'trip' → logprob: -6.089848041534424
    9. ' edge' → logprob: -6.339848041534424
    10. ')' → logprob: -6.589848041534424

Token 352: 'he' (ID: 273)
  Prédit: 'aphe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'aphe' → logprob: -0.05019845440983772
    2. 'aph' → logprob: -3.050198554992676
    3. 'afe' → logprob: -7.675198554992676
    4. 'af' → logprob: -8.675198554992676
    5. 'e' → logprob: -8.800198554992676
    6. 'phe' → logprob: -8.925198554992676
    7. 'ap' → logprob: -9.050198554992676
    8. 'ph' → logprob: -9.425198554992676
    9. 'ave' → logprob: -9.800198554992676
    10. 'a' → logprob: -10.050198554992676

Token 353: ' est' (ID: 893)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -1.4301843643188477
    2. ' prend' → logprob: -1.8051843643188477
    3. ' contient' → logprob: -2.3051843643188477
    4. ' comporte' → logprob: -2.3051843643188477
    5. ' nécessite' → logprob: -2.4301843643188477
    6. ' est' → logprob: -2.6801843643188477
    7. ' possède' → logprob: -3.1801843643188477
    8. ' correspond' → logprob: -3.1801843643188477
    9. ' occ' → logprob: -3.4301843643188477
    10. ' représente' → logprob: -3.4301843643188477

Token 354: ' probablement' (ID: 87740)
  Prédit: ' représent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' représent' → logprob: -0.07082318514585495
    2. ' cod' → logprob: -4.3208231925964355
    3. ' represented' → logprob: -4.4458231925964355
    4. 'represented' → logprob: -4.6958231925964355
    5. ' décr' → logprob: -5.1958231925964355
    6. ' represent' → logprob: -5.3208231925964355
    7. 't' → logprob: -5.4458231925964355
    8. 'repr' → logprob: -5.5708231925964355
    9. ' composée' → logprob: -5.8208231925964355
    10. 'cod' → logprob: -6.5708231925964355

Token 355: ' cod' (ID: 26163)
  Prédit: ' décr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' décr' → logprob: -0.44666367769241333
    2. ' représent' → logprob: -1.1966636180877686
    3. 'dé' → logprob: -3.6966636180877686
    4. 'cod' → logprob: -5.071663856506348
    5. ' cod' → logprob: -5.071663856506348
    6. ' défin' → logprob: -5.196663856506348
    7. 'repr' → logprob: -5.571663856506348
    8. 'represented' → logprob: -6.321663856506348
    9. 're' → logprob: -6.571663856506348
    10. ' represent' → logprob: -6.571663856506348

Token 356: 'ée' (ID: 2894)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.7261881828308105
    2. 'é' → logprob: -1.3511881828308105
    3. 'ée' → logprob: -1.4761881828308105
    4. 'ed' → logprob: -4.2261881828308105
    5. '3' → logprob: -5.1011881828308105
    6. '   ' → logprob: -6.4761881828308105
    7. ' m' → logprob: -6.4761881828308105
    8. 'es' → logprob: -7.1011881828308105
    9. '*' → logprob: -7.6011881828308105
    10. '=' → logprob: -7.8511881828308105

Token 357: ' sur' (ID: 1512)
  Prédit: ' par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.6270122528076172
    2. ' by' → logprob: -1.7520122528076172
    3. '=' → logprob: -2.502012252807617
    4. ' =' → logprob: -3.627012252807617
    5. 'by' → logprob: -3.752012252807617
    6. '[' → logprob: -4.377012252807617
    7. 'm' → logprob: -4.377012252807617
    8. ' ' → logprob: -4.502012252807617
    9. ' m' → logprob: -4.502012252807617
    10. ',' → logprob: -4.502012252807617

Token 358: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0637173131108284
    2. ' ' → logprob: -2.8137173652648926
    3. ' m' → logprob: -6.688717365264893
    4. 'm' → logprob: -8.063716888427734
    5. '(' → logprob: -9.188716888427734
    6. ' (' → logprob: -9.813716888427734
    7. '   ' → logprob: -11.938716888427734
    8. '  ' → logprob: -12.313716888427734
    9. '(m' → logprob: -12.313716888427734
    10. '(
' → logprob: -13.063716888427734

Token 359: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.002887371927499771
    2. ' ' → logprob: -6.00288724899292
    3. 'm' → logprob: -8.502887725830078
    4. ' m' → logprob: -8.627887725830078
    5. '(' → logprob: -11.377887725830078
    6. ' (' → logprob: -12.627887725830078
    7. '   ' → logprob: -13.002887725830078
    8. ' three' → logprob: -13.127887725830078
    9. '6' → logprob: -13.502887725830078
    10. '  ' → logprob: -13.627887725830078

Token 360: ' ent' (ID: 1121)
  Prédit: ' tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' tokens' → logprob: -0.760198175907135
    2. 'tokens' → logprob: -1.7601981163024902
    3. ' integers' → logprob: -2.3851981163024902
    4. ' éléments' → logprob: -2.8851981163024902
    5. ' nombres' → logprob: -3.1351981163024902
    6. ' ' → logprob: -3.2601981163024902
    7. ' elements' → logprob: -3.7601981163024902
    8. ' valeurs' → logprob: -4.13519811630249
    9. ' espaces' → logprob: -4.13519811630249
    10. ' t' → logprob: -4.51019811630249

Token 361: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.004552473314106464
    2. 'ières' → logprob: -5.629552364349365
    3. 'ités' → logprob: -8.129552841186523
    4. 'ieres' → logprob: -8.129552841186523
    5. 'i' → logprob: -8.879552841186523
    6. 'ier' → logprob: -9.004552841186523
    7. 'ié' → logprob: -10.129552841186523
    8. '   ' → logprob: -12.129552841186523
    9. '```' → logprob: -12.129552841186523
    10. '3' → logprob: -12.254552841186523

Token 362: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9475228786468506
    2. 'm' → logprob: -1.4475228786468506
    3. ')' → logprob: -2.3225228786468506
    4. '*m' → logprob: -2.3225228786468506
    5. '[' → logprob: -3.0725228786468506
    6. ' *' → logprob: -3.5725228786468506
    7. '*' → logprob: -3.5725228786468506
    8. ' m' → logprob: -3.9475228786468506
    9. 't' → logprob: -4.19752311706543
    10. ',' → logprob: -4.19752311706543

Token 363: 'som' (ID: 35641)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10202989727258682
    2. ' )' → logprob: -2.852029800415039
    3. '3' → logprob: -4.102029800415039
    4. 'm' → logprob: -4.477029800415039
    5. ' m' → logprob: -5.477029800415039
    6. '*' → logprob: -6.977029800415039
    7. ' ' → logprob: -7.477029800415039
    8. ']' → logprob: -7.727029800415039
    9. ')
' → logprob: -7.852029800415039
    10. ',' → logprob: -7.852029800415039

Token 364: 'met' (ID: 3001)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.9201465845108032
    2. '   ' → logprob: -1.5451465845108032
    3. ' t' → logprob: -2.0451464653015137
    4. 's' → logprob: -2.4201464653015137
    5. 'es' → logprob: -3.7951464653015137
    6. 'ites' → logprob: -4.170146465301514
    7. '[' → logprob: -4.170146465301514
    8. '    ' → logprob: -4.795146465301514
    9. 'ices' → logprob: -5.295146465301514
    10. 're' → logprob: -5.420146465301514

Token 365: ' départ' (ID: 32693)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07390069961547852
    2. ')' → logprob: -3.9489006996154785
    3. 's' → logprob: -4.5739006996154785
    4. '[' → logprob: -4.8239006996154785
    5. '+' → logprob: -4.9489006996154785
    6. ' ,' → logprob: -5.0739006996154785
    7. 'a' → logprob: -6.0739006996154785
    8. '   ' → logprob: -6.3239006996154785
    9. ' +' → logprob: -6.4489006996154785
    10. '*' → logprob: -6.6989006996154785

Token 366: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04102298617362976
    2. ')' → logprob: -4.291022777557373
    3. ' ,' → logprob: -4.541022777557373
    4. '+' → logprob: -5.166022777557373
    5. ' +' → logprob: -5.791022777557373
    6. ',
' → logprob: -5.791022777557373
    7. ' )' → logprob: -6.166022777557373
    8. '   ' → logprob: -8.041023254394531
    9. ' ' → logprob: -8.166023254394531
    10. '*' → logprob: -8.916023254394531

Token 367: ' sommet' (ID: 130502)
  Prédit: ' sommet'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sommet' → logprob: -0.4325631558895111
    2. 'som' → logprob: -1.0575631856918335
    3. ' som' → logprob: -6.432563304901123
    4. ',' → logprob: -7.307563304901123
    5. 'summ' → logprob: -8.057562828063965
    6. ' ' → logprob: -8.182562828063965
    7. 's' → logprob: -8.432562828063965
    8. ' ,' → logprob: -8.932562828063965
    9. ' ' → logprob: -9.307562828063965
    10. ' somm' → logprob: -9.807562828063965

Token 368: ' arrivée' (ID: 117487)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.048273902386426926
    2. '_arr' → logprob: -3.548273801803589
    3. ' ,' → logprob: -4.423274040222168
    4. 'arr' → logprob: -5.548274040222168
    5. ' arrivée' → logprob: -6.798274040222168
    6. ',
' → logprob: -8.048274040222168
    7. ' arrival' → logprob: -8.423274040222168
    8. '_depart' → logprob: -8.423274040222168
    9. ' ' → logprob: -9.298274040222168
    10. '_' → logprob: -9.798274040222168

Token 369: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009495720732957125
    2. ' ,' → logprob: -7.125949382781982
    3. ',
' → logprob: -9.00094985961914
    4. ')' → logprob: -11.87594985961914
    5. ',n' → logprob: -12.75094985961914
    6. ' ' → logprob: -13.25094985961914
    7. '),' → logprob: -13.62594985961914
    8. ',)' → logprob: -13.75094985961914
    9. '<|end|>' → logprob: -13.87594985961914
    10. 'import' → logprob: -14.37594985961914

Token 370: ' poids' (ID: 56058)
  Prédit: ' poids'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' poids' → logprob: -0.48035311698913574
    2. 'po' → logprob: -1.2303531169891357
    3. 'distance' → logprob: -3.1053531169891357
    4. ' distance' → logprob: -3.8553531169891357
    5. ',' → logprob: -5.105353355407715
    6. 'weight' → logprob: -5.730353355407715
    7. ' longueur' → logprob: -5.855353355407715
    8. ' ' → logprob: -5.980353355407715
    9. ' ,' → logprob: -6.355353355407715
    10. ' po' → logprob: -6.480353355407715

Token 371: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0022305480670183897
    2. ' )' → logprob: -6.252230644226074
    3. ')
' → logprob: -9.377230644226074
    4. '*' → logprob: -9.752230644226074
    5. ',' → logprob: -10.502230644226074
    6. '])' → logprob: -10.877230644226074
    7. ').' → logprob: -11.002230644226074
    8. '),' → logprob: -11.127230644226074
    9. '*)' → logprob: -11.127230644226074
    10. ']' → logprob: -11.502230644226074

Token 372: '   ' (ID: 271)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -1.436484694480896
    2. 'm' → logprob: -1.811484694480896
    3. ',' → logprob: -1.936484694480896
    4. ' =' → logprob: -2.4364848136901855
    5. '=' → logprob: -2.5614848136901855
    6. 't' → logprob: -3.1864848136901855
    7. 'edges' → logprob: -3.1864848136901855
    8. '[' → logprob: -3.1864848136901855
    9. ')' → logprob: -3.4364848136901855
    10. ' *' → logprob: -3.9364848136901855

Token 373: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' (adapté à ' m') → logprob: -0.39553454518318176
    2. 'edges' → logprob: -2.6455345153808594
    3. 'e' → logprob: -2.8955345153808594
    4. ' m' → logprob: -3.1455345153808594
    5. 't' → logprob: -3.3955345153808594
    6. '   ' → logprob: -4.145534515380859
    7. ' edges' → logprob: -4.145534515380859
    8. 'E' → logprob: -4.270534515380859
    9. 'ar' → logprob: -4.645534515380859
    10. ' t' → logprob: -4.645534515380859

Token 374: ' *=' (ID: 25253)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.27654320001602173
    2. '*=' → logprob: -1.651543140411377
    3. ' *=' → logprob: -3.151543140411377
    4. ' *' → logprob: -6.151543140411377
    5. '=' → logprob: -6.276543140411377
    6. ' =' → logprob: -6.651543140411377
    7. '*m' → logprob: -6.776543140411377
    8. ',' → logprob: -8.026543617248535
    9. ' ' → logprob: -9.526543617248535
    10. '3' → logprob: -9.901543617248535

Token 375: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.02054235339164734
    2. ' ' → logprob: -3.8955423831939697
    3. '  ' → logprob: -16.27054214477539
    4. '۳' → logprob: -16.27054214477539
    5. '   ' → logprob: -16.39554214477539
    6. ' ' → logprob: -16.64554214477539
    7. '	' → logprob: -17.27054214477539
    8. '３' → logprob: -17.45804214477539
    9. '
' → logprob: -18.20804214477539
    10. '٣' → logprob: -18.27054214477539

Token 376: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0013263145228847861
    2. ' ' → logprob: -6.626326084136963
    3. '  ' → logprob: -16.251325607299805
    4. '   ' → logprob: -16.251325607299805
    5. '
' → logprob: -17.001325607299805
    6. '۳' → logprob: -17.876325607299805
    7. '	' → logprob: -18.438825607299805
    8. '３' → logprob: -18.563825607299805
    9. ' ' → logprob: -18.626325607299805
    10. '    ' → logprob: -19.001325607299805

Token 377: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2887859642505646
    2. 'A' → logprob: -2.413785934448242
    3. 's' → logprob: -3.663785934448242
    4. 't' → logprob: -3.913785934448242
    5. 'n' → logprob: -4.038785934448242
    6. '    
' → logprob: -4.038785934448242
    7. 'a' → logprob: -4.288785934448242
    8. 'graph' → logprob: -4.538785934448242
    9. '
' → logprob: -4.663785934448242
    10. '#' → logprob: -4.788785934448242

Token 378: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48160630464553833
    2. 'edges' → logprob: -2.3566062450408936
    3. 'A' → logprob: -2.7316062450408936
    4. 'a' → logprob: -3.1066062450408936
    5. 'graph' → logprob: -3.2316062450408936
    6. 's' → logprob: -3.7316062450408936
    7. 'data' → logprob: -3.8566062450408936
    8. ' edges' → logprob: -4.231606483459473
    9. 'g' → logprob: -4.856606483459473
    10. ',' → logprob: -5.106606483459473

Token 379: ' #' (ID: 1069)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -1.1443372964859009
    2. 'A' → logprob: -1.8943372964859009
    3. '   ' → logprob: -2.0193371772766113
    4. 'graph' → logprob: -2.1443371772766113
    5. '#' (adapté à ' #') → logprob: -3.0193371772766113
    6. 'G' → logprob: -3.2693371772766113
    7. 'd' → logprob: -3.3943371772766113
    8. 'dist' → logprob: -3.5193371772766113
    9. 'gr' → logprob: -3.6443371772766113
    10. 'a' → logprob: -4.019337177276611

Token 380: ' Construction' (ID: 31452)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.800283432006836
    2. 'rows' → logprob: -1.800283432006836
    3. 'data' → logprob: -2.300283432006836
    4. 'row' → logprob: -2.425283432006836
    5. '#' → logprob: -2.550283432006836
    6. 'M' → logprob: -2.925283432006836
    7. 'a' → logprob: -3.175283432006836
    8. 'edges' → logprob: -3.425283432006836
    9. 'i' → logprob: -3.675283432006836
    10. 'I' → logprob: -3.925283432006836

Token 381: ' d' (ID: 272)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8006041646003723
    2. '=' → logprob: -1.3006041049957275
    3. 'A' → logprob: -2.5506041049957275
    4. ' A' → logprob: -2.6756041049957275
    5. ' of' → logprob: -4.425604343414307
    6. 's' → logprob: -4.425604343414307
    7. 'x' → logprob: -4.675604343414307
    8. '   ' → logprob: -4.675604343414307
    9. ' (' → logprob: -4.925604343414307
    10. 'a' → logprob: -4.925604343414307

Token 382: ''une' (ID: 13337)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.258390188217163
    2. ' a' → logprob: -1.383390188217163
    3. ' co' → logprob: -2.133390188217163
    4. ' data' → logprob: -2.883390188217163
    5. ' ' → logprob: -3.508390188217163
    6. ' csr' → logprob: -3.508390188217163
    7. 'csr' → logprob: -3.633390188217163
    8. ' lil' → logprob: -3.758390188217163
    9. ' l' → logprob: -4.133390426635742
    10. 'data' → logprob: -4.258390426635742

Token 383: ' matr' (ID: 25095)
  Prédit: 'csr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'csr' → logprob: -0.8010688424110413
    2. 'co' → logprob: -1.0510687828063965
    3. 'l' → logprob: -2.0510687828063965
    4. 'list' → logprob: -4.0510687828063965
    5. 'int' → logprob: -4.8010687828063965
    6. 'dok' → logprob: -4.9260687828063965
    7. 'data' → logprob: -5.0510687828063965
    8. 'c' → logprob: -5.4260687828063965
    9. 'zeros' → logprob: -5.4260687828063965
    10. '```' → logprob: -5.5510687828063965

Token 384: 'ice' (ID: 603)
  Prédit: 'atrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'atrix' → logprob: -0.06212710589170456
    2. 'ix' → logprob: -3.937127113342285
    3. 'in' → logprob: -4.312127113342285
    4. 'at' → logprob: -4.312127113342285
    5. 'rix' → logprob: -5.687127113342285
    6. 'x' → logprob: -5.937127113342285
    7. '   ' → logprob: -6.812127113342285
    8. ' =' → logprob: -7.312127113342285
    9. 'ult' → logprob: -7.312127113342285
    10. 'array' → logprob: -7.437127113342285

Token 385: ' cre' (ID: 1519)
  Prédit: 'csr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'csr' → logprob: -1.6974679231643677
    2. ' csr' → logprob: -1.8224679231643677
    3. '(' → logprob: -1.9474679231643677
    4. 'l' → logprob: -2.322467803955078
    5. ' lil' → logprob: -2.322467803955078
    6. 'A' → logprob: -3.197467803955078
    7. ' =' → logprob: -3.197467803955078
    8. ' co' → logprob: -3.697467803955078
    9. 'co' → logprob: -4.072467803955078
    10. 'n' → logprob: -4.072467803955078

Token 386: 'use' (ID: 1821)
  Prédit: 'rice'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rice' → logprob: -0.009914860129356384
    2. 'r' → logprob: -5.384914875030518
    3. ' =' → logprob: -7.134914875030518
    4. '[' → logprob: -7.384914875030518
    5. '```' → logprob: -7.509914875030518
    6. '=' → logprob: -7.759914875030518
    7. '#' → logprob: -8.13491439819336
    8. 'tr' → logprob: -8.38491439819336
    9. 'ice' → logprob: -8.50991439819336
    10. 'rise' → logprob: -9.00991439819336

Token 387: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9104459881782532
    2. '((' → logprob: -1.4104459285736084
    3. '(' → logprob: -1.6604459285736084
    4. '=' → logprob: -3.2854459285736084
    5. 'csr' → logprob: -4.1604461669921875
    6. ' (' → logprob: -4.5354461669921875
    7. ' lil' → logprob: -4.5354461669921875
    8. 'data' → logprob: -4.7854461669921875
    9. 'co' → logprob: -4.7854461669921875
    10. '(n' → logprob: -5.2854461669921875

Token 388: 's' (ID: 82)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.9264811277389526
    2. 'co' → logprob: -1.0514811277389526
    3. 'dok' → logprob: -2.051481246948242
    4. 'csr' → logprob: -2.301481246948242
    5. ' dok' → logprob: -4.676481246948242
    6. ' co' → logprob: -5.551481246948242
    7. ' lil' → logprob: -5.926481246948242
    8. 'd' → logprob: -5.926481246948242
    9. '```' → logprob: -6.426481246948242
    10. 'n' → logprob: -6.676481246948242

Token 389: 'parse' (ID: 4841)
  Prédit: 'parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.0938076302409172
    2. 'p' → logprob: -3.3438076972961426
    3. 'pm' → logprob: -3.7188076972961426
    4. 'c' → logprob: -4.218807697296143
    5. 'pa' → logprob: -4.718807697296143
    6. 'co' → logprob: -6.343807697296143
    7. 'cip' → logprob: -7.843807697296143
    8. 'par' → logprob: -7.968807697296143
    9. 'pare' → logprob: -8.093807220458984
    10. 'pam' → logprob: -8.343807220458984

Token 390: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2514253854751587
    2. '_c' → logprob: -1.7514253854751587
    3. '_matrix' → logprob: -1.7514253854751587
    4. '_co' → logprob: -1.8764253854751587
    5. '.c' → logprob: -2.876425266265869
    6. '(' → logprob: -3.376425266265869
    7. '_l' → logprob: -3.626425266265869
    8. '((' → logprob: -3.876425266265869
    9. 'csr' → logprob: -4.376425266265869
    10. ',' → logprob: -4.876425266265869

Token 391: ' qui' (ID: 2780)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.407278299331665
    2. 'M' → logprob: -1.782278299331665
    3. 'co' → logprob: -2.157278299331665
    4. 'row' → logprob: -2.532278299331665
    5. 'rows' → logprob: -3.157278299331665
    6. 'data' → logprob: -3.282278299331665
    7. 'D' → logprob: -3.532278299331665
    8. 'm' → logprob: -3.657278299331665
    9. 'L' → logprob: -3.657278299331665
    10. 'mat' → logprob: -3.782278299331665

Token 392: ' sera' (ID: 15511)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.1060924530029297
    2. 'csr' → logprob: -1.3560924530029297
    3. 'co' → logprob: -2.2310924530029297
    4. ' =' → logprob: -2.2310924530029297
    5. ' is' → logprob: -3.1060924530029297
    6. ' csr' → logprob: -3.3560924530029297
    7. ' co' → logprob: -3.7310924530029297
    8. ' dok' → logprob: -3.9810924530029297
    9. 'l' → logprob: -4.60609245300293
    10. 'dok' → logprob: -4.98109245300293

Token 393: ' le' (ID: 505)
  Prédit: 'csr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'csr' → logprob: -0.47814202308654785
    2. 'l' → logprob: -1.3531420230865479
    3. 'dok' → logprob: -2.353142023086548
    4. 'co' → logprob: -4.228141784667969
    5. 'c' → logprob: -5.728141784667969
    6. '```' → logprob: -5.978141784667969
    7. 'dia' → logprob: -6.228141784667969
    8. 'd' → logprob: -6.478141784667969
    9. ' dok' → logprob: -6.978141784667969
    10. 'di' → logprob: -7.853141784667969

Token 394: ' grap' (ID: 60955)
  Prédit: 'csr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'csr' → logprob: -0.09627281129360199
    2. 'l' → logprob: -3.2212727069854736
    3. 'dok' → logprob: -3.2212727069854736
    4. 'co' → logprob: -4.846272945404053
    5. ' dok' → logprob: -6.971272945404053
    6. '```' → logprob: -7.221272945404053
    7. ' csr' → logprob: -7.346272945404053
    8. 'd' → logprob: -7.596272945404053
    9. 'c' → logprob: -7.846272945404053
    10. ' lil' → logprob: -8.346272468566895

Token 395: 'he' (ID: 273)
  Prédit: 'aphe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aphe' → logprob: -0.01493419986218214
    2. 'aph' → logprob: -4.764934062957764
    3. 'he' → logprob: -5.764934062957764
    4. 'h' → logprob: -6.764934062957764
    5. 'ah' → logprob: -7.389934062957764
    6. 'phe' → logprob: -7.514934062957764
    7. '#' → logprob: -8.639934539794922
    8. 'ap' → logprob: -8.889934539794922
    9. 'a' → logprob: -9.764934539794922
    10. 'apho' → logprob: -9.764934539794922

Token 396: ' pond' (ID: 42367)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0847800076007843
    2. '=' → logprob: -2.709779977798462
    3. '   ' → logprob: -5.209780216217041
    4. ',' → logprob: -6.334780216217041
    5. 'co' → logprob: -7.084780216217041
    6. 'rows' → logprob: -7.084780216217041
    7. 'data' → logprob: -7.709780216217041
    8. '(' → logprob: -7.959780216217041
    9. 'L' → logprob: -8.084779739379883
    10. 'row' → logprob: -8.209779739379883

Token 397: 'éré' (ID: 33338)
  Prédit: 'raph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'raph' → logprob: -0.46880438923835754
    2. 'h' → logprob: -1.9688043594360352
    3. 'es' → logprob: -2.468804359436035
    4. 'hé' → logprob: -2.718804359436035
    5. '=' → logprob: -4.843804359436035
    6. 'he' → logprob: -4.843804359436035
    7. 'u' → logprob: -5.343804359436035
    8. 'é' → logprob: -5.593804359436035
    9. 'csr' → logprob: -5.593804359436035
    10. 'l' → logprob: -5.593804359436035

Token 398: ' à' (ID: 1221)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.33700183033943176
    2. '=' → logprob: -1.7120018005371094
    3. '   ' → logprob: -3.5870018005371094
    4. '(' → logprob: -3.5870018005371094
    5. ',' → logprob: -3.7120018005371094
    6. '(
' → logprob: -5.087001800537109
    7. '((' → logprob: -5.712001800537109
    8. ' (' → logprob: -6.712001800537109
    9. '=(' → logprob: -6.712001800537109
    10. 's' → logprob: -6.837001800537109

Token 399: ' traiter' (ID: 105852)
  Prédit: 'csr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'csr' → logprob: -0.2918139398097992
    2. 'co' → logprob: -1.9168139696121216
    3. 'l' → logprob: -2.416813850402832
    4. '```' → logprob: -5.166813850402832
    5. 'c' → logprob: -5.416813850402832
    6. 'cs' → logprob: -6.541813850402832
    7. 'dok' → logprob: -6.666813850402832
    8. 'lap' → logprob: -7.541813850402832
    9. 'float' → logprob: -7.791813850402832
    10. 'cour' → logprob: -8.416813850402832

Token 400: ' :
' (ID: 10039)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.3457388877868652
    2. 'rows' → logprob: -1.9707388877868652
    3. 'row' → logprob: -2.8457388877868652
    4. '   ' → logprob: -2.8457388877868652
    5. '
' → logprob: -2.8457388877868652
    6. 'A' → logprob: -3.4707388877868652
    7. 'co' → logprob: -3.4707388877868652
    8. 'L' → logprob: -3.5957388877868652
    9. 'W' → logprob: -3.5957388877868652
    10. ' row' → logprob: -3.7207388877868652

Token 401: '   ' (ID: 271)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -2.022376537322998
    2. ' r' → logprob: -2.147376537322998
    3. '   ' → logprob: -2.522376537322998
    4. ' rows' → logprob: -2.647376537322998
    5. ' row' → logprob: -2.772376537322998
    6. 'rows' → logprob: -3.022376537322998
    7. ' ind' → logprob: -3.272376537322998
    8. 'r' → logprob: -3.272376537322998
    9. 'I' → logprob: -3.397376537322998
    10. 'i' → logprob: -3.647376537322998

Token 402: ' #' (ID: 1069)
  Prédit: 'rows'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rows' → logprob: -1.1008158922195435
    2. 'row' → logprob: -1.8508158922195435
    3. 'data' → logprob: -2.600815773010254
    4. ' rows' → logprob: -2.600815773010254
    5. ' row' → logprob: -2.850815773010254
    6. ' data' → logprob: -2.975815773010254
    7. ' ind' → logprob: -2.975815773010254
    8. '   ' → logprob: -3.100815773010254
    9. 'i' → logprob: -3.475815773010254
    10. 'r' → logprob: -3.725815773010254

Token 403: ' -' (ID: 533)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'row' → logprob: -1.5482176542282104
    2. 'rows' → logprob: -1.5482176542282104
    3. 'data' → logprob: -2.0482177734375
    4. ' data' → logprob: -2.4232177734375
    5. ' ind' → logprob: -2.7982177734375
    6. ' row' → logprob: -2.7982177734375
    7. ' rows' → logprob: -3.1732177734375
    8. 'I' → logprob: -3.6732177734375
    9. 'i' → logprob: -3.7982177734375
    10. 'r' → logprob: -3.9232177734375

Token 404: ' Les' (ID: 7029)
  Prédit: 'rows'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rows' → logprob: -0.7784592509269714
    2. 'row' → logprob: -0.9034592509269714
    3. 'data' → logprob: -3.028459310531616
    4. 'i' → logprob: -3.653459310531616
    5. 'r' → logprob: -4.778459072113037
    6. 'u' → logprob: -4.903459072113037
    7. 'l' → logprob: -5.028459072113037
    8. 'I' → logprob: -5.278459072113037
    9. 'indices' → logprob: -5.528459072113037
    10. '#' → logprob: -5.653459072113037

Token 405: ' '' (ID: 461)
  Prédit: 'rows'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rows' → logprob: -0.9922950267791748
    2. 'data' → logprob: -1.6172950267791748
    3. 'row' → logprob: -1.9922950267791748
    4. 'indices' → logprob: -2.617295026779175
    5. 'r' → logprob: -3.117295026779175
    6. 'i' → logprob: -3.367295026779175
    7. ' rows' → logprob: -3.742295026779175
    8. ' data' → logprob: -3.742295026779175
    9. ' row' → logprob: -3.992295026779175
    10. ' indices' → logprob: -4.117295265197754

Token 406: 'd' (ID: 67)
  Prédit: 'rows'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rows' → logprob: -0.7191250324249268
    2. 'data' → logprob: -1.0941250324249268
    3. 'row' → logprob: -2.2191250324249268
    4. 'i' → logprob: -4.594124794006348
    5. 'indices' → logprob: -4.594124794006348
    6. 'r' → logprob: -4.844124794006348
    7. 'l' → logprob: -5.094124794006348
    8. 'ar' → logprob: -5.469124794006348
    9. 'co' → logprob: -5.594124794006348
    10. 'v' → logprob: -5.844124794006348

Token 407: 'onnées' (ID: 96928)
  Prédit: 'ata'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ata' → logprob: -0.004539538640528917
    2. 'at' → logprob: -6.504539489746094
    3. 'atas' → logprob: -7.504539489746094
    4. 'data' → logprob: -7.629539489746094
    5. 'type' → logprob: -7.754539489746094
    6. '=' → logprob: -8.004539489746094
    7. 'atat' → logprob: -8.629539489746094
    8. 'ense' → logprob: -8.879539489746094
    9. 'a' → logprob: -9.004539489746094
    10. 'i' → logprob: -9.254539489746094

Token 408: ''' (ID: 6)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.259109765291214
    2. ' =' → logprob: -1.8841097354888916
    3. ',' → logprob: -3.5091097354888916
    4. '=t' → logprob: -4.384109973907471
    5. '='' → logprob: -4.884109973907471
    6. ''' → logprob: -5.634109973907471
    7. 's' → logprob: -5.634109973907471
    8. ','' → logprob: -5.884109973907471
    9. '=data' → logprob: -5.884109973907471
    10. '=m' → logprob: -6.009109973907471

Token 409: ' de' (ID: 334)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3440358638763428
    2. ' =' → logprob: -1.5940358638763428
    3. ',' → logprob: -2.5940358638763428
    4. '=t' → logprob: -5.219036102294922
    5. '=data' → logprob: -5.469036102294922
    6. 'data' → logprob: -7.594036102294922
    7. '=[]' → logprob: -7.719036102294922
    8. 's' → logprob: -7.844036102294922
    9. ' ,' → logprob: -7.844036102294922
    10. '=m' → logprob: -7.969036102294922

Token 410: ' la' (ID: 557)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.003754471428692341
    2. ' t' → logprob: -6.878754615783691
    3. 'array' → logprob: -6.878754615783691
    4. 'data' → logprob: -7.503754615783691
    5. ''t' → logprob: -8.253754615783691
    6. '[' → logprob: -8.378754615783691
    7. '"' → logprob: -10.003754615783691
    8. ''' → logprob: -10.378754615783691
    9. '[]' → logprob: -10.378754615783691
    10. '   ' → logprob: -10.378754615783691

Token 411: ' matr' (ID: 25095)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.20575447380542755
    2. 'array' → logprob: -2.705754518508911
    3. 't' → logprob: -3.080754518508911
    4. 'edges' → logprob: -3.080754518508911
    5. '(' → logprob: -5.580754280090332
    6. 'm' → logprob: -5.580754280090332
    7. '[' → logprob: -6.080754280090332
    8. ' data' → logprob: -6.080754280090332
    9. 'ar' → logprob: -6.455754280090332
    10. ' edges' → logprob: -6.580754280090332

Token 412: 'ice' (ID: 603)
  Prédit: 'atrice'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atrice' → logprob: -0.4485284090042114
    2. 'atrices' → logprob: -1.5735284090042114
    3. 'ices' → logprob: -2.823528289794922
    4. 'atrix' → logprob: -3.448528289794922
    5. 'at' → logprob: -3.698528289794922
    6. 'rices' → logprob: -3.698528289794922
    7. 'rice' → logprob: -6.448528289794922
    8. 'ice' → logprob: -6.573528289794922
    9. 'ix' → logprob: -6.698528289794922
    10. 'iques' → logprob: -6.698528289794922

Token 413: ' sont' (ID: 5242)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6970013380050659
    2. ' =' → logprob: -0.9470013380050659
    3. ',' → logprob: -2.1970014572143555
    4. '=data' → logprob: -6.5720014572143555
    5. 'data' → logprob: -8.447001457214355
    6. ' ' → logprob: -8.572001457214355
    7. ' ,' → logprob: -8.697001457214355
    8. '=t' → logprob: -8.822001457214355
    9. '   ' → logprob: -8.947001457214355
    10. '=np' → logprob: -9.822001457214355

Token 414: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.006964950822293758
    2. ' t' → logprob: -5.506965160369873
    3. 'array' → logprob: -6.006965160369873
    4. ' array' → logprob: -9.381964683532715
    5. 'data' → logprob: -9.381964683532715
    6. '[]' → logprob: -9.756964683532715
    7. '   ' → logprob: -10.631964683532715
    8. ' ' → logprob: -10.631964683532715
    9. 'list' → logprob: -11.006964683532715
    10. '	t' → logprob: -11.631964683532715

Token 415: '[' (ID: 58)
  Prédit: '[:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.12871170043945312
    2. '[m' → logprob: -2.753711700439453
    3. '[' → logprob: -2.878711700439453
    4. '[n' → logprob: -8.003711700439453
    5. '   ' → logprob: -8.753711700439453
    6. 'm' → logprob: -9.253711700439453
    7. ' [:' → logprob: -9.753711700439453
    8. '[
' → logprob: -10.003711700439453
    9. ':m' → logprob: -10.003711700439453
    10. ':' → logprob: -11.253711700439453

Token 416: '2' (ID: 17)
  Prédit: ':m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':m' → logprob: -0.052318330854177475
    2. ':' → logprob: -3.1773183345794678
    3. ':n' → logprob: -5.677318096160889
    4. ':t' → logprob: -6.302318096160889
    5. '[:' → logprob: -6.427318096160889
    6. ' :' → logprob: -7.177318096160889
    7. ':s' → logprob: -7.427318096160889
    8. 'm' → logprob: -8.052318572998047
    9. ':M' → logprob: -9.052318572998047
    10. '0' → logprob: -9.427318572998047

Token 417: ':m' (ID: 83740)
  Prédit: ':m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':m' → logprob: -0.0673125609755516
    2. ':' → logprob: -2.942312479019165
    3. 'm' → logprob: -4.817312717437744
    4. '::' → logprob: -5.942312717437744
    5. ' :' → logprob: -6.942312717437744
    6. ':]' → logprob: -8.442312240600586
    7. ':t' → logprob: -9.067312240600586
    8. '   ' → logprob: -9.942312240600586
    9. ':
' → logprob: -9.942312240600586
    10. ':(' → logprob: -10.317312240600586

Token 418: ':' (ID: 25)
  Prédit: ':m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':m' → logprob: -0.3709771931171417
    2. ':' → logprob: -1.4959771633148193
    3. 'm' → logprob: -3.3709771633148193
    4. ']' → logprob: -3.4959771633148193
    5. '::' → logprob: -4.495977401733398
    6. '],' → logprob: -5.370977401733398
    7. ',' → logprob: -7.245977401733398
    8. '+' → logprob: -7.245977401733398
    9. ':t' → logprob: -7.245977401733398
    10. '   ' → logprob: -7.495977401733398

Token 419: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -4.4849443838757e-06
    2. ' ' → logprob: -12.625004768371582
    3. ']' → logprob: -14.500004768371582
    4. '   ' → logprob: -15.750004768371582
    5. '1' → logprob: -16.000003814697266
    6. '4' → logprob: -16.375003814697266
    7. '```' → logprob: -16.750003814697266
    8. '2' → logprob: -17.250003814697266
    9. 'm' → logprob: -17.750003814697266
    10. ':' → logprob: -17.750003814697266

Token 420: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1646280288696289
    2. '],' → logprob: -2.164628028869629
    3. '[' → logprob: -4.789628028869629
    4. '][' → logprob: -4.789628028869629
    5. ',' → logprob: -5.039628028869629
    6. ' ]' → logprob: -5.914628028869629
    7. ':' → logprob: -6.039628028869629
    8. ' ' → logprob: -6.664628028869629
    9. ' ],' → logprob: -6.914628028869629
    10. '].' → logprob: -7.039628028869629

Token 421: ' c' (ID: 274)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.33943238854408264
    2. ',
' → logprob: -1.3394323587417603
    3. '   ' → logprob: -4.964432239532471
    4. ')' → logprob: -5.464432239532471
    5. ',
' → logprob: -5.464432239532471
    6. '.astype' → logprob: -5.589432239532471
    7. ' ,' → logprob: -6.214432239532471
    8. ']' → logprob: -6.714432239532471
    9. '[' → logprob: -7.464432239532471
    10. '),' → logprob: -7.964432239532471

Token 422: ''est' (ID: 6616)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.8074268102645874
    2. '],' → logprob: -0.8074268102645874
    3. '[' → logprob: -2.932426929473877
    4. ',' → logprob: -3.557426929473877
    5. '],
' → logprob: -5.057426929473877
    6. 'ost' → logprob: -5.307426929473877
    7. '.astype' → logprob: -5.432426929473877
    8. '+' → logprob: -6.682426929473877
    9. ',
' → logprob: -6.807426929473877
    10. '].' → logprob: -7.057426929473877

Token 423: '-à' (ID: 56297)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.4330703616142273
    2. 'array' → logprob: -1.433070421218872
    3. ' array' → logprob: -3.808070421218872
    4. ',' → logprob: -3.933070421218872
    5. ']' → logprob: -3.933070421218872
    6. 'int' → logprob: -4.433070182800293
    7. ' t' → logprob: -4.558070182800293
    8. '1' → logprob: -5.683070182800293
    9. ' ' → logprob: -5.933070182800293
    10. '   ' → logprob: -6.183070182800293

Token 424: '-dire' (ID: 76064)
  Prédit: '...'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '...' → logprob: -0.8113207817077637
    2. 't' → logprob: -1.0613207817077637
    3. '[' → logprob: -2.9363207817077637
    4. '3' → logprob: -3.3113207817077637
    5. 'array' → logprob: -4.686320781707764
    6. 'n' → logprob: -4.686320781707764
    7. '[:]' → logprob: -4.686320781707764
    8. '2' → logprob: -4.811320781707764
    9. 'int' → logprob: -4.811320781707764
    10. 's' → logprob: -4.936320781707764

Token 425: ' les' (ID: 1341)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.16427305340766907
    2. ' t' → logprob: -1.9142730236053467
    3. 'array' → logprob: -6.289273262023926
    4. ' array' → logprob: -6.789273262023926
    5. '1' → logprob: -7.789273262023926
    6. ' ' → logprob: -8.539273262023926
    7. 'int' → logprob: -8.914273262023926
    8. ',' → logprob: -9.789273262023926
    9. '[' → logprob: -9.914273262023926
    10. ' int' → logprob: -9.914273262023926

Token 426: ' poids' (ID: 56058)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0299002043902874
    2. ' t' → logprob: -4.029900074005127
    3. 'array' → logprob: -4.779900074005127
    4. 'int' → logprob: -6.279900074005127
    5. ' array' → logprob: -7.279900074005127
    6. '[' → logprob: -8.529900550842285
    7. ' int' → logprob: -9.529900550842285
    8. '1' → logprob: -9.654900550842285
    9. 'float' → logprob: -9.779900550842285
    10. 'data' → logprob: -9.904900550842285

Token 427: ' des' (ID: 731)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00781659409403801
    2. ']' → logprob: -5.757816791534424
    3. ',
' → logprob: -5.882816791534424
    4. '],' → logprob: -7.007816791534424
    5. ' ,' → logprob: -7.882816791534424
    6. '[' → logprob: -9.132816314697266
    7. ',

' → logprob: -9.257816314697266
    8. '   ' → logprob: -9.507816314697266
    9. '.' → logprob: -9.882816314697266
    10. ',
' → logprob: -10.382816314697266

Token 428: ' ar' (ID: 646)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.6508316397666931
    2. ' t' → logprob: -1.025831699371338
    3. ' edges' → logprob: -2.650831699371338
    4. 'l' → logprob: -4.150831699371338
    5. 'edges' → logprob: -4.150831699371338
    6. 'ar' → logprob: -4.775831699371338
    7. 'arest' → logprob: -5.775831699371338
    8. ' l' → logprob: -6.650831699371338
    9. ' poids' → logprob: -7.025831699371338
    10. ' ar' → logprob: -7.275831699371338

Token 429: 'êtes' (ID: 23720)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.21061496436595917
    2. 't' → logprob: -1.7106149196624756
    3. 'rr' → logprob: -6.085615158081055
    4. 'ré' → logprob: -6.460615158081055
    5. '[' → logprob: -6.585615158081055
    6. 'rès' → logprob: -7.710615158081055
    7. ' t' → logprob: -7.835615158081055
    8. 're' → logprob: -7.835615158081055
    9. 'rray' → logprob: -7.960615158081055
    10. ',' → logprob: -8.460615158081055

Token 430: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03800487890839577
    2. ',
' → logprob: -3.6630048751831055
    3. ' ,' → logprob: -5.0380048751831055
    4. '   ' → logprob: -5.7880048751831055
    5. '[' → logprob: -8.038004875183105
    6. 'data' → logprob: -8.288004875183105
    7. ')' → logprob: -8.538004875183105
    8. ',data' → logprob: -8.788004875183105
    9. '.' → logprob: -8.913004875183105
    10. ' ,
' → logprob: -9.163004875183105

Token 431: '   ' (ID: 271)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06620825827121735
    2. ',
' → logprob: -3.3162083625793457
    3. ' ,' → logprob: -4.066208362579346
    4. ',n' → logprob: -6.566208362579346
    5. 'data' → logprob: -6.816208362579346
    6. ',t' → logprob: -6.816208362579346
    7. ',data' → logprob: -6.816208362579346
    8. 'indices' → logprob: -6.816208362579346
    9. '   ' → logprob: -7.316208362579346
    10. ',s' → logprob: -7.566208362579346

Token 432: ' #' (ID: 1069)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2197570949792862
    2. ',
' → logprob: -1.969757080078125
    3. ' ,' → logprob: -3.219757080078125
    4. ',data' → logprob: -5.719757080078125
    5. ' ,
' → logprob: -6.094757080078125
    6. 'data' → logprob: -6.094757080078125
    7. '   ' → logprob: -6.719757080078125
    8. ',t' → logprob: -6.844757080078125
    9. ',n' → logprob: -6.844757080078125
    10. ',s' → logprob: -6.844757080078125

Token 433: ' -' (ID: 533)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.23248210549354553
    2. ' ,' → logprob: -2.7324821949005127
    3. 'data' → logprob: -2.9824821949005127
    4. '   ' → logprob: -3.3574821949005127
    5. ',
' → logprob: -4.107481956481934
    6. ',data' → logprob: -4.982481956481934
    7. ',row' → logprob: -5.357481956481934
    8. 'rows' → logprob: -5.482481956481934
    9. 'row' → logprob: -5.607481956481934
    10. 'indices' → logprob: -5.982481956481934

Token 434: ' Les' (ID: 7029)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.7569718956947327
    2. 'rows' → logprob: -1.381971836090088
    3. 'data' → logprob: -2.256971836090088
    4. 'row' → logprob: -2.506971836090088
    5. 'indices' → logprob: -2.881971836090088
    6. 'ar' → logprob: -4.881971836090088
    7. 'array' → logprob: -5.506971836090088
    8. 'co' → logprob: -5.506971836090088
    9. 'int' → logprob: -6.131971836090088
    10. ' data' → logprob: -6.506971836090088

Token 435: ' '' (ID: 461)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.48910707235336304
    2. ' t' → logprob: -2.489107131958008
    3. 'rows' → logprob: -2.489107131958008
    4. 'indices' → logprob: -2.489107131958008
    5. ' indices' → logprob: -3.614107131958008
    6. 'data' → logprob: -3.989107131958008
    7. ' data' → logprob: -4.489107131958008
    8. 'row' → logprob: -4.551607131958008
    9. ' rows' → logprob: -4.551607131958008
    10. 'r' → logprob: -5.301607131958008

Token 436: 'l' (ID: 75)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.8622066378593445
    2. 't' → logprob: -1.3622066974639893
    3. 'rows' → logprob: -1.6122066974639893
    4. 'row' → logprob: -2.6122066974639893
    5. ' indices' → logprob: -4.73720645904541
    6. 'data' → logprob: -5.11220645904541
    7. 'i' → logprob: -5.23720645904541
    8. 'ind' → logprob: -5.36220645904541
    9. 'r' → logprob: -5.86220645904541
    10. ' rows' → logprob: -5.98720645904541

Token 437: 'ignes' (ID: 53389)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -1.1591802835464478
    2. 'ocs' → logprob: -2.034180164337158
    3. 'indices' → logprob: -2.034180164337158
    4. 'oc' → logprob: -2.909180164337158
    5. 'i' → logprob: -3.284180164337158
    6. 'ocations' → logprob: -3.284180164337158
    7. '=' → logprob: -3.534180164337158
    8. 'ist' → logprob: -3.784180164337158
    9. 'n' → logprob: -3.909180164337158
    10. '[' → logprob: -4.034180164337158

Token 438: ''' (ID: 6)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.394279807806015
    2. '=' → logprob: -2.269279718399048
    3. '[' → logprob: -2.644279718399048
    4. ']' → logprob: -3.269279718399048
    5. 't' → logprob: -3.894279718399048
    6. ' ,' → logprob: -3.894279718399048
    7. '=t' → logprob: -3.894279718399048
    8. ',t' → logprob: -4.394279956817627
    9. '],' → logprob: -4.519279956817627
    10. ' =' → logprob: -4.894279956817627

Token 439: ' sont' (ID: 5242)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4805488586425781
    2. '=t' → logprob: -1.7305488586425781
    3. 't' → logprob: -2.605548858642578
    4. ',' → logprob: -2.730548858642578
    5. ' =' → logprob: -3.105548858642578
    6. ' t' → logprob: -4.355548858642578
    7. ',t' → logprob: -5.605548858642578
    8. ',
' → logprob: -6.980548858642578
    9. ' ,' → logprob: -7.605548858642578
    10. ']' → logprob: -7.730548858642578

Token 440: ' les' (ID: 1341)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.18009036779403687
    2. ' t' → logprob: -1.8050904273986816
    3. ' ' → logprob: -9.305089950561523
    4. 'int' → logprob: -9.305089950561523
    5. ' int' → logprob: -10.055089950561523
    6. '	t' → logprob: -10.680089950561523
    7. '   ' → logprob: -10.930089950561523
    8. '(t' → logprob: -11.180089950561523
    9. 'array' → logprob: -11.305089950561523
    10. '[t' → logprob: -11.492589950561523

Token 441: ' indices' (ID: 30378)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.009977295994758606
    2. ' t' → logprob: -4.634977340698242
    3. '1' → logprob: -10.134977340698242
    4. '[' → logprob: -10.259977340698242
    5. '0' → logprob: -10.259977340698242
    6. '(t' → logprob: -10.634977340698242
    7. '	t' → logprob: -10.884977340698242
    8. '[t' → logprob: -11.134977340698242
    9. ' ' → logprob: -11.509977340698242
    10. '   ' → logprob: -11.759977340698242

Token 442: ' des' (ID: 731)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.41726621985435486
    2. '=' → logprob: -1.6672662496566772
    3. '=t' → logprob: -2.4172661304473877
    4. ' =' → logprob: -3.1672661304473877
    5. ' t' → logprob: -4.667266368865967
    6. '(t' → logprob: -5.042266368865967
    7. '[' → logprob: -6.542266368865967
    8. '   ' → logprob: -7.167266368865967
    9. '(' → logprob: -7.292266368865967
    10. '[t' → logprob: -7.417266368865967

Token 443: ' somm' (ID: 44830)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.024287832900881767
    2. ' t' → logprob: -3.7742879390716553
    3. '0' → logprob: -7.399287700653076
    4. '1' → logprob: -8.274288177490234
    5. '	t' → logprob: -9.649288177490234
    6. ' ' → logprob: -10.274288177490234
    7. 'vertices' → logprob: -11.274288177490234
    8. ' vertices' → logprob: -11.649288177490234
    9. 'indices' → logprob: -11.774288177490234
    10. '[' → logprob: -12.149288177490234

Token 444: 'ets' (ID: 1719)
  Prédit: 'ices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ices' → logprob: -0.020796336233615875
    2. 't' → logprob: -4.520796298980713
    3. 'ects' → logprob: -6.020796298980713
    4. ' t' → logprob: -6.395796298980713
    5. 'ets' → logprob: -6.770796298980713
    6. '[' → logprob: -7.145796298980713
    7. 'e' → logprob: -7.395796298980713
    8. 'é' → logprob: -8.145796775817871
    9. 'eurs' → logprob: -8.145796775817871
    10. 'ect' → logprob: -8.395796775817871

Token 445: ' de' (ID: 334)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.27205654978752136
    2. ' t' → logprob: -2.3970565795898438
    3. '=' → logprob: -2.6470565795898438
    4. '[' → logprob: -3.2720565795898438
    5. ' =' → logprob: -3.6470565795898438
    6. '=t' → logprob: -5.397056579589844
    7. '(t' → logprob: -6.647056579589844
    8. 's' → logprob: -6.772056579589844
    9. '   ' → logprob: -7.022056579589844
    10. '[t' → logprob: -7.022056579589844

Token 446: ' départ' (ID: 32693)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.01282981876283884
    2. ' t' → logprob: -4.387829780578613
    3. ' départ' → logprob: -9.387829780578613
    4. ' ' → logprob: -9.637829780578613
    5. 'ar' → logprob: -10.262829780578613
    6. 'arr' → logprob: -10.762829780578613
    7. '0' → logprob: -10.887829780578613
    8. 'depart' → logprob: -11.137829780578613
    9. '	t' → logprob: -11.512829780578613
    10. 'vertices' → logprob: -11.762829780578613

Token 447: ' t' (ID: 260)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4504784643650055
    2. 't' → logprob: -1.075478434562683
    3. ',
' → logprob: -4.075478553771973
    4. ',t' → logprob: -6.825478553771973
    5. '(' → logprob: -7.450478553771973
    6. '=' → logprob: -7.700478553771973
    7. ' t' → logprob: -8.075478553771973
    8. '   ' → logprob: -8.075478553771973
    9. ' ,' → logprob: -8.200478553771973
    10. 's' → logprob: -8.450478553771973

Token 448: '[:' (ID: 7808)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0430898517370224
    2. '[:' → logprob: -3.1680898666381836
    3. '1' → logprob: -9.918089866638184
    4. '0' → logprob: -12.043089866638184
    5. '
' → logprob: -12.418089866638184
    6. '(' → logprob: -12.543089866638184
    7. '   ' → logprob: -12.543089866638184
    8. ' [' → logprob: -12.668089866638184
    9. '[:-' → logprob: -12.793089866638184
    10. '[
' → logprob: -13.543089866638184

Token 449: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0001801801408873871
    2. ' m' → logprob: -8.7501802444458
    3. ':m' → logprob: -11.6251802444458
    4. '   ' → logprob: -12.1251802444458
    5. ' ' → logprob: -12.8751802444458
    6. '	m' → logprob: -14.2501802444458
    7. '2' → logprob: -14.2501802444458
    8. '  ' → logprob: -14.5001802444458
    9. '1' → logprob: -14.6251802444458
    10. ':' → logprob: -14.6251802444458

Token 450: ':' (ID: 25)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5516580939292908
    2. '3' → logprob: -1.3016581535339355
    3. '1' → logprob: -3.0516581535339355
    4. '[' → logprob: -3.3016581535339355
    5. '+' → logprob: -3.6766581535339355
    6. '],' → logprob: -4.1766581535339355
    7. ']
' → logprob: -4.9266581535339355
    8. '2' → logprob: -4.9266581535339355
    9. 'm' → logprob: -5.5516581535339355
    10. ':' → logprob: -5.9266581535339355

Token 451: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.00021605310030281544
    2. ' ' → logprob: -8.875216484069824
    3. '2' → logprob: -9.500216484069824
    4. '1' → logprob: -14.500216484069824
    5. '   ' → logprob: -15.375216484069824
    6. 'm' → logprob: -15.625216484069824
    7. ',' → logprob: -15.750216484069824
    8. ']' → logprob: -16.250215530395508
    9. '  ' → logprob: -16.750215530395508
    10. '```' → logprob: -17.750215530395508

Token 452: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04519423097372055
    2. ']
' → logprob: -3.170194149017334
    3. ']
' → logprob: -7.170194149017334
    4. ' ]' → logprob: -7.545194149017334
    5. ',' → logprob: -7.795194149017334
    6. ']

' → logprob: -8.295194625854492
    7. '   ' → logprob: -9.670194625854492
    8. ' ]
' → logprob: -9.920194625854492
    9. '],' → logprob: -10.045194625854492
    10. '].' → logprob: -11.170194625854492

Token 453: '   ' (ID: 271)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.26438790559768677
    2. '   ' → logprob: -2.389387845993042
    3. ',
' → logprob: -2.514387845993042
    4. '#' → logprob: -3.514387845993042
    5. ')' → logprob: -3.639387845993042
    6. 't' → logprob: -6.264388084411621
    7. ')
' → logprob: -8.014388084411621
    8. ',
' → logprob: -8.389388084411621
    9. 'indices' → logprob: -8.764388084411621
    10. ' ,' → logprob: -9.014388084411621

Token 454: ' #' (ID: 1069)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.41420966386795044
    2. '   ' → logprob: -1.2892096042633057
    3. '#' (adapté à ' #') → logprob: -2.9142096042633057
    4. ',
' → logprob: -5.289209842681885
    5. ' ,' → logprob: -6.539209842681885
    6. ' #' → logprob: -7.039209842681885
    7. ')' → logprob: -7.414209842681885
    8. ' ' → logprob: -7.664209842681885
    9. '  ' → logprob: -8.164209365844727
    10. 't' → logprob: -9.164209365844727

Token 455: ' -' (ID: 533)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5820779800415039
    2. 't' → logprob: -1.832077980041504
    3. '   ' → logprob: -2.332077980041504
    4. 'cols' → logprob: -2.957077980041504
    5. '#' → logprob: -3.707077980041504
    6. 'indices' → logprob: -3.832077980041504
    7. '[:,' → logprob: -4.082077980041504
    8. ' t' → logprob: -4.457077980041504
    9. '[' → logprob: -4.957077980041504
    10. ' ,' → logprob: -5.207077980041504

Token 456: ' Les' (ID: 7029)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.6042630076408386
    2. ' t' → logprob: -0.9792630076408386
    3. 'cols' → logprob: -3.1042630672454834
    4. '   ' → logprob: -4.354262828826904
    5. ' cols' → logprob: -4.479262828826904
    6. 'indices' → logprob: -6.354262828826904
    7. ' indices' → logprob: -6.854262828826904
    8. 'rows' → logprob: -7.229262828826904
    9. 'columns' → logprob: -7.354262828826904
    10. ' columns' → logprob: -7.479262828826904

Token 457: ' '' (ID: 461)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.07190252840518951
    2. '1' → logprob: -3.9469025135040283
    3. ' t' → logprob: -3.9469025135040283
    4. 'cols' → logprob: -4.696902751922607
    5. '[' → logprob: -5.071902751922607
    6. 'm' → logprob: -5.071902751922607
    7. 'columns' → logprob: -5.821902751922607
    8. 'indices' → logprob: -6.821902751922607
    9. '[:,' → logprob: -7.071902751922607
    10. ' m' → logprob: -7.196902751922607

Token 458: 'colon' (ID: 106148)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.6808669567108154
    2. ' m' → logprob: -1.0558669567108154
    3. '3' → logprob: -2.4308669567108154
    4. '1' → logprob: -3.4308669567108154
    5. '2' → logprob: -3.9308669567108154
    6. ':m' → logprob: -6.6808671951293945
    7. ',m' → logprob: -7.0558671951293945
    8. ' ' → logprob: -7.1808671951293945
    9. '(m' → logprob: -7.9308671951293945
    10. 't' → logprob: -8.305867195129395

Token 459: 'nes' (ID: 4382)
  Prédit: 'nes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nes' → logprob: -0.0018497471464797854
    2. '3' → logprob: -6.75184965133667
    3. 'es' → logprob: -8.251850128173828
    4. ':' → logprob: -8.626850128173828
    5. '[:' → logprob: -9.126850128173828
    6. '1' → logprob: -10.376850128173828
    7. 'mes' → logprob: -10.626850128173828
    8. 'onnes' → logprob: -11.001850128173828
    9. 'n' → logprob: -11.376850128173828
    10. ':m' → logprob: -11.876850128173828

Token 460: ''' (ID: 6)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.24271173775196075
    2. '=t' → logprob: -2.1177117824554443
    3. ' =' → logprob: -2.4927117824554443
    4. 's' → logprob: -5.117711544036865
    5. 't' → logprob: -5.992711544036865
    6. '=m' → logprob: -5.992711544036865
    7. ']' → logprob: -7.492711544036865
    8. ']=' → logprob: -7.742711544036865
    9. ' t' → logprob: -8.617712020874023
    10. '=s' → logprob: -8.992712020874023

Token 461: ' sont' (ID: 5242)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.040912799537181854
    2. ' =' → logprob: -3.2909128665924072
    3. '=t' → logprob: -6.415912628173828
    4. 't' → logprob: -7.165912628173828
    5. '=m' → logprob: -8.415912628173828
    6. 's' → logprob: -8.915912628173828
    7. '=
' → logprob: -10.290912628173828
    8. '[' → logprob: -10.665912628173828
    9. ' t' → logprob: -11.040912628173828
    10. '=[' → logprob: -11.415912628173828

Token 462: ' les' (ID: 1341)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.011050998233258724
    2. ' t' → logprob: -4.511051177978516
    3. '   ' → logprob: -13.136051177978516
    4. ' ' → logprob: -15.011051177978516
    5. '	t' → logprob: -15.386051177978516
    6. '  ' → logprob: -15.886051177978516
    7. '    ' → logprob: -16.136051177978516
    8. '       ' → logprob: -16.511051177978516
    9. '`t' → logprob: -16.761051177978516
    10. '           ' → logprob: -16.886051177978516

Token 463: ' indices' (ID: 30378)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.005938040092587471
    2. ' t' → logprob: -5.1309380531311035
    3. 'm' → logprob: -12.005937576293945
    4. '1' → logprob: -13.755937576293945
    5. '`t' → logprob: -13.880937576293945
    6. '	t' → logprob: -15.255937576293945
    7. '[t' → logprob: -15.255937576293945
    8. '   ' → logprob: -15.380937576293945
    9. '_t' → logprob: -16.005937576293945
    10. '(t' → logprob: -16.630937576293945

Token 464: ' des' (ID: 731)
  Prédit: '[m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[m' → logprob: -0.04391936957836151
    2. 't' → logprob: -3.918919324874878
    3. '[t' → logprob: -3.918919324874878
    4. ' t' → logprob: -6.418919563293457
    5. '[' → logprob: -6.668919563293457
    6. '   ' → logprob: -8.918919563293457
    7. 'm' → logprob: -9.418919563293457
    8. ' [' → logprob: -9.418919563293457
    9. '       ' → logprob: -10.918919563293457
    10. '[:' → logprob: -12.168919563293457

Token 465: ' somm' (ID: 44830)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.3210417628288269
    2. 'm' → logprob: -1.3210418224334717
    3. ' t' → logprob: -5.446041584014893
    4. '1' → logprob: -6.446041584014893
    5. '[m' → logprob: -6.821041584014893
    6. ' m' → logprob: -7.321041584014893
    7. '```' → logprob: -10.32104206085205
    8. '`t' → logprob: -10.94604206085205
    9. '[t' → logprob: -11.07104206085205
    10. '   ' → logprob: -11.44604206085205

Token 466: 'ets' (ID: 1719)
  Prédit: 'ets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ets' → logprob: -0.28101465106010437
    2. '[:' → logprob: -1.9060146808624268
    3. 'et' → logprob: -2.6560146808624268
    4. '[m' → logprob: -3.7810146808624268
    5. ':m' → logprob: -6.281014442443848
    6. '[' → logprob: -7.156014442443848
    7. '[:,' → logprob: -8.781014442443848
    8. 'm' → logprob: -9.406014442443848
    9. '+m' → logprob: -9.406014442443848
    10. 't' → logprob: -10.031014442443848

Token 467: ' d' (ID: 272)
  Prédit: '[m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[m' → logprob: -0.12829215824604034
    2. '[' → logprob: -2.1282920837402344
    3. 'm' → logprob: -7.378292083740234
    4. ' [' → logprob: -7.878292083740234
    5. '   ' → logprob: -9.128292083740234
    6. '[:' → logprob: -9.503292083740234
    7. '       ' → logprob: -9.503292083740234
    8. '1' → logprob: -10.378292083740234
    9. '[l' → logprob: -10.628292083740234
    10. '           ' → logprob: -10.878292083740234

Token 468: ''arrivée' (ID: 156076)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.08623970299959183
    2. '[m' → logprob: -2.711239814758301
    3. '[:' → logprob: -4.461239814758301
    4. ':m' → logprob: -7.086239814758301
    5. '[' → logprob: -7.336239814758301
    6. '3' → logprob: -7.461239814758301
    7. '1' → logprob: -7.586239814758301
    8. 'é' → logprob: -7.836239814758301
    9. 'l' → logprob: -7.961239814758301
    10. ' m' → logprob: -7.961239814758301

Token 469: ' t' (ID: 260)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5485254526138306
    2. 't' → logprob: -1.7985254526138306
    3. '   ' → logprob: -2.173525333404541
    4. ' =' → logprob: -3.173525333404541
    5. ',
' → logprob: -3.423525333404541
    6. '(t' → logprob: -4.048525333404541
    7. '=' → logprob: -4.048525333404541
    8. ',t' → logprob: -5.048525333404541
    9. ' t' → logprob: -5.298525333404541
    10. '(' → logprob: -5.423525333404541

Token 470: '[' (ID: 58)
  Prédit: '[m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[m' → logprob: -0.0009307525469921529
    2. '[' → logprob: -7.0009307861328125
    3. '[:' → logprob: -11.500930786132812
    4. 'm' → logprob: -12.000930786132812
    5. ' [' → logprob: -14.000930786132812
    6. '[n' → logprob: -14.000930786132812
    7. '
' → logprob: -14.875930786132812
    8. '   ' → logprob: -15.750930786132812
    9. '[:,' → logprob: -15.750930786132812
    10. '[
' → logprob: -16.000930786132812

Token 471: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0017982310382649302
    2. '[' → logprob: -6.376798152923584
    3. ' ' → logprob: -9.751798629760742
    4. '   ' → logprob: -10.626798629760742
    5. '[m' → logprob: -12.126798629760742
    6. ' [' → logprob: -12.251798629760742
    7. '```' → logprob: -13.626798629760742
    8. 'm' → logprob: -14.501798629760742
    9. '  ' → logprob: -14.626798629760742
    10. '(' → logprob: -14.876798629760742

Token 472: ':m' (ID: 83740)
  Prédit: ':m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':m' → logprob: -4.394135612528771e-05
    2. 'm' → logprob: -10.500043869018555
    3. '[m' → logprob: -12.000043869018555
    4. ' :' → logprob: -12.250043869018555
    5. ':' → logprob: -12.500043869018555
    6. '
' → logprob: -14.750043869018555
    7. '+m' → logprob: -15.000043869018555
    8. '   ' → logprob: -15.125043869018555
    9. '	m' → logprob: -16.250043869018555
    10. '[:' → logprob: -16.375043869018555

Token 473: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006358316168189049
    2. '3' → logprob: -7.875635623931885
    3. ' :' → logprob: -8.375636100769043
    4. '2' → logprob: -11.875636100769043
    5. ' m' → logprob: -12.500636100769043
    6. 'm' → logprob: -12.500636100769043
    7. '```' → logprob: -12.500636100769043
    8. ' ' → logprob: -13.000636100769043
    9. '[' → logprob: -13.125636100769043
    10. ':m' → logprob: -14.500636100769043

Token 474: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -4.723352049040841e-06
    2. ' ' → logprob: -12.375004768371582
    3. '```' → logprob: -15.875004768371582
    4. 'm' → logprob: -16.500003814697266
    5. '   ' → logprob: -16.625003814697266
    6. ']' → logprob: -17.000003814697266
    7. '])' → logprob: -18.250003814697266
    8. ',' → logprob: -18.375003814697266
    9. '  ' → logprob: -18.562503814697266
    10. '6' → logprob: -18.937503814697266

Token 475: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00026205103495158255
    2. ' ]' → logprob: -8.875262260437012
    3. '])' → logprob: -9.875262260437012
    4. ']
' → logprob: -10.125262260437012
    5. '],' → logprob: -11.250262260437012
    6. ')' → logprob: -12.500262260437012
    7. '   ' → logprob: -12.875262260437012
    8. ']

' → logprob: -12.875262260437012
    9. ')]' → logprob: -13.750262260437012
    10. ' ' → logprob: -14.250262260437012

Token 476: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29020121693611145
    2. 'A' → logprob: -2.040201187133789
    3. 'G' → logprob: -3.540201187133789
    4. ')' → logprob: -4.040201187133789
    5. ' A' → logprob: -4.165201187133789
    6. ',' → logprob: -4.415201187133789
    7. 'graph' → logprob: -4.665201187133789
    8. 'W' → logprob: -4.790201187133789
    9. 'g' → logprob: -5.290201187133789
    10. ')
' → logprob: -5.540201187133789

Token 477: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3737713396549225
    2. 'A' → logprob: -2.7487714290618896
    3. 'g' → logprob: -3.1237714290618896
    4. 'G' → logprob: -3.1237714290618896
    5. 'graph' → logprob: -3.3737714290618896
    6. 'W' → logprob: -3.4987714290618896
    7. ' W' → logprob: -3.9987714290618896
    8. ' A' → logprob: -4.1237711906433105
    9. 'w' → logprob: -4.6237711906433105
    10. ' graph' → logprob: -4.7487711906433105

Token 478: ' -' (ID: 533)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.6736404895782471
    2. 'G' → logprob: -1.673640489578247
    3. 'A' → logprob: -2.298640489578247
    4. 'graph' → logprob: -3.048640489578247
    5. 'gr' → logprob: -3.423640489578247
    6. 'w' → logprob: -3.423640489578247
    7. '   ' → logprob: -3.798640489578247
    8. 'W' → logprob: -3.798640489578247
    9. 'a' → logprob: -4.548640251159668
    10. 'mat' → logprob: -4.923640251159668

Token 479: ' La' (ID: 3038)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.6213091611862183
    2. 'shape' → logprob: -2.246309280395508
    3. 'A' → logprob: -2.371309280395508
    4. ' shape' → logprob: -2.746309280395508
    5. ' graph' → logprob: -2.871309280395508
    6. 'n' → logprob: -3.371309280395508
    7. 'csr' → logprob: -4.246309280395508
    8. 'dtype' → logprob: -4.621309280395508
    9. ' A' → logprob: -4.746309280395508
    10. 'W' → logprob: -5.121309280395508

Token 480: ' forme' (ID: 27450)
  Prédit: 'csr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'csr' → logprob: -0.49531179666519165
    2. 'matrix' → logprob: -1.8703117370605469
    3. 'shape' → logprob: -2.245311737060547
    4. 'co' → logprob: -2.745311737060547
    5. 'graph' → logprob: -3.870311737060547
    6. 'data' → logprob: -4.245311737060547
    7. 'dtype' → logprob: -4.620311737060547
    8. 'c' → logprob: -5.370311737060547
    9. 'mat' → logprob: -5.870311737060547
    10. ' csr' → logprob: -5.995311737060547

Token 481: ' de' (ID: 334)
  Prédit: '=('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=(' → logprob: -0.01088357251137495
    2. '=' → logprob: -4.635883808135986
    3. ' =' → logprob: -7.010883808135986
    4. '(n' → logprob: -9.385883331298828
    5. '=n' → logprob: -9.760883331298828
    6. '   ' → logprob: -10.510883331298828
    7. '(' → logprob: -10.760883331298828
    8. ' =(' → logprob: -11.135883331298828
    9. '=
' → logprob: -11.385883331298828
    10. ' (' → logprob: -12.885883331298828

Token 482: ' la' (ID: 557)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.744674563407898
    2. '(' → logprob: -0.869674563407898
    3. ' (' → logprob: -2.2446746826171875
    4. '(
' → logprob: -11.119674682617188
    5. ' ' → logprob: -11.869674682617188
    6. '((' → logprob: -12.119674682617188
    7. '=(' → logprob: -12.119674682617188
    8. 'n' → logprob: -12.619674682617188
    9. '[n' → logprob: -12.744674682617188
    10. '(t' → logprob: -12.744674682617188

Token 483: ' matr' (ID: 25095)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10330753028392792
    2. 'csr' → logprob: -2.7283074855804443
    3. 'matrix' → logprob: -4.478307723999023
    4. 'c' → logprob: -4.603307723999023
    5. ' (' → logprob: -5.228307723999023
    6. '(
' → logprob: -5.978307723999023
    7. '(c' → logprob: -6.853307723999023
    8. 'co' → logprob: -7.478307723999023
    9. ' csr' → logprob: -7.853307723999023
    10. 'tuple' → logprob: -8.228307723999023

Token 484: 'ice' (ID: 603)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7501029372215271
    2. 'ix' → logprob: -1.7501029968261719
    3. 'ice' → logprob: -2.250102996826172
    4. ' (' → logprob: -2.500102996826172
    5. '(n' → logprob: -2.750102996826172
    6. 'x' → logprob: -3.000102996826172
    7. '(x' → logprob: -4.750102996826172
    8. '(m' → logprob: -4.875102996826172
    9. 'tr' → logprob: -5.375102996826172
    10. '(t' → logprob: -5.375102996826172

Token 485: ' est' (ID: 893)
  Prédit: '=('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=(' → logprob: -0.09186263382434845
    2. '=' → logprob: -2.591862678527832
    3. ' =' → logprob: -4.591862678527832
    4. '(n' → logprob: -6.341862678527832
    5. '=n' → logprob: -7.091862678527832
    6. ' =(' → logprob: -9.466862678527832
    7. '=
' → logprob: -9.841862678527832
    8. '=((' → logprob: -11.841862678527832
    9. ' (' → logprob: -11.966862678527832
    10. '=('' → logprob: -12.466862678527832

Token 486: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.01848340593278408
    2. ' (' → logprob: -4.018483638763428
    3. '(' → logprob: -8.01848316192627
    4. ' ' → logprob: -13.64348316192627
    5. 'n' → logprob: -13.76848316192627
    6. '[n' → logprob: -14.26848316192627
    7. '(
' → logprob: -14.89348316192627
    8. '((' → logprob: -15.14348316192627
    9. ' n' → logprob: -15.26848316192627
    10. '
' → logprob: -16.518484115600586

Token 487: 'n' (ID: 77)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.20386894047260284
    2. 'n' → logprob: -1.7038689851760864
    3. ' (' → logprob: -6.328868865966797
    4. '(' → logprob: -8.078868865966797
    5. ' n' → logprob: -8.078868865966797
    6. ')' → logprob: -11.328868865966797
    7. '(
' → logprob: -11.453868865966797
    8. ',' → logprob: -12.453868865966797
    9. '[n' → logprob: -12.453868865966797
    10. ',n' → logprob: -12.578868865966797

Token 488: '+' (ID: 10)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02345627173781395
    2. ',n' → logprob: -3.773456335067749
    3. 'n' → logprob: -9.023456573486328
    4. ' ,' → logprob: -10.148456573486328
    5. ',
' → logprob: -10.273456573486328
    6. ')' → logprob: -12.023456573486328
    7. '(n' → logprob: -13.023456573486328
    8. ' n' → logprob: -13.773456573486328
    9. ',m' → logprob: -13.898456573486328
    10. '(' → logprob: -14.273456573486328

Token 489: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0021231381688266993
    2. 'n' → logprob: -6.2521233558654785
    3. ' ' → logprob: -9.00212287902832
    4. ' n' → logprob: -10.25212287902832
    5. 'l' → logprob: -10.50212287902832
    6. ',' → logprob: -12.12712287902832
    7. '   ' → logprob: -14.12712287902832
    8. '```' → logprob: -14.50212287902832
    9. '  ' → logprob: -15.12712287902832
    10. ' l' → logprob: -15.25212287902832

Token 490: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005189409013837576
    2. ',n' → logprob: -5.505189418792725
    3. ' ,' → logprob: -7.130189418792725
    4. ')' → logprob: -8.380188941955566
    5. ',
' → logprob: -10.005188941955566
    6. '+' → logprob: -12.005188941955566
    7. '   ' → logprob: -12.255188941955566
    8. 'n' → logprob: -12.630188941955566
    9. ',)' → logprob: -12.755188941955566
    10. '```' → logprob: -13.255188941955566

Token 491: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.008618593215942383
    2. ' n' → logprob: -4.758618354797363
    3. ')' → logprob: -13.508618354797363
    4. '	n' → logprob: -13.883618354797363
    5. '   ' → logprob: -14.133618354797363
    6. ')n' → logprob: -15.133618354797363
    7. '
' → logprob: -15.633618354797363
    8. ' ' → logprob: -16.00861930847168
    9. '(n' → logprob: -16.25861930847168
    10. ' ' → logprob: -16.38361930847168

Token 492: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0086546391248703
    2. ',' → logprob: -4.883654594421387
    3. '1' → logprob: -7.758654594421387
    4. ',n' → logprob: -7.883654594421387
    5. 'n' → logprob: -9.008654594421387
    6. ' +' → logprob: -9.883654594421387
    7. ')' → logprob: -10.508654594421387
    8. ',+' → logprob: -11.258654594421387
    9. '+n' → logprob: -11.508654594421387
    10. '+
' → logprob: -11.758654594421387

Token 493: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0683535037969705e-05
    2. ' ' → logprob: -11.50001049041748
    3. '   ' → logprob: -15.50001049041748
    4. ')' → logprob: -16.125011444091797
    5. '```' → logprob: -17.000011444091797
    6. 'n' → logprob: -17.375011444091797
    7. '
' → logprob: -17.375011444091797
    8. ' n' → logprob: -17.875011444091797
    9. '2' → logprob: -17.937511444091797
    10. '...' → logprob: -18.000011444091797

Token 494: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003109145909547806
    2. ',' → logprob: -6.128108978271484
    3. ')
' → logprob: -7.628108978271484
    4. ' )' → logprob: -8.378108978271484
    5. '   ' → logprob: -9.503108978271484
    6. '),' → logprob: -9.628108978271484
    7. '))' → logprob: -10.878108978271484
    8. ')
' → logprob: -11.753108978271484
    9. ')

' → logprob: -12.253108978271484
    10. ' ,' → logprob: -12.253108978271484

Token 495: ' on' (ID: 402)
  Prédit: ' format'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' format' → logprob: -0.847805380821228
    2. 'dtype' → logprob: -1.222805380821228
    3. 'format' → logprob: -1.597805380821228
    4. ' dtype' → logprob: -3.7228055000305176
    5. ')' → logprob: -3.8478055000305176
    6. ' shape' → logprob: -4.597805500030518
    7. 'shape' → logprob: -4.597805500030518
    8. '   ' → logprob: -5.347805500030518
    9. ' ' → logprob: -6.597805500030518
    10. '(' → logprob: -6.722805500030518

Token 496: ' ajoute' (ID: 91611)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10603463649749756
    2. ' )' → logprob: -3.606034755706787
    3. ' continue' → logprob: -4.106034755706787
    4. ' assume' → logprob: -4.106034755706787
    5. 'shape' → logprob: -5.356034755706787
    6. ' utilise' → logprob: -5.731034755706787
    7. 's' → logprob: -6.106034755706787
    8. ' create' → logprob: -6.106034755706787
    9. ' shape' → logprob: -6.231034755706787
    10. 'continue' → logprob: -6.231034755706787

Token 497: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07411225140094757
    2. ' ' → logprob: -3.0741121768951416
    3. '(' → logprob: -4.699112415313721
    4. ',' → logprob: -4.824112415313721
    5. ' (' → logprob: -5.949112415313721
    6. ')' → logprob: -6.449112415313721
    7. ' ,' → logprob: -6.449112415313721
    8. '<|end|>' → logprob: -7.074112415313721
    9. ' n' → logprob: -7.824112415313721
    10. ' a' → logprob: -8.699111938476562

Token 498: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004438186064362526
    2. '(' → logprob: -5.629438400268555
    3. ' ' → logprob: -7.754438400268555
    4. ' (' → logprob: -8.004438400268555
    5. ',' → logprob: -10.254438400268555
    6. '(n' → logprob: -10.879438400268555
    7. ')' → logprob: -12.004438400268555
    8. ' n' → logprob: -12.629438400268555
    9. '(
' → logprob: -13.004438400268555
    10. ' one' → logprob: -13.379438400268555

Token 499: ' car' (ID: 1669)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0016082972288131714
    2. ' )' → logprob: -6.751608371734619
    3. ')
' → logprob: -8.626607894897461
    4. ',' → logprob: -9.001607894897461
    5. ')}' → logprob: -11.001607894897461
    6. '   ' → logprob: -11.001607894897461
    7. '),' → logprob: -11.126607894897461
    8. '))' → logprob: -11.251607894897461
    9. ')
' → logprob: -11.251607894897461
    10. ',)' → logprob: -11.376607894897461

Token 500: ',' (ID: 11)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.36879339814186096
    2. 'les' → logprob: -2.118793487548828
    3. ' on' → logprob: -2.868793487548828
    4. 'n' → logprob: -3.868793487548828
    5. ' l' → logprob: -3.993793487548828
    6. 'range' → logprob: -4.118793487548828
    7. ' le' → logprob: -4.368793487548828
    8. ' n' → logprob: -4.618793487548828
    9. ' range' → logprob: -4.618793487548828
    10. ' souvent' → logprob: -4.743793487548828

Token 501: ' dans' (ID: 2671)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.379293829202652
    2. ')' → logprob: -1.6292937994003296
    3. 'n' → logprob: -2.754293918609619
    4. ' )' → logprob: -3.379293918609619
    5. '<|end|>' → logprob: -4.379293918609619
    6. ' ' → logprob: -5.379293918609619
    7. '(n' → logprob: -6.504293918609619
    8. ')n' → logprob: -7.129293918609619
    9. ' 
' → logprob: -8.004293441772461
    10. ' ' → logprob: -8.129293441772461

Token 502: ' certains' (ID: 30681)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' le' → logprob: -1.33707857131958
    2. ' range' → logprob: -1.33707857131958
    3. ' la' → logprob: -2.33707857131958
    4. ' n' → logprob: -2.71207857131958
    5. ' les' → logprob: -2.96207857131958
    6. 'range' → logprob: -3.21207857131958
    7. ' Python' → logprob: -3.33707857131958
    8. ' numpy' → logprob: -3.46207857131958
    9. 'n' → logprob: -3.58707857131958
    10. ' graph' → logprob: -3.96207857131958

Token 503: ' cas' (ID: 2108)
  Prédit: ' graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' graph' → logprob: -1.164574146270752
    2. ' contexts' → logprob: -2.039574146270752
    3. ' range' → logprob: -2.289574146270752
    4. ' cas' → logprob: -2.664574146270752
    5. 'graph' → logprob: -2.664574146270752
    6. ')' → logprob: -2.914574146270752
    7. 'cases' → logprob: -3.164574146270752
    8. ' context' → logprob: -3.539574146270752
    9. 'graphs' → logprob: -3.664574146270752
    10. ' cases' → logprob: -3.914574146270752

Token 504: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03695663809776306
    2. ',n' → logprob: -4.161956787109375
    3. ' ,' → logprob: -4.286956787109375
    4. ')' → logprob: -6.411956787109375
    5. '(n' → logprob: -6.661956787109375
    6. ' n' → logprob: -6.786956787109375
    7. '   ' → logprob: -7.036956787109375
    8. ' (' → logprob: -7.161956787109375
    9. 'n' → logprob: -7.661956787109375
    10. ',
' → logprob: -7.911956787109375

Token 505: ' les' (ID: 1341)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.0571767091751099
    2. ' on' → logprob: -1.4321767091751099
    3. ' n' → logprob: -1.5571767091751099
    4. ' les' → logprob: -2.0571765899658203
    5. ' the' → logprob: -3.5571765899658203
    6. ' le' → logprob: -4.68217658996582
    7. 'the' → logprob: -4.93217658996582
    8. 'on' → logprob: -5.30717658996582
    9. ' la' → logprob: -5.43217658996582
    10. 'indices' → logprob: -5.80717658996582

Token 506: ' indices' (ID: 30378)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.864056408405304
    2. ' indices' → logprob: -1.7390563488006592
    3. 'n' → logprob: -2.364056348800659
    4. 'gr' → logprob: -2.739056348800659
    5. 'graph' → logprob: -3.114056348800659
    6. 's' → logprob: -3.364056348800659
    7. ' graph' → logprob: -3.364056348800659
    8. ' somm' → logprob: -3.364056348800659
    9. ' n' → logprob: -3.614056348800659
    10. 'graphs' → logprob: -3.989056348800659

Token 507: ' sont' (ID: 5242)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.44105064868927
    2. ' =' → logprob: -1.81605064868927
    3. '<|end|>' → logprob: -2.5660505294799805
    4. '=' → logprob: -3.6910505294799805
    5. ',' → logprob: -3.8160505294799805
    6. ' ' → logprob: -4.4410505294799805
    7. ' ,' → logprob: -4.9410505294799805
    8. ' are' → logprob: -4.9410505294799805
    9. ')' → logprob: -5.0660505294799805
    10. ' sont' → logprob: -5.3160505294799805

Token 508: ' num' (ID: 2269)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6348172426223755
    2. ' n' → logprob: -1.0098172426223755
    3. '0' → logprob: -4.259817123413086
    4. ' range' → logprob: -4.384817123413086
    5. ' ' → logprob: -4.509817123413086
    6. ' utilisés' → logprob: -4.759817123413086
    7. 'range' → logprob: -5.009817123413086
    8. 'import' → logprob: -5.134817123413086
    9. ' bas' → logprob: -5.134817123413086
    10. '1' → logprob: -5.384817123413086

Token 509: 'é' (ID: 377)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1667628288269043
    2. ' +' → logprob: -2.9167628288269043
    3. '   ' → logprob: -3.1667628288269043
    4. '  ' → logprob: -4.166762828826904
    5. 'p' → logprob: -4.291762828826904
    6. ' ' → logprob: -5.041762828826904
    7. 'py' → logprob: -6.166762828826904
    8. '_' → logprob: -6.291762828826904
    9. '       ' → logprob: -6.416762828826904
    10. 'éros' → logprob: -6.416762828826904

Token 510: 'rot' (ID: 8150)
  Prédit: 'rot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rot' → logprob: -0.00870060920715332
    2. 'ros' → logprob: -5.758700370788574
    3. 'ro' → logprob: -6.008700370788574
    4. 'r' → logprob: -6.258700370788574
    5. 'rés' → logprob: -7.133700370788574
    6. 'rots' → logprob: -8.758700370788574
    7. 'rotation' → logprob: -9.508700370788574
    8. 'res' → logprob: -10.758700370788574
    9. 'rote' → logprob: -11.258700370788574
    10. 'rosis' → logprob: -11.758700370788574

Token 511: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.011063262820243835
    2. 'é' → logprob: -5.261063098907471
    3. '0' → logprob: -5.886063098907471
    4. '   ' → logprob: -7.011063098907471
    5. '1' → logprob: -7.511063098907471
    6. 'es' → logprob: -7.636063098907471
    7. ' ' → logprob: -7.886063098907471
    8. 'rés' → logprob: -8.761063575744629
    9. 'ées' → logprob: -9.761063575744629
    10. 's' → logprob: -9.886063575744629

Token 512: ' à' (ID: 1221)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0128363370895386
    2. ',n' → logprob: -1.5128363370895386
    3. '=n' → logprob: -2.137836456298828
    4. '=' → logprob: -2.512836456298828
    5. '(n' → logprob: -2.637836456298828
    6. '   ' → logprob: -3.387836456298828
    7. '=(' → logprob: -3.512836456298828
    8. ',
' → logprob: -3.637836456298828
    9. 'n' → logprob: -4.887836456298828
    10. '	' → logprob: -5.012836456298828

Token 513: ' partir' (ID: 12100)
  Prédit: ' partir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' partir' → logprob: -0.5115647315979004
    2. 'n' → logprob: -1.0115647315979004
    3. 'part' → logprob: -4.5115647315979
    4. '1' → logprob: -4.6365647315979
    5. ' n' → logprob: -4.6365647315979
    6. ' part' → logprob: -5.6365647315979
    7. 'l' → logprob: -7.1365647315979
    8. ' ' → logprob: -7.7615647315979
    9. 'range' → logprob: -8.011564254760742
    10. 'from' → logprob: -8.136564254760742

Token 514: ' de' (ID: 334)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.11757323145866394
    2. '0' → logprob: -3.2425732612609863
    3. '(' → logprob: -3.7425732612609863
    4. ' de' → logprob: -3.8675732612609863
    5. 'de' → logprob: -4.492573261260986
    6. ',' → logprob: -5.367573261260986
    7. '   ' → logprob: -5.742573261260986
    8. '(n' → logprob: -5.867573261260986
    9. '=' → logprob: -6.617573261260986
    10. 'd' → logprob: -6.742573261260986

Token 515: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1012730821967125
    2. '0' → logprob: -2.3512730598449707
    3. ' ' → logprob: -6.851273059844971
    4. '   ' → logprob: -12.101273536682129
    5. '
' → logprob: -14.101273536682129
    6. '  ' → logprob: -14.476273536682129
    7. ' ' → logprob: -14.976273536682129
    8. 'n' → logprob: -15.976273536682129
    9. 'zero' → logprob: -16.663772583007812
    10. '    ' → logprob: -16.726272583007812

Token 516: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014412643387913704
    2. '0' → logprob: -4.264412879943848
    3. 'n' → logprob: -8.514412879943848
    4. ' ' → logprob: -10.764412879943848
    5. '
' → logprob: -11.014412879943848
    6. '   ' → logprob: -12.014412879943848
    7. ' n' → logprob: -13.514412879943848
    8. '```' → logprob: -13.764412879943848
    9. 'zero' → logprob: -14.639412879943848
    10. '`' → logprob: -14.889412879943848

Token 517: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5503475069999695
    2. ')' → logprob: -1.4253475666046143
    3. ',' → logprob: -1.9253475666046143
    4. ',
' → logprob: -3.8003475666046143
    5. ')
' → logprob: -4.925347328186035
    6. 's' → logprob: -6.550347328186035
    7. ' ,' → logprob: -6.675347328186035
    8. '
' → logprob: -7.050347328186035
    9. '),' → logprob: -7.550347328186035
    10. ',
' → logprob: -8.175347328186035

Token 518: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47481876611709595
    2. ')' → logprob: -1.4748187065124512
    3. ',' → logprob: -2.224818706512451
    4. 'data' → logprob: -4.099818706512451
    5. 'A' → logprob: -4.849818706512451
    6. ',
' → logprob: -5.599818706512451
    7. ' ,' → logprob: -6.724818706512451
    8. ' A' → logprob: -6.974818706512451
    9. 's' → logprob: -7.099818706512451
    10. ')
' → logprob: -7.099818706512451

Token 519: ' matrix' (ID: 12248)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -1.5329501628875732
    2. '   ' → logprob: -1.5329501628875732
    3. 'w' → logprob: -1.9079501628875732
    4. 'A' → logprob: -2.2829501628875732
    5. 'G' → logprob: -2.4079501628875732
    6. 'graph' → logprob: -2.9079501628875732
    7. 'W' → logprob: -3.2829501628875732
    8. 'gr' → logprob: -3.6579501628875732
    9. 'data' → logprob: -3.7829501628875732
    10. 'a' → logprob: -4.157950401306152

Token 520: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6935103535652161
    2. ' =' → logprob: -0.6935103535652161
    3. '=(' → logprob: -8.818510055541992
    4. '(' → logprob: -9.693510055541992
    5. '=c' → logprob: -10.193510055541992
    6. 's' → logprob: -10.818510055541992
    7. ' =(' → logprob: -11.068510055541992
    8. '=s' → logprob: -11.068510055541992
    9. 'csr' → logprob: -11.568510055541992
    10. ' ' → logprob: -11.943510055541992

Token 521: ' csr' (ID: 162927)
  Prédit: 'csr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'csr' → logprob: -0.004408871289342642
    2. 'co' → logprob: -5.504408836364746
    3. 'dok' → logprob: -8.129408836364746
    4. ' csr' → logprob: -10.879408836364746
    5. 'c' → logprob: -11.254408836364746
    6. 'l' → logprob: -14.004408836364746
    7. 'cs' → logprob: -14.004408836364746
    8. 'sc' → logprob: -14.629408836364746
    9. 'dia' → logprob: -15.254408836364746
    10. 'di' → logprob: -15.254408836364746

Token 522: '_matrix' (ID: 23431)
  Prédit: '_matrix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_matrix' → logprob: -3.583550642360933e-05
    2. 'matrix' → logprob: -10.250036239624023
    3. '_m' → logprob: -16.000036239624023
    4. '_mat' → logprob: -16.250036239624023
    5. 'mat' → logprob: -17.375036239624023
    6. '_array' → logprob: -17.625036239624023
    7. '_' → logprob: -17.875036239624023
    8. '_MATRIX' → logprob: -18.125036239624023
    9. 'm' → logprob: -18.375036239624023
    10. 'atrix' → logprob: -18.750036239624023

Token 523: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.003856489434838295
    2. '(' → logprob: -5.628856658935547
    3. '(
' → logprob: -8.878856658935547
    4. '(t' → logprob: -9.128856658935547
    5. ' ((' → logprob: -13.003856658935547
    6. ' ' → logprob: -13.128856658935547
    7. '   ' → logprob: -13.628856658935547
    8. '(([' → logprob: -13.628856658935547
    9. '(
' → logprob: -13.878856658935547
    10. '(

' → logprob: -16.003856658935547

Token 524: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -3.35706390615087e-05
    2. ' t' → logprob: -11.000033378601074
    3. 'array' → logprob: -11.750033378601074
    4. '   ' → logprob: -12.625033378601074
    5. '           ' → logprob: -13.750033378601074
    6. '(t' → logprob: -13.750033378601074
    7. '	t' → logprob: -14.250033378601074
    8. '       ' → logprob: -14.375033378601074
    9. ' ' → logprob: -15.125033378601074
    10. '    ' → logprob: -15.250033378601074

Token 525: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.07900413125753403
    2. '[m' → logprob: -2.5790040493011475
    3. ' [' → logprob: -9.954004287719727
    4. '[t' → logprob: -11.079004287719727
    5. '[
' → logprob: -11.454004287719727
    6. '[l' → logprob: -11.704004287719727
    7. 'm' → logprob: -11.829004287719727
    8. '   ' → logprob: -12.079004287719727
    9. '[(' → logprob: -12.829004287719727
    10. '(' → logprob: -13.204004287719727

Token 526: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0003637097543105483
    2. 'm' → logprob: -8.00036334991455
    3. ' ' → logprob: -11.00036334991455
    4. '   ' → logprob: -11.50036334991455
    5. '(' → logprob: -14.25036334991455
    6. '
' → logprob: -15.37536334991455
    7. ' m' → logprob: -15.87536334991455
    8. '  ' → logprob: -16.125364303588867
    9. '[' → logprob: -16.375364303588867
    10. ':m' → logprob: -16.750364303588867

Token 527: ':m' (ID: 83740)
  Prédit: ':m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':m' → logprob: -0.0037129041738808155
    2. 'm' → logprob: -6.128713130950928
    3. ':' → logprob: -7.253713130950928
    4. ' :' → logprob: -7.753713130950928
    5. ',m' → logprob: -9.25371265411377
    6. '[m' → logprob: -9.75371265411377
    7. '[:' → logprob: -10.00371265411377
    8. ',' → logprob: -10.37871265411377
    9. '   ' → logprob: -10.50371265411377
    10. '
' → logprob: -10.50371265411377

Token 528: ':' (ID: 25)
  Prédit: '],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.059183474630117416
    2. ':m' → logprob: -3.934183359146118
    3. ':' → logprob: -4.434183597564697
    4. 'm' → logprob: -4.559183597564697
    5. '::' → logprob: -5.184183597564697
    6. ',' → logprob: -5.559183597564697
    7. ':t' → logprob: -6.309183597564697
    8. ':],' → logprob: -6.934183597564697
    9. '],[' → logprob: -7.184183597564697
    10. '],
' → logprob: -7.184183597564697

Token 529: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -8.2994620242971e-06
    2. ' ' → logprob: -11.750008583068848
    3. '   ' → logprob: -15.000008583068848
    4. '  ' → logprob: -17.37500762939453
    5. '```' → logprob: -17.37500762939453
    6. ',' → logprob: -17.75000762939453
    7. ']' → logprob: -17.87500762939453
    8. '],' → logprob: -18.00000762939453
    9. '       ' → logprob: -19.12500762939453
    10. '
' → logprob: -19.12500762939453

Token 530: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.0011728443205356598
    2. ',' → logprob: -7.37617301940918
    3. ']' → logprob: -7.87617301940918
    4. ' ],' → logprob: -9.62617301940918
    5. '],
' → logprob: -10.00117301940918
    6. '],[' → logprob: -10.50117301940918
    7. '),' → logprob: -12.00117301940918
    8. ',t' → logprob: -12.12617301940918
    9. ' ,' → logprob: -12.37617301940918
    10. 't' → logprob: -13.62617301940918

Token 531: ' (' (ID: 350)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.12785470485687256
    2. ' (' → logprob: -2.127854824066162
    3. 't' → logprob: -7.127854824066162
    4. '(' → logprob: -9.377854347229004
    5. ' ' → logprob: -11.127854347229004
    6. ' t' → logprob: -11.252854347229004
    7. '(
' → logprob: -12.877854347229004
    8. '   ' → logprob: -13.252854347229004
    9. '(int' → logprob: -13.502854347229004
    10. '  ' → logprob: -14.127854347229004

Token 532: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0009146820520982146
    2. ' t' → logprob: -7.000914573669434
    3. '   ' → logprob: -13.500914573669434
    4. '	t' → logprob: -13.750914573669434
    5. '(t' → logprob: -15.250914573669434
    6. ' ' → logprob: -15.500914573669434
    7. '    ' → logprob: -16.50091552734375
    8. '`t' → logprob: -16.75091552734375
    9. '  ' → logprob: -17.25091552734375
    10. '       ' → logprob: -17.50091552734375

Token 533: '[:' (ID: 7808)
  Prédit: '[:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.00018339496455155313
    2. '[' → logprob: -8.62518310546875
    3. '[:,' → logprob: -13.00018310546875
    4. ' [:' → logprob: -14.37518310546875
    5. '[
' → logprob: -14.87518310546875
    6. '[:-' → logprob: -15.62518310546875
    7. '][:' → logprob: -15.87518310546875
    8. '(:' → logprob: -15.87518310546875
    9. '0' → logprob: -16.25018310546875
    10. '
' → logprob: -16.62518310546875

Token 534: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.00015133652777876705
    2. ' m' → logprob: -9.500151634216309
    3. '0' → logprob: -10.250151634216309
    4. ':m' → logprob: -10.750151634216309
    5. ':' → logprob: -12.000151634216309
    6. '   ' → logprob: -12.250151634216309
    7. '[:' → logprob: -12.375151634216309
    8. ' ' → logprob: -13.625151634216309
    9. '	m' → logprob: -13.750151634216309
    10. '[' → logprob: -14.125151634216309

Token 535: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9172744154930115
    2. ':' → logprob: -0.9172744154930115
    3. ':m' → logprob: -1.9172744750976562
    4. ',:' → logprob: -3.9172744750976562
    5. ',m' → logprob: -4.417274475097656
    6. ':t' → logprob: -4.417274475097656
    7. ' :' → logprob: -5.792274475097656
    8. '[:' → logprob: -6.167274475097656
    9. ' ,' → logprob: -6.917274475097656
    10. 'm' → logprob: -7.167274475097656

Token 536: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0016826784703880548
    2. 'm' → logprob: -6.501682758331299
    3. ' ' → logprob: -9.00168228149414
    4. '   ' → logprob: -10.87668228149414
    5. 't' → logprob: -11.12668228149414
    6. ' m' → logprob: -12.00168228149414
    7. ',' → logprob: -12.50168228149414
    8. '[' → logprob: -13.00168228149414
    9. '  ' → logprob: -13.00168228149414
    10. '```' → logprob: -13.50168228149414

Token 537: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05141296237707138
    2. '],' → logprob: -3.176413059234619
    3. ' ,' → logprob: -5.051413059234619
    4. ',t' → logprob: -6.301413059234619
    5. 't' → logprob: -9.676412582397461
    6. ',
' → logprob: -10.551412582397461
    7. ' ' → logprob: -11.301412582397461
    8. ',m' → logprob: -11.426412582397461
    9. '   ' → logprob: -12.301412582397461
    10. ' ],' → logprob: -12.426412582397461

Token 538: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.03804183006286621
    2. ' t' → logprob: -3.288041830062866
    3. '	t' → logprob: -15.163042068481445
    4. ' ' → logprob: -16.288042068481445
    5. '   ' → logprob: -17.413042068481445
    6. '_t' → logprob: -17.663042068481445
    7. '`t' → logprob: -18.413042068481445
    8. '    ' → logprob: -18.538042068481445
    9. ')t' → logprob: -18.663042068481445
    10. '
' → logprob: -18.913042068481445

Token 539: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00020580526324920356
    2. '1' → logprob: -8.500205993652344
    3. '   ' → logprob: -13.875205993652344
    4. ' [' → logprob: -14.875205993652344
    5. 't' → logprob: -15.625205993652344
    6. 'm' → logprob: -15.875205993652344
    7. '
' → logprob: -16.000205993652344
    8. '[:' → logprob: -16.125205993652344
    9. '```' → logprob: -16.250205993652344
    10. '[
' → logprob: -16.375205993652344

Token 540: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9981420336989686e-05
    2. ' ' → logprob: -11.000020027160645
    3. 'm' → logprob: -13.250020027160645
    4. '[' → logprob: -14.500020027160645
    5. '   ' → logprob: -14.875020027160645
    6. '
' → logprob: -15.500020027160645
    7. '```' → logprob: -16.000019073486328
    8. '[m' → logprob: -17.000019073486328
    9. ':m' → logprob: -17.125019073486328
    10. ':' → logprob: -17.687519073486328

Token 541: ':m' (ID: 83740)
  Prédit: ':m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':m' → logprob: -0.00040099851321429014
    2. '[:' → logprob: -8.50040054321289
    3. 'm' → logprob: -8.75040054321289
    4. '[m' → logprob: -10.50040054321289
    5. ' :' → logprob: -12.62540054321289
    6. ':' → logprob: -12.87540054321289
    7. '```' → logprob: -13.62540054321289
    8. '   ' → logprob: -14.37540054321289
    9. '][:' → logprob: -14.62540054321289
    10. '[' → logprob: -14.75040054321289

Token 542: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004373509436845779
    2. '3' → logprob: -5.879373550415039
    3. 'm' → logprob: -6.504373550415039
    4. ':m' → logprob: -10.754373550415039
    5. '```' → logprob: -11.254373550415039
    6. ' m' → logprob: -11.504373550415039
    7. '   ' → logprob: -11.754373550415039
    8. ' :' → logprob: -12.254373550415039
    9. '[' → logprob: -12.254373550415039
    10. '*' → logprob: -13.504373550415039

Token 543: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.75001049041748
    3. 'm' → logprob: -14.00001049041748
    4. '```' → logprob: -14.62501049041748
    5. '   ' → logprob: -14.75001049041748
    6. '])' → logprob: -16.375009536743164
    7. '  ' → logprob: -16.500009536743164
    8. ']' → logprob: -16.562509536743164
    9. '(' → logprob: -17.187509536743164
    10. '       ' → logprob: -17.562509536743164

Token 544: '])),' (ID: 176552)
  Prédit: '])),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])),' → logprob: -0.049406565725803375
    2. ']),' → logprob: -3.4244065284729004
    3. ']' → logprob: -4.5494065284729
    4. ']))' → logprob: -5.5494065284729
    5. '],' → logprob: -7.5494065284729
    6. ']))
' → logprob: -9.049407005310059
    7. '))),' → logprob: -9.049407005310059
    8. '])' → logprob: -9.174407005310059
    9. ')),' → logprob: -9.174407005310059
    10. '])))' → logprob: -10.174407005310059

Token 545: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.02995874732732773
    2. ' (' → logprob: -4.029958724975586
    3. 'shape' → logprob: -4.904958724975586
    4. '(shape' → logprob: -5.529958724975586
    5. ' shape' → logprob: -8.529958724975586
    6. '(' → logprob: -9.279958724975586
    7. '(dtype' → logprob: -10.029958724975586
    8. 'dtype' → logprob: -11.779958724975586
    9. ' ' → logprob: -12.029958724975586
    10. '(N' → logprob: -12.654958724975586

Token 546: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -5.157039049663581e-05
    2. ' n' → logprob: -10.000051498413086
    3. '(n' → logprob: -12.250051498413086
    4. '   ' → logprob: -14.625051498413086
    5. '	n' → logprob: -14.750051498413086
    6. ' ' → logprob: -16.000051498413086
    7. ',n' → logprob: -16.125051498413086
    8. ')n' → logprob: -16.750051498413086
    9. 'int' → logprob: -17.250051498413086
    10. '
' → logprob: -17.250051498413086

Token 547: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -3.2617008400848135e-05
    2. ' +' → logprob: -10.375032424926758
    3. '+
' → logprob: -14.250032424926758
    4. '+n' → logprob: -14.375032424926758
    5. '+l' → logprob: -16.625032424926758
    6. 'plus' → logprob: -18.625032424926758
    7. '+,' → logprob: -19.250032424926758
    8. ',n' → logprob: -19.875032424926758
    9. ',' → logprob: -19.875032424926758
    10. 'n' → logprob: -20.000032424926758

Token 548: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.500001907348633
    3. '   ' → logprob: -16.250001907348633
    4. '
' → logprob: -17.125001907348633
    5. '```' → logprob: -18.750001907348633
    6. '  ' → logprob: -18.875001907348633
    7. ',' → logprob: -19.375001907348633
    8. ')' → logprob: -19.750001907348633
    9. '

' → logprob: -20.187501907348633
    10. 'n' → logprob: -20.187501907348633

Token 549: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015322434483096004
    2. ',n' → logprob: -6.501532077789307
    3. ',
' → logprob: -10.751532554626465
    4. ' ,' → logprob: -11.876532554626465
    5. ')' → logprob: -14.251532554626465
    6. ',

' → logprob: -15.501532554626465
    7. ',m' → logprob: -15.751532554626465
    8. ',)' → logprob: -15.876532554626465
    9. ',
' → logprob: -16.25153160095215
    10. '<|end|>' → logprob: -16.75153160095215

Token 550: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.004090274218469858
    2. ' n' → logprob: -5.504090309143066
    3. '(n' → logprob: -11.379090309143066
    4. '	n' → logprob: -15.504090309143066
    5. ')n' → logprob: -16.37908935546875
    6. ' (' → logprob: -16.62908935546875
    7. ' ' → logprob: -18.00408935546875
    8. ' ' → logprob: -18.50408935546875
    9. '_n' → logprob: -18.50408935546875
    10. ',n' → logprob: -18.50408935546875

Token 551: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -6.2729995988775045e-06
    2. '1' → logprob: -12.500006675720215
    3. '+
' → logprob: -13.750006675720215
    4. ' +' → logprob: -14.125006675720215
    5. '+l' → logprob: -14.875006675720215
    6. '+n' → logprob: -15.125006675720215
    7. '+)' → logprob: -16.8750057220459
    8. ')+' → logprob: -18.3750057220459
    9. '+</' → logprob: -18.6250057220459
    10. ')' → logprob: -18.7500057220459

Token 552: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.292907877039397e-06
    2. ' ' → logprob: -12.75000286102295
    3. ')' → logprob: -15.50000286102295
    4. 'n' → logprob: -16.875003814697266
    5. '<|end|>' → logprob: -18.000003814697266
    6. '۱' → logprob: -18.062503814697266
    7. 'l' → logprob: -18.625003814697266
    8. '   ' → logprob: -18.687503814697266
    9. '```' → logprob: -18.687503814697266
    10. '0' → logprob: -19.062503814697266

Token 553: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0030118150170892477
    2. '),' → logprob: -6.128011703491211
    3. ')' → logprob: -7.128011703491211
    4. ')))' → logprob: -11.378011703491211
    5. ' ))' → logprob: -11.753011703491211
    6. '))
' → logprob: -12.753011703491211
    7. '));' → logprob: -14.878011703491211
    8. ')).' → logprob: -15.003011703491211
    9. '))

' → logprob: -15.128011703491211
    10. ')),' → logprob: -15.378011703491211

Token 554: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005013871006667614
    2. ',' → logprob: -5.505013942718506
    3. '   ' → logprob: -7.255013942718506
    4. ' )' → logprob: -9.630013465881348
    5. ',)' → logprob: -9.630013465881348
    6. ',
' → logprob: -10.005013465881348
    7. ')
' → logprob: -11.130013465881348
    8. '[' → logprob: -11.255013465881348
    9. ').' → logprob: -12.630013465881348
    10. '),' → logprob: -13.005013465881348

Token 555: ' #' (ID: 1069)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06751649081707001
    2. '   ' → logprob: -2.817516565322876
    3. ',' → logprob: -6.317516326904297
    4. '
' → logprob: -6.442516326904297
    5. ')
' → logprob: -7.942516326904297
    6. '    
' → logprob: -8.067516326904297
    7. ' )' → logprob: -8.442516326904297
    8. '' → logprob: -8.692516326904297
    9. '[' → logprob: -8.817516326904297
    10. '  
' → logprob: -8.817516326904297

Token 556: ' Première' (ID: 179764)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.6244208812713623
    2. 'd' → logprob: -1.4994208812713623
    3. 'q' → logprob: -2.9994208812713623
    4. '#' → logprob: -3.6244208812713623
    5. 'res' → logprob: -3.6244208812713623
    6. 'matrix' → logprob: -3.7494208812713623
    7. 't' → logprob: -3.8744208812713623
    8. 'n' → logprob: -3.9994208812713623
    9. '   ' → logprob: -4.624421119689941
    10. 'r' → logprob: -4.749421119689941

Token 557: ' application' (ID: 5200)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.5292675495147705
    2. 'inf' → logprob: -2.0292675495147705
    3. ' =' → logprob: -2.2792675495147705
    4. 'distance' → logprob: -2.6542675495147705
    5. 'ligne' → logprob: -3.1542675495147705
    6. '_inf' → logprob: -3.1542675495147705
    7. '=' → logprob: -3.2792675495147705
    8. '#' → logprob: -3.2792675495147705
    9. 'for' → logprob: -3.4042675495147705
    10. 'token' → logprob: -3.5292675495147705

Token 558: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34494587779045105
    2. ' =' → logprob: -1.7199459075927734
    3. '=' → logprob: -2.9699459075927734
    4. 'de' → logprob: -3.8449459075927734
    5. ' de' → logprob: -4.594945907592773
    6. 'f' → logprob: -5.344945907592773
    7. '(f' → logprob: -5.344945907592773
    8. 'result' → logprob: -5.594945907592773
    9. '=f' → logprob: -6.469945907592773
    10. '(' → logprob: -6.594945907592773

Token 559: ' l' (ID: 305)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0030358207877725363
    2. ' f' → logprob: -6.253036022186279
    3. 'matrix' → logprob: -7.253036022186279
    4. '(f' → logprob: -9.378035545349121
    5. 'cs' → logprob: -9.378035545349121
    6. 'lambda' → logprob: -10.378035545349121
    7. 'print' → logprob: -11.003035545349121
    8. 'result' → logprob: -11.253035545349121
    9. 'dist' → logprob: -11.503035545349121
    10. 'l' → logprob: -11.503035545349121

Token 560: ''' (ID: 6)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.15514115989208221
    2. ' f' → logprob: -2.9051411151885986
    3. 'matrix' → logprob: -3.7801411151885986
    4. '(f' → logprob: -4.780141353607178
    5. 'ambda' → logprob: -4.905141353607178
    6. 'ine' → logprob: -5.655141353607178
    7. 'en' → logprob: -5.655141353607178
    8. 'l' → logprob: -5.655141353607178
    9. '_f' → logprob: -5.717641353607178
    10. 't' → logprob: -5.717641353607178

Token 561: 'alg' (ID: 15258)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.006264235358685255
    2. 'matrix' → logprob: -5.7562642097473145
    3. 'cs' → logprob: -7.2562642097473145
    4. ' f' → logprob: -7.5062642097473145
    5. 'graph' → logprob: -8.256264686584473
    6. 'csr' → logprob: -8.381264686584473
    7. 'function' → logprob: -9.131264686584473
    8. 'minimum' → logprob: -9.131264686584473
    9. 'F' → logprob: -9.256264686584473
    10. 'mat' → logprob: -9.443764686584473

Token 562: 'orith' (ID: 9996)
  Prédit: 'orithm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orithm' → logprob: -0.517052412033081
    2. 'or' → logprob: -1.892052412033081
    3. 'orith' → logprob: -2.392052412033081
    4. 'ort' → logprob: -2.642052412033081
    5. 'f' → logprob: -3.642052412033081
    6. '   ' → logprob: -4.64205265045166
    7. 'ow' → logprob: -4.76705265045166
    8. 'matrix' → logprob: -5.14205265045166
    9. 'graph' → logprob: -5.26705265045166
    10. 'os' → logprob: -5.51705265045166

Token 563: 'me' (ID: 1047)
  Prédit: 'me'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'me' → logprob: -0.00024953833781182766
    2. 'm' → logprob: -9.125249862670898
    3. 'f' → logprob: -9.750249862670898
    4. 'th' → logprob: -10.125249862670898
    5. 't' → logprob: -11.500249862670898
    6. 'mes' → logprob: -11.500249862670898
    7. 'ith' → logprob: -12.250249862670898
    8. 'def' → logprob: -12.375249862670898
    9. '   ' → logprob: -12.875249862670898
    10. 'hme' → logprob: -13.000249862670898

Token 564: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2617623805999756
    2. 'res' → logprob: -2.2617623805999756
    3. 'matrix' → logprob: -2.3867623805999756
    4. 'd' → logprob: -2.3867623805999756
    5. 'dist' → logprob: -2.3867623805999756
    6. 'result' → logprob: -2.5117623805999756
    7. 'D' → logprob: -2.8867623805999756
    8. 'distance' → logprob: -3.5117623805999756
    9. 'f' → logprob: -3.6367623805999756
    10. ')' → logprob: -3.6367623805999756

Token 565: ' Floyd' (ID: 76639)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.01192460861057043
    2. 'cs' → logprob: -4.886924743652344
    3. ' f' → logprob: -6.011924743652344
    4. 'graph' → logprob: -7.636924743652344
    5. 'F' → logprob: -8.386924743652344
    6. 's' → logprob: -8.636924743652344
    7. 'dist' → logprob: -9.136924743652344
    8. ' shortest' → logprob: -9.574424743652344
    9. 'c' → logprob: -9.824424743652344
    10. 'short' → logprob: -9.886924743652344

Token 566: '-W' (ID: 14439)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2944936156272888
    2. '_w' → logprob: -1.4194936752319336
    3. '_d' → logprob: -5.919493675231934
    4. '   ' → logprob: -6.169493675231934
    5. ')' → logprob: -6.794493675231934
    6. '_W' → logprob: -6.919493675231934
    7. ' =' → logprob: -6.919493675231934
    8. '=' → logprob: -6.919493675231934
    9. '_,' → logprob: -7.419493675231934
    10. '_=' → logprob: -7.669493675231934

Token 567: 'ar' (ID: 277)
  Prédit: 'ar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.0009863656014204025
    2. '_ar' → logprob: -7.625986576080322
    3. 'all' → logprob: -8.875986099243164
    4. '_short' → logprob: -9.125986099243164
    5. '_' → logprob: -10.250986099243164
    6. '_all' → logprob: -10.250986099243164
    7. 'ars' → logprob: -10.375986099243164
    8. 'al' → logprob: -10.875986099243164
    9. 'ар' → logprob: -10.875986099243164
    10. 'arshal' → logprob: -10.875986099243164

Token 568: 'shall' (ID: 30275)
  Prédit: 'shall'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shall' → logprob: -0.3237972557544708
    2. '_sh' → logprob: -1.6987972259521484
    3. 'all' → logprob: -3.3237972259521484
    4. '_all' → logprob: -3.5737972259521484
    5. '_w' → logprob: -3.9487972259521484
    6. '_s' → logprob: -5.823797225952148
    7. '_wall' → logprob: -6.073797225952148
    8. 'sh' → logprob: -7.198797225952148
    9. '_walk' → logprob: -7.323797225952148
    10. '_' → logprob: -7.448797225952148

Token 569: ' pour' (ID: 1930)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -1.2983484268188477
    2. 'd' → logprob: -1.7983484268188477
    3. '(matrix' → logprob: -1.7983484268188477
    4. 'matrix' → logprob: -2.1733484268188477
    5. 'graph' → logprob: -2.5483484268188477
    6. '   ' → logprob: -2.7983484268188477
    7. 'D' → logprob: -3.1733484268188477
    8. 'distance' → logprob: -4.048348426818848
    9. ')' → logprob: -4.173348426818848
    10. 'res' → logprob: -4.298348426818848

Token 570: ' obtenir' (ID: 54423)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.22653326392173767
    2. ' matrix' → logprob: -2.4765331745147705
    3. 'f' → logprob: -2.8515331745147705
    4. 'dist' → logprob: -3.9765331745147705
    5. 'distance' → logprob: -4.47653341293335
    6. '   ' → logprob: -4.85153341293335
    7. ' f' → logprob: -5.22653341293335
    8. 'd' → logprob: -5.47653341293335
    9. 'graph' → logprob: -5.72653341293335
    10. 'mat' → logprob: -6.10153341293335

Token 571: ' toutes' (ID: 17502)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.9818496704101562
    2. 'matrix' → logprob: -1.3568496704101562
    3. ' matrix' → logprob: -1.9818496704101562
    4. 'd' → logprob: -2.1068496704101562
    5. '   ' → logprob: -3.4818496704101562
    6. 'distance' → logprob: -3.7318496704101562
    7. ' dist' → logprob: -4.356849670410156
    8. '(matrix' → logprob: -4.356849670410156
    9. ' distances' → logprob: -4.981849670410156
    10. ' d' → logprob: -5.231849670410156

Token 572: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.05816175043582916
    2. '_' → logprob: -3.933161735534668
    3. 's' → logprob: -4.558161735534668
    4. 'short' → logprob: -5.058161735534668
    5. ' les' → logprob: -5.308161735534668
    6. '_pairs' → logprob: -6.058161735534668
    7. '   ' → logprob: -6.183161735534668
    8. '_short' → logprob: -6.308161735534668
    9. 'sp' → logprob: -6.433161735534668
    10. '_dist' → logprob: -7.308161735534668

Token 573: ' distances' (ID: 48294)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.02521762251853943
    2. 'short' → logprob: -3.9002175331115723
    3. 'd' → logprob: -6.275217533111572
    4. 'plus' → logprob: -6.775217533111572
    5. 'distance' → logprob: -7.400217533111572
    6. ' distances' → logprob: -7.525217533111572
    7. 'cost' → logprob: -9.27521800994873
    8. '_dist' → logprob: -9.40021800994873
    9. ' dist' → logprob: -9.65021800994873
    10. '_short' → logprob: -10.15021800994873

Token 574: ' minim' (ID: 23874)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.4906765222549438
    2. '(matrix' → logprob: -1.4906765222549438
    3. '   ' → logprob: -1.8656765222549438
    4. 'matrix' → logprob: -1.8656765222549438
    5. 'dist' → logprob: -2.4906764030456543
    6. 'd' → logprob: -2.9906764030456543
    7. ')' → logprob: -3.2406764030456543
    8. 'D' → logprob: -4.365676403045654
    9. '=' → logprob: -4.615676403045654
    10. 'distance' → logprob: -4.740676403045654

Token 575: 'ales' (ID: 3459)
  Prédit: 'ales'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ales' → logprob: -0.002534759696573019
    2. 'es' → logprob: -6.002534866333008
    3. 'um' → logprob: -10.752534866333008
    4. 'aux' → logprob: -11.752534866333008
    5. 'isées' → logprob: -11.752534866333008
    6. 'atrices' → logprob: -12.502534866333008
    7. 'ale' → logprob: -12.752534866333008
    8. 'e' → logprob: -13.377534866333008
    9. '```' → logprob: -13.377534866333008
    10. '   ' → logprob: -13.627534866333008

Token 576: ' entre' (ID: 3853)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.49249395728111267
    2. '   ' → logprob: -2.2424938678741455
    3. '(matrix' → logprob: -2.3674938678741455
    4. ',' → logprob: -2.7424938678741455
    5. 'matrix' → logprob: -2.8674938678741455
    6. 'graph' → logprob: -4.242494106292725
    7. 'dist' → logprob: -4.492494106292725
    8. '(' → logprob: -4.492494106292725
    9. '(graph' → logprob: -4.992494106292725
    10. 'd' → logprob: -5.367494106292725

Token 577: ' tous' (ID: 10688)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.11313416063785553
    2. 's' → logprob: -2.9881341457366943
    3. 'all' → logprob: -3.6131341457366943
    4. 'les' → logprob: -4.113134384155273
    5. ' tous' → logprob: -4.738134384155273
    6. 'som' → logprob: -6.613134384155273
    7. 'tout' → logprob: -6.738134384155273
    8. 'pairs' → logprob: -7.738134384155273
    9. ' all' → logprob: -8.363134384155273
    10. 'vertices' → logprob: -8.363134384155273

Token 578: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.029994724318385124
    2. ' les' → logprob: -4.154994487762451
    3. '   ' → logprob: -4.904994487762451
    4. ',' → logprob: -6.029994487762451
    5. ')' → logprob: -6.904994487762451
    6. 'pairs' → logprob: -6.904994487762451
    7. 's' → logprob: -8.02999496459961
    8. 'aux' → logprob: -8.52999496459961
    9. '       ' → logprob: -8.65499496459961
    10. '(' → logprob: -8.90499496459961

Token 579: ' couples' (ID: 29972)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.4751451015472412
    2. 'cou' → logprob: -1.6001451015472412
    3. 'pairs' → logprob: -2.100145101547241
    4. 's' → logprob: -3.100145101547241
    5. ' couples' → logprob: -5.60014533996582
    6. ' p' → logprob: -6.35014533996582
    7. 'points' → logprob: -6.72514533996582
    8. 'pair' → logprob: -7.72514533996582
    9. 'nodes' → logprob: -7.72514533996582
    10. 'no' → logprob: -8.72514533996582

Token 580: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7593061923980713
    2. '   ' → logprob: -1.7593061923980713
    3. 'matrix' → logprob: -1.8843061923980713
    4. ',' → logprob: -3.1343061923980713
    5. '=' → logprob: -3.2593061923980713
    6. 'des' → logprob: -3.3843061923980713
    7. '(matrix' → logprob: -3.5093061923980713
    8. 'dist' → logprob: -4.259305953979492
    9. '):' → logprob: -4.384305953979492
    10. 'de' → logprob: -4.884305953979492

Token 581: ' somm' (ID: 44830)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.10739610344171524
    2. 'nodes' → logprob: -2.607396125793457
    3. 'vertices' → logprob: -3.732396125793457
    4. 'points' → logprob: -6.232396125793457
    5. 'som' → logprob: -7.107396125793457
    6. ' nodes' → logprob: -8.107396125793457
    7. 'graph' → logprob: -8.357396125793457
    8. ' somm' → logprob: -8.482396125793457
    9. 'n' → logprob: -9.107396125793457
    10. ' vertices' → logprob: -9.232396125793457

Token 582: 'ets' (ID: 1719)
  Prédit: 'ets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ets' → logprob: -0.00018220659694634378
    2. 'et' → logprob: -9.500182151794434
    3. 'êts' → logprob: -10.000182151794434
    4. 'ètres' → logprob: -11.125182151794434
    5. 'sets' → logprob: -12.250182151794434
    6. '#' → logprob: -12.500182151794434
    7. 'its' → logprob: -12.625182151794434
    8. 'êtres' → logprob: -12.625182151794434
    9. 'ettes' → logprob: -13.000182151794434
    10. 'ts' → logprob: -13.000182151794434

Token 583: '
' (ID: 198)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.9481666088104248
    2. '   ' → logprob: -1.4481666088104248
    3. 'dist' → logprob: -1.6981666088104248
    4. ')' → logprob: -2.323166608810425
    5. 'D' → logprob: -3.323166608810425
    6. ',' → logprob: -3.823166608810425
    7. 'graph' → logprob: -4.323166847229004
    8. 'distance' → logprob: -5.323166847229004
    9. 'matrix' → logprob: -5.698166847229004
    10. '(dist' → logprob: -6.073166847229004

Token 584: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.920680820941925
    2. 'd' → logprob: -1.2956807613372803
    3. 'dist' → logprob: -1.5456807613372803
    4. ',' → logprob: -3.0456807613372803
    5. 'D' → logprob: -3.4206807613372803
    6. ')' → logprob: -5.045680999755859
    7. 'graph' → logprob: -5.670680999755859
    8. 'distance' → logprob: -5.670680999755859
    9. 'res' → logprob: -5.795680999755859
    10. ' dist' → logprob: -5.920680999755859

Token 585: ' fw' (ID: 60172)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -1.0081504583358765
    2. 'd' → logprob: -1.1331504583358765
    3. '   ' → logprob: -1.5081504583358765
    4. ' dist' → logprob: -3.633150577545166
    5. 'D' → logprob: -3.758150577545166
    6. ' d' → logprob: -4.008150577545166
    7. 'res' → logprob: -5.133150577545166
    8. 'graph' → logprob: -5.508150577545166
    9. 'distance' → logprob: -6.258150577545166
    10. ' D' → logprob: -6.758150577545166

Token 586: '1' (ID: 16)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.585389256477356
    2. '_' → logprob: -1.460389256477356
    3. '(matrix' → logprob: -2.2103891372680664
    4. ' =' → logprob: -2.3353891372680664
    5. ')' → logprob: -6.960389137268066
    6. '(' → logprob: -7.085389137268066
    7. '_matrix' → logprob: -7.085389137268066
    8. '_=' → logprob: -7.210389137268066
    9. '   ' → logprob: -8.460389137268066
    10. '(m' → logprob: -8.460389137268066

Token 587: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.13284727931022644
    2. ' =' → logprob: -2.507847309112549
    3. '(matrix' → logprob: -3.882847309112549
    4. '(' → logprob: -4.007847309112549
    5. ')' → logprob: -6.007847309112549
    6. '_' → logprob: -7.132847309112549
    7. '=(' → logprob: -8.38284683227539
    8. '(m' → logprob: -8.88284683227539
    9. ')=' → logprob: -9.13284683227539
    10. ' (' → logprob: -9.50784683227539

Token 588: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.004746603313833475
    2. ' f' → logprob: -5.379746437072754
    3. 'cs' → logprob: -9.504746437072754
    4. '   ' → logprob: -10.504746437072754
    5. ' ' → logprob: -12.004746437072754
    6. 'csr' → logprob: -12.254746437072754
    7. '	f' → logprob: -12.379746437072754
    8. '(f' → logprob: -12.754746437072754
    9. ' cs' → logprob: -13.379746437072754
    10. '  ' → logprob: -14.004746437072754

Token 589: '(matrix' (ID: 57027)
  Prédit: '(matrix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(matrix' → logprob: -1.9266199160483666e-05
    2. '(' → logprob: -11.125019073486328
    3. '(
' → logprob: -13.750019073486328
    4. 'matrix' → logprob: -13.875019073486328
    5. ' (' → logprob: -14.250019073486328
    6. ')' → logprob: -14.250019073486328
    7. ')(' → logprob: -15.000019073486328
    8. '(mat' → logprob: -15.750019073486328
    9. '(Matrix' → logprob: -16.125019073486328
    10. '	matrix' → logprob: -16.500019073486328

Token 590: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10870964825153351
    2. ',' → logprob: -2.4837095737457275
    3. '(),' → logprob: -4.733709812164307
    4. '())' → logprob: -5.108709812164307
    5. ',)' → logprob: -6.733709812164307
    6. ')[' → logprob: -6.983709812164307
    7. '()' → logprob: -6.983709812164307
    8. ' ,' → logprob: -8.233709335327148
    9. ' )' → logprob: -8.358709335327148
    10. ')
' → logprob: -8.733709335327148

Token 591: ' ' (ID: 220)
  Prédit: 'direct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'direct' → logprob: -0.14984463155269623
    2. ' directed' → logprob: -2.5248446464538574
    3. 'return' → logprob: -3.2748446464538574
    4. ')' → logprob: -4.524844646453857
    5. 'indices' → logprob: -5.399844646453857
    6. 'dense' → logprob: -6.649844646453857
    7. 'dtype' → logprob: -6.899844646453857
    8. 'min' → logprob: -7.274844646453857
    9. ' return' → logprob: -8.2748441696167
    10. 'indexed' → logprob: -8.5248441696167

Token 592: '0' (ID: 15)
  Prédit: 'direct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'direct' → logprob: -0.029721327126026154
    2. 'return' → logprob: -3.779721260070801
    3. ' directed' → logprob: -5.779721260070801
    4. 'indices' → logprob: -6.404721260070801
    5. 'dtype' → logprob: -8.0297212600708
    6. 'indexed' → logprob: -8.2797212600708
    7. 'overwrite' → logprob: -8.6547212600708
    8. 'min' → logprob: -8.9047212600708
    9. 'dense' → logprob: -9.2797212600708
    10. 'False' → logprob: -9.4047212600708

Token 593: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11639007925987244
    2. ',' → logprob: -2.2413899898529053
    3. ',)' → logprob: -6.866390228271484
    4. ' )' → logprob: -6.991390228271484
    5. ',n' → logprob: -7.116390228271484
    6. ' ,' → logprob: -8.741390228271484
    7. ',None' → logprob: -9.491390228271484
    8. ',use' → logprob: -9.616390228271484
    9. ',m' → logprob: -9.866390228271484
    10. ')return' → logprob: -9.991390228271484

Token 594: ' ' (ID: 220)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04649772122502327
    2. '
' → logprob: -3.7964978218078613
    3. '   ' → logprob: -4.171497821807861
    4. '<|end|>' → logprob: -5.046497821807861
    5. ',' → logprob: -8.296497344970703
    6. ')
' → logprob: -8.671497344970703
    7. '    
' → logprob: -8.671497344970703
    8. '[' → logprob: -9.296497344970703
    9. '<|end|>' → logprob: -9.796497344970703
    10. '#' → logprob: -9.921497344970703

Token 595: ' #' (ID: 1069)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004426793660968542
    2. '   ' → logprob: -5.754426956176758
    3. '
' → logprob: -7.254426956176758
    4. ',' → logprob: -8.754426956176758
    5. '<|end|>' → logprob: -8.879426956176758
    6. ')
' → logprob: -9.504426956176758
    7. '  ' → logprob: -10.504426956176758
    8. ' )' → logprob: -11.129426956176758
    9. ')[' → logprob: -11.129426956176758
    10. '

' → logprob: -11.129426956176758

Token 596: ' '' (ID: 461)
  Prédit: 'fw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fw' → logprob: -0.5928993225097656
    2. 'dist' → logprob: -1.7178993225097656
    3. '#' → logprob: -2.0928993225097656
    4. 'inf' → logprob: -2.9678993225097656
    5. '   ' → logprob: -3.4678993225097656
    6. 'False' → logprob: -4.342899322509766
    7. ')' → logprob: -4.592899322509766
    8. 'matrix' → logprob: -5.217899322509766
    9. 'd' → logprob: -5.592899322509766
    10. 'True' → logprob: -5.717899322509766

Token 597: '0' (ID: 15)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -1.0466208457946777
    2. 'return' → logprob: -1.2966208457946777
    3. ')' → logprob: -1.4216208457946777
    4. 'direct' → logprob: -2.5466208457946777
    5. 'indices' → logprob: -4.296620845794678
    6. 'index' → logprob: -5.171620845794678
    7. 'True' → logprob: -5.171620845794678
    8. 'un' → logprob: -5.546620845794678
    9. 'dtype' → logprob: -5.796620845794678
    10. 'output' → logprob: -6.671620845794678

Token 598: ''' (ID: 6)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0024131115060299635
    2. ',' → logprob: -6.252413272857666
    3. ' )' → logprob: -8.002412796020508
    4. ').' → logprob: -10.502412796020508
    5. '<|end|>' → logprob: -10.877412796020508
    6. ',)' → logprob: -11.127412796020508
    7. ' ,' → logprob: -11.627412796020508
    8. ')
' → logprob: -11.752412796020508
    9. ')return' → logprob: -12.002412796020508
    10. '),' → logprob: -12.002412796020508

Token 599: ' ici' (ID: 27994)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01028790045529604
    2. ',' → logprob: -4.885287761688232
    3. ' )' → logprob: -7.135287761688232
    4. '<|end|>' → logprob: -7.760287761688232
    5. ').' → logprob: -7.885287761688232
    6. ')
' → logprob: -8.01028823852539
    7. ')#' → logprob: -9.01028823852539
    8. ')[' → logprob: -9.26028823852539
    9. '),' → logprob: -9.38528823852539
    10. '#' → logprob: -9.51028823852539

Token 600: ' indique' (ID: 97324)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0028148628771305084
    2. ',' → logprob: -6.127814769744873
    3. ' )' → logprob: -8.502815246582031
    4. ').' → logprob: -9.377815246582031
    5. ')#' → logprob: -9.502815246582031
    6. ')
' → logprob: -9.627815246582031
    7. '<|end|>' → logprob: -10.252815246582031
    8. '),' → logprob: -10.502815246582031
    9. ')==' → logprob: -10.627815246582031
    10. '#' → logprob: -11.377815246582031

Token 601: ' probablement' (ID: 87740)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.308156281709671
    2. 'return' → logprob: -2.0581562519073486
    3. 'True' → logprob: -3.4331562519073486
    4. 'direct' → logprob: -4.058156490325928
    5. 'np' → logprob: -4.183156490325928
    6. ' False' → logprob: -4.433156490325928
    7. 'inf' → logprob: -4.558156490325928
    8. 'indices' → logprob: -4.683156490325928
    9. 'un' → logprob: -5.433156490325928
    10. '0' → logprob: -5.433156490325928

Token 602: ' que' (ID: 661)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.04353676736354828
    2. 'return' → logprob: -4.29353666305542
    3. 'True' → logprob: -5.16853666305542
    4. ' False' → logprob: -5.79353666305542
    5. 'that' → logprob: -5.79353666305542
    6. 'direct' → logprob: -5.91853666305542
    7. 'un' → logprob: -6.04353666305542
    8. 'indices' → logprob: -6.29353666305542
    9. 'index' → logprob: -6.54353666305542
    10. 'inf' → logprob: -6.54353666305542

Token 603: ' les' (ID: 1341)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.1002885028719902
    2. 'return' → logprob: -2.7252883911132812
    3. 'direct' → logprob: -5.100288391113281
    4. 'indices' → logprob: -5.100288391113281
    5. ' False' → logprob: -5.350288391113281
    6. 'np' → logprob: -5.850288391113281
    7. 'True' → logprob: -5.975288391113281
    8. '0' → logprob: -6.475288391113281
    9. 'inf' → logprob: -6.975288391113281
    10. 'dtype' → logprob: -7.225288391113281

Token 604: ' distances' (ID: 48294)
  Prédit: 'direct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'direct' → logprob: -0.4585847556591034
    2. 'return' → logprob: -1.2085847854614258
    3. 'indices' → logprob: -2.958584785461426
    4. 'dtype' → logprob: -5.208584785461426
    5. ' directed' → logprob: -6.458584785461426
    6. 'inf' → logprob: -7.208584785461426
    7. 'index' → logprob: -7.333584785461426
    8. 'False' → logprob: -7.333584785461426
    9. 'overwrite' → logprob: -7.458584785461426
    10. 'un' → logprob: -7.583584785461426

Token 605: ' ne' (ID: 453)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014451064169406891
    2. '='' → logprob: -4.639451026916504
    3. ' =' → logprob: -6.889451026916504
    4. '=None' → logprob: -7.014451026916504
    5. '=False' → logprob: -7.264451026916504
    6. '=True' → logprob: -8.014451026916504
    7. 'are' → logprob: -8.139451026916504
    8. '==' → logprob: -8.639451026916504
    9. 'return' → logprob: -8.639451026916504
    10. ' are' → logprob: -9.139451026916504

Token 606: ' sont' (ID: 5242)
  Prédit: ' sont'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sont' → logprob: -1.558161735534668
    2. '='' → logprob: -1.683161735534668
    3. ' are' → logprob: -1.808161735534668
    4. ' seront' → logprob: -3.058161735534668
    5. '=' → logprob: -3.308161735534668
    6. 'are' → logprob: -3.433161735534668
    7. 'return' → logprob: -3.683161735534668
    8. ' doivent' → logprob: -3.808161735534668
    9. 'pas' → logprob: -4.058161735534668
    10. 'inf' → logprob: -4.058161735534668

Token 607: ' pas' (ID: 2173)
  Prédit: 'inf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.5816169381141663
    2. 'return' → logprob: -2.0816168785095215
    3. 'returned' → logprob: -2.9566168785095215
    4. 'computed' → logprob: -3.0816168785095215
    5. 'direct' → logprob: -3.3316168785095215
    6. 'un' → logprob: -3.3316168785095215
    7. 'not' → logprob: -3.3316168785095215
    8. 'cal' → logprob: -4.0816168785095215
    9. 'calcul' → logprob: -4.4566168785095215
    10. 'output' → logprob: -4.7066168785095215

Token 608: ' dirig' (ID: 25154)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -1.1000494956970215
    2. 'un' → logprob: -1.3500494956970215
    3. 'direct' → logprob: -1.7250494956970215
    4. 'inf' → logprob: -1.8500494956970215
    5. 'np' → logprob: -3.1000494956970215
    6. 'False' → logprob: -5.2250494956970215
    7. 'indexed' → logprob: -5.9750494956970215
    8. ' directed' → logprob: -6.2250494956970215
    9. 'returned' → logprob: -6.2250494956970215
    10. 'und' → logprob: -6.4750494956970215

Token 609: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.035644590854644775
    2. 'é' → logprob: -3.41064453125
    3. 'ée' → logprob: -6.66064453125
    4. 'ed' → logprob: -8.16064453125
    5. 'és' → logprob: -8.66064453125
    6. 'es' → logprob: -8.91064453125
    7. 'nées' → logprob: -10.16064453125
    8. 'érées' → logprob: -10.41064453125
    9. 'ees' → logprob: -11.28564453125
    10. ')' → logprob: -11.91064453125

Token 610: '

' (ID: 279)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0014497563242912292
    2. '   ' → logprob: -7.0014495849609375
    3. ',' → logprob: -8.126449584960938
    4. '
' → logprob: -9.251449584960938
    5. ' )' → logprob: -9.751449584960938
    6. ')
' → logprob: -9.876449584960938
    7. '  ' → logprob: -12.376449584960938
    8. ')

' → logprob: -12.501449584960938
    9. '<|end|>' → logprob: -12.501449584960938
    10. '
' → logprob: -12.751449584960938

Token 611: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.016809962689876556
    2. '   ' → logprob: -4.516809940338135
    3. ',' → logprob: -5.766809940338135
    4. '
' → logprob: -6.141809940338135
    5. '<|end|>' → logprob: -9.141810417175293
    6. ')
' → logprob: -9.266810417175293
    7. ' )' → logprob: -9.891810417175293
    8. '  ' → logprob: -10.141810417175293
    9. ',
' → logprob: -10.516810417175293
    10. '
' → logprob: -10.766810417175293

Token 612: ' #' (ID: 1069)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.015110697597265244
    2. ',' → logprob: -4.765110492706299
    3. '   ' → logprob: -5.390110492706299
    4. ')
' → logprob: -8.015110969543457
    5. '
' → logprob: -8.140110969543457
    6. '[' → logprob: -8.140110969543457
    7. ',
' → logprob: -8.515110969543457
    8. '<|end|>' → logprob: -8.890110969543457
    9. 'fw' → logprob: -9.390110969543457
    10. ',f' → logprob: -10.140110969543457

Token 613: ' On' (ID: 2160)
  Prédit: 'fw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fw' → logprob: -0.21981355547904968
    2. 'q' → logprob: -2.469813585281372
    3. 'm' → logprob: -2.844813585281372
    4. 'l' → logprob: -4.094813346862793
    5. '#' → logprob: -4.344813346862793
    6. 'n' → logprob: -4.969813346862793
    7. 'f' → logprob: -6.344813346862793
    8. 'matrix' → logprob: -6.469813346862793
    9. '   ' → logprob: -6.844813346862793
    10. 'k' → logprob: -6.844813346862793

Token 614: ' compare' (ID: 12221)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47047603130340576
    2. ' =' → logprob: -1.0954760313034058
    3. ',' → logprob: -3.8454761505126953
    4. ')' → logprob: -5.595476150512695
    5. '[' → logprob: -5.970476150512695
    6. 'fw' → logprob: -6.220476150512695
    7. 'matrix' → logprob: -6.345476150512695
    8. 'for' → logprob: -6.845476150512695
    9. '#' → logprob: -7.470476150512695
    10. '[:,' → logprob: -7.720476150512695

Token 615: ' les' (ID: 1341)
  Prédit: 'fw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fw' → logprob: -0.4934881627559662
    2. '(' → logprob: -2.118488073348999
    3. ' fw' → logprob: -2.743488073348999
    4. '(
' → logprob: -3.243488073348999
    5. '   ' → logprob: -3.618488073348999
    6. '(f' → logprob: -3.743488073348999
    7. ' =' → logprob: -3.993488073348999
    8. '_fw' → logprob: -3.993488073348999
    9. '=' → logprob: -4.118488311767578
    10. ',' → logprob: -4.368488311767578

Token 616: ' distances' (ID: 48294)
  Prédit: 'fw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fw' → logprob: -0.0135562838986516
    2. 'abs' → logprob: -6.388556480407715
    3. 'f' → logprob: -6.638556480407715
    4. 'max' → logprob: -6.638556480407715
    5. 'min' → logprob: -6.638556480407715
    6. 'matrix' → logprob: -6.763556480407715
    7. 'array' → logprob: -7.138556480407715
    8. 'where' → logprob: -7.388556480407715
    9. 'l' → logprob: -7.513556480407715
    10. 'amax' → logprob: -7.513556480407715

Token 617: ' obten' (ID: 28150)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16747401654720306
    2. ' =' → logprob: -2.2924740314483643
    3. '<=' → logprob: -3.4174740314483643
    4. '<' → logprob: -5.292473793029785
    5. '>' → logprob: -5.917473793029785
    6. '==' → logprob: -5.917473793029785
    7. ' <=' → logprob: -6.417473793029785
    8. 's' → logprob: -6.667473793029785
    9. ',' → logprob: -6.792473793029785
    10. '[' → logprob: -7.542473793029785

Token 618: 'ues' (ID: 1406)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.19079823791980743
    2. ' avec' → logprob: -2.815798282623291
    3. ' =' → logprob: -3.565798282623291
    4. ')' → logprob: -4.065798282623291
    5. '==' → logprob: -4.190798282623291
    6. 'avec' → logprob: -4.565798282623291
    7. ',' → logprob: -4.815798282623291
    8. '[' → logprob: -5.190798282623291
    9. 'with' → logprob: -5.565798282623291
    10. 'fw' → logprob: -5.690798282623291

Token 619: ' à' (ID: 1221)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -1.6565208435058594
    2. 'fw' → logprob: -1.7815208435058594
    3. ',' → logprob: -2.1565208435058594
    4. '<=' → logprob: -2.4065208435058594
    5. '[' → logprob: -2.5315208435058594
    6. '<' → logprob: -2.6565208435058594
    7. ' fw' → logprob: -3.1565208435058594
    8. ' <=' → logprob: -3.4065208435058594
    9. '>' → logprob: -3.4065208435058594
    10. '=' → logprob: -3.5315208435058594

Token 620: ' la' (ID: 557)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.7097731828689575
    2. 'fw' → logprob: -1.3347731828689575
    3. 'inf' → logprob: -1.8347731828689575
    4. 'f' → logprob: -2.959773063659668
    5. 'float' → logprob: -4.459773063659668
    6. ' fw' → logprob: -5.584773063659668
    7. ' l' → logprob: -5.959773063659668
    8. 'None' → logprob: -6.209773063659668
    9. ' inf' → logprob: -6.584773063659668
    10. '0' → logprob: -6.709773063659668

Token 621: ' limite' (ID: 48939)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.6605051159858704
    2. 'inf' → logprob: -1.0355050563812256
    3. 'fw' → logprob: -2.2855050563812256
    4. 'f' → logprob: -4.910505294799805
    5. 'float' → logprob: -5.285505294799805
    6. 'array' → logprob: -5.785505294799805
    7. 'in' → logprob: -6.535505294799805
    8. '0' → logprob: -6.535505294799805
    9. '...' → logprob: -6.785505294799805
    10. ' inf' → logprob: -6.910505294799805

Token 622: ' l' (ID: 305)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.5164961218833923
    2. ' <=' → logprob: -2.141496181488037
    3. 'fw' → logprob: -2.391496181488037
    4. ')' → logprob: -3.016496181488037
    5. '=' → logprob: -3.141496181488037
    6. '>' → logprob: -3.766496181488037
    7. ',' → logprob: -3.766496181488037
    8. ' fw' → logprob: -4.266496181488037
    9. '>=' → logprob: -4.641496181488037
    10. '_fw' → logprob: -5.266496181488037

Token 623: ',' (ID: 11)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.67359459400177
    2. ' <=' → logprob: -0.92359459400177
    3. ')' → logprob: -2.7985944747924805
    4. '<' → logprob: -4.7985944747924805
    5. '>' → logprob: -5.0485944747924805
    6. ',' → logprob: -5.2985944747924805
    7. '>=' → logprob: -5.6735944747924805
    8. ' >=' → logprob: -6.2985944747924805
    9. '[' → logprob: -6.6735944747924805
    10. ' >' → logprob: -6.6735944747924805

Token 624: ' en' (ID: 469)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.9376401305198669
    2. 'mask' → logprob: -1.3126401901245117
    3. 'fw' → logprob: -2.6876401901245117
    4. '>=' → logprob: -2.8126401901245117
    5. '...' → logprob: -3.4376401901245117
    6. 'result' → logprob: -3.8126401901245117
    7. 'dist' → logprob: -4.312640190124512
    8. '=' → logprob: -4.687640190124512
    9. '>' → logprob: -4.687640190124512
    10. 'valid' → logprob: -4.812640190124512

Token 625: ' génér' (ID: 18939)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.2175755500793457
    2. 'fw' → logprob: -2.2175755500793457
    3. 'le' → logprob: -3.5925755500793457
    4. 'out' → logprob: -4.342575550079346
    5. ' fw' → logprob: -4.592575550079346
    6. '>' → logprob: -5.342575550079346
    7. ' <=' → logprob: -5.342575550079346
    8. '...' → logprob: -6.092575550079346
    9. 'array' → logprob: -6.092575550079346
    10. 'return' → logprob: -6.092575550079346

Token 626: 'ant' (ID: 493)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.9879568219184875
    2. 'ating' → logprob: -0.9879568219184875
    3. 'er' → logprob: -1.6129567623138428
    4. 'ate' → logprob: -3.2379567623138428
    5. 'ant' → logprob: -5.612957000732422
    6. 'ateur' → logprob: -6.237957000732422
    7. 'érant' → logprob: -6.612957000732422
    8. 'e' → logprob: -6.987957000732422
    9. 'alité' → logprob: -6.987957000732422
    10. 'ated' → logprob: -7.112957000732422

Token 627: ' une' (ID: 2463)
  Prédit: 'fw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fw' → logprob: -0.61698317527771
    2. '(f' → logprob: -1.49198317527771
    3. ' fw' → logprob: -1.74198317527771
    4. ' (' → logprob: -3.36698317527771
    5. 'array' → logprob: -4.866983413696289
    6. ' array' → logprob: -5.616983413696289
    7. ' ' → logprob: -5.741983413696289
    8. '(' → logprob: -5.991983413696289
    9. 'f' → logprob: -6.991983413696289
    10. 'a' → logprob: -7.241983413696289

Token 628: ' matr' (ID: 25095)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -1.223404049873352
    2. 'bool' → logprob: -1.348404049873352
    3. 'boolean' → logprob: -1.598404049873352
    4. 'array' → logprob: -2.3484039306640625
    5. 'mask' → logprob: -2.8484039306640625
    6. 'csr' → logprob: -3.5984039306640625
    7. ' boolean' → logprob: -4.0984039306640625
    8. ' matrix' → logprob: -4.5984039306640625
    9. '(' → logprob: -5.5984039306640625
    10. 'min' → logprob: -5.8484039306640625

Token 629: 'ice' (ID: 603)
  Prédit: 'atrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'atrix' → logprob: -0.444009929895401
    2. 'ix' → logprob: -1.0690099000930786
    3. 'ask' → logprob: -4.444009780883789
    4. 'atrice' → logprob: -6.319009780883789
    5. 'ax' → logprob: -6.819009780883789
    6. 'at' → logprob: -8.944009780883789
    7. 'in' → logprob: -9.944009780883789
    8. '(matrix' → logprob: -9.944009780883789
    9. 'atriz' → logprob: -10.069009780883789
    10. 'ic' → logprob: -10.444009780883789

Token 630: ' bool' (ID: 3792)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5942826867103577
    2. '=' → logprob: -1.344282627105713
    3. '=(' → logprob: -2.094282627105713
    4. 'fw' → logprob: -3.094282627105713
    5. '(f' → logprob: -5.469282627105713
    6. ' (' → logprob: -5.969282627105713
    7. ' fw' → logprob: -6.219282627105713
    8. '=f' → logprob: -6.844282627105713
    9. ' =(' → logprob: -7.094282627105713
    10. 's' → logprob: -7.219282627105713

Token 631: 'é' (ID: 377)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5175764560699463
    2. 'array' → logprob: -2.0175764560699463
    3. 'arr' → logprob: -3.1425764560699463
    4. 'matrix' → logprob: -3.1425764560699463
    5. ' =' → logprob: -3.2675764560699463
    6. 'mask' → logprob: -3.5175764560699463
    7. '_matrix' → logprob: -4.142576217651367
    8. 'ans' → logprob: -4.517576217651367
    9. 'le' → logprob: -4.517576217651367
    10. 'fw' → logprob: -5.267576217651367

Token 632: 'enne' (ID: 17721)
  Prédit: 'array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'array' → logprob: -0.311384916305542
    2. 'an' → logprob: -1.561384916305542
    3. 'matrix' → logprob: -4.311385154724121
    4. 'x' → logprob: -4.811385154724121
    5. 'ar' → logprob: -4.936385154724121
    6. '_array' → logprob: -5.186385154724121
    7. 'ary' → logprob: -5.186385154724121
    8. 'arr' → logprob: -5.561385154724121
    9. 'y' → logprob: -6.311385154724121
    10. 'ans' → logprob: -6.436385154724121

Token 633: ' :' (ID: 712)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.19618287682533264
    2. ' =' → logprob: -1.8211828470230103
    3. 'fw' → logprob: -4.696182727813721
    4. '=(' → logprob: -5.946182727813721
    5. '<=' → logprob: -6.571182727813721
    6. '   ' → logprob: -6.821182727813721
    7. ' fw' → logprob: -6.946182727813721
    8. 'le' → logprob: -9.196183204650879
    9. 'result' → logprob: -9.446183204650879
    10. '(f' → logprob: -9.446183204650879

Token 634: ' V' (ID: 631)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -1.1070163249969482
    2. 'fw' → logprob: -1.7320163249969482
    3. 'res' → logprob: -2.2320163249969482
    4. ' dist' → logprob: -2.3570163249969482
    5. 'd' → logprob: -2.9820163249969482
    6. 'result' → logprob: -3.3570163249969482
    7. ' res' → logprob: -3.3570163249969482
    8. ' fw' → logprob: -3.8570163249969482
    9. 'reachable' → logprob: -3.9820163249969482
    10. ' d' → logprob: -4.482016563415527

Token 635: 'rai' (ID: 52449)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6504518985748291
    2. ' =' → logprob: -0.7754518985748291
    3. 'al' → logprob: -5.15045166015625
    4. 'V' → logprob: -5.65045166015625
    5. '=(' → logprob: -6.02545166015625
    6. 'v' → logprob: -6.52545166015625
    7. 'alue' → logprob: -6.77545166015625
    8. 'alid' → logprob: -7.77545166015625
    9. '>' → logprob: -7.90045166015625
    10. 'dist' → logprob: -8.52545166015625

Token 636: ' si' (ID: 1784)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2857930362224579
    2. ' =' → logprob: -1.4107930660247803
    3. '=(' → logprob: -6.035792827606201
    4. '(f' → logprob: -6.785792827606201
    5. 'fw' → logprob: -7.285792827606201
    6. '=f' → logprob: -9.16079330444336
    7. '(' → logprob: -9.78579330444336
    8. '<=' → logprob: -10.16079330444336
    9. ' fw' → logprob: -10.41079330444336
    10. ' (' → logprob: -10.41079330444336

Token 637: ' longueur' (ID: 104613)
  Prédit: 'fw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fw' → logprob: -0.016703756526112556
    2. ' fw' → logprob: -4.1417036056518555
    3. '(f' → logprob: -7.3917036056518555
    4. '_fw' → logprob: -11.016703605651855
    5. ' (' → logprob: -11.641703605651855
    6. 'f' → logprob: -11.641703605651855
    7. '/fw' → logprob: -12.016703605651855
    8. '(' → logprob: -12.391703605651855
    9. '-fw' → logprob: -13.016703605651855
    10. ' ' → logprob: -13.891703605651855

Token 638: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.2638328969478607
    2. ' <=' → logprob: -1.763832926750183
    3. 'fw' → logprob: -3.7638328075408936
    4. '=' → logprob: -4.013833045959473
    5. '<' → logprob: -4.763833045959473
    6. '_fw' → logprob: -6.138833045959473
    7. ' fw' → logprob: -6.638833045959473
    8. ' =' → logprob: -6.888833045959473
    9. ' <' → logprob: -6.888833045959473
    10. '≤' → logprob: -7.013833045959473

Token 639: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.28119802474975586
    2. ' l' → logprob: -1.4061980247497559
    3. ' ' → logprob: -10.281198501586914
    4. '	l' → logprob: -11.656198501586914
    5. ' ' → logprob: -12.531198501586914
    6. '_l' → logprob: -14.656198501586914
    7. '   ' → logprob: -15.906198501586914
    8. ' ' → logprob: -16.156198501586914
    9. '```' → logprob: -16.656198501586914
    10. '    ' → logprob: -16.781198501586914

Token 640: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1568124294281006
    2. '=' → logprob: -2.1568124294281006
    3. 'reachable' → logprob: -2.1568124294281006
    4. 'res' → logprob: -2.7818124294281006
    5. 'fw' → logprob: -2.9068124294281006
    6. 'dist' → logprob: -2.9068124294281006
    7. ' =' → logprob: -3.1568124294281006
    8. 'v' → logprob: -4.03181266784668
    9. '<=' → logprob: -4.15681266784668
    10. ',' → logprob: -4.28181266784668

Token 641: ' Faux' (ID: 173124)
  Prédit: 'fw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fw' → logprob: -0.7077381610870361
    2. ' fw' → logprob: -0.7077381610870361
    3. '<=' → logprob: -6.082737922668457
    4. ' <=' → logprob: -6.207737922668457
    5. '   ' → logprob: -6.832737922668457
    6. ' distances' → logprob: -6.957737922668457
    7. ' ' → logprob: -6.957737922668457
    8. ' (' → logprob: -7.082737922668457
    9. ' result' → logprob: -7.457737922668457
    10. 'result' → logprob: -7.457737922668457

Token 642: ' sinon' (ID: 52915)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5300608277320862
    2. ' =' → logprob: -0.9050608277320862
    3. '   ' → logprob: -5.280060768127441
    4. 'fw' → logprob: -7.405060768127441
    5. ',' → logprob: -7.655060768127441
    6. '<=' → logprob: -8.780060768127441
    7. '(' → logprob: -9.280060768127441
    8. '=(' → logprob: -9.530060768127441
    9. ' fw' → logprob: -9.905060768127441
    10. '=
' → logprob: -10.530060768127441

Token 643: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9187966585159302
    2. 'reachable' → logprob: -1.5437966585159302
    3. '
' → logprob: -2.4187965393066406
    4. ' reachable' → logprob: -2.6687965393066406
    5. 'dist' → logprob: -2.9187965393066406
    6. 'le' → logprob: -3.9187965393066406
    7. 'distance' → logprob: -3.9187965393066406
    8. 'result' → logprob: -4.043796539306641
    9. 'res' → logprob: -4.418796539306641
    10. '<=' → logprob: -4.668796539306641

Token 644: '   ' (ID: 271)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.11871620267629623
    2. 'fw' → logprob: -2.618716239929199
    3. ' <=' → logprob: -3.868716239929199
    4. 'result' → logprob: -5.118716239929199
    5. '=' → logprob: -5.868716239929199
    6. 'dist' → logprob: -6.618716239929199
    7. 'le' → logprob: -7.118716239929199
    8. ' fw' → logprob: -7.118716239929199
    9. ',' → logprob: -7.243716239929199
    10. '≤' → logprob: -7.493716239929199

Token 645: ' within' (ID: 3518)
  Prédit: 'reachable'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reachable' → logprob: -0.891664445400238
    2. 'res' → logprob: -1.8916645050048828
    3. 'fw' → logprob: -2.141664505004883
    4. 'ok' → logprob: -2.641664505004883
    5. 'dist' → logprob: -3.016664505004883
    6. 'd' → logprob: -3.391664505004883
    7. 'le' → logprob: -3.891664505004883
    8. 'print' → logprob: -3.891664505004883
    9. 'r' → logprob: -4.516664505004883
    10. 'ans' → logprob: -4.641664505004883

Token 646: '_limit' (ID: 34361)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00291447713971138
    2. ' =' → logprob: -5.8779144287109375
    3. '_matrix' → logprob: -9.502914428710938
    4. '_' → logprob: -11.002914428710938
    5. '_=' → logprob: -12.002914428710938
    6. '=np' → logprob: -12.877914428710938
    7. 'matrix' → logprob: -13.627914428710938
    8. '=_' → logprob: -14.002914428710938
    9. '_mat' → logprob: -14.002914428710938
    10. '_dist' → logprob: -14.252914428710938

Token 647: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759441256523132
    2. '=' → logprob: -0.8259441256523132
    3. ')' → logprob: -13.075943946838379
    4. ' ' → logprob: -13.700943946838379
    5. '＝' → logprob: -14.950943946838379
    6. ' ' → logprob: -15.075943946838379
    7. 's' → logprob: -15.325943946838379
    8. ')=' → logprob: -15.825943946838379
    9. ',' → logprob: -16.075944900512695
    10. '   ' → logprob: -16.950944900512695

Token 648: ' fw' (ID: 60172)
  Prédit: 'fw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fw' → logprob: -0.07024940103292465
    2. '(f' → logprob: -2.820249319076538
    3. ' fw' → logprob: -4.820249557495117
    4. ' (' → logprob: -9.320249557495117
    5. '(' → logprob: -10.695249557495117
    6. '_fw' → logprob: -10.695249557495117
    7. '/fw' → logprob: -10.820249557495117
    8. 'f' → logprob: -11.445249557495117
    9. '-fw' → logprob: -12.320249557495117
    10. 'FW' → logprob: -12.445249557495117

Token 649: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. '```' → logprob: -16.625
    3. 'l' → logprob: -16.75
    4. '１' → logprob: -17.5
    5. '<=' → logprob: -17.75
    6. 'w' → logprob: -18.25
    7. '(' → logprob: -18.75
    8. 'fw' → logprob: -18.875
    9. 'matrix' → logprob: -19.0
    10. '
' → logprob: -19.25

Token 650: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.31336313486099243
    2. ' <=' → logprob: -1.3133630752563477
    3. '[' → logprob: -9.938363075256348
    4. ' ' → logprob: -10.688363075256348
    5. '[:]' → logprob: -11.938363075256348
    6. ' ' → logprob: -12.188363075256348
    7. ')<=' → logprob: -12.188363075256348
    8. '   ' → logprob: -12.938363075256348
    9. ']<=' → logprob: -13.688363075256348
    10. '.' → logprob: -13.813363075256348

Token 651: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.06196846812963486
    2. ' l' → logprob: -2.8119685649871826
    3. '	l' → logprob: -14.686968803405762
    4. ' ' → logprob: -14.811968803405762
    5. '_l' → logprob: -16.936967849731445
    6. ' ' → logprob: -18.061967849731445
    7. '-l' → logprob: -18.936967849731445
    8. '(l' → logprob: -19.061967849731445
    9. ',l' → logprob: -19.186967849731445
    10. 'L' → logprob: -19.186967849731445

Token 652: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 653: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3362967371940613
    2. '   ' → logprob: -1.961296796798706
    3. '<|end|>' → logprob: -1.961296796798706
    4. ':' → logprob: -7.711296558380127
    5. '    
' → logprob: -7.961296558380127
    6. 'return' → logprob: -7.961296558380127
    7. '#' → logprob: -7.961296558380127
    8. '
' → logprob: -7.961296558380127
    9. '  ' → logprob: -8.086297035217285
    10. ']' → logprob: -8.336297035217285

Token 654: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35971641540527344
    2. 'for' → logprob: -1.9847164154052734
    3. '#' (adapté à ' #') → logprob: -2.8597164154052734
    4. 'queries' → logprob: -3.2347164154052734
    5. ')' → logprob: -3.9847164154052734
    6. 'query' → logprob: -5.234716415405273
    7. 'q' → logprob: -5.234716415405273
    8. 'return' → logprob: -5.359716415405273
    9. 'n' → logprob: -5.484716415405273
    10. 'm' → logprob: -5.734716415405273

Token 655: ' On' (ID: 2160)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.42726022005081177
    2. 'for' → logprob: -1.802260160446167
    3. 'queries' → logprob: -2.552260160446167
    4. '#' → logprob: -4.052260398864746
    5. 'fw' → logprob: -4.177260398864746
    6. 'print' → logprob: -4.677260398864746
    7. '   ' → logprob: -4.802260398864746
    8. 'nb' → logprob: -4.927260398864746
    9. 'query' → logprob: -5.302260398864746
    10. 'indices' → logprob: -5.927260398864746

Token 656: ' ré' (ID: 3146)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.791279673576355
    2. '=' → logprob: -1.416279673576355
    3. 'matrix' → logprob: -2.7912797927856445
    4. 'for' → logprob: -2.9162797927856445
    5. 'n' → logprob: -3.1662797927856445
    6. 'def' → logprob: -3.4162797927856445
    7. '#' → logprob: -3.4162797927856445
    8. 'indices' → logprob: -4.9162797927856445
    9. 't' → logprob: -5.0412797927856445
    10. 'return' → logprob: -5.1662797927856445

Token 657: 'ap' (ID: 403)
  Prédit: 'ass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ass' → logprob: -1.6950855255126953
    2. 'all' → logprob: -1.9450855255126953
    3. 'al' → logprob: -2.0700855255126953
    4. 'initial' → logprob: -2.0700855255126953
    5. 'aff' → logprob: -2.0700855255126953
    6. 'util' → logprob: -2.3200855255126953
    7. 'init' → logprob: -3.5700855255126953
    8. 'alim' → logprob: -4.195085525512695
    9. 'cup' → logprob: -4.195085525512695
    10. 'attrib' → logprob: -4.195085525512695

Token 658: 'plique' (ID: 71193)
  Prédit: 'plique'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plique' → logprob: -0.4876987636089325
    2. 'p' → logprob: -1.7376987934112549
    3. 'l' → logprob: -2.737698793411255
    4. 's' → logprob: -3.612698793411255
    5. 'pl' → logprob: -3.737698793411255
    6. 'ecute' → logprob: -4.112698554992676
    7. 'cute' → logprob: -4.862698554992676
    8. 'it' → logprob: -5.237698554992676
    9. 'side' → logprob: -5.362698554992676
    10. 'c' → logprob: -5.737698554992676

Token 659: ' Floyd' (ID: 76639)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.692153811454773
    2. 'f' → logprob: -1.317153811454773
    3. '(matrix' → logprob: -1.817153811454773
    4. 'matrix' → logprob: -2.8171539306640625
    5. ' f' → logprob: -5.5671539306640625
    6. ' matrix' → logprob: -6.1921539306640625
    7. ')' → logprob: -6.8171539306640625
    8. '(' → logprob: -7.4421539306640625
    9. 'fw' → logprob: -7.6921539306640625
    10. 'def' → logprob: -7.8171539306640625

Token 660: '-W' (ID: 14439)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.739910900592804
    2. '(matrix' → logprob: -0.739910900592804
    3. '(f' → logprob: -3.864910840988159
    4. '=' → logprob: -4.739911079406738
    5. 'matrix' → logprob: -5.239911079406738
    6. ' =' → logprob: -5.614911079406738
    7. 'f' → logprob: -6.614911079406738
    8. '(' → logprob: -6.739911079406738
    9. '(m' → logprob: -6.864911079406738
    10. '   ' → logprob: -7.364911079406738

Token 661: 'ar' (ID: 277)
  Prédit: 'ar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.010462038218975067
    2. 'all' → logprob: -4.760461807250977
    3. 'ash' → logprob: -7.260461807250977
    4. 'shall' → logprob: -8.010461807250977
    5. 'ars' → logprob: -8.760461807250977
    6. 'arshal' → logprob: -8.885461807250977
    7. '_ar' → logprob: -9.635461807250977
    8. '_' → logprob: -9.760461807250977
    9. 'arst' → logprob: -10.135461807250977
    10. 'arm' → logprob: -10.510461807250977

Token 662: 'shall' (ID: 30275)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.14909318089485168
    2. 'ar' → logprob: -2.3990931510925293
    3. 'shall' → logprob: -3.1490931510925293
    4. 'ash' → logprob: -5.649093151092529
    5. '_all' → logprob: -7.024093151092529
    6. 'arshal' → logprob: -9.149093627929688
    7. 'ard' → logprob: -10.024093627929688
    8. 'al' → logprob: -10.399093627929688
    9. '_sh' → logprob: -10.774093627929688
    10. 'sh' → logprob: -10.899093627929688

Token 663: ' sur' (ID: 1512)
  Prédit: '(matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(matrix' → logprob: -0.02191704697906971
    2. '(f' → logprob: -4.02191686630249
    3. '(with' → logprob: -6.64691686630249
    4. 'matrix' → logprob: -6.64691686630249
    5. '(' → logprob: -7.02191686630249
    6. '(for' → logprob: -10.271917343139648
    7. ' matrix' → logprob: -10.521917343139648
    8. '(mat' → logprob: -10.771917343139648
    9. '(w' → logprob: -11.021917343139648
    10. 'with' → logprob: -11.146917343139648

Token 664: ' la' (ID: 557)
  Prédit: 'within'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'within' → logprob: -0.03890961781144142
    2. 'csr' → logprob: -3.788909673690796
    3. 'matrix' → logprob: -4.913909435272217
    4. 'cs' → logprob: -5.788909435272217
    5. ' within' → logprob: -5.913909435272217
    6. '(' → logprob: -7.413909435272217
    7. '1' → logprob: -8.288909912109375
    8. ' csr' → logprob: -8.288909912109375
    9. '(c' → logprob: -8.538909912109375
    10. 'c' → logprob: -8.538909912109375

Token 665: ' matr' (ID: 25095)
  Prédit: 'within'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'within' → logprob: -0.19371972978115082
    2. 'matrix' → logprob: -2.3187196254730225
    3. 'csr' → logprob: -2.8187196254730225
    4. 'cs' → logprob: -4.818719863891602
    5. '~' → logprob: -6.068719863891602
    6. ' within' → logprob: -6.568719863891602
    7. 'graph' → logprob: -6.693719863891602
    8. '(~' → logprob: -7.193719863891602
    9. '(' → logprob: -7.443719863891602
    10. '1' → logprob: -7.443719863891602

Token 666: 'ice' (ID: 603)
  Prédit: 'ix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ix' → logprob: -0.006034142803400755
    2. 'atrix' → logprob: -5.1310343742370605
    3. 'rix' → logprob: -9.756033897399902
    4. 'x' → logprob: -11.006033897399902
    5. 'matrix' → logprob: -11.381033897399902
    6. '1' → logprob: -12.756033897399902
    7. 'ic' → logprob: -12.881033897399902
    8. 'tr' → logprob: -13.006033897399902
    9. '   ' → logprob: -13.256033897399902
    10. '_matrix' → logprob: -13.381033897399902

Token 667: ' bool' (ID: 3792)
  Prédit: '(with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(with' → logprob: -0.8298295736312866
    2. '(matrix' → logprob: -0.9548295736312866
    3. 'matrix' → logprob: -2.579829692840576
    4. ',' → logprob: -2.829829692840576
    5. 'with' → logprob: -4.329829692840576
    6. '(' → logprob: -4.579829692840576
    7. 'within' → logprob: -4.704829692840576
    8. '   ' → logprob: -5.329829692840576
    9. '(f' → logprob: -6.704829692840576
    10. ')' → logprob: -7.579829692840576

Token 668: 'é' (ID: 377)
  Prédit: '_matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_matrix' → logprob: -0.11073490977287292
    2. 'matrix' → logprob: -3.7357349395751953
    3. '1' → logprob: -3.8607349395751953
    4. ' =' → logprob: -4.110734939575195
    5. '   ' → logprob: -4.735734939575195
    6. '=' → logprob: -4.860734939575195
    7. 'bool' → logprob: -5.360734939575195
    8. 'ian' → logprob: -5.360734939575195
    9. 'within' → logprob: -5.485734939575195
    10. 'ean' → logprob: -5.610734939575195

Token 669: 'enne' (ID: 17721)
  Prédit: 'an'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'an' → logprob: -0.4793452322483063
    2. 'within' → logprob: -2.1043453216552734
    3. 'ane' → logprob: -2.8543453216552734
    4. 'enne' → logprob: -3.4793453216552734
    5. 'en' → logprob: -3.4793453216552734
    6. 'ne' → logprob: -3.6043453216552734
    7. 'matrix' → logprob: -3.7293453216552734
    8. 'anne' → logprob: -4.104345321655273
    9. 'e' → logprob: -4.104345321655273
    10. '_matrix' → logprob: -4.354345321655273

Token 670: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6920949816703796
    2. '(with' → logprob: -1.0670950412750244
    3. 'within' → logprob: -2.8170950412750244
    4. ',' → logprob: -3.0670950412750244
    5. 'matrix' → logprob: -3.8170950412750244
    6. ' within' → logprob: -4.942094802856445
    7. 'with' → logprob: -5.317094802856445
    8. '(matrix' → logprob: -5.817094802856445
    9. ' =' → logprob: -5.942094802856445
    10. ')' → logprob: -6.067094802856445

Token 671: 'type' (ID: 2493)
  Prédit: 'within'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'within' → logprob: -0.07595764100551605
    2. ')' → logprob: -3.3259575366973877
    3. 'csr' → logprob: -4.450957775115967
    4. ' within' → logprob: -4.825957775115967
    5. 'matrix' → logprob: -5.200957775115967
    6. ',' → logprob: -5.700957775115967
    7. '),' → logprob: -6.575957775115967
    8. ' csr' → logprob: -6.700957775115967
    9. '   ' → logprob: -6.825957775115967
    10. '(' → logprob: -6.950957775115967

Token 672: ' cast' (ID: 9831)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.4917799234390259
    2. ' within' → logprob: -1.8667799234390259
    3. 'array' → logprob: -2.1167798042297363
    4. 'bool' → logprob: -2.1167798042297363
    5. 'within' → logprob: -2.2417798042297363
    6. 'matrix' → logprob: -2.4917798042297363
    7. ' matrix' → logprob: -2.8667798042297363
    8. ' array' → logprob: -3.3667798042297363
    9. ' bool' → logprob: -3.6167798042297363
    10. 'csr' → logprob: -4.116779804229736

Token 673: ' possible' (ID: 4149)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.19324533641338348
    2. '(with' → logprob: -3.3182454109191895
    3. 'bool' → logprob: -3.4432454109191895
    4. '(bool' → logprob: -3.6932454109191895
    5. '=True' → logprob: -3.9432454109191895
    6. ' =' → logprob: -3.9432454109191895
    7. '=int' → logprob: -4.1932454109191895
    8. '=np' → logprob: -5.0682454109191895
    9. '(' → logprob: -5.3182454109191895
    10. ')' → logprob: -5.4432454109191895

Token 674: ' implic' (ID: 48641)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.386362224817276
    2. '=' → logprob: -2.136362314224243
    3. ',' → logprob: -2.136362314224243
    4. '=True' → logprob: -4.136362075805664
    5. '   ' → logprob: -4.261362075805664
    6. '),' → logprob: -4.511362075805664
    7. '(matrix' → logprob: -4.636362075805664
    8. ')
' → logprob: -5.011362075805664
    9. ' =' → logprob: -5.386362075805664
    10. ').' → logprob: -5.636362075805664

Token 675: 'ite' (ID: 651)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.038850218057632446
    2. 'int' → logprob: -4.6638503074646
    3. 'e' → logprob: -5.0388503074646
    4. 'bool' → logprob: -5.2888503074646
    5. 't' → logprob: -5.4138503074646
    6. 'f' → logprob: -5.7888503074646
    7. 'matrix' → logprob: -5.9138503074646
    8. '=' → logprob: -6.7888503074646
    9. 'astype' → logprob: -6.9138503074646
    10. 'ot' → logprob: -7.2888503074646

Token 676: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.517693042755127
    2. ',' → logprob: -1.142693042755127
    3. '(with' → logprob: -3.517693042755127
    4. '(' → logprob: -4.267693042755127
    5. '),' → logprob: -4.517693042755127
    6. ')
' → logprob: -5.017693042755127
    7. '(matrix' → logprob: -5.142693042755127
    8. ').' → logprob: -5.392693042755127
    9. '   ' → logprob: -5.642693042755127
    10. ' ,' → logprob: -6.642693042755127

Token 677: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16380895674228668
    2. 'fw' → logprob: -2.788809061050415
    3. ',' → logprob: -3.788809061050415
    4. ' fw' → logprob: -4.163808822631836
    5. 'matrix' → logprob: -4.413808822631836
    6. ' =' → logprob: -5.288808822631836
    7. ' matrix' → logprob: -5.413808822631836
    8. ' within' → logprob: -5.413808822631836
    9. '(f' → logprob: -5.538808822631836
    10. 'within' → logprob: -5.538808822631836

Token 678: ' prop' (ID: 5892)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.02563449926674366
    2. 'fw' → logprob: -3.900634527206421
    3. 'compute' → logprob: -6.525634288787842
    4. 'cs' → logprob: -7.025634288787842
    5. 'int' → logprob: -7.025634288787842
    6. 'get' → logprob: -7.650634288787842
    7. 'find' → logprob: -8.025634765625
    8. '...' → logprob: -8.900634765625
    9. ' f' → logprob: -8.900634765625
    10. '0' → logprob: -9.150634765625

Token 679: 'ager' (ID: 1790)
  Prédit: 'ager'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ager' → logprob: -0.011020591482520103
    2. 'agate' → logprob: -5.386020660400391
    3. 'ag' → logprob: -6.011020660400391
    4. 'age' → logprob: -7.136020660400391
    5. 'agir' → logprob: -7.761020660400391
    6. '   ' → logprob: -8.13602066040039
    7. 'agé' → logprob: -8.13602066040039
    8. 'er' → logprob: -8.51102066040039
    9. 'rer' → logprob: -9.01102066040039
    10. 'érer' → logprob: -9.13602066040039

Token 680: ' l' (ID: 305)
  Prédit: 'within'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'within' → logprob: -0.010713276453316212
    2. ' within' → logprob: -4.63571310043335
    3. '(' → logprob: -7.88571310043335
    4. '1' → logprob: -8.635713577270508
    5. 'int' → logprob: -9.385713577270508
    6. '~' → logprob: -10.010713577270508
    7. 'the' → logprob: -10.135713577270508
    8. 'True' → logprob: -10.510713577270508
    9. '(~' → logprob: -10.510713577270508
    10. '   ' → logprob: -10.635713577270508

Token 681: ''information' (ID: 111036)
  Prédit: 'within'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'within' → logprob: -0.024628328159451485
    2. 'imit' → logprob: -4.524628162384033
    3. ' within' → logprob: -5.524628162384033
    4. '(' → logprob: -5.774628162384033
    5. 'imits' → logprob: -5.774628162384033
    6. '   ' → logprob: -7.024628162384033
    7. '(True' → logprob: -7.899628162384033
    8. 'imited' → logprob: -8.149628639221191
    9. 'True' → logprob: -8.399628639221191
    10. 'ow' → logprob: -8.774628639221191

Token 682: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1943012923002243
    2. 'fw' → logprob: -2.6943013668060303
    3. 'within' → logprob: -2.8193013668060303
    4. ' within' → logprob: -4.319301128387451
    5. ' fw' → logprob: -4.569301128387451
    6. ')' → logprob: -5.194301128387451
    7. '(f' → logprob: -5.444301128387451
    8. ',' → logprob: -5.569301128387451
    9. ' =' → logprob: -6.319301128387451
    10. '=' → logprob: -6.569301128387451

Token 683: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09221501648426056
    2. ',' → logprob: -3.467215061187744
    3. ')' → logprob: -4.592215061187744
    4. '
' → logprob: -4.717215061187744
    5. '(' → logprob: -5.092215061187744
    6. ' fw' → logprob: -5.092215061187744
    7. 'fw' → logprob: -5.217215061187744
    8. '(f' → logprob: -5.217215061187744
    9. ' (' → logprob: -6.467215061187744
    10. '=' → logprob: -6.467215061187744

Token 684: ' #' (ID: 1069)
  Prédit: 'fw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fw' → logprob: -0.06645570695400238
    2. ' fw' → logprob: -3.066455602645874
    3. '   ' → logprob: -4.816455841064453
    4. 'f' → logprob: -5.191455841064453
    5. ')' → logprob: -6.691455841064453
    6. 'result' → logprob: -7.066455841064453
    7. ' f' → logprob: -7.441455841064453
    8. '=' → logprob: -8.816455841064453
    9. ' =' → logprob: -8.816455841064453
    10. 'res' → logprob: -9.316455841064453

Token 685: ' Cela' (ID: 44403)
  Prédit: 'fw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fw' → logprob: -0.008687848225235939
    2. '   ' → logprob: -5.383687973022461
    3. ' fw' → logprob: -6.008687973022461
    4. 'f' → logprob: -7.758687973022461
    5. 'reachable' → logprob: -7.883687973022461
    6. 'res' → logprob: -8.508687973022461
    7. 'result' → logprob: -9.383687973022461
    8. 'dist' → logprob: -9.383687973022461
    9. 'fs' → logprob: -10.258687973022461
    10. 'reach' → logprob: -10.821187973022461

Token 686: ' constru' (ID: 14218)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2600831091403961
    2. ' =' → logprob: -1.5100830793380737
    3. ')' → logprob: -5.260083198547363
    4. '=
' → logprob: -8.010083198547363
    5. '#' → logprob: -8.385083198547363
    6. ':' → logprob: -8.510083198547363
    7. '
' → logprob: -8.510083198547363
    8. ',' → logprob: -8.510083198547363
    9. ')=' → logprob: -8.760083198547363
    10. ' is' → logprob: -8.760083198547363

Token 687: 'ira' (ID: 2633)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.071203589439392
    2. 'ue' → logprob: -1.821203589439392
    3. 'er' → logprob: -1.946203589439392
    4. 'uit' → logprob: -2.4462037086486816
    5. 'it' → logprob: -2.6962037086486816
    6. '=' → logprob: -2.8212037086486816
    7. ')' → logprob: -3.5712037086486816
    8. ' =' → logprob: -4.446203708648682
    9. 'uer' → logprob: -4.446203708648682
    10. 'matrix' → logprob: -4.571203708648682

Token 688: ',' (ID: 11)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.018088601529598236
    2. ' f' → logprob: -4.2680888175964355
    3. 'cs' → logprob: -5.8930888175964355
    4. 'fw' → logprob: -7.8930888175964355
    5. ' cs' → logprob: -9.018088340759277
    6. 'csr' → logprob: -9.393088340759277
    7. 'bool' → logprob: -9.893088340759277
    8. 'dist' → logprob: -9.893088340759277
    9. '(f' → logprob: -10.018088340759277
    10. 'matrix' → logprob: -10.393088340759277

Token 689: ' pour' (ID: 1930)
  Prédit: 'fw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fw' → logprob: -0.26253753900527954
    2. ' fw' → logprob: -2.0125374794006348
    3. 'f' → logprob: -3.2625374794006348
    4. 'bool' → logprob: -4.887537479400635
    5. 'True' → logprob: -4.887537479400635
    6. ' f' → logprob: -5.262537479400635
    7. 'lambda' → logprob: -5.762537479400635
    8. ' bool' → logprob: -6.137537479400635
    9. 'def' → logprob: -6.262537479400635
    10. ' lambda' → logprob: -6.262537479400635

Token 690: ' chaque' (ID: 21194)
  Prédit: 'within'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'within' → logprob: -0.04215724766254425
    2. 'csr' → logprob: -4.292157173156738
    3. 'int' → logprob: -5.042157173156738
    4. ' within' → logprob: -5.167157173156738
    5. '1' → logprob: -6.292157173156738
    6. 'True' → logprob: -6.417157173156738
    7. 'cs' → logprob: -6.542157173156738
    8. 'matrix' → logprob: -6.667157173156738
    9. '(' → logprob: -6.667157173156738
    10. 'bool' → logprob: -7.292157173156738

Token 691: ' couple' (ID: 7167)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.35218459367752075
    2. ' i' → logprob: -2.602184534072876
    3. 'vertex' → logprob: -3.102184534072876
    4. 'True' → logprob: -3.477184534072876
    5. 'node' → logprob: -3.727184534072876
    6. ' node' → logprob: -4.227184772491455
    7. ' vertex' → logprob: -4.352184772491455
    8. 'within' → logprob: -4.352184772491455
    9. '0' → logprob: -4.477184772491455
    10. 'k' → logprob: -4.602184772491455

Token 692: ' de' (ID: 334)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5658318400382996
    2. '=True' → logprob: -2.4408318996429443
    3. '(' → logprob: -2.6908318996429443
    4. 'within' → logprob: -2.6908318996429443
    5. 'bool' → logprob: -3.1908318996429443
    6. '(with' → logprob: -3.3158318996429443
    7. ' (' → logprob: -4.065831661224365
    8. '(bool' → logprob: -4.440831661224365
    9. ' within' → logprob: -4.440831661224365
    10. ')' → logprob: -4.440831661224365

Token 693: ' somm' (ID: 44830)
  Prédit: 'vertices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vertices' → logprob: -1.7512786388397217
    2. 'nodes' → logprob: -1.8762786388397217
    3. ' vertices' → logprob: -2.0012786388397217
    4. ' nodes' → logprob: -2.0012786388397217
    5. ' somm' → logprob: -2.2512786388397217
    6. 'True' → logprob: -2.7512786388397217
    7. 'indices' → logprob: -3.0012786388397217
    8. 'within' → logprob: -3.2512786388397217
    9. ' True' → logprob: -3.3762786388397217
    10. ' within' → logprob: -3.8762786388397217

Token 694: 'ets' (ID: 1719)
  Prédit: 'ets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ets' → logprob: -0.004826323129236698
    2. 'et' → logprob: -5.504826545715332
    3. '#' → logprob: -9.254826545715332
    4. 'ètres' → logprob: -9.254826545715332
    5. 'es' → logprob: -9.504826545715332
    6. 'êts' → logprob: -9.692326545715332
    7. '   ' → logprob: -9.942326545715332
    8. 'ts' → logprob: -10.692326545715332
    9. 'ètes' → logprob: -10.879826545715332
    10. 'ents' → logprob: -11.067326545715332

Token 695: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11949802190065384
    2. 'within' → logprob: -2.7444980144500732
    3. ' within' → logprob: -3.7444980144500732
    4. '),' → logprob: -5.244498252868652
    5. ')' → logprob: -5.369498252868652
    6. 'bool' → logprob: -5.494498252868652
    7. ' ,' → logprob: -6.244498252868652
    8. ',
' → logprob: -6.619498252868652
    9. ' bool' → logprob: -7.244498252868652
    10. '=' → logprob: -7.369498252868652

Token 696: ' le' (ID: 505)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.1902923732995987
    2. ' f' → logprob: -2.0652923583984375
    3. 'fw' → logprob: -3.6902923583984375
    4. 'int' → logprob: -4.6902923583984375
    5. ' fw' → logprob: -6.0652923583984375
    6. 'cs' → logprob: -6.5652923583984375
    7. 'bool' → logprob: -6.9402923583984375
    8. '~' → logprob: -6.9402923583984375
    9. 'float' → logprob: -7.0652923583984375
    10. ' int' → logprob: -7.1902923583984375

Token 697: ' nombre' (ID: 9733)
  Prédit: 'minimum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'minimum' → logprob: -1.5241210460662842
    2. 'fw' → logprob: -1.7741210460662842
    3. 'int' → logprob: -2.149121046066284
    4. 'f' → logprob: -2.274121046066284
    5. 'bool' → logprob: -2.399121046066284
    6. 'cs' → logprob: -2.399121046066284
    7. ' minimum' → logprob: -3.649121046066284
    8. 'distance' → logprob: -3.899121046066284
    9. 'short' → logprob: -3.899121046066284
    10. 'csr' → logprob: -4.024121284484863

Token 698: ' minimal' (ID: 19957)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17514295876026154
    2. '=' → logprob: -2.175143003463745
    3. '_bool' → logprob: -4.800142765045166
    4. ' de' → logprob: -5.550142765045166
    5. '=True' → logprob: -5.550142765045166
    6. 'bool' → logprob: -5.800142765045166
    7. ' =' → logprob: -5.800142765045166
    8. '_' → logprob: -5.925142765045166
    9. ' )' → logprob: -6.050142765045166
    10. ' of' → logprob: -6.175142765045166

Token 699: ' d' (ID: 272)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.5558298826217651
    2. ' de' → logprob: -1.5558298826217651
    3. '=' → logprob: -2.6808300018310547
    4. ')' → logprob: -3.3058300018310547
    5. 'd' → logprob: -3.9308300018310547
    6. '   ' → logprob: -4.055830001831055
    7. ',' → logprob: -4.680830001831055
    8. ' of' → logprob: -4.680830001831055
    9. '_path' → logprob: -5.305830001831055
    10. ' d' → logprob: -5.430830001831055

Token 700: ''ét' (ID: 23771)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.052974872291088104
    2. 's' → logprob: -3.4279749393463135
    3. ' ar' → logprob: -5.302974700927734
    4. 'f' → logprob: -6.302974700927734
    5. ' sa' → logprob: -6.427974700927734
    6. 'edges' → logprob: -6.427974700927734
    7. 'de' → logprob: -7.052974700927734
    8. 'et' → logprob: -7.302974700927734
    9. 'fw' → logprob: -7.302974700927734
    10. 'ét' → logprob: -7.552974700927734

Token 701: 'apes' (ID: 11864)
  Prédit: 'apes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'apes' → logprob: -0.002477796748280525
    2. 'ages' → logprob: -6.627477645874023
    3. 'ap' → logprob: -7.377477645874023
    4. 'ape' → logprob: -8.752477645874023
    5. 'aps' → logprob: -9.502477645874023
    6. 'app' → logprob: -9.877477645874023
    7. '```' → logprob: -9.877477645874023
    8. 'apses' → logprob: -10.127477645874023
    9. 'ats' → logprob: -11.002477645874023
    10. '...' → logprob: -11.127477645874023

Token 702: ' nécessaires' (ID: 74402)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7503023147583008
    2. '(with' → logprob: -1.0003023147583008
    3. ' =' → logprob: -2.750302314758301
    4. '   ' → logprob: -3.750302314758301
    5. '(' → logprob: -4.000302314758301
    6. ',' → logprob: -4.125302314758301
    7. 'within' → logprob: -4.875302314758301
    8. 'bool' → logprob: -5.000302314758301
    9. '(matrix' → logprob: -5.500302314758301
    10. '=True' → logprob: -5.750302314758301

Token 703: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21313422918319702
    2. ',' → logprob: -3.338134288787842
    3. ' =' → logprob: -3.338134288787842
    4. '=' → logprob: -3.338134288787842
    5. ')' → logprob: -3.588134288787842
    6. ' to' → logprob: -4.088134288787842
    7. '(' → logprob: -4.338134288787842
    8. 'to' → logprob: -4.963134288787842
    9. 'within' → logprob: -4.963134288787842
    10. ' within' → logprob: -6.338134288787842

Token 704: ' atteindre' (ID: 95734)
  Prédit: 'within'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'within' → logprob: -0.3443337380886078
    2. 'which' → logprob: -1.5943337678909302
    3. 'reach' → logprob: -3.5943336486816406
    4. ' which' → logprob: -5.094333648681641
    5. 'connect' → logprob: -5.094333648681641
    6. ' within' → logprob: -5.219333648681641
    7. 'go' → logprob: -5.469333648681641
    8. 'pass' → logprob: -5.469333648681641
    9. '1' → logprob: -5.719333648681641
    10. 'np' → logprob: -5.844333648681641

Token 705: ' un' (ID: 537)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.8292926549911499
    2. ' True' → logprob: -1.32929265499115
    3. 'all' → logprob: -2.2042927742004395
    4. 'each' → logprob: -3.3292927742004395
    5. 'within' → logprob: -3.8292927742004395
    6. ' each' → logprob: -4.0792927742004395
    7. 'matrix' → logprob: -4.0792927742004395
    8. ' all' → logprob: -4.5792927742004395
    9. ' matrix' → logprob: -4.8292927742004395
    10. ' ' → logprob: -5.2042927742004395

Token 706: ' sommet' (ID: 130502)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.6520557999610901
    2. 'True' → logprob: -0.9020557999610901
    3. ' sommet' → logprob: -3.9020557403564453
    4. '1' → logprob: -4.652055740356445
    5. 'som' → logprob: -4.902055740356445
    6. 'False' → logprob: -5.277055740356445
    7. 'within' → logprob: -5.277055740356445
    8. 's' → logprob: -5.652055740356445
    9. 'point' → logprob: -5.777055740356445
    10. '(True' → logprob: -6.027055740356445

Token 707: ' en' (ID: 469)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.4169737100601196
    2. '   ' → logprob: -1.6669737100601196
    3. 'within' → logprob: -1.7919737100601196
    4. '=' → logprob: -2.29197359085083
    5. 'bool' → logprob: -2.41697359085083
    6. 'from' → logprob: -3.16697359085083
    7. '(' → logprob: -3.41697359085083
    8. ' within' → logprob: -3.54197359085083
    9. 's' → logprob: -4.16697359085083
    10. ' =' → logprob: -4.29197359085083

Token 708: ' utilisant' (ID: 92474)
  Prédit: 'within'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'within' → logprob: -0.2526586949825287
    2. 'True' → logprob: -3.2526586055755615
    3. 'moins' → logprob: -3.2526586055755615
    4. 'at' → logprob: -3.3776586055755615
    5. ' at' → logprob: -4.002658843994141
    6. '<=' → logprob: -4.127658843994141
    7. 'steps' → logprob: -4.252658843994141
    8. ' within' → logprob: -4.377658843994141
    9. '1' → logprob: -5.627658843994141
    10. 'False' → logprob: -5.627658843994141

Token 709: ' uniquement' (ID: 65527)
  Prédit: 'within'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'within' → logprob: -0.13205891847610474
    2. ' within' → logprob: -2.13205885887146
    3. 'int' → logprob: -6.882059097290039
    4. '1' → logprob: -7.007059097290039
    5. 'astype' → logprob: -7.007059097290039
    6. 'float' → logprob: -7.757059097290039
    7. ' int' → logprob: -8.382059097290039
    8. 'the' → logprob: -8.632059097290039
    9. 'matrix' → logprob: -9.007059097290039
    10. ' the' → logprob: -9.007059097290039

Token 710: ' des' (ID: 731)
  Prédit: 'within'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'within' → logprob: -0.17991860210895538
    2. ' within' → logprob: -1.804918646812439
    3. 'array' → logprob: -10.55491828918457
    4. 'astype' → logprob: -10.80491828918457
    5. 'where' → logprob: -10.92991828918457
    6. ' ' → logprob: -11.55491828918457
    7. 'matrix' → logprob: -11.55491828918457
    8. 'int' → logprob: -11.67991828918457
    9. ' ' → logprob: -11.80491828918457
    10. 'inside' → logprob: -11.92991828918457

Token 711: ' ar' (ID: 646)
  Prédit: 'within'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'within' → logprob: -0.43037644028663635
    2. ' within' → logprob: -1.055376410484314
    3. ' True' → logprob: -8.180376052856445
    4. 'True' → logprob: -8.555376052856445
    5. '1' → logprob: -9.180376052856445
    6. 'int' → logprob: -9.305376052856445
    7. 'astype' → logprob: -9.555376052856445
    8. 'ar' → logprob: -9.555376052856445
    9. ' edges' → logprob: -9.680376052856445
    10. ' ' → logprob: -9.930376052856445

Token 712: 'êtes' (ID: 23720)
  Prédit: 'cs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cs' → logprob: -0.3753946125507355
    2. 'gs' → logprob: -1.875394582748413
    3. 'r' → logprob: -2.625394582748413
    4. 'ray' → logprob: -3.125394582748413
    5. 'g' → logprob: -3.375394582748413
    6. 'e' → logprob: -5.375394821166992
    7. 'ead' → logprob: -7.125394821166992
    8. 'c' → logprob: -7.125394821166992
    9. 'es' → logprob: -7.250394821166992
    10. 'ges' → logprob: -8.125394821166992

Token 713: ' de' (ID: 334)
  Prédit: 'within'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'within' → logprob: -0.17926673591136932
    2. ' within' → logprob: -2.6792666912078857
    3. 'bool' → logprob: -2.8042666912078857
    4. 'boolean' → logprob: -5.054266929626465
    5. 's' → logprob: -5.179266929626465
    6. '=' → logprob: -5.304266929626465
    7. ' bool' → logprob: -5.429266929626465
    8. ' boolean' → logprob: -5.804266929626465
    9. '   ' → logprob: -6.054266929626465
    10. '(' → logprob: -7.429266929626465

Token 714: ' longueur' (ID: 104613)
  Prédit: 'within'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'within' → logprob: -0.48773273825645447
    2. 'True' → logprob: -2.2377326488494873
    3. ' True' → logprob: -2.2377326488494873
    4. ' within' → logprob: -2.6127326488494873
    5. 'bool' → logprob: -3.1127326488494873
    6. ' type' → logprob: -4.237732887268066
    7. 'type' → logprob: -4.487732887268066
    8. ' bool' → logprob: -5.487732887268066
    9. '1' → logprob: -5.487732887268066
    10. 'bo' → logprob: -5.862732887268066

Token 715: ' maximum' (ID: 10562)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1735554039478302
    2. '<=' → logprob: -2.423555374145508
    3. ' ' → logprob: -3.423555374145508
    4. 'True' → logprob: -4.423555374145508
    5. ' <=' → logprob: -4.673555374145508
    6. ' True' → logprob: -4.923555374145508
    7. 'bool' → logprob: -6.673555374145508
    8. ' at' → logprob: -7.048555374145508
    9. 'inf' → logprob: -7.048555374145508
    10. ' bool' → logprob: -7.673555374145508

Token 716: ' l' (ID: 305)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -1.014996886253357
    2. '=' → logprob: -1.014996886253357
    3. 'within' → logprob: -2.5149970054626465
    4. '=True' → logprob: -3.0149970054626465
    5. 'bool' → logprob: -3.8899970054626465
    6. ' =' → logprob: -4.0149970054626465
    7. ' within' → logprob: -4.0149970054626465
    8. ' True' → logprob: -4.5149970054626465
    9. 'True' → logprob: -4.7649970054626465
    10. '   ' → logprob: -4.7649970054626465

Token 717: '
' (ID: 198)
  Prédit: 'fw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fw' → logprob: -0.42131710052490234
    2. '   ' → logprob: -1.2963171005249023
    3. ' fw' → logprob: -2.9213171005249023
    4. ',' → logprob: -5.296317100524902
    5. ')' → logprob: -5.796317100524902
    6. '
' → logprob: -6.421317100524902
    7. ' =' → logprob: -7.171317100524902
    8. 'f' → logprob: -7.296317100524902
    9. '
' → logprob: -7.608817100524902
    10. '_fw' → logprob: -7.671317100524902

Token 718: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16774168610572815
    2. 'fw' → logprob: -2.6677417755126953
    3. ',' → logprob: -3.6677417755126953
    4. ')' → logprob: -3.6677417755126953
    5. '
' → logprob: -4.542741775512695
    6. ' fw' → logprob: -4.792741775512695
    7. ')
' → logprob: -6.292741775512695
    8. '=' → logprob: -6.292741775512695
    9. '    
' → logprob: -6.667741775512695
    10. '
' → logprob: -6.917741775512695

Token 719: ' fw' (ID: 60172)
  Prédit: 'fw'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fw' (adapté à ' fw') → logprob: -0.021254749968647957
    2. '   ' → logprob: -4.646254539489746
    3. ' fw' → logprob: -4.646254539489746
    4. 'f' → logprob: -7.396254539489746
    5. '
' → logprob: -8.271254539489746
    6. ')' → logprob: -9.021254539489746
    7. '_fw' → logprob: -9.021254539489746
    8. ',' → logprob: -9.396254539489746
    9. '    
' → logprob: -9.646254539489746
    10. '
' → logprob: -9.896254539489746

Token 720: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.004446851089596748
    2. '1' → logprob: -6.504446983337402
    3. 'bool' → logprob: -6.754446983337402
    4. '_bool' → logprob: -7.004446983337402
    5. ' =' → logprob: -8.254446983337402
    6. '_' → logprob: -8.254446983337402
    7. '=' → logprob: -8.754446983337402
    8. '0' → logprob: -10.504446983337402
    9. '_result' → logprob: -11.004446983337402
    10. '_boolean' → logprob: -11.129446983337402

Token 721: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20142094790935516
    2. '=' → logprob: -1.7014209032058716
    3. ')' → logprob: -13.451420783996582
    4. '(' → logprob: -13.451420783996582
    5. ',' → logprob: -13.576420783996582
    6. ' ' → logprob: -14.076420783996582
    7. '(with' → logprob: -15.326420783996582
    8. '   ' → logprob: -15.326420783996582
    9. '.' → logprob: -15.451420783996582
    10. '=f' → logprob: -15.451420783996582

Token 722: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.014832140877842903
    2. ' f' → logprob: -4.264832019805908
    3. 'cs' → logprob: -7.389832019805908
    4. ' cs' → logprob: -10.264832496643066
    5. 'csr' → logprob: -12.264832496643066
    6. '	f' → logprob: -12.389832496643066
    7. ' ' → logprob: -13.264832496643066
    8. '   ' → logprob: -13.264832496643066
    9. '(f' → logprob: -14.639832496643066
    10. 'c' → logprob: -14.639832496643066

Token 723: '(with' (ID: 36597)
  Prédit: '(with'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(with' → logprob: -0.0032195416279137135
    2. '(c' → logprob: -6.0032196044921875
    3. '(matrix' → logprob: -7.7532196044921875
    4. 'within' → logprob: -8.878219604492188
    5. '(' → logprob: -10.378219604492188
    6. '(bool' → logprob: -10.503219604492188
    7. '(cs' → logprob: -10.753219604492188
    8. '(array' → logprob: -10.878219604492188
    9. 'with' → logprob: -11.128219604492188
    10. '(s' → logprob: -11.253219604492188

Token 724: 'in' (ID: 258)
  Prédit: 'in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.16951872408390045
    2. 'ith' → logprob: -2.0445187091827393
    3. 'itin' → logprob: -3.7945187091827393
    4. 'thin' → logprob: -5.919518947601318
    5. 'it' → logprob: -7.794518947601318
    6. 'hin' → logprob: -8.04451847076416
    7. 'ihin' → logprob: -8.41951847076416
    8. 'within' → logprob: -9.04451847076416
    9. 'inin' → logprob: -9.41951847076416
    10. 'i' → logprob: -10.79451847076416

Token 725: '_limit' (ID: 34361)
  Prédit: '_limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.0002614550176076591
    2. 'limit' → logprob: -8.250261306762695
    3. '-limit' → logprob: -16.375261306762695
    4. ' limit' → logprob: -17.250261306762695
    5. 'Limit' → logprob: -17.375261306762695
    6. '_LIMIT' → logprob: -17.500261306762695
    7. 'lim' → logprob: -18.250261306762695
    8. '_l' → logprob: -19.250261306762695
    9. '(limit' → logprob: -19.375261306762695
    10. '.limit' → logprob: -19.500261306762695

Token 726: ')

' (ID: 1029)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007910030893981457
    2. ')' → logprob: -5.507910251617432
    3. '.astype' → logprob: -5.632910251617432
    4. ' ,' → logprob: -8.757909774780273
    5. ').' → logprob: -11.007909774780273
    6. '.' → logprob: -11.132909774780273
    7. ',)' → logprob: -11.382909774780273
    8. 'astype' → logprob: -12.007909774780273
    9. '(' → logprob: -12.507909774780273
    10. ',
' → logprob: -12.632909774780273

Token 727: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06805487722158432
    2. ')' → logprob: -3.0680549144744873
    3. '()' → logprob: -4.818054676055908
    4. '[' → logprob: -5.693054676055908
    5. '<|end|>' → logprob: -6.193054676055908
    6. '(' → logprob: -6.443054676055908
    7. 'print' → logprob: -7.193054676055908
    8. '
' → logprob: -7.193054676055908
    9. '```' → logprob: -8.193055152893066
    10. ',' → logprob: -8.193055152893066

Token 728: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1312604546546936
    2. 'for' → logprob: -2.256260395050049
    3. ' for' → logprob: -4.506260395050049
    4. '    
' → logprob: -6.256260395050049
    5. 'print' → logprob: -6.756260395050049
    6. ')' → logprob: -7.006260395050049
    7. ':' → logprob: -7.631260395050049
    8. 'import' → logprob: -7.756260395050049
    9. '
' → logprob: -8.006260871887207
    10. ',' → logprob: -8.131260871887207

Token 729: ' Pour' (ID: 13931)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.10259602963924408
    2. 'import' → logprob: -2.8525960445404053
    3. 'for' → logprob: -3.8525960445404053
    4. 'print' → logprob: -4.977595806121826
    5. '   ' → logprob: -5.102595806121826
    6. 'r' → logprob: -7.227595806121826
    7. 'def' → logprob: -7.602595806121826
    8. 'queries' → logprob: -7.602595806121826
    9. ' q' → logprob: -7.852595806121826
    10. 'k' → logprob: -7.852595806121826

Token 730: ' chaque' (ID: 21194)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3694860637187958
    2. '_' → logprob: -1.2444860935211182
    3. ' i' → logprob: -4.744485855102539
    4. 'x' → logprob: -5.744485855102539
    5. '_i' → logprob: -6.244485855102539
    6. 'k' → logprob: -6.494485855102539
    7. ' _' → logprob: -6.869485855102539
    8. 'j' → logprob: -7.119485855102539
    9. 's' → logprob: -7.494485855102539
    10. 'u' → logprob: -7.744485855102539

Token 731: ' requ' (ID: 7028)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8496589064598083
    2. 'i' → logprob: -0.8496589064598083
    3. ' i' → logprob: -2.849658966064453
    4. 'x' → logprob: -3.599658966064453
    5. 'q' → logprob: -4.849658966064453
    6. ' _' → logprob: -4.849658966064453
    7. 'k' → logprob: -4.974658966064453
    8. '_i' → logprob: -4.974658966064453
    9. 'query' → logprob: -5.224658966064453
    10. ' x' → logprob: -5.974658966064453

Token 732: 'ête' (ID: 16808)
  Prédit: 'ête'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ête' → logprob: -0.0017582408618181944
    2. 'ete' → logprob: -6.501758098602295
    3. 'êt' → logprob: -9.126758575439453
    4. 'ète' → logprob: -10.001758575439453
    5. '#' → logprob: -10.626758575439453
    6. 'êtes' → logprob: -11.376758575439453
    7. '**' → logprob: -11.501758575439453
    8. '�' → logprob: -11.751758575439453
    9. 'te' → logprob: -11.751758575439453
    10. 'é' → logprob: -11.751758575439453

Token 733: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9088805317878723
    2. '   ' → logprob: -1.2838804721832275
    3. ':' → logprob: -1.7838804721832275
    4. ' for' → logprob: -3.0338804721832275
    5. ',' → logprob: -3.2838804721832275
    6. '=' → logprob: -4.158880710601807
    7. 'q' → logprob: -4.408880710601807
    8. 'n' → logprob: -4.783880710601807
    9. ':
' → logprob: -5.283880710601807
    10. ' =' → logprob: -5.658880710601807

Token 734: ' on' (ID: 402)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.22629979252815247
    2. ' q' → logprob: -1.72629976272583
    3. '   ' → logprob: -4.85129976272583
    4. 'p' → logprob: -5.85129976272583
    5. 'k' → logprob: -5.97629976272583
    6. 'idx' → logprob: -6.22629976272583
    7. 'i' → logprob: -6.47629976272583
    8. 'r' → logprob: -6.72629976272583
    9. ' p' → logprob: -6.72629976272583
    10. 'for' → logprob: -6.97629976272583

Token 735: ' extrait' (ID: 194006)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2601320147514343
    2. 'print' → logprob: -2.635132074356079
    3. ' for' → logprob: -2.760132074356079
    4. '#' → logprob: -4.0101318359375
    5. 't' → logprob: -4.7601318359375
    6. 's' → logprob: -4.7601318359375
    7. '   ' → logprob: -4.8851318359375
    8. 'n' → logprob: -5.0101318359375
    9. 'aff' → logprob: -5.6351318359375
    10. 'do' → logprob: -5.6351318359375

Token 736: ' les' (ID: 1341)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.48259270191192627
    2. ' t' → logprob: -1.9825927019119263
    3. 'the' → logprob: -2.3575925827026367
    4. ' the' → logprob: -2.7325925827026367
    5. '=' → logprob: -4.482592582702637
    6. 's' → logprob: -4.607592582702637
    7. 'for' → logprob: -4.607592582702637
    8. ':' → logprob: -5.482592582702637
    9. '_' → logprob: -5.482592582702637
    10. ' for' → logprob: -5.607592582702637

Token 737: ' indices' (ID: 30378)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.2293981909751892
    2. 'indices' → logprob: -2.354398250579834
    3. ' t' → logprob: -3.104398250579834
    4. ' indices' → logprob: -4.479398250579834
    5. '2' → logprob: -4.604398250579834
    6. 'm' → logprob: -4.729398250579834
    7. 's' → logprob: -5.479398250579834
    8. '...' → logprob: -5.854398250579834
    9. '3' → logprob: -6.229398250579834
    10. 'i' → logprob: -6.229398250579834

Token 738: ' source' (ID: 4256)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3636727035045624
    2. ' =' → logprob: -2.3636727333068848
    3. 'for' → logprob: -2.4886727333068848
    4. '=' → logprob: -2.9886727333068848
    5. ' for' → logprob: -3.2386727333068848
    6. 'm' → logprob: -4.988672733306885
    7. 't' → logprob: -5.113672733306885
    8. '[' → logprob: -5.613672733306885
    9. 's' → logprob: -5.613672733306885
    10. ' t' → logprob: -5.613672733306885

Token 739: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5714421272277832
    2. ' =' → logprob: -1.0714421272277832
    3. '   ' → logprob: -2.696442127227783
    4. '=' → logprob: -4.196442127227783
    5. ' ,' → logprob: -6.196442127227783
    6. 'm' → logprob: -6.321442127227783
    7. '[' → logprob: -6.946442127227783
    8. ',m' → logprob: -6.946442127227783
    9. ' m' → logprob: -7.196442127227783
    10. 'for' → logprob: -7.321442127227783

Token 740: ' cible' (ID: 136857)
  Prédit: 'destination'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'destination' → logprob: -0.3267207145690918
    2. ' destination' → logprob: -1.9517207145690918
    3. 'dest' → logprob: -2.201720714569092
    4. 'target' → logprob: -4.326720714569092
    5. ' cible' → logprob: -4.576720714569092
    6. 'c' → logprob: -6.826720714569092
    7. ' target' → logprob: -6.951720714569092
    8. 'sink' → logprob: -8.32672119140625
    9. ' dest' → logprob: -8.57672119140625
    10. 't' → logprob: -10.95172119140625

Token 741: ' à' (ID: 1221)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5400903820991516
    2. '   ' → logprob: -2.540090322494507
    3. ',' → logprob: -2.665090322494507
    4. ':' → logprob: -2.915090322494507
    5. 'm' → logprob: -3.040090322494507
    6. 't' → logprob: -3.290090322494507
    7. 'n' → logprob: -3.290090322494507
    8. ' for' → logprob: -3.540090322494507
    9. '=' → logprob: -4.290090560913086
    10. 's' → logprob: -4.665090560913086

Token 742: ' partir' (ID: 12100)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.7754334211349487
    2. 'm' → logprob: -0.9004334211349487
    3. '2' → logprob: -2.2754335403442383
    4. '[' → logprob: -4.525433540344238
    5. ' t' → logprob: -5.900433540344238
    6. ' m' → logprob: -5.900433540344238
    7. '4' → logprob: -6.275433540344238
    8. '(' → logprob: -6.275433540344238
    9. ' ' → logprob: -6.400433540344238
    10. '3' → logprob: -6.650433540344238

Token 743: ' du' (ID: 1462)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0665816217660904
    2. '(m' → logprob: -3.0665817260742188
    3. ' m' → logprob: -4.566581726074219
    4. '[m' → logprob: -5.316581726074219
    5. '   ' → logprob: -7.441581726074219
    6. '(' → logprob: -7.816581726074219
    7. ' of' → logprob: -8.066581726074219
    8. ' de' → logprob: -8.066581726074219
    9. 'de' → logprob: -8.941581726074219
    10. '[' → logprob: -9.066581726074219

Token 744: ' tableau' (ID: 67053)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0035930639132857323
    2. ' t' → logprob: -6.1285929679870605
    3. 'm' → logprob: -6.6285929679870605
    4. '(t' → logprob: -10.878593444824219
    5. 'n' → logprob: -11.503593444824219
    6. ' m' → logprob: -11.628593444824219
    7. '   ' → logprob: -11.628593444824219
    8. 'l' → logprob: -12.003593444824219
    9. '3' → logprob: -12.128593444824219
    10. '(m' → logprob: -12.628593444824219

Token 745: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.3065594434738159
    2. '   ' → logprob: -2.5565595626831055
    3. 'm' → logprob: -2.6815595626831055
    4. '[m' → logprob: -2.8065595626831055
    5. '[' → logprob: -3.9315595626831055
    6. ' t' → logprob: -4.1815595626831055
    7. 'for' → logprob: -5.0565595626831055
    8. ' for' → logprob: -5.8065595626831055
    9. '(m' → logprob: -6.0565595626831055
    10. 'i' → logprob: -6.4315595626831055

Token 746: ' :
' (ID: 10039)
  Prédit: '[m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[m' → logprob: -0.9723905324935913
    2. '[' → logprob: -1.2223905324935913
    3. '   ' → logprob: -2.347390651702881
    4. 'm' → logprob: -2.472390651702881
    5. '[n' → logprob: -2.972390651702881
    6. '[i' → logprob: -3.722390651702881
    7. 'for' → logprob: -3.847390651702881
    8. ':' → logprob: -3.972390651702881
    9. 'n' → logprob: -5.597390651702881
    10. '(m' → logprob: -5.722390651702881

Token 747: '   ' (ID: 271)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.3682903051376343
    2. ' m' → logprob: -1.8682903051376343
    3. '   ' → logprob: -2.618290424346924
    4. 'for' → logprob: -3.993290424346924
    5. 'i' → logprob: -4.243290424346924
    6. 'n' → logprob: -4.368290424346924
    7. ' ' → logprob: -4.868290424346924
    8. ' for' → logprob: -4.993290424346924
    9. ' i' → logprob: -5.493290424346924
    10. ' n' → logprob: -6.118290424346924

Token 748: ' #' (ID: 1069)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.4017702639102936
    2. 'i' → logprob: -1.9017702341079712
    3. 'for' → logprob: -2.2767703533172607
    4. '   ' → logprob: -3.1517703533172607
    5. 'j' → logprob: -4.901770114898682
    6. 'm' → logprob: -5.151770114898682
    7. 'r' → logprob: -5.276770114898682
    8. 'idx' → logprob: -5.651770114898682
    9. 'k' → logprob: -6.026770114898682
    10. ' q' → logprob: -6.151770114898682

Token 749: ' -' (ID: 533)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.3481099605560303
    2. 'q' → logprob: -1.3481099605560303
    3. 'm' → logprob: -1.4731099605560303
    4. 'for' → logprob: -2.3481099605560303
    5. ' i' → logprob: -3.0981099605560303
    6. ' for' → logprob: -3.3481099605560303
    7. '   ' → logprob: -3.4731099605560303
    8. ' q' → logprob: -3.9731099605560303
    9. ' m' → logprob: -4.348110198974609
    10. 'idx' → logprob: -5.723110198974609

Token 750: ' t' (ID: 260)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.4340108633041382
    2. 'i' → logprob: -2.3090109825134277
    3. 'idx' → logprob: -2.5590109825134277
    4. 'queries' → logprob: -3.1840109825134277
    5. 'm' → logprob: -3.5590109825134277
    6. ' q' → logprob: -3.9340109825134277
    7. ' queries' → logprob: -4.434010982513428
    8. 'for' → logprob: -4.559010982513428
    9. 'pos' → logprob: -4.809010982513428
    10. 't' → logprob: -4.809010982513428

Token 751: '[m' (ID: 29271)
  Prédit: '[m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[m' → logprob: -0.011191172525286674
    2. ' =' → logprob: -5.511191368103027
    3. 'm' → logprob: -5.636191368103027
    4. '=m' → logprob: -6.261191368103027
    5. '[' → logprob: -7.511191368103027
    6. '=' → logprob: -7.636191368103027
    7. '[:' → logprob: -8.136191368103027
    8. '   ' → logprob: -9.636191368103027
    9. '=[' → logprob: -10.011191368103027
    10. '_m' → logprob: -10.136191368103027

Token 752: '+' (ID: 10)
  Prédit: '[m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[m' → logprob: -0.6905901432037354
    2. ':m' → logprob: -0.9405901432037354
    3. '+m' → logprob: -3.3155901432037354
    4. '+' → logprob: -3.4405901432037354
    5. '[' → logprob: -4.565589904785156
    6. ':' → logprob: -4.815589904785156
    7. '::' → logprob: -4.815589904785156
    8. ']' → logprob: -5.065589904785156
    9. 'm' → logprob: -5.565589904785156
    10. '   ' → logprob: -6.565589904785156

Token 753: '1' (ID: 16)
  Prédit: '::'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '::' → logprob: -0.1422676146030426
    2. '0' → logprob: -2.7672677040100098
    3. ':' → logprob: -2.8922677040100098
    4. ' ' → logprob: -5.89226770401001
    5. '1' → logprob: -6.01726770401001
    6. '2' → logprob: -6.51726770401001
    7. 'np' → logprob: -6.64226770401001
    8. '   ' → logprob: -7.01726770401001
    9. ':]' → logprob: -7.01726770401001
    10. '```' → logprob: -7.01726770401001

Token 754: '::' (ID: 742)
  Prédit: ':m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':m' → logprob: -0.8601194024085999
    2. '[m' → logprob: -1.110119342803955
    3. '::' → logprob: -1.485119342803955
    4. ':' → logprob: -4.610119342803955
    5. '+m' → logprob: -5.610119342803955
    6. ']' → logprob: -5.860119342803955
    7. ':]' → logprob: -6.485119342803955
    8. '+' → logprob: -6.610119342803955
    9. '[' → logprob: -7.235119342803955
    10. '*m' → logprob: -8.860119819641113

Token 755: '2' (ID: 17)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.06994932144880295
    2. '2' → logprob: -2.6949493885040283
    3. ' ' → logprob: -11.31994915008545
    4. '4' → logprob: -14.56994915008545
    5. '6' → logprob: -15.81994915008545
    6. ']' → logprob: -16.319950103759766
    7. 'm' → logprob: -16.757450103759766
    8. '   ' → logprob: -17.007450103759766
    9. '```' → logprob: -17.194950103759766
    10. '  ' → logprob: -17.319950103759766

Token 756: ']' (ID: 60)
  Prédit: '],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.8152079582214355
    2. ']' → logprob: -1.1902079582214355
    3. ':' → logprob: -2.0652079582214355
    4. '][' → logprob: -3.0652079582214355
    5. ':m' → logprob: -3.1902079582214355
    6. '[' → logprob: -4.1902079582214355
    7. ']
' → logprob: -4.4402079582214355
    8. 'm' → logprob: -5.8152079582214355
    9. '2' → logprob: -6.1902079582214355
    10. '][:' → logprob: -6.1902079582214355

Token 757: ' =' (ID: 314)
  Prédit: '[m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[m' → logprob: -0.679291307926178
    2. '[' → logprob: -0.929291307926178
    3. ',' → logprob: -2.679291248321533
    4. ']' → logprob: -4.929291248321533
    5. ',m' → logprob: -5.554291248321533
    6. '[:' → logprob: -5.929291248321533
    7. 't' → logprob: -5.929291248321533
    8. ':' → logprob: -5.929291248321533
    9. '   ' → logprob: -6.679291248321533
    10. ':m' → logprob: -6.679291248321533

Token 758: ' à' (ID: 1221)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.054958563297986984
    2. ' t' → logprob: -2.9299585819244385
    3. '`t' → logprob: -10.67995834350586
    4. '[' → logprob: -11.30495834350586
    5. 'm' → logprob: -11.67995834350586
    6. ' ' → logprob: -12.17995834350586
    7. '[t' → logprob: -12.17995834350586
    8. '	t' → logprob: -12.42995834350586
    9. ':t' → logprob: -12.80495834350586
    10. '(t' → logprob: -13.17995834350586

Token 759: ' partir' (ID: 12100)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.24205072224140167
    2. ' t' → logprob: -2.1170506477355957
    3. 'm' → logprob: -3.8670506477355957
    4. '1' → logprob: -3.9920506477355957
    5. '2' → logprob: -4.117050647735596
    6. ' m' → logprob: -4.492050647735596
    7. '[m' → logprob: -4.617050647735596
    8. '[' → logprob: -5.492050647735596
    9. ' ' → logprob: -5.492050647735596
    10. '0' → logprob: -6.992050647735596

Token 760: ' de' (ID: 334)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.06689911335706711
    2. '[m' → logprob: -2.941899061203003
    3. ' m' → logprob: -4.941899299621582
    4. '(m' → logprob: -5.441899299621582
    5. ' (' → logprob: -9.191899299621582
    6. '   ' → logprob: -9.691899299621582
    7. 't' → logprob: -9.941899299621582
    8. ',' → logprob: -10.316899299621582
    9. '0' → logprob: -10.691899299621582
    10. ']' → logprob: -10.691899299621582

Token 761: ' l' (ID: 305)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0024707785341888666
    2. ' m' → logprob: -6.377470970153809
    3. '(m' → logprob: -8.002470970153809
    4. '[m' → logprob: -8.252470970153809
    5. 't' → logprob: -8.752470970153809
    6. ' t' → logprob: -12.252470970153809
    7. ' (' → logprob: -12.752470970153809
    8. '   ' → logprob: -13.252470970153809
    9. ' ' → logprob: -13.502470970153809
    10. '	m' → logprob: -13.877470970153809

Token 762: ''ind' (ID: 82245)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0014533287612721324
    2. ' m' → logprob: -7.376453399658203
    3. '[m' → logprob: -7.626453399658203
    4. '(m' → logprob: -8.126453399658203
    5. '	m' → logprob: -11.626453399658203
    6. '+m' → logprob: -11.626453399658203
    7. '   ' → logprob: -12.251453399658203
    8. ' (' → logprob: -12.751453399658203
    9. '3' → logprob: -13.126453399658203
    10. ' ' → logprob: -13.376453399658203

Token 763: 'ice' (ID: 603)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.027340851724147797
    2. 'ices' → logprob: -3.652340888977051
    3. '[m' → logprob: -8.02734088897705
    4. 'ice' → logprob: -8.27734088897705
    5. '(m' → logprob: -9.15234088897705
    6. 'x' → logprob: -9.65234088897705
    7. '1' → logprob: -9.90234088897705
    8. '```' → logprob: -10.02734088897705
    9. 'm' → logprob: -10.40234088897705
    10. '[' → logprob: -10.65234088897705

Token 764: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.04794124886393547
    2. '(m' → logprob: -3.547941207885742
    3. '[m' → logprob: -4.047941207885742
    4. ' m' → logprob: -7.922941207885742
    5. ' (' → logprob: -9.797941207885742
    6. '	m' → logprob: -10.547941207885742
    7. '(' → logprob: -10.547941207885742
    8. '0' → logprob: -11.297941207885742
    9. ',m' → logprob: -11.547941207885742
    10. '   ' → logprob: -11.922941207885742

Token 765: '+' (ID: 10)
  Prédit: '[m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[m' → logprob: -0.016913345083594322
    2. ',' → logprob: -5.641913414001465
    3. '[' → logprob: -5.641913414001465
    4. '+' → logprob: -5.891913414001465
    5. '+m' → logprob: -5.891913414001465
    6. 'm' → logprob: -6.141913414001465
    7. '[
' → logprob: -7.141913414001465
    8. ',m' → logprob: -7.516913414001465
    9. '```' → logprob: -8.891913414001465
    10. ',
' → logprob: -9.141913414001465

Token 766: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1639145016670227
    2. '2' → logprob: -2.538914442062378
    3. '3' → logprob: -2.913914442062378
    4. 'm' → logprob: -4.788914680480957
    5. '0' → logprob: -4.913914680480957
    6. '4' → logprob: -6.913914680480957
    7. '(m' → logprob: -7.913914680480957
    8. ' ' → logprob: -8.288914680480957
    9. '```' → logprob: -8.288914680480957
    10. '   ' → logprob: -9.038914680480957

Token 767: ',' (ID: 11)
  Prédit: '[m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[m' → logprob: -0.2262571156024933
    2. '[' → logprob: -2.101257085800171
    3. ',' → logprob: -2.851257085800171
    4. '<|end|>' → logprob: -4.47625732421875
    5. ']' → logprob: -5.85125732421875
    6. ',m' → logprob: -5.97625732421875
    7. '[
' → logprob: -6.60125732421875
    8. 'm' → logprob: -7.10125732421875
    9. '+m' → logprob: -7.85125732421875
    10. ' ,' → logprob: -7.85125732421875

Token 768: ' un' (ID: 537)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.18384793400764465
    2. ' t' → logprob: -1.8088479042053223
    3. ':t' → logprob: -6.933847904205322
    4. ' m' → logprob: -7.183847904205322
    5. '2' → logprob: -7.308847904205322
    6. ' ' → logprob: -7.808847904205322
    7. 'm' → logprob: -8.18384838104248
    8. '::' → logprob: -8.30884838104248
    9. ':' → logprob: -8.30884838104248
    10. ' :' → logprob: -8.68384838104248

Token 769: ' sur' (ID: 1512)
  Prédit: '::'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '::' → logprob: -0.14426127076148987
    2. '2' → logprob: -2.144261360168457
    3. ':' → logprob: -5.019261360168457
    4. '[' → logprob: -5.769261360168457
    5. 't' → logprob: -6.519261360168457
    6. ' ' → logprob: -6.769261360168457
    7. 'step' → logprob: -6.894261360168457
    8. ' ::' → logprob: -7.394261360168457
    9. ' step' → logprob: -7.644261360168457
    10. '1' → logprob: -8.019261360168457

Token 770: ' deux' (ID: 10301)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0015617619501426816
    2. ' ' → logprob: -6.876561641693115
    3. 'de' → logprob: -7.626561641693115
    4. ' deux' → logprob: -10.126562118530273
    5. ' Deux' → logprob: -15.126562118530273
    6. ' two' → logprob: -15.251562118530273
    7. '  ' → logprob: -15.876562118530273
    8. 'e' → logprob: -16.001562118530273
    9. '_de' → logprob: -16.001562118530273
    10. 't' → logprob: -16.001562118530273

Token 771: ',' (ID: 11)
  Prédit: '[m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[m' → logprob: -0.7009403705596924
    2. '[' → logprob: -1.4509403705596924
    3. ',' → logprob: -1.8259403705596924
    4. ']' → logprob: -3.3259403705596924
    5. '<|end|>' → logprob: -4.325940132141113
    6. '(m' → logprob: -4.825940132141113
    7. 't' → logprob: -4.825940132141113
    8. 'm' → logprob: -4.950940132141113
    9. ',m' → logprob: -5.075940132141113
    10. '::' → logprob: -5.075940132141113

Token 772: ' ce' (ID: 2357)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.4856817424297333
    2. ' t' → logprob: -1.1106817722320557
    3. ' :' → logprob: -3.9856817722320557
    4. ')' → logprob: -4.860681533813477
    5. ':' → logprob: -4.985681533813477
    6. ' :]' → logprob: -5.610681533813477
    7. ',' → logprob: -5.860681533813477
    8. ']' → logprob: -5.860681533813477
    9. ' ,' → logprob: -6.235681533813477
    10. 'm' → logprob: -6.485681533813477

Token 773: ' sont' (ID: 5242)
  Prédit: '[:]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[:]' → logprob: -1.1025465726852417
    2. ':' → logprob: -1.4775465726852417
    3. '[' → logprob: -1.6025465726852417
    4. 's' → logprob: -2.6025466918945312
    5. '[:,' → logprob: -3.2275466918945312
    6. '[]' → logprob: -3.7275466918945312
    7. ',' → logprob: -3.8525466918945312
    8. '[:' → logprob: -4.352546691894531
    9. '=' → logprob: -4.602546691894531
    10. '.' → logprob: -4.852546691894531

Token 774: ' les' (ID: 1341)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.5335772633552551
    2. ' t' → logprob: -0.9085772633552551
    3. ' les' → logprob: -5.0335774421691895
    4. ' des' → logprob: -6.1585774421691895
    5. ' ' → logprob: -7.6585774421691895
    6. 'les' → logprob: -7.9085774421691895
    7. 'des' → logprob: -8.033576965332031
    8. '	t' → logprob: -8.533576965332031
    9. '[t' → logprob: -9.783576965332031
    10. '(t' → logprob: -9.783576965332031

Token 775: ' indices' (ID: 30378)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0648133754730225
    2. 'sources' → logprob: -1.3148133754730225
    3. 't' → logprob: -1.5648133754730225
    4. 'points' → logprob: -2.8148133754730225
    5. 'indices' → logprob: -3.0648133754730225
    6. 'som' → logprob: -4.314813613891602
    7. 'source' → logprob: -4.689813613891602
    8. ' sources' → logprob: -4.689813613891602
    9. ' points' → logprob: -4.939813613891602
    10. 'n' → logprob: -5.564813613891602

Token 776: ' source' (ID: 4256)
  Prédit: 'sources'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sources' → logprob: -1.271718144416809
    2. 'source' → logprob: -2.0217180252075195
    3. '[m' → logprob: -2.1467180252075195
    4. 't' → logprob: -2.1467180252075195
    5. 'des' → logprob: -2.6467180252075195
    6. ' des' → logprob: -2.7717180252075195
    7. '[source' → logprob: -3.1467180252075195
    8. 's' → logprob: -3.3967180252075195
    9. 'm' → logprob: -3.6467180252075195
    10. '[' → logprob: -3.6467180252075195

Token 777: ' des' (ID: 731)
  Prédit: '[m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[m' → logprob: -0.06255820393562317
    2. '[' → logprob: -2.937558174133301
    3. ']' → logprob: -6.062558174133301
    4. ',' → logprob: -6.437558174133301
    5. '   ' → logprob: -7.187558174133301
    6. 'm' → logprob: -7.187558174133301
    7. '[
' → logprob: -7.562558174133301
    8. '(m' → logprob: -8.1875581741333
    9. '<|end|>' → logprob: -8.3125581741333
    10. '][' → logprob: -8.5625581741333

Token 778: ' requ' (ID: 7028)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6488202810287476
    2. 't' → logprob: -2.148820400238037
    3. ' requ' → logprob: -2.273820400238037
    4. 'requ' → logprob: -2.273820400238037
    5. 'queries' → logprob: -2.398820400238037
    6. 'points' → logprob: -4.398820400238037
    7. ' queries' → logprob: -4.773820400238037
    8. ' somm' → logprob: -5.023820400238037
    9. 'n' → logprob: -5.148820400238037
    10. 'query' → logprob: -5.523820400238037

Token 779: 'êtes' (ID: 23720)
  Prédit: 'êtes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êtes' → logprob: -0.001046743243932724
    2. '3' → logprob: -8.251047134399414
    3. 'q' → logprob: -8.626047134399414
    4. 'êts' → logprob: -8.876047134399414
    5. 'etes' → logprob: -9.251047134399414
    6. 'quetes' → logprob: -9.751047134399414
    7. 'ètes' → logprob: -10.251047134399414
    8. '[' → logprob: -10.751047134399414
    9. '```' → logprob: -10.751047134399414
    10. 'quests' → logprob: -10.751047134399414

Token 780: '
' (ID: 198)
  Prédit: '[m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[m' → logprob: -0.23811011016368866
    2. '[' → logprob: -2.488110065460205
    3. '<|end|>' → logprob: -2.613110065460205
    4. ',' → logprob: -3.488110065460205
    5. 't' → logprob: -4.613110065460205
    6. ']' → logprob: -5.363110065460205
    7. '(m' → logprob: -5.988110065460205
    8. 'm' → logprob: -6.363110065460205
    9. '[
' → logprob: -6.488110065460205
    10. '   ' → logprob: -7.113110065460205

Token 781: '   ' (ID: 271)
  Prédit: '[m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[m' → logprob: -0.028052685782313347
    2. '[' → logprob: -4.153052806854248
    3. '<|end|>' → logprob: -5.278052806854248
    4. ',' → logprob: -5.653052806854248
    5. 't' → logprob: -7.278052806854248
    6. '[t' → logprob: -7.778052806854248
    7. '[
' → logprob: -7.778052806854248
    8. '[]' → logprob: -7.903052806854248
    9. 'm' → logprob: -7.903052806854248
    10. ']' → logprob: -8.77805233001709

Token 782: ' #' (ID: 1069)
  Prédit: '[m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[m' → logprob: -0.0319703184068203
    2. '[' → logprob: -4.531970500946045
    3. 't' → logprob: -4.906970500946045
    4. '<|end|>' → logprob: -5.531970500946045
    5. '(m' → logprob: -5.781970500946045
    6. 'm' → logprob: -5.906970500946045
    7. ',' → logprob: -6.906970500946045
    8. '[]' → logprob: -7.531970500946045
    9. '[
' → logprob: -7.656970500946045
    10. ',m' → logprob: -8.406970024108887

Token 783: ' -' (ID: 533)
  Prédit: '[m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[m' → logprob: -0.04064030200242996
    2. '[' → logprob: -4.415640354156494
    3. 't' → logprob: -4.415640354156494
    4. 'm' → logprob: -4.665640354156494
    5. '(m' → logprob: -6.165640354156494
    6. ',' → logprob: -6.665640354156494
    7. ':' → logprob: -7.540640354156494
    8. '[
' → logprob: -7.915640354156494
    9. '[]' → logprob: -8.040639877319336
    10. '<|end|>' → logprob: -8.165639877319336

Token 784: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.03806042671203613
    2. ' t' → logprob: -3.288060426712036
    3. '`t' → logprob: -11.788060188293457
    4. '   ' → logprob: -12.663060188293457
    5. '	t' → logprob: -13.038060188293457
    6. ' ' → logprob: -13.038060188293457
    7. '(t' → logprob: -14.663060188293457
    8. '_t' → logprob: -14.913060188293457
    9. 'm' → logprob: -15.038060188293457
    10. '
' → logprob: -15.350560188293457

Token 785: '[m' (ID: 29271)
  Prédit: '[m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[m' → logprob: -0.0009373087668791413
    2. '[' → logprob: -7.125937461853027
    3. '[
' → logprob: -9.000937461853027
    4. ' [' → logprob: -13.375937461853027
    5. '
' → logprob: -13.500937461853027
    6. '[n' → logprob: -13.500937461853027
    7. 'm' → logprob: -13.500937461853027
    8. '[t' → logprob: -13.625937461853027
    9. '[(' → logprob: -14.125937461853027
    10. '[M' → logprob: -14.875937461853027

Token 786: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0023085770662873983
    2. '[' → logprob: -6.252308368682861
    3. ' +' → logprob: -9.12730884552002
    4. '+[' → logprob: -9.12730884552002
    5. '1' → logprob: -9.50230884552002
    6. '+m' → logprob: -10.00230884552002
    7. '+
' → logprob: -11.12730884552002
    8. '```' → logprob: -12.00230884552002
    9. '2' → logprob: -12.62730884552002
    10. '-' → logprob: -13.18980884552002

Token 787: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.7046696543693542
    2. '1' → logprob: -1.079669713973999
    3. '::' → logprob: -1.829669713973999
    4. '3' → logprob: -5.32966947555542
    5. '+' → logprob: -7.70466947555542
    6. '0' → logprob: -9.204669952392578
    7. ' ' → logprob: -10.954669952392578
    8. '::-' → logprob: -10.954669952392578
    9. ' ::' → logprob: -11.204669952392578
    10. '::
' → logprob: -11.329669952392578

Token 788: '::' (ID: 742)
  Prédit: '::'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '::' → logprob: -0.01676974818110466
    2. '[' → logprob: -4.391769886016846
    3. '[m' → logprob: -5.891769886016846
    4. ':m' → logprob: -6.641769886016846
    5. 'm' → logprob: -8.891769409179688
    6. ']' → logprob: -11.516769409179688
    7. 't' → logprob: -11.641769409179688
    8. ':' → logprob: -11.766769409179688
    9. ':::' → logprob: -12.266769409179688
    10. '::
' → logprob: -12.516769409179688

Token 789: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.1424973713001236e-05
    2. ' ' → logprob: -10.375031471252441
    3. '   ' → logprob: -16.250030517578125
    4. '  ' → logprob: -17.500030517578125
    5. '```' → logprob: -17.875030517578125
    6. '
' → logprob: -18.375030517578125
    7. '２' → logprob: -18.375030517578125
    8. '3' → logprob: -18.500030517578125
    9. '۲' → logprob: -18.500030517578125
    10. ',' → logprob: -19.125030517578125

Token 790: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0005916363443247974
    2. ' ]' → logprob: -8.250591278076172
    3. ')' → logprob: -9.500591278076172
    4. '[' → logprob: -9.750591278076172
    5. ',' → logprob: -10.125591278076172
    6. 't' → logprob: -10.375591278076172
    7. '[m' → logprob: -10.375591278076172
    8. '])' → logprob: -10.625591278076172
    9. ']=' → logprob: -11.125591278076172
    10. ']
' → logprob: -11.875591278076172

Token 791: ' =' (ID: 314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9711410999298096
    2. ']' → logprob: -0.9711410999298096
    3. '<|end|>' → logprob: -1.8461410999298096
    4. ',' → logprob: -2.8461410999298096
    5. '[' → logprob: -4.7211408615112305
    6. '#' → logprob: -6.2211408615112305
    7. '])' → logprob: -6.2211408615112305
    8. '[m' → logprob: -6.3461408615112305
    9. '[]' → logprob: -6.4711408615112305
    10. '<|end|>' → logprob: -6.7211408615112305

Token 792: ' à' (ID: 1221)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.25202110409736633
    2. ' t' → logprob: -1.502021074295044
    3. '(t' → logprob: -9.627020835876465
    4. '[t' → logprob: -10.752020835876465
    5. '	t' → logprob: -13.627020835876465
    6. '`t' → logprob: -13.627020835876465
    7. ' ' → logprob: -14.002020835876465
    8. 'm' → logprob: -15.002020835876465
    9. '   ' → logprob: -15.627020835876465
    10. ' ' → logprob: -15.752020835876465

Token 793: ' partir' (ID: 12100)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.004569442477077246
    2. ' t' → logprob: -5.6295695304870605
    3. 'm' → logprob: -7.3795695304870605
    4. '[m' → logprob: -8.504569053649902
    5. '[t' → logprob: -9.379569053649902
    6. ' m' → logprob: -11.254569053649902
    7. '(t' → logprob: -11.629569053649902
    8. '`t' → logprob: -11.879569053649902
    9. '(m' → logprob: -12.004569053649902
    10. '2' → logprob: -12.004569053649902

Token 794: ' de' (ID: 334)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.012112479656934738
    2. '(' → logprob: -4.637112617492676
    3. ' (' → logprob: -7.012112617492676
    4. '(t' → logprob: -7.262112617492676
    5. '[m' → logprob: -7.512112617492676
    6. '(
' → logprob: -9.387112617492676
    7. 't' → logprob: -9.512112617492676
    8. '[' → logprob: -11.012112617492676
    9. ' of' → logprob: -11.762112617492676
    10. '#' → logprob: -12.512112617492676

Token 795: ' l' (ID: 305)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.001579374773427844
    2. ' m' → logprob: -6.501579284667969
    3. '(m' → logprob: -9.501579284667969
    4. 't' → logprob: -13.376579284667969
    5. '[m' → logprob: -15.501579284667969
    6. '   ' → logprob: -16.00157928466797
    7. '	m' → logprob: -16.12657928466797
    8. ' (' → logprob: -16.37657928466797
    9. 'l' → logprob: -16.62657928466797
    10. ' t' → logprob: -16.87657928466797

Token 796: ''ind' (ID: 82245)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.07952535152435303
    2. '(m' → logprob: -2.5795254707336426
    3. ' m' → logprob: -8.204524993896484
    4. '[m' → logprob: -8.329524993896484
    5. ' (' → logprob: -9.204524993896484
    6. '(' → logprob: -12.329524993896484
    7. 't' → logprob: -12.954524993896484
    8. '{' → logprob: -13.079524993896484
    9. '
' → logprob: -13.204524993896484
    10. '(
' → logprob: -13.704524993896484

Token 797: 'ice' (ID: 603)
  Prédit: 'indice'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'indice' → logprob: -0.18441888689994812
    2. 'd' → logprob: -2.9344189167022705
    3. '1' → logprob: -3.5594189167022705
    4. '(m' → logprob: -4.059418678283691
    5. 'dex' → logprob: -4.059418678283691
    6. 'm' → logprob: -4.184418678283691
    7. '+' → logprob: -4.184418678283691
    8. 'index' → logprob: -5.184418678283691
    9. 'indices' → logprob: -5.559418678283691
    10. '[m' → logprob: -6.059418678283691

Token 798: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.011404533870518208
    2. '(m' → logprob: -4.511404514312744
    3. '[m' → logprob: -8.386404991149902
    4. ' m' → logprob: -9.011404991149902
    5. ' (' → logprob: -12.261404991149902
    6. '{' → logprob: -14.511404991149902
    7. '(' → logprob: -15.136404991149902
    8. '	m' → logprob: -15.636404991149902
    9. '<m' → logprob: -15.761404991149902
    10. '1' → logprob: -16.011404037475586

Token 799: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.14273788034915924
    2. '+m' → logprob: -2.642737865447998
    3. 'm' → logprob: -2.892737865447998
    4. '[m' → logprob: -5.642737865447998
    5. '[' → logprob: -6.142737865447998
    6. ' +' → logprob: -8.142738342285156
    7. '+[' → logprob: -9.017738342285156
    8. '1' → logprob: -9.267738342285156
    9. '```' → logprob: -9.892738342285156
    10. '(m' → logprob: -10.017738342285156

Token 800: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003629646496847272
    2. 'm' → logprob: -5.753629684448242
    3. '2' → logprob: -8.003629684448242
    4. '(m' → logprob: -9.628629684448242
    5. '+' → logprob: -10.753629684448242
    6. ' ' → logprob: -11.753629684448242
    7. '+m' → logprob: -12.128629684448242
    8. '
' → logprob: -12.378629684448242
    9. ' m' → logprob: -12.628629684448242
    10. '```' → logprob: -12.753629684448242

Token 801: ',' (ID: 11)
  Prédit: '[m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[m' → logprob: -0.17017054557800293
    2. ']' → logprob: -2.420170545578003
    3. '[' → logprob: -3.420170545578003
    4. ',' → logprob: -4.170170783996582
    5. '<|end|>' → logprob: -4.795170783996582
    6. ',m' → logprob: -6.420170783996582
    7. ')' → logprob: -6.420170783996582
    8. 't' → logprob: -6.795170783996582
    9. '[]' → logprob: -6.795170783996582
    10. '[t' → logprob: -7.045170783996582

Token 802: ' un' (ID: 537)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0440821498632431
    2. ' t' → logprob: -3.1690821647644043
    3. 'm' → logprob: -8.169081687927246
    4. ')' → logprob: -8.419081687927246
    5. ':t' → logprob: -8.419081687927246
    6. ' m' → logprob: -9.294081687927246
    7. ')t' → logprob: -9.419081687927246
    8. '```' → logprob: -10.669081687927246
    9. '...' → logprob: -10.794081687927246
    10. ' ' → logprob: -11.044081687927246

Token 803: ' sur' (ID: 1512)
  Prédit: '[m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[m' → logprob: -0.29761824011802673
    2. '1' → logprob: -2.1726181507110596
    3. '2' → logprob: -2.5476181507110596
    4. 'm' → logprob: -3.6726181507110596
    5. '```' → logprob: -4.297618389129639
    6. '[' → logprob: -4.797618389129639
    7. ':m' → logprob: -4.922618389129639
    8. '(m' → logprob: -5.922618389129639
    9. '+m' → logprob: -6.047618389129639
    10. ' m' → logprob: -6.422618389129639

Token 804: ' deux' (ID: 10301)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9623810658231378e-05
    2. ' ' → logprob: -11.000020027160645
    3. '1' → logprob: -14.000020027160645
    4. '```' → logprob: -14.250020027160645
    5. '3' → logprob: -15.500020027160645
    6. '   ' → logprob: -15.625020027160645
    7. '２' → logprob: -15.625020027160645
    8. '(' → logprob: -15.875020027160645
    9. '  ' → logprob: -16.000019073486328
    10. 'm' → logprob: -16.250019073486328

Token 805: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.243127703666687
    2. '(t' → logprob: -1.493127703666687
    3. 't' → logprob: -2.1181278228759766
    4. ']' → logprob: -2.3681278228759766
    5. '<|end|>' → logprob: -2.9931278228759766
    6. '#' → logprob: -3.2431278228759766
    7. 'print' → logprob: -3.3681278228759766
    8. '(m' → logprob: -3.3681278228759766
    9. '(' → logprob: -3.6181278228759766
    10. '[' → logprob: -3.8681278228759766

Token 806: ' ce' (ID: 2357)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.05250861123204231
    2. ' t' → logprob: -3.302508592605591
    3. ')' → logprob: -4.92750883102417
    4. ']' → logprob: -6.67750883102417
    5. ')t' → logprob: -6.80250883102417
    6. ')
' → logprob: -7.17750883102417
    7. ' ' → logprob: -7.30250883102417
    8. 'print' → logprob: -7.42750883102417
    9. '   ' → logprob: -7.67750883102417
    10. '
' → logprob: -7.80250883102417

Token 807: ' sont' (ID: 5242)
  Prédit: '[m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[m' → logprob: -0.9969428777694702
    2. ']' → logprob: -1.6219428777694702
    3. '[' → logprob: -2.3719429969787598
    4. '[:]' → logprob: -2.4969429969787598
    5. ':' → logprob: -2.8719429969787598
    6. ',' → logprob: -2.9969429969787598
    7. '=' → logprob: -3.6219429969787598
    8. ')' → logprob: -3.9969429969787598
    9. '...' → logprob: -4.37194299697876
    10. '#' → logprob: -4.37194299697876

Token 808: ' les' (ID: 1341)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.07694502174854279
    2. ' t' → logprob: -2.7019450664520264
    3. '(t' → logprob: -5.076944828033447
    4. ' les' → logprob: -8.201945304870605
    5. '[t' → logprob: -8.701945304870605
    6. ' ' → logprob: -9.451945304870605
    7. '   ' → logprob: -9.451945304870605
    8. '	t' → logprob: -10.451945304870605
    9. 'les' → logprob: -10.951945304870605
    10. ')' → logprob: -10.951945304870605

Token 809: ' indices' (ID: 30378)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.008947805501520634
    2. ' t' → logprob: -5.133947849273682
    3. 'indices' → logprob: -6.258947849273682
    4. 'm' → logprob: -7.133947849273682
    5. ' indices' → logprob: -8.633947372436523
    6. '```' → logprob: -10.758947372436523
    7. ' m' → logprob: -10.883947372436523
    8. '[m' → logprob: -11.008947372436523
    9. '`t' → logprob: -11.258947372436523
    10. '(m' → logprob: -11.883947372436523

Token 810: ' cible' (ID: 136857)
  Prédit: '[m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[m' → logprob: -0.20816612243652344
    2. 'source' → logprob: -2.0831661224365234
    3. 'target' → logprob: -3.5831661224365234
    4. 'targets' → logprob: -4.583166122436523
    5. 'm' → logprob: -5.083166122436523
    6. 'sources' → logprob: -5.583166122436523
    7. 'des' → logprob: -5.708166122436523
    8. '```' → logprob: -5.958166122436523
    9. 't' → logprob: -6.083166122436523
    10. 'c' → logprob: -6.458166122436523

Token 811: ' des' (ID: 731)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 812: ' requ' (ID: 7028)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.006078345235437155
    2. 'm' → logprob: -5.631078243255615
    3. ' t' → logprob: -6.131078243255615
    4. ']' → logprob: -9.756078720092773
    5. '[m' → logprob: -10.006078720092773
    6. '(m' → logprob: -10.631078720092773
    7. '...' → logprob: -10.756078720092773
    8. '```' → logprob: -10.756078720092773
    9. ' m' → logprob: -10.881078720092773
    10. 'indices' → logprob: -11.006078720092773

Token 813: 'êtes' (ID: 23720)
  Prédit: '[m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[m' → logprob: -0.7437870502471924
    2. 'êtes' → logprob: -1.4937870502471924
    3. ']' → logprob: -1.6187870502471924
    4. 'ettes' → logprob: -3.9937870502471924
    5. ':m' → logprob: -4.493786811828613
    6. 't' → logprob: -4.743786811828613
    7. 'ets' → logprob: -4.993786811828613
    8. 'ts' → logprob: -5.368786811828613
    9. 'estions' → logprob: -5.368786811828613
    10. ':]' → logprob: -5.368786811828613

Token 814: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5804939866065979
    2. '   ' → logprob: -1.8304939270019531
    3. 'for' → logprob: -2.580493927001953
    4. '[' → logprob: -3.330493927001953
    5. '(' → logprob: -3.955493927001953
    6. '(m' → logprob: -3.955493927001953
    7. '.' → logprob: -3.955493927001953
    8. '[m' → logprob: -3.955493927001953
    9. '#' → logprob: -4.080493927001953
    10. '[:]' → logprob: -4.205493927001953

Token 815: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7523865699768066
    2. ':' → logprob: -1.0023865699768066
    3. 'for' → logprob: -2.5023865699768066
    4. ' for' → logprob: -3.6273865699768066
    5. '[' → logprob: -3.7523865699768066
    6. ')' → logprob: -5.502386569976807
    7. '(' → logprob: -6.252386569976807
    8. '[
' → logprob: -6.252386569976807
    9. ':
' → logprob: -6.252386569976807
    10. '  
' → logprob: -6.377386569976807

Token 816: ' src' (ID: 4537)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9844038486480713
    2. 'for' → logprob: -0.9844038486480713
    3. '[' → logprob: -2.4844038486480713
    4. ' for' → logprob: -3.1094038486480713
    5. ':' → logprob: -3.7344038486480713
    6. 'm' → logprob: -4.234403610229492
    7. '[m' → logprob: -4.234403610229492
    8. ',' → logprob: -4.609403610229492
    9. '[
' → logprob: -4.609403610229492
    10. '#' → logprob: -5.234403610229492

Token 817: '_indices' (ID: 43508)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7027750015258789
    2. ',' → logprob: -0.8277750015258789
    3. ' =' → logprob: -2.702775001525879
    4. 's' → logprob: -7.327775001525879
    5. ' ,' → logprob: -9.952775001525879
    6. ',t' → logprob: -11.577775001525879
    7. ',m' → logprob: -11.702775001525879
    8. '=m' → logprob: -12.077775001525879
    9. '=t' → logprob: -12.577775001525879
    10. ',s' → logprob: -12.577775001525879

Token 818: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07435230910778046
    2. ' =' → logprob: -2.949352264404297
    3. ',' → logprob: -3.949352264404297
    4. '=t' → logprob: -11.699352264404297
    5. ',t' → logprob: -13.199352264404297
    6. ' ,' → logprob: -13.324352264404297
    7. '=
' → logprob: -14.074352264404297
    8. '=m' → logprob: -14.449352264404297
    9. '=

' → logprob: -15.324352264404297
    10. ',
' → logprob: -15.449352264404297

Token 819: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.07889506965875626
    2. ' t' → logprob: -2.578895092010498
    3. '   ' → logprob: -13.20389461517334
    4. '	t' → logprob: -13.32889461517334
    5. ' ' → logprob: -14.07889461517334
    6. '`t' → logprob: -14.45389461517334
    7. '(t' → logprob: -16.203895568847656
    8. '  ' → logprob: -16.453895568847656
    9. ' ' → logprob: -16.453895568847656
    10. '_t' → logprob: -16.578895568847656

Token 820: '[m' (ID: 29271)
  Prédit: '[m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[m' → logprob: -1.1517960956552997e-05
    2. 'm' → logprob: -11.750011444091797
    3. '[' → logprob: -12.750011444091797
    4. '(m' → logprob: -15.375011444091797
    5. '[
' → logprob: -15.750011444091797
    6. ' [' → logprob: -16.375011444091797
    7. '[M' → logprob: -16.500011444091797
    8. '   ' → logprob: -16.750011444091797
    9. '[(' → logprob: -16.875011444091797
    10. '[t' → logprob: -18.125011444091797

Token 821: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00013464801304508
    2. ' +' → logprob: -9.625134468078613
    3. '+m' → logprob: -10.000134468078613
    4. '::' → logprob: -11.625134468078613
    5. '+
' → logprob: -12.375134468078613
    6. '1' → logprob: -12.625134468078613
    7. '[' → logprob: -12.875134468078613
    8. '   ' → logprob: -14.000134468078613
    9. '+[' → logprob: -14.500134468078613
    10. ':' → logprob: -14.625134468078613

Token 822: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.664371848164592e-05
    2. ' ' → logprob: -11.625016212463379
    3. '::' → logprob: -12.750016212463379
    4. '   ' → logprob: -13.375016212463379
    5. '
' → logprob: -13.875016212463379
    6. '```' → logprob: -14.687516212463379
    7. '+' → logprob: -14.875016212463379
    8. '(' → logprob: -15.250016212463379
    9. '2' → logprob: -15.562516212463379
    10. '0' → logprob: -15.750016212463379

Token 823: '::' (ID: 742)
  Prédit: '::'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '::' → logprob: -0.0009501680615358055
    2. '[' → logprob: -7.500950336456299
    3. ':m' → logprob: -8.37594985961914
    4. ' ::' → logprob: -10.12594985961914
    5. '::
' → logprob: -10.25094985961914
    6. ']' → logprob: -10.75094985961914
    7. ':' → logprob: -11.00094985961914
    8. ':t' → logprob: -11.25094985961914
    9. 't' → logprob: -11.62594985961914
    10. ':::' → logprob: -11.75094985961914

Token 824: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '   ' → logprob: -17.625001907348633
    4. '```' → logprob: -19.125001907348633
    5. '２' → logprob: -19.500001907348633
    6. '۲' → logprob: -19.750001907348633
    7. '  ' → logprob: -20.062501907348633
    8. '	' → logprob: -20.937501907348633
    9. '3' → logprob: -21.125001907348633
    10. '1' → logprob: -21.125001907348633

Token 825: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02697494812309742
    2. ']
' → logprob: -3.65197491645813
    3. ']
' → logprob: -7.526975154876709
    4. ' ]' → logprob: -9.77697467803955
    5. ']

' → logprob: -10.15197467803955
    6. ',' → logprob: -11.15197467803955
    7. ' ]
' → logprob: -12.52697467803955
    8. 't' → logprob: -12.90197467803955
    9. '];' → logprob: -12.90197467803955
    10. 'm' → logprob: -13.02697467803955

Token 826: '   ' (ID: 271)
  Prédit: 'dst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dst' → logprob: -0.2612743377685547
    2. 'src' → logprob: -2.1362743377685547
    3. 'dest' → logprob: -2.3862743377685547
    4. ' dst' → logprob: -5.261274337768555
    5. ' tgt' → logprob: -5.511274337768555
    6. 't' → logprob: -5.636274337768555
    7. 'target' → logprob: -5.761274337768555
    8. '   ' → logprob: -6.511274337768555
    9. '	dst' → logprob: -6.886274337768555
    10. ' ' → logprob: -8.511274337768555

Token 827: ' dst' (ID: 23480)
  Prédit: 'dst'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dst' (adapté à ' dst') → logprob: -0.39503347873687744
    2. 'dest' → logprob: -1.1450334787368774
    3. 't' → logprob: -5.520033359527588
    4. 'src' → logprob: -6.145033359527588
    5. ' dst' → logprob: -7.395033359527588
    6. ' tgt' → logprob: -7.645033359527588
    7. 'target' → logprob: -7.645033359527588
    8. ' dest' → logprob: -9.395033836364746
    9. 'des' → logprob: -9.520033836364746
    10. 'tar' → logprob: -9.645033836364746

Token 828: '_indices' (ID: 43508)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3306959867477417
    2. '=' → logprob: -2.0806961059570312
    3. '_indices' → logprob: -2.5806961059570312
    4. '=m' → logprob: -2.5806961059570312
    5. 'indices' → logprob: -6.080696105957031
    6. '[m' → logprob: -6.330696105957031
    7. 'Indices' → logprob: -8.330696105957031
    8. '=_' → logprob: -8.330696105957031
    9. 's' → logprob: -9.205696105957031
    10. '+' → logprob: -9.330696105957031

Token 829: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1602245420217514
    2. ' =' → logprob: -1.9102245569229126
    3. '=t' → logprob: -15.785224914550781
    4. '=
' → logprob: -15.785224914550781
    5. ')' → logprob: -17.28522491455078
    6. '=m' → logprob: -17.53522491455078
    7. ',' → logprob: -17.66022491455078
    8. ' ' → logprob: -17.78522491455078
    9. ' =
' → logprob: -17.91022491455078
    10. 's' → logprob: -18.28522491455078

Token 830: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.20141568779945374
    2. ' t' → logprob: -1.7014156579971313
    3. '	t' → logprob: -13.201416015625
    4. '`t' → logprob: -15.201416015625
    5. ' ' → logprob: -16.451416015625
    6. '(t' → logprob: -16.701416015625
    7. '   ' → logprob: -16.826416015625
    8. ' т' → logprob: -16.826416015625
    9. ' ' → logprob: -17.576416015625
    10. ')t' → logprob: -17.701416015625

Token 831: '[m' (ID: 29271)
  Prédit: '[m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[m' → logprob: -1.0280383548888494e-06
    2. '[t' → logprob: -14.250000953674316
    3. '[' → logprob: -15.125000953674316
    4. 'm' → logprob: -16.500001907348633
    5. '[
' → logprob: -17.000001907348633
    6. '(m' → logprob: -17.250001907348633
    7. 't' → logprob: -17.375001907348633
    8. ' [' → logprob: -18.250001907348633
    9. '   ' → logprob: -21.750001907348633
    10. '[(' → logprob: -22.125001907348633

Token 832: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -4.1318875446449965e-05
    2. '+m' → logprob: -10.250041007995605
    3. ' +' → logprob: -12.875041007995605
    4. '[' → logprob: -12.875041007995605
    5. '[m' → logprob: -15.750041007995605
    6. '+[' → logprob: -15.750041007995605
    7. '2' → logprob: -15.875041007995605
    8. 'm' → logprob: -16.000041961669922
    9. '+
' → logprob: -16.250041961669922
    10. '```' → logprob: -17.125041961669922

Token 833: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.8889261304575484e-06
    2. '1' → logprob: -13.375003814697266
    3. ' ' → logprob: -13.500003814697266
    4. '```' → logprob: -14.875003814697266
    5. '
' → logprob: -16.187503814697266
    6. '   ' → logprob: -16.187503814697266
    7. '3' → logprob: -17.062503814697266
    8. '２' → logprob: -17.500003814697266
    9. '0' → logprob: -17.625003814697266
    10. '  ' → logprob: -17.750003814697266

Token 834: '::' (ID: 742)
  Prédit: '::'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '::' → logprob: -0.0006810996565036476
    2. '[' → logprob: -7.750680923461914
    3. ']' → logprob: -8.375680923461914
    4. '::-' → logprob: -12.500680923461914
    5. ':]' → logprob: -12.500680923461914
    6. ' ::' → logprob: -12.625680923461914
    7. ':' → logprob: -12.750680923461914
    8. 'm' → logprob: -14.125680923461914
    9. '::_' → logprob: -14.125680923461914
    10. '[::-' → logprob: -14.125680923461914

Token 835: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.511406809295295e-06
    2. ' ' → logprob: -12.000006675720215
    3. '```' → logprob: -16.6875057220459
    4. '۲' → logprob: -16.9375057220459
    5. '   ' → logprob: -17.1875057220459
    6. '２' → logprob: -17.3750057220459
    7. '  ' → logprob: -17.7500057220459
    8. '...' → logprob: -17.8750057220459
    9. '২' → logprob: -18.6875057220459
    10. '3' → logprob: -18.6875057220459

Token 836: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12144196778535843
    2. ']' → logprob: -2.2464420795440674
    3. '   ' → logprob: -5.496441841125488
    4. ')
' → logprob: -5.871441841125488
    5. ')

' → logprob: -6.871441841125488
    6. ' )' → logprob: -8.871441841125488
    7. ']
' → logprob: -8.996441841125488
    8. ')
' → logprob: -9.246441841125488
    9. ']

' → logprob: -9.371441841125488
    10. '])' → logprob: -9.996441841125488

Token 837: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4442979395389557
    2. '   ' → logprob: -1.1942979097366333
    3. ' for' → logprob: -3.069298028945923
    4. '```' → logprob: -5.194297790527344
    5. '
' → logprob: -5.944297790527344
    6. '    
' → logprob: -7.444297790527344
    7. '<|end|>' → logprob: -8.694297790527344
    8. '	for' → logprob: -8.819297790527344
    9. '  
' → logprob: -9.569297790527344
    10. '``' → logprob: -10.194297790527344

Token 838: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06824886053800583
    2. '   ' → logprob: -2.818248748779297
    3. ' for' → logprob: -5.318248748779297
    4. '
' → logprob: -7.193248748779297
    5. '    
' → logprob: -9.068248748779297
    6. 'result' → logprob: -9.068248748779297
    7. 'print' → logprob: -9.318248748779297
    8. '```' → logprob: -9.693248748779297
    9. '#' (adapté à ' #') → logprob: -9.818248748779297
    10. 'results' → logprob: -10.193248748779297

Token 839: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3149968981742859
    2. 'results' → logprob: -2.3149969577789307
    3. 'res' → logprob: -2.9399969577789307
    4. 'answers' → logprob: -2.9399969577789307
    5. 'result' → logprob: -3.9399969577789307
    6. 'q' → logprob: -4.189996719360352
    7. 'answer' → logprob: -4.939996719360352
    8. 'r' → logprob: -5.064996719360352
    9. 'steps' → logprob: -5.314996719360352
    10. '   ' → logprob: -5.939996719360352

Token 840: ' extrait' (ID: 194006)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4430589973926544
    2. ' for' → logprob: -1.568058967590332
    3. 'print' → logprob: -2.193058967590332
    4. ' print' → logprob: -3.568058967590332
    5. '#' → logprob: -6.568058967590332
    6. '   ' → logprob: -6.693058967590332
    7. 's' → logprob: -7.193058967590332
    8. ' #' → logprob: -7.193058967590332
    9. 'result' → logprob: -7.568058967590332
    10. '
' → logprob: -7.568058967590332

Token 841: ',' (ID: 11)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'results' → logprob: -1.224963903427124
    2. 'result' → logprob: -2.349963903427124
    3. ' la' → logprob: -2.474963903427124
    4. 'dist' → logprob: -2.724963903427124
    5. 'les' → logprob: -2.974963903427124
    6. 'fw' → logprob: -3.099963903427124
    7. ' les' → logprob: -3.224963903427124
    8. ' distances' → logprob: -3.224963903427124
    9. ' le' → logprob: -3.349963903427124
    10. 'le' → logprob: -3.349963903427124

Token 842: ' pour' (ID: 1930)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.1822631359100342
    2. 'result' → logprob: -1.4322631359100342
    3. 'results' → logprob: -1.6822631359100342
    4. 'answers' → logprob: -2.057263135910034
    5. 'answer' → logprob: -3.682263135910034
    6. ' res' → logprob: -3.932263135910034
    7. ' answers' → logprob: -4.057263374328613
    8. ' results' → logprob: -4.182263374328613
    9. ' result' → logprob: -4.307263374328613
    10. 're' → logprob: -5.182263374328613

Token 843: ' chaque' (ID: 21194)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.3392475843429565
    2. 'src' → logprob: -1.8392475843429565
    3. 'range' → logprob: -1.9642475843429565
    4. ' i' → logprob: -2.089247703552246
    5. ' range' → logprob: -3.089247703552246
    6. '_' → logprob: -3.089247703552246
    7. ' src' → logprob: -3.214247703552246
    8. 'each' → logprob: -3.339247703552246
    9. ' each' → logprob: -3.714247703552246
    10. ' _' → logprob: -4.339247703552246

Token 844: ' requ' (ID: 7028)
  Prédit: 'query'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'query' → logprob: -0.7347124218940735
    2. 'src' → logprob: -1.7347123622894287
    3. ' query' → logprob: -2.6097123622894287
    4. 'pair' → logprob: -2.8597123622894287
    5. ' pair' → logprob: -2.9847123622894287
    6. ' src' → logprob: -3.6097123622894287
    7. ' i' → logprob: -3.9847123622894287
    8. 'i' → logprob: -3.9847123622894287
    9. 'range' → logprob: -4.609712600708008
    10. 'source' → logprob: -4.984712600708008

Token 845: 'ête' (ID: 16808)
  Prédit: 'ête'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ête' → logprob: -0.019130583852529526
    2. 'êt' → logprob: -4.769130706787109
    3. 'src' → logprob: -5.519130706787109
    4. 'ete' → logprob: -6.144130706787109
    5. 'êtes' → logprob: -7.144130706787109
    6. 'ète' → logprob: -7.394130706787109
    7. 'quête' → logprob: -7.769130706787109
    8. '#' → logprob: -8.01913070678711
    9. 'érence' → logprob: -8.26913070678711
    10. 'et' → logprob: -8.26913070678711

Token 846: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03983473777770996
    2. ' ,' → logprob: -3.91483473777771
    3. '   ' → logprob: -5.664834976196289
    4. 'results' → logprob: -5.914834976196289
    5. ')' → logprob: -6.039834976196289
    6. 'result' → logprob: -6.289834976196289
    7. ' =' → logprob: -6.789834976196289
    8. ' la' → logprob: -7.289834976196289
    9. ' les' → logprob: -7.289834976196289
    10. ' ' → logprob: -7.539834976196289

Token 847: ' la' (ID: 557)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.474161148071289
    2. 'res' → logprob: -1.599161148071289
    3. 'answers' → logprob: -1.974161148071289
    4. ' result' → logprob: -2.349161148071289
    5. 'results' → logprob: -2.349161148071289
    6. ' answers' → logprob: -2.849161148071289
    7. ' results' → logprob: -3.599161148071289
    8. ' res' → logprob: -3.849161148071289
    9. '   ' → logprob: -3.849161148071289
    10. 'answer' → logprob: -4.099161148071289

Token 848: ' valeur' (ID: 41664)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.5207117199897766
    2. 'fw' → logprob: -1.5207116603851318
    3. 'print' → logprob: -2.395711660385132
    4. 'min' → logprob: -4.145711898803711
    5. 'results' → logprob: -4.395711898803711
    6. 'dist' → logprob: -4.395711898803711
    7. ' result' → logprob: -4.520711898803711
    8. 'res' → logprob: -4.770711898803711
    9. 'minimum' → logprob: -4.895711898803711
    10. ' fw' → logprob: -5.145711898803711

Token 849: ' correspond' (ID: 11095)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.1076635122299194
    2. ' =' → logprob: -1.6076635122299194
    3. ' result' → logprob: -1.7326635122299194
    4. '=' → logprob: -2.107663631439209
    5. 's' → logprob: -3.357663631439209
    6. 'results' → logprob: -3.607663631439209
    7. 'answer' → logprob: -3.607663631439209
    8. ' fw' → logprob: -4.232663631439209
    9. 'res' → logprob: -4.357663631439209
    10. 'fw' → logprob: -4.607663631439209

Token 850: 'ante' (ID: 2116)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4954155385494232
    2. 'e' → logprob: -1.8704155683517456
    3. 's' → logprob: -2.245415449142456
    4. 'aux' → logprob: -3.245415449142456
    5. 'es' → logprob: -3.370415449142456
    6. '=' → logprob: -4.495415687561035
    7. 'à' → logprob: -4.745415687561035
    8. 'au' → logprob: -4.745415687561035
    9. ' à' → logprob: -5.370415687561035
    10. ' =' → logprob: -5.370415687561035

Token 851: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17670904099941254
    2. '=' → logprob: -2.551708936691284
    3. 'result' → logprob: -3.926708936691284
    4. 'fw' → logprob: -4.176709175109863
    5. ' fw' → logprob: -4.301709175109863
    6. '   ' → logprob: -5.051709175109863
    7. 'results' → logprob: -5.426709175109863
    8. ' in' → logprob: -5.426709175109863
    9. ':' → logprob: -5.926709175109863
    10. ' result' → logprob: -5.926709175109863

Token 852: 'plus' (ID: 11601)
  Prédit: 'fw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fw' → logprob: -0.008903376758098602
    2. ' fw' → logprob: -4.758903503417969
    3. 'result' → logprob: -8.883903503417969
    4. 'answer' → logprob: -10.258903503417969
    5. 'res' → logprob: -10.383903503417969
    6. '   ' → logprob: -10.883903503417969
    7. ' result' → logprob: -11.383903503417969
    8. 'answers' → logprob: -11.633903503417969
    9. 'ans' → logprob: -11.758903503417969
    10. 'f' → logprob: -12.133903503417969

Token 853: ' court' (ID: 10314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6934415698051453
    2. ']' → logprob: -1.19344162940979
    3. ')' → logprob: -2.81844162940979
    4. '1' → logprob: -3.31844162940979
    5. '_fw' → logprob: -3.81844162940979
    6. ' ' → logprob: -4.443441390991211
    7. 'fw' → logprob: -4.693441390991211
    8. '<|end|>' → logprob: -4.818441390991211
    9. '_' → logprob: -4.943441390991211
    10. '[' → logprob: -5.068441390991211

Token 854: ' chemin' (ID: 45035)
  Prédit: '_che'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_che' → logprob: -0.43902096152305603
    2. '_' → logprob: -1.3140209913253784
    3. '_path' → logprob: -3.314020872116089
    4. '_paths' → logprob: -3.689020872116089
    5. '_distance' → logprob: -5.064021110534668
    6. ' chemin' → logprob: -5.314021110534668
    7. '_tokens' → logprob: -5.814021110534668
    8. '_token' → logprob: -6.189021110534668
    9. '_dist' → logprob: -6.314021110534668
    10. '_de' → logprob: -7.314021110534668

Token 855: ' en' (ID: 469)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3369884788990021
    2. '=' → logprob: -2.2119884490966797
    3. ' =' → logprob: -2.4619884490966797
    4. 's' → logprob: -3.8369884490966797
    5. '   ' → logprob: -4.46198844909668
    6. ' fw' → logprob: -4.83698844909668
    7. 'fw' → logprob: -4.96198844909668
    8. ']' → logprob: -5.33698844909668
    9. '_fw' → logprob: -5.33698844909668
    10. ',' → logprob: -5.46198844909668

Token 856: ' nombre' (ID: 9733)
  Prédit: 'fw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fw' → logprob: -0.00046510808169841766
    2. ' fw' → logprob: -8.375465393066406
    3. 'range' → logprob: -9.625465393066406
    4. 'int' → logprob: -10.250465393066406
    5. '1' → logprob: -10.375465393066406
    6. 'steps' → logprob: -11.000465393066406
    7. '_fw' → logprob: -11.375465393066406
    8. 'nombre' → logprob: -11.750465393066406
    9. 'indices' → logprob: -12.125465393066406
    10. 'f' → logprob: -12.125465393066406

Token 857: ' de' (ID: 334)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.2870112359523773
    2. ' d' → logprob: -1.6620112657546997
    3. 'de' → logprob: -3.66201114654541
    4. '   ' → logprob: -4.28701114654541
    5. ' de' → logprob: -5.03701114654541
    6. '=' → logprob: -6.28701114654541
    7. 'of' → logprob: -6.28701114654541
    8. ')' → logprob: -6.53701114654541
    9. ' of' → logprob: -6.78701114654541
    10. ' ' → logprob: -6.91201114654541

Token 858: ' "' (ID: 392)
  Prédit: 'ét'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ét' → logprob: -0.633284866809845
    2. 'ar' → logprob: -1.1332848072052002
    3. 'fw' → logprob: -2.8832848072052
    4. 's' → logprob: -3.2582848072052
    5. 'et' → logprob: -3.5082848072052
    6. 'segments' → logprob: -5.133285045623779
    7. 'steps' → logprob: -5.258285045623779
    8. 'f' → logprob: -6.008285045623779
    9. 'edges' → logprob: -6.508285045623779
    10. 'tr' → logprob: -7.133285045623779

Token 859: 's' (ID: 82)
  Prédit: 'steps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'steps' → logprob: -0.7975796461105347
    2. 'ét' → logprob: -1.0475796461105347
    3. 'ar' → logprob: -2.422579765319824
    4. 's' → logprob: -3.172579765319824
    5. 'et' → logprob: -3.422579765319824
    6. 'edges' → logprob: -4.047579765319824
    7. ' étapes' → logprob: -5.672579765319824
    8. 'inter' → logprob: -5.797579765319824
    9. 'é' → logprob: -6.797579765319824
    10. 'salt' → logprob: -6.922579765319824

Token 860: 'auts' (ID: 192811)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.3606206178665161
    2. 'ét' → logprob: -1.6106206178665161
    3. 's' → logprob: -1.9856206178665161
    4. 'steps' → logprob: -2.3606204986572266
    5. 'et' → logprob: -2.8606204986572266
    6. '_steps' → logprob: -2.9856204986572266
    7. ' étapes' → logprob: -3.2356204986572266
    8. 'é' → logprob: -3.2356204986572266
    9. ' ' → logprob: -3.8606204986572266
    10. '_edges' → logprob: -3.8606204986572266

Token 861: '"' (ID: 1)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05824744701385498
    2. '=' → logprob: -3.9332475662231445
    3. ' )' → logprob: -4.9332475662231445
    4. ']' → logprob: -5.3082475662231445
    5. '   ' → logprob: -5.8082475662231445
    6. ' =' → logprob: -6.0582475662231445
    7. '),' → logprob: -6.0582475662231445
    8. ')
' → logprob: -6.0582475662231445
    9. '[' → logprob: -6.1832475662231445
    10. ',' → logprob: -6.1832475662231445

Token 862: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03429386019706726
    2. ' )' → logprob: -4.7842936515808105
    3. ',' → logprob: -5.0342936515808105
    4. '   ' → logprob: -5.1592936515808105
    5. ' =' → logprob: -5.7842936515808105
    6. ')
' → logprob: -6.2842936515808105
    7. '=' → logprob: -6.4092936515808105
    8. 'fw' → logprob: -6.5342936515808105
    9. ' fw' → logprob: -7.2842936515808105
    10. 'from' → logprob: -7.4092936515808105

Token 863: ' <=' (ID: 5017)
  Prédit: 'fw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fw' → logprob: -0.007544153835624456
    2. ' fw' → logprob: -5.382544040679932
    3. 'steps' → logprob: -6.632544040679932
    4. 'ar' → logprob: -7.632544040679932
    5. 'edges' → logprob: -7.882544040679932
    6. 'f' → logprob: -8.38254451751709
    7. 'indices' → logprob: -9.75754451751709
    8. 'fa' → logprob: -10.00754451751709
    9. '_fw' → logprob: -10.13254451751709
    10. ' ' → logprob: -10.25754451751709

Token 864: ' l' (ID: 305)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6413264870643616
    2. 'l' → logprob: -1.1413264274597168
    3. 'fw' → logprob: -2.016326427459717
    4. 'steps' → logprob: -5.016326427459717
    5. ' fw' → logprob: -5.641326427459717
    6. ' ' → logprob: -5.766326427459717
    7. 'True' → logprob: -6.141326427459717
    8. ' l' → logprob: -6.891326427459717
    9. '_fw' → logprob: -7.891326427459717
    10. '   ' → logprob: -8.516326904296875

Token 865: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10378871858119965
    2. 'fw' → logprob: -3.2287886142730713
    3. ' )' → logprob: -3.7287886142730713
    4. '),' → logprob: -5.10378885269165
    5. ' fw' → logprob: -5.10378885269165
    6. ')
' → logprob: -5.47878885269165
    7. ')`' → logprob: -5.72878885269165
    8. ')
' → logprob: -5.85378885269165
    9. ',' → logprob: -6.35378885269165
    10. '):' → logprob: -6.85378885269165

Token 866: ' dans' (ID: 2671)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.9503755569458008
    2. 'fw' → logprob: -2.200375556945801
    3. ' =' → logprob: -2.575375556945801
    4. 'answers' → logprob: -2.575375556945801
    5. 'answer' → logprob: -2.700375556945801
    6. 'res' → logprob: -2.825375556945801
    7. '=' → logprob: -2.825375556945801
    8. 'print' → logprob: -3.200375556945801
    9. 'ans' → logprob: -3.450375556945801
    10. '   ' → logprob: -3.700375556945801

Token 867: ' la' (ID: 557)
  Prédit: 'fw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fw' → logprob: -0.0021874953527003527
    2. ' fw' → logprob: -6.127187728881836
    3. '_fw' → logprob: -13.877187728881836
    4. 'f' → logprob: -14.502187728881836
    5. ' ' → logprob: -14.627187728881836
    6. '   ' → logprob: -15.252187728881836
    7. '/fw' → logprob: -16.502187728881836
    8. '-fw' → logprob: -16.752187728881836
    9. '
' → logprob: -17.127187728881836
    10. 'int' → logprob: -18.252187728881836

Token 868: ' matr' (ID: 25095)
  Prédit: 'fw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fw' → logprob: -3.5358694731257856e-05
    2. ' fw' → logprob: -10.375035285949707
    3. 'f' → logprob: -13.375035285949707
    4. '_fw' → logprob: -13.750035285949707
    5. 'fv' → logprob: -15.125035285949707
    6. 'int' → logprob: -15.250035285949707
    7. 'matrix' → logprob: -15.875035285949707
    8. 'array' → logprob: -16.250036239624023
    9. '
' → logprob: -16.500036239624023
    10. '...' → logprob: -16.750036239624023

Token 869: 'ice' (ID: 603)
  Prédit: 'ix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ix' → logprob: -0.0011822503292933106
    2. 'ice' → logprob: -6.7511820793151855
    3. 'x' → logprob: -12.126182556152344
    4. 'rix' → logprob: -13.376182556152344
    5. 'fw' → logprob: -14.126182556152344
    6. 'atrix' → logprob: -14.251182556152344
    7. 'ic' → logprob: -14.251182556152344
    8. '   ' → logprob: -14.501182556152344
    9. ' ix' → logprob: -14.626182556152344
    10. '_ix' → logprob: -14.876182556152344

Token 870: ' de' (ID: 334)
  Prédit: 'fw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fw' → logprob: -0.001088543445803225
    2. ' fw' → logprob: -7.251088619232178
    3. 'result' → logprob: -9.00108814239502
    4. 'dist' → logprob: -10.00108814239502
    5. '_fw' → logprob: -10.00108814239502
    6. ' =' → logprob: -10.12608814239502
    7. '   ' → logprob: -10.62608814239502
    8. '=' → logprob: -10.75108814239502
    9. 'res' → logprob: -10.75108814239502
    10. 'de' → logprob: -11.25108814239502

Token 871: ' résultats' (ID: 48985)
  Prédit: 'fw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fw' → logprob: -0.0005663761985488236
    2. ' fw' → logprob: -8.125566482543945
    3. 'dist' → logprob: -8.500566482543945
    4. 'indices' → logprob: -10.625566482543945
    5. 'f' → logprob: -10.875566482543945
    6. 'distance' → logprob: -11.625566482543945
    7. 'result' → logprob: -12.625566482543945
    8. ' distances' → logprob: -12.875566482543945
    9. 'flo' → logprob: -13.375566482543945
    10. '_fw' → logprob: -13.625566482543945

Token 872: ' fw' (ID: 60172)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9511522650718689
    2. 'result' → logprob: -1.7011523246765137
    3. 'fw' → logprob: -2.0761523246765137
    4. 'res' → logprob: -2.4511523246765137
    5. '   ' → logprob: -2.5761523246765137
    6. '=' → logprob: -2.8261523246765137
    7. 'answer' → logprob: -3.5761523246765137
    8. 'ans' → logprob: -4.701152324676514
    9. 'answers' → logprob: -4.701152324676514
    10. ' fw' → logprob: -4.951152324676514

Token 873: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.080963092041202e-06
    2. '_' → logprob: -13.375004768371582
    3. ' ' → logprob: -14.250004768371582
    4. '=' → logprob: -14.250004768371582
    5. ' =' → logprob: -14.500004768371582
    6. '1' → logprob: -14.625004768371582
    7. 'for' → logprob: -15.250004768371582
    8. '```' → logprob: -15.375004768371582
    9. 'result' → logprob: -15.875004768371582
    10. '   ' → logprob: -16.6250057220459

Token 874: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25180649757385254
    2. 'result' → logprob: -2.6268064975738525
    3. ' =' → logprob: -3.3768064975738525
    4. 'results' → logprob: -3.8768064975738525
    5. 'res' → logprob: -4.001806259155273
    6. 'print' → logprob: -4.251806259155273
    7. '=' → logprob: -4.376806259155273
    8. 'for' → logprob: -4.376806259155273
    9. 'answers' → logprob: -4.501806259155273
    10. 'answer' → logprob: -4.876806259155273

Token 875: '   ' (ID: 271)
  Prédit: 'fw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fw' → logprob: -1.191910982131958
    2. '[' → logprob: -1.691910982131958
    3. 'result' → logprob: -2.066910982131958
    4. 'print' → logprob: -2.191910982131958
    5. ' fw' → logprob: -2.816910982131958
    6. ' print' → logprob: -3.191910982131958
    7. '=' → logprob: -3.191910982131958
    8. ' result' → logprob: -3.816910982131958
    9. ' =' → logprob: -3.941910982131958
    10. 'results' → logprob: -4.566910743713379

Token 876: ' results' (ID: 4376)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.1326563358306885
    2. 'print' → logprob: -1.3826563358306885
    3. 'result' → logprob: -1.8826563358306885
    4. 'ans' → logprob: -2.8826563358306885
    5. 'answer' → logprob: -2.8826563358306885
    6. 'answers' → logprob: -3.1326563358306885
    7. 'fw' → logprob: -3.3826563358306885
    8. 'out' → logprob: -4.007656097412109
    9. 'r' → logprob: -4.507656097412109
    10. ' print' → logprob: -4.507656097412109

Token 877: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132631182670593
    2. ' =' → logprob: -1.313263177871704
    3. ',' → logprob: -15.188262939453125
    4. ' ' → logprob: -15.438262939453125
    5. '[' → logprob: -15.813262939453125
    6. '.=' → logprob: -15.938262939453125
    7. ' =[' → logprob: -16.063262939453125
    8. '＝' → logprob: -16.438262939453125
    9. '[:]' → logprob: -16.688262939453125
    10. ' =
' → logprob: -16.688262939453125

Token 878: ' fw' (ID: 60172)
  Prédit: 'fw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fw' → logprob: -0.0008074867073446512
    2. ' fw' → logprob: -7.250807285308838
    3. 'f' → logprob: -9.875807762145996
    4. 'int' → logprob: -10.750807762145996
    5. 'array' → logprob: -10.875807762145996
    6. '[' → logprob: -13.375807762145996
    7. '   ' → logprob: -14.250807762145996
    8. '[f' → logprob: -14.750807762145996
    9. ' ' → logprob: -15.000807762145996
    10. 'fv' → logprob: -15.375807762145996

Token 879: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. '_' → logprob: -18.125
    3. ' ' → logprob: -18.25
    4. '２' → logprob: -18.625
    5. '۲' → logprob: -18.75
    6. '```' → logprob: -18.875
    7. '٢' → logprob: -19.9375
    8. '₂' → logprob: -20.1875
    9. '   ' → logprob: -20.75
    10. '২' → logprob: -20.8125

Token 880: '[src' (ID: 164384)
  Prédit: '[src'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[src' → logprob: -0.0001227276516146958
    2. '[(' → logprob: -9.250123023986816
    3. '[' → logprob: -11.125123023986816
    4. '(src' → logprob: -11.750123023986816
    5. '[[' → logprob: -13.375123023986816
    6. '[
' → logprob: -13.500123023986816
    7. '[s' → logprob: -15.125123023986816
    8. '<src' → logprob: -15.750123023986816
    9. ' [' → logprob: -15.875123023986816
    10. '[source' → logprob: -16.0001220703125

Token 881: '_indices' (ID: 43508)
  Prédit: '_indices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_indices' → logprob: -6.015305552864447e-05
    2. '_,' → logprob: -10.500060081481934
    3. '_' → logprob: -11.125060081481934
    4. 'indices' → logprob: -11.875060081481934
    5. ',' → logprob: -13.000060081481934
    6. '_]' → logprob: -13.375060081481934
    7. '"indices' → logprob: -13.750060081481934
    8. ',_' → logprob: -13.875060081481934
    9. ' _' → logprob: -13.875060081481934
    10. '_
' → logprob: -13.875060081481934

Token 882: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0020886387210339308
    2. ',d' → logprob: -6.50208854675293
    3. ' ,' → logprob: -8.25208854675293
    4. ',n' → logprob: -10.00208854675293
    5. ',t' → logprob: -10.25208854675293
    6. ',m' → logprob: -10.37708854675293
    7. ',r' → logprob: -10.50208854675293
    8. ',b' → logprob: -10.62708854675293
    9. ',c' → logprob: -10.87708854675293
    10. ',np' → logprob: -11.12708854675293

Token 883: ' dst' (ID: 23480)
  Prédit: 'dst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dst' → logprob: -0.0002614550176076591
    2. ' dst' → logprob: -8.250261306762695
    3. '(dst' → logprob: -16.375261306762695
    4. '	dst' → logprob: -18.125261306762695
    5. '.dst' → logprob: -19.125261306762695
    6. 'src' → logprob: -19.375261306762695
    7. '_dst' → logprob: -19.875261306762695
    8. 'Dst' → logprob: -20.750261306762695
    9. 'd' → logprob: -21.500261306762695
    10. '
' → logprob: -21.625261306762695

Token 884: '_indices' (ID: 43508)
  Prédit: '_indices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_indices' → logprob: -0.0001398929744027555
    2. 'indices' → logprob: -9.000140190124512
    3. 'Indices' → logprob: -11.250140190124512
    4. '"indices' → logprob: -14.125140190124512
    5. 'dst' → logprob: -14.375140190124512
    6. '+' → logprob: -14.625140190124512
    7. '   ' → logprob: -15.750140190124512
    8. '_' → logprob: -15.750140190124512
    9. ' indices' → logprob: -15.875140190124512
    10. 'src' → logprob: -15.875140190124512

Token 885: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02385200560092926
    2. '].' → logprob: -3.8988521099090576
    3. ' ]' → logprob: -6.1488518714904785
    4. ']
' → logprob: -7.2738518714904785
    5. '.tolist' → logprob: -8.898852348327637
    6. ' ].' → logprob: -9.523852348327637
    7. ']==' → logprob: -9.773852348327637
    8. '.astype' → logprob: -9.773852348327637
    9. ']>=' → logprob: -10.773852348327637
    10. ')' → logprob: -11.148852348327637

Token 886: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6144243478775024
    2. '   ' → logprob: -0.9894243478775024
    3. 'print' → logprob: -2.739424228668213
    4. ' for' → logprob: -3.989424228668213
    5. '```' → logprob: -6.614424228668213
    6. '
' → logprob: -7.239424228668213
    7. 'import' → logprob: -7.364424228668213
    8. 'return' → logprob: -7.489424228668213
    9. ' print' → logprob: -7.989424228668213
    10. '[' → logprob: -8.864424705505371

Token 887: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1730363816022873
    2. 'print' → logprob: -2.0480363368988037
    3. '   ' → logprob: -3.6730363368988037
    4. ' for' → logprob: -5.798036575317383
    5. '
' → logprob: -6.798036575317383
    6. '```' → logprob: -9.173036575317383
    7. 'return' → logprob: -9.298036575317383
    8. ' print' → logprob: -9.673036575317383
    9. 'import' → logprob: -10.173036575317383
    10. '[' → logprob: -10.798036575317383

Token 888: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3884642720222473
    2. 'print' → logprob: -1.1384642124176025
    3. 'results' → logprob: -7.888464450836182
    4. '   ' → logprob: -8.138463973999023
    5. ' for' → logprob: -8.263463973999023
    6. 'import' → logprob: -8.763463973999023
    7. 'res' → logprob: -9.138463973999023
    8. 'out' → logprob: -9.138463973999023
    9. 'result' → logprob: -9.388463973999023
    10. 'from' → logprob: -10.388463973999023

Token 889: ' "' (ID: 392)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6108536720275879
    2. 'print' → logprob: -0.9858536720275879
    3. ' for' → logprob: -2.860853672027588
    4. ' print' → logprob: -3.985853672027588
    5. '[' → logprob: -5.360853672027588
    6. 'where' → logprob: -6.985853672027588
    7. '
' → logprob: -7.110853672027588
    8. '=' → logprob: -7.610853672027588
    9. ' where' → logprob: -8.48585319519043
    10. ' =' → logprob: -8.61085319519043

Token 890: 'clip' (ID: 11945)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.04078393429517746
    2. 'for' → logprob: -3.2907838821411133
    3. 'where' → logprob: -6.290783882141113
    4. 'put' → logprob: -7.665783882141113
    5. 'write' → logprob: -9.415783882141113
    6. 'pr' → logprob: -9.665783882141113
    7. 'prin' → logprob: -10.040783882141113
    8. 'stdout' → logprob: -10.165783882141113
    9. 'mask' → logprob: -10.290783882141113
    10. '
' → logprob: -10.540783882141113

Token 891: '"' (ID: 1)
  Prédit: '(results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(results' → logprob: -0.023174189031124115
    2. '(' → logprob: -3.898174285888672
    3. '_results' → logprob: -7.273174285888672
    4. ' (' → logprob: -7.398174285888672
    5. 'results' → logprob: -7.523174285888672
    6. '(values' → logprob: -8.523174285888672
    7. '(
' → logprob: -8.773174285888672
    8. '_(' → logprob: -9.273174285888672
    9. '_' → logprob: -9.773174285888672
    10. '=' → logprob: -10.023174285888672

Token 892: ' les' (ID: 1341)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.29781731963157654
    2. '(results' → logprob: -1.672817349433899
    3. '(' → logprob: -3.9228172302246094
    4. ' results' → logprob: -4.047817230224609
    5. '_results' → logprob: -4.547817230224609
    6. '(
' → logprob: -4.797817230224609
    7. '=' → logprob: -5.297817230224609
    8. ' (' → logprob: -5.672817230224609
    9. ' =' → logprob: -5.922817230224609
    10. '(min' → logprob: -7.172817230224609

Token 893: ' résultats' (ID: 48985)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.0023908717557787895
    2. ' results' → logprob: -6.2523908615112305
    3. '(results' → logprob: -8.00239086151123
    4. 'where' → logprob: -10.62739086151123
    5. '
' → logprob: -10.87739086151123
    6. 'result' → logprob: -11.12739086151123
    7. 'minimum' → logprob: -11.12739086151123
    8. 'print' → logprob: -11.37739086151123
    9. '=' → logprob: -11.75239086151123
    10. 'clip' → logprob: -11.87739086151123

Token 894: ' pour' (ID: 1930)
  Prédit: '(results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(results' → logprob: -0.639358639717102
    2. '=' → logprob: -1.639358639717102
    3. ' =' → logprob: -1.889358639717102
    4. 'results' → logprob: -2.2643585205078125
    5. '(' → logprob: -4.6393585205078125
    6. '(
' → logprob: -5.0143585205078125
    7. ' results' → logprob: -6.2643585205078125
    8. ' (' → logprob: -6.5143585205078125
    9. '[' → logprob: -7.3893585205078125
    10. ',' → logprob: -7.6393585205078125

Token 895: ' qu' (ID: 474)
  Prédit: 'clip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'clip' → logprob: -0.8312634229660034
    2. 'results' → logprob: -0.8312634229660034
    3. '[' → logprob: -3.206263542175293
    4. 'print' → logprob: -3.206263542175293
    5. ' results' → logprob: -4.081263542175293
    6. '(results' → logprob: -4.456263542175293
    7. 'fill' → logprob: -5.456263542175293
    8. 'minimum' → logprob: -5.956263542175293
    9. 'where' → logprob: -6.456263542175293
    10. ' clip' → logprob: -6.581263542175293

Token 896: ''ils' (ID: 41108)
  Prédit: '(results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(results' → logprob: -0.5840193033218384
    2. 'results' → logprob: -0.9590193033218384
    3. ' results' → logprob: -3.584019184112549
    4. '[' → logprob: -4.459019184112549
    5. '=' → logprob: -5.459019184112549
    6. ' =' → logprob: -5.834019184112549
    7. '_results' → logprob: -6.334019184112549
    8. 'esize' → logprob: -6.834019184112549
    9. '[np' → logprob: -6.959019184112549
    10. '[]' → logprob: -6.959019184112549

Token 897: ' soient' (ID: 59497)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6589854955673218
    2. '[' → logprob: -0.7839854955673218
    3. ' =' → logprob: -4.158985614776611
    4. '.clip' → logprob: -5.533985614776611
    5. '[result' → logprob: -5.658985614776611
    6. '<=' → logprob: -7.408985614776611
    7. '[np' → logprob: -8.158985137939453
    8. '*=' → logprob: -8.283985137939453
    9. 'results' → logprob: -8.658985137939453
    10. '=np' → logprob: -8.658985137939453

Token 898: ' au' (ID: 2791)
  Prédit: 'minimum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'minimum' → logprob: -0.2333933562040329
    2. 'maximum' → logprob: -2.608393430709839
    3. '.clip' → logprob: -2.733393430709839
    4. 'where' → logprob: -3.983393430709839
    5. 'clip' → logprob: -4.60839319229126
    6. ' minimum' → logprob: -4.85839319229126
    7. '<=' → logprob: -5.23339319229126
    8. 'minimal' → logprob: -5.35839319229126
    9. '.minimum' → logprob: -5.60839319229126
    10. 'amax' → logprob: -5.60839319229126

Token 899: ' minimum' (ID: 11085)
  Prédit: 'moins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'moins' → logprob: -0.2214033305644989
    2. 'minimum' → logprob: -2.2214033603668213
    3. 'maximum' → logprob: -2.5964033603668213
    4. 'max' → logprob: -4.471403121948242
    5. 'plus' → logprob: -5.721403121948242
    6. 'most' → logprob: -8.096403121948242
    7. 'menos' → logprob: -8.721403121948242
    8. 'minus' → logprob: -9.221403121948242
    9. 'mo' → logprob: -9.221403121948242
    10. 'maks' → logprob: -9.471403121948242

Token 900: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09646323323249817
    2. '1' → logprob: -2.721463203430176
    3. '=' → logprob: -3.971463203430176
    4. '(' → logprob: -5.221463203430176
    5. ' ' → logprob: -7.096463203430176
    6. ' =' → logprob: -7.971463203430176
    7. '```' → logprob: -8.221463203430176
    8. ',' → logprob: -8.596463203430176
    9. 'à' → logprob: -9.596463203430176
    10. 'minimum' → logprob: -9.846463203430176

Token 901: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5237385034561157
    2. '0' → logprob: -0.8987385034561157
    3. ' ' → logprob: -8.398738861083984
    4. 'minimum' → logprob: -8.648738861083984
    5. '(' → logprob: -9.148738861083984
    6. 'zero' → logprob: -10.773738861083984
    7. '[' → logprob: -10.898738861083984
    8. '=' → logprob: -11.273738861083984
    9. 'min' → logprob: -11.523738861083984
    10. '-' → logprob: -12.523738861083984

Token 902: ' et' (ID: 859)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.5782513618469238
    2. '=' → logprob: -1.0782513618469238
    3. ' =' → logprob: -2.578251361846924
    4. '.clip' → logprob: -4.203251361846924
    5. ')' → logprob: -5.828251361846924
    6. '(results' → logprob: -6.203251361846924
    7. 'clip' → logprob: -6.578251361846924
    8. '()' → logprob: -7.703251361846924
    9. ' results' → logprob: -8.328250885009766
    10. 'clips' → logprob: -8.828250885009766

Token 903: ' au' (ID: 2791)
  Prédit: 'amax'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'amax' → logprob: -0.33825328946113586
    2. 'maximum' → logprob: -2.0882532596588135
    3. 'clip' → logprob: -2.4632532596588135
    4. 'astype' → logprob: -3.9632532596588135
    5. 'minimum' → logprob: -4.088253498077393
    6. 'amin' → logprob: -4.338253498077393
    7. 'int' → logprob: -4.463253498077393
    8. 'max' → logprob: -4.963253498077393
    9. '.clip' → logprob: -6.838253498077393
    10. '0' → logprob: -6.838253498077393

Token 904: ' maximum' (ID: 10562)
  Prédit: 'maximum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'maximum' → logprob: -0.3996599614620209
    2. 'max' → logprob: -1.1496599912643433
    3. 'most' → logprob: -5.399660110473633
    4. 'plus' → logprob: -5.649660110473633
    5. 'minimum' → logprob: -6.149660110473633
    6. ' maximum' → logprob: -6.274660110473633
    7. 'moins' → logprob: -9.024660110473633
    8. 'maks' → logprob: -9.149660110473633
    9. '```' → logprob: -9.399660110473633
    10. 'maxlength' → logprob: -9.774660110473633

Token 905: ' n' (ID: 297)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3585197925567627
    2. '999' → logprob: -2.4835197925567627
    3. 'int' → logprob: -2.8585197925567627
    4. '(' → logprob: -3.2335197925567627
    5. 'amax' → logprob: -3.3585197925567627
    6. '255' → logprob: -4.108519554138184
    7. 'max' → logprob: -4.108519554138184
    8. 'inf' → logprob: -4.233519554138184
    9. '100' → logprob: -4.358519554138184
    10. '32' → logprob: -5.983519554138184

Token 906: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2781018912792206
    2. '=' → logprob: -2.028101921081543
    3. '.clip' → logprob: -2.528101921081543
    4. ')' → logprob: -4.403101921081543
    5. 'results' → logprob: -5.153101921081543
    6. '(results' → logprob: -5.653101921081543
    7. '(' → logprob: -6.528101921081543
    8. '()' → logprob: -6.778101921081543
    9. 'clip' → logprob: -6.778101921081543
    10. ',' → logprob: -6.903101921081543

Token 907: 'pour' (ID: 52723)
  Prédit: 'clip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'clip' → logprob: -0.8013752698898315
    2. ')' → logprob: -1.1763752698898315
    3. 'np' → logprob: -2.176375389099121
    4. '0' → logprob: -3.051375389099121
    5. ')
' → logprob: -3.551375389099121
    6. '),' → logprob: -4.051375389099121
    7. 'results' → logprob: -4.551375389099121
    8. ',' → logprob: -4.801375389099121
    9. ').' → logprob: -5.926375389099121
    10. ']' → logprob: -5.926375389099121

Token 908: ' éviter' (ID: 64013)
  Prédit: ' éviter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' éviter' → logprob: -0.0808979794383049
    2. ' garantir' → logprob: -4.205897808074951
    3. ' evitar' → logprob: -4.580897808074951
    4. 'np' → logprob: -4.705897808074951
    5. ')' → logprob: -5.205897808074951
    6. ' np' → logprob: -5.330897808074951
    7. 'év' → logprob: -5.705897808074951
    8. 'ev' → logprob: -5.955897808074951
    9. ' s' → logprob: -6.330897808074951
    10. '_' → logprob: -6.330897808074951

Token 909: ' des' (ID: 731)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'results' → logprob: -1.0438350439071655
    2. ' results' → logprob: -2.043835163116455
    3. '(results' → logprob: -2.293835163116455
    4. 'n' → logprob: -2.918835163116455
    5. ' overflow' → logprob: -2.918835163116455
    6. 'overflow' → logprob: -3.043835163116455
    7. ' out' → logprob: -3.043835163116455
    8. '0' → logprob: -3.043835163116455
    9. ' n' → logprob: -3.418835163116455
    10. 's' → logprob: -4.043835163116455

Token 910: ' valeurs' (ID: 73668)
  Prédit: ' out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' out' → logprob: -0.25962957739830017
    2. ' overflow' → logprob: -2.134629487991333
    3. 'overflow' → logprob: -3.509629487991333
    4. 'out' → logprob: -4.634629726409912
    5. 'n' → logprob: -5.009629726409912
    6. ' indices' → logprob: -5.134629726409912
    7. ' results' → logprob: -5.259629726409912
    8. 'indices' → logprob: -5.509629726409912
    9. 'astype' → logprob: -5.509629726409912
    10. '```' → logprob: -5.509629726409912

Token 911: ' aberr' (ID: 140530)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.365828275680542
    2. ' >' → logprob: -1.865828275680542
    3. '=' → logprob: -3.740828275680542
    4. '.clip' → logprob: -3.865828275680542
    5. 'clip' → logprob: -4.115828514099121
    6. '.astype' → logprob: -4.115828514099121
    7. ')' → logprob: -4.365828514099121
    8. ' out' → logprob: -4.490828514099121
    9. '<' → logprob: -4.740828514099121
    10. '[' → logprob: -5.115828514099121

Token 912: 'antes' (ID: 5193)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.8861474990844727
    2. 'ent' → logprob: -1.8861474990844727
    3. 'ur' → logprob: -2.2611474990844727
    4. 'e' → logprob: -2.6361474990844727
    5. 'ror' → logprob: -2.8861474990844727
    6. '0' → logprob: -3.0111474990844727
    7. 'rage' → logprob: -3.0111474990844727
    8. 'def' → logprob: -3.1361474990844727
    9. 'reur' → logprob: -3.3861474990844727
    10. 'er' → logprob: -3.7611474990844727

Token 913: ' comme' (ID: 7971)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10451705753803253
    2. ')
' → logprob: -2.4795169830322266
    3. ').' → logprob: -4.354516983032227
    4. 'results' → logprob: -6.979516983032227
    5. ',' → logprob: -7.104516983032227
    6. '(results' → logprob: -7.979516983032227
    7. '   ' → logprob: -8.729516983032227
    8. ')
' → logprob: -9.104516983032227
    9. '),' → logprob: -9.479516983032227
    10. '.clip' → logprob: -10.729516983032227

Token 914: ' l' (ID: 305)
  Prédit: 'inf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.08614105731248856
    2. ' inf' → logprob: -3.4611411094665527
    3. 'n' → logprob: -3.5861411094665527
    4. 'nan' → logprob: -5.086141109466553
    5. '>' → logprob: -5.711141109466553
    6. ' n' → logprob: -5.836141109466553
    7. '-inf' → logprob: -6.086141109466553
    8. ')' → logprob: -6.211141109466553
    9. 'overflow' → logprob: -6.711141109466553
    10. '0' → logprob: -7.086141109466553

Token 915: ''in' (ID: 17942)
  Prédit: 'imit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'imit' → logprob: -1.3116015195846558
    2. 'e' → logprob: -1.6866015195846558
    3. 'ess' → logprob: -1.8116015195846558
    4. 'arger' → logprob: -2.5616016387939453
    5. '=' → logprob: -2.6866016387939453
    6. 'en' → logprob: -2.8116016387939453
    7. ' =' → logprob: -3.4366016387939453
    8. ')' → logprob: -4.061601638793945
    9. '>' → logprob: -4.561601638793945
    10. 'ength' → logprob: -4.811601638793945

Token 916: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.06957899779081345
    2. 't' → logprob: -3.0695788860321045
    3. 'it' → logprob: -5.569579124450684
    4. 'finity' → logprob: -5.944579124450684
    5. 'fo' → logprob: -6.194579124450684
    6. 'fty' → logprob: -6.194579124450684
    7. '
' → logprob: -6.319579124450684
    8. 'teger' → logprob: -6.694579124450684
    9. 'finite' → logprob: -6.944579124450684
    10. 'put' → logprob: -7.194579124450684

Token 917: 'ini' (ID: 2363)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.245834618806839
    2. 'it' → logprob: -3.4958345890045166
    3. 'inity' → logprob: -3.6208345890045166
    4. 'inite' → logprob: -3.6208345890045166
    5. 'o' → logprob: -3.8708345890045166
    6. 'imum' → logprob: -4.245834827423096
    7. 'ity' → logprob: -4.370834827423096
    8. ')
' → logprob: -4.745834827423096
    9. 'n' → logprob: -4.870834827423096
    10. 'init' → logprob: -4.995834827423096

Token 918: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04560043662786484
    2. ',' → logprob: -3.420600414276123
    3. ')
' → logprob: -4.795600414276123
    4. ').' → logprob: -6.170600414276123
    5. '(results' → logprob: -7.795600414276123
    6. 'results' → logprob: -7.920600414276123
    7. ',)' → logprob: -8.045600891113281
    8. '),' → logprob: -8.670600891113281
    9. '   ' → logprob: -9.920600891113281
    10. ')
' → logprob: -10.295600891113281

Token 919: '   ' (ID: 271)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.02289414592087269
    2. ' results' → logprob: -4.147894382476807
    3. 'cl' → logprob: -6.647894382476807
    4. '=' → logprob: -7.022894382476807
    5. 'print' → logprob: -7.147894382476807
    6. '   ' → logprob: -7.147894382476807
    7. ' clipped' → logprob: -7.647894382476807
    8. '```' → logprob: -7.647894382476807
    9. ')
' → logprob: -7.772894382476807
    10. ' =' → logprob: -7.772894382476807

Token 920: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' (adapté à ' results') → logprob: -0.08653197437524796
    2. ' results' → logprob: -2.5865318775177
    3. ' clipped' → logprob: -6.086532115936279
    4. 'clip' → logprob: -6.211532115936279
    5. 'cl' → logprob: -7.211532115936279
    6. 'print' → logprob: -7.211532115936279
    7. 'np' → logprob: -7.711532115936279
    8. '.clip' → logprob: -8.086531639099121
    9. '=' → logprob: -8.336531639099121
    10. 'clips' → logprob: -8.586531639099121

Token 921: '_cl' (ID: 11209)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.022075187414884567
    2. ' =' → logprob: -3.8970751762390137
    3. '.clip' → logprob: -6.522075176239014
    4. 'clip' → logprob: -10.147075653076172
    5. '[' → logprob: -12.022075653076172
    6. '=np' → logprob: -12.397075653076172
    7. '.=' → logprob: -12.772075653076172
    8. '[:]' → logprob: -13.022075653076172
    9. ' ' → logprob: -14.147075653076172
    10. '=min' → logprob: -14.147075653076172

Token 922: 'ipped' (ID: 8193)
  Prédit: 'ip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ip' → logprob: -0.018164457753300667
    2. 'ipped' → logprob: -4.01816463470459
    3. 'iped' → logprob: -12.39316463470459
    4. 'amp' → logprob: -12.51816463470459
    5. 'p' → logprob: -13.26816463470459
    6. ' ip' → logprob: -13.64316463470459
    7. 'amped' → logprob: -13.89316463470459
    8. 'ips' → logprob: -14.51816463470459
    9. 'ipp' → logprob: -14.64316463470459
    10. 'ipl' → logprob: -15.01816463470459

Token 923: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03804366663098335
    2. ' =' → logprob: -3.288043737411499
    3. '=np' → logprob: -14.413043975830078
    4. '.clip' → logprob: -14.538043975830078
    5. '=min' → logprob: -14.663043975830078
    6. ' ' → logprob: -16.038043975830078
    7. ')' → logprob: -16.413043975830078
    8. ')=' → logprob: -16.413043975830078
    9. '＝' → logprob: -16.538043975830078
    10. ',' → logprob: -16.663043975830078

Token 924: ' clip' (ID: 19925)
  Prédit: 'clip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'clip' → logprob: -0.005752799566835165
    2. 'minimum' → logprob: -5.5057525634765625
    3. 'maximum' → logprob: -7.1307525634765625
    4. ' clip' → logprob: -7.1307525634765625
    5. '.clip' → logprob: -9.880752563476562
    6. 'where' → logprob: -12.005752563476562
    7. '_clip' → logprob: -12.255752563476562
    8. 'amin' → logprob: -12.880752563476562
    9. 'clips' → logprob: -13.380752563476562
    10. 'amax' → logprob: -13.505752563476562

Token 925: '(results' (ID: 42655)
  Prédit: '(results'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(results' → logprob: -0.00033510822686366737
    2. '(' → logprob: -8.125334739685059
    3. ' (' → logprob: -10.250334739685059
    4. 'results' → logprob: -13.375334739685059
    5. '(res' → logprob: -14.125334739685059
    6. '0' → logprob: -14.500334739685059
    7. '(result' → logprob: -14.875334739685059
    8. ' results' → logprob: -15.625334739685059
    9. '(
' → logprob: -16.500335693359375
    10. ' ' → logprob: -17.125335693359375

Token 926: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00027706706896424294
    2. ' ,' → logprob: -8.375277519226074
    3. '0' → logprob: -10.250277519226074
    4. '(' → logprob: -12.125277519226074
    5. ',min' → logprob: -12.625277519226074
    6. ',
' → logprob: -14.125277519226074
    7. '   ' → logprob: -14.875277519226074
    8. '(),' → logprob: -15.000277519226074
    9. ' ' → logprob: -15.625277519226074
    10. ',n' → logprob: -15.875277519226074

Token 927: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.1424973713001236e-05
    2. ' ' → logprob: -10.375031471252441
    3. 'a' → logprob: -15.500031471252441
    4. '   ' → logprob: -17.125030517578125
    5. '
' → logprob: -17.500030517578125
    6. '1' → logprob: -18.750030517578125
    7. 'minimum' → logprob: -19.125030517578125
    8. '  ' → logprob: -19.250030517578125
    9. '    ' → logprob: -19.750030517578125
    10. 'None' → logprob: -20.000030517578125

Token 928: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.392202976712724e-06
    2. ' ' → logprob: -12.125006675720215
    3. 'a' → logprob: -14.125006675720215
    4. 'None' → logprob: -17.5000057220459
    5. '   ' → logprob: -17.8750057220459
    6. 'minimum' → logprob: -17.8750057220459
    7. '```' → logprob: -18.1250057220459
    8. '1' → logprob: -18.3750057220459
    9. 'min' → logprob: -19.2500057220459
    10. '  ' → logprob: -19.7500057220459

Token 929: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007270459551364183
    2. ',n' → logprob: -5.007270336151123
    3. ' ,' → logprob: -7.507270336151123
    4. ',
' → logprob: -13.007270812988281
    5. ')' → logprob: -13.882270812988281
    6. ',None' → logprob: -14.882270812988281
    7. ',m' → logprob: -15.382270812988281
    8. '   ' → logprob: -15.507270812988281
    9. ' ' → logprob: -15.757270812988281
    10. ',max' → logprob: -15.882270812988281

Token 930: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.000553151941858232
    2. ' n' → logprob: -7.500553131103516
    3. '	n' → logprob: -15.625553131103516
    4. '   ' → logprob: -18.250553131103516
    5. ')n' → logprob: -18.250553131103516
    6. 'int' → logprob: -19.125553131103516
    7. ')' → logprob: -19.750553131103516
    8. ' ' → logprob: -20.500553131103516
    9. '[n' → logprob: -20.750553131103516
    10. '  ' → logprob: -20.750553131103516

Token 931: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005787697155028582
    2. '   ' → logprob: -8.125578880310059
    3. ')

' → logprob: -8.625578880310059
    4. ')
' → logprob: -9.500578880310059
    5. ' )' → logprob: -10.875578880310059
    6. ')

' → logprob: -12.875578880310059
    7. ')
' → logprob: -13.000578880310059
    8. ').' → logprob: -13.125578880310059
    9. ' ' → logprob: -14.000578880310059
    10. '  ' → logprob: -14.000578880310059

Token 932: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.162669837474823
    2. 'for' → logprob: -2.1626698970794678
    3. '
' → logprob: -3.6626698970794678
    4. 'print' → logprob: -5.287669658660889
    5. '    
' → logprob: -6.037669658660889
    6. ' for' → logprob: -6.662669658660889
    7. '  
' → logprob: -8.412670135498047
    8. '```' → logprob: -8.412670135498047
    9. '	for' → logprob: -9.537670135498047
    10. '   
' → logprob: -10.412670135498047

Token 933: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08545222878456116
    2. 'for' → logprob: -2.5854523181915283
    3. 'print' → logprob: -5.210452079772949
    4. '    
' → logprob: -7.585452079772949
    5. ' for' → logprob: -7.960452079772949
    6. '
' → logprob: -8.58545207977295
    7. '```' → logprob: -10.96045207977295
    8. '  
' → logprob: -12.21045207977295
    9. '	for' → logprob: -12.21045207977295
    10. 'return' → logprob: -13.08545207977295

Token 934: ' On' (ID: 2160)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.062020231038331985
    2. 'for' → logprob: -2.8120203018188477
    3. '   ' → logprob: -10.187020301818848
    4. ' print' → logprob: -12.312020301818848
    5. ' for' → logprob: -13.062020301818848
    6. '
' → logprob: -13.312020301818848
    7. 's' → logprob: -13.687020301818848
    8. '[' → logprob: -14.312020301818848
    9. 'return' → logprob: -14.437020301818848
    10. 'out' → logprob: -14.562020301818848

Token 935: ' convert' (ID: 8452)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.012493529357016087
    2. 'for' → logprob: -4.76249361038208
    3. ' print' → logprob: -5.76249361038208
    4. ' for' → logprob: -7.51249361038208
    5. 'put' → logprob: -9.637493133544922
    6. '   ' → logprob: -9.887493133544922
    7. '
' → logprob: -10.637493133544922
    8. 'write' → logprob: -12.012493133544922
    9. '#' → logprob: -12.387493133544922
    10. 'stdout' → logprob: -12.387493133544922

Token 936: 'it' (ID: 278)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.44009292125701904
    2. 'it' → logprob: -1.190092921257019
    3. 'ir' → logprob: -3.0650930404663086
    4. 'i' → logprob: -5.440093040466309
    5. 't' → logprob: -8.190093040466309
    6. '   ' → logprob: -8.565093040466309
    7. 'e' → logprob: -9.815093040466309
    8. 'ie' → logprob: -9.940093040466309
    9. '=' → logprob: -10.315093040466309
    10. 'ies' → logprob: -10.315093040466309

Token 937: ' les' (ID: 1341)
  Prédit: '(results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(results' → logprob: -0.5986552834510803
    2. 'results' → logprob: -0.8486552834510803
    3. 'print' → logprob: -4.0986552238464355
    4. ' results' → logprob: -5.7236552238464355
    5. 'int' → logprob: -6.2236552238464355
    6. '
' → logprob: -9.348655700683594
    7. '(int' → logprob: -9.473655700683594
    8. '(' → logprob: -9.598655700683594
    9. '(print' → logprob: -9.723655700683594
    10. '#' → logprob: -10.223655700683594

Token 938: ' résultats' (ID: 48985)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.013687043450772762
    2. ' results' → logprob: -4.5136871337890625
    3. 'print' → logprob: -6.7636871337890625
    4. '(results' → logprob: -7.1386871337890625
    5. 'array' → logprob: -7.6386871337890625
    6. 'int' → logprob: -9.513687133789062
    7. 'astype' → logprob: -10.013687133789062
    8. 'result' → logprob: -11.513687133789062
    9. 'for' → logprob: -11.763687133789062
    10. '(' → logprob: -12.138687133789062

Token 939: ' en' (ID: 469)
  Prédit: '(results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(results' → logprob: -0.7986139059066772
    2. '(' → logprob: -1.4236139059066772
    3. '.astype' → logprob: -2.298614025115967
    4. '=' → logprob: -3.173614025115967
    5. 'to' → logprob: -3.173614025115967
    6. ')' → logprob: -3.548614025115967
    7. '.tolist' → logprob: -3.673614025115967
    8. 'tolist' → logprob: -3.798614025115967
    9. ' =' → logprob: -4.423614025115967
    10. 'astype' → logprob: -4.923614025115967

Token 940: ' ent' (ID: 1121)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.005420992616564035
    2. 'uint' → logprob: -5.880421161651611
    3. ' int' → logprob: -6.380421161651611
    4. 'bool' → logprob: -7.630421161651611
    5. 'astype' → logprob: -8.755420684814453
    6. 'str' → logprob: -9.505420684814453
    7. 'array' → logprob: -9.880420684814453
    8. 'list' → logprob: -10.505420684814453
    9. 'ints' → logprob: -10.880420684814453
    10. ' uint' → logprob: -11.130420684814453

Token 941: 'iers' (ID: 11012)
  Prédit: '32'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '32' → logprob: -0.008500993251800537
    2. 'iers' → logprob: -6.133501052856445
    3. '8' → logprob: -6.258501052856445
    4. '64' → logprob: -6.508501052856445
    5. 'ier' → logprob: -6.883501052856445
    6. 'int' → logprob: -7.633501052856445
    7. 't' → logprob: -7.758501052856445
    8. 'eger' → logprob: -8.508501052856445
    9. '16' → logprob: -8.633501052856445
    10. 'g' → logprob: -8.633501052856445

Token 942: ' (' (ID: 350)
  Prédit: '(results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(results' → logprob: -0.053079213947057724
    2. '.astype' → logprob: -3.678079128265381
    3. '(' → logprob: -4.178079128265381
    4. '(int' → logprob: -5.928079128265381
    5. 'results' → logprob: -6.053079128265381
    6. '32' → logprob: -6.428079128265381
    7. 'astype' → logprob: -6.678079128265381
    8. '()' → logprob: -7.178079128265381
    9. 'int' → logprob: -7.553079128265381
    10. '(
' → logprob: -7.678079128265381

Token 943: 'ils' (ID: 5879)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0009627926629036665
    2. ')' → logprob: -8.25096321105957
    3. '=int' → logprob: -8.25096321105957
    4. ' int' → logprob: -8.75096321105957
    5. 'astype' → logprob: -8.75096321105957
    6. 'uint' → logprob: -10.00096321105957
    7. '32' → logprob: -10.87596321105957
    8. 'results' → logprob: -11.12596321105957
    9. '[int' → logprob: -11.37596321105957
    10. ']int' → logprob: -11.75096321105957

Token 944: ' sont' (ID: 5242)
  Prédit: '.astype'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.astype' → logprob: -0.03268762677907944
    2. '=' → logprob: -4.032687664031982
    3. ')' → logprob: -4.907687664031982
    4. ' =' → logprob: -5.282687664031982
    5. '.tolist' → logprob: -7.407687664031982
    6. '=int' → logprob: -7.657687664031982
    7. 'astype' → logprob: -7.782687664031982
    8. ').' → logprob: -9.032687187194824
    9. '.' → logprob: -9.657687187194824
    10. '.dtype' → logprob: -9.657687187194824

Token 945: ' probablement' (ID: 87740)
  Prédit: '.astype'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.astype' → logprob: -0.4022860825061798
    2. 'int' → logprob: -1.5272860527038574
    3. 'astype' → logprob: -2.4022860527038574
    4. ' int' → logprob: -4.902286052703857
    5. '=int' → logprob: -5.277286052703857
    6. '(int' → logprob: -5.527286052703857
    7. ' ast' → logprob: -6.277286052703857
    8. '.tolist' → logprob: -6.402286052703857
    9. ')' → logprob: -6.902286052703857
    10. '32' → logprob: -7.027286052703857

Token 946: ' des' (ID: 731)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.4246090054512024
    2. ')' → logprob: -1.9246089458465576
    3. ' int' → logprob: -1.9246089458465576
    4. '.astype' → logprob: -4.049609184265137
    5. 'astype' → logprob: -4.174609184265137
    6. ' array' → logprob: -5.799609184265137
    7. 'ints' → logprob: -6.299609184265137
    8. 'array' → logprob: -6.299609184265137
    9. 'dtype' → logprob: -6.424609184265137
    10. 'f' → logprob: -6.549609184265137

Token 947: ' floats' (ID: 101868)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.06044094264507294
    2. ' int' → logprob: -3.685441017150879
    3. 'float' → logprob: -3.685441017150879
    4. ' float' → logprob: -5.810441017150879
    5. 'array' → logprob: -6.310441017150879
    6. 'nd' → logprob: -7.310441017150879
    7. 'uint' → logprob: -7.310441017150879
    8. 'flo' → logprob: -7.685441017150879
    9. ' ndarray' → logprob: -7.685441017150879
    10. 'ints' → logprob: -8.185441017150879

Token 948: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.28678154945373535
    2. '()' → logprob: -2.0367815494537354
    3. '())' → logprob: -2.2867815494537354
    4. ').' → logprob: -4.786781311035156
    5. '()).' → logprob: -6.411781311035156
    6. '32' → logprob: -6.411781311035156
    7. ',' → logprob: -6.786781311035156
    8. '(' → logprob: -6.911781311035156
    9. 'astype' → logprob: -7.536781311035156
    10. '.astype' → logprob: -7.536781311035156

Token 949: ' ou' (ID: 2031)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.09721170365810394
    2. 'astype' → logprob: -2.8472115993499756
    3. 'dtype' → logprob: -4.097211837768555
    4. ' int' → logprob: -4.347211837768555
    5. ')' → logprob: -6.347211837768555
    6. ' dtype' → logprob: -6.847211837768555
    7. '.astype' → logprob: -7.347211837768555
    8. '=int' → logprob: -7.472211837768555
    9. '```' → logprob: -8.597211837768555
    10. ' ast' → logprob: -8.597211837768555

Token 950: ' valeurs' (ID: 73668)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0386103056371212
    2. ' int' → logprob: -4.288610458374023
    3. ')' → logprob: -4.538610458374023
    4. 'ints' → logprob: -4.913610458374023
    5. 'astype' → logprob: -6.788610458374023
    6. 'dtype' → logprob: -7.288610458374023
    7. 'results' → logprob: -7.413610458374023
    8. '[int' → logprob: -8.038610458374023
    9. '<|end|>' → logprob: -8.038610458374023
    10. 'array' → logprob: -8.038610458374023

Token 951: ' spéc' (ID: 20135)
  Prédit: '32'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '32' → logprob: -0.4334176480770111
    2. ')' → logprob: -1.6834176778793335
    3. 'int' → logprob: -1.9334176778793335
    4. '64' → logprob: -4.433417797088623
    5. '[int' → logprob: -5.808417797088623
    6. 'ints' → logprob: -6.683417797088623
    7. '.astype' → logprob: -6.683417797088623
    8. '=int' → logprob: -7.433417797088623
    9. 'uint' → logprob: -7.683417797088623
    10. ' int' → logprob: -8.183417320251465

Token 952: 'iales' (ID: 25133)
  Prédit: 'ifiés'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ifiés' → logprob: -0.6593565940856934
    2. 'ifiques' → logprob: -0.7843565940856934
    3. '32' → logprob: -4.909356594085693
    4. 'ifiées' → logprob: -5.659356594085693
    5. '```' → logprob: -5.659356594085693
    6. 'def' → logprob: -6.159356594085693
    7. 't' → logprob: -6.284356594085693
    8. 'ifié' → logprob: -7.034356594085693
    9. 'iaux' → logprob: -7.534356594085693
    10. 'int' → logprob: -7.659356594085693

Token 953: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05355808511376381
    2. '32' → logprob: -3.928558111190796
    3. '(results' → logprob: -4.678557872772217
    4. 'int' → logprob: -5.178557872772217
    5. '=' → logprob: -5.428557872772217
    6. 'results' → logprob: -5.928557872772217
    7. '=int' → logprob: -6.428557872772217
    8. ' =' → logprob: -6.553557872772217
    9. '64' → logprob: -6.678557872772217
    10. ').' → logprob: -6.678557872772217

Token 954: '   ' (ID: 271)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.36422649025917053
    2. '=' → logprob: -2.2392265796661377
    3. ' =' → logprob: -2.3642265796661377
    4. 'int' → logprob: -3.6142265796661377
    5. ' results' → logprob: -3.7392265796661377
    6. '   ' → logprob: -3.7392265796661377
    7. '=int' → logprob: -4.239226341247559
    8. 'print' → logprob: -5.739226341247559
    9. 'ints' → logprob: -6.239226341247559
    10. 'res' → logprob: -6.364226341247559

Token 955: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' (adapté à ' results') → logprob: -0.04763191565871239
    2. 'res' → logprob: -4.047631740570068
    3. ' results' → logprob: -4.922631740570068
    4. '=' → logprob: -5.172631740570068
    5. '   ' → logprob: -5.797631740570068
    6. 'result' → logprob: -6.047631740570068
    7. 'int' → logprob: -6.047631740570068
    8. ' =' → logprob: -6.172631740570068
    9. 'r' → logprob: -6.297631740570068
    10. 'ints' → logprob: -7.047631740570068

Token 956: '_int' (ID: 12285)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.049082912504673004
    2. ' =' → logprob: -3.4240829944610596
    3. '_cl' → logprob: -5.2990827560424805
    4. '_int' → logprob: -5.5490827560424805
    5. '_' → logprob: -5.7990827560424805
    6. '=int' → logprob: -6.4240827560424805
    7. '.astype' → logprob: -7.1740827560424805
    8. '=_' → logprob: -7.5490827560424805
    9. '_=' → logprob: -7.9240827560424805
    10. '_ast' → logprob: -10.29908275604248

Token 957: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.009868117049336433
    2. ' =' → logprob: -4.634868144989014
    3. 's' → logprob: -9.259867668151855
    4. '_=' → logprob: -12.009867668151855
    5. '32' → logprob: -13.259867668151855
    6. '_' → logprob: -13.259867668151855
    7. '=int' → logprob: -13.384867668151855
    8. '()' → logprob: -13.884867668151855
    9. '＝' → logprob: -14.259867668151855
    10. ')=' → logprob: -14.509867668151855

Token 958: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.12315655499696732
    2. ' ast' → logprob: -2.8731565475463867
    3. ' results' → logprob: -3.2481565475463867
    4. 'astype' → logprob: -4.248156547546387
    5. 'int' → logprob: -5.498156547546387
    6. 'array' → logprob: -6.498156547546387
    7. 'ast' → logprob: -8.373156547546387
    8. 'result' → logprob: -8.748156547546387
    9. '.astype' → logprob: -8.873156547546387
    10. '(results' → logprob: -10.748156547546387

Token 959: '_cl' (ID: 11209)
  Prédit: '.astype'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.astype' → logprob: -0.0043565332889556885
    2. '_cl' → logprob: -6.004356384277344
    3. 'astype' → logprob: -6.379356384277344
    4. '_int' → logprob: -9.504356384277344
    5. '_ast' → logprob: -9.754356384277344
    6. '.clip' → logprob: -10.754356384277344
    7. '_.' → logprob: -12.504356384277344
    8. ' .' → logprob: -12.504356384277344
    9. '.ast' → logprob: -12.504356384277344
    10. '.cl' → logprob: -12.754356384277344

Token 960: 'ipped' (ID: 8193)
  Prédit: 'ipped'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ipped' → logprob: -0.012586642988026142
    2. 'ip' → logprob: -4.38758659362793
    3. 'iped' → logprob: -10.38758659362793
    4. 'p' → logprob: -10.88758659362793
    5. 'i' → logprob: -11.51258659362793
    6. '[' → logprob: -12.76258659362793
    7. 'e' → logprob: -12.76258659362793
    8. '
' → logprob: -13.26258659362793
    9. 'ipp' → logprob: -13.76258659362793
    10. '_' → logprob: -14.13758659362793

Token 961: '.astype' (ID: 106227)
  Prédit: '.astype'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.astype' → logprob: -0.0002883913984987885
    2. ' .' → logprob: -8.375288009643555
    3. 'astype' → logprob: -10.500288009643555
    4. '.' → logprob: -10.500288009643555
    5. '.ast' → logprob: -13.125288009643555
    6. '.tolist' → logprob: -14.750288009643555
    7. ' ast' → logprob: -14.875288009643555
    8. '.asarray' → logprob: -18.750288009643555
    9. '.
' → logprob: -18.875288009643555
    10. '.to' → logprob: -19.375288009643555

Token 962: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.000509187753777951
    2. 'int' → logprob: -7.625509262084961
    3. '(uint' → logprob: -11.500509262084961
    4. '(' → logprob: -12.250509262084961
    5. '('' → logprob: -13.500509262084961
    6. '[int' → logprob: -13.750509262084961
    7. '<int' → logprob: -13.875509262084961
    8. '=int' → logprob: -14.250509262084961
    9. ' int' → logprob: -14.375509262084961
    10. '(np' → logprob: -14.625509262084961

Token 963: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005409372970461845
    2. '())' → logprob: -5.505409240722656
    3. '32' → logprob: -6.880409240722656
    4. '()' → logprob: -8.880409240722656
    5. ' )' → logprob: -10.005409240722656
    6. '64' → logprob: -10.255409240722656
    7. '8' → logprob: -10.380409240722656
    8. '_)' → logprob: -11.255409240722656
    9. ')
' → logprob: -11.380409240722656
    10. ')`' → logprob: -11.505409240722656

Token 964: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2047293782234192
    2. 'for' → logprob: -1.8297293186187744
    3. 'print' → logprob: -3.8297293186187744
    4. ' for' → logprob: -6.2047295570373535
    5. '    
' → logprob: -7.8297295570373535
    6. '```' → logprob: -8.204729080200195
    7. 'return' → logprob: -9.204729080200195
    8. '	for' → logprob: -9.829729080200195
    9. '
' → logprob: -9.954729080200195
    10. '[' → logprob: -11.204729080200195

Token 965: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.38724377751350403
    2. 'for' → logprob: -1.1372437477111816
    3. '   ' → logprob: -8.26224422454834
    4. ' for' → logprob: -9.51224422454834
    5. 'return' → logprob: -10.26224422454834
    6. ' print' → logprob: -12.51224422454834
    7. 'if' → logprob: -13.63724422454834
    8. '```' → logprob: -14.63724422454834
    9. '    
' → logprob: -15.88724422454834
    10. '
' → logprob: -16.137243270874023

Token 966: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5760438442230225
    2. 'print' → logprob: -0.8260438442230225
    3. ' for' → logprob: -9.701044082641602
    4. '   ' → logprob: -10.201044082641602
    5. 'return' → logprob: -12.826044082641602
    6. ' print' → logprob: -12.951044082641602
    7. '
' → logprob: -15.451044082641602
    8. 'import' → logprob: -15.576044082641602
    9. 'from' → logprob: -15.826044082641602
    10. '[' → logprob: -15.951044082641602

Token 967: ' calc' (ID: 25691)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.027006957679986954
    2. 'for' → logprob: -3.6520068645477295
    3. '
' → logprob: -7.902007102966309
    4. ' print' → logprob: -9.027007102966309
    5. 'write' → logprob: -9.652007102966309
    6. '   ' → logprob: -9.777007102966309
    7. ' for' → logprob: -9.902007102966309
    8. 'stdout' → logprob: -11.402007102966309
    9. '.' → logprob: -12.527007102966309
    10. '#' → logprob: -12.652007102966309

Token 968: 'ule' (ID: 1601)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.004799634218215942
    2. 'ulate' → logprob: -6.129799842834473
    3. 'for' → logprob: -6.754799842834473
    4. 'def' → logprob: -7.629799842834473
    5. '_print' → logprob: -8.754799842834473
    6. 'ule' → logprob: -8.879799842834473
    7. 'ul' → logprob: -8.879799842834473
    8. 'import' → logprob: -8.879799842834473
    9. '#print' → logprob: -9.004799842834473
    10. ' print' → logprob: -10.254799842834473

Token 969: ' (' (ID: 350)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.4704064130783081
    2. 'results' → logprob: -1.845406413078308
    3. 'max' → logprob: -2.3454065322875977
    4. 'print' → logprob: -3.7204065322875977
    5. 'min' → logprob: -3.8454065322875977
    6. '(sum' → logprob: -4.220406532287598
    7. '(results' → logprob: -4.345406532287598
    8. 'res' → logprob: -4.470406532287598
    9. 'result' → logprob: -4.845406532287598
    10. ' sum' → logprob: -5.220406532287598

Token 970: 'rés' (ID: 60278)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.6475058197975159
    2. 'results' → logprob: -1.397505760192871
    3. 'max' → logprob: -2.272505760192871
    4. 'minimum' → logprob: -3.647505760192871
    5. 'maximum' → logprob: -3.897505760192871
    6. '(sum' → logprob: -4.272505760192871
    7. 'min' → logprob: -4.522505760192871
    8. '(results' → logprob: -4.647505760192871
    9. 'result' → logprob: -5.022505760192871
    10. 'amax' → logprob: -5.147505760192871

Token 971: 'ultat' (ID: 133070)
  Prédit: 'ult'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ult' → logprob: -0.5493859052658081
    2. 'ults' → logprob: -1.424385905265808
    3. '(results' → logprob: -2.2993860244750977
    4. 'max' → logprob: -3.6743860244750977
    5. 'array' → logprob: -3.9243860244750977
    6. 'results' → logprob: -4.174386024475098
    7. 'sum' → logprob: -5.049386024475098
    8. 'ulate' → logprob: -6.424386024475098
    9. 'ultat' → logprob: -6.424386024475098
    10. 'int' → logprob: -6.549386024475098

Token 972: ' %' (ID: 1851)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4045276939868927
    2. '=' → logprob: -2.1545276641845703
    3. ' =' → logprob: -2.1545276641845703
    4. 'sum' → logprob: -4.52952766418457
    5. 'max' → logprob: -4.65452766418457
    6. '   ' → logprob: -4.77952766418457
    7. '_' → logprob: -5.15452766418457
    8. '.sum' → logprob: -5.15452766418457
    9. ')' → logprob: -5.27952766418457
    10. '%' → logprob: -5.27952766418457

Token 973: ' n' (ID: 297)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.8648808002471924
    2. '2' → logprob: -1.9898808002471924
    3. '(' → logprob: -2.2398808002471924
    4. ' ' → logprob: -2.4898808002471924
    5. '10' → logprob: -2.4898808002471924
    6. ' (' → logprob: -2.7398808002471924
    7. '3' → logprob: -3.7398808002471924
    8. '100' → logprob: -4.114880561828613
    9. '256' → logprob: -4.114880561828613
    10. '4' → logprob: -4.739880561828613

Token 974: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3729279339313507
    2. ' %' → logprob: -1.6229279041290283
    3. '%' → logprob: -2.4979279041290283
    4. '+' → logprob: -5.122928142547607
    5. '   ' → logprob: -5.247928142547607
    6. '[' → logprob: -5.372928142547607
    7. ' +' → logprob: -5.497928142547607
    8. ' )' → logprob: -6.122928142547607
    9. '%)' → logprob: -6.372928142547607
    10. ')%' → logprob: -6.372928142547607

Token 975: ' -' (ID: 533)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.25594982504844666
    2. '%' → logprob: -1.505949854850769
    3. '(' → logprob: -6.505949974060059
    4. ')' → logprob: -6.755949974060059
    5. '[' → logprob: -8.380949974060059
    6. ' %
' → logprob: -9.005949974060059
    7. ' ' → logprob: -9.130949974060059
    8. '()%' → logprob: -9.130949974060059
    9. '   ' → logprob: -9.380949974060059
    10. '<|end|>' → logprob: -9.630949974060059

Token 976: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07078509032726288
    2. ' ' → logprob: -2.6957850456237793
    3. ' n' → logprob: -7.695785045623779
    4. 'n' → logprob: -8.445785522460938
    5. ' (' → logprob: -9.445785522460938
    6. '(n' → logprob: -10.195785522460938
    7. '(' → logprob: -10.445785522460938
    8. ' ' → logprob: -12.070785522460938
    9. ' results' → logprob: -12.320785522460938
    10. 'results' → logprob: -13.070785522460938

Token 977: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002798087371047586
    2. ' ' → logprob: -8.375279426574707
    3. '(n' → logprob: -10.625279426574707
    4. '(' → logprob: -12.000279426574707
    5. '2' → logprob: -12.375279426574707
    6. 'n' → logprob: -12.750279426574707
    7. 'l' → logprob: -13.000279426574707
    8. '(results' → logprob: -13.250279426574707
    9. 'results' → logprob: -13.500279426574707
    10. '((' → logprob: -13.500279426574707

Token 978: ' pour' (ID: 1930)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.17056313157081604
    2. '%' → logprob: -1.9205631017684937
    3. ')' → logprob: -5.170563220977783
    4. 'results' → logprob: -6.920563220977783
    5. ' =' → logprob: -7.170563220977783
    6. '(' → logprob: -7.295563220977783
    7. '=' → logprob: -7.545563220977783
    8. ' results' → logprob: -8.045562744140625
    9. ' %
' → logprob: -8.170562744140625
    10. '[' → logprob: -8.670562744140625

Token 979: ' chaque' (ID: 21194)
  Prédit: ' results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' results' → logprob: -0.6716440320014954
    2. 'results' → logprob: -0.9216440320014954
    3. '_' → logprob: -2.7966439723968506
    4. ' _' → logprob: -4.42164421081543
    5. ' n' → logprob: -5.42164421081543
    6. 'r' → logprob: -6.04664421081543
    7. ' res' → logprob: -6.17164421081543
    8. 'n' → logprob: -6.54664421081543
    9. ' r' → logprob: -6.92164421081543
    10. 'print' → logprob: -7.54664421081543

Token 980: ' élément' (ID: 99627)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.6666209101676941
    2. 'result' → logprob: -1.6666209697723389
    3. ' results' → logprob: -1.7916209697723389
    4. ' result' → logprob: -2.541620969772339
    5. 'res' → logprob: -4.41662073135376
    6. 'r' → logprob: -4.54162073135376
    7. ' res' → logprob: -5.04162073135376
    8. ' r' → logprob: -5.54162073135376
    9. ' i' → logprob: -5.91662073135376
    10. 'i' → logprob: -6.29162073135376

Token 981: '.
' (ID: 558)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.7909644246101379
    2. '%' → logprob: -1.1659643650054932
    3. ' %' → logprob: -2.040964365005493
    4. '(' → logprob: -2.915964365005493
    5. ' =' → logprob: -4.665964603424072
    6. ' results' → logprob: -4.665964603424072
    7. '(results' → logprob: -4.790964603424072
    8. '=' → logprob: -5.040964603424072
    9. ')' → logprob: -5.165964603424072
    10. ' (' → logprob: -6.165964603424072

Token 982: '   ' (ID: 271)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -1.0437049865722656
    2. ' %' → logprob: -1.2937049865722656
    3. 'results' → logprob: -1.4187049865722656
    4. '(' → logprob: -3.1687049865722656
    5. '=' → logprob: -3.5437049865722656
    6. ' results' → logprob: -3.7937049865722656
    7. ' =' → logprob: -3.9187049865722656
    8. ')' → logprob: -5.293704986572266
    9. '-' → logprob: -5.918704986572266
    10. ' ' → logprob: -6.168704986572266

Token 983: ' #' (ID: 1069)
  Prédit: 'output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'output' → logprob: -1.3016597032546997
    2. 'print' → logprob: -1.5516597032546997
    3. 'results' → logprob: -1.9266597032546997
    4. 'res' → logprob: -2.05165958404541
    5. 'out' → logprob: -2.30165958404541
    6. 'outputs' → logprob: -3.80165958404541
    7. 'answers' → logprob: -3.92665958404541
    8. ' output' → logprob: -4.17665958404541
    9. 'r' → logprob: -4.17665958404541
    10. 'result' → logprob: -4.30165958404541

Token 984: ' Cela' (ID: 44403)
  Prédit: 'output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'output' → logprob: -0.9247297048568726
    2. 'print' → logprob: -1.2997297048568726
    3. 'res' → logprob: -2.924729824066162
    4. 'final' → logprob: -2.924729824066162
    5. 'answers' → logprob: -3.049729824066162
    6. 'results' → logprob: -3.174729824066162
    7. 'out' → logprob: -3.299729824066162
    8. 'answer' → logprob: -3.299729824066162
    9. 'outputs' → logprob: -4.174729824066162
    10. 'ans' → logprob: -4.674729824066162

Token 985: ' peut' (ID: 9216)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2864338457584381
    2. '=' → logprob: -1.6614338159561157
    3. ' %=' → logprob: -3.6614339351654053
    4. 'results' → logprob: -4.661433696746826
    5. '%' → logprob: -4.911433696746826
    6. ' results' → logprob: -5.786433696746826
    7. '_results' → logprob: -6.036433696746826
    8. ' %' → logprob: -6.286433696746826
    9. ' -=' → logprob: -6.536433696746826
    10. '[' → logprob: -6.911433696746826

Token 986: ' servir' (ID: 42557)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9354078769683838
    2. ' =' → logprob: -1.3104078769683838
    3. '=' → logprob: -2.560407876968384
    4. ' be' → logprob: -3.060407876968384
    5. 'results' → logprob: -3.435407876968384
    6. 's' → logprob: -4.185407638549805
    7. ' results' → logprob: -4.185407638549805
    8. ' result' → logprob: -4.435407638549805
    9. '[' → logprob: -4.435407638549805
    10. '_results' → logprob: -4.560407638549805

Token 987: ' à' (ID: 1221)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11498885601758957
    2. ' =' → logprob: -2.7399888038635254
    3. 'results' → logprob: -3.7399888038635254
    4. ' à' → logprob: -4.739988803863525
    5. ')' → logprob: -6.114988803863525
    6. '(results' → logprob: -6.489988803863525
    7. '   ' → logprob: -6.739988803863525
    8. '-' → logprob: -6.864988803863525
    9. 'à' → logprob: -7.364988803863525
    10. ' results' → logprob: -7.614988803863525

Token 988: ' ren' (ID: 5427)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.31878358125686646
    2. '(results' → logprob: -1.5687835216522217
    3. ' results' → logprob: -3.6937835216522217
    4. 'print' → logprob: -5.193783760070801
    5. 'convert' → logprob: -5.318783760070801
    6. ' obtenir' → logprob: -5.568783760070801
    7. 'rés' → logprob: -5.693783760070801
    8. 'transform' → logprob: -6.318783760070801
    9. 'adjust' → logprob: -6.318783760070801
    10. 'offset' → logprob: -6.568783760070801

Token 989: 'v' (ID: 85)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.671006977558136
    2. 's' → logprob: -1.6710069179534912
    3. 'v' → logprob: -1.7960069179534912
    4. 'der' → logprob: -3.421006917953491
    5. 'du' → logprob: -3.921006917953491
    6. 'forcer' → logprob: -4.04600715637207
    7. 'dre' → logprob: -4.42100715637207
    8. 'g' → logprob: -4.92100715637207
    9. 'e' → logprob: -5.04600715637207
    10. '[' → logprob: -5.54600715637207

Token 990: 'oyer' (ID: 36165)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.005515365395694971
    2. 'voy' → logprob: -6.0055155754089355
    3. 'voie' → logprob: -6.7555155754089355
    4. 'e' → logprob: -7.3805155754089355
    5. 'd' → logprob: -7.8805155754089355
    6. 'trer' → logprob: -8.255515098571777
    7. 'oyer' → logprob: -9.005515098571777
    8. 'érer' → logprob: -9.505515098571777
    9. 'der' → logprob: -9.505515098571777
    10. 'forcer' → logprob: -10.255515098571777

Token 991: ' -' (ID: 533)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.06380801647901535
    2. ' results' → logprob: -2.813807964324951
    3. '(results' → logprob: -6.313807964324951
    4. ' (' → logprob: -11.81380844116211
    5. '	results' → logprob: -12.56380844116211
    6. ' résultats' → logprob: -13.31380844116211
    7. 'np' → logprob: -13.31380844116211
    8. '((' → logprob: -13.31380844116211
    9. 'result' → logprob: -13.43880844116211
    10. 'rés' → logprob: -13.68880844116211

Token 992: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002731644082814455
    2. ' ' → logprob: -6.002731800079346
    3. 'np' → logprob: -8.752731323242188
    4. ' np' → logprob: -10.627731323242188
    5. ' ones' → logprob: -10.752731323242188
    6. '   ' → logprob: -11.627731323242188
    7. 'une' → logprob: -11.752731323242188
    8. '
' → logprob: -12.127731323242188
    9. 'numpy' → logprob: -12.502731323242188
    10. ' numpy' → logprob: -12.627731323242188

Token 993: ' en' (ID: 469)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.26913759112358093
    2. '(results' → logprob: -2.0191376209259033
    3. ' results' → logprob: -3.7691376209259033
    4. ',' → logprob: -3.7691376209259033
    5. ')' → logprob: -4.019137382507324
    6. '(' → logprob: -5.269137382507324
    7. ' =' → logprob: -5.519137382507324
    8. '=' → logprob: -5.644137382507324
    9. ' +' → logprob: -5.644137382507324
    10. 's' → logprob: -5.769137382507324

Token 994: ' cas' (ID: 2108)
  Prédit: ' cas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cas' → logprob: -0.8810608386993408
    2. 'cas' → logprob: -1.8810608386993408
    3. 'result' → logprob: -2.506060838699341
    4. 'results' → logprob: -2.631060838699341
    5. '[-' → logprob: -3.256060838699341
    6. ' lieu' → logprob: -3.381060838699341
    7. '[' → logprob: -3.631060838699341
    8. ' résultats' → logprob: -4.006060600280762
    9. 'place' → logprob: -4.131060600280762
    10. ' résultat' → logprob: -4.131060600280762

Token 995: ' d' (ID: 272)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.6165210604667664
    2. '(results' → logprob: -1.4915211200714111
    3. 'results' → logprob: -1.8665211200714111
    4. 'de' → logprob: -3.616521120071411
    5. ')' → logprob: -3.741521120071411
    6. ' results' → logprob: -4.491520881652832
    7. 'd' → logprob: -5.616520881652832
    8. '=' → logprob: -5.866520881652832
    9. ' =' → logprob: -6.866520881652832
    10. 'où' → logprob: -6.866520881652832

Token 996: ''in' (ID: 17942)
  Prédit: 'absence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'absence' → logprob: -1.1426610946655273
    2. '[' → logprob: -2.0176610946655273
    3. 'abs' → logprob: -2.3926610946655273
    4. 'e' → logprob: -2.6426610946655273
    5. '’absence' → logprob: -2.8926610946655273
    6. 'in' → logprob: -3.0176610946655273
    7. ''' → logprob: -3.1426610946655273
    8. 'é' → logprob: -3.2676610946655273
    9. ''in' → logprob: -3.6426610946655273
    10. 'es' → logprob: -3.7676610946655273

Token 997: 'access' (ID: 9687)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.25519508123397827
    2. 'valid' → logprob: -3.130195140838623
    3. 'ex' → logprob: -3.255195140838623
    4. 'finite' → logprob: -3.880195140838623
    5. 'finity' → logprob: -4.005195140838623
    6. 'fin' → logprob: -4.005195140838623
    7. 'accessible' → logprob: -4.005195140838623
    8. '
' → logprob: -4.380195140838623
    9. 'exist' → logprob: -4.755195140838623
    10. 'access' → logprob: -5.130195140838623

Token 998: 'ibilité' (ID: 44186)
  Prédit: 'ible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ible' → logprob: -0.013814499601721764
    2. 'ibilité' → logprob: -4.388814449310303
    3. 'ibles' → logprob: -7.263814449310303
    4. 'ès' → logprob: -8.638814926147461
    5. 'ibil' → logprob: -8.638814926147461
    6. 'ibility' → logprob: -8.888814926147461
    7. 'ess' → logprob: -10.388814926147461
    8. 'sible' → logprob: -10.763814926147461
    9. 'e' → logprob: -11.263814926147461
    10. 'ibl' → logprob: -11.388814926147461

Token 999: ' (' (ID: 350)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.7837101221084595
    2. '%' → logprob: -1.1587101221084595
    3. ' %' → logprob: -1.7837101221084595
    4. ' results' → logprob: -3.90871000289917
    5. ')' → logprob: -4.40871000289917
    6. '   ' → logprob: -4.53371000289917
    7. '(results' → logprob: -5.65871000289917
    8. '%
' → logprob: -6.03371000289917
    9. ')
' → logprob: -6.15871000289917
    10. '(' → logprob: -6.53371000289917

Token 1000: 'in' (ID: 258)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.23382341861724854
    2. ' results' → logprob: -1.6088234186172485
    3. ')' → logprob: -5.108823299407959
    4. '(results' → logprob: -6.608823299407959
    5. '
' → logprob: -8.108823776245117
    6. ' )' → logprob: -8.983823776245117
    7. '	results' → logprob: -9.108823776245117
    8. ',' → logprob: -9.608823776245117
    9. 's' → logprob: -9.733823776245117
    10. '`' → logprob: -10.358823776245117

Token 1001: 'fin' (ID: 6994)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.11158046871423721
    2. ' results' → logprob: -2.9865803718566895
    3. '
' → logprob: -4.1115803718566895
    4. 'f' → logprob: -4.7365803718566895
    5. 'dex' → logprob: -4.8615803718566895
    6. '(results' → logprob: -5.4865803718566895
    7. 'd' → logprob: -5.7365803718566895
    8. 'result' → logprob: -5.9865803718566895
    9. 'res' → logprob: -5.9865803718566895
    10. '	results' → logprob: -6.8615803718566895

Token 1002: 'is' (ID: 276)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'results' → logprob: -1.5268915891647339
    2. 'ex' → logprob: -1.9018915891647339
    3. 'ible' → logprob: -2.0268917083740234
    4. 'ité' → logprob: -3.0268917083740234
    5. 'er' → logprob: -3.1518917083740234
    6. 'ity' → logprob: -3.2768917083740234
    7. 'ite' → logprob: -3.4018917083740234
    8. 'ites' → logprob: -3.5268917083740234
    9. 'ibility' → logprob: -3.7768917083740234
    10. 'é' → logprob: -3.7768917083740234

Token 1003: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15907250344753265
    2. 'results' → logprob: -2.4090723991394043
    3. ',' → logprob: -3.7840723991394043
    4. '(results' → logprob: -3.9090723991394043
    5. ' results' → logprob: -5.534072399139404
    6. '),' → logprob: -5.659072399139404
    7. '
' → logprob: -6.409072399139404
    8. 'import' → logprob: -7.409072399139404
    9. '   ' → logprob: -7.409072399139404
    10. ')
' → logprob: -7.659072399139404

Token 1004: ' ou' (ID: 2031)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.7680351734161377
    2. '%' → logprob: -1.1430351734161377
    3. 'results' → logprob: -1.6430351734161377
    4. ')' → logprob: -4.893034934997559
    5. ' results' → logprob: -5.018034934997559
    6. '%
' → logprob: -6.518034934997559
    7. ')
' → logprob: -6.518034934997559
    8. '(' → logprob: -7.018034934997559
    9. ' =' → logprob: -7.143034934997559
    10. '=' → logprob: -7.143034934997559

Token 1005: ' à' (ID: 1221)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.3494256734848022
    2. ' pour' → logprob: -2.224425792694092
    3. ' un' → logprob: -2.599425792694092
    4. 'for' → logprob: -2.724425792694092
    5. ' for' → logprob: -2.849425792694092
    6. 'n' → logprob: -2.974425792694092
    7. 'results' → logprob: -2.974425792694092
    8. ' results' → logprob: -3.224425792694092
    9. ' to' → logprob: -3.474425792694092
    10. ' n' → logprob: -3.724425792694092

Token 1006: ' normal' (ID: 6078)
  Prédit: ' afficher'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' afficher' → logprob: -1.0394378900527954
    2. 'results' → logprob: -1.4144378900527954
    3. ' results' → logprob: -3.164437770843506
    4. ' ind' → logprob: -3.289437770843506
    5. ' indicate' → logprob: -3.414437770843506
    6. '
' → logprob: -3.414437770843506
    7. 'print' → logprob: -3.539437770843506
    8. 'ind' → logprob: -3.539437770843506
    9. 'repr' → logprob: -3.664437770843506
    10. '[' → logprob: -3.664437770843506

Token 1007: 'iser' (ID: 7466)
  Prédit: 'iser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iser' → logprob: -0.4758596420288086
    2. 'al' → logprob: -0.9758596420288086
    3. 'er' → logprob: -6.600859642028809
    4. 'izer' → logprob: -7.975859642028809
    5. 'alyser' → logprob: -10.600859642028809
    6. 'ormal' → logprob: -11.725859642028809
    7. 'aiser' → logprob: -11.725859642028809
    8. 'aler' → logprob: -12.225859642028809
    9. 'nal' → logprob: -12.725859642028809
    10. 'alis' → logprob: -12.975859642028809

Token 1008: ' les' (ID: 1341)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.024037297815084457
    2. ' results' → logprob: -3.7740373611450195
    3. '(results' → logprob: -7.1490373611450195
    4. 'result' → logprob: -12.64903736114502
    5. '	results' → logprob: -13.39903736114502
    6. '
' → logprob: -14.89903736114502
    7. 'res' → logprob: -15.39903736114502
    8. ' (' → logprob: -16.149036407470703
    9. ' résultats' → logprob: -16.399036407470703
    10. '_results' → logprob: -16.399036407470703

Token 1009: ' réponses' (ID: 88884)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.03444647416472435
    2. ' results' → logprob: -3.5344464778900146
    3. 'result' → logprob: -5.4094462394714355
    4. 'res' → logprob: -9.784446716308594
    5. 'values' → logprob: -9.784446716308594
    6. ' result' → logprob: -10.034446716308594
    7. ' résultats' → logprob: -10.909446716308594
    8. 'rés' → logprob: -11.159446716308594
    9. '(results' → logprob: -11.909446716308594
    10. 'indices' → logprob: -12.659446716308594

Token 1010: ' selon' (ID: 27571)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.267650306224823
    2. '(' → logprob: -2.3926503658294678
    3. '(results' → logprob: -3.1426503658294678
    4. '%' → logprob: -3.1426503658294678
    5. ' =' → logprob: -4.517650127410889
    6. ' results' → logprob: -4.767650127410889
    7. '   ' → logprob: -5.017650127410889
    8. '()' → logprob: -5.392650127410889
    9. ' %' → logprob: -5.392650127410889
    10. '(
' → logprob: -5.392650127410889

Token 1011: ' les' (ID: 1341)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.07326854765415192
    2. ' results' → logprob: -2.9482686519622803
    3. 'n' → logprob: -4.198268413543701
    4. ' n' → logprob: -6.198268413543701
    5. '
' → logprob: -8.32326889038086
    6. 'result' → logprob: -8.44826889038086
    7. '-results' → logprob: -8.94826889038086
    8. 'the' → logprob: -9.32326889038086
    9. '(results' → logprob: -9.44826889038086
    10. '%n' → logprob: -10.19826889038086

Token 1012: ' besoins' (ID: 46126)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4095593988895416
    2. ' n' → logprob: -2.159559488296509
    3. ' résultats' → logprob: -2.409559488296509
    4. 'indices' → logprob: -2.784559488296509
    5. 'result' → logprob: -4.03455924987793
    6. ' indices' → logprob: -4.28455924987793
    7. ' valeurs' → logprob: -4.90955924987793
    8. 'val' → logprob: -5.15955924987793
    9. 'rés' → logprob: -5.90955924987793
    10. 'results' → logprob: -6.03455924987793

Token 1013: ' du' (ID: 1462)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5028008222579956
    2. '%' → logprob: -2.002800941467285
    3. 'results' → logprob: -2.627800941467285
    4. 'print' → logprob: -3.002800941467285
    5. ' %' → logprob: -3.752800941467285
    6. '(' → logprob: -3.752800941467285
    7. ' =' → logprob: -3.877800941467285
    8. '=' → logprob: -4.627800941467285
    9. ' print' → logprob: -4.752800941467285
    10. ')' → logprob: -4.752800941467285

Token 1014: ' problème' (ID: 35630)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7139860987663269
    2. 'programme' → logprob: -1.7139861583709717
    3. ' programme' → logprob: -2.4639861583709717
    4. 'program' → logprob: -2.7139861583709717
    5. 'code' → logprob: -3.2139861583709717
    6. ' code' → logprob: -3.3389861583709717
    7. ' program' → logprob: -3.7139861583709717
    8. ' print' → logprob: -4.213985919952393
    9. '#' → logprob: -4.713985919952393
    10. 'result' → logprob: -4.963985919952393

Token 1015: '.
' (ID: 558)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.6525704264640808
    2. ' %' → logprob: -1.1525704860687256
    3. 'results' → logprob: -3.0275704860687256
    4. '   ' → logprob: -3.5275704860687256
    5. ' =' → logprob: -3.7775704860687256
    6. '(' → logprob: -4.0275702476501465
    7. ')' → logprob: -4.4025702476501465
    8. '=' → logprob: -4.6525702476501465
    9. ' results' → logprob: -4.7775702476501465
    10. ',' → logprob: -5.7775702476501465

Token 1016: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.789984405040741
    2. '   ' → logprob: -1.2899844646453857
    3. 'results' → logprob: -1.9149844646453857
    4. ' print' → logprob: -3.1649844646453857
    5. 'return' → logprob: -3.5399844646453857
    6. '%' → logprob: -4.539984226226807
    7. ' results' → logprob: -4.664984226226807
    8. ' return' → logprob: -5.289984226226807
    9. 'for' → logprob: -5.664984226226807
    10. 'mod' → logprob: -5.789984226226807

Token 1017: ' final' (ID: 1721)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.8806940913200378
    2. 'answers' → logprob: -1.6306941509246826
    3. 'answer' → logprob: -2.1306941509246826
    4. 'output' → logprob: -2.5056941509246826
    5. 'final' (adapté à ' final') → logprob: -3.3806941509246826
    6. 'out' → logprob: -3.5056941509246826
    7. 'res' → logprob: -3.5056941509246826
    8. 'results' → logprob: -3.6306941509246826
    9. 'ans' → logprob: -3.6306941509246826
    10. 'outputs' → logprob: -4.6306939125061035

Token 1018: '_results' (ID: 31049)
  Prédit: '_results'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_results' → logprob: -0.08501533418893814
    2. 's' → logprob: -3.335015296936035
    3. ' =' → logprob: -3.460015296936035
    4. '_result' → logprob: -4.960015296936035
    5. '=' → logprob: -6.085015296936035
    6. '_' → logprob: -6.210015296936035
    7. '_indices' → logprob: -6.585015296936035
    8. 'results' → logprob: -6.960015296936035
    9. '_res' → logprob: -8.460015296936035
    10. '_s' → logprob: -9.085015296936035

Token 1019: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759435892105103
    2. ' =' → logprob: -0.8259435892105103
    3. 's' → logprob: -13.200943946838379
    4. ' ' → logprob: -13.825943946838379
    5. ' =
' → logprob: -14.700943946838379
    6. '＝' → logprob: -14.950943946838379
    7. '=
' → logprob: -15.450943946838379
    8. ' ' → logprob: -16.825942993164062
    9. '.=' → logprob: -16.825942993164062
    10. '.' → logprob: -16.950942993164062

Token 1020: ' (' (ID: 350)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.5059027075767517
    2. '(results' → logprob: -1.0059027671813965
    3. ' results' → logprob: -4.1309027671813965
    4. ' (' → logprob: -4.2559027671813965
    5. 'mod' → logprob: -7.2559027671813965
    6. 'where' → logprob: -9.380902290344238
    7. 'result' → logprob: -9.505902290344238
    8. '(result' → logprob: -9.630902290344238
    9. '(mod' → logprob: -10.005902290344238
    10. '((' → logprob: -10.255902290344238

Token 1021: 'results' (ID: 16570)
  Prédit: 'results'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -2.2007883671903983e-05
    2. ' results' → logprob: -10.750021934509277
    3. '(results' → logprob: -14.500021934509277
    4. '	results' → logprob: -17.625022888183594
    5. 'result' → logprob: -17.750022888183594
    6. '.results' → logprob: -21.625022888183594
    7. 'Results' → logprob: -21.750022888183594
    8. 'res' → logprob: -21.750022888183594
    9. '   ' → logprob: -21.875022888183594
    10. '_results' → logprob: -21.875022888183594

Token 1022: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.00027099132421426475
    2. '%' → logprob: -8.62527084350586
    3. 'int' → logprob: -9.37527084350586
    4. '
' → logprob: -12.75027084350586
    5. '_mod' → logprob: -14.50027084350586
    6. 'Int' → logprob: -14.62527084350586
    7. '%n' → logprob: -14.62527084350586
    8. ' %' → logprob: -15.00027084350586
    9. '_' → logprob: -15.25027084350586
    10. '```' → logprob: -15.37527084350586

Token 1023: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.25787830352783203
    2. '%' → logprob: -1.507878303527832
    3. '%n' → logprob: -5.132878303527832
    4. '%c' → logprob: -11.382878303527832
    5. '%s' → logprob: -12.132878303527832
    6. '%d' → logprob: -12.382878303527832
    7. '%i' → logprob: -12.507878303527832
    8. '%
' → logprob: -13.382878303527832
    9. '%e' → logprob: -13.632878303527832
    10. ' ' → logprob: -13.757878303527832

Token 1024: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.013084819540381432
    2. ' n' → logprob: -4.513084888458252
    3. '(n' → logprob: -6.263084888458252
    4. ' (' → logprob: -9.138084411621094
    5. '
' → logprob: -11.263084411621094
    6. '(' → logprob: -12.138084411621094
    7. '```' → logprob: -13.888084411621094
    8. ' ' → logprob: -14.263084411621094
    9. ')n' → logprob: -14.513084411621094
    10. '	n' → logprob: -14.513084411621094

Token 1025: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002562576439231634
    2. ')-' → logprob: -6.252562522888184
    3. '-' → logprob: -8.002562522888184
    4. ' )' → logprob: -8.752562522888184
    5. ' -' → logprob: -8.877562522888184
    6. '-)' → logprob: -14.252562522888184
    7. '   ' → logprob: -15.377562522888184
    8. ' ' → logprob: -15.502562522888184
    9. ')
' → logprob: -16.3775634765625
    10. '```' → logprob: -16.6275634765625

Token 1026: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.02975071594119072
    2. ' -' → logprob: -3.5297508239746094
    3. '-
' → logprob: -15.40475082397461
    4. ' ' → logprob: -16.90475082397461
    5. '−' → logprob: -17.52975082397461
    6. '–' → logprob: -17.65475082397461
    7. '
' → logprob: -17.77975082397461
    8. ')' → logprob: -18.02975082397461
    9. ')-' → logprob: -18.40475082397461
    10. '"-' → logprob: -18.40475082397461

Token 1027: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.15310683415737e-05
    2. ' ' → logprob: -10.750021934509277
    3. '   ' → logprob: -19.25002098083496
    4. '```' → logprob: -19.50002098083496
    5. '	' → logprob: -20.25002098083496
    6. ' ' → logprob: -20.50002098083496
    7. '
' → logprob: -21.12502098083496
    8. '۱' → logprob: -21.87502098083496
    9. '  ' → logprob: -22.00002098083496
    10. '１' → logprob: -22.12502098083496

Token 1028: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.375
    3. '
' → logprob: -19.125
    4. '```' → logprob: -20.125
    5. '   ' → logprob: -21.25
    6. '<|end|>' → logprob: -21.375
    7. '۱' → logprob: -21.75
    8. '  ' → logprob: -22.375
    9. ' ' → logprob: -22.625
    10. '１' → logprob: -22.75

Token 1029: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0120866298675537
    2. '   ' → logprob: -1.1370866298675537
    3. '
' → logprob: -1.3870866298675537
    4. ' for' → logprob: -3.2620866298675537
    5. '<|end|>' → logprob: -3.7620866298675537
    6. 'print' → logprob: -6.762086868286133
    7. '    
' → logprob: -7.262086868286133
    8. '	for' → logprob: -7.262086868286133
    9. '[' → logprob: -7.262086868286133
    10. '```' → logprob: -8.262086868286133

Token 1030: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16234590113162994
    2. 'for' → logprob: -2.0373458862304688
    3. '<|end|>' → logprob: -5.037345886230469
    4. 'print' → logprob: -5.412345886230469
    5. '    
' → logprob: -5.537345886230469
    6. ' for' → logprob: -6.412345886230469
    7. '
' → logprob: -6.912345886230469
    8. '	for' → logprob: -7.162345886230469
    9. 'return' → logprob: -7.912345886230469
    10. '```' → logprob: -8.537345886230469

Token 1031: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.013689043000340462
    2. 'print' → logprob: -5.013689041137695
    3. ' for' → logprob: -5.763689041137695
    4. '   ' → logprob: -6.138689041137695
    5. '
' → logprob: -6.638689041137695
    6. '```' → logprob: -8.138689041137695
    7. '    
' → logprob: -11.263689041137695
    8. '	for' → logprob: -11.263689041137695
    9. '[' → logprob: -11.763689041137695
    10. 'import' → logprob: -12.013689041137695

Token 1032: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5770515203475952
    2. 'print' → logprob: -0.8270515203475952
    3. '   ' → logprob: -6.827051639556885
    4. ' for' → logprob: -10.952051162719727
    5. 'from' → logprob: -13.077051162719727
    6. ' print' → logprob: -13.077051162719727
    7. 'import' → logprob: -13.202051162719727
    8. '
' → logprob: -13.452051162719727
    9. '	for' → logprob: -14.452051162719727
    10. 'return' → logprob: -14.452051162719727

Token 1033: ' convert' (ID: 8452)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.06030930206179619
    2. 'for' → logprob: -2.935309410095215
    3. ' for' → logprob: -6.060309410095215
    4. '   ' → logprob: -6.935309410095215
    5. ' print' → logprob: -6.935309410095215
    6. 'write' → logprob: -7.560309410095215
    7. '
' → logprob: -8.435309410095215
    8. 'import' → logprob: -8.560309410095215
    9. 'stdout' → logprob: -9.810309410095215
    10. '.' → logprob: -10.310309410095215

Token 1034: 'it' (ID: 278)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.2369561344385147
    2. 'it' → logprob: -2.1119561195373535
    3. 'final' → logprob: -2.6119561195373535
    4. 'ir' → logprob: -4.4869561195373535
    5. ' final' → logprob: -6.4869561195373535
    6. 'vert' → logprob: -6.6119561195373535
    7. '_final' → logprob: -6.8619561195373535
    8. 'is' → logprob: -7.2369561195373535
    9. 'Final' → logprob: -8.861956596374512
    10. 'i' → logprob: -8.986956596374512

Token 1035: ' chaque' (ID: 21194)
  Prédit: 'final'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'final' → logprob: -0.006459089927375317
    2. '(final' → logprob: -5.2564592361450195
    3. ' final' → logprob: -7.0064592361450195
    4. 'list' → logprob: -8.75645923614502
    5. 'array' → logprob: -9.13145923614502
    6. 'bytes' → logprob: -11.13145923614502
    7. '	final' → logprob: -11.75645923614502
    8. '(' → logprob: -12.13145923614502
    9. 'print' → logprob: -12.63145923614502
    10. '
' → logprob: -12.88145923614502

Token 1036: ' résultat' (ID: 62556)
  Prédit: 'final'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'final' → logprob: -0.2681102156639099
    2. 'str' → logprob: -1.6431102752685547
    3. 'res' → logprob: -4.643110275268555
    4. 'result' → logprob: -5.268110275268555
    5. 'x' → logprob: -5.518110275268555
    6. 'elem' → logprob: -5.768110275268555
    7. 's' → logprob: -5.893110275268555
    8. 'r' → logprob: -6.018110275268555
    9. 'line' → logprob: -6.143110275268555
    10. 'element' → logprob: -6.143110275268555

Token 1037: ' en' (ID: 469)
  Prédit: 'final'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'final' → logprob: -0.9796830415725708
    2. '(final' → logprob: -1.2296830415725708
    3. 'to' → logprob: -2.1046829223632812
    4. '.tolist' → logprob: -2.6046829223632812
    5. 'tolist' → logprob: -2.7296829223632812
    6. 'for' → logprob: -3.7296829223632812
    7. '.astype' → logprob: -4.104682922363281
    8. '(' → logprob: -4.479682922363281
    9. 'map' → logprob: -5.854682922363281
    10. '(map' → logprob: -6.354682922363281

Token 1038: ' chaîne' (ID: 89288)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.004425962921231985
    2. 'map' → logprob: -6.254426002502441
    3. ' str' → logprob: -6.504426002502441
    4. 'list' → logprob: -7.629426002502441
    5. 'bytes' → logprob: -8.629426002502441
    6. 'chr' → logprob: -8.754426002502441
    7. 'char' → logprob: -9.754426002502441
    8. '[str' → logprob: -10.504426002502441
    9. ' map' → logprob: -10.879426002502441
    10. 'string' → logprob: -11.379426002502441

Token 1039: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5228523015975952
    2. 'map' → logprob: -1.1478523015975952
    3. 'final' → logprob: -3.1478524208068848
    4. 's' → logprob: -3.5228524208068848
    5. '.map' → logprob: -5.272852420806885
    6. '_map' → logprob: -6.272852420806885
    7. '_final' → logprob: -6.647852420806885
    8. ' =' → logprob: -6.772852420806885
    9. '.' → logprob: -6.772852420806885
    10. 'array' → logprob: -7.147852420806885

Token 1040: ' caractères' (ID: 183106)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.01823562942445278
    2. 'car' → logprob: -4.018235683441162
    3. 'string' → logprob: -10.268235206604004
    4. ' caractères' → logprob: -10.518235206604004
    5. 'chaine' → logprob: -11.268235206604004
    6. ' str' → logprob: -12.768235206604004
    7. 'chars' → logprob: -12.893235206604004
    8. 'char' → logprob: -12.893235206604004
    9. 'strings' → logprob: -14.018235206604004
    10. ' caract' → logprob: -14.518235206604004

Token 1041: ' pour' (ID: 1930)
  Prédit: 'final'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'final' → logprob: -0.29486435651779175
    2. '   ' → logprob: -2.1698644161224365
    3. 'map' → logprob: -2.9198644161224365
    4. '.map' → logprob: -3.1698644161224365
    5. ' final' → logprob: -4.919864177703857
    6. '.astype' → logprob: -5.169864177703857
    7. '('\' → logprob: -5.294864177703857
    8. '(final' → logprob: -5.419864177703857
    9. 'results' → logprob: -5.919864177703857
    10. '.final' → logprob: -6.044864177703857

Token 1042: ' affich' (ID: 90179)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.04494410380721092
    2. 'str' → logprob: -3.4199440479278564
    3. 'map' → logprob: -5.1699442863464355
    4. ' print' → logprob: -5.9199442863464355
    5. ' str' → logprob: -6.6699442863464355
    6. ''\' → logprob: -7.4199442863464355
    7. ' map' → logprob: -7.7949442863464355
    8. '   ' → logprob: -8.669943809509277
    9. 'join' → logprob: -9.419943809509277
    10. 's' → logprob: -9.919943809509277

Token 1043: 'age' (ID: 477)
  Prédit: 'age'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'age' → logprob: -0.7359374761581421
    2. 'e' → logprob: -1.485937476158142
    3. 'er' → logprob: -1.485937476158142
    4. 'ée' → logprob: -2.7359375953674316
    5. 'print' → logprob: -7.235937595367432
    6. 'ène' → logprob: -8.110937118530273
    7. '```' → logprob: -8.235937118530273
    8. 'ère' → logprob: -8.735937118530273
    9. 'a' → logprob: -8.735937118530273
    10. '#' → logprob: -8.735937118530273

Token 1044: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47659268975257874
    2. 'final' → logprob: -1.1015926599502563
    3. 'for' → logprob: -4.226592540740967
    4. 'print' → logprob: -4.976592540740967
    5. 'results' → logprob: -4.976592540740967
    6. ' =' → logprob: -5.726592540740967
    7. 'map' → logprob: -5.851592540740967
    8. '(final' → logprob: -5.851592540740967
    9. 'result' → logprob: -6.101592540740967
    10. ' final' → logprob: -6.851592540740967

Token 1045: '   ' (ID: 271)
  Prédit: 'final'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'final' → logprob: -0.28630331158638
    2. '   ' → logprob: -1.7863032817840576
    3. 'for' → logprob: -3.0363032817840576
    4. ' final' → logprob: -5.161303520202637
    5. 'print' → logprob: -5.161303520202637
    6. 'join' → logprob: -5.536303520202637
    7. 'result' → logprob: -5.661303520202637
    8. 'str' → logprob: -5.786303520202637
    9. 'map' → logprob: -5.786303520202637
    10. 'results' → logprob: -5.911303520202637

Token 1046: ' #' (ID: 1069)
  Prédit: 'final'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'final' → logprob: -0.24783018231391907
    2. 'print' → logprob: -2.1228301525115967
    3. 'result' → logprob: -2.9978301525115967
    4. '   ' → logprob: -4.622830390930176
    5. 'res' → logprob: -4.872830390930176
    6. 'results' → logprob: -4.997830390930176
    7. 'str' → logprob: -5.247830390930176
    8. 'output' → logprob: -5.497830390930176
    9. ' final' → logprob: -5.622830390930176
    10. 'list' → logprob: -5.997830390930176

Token 1047: ' '' (ID: 461)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.04103328660130501
    2. '   ' → logprob: -3.7910332679748535
    3. ' print' → logprob: -4.9160332679748535
    4. 'for' → logprob: -5.1660332679748535
    5. 'result' → logprob: -6.6660332679748535
    6. 'final' → logprob: -6.6660332679748535
    7. 'res' → logprob: -7.5410332679748535
    8. 'output' → logprob: -7.7910332679748535
    9. 'results' → logprob: -8.291033744812012
    10. 'map' → logprob: -8.416033744812012

Token 1048: 'map' (ID: 3726)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.9558808207511902
    2. 'map' → logprob: -1.080880880355835
    3. ''\' → logprob: -1.830880880355835
    4. 'join' → logprob: -2.580880880355835
    5. '"\' → logprob: -3.455880880355835
    6. 'str' → logprob: -5.955880641937256
    7. ''' → logprob: -6.455880641937256
    8. ' '\' → logprob: -6.830880641937256
    9. '"' → logprob: -7.330880641937256
    10. '\n' → logprob: -7.455880641937256

Token 1049: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.0003213997988495976
    2. 'str' → logprob: -8.375321388244629
    3. '(' → logprob: -9.375321388244629
    4. '=str' → logprob: -13.750321388244629
    5. ' str' → logprob: -13.875321388244629
    6. '   ' → logprob: -14.125321388244629
    7. '(lambda' → logprob: -14.250321388244629
    8. '(
' → logprob: -14.375321388244629
    9. '```' → logprob: -14.375321388244629
    10. '[str' → logprob: -14.750321388244629

Token 1050: ',' (ID: 11)
  Prédit: '(final'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(final' → logprob: -0.14782631397247314
    2. ',' → logprob: -2.2728261947631836
    3. ')' → logprob: -3.8978261947631836
    4. 'final' → logprob: -4.772826194763184
    5. ')(' → logprob: -6.147826194763184
    6. '(results' → logprob: -6.522826194763184
    7. '(' → logprob: -6.772826194763184
    8. ',(' → logprob: -8.647826194763184
    9. ' ,' → logprob: -8.772826194763184
    10. ')`' → logprob: -9.397826194763184

Token 1051: ' ...' (ID: 2550)
  Prédit: 'final'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'final' → logprob: -0.02335740253329277
    2. ' final' → logprob: -3.773357391357422
    3. 'results' → logprob: -9.273357391357422
    4. ' results' → logprob: -11.773357391357422
    5. '(final' → logprob: -12.398357391357422
    6. ')' → logprob: -13.523357391357422
    7. ' ' → logprob: -13.648357391357422
    8. '   ' → logprob: -13.898357391357422
    9. 'list' → logprob: -14.148357391357422
    10. '	final' → logprob: -14.523357391357422

Token 1052: ')'' (ID: 45517)
  Prédit: '(final'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(final' → logprob: -0.01263690460473299
    2. '(results' → logprob: -4.637637138366699
    3. 'final' → logprob: -6.012637138366699
    4. '(' → logprob: -8.5126371383667
    5. ' (' → logprob: -9.6376371383667
    6. ')(' → logprob: -10.0126371383667
    7. ')' → logprob: -10.3876371383667
    8. ' final' → logprob: -10.3876371383667
    9. '(map' → logprob: -10.7626371383667
    10. 'results' → logprob: -10.8876371383667

Token 1053: ' applique' (ID: 180579)
  Prédit: '(final'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(final' → logprob: -0.11684029549360275
    2. 'final' → logprob: -2.866840362548828
    3. '(results' → logprob: -3.491840362548828
    4. '(map' → logprob: -3.991840362548828
    5. ')' → logprob: -6.241840362548828
    6. '(' → logprob: -6.991840362548828
    7. 'results' → logprob: -7.116840362548828
    8. 'map' → logprob: -8.241840362548828
    9. ' final' → logprob: -8.741840362548828
    10. ')(' → logprob: -9.366840362548828

Token 1054: ' str' (ID: 989)
  Prédit: 'final'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'final' → logprob: -0.038430679589509964
    2. 'map' → logprob: -3.288430690765381
    3. 'list' → logprob: -8.788430213928223
    4. ' final' → logprob: -9.413430213928223
    5. '(final' → logprob: -9.663430213928223
    6. 'str' → logprob: -9.663430213928223
    7. '(map' → logprob: -11.663430213928223
    8. ' map' → logprob: -11.913430213928223
    9. ')' → logprob: -12.163430213928223
    10. '(str' → logprob: -12.413430213928223

Token 1055: ' à' (ID: 1221)
  Prédit: '(final'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(final' → logprob: -0.00042983482126146555
    2. 'final' → logprob: -8.2504301071167
    3. '(results' → logprob: -9.3754301071167
    4. '(' → logprob: -9.5004301071167
    5. ' (' → logprob: -12.0004301071167
    6. ')' → logprob: -14.2504301071167
    7. ' final' → logprob: -14.3754301071167
    8. '(map' → logprob: -14.3754301071167
    9. '((' → logprob: -14.8754301071167
    10. ')(' → logprob: -15.6254301071167

Token 1056: ' chaque' (ID: 21194)
  Prédit: 'final'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'final' → logprob: -8.64970643306151e-05
    2. ' final' → logprob: -9.375086784362793
    3. '(final' → logprob: -13.750086784362793
    4. 'results' → logprob: -14.500086784362793
    5. 'map' → logprob: -17.625085830688477
    6. 'list' → logprob: -17.750085830688477
    7. '
' → logprob: -18.250085830688477
    8. '   ' → logprob: -19.125085830688477
    9. 'result' → logprob: -19.375085830688477
    10. '	final' → logprob: -19.375085830688477

Token 1057: ' élément' (ID: 99627)
  Prédit: 'final'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'final' → logprob: -0.001966223819181323
    2. ' final' → logprob: -6.2519659996032715
    3. '(final' → logprob: -10.25196647644043
    4. 'list' → logprob: -14.25196647644043
    5. 'element' → logprob: -14.25196647644043
    6. 'result' → logprob: -14.62696647644043
    7. 'results' → logprob: -15.12696647644043
    8. ')' → logprob: -16.25196647644043
    9. 'map' → logprob: -16.50196647644043
    10. ' ' → logprob: -17.12696647644043

Token 1058: '
' (ID: 198)
  Prédit: '(final'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(final' → logprob: -0.023489460349082947
    2. 'final' → logprob: -4.148489475250244
    3. '(results' → logprob: -5.023489475250244
    4. '(map' → logprob: -8.523488998413086
    5. 'results' → logprob: -8.773488998413086
    6. ')' → logprob: -8.773488998413086
    7. '   ' → logprob: -8.898488998413086
    8. '(' → logprob: -9.398488998413086
    9. ' (' → logprob: -10.148488998413086
    10. ' final' → logprob: -10.773488998413086

Token 1059: '   ' (ID: 271)
  Prédit: 'final'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'final' → logprob: -0.10976675152778625
    2. 'results' → logprob: -2.484766721725464
    3. '   ' → logprob: -4.609766960144043
    4. '(final' → logprob: -5.859766960144043
    5. ' final' → logprob: -5.859766960144043
    6. '(results' → logprob: -6.234766960144043
    7. 'map' → logprob: -7.109766960144043
    8. 'list' → logprob: -7.234766960144043
    9. ' results' → logprob: -7.359766960144043
    10. ')' → logprob: -7.609766960144043

Token 1060: ' #' (ID: 1069)
  Prédit: 'final'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'final' → logprob: -0.26981717348098755
    2. 'results' → logprob: -2.0198171138763428
    3. 'map' → logprob: -2.8948171138763428
    4. '   ' → logprob: -3.8948171138763428
    5. ' final' → logprob: -4.519817352294922
    6. 'result' → logprob: -5.394817352294922
    7. ' results' → logprob: -5.519817352294922
    8. ' map' → logprob: -5.644817352294922
    9. 'list' → logprob: -5.769817352294922
    10. 'print' → logprob: -6.894817352294922

Token 1061: ' '' (ID: 461)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.014842129312455654
    2. 'final' → logprob: -4.8898420333862305
    3. ' print' → logprob: -5.6398420333862305
    4. 'map' → logprob: -6.5148420333862305
    5. 'results' → logprob: -7.1398420333862305
    6. 'result' → logprob: -7.3898420333862305
    7. '   ' → logprob: -7.7648420333862305
    8. 'join' → logprob: -9.26484203338623
    9. 'res' → logprob: -9.63984203338623
    10. 'for' → logprob: -10.26484203338623

Token 1062: 'join' (ID: 10891)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5086161494255066
    2. 'join' → logprob: -1.3836162090301514
    3. ''\' → logprob: -2.3836162090301514
    4. '"\' → logprob: -3.2586162090301514
    5. 'map' → logprob: -4.383615970611572
    6. ''' → logprob: -5.883615970611572
    7. '"' → logprob: -6.633615970611572
    8. 'sep' → logprob: -8.75861644744873
    9. ' print' → logprob: -8.88361644744873
    10. ' join' → logprob: -8.88361644744873

Token 1063: ''' (ID: 6)
  Prédit: '('\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('\' → logprob: -0.1489059329032898
    2. '("\' → logprob: -2.0239059925079346
    3. '(' → logprob: -5.1489057540893555
    4. '(
' → logprob: -8.023905754089355
    5. '('' → logprob: -10.898905754089355
    6. ''\' → logprob: -11.023905754089355
    7. '
' → logprob: -11.398905754089355
    8. 'print' → logprob: -12.023905754089355
    9. '(os' → logprob: -12.648905754089355
    10. '"\' → logprob: -12.898905754089355

Token 1064: ' rassemble' (ID: 158483)
  Prédit: '('\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('\' → logprob: -0.3153657019138336
    2. '("\' → logprob: -1.3153656721115112
    3. '(' → logprob: -6.690365791320801
    4. '('' → logprob: -8.0653657913208
    5. '(
' → logprob: -8.9403657913208
    6. '.join' → logprob: -9.1903657913208
    7. '.' → logprob: -9.3153657913208
    8. '("' → logprob: -9.9403657913208
    9. '   ' → logprob: -10.4403657913208
    10. '('').' → logprob: -10.5653657913208

Token 1065: ' les' (ID: 1341)
  Prédit: '('\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('\' → logprob: -1.1472041606903076
    2. ''\' → logprob: -1.1472041606903076
    3. 'map' → logprob: -1.2722041606903076
    4. '("\' → logprob: -3.1472041606903076
    5. '"\' → logprob: -3.2722041606903076
    6. '
' → logprob: -6.647204399108887
    7. '   ' → logprob: -7.147204399108887
    8. '(map' → logprob: -8.397204399108887
    9. '['' → logprob: -8.647204399108887
    10. ' map' → logprob: -8.647204399108887

Token 1066: ' lignes' (ID: 81687)
  Prédit: ''\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''\' → logprob: -0.49158111214637756
    2. '"\' → logprob: -1.2415810823440552
    3. 'map' → logprob: -2.3665812015533447
    4. '"' → logprob: -5.866580963134766
    5. ''' → logprob: -6.616580963134766
    6. '('\' → logprob: -7.366580963134766
    7. '\n' → logprob: -8.241580963134766
    8. ' '\' → logprob: -8.991580963134766
    9. '("\' → logprob: -9.116580963134766
    10. ' "\' → logprob: -9.491580963134766

Token 1067: ' avec' (ID: 3937)
  Prédit: '('\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('\' → logprob: -0.48077407479286194
    2. '("\' → logprob: -0.9807740449905396
    3. 'map' → logprob: -5.73077392578125
    4. '(' → logprob: -6.35577392578125
    5. ''\' → logprob: -7.48077392578125
    6. '   ' → logprob: -7.98077392578125
    7. '"\' → logprob: -8.35577392578125
    8. '(map' → logprob: -8.60577392578125
    9. 'join' → logprob: -9.48077392578125
    10. '(["' → logprob: -9.98077392578125

Token 1068: ' des' (ID: 731)
  Prédit: ''\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''\' → logprob: -0.07894036173820496
    2. '"\' → logprob: -2.5789403915405273
    3. ''' → logprob: -10.828940391540527
    4. '"' → logprob: -11.578940391540527
    5. '
' → logprob: -11.953940391540527
    6. ' '\' → logprob: -12.078940391540527
    7. '\n' → logprob: -13.078940391540527
    8. ' "\' → logprob: -13.203940391540527
    9. ''
' → logprob: -13.578940391540527
    10. '   ' → logprob: -13.703940391540527

Token 1069: ' sa' (ID: 880)
  Prédit: ''\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''\' → logprob: -0.11347286403179169
    2. '"\' → logprob: -2.2384729385375977
    3. '\n' → logprob: -7.488472938537598
    4. ' '\' → logprob: -10.238472938537598
    5. '`\' → logprob: -11.238472938537598
    6. '
' → logprob: -11.488472938537598
    7. ' "\' → logprob: -11.488472938537598
    8. '"' → logprob: -11.988472938537598
    9. ''' → logprob: -12.488472938537598
    10. 'join' → logprob: -12.738472938537598

Token 1070: 'uts' (ID: 4639)
  Prédit: ''\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''\' → logprob: -0.5910293459892273
    2. '"\' → logprob: -0.9660293459892273
    3. 'p' → logprob: -3.341029405593872
    4. '"' → logprob: -4.341029167175293
    5. ''' → logprob: -5.591029167175293
    6. 't' → logprob: -5.841029167175293
    7. 'r' → logprob: -5.966029167175293
    8. 'ps' → logprob: -6.091029167175293
    9. 'ts' → logprob: -6.841029167175293
    10. '('\' → logprob: -7.091029167175293

Token 1071: ' de' (ID: 334)
  Prédit: '"\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"\' → logprob: -0.31564414501190186
    2. ''\' → logprob: -1.4406441450119019
    3. '="\' → logprob: -3.6906442642211914
    4. '='\' → logprob: -5.065644264221191
    5. '""' → logprob: -7.315644264221191
    6. '('\' → logprob: -7.440644264221191
    7. 'join' → logprob: -7.815644264221191
    8. '("\' → logprob: -8.690644264221191
    9. '\n' → logprob: -8.815644264221191
    10. '=' → logprob: -8.940644264221191

Token 1072: ' ligne' (ID: 19583)
  Prédit: ''\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''\' → logprob: -0.20147687196731567
    2. '"\' → logprob: -1.701476812362671
    3. '\n' → logprob: -10.20147705078125
    4. ''' → logprob: -11.20147705078125
    5. '"' → logprob: -11.82647705078125
    6. ' '\' → logprob: -13.20147705078125
    7. '`\' → logprob: -13.32647705078125
    8. ' "\' → logprob: -14.32647705078125
    9. ''
' → logprob: -14.82647705078125
    10. '('\' → logprob: -15.95147705078125

Token 1073: '
' (ID: 198)
  Prédit: '('\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('\' → logprob: -0.764522135257721
    2. '("\' → logprob: -1.2645220756530762
    3. '"\' → logprob: -1.8895220756530762
    4. ''\' → logprob: -2.639522075653076
    5. 'print' → logprob: -3.889522075653076
    6. 'join' → logprob: -5.764522075653076
    7. '   ' → logprob: -6.389522075653076
    8. ')' → logprob: -6.764522075653076
    9. '="\' → logprob: -7.139522075653076
    10. ').' → logprob: -7.264522075653076

Token 1074: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.048935696482658386
    2. '   ' → logprob: -3.048935651779175
    3. ' print' → logprob: -8.173935890197754
    4. '```' → logprob: -10.423935890197754
    5. '
' → logprob: -12.173935890197754
    6. '    
' → logprob: -12.298935890197754
    7. '	print' → logprob: -12.298935890197754
    8. '('\' → logprob: -12.548935890197754
    9. '("\' → logprob: -12.798935890197754
    10. ')' → logprob: -12.798935890197754

Token 1075: ' output' (ID: 4733)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0010133992182090878
    2. '   ' → logprob: -7.001013278961182
    3. ' print' → logprob: -9.25101375579834
    4. '	print' → logprob: -13.12601375579834
    5. '
' → logprob: -13.50101375579834
    6. 'return' → logprob: -14.12601375579834
    7. '    
' → logprob: -14.37601375579834
    8. '```' → logprob: -15.12601375579834
    9. 'result' → logprob: -15.37601375579834
    10. 'output' (adapté à ' output') → logprob: -16.126012802124023

Token 1076: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10803382843732834
    2. ' =' → logprob: -2.3580338954925537
    3. '(' → logprob: -4.983033657073975
    4. '(
' → logprob: -7.733033657073975
    5. '=
' → logprob: -8.608034133911133
    6. '   ' → logprob: -9.108034133911133
    7. '('\' → logprob: -9.858034133911133
    8. '('' → logprob: -10.733034133911133
    9. 's' → logprob: -10.983034133911133
    10. ' =
' → logprob: -10.983034133911133

Token 1077: ' '\' (ID: 10855)
  Prédit: '"\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"\' → logprob: -0.5762968063354492
    2. ''\' → logprob: -0.8262968063354492
    3. ' "\' → logprob: -8.45129680633545
    4. ' '\' → logprob: -8.95129680633545
    5. '\n' → logprob: -11.82629680633545
    6. 'join' → logprob: -12.82629680633545
    7. '"' → logprob: -13.32629680633545
    8. ' ' → logprob: -13.95129680633545
    9. '   ' → logprob: -14.57629680633545
    10. '	' → logprob: -14.95129680633545

Token 1078: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.018741419538855553
    2. '\n' → logprob: -4.018741607666016
    3. ''\' → logprob: -7.518741607666016
    4. '
' → logprob: -10.018741607666016
    5. '"\' → logprob: -13.143741607666016
    6. 'join' → logprob: -14.143741607666016
    7. '\
' → logprob: -14.768741607666016
    8. ''n' → logprob: -15.268741607666016
    9. '
' → logprob: -15.768741607666016
    10. ''.' → logprob: -16.268741607666016

Token 1079: ''.' (ID: 6120)
  Prédit: 'join'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -0.4721882939338684
    2. ''.' → logprob: -1.0971882343292236
    3. '.join' → logprob: -3.4721882343292236
    4. '''.' → logprob: -5.222188472747803
    5. '.' → logprob: -6.347188472747803
    6. ''' → logprob: -6.847188472747803
    7. '".' → logprob: -7.222188472747803
    8. ''\' → logprob: -7.347188472747803
    9. ' join' → logprob: -7.597188472747803
    10. '\n' → logprob: -7.722188472747803

Token 1080: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -1.9361264946837764e-07
    2. ' join' → logprob: -15.625
    3. '.join' → logprob: -16.75
    4. 'j' → logprob: -18.625
    5. 'jo' → logprob: -18.625
    6. '(join' → logprob: -19.125
    7. '```' → logprob: -19.25
    8. '
' → logprob: -20.625
    9. 'Join' → logprob: -21.375
    10. '1' → logprob: -21.875

Token 1081: '(map' (ID: 16946)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.00043162284418940544
    2. '(map' → logprob: -7.750431537628174
    3. ' map' → logprob: -14.125432014465332
    4. 'str' → logprob: -15.750432014465332
    5. '	map' → logprob: -16.750431060791016
    6. '   ' → logprob: -18.750431060791016
    7. 'list' → logprob: -20.875431060791016
    8. ',map' → logprob: -20.875431060791016
    9. ' ' → logprob: -21.500431060791016
    10. '  ' → logprob: -21.750431060791016

Token 1082: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.1604413390159607
    2. 'str' → logprob: -1.9104413986206055
    3. '(' → logprob: -8.785441398620605
    4. ' str' → logprob: -10.160441398620605
    5. '	str' → logprob: -12.035441398620605
    6. '   ' → logprob: -12.160441398620605
    7. '(
' → logprob: -12.535441398620605
    8. ')' → logprob: -12.785441398620605
    9. '=str' → logprob: -12.785441398620605
    10. ' (' → logprob: -13.285441398620605

Token 1083: ',' (ID: 11)
  Prédit: '(final'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(final' → logprob: -0.0003986144147347659
    2. ',' → logprob: -8.000398635864258
    3. 'final' → logprob: -10.125398635864258
    4. ' (' → logprob: -11.375398635864258
    5. '(' → logprob: -12.125398635864258
    6. ' final' → logprob: -12.375398635864258
    7. ' ,' → logprob: -13.375398635864258
    8. '	final' → logprob: -15.625398635864258
    9. ',(' → logprob: -16.125398635864258
    10. 'Final' → logprob: -16.750398635864258

Token 1084: ' final' (ID: 1721)
  Prédit: 'final'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'final' → logprob: -0.0011703446507453918
    2. ' final' → logprob: -6.7511701583862305
    3. '(final' → logprob: -16.501171112060547
    4. '	final' → logprob: -18.501171112060547
    5. 'Final' → logprob: -20.126171112060547
    6. ' ' → logprob: -20.626171112060547
    7. '   ' → logprob: -20.751171112060547
    8. '_final' → logprob: -21.001171112060547
    9. '.final' → logprob: -21.126171112060547
    10. '
' → logprob: -22.001171112060547

Token 1085: '_results' (ID: 31049)
  Prédit: '_results'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_results' → logprob: -6.704273118884885e-07
    2. 'results' → logprob: -15.625000953674316
    3. '_result' → logprob: -15.750000953674316
    4. '_final' → logprob: -16.375
    5. 's' → logprob: -16.5
    6. '(results' → logprob: -17.5
    7. ')' → logprob: -17.75
    8. '_' → logprob: -17.875
    9. '_RESULTS' → logprob: -18.0
    10. '_res' → logprob: -18.625

Token 1086: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00016182278341148049
    2. '))
' → logprob: -9.000162124633789
    3. ' ))' → logprob: -11.000162124633789
    4. '   ' → logprob: -11.250162124633789
    5. ' ' → logprob: -13.000162124633789
    6. ')))' → logprob: -13.750162124633789
    7. ')).' → logprob: -13.875162124633789
    8. '))+' → logprob: -14.000162124633789
    9. ')' → logprob: -14.250162124633789
    10. '))

' → logprob: -14.375162124633789

Token 1087: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5948240756988525
    2. '   ' → logprob: -0.8448240756988525
    3. '
' → logprob: -4.469823837280273
    4. '<|end|>' → logprob: -5.719823837280273
    5. '    
' → logprob: -6.344823837280273
    6. '```' → logprob: -6.594823837280273
    7. ' print' → logprob: -8.094823837280273
    8. '  
' → logprob: -9.094823837280273
    9. '	print' → logprob: -9.469823837280273
    10. '[' → logprob: -9.594823837280273

Token 1088: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0031830633524805307
    2. '   ' → logprob: -5.753182888031006
    3. ' print' → logprob: -12.378183364868164
    4. '	print' → logprob: -13.753183364868164
    5. 'for' → logprob: -18.003183364868164
    6. '
' → logprob: -18.003183364868164
    7. '#print' → logprob: -18.253183364868164
    8. '    
' → logprob: -18.378183364868164
    9. 'prints' → logprob: -18.628183364868164
    10. 'import' → logprob: -19.128183364868164

Token 1089: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.961759259458631e-06
    2. '   ' → logprob: -12.250004768371582
    3. ' print' → logprob: -16.3750057220459
    4. '	print' → logprob: -17.8750057220459
    5. '#print' → logprob: -20.3750057220459
    6. 'pr' → logprob: -20.8750057220459
    7. 'prin' → logprob: -21.2500057220459
    8. '    
' → logprob: -22.3750057220459
    9. 'write' → logprob: -22.5000057220459
    10. '
' → logprob: -22.6250057220459

Token 1090: 'iche' (ID: 7509)
  Prédit: 'icher'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icher' → logprob: -0.37796247005462646
    2. 'ich' → logprob: -1.6279624700546265
    3. 'iche' → logprob: -2.377962589263916
    4. 'ichage' → logprob: -3.752962589263916
    5. '   ' → logprob: -7.127962589263916
    6. 'print' → logprob: -7.377962589263916
    7. '#' → logprob: -7.502962589263916
    8. 'ic' → logprob: -9.127962112426758
    9. '```' → logprob: -9.877962112426758
    10. 'iché' → logprob: -10.377962112426758

Token 1091: ' le' (ID: 505)
  Prédit: '(output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(output' → logprob: -0.0007438759785145521
    2. 'output' → logprob: -8.250743865966797
    3. 'print' → logprob: -8.375743865966797
    4. 'r' → logprob: -9.375743865966797
    5. '(' → logprob: -9.750743865966797
    6. 'ut' → logprob: -10.125743865966797
    7. '   ' → logprob: -10.375743865966797
    8. '(print' → logprob: -10.500743865966797
    9. '(
' → logprob: -12.625743865966797
    10. '()' → logprob: -13.875743865966797

Token 1092: ' résultat' (ID: 62556)
  Prédit: 'output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'output' → logprob: -0.0019657472148537636
    2. '(output' → logprob: -6.251965522766113
    3. ' output' → logprob: -10.251965522766113
    4. 'print' → logprob: -13.251965522766113
    5. '$output' → logprob: -17.25196647644043
    6. '(' → logprob: -18.12696647644043
    7. '	output' → logprob: -18.50196647644043
    8. 'Output' → logprob: -18.62696647644043
    9. 'result' → logprob: -19.37696647644043
    10. 'import' → logprob: -19.37696647644043

Token 1093: ' final' (ID: 1721)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4743747413158417
    2. '   ' → logprob: -0.9743747711181641
    3. '(print' → logprob: -8.474374771118164
    4. '(' → logprob: -9.974374771118164
    5. ' print' → logprob: -10.849374771118164
    6. '	print' → logprob: -11.099374771118164
    7. '
' → logprob: -13.349374771118164
    8. '    
' → logprob: -13.349374771118164
    9. '()' → logprob: -13.474374771118164
    10. '.print' → logprob: -14.599374771118164

Token 1094: ' à' (ID: 1221)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.03536294400691986
    2. '   ' → logprob: -4.035362720489502
    3. '(print' → logprob: -4.285362720489502
    4. '(' → logprob: -5.785362720489502
    5. '(output' → logprob: -9.03536319732666
    6. '()' → logprob: -10.03536319732666
    7. ' print' → logprob: -10.41036319732666
    8. '	print' → logprob: -11.41036319732666
    9. '()
' → logprob: -12.28536319732666
    10. '(
' → logprob: -12.41036319732666

Token 1095: ' l' (ID: 305)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.018695902079343796
    2. 'stdout' → logprob: -4.018695831298828
    3. 'write' → logprob: -8.393695831298828
    4. ' print' → logprob: -9.018695831298828
    5. ' stdout' → logprob: -9.518695831298828
    6. 'standard' → logprob: -10.143695831298828
    7. '   ' → logprob: -11.393695831298828
    8. 'open' → logprob: -11.393695831298828
    9. 'stderr' → logprob: -11.393695831298828
    10. ')' → logprob: -12.018695831298828

Token 1096: ''entrée' (ID: 115820)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5779802203178406
    2. 'a' → logprob: -1.4529802799224854
    3. 'im' → logprob: -2.4529802799224854
    4. 'stdout' → logprob: -2.7029802799224854
    5. 'og' → logprob: -3.9529802799224854
    6. 'standard' → logprob: -4.327980041503906
    7. 'aunch' → logprob: -5.702980041503906
    8. 'e' → logprob: -6.077980041503906
    9. '_stdout' → logprob: -6.202980041503906
    10. '#' → logprob: -6.452980041503906

Token 1097: ' standard' (ID: 7024)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0635753646492958
    2. 'put' → logprob: -3.188575267791748
    3. 'ut' → logprob: -4.563575267791748
    4. '   ' → logprob: -5.313575267791748
    5. ')' → logprob: -5.438575267791748
    6. '#print' → logprob: -8.563575744628906
    7. 'stdout' → logprob: -9.688575744628906
    8. '    
' → logprob: -10.313575744628906
    9. 'write' → logprob: -10.438575744628906
    10. '()' → logprob: -10.688575744628906

Token 1098: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.08397657424211502
    2. '   ' → logprob: -2.5839765071868896
    3. '(print' → logprob: -5.458976745605469
    4. '(' → logprob: -7.333976745605469
    5. '()' → logprob: -9.083976745605469
    6. ' print' → logprob: -10.708976745605469
    7. '	print' → logprob: -11.708976745605469
    8. '()
' → logprob: -12.333976745605469
    9. '    
' → logprob: -12.583976745605469
    10. ')' → logprob: -12.833976745605469

Token 1099: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.12728209793567657
    2. '   ' → logprob: -2.12728214263916
    3. '(print' → logprob: -8.12728214263916
    4. '(' → logprob: -10.62728214263916
    5. ' print' → logprob: -10.75228214263916
    6. '```' → logprob: -12.37728214263916
    7. '    
' → logprob: -12.50228214263916
    8. '	print' → logprob: -12.62728214263916
    9. '()' → logprob: -14.87728214263916
    10. '#print' → logprob: -15.25228214263916

Token 1100: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.9361264946837764e-07
    2. ' print' → logprob: -16.25
    3. '   ' → logprob: -19.5
    4. '```' → logprob: -21.625
    5. '
' → logprob: -22.5
    6. '	print' → logprob: -22.625
    7. 'pr' → logprob: -23.25
    8. 'println' → logprob: -23.5
    9. '    
' → logprob: -23.625
    10. 'printf' → logprob: -25.375

Token 1101: '(output' (ID: 22485)
  Prédit: '(output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(output' → logprob: -0.00034177995985373855
    2. '(' → logprob: -8.000341415405273
    3. '()' → logprob: -12.375341415405273
    4. 'output' → logprob: -13.750341415405273
    5. ' (' → logprob: -14.000341415405273
    6. '(
' → logprob: -16.375341415405273
    7. '(input' → logprob: -17.250341415405273
    8. '(Output' → logprob: -17.875341415405273
    9. '(object' → logprob: -18.500341415405273
    10. '(open' → logprob: -18.875341415405273

Token 1102: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005515603348612785
    2. '())' → logprob: -5.7555155754089355
    3. '()' → logprob: -6.2555155754089355
    4. ')
' → logprob: -8.755516052246094
    5. '   ' → logprob: -9.755516052246094
    6. '
' → logprob: -9.880516052246094
    7. '<|end|>' → logprob: -10.005516052246094
    8. ' )' → logprob: -10.130516052246094
    9. '()
' → logprob: -10.505516052246094
    10. '```' → logprob: -10.880516052246094

Token 1103: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.28828489780426025
    2. 'main' → logprob: -1.4132848978042603
    3. '<|end|>' → logprob: -5.288284778594971
    4. '(main' → logprob: -6.913284778594971
    5. '
' → logprob: -7.788284778594971
    6. '```' → logprob: -8.288285255432129
    7. ' main' → logprob: -8.663285255432129
    8. ' if' → logprob: -9.663285255432129
    9. '#' → logprob: -10.038285255432129
    10. '()' → logprob: -11.163285255432129

Token 1104: ' Ex' (ID: 1771)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.05171990767121315
    2. 'main' → logprob: -3.051719903945923
    3. '
' → logprob: -5.801720142364502
    4. '(main' → logprob: -9.551719665527344
    5. ' if' → logprob: -10.926719665527344
    6. ' main' → logprob: -12.176719665527344
    7. '<|end|>' → logprob: -12.801719665527344
    8. '```' → logprob: -12.801719665527344
    9. '#' → logprob: -13.426719665527344
    10. '' → logprob: -14.426719665527344

Token 1105: 'écution' (ID: 122423)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.621005117893219
    2. 'ecute' → logprob: -0.871005117893219
    3. 'ec' → logprob: -3.246005058288574
    4. 'éc' → logprob: -5.621005058288574
    5. 'ecution' → logprob: -7.371005058288574
    6. 'ecutable' → logprob: -8.246005058288574
    7. 'ecut' → logprob: -9.496005058288574
    8. ' if' → logprob: -9.621005058288574
    9. 'e' → logprob: -9.746005058288574
    10. 'ercise' → logprob: -9.871005058288574

Token 1106: ' de' (ID: 334)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.03574616089463234
    2. 'main' → logprob: -3.5357460975646973
    3. '()' → logprob: -5.410746097564697
    4. '()
' → logprob: -6.535746097564697
    5. '
' → logprob: -10.785746574401855
    6. '(main' → logprob: -11.410746574401855
    7. ' if' → logprob: -11.910746574401855
    8. '```' → logprob: -12.160746574401855
    9. ' main' → logprob: -13.035746574401855
    10. '(
' → logprob: -13.035746574401855

Token 1107: ' la' (ID: 557)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0019580135121941566
    2. '__' → logprob: -6.501957893371582
    3. 'if' → logprob: -7.751957893371582
    4. ' main' → logprob: -10.626957893371582
    5. '(main' → logprob: -14.376957893371582
    6. '```' → logprob: -14.626957893371582
    7. '	main' → logprob: -15.626957893371582
    8. '_main' → logprob: -15.751957893371582
    9. ' __' → logprob: -16.6269588470459
    10. '#' → logprob: -18.1269588470459

Token 1108: ' fonction' (ID: 17610)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1929466724395752
    2. '__' → logprob: -1.9429466724395752
    3. 'main' → logprob: -3.442946672439575
    4. '```' → logprob: -9.442946434020996
    5. 'script' → logprob: -9.567946434020996
    6. ' main' → logprob: -10.567946434020996
    7. ' if' → logprob: -11.192946434020996
    8. 'def' → logprob: -12.067946434020996
    9. ' __' → logprob: -12.567946434020996
    10. '#' → logprob: -12.567946434020996

Token 1109: ' principale' (ID: 68926)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.11671736091375351
    2. 'main' → logprob: -2.3667173385620117
    3. '
' → logprob: -4.116717338562012
    4. '(main' → logprob: -10.116717338562012
    5. ' if' → logprob: -10.866717338562012
    6. ' main' → logprob: -11.866717338562012
    7. '
' → logprob: -12.741717338562012
    8. '

' → logprob: -13.366717338562012
    9. '```' → logprob: -13.366717338562012
    10. '    
' → logprob: -13.866717338562012

Token 1110: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.464775413274765
    2. 'main' → logprob: -1.4647754430770874
    3. '
' → logprob: -1.9647754430770874
    4. '(main' → logprob: -8.089775085449219
    5. ' main' → logprob: -10.839775085449219
    6. '
' → logprob: -11.089775085449219
    7. '```' → logprob: -11.089775085449219
    8. '()
' → logprob: -11.214775085449219
    9. ' if' → logprob: -11.589775085449219
    10. '  
' → logprob: -12.089775085449219

Token 1111: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.008614808320999146
    2. 'if' → logprob: -4.758615016937256
    3. ' main' → logprob: -15.508614540100098
    4. '(main' → logprob: -18.258615493774414
    5. '	main' → logprob: -19.633615493774414
    6. ' if' → logprob: -20.633615493774414
    7. '```' → logprob: -21.008615493774414
    8. '
' → logprob: -21.133615493774414
    9. '_main' → logprob: -21.508615493774414
    10. '__' → logprob: -22.133615493774414

Token 1112: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1110
Tokens correctement prédits (1ère position, stricte): 225
Tokens correctement prédits (1ère position, avec adaptation): 232
Tokens correctement prédits (top 10): 507
Précision stricte (1ère position): 20.27%
Précision adaptée (1ère position): 20.90%
Précision (top 10): 45.68%
================================================================================
