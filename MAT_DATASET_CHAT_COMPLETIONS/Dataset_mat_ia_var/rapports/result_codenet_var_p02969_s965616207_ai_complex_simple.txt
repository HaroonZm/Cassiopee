================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:51:07
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import reduce
from itertools import repeat

def obtus_oscillation(sigma):
    return reduce(lambda x, y: x + y, map(lambda z: z ** 2, repeat(sigma, 3)))

n = int(input())
print(sum(map(lambda _: n ** 2, range(3))))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' reduce' (ID: 10389)
  Prédit: 'wrap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wrap' → logprob: -0.49921560287475586
    2. 'partial' → logprob: -1.2492156028747559
    3. 'reduce' → logprob: -2.499215602874756
    4. ' wraps' → logprob: -3.999215602874756
    5. 'l' → logprob: -5.624215602874756
    6. ' partial' → logprob: -7.249215602874756
    7. 'cached' → logprob: -7.624215602874756
    8. 'cache' → logprob: -7.624215602874756
    9. 'cmp' → logprob: -8.749216079711914
    10. ' reduce' → logprob: -9.374216079711914

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.023531373590230942
    2. '(lambda' → logprob: -4.148531436920166
    3. '.' → logprob: -5.273531436920166
    4. ' (' → logprob: -6.898531436920166
    5. ',' → logprob: -7.648531436920166
    6. '```' → logprob: -8.523530960083008
    7. ''' → logprob: -8.773530960083008
    8. 'lambda' → logprob: -9.523530960083008
    9. '\' → logprob: -9.648530960083008
    10. '`' → logprob: -9.898530960083008

Token 5: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10492284595966339
    2. '\' → logprob: -2.7299227714538574
    3. 'def' → logprob: -4.104922771453857
    4. '```' → logprob: -5.604922771453857
    5. '(lambda' → logprob: -5.729922771453857
    6. ',' → logprob: -5.979922771453857
    7. '\n' → logprob: -6.229922771453857
    8. '(
' → logprob: -6.604922771453857
    9. '\(' → logprob: -6.854922771453857
    10. '.' → logprob: -7.229922771453857

Token 6: ' itertools' (ID: 103178)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.9003139138221741
    2. ' operator' → logprob: -1.5253138542175293
    3. ' itertools' → logprob: -1.5253138542175293
    4. ' collections' → logprob: -1.9003138542175293
    5. ' os' → logprob: -4.900313854217529
    6. 'operator' → logprob: -7.400313854217529
    7. ' typing' → logprob: -8.525314331054688
    8. ' sys' → logprob: -8.650314331054688
    9. 'collections' → logprob: -9.025314331054688
    10. 'math' → logprob: -9.025314331054688

Token 7: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.7218884825706482
    2. ' import' → logprob: -0.7218884825706482
    3. '.' → logprob: -3.596888542175293
    4. '.import' → logprob: -7.471888542175293
    5. ' .' → logprob: -8.721888542175293
    6. '	import' → logprob: -9.596888542175293
    7. ' ' → logprob: -9.846888542175293
    8. '_import' → logprob: -10.596888542175293
    9. '<|end|>' → logprob: -11.596888542175293
    10. '.im' → logprob: -12.221888542175293

Token 8: ' repeat' (ID: 22962)
  Prédit: 'group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'group' → logprob: -0.8978672027587891
    2. 'chain' → logprob: -1.772867202758789
    3. 'count' → logprob: -1.897867202758789
    4. 'acc' → logprob: -1.897867202758789
    5. 'cycle' → logprob: -2.772867202758789
    6. 'com' → logprob: -3.272867202758789
    7. 'is' → logprob: -5.022867202758789
    8. 'product' → logprob: -5.397867202758789
    9. ' group' → logprob: -5.522867202758789
    10. 'per' → logprob: -5.772867202758789

Token 9: '

' (ID: 279)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\' → logprob: -1.1982896327972412
    2. '(' → logprob: -1.5732896327972412
    3. '\n' → logprob: -1.5732896327972412
    4. '.' → logprob: -1.9482896327972412
    5. ',' → logprob: -2.823289632797241
    6. 'def' → logprob: -3.448289632797241
    7. '(
' → logprob: -4.69828987121582
    8. 'import' → logprob: -5.07328987121582
    9. '`' → logprob: -5.07328987121582
    10. 'for' → logprob: -5.19828987121582

Token 10: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1451341062784195
    2. 'd' → logprob: -2.895134210586548
    3. '`' → logprob: -4.270133972167969
    4. 'f' → logprob: -4.645133972167969
    5. '\' → logprob: -4.770133972167969
    6. '(' → logprob: -5.020133972167969
    7. 'a' → logprob: -5.770133972167969
    8. 'data' → logprob: -5.895133972167969
    9. 'result' → logprob: -5.895133972167969
    10. '\n' → logprob: -5.895133972167969

Token 11: ' obt' (ID: 5564)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4992007613182068
    2. ' reduce' → logprob: -1.1242008209228516
    3. ' map' → logprob: -3.2492008209228516
    4. ' factorial' → logprob: -4.249200820922852
    5. ' accumulate' → logprob: -5.124200820922852
    6. ' sum' → logprob: -5.999200820922852
    7. ' calculate' → logprob: -6.499200820922852
    8. ' max' → logprob: -6.874200820922852
    9. '_reduce' → logprob: -7.874200820922852
    10. ' filter' → logprob: -8.124200820922852

Token 12: 'us' (ID: 385)
  Prédit: 'ain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ain' → logprob: -2.6060808522743173e-05
    2. 'a' → logprob: -11.500025749206543
    3. 'ained' → logprob: -12.125025749206543
    4. 'ains' → logprob: -13.125025749206543
    5. '```' → logprob: -13.500025749206543
    6. 'ai' → logprob: -13.625025749206543
    7. 'aim' → logprob: -13.875025749206543
    8. 'in' → logprob: -14.250025749206543
    9. '_' → logprob: -14.625025749206543
    10. 'en' → logprob: -14.750025749206543

Token 13: '_' (ID: 62)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.000925157277379185
    2. 'angle' → logprob: -8.000925064086914
    3. 'eness' → logprob: -8.625925064086914
    4. 'ene' → logprob: -9.625925064086914
    5. 'es' → logprob: -9.875925064086914
    6. 'est' → logprob: -10.250925064086914
    7. 'ecute' → logprob: -10.375925064086914
    8. 'ely' → logprob: -10.625925064086914
    9. 'ent' → logprob: -10.625925064086914
    10. 'en' → logprob: -10.750925064086914

Token 14: 'osc' (ID: 17341)
  Prédit: 'angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'angle' → logprob: -0.6432197690010071
    2. 'e' → logprob: -1.5182197093963623
    3. '_angle' → logprob: -2.0182197093963623
    4. 't' → logprob: -2.7682197093963623
    5. 'angles' → logprob: -4.768219947814941
    6. 's' → logprob: -4.768219947814941
    7. 'def' → logprob: -5.018219947814941
    8. 'use' → logprob: -5.143219947814941
    9. 'ang' → logprob: -5.643219947814941
    10. '_angles' → logprob: -6.018219947814941

Token 15: 'illation' (ID: 98447)
  Prédit: 'illator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'illator' → logprob: -0.8201440572738647
    2. 'ill' → logprob: -1.3201440572738647
    3. 'illation' → logprob: -1.6951440572738647
    4. '_' → logprob: -3.3201441764831543
    5. 'illos' → logprob: -4.445144176483154
    6. 'illat' → logprob: -4.570144176483154
    7. 'il' → logprob: -4.820144176483154
    8. '_angle' → logprob: -5.445144176483154
    9. 'illo' → logprob: -5.570144176483154
    10. 'i' → logprob: -5.945144176483154

Token 16: '(s' (ID: 1858)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0012803568970412016
    2. '():' → logprob: -7.001280307769775
    3. '_' → logprob: -8.751280784606934
    4. ' (' → logprob: -9.626280784606934
    5. '(:' → logprob: -9.876280784606934
    6. ':' → logprob: -10.251280784606934
    7. '('' → logprob: -11.876280784606934
    8. '("("' → logprob: -12.001280784606934
    9. 's' → logprob: -12.376280784606934
    10. '_parent' → logprob: -12.626280784606934

Token 17: 'igma' (ID: 21086)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.016783231869339943
    2. ')' → logprob: -4.266783237457275
    3. ',' → logprob: -6.766783237457275
    4. ':' → logprob: -7.391783237457275
    5. 'u' → logprob: -8.016782760620117
    6. 'e' → logprob: -8.766782760620117
    7. 'ur' → logprob: -9.266782760620117
    8. '[' → logprob: -9.641782760620117
    9. '):
' → logprob: -10.516782760620117
    10. 'a' → logprob: -10.641782760620117

Token 18: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2741301655769348
    2. ',' → logprob: -1.52413010597229
    3. ')' → logprob: -3.89913010597229
    4. ':' → logprob: -7.399130344390869
    5. '=' → logprob: -8.024129867553711
    6. '_' → logprob: -8.899129867553711
    7. '(' → logprob: -9.524129867553711
    8. ' ,' → logprob: -9.649129867553711
    9. '[' → logprob: -9.774129867553711
    10. ' ):' → logprob: -9.774129867553711

Token 19: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011171840131282806
    2. '   ' → logprob: -5.011171817779541
    3. '):' → logprob: -6.011171817779541
    4. '():' → logprob: -6.886171817779541
    5. '(' → logprob: -8.0111722946167
    6. ':
' → logprob: -8.8861722946167
    7. ':return' → logprob: -9.0111722946167
    8. ' :' → logprob: -9.1361722946167
    9. ',' → logprob: -9.6361722946167
    10. ')' → logprob: -10.3861722946167

Token 20: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6236754059791565
    2. 'return' (adapté à ' return') → logprob: -1.6236753463745117
    3. '    ' → logprob: -2.2486753463745117
    4. '   ' → logprob: -2.8736753463745117
    5. ' ' → logprob: -3.6236753463745117
    6. ' 
' → logprob: -3.8736753463745117
    7. '`' → logprob: -4.873675346374512
    8. '```' → logprob: -4.873675346374512
    9. ')' → logprob: -5.123675346374512
    10. 'def' → logprob: -5.248675346374512

Token 21: ' reduce' (ID: 10389)
  Prédit: ' reduce'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' reduce' → logprob: -0.1721525341272354
    2. 'reduce' → logprob: -2.297152519226074
    3. ' list' → logprob: -4.047152519226074
    4. ' lambda' → logprob: -4.172152519226074
    5. ' sum' → logprob: -4.422152519226074
    6. ' max' → logprob: -6.172152519226074
    7. 'sum' → logprob: -6.422152519226074
    8. 'lambda' → logprob: -6.547152519226074
    9. ' sigma' → logprob: -6.672152519226074
    10. ' (' → logprob: -6.797152519226074

Token 22: '(lambda' (ID: 43341)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.38698771595954895
    2. '(lambda' → logprob: -1.1369876861572266
    3. '(operator' → logprob: -10.136987686157227
    4. '((' → logprob: -10.761987686157227
    5. '(
' → logprob: -10.886987686157227
    6. '(sum' → logprob: -11.511987686157227
    7. ' (' → logprob: -12.136987686157227
    8. '(re' → logprob: -12.511987686157227
    9. 'lambda' → logprob: -12.761987686157227
    10. '```' → logprob: -13.136987686157227

Token 23: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.09224523603916168
    2. ' acc' → logprob: -2.84224534034729
    3. 'x' → logprob: -4.217245101928711
    4. ' a' → logprob: -4.717245101928711
    5. ' lambda' → logprob: -6.092245101928711
    6. 'acc' → logprob: -6.467245101928711
    7. 'a' → logprob: -7.342245101928711
    8. ' accu' → logprob: -8.092245101928711
    9. ' accumulator' → logprob: -8.092245101928711
    10. ' accum' → logprob: -8.592245101928711

Token 24: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006789539474993944
    2. ',x' → logprob: -8.625679016113281
    3. ',y' → logprob: -8.875679016113281
    4. ' ,' → logprob: -9.000679016113281
    5. '+' → logprob: -9.250679016113281
    6. ' +' → logprob: -10.500679016113281
    7. ',s' → logprob: -10.750679016113281
    8. '_,' → logprob: -11.250679016113281
    9. 's' → logprob: -11.500679016113281
    10. '*' → logprob: -11.500679016113281

Token 25: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.1274188607931137
    2. 'y' → logprob: -2.1274187564849854
    3. ' ' → logprob: -8.877418518066406
    4. ' acc' → logprob: -9.377418518066406
    5. ' a' → logprob: -10.377418518066406
    6. ' f' → logprob: -10.377418518066406
    7. 'a' → logprob: -10.502418518066406
    8. 'acc' → logprob: -10.502418518066406
    9. ' sigma' → logprob: -10.752418518066406
    10. ' x' → logprob: -10.877418518066406

Token 26: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0031626299023628235
    2. ',' → logprob: -6.003162860870361
    3. ' :' → logprob: -7.503162860870361
    4. ':x' → logprob: -10.753162384033203
    5. 's' → logprob: -10.878162384033203
    6. '=' → logprob: -11.003162384033203
    7. ',:' → logprob: -11.503162384033203
    8. '+' → logprob: -11.628162384033203
    9. ':s' → logprob: -11.878162384033203
    10. '1' → logprob: -11.940662384033203

Token 27: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.05544126033782959
    2. 'x' → logprob: -2.930441379547119
    3. ' ' → logprob: -8.805440902709961
    4. ' (' → logprob: -9.055440902709961
    5. ' abs' → logprob: -9.805440902709961
    6. ' max' → logprob: -9.930440902709961
    7. ')' → logprob: -10.617940902709961
    8. '(x' → logprob: -10.930440902709961
    9. '(' → logprob: -10.992940902709961
    10. '  ' → logprob: -11.117940902709961

Token 28: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4526502192020416
    2. '*' → logprob: -1.4526501893997192
    3. ' +' → logprob: -2.577650308609009
    4. ' *' → logprob: -3.952650308609009
    5. '*y' → logprob: -3.952650308609009
    6. '+y' → logprob: -4.45265007019043
    7. '-' → logprob: -6.07765007019043
    8. '|' → logprob: -7.57765007019043
    9. '^' → logprob: -8.57765007019043
    10. ' -' → logprob: -8.70265007019043

Token 29: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.10039181262254715
    2. 'y' → logprob: -2.3503918647766113
    3. ' ' → logprob: -9.225391387939453
    4. ' (' → logprob: -11.100391387939453
    5. ' sigma' → logprob: -11.225391387939453
    6. ' abs' → logprob: -11.600391387939453
    7. 'sigma' → logprob: -11.850391387939453
    8. '1' → logprob: -11.975391387939453
    9. '(' → logprob: -12.350391387939453
    10. '(y' → logprob: -12.600391387939453

Token 30: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.17400507628917694
    2. ' *' → logprob: -2.2990050315856934
    3. '*' → logprob: -3.7990050315856934
    4. ' +' → logprob: -4.424005031585693
    5. ' ,' → logprob: -4.799005031585693
    6. '*s' → logprob: -5.299005031585693
    7. ')' → logprob: -5.924005031585693
    8. ' y' → logprob: -6.174005031585693
    9. '+' → logprob: -6.299005031585693
    10. '(s' → logprob: -6.674005031585693

Token 31: ' map' (ID: 4014)
  Prédit: ' repeat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' repeat' → logprob: -0.13505534827709198
    2. ' list' → logprob: -2.6350553035736084
    3. 'repeat' → logprob: -3.3850553035736084
    4. ' sigma' → logprob: -4.2600555419921875
    5. ' map' → logprob: -5.8850555419921875
    6. ')' → logprob: -6.7600555419921875
    7. 'sigma' → logprob: -7.5100555419921875
    8. 'list' → logprob: -7.7600555419921875
    9. ' repeated' → logprob: -8.010055541992188
    10. ' itertools' → logprob: -8.260055541992188

Token 32: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.1083938404917717
    2. '(' → logprob: -2.858393907546997
    3. '(abs' → logprob: -3.233393907546997
    4. '(int' → logprob: -5.733393669128418
    5. '(operator' → logprob: -7.358393669128418
    6. '(float' → logprob: -7.608393669128418
    7. '(s' → logprob: -7.608393669128418
    8. '(str' → logprob: -7.983393669128418
    9. '(pow' → logprob: -8.233393669128418
    10. '(list' → logprob: -8.983393669128418

Token 33: ' z' (ID: 579)
  Prédit: ' lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.19444067776203156
    2. ' sigma' → logprob: -3.0694406032562256
    3. ' int' → logprob: -3.4444406032562256
    4. 'lambda' → logprob: -3.6944406032562256
    5. ' abs' → logprob: -3.9444406032562256
    6. ' x' → logprob: -4.319440841674805
    7. ':' → logprob: -4.819440841674805
    8. ' s' → logprob: -4.819440841674805
    9. '(lambda' → logprob: -5.319440841674805
    10. 'sigma' → logprob: -5.569440841674805

Token 34: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0010621058754622936
    2. ' :' → logprob: -7.001061916351318
    3. ':s' → logprob: -9.001062393188477
    4. ',' → logprob: -11.126062393188477
    5. ':
' → logprob: -13.501062393188477
    6. ':return' → logprob: -13.813562393188477
    7. ':z' → logprob: -13.876062393188477
    8. 's' → logprob: -14.063562393188477
    9. ':int' → logprob: -14.126062393188477
    10. '_:' → logprob: -14.376062393188477

Token 35: ' z' (ID: 579)
  Prédit: ' z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' z' → logprob: -0.17410165071487427
    2. ' sigma' → logprob: -2.5491015911102295
    3. 'z' → logprob: -3.2991015911102295
    4. ' abs' → logprob: -4.049101829528809
    5. 'sigma' → logprob: -4.299101829528809
    6. ' int' → logprob: -5.799101829528809
    7. ' (' → logprob: -5.924101829528809
    8. ' ' → logprob: -6.174101829528809
    9. 'abs' → logprob: -6.424101829528809
    10. ' pow' → logprob: -7.174101829528809

Token 36: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.39201754331588745
    2. ' **' → logprob: -1.3920176029205322
    3. ' *' → logprob: -3.0170176029205322
    4. '*' → logprob: -3.6420176029205322
    5. ' +' → logprob: -9.017017364501953
    6. ')' → logprob: -9.392017364501953
    7. ' ' → logprob: -9.767017364501953
    8. '*s' → logprob: -9.892017364501953
    9. '**,' → logprob: -10.017017364501953
    10. '+' → logprob: -10.267017364501953

Token 37: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.05266672372817993
    2. ' ' → logprob: -3.177666664123535
    3. '3' → logprob: -4.802666664123535
    4. 'sigma' → logprob: -6.802666664123535
    5. '4' → logprob: -9.552666664123535
    6. '(' → logprob: -9.677666664123535
    7. ' sigma' → logprob: -10.802666664123535
    8. '6' → logprob: -11.052666664123535
    9. '0' → logprob: -11.365166664123535
    10. '1' → logprob: -11.365166664123535

Token 38: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.019361529499292374
    2. '3' → logprob: -4.01936149597168
    3. 'sigma' → logprob: -8.01936149597168
    4. '4' → logprob: -8.14436149597168
    5. ' ' → logprob: -8.51936149597168
    6. '6' → logprob: -9.39436149597168
    7. '5' → logprob: -9.76936149597168
    8. '7' → logprob: -9.89436149597168
    9. '1' → logprob: -10.39436149597168
    10. '0' → logprob: -10.39436149597168

Token 39: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0027425887528806925
    2. ' ,' → logprob: -6.127742767333984
    3. ',s' → logprob: -7.877742767333984
    4. '   ' → logprob: -9.627742767333984
    5. ')' → logprob: -10.377742767333984
    6. '(s' → logprob: -10.877742767333984
    7. ' ' → logprob: -11.252742767333984
    8. '(' → logprob: -11.502742767333984
    9. 's' → logprob: -11.752742767333984
    10. '),' → logprob: -12.002742767333984

Token 40: ' repeat' (ID: 22962)
  Prédit: ' sigma'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sigma' → logprob: -0.2102155238389969
    2. 'sigma' → logprob: -1.7102155685424805
    3. ' repeat' → logprob: -5.4602155685424805
    4. 'repeat' → logprob: -6.2102155685424805
    5. 's' → logprob: -7.2102155685424805
    6. ' list' → logprob: -7.4602155685424805
    7. ' s' → logprob: -8.33521556854248
    8. ' ' → logprob: -8.71021556854248
    9. ' iter' → logprob: -8.96021556854248
    10. '\s' → logprob: -9.21021556854248

Token 41: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.003918937873095274
    2. '(' → logprob: -5.7539191246032715
    3. 'sigma' → logprob: -7.2539191246032715
    4. ')' → logprob: -11.628918647766113
    5. ' (' → logprob: -11.753918647766113
    6. ' sigma' → logprob: -12.003918647766113
    7. 's' → logprob: -12.253918647766113
    8. '\s' → logprob: -13.878918647766113
    9. ' ' → logprob: -14.003918647766113
    10. '(abs' → logprob: -14.253918647766113

Token 42: 'igma' (ID: 21086)
  Prédit: 'igma'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igma' → logprob: -0.00025895543512888253
    2. 'iga' → logprob: -8.500259399414062
    3. 'ig' → logprob: -11.000259399414062
    4. 'sigma' → logprob: -11.375259399414062
    5. 'a' → logprob: -12.000259399414062
    6. ')' → logprob: -12.000259399414062
    7. '2' → logprob: -13.125259399414062
    8. '(' → logprob: -13.125259399414062
    9. 'i' → logprob: -13.125259399414062
    10. '0' → logprob: -13.375259399414062

Token 43: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02528666891157627
    2. ')))' → logprob: -3.7752866744995117
    3. ')' → logprob: -6.525286674499512
    4. ' ,' → logprob: -8.275286674499512
    5. '),' → logprob: -8.400286674499512
    6. '))' → logprob: -10.275286674499512
    7. '))))' → logprob: -11.025286674499512
    8. ')),' → logprob: -11.650286674499512
    9. ')));' → logprob: -12.025286674499512
    10. '))),' → logprob: -12.150286674499512

Token 44: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.46787238121032715
    2. '3' → logprob: -1.3428723812103271
    3. '5' → logprob: -3.342872381210327
    4. '10' → logprob: -3.592872381210327
    5. ' ' → logprob: -3.717872381210327
    6. '4' → logprob: -4.092872619628906
    7. '6' → logprob: -5.967872619628906
    8. '1' → logprob: -6.092872619628906
    9. '100' → logprob: -7.217872619628906
    10. '8' → logprob: -7.342872619628906

Token 45: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.57060307264328
    2. '2' → logprob: -1.5706031322479248
    3. '5' → logprob: -2.070603132247925
    4. '10' → logprob: -3.070603132247925
    5. '1' → logprob: -3.820603132247925
    6. '4' → logprob: -3.945603132247925
    7. 'sigma' → logprob: -5.570602893829346
    8. '6' → logprob: -6.070602893829346
    9. '100' → logprob: -6.195602893829346
    10. '7' → logprob: -7.320602893829346

Token 46: ')))

' (ID: 46526)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.007053983397781849
    2. ')' → logprob: -5.007053852081299
    3. '))' → logprob: -8.132054328918457
    4. '))))' → logprob: -10.257054328918457
    5. '),' → logprob: -12.382054328918457
    6. ')));' → logprob: -12.882054328918457
    7. ')),' → logprob: -14.007054328918457
    8. ' ' → logprob: -14.632054328918457
    9. ')))
' → logprob: -14.632054328918457
    10. ' )' → logprob: -15.382054328918457

Token 47: 'n' (ID: 77)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0023467533756047487
    2. '(' → logprob: -6.752346515655518
    3. '<|end|>' → logprob: -7.877346515655518
    4. '*' → logprob: -8.752346992492676
    5. '
' → logprob: -8.752346992492676
    6. ' ' → logprob: -8.877346992492676
    7. ' )' → logprob: -9.627346992492676
    8. '\n' → logprob: -9.627346992492676
    9. '+' → logprob: -9.877346992492676
    10. 'newline' → logprob: -10.502346992492676

Token 48: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5103135108947754
    2. ' =' → logprob: -1.0103135108947754
    3. 'um' → logprob: -4.385313510894775
    4. 'umber' → logprob: -5.510313510894775
    5. '_sigma' → logprob: -5.510313510894775
    6. '_' → logprob: -5.885313510894775
    7. 'sigma' → logprob: -6.135313510894775
    8. 'o' → logprob: -6.260313510894775
    9. 'u' → logprob: -7.260313510894775
    10. 'e' → logprob: -7.385313510894775

Token 49: ' int' (ID: 677)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.6205822229385376
    2. '10' → logprob: -1.3705822229385376
    3. ' ' → logprob: -1.7455822229385376
    4. '3' → logprob: -4.120582103729248
    5. 'int' → logprob: -5.245582103729248
    6. ' int' → logprob: -5.245582103729248
    7. '1' → logprob: -5.495582103729248
    8. '0' → logprob: -6.745582103729248
    9. '4' → logprob: -7.370582103729248
    10. '2' → logprob: -7.620582103729248

Token 50: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.14294426143169403
    2. '(input' → logprob: -2.0179443359375
    3. '('' → logprob: -9.0179443359375
    4. 'input' → logprob: -9.2679443359375
    5. '()' → logprob: -10.5179443359375
    6. ' (' → logprob: -11.8929443359375
    7. '("' → logprob: -12.6429443359375
    8. '(s' → logprob: -12.8929443359375
    9. '(n' → logprob: -13.1429443359375
    10. '(
' → logprob: -13.2679443359375

Token 51: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.8162012100219727
    2. '(' → logprob: -0.9412012100219727
    3. '()' → logprob: -1.9412012100219727
    4. ')' → logprob: -4.316201210021973
    5. '()))' → logprob: -5.191201210021973
    6. '('' → logprob: -5.691201210021973
    7. '(()' → logprob: -7.441201210021973
    8. '))' → logprob: -7.441201210021973
    9. '(`' → logprob: -8.941201210021973
    10. '(""))' → logprob: -9.066201210021973

Token 52: 'print' (ID: 1598)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0041307611390948296
    2. 'result' → logprob: -6.004130840301514
    3. 'numbers' → logprob: -7.754130840301514
    4. 'values' → logprob: -8.129130363464355
    5. 'results' → logprob: -8.379130363464355
    6. 's' → logprob: -8.379130363464355
    7. 'sum' → logprob: -9.004130363464355
    8. 'arr' → logprob: -9.629130363464355
    9. 'sigma' → logprob: -9.879130363464355
    10. 'print' → logprob: -10.254130363464355

Token 53: '(sum' (ID: 45528)
  Prédit: '(ob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ob' → logprob: -0.4743468463420868
    2. '(' → logprob: -0.9743468761444092
    3. '(n' → logprob: -8.349347114562988
    4. '('' → logprob: -11.349347114562988
    5. '(s' → logprob: -12.099347114562988
    6. '(f' → logprob: -12.974347114562988
    7. '((' → logprob: -13.224347114562988
    8. '(
' → logprob: -13.349347114562988
    9. '(sum' → logprob: -13.724347114562988
    10. '(ord' → logprob: -13.974347114562988

Token 54: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5312243103981018
    2. '(ob' → logprob: -1.906224250793457
    3. '(range' → logprob: -2.031224250793457
    4. '(n' → logprob: -3.531224250793457
    5. '(x' → logprob: -3.531224250793457
    6. '(map' → logprob: -3.906224250793457
    7. '(i' → logprob: -3.906224250793457
    8. '([' → logprob: -4.281224250793457
    9. '(s' → logprob: -4.781224250793457
    10. '(re' → logprob: -5.531224250793457

Token 55: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.39560776948928833
    2. '(abs' → logprob: -2.1456077098846436
    3. '(ob' → logprob: -2.1456077098846436
    4. '(int' → logprob: -3.0206077098846436
    5. '(' → logprob: -3.3956077098846436
    6. '(float' → logprob: -4.770607948303223
    7. '(pow' → logprob: -7.145607948303223
    8. '(s' → logprob: -7.270607948303223
    9. '(ord' → logprob: -8.145607948303223
    10. '(op' → logprob: -10.020607948303223

Token 56: ' _:' (ID: 133568)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.41672950983047485
    2. '(int' → logprob: -2.04172945022583
    3. '(' → logprob: -2.79172945022583
    4. 'sigma' → logprob: -2.91672945022583
    5. 'int' → logprob: -3.16672945022583
    6. 'lambda' → logprob: -3.79172945022583
    7. ' sigma' → logprob: -4.66672945022583
    8. ' lambda' → logprob: -5.41672945022583
    9. ' int' → logprob: -5.54172945022583
    10. 'abs' → logprob: -6.04172945022583

Token 57: ' n' (ID: 297)
  Prédit: 'obt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'obt' → logprob: -0.029164811596274376
    2. 'sigma' → logprob: -3.9041647911071777
    3. ' obt' → logprob: -5.279164791107178
    4. 'n' → logprob: -6.529164791107178
    5. 'int' → logprob: -7.029164791107178
    6. 'ob' → logprob: -7.029164791107178
    7. ' sigma' → logprob: -9.654165267944336
    8. 'sig' → logprob: -10.279165267944336
    9. '   ' → logprob: -10.654165267944336
    10. '\s' → logprob: -11.279165267944336

Token 58: ' **' (ID: 6240)
  Prédit: ' **'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' **' → logprob: -0.3092799186706543
    2. '**' → logprob: -1.5592799186706543
    3. ' *' → logprob: -3.4342799186706543
    4. ',' → logprob: -4.309279918670654
    5. '*' → logprob: -5.309279918670654
    6. ' ,' → logprob: -6.184279918670654
    7. '**,' → logprob: -6.809279918670654
    8. ' +' → logprob: -7.059279918670654
    9. ' ' → logprob: -7.684279918670654
    10. ' -' → logprob: -9.434280395507812

Token 59: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.025022199377417564
    2. '3' → logprob: -3.775022268295288
    3. '_' → logprob: -6.525022029876709
    4. ' ' → logprob: -9.650022506713867
    5. '4' → logprob: -9.900022506713867
    6. '0' → logprob: -10.150022506713867
    7. '6' → logprob: -10.275022506713867
    8. '_)' → logprob: -10.525022506713867
    9. '5' → logprob: -10.650022506713867
    10. 'n' → logprob: -11.025022506713867

Token 60: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.022693486884236336
    2. '3' → logprob: -3.897693395614624
    3. '_' → logprob: -6.647693634033203
    4. 'n' → logprob: -7.897693634033203
    5. '6' → logprob: -9.272693634033203
    6. '4' → logprob: -9.647693634033203
    7. '_)' → logprob: -9.647693634033203
    8. '5' → logprob: -10.022693634033203
    9. '0' → logprob: -10.272693634033203
    10. '1' → logprob: -10.522693634033203

Token 61: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015102163888514042
    2. ' ,' → logprob: -6.876510143280029
    3. ',n' → logprob: -8.126510620117188
    4. ')))' → logprob: -9.501510620117188
    5. '),' → logprob: -9.751510620117188
    6. ')' → logprob: -11.501510620117188
    7. '   ' → logprob: -11.501510620117188
    8. ',s' → logprob: -12.001510620117188
    9. '))' → logprob: -12.751510620117188
    10. ')));' → logprob: -12.876510620117188

Token 62: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.026547012850642204
    2. ' range' → logprob: -3.7765469551086426
    3. 'repeat' → logprob: -5.776546955108643
    4. '[' → logprob: -8.7765474319458
    5. ' repeat' → logprob: -11.1515474319458
    6. '_' → logprob: -12.1515474319458
    7. '	range' → logprob: -12.2765474319458
    8. ' ' → logprob: -12.4015474319458
    9. '(range' → logprob: -12.5265474319458
    10. '   ' → logprob: -12.9015474319458

Token 63: '(' (ID: 7)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.000634639582131058
    2. '(' → logprob: -7.375634670257568
    3. 'n' → logprob: -11.75063419342041
    4. ' (' → logprob: -16.250635147094727
    5. '((' → logprob: -17.500635147094727
    6. ' n' → logprob: -17.750635147094727
    7. ')n' → logprob: -17.750635147094727
    8. ')' → logprob: -17.875635147094727
    9. '(
' → logprob: -17.875635147094727
    10. '_n' → logprob: -18.625635147094727

Token 64: '3' (ID: 18)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.011920606717467308
    2. '3' → logprob: -4.63692045211792
    3. ' n' → logprob: -7.13692045211792
    4. '_' → logprob: -7.51192045211792
    5. '10' → logprob: -8.136920928955078
    6. '_n' → logprob: -8.511920928955078
    7. '5' → logprob: -9.011920928955078
    8. '4' → logprob: -9.386920928955078
    9. '(n' → logprob: -10.636920928955078
    10. '_)' → logprob: -11.136920928955078

Token 65: '))))' (ID: 57459)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.5459563136100769
    2. '))))' → logprob: -1.0459563732147217
    3. ')' → logprob: -2.6709563732147217
    4. '))' → logprob: -8.9209566116333
    5. ' ' → logprob: -11.6709566116333
    6. '))))
' → logprob: -11.7959566116333
    7. ' )' → logprob: -12.6709566116333
    8. '))))

' → logprob: -12.6709566116333
    9. ')));' → logprob: -12.9209566116333
    10. '3' → logprob: -12.9209566116333


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 63
Tokens correctement prédits (1ère position, stricte): 23
Tokens correctement prédits (1ère position, avec adaptation): 23
Tokens correctement prédits (top 10): 46
Précision stricte (1ère position): 36.51%
Précision adaptée (1ère position): 36.51%
Précision (top 10): 73.02%
================================================================================
