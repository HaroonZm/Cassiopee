================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:26:53
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
S = input()
for _ in range(len(S)):
    print("x", end="")
print()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'S' (ID: 50)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' input' (ID: 3422)
  → Token d'amorce (pas de prédiction)

Token 3: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01244619581848383
    2. ''' → logprob: -5.387446403503418
    3. '()' → logprob: -5.387446403503418
    4. '('' → logprob: -6.512446403503418
    5. '"' → logprob: -7.262446403503418
    6. '`' → logprob: -8.262446403503418
    7. '("("' → logprob: -8.512446403503418
    8. '```' → logprob: -8.512446403503418
    9. '(
' → logprob: -8.762446403503418
    10. '.' → logprob: -10.137446403503418

Token 4: 'for' (ID: 1938)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.02454993687570095
    2. '[' → logprob: -4.024549961090088
    3. '[::-' → logprob: -6.149549961090088
    4. '+' → logprob: -6.524549961090088
    5. '.strip' → logprob: -7.649549961090088
    6. '.lower' → logprob: -7.899549961090088
    7. '#' → logprob: -8.02454948425293
    8. '.count' → logprob: -8.14954948425293
    9. '.upper' → logprob: -8.52454948425293
    10. '_' → logprob: -8.64954948425293

Token 5: ' _' (ID: 1175)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0047289221547544
    2. '  ' → logprob: -5.6297287940979
    3. ' i' → logprob: -6.8797287940979
    4. '_' → logprob: -10.004729270935059
    5. ' S' → logprob: -11.504729270935059
    6. 'i' → logprob: -11.629729270935059
    7. ' s' → logprob: -11.754729270935059
    8. 's' → logprob: -12.004729270935059
    9. ' ‌' → logprob: -12.379729270935059
    10. ' ' → logprob: -12.629729270935059

Token 6: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00881239678710699
    2. 'in' → logprob: -4.883812427520752
    3. ' ' → logprob: -6.758812427520752
    4. 'range' → logprob: -10.758811950683594
    5. 'n' → logprob: -12.008811950683594
    6. ',' → logprob: -12.383811950683594
    7. '  ' → logprob: -12.633811950683594
    8. 'import' → logprob: -12.883811950683594
    9. ' range' → logprob: -13.133811950683594
    10. ' i' → logprob: -13.758811950683594

Token 7: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.6932893991470337
    2. 'range' → logprob: -0.6932893991470337
    3. ' S' → logprob: -9.193289756774902
    4. ' ' → logprob: -10.443289756774902
    5. 'S' → logprob: -12.068289756774902
    6. '	range' → logprob: -13.568289756774902
    7. 'in' → logprob: -13.818289756774902
    8. 's' → logprob: -14.068289756774902
    9. ''' → logprob: -14.568289756774902
    10. ' in' → logprob: -14.568289756774902

Token 8: '(len' (ID: 14990)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00012106612848583609
    2. ' (' → logprob: -9.125121116638184
    3. '(len' → logprob: -12.250121116638184
    4. '(int' → logprob: -12.375121116638184
    5. '(range' → logprob: -13.875121116638184
    6. '(n' → logprob: -14.250121116638184
    7. '(
' → logprob: -14.750121116638184
    8. '(s' → logprob: -15.750121116638184
    9. '(S' → logprob: -15.875121116638184
    10. '(space' → logprob: -16.125120162963867

Token 9: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.0019308974733576179
    2. '(' → logprob: -6.2519307136535645
    3. '(s' → logprob: -13.126931190490723
    4. 'S' → logprob: -15.501931190490723
    5. ')' → logprob: -17.126930236816406
    6. '()' → logprob: -17.626930236816406
    7. '(
' → logprob: -17.876930236816406
    8. ' (' → logprob: -18.251930236816406
    9. '('' → logprob: -18.626930236816406
    10. 's' → logprob: -18.751930236816406

Token 10: ')):
' (ID: 22530)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.02737889625132084
    2. '))' → logprob: -4.027379035949707
    3. '):' → logprob: -4.777379035949707
    4. ')' → logprob: -7.527379035949707
    5. ')):
' → logprob: -9.027379035949707
    6. '[' → logprob: -10.527379035949707
    7. ':' → logprob: -10.652379035949707
    8. ' ' → logprob: -11.277379035949707
    9. ')))' → logprob: -11.402379035949707
    10. ' ))' → logprob: -11.902379035949707

Token 11: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02642383798956871
    2. ' print' → logprob: -4.151423931121826
    3. ' if' → logprob: -5.276423931121826
    4. ' ' → logprob: -6.526423931121826
    5. ' S' → logprob: -6.901423931121826
    6. '    ' → logprob: -7.276423931121826
    7. 'print' → logprob: -7.526423931121826
    8. '```' → logprob: -8.151423454284668
    9. ' s' → logprob: -8.401423454284668
    10. ' for' → logprob: -8.901423454284668

Token 12: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9324783086776733
    2. ' print' → logprob: -0.9324783086776733
    3. 'print' (adapté à ' print') → logprob: -1.9324783086776733
    4. ' if' → logprob: -3.557478427886963
    5. ' for' → logprob: -5.182478427886963
    6. 'if' → logprob: -5.307478427886963
    7. 's' → logprob: -5.557478427886963
    8. ' S' → logprob: -5.682478427886963
    9. ' i' → logprob: -5.807478427886963
    10. ' c' → logprob: -5.932478427886963

Token 13: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.47777631878852844
    2. '(S' → logprob: -0.977776288986206
    3. '('' → logprob: -6.227776527404785
    4. '(f' → logprob: -7.227776527404785
    5. '()' → logprob: -7.852776527404785
    6. '("("' → logprob: -8.352776527404785
    7. '((' → logprob: -8.602776527404785
    8. '("' → logprob: -8.852776527404785
    9. '(chr' → logprob: -11.477776527404785
    10. '(ord' → logprob: -11.602776527404785

Token 14: 'x' (ID: 87)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.0004255508247297257
    2. ' S' → logprob: -8.000425338745117
    3. ')' → logprob: -10.875425338745117
    4. '(S' → logprob: -11.000425338745117
    5. 's' → logprob: -11.250425338745117
    6. '(' → logprob: -11.375425338745117
    7. '{' → logprob: -11.625425338745117
    8. '{}' → logprob: -12.125425338745117
    9. ' ' → logprob: -12.250425338745117
    10. ' )' → logprob: -13.250425338745117

Token 15: '",' (ID: 672)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6283282041549683
    2. '")' → logprob: -1.1283282041549683
    3. '",' → logprob: -2.628328323364258
    4. '))' → logprob: -4.253328323364258
    5. '*' → logprob: -4.378328323364258
    6. ')")' → logprob: -5.003328323364258
    7. 'S' → logprob: -5.128328323364258
    8. ',' → logprob: -5.128328323364258
    9. '"))' → logprob: -5.628328323364258
    10. '"' → logprob: -5.753328323364258

Token 16: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.002555807586759329
    2. ' end' → logprob: -6.002555847167969
    3. ')' → logprob: -10.127555847167969
    4. '")' → logprob: -11.502555847167969
    5. ' ' → logprob: -11.752555847167969
    6. '   ' → logprob: -12.002555847167969
    7. '",' → logprob: -12.252555847167969
    8. 'S' → logprob: -12.502555847167969
    9. ',end' → logprob: -13.127555847167969
    10. '')' → logprob: -13.877555847167969

Token 17: '="")
' (ID: 154840)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014494659379124641
    2. ')' → logprob: -4.889494895935059
    3. '="' → logprob: -5.639494895935059
    4. '")' → logprob: -6.139494895935059
    5. '='' → logprob: -7.139494895935059
    6. ')=' → logprob: -8.514494895935059
    7. '=""' → logprob: -10.139494895935059
    8. '')' → logprob: -10.764494895935059
    9. '=

' → logprob: -10.764494895935059
    10. '=''' → logprob: -10.889494895935059

Token 18: 'print' (ID: 1598)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6742388010025024
    2. 'S' → logprob: -2.299238681793213
    3. '<|end|>' → logprob: -2.424238681793213
    4. '#' → logprob: -2.549238681793213
    5. 'x' → logprob: -2.674238681793213
    6. ')' → logprob: -2.924238681793213
    7. '_' → logprob: -3.924238681793213
    8. '[' → logprob: -4.174238681793213
    9. '\' → logprob: -4.299238681793213
    10. '*' → logprob: -4.299238681793213

Token 19: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.47658830881118774
    2. '(' → logprob: -0.9765883088111877
    3. '("("' → logprob: -6.101588249206543
    4. '("")' → logprob: -8.726588249206543
    5. '('' → logprob: -9.726588249206543
    6. '("' → logprob: -10.726588249206543
    7. '"' → logprob: -12.851588249206543
    8. '())' → logprob: -13.226588249206543
    9. '(\' → logprob: -13.226588249206543
    10. ')' → logprob: -13.351588249206543


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 17
Tokens correctement prédits (1ère position, stricte): 5
Tokens correctement prédits (1ère position, avec adaptation): 5
Tokens correctement prédits (top 10): 11
Précision stricte (1ère position): 29.41%
Précision adaptée (1ère position): 29.41%
Précision (top 10): 64.71%
================================================================================
