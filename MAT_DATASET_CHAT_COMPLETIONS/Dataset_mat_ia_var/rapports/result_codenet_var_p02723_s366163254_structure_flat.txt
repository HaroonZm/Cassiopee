================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:19:45
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
S = input()
if S[2] == S[3]:
    if S[4] == S[5]:
        print('Yes')
    else:
        print('No')
else:
    print('No')
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'S' (ID: 50)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' input' (ID: 3422)
  → Token d'amorce (pas de prédiction)

Token 3: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.010216859169304371
    2. '('' → logprob: -5.76021671295166
    3. ''' → logprob: -5.88521671295166
    4. '()' → logprob: -6.01021671295166
    5. '"' → logprob: -7.01021671295166
    6. '`' → logprob: -8.38521671295166
    7. '(
' → logprob: -8.38521671295166
    8. '("("' → logprob: -9.01021671295166
    9. '```' → logprob: -9.63521671295166
    10. '[' → logprob: -10.38521671295166

Token 4: 'if' (ID: 366)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.02454993687570095
    2. '[' → logprob: -4.024549961090088
    3. '[::-' → logprob: -6.149549961090088
    4. '+' → logprob: -6.524549961090088
    5. '.strip' → logprob: -7.649549961090088
    6. '.lower' → logprob: -7.899549961090088
    7. '#' → logprob: -8.02454948425293
    8. '.count' → logprob: -8.14954948425293
    9. '.upper' → logprob: -8.52454948425293
    10. '_' → logprob: -8.64954948425293

Token 5: ' S' (ID: 336)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.14490045607089996
    2. ' S' → logprob: -2.0199005603790283
    3. 'S' → logprob: -7.144900321960449
    4. ''' → logprob: -7.519900321960449
    5. ' not' → logprob: -7.644900321960449
    6. '  ' → logprob: -8.64490032196045
    7. ' '' → logprob: -9.01990032196045
    8. ' ' → logprob: -9.89490032196045
    9. '"' → logprob: -10.64490032196045
    10. ' "' → logprob: -11.14490032196045

Token 6: '[' (ID: 58)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.9186022281646729
    2. ' ==' → logprob: -1.0436022281646729
    3. '[' → logprob: -2.418602228164673
    4. ':' → logprob: -2.793602228164673
    5. '==' → logprob: -3.293602228164673
    6. '[:]' → logprob: -3.668602228164673
    7. '.strip' → logprob: -4.043601989746094
    8. '.startswith' → logprob: -4.793601989746094
    9. ' .' → logprob: -6.168601989746094
    10. ' ' → logprob: -6.793601989746094

Token 7: '2' (ID: 17)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001387009397149086
    2. ' ' → logprob: -9.500138282775879
    3. '1' → logprob: -9.750138282775879
    4. ':' → logprob: -13.250138282775879
    5. '2' → logprob: -14.250138282775879
    6. '-' → logprob: -14.500138282775879
    7. ']' → logprob: -14.750138282775879
    8. '```' → logprob: -14.750138282775879
    9. '[' → logprob: -15.187638282775879
    10. '==' → logprob: -15.250138282775879

Token 8: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04718148335814476
    2. ':' → logprob: -3.6721813678741455
    3. '==' → logprob: -5.047181606292725
    4. ' ==' → logprob: -5.797181606292725
    5. ':]' → logprob: -5.922181606292725
    6. ']==' → logprob: -6.047181606292725
    7. '=' → logprob: -6.172181606292725
    8. ' ]' → logprob: -6.422181606292725
    9. '!=' → logprob: -7.672181606292725
    10. ' :]' → logprob: -7.922181606292725

Token 9: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.1028660237789154
    2. '==' → logprob: -2.7278659343719482
    3. ' !=' → logprob: -3.8528659343719482
    4. '!=' → logprob: -5.602866172790527
    5. ':' → logprob: -5.727866172790527
    6. ' ' → logprob: -6.602866172790527
    7. '=' → logprob: -7.352866172790527
    8. ' :' → logprob: -8.102866172790527
    9. '.' → logprob: -8.102866172790527
    10. ' in' → logprob: -8.352866172790527

Token 10: ' S' (ID: 336)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.05960045009851456
    2. '"' → logprob: -3.934600353240967
    3. ''a' → logprob: -3.934600353240967
    4. ''e' → logprob: -5.934600353240967
    5. ''A' → logprob: -6.184600353240967
    6. 'a' → logprob: -6.309600353240967
    7. ' '' → logprob: -6.684600353240967
    8. ''S' → logprob: -6.809600353240967
    9. ''x' → logprob: -6.809600353240967
    10. ''i' → logprob: -7.059600353240967

Token 11: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0002518031978979707
    2. ''[' → logprob: -9.000251770019531
    3. ''' → logprob: -9.500251770019531
    4. '.' → logprob: -11.125251770019531
    5. ' [' → logprob: -12.125251770019531
    6. '[]' → logprob: -12.250251770019531
    7. '```' → logprob: -12.625251770019531
    8. '\[' → logprob: -12.750251770019531
    9. ''s' → logprob: -13.125251770019531
    10. ''''' → logprob: -13.125251770019531

Token 12: '3' (ID: 18)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.9586684107780457
    2. '1' → logprob: -1.0836684703826904
    3. '3' → logprob: -1.5836684703826904
    4. '0' → logprob: -2.7086684703826904
    5. '4' → logprob: -5.833668231964111
    6. ' ' → logprob: -6.083668231964111
    7. ']' → logprob: -7.458668231964111
    8. '5' → logprob: -8.58366870880127
    9. ''' → logprob: -8.95866870880127
    10. ':' → logprob: -9.20866870880127

Token 13: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.2289583384990692
    2. ']' → logprob: -1.6039583683013916
    3. '']' → logprob: -6.3539581298828125
    4. ' ]' → logprob: -7.1039581298828125
    5. '']:' → logprob: -7.4789581298828125
    6. ':' → logprob: -8.353958129882812
    7. '"]:' → logprob: -9.728958129882812
    8. ']==' → logprob: -10.853958129882812
    9. '):' → logprob: -10.978958129882812
    10. '[' → logprob: -11.228958129882812

Token 14: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2438802421092987
    2. ' ' → logprob: -2.243880271911621
    3. '   ' → logprob: -2.493880271911621
    4. ' :' → logprob: -5.493880271911621
    5. '    ' → logprob: -5.743880271911621
    6. '\n' → logprob: -5.743880271911621
    7. 'print' → logprob: -5.993880271911621
    8. ''' → logprob: -6.118880271911621
    9. '  ' → logprob: -6.493880271911621
    10. ')' → logprob: -6.618880271911621

Token 15: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7493013143539429
    2. ' print' → logprob: -0.8743013143539429
    3. '   ' → logprob: -2.4993014335632324
    4. ' ' → logprob: -4.749301433563232
    5. ' S' → logprob: -4.999301433563232
    6. '    ' → logprob: -4.999301433563232
    7. ' pass' → logprob: -5.624301433563232
    8. 'S' → logprob: -7.374301433563232
    9. 'pass' → logprob: -8.124300956726074
    10. '  ' → logprob: -8.874300956726074

Token 16: ' S' (ID: 336)
  Prédit: ' S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.3147228956222534
    2. 'S' → logprob: -1.3147228956222534
    3. ' ' → logprob: -6.689723014831543
    4. ' '' → logprob: -10.189723014831543
    5. '  ' → logprob: -10.564723014831543
    6. ' len' → logprob: -10.564723014831543
    7. 's' → logprob: -10.814723014831543
    8. ''' → logprob: -11.064723014831543
    9. ' ' → logprob: -11.064723014831543
    10. ' not' → logprob: -11.189723014831543

Token 17: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.080963092041202e-06
    2. ' [' → logprob: -13.625004768371582
    3. '[]' → logprob: -14.250004768371582
    4. '[
' → logprob: -14.375004768371582
    5. ']' → logprob: -14.625004768371582
    6. ''[' → logprob: -14.875004768371582
    7. '==' → logprob: -15.000004768371582
    8. '[:' → logprob: -15.500004768371582
    9. ' ' → logprob: -16.0000057220459
    10. ''' → logprob: -16.1250057220459

Token 18: '4' (ID: 19)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.3348912000656128
    2. '0' → logprob: -1.5848912000656128
    3. '4' → logprob: -3.0848913192749023
    4. '1' → logprob: -3.4598913192749023
    5. '3' → logprob: -6.209891319274902
    6. ' ' → logprob: -7.959891319274902
    7. '5' → logprob: -9.709891319274902
    8. ']' → logprob: -12.084891319274902
    9. '[' → logprob: -12.084891319274902
    10. '   ' → logprob: -12.459891319274902

Token 19: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.007322762627154589
    2. ' ]' → logprob: -5.632322788238525
    3. ']==' → logprob: -5.882322788238525
    4. '[' → logprob: -7.257322788238525
    5. '==' → logprob: -9.507322311401367
    6. ' ==' → logprob: -10.007322311401367
    7. ' ' → logprob: -10.382322311401367
    8. '']' → logprob: -10.882322311401367
    9. '=' → logprob: -11.382322311401367
    10. ')' → logprob: -12.132322311401367

Token 20: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.28212401270866394
    2. '==' → logprob: -1.4071240425109863
    3. ' ' → logprob: -8.032123565673828
    4. ' !=' → logprob: -8.532123565673828
    5. '[' → logprob: -8.907123565673828
    6. '=' → logprob: -8.907123565673828
    7. '!=' → logprob: -9.532123565673828
    8. ')' → logprob: -10.532123565673828
    9. '   ' → logprob: -11.407123565673828
    10. '>' → logprob: -12.032123565673828

Token 21: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.00257660960778594
    2. ' S' → logprob: -6.00257682800293
    3. ''S' → logprob: -10.25257682800293
    4. ' ' → logprob: -10.37757682800293
    5. ''' → logprob: -10.62757682800293
    6. '   ' → logprob: -12.37757682800293
    7. '  ' → logprob: -13.37757682800293
    8. ' '' → logprob: -13.50257682800293
    9. '"S' → logprob: -14.37757682800293
    10. 's' → logprob: -14.75257682800293

Token 22: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.440506407059729e-05
    2. ''[' → logprob: -10.87503433227539
    3. '```' → logprob: -12.87503433227539
    4. ''' → logprob: -13.00003433227539
    5. ']' → logprob: -13.37503433227539
    6. '[]' → logprob: -13.75003433227539
    7. '`' → logprob: -14.00003433227539
    8. '\[' → logprob: -14.00003433227539
    9. '"[' → logprob: -14.12503433227539
    10. '``' → logprob: -14.37503433227539

Token 23: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -9.186122770188376e-05
    2. '4' → logprob: -10.125091552734375
    3. '3' → logprob: -10.750091552734375
    4. 'S' → logprob: -11.375091552734375
    5. ' ' → logprob: -11.875091552734375
    6. '0' → logprob: -12.750091552734375
    7. '6' → logprob: -13.125091552734375
    8. '7' → logprob: -13.375091552734375
    9. ''' → logprob: -13.750091552734375
    10. '2' → logprob: -13.750091552734375

Token 24: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7156068086624146
    2. '):' → logprob: -0.7156068086624146
    3. ']:' → logprob: -3.965606689453125
    4. ')' → logprob: -6.090606689453125
    5. ']' → logprob: -8.215606689453125
    6. ' ):' → logprob: -8.215606689453125
    7. ' and' → logprob: -9.840606689453125
    8. ' :' → logprob: -10.090606689453125
    9. '':' → logprob: -10.090606689453125
    10. '）：' → logprob: -10.090606689453125

Token 25: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18334004282951355
    2. '       ' → logprob: -2.183340072631836
    3. 'print' → logprob: -3.308340072631836
    4. ':' → logprob: -4.683340072631836
    5. '\n' → logprob: -5.433340072631836
    6. ' print' → logprob: -5.808340072631836
    7. ' ' → logprob: -7.558340072631836
    8. '    ' → logprob: -8.058340072631836
    9. ':
' → logprob: -8.183340072631836
    10. '     ' → logprob: -9.308340072631836

Token 26: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.11235159635543823
    2. ' print' → logprob: -2.612351655960083
    3. '   ' → logprob: -3.612351655960083
    4. '       ' → logprob: -5.362351417541504
    5. '           ' → logprob: -7.737351417541504
    6. ' ' → logprob: -7.862351417541504
    7. '\n' → logprob: -8.487351417541504
    8. '    ' → logprob: -10.237351417541504
    9. '
' → logprob: -10.237351417541504
    10. 'if' → logprob: -10.612351417541504

Token 27: '('' (ID: 706)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.17224104702472687
    2. '(' → logprob: -1.9222410917282104
    3. '('' → logprob: -5.0472412109375
    4. '("("' → logprob: -5.5472412109375
    5. '(S' → logprob: -6.6722412109375
    6. '()' → logprob: -8.9222412109375
    7. '(":' → logprob: -9.9222412109375
    8. '("(' → logprob: -9.9222412109375
    9. '("")' → logprob: -10.0472412109375
    10. '(True' → logprob: -10.4222412109375

Token 28: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.020508375018835068
    2. ':' → logprob: -5.395508289337158
    3. 'YY' → logprob: -5.645508289337158
    4. 'Y' → logprob: -6.645508289337158
    5. 'YES' → logprob: -7.020508289337158
    6. 'AA' → logprob: -7.020508289337158
    7. 'Weak' → logprob: -7.020508289337158
    8. ' Yes' → logprob: -7.145508289337158
    9. 'Easy' → logprob: -7.395508289337158
    10. 'AC' → logprob: -7.395508289337158

Token 29: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.0068221669644117355
    2. '')
' → logprob: -5.631822109222412
    3. ')' → logprob: -5.756822109222412
    4. '')
' → logprob: -10.25682258605957
    5. ''' → logprob: -11.25682258605957
    6. '!' → logprob: -13.00682258605957
    7. ')
' → logprob: -13.13182258605957
    8. '")' → logprob: -13.75682258605957
    9. '')

' → logprob: -13.88182258605957
    10. '）' → logprob: -15.25682258605957

Token 30: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.0666453167796135
    2. ' else' → logprob: -3.066645383834839
    3. '   ' → logprob: -4.44164514541626
    4. '       ' → logprob: -5.44164514541626
    5. 'elif' → logprob: -7.31664514541626
    6. ')' → logprob: -7.81664514541626
    7. '	else' → logprob: -8.316645622253418
    8. '```' → logprob: -8.691645622253418
    9. '<|end|>' → logprob: -9.191645622253418
    10. '
' → logprob: -10.441645622253418

Token 31: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.02439568191766739
    2. ' else' → logprob: -3.774395704269409
    3. '   ' → logprob: -6.89939546585083
    4. 'elif' → logprob: -9.524395942687988
    5. '	else' → logprob: -10.399395942687988
    6. ')' → logprob: -11.149395942687988
    7. ' ' → logprob: -11.524395942687988
    8. '
' → logprob: -12.524395942687988
    9. 'Else' → logprob: -12.899395942687988
    10. '```' → logprob: -13.274395942687988

Token 32: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00043794067460112274
    2. ':
' → logprob: -7.7504377365112305
    3. ' :' → logprob: -12.87543773651123
    4. '       ' → logprob: -13.37543773651123
    5. '   ' → logprob: -13.62543773651123
    6. 'print' → logprob: -14.00043773651123
    7. '):' → logprob: -15.12543773651123
    8. ' print' → logprob: -15.37543773651123
    9. ':

' → logprob: -15.87543773651123
    10. ':
' → logprob: -16.000438690185547

Token 33: '       ' (ID: 309)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2785610854625702
    2. ' print' → logprob: -1.7785611152648926
    3. '       ' → logprob: -2.6535611152648926
    4. '   ' → logprob: -5.778561115264893
    5. '    ' → logprob: -7.903561115264893
    6. '```' → logprob: -9.278560638427734
    7. '	print' → logprob: -9.528560638427734
    8. '
' → logprob: -9.903560638427734
    9. '           ' → logprob: -9.903560638427734
    10. '        ' → logprob: -10.653560638427734

Token 34: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.008621551096439362
    2. ' print' → logprob: -4.758621692657471
    3. '   ' → logprob: -12.008621215820312
    4. ' ' → logprob: -14.758621215820312
    5. '```' → logprob: -16.008621215820312
    6. '    ' → logprob: -16.133621215820312
    7. 'pass' → logprob: -16.258621215820312
    8. '	print' → logprob: -16.258621215820312
    9. '  ' → logprob: -17.258621215820312
    10. '       ' → logprob: -17.883621215820312

Token 35: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.005234121344983578
    2. '(' → logprob: -5.255234241485596
    3. '()' → logprob: -14.880233764648438
    4. '("' → logprob: -17.005233764648438
    5. '(\'' → logprob: -18.380233764648438
    6. '(False' → logprob: -18.505233764648438
    7. '(('' → logprob: -18.630233764648438
    8. '(None' → logprob: -19.505233764648438
    9. ' ('' → logprob: -19.755233764648438
    10. '(`' → logprob: -19.880233764648438

Token 36: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -4.596781946020201e-05
    2. ''' → logprob: -10.000045776367188
    3. ' No' → logprob: -14.500045776367188
    4. 'Yes' → logprob: -17.750045776367188
    5. 'NO' → logprob: -18.375045776367188
    6. '"No' → logprob: -18.625045776367188
    7. '_No' → logprob: -19.625045776367188
    8. ''N' → logprob: -19.750045776367188
    9. '')' → logprob: -20.375045776367188
    10. '   ' → logprob: -20.500045776367188

Token 37: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.00011725161311915144
    2. ')' → logprob: -9.125117301940918
    3. '')
' → logprob: -12.125117301940918
    4. ''' → logprob: -12.875117301940918
    5. '")' → logprob: -15.625117301940918
    6. '```' → logprob: -16.3751163482666
    7. '')

' → logprob: -17.1251163482666
    8. '`)' → logprob: -17.5001163482666
    9. '')
' → logprob: -17.7501163482666
    10. '}')' → logprob: -17.8751163482666

Token 38: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.08375218510627747
    2. 'elif' → logprob: -3.333752155303955
    3. 'e' → logprob: -3.708752155303955
    4. ' else' → logprob: -4.458752155303955
    5. '```' → logprob: -5.208752155303955
    6. '<|end|>' → logprob: -6.958752155303955
    7. ')' → logprob: -7.333752155303955
    8. '\n' → logprob: -7.958752155303955
    9. '#' → logprob: -8.708752632141113
    10. '\' → logprob: -8.708752632141113

Token 39: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -2.165027217415627e-05
    2. ':
' → logprob: -11.250021934509277
    3. '   ' → logprob: -12.000021934509277
    4. ' :' → logprob: -13.375021934509277
    5. ':**' → logprob: -14.875021934509277
    6. '):' → logprob: -15.625021934509277
    7. '       ' → logprob: -16.12502098083496
    8. '```' → logprob: -16.50002098083496
    9. '：' → logprob: -16.75002098083496
    10. ':

' → logprob: -17.25002098083496

Token 40: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0019527795957401395
    2. '       ' → logprob: -6.626952648162842
    3. 'print' → logprob: -8.001953125
    4. '    ' → logprob: -9.126953125
    5. '```' → logprob: -9.876953125
    6. ' ' → logprob: -10.001953125
    7. '    
' → logprob: -10.501953125
    8. ' print' → logprob: -10.876953125
    9. ''' → logprob: -11.501953125
    10. '"' → logprob: -11.626953125

Token 41: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.029929250478744507
    2. ' print' → logprob: -4.029929161071777
    3. 'if' → logprob: -5.154929161071777
    4. '   ' → logprob: -5.404929161071777
    5. ' if' → logprob: -6.654929161071777
    6. ' ' → logprob: -9.029929161071777
    7. '```' → logprob: -10.904929161071777
    8. '    ' → logprob: -12.029929161071777
    9. '  ' → logprob: -12.779929161071777
    10. '       ' → logprob: -13.779929161071777

Token 42: '('' (ID: 706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6931555271148682
    2. '('' → logprob: -0.6931555271148682
    3. '()' → logprob: -12.318155288696289
    4. '("' → logprob: -13.818155288696289
    5. ' (' → logprob: -13.943155288696289
    6. '('(' → logprob: -14.818155288696289
    7. '(\'' → logprob: -14.818155288696289
    8. '(None' → logprob: -14.943155288696289
    9. ' ('' → logprob: -15.568155288696289
    10. '(False' → logprob: -15.693155288696289

Token 43: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -5.4192871175473556e-05
    2. 'N' → logprob: -10.625054359436035
    3. ''' → logprob: -10.750054359436035
    4. 'Yes' → logprob: -12.125054359436035
    5. ' No' → logprob: -13.125054359436035
    6. ''N' → logprob: -15.000054359436035
    7. '"No' → logprob: -15.000054359436035
    8. 'NO' → logprob: -15.750054359436035
    9. '`' → logprob: -17.12505340576172
    10. '```' → logprob: -17.25005340576172

Token 44: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.00026622318546287715
    2. ')' → logprob: -8.250266075134277
    3. ''' → logprob: -12.375266075134277
    4. '")' → logprob: -15.125266075134277
    5. '')
' → logprob: -15.500266075134277
    6. '`)' → logprob: -15.750266075134277
    7. '```' → logprob: -16.500267028808594
    8. '’)' → logprob: -18.625267028808594
    9. '')

' → logprob: -19.250267028808594
    10. ' ')' → logprob: -19.375267028808594


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 42
Tokens correctement prédits (1ère position, stricte): 16
Tokens correctement prédits (1ère position, avec adaptation): 20
Tokens correctement prédits (top 10): 36
Précision stricte (1ère position): 38.10%
Précision adaptée (1ère position): 47.62%
Précision (top 10): 85.71%
================================================================================
