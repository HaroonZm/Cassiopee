================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:46:29
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import reduce
from operator import add
import sys
import cmath

n = int(sys.stdin.readline())
xy = list(map(lambda _: complex(*map(int, sys.stdin.readline().split())), range(n)))

xy = sorted(xy, key=cmath.phase)

from itertools import product, islice, accumulate, chain

def extract(acc, i, j):
    seq = acc[j] if i == 0 else acc[j] - acc[i-1]
    return seq

# Build prefix sums for O(1) subarray sum computation
prefix = list(accumulate(xy, add))

f = lambda i, j: abs(prefix[j] if i == 0 else prefix[j] - prefix[i-1])
g = lambda i, j: abs(prefix[j] + (prefix[-1] - prefix[i-1])) if i > j else f(i, j)

ans = max(
    (
        g(i, j)
        for i, j in product(range(n), repeat=2)
    ),
    default=0
)

print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' reduce' (ID: 10389)
  Prédit: 'wrap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wrap' → logprob: -0.29569441080093384
    2. 'partial' → logprob: -1.545694351196289
    3. 'reduce' → logprob: -3.295694351196289
    4. 'l' → logprob: -5.920694351196289
    5. ' wraps' → logprob: -6.295694351196289
    6. 'cached' → logprob: -7.295694351196289
    7. 'cache' → logprob: -8.295694351196289
    8. 'cmp' → logprob: -8.795694351196289
    9. '`' → logprob: -9.795694351196289
    10. '```' → logprob: -9.795694351196289

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01989164389669895
    2. '(lambda' → logprob: -4.644891738891602
    3. '.' → logprob: -5.394891738891602
    4. ',' → logprob: -5.894891738891602
    5. '\' → logprob: -7.144891738891602
    6. ' (' → logprob: -7.519891738891602
    7. '```' → logprob: -8.019891738891602
    8. 'def' → logprob: -8.644891738891602
    9. 'lambda' → logprob: -8.894891738891602
    10. '`' → logprob: -8.894891738891602

Token 5: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.028644466772675514
    2. '\' → logprob: -4.153644561767578
    3. 'def' → logprob: -5.028644561767578
    4. '(
' → logprob: -6.028644561767578
    5. '(lambda' → logprob: -6.653644561767578
    6. ',' → logprob: -7.653644561767578
    7. '\n' → logprob: -7.778644561767578
    8. '```' → logprob: -7.903644561767578
    9. '\(' → logprob: -8.403644561767578
    10. '`' → logprob: -9.278644561767578

Token 6: ' operator' (ID: 11019)
  Prédit: ' operator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.24421319365501404
    2. ' math' → logprob: -2.119213104248047
    3. 'operator' → logprob: -3.244213104248047
    4. ' itertools' → logprob: -3.244213104248047
    5. ' collections' → logprob: -4.494213104248047
    6. 'math' → logprob: -5.494213104248047
    7. ' os' → logprob: -6.369213104248047
    8. 'collections' → logprob: -7.369213104248047
    9. ' ' → logprob: -7.994213104248047
    10. ' typing' → logprob: -8.119213104248047

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.023960482329130173
    2. 'import' → logprob: -3.898960590362549
    3. '.' → logprob: -5.898960590362549
    4. ' ' → logprob: -7.398960590362549
    5. ' .' → logprob: -10.14896011352539
    6. '	import' → logprob: -11.89896011352539
    7. '.import' → logprob: -12.77396011352539
    8. '<|end|>' → logprob: -13.27396011352539
    9. '_import' → logprob: -13.64896011352539
    10. ' Import' → logprob: -13.64896011352539

Token 8: ' add' (ID: 1147)
  Prédit: ' add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.20301611721515656
    2. ' import' → logprob: -2.5780160427093506
    3. ' ' → logprob: -2.7030160427093506
    4. ' mul' → logprob: -3.3280160427093506
    5. 'add' → logprob: -5.95301628112793
    6. ' item' → logprob: -6.95301628112793
    7. 'import' → logprob: -8.07801628112793
    8. ' ad' → logprob: -8.32801628112793
    9. ' icon' → logprob: -8.45301628112793
    10. 'mul' → logprob: -8.57801628112793

Token 9: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05271875485777855
    2. '(
' → logprob: -4.052718639373779
    3. ',' → logprob: -4.552718639373779
    4. '\n' → logprob: -4.677718639373779
    5. '\' → logprob: -4.802718639373779
    6. '#' → logprob: -6.677718639373779
    7. '`' → logprob: -6.802718639373779
    8. '
' → logprob: -7.677718639373779
    9. '()' → logprob: -7.802718639373779
    10. ' ' → logprob: -7.927718639373779

Token 10: 'import' (ID: 561)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.2341631650924683
    2. '(
' → logprob: -1.3591631650924683
    3. '
' → logprob: -1.8591631650924683
    4. '\n' → logprob: -2.359163284301758
    5. '\' → logprob: -2.859163284301758
    6. 'def' → logprob: -3.484163284301758
    7. '

' → logprob: -3.609163284301758
    8. '(

' → logprob: -4.109163284301758
    9. ',' → logprob: -4.484163284301758
    10. 'reduce' → logprob: -4.859163284301758

Token 11: ' sys' (ID: 12228)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.11145593225955963
    2. ' math' → logprob: -2.8614559173583984
    3. ' itertools' → logprob: -3.4864559173583984
    4. ' functools' → logprob: -4.486455917358398
    5. ' collections' → logprob: -6.236455917358398
    6. ' sys' → logprob: -6.486455917358398
    7. ' ' → logprob: -6.986455917358398
    8. ' numpy' → logprob: -7.611455917358398
    9. ' re' → logprob: -7.986455917358398
    10. ' json' → logprob: -8.236455917358398

Token 12: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.3859610855579376
    2. '\' → logprob: -1.5109610557556152
    3. '
' → logprob: -4.010961055755615
    4. '.' → logprob: -4.135961055755615
    5. '

' → logprob: -4.260961055755615
    6. ',' → logprob: -4.260961055755615
    7. '```' → logprob: -4.510961055755615
    8. 'import' → logprob: -4.635961055755615
    9. '' → logprob: -5.385961055755615
    10. 'def' → logprob: -5.760961055755615

Token 13: 'import' (ID: 561)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.9055749773979187
    2. 'def' → logprob: -2.0305750370025635
    3. 'import' → logprob: -2.1555750370025635
    4. '\' → logprob: -2.5305750370025635
    5. '```' → logprob: -2.6555750370025635
    6. '
' → logprob: -2.9055750370025635
    7. 'print' → logprob: -3.1555750370025635
    8. 'data' → logprob: -3.9055750370025635
    9. 'for' → logprob: -4.405574798583984
    10. 'sys' → logprob: -4.405574798583984

Token 14: ' cm' (ID: 9256)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.006643375381827354
    2. ' math' → logprob: -5.381643295288086
    3. ' io' → logprob: -7.381643295288086
    4. 'os' → logprob: -7.381643295288086
    5. ' itertools' → logprob: -7.881643295288086
    6. ' collections' → logprob: -8.881643295288086
    7. ' functools' → logprob: -9.506643295288086
    8. ' re' → logprob: -9.756643295288086
    9. ' argparse' → logprob: -10.131643295288086
    10. ' string' → logprob: -10.756643295288086

Token 15: 'ath' (ID: 725)
  Prédit: 'ath'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ath' → logprob: -1.3856492842023727e-06
    2. 'ap' → logprob: -14.625000953674316
    3. 'at' → logprob: -15.000000953674316
    4. 'aths' → logprob: -15.000000953674316
    5. ' ath' → logprob: -16.500001907348633
    6. 'a' → logprob: -16.750001907348633
    7. 'as' → logprob: -17.375001907348633
    8. '```' → logprob: -19.500001907348633
    9. '#' → logprob: -19.750001907348633
    10. 'path' → logprob: -19.750001907348633

Token 16: '

' (ID: 279)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.4442172050476074
    2. 'import' → logprob: -1.8192172050476074
    3. '
' → logprob: -2.5692172050476074
    4. '\' → logprob: -3.1942172050476074
    5. '```' → logprob: -3.3192172050476074
    6. '

' → logprob: -4.319217205047607
    7. 'def' → logprob: -5.319217205047607
    8. 'x' → logprob: -5.444217205047607
    9. ',' → logprob: -5.694217205047607
    10. '#' → logprob: -5.819217205047607

Token 17: 'n' (ID: 77)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.11658773571252823
    2. '```' → logprob: -2.9915876388549805
    3. 'import' → logprob: -3.9915876388549805
    4. '\' → logprob: -4.1165876388549805
    5. '\n' → logprob: -4.4915876388549805
    6. '`' → logprob: -5.8665876388549805
    7. '``' → logprob: -6.3665876388549805
    8. ',' → logprob: -6.7415876388549805
    9. 'for' → logprob: -6.9915876388549805
    10. 'data' → logprob: -6.9915876388549805

Token 18: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3213707506656647
    2. ' =' → logprob: -1.4463707208633423
    3. ' ' → logprob: -4.196370601654053
    4. '_' → logprob: -4.446370601654053
    5. 'u' → logprob: -4.571370601654053
    6. 'um' → logprob: -7.321370601654053
    7. ',' → logprob: -7.571370601654053
    8. 'umber' → logprob: -8.071371078491211
    9. ')' → logprob: -8.696371078491211
    10. 'a' → logprob: -9.071371078491211

Token 19: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.09743493795394897
    2. 'int' → logprob: -2.4724349975585938
    3. ' ' → logprob: -5.222434997558594
    4. '10' → logprob: -6.722434997558594
    5. '0' → logprob: -8.097434997558594
    6. '20' → logprob: -8.472434997558594
    7. ' input' → logprob: -8.597434997558594
    8. '5' → logprob: -8.597434997558594
    9. '100' → logprob: -8.597434997558594
    10. 'complex' → logprob: -9.597434997558594

Token 20: '(sys' (ID: 41042)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.001096403575502336
    2. '(n' → logprob: -7.251096248626709
    3. '(sys' → logprob: -9.001096725463867
    4. '('' → logprob: -9.251096725463867
    5. '(input' → logprob: -9.251096725463867
    6. '()' → logprob: -10.876096725463867
    7. ' (' → logprob: -11.626096725463867
    8. '(`' → logprob: -12.376096725463867
    9. '```' → logprob: -12.501096725463867
    10. '(
' → logprob: -12.626096725463867

Token 21: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.791089653968811
    2. '.' → logprob: -1.041089653968811
    3. '.argv' → logprob: -1.666089653968811
    4. '.readline' → logprob: -5.5410895347595215
    5. ' .' → logprob: -8.54109001159668
    6. '.)' → logprob: -8.79109001159668
    7. '.input' → logprob: -9.54109001159668
    8. '.read' → logprob: -9.79109001159668
    9. ')' → logprob: -9.91609001159668
    10. '.stdout' → logprob: -9.91609001159668

Token 22: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.055938392877578735
    2. '.read' → logprob: -2.930938482284546
    3. '.' → logprob: -6.930938243865967
    4. ')' → logprob: -10.180938720703125
    5. '.)' → logprob: -10.805938720703125
    6. '.readlines' → logprob: -12.180938720703125
    7. ' .' → logprob: -13.055938720703125
    8. '.stdin' → logprob: -13.055938720703125
    9. '.Read' → logprob: -13.180938720703125
    10. ').' → logprob: -13.180938720703125

Token 23: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.03969302400946617
    2. '()' → logprob: -3.2896931171417236
    3. ')' → logprob: -6.6646928787231445
    4. '().' → logprob: -8.289692878723145
    5. ' ())' → logprob: -9.789692878723145
    6. '(' → logprob: -10.164692878723145
    7. '()))' → logprob: -11.289692878723145
    8. '()[' → logprob: -11.664692878723145
    9. '();)' → logprob: -13.414692878723145
    10. '()`' → logprob: -14.039692878723145

Token 24: 'xy' (ID: 6077)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.39383623003959656
    2. 'data' → logprob: -2.393836259841919
    3. 'numbers' → logprob: -2.768836259841919
    4. 's' → logprob: -3.518836259841919
    5. 'total' → logprob: -3.643836259841919
    6. 'results' → logprob: -4.14383602142334
    7. 'a' → logprob: -4.26883602142334
    8. 'values' → logprob: -4.26883602142334
    9. 'lst' → logprob: -4.76883602142334
    10. 'vectors' → logprob: -4.89383602142334

Token 25: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.009201801382005215
    2. '_' → logprob: -5.634202003479004
    3. ' =' → logprob: -5.759202003479004
    4. '[]' → logprob: -7.134202003479004
    5. '=' → logprob: -7.634202003479004
    6. '[' → logprob: -7.884202003479004
    7. '_list' → logprob: -8.634202003479004
    8. '_pairs' → logprob: -9.009202003479004
    9. '_coords' → logprob: -9.259202003479004
    10. ')' → logprob: -9.884202003479004

Token 26: ' list' (ID: 1562)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.12192370742559433
    2. '[list' → logprob: -2.6219236850738525
    3. ' [' → logprob: -3.4969236850738525
    4. '[int' → logprob: -5.496923923492432
    5. '[n' → logprob: -5.996923923492432
    6. '[]' → logprob: -6.496923923492432
    7. '[x' → logprob: -7.246923923492432
    8. '[input' → logprob: -7.871923923492432
    9. '[i' → logprob: -8.246923446655273
    10. '[List' → logprob: -8.371923446655273

Token 27: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0053855376318097115
    2. '(' → logprob: -5.255385398864746
    3. '(range' → logprob: -9.630385398864746
    4. '(filter' → logprob: -10.880385398864746
    5. '(zip' → logprob: -11.380385398864746
    6. '()' → logprob: -11.380385398864746
    7. '(x' → logprob: -11.630385398864746
    8. 'map' → logprob: -11.880385398864746
    9. '(
' → logprob: -12.255385398864746
    10. '(sys' → logprob: -12.380385398864746

Token 28: '(lambda' (ID: 43341)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.10899810492992401
    2. '(' → logprob: -2.9839980602264404
    3. '(lambda' → logprob: -3.1089980602264404
    4. '(float' → logprob: -5.2339982986450195
    5. ')' → logprob: -6.9839982986450195
    6. '<|end|>' → logprob: -7.4839982986450195
    7. '(str' → logprob: -7.6089982986450195
    8. 'int' → logprob: -8.60899829864502
    9. '(tuple' → logprob: -8.98399829864502
    10. '(
' → logprob: -9.10899829864502

Token 29: ' _:' (ID: 133568)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.25116053223609924
    2. 'x' → logprob: -1.7511605024337769
    3. ' xy' → logprob: -3.5011606216430664
    4. 'xy' → logprob: -4.251160621643066
    5. ' s' → logprob: -6.251160621643066
    6. ' line' → logprob: -7.126160621643066
    7. 'line' → logprob: -8.001160621643066
    8. 's' → logprob: -8.126160621643066
    9. ' t' → logprob: -8.751160621643066
    10. ' z' → logprob: -9.001160621643066

Token 30: ' complex' (ID: 8012)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.30452340841293335
    2. ' tuple' → logprob: -1.4295234680175781
    3. 'list' → logprob: -4.304523468017578
    4. 'sys' → logprob: -5.679523468017578
    5. 'complex' → logprob: -6.304523468017578
    6. ' list' → logprob: -6.429523468017578
    7. ' sys' → logprob: -6.679523468017578
    8. 'int' → logprob: -7.304523468017578
    9. 'lambda' → logprob: -8.054523468017578
    10. ' complex' → logprob: -8.304523468017578

Token 31: '(*' (ID: 9000)
  Prédit: '(sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.005394661333411932
    2. '(com' → logprob: -6.755394458770752
    3. '(' → logprob: -7.005394458770752
    4. '(input' → logprob: -7.005394458770752
    5. '(int' → logprob: -7.130394458770752
    6. '(float' → logprob: -7.755394458770752
    7. '(*' → logprob: -7.880394458770752
    8. '(x' → logprob: -8.38039493560791
    9. '(s' → logprob: -9.00539493560791
    10. '(eval' → logprob: -9.13039493560791

Token 32: 'map' (ID: 3726)
  Prédit: 'map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.0028040374163538218
    2. '(map' → logprob: -6.377803802490234
    3. ' map' → logprob: -6.877803802490234
    4. '[' → logprob: -10.127803802490234
    5. '	map' → logprob: -11.752803802490234
    6. 'div' → logprob: -12.127803802490234
    7. ')' → logprob: -12.502803802490234
    8. 'list' → logprob: -12.877803802490234
    9. 'sys' → logprob: -13.502803802490234
    10. '(' → logprob: -13.752803802490234

Token 33: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.048724982887506485
    2. '(float' → logprob: -3.048724889755249
    3. 'int' → logprob: -9.798725128173828
    4. 'float' → logprob: -10.173725128173828
    5. '(' → logprob: -10.798725128173828
    6. ',int' → logprob: -11.798725128173828
    7. ',float' → logprob: -11.923725128173828
    8. '[int' → logprob: -12.298725128173828
    9. '<int' → logprob: -13.673725128173828
    10. ')' → logprob: -14.048725128173828

Token 34: ',' (ID: 11)
  Prédit: '(sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.018659278750419617
    2. ',' → logprob: -4.2686591148376465
    3. 'sys' → logprob: -5.5186591148376465
    4. '	sys' → logprob: -9.018659591674805
    5. '=sys' → logprob: -9.143659591674805
    6. '),' → logprob: -9.268659591674805
    7. ' sys' → logprob: -10.018659591674805
    8. '(' → logprob: -10.268659591674805
    9. ')' → logprob: -11.143659591674805
    10. ' ,' → logprob: -11.268659591674805

Token 35: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0002128382766386494
    2. ' sys' → logprob: -9.000212669372559
    3. '(sys' → logprob: -9.750212669372559
    4. '_' → logprob: -11.500212669372559
    5. 'input' → logprob: -11.750212669372559
    6. '	sys' → logprob: -12.750212669372559
    7. '_sys' → logprob: -12.875212669372559
    8. '_.' → logprob: -13.000212669372559
    9. '=sys' → logprob: -13.000212669372559
    10. 'stdin' → logprob: -13.125212669372559

Token 36: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0009145628428086638
    2. 'stdin' → logprob: -7.000914573669434
    3. '.readline' → logprob: -13.875914573669434
    4. '.argv' → logprob: -14.000914573669434
    5. '```' → logprob: -14.500914573669434
    6. '(stdin' → logprob: -14.500914573669434
    7. '.stdout' → logprob: -15.500914573669434
    8. ' stdin' → logprob: -16.875913619995117
    9. '   ' → logprob: -17.125913619995117
    10. '.' → logprob: -17.375913619995117

Token 37: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0003091254911851138
    2. '.stdin' → logprob: -8.250308990478516
    3. '.' → logprob: -10.250308990478516
    4. 'stdin' → logprob: -11.375308990478516
    5. ' readline' → logprob: -14.875308990478516
    6. '```' → logprob: -15.125308990478516
    7. '.readlines' → logprob: -15.250308990478516
    8. ')' → logprob: -16.625308990478516
    9. 'read' → logprob: -17.250308990478516
    10. ' .' → logprob: -17.250308990478516

Token 38: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.4868770196917467e-05
    2. '()' → logprob: -10.625024795532227
    3. '()))' → logprob: -15.500024795532227
    4. '())))' → logprob: -15.750024795532227
    5. ' ().' → logprob: -17.125024795532227
    6. '.readline' → logprob: -17.750024795532227
    7. '(' → logprob: -17.750024795532227
    8. '.strip' → logprob: -18.000024795532227
    9. 'strip' → logprob: -18.375024795532227
    10. 'split' → logprob: -18.875024795532227

Token 39: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.03950132057070732
    2. 'strip' → logprob: -3.289501428604126
    3. 'rstrip' → logprob: -6.539501190185547
    4. ' split' → logprob: -11.289501190185547
    5. '(split' → logprob: -14.664501190185547
    6. 'spl' → logprob: -15.414501190185547
    7. ' strip' → logprob: -15.789501190185547
    8. 'read' → logprob: -16.414501190185547
    9. 'rs' → logprob: -16.664501190185547
    10. '.split' → logprob: -17.289501190185547

Token 40: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.15309900045394897
    2. '()))' → logprob: -2.1530990600585938
    3. '())))' → logprob: -4.278099060058594
    4. ')),' → logprob: -5.153099060058594
    5. '))' → logprob: -6.028099060058594
    6. ')))' → logprob: -6.403099060058594
    7. '())' → logprob: -7.153099060058594
    8. '()),' → logprob: -7.528099060058594
    9. '())),
' → logprob: -8.653099060058594
    10. '))))' → logprob: -8.653099060058594

Token 41: ')),' (ID: 12098)
  Prédit: ')),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')),' → logprob: -0.01888507418334484
    2. '))' → logprob: -4.518885135650635
    3. ')' → logprob: -5.643885135650635
    4. '),' → logprob: -6.143885135650635
    5. '))),' → logprob: -6.768885135650635
    6. '()' → logprob: -8.268884658813477
    7. ')))' → logprob: -8.393884658813477
    8. ' ' → logprob: -8.643884658813477
    9. '))))' → logprob: -8.893884658813477
    10. ')))),' → logprob: -9.393884658813477

Token 42: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.003182467306032777
    2. ' range' → logprob: -5.753182411193848
    3. '[' → logprob: -13.628182411193848
    4. '(range' → logprob: -14.003182411193848
    5. '   ' → logprob: -14.003182411193848
    6. '	range' → logprob: -14.128182411193848
    7. ' ' → logprob: -14.378182411193848
    8. 'repeat' → logprob: -15.753182411193848
    9. 'rang' → logprob: -16.503183364868164
    10. '    ' → logprob: -16.753183364868164

Token 43: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -2.3557529857498594e-05
    2. '(' → logprob: -10.75002384185791
    3. 'n' → logprob: -13.12502384185791
    4. ')n' → logprob: -19.750022888183594
    5. '(
' → logprob: -20.125022888183594
    6. ' n' → logprob: -20.125022888183594
    7. '((' → logprob: -20.500022888183594
    8. '	n' → logprob: -20.625022888183594
    9. '<n' → logprob: -21.125022888183594
    10. '_n' → logprob: -21.375022888183594

Token 44: ')))

' (ID: 46526)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.14508122205734253
    2. ')' → logprob: -2.1450812816619873
    3. '))' → logprob: -4.020081043243408
    4. '),' → logprob: -11.520081520080566
    5. '))))' → logprob: -11.645081520080566
    6. ')))
' → logprob: -11.895081520080566
    7. ')));' → logprob: -12.770081520080566
    8. ' ' → logprob: -13.020081520080566
    9. ')
' → logprob: -13.145081520080566
    10. ' )' → logprob: -14.145081520080566

Token 45: 'xy' (ID: 6077)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.1827126741409302
    2. 's' → logprob: -1.9327126741409302
    3. 'result' → logprob: -2.3077125549316406
    4. 'def' → logprob: -2.5577125549316406
    5. 'p' → logprob: -2.6827125549316406
    6. ')' → logprob: -3.3077125549316406
    7. ',' → logprob: -3.6827125549316406
    8. 'points' → logprob: -3.8077125549316406
    9. 'area' → logprob: -3.8077125549316406
    10. 'conv' → logprob: -3.9327125549316406

Token 46: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 47: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.4344951808452606
    2. 'list' → logprob: -1.809495210647583
    3. '[' → logprob: -2.559495210647583
    4. 'reduce' → logprob: -3.184495210647583
    5. 'xy' → logprob: -3.684495210647583
    6. ' list' → logprob: -4.059494972229004
    7. ' sorted' → logprob: -4.184494972229004
    8. ' [' → logprob: -5.809494972229004
    9. '[(' → logprob: -6.309494972229004
    10. 're' → logprob: -6.309494972229004

Token 48: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.2823712229728699
    2. '(' → logprob: -1.4073712825775146
    3. '((' → logprob: -7.7823710441589355
    4. '(xs' → logprob: -7.7823710441589355
    5. '(lambda' → logprob: -9.407371520996094
    6. '(open' → logprob: -10.157371520996094
    7. '(
' → logprob: -10.157371520996094
    8. '<|end|>' → logprob: -10.407371520996094
    9. ' (' → logprob: -11.282371520996094
    10. '(xx' → logprob: -11.407371520996094

Token 49: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.04998007416725159
    2. ',' → logprob: -3.0499801635742188
    3. ',y' → logprob: -6.924980163574219
    4. 'xy' → logprob: -8.674980163574219
    5. ')' → logprob: -8.799980163574219
    6. 'ython' → logprob: -11.049980163574219
    7. 'by' → logprob: -11.299980163574219
    8. '<|end|>' → logprob: -11.674980163574219
    9. '[' → logprob: -11.799980163574219
    10. ' y' → logprob: -12.174980163574219

Token 50: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.22801227867603302
    2. ',key' → logprob: -1.6030123233795166
    3. ')' → logprob: -6.1030120849609375
    4. 'key' → logprob: -8.478012084960938
    5. ' ,' → logprob: -9.103012084960938
    6. '[key' → logprob: -11.103012084960938
    7. ' key' → logprob: -11.603012084960938
    8. '(key' → logprob: -12.103012084960938
    9. ',)' → logprob: -12.728012084960938
    10. '_key' → logprob: -13.728012084960938

Token 51: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.011108300648629665
    2. ' key' → logprob: -4.5111083984375
    3. 'lambda' → logprob: -10.1361083984375
    4. ')' → logprob: -11.2611083984375
    5. '	key' → logprob: -12.6361083984375
    6. ',key' → logprob: -12.8861083984375
    7. '(key' → logprob: -13.6361083984375
    8. '[key' → logprob: -14.8861083984375
    9. ' lambda' → logprob: -15.0111083984375
    10. 'reverse' → logprob: -16.1361083984375

Token 52: '=' (ID: 28)
  Prédit: '=lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.2519731819629669
    2. '=' → logprob: -1.5019731521606445
    3. '=len' → logprob: -10.126973152160645
    4. '=id' → logprob: -13.751973152160645
    5. '=str' → logprob: -14.001973152160645
    6. '=int' → logprob: -15.001973152160645
    7. '=i' → logprob: -15.126973152160645
    8. '=}' → logprob: -15.126973152160645
    9. '=ax' → logprob: -15.376973152160645
    10. '=com' → logprob: -15.626973152160645

Token 53: 'cmath' (ID: 88243)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.02005080133676529
    2. ' lambda' → logprob: -4.020051002502441
    3. 'abs' → logprob: -6.895051002502441
    4. '=lambda' → logprob: -7.520051002502441
    5. '(lambda' → logprob: -8.770051002502441
    6. 'complex' → logprob: -9.145051002502441
    7. 'cmath' → logprob: -10.395051002502441
    8. 'attr' → logprob: -11.895051002502441
    9. '   ' → logprob: -11.895051002502441
    10. ')' → logprob: -12.270051002502441

Token 54: '.phase' (ID: 146627)
  Prédit: '.phase'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.phase' → logprob: -0.018344372510910034
    2. '.p' → logprob: -4.018344402313232
    3. '.ph' → logprob: -9.768343925476074
    4. 'phase' → logprob: -10.018343925476074
    5. '.atan' → logprob: -10.768343925476074
    6. '.' → logprob: -10.893343925476074
    7. ' phase' → logprob: -11.268343925476074
    8. '.pi' → logprob: -11.268343925476074
    9. '.angle' → logprob: -11.643343925476074
    10. 'Phase' → logprob: -12.018343925476074

Token 55: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.845798710244708e-05
    2. ' )' → logprob: -11.125038146972656
    3. ',' → logprob: -11.375038146972656
    4. '))' → logprob: -12.125038146972656
    5. ')
' → logprob: -13.125038146972656
    6. '),' → logprob: -13.625038146972656
    7. ')`' → logprob: -13.625038146972656
    8. ',)' → logprob: -14.375038146972656
    9. '(' → logprob: -14.750038146972656
    10. '(x' → logprob: -15.250038146972656

Token 56: 'from' (ID: 2845)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.7445898056030273
    2. 'def' → logprob: -1.8695898056030273
    3. 'conv' → logprob: -2.2445898056030273
    4. 'm' → logprob: -2.6195898056030273
    5. 'v' → logprob: -2.9945898056030273
    6. 'x' → logprob: -3.1195898056030273
    7. 'area' → logprob: -3.3695898056030273
    8. 'k' → logprob: -3.4945898056030273
    9. 'for' → logprob: -3.7445898056030273
    10. 's' → logprob: -3.8695898056030273

Token 57: ' itertools' (ID: 103178)
  Prédit: ' itertools'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.9178038835525513
    2. ' math' → logprob: -1.0428038835525513
    3. ' functools' → logprob: -2.0428037643432617
    4. ' operator' → logprob: -2.4178037643432617
    5. ' collections' → logprob: -4.667803764343262
    6. 'math' → logprob: -5.167803764343262
    7. '_' → logprob: -5.417803764343262
    8. 'operator' → logprob: -5.417803764343262
    9. 'cmath' → logprob: -6.417803764343262
    10. '_math' → logprob: -6.917803764343262

Token 58: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.026640810072422028
    2. 'import' → logprob: -3.6516408920288086
    3. '	import' → logprob: -8.401640892028809
    4. '<|end|>' → logprob: -10.151640892028809
    5. ' itertools' → logprob: -10.401640892028809
    6. ' ' → logprob: -11.276640892028809
    7. '.' → logprob: -12.151640892028809
    8. '_import' → logprob: -12.401640892028809
    9. '<|end|>' → logprob: -12.526640892028809
    10. '.import' → logprob: -12.526640892028809

Token 59: ' product' (ID: 1888)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.19330909848213196
    2. 'per' → logprob: -2.4433090686798096
    3. 'acc' → logprob: -2.9433090686798096
    4. 'pair' → logprob: -4.943309307098389
    5. ' combinations' → logprob: -5.068309307098389
    6. ' permutations' → logprob: -5.068309307098389
    7. '```' → logprob: -5.193309307098389
    8. 'is' → logprob: -5.818309307098389
    9. 'group' → logprob: -6.068309307098389
    10. ' accumulate' → logprob: -6.068309307098389

Token 60: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5298091769218445
    2. ',' → logprob: -1.6548092365264893
    3. 'xy' → logprob: -2.4048092365264893
    4. '(range' → logprob: -2.6548092365264893
    5. '(x' → logprob: -4.40480899810791
    6. '(
' → logprob: -4.65480899810791
    7. 'import' → logprob: -4.90480899810791
    8. 'for' → logprob: -5.27980899810791
    9. '([' → logprob: -5.77980899810791
    10. '(n' → logprob: -6.40480899810791

Token 61: ' is' (ID: 382)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.0136637631803751
    2. 'acc' → logprob: -5.7636637687683105
    3. ' combinations' → logprob: -5.7636637687683105
    4. 'per' → logprob: -6.0136637687683105
    5. 'is' → logprob: -6.5136637687683105
    6. 'chain' → logprob: -6.8886637687683105
    7. '```' → logprob: -7.3886637687683105
    8. 'compress' → logprob: -7.8886637687683105
    9. ' permutations' → logprob: -8.388663291931152
    10. 'filter' → logprob: -8.638663291931152

Token 62: 'lice' (ID: 7321)
  Prédit: 'lice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lice' → logprob: -3.619311974034645e-05
    2. 'f' → logprob: -12.500036239624023
    3. '```' → logprob: -12.500036239624023
    4. 'n' → logprob: -12.750036239624023
    5. 'lices' → logprob: -12.875036239624023
    6. 'ertools' → logprob: -13.000036239624023
    7. 'l' → logprob: -13.000036239624023
    8. '#' → logprob: -13.250036239624023
    9. 'lu' → logprob: -13.500036239624023
    10. 'p' → logprob: -13.500036239624023

Token 63: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1430606842041016
    2. '(' → logprob: -1.7680606842041016
    3. '
' → logprob: -1.7680606842041016
    4. '(
' → logprob: -1.8930606842041016
    5. 'xy' → logprob: -3.0180606842041016
    6. 'import' → logprob: -3.2680606842041016
    7. ',
' → logprob: -4.643060684204102
    8. '

' → logprob: -4.643060684204102
    9. 'for' → logprob: -4.643060684204102
    10. 'def' → logprob: -4.643060684204102

Token 64: ' accumulate' (ID: 74226)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'com' → logprob: -1.0481127500534058
    2. 'cycle' → logprob: -1.6731127500534058
    3. 'acc' → logprob: -1.9231127500534058
    4. 'per' → logprob: -2.1731128692626953
    5. 'take' → logprob: -2.5481128692626953
    6. 'tee' → logprob: -3.7981128692626953
    7. 'chain' → logprob: -4.048112869262695
    8. 'drop' → logprob: -4.173112869262695
    9. 'pair' → logprob: -4.548112869262695
    10. 'zip' → logprob: -4.923112869262695

Token 65: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7835704684257507
    2. '
' → logprob: -1.7835705280303955
    3. '(' → logprob: -1.9085705280303955
    4. 'xy' → logprob: -2.9085705280303955
    5. '(
' → logprob: -3.1585705280303955
    6. ',
' → logprob: -4.158570289611816
    7. 'import' → logprob: -4.658570289611816
    8. '```' → logprob: -4.658570289611816
    9. 'x' → logprob: -5.033570289611816
    10. '  
' → logprob: -5.158570289611816

Token 66: ' chain' (ID: 13464)
  Prédit: 'drop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'drop' → logprob: -1.041360855102539
    2. 'take' → logprob: -1.666360855102539
    3. 'cycle' → logprob: -1.916360855102539
    4. 'chain' → logprob: -2.291360855102539
    5. 'group' → logprob: -2.916360855102539
    6. 'st' → logprob: -3.166360855102539
    7. 'tee' → logprob: -3.541360855102539
    8. 'pair' → logprob: -3.541360855102539
    9. 'com' → logprob: -4.541360855102539
    10. 'filter' → logprob: -4.666360855102539

Token 67: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.683459997177124
    2. ',' → logprob: -1.058459997177124
    3. '(
' → logprob: -2.308459997177124
    4. '(range' → logprob: -4.808460235595703
    5. '
' → logprob: -5.558460235595703
    6. '(chain' → logprob: -5.558460235595703
    7. 'xy' → logprob: -5.933460235595703
    8. '(x' → logprob: -6.058460235595703
    9. ',
' → logprob: -6.058460235595703
    10. 'import' → logprob: -6.183460235595703

Token 68: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6676506400108337
    2. 'for' → logprob: -2.2926506996154785
    3. 'p' → logprob: -3.4176506996154785
    4. 'd' → logprob: -3.5426506996154785
    5. 'xy' → logprob: -3.5426506996154785
    6. 'dp' → logprob: -3.7926506996154785
    7. ')' → logprob: -3.7926506996154785
    8. ',' → logprob: -3.7926506996154785
    9. '```' → logprob: -3.9176506996154785
    10. 'chain' → logprob: -4.0426506996154785

Token 69: ' extract' (ID: 13424)
  Prédit: ' convex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' convex' → logprob: -0.6999523639678955
    2. ' rotating' → logprob: -2.0749523639678955
    3. ' gra' → logprob: -2.1999523639678955
    4. ' cross' → logprob: -2.6999523639678955
    5. ' rotate' → logprob: -3.0749523639678955
    6. ' get' → logprob: -3.6999523639678955
    7. ' find' → logprob: -4.324952125549316
    8. ' calculate' → logprob: -4.324952125549316
    9. ' monot' → logprob: -4.699952125549316
    10. ' polygon' → logprob: -5.074952125549316

Token 70: '(acc' (ID: 82668)
  Prédit: '_points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_points' → logprob: -0.25292322039604187
    2. '_coordinates' → logprob: -3.6279232501983643
    3. '_vertices' → logprob: -3.6279232501983643
    4. '_' → logprob: -3.8779232501983643
    5. '(' → logprob: -4.002923011779785
    6. '_segments' → logprob: -4.252923011779785
    7. '_sub' → logprob: -4.627923011779785
    8. '_ranges' → logprob: -4.877923011779785
    9. '_subset' → logprob: -5.127923011779785
    10. '_coords' → logprob: -5.377923011779785

Token 71: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.45710623264312744
    2. 'umulator' → logprob: -1.4571062326431274
    3. 'um' → logprob: -2.457106113433838
    4. '):' → logprob: -4.082106113433838
    5. 'umul' → logprob: -4.207106113433838
    6. 'umulate' → logprob: -4.832106113433838
    7. '):
' → logprob: -6.457106113433838
    8. 's' → logprob: -7.332106113433838
    9. ',x' → logprob: -7.457106113433838
    10. ',e' → logprob: -7.832106113433838

Token 72: ' i' (ID: 575)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.34118062257766724
    2. ' x' → logprob: -2.7161805629730225
    3. 'z' → logprob: -3.4661805629730225
    4. 'p' → logprob: -3.4661805629730225
    5. 'v' → logprob: -3.7161805629730225
    6. 'xy' → logprob: -3.9661805629730225
    7. 'c' → logprob: -4.591180801391602
    8. 'val' → logprob: -4.841180801391602
    9. 'point' → logprob: -4.841180801391602
    10. 'curr' → logprob: -4.841180801391602

Token 73: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.23569093644618988
    2. '):
' → logprob: -1.610690951347351
    3. 'x' → logprob: -4.985691070556641
    4. '):
' → logprob: -6.860691070556641
    5. 'dx' → logprob: -6.985691070556641
    6. ',' → logprob: -7.360691070556641
    7. 'nd' → logprob: -7.985691070556641
    8. 'ex' → logprob: -8.98569107055664
    9. '):

' → logprob: -8.98569107055664
    10. 's' → logprob: -10.11069107055664

Token 74: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.5952986478805542
    2. 'x' → logprob: -1.7202986478805542
    3. 'xy' → logprob: -1.9702986478805542
    4. ' j' → logprob: -2.5952987670898438
    5. ' xy' → logprob: -2.5952987670898438
    6. ' x' → logprob: -3.0952987670898438
    7. 'v' → logprob: -3.5952987670898438
    8. ' points' → logprob: -3.7202987670898438
    9. 'k' → logprob: -4.345298767089844
    10. 'n' → logprob: -4.407798767089844

Token 75: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.11334110051393509
    2. ',' → logprob: -2.2383410930633545
    3. '):
' → logprob: -8.363341331481934
    4. ')' → logprob: -8.988341331481934
    5. ' ):' → logprob: -9.238341331481934
    6. ' ,' → logprob: -10.738341331481934
    7. '=' → logprob: -11.988341331481934
    8. ':' → logprob: -11.988341331481934
    9. '):
' → logprob: -12.363341331481934
    10. ' ' → logprob: -12.738341331481934

Token 76: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5094034671783447
    2. ',' → logprob: -1.1344034671783447
    3. '):' → logprob: -2.7594034671783447
    4. '   ' → logprob: -4.509403228759766
    5. '<|end|>' → logprob: -7.134403228759766
    6. ' :' → logprob: -7.259403228759766
    7. ':return' → logprob: -8.259403228759766
    8. ' =' → logprob: -8.509403228759766
    9. '=' → logprob: -8.634403228759766
    10. '):
' → logprob: -8.759403228759766

Token 77: ' seq' (ID: 26775)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6642559766769409
    2. ' x' → logprob: -2.1642560958862305
    3. '    ' → logprob: -2.6642560958862305
    4. ' acc' → logprob: -3.0392560958862305
    5. ' if' → logprob: -3.2892560958862305
    6. ' return' → logprob: -3.5392560958862305
    7. ' ' → logprob: -3.6642560958862305
    8. ' (' → logprob: -3.7892560958862305
    9. ' xy' → logprob: -3.9142560958862305
    10. ')' → logprob: -4.4142560958862305

Token 78: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8054564595222473
    2. ' =' → logprob: -1.0554563999176025
    3. ',' → logprob: -1.6804563999176025
    4. 'u' → logprob: -5.055456638336182
    5. '   ' → logprob: -5.305456638336182
    6. ' ' → logprob: -6.805456638336182
    7. ')' → logprob: -7.055456638336182
    8. 'ue' → logprob: -7.305456638336182
    9. '  ' → logprob: -7.430456638336182
    10. '=[]' → logprob: -7.930456638336182

Token 79: ' acc' (ID: 1259)
  Prédit: 'xy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'xy' → logprob: -0.3767383396625519
    2. 'list' → logprob: -1.8767383098602295
    3. 'chain' → logprob: -3.2517383098602295
    4. ' xy' → logprob: -3.3767383098602295
    5. '[' → logprob: -3.5017383098602295
    6. ' list' → logprob: -3.8767383098602295
    7. 'acc' → logprob: -4.626738548278809
    8. 'is' → logprob: -4.876738548278809
    9. '[x' → logprob: -5.376738548278809
    10. ' [' → logprob: -5.626738548278809

Token 80: '[j' (ID: 7895)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.5748719573020935
    2. '+' → logprob: -1.3248720169067383
    3. ' +' → logprob: -2.5748720169067383
    4. '[' → logprob: -3.4498720169067383
    5. '[-' → logprob: -4.074872016906738
    6. '+[' → logprob: -4.324872016906738
    7. '[j' → logprob: -4.574872016906738
    8. '[:]' → logprob: -4.699872016906738
    9. '[:' → logprob: -5.199872016906738
    10. '+i' → logprob: -5.574872016906738

Token 81: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.10132468491792679
    2. '+' → logprob: -3.7263247966766357
    3. ':' → logprob: -3.8513247966766357
    4. ':i' → logprob: -3.8513247966766357
    5. ']-' → logprob: -4.351324558258057
    6. ':]' → logprob: -5.226324558258057
    7. ']+' → logprob: -5.976324558258057
    8. ':j' → logprob: -5.976324558258057
    9. '-' → logprob: -6.351324558258057
    10. ' ]' → logprob: -6.976324558258057

Token 82: ' if' (ID: 538)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.4235929250717163
    2. ':i' → logprob: -2.173593044281006
    3. ':' → logprob: -2.673593044281006
    4. '[' → logprob: -3.173593044281006
    5. '-' → logprob: -3.173593044281006
    6. '[j' → logprob: -3.548593044281006
    7. ':j' → logprob: -3.923593044281006
    8. '+' → logprob: -4.298593044281006
    9. '-i' → logprob: -5.423593044281006
    10. ' -' → logprob: -5.548593044281006

Token 83: ' i' (ID: 575)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.805269718170166
    2. ' j' → logprob: -1.305269718170166
    3. ' i' → logprob: -1.805269718170166
    4. 'i' → logprob: -2.180269718170166
    5. ' isinstance' → logprob: -6.430269718170166
    6. 'len' → logprob: -7.305269718170166
    7. ' len' → logprob: -7.305269718170166
    8. ' ' → logprob: -7.555269718170166
    9. '  ' → logprob: -8.180269241333008
    10. ' not' → logprob: -8.805269241333008

Token 84: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -1.3745428323745728
    2. ' <' → logprob: -1.6245428323745728
    3. '<=' → logprob: -1.6245428323745728
    4. '<' → logprob: -2.124542713165283
    5. ' <=' → logprob: -2.499542713165283
    6. ' ==' → logprob: -2.874542713165283
    7. '>' → logprob: -3.624542713165283
    8. ' >' → logprob: -4.374542713165283
    9. '!=' → logprob: -4.499542713165283
    10. ' ' → logprob: -4.499542713165283

Token 85: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6446278095245361
    2. 'j' → logprob: -0.7696278095245361
    3. '-' → logprob: -4.769627571105957
    4. '   ' → logprob: -7.019627571105957
    5. 'n' → logprob: -7.269627571105957
    6. '1' → logprob: -7.394627571105957
    7. ' ' → logprob: -7.519627571105957
    8. 'len' → logprob: -8.894627571105957
    9. ' j' → logprob: -9.144627571105957
    10. '2' → logprob: -9.644627571105957

Token 86: '0' (ID: 15)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.5791365504264832
    2. '0' → logprob: -0.8291365504264832
    3. '1' → logprob: -6.579136371612549
    4. ' ' → logprob: -7.454136371612549
    5. '-' → logprob: -7.579136371612549
    6. ' j' → logprob: -8.079136848449707
    7. 'i' → logprob: -8.829136848449707
    8. '   ' → logprob: -9.329136848449707
    9. 'n' → logprob: -10.829136848449707
    10. '2' → logprob: -11.141636848449707

Token 87: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.6341767907142639
    2. 'else' → logprob: -0.7591767907142639
    3. '[' → logprob: -8.134177207946777
    4. ' if' → logprob: -8.634177207946777
    5. '[i' → logprob: -8.634177207946777
    6. '[]' → logprob: -8.884177207946777
    7. ' ' → logprob: -9.009177207946777
    8. '[:]' → logprob: -9.134177207946777
    9. '[j' → logprob: -9.259177207946777
    10. 'if' → logprob: -9.509177207946777

Token 88: ' acc' (ID: 1259)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.09737426787614822
    2. 'list' → logprob: -3.222374200820923
    3. 'chain' → logprob: -3.222374200820923
    4. '[' → logprob: -5.347374439239502
    5. ' acc' → logprob: -6.097374439239502
    6. '(acc' → logprob: -6.097374439239502
    7. ' list' → logprob: -7.347374439239502
    8. '(chain' → logprob: -7.847374439239502
    9. '[j' → logprob: -8.222373962402344
    10. 'xy' → logprob: -8.222373962402344

Token 89: '[j' (ID: 7895)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.38690268993377686
    2. '[j' → logprob: -1.1369026899337769
    3. '[-' → logprob: -11.511902809143066
    4. '[' → logprob: -11.511902809143066
    5. 'j' → logprob: -12.261902809143066
    6. 'i' → logprob: -13.261902809143066
    7. '   ' → logprob: -13.761902809143066
    8. '[:]' → logprob: -14.511902809143066
    9. '```' → logprob: -14.761902809143066
    10. '[
' → logprob: -14.761902809143066

Token 90: ']' (ID: 60)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.8728060126304626
    2. ']' → logprob: -1.2478060722351074
    3. '-' → logprob: -1.6228060722351074
    4. '][:' → logprob: -2.4978060722351074
    5. ']-' → logprob: -4.747806072235107
    6. '][-' → logprob: -6.747806072235107
    7. ']+' → logprob: -6.872806072235107
    8. '[i' → logprob: -6.997806072235107
    9. '])' → logprob: -7.622806072235107
    10. ' -' → logprob: -7.622806072235107

Token 91: ' -' (ID: 533)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.24733519554138184
    2. '-' → logprob: -1.8723351955413818
    3. ' +' → logprob: -3.247335195541382
    4. ' -' → logprob: -4.247335433959961
    5. '[j' → logprob: -5.747335433959961
    6. '+j' → logprob: -5.747335433959961
    7. '+i' → logprob: -6.622335433959961
    8. '|' → logprob: -6.747335433959961
    9. '[' → logprob: -6.872335433959961
    10. '[i' → logprob: -7.122335433959961

Token 92: ' acc' (ID: 1259)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.08899181336164474
    2. ' acc' → logprob: -2.46399188041687
    3. '	acc' → logprob: -10.96399211883545
    4. ' ' → logprob: -11.21399211883545
    5. '(acc' → logprob: -12.08899211883545
    6. 'chain' → logprob: -12.58899211883545
    7. ' accu' → logprob: -12.58899211883545
    8. '  ' → logprob: -13.08899211883545
    9. 'ac' → logprob: -13.21399211883545
    10. 'acce' → logprob: -13.21399211883545

Token 93: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.8828707804204896e-05
    2. '[j' → logprob: -10.500048637390137
    3. 'i' → logprob: -10.875048637390137
    4. '[' → logprob: -13.250048637390137
    5. '[
' → logprob: -16.000049591064453
    6. 'j' → logprob: -16.375049591064453
    7. ' i' → logprob: -16.875049591064453
    8. '{i' → logprob: -16.875049591064453
    9. '```' → logprob: -17.375049591064453
    10. '
' → logprob: -17.500049591064453

Token 94: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.004289711359888315
    2. '1' → logprob: -5.629289627075195
    3. ' -' → logprob: -8.004289627075195
    4. ']' → logprob: -8.629289627075195
    5. '])' → logprob: -8.754289627075195
    6. ')' → logprob: -11.629289627075195
    7. ' ' → logprob: -12.754289627075195
    8. '0' → logprob: -12.879289627075195
    9. '```' → logprob: -13.754289627075195
    10. '−' → logprob: -14.254289627075195

Token 95: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.774276774493046e-05
    2. ' ' → logprob: -10.375038146972656
    3. ']' → logprob: -12.500038146972656
    4. '<|end|>' → logprob: -13.500038146972656
    5. '```' → logprob: -15.000038146972656
    6. '<|end|>' → logprob: -15.125038146972656
    7. '   ' → logprob: -15.500038146972656
    8. 'token' → logprob: -15.687538146972656
    9. '  ' → logprob: -16.500038146972656
    10. '    ' → logprob: -16.687538146972656

Token 96: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.24011807143688202
    2. ']' → logprob: -1.6151180267333984
    3. '])' → logprob: -4.490118026733398
    4. '<|end|>' → logprob: -5.865118026733398
    5. ')
' → logprob: -8.990118026733398
    6. '   ' → logprob: -9.365118026733398
    7. ')]' → logprob: -9.490118026733398
    8. ')return' → logprob: -10.115118026733398
    9. '<|end|>' → logprob: -10.615118026733398
    10. '[j' → logprob: -10.740118026733398

Token 97: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0000989437103271
    2. ')' → logprob: -1.5000989437103271
    3. '<|end|>' → logprob: -1.5000989437103271
    4. ' ' → logprob: -2.250098943710327
    5. '
' → logprob: -3.125098943710327
    6. '\n' → logprob: -5.250099182128906
    7. ')
' → logprob: -5.750099182128906
    8. '    
' → logprob: -5.750099182128906
    9. '[' → logprob: -6.000099182128906
    10. '    ' → logprob: -6.000099182128906

Token 98: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3119392991065979
    2. ' return' → logprob: -2.186939239501953
    3. '<|end|>' → logprob: -2.936939239501953
    4. ' ' → logprob: -3.186939239501953
    5. 'return' (adapté à ' return') → logprob: -3.936939239501953
    6. ')' → logprob: -4.311939239501953
    7. ' 
' → logprob: -4.936939239501953
    8. '  
' → logprob: -5.686939239501953
    9. '    
' → logprob: -6.061939239501953
    10. '	return' → logprob: -6.186939239501953

Token 99: ' seq' (ID: 26775)
  Prédit: 'seq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seq' → logprob: -0.39035388827323914
    2. ' seq' → logprob: -1.2653539180755615
    3. 'abs' → logprob: -3.8903539180755615
    4. ' abs' → logprob: -4.390353679656982
    5. '(seq' → logprob: -5.015353679656982
    6. 'complex' → logprob: -7.515353679656982
    7. ' complex' → logprob: -7.890353679656982
    8. '(abs' → logprob: -8.89035415649414
    9. ' (' → logprob: -9.01535415649414
    10. 'sum' → logprob: -9.64035415649414

Token 100: '

' (ID: 279)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2516663074493408
    2. '<|end|>' → logprob: -1.3766663074493408
    3. '
' → logprob: -2.376666307449341
    4. '(' → logprob: -2.376666307449341
    5. '*' → logprob: -2.501666307449341
    6. '[
' → logprob: -2.876666307449341
    7. ')' → logprob: -3.126666307449341
    8. ',' → logprob: -4.126666069030762
    9. '(
' → logprob: -4.376666069030762
    10. '+' → logprob: -4.501666069030762

Token 101: '#' (ID: 2)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.137880802154541
    2. ')' → logprob: -1.137880802154541
    3. '<|end|>' → logprob: -2.137880802154541
    4. '.' → logprob: -2.387880802154541
    5. '[' → logprob: -2.512880802154541
    6. '
' → logprob: -3.762880802154541
    7. '(
' → logprob: -4.262880802154541
    8. ',' → logprob: -4.637880802154541
    9. '_' → logprob: -5.512880802154541
    10. '+' → logprob: -6.012880802154541

Token 102: ' Build' (ID: 10885)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.155403271317482
    2. 'def' → logprob: -3.7804033756256104
    3. ')' → logprob: -3.9054033756256104
    4. 'd' → logprob: -4.030403137207031
    5. '(' → logprob: -4.280403137207031
    6. 'x' → logprob: -4.655403137207031
    7. 'for' → logprob: -4.655403137207031
    8. 'n' → logprob: -4.780403137207031
    9. '_' → logprob: -4.780403137207031
    10. 'i' → logprob: -5.155403137207031

Token 103: ' prefix' (ID: 18633)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.4140133261680603
    2. ' acc' → logprob: -1.289013385772705
    3. 'prefix' → logprob: -3.664013385772705
    4. ' prefix' → logprob: -3.914013385772705
    5. 's' → logprob: -5.664013385772705
    6. ' the' → logprob: -5.789013385772705
    7. ' accum' → logprob: -6.289013385772705
    8. 'ac' → logprob: -7.289013385772705
    9. 'x' → logprob: -7.414013385772705
    10. '#' → logprob: -7.539013385772705

Token 104: ' sums' (ID: 73121)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.05265779793262482
    2. 'sum' → logprob: -3.4276578426361084
    3. 'acc' → logprob: -4.052657604217529
    4. ' sums' → logprob: -7.177657604217529
    5. '_s' → logprob: -7.552657604217529
    6. '_acc' → logprob: -10.052658081054688
    7. 'summ' → logprob: -10.552658081054688
    8. 'prefix' → logprob: -10.927658081054688
    9. '_sum' → logprob: -10.927658081054688
    10. '_' → logprob: -11.302658081054688

Token 105: ' for' (ID: 395)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.8074178695678711
    2. 'acc' → logprob: -0.9324178695678711
    3. 'xy' → logprob: -2.432417869567871
    4. 's' → logprob: -4.057417869567871
    5. 'ps' → logprob: -4.057417869567871
    6. 'psum' → logprob: -4.807417869567871
    7. 'pref' → logprob: -4.807417869567871
    8. 'pre' → logprob: -4.932417869567871
    9. 'x' → logprob: -5.682417869567871
    10. 'px' → logprob: -5.932417869567871

Token 106: ' O' (ID: 532)
  Prédit: 'xy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'xy' → logprob: -0.005482164211571217
    2. '[' → logprob: -5.630482196807861
    3. ' xy' → logprob: -7.880482196807861
    4. 'real' → logprob: -8.005481719970703
    5. 'complex' → logprob: -8.380481719970703
    6. 'chain' → logprob: -8.505481719970703
    7. '[x' → logprob: -8.755481719970703
    8. 'x' → logprob: -9.130481719970703
    9. 'range' → logprob: -9.505481719970703
    10. 'list' → logprob: -9.630481719970703

Token 107: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8535019755363464
    2. '(n' → logprob: -0.9785019755363464
    3. 'n' → logprob: -1.7285020351409912
    4. 'ur' → logprob: -5.853501796722412
    5. 'range' → logprob: -5.853501796722412
    6. 'N' → logprob: -6.103501796722412
    7. '1' → logprob: -6.353501796722412
    8. '(N' → logprob: -6.353501796722412
    9. 'xy' → logprob: -6.853501796722412
    10. 'ne' → logprob: -7.228501796722412

Token 108: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.18927980959415436
    2. 'n' → logprob: -1.8142797946929932
    3. '(' → logprob: -4.939280033111572
    4. '(n' → logprob: -6.189280033111572
    5. 'log' → logprob: -9.064279556274414
    6. 'N' → logprob: -9.189279556274414
    7. ')' → logprob: -10.814279556274414
    8. ')n' → logprob: -11.689279556274414
    9. '(N' → logprob: -12.314279556274414
    10. ' n' → logprob: -12.314279556274414

Token 109: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12232452630996704
    2. ' queries' → logprob: -2.9973244667053223
    3. ' access' → logprob: -3.2473244667053223
    4. ' sequence' → logprob: -5.247324466705322
    5. ' range' → logprob: -5.622324466705322
    6. ' retrieval' → logprob: -5.997324466705322
    7. 'sequence' → logprob: -6.247324466705322
    8. ' subse' → logprob: -6.497324466705322
    9. 'access' → logprob: -6.747324466705322
    10. 'time' → logprob: -6.747324466705322

Token 110: ' sub' (ID: 1543)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.8192206025123596
    2. 'prefix' → logprob: -1.0692205429077148
    3. 'xy' → logprob: -2.194220542907715
    4. 's' → logprob: -2.819220542907715
    5. 'x' → logprob: -3.944220542907715
    6. ' prefix' → logprob: -4.944220542907715
    7. 'range' → logprob: -5.569220542907715
    8. 'sum' → logprob: -6.569220542907715
    9. 'def' → logprob: -6.569220542907715
    10. 'xs' → logprob: -6.819220542907715

Token 111: 'array' (ID: 3361)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -0.16527970135211945
    2. 'array' → logprob: -2.0402796268463135
    3. 'sum' → logprob: -4.540279865264893
    4. 'range' → logprob: -5.540279865264893
    5. 's' → logprob: -6.540279865264893
    6. 'arrays' → logprob: -6.790279865264893
    7. 'list' → logprob: -6.915279865264893
    8. 'quence' → logprob: -7.415279865264893
    9. 'traction' → logprob: -7.540279865264893
    10. ' sequence' → logprob: -7.915279865264893

Token 112: ' sum' (ID: 4215)
  Prédit: 'xy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'xy' → logprob: -0.8906959295272827
    2. 's' → logprob: -1.0156959295272827
    3. 'acc' → logprob: -1.6406959295272827
    4. 'x' → logprob: -4.890696048736572
    5. 'prefix' → logprob: -4.890696048736572
    6. 'sum' → logprob: -5.140696048736572
    7. 'xs' → logprob: -6.140696048736572
    8. ' sums' → logprob: -6.265696048736572
    9. 'psum' → logprob: -7.015696048736572
    10. 'cum' → logprob: -7.515696048736572

Token 113: ' computation' (ID: 76411)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.7973864674568176
    2. 'prefix' → logprob: -1.9223864078521729
    3. 's' → logprob: -2.547386407852173
    4. 'xy' → logprob: -2.672386407852173
    5. 'acc' → logprob: -2.797386407852173
    6. 'px' → logprob: -3.047386407852173
    7. 'xs' → logprob: -3.422386407852173
    8. 'ps' → logprob: -4.047386646270752
    9. 'real' → logprob: -4.047386646270752
    10. 'psum' → logprob: -4.047386646270752

Token 114: '
' (ID: 198)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.15634292364120483
    2. 'prefix' → logprob: -2.4063429832458496
    3. 'pref' → logprob: -4.28134298324585
    4. 'xy' → logprob: -4.78134298324585
    5. 'ps' → logprob: -5.03134298324585
    6. 'psum' → logprob: -5.15634298324585
    7. 'x' → logprob: -5.65634298324585
    8. 's' → logprob: -5.65634298324585
    9. 'ac' → logprob: -5.65634298324585
    10. 'pre' → logprob: -6.03134298324585

Token 115: 'prefix' (ID: 26155)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -1.1629221439361572
    2. 'prefix' → logprob: -1.4129221439361572
    3. 'x' → logprob: -1.7879221439361572
    4. 'psum' → logprob: -2.6629221439361572
    5. 's' → logprob: -3.2879221439361572
    6. 'ps' → logprob: -3.5379221439361572
    7. 'pref' → logprob: -3.5379221439361572
    8. 'xy' → logprob: -3.6629221439361572
    9. 'xs' → logprob: -3.7879221439361572
    10. 'px' → logprob: -4.912921905517578

Token 116: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.761809229850769
    2. 's' → logprob: -0.886809229850769
    3. '=' → logprob: -2.3868093490600586
    4. '_s' → logprob: -3.6368093490600586
    5. '_sum' → logprob: -6.261809349060059
    6. '_' → logprob: -8.011809349060059
    7. 'sum' → logprob: -8.261809349060059
    8. '=s' → logprob: -8.636809349060059
    9. '=sum' → logprob: -9.136809349060059
    10. '_x' → logprob: -9.886809349060059

Token 117: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.025712696835398674
    2. ' list' → logprob: -3.775712728500366
    3. '[list' → logprob: -6.650712490081787
    4. '[' → logprob: -7.150712490081787
    5. 'acc' → logprob: -8.275712966918945
    6. ' [' → logprob: -9.150712966918945
    7. '(list' → logprob: -11.275712966918945
    8. '=list' → logprob: -12.150712966918945
    9. '	list' → logprob: -13.650712966918945
    10. '[x' → logprob: -13.900712966918945

Token 118: '(acc' (ID: 82668)
  Prédit: '(acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(acc' → logprob: -5.5027299822540954e-05
    2. 'acc' → logprob: -10.625055313110352
    3. '(ac' → logprob: -10.750055313110352
    4. '(' → logprob: -11.750055313110352
    5. '(is' → logprob: -14.125055313110352
    6. '	acc' → logprob: -15.500055313110352
    7. '(chain' → logprob: -15.750055313110352
    8. '(it' → logprob: -16.50005531311035
    9. ' accumulate' → logprob: -16.62505531311035
    10. '.acc' → logprob: -17.50005531311035

Token 119: 'umulate' (ID: 134636)
  Prédit: 'umulate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umulate' → logprob: -0.006818377412855625
    2. 'um' → logprob: -5.6318182945251465
    3. 'ulate' → logprob: -5.7568182945251465
    4. 'ul' → logprob: -11.131818771362305
    5. 'om' → logprob: -11.381818771362305
    6. 'umul' → logprob: -11.631818771362305
    7. 'uate' → logprob: -12.631818771362305
    8. 'ulum' → logprob: -13.256818771362305
    9. '(acc' → logprob: -13.381818771362305
    10. '[' → logprob: -13.381818771362305

Token 120: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -6.44443862256594e-05
    2. '(' → logprob: -10.500064849853516
    3. '(map' → logprob: -11.125064849853516
    4. 'xy' → logprob: -11.750064849853516
    5. '([' → logprob: -12.375064849853516
    6. '(chain' → logprob: -12.875064849853516
    7. '(add' → logprob: -13.000064849853516
    8. '((' → logprob: -13.500064849853516
    9. ')' → logprob: -13.750064849853516
    10. '(
' → logprob: -14.750064849853516

Token 121: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -5.080963092041202e-06
    2. '(y' → logprob: -13.125004768371582
    3. 'xy' → logprob: -14.625004768371582
    4. '=' → logprob: -14.750004768371582
    5. ')' → logprob: -15.000004768371582
    6. 'y's' → logprob: -15.250004768371582
    7. 'Y' → logprob: -15.375004768371582
    8. '
' → logprob: -15.750004768371582
    9. ' y' → logprob: -15.750004768371582
    10. 'v' → logprob: -15.750004768371582

Token 122: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002660435391589999
    2. '))' → logprob: -6.002660274505615
    3. ' ,' → logprob: -9.377660751342773
    4. ',key' → logprob: -9.877660751342773
    5. '[' → logprob: -11.127660751342773
    6. ')))' → logprob: -11.752660751342773
    7. 's' → logprob: -12.002660751342773
    8. '+' → logprob: -13.252660751342773
    9. '),' → logprob: -13.377660751342773
    10. ',
' → logprob: -13.377660751342773

Token 123: ' add' (ID: 1147)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.0008255873690359294
    2. ' add' → logprob: -7.37582540512085
    3. 'lambda' → logprob: -8.750825881958008
    4. 'complex' → logprob: -11.250825881958008
    5. ')add' → logprob: -11.750825881958008
    6. ')' → logprob: -12.250825881958008
    7. 'operator' → logprob: -12.375825881958008
    8. '+' → logprob: -13.000825881958008
    9. ' lambda' → logprob: -13.125825881958008
    10. 'adder' → logprob: -13.250825881958008

Token 124: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00010866894444916397
    2. ',' → logprob: -10.00010871887207
    3. ')))' → logprob: -10.37510871887207
    4. '))
' → logprob: -10.87510871887207
    5. ')' → logprob: -12.25010871887207
    6. '))

' → logprob: -12.75010871887207
    7. ' ))' → logprob: -13.00010871887207
    8. '()))' → logprob: -13.87510871887207
    9. '));' → logprob: -14.62510871887207
    10. '__))' → logprob: -15.62510871887207

Token 125: 'f' (ID: 69)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05005309358239174
    2. '<|end|>' → logprob: -4.175053119659424
    3. 'def' → logprob: -4.925053119659424
    4. '+' → logprob: -5.425053119659424
    5. ',' → logprob: -5.675053119659424
    6. '*' → logprob: -5.925053119659424
    7. 'for' → logprob: -6.175053119659424
    8. '#' → logprob: -6.550053119659424
    9. 'n' → logprob: -6.550053119659424
    10. '
' → logprob: -6.550053119659424

Token 126: ' =' (ID: 314)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.16000483930110931
    2. 'rom' → logprob: -2.4100048542022705
    3. 'def' → logprob: -4.160004615783691
    4. 'ar' → logprob: -4.910004615783691
    5. 'inal' → logprob: -5.035004615783691
    6. 'max' → logprob: -5.160004615783691
    7. 'ur' → logprob: -5.410004615783691
    8. 'arth' → logprob: -5.910004615783691
    9. ' =' → logprob: -6.285004615783691
    10. 'irst' → logprob: -6.285004615783691

Token 127: ' lambda' (ID: 27871)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.786652147769928
    2. '0' → logprob: -1.2866520881652832
    3. 'float' → logprob: -2.411652088165283
    4. 'lambda' → logprob: -2.411652088165283
    5. '[]' → logprob: -3.911652088165283
    6. 'complex' → logprob: -4.411652088165283
    7. '[n' → logprob: -4.411652088165283
    8. '[-' → logprob: -4.536652088165283
    9. '(lambda' → logprob: -4.661652088165283
    10. '[int' → logprob: -5.286652088165283

Token 128: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -1.0988152027130127
    2. ' x' → logprob: -1.3488152027130127
    3. 'x' → logprob: -2.0988152027130127
    4. 'i' → logprob: -2.0988152027130127
    5. ' z' → logprob: -3.8488152027130127
    6. ' t' → logprob: -4.098814964294434
    7. ' k' → logprob: -4.098814964294434
    8. 'k' → logprob: -4.348814964294434
    9. ' s' → logprob: -4.473814964294434
    10. ' (' → logprob: -4.723814964294434

Token 129: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01917923241853714
    2. ',j' → logprob: -4.894179344177246
    3. 'j' → logprob: -5.144179344177246
    4. ':' → logprob: -5.394179344177246
    5. ',i' → logprob: -7.519179344177246
    6. 'i' → logprob: -9.019179344177246
    7. ' j' → logprob: -9.144179344177246
    8. ',:' → logprob: -9.144179344177246
    9. 'x' → logprob: -9.269179344177246
    10. ' ,' → logprob: -10.519179344177246

Token 130: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.01692916825413704
    2. ' j' → logprob: -4.2669291496276855
    3. 'n' → logprob: -7.1419291496276855
    4. 'x' → logprob: -7.1419291496276855
    5. 'k' → logprob: -7.2669291496276855
    6. ':' → logprob: -9.391929626464844
    7. 'N' → logprob: -9.641929626464844
    8. 'i' → logprob: -9.891929626464844
    9. '   ' → logprob: -10.516929626464844
    10. ' n' → logprob: -10.579429626464844

Token 131: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -6.217951886355877e-05
    2. ' :' → logprob: -9.875061988830566
    3. ',' → logprob: -12.500061988830566
    4. ':f' → logprob: -13.500061988830566
    5. ':i' → logprob: -13.500061988830566
    6. ':return' → logprob: -14.000061988830566
    7. '=' → logprob: -14.375061988830566
    8. ':not' → logprob: -15.000061988830566
    9. ',:' → logprob: -15.250061988830566
    10. ':add' → logprob: -15.500061988830566

Token 132: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.31633245944976807
    2. 'extract' → logprob: -2.3163323402404785
    3. '(abs' → logprob: -2.8163323402404785
    4. 'prefix' → logprob: -2.9413323402404785
    5. ' abs' → logprob: -3.6913323402404785
    6. ' extract' → logprob: -4.8163323402404785
    7. '(prefix' → logprob: -5.0663323402404785
    8. '   ' → logprob: -5.6913323402404785
    9. ' prefix' → logprob: -5.9413323402404785
    10. 'max' → logprob: -6.0663323402404785

Token 133: '(prefix' (ID: 59324)
  Prédit: '(ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ex' → logprob: -0.023483753204345703
    2. '(x' → logprob: -4.398483753204346
    3. '(prefix' → logprob: -5.023483753204346
    4. '(' → logprob: -5.523483753204346
    5. 'extract' → logprob: -8.148483276367188
    6. '((' → logprob: -11.398483276367188
    7. '(chain' → logprob: -11.523483276367188
    8. '(
' → logprob: -11.898483276367188
    9. '(com' → logprob: -12.523483276367188
    10. 'prefix' → logprob: -12.898483276367188

Token 134: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -9.93710636976175e-05
    2. 'j' → logprob: -9.375099182128906
    3. '[' → logprob: -11.875099182128906
    4. '[i' → logprob: -12.250099182128906
    5. '[min' → logprob: -14.375099182128906
    6. ',j' → logprob: -15.000099182128906
    7. ' j' → logprob: -15.375099182128906
    8. '[-' → logprob: -15.375099182128906
    9. '[f' → logprob: -15.500099182128906
    10. '[max' → logprob: -15.625099182128906

Token 135: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.015172933228313923
    2. ']-' → logprob: -4.265172958374023
    3. '-' → logprob: -7.765172958374023
    4. '])' → logprob: -8.140172958374023
    5. ' ]' → logprob: -9.265172958374023
    6. ')' → logprob: -9.515172958374023
    7. '].' → logprob: -10.265172958374023
    8. ' -' → logprob: -11.265172958374023
    9. ']
' → logprob: -11.265172958374023
    10. '])-' → logprob: -11.390172958374023

Token 136: ' if' (ID: 538)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.4742429852485657
    2. ' -' → logprob: -0.9742429852485657
    3. ')' → logprob: -9.7242431640625
    4. '-prefix' → logprob: -9.7242431640625
    5. ' if' → logprob: -11.8492431640625
    6. '   ' → logprob: -11.9742431640625
    7. '-if' → logprob: -12.4742431640625
    8. '-i' → logprob: -12.5992431640625
    9. ' ' → logprob: -12.5992431640625
    10. '+' → logprob: -12.7242431640625

Token 137: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.014187601394951344
    2. ' i' → logprob: -4.264187812805176
    3. '(i' → logprob: -11.514187812805176
    4. 'j' → logprob: -12.389187812805176
    5. 'not' → logprob: -12.764187812805176
    6. '0' → logprob: -13.389187812805176
    7. ' not' → logprob: -13.514187812805176
    8. ' ' → logprob: -13.639187812805176
    9. '   ' → logprob: -14.014187812805176
    10. ' ' → logprob: -14.514187812805176

Token 138: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.04305902495980263
    2. ' ==' → logprob: -3.1680591106414795
    3. '0' → logprob: -10.918059349060059
    4. '=' → logprob: -10.918059349060059
    5. ' ' → logprob: -11.543059349060059
    6. '[' → logprob: -12.668059349060059
    7. '==
' → logprob: -12.668059349060059
    8. ')' → logprob: -13.043059349060059
    9. '```' → logprob: -13.918059349060059
    10. '>' → logprob: -14.293059349060059

Token 139: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009130131802521646
    2. ' ' → logprob: -7.000913143157959
    3. '   ' → logprob: -14.5009126663208
    4. 'i' → logprob: -15.5009126663208
    5. '
' → logprob: -15.8759126663208
    6. 'j' → logprob: -16.125913619995117
    7. '  ' → logprob: -16.438413619995117
    8. '...' → logprob: -16.625913619995117
    9. '[' → logprob: -17.000913619995117
    10. '```' → logprob: -17.000913619995117

Token 140: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.813969957875088e-05
    2. ' ' → logprob: -9.625067710876465
    3. 'i' → logprob: -14.125067710876465
    4. '   ' → logprob: -15.375067710876465
    5. 'j' → logprob: -15.625067710876465
    6. '<|end|>' → logprob: -16.00006866455078
    7. '...' → logprob: -16.18756866455078
    8. '۰' → logprob: -16.56256866455078
    9. '[' → logprob: -16.62506866455078
    10. '```' → logprob: -16.81256866455078

Token 141: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.43250831961631775
    2. ' else' → logprob: -1.0575083494186401
    3. '-' → logprob: -5.93250846862793
    4. ' -' → logprob: -7.05750846862793
    5. ')' → logprob: -8.55750846862793
    6. ' ' → logprob: -10.68250846862793
    7. '	else' → logprob: -11.05750846862793
    8. '```' → logprob: -11.43250846862793
    9. '[j' → logprob: -11.43250846862793
    10. ' ' → logprob: -11.68250846862793

Token 142: ' prefix' (ID: 18633)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.05694258585572243
    2. ' prefix' → logprob: -3.0569427013397217
    3. 'complex' → logprob: -5.931942462921143
    4. 'add' → logprob: -6.056942462921143
    5. '(prefix' → logprob: -6.556942462921143
    6. 'abs' → logprob: -7.431942462921143
    7. ' complex' → logprob: -7.431942462921143
    8. ' add' → logprob: -8.3069429397583
    9. 'subtract' → logprob: -8.4319429397583
    10. ' ' → logprob: -9.6819429397583

Token 143: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.2233183042553719e-05
    2. 'j' → logprob: -11.500012397766113
    3. '[i' → logprob: -13.500012397766113
    4. '[' → logprob: -15.125012397766113
    5. '(j' → logprob: -15.750012397766113
    6. '
' → logprob: -16.625011444091797
    7. '[n' → logprob: -17.250011444091797
    8. '```' → logprob: -18.125011444091797
    9. '[f' → logprob: -18.375011444091797
    10. ' j' → logprob: -18.375011444091797

Token 144: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01624773070216179
    2. ']-' → logprob: -4.141247749328613
    3. '-' → logprob: -8.516247749328613
    4. ' -' → logprob: -12.391247749328613
    5. ' ]' → logprob: -13.266247749328613
    6. '].' → logprob: -13.641247749328613
    7. ']
' → logprob: -13.641247749328613
    8. ']+' → logprob: -14.016247749328613
    9. '']' → logprob: -14.141247749328613
    10. ')' → logprob: -14.641247749328613

Token 145: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.18001499772071838
    2. ' -' → logprob: -1.805014967918396
    3. '-add' → logprob: -8.930014610290527
    4. ')' → logprob: -9.430014610290527
    5. ' ' → logprob: -11.180014610290527
    6. '-
' → logprob: -11.680014610290527
    7. ')-' → logprob: -12.180014610290527
    8. '   ' → logprob: -12.680014610290527
    9. ' ' → logprob: -13.180014610290527
    10. '
' → logprob: -13.305014610290527

Token 146: ' prefix' (ID: 18633)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.005935790482908487
    2. ' prefix' → logprob: -5.1309356689453125
    3. '(prefix' → logprob: -12.005935668945312
    4. 'refix' → logprob: -14.255935668945312
    5. ' ' → logprob: -16.255935668945312
    6. '
' → logprob: -16.505935668945312
    7. '_prefix' → logprob: -16.880935668945312
    8. '.prefix' → logprob: -17.005935668945312
    9. '  ' → logprob: -17.505935668945312
    10. 'pref' → logprob: -18.005935668945312

Token 147: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.9361264946837764e-07
    2. 'i' → logprob: -15.625
    3. '[j' → logprob: -17.75
    4. '[
' → logprob: -19.25
    5. '[' → logprob: -19.375
    6. '{i' → logprob: -19.875
    7. '(i' → logprob: -20.0
    8. '
' → logprob: -20.375
    9. '[int' → logprob: -21.0
    10. '```' → logprob: -21.25

Token 148: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.001481889863498509
    2. '1' → logprob: -6.876482009887695
    3. ' -' → logprob: -7.751482009887695
    4. ']' → logprob: -12.001482009887695
    5. '+' → logprob: -12.251482009887695
    6. '])' → logprob: -12.751482009887695
    7. ')' → logprob: -13.376482009887695
    8. ' ' → logprob: -14.001482009887695
    9. ']+' → logprob: -14.501482009887695
    10. '[' → logprob: -14.876482009887695

Token 149: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2246291337069124e-05
    2. ' ' → logprob: -10.750021934509277
    3. '-' → logprob: -15.312521934509277
    4. ')' → logprob: -16.000022888183594
    5. '   ' → logprob: -16.812522888183594
    6. '```' → logprob: -16.937522888183594
    7. 'prev' → logprob: -17.812522888183594
    8. '۱' → logprob: -17.875022888183594
    9. '{' → logprob: -18.250022888183594
    10. '  ' → logprob: -18.375022888183594

Token 150: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006753815687261522
    2. '))' → logprob: -8.000675201416016
    3. ' )' → logprob: -8.375675201416016
    4. ').' → logprob: -11.000675201416016
    5. ' ' → logprob: -11.250675201416016
    6. ',' → logprob: -11.250675201416016
    7. '),' → logprob: -11.250675201416016
    8. '])' → logprob: -11.375675201416016
    9. ')(' → logprob: -12.125675201416016
    10. ')))' → logprob: -12.500675201416016

Token 151: 'g' (ID: 70)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 152: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11320240795612335
    2. '=' → logprob: -2.2382023334503174
    3. '=lambda' → logprob: -7.9882025718688965
    4. 'f' → logprob: -11.363202095031738
    5. 'space' → logprob: -11.738202095031738
    6. ' ' → logprob: -12.113202095031738
    7. 'lambda' → logprob: -12.113202095031738
    8. '  ' → logprob: -12.738202095031738
    9. 's' → logprob: -13.363202095031738
    10. 'a' → logprob: -13.863202095031738

Token 153: ' lambda' (ID: 27871)
  Prédit: ' lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.31389498710632324
    2. 'lambda' → logprob: -1.3138949871063232
    3. '(lambda' → logprob: -7.438895225524902
    4. '=lambda' → logprob: -10.563895225524902
    5. 'f' → logprob: -12.188895225524902
    6. 'max' → logprob: -12.688895225524902
    7. ' lamb' → logprob: -13.438895225524902
    8. '0' → logprob: -13.938895225524902
    9. '   ' → logprob: -13.938895225524902
    10. ' (' → logprob: -14.063895225524902

Token 154: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4311315715312958
    2. ' i' → logprob: -1.1811316013336182
    3. 'x' → logprob: -4.056131362915039
    4. 'j' → logprob: -5.181131362915039
    5. 'k' → logprob: -5.181131362915039
    6. ' x' → logprob: -5.556131362915039
    7. 'lambda' → logprob: -5.556131362915039
    8. ' j' → logprob: -5.931131362915039
    9. ' k' → logprob: -6.681131362915039
    10. 'xy' → logprob: -7.181131362915039

Token 155: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012453379109501839
    2. ',j' → logprob: -5.262453556060791
    3. 'j' → logprob: -5.637453556060791
    4. ' ,' → logprob: -6.137453556060791
    5. ' j' → logprob: -6.887453556060791
    6. ',i' → logprob: -8.637453079223633
    7. 'i' → logprob: -9.137453079223633
    8. ' i' → logprob: -10.012453079223633
    9. 'x' → logprob: -10.637453079223633
    10. ':' → logprob: -11.387453079223633

Token 156: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.06589613854885101
    2. 'i' → logprob: -3.5658960342407227
    3. ' j' → logprob: -3.8158960342407227
    4. 'n' → logprob: -5.190896034240723
    5. 'lambda' → logprob: -6.190896034240723
    6. ' i' → logprob: -6.690896034240723
    7. 'x' → logprob: -6.940896034240723
    8. ' n' → logprob: -7.565896034240723
    9. ':' → logprob: -7.940896034240723
    10. ' (' → logprob: -8.065896034240723

Token 157: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002272296929731965
    2. ' :' → logprob: -6.127272129058838
    3. ',' → logprob: -9.502272605895996
    4. '=' → logprob: -12.627272605895996
    5. ',:' → logprob: -13.127272605895996
    6. 'f' → logprob: -13.127272605895996
    7. '_:' → logprob: -13.877272605895996
    8. ' f' → logprob: -14.002272605895996
    9. ':f' → logprob: -14.377272605895996
    10. '=:' → logprob: -14.627272605895996

Token 158: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.7718870043754578
    2. 'j' → logprob: -2.1468870639801025
    3. 'f' → logprob: -2.2718870639801025
    4. 'extract' → logprob: -2.3968870639801025
    5. 'prefix' → logprob: -2.3968870639801025
    6. '(abs' → logprob: -3.2718870639801025
    7. 'cmath' → logprob: -3.6468870639801025
    8. '(j' → logprob: -4.146886825561523
    9. 'max' → logprob: -4.271886825561523
    10. '(prefix' → logprob: -5.146886825561523

Token 159: '(prefix' (ID: 59324)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.21087594330310822
    2. '(ex' → logprob: -2.460875988006592
    3. '(prefix' → logprob: -2.835875988006592
    4. '(' → logprob: -4.210875988006592
    5. '(j' → logprob: -4.710875988006592
    6. '(com' → logprob: -4.960875988006592
    7. '(i' → logprob: -5.210875988006592
    8. '(f' → logprob: -5.835875988006592
    9. '(re' → logprob: -6.335875988006592
    10. '(c' → logprob: -6.710875988006592

Token 160: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.015757832676172256
    2. '[i' → logprob: -5.140758037567139
    3. '[n' → logprob: -5.140758037567139
    4. '[-' → logprob: -5.890758037567139
    5. 'j' → logprob: -7.765758037567139
    6. ',j' → logprob: -8.39075756072998
    7. '[' → logprob: -8.76575756072998
    8. ',' → logprob: -9.14075756072998
    9. '[len' → logprob: -9.51575756072998
    10. '[f' → logprob: -10.95325756072998

Token 161: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.012454084120690823
    2. '[j' → logprob: -5.512454032897949
    3. '].' → logprob: -5.637454032897949
    4. '[i' → logprob: -6.387454032897949
    5. '])' → logprob: -7.262454032897949
    6. '-' → logprob: -7.637454032897949
    7. '[' → logprob: -7.887454032897949
    8. ')' → logprob: -8.01245403289795
    9. ']-' → logprob: -8.26245403289795
    10. '+' → logprob: -8.63745403289795

Token 162: ' +' (ID: 659)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.9336711764335632
    2. ')' → logprob: -1.183671236038208
    3. ']' → logprob: -1.558671236038208
    4. '[i' → logprob: -3.683671236038208
    5. ' -' → logprob: -4.183670997619629
    6. ']-' → logprob: -4.308670997619629
    7. ')-' → logprob: -4.808670997619629
    8. 'if' → logprob: -5.183670997619629
    9. '+' → logprob: -5.433670997619629
    10. ' if' → logprob: -5.558670997619629

Token 163: ' (' (ID: 350)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.3995145261287689
    2. 'prefix' → logprob: -1.8995145559310913
    3. ' (-' → logprob: -3.0245144367218018
    4. ' prefix' → logprob: -4.024514675140381
    5. '-p' → logprob: -4.149514675140381
    6. 'xy' → logprob: -4.274514675140381
    7. '-prefix' → logprob: -4.399514675140381
    8. 'complex' → logprob: -4.524514675140381
    9. '(' → logprob: -4.649514675140381
    10. '-' → logprob: -4.774514675140381

Token 164: 'prefix' (ID: 26155)
  Prédit: '-prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-prefix' → logprob: -0.4874659478664398
    2. '-p' → logprob: -2.1124658584594727
    3. 'prefix' → logprob: -2.3624658584594727
    4. '(-' → logprob: -2.4874658584594727
    5. '-' → logprob: -3.2374658584594727
    6. ' -' → logprob: -3.9874658584594727
    7. ' prefix' → logprob: -5.112465858459473
    8. '-com' → logprob: -5.362465858459473
    9. '-c' → logprob: -5.862465858459473
    10. '-(' → logprob: -5.987465858459473

Token 165: '[-' (ID: 17503)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.04510102421045303
    2. '[-' → logprob: -3.5451009273529053
    3. '[n' → logprob: -4.295101165771484
    4. 'i' → logprob: -7.295101165771484
    5. '[' → logprob: -8.045101165771484
    6. '[j' → logprob: -8.545101165771484
    7. 'n' → logprob: -8.795101165771484
    8. '[len' → logprob: -8.795101165771484
    9. '[(' → logprob: -10.545101165771484
    10. '[N' → logprob: -11.420101165771484

Token 166: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4818463921546936
    2. 'i' → logprob: -1.2318463325500488
    3. '[i' → logprob: -2.981846332550049
    4. '[-' → logprob: -4.106846332550049
    5. '-' → logprob: -4.481846332550049
    6. '[' → logprob: -5.231846332550049
    7. ' i' → logprob: -6.606846332550049
    8. '(i' → logprob: -6.606846332550049
    9. ']' → logprob: -7.606846332550049
    10. 'n' → logprob: -7.731846332550049

Token 167: ']' (ID: 60)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5325100421905518
    2. ' -' → logprob: -1.4075100421905518
    3. ' if' → logprob: -1.9075100421905518
    4. ']' → logprob: -4.782509803771973
    5. 'if' → logprob: -5.282509803771973
    6. ')' → logprob: -5.532509803771973
    7. ' ' → logprob: -6.907509803771973
    8. '-(' → logprob: -7.782509803771973
    9. '   ' → logprob: -9.032509803771973
    10. '-if' → logprob: -9.407509803771973

Token 168: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.13150662183761597
    2. '-' → logprob: -2.1315066814422607
    3. ' if' → logprob: -5.631506443023682
    4. ')' → logprob: -7.756506443023682
    5. ' ' → logprob: -8.00650691986084
    6. '-(' → logprob: -9.88150691986084
    7. 'if' → logprob: -9.88150691986084
    8. '   ' → logprob: -10.38150691986084
    9. ' -(' → logprob: -10.75650691986084
    10. '-if' → logprob: -11.13150691986084

Token 169: ' prefix' (ID: 18633)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.3555983603000641
    2. '(prefix' → logprob: -1.6055983304977417
    3. ' prefix' → logprob: -2.4805984497070312
    4. ' (' → logprob: -4.230598449707031
    5. '(' → logprob: -9.355598449707031
    6. ' ' → logprob: -10.105598449707031
    7. '(pre' → logprob: -11.543098449707031
    8. '  ' → logprob: -11.855598449707031
    9. '(p' → logprob: -11.918098449707031
    10. '_prefix' → logprob: -11.980598449707031

Token 170: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.5327808260917664
    2. 'prefix' → logprob: -0.9077808260917664
    3. '[j' → logprob: -4.782780647277832
    4. ' prefix' → logprob: -7.032780647277832
    5. '_prefix' → logprob: -9.032780647277832
    6. 'i' → logprob: -9.532780647277832
    7. '[' → logprob: -9.907780647277832
    8. '[p' → logprob: -9.907780647277832
    9. '(prefix' → logprob: -11.157780647277832
    10. '   ' → logprob: -11.657780647277832

Token 171: '-' (ID: 12)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.4241560697555542
    2. '-' → logprob: -1.2991560697555542
    3. '1' → logprob: -3.0491561889648438
    4. ']))' → logprob: -4.174156188964844
    5. ']' → logprob: -5.299156188964844
    6. ']+' → logprob: -6.549156188964844
    7. '])+' → logprob: -7.049156188964844
    8. '])]' → logprob: -7.799156188964844
    9. ')' → logprob: -7.924156188964844
    10. '2' → logprob: -8.174156188964844

Token 172: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0018633106956258416
    2. '])' → logprob: -6.876863479614258
    3. '-' → logprob: -7.626863479614258
    4. ' ' → logprob: -8.501863479614258
    5. ']' → logprob: -10.251863479614258
    6. '0' → logprob: -10.626863479614258
    7. ')' → logprob: -11.001863479614258
    8. '])]' → logprob: -11.251863479614258
    9. '  ' → logprob: -12.001863479614258
    10. '   ' → logprob: -12.001863479614258

Token 173: ']))' (ID: 20259)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.19797326624393463
    2. ']))' → logprob: -2.3229732513427734
    3. '])' → logprob: -3.1979732513427734
    4. ')' → logprob: -3.4479732513427734
    5. ')))' → logprob: -5.072973251342773
    6. ')])' → logprob: -6.322973251342773
    7. ')]' → logprob: -8.322973251342773
    8. ']' → logprob: -8.822973251342773
    9. '}))' → logprob: -9.447973251342773
    10. '[j' → logprob: -9.697973251342773

Token 174: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 175: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6442815065383911
    2. ' i' → logprob: -0.7692815065383911
    3. 'j' → logprob: -5.019281387329102
    4. ' j' → logprob: -5.394281387329102
    5. '0' → logprob: -8.769281387329102
    6. ' ' → logprob: -9.019281387329102
    7. ' not' → logprob: -10.394281387329102
    8. '(i' → logprob: -10.394281387329102
    9. ' (' → logprob: -10.644281387329102
    10. '  ' → logprob: -10.769281387329102

Token 176: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.21776069700717926
    2. ' ==' → logprob: -2.4677608013153076
    3. '==' → logprob: -2.9677608013153076
    4. '>' → logprob: -3.0927608013153076
    5. ' !=' → logprob: -4.4677605628967285
    6. '!=' → logprob: -6.5927605628967285
    7. ' ' → logprob: -7.3427605628967285
    8. ' <' → logprob: -8.342761039733887
    9. '<|end|>' → logprob: -8.592761039733887
    10. '=' → logprob: -10.092761039733887

Token 177: ' j' (ID: 441)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.016045628115534782
    2. ' ' → logprob: -4.141045570373535
    3. '=' → logprob: -11.891045570373535
    4. '<|end|>' → logprob: -12.391045570373535
    5. '  ' → logprob: -16.01604652404785
    6. '...' → logprob: -16.51604652404785
    7. ' ' → logprob: -16.76604652404785
    8. '<|end|>' → logprob: -17.20354652404785
    9. '[' → logprob: -17.26604652404785
    10. '-' → logprob: -17.45354652404785

Token 178: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.043517932295799255
    2. 'else' → logprob: -3.168517827987671
    3. '	else' → logprob: -8.29351806640625
    4. '<|end|>' → logprob: -8.79351806640625
    5. ' ' → logprob: -9.54351806640625
    6. '==' → logprob: -11.79351806640625
    7. ':' → logprob: -11.79351806640625
    8. '  ' → logprob: -12.29351806640625
    9. '   ' → logprob: -12.54351806640625
    10. '[' → logprob: -12.79351806640625

Token 179: ' f' (ID: 285)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.08834414184093475
    2. ' abs' → logprob: -2.713344097137451
    3. '0' → logprob: -4.713344097137451
    4. 'f' → logprob: -5.338344097137451
    5. 'prefix' → logprob: -5.963344097137451
    6. ' f' → logprob: -7.838344097137451
    7. ' prefix' → logprob: -8.08834457397461
    8. ' ' → logprob: -8.46334457397461
    9. 'False' → logprob: -8.58834457397461
    10. 'g' → logprob: -8.58834457397461

Token 180: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.17455047369003296
    2. '<|end|>' → logprob: -2.5495505332946777
    3. '(' → logprob: -2.6745505332946777
    4. ' (' → logprob: -4.549550533294678
    5. '<|end|>' → logprob: -6.924550533294678
    6. '[i' → logprob: -7.299550533294678
    7. ' ' → logprob: -8.04955005645752
    8. ')' → logprob: -8.92455005645752
    9. '[' → logprob: -9.29955005645752
    10. '
' → logprob: -9.29955005645752

Token 181: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.025841765105724335
    2. ',j' → logprob: -3.77584171295166
    3. ' ,' → logprob: -6.27584171295166
    4. ',i' → logprob: -7.52584171295166
    5. ' j' → logprob: -9.77584171295166
    6. ')' → logprob: -10.27584171295166
    7. 'j' → logprob: -10.40084171295166
    8. '<|end|>' → logprob: -11.15084171295166
    9. ' ' → logprob: -11.90084171295166
    10. 'i' → logprob: -11.90084171295166

Token 182: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.023831045255064964
    2. ' j' → logprob: -3.7738311290740967
    3. 'i' → logprob: -7.648830890655518
    4. ' i' → logprob: -10.398831367492676
    5. '0' → logprob: -10.523831367492676
    6. ',j' → logprob: -11.523831367492676
    7. ',' → logprob: -11.773831367492676
    8. 'n' → logprob: -11.898831367492676
    9. '(j' → logprob: -12.148831367492676
    10. ' ' → logprob: -12.398831367492676

Token 183: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.1557283111615106e-05
    2. '<|end|>' → logprob: -11.250041961669922
    3. ' )' → logprob: -11.375041961669922
    4. ')
' → logprob: -12.000041961669922
    5. '))' → logprob: -12.250041961669922
    6. ')}' → logprob: -13.500041961669922
    7. '<|end|>' → logprob: -14.125041961669922
    8. '}' → logprob: -14.500041961669922
    9. ')))' → logprob: -14.625041961669922
    10. ')}}' → logprob: -14.625041961669922

Token 184: 'ans' (ID: 616)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.35063910484313965
    2. '<|end|>' → logprob: -2.2256391048431396
    3. '#' → logprob: -2.8506391048431396
    4. '(' → logprob: -3.3506391048431396
    5. ',' → logprob: -4.225639343261719
    6. '[' → logprob: -4.600639343261719
    7. 'for' → logprob: -4.725639343261719
    8. 'def' → logprob: -4.850639343261719
    9. '...' → logprob: -5.225639343261719
    10. ':' → logprob: -5.350639343261719

Token 185: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.048643577843904495
    2. '=' → logprob: -3.0486435890197754
    3. ',' → logprob: -10.173643112182617
    4. ')' → logprob: -12.673643112182617
    5. ':' → logprob: -12.798643112182617
    6. ' ' → logprob: -12.923643112182617
    7. ' =)' → logprob: -13.048643112182617
    8. '_' → logprob: -13.673643112182617
    9. 's' → logprob: -13.798643112182617
    10. ' ' → logprob: -14.048643112182617

Token 186: ' max' (ID: 2999)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02785666286945343
    2. 'max' → logprob: -4.402856826782227
    3. 'float' → logprob: -5.027856826782227
    4. 'abs' → logprob: -5.152856826782227
    5. ' ' → logprob: -6.402856826782227
    6. '-' → logprob: -8.527856826782227
    7. 'complex' → logprob: -8.652856826782227
    8. ' max' → logprob: -9.152856826782227
    9. 'inf' → logprob: -9.277856826782227
    10. ' float' → logprob: -9.277856826782227

Token 187: '(
' (ID: 1607)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.9763018488883972
    2. '(' → logprob: -1.726301908493042
    3. '(map' → logprob: -1.726301908493042
    4. '(range' → logprob: -2.101301908493042
    5. '(abs' → logprob: -2.726301908493042
    6. '(chain' → logprob: -3.101301908493042
    7. '(g' → logprob: -3.726301908493042
    8. '([' → logprob: -5.351301670074463
    9. '(x' → logprob: -6.351301670074463
    10. '((' → logprob: -6.851301670074463

Token 188: '   ' (ID: 271)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.6928196549415588
    2. 'f' → logprob: -1.192819595336914
    3. 'abs' → logprob: -1.692819595336914
    4. '(abs' → logprob: -5.817819595336914
    5. '(
' → logprob: -6.192819595336914
    6. '(g' → logprob: -6.567819595336914
    7. 'chain' → logprob: -6.942819595336914
    8. 'range' → logprob: -7.067819595336914
    9. '[g' → logprob: -7.192819595336914
    10. 'map' → logprob: -7.317819595336914

Token 189: ' (
' (ID: 4112)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.33037424087524414
    2. 'f' → logprob: -1.4553742408752441
    3. 'abs' → logprob: -3.330374240875244
    4. '(
' (adapté à ' (
') → logprob: -5.705374240875244
    5. '(g' → logprob: -6.330374240875244
    6. 'max' → logprob: -6.705374240875244
    7. 'chain' → logprob: -6.830374240875244
    8. '0' → logprob: -6.830374240875244
    9. '(abs' → logprob: -7.205374240875244
    10. '[g' → logprob: -7.455374240875244

Token 190: '       ' (ID: 309)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.313405841588974
    2. 'abs' → logprob: -1.9384058713912964
    3. 'f' → logprob: -2.188405752182007
    4. '   ' → logprob: -5.688405990600586
    5. 'max' → logprob: -6.313405990600586
    6. '0' → logprob: -6.438405990600586
    7. '(g' → logprob: -6.563405990600586
    8. '(abs' → logprob: -7.188405990600586
    9. '(
' → logprob: -7.563405990600586
    10. ' g' → logprob: -7.688405990600586

Token 191: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' (adapté à ' g') → logprob: -0.21803385019302368
    2. 'abs' → logprob: -2.343033790588379
    3. 'f' → logprob: -2.468033790588379
    4. 'max' → logprob: -5.343033790588379
    5. '0' → logprob: -5.593033790588379
    6. '   ' → logprob: -6.343033790588379
    7. '(g' → logprob: -7.218033790588379
    8. '(abs' → logprob: -7.593033790588379
    9. 'ans' → logprob: -7.843033790588379
    10. ' g' → logprob: -7.968033790588379

Token 192: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0014737951569259167
    2. '(' → logprob: -6.876473903656006
    3. ')(' → logprob: -9.126473426818848
    4. ')' → logprob: -9.251473426818848
    5. ' (' → logprob: -9.251473426818848
    6. 'i' → logprob: -9.751473426818848
    7. '(
' → logprob: -10.751473426818848
    8. '   ' → logprob: -11.251473426818848
    9. '(a' → logprob: -12.001473426818848
    10. '(s' → logprob: -12.001473426818848

Token 193: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0025173963513225317
    2. ',j' → logprob: -6.252517223358154
    3. ' ,' → logprob: -7.877517223358154
    4. '   ' → logprob: -9.002517700195312
    5. '  ' → logprob: -11.377517700195312
    6. ' ' → logprob: -11.502517700195312
    7. 'j' → logprob: -11.877517700195312
    8. ',n' → logprob: -12.002517700195312
    9. ',k' → logprob: -12.002517700195312
    10. ',i' → logprob: -12.127517700195312

Token 194: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.001573544810526073
    2. ' j' → logprob: -7.37657356262207
    3. 'i' → logprob: -8.12657356262207
    4. '(j' → logprob: -8.12657356262207
    5. '   ' → logprob: -8.50157356262207
    6. '(i' → logprob: -9.50157356262207
    7. '(n' → logprob: -11.50157356262207
    8. ' (' → logprob: -11.62657356262207
    9. 'n' → logprob: -11.62657356262207
    10. ')' → logprob: -11.87657356262207

Token 195: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4746749699115753
    2. ')
' → logprob: -0.9746749401092529
    3. ' for' → logprob: -9.099675178527832
    4. ')
' → logprob: -9.099675178527832
    5. 'for' → logprob: -9.224675178527832
    6. ' )
' → logprob: -9.599675178527832
    7. ' )' → logprob: -9.849675178527832
    8. '       ' → logprob: -9.974675178527832
    9. '   ' → logprob: -10.099675178527832
    10. ')

' → logprob: -10.974675178527832

Token 196: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.21099941432476044
    2. 'for' → logprob: -1.7109993696212769
    3. '       ' → logprob: -4.710999488830566
    4. ')' → logprob: -7.835999488830566
    5. '
' → logprob: -9.835999488830566
    6. '   ' → logprob: -10.085999488830566
    7. ')
' → logprob: -11.210999488830566
    8. '           ' → logprob: -11.335999488830566
    9. '	for' → logprob: -11.710999488830566
    10. '        ' → logprob: -12.585999488830566

Token 197: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6161788702011108
    2. 'for' (adapté à ' for') → logprob: -0.8661788702011108
    3. '       ' → logprob: -3.2411789894104004
    4. ')' → logprob: -8.491178512573242
    5. '   ' → logprob: -9.866178512573242
    6. '	for' → logprob: -10.741178512573242
    7. '<|end|>' → logprob: -11.491178512573242
    8. ' ' → logprob: -11.491178512573242
    9. '
' → logprob: -11.991178512573242
    10. '           ' → logprob: -12.366178512573242

Token 198: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5791265964508057
    2. ' i' → logprob: -0.8291265964508057
    3. 'j' → logprob: -6.329126358032227
    4. ' j' → logprob: -6.829126358032227
    5. '   ' → logprob: -9.204126358032227
    6. ' (' → logprob: -10.079126358032227
    7. '(i' → logprob: -10.454126358032227
    8. ' ' → logprob: -10.579126358032227
    9. ')' → logprob: -10.829126358032227
    10. '	i' → logprob: -10.829126358032227

Token 199: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05045589059591293
    2. 'in' → logprob: -3.0504558086395264
    3. ',' → logprob: -6.3004560470581055
    4. ' ,' → logprob: -11.425456047058105
    5. ')' → logprob: -11.925456047058105
    6. ',j' → logprob: -12.050456047058105
    7. ' ' → logprob: -12.925456047058105
    8. '       ' → logprob: -14.175456047058105
    9. '<|end|>' → logprob: -14.175456047058105
    10. '   ' → logprob: -14.425456047058105

Token 200: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.07992888987064362
    2. ' j' → logprob: -2.5799288749694824
    3. '(j' → logprob: -7.704928874969482
    4. ' (' → logprob: -8.07992935180664
    5. '(' → logprob: -8.82992935180664
    6. ' in' → logprob: -9.95492935180664
    7. '(
' → logprob: -11.20492935180664
    8. ',j' → logprob: -11.70492935180664
    9. ',' → logprob: -11.82992935180664
    10. ')' → logprob: -11.95492935180664

Token 201: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.033672209829092026
    2. 'in' → logprob: -3.4086720943450928
    3. ')' → logprob: -10.783672332763672
    4. 'product' → logprob: -14.033672332763672
    5. '<|end|>' → logprob: -14.033672332763672
    6. ' ' → logprob: -14.658672332763672
    7. '	in' → logprob: -14.783672332763672
    8. 'import' → logprob: -15.033672332763672
    9. ',' → logprob: -15.158672332763672
    10. 'In' → logprob: -15.471172332763672

Token 202: ' product' (ID: 1888)
  Prédit: 'product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'product' → logprob: -0.4742669463157654
    2. ' product' → logprob: -0.9742669463157654
    3. 'range' → logprob: -9.59926700592041
    4. 'enumer' → logprob: -10.34926700592041
    5. ' range' → logprob: -10.47426700592041
    6. ' enumerate' → logprob: -10.84926700592041
    7. ')' → logprob: -11.47426700592041
    8. '(product' → logprob: -12.47426700592041
    9. 'is' → logprob: -12.72426700592041
    10. ' is' → logprob: -12.84926700592041

Token 203: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -1.2233183042553719e-05
    2. '(' → logprob: -11.875012397766113
    3. 'range' → logprob: -12.250012397766113
    4. '(r' → logprob: -15.625012397766113
    5. '(
' → logprob: -16.500011444091797
    6. ' range' → logprob: -16.875011444091797
    7. '	range' → logprob: -17.875011444091797
    8. '((' → logprob: -18.500011444091797
    9. ')' → logprob: -18.750011444091797
    10. '(s' → logprob: -19.250011444091797

Token 204: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -9.13388703338569e-06
    2. '(' → logprob: -11.750009536743164
    3. 'n' → logprob: -14.000009536743164
    4. '(len' → logprob: -15.250009536743164
    5. '(
' → logprob: -16.375009536743164
    6. '((' → logprob: -18.125009536743164
    7. ' (' → logprob: -19.250009536743164
    8. ')' → logprob: -19.750009536743164
    9. '(-' → logprob: -20.000009536743164
    10. '(nx' → logprob: -20.000009536743164

Token 205: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.018782008439302444
    2. ',n' → logprob: -4.143782138824463
    3. '),' → logprob: -6.018782138824463
    4. ' ,' → logprob: -8.143781661987305
    5. '(n' → logprob: -11.893781661987305
    6. 'n' → logprob: -12.643781661987305
    7. ',j' → logprob: -12.893781661987305
    8. ')' → logprob: -13.393781661987305
    9. '(),' → logprob: -13.893781661987305
    10. '},' → logprob: -14.268781661987305

Token 206: ' repeat' (ID: 22962)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005322577897459269
    2. ' range' → logprob: -5.255322456359863
    3. '(range' → logprob: -9.880322456359863
    4. 'repeat' → logprob: -10.630322456359863
    5. '   ' → logprob: -12.880322456359863
    6. ' ' → logprob: -13.130322456359863
    7. '  ' → logprob: -14.130322456359863
    8. '                       ' → logprob: -14.130322456359863
    9. '       ' → logprob: -14.255322456359863
    10. 'chain' → logprob: -14.255322456359863

Token 207: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -2.6895233531831764e-05
    2. '2' → logprob: -10.75002670288086
    3. '(' → logprob: -12.12502670288086
    4. ' ' → logprob: -17.75002670288086
    5. ' =' → logprob: -18.00002670288086
    6. '=
' → logprob: -20.25002670288086
    7. '```' → logprob: -20.62502670288086
    8. '=(' → logprob: -20.75002670288086
    9. 's' → logprob: -21.12502670288086
    10. '=}' → logprob: -22.00002670288086

Token 208: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.894790981779806e-05
    2. ' ' → logprob: -10.000048637390137
    3. '=' → logprob: -13.125048637390137
    4. '   ' → logprob: -14.000048637390137
    5. '(' → logprob: -15.250048637390137
    6. '  ' → logprob: -16.125049591064453
    7. '
' → logprob: -16.750049591064453
    8. '           ' → logprob: -17.125049591064453
    9. '       ' → logprob: -17.125049591064453
    10. '```' → logprob: -17.125049591064453

Token 209: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014606848359107971
    2. ')
' → logprob: -4.264606952667236
    3. '))' → logprob: -8.514606475830078
    4. ')))' → logprob: -9.264606475830078
    5. 'if' → logprob: -10.014606475830078
    6. '   ' → logprob: -10.389606475830078
    7. '):' → logprob: -10.639606475830078
    8. ')
' → logprob: -10.889606475830078
    9. ' if' → logprob: -11.514606475830078
    10. '))))' → logprob: -12.889606475830078

Token 210: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00219273311085999
    2. '))' → logprob: -6.877192497253418
    3. 'if' → logprob: -7.877192497253418
    4. ')
' → logprob: -7.877192497253418
    5. ' if' → logprob: -8.752192497253418
    6. '   ' → logprob: -8.752192497253418
    7. '
' → logprob: -10.127192497253418
    8. '):' → logprob: -11.752192497253418
    9. ')))' → logprob: -11.752192497253418
    10. '),' → logprob: -12.127192497253418

Token 211: ' ),
' (ID: 4954)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.025189261883497238
    2. ')
' → logprob: -4.275189399719238
    3. '))' → logprob: -4.525189399719238
    4. '   ' → logprob: -9.400189399719238
    5. ')
' → logprob: -11.525189399719238
    6. ')))' → logprob: -11.525189399719238
    7. ' )' → logprob: -11.775189399719238
    8. 'if' → logprob: -12.150189399719238
    9. '),' → logprob: -12.400189399719238
    10. ' if' → logprob: -12.900189399719238

Token 212: '   ' (ID: 271)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.21697138249874115
    2. 'key' → logprob: -1.8419713973999023
    3. ')' → logprob: -3.8419713973999023
    4. ' key' → logprob: -4.716971397399902
    5. ' default' → logprob: -5.216971397399902
    6. '   ' → logprob: -7.716971397399902
    7. 'reverse' → logprob: -8.466971397399902
    8. '))' → logprob: -11.716971397399902
    9. '0' → logprob: -11.716971397399902
    10. ' ' → logprob: -11.841971397399902

Token 213: ' default' (ID: 2787)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'default' (adapté à ' default') → logprob: -0.014244131743907928
    2. 'key' → logprob: -4.264244079589844
    3. ' default' → logprob: -9.764244079589844
    4. 'initial' → logprob: -11.264244079589844
    5. ' key' → logprob: -11.764244079589844
    6. ')' → logprob: -13.889244079589844
    7. '   ' → logprob: -14.764244079589844
    8. '0' → logprob: -15.014244079589844
    9. '
' → logprob: -15.264244079589844
    10. ' ' → logprob: -15.764244079589844

Token 214: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -4.4418171455617994e-05
    2. '0' → logprob: -10.500044822692871
    3. '=-' → logprob: -11.500044822692871
    4. ' =' → logprob: -12.250044822692871
    5. '=float' → logprob: -13.375044822692871
    6. '=None' → logprob: -15.875044822692871
    7. '=int' → logprob: -16.125043869018555
    8. '=(-' → logprob: -17.125043869018555
    9. ' ' → logprob: -17.500043869018555
    10. '=sys' → logprob: -18.250043869018555

Token 215: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.496052371105179e-05
    2. ' ' → logprob: -9.50009536743164
    3. '-' → logprob: -11.25009536743164
    4. 'complex' → logprob: -12.87509536743164
    5. '   ' → logprob: -13.37509536743164
    6. 'float' → logprob: -14.12509536743164
    7. ')' → logprob: -14.87509536743164
    8. '
' → logprob: -15.31259536743164
    9. '  ' → logprob: -15.56259536743164
    10. ' -' → logprob: -15.75009536743164

Token 216: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.723352049040841e-06
    2. ')
' → logprob: -12.500004768371582
    3. '))' → logprob: -15.000004768371582
    4. ' )' → logprob: -15.500004768371582
    5. '
' → logprob: -15.750004768371582
    6. '   ' → logprob: -16.250003814697266
    7. '),' → logprob: -16.625003814697266
    8. ')`' → logprob: -17.500003814697266
    9. '#' → logprob: -17.875003814697266
    10. '}' → logprob: -17.875003814697266

Token 217: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.703443770878948e-06
    2. ')
' → logprob: -12.000007629394531
    3. ' )' → logprob: -15.000007629394531
    4. '#' → logprob: -15.125007629394531
    5. '))' → logprob: -15.125007629394531
    6. ')#' → logprob: -15.625007629394531
    7. ')`' → logprob: -16.62500762939453
    8. '),' → logprob: -16.87500762939453
    9. '**' → logprob: -16.87500762939453
    10. '}' → logprob: -17.25000762939453

Token 218: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.4121114822482923e-06
    2. '
' → logprob: -13.125003814697266
    3. ' print' → logprob: -14.000003814697266
    4. '\n' → logprob: -15.375003814697266
    5. ')' → logprob: -16.125003814697266
    6. '<|end|>' → logprob: -16.625003814697266
    7. '(print' → logprob: -16.750003814697266
    8. '#print' → logprob: -17.125003814697266
    9. '```' → logprob: -17.750003814697266
    10. 'newline' → logprob: -19.250003814697266

Token 219: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -7.755678961984813e-05
    2. '(' → logprob: -9.500077247619629
    3. '(f' → logprob: -13.875077247619629
    4. 'ans' → logprob: -14.375077247619629
    5. '(abs' → logprob: -14.375077247619629
    6. '(answer' → logprob: -15.250077247619629
    7. '()' → logprob: -15.750077247619629
    8. '(
' → logprob: -15.875077247619629
    9. '(max' → logprob: -17.000078201293945
    10. ' (' → logprob: -17.250078201293945

Token 220: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.2200749754119897e-06
    2. ' )' → logprob: -13.500001907348633
    3. '))' → logprob: -15.250001907348633
    4. ')`' → logprob: -15.625001907348633
    5. '+' → logprob: -16.000001907348633
    6. ')
' → logprob: -16.625001907348633
    7. '`)' → logprob: -17.125001907348633
    8. '*' → logprob: -17.250001907348633
    9. '()' → logprob: -17.375001907348633
    10. '**' → logprob: -17.625001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 218
Tokens correctement prédits (1ère position, stricte): 82
Tokens correctement prédits (1ère position, avec adaptation): 84
Tokens correctement prédits (top 10): 165
Précision stricte (1ère position): 37.61%
Précision adaptée (1ère position): 38.53%
Précision (top 10): 75.69%
================================================================================
