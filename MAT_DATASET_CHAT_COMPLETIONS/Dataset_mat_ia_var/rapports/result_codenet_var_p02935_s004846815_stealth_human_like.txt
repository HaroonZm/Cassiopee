================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:47:53
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import math
from itertools import accumulate
from collections import deque, Counter, defaultdict
from heapq import heappush, heappop
import queue
#from numpy import array
from fractions import gcd
from copy import deepcopy

MOD = 10**9+7 # big mod as usual

def main():
    # Somewhat classic input reading
    N = int(input())
    vals = list(map(int, input().split()))
    vals.sort()
    result = (vals[0]+vals[1])/2
    if N == 2:
        print(result)
        return
    for idx in range(2, N):
        result = (result + vals[idx])/2
    print(result)

if __name__ == '__main__':
    # classic
    main()

def sieve_of_eratosthenes(n):
    # Super basic, probably not the best way...
    if type(n) is not int:
        raise Exception("need int")
    if n < 2:
        raise Exception("not enough")
    primes = [1]*(n+1)
    for i in range(2, int(math.sqrt(n))):
        if primes[i]:
            for j in range(2*i, n):
                if j % i == 0:
                    primes[j] = 0
    ans = []
    for i in range(2, n):
        if primes[i] == 1:
            ans.append(i)
    return ans

class UnionFind:
    def __init__(self, n):
        self.parent = list(range(n+1))
        self.rank = [0]*(n+1)
    
    def findroot(self, x):
        # No path compression, sry!
        if x == self.parent[x]:
            return x
        else:
            y = self.parent[x]
            y = self.findroot(self.parent[x])
            return y

    def union(self, x, y):
        px = self.findroot(x)
        py = self.findroot(y)
        if px < py:
            self.parent[py] = px
        else:
            self.parent[px] = py

    def same_group_or_no(self, x, y):
        return self.findroot(x) == self.findroot(y)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' math' (ID: 13324)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'from' (ID: 2845)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.008858839981257915
    2. '\n' → logprob: -5.883858680725098
    3. '<|end|>' → logprob: -6.008858680725098
    4. '\' → logprob: -6.883858680725098
    5. '```' → logprob: -6.883858680725098
    6. 'import' → logprob: -7.133858680725098
    7. '<|end|>' → logprob: -9.133858680725098
    8. 'def' → logprob: -9.633858680725098
    9. '.pi' → logprob: -9.883858680725098
    10. 'newline' → logprob: -9.883858680725098

Token 4: ' itertools' (ID: 103178)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.8069501519203186
    2. ' statistics' → logprob: -2.181950092315674
    3. ' numpy' → logprob: -2.181950092315674
    4. ' math' → logprob: -2.431950092315674
    5. ' collections' → logprob: -3.056950092315674
    6. ' sys' → logprob: -3.181950092315674
    7. 'cmath' → logprob: -3.181950092315674
    8. 'os' → logprob: -3.931950092315674
    9. ' random' → logprob: -4.306950092315674
    10. 'numpy' → logprob: -4.431950092315674

Token 5: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.14755019545555115
    2. 'import' → logprob: -2.022550106048584
    3. '.' → logprob: -5.397550106048584
    4. '.import' → logprob: -8.522550582885742
    5. '	import' → logprob: -9.772550582885742
    6. ' .' → logprob: -10.147550582885742
    7. '_import' → logprob: -11.772550582885742
    8. ' ' → logprob: -11.897550582885742
    9. '<|end|>' → logprob: -11.897550582885742
    10. ' itertools' → logprob: -12.522550582885742

Token 6: ' accumulate' (ID: 74226)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.320250540971756
    2. 'per' → logprob: -2.0702505111694336
    3. 'count' → logprob: -2.5702505111694336
    4. 'product' → logprob: -3.1952505111694336
    5. 'cycle' → logprob: -4.570250511169434
    6. 'group' → logprob: -4.820250511169434
    7. ' permutations' → logprob: -5.445250511169434
    8. 'import' → logprob: -5.945250511169434
    9. 'chain' → logprob: -6.570250511169434
    10. ' combinations' → logprob: -6.695250511169434

Token 7: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02672543004155159
    2. '(
' → logprob: -3.9017255306243896
    3. 'def' → logprob: -5.9017252922058105
    4. '\' → logprob: -6.9017252922058105
    5. 'import' → logprob: -7.2767252922058105
    6. '\n' → logprob: -7.6517252922058105
    7. '(

' → logprob: -8.151725769042969
    8. ',' → logprob: -8.651725769042969
    9. '\(' → logprob: -9.026725769042969
    10. '```' → logprob: -9.026725769042969

Token 8: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6092743277549744
    2. 'def' → logprob: -2.234274387359619
    3. '(
' → logprob: -2.484274387359619
    4. '
' → logprob: -2.859274387359619
    5. '

' → logprob: -2.984274387359619
    6. '```' → logprob: -3.484274387359619
    7. '(

' → logprob: -3.484274387359619
    8. '\n' → logprob: -3.609274387359619
    9. 'import' → logprob: -3.734274387359619
    10. '\' → logprob: -4.734274387359619

Token 9: ' collections' (ID: 22690)
  Prédit: ' operator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.11607444286346436
    2. ' collections' → logprob: -2.866074562072754
    3. 'operator' → logprob: -3.616074562072754
    4. 'collections' → logprob: -4.241074562072754
    5. ' functools' → logprob: -5.741074562072754
    6. ' math' → logprob: -5.991074562072754
    7. ' heap' → logprob: -6.366074562072754
    8. ' typing' → logprob: -6.741074562072754
    9. ' ' → logprob: -7.116074562072754
    10. ' fractions' → logprob: -7.741074562072754

Token 10: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.4712216258049011
    2. '.' → logprob: -1.471221685409546
    3. ' import' → logprob: -1.971221685409546
    4. '.Counter' → logprob: -5.596221446990967
    5. '```' → logprob: -6.346221446990967
    6. '<|end|>' → logprob: -7.721221446990967
    7. '.import' → logprob: -8.596221923828125
    8. ' ' → logprob: -8.721221923828125
    9. '	import' → logprob: -9.096221923828125
    10. ' defaultdict' → logprob: -9.346221923828125

Token 11: ' deque' (ID: 90347)
  Prédit: ' defaultdict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.40575429797172546
    2. 'deque' → logprob: -1.5307543277740479
    3. ' deque' → logprob: -2.280754327774048
    4. 'abc' → logprob: -5.030754089355469
    5. ' abc' → logprob: -5.280754089355469
    6. ' Counter' → logprob: -6.280754089355469
    7. 'default' → logprob: -7.530754089355469
    8. 'Counter' → logprob: -8.030754089355469
    9. ' named' → logprob: -8.405754089355469
    10. 'named' → logprob: -8.780754089355469

Token 12: ',' (ID: 11)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.8983665704727173
    2. '\' → logprob: -1.7733665704727173
    3. 'def' → logprob: -2.1483664512634277
    4. '

' → logprob: -2.3983664512634277
    5. '
' → logprob: -2.5233664512634277
    6. '```' → logprob: -2.8983664512634277
    7. 'import' → logprob: -3.7733664512634277
    8. ',' → logprob: -4.648366451263428
    9. '(' → logprob: -4.898366451263428
    10. ',
' → logprob: -5.273366451263428

Token 13: ' Counter' (ID: 32251)
  Prédit: ' defaultdict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.23949764668941498
    2. 'default' → logprob: -1.7394976615905762
    3. 'Counter' → logprob: -3.864497661590576
    4. ' Counter' → logprob: -4.989497661590576
    5. 'named' → logprob: -5.114497661590576
    6. ' named' → logprob: -5.864497661590576
    7. 'Ordered' → logprob: -7.614497661590576
    8. 'deque' → logprob: -9.614497184753418
    9. ' Ordered' → logprob: -9.989497184753418
    10. 'Chain' → logprob: -10.489497184753418

Token 14: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.2274986505508423
    2. 'def' → logprob: -1.4774986505508423
    3. '\n' → logprob: -1.6024986505508423
    4. '\' → logprob: -2.6024985313415527
    5. '

' → logprob: -2.8524985313415527
    6. 'import' → logprob: -3.2274985313415527
    7. 'd' → logprob: -3.8524985313415527
    8. ',' → logprob: -3.9774985313415527
    9. ',
' → logprob: -4.602498531341553
    10. '```' → logprob: -4.602498531341553

Token 15: ' defaultdict' (ID: 107098)
  Prédit: ' defaultdict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.03429477661848068
    2. 'default' → logprob: -3.409294843673706
    3. ' named' → logprob: -8.409295082092285
    4. 'named' → logprob: -8.659295082092285
    5. ' Ordered' → logprob: -9.284295082092285
    6. 'Ordered' → logprob: -9.409295082092285
    7. ' default' → logprob: -10.284295082092285
    8. 'deque' → logprob: -11.534295082092285
    9. ' deque' → logprob: -12.284295082092285
    10. 'Default' → logprob: -12.409295082092285

Token 16: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6753527522087097
    2. '

' → logprob: -1.0503528118133545
    3. 'import' → logprob: -3.3003528118133545
    4. 'def' → logprob: -3.4253528118133545
    5. '```' → logprob: -3.8003528118133545
    6. '\n' → logprob: -4.175352573394775
    7. ',' → logprob: -4.550352573394775
    8. '\' → logprob: -5.550352573394775
    9. '
' → logprob: -5.800352573394775
    10. '#' → logprob: -6.050352573394775

Token 17: 'from' (ID: 2845)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.0355144739151
    2. 'def' → logprob: -1.1605144739151
    3. '

' → logprob: -2.1605143547058105
    4. ',' → logprob: -3.0355143547058105
    5. '
' → logprob: -3.0355143547058105
    6. '```' → logprob: -3.0355143547058105
    7. ',

' → logprob: -4.4105143547058105
    8. '\n' → logprob: -4.5355143547058105
    9. ',
' → logprob: -4.9105143547058105
    10. '\' → logprob: -5.2855143547058105

Token 18: ' heap' (ID: 37237)
  Prédit: ' heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' heap' → logprob: -0.3465384244918823
    2. ' typing' → logprob: -1.9715384244918823
    3. 'heap' → logprob: -2.721538543701172
    4. ' operator' → logprob: -3.221538543701172
    5. ' functools' → logprob: -3.596538543701172
    6. ' bis' → logprob: -4.846538543701172
    7. 'typing' → logprob: -5.596538543701172
    8. 'operator' → logprob: -5.721538543701172
    9. ' fractions' → logprob: -6.471538543701172
    10. 'bis' → logprob: -6.846538543701172

Token 19: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.2664456789934775e-06
    2. '.' → logprob: -13.875000953674316
    3. 's' → logprob: -16.875001907348633
    4. 'import' → logprob: -16.875001907348633
    5. '[' → logprob: -17.125001907348633
    6. 'queue' → logprob: -17.375001907348633
    7. 'space' → logprob: -18.250001907348633
    8. 'dict' → logprob: -18.250001907348633
    9. '_' → logprob: -18.625001907348633
    10. 'n' → logprob: -18.875001907348633

Token 20: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.021058307960629463
    2. 'import' → logprob: -3.8960583209991455
    3. ' ' → logprob: -7.771058082580566
    4. '<|end|>' → logprob: -9.646058082580566
    5. '.' → logprob: -11.396058082580566
    6. '	import' → logprob: -11.896058082580566
    7. ' imports' → logprob: -12.896058082580566
    8. '_import' → logprob: -13.021058082580566
    9. '  ' → logprob: -14.021058082580566
    10. ' ```' → logprob: -14.271058082580566

Token 21: ' he' (ID: 501)
  Prédit: ' he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' he' → logprob: -0.4839315116405487
    2. 'he' → logprob: -0.9839315414428711
    3. 'heap' → logprob: -4.983931541442871
    4. ' n' → logprob: -6.233931541442871
    5. ' heap' → logprob: -7.608931541442871
    6. 'n' → logprob: -8.358931541442871
    7. '```' → logprob: -8.858931541442871
    8. 'nl' → logprob: -10.108931541442871
    9. ' ' → logprob: -10.358931541442871
    10. 'merge' → logprob: -10.733931541442871

Token 22: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.018158020451664925
    2. 'ap' → logprob: -4.018157958984375
    3. 'a' → logprob: -11.893157958984375
    4. 'ап' → logprob: -14.893157958984375
    5. 'apl' → logprob: -15.768157958984375
    6. 'appen' → logprob: -15.893157958984375
    7. '[' → logprob: -16.143157958984375
    8. 'aq' → logprob: -16.143157958984375
    9. 'aps' → logprob: -16.268157958984375
    10. '```' → logprob: -17.018157958984375

Token 23: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.00764613738283515
    2. 'op' → logprob: -4.882646083831787
    3. 'us' → logprob: -10.757646560668945
    4. 'u' → logprob: -11.007646560668945
    5. 'o' → logprob: -13.507646560668945
    6. '```' → logprob: -15.132646560668945
    7. 'osh' → logprob: -16.257646560668945
    8. 'opleft' → logprob: -16.257646560668945
    9. '[' → logprob: -16.507646560668945
    10. '   ' → logprob: -16.632646560668945

Token 24: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.48386725783348083
    2. '<|end|>' → logprob: -1.2338672876358032
    3. ' ' → logprob: -2.8588671684265137
    4. 'he' → logprob: -3.7338671684265137
    5. '(' → logprob: -5.733867168426514
    6. ' ,' → logprob: -6.108867168426514
    7. ')' → logprob: -6.233867168426514
    8. ' he' → logprob: -6.358867168426514
    9. '<|end|>' → logprob: -6.983867168426514
    10. '(heap' → logprob: -8.858867645263672

Token 25: ' he' (ID: 501)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.4288548529148102
    2. ' he' → logprob: -1.0538548231124878
    3. 'heap' → logprob: -9.053854942321777
    4. ' ' → logprob: -11.178854942321777
    5. ' heap' → logprob: -11.803854942321777
    6. '```' → logprob: -12.053854942321777
    7. '.he' → logprob: -13.053854942321777
    8. 'h' → logprob: -13.866354942321777
    9. '  ' → logprob: -14.053854942321777
    10. '   ' → logprob: -14.491354942321777

Token 26: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -7.3458322731312364e-06
    2. 'ap' → logprob: -11.875007629394531
    3. 'appen' → logprob: -16.25000762939453
    4. 'pp' → logprob: -16.37500762939453
    5. 'APP' → logprob: -16.37500762939453
    6. ' app' → logprob: -16.75000762939453
    7. 'a' → logprob: -16.87500762939453
    8. '_app' → logprob: -17.12500762939453
    9. 'App' → logprob: -17.25000762939453
    10. '(app' → logprob: -18.37500762939453

Token 27: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.0007304243044927716
    2. 'ush' → logprob: -7.250730514526367
    3. 'o' → logprob: -10.875730514526367
    4. 'opp' → logprob: -14.625730514526367
    5. 'p' → logprob: -14.750730514526367
    6. 'opleft' → logprob: -15.000730514526367
    7. 'opl' → logprob: -16.250730514526367
    8. 'opt' → logprob: -16.375730514526367
    9. '   ' → logprob: -17.375730514526367
    10. ' op' → logprob: -17.750730514526367

Token 28: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.36211898922920227
    2. '

' → logprob: -1.8621189594268799
    3. '\n' → logprob: -2.98711895942688
    4. 'import' → logprob: -3.23711895942688
    5. '```' → logprob: -3.86211895942688
    6. '<|end|>' → logprob: -4.737119197845459
    7. 'def' → logprob: -5.112119197845459
    8. ',' → logprob: -5.112119197845459
    9. '' → logprob: -5.862119197845459
    10. '\' → logprob: -5.862119197845459

Token 29: 'import' (ID: 561)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.3735278844833374
    2. 'def' → logprob: -1.8735278844833374
    3. 'import' → logprob: -1.8735278844833374
    4. '#' → logprob: -2.248528003692627
    5. '

' → logprob: -2.373528003692627
    6. ',' → logprob: -3.248528003692627
    7. 'd' → logprob: -3.623528003692627
    8. '\' → logprob: -3.748528003692627
    9. '\n' → logprob: -3.748528003692627
    10. '```' → logprob: -3.748528003692627

Token 30: ' queue' (ID: 13661)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.002864781767129898
    2. ' os' → logprob: -6.627864837646484
    3. ' re' → logprob: -7.252864837646484
    4. ' bis' → logprob: -8.002864837646484
    5. 'sys' → logprob: -8.502864837646484
    6. ' random' → logprob: -8.877864837646484
    7. ' itertools' → logprob: -10.252864837646484
    8. ' functools' → logprob: -10.252864837646484
    9. ' numpy' → logprob: -10.377864837646484
    10. ' operator' → logprob: -11.377864837646484

Token 31: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5756316184997559
    2. '<|end|>' → logprob: -1.3256316184997559
    3. '

' → logprob: -2.575631618499756
    4. '.' → logprob: -3.075631618499756
    5. 'import' → logprob: -4.200631618499756
    6. '<|end|>' → logprob: -4.700631618499756
    7. ',' → logprob: -5.075631618499756
    8. '\n' → logprob: -5.075631618499756
    9. '\' → logprob: -6.200631618499756
    10. 'n' → logprob: -6.200631618499756

Token 32: '#from' (ID: 167638)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6198301911354065
    2. '<|end|>' → logprob: -1.4948301315307617
    3. 'import' → logprob: -2.4948301315307617
    4. '#' → logprob: -3.1198301315307617
    5. '

' → logprob: -3.2448301315307617
    6. 'n' → logprob: -3.8698301315307617
    7. 'def' → logprob: -4.494830131530762
    8. '\n' → logprob: -4.619830131530762
    9. ',' → logprob: -5.244830131530762
    10. '```' → logprob: -5.369830131530762

Token 33: ' numpy' (ID: 19529)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' collections' → logprob: -1.2455558776855469
    2. ' math' → logprob: -1.7455558776855469
    3. ' functools' → logprob: -2.245555877685547
    4. 'collections' → logprob: -2.370555877685547
    5. ' threading' → logprob: -2.495555877685547
    6. ' sklearn' → logprob: -2.620555877685547
    7. ' itertools' → logprob: -2.995555877685547
    8. ' multiprocessing' → logprob: -3.745555877685547
    9. ' socket' → logprob: -4.245555877685547
    10. ' copy' → logprob: -4.620555877685547

Token 34: ' import' (ID: 1588)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 35: ' array' (ID: 2644)
  Prédit: ' array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' array' → logprob: -0.18905317783355713
    2. 'array' → logprob: -1.9390531778335571
    3. ' as' → logprob: -4.314053058624268
    4. ' random' → logprob: -5.439053058624268
    5. ' ndarray' → logprob: -5.814053058624268
    6. ' arrays' → logprob: -6.314053058624268
    7. ' l' → logprob: -7.064053058624268
    8. 'random' → logprob: -7.189053058624268
    9. ' zeros' → logprob: -7.689053058624268
    10. ' ' → logprob: -8.064053535461426

Token 36: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5078473091125488
    2. '#' → logprob: -1.8828473091125488
    3. '<|end|>' → logprob: -2.132847309112549
    4. '\n' → logprob: -2.757847309112549
    5. '

' → logprob: -3.757847309112549
    6. '' → logprob: -4.632847309112549
    7. 'import' → logprob: -4.757847309112549
    8. '\' → logprob: -5.007847309112549
    9. 'n' → logprob: -5.632847309112549
    10. '```' → logprob: -6.257847309112549

Token 37: 'from' (ID: 2845)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.43742477893829346
    2. 'import' → logprob: -1.9374247789382935
    3. '
' → logprob: -2.687424659729004
    4. 'def' → logprob: -3.437424659729004
    5. '<|end|>' → logprob: -3.437424659729004
    6. '\n' → logprob: -4.312424659729004
    7. 'n' → logprob: -4.562424659729004
    8. 'x' → logprob: -5.187424659729004
    9. '\' → logprob: -5.312424659729004
    10. 'a' → logprob: -5.312424659729004

Token 38: ' fractions' (ID: 110523)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.478350430727005
    2. ' collections' → logprob: -1.4783504009246826
    3. ' itertools' → logprob: -2.8533504009246826
    4. ' sys' → logprob: -3.1033504009246826
    5. ' typing' → logprob: -3.7283504009246826
    6. ' functools' → logprob: -4.603350639343262
    7. ' bis' → logprob: -5.353350639343262
    8. 'collections' → logprob: -5.853350639343262
    9. ' random' → logprob: -6.603350639343262
    10. ' operator' → logprob: -7.103350639343262

Token 39: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.06225234642624855
    2. 'import' → logprob: -2.8122522830963135
    3. ' ' → logprob: -8.812252044677734
    4. '<|end|>' → logprob: -9.812252044677734
    5. '	import' → logprob: -10.437252044677734
    6. '_import' → logprob: -10.562252044677734
    7. ' ' → logprob: -11.937252044677734
    8. '.' → logprob: -12.312252044677734
    9. '<|end|>' → logprob: -13.062252044677734
    10. '_' → logprob: -13.312252044677734

Token 40: ' gcd' (ID: 106918)
  Prédit: ' Fraction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Fraction' → logprob: -0.14271296560764313
    2. 'Fraction' → logprob: -2.0177130699157715
    3. ' gcd' → logprob: -11.142712593078613
    4. ' F' → logprob: -12.392712593078613
    5. ' fractions' → logprob: -12.392712593078613
    6. 'Fra' → logprob: -12.642712593078613
    7. 'F' → logprob: -13.017712593078613
    8. ' ' → logprob: -13.142712593078613
    9. '	F' → logprob: -13.142712593078613
    10. '```' → logprob: -13.892712593078613

Token 41: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 42: 'from' (ID: 2845)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7102656960487366
    2. ')' → logprob: -1.4602656364440918
    3. '_' → logprob: -1.8352656364440918
    4. ',' → logprob: -3.835265636444092
    5. '
' → logprob: -3.835265636444092
    6. '' → logprob: -4.585265636444092
    7. 's' → logprob: -4.835265636444092
    8. '<|end|>' → logprob: -4.835265636444092
    9. '.' → logprob: -4.960265636444092
    10. 'def' → logprob: -5.335265636444092

Token 43: ' copy' (ID: 5150)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.038401536643505096
    2. ' math' → logprob: -3.2884016036987305
    3. 'fun' → logprob: -8.78840160369873
    4. ' functools' → logprob: -9.03840160369873
    5. 'fra' → logprob: -9.78840160369873
    6. 'operator' → logprob: -10.78840160369873
    7. 'cmath' → logprob: -12.78840160369873
    8. '_math' → logprob: -13.16340160369873
    9. ' fractions' → logprob: -13.78840160369873
    10. 'typing' → logprob: -13.91340160369873

Token 44: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.25213366746902466
    2. 'import' → logprob: -1.5021336078643799
    3. '	import' → logprob: -9.2521333694458
    4. ' ' → logprob: -9.6271333694458
    5. '_import' → logprob: -10.7521333694458
    6. '<|end|>' → logprob: -11.8771333694458
    7. ' importar' → logprob: -12.8771333694458
    8. ' im' → logprob: -13.2521333694458
    9. '.import' → logprob: -13.5021333694458
    10. ' ' → logprob: -13.7521333694458

Token 45: ' deepcopy' (ID: 130230)
  Prédit: ' deepcopy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deepcopy' → logprob: -0.0077243372797966
    2. 'copy' → logprob: -5.257724285125732
    3. 'deep' → logprob: -6.257724285125732
    4. ' copy' → logprob: -7.507724285125732
    5. '.deepcopy' → logprob: -10.75772476196289
    6. ' deep' → logprob: -14.00772476196289
    7. 'import' → logprob: -14.88272476196289
    8. 'deque' → logprob: -15.50772476196289
    9. ' dee' → logprob: -17.50772476196289
    10. 'cpy' → logprob: -17.50772476196289

Token 46: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1028647422790527
    2. '#' → logprob: -1.4778647422790527
    3. '.' → logprob: -1.8528647422790527
    4. '<|end|>' → logprob: -2.1028647422790527
    5. '_' → logprob: -3.2278647422790527
    6. ',' → logprob: -3.3528647422790527
    7. '

' → logprob: -3.6028647422790527
    8. 'def' → logprob: -4.227864742279053
    9. '' → logprob: -4.852864742279053
    10. 'import' → logprob: -5.102864742279053

Token 47: 'MOD' (ID: 52135)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.06016507372260094
    2. 'def' → logprob: -3.5601651668548584
    3. 'd' → logprob: -4.935164928436279
    4. '
' → logprob: -5.185164928436279
    5. ',' → logprob: -5.935164928436279
    6. 'a' → logprob: -5.935164928436279
    7. '_' → logprob: -6.685164928436279
    8. '-' → logprob: -6.810164928436279
    9. '.' → logprob: -6.810164928436279
    10. 'g' → logprob: -6.810164928436279

Token 48: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5868820548057556
    2. '=' → logprob: -0.8368820548057556
    3. '_' → logprob: -5.3368821144104
    4. ' ' → logprob: -5.8368821144104
    5. '<|end|>' → logprob: -6.2118821144104
    6. ')' → logprob: -7.0868821144104
    7. ' =)' → logprob: -9.336881637573242
    8. '.' → logprob: -9.461881637573242
    9. ' )' → logprob: -10.461881637573242
    10. ',' → logprob: -10.836881637573242

Token 49: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.012575930915772915
    2. '10' → logprob: -4.387576103210449
    3. '100' → logprob: -9.63757610321045
    4. ' ' → logprob: -15.01257610321045
    5. 'int' → logprob: -15.51257610321045
    6. '1' → logprob: -15.63757610321045
    7. '0' → logprob: -16.137575149536133
    8. '998' → logprob: -16.262575149536133
    9. ' int' → logprob: -16.387575149536133
    10. ' (' → logprob: -17.012575149536133

Token 50: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.011059731245040894
    2. '100' → logprob: -4.511059761047363
    3. '1' → logprob: -12.136059761047363
    4. 'int' → logprob: -12.761059761047363
    5. ' ' → logprob: -12.886059761047363
    6. '998' → logprob: -13.886059761047363
    7. '123' → logprob: -16.761058807373047
    8. '(' → logprob: -17.636058807373047
    9. '999' → logprob: -17.886058807373047
    10. '2' → logprob: -18.011058807373047

Token 51: '**' (ID: 410)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -6.885492621222511e-05
    2. '09' → logprob: -9.750068664550781
    3. '**' → logprob: -11.750068664550781
    4. '```' → logprob: -14.250068664550781
    5. '0' → logprob: -14.875068664550781
    6. '7' → logprob: -15.000068664550781
    7. ' ' → logprob: -15.500068664550781
    8. '^' → logprob: -15.625068664550781
    9. '6' → logprob: -15.875068664550781
    10. '4' → logprob: -15.875068664550781

Token 52: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -2.696889623621246e-06
    2. '09' → logprob: -12.87500286102295
    3. ' ' → logprob: -17.375001907348633
    4. '```' → logprob: -17.750001907348633
    5. '10' → logprob: -18.250001907348633
    6. '+' → logprob: -18.500001907348633
    7. '_' → logprob: -19.875001907348633
    8. '4' → logprob: -20.500001907348633
    9. '９' → logprob: -20.500001907348633
    10. '   ' → logprob: -20.875001907348633

Token 53: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.003256973112002015
    2. ' +' → logprob: -5.753256797790527
    3. '7' → logprob: -9.628256797790527
    4. '+
' → logprob: -12.003256797790527
    5. '+

' → logprob: -13.628256797790527
    6. ' ' → logprob: -14.253256797790527
    7. ' plus' → logprob: -14.253256797790527
    8. '＋' → logprob: -14.253256797790527
    9. '```' → logprob: -14.753256797790527
    10. ' ' → logprob: -14.878256797790527

Token 54: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -1.9266199160483666e-05
    2. '+' → logprob: -10.875019073486328
    3. '9' → logprob: -16.250019073486328
    4. ' ' → logprob: -16.875019073486328
    5. '```' → logprob: -16.875019073486328
    6. '07' → logprob: -17.125019073486328
    7. '   ' → logprob: -18.937519073486328
    8. '

' → logprob: -19.750019073486328
    9. '87' → logprob: -20.062519073486328
    10. '' → logprob: -20.125019073486328

Token 55: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10665694624185562
    2. '

' → logprob: -3.106657028198242
    3. 'def' → logprob: -3.106657028198242
    4. '#' → logprob: -5.606657028198242
    5. '' → logprob: -5.856657028198242
    6. '
' → logprob: -6.356657028198242
    7. '<|end|>' → logprob: -6.356657028198242
    8. '\n' → logprob: -7.481657028198242
    9. '\' → logprob: -8.606657028198242
    10. 'n' → logprob: -8.731657028198242

Token 56: ' big' (ID: 3464)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.3680013418197632
    2. ' prime' → logprob: -1.3680013418197632
    3. ' problem' → logprob: -3.1180014610290527
    4. ' N' → logprob: -3.2430014610290527
    5. ' number' → logprob: -3.2430014610290527
    6. ' INF' → logprob: -3.2430014610290527
    7. ' \' → logprob: -3.3680014610290527
    8. ' #' → logprob: -3.8680014610290527
    9. '7' → logprob: -3.9930014610290527
    10. ' a' → logprob: -4.118001461029053

Token 57: ' mod' (ID: 1812)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.009087449871003628
    2. '_' → logprob: -4.759087562561035
    3. 'space' → logprob: -8.259087562561035
    4. ' space' → logprob: -9.759087562561035
    5. '_space' → logprob: -10.884087562561035
    6. '.' → logprob: -11.134087562561035
    7. 'int' → logprob: -11.259087562561035
    8. '-' → logprob: -11.259087562561035
    9. ' 

' → logprob: -11.259087562561035
    10. '  ' → logprob: -11.634087562561035

Token 58: ' as' (ID: 472)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8256288170814514
    2. '#' → logprob: -1.0756287574768066
    3. '' → logprob: -2.5756287574768066
    4. '_' → logprob: -2.8256287574768066
    5. 'def' → logprob: -3.7006287574768066
    6. '

' → logprob: -3.9506287574768066
    7. '\' → logprob: -5.075628757476807
    8. '\n' → logprob: -5.325628757476807
    9. '<|end|>' → logprob: -5.325628757476807
    10. ',' → logprob: -5.450628757476807

Token 59: ' usual' (ID: 19261)
  Prédit: ' usual'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' usual' → logprob: -1.151055097579956
    2. ' a' → logprob: -2.026055097579956
    3. ' well' → logprob: -2.151055097579956
    4. ' modulus' → logprob: -2.151055097579956
    5. ' is' → logprob: -2.776055097579956
    6. ' used' → logprob: -2.901055097579956
    7. ' standard' → logprob: -3.276055097579956
    8. ' prime' → logprob: -3.776055097579956
    9. 'a' → logprob: -3.901055097579956
    10. ' in' → logprob: -3.901055097579956

Token 60: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2429112046957016
    2. 'def' → logprob: -2.2429111003875732
    3. '

' → logprob: -2.4929111003875732
    4. '#' → logprob: -4.242911338806152
    5. '' → logprob: -5.992911338806152
    6. '\n' → logprob: -6.117911338806152
    7. 'n' → logprob: -6.242911338806152
    8. '
' → logprob: -6.242911338806152
    9. '\' → logprob: -6.867911338806152
    10. ' 

' → logprob: -7.617911338806152

Token 61: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06938494741916656
    2. '#' → logprob: -3.319385051727295
    3. 'd' → logprob: -4.194385051727295
    4. 'n' → logprob: -4.944385051727295
    5. '
' → logprob: -5.444385051727295
    6. '\' → logprob: -6.194385051727295
    7. 'class' → logprob: -6.944385051727295
    8. 'a' → logprob: -8.194384574890137
    9. '\n' → logprob: -8.319384574890137
    10. '' → logprob: -8.319384574890137

Token 62: ' main' (ID: 2758)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.040667541325092316
    2. ' solve' → logprob: -4.540667533874512
    3. ' space' → logprob: -4.915667533874512
    4. ' main' → logprob: -5.415667533874512
    5. ' dfs' → logprob: -5.415667533874512
    6. ' s' → logprob: -6.165667533874512
    7. '_' → logprob: -6.165667533874512
    8. ' factor' → logprob: -6.290667533874512
    9. ' factorial' → logprob: -6.915667533874512
    10. ' calculate' → logprob: -7.165667533874512

Token 63: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03850948438048363
    2. '():' → logprob: -3.2885093688964844
    3. '(:' → logprob: -9.038509368896484
    4. '()' → logprob: -9.163509368896484
    5. ' (' → logprob: -9.413509368896484
    6. ':' → logprob: -9.538509368896484
    7. '(
' → logprob: -10.538509368896484
    8. '_' → logprob: -10.913509368896484
    9. '```' → logprob: -11.538509368896484
    10. '("("' → logprob: -12.163509368896484

Token 64: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.059404004365205765
    2. ':' → logprob: -3.809403896331787
    3. '    ' → logprob: -4.434403896331787
    4. ' ' → logprob: -4.559403896331787
    5. '(' → logprob: -5.684403896331787
    6. 'n' → logprob: -5.809403896331787
    7. '(n' → logprob: -6.809403896331787
    8. '<|end|>' → logprob: -6.934403896331787
    9. ' :' → logprob: -7.184403896331787
    10. '    
' → logprob: -7.309403896331787

Token 65: ' #' (ID: 1069)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8252382278442383
    2. 'n' → logprob: -1.0752382278442383
    3. ' n' → logprob: -1.5752382278442383
    4. '    ' → logprob: -5.450238227844238
    5. '   ' → logprob: -6.325238227844238
    6. ' pass' → logprob: -6.825238227844238
    7. '(' → logprob: -6.950238227844238
    8. ' input' → logprob: -7.200238227844238
    9. 'r' → logprob: -7.575238227844238
    10. ' )' → logprob: -7.700238227844238

Token 66: ' Some' (ID: 6083)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.05800686776638031
    2. 'n' → logprob: -4.308006763458252
    3. ' ' → logprob: -4.308006763458252
    4. ' input' → logprob: -4.308006763458252
    5. '    ' → logprob: -4.808006763458252
    6. '   ' → logprob: -6.933006763458252
    7. 'input' → logprob: -6.933006763458252
    8. ' data' → logprob: -7.058006763458252
    9. ' s' → logprob: -7.058006763458252
    10. ' pass' → logprob: -7.433006763458252

Token 67: 'what' (ID: 13347)
  Prédit: ' code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' code' → logprob: -0.9180919528007507
    2. ' logic' → logprob: -1.7930920124053955
    3. '   ' → logprob: -2.1680920124053955
    4. '_code' → logprob: -2.4180920124053955
    5. 'code' → logprob: -3.0430920124053955
    6. 'thing' → logprob: -4.043091773986816
    7. ' more' → logprob: -4.418091773986816
    8. '_' → logprob: -4.543091773986816
    9. ' basic' → logprob: -4.543091773986816
    10. ' comments' → logprob: -4.543091773986816

Token 68: ' classic' (ID: 13686)
  Prédit: ' unfinished'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' unfinished' → logprob: -0.6793352961540222
    2. ' incomplete' → logprob: -1.304335355758667
    3. ' detailed' → logprob: -3.179335355758667
    4. '_' → logprob: -3.304335355758667
    5. ' tricky' → logprob: -4.179335117340088
    6. ' complex' → logprob: -4.679335117340088
    7. 'unfinished' → logprob: -4.679335117340088
    8. ' more' → logprob: -4.804335117340088
    9. ' like' → logprob: -4.929335117340088
    10. ' long' → logprob: -5.304335117340088

Token 69: ' input' (ID: 3422)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.467294692993164
    2. ':' → logprob: -1.592294692993164
    3. ' ' → logprob: -1.842294692993164
    4. '   ' → logprob: -1.842294692993164
    5. 'def' → logprob: -2.717294692993164
    6. '    ' → logprob: -3.467294692993164
    7. ' :' → logprob: -3.592294692993164
    8. ' def' → logprob: -4.467294692993164
    9. ' problem' → logprob: -4.467294692993164
    10. ' dp' → logprob: -4.717294692993164

Token 70: ' reading' (ID: 6085)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.10809985548257828
    2. ' =' → logprob: -2.358099937438965
    3. 's' → logprob: -5.858099937438965
    4. '=' → logprob: -6.983099937438965
    5. '_lines' → logprob: -6.983099937438965
    6. '_line' → logprob: -7.608099937438965
    7. '()
' → logprob: -7.858099937438965
    8. '().' → logprob: -8.358099937438965
    9. '():' → logprob: -8.608099937438965
    10. '(' → logprob: -8.608099937438965

Token 71: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5054341554641724
    2. '()' → logprob: -1.7554341554641724
    3. ',' → logprob: -2.630434036254883
    4. ' lines' → logprob: -3.505434036254883
    5. ':' → logprob: -3.630434036254883
    6. '<|end|>' → logprob: -4.255434036254883
    7. '...' → logprob: -4.630434036254883
    8. ' ' → logprob: -4.880434036254883
    9. 's' → logprob: -5.005434036254883
    10. ' and' → logprob: -5.005434036254883

Token 72: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07445146143436432
    2. ' ' → logprob: -3.449451446533203
    3. '()' → logprob: -4.574451446533203
    4. '    ' → logprob: -5.199451446533203
    5. 's' → logprob: -5.574451446533203
    6. ':' → logprob: -5.699451446533203
    7. '(' → logprob: -5.699451446533203
    8. ',' → logprob: -5.699451446533203
    9. '  ' → logprob: -5.949451446533203
    10. '():' → logprob: -6.949451446533203

Token 73: ' N' (ID: 478)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4487929046154022
    2. ' n' → logprob: -1.0737929344177246
    3. '   ' → logprob: -3.9487929344177246
    4. 'N' (adapté à ' N') → logprob: -9.073792457580566
    5. ' N' → logprob: -9.073792457580566
    6. '	n' → logprob: -9.198792457580566
    7. 's' → logprob: -9.323792457580566
    8. ' ' → logprob: -10.698792457580566
    9. ' data' → logprob: -10.698792457580566
    10. ' input' → logprob: -10.698792457580566

Token 74: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6350287795066833
    2. ',' → logprob: -0.7600287795066833
    3. '=' → logprob: -6.760028839111328
    4. ' ,' → logprob: -6.885028839111328
    5. '=int' → logprob: -8.885028839111328
    6. ' ' → logprob: -10.010028839111328
    7. '=input' → logprob: -10.760028839111328
    8. ',int' → logprob: -12.135028839111328
    9. '   ' → logprob: -12.260028839111328
    10. ',input' → logprob: -12.385028839111328

Token 75: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.3132792115211487
    2. 'int' → logprob: -1.313279151916504
    3. ' ' → logprob: -11.188279151916504
    4. '=int' → logprob: -13.688279151916504
    5. ' input' → logprob: -13.938279151916504
    6. 'input' → logprob: -14.813279151916504
    7. '<int' → logprob: -15.063279151916504
    8. '(int' → logprob: -15.438279151916504
    9. '	int' → logprob: -15.563279151916504
    10. '10' → logprob: -15.938279151916504

Token 76: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.07908134162425995
    2. '(' → logprob: -2.5790812969207764
    3. 'input' → logprob: -8.579081535339355
    4. '()' → logprob: -13.454081535339355
    5. '(in' → logprob: -14.329081535339355
    6. ' input' → logprob: -14.579081535339355
    7. '(
' → logprob: -15.329081535339355
    8. '('' → logprob: -15.329081535339355
    9. '(inp' → logprob: -15.954081535339355
    10. '(open' → logprob: -16.07908058166504

Token 77: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.20178177952766418
    2. '()' → logprob: -1.7017817497253418
    3. '(' → logprob: -8.3267822265625
    4. ')' → logprob: -10.4517822265625
    5. '().' → logprob: -10.4517822265625
    6. '()))' → logprob: -10.7017822265625
    7. ' ())' → logprob: -11.7017822265625
    8. '();)' → logprob: -11.9517822265625
    9. '()`' → logprob: -12.0767822265625
    10. '());' → logprob: -12.2017822265625

Token 78: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 79: ' vals' (ID: 58985)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' A' → logprob: -1.0021557807922363
    2. ' ' → logprob: -1.1271557807922363
    3. 'a' → logprob: -3.2521557807922363
    4. ' numbers' → logprob: -3.2521557807922363
    5. 'A' → logprob: -3.6271557807922363
    6. 's' → logprob: -3.7521557807922363
    7. ' a' → logprob: -3.7521557807922363
    8. 'arr' → logprob: -3.8771557807922363
    9. 'numbers' → logprob: -3.8771557807922363
    10. 'data' → logprob: -4.002155780792236

Token 80: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0028423182666301727
    2. '=' → logprob: -5.877842426300049
    3. '[' → logprob: -11.12784194946289
    4. ' =[' → logprob: -12.00284194946289
    5. '=[]' → logprob: -12.62784194946289
    6. '[]' → logprob: -12.75284194946289
    7. ',' → logprob: -12.87784194946289
    8. ' ' → logprob: -12.87784194946289
    9. '[:]' → logprob: -13.37784194946289
    10. '_' → logprob: -14.37784194946289

Token 81: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.028143787756562233
    2. 'list' → logprob: -3.653143882751465
    3. ' [' → logprob: -6.403143882751465
    4. '[' → logprob: -9.278143882751465
    5. ' []' → logprob: -10.278143882751465
    6. '[]' → logprob: -10.778143882751465
    7. '[list' → logprob: -11.153143882751465
    8. ' map' → logprob: -11.653143882751465
    9. 'deque' → logprob: -12.653143882751465
    10. ' ' → logprob: -13.153143882751465

Token 82: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.029843395575881004
    2. '(' → logprob: -3.529843330383301
    3. '(input' → logprob: -9.7798433303833
    4. '(int' → logprob: -10.7798433303833
    5. '()' → logprob: -12.4048433303833
    6. '(range' → logprob: -12.6548433303833
    7. 'map' → logprob: -13.0298433303833
    8. '(filter' → logprob: -13.1548433303833
    9. ' map' → logprob: -13.4048433303833
    10. '(acc' → logprob: -14.7798433303833

Token 83: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0003936152206733823
    2. '(' → logprob: -7.875393390655518
    3. 'int' → logprob: -11.875393867492676
    4. ')' → logprob: -12.625393867492676
    5. ',int' → logprob: -13.500393867492676
    6. '(
' → logprob: -14.625393867492676
    7. '<int' → logprob: -14.750393867492676
    8. '=int' → logprob: -15.250393867492676
    9. ']int' → logprob: -15.625393867492676
    10. '[int' → logprob: -15.875393867492676

Token 84: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.25809913873672485
    2. ',input' → logprob: -1.75809907913208
    3. ',' → logprob: -3.50809907913208
    4. '(' → logprob: -3.75809907913208
    5. 'input' → logprob: -6.63309907913208
    6. ')' → logprob: -8.133099555969238
    7. ' ,' → logprob: -9.883099555969238
    8. ' (' → logprob: -10.258099555969238
    9. ' input' → logprob: -10.758099555969238
    10. ' ' → logprob: -10.883099555969238

Token 85: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.2520228624343872
    2. ' input' → logprob: -1.5020228624343872
    3. '(input' → logprob: -9.877022743225098
    4. ',input' → logprob: -11.252022743225098
    5. '	input' → logprob: -11.627022743225098
    6. ' ' → logprob: -12.002022743225098
    7. ')' → logprob: -12.502022743225098
    8. '   ' → logprob: -12.502022743225098
    9. '=input' → logprob: -13.002022743225098
    10. '<input' → logprob: -13.752022743225098

Token 86: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.5094070477061905e-05
    2. '()' → logprob: -11.750015258789062
    3. '(' → logprob: -12.625015258789062
    4. ' ().' → logprob: -13.625015258789062
    5. ')' → logprob: -13.750015258789062
    6. '.split' → logprob: -15.125015258789062
    7. 'split' → logprob: -15.500015258789062
    8. '()))' → logprob: -15.750015258789062
    9. ' ' → logprob: -15.875015258789062
    10. ' .' → logprob: -15.875015258789062

Token 87: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.002481842413544655
    2. 'strip' → logprob: -6.002481937408447
    3. 'rstrip' → logprob: -12.752481460571289
    4. ' split' → logprob: -13.127481460571289
    5. '(split' → logprob: -13.752481460571289
    6. 'spl' → logprob: -16.37748146057129
    7. ')' → logprob: -16.62748146057129
    8. 's' → logprob: -16.87748146057129
    9. 'read' → logprob: -17.75248146057129
    10. ' ' → logprob: -18.00248146057129

Token 88: '()))
' (ID: 24521)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.401328980922699
    2. ')' → logprob: -1.7763290405273438
    3. '()))' → logprob: -2.0263290405273438
    4. '())' → logprob: -4.151329040527344
    5. '(' → logprob: -4.776329040527344
    6. '()' → logprob: -5.276329040527344
    7. ')))' → logprob: -8.776329040527344
    8. ' ))' → logprob: -10.901329040527344
    9. '())))' → logprob: -11.776329040527344
    10. '()))
' → logprob: -12.151329040527344

Token 89: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0059746503829956
    2. ')' → logprob: -1.7559746503829956
    3. ' ' → logprob: -2.380974769592285
    4. '#' → logprob: -2.755974769592285
    5. '   ' → logprob: -2.755974769592285
    6. '<|end|>' → logprob: -2.880974769592285
    7. '    
' → logprob: -3.130974769592285
    8. '[' → logprob: -3.380974769592285
    9. ' 
' → logprob: -3.630974769592285
    10. 'def' → logprob: -4.505974769592285

Token 90: ' vals' (ID: 58985)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0097928047180176
    2. '#' → logprob: -1.7597928047180176
    3. ')' → logprob: -1.8847928047180176
    4. '\n' → logprob: -2.5097928047180176
    5. ':' → logprob: -2.7597928047180176
    6. '\' → logprob: -2.8847928047180176
    7. ' ' → logprob: -3.5097928047180176
    8. '.' → logprob: -3.7597928047180176
    9. ' 
' → logprob: -4.509792804718018
    10. ',' → logprob: -4.759792804718018

Token 91: '.sort' (ID: 19551)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.228445902466774
    2. ')' → logprob: -2.2284460067749023
    3. '[' → logprob: -3.3534460067749023
    4. '<|end|>' → logprob: -3.8534460067749023
    5. '.sort' → logprob: -4.228446006774902
    6. '[:]' → logprob: -4.728446006774902
    7. ',' → logprob: -5.228446006774902
    8. '=' → logprob: -5.603446006774902
    9. '.reverse' → logprob: -6.228446006774902
    10. '.append' → logprob: -6.978446006774902

Token 92: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.026335015892982483
    2. '(' → logprob: -3.6513350009918213
    3. '()
' → logprob: -11.526334762573242
    4. '())' → logprob: -12.151334762573242
    5. '()`' → logprob: -12.151334762573242
    6. ' ()' → logprob: -13.276334762573242
    7. '()\' → logprob: -13.276334762573242
    8. '()]' → logprob: -13.776334762573242
    9. '()

' → logprob: -13.776334762573242
    10. '(
' → logprob: -13.776334762573242

Token 93: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5430545806884766
    2. '<|end|>' → logprob: -1.6680545806884766
    3. ':' → logprob: -2.5430545806884766
    4. ')' → logprob: -3.5430545806884766
    5. '[' → logprob: -3.6680545806884766
    6. '\' → logprob: -3.6680545806884766
    7. '   ' → logprob: -4.418054580688477
    8. '\n' → logprob: -4.418054580688477
    9. '#' → logprob: -4.793054580688477
    10. ',' → logprob: -5.043054580688477

Token 94: ' result' (ID: 1534)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.22321054339408875
    2. ':' → logprob: -2.723210573196411
    3. 'n' → logprob: -3.223210573196411
    4. ')' → logprob: -3.723210573196411
    5. ',' → logprob: -4.598210334777832
    6. '\n' → logprob: -4.598210334777832
    7. '#' → logprob: -4.723210334777832
    8. '\' → logprob: -4.848210334777832
    9. '<|end|>' → logprob: -5.348210334777832
    10. '.' → logprob: -5.723210334777832

Token 95: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011172904632985592
    2. '=' → logprob: -4.511172771453857
    3. ' ' → logprob: -9.136173248291016
    4. ' +=' → logprob: -12.511173248291016
    5. ' =
' → logprob: -12.886173248291016
    6. '_' → logprob: -13.011173248291016
    7. 's' → logprob: -13.261173248291016
    8. ' ' → logprob: -13.386173248291016
    9. ':' → logprob: -14.011173248291016
    10. ' =)' → logprob: -14.011173248291016

Token 96: ' (' (ID: 350)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.22741933166980743
    2. '0' → logprob: -1.602419376373291
    3. ' []' → logprob: -7.102419376373291
    4. ' vals' → logprob: -8.102418899536133
    5. '[]' → logprob: -8.227418899536133
    6. ' ' → logprob: -8.852418899536133
    7. ' [' → logprob: -9.227418899536133
    8. 'vals' → logprob: -9.477418899536133
    9. '1' → logprob: -9.727418899536133
    10. ' defaultdict' → logprob: -10.102418899536133

Token 97: 'vals' (ID: 44567)
  Prédit: ' vals'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vals' → logprob: -0.8843021392822266
    2. 'vals' → logprob: -1.6343021392822266
    3. ' ' → logprob: -1.7593021392822266
    4. '0' → logprob: -1.8843021392822266
    5. '1' → logprob: -2.8843021392822266
    6. ' sum' → logprob: -6.384302139282227
    7. ' math' → logprob: -6.509302139282227
    8. '(vals' → logprob: -6.634302139282227
    9. ')' → logprob: -6.759302139282227
    10. ' (' → logprob: -7.134302139282227

Token 98: '[' (ID: 58)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.34910672903060913
    2. '[' → logprob: -1.224106788635254
    3. '[len' → logprob: -8.724106788635254
    4. ' [-' → logprob: -8.974106788635254
    5. ')' → logprob: -9.224106788635254
    6. ' [' → logprob: -9.349106788635254
    7. '[N' → logprob: -10.349106788635254
    8. '[
' → logprob: -10.849106788635254
    9. '[n' → logprob: -10.974106788635254
    10. '[::-' → logprob: -11.099106788635254

Token 99: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4786304831504822
    2. '-' → logprob: -0.9786304831504822
    3. ' ' → logprob: -5.853630542755127
    4. ' -' → logprob: -6.853630542755127
    5. '1' → logprob: -7.728630542755127
    6. 'len' → logprob: -9.978630065917969
    7. ']' → logprob: -10.728630065917969
    8. '2' → logprob: -10.853630065917969
    9. '])' → logprob: -10.853630065917969
    10. ')' → logprob: -11.166130065917969

Token 100: ']+' (ID: 15344)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5624203085899353
    2. '+' → logprob: -1.43742036819458
    3. ' *' → logprob: -1.93742036819458
    4. '*' → logprob: -3.56242036819458
    5. ')' → logprob: -4.93742036819458
    6. ' -' → logprob: -5.43742036819458
    7. '**' → logprob: -5.81242036819458
    8. ' **' → logprob: -6.56242036819458
    9. '-' → logprob: -6.68742036819458
    10. ' ' → logprob: -7.18742036819458

Token 101: 'vals' (ID: 44567)
  Prédit: ' vals'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vals' → logprob: -0.11384101957082748
    2. 'vals' → logprob: -2.2388410568237305
    3. '(vals' → logprob: -7.4888410568237305
    4. '1' → logprob: -8.86384105682373
    5. ' (' → logprob: -9.73884105682373
    6. 'val' → logprob: -9.73884105682373
    7. ' ' → logprob: -9.73884105682373
    8. ' val' → logprob: -9.98884105682373
    9. '(' → logprob: -11.48884105682373
    10. ' MOD' → logprob: -11.61384105682373

Token 102: '[' (ID: 58)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.47157588601112366
    2. ')' → logprob: -1.5965758562088013
    3. '[' → logprob: -1.9715758562088013
    4. '])' → logprob: -4.721575736999512
    5. ' )' → logprob: -4.846575736999512
    6. '-' → logprob: -5.096575736999512
    7. ']' → logprob: -5.721575736999512
    8. '//' → logprob: -6.471575736999512
    9. '[N' → logprob: -7.346575736999512
    10. ')//' → logprob: -7.346575736999512

Token 103: '1' (ID: 16)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.18165895342826843
    2. '1' → logprob: -1.8066589832305908
    3. 'N' → logprob: -6.806658744812012
    4. ' -' → logprob: -7.681658744812012
    5. '-N' → logprob: -8.806658744812012
    6. '0' → logprob: -8.931658744812012
    7. ' ' → logprob: -10.931658744812012
    8. '(' → logprob: -11.931658744812012
    9. '   ' → logprob: -12.056658744812012
    10. ' N' → logprob: -12.056658744812012

Token 104: '])/' (ID: 93047)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012910429388284683
    2. ')//' → logprob: -4.63791036605835
    3. ')%' → logprob: -6.13791036605835
    4. ' )' → logprob: -7.63791036605835
    5. ')>>' → logprob: -8.387910842895508
    6. '+' → logprob: -9.012910842895508
    7. ')#' → logprob: -10.262910842895508
    8. '))' → logprob: -10.262910842895508
    9. '//' → logprob: -11.012910842895508
    10. ')*' → logprob: -11.012910842895508

Token 105: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0001514557225164026
    2. ' ' → logprob: -8.875151634216309
    3. 'vals' → logprob: -12.000151634216309
    4. '1' → logprob: -13.375151634216309
    5. '3' → logprob: -13.750151634216309
    6. 'val' → logprob: -14.250151634216309
    7. '```' → logprob: -14.625151634216309
    8. '4' → logprob: -14.875151634216309
    9. '(' → logprob: -15.375151634216309
    10. 'float' → logprob: -16.062650680541992

Token 106: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3441564738750458
    2. '<|end|>' → logprob: -1.7191565036773682
    3. '
' → logprob: -2.344156503677368
    4. ' ' → logprob: -5.719156265258789
    5. '.' → logprob: -6.094156265258789
    6. '<|end|>' → logprob: -6.344156265258789
    7. '0' → logprob: -6.719156265258789
    8. ',' → logprob: -6.844156265258789
    9. '**' → logprob: -7.094156265258789
    10. '*' → logprob: -7.344156265258789

Token 107: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5661917328834534
    2. '<|end|>' → logprob: -1.0661916732788086
    3. '
' → logprob: -2.6911916732788086
    4. '\n' → logprob: -5.191191673278809
    5. '*' → logprob: -5.941191673278809
    6. '+' → logprob: -6.316191673278809
    7. '\' → logprob: -6.316191673278809
    8. '<|end|>' → logprob: -6.691191673278809
    9. '#' → logprob: -6.816191673278809
    10. '**' → logprob: -7.066191673278809

Token 108: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07962741702795029
    2. '
' → logprob: -3.329627513885498
    3. '<|end|>' → logprob: -4.329627513885498
    4. ':' → logprob: -5.454627513885498
    5. '\n' → logprob: -5.454627513885498
    6. '**' → logprob: -6.204627513885498
    7. '.' → logprob: -6.329627513885498
    8. ' ' → logprob: -6.329627513885498
    9. '*' → logprob: -6.454627513885498
    10. '\' → logprob: -6.454627513885498

Token 109: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.14383076131343842
    2. ' ' → logprob: -2.5188307762145996
    3. ' len' → logprob: -3.0188307762145996
    4. 'N' → logprob: -5.7688307762146
    5. ' vals' → logprob: -7.7688307762146
    6. ' result' → logprob: -8.018830299377441
    7. 'len' → logprob: -8.268830299377441
    8. ' (' → logprob: -8.893830299377441
    9. ' val' → logprob: -9.518830299377441
    10. ' ' → logprob: -9.768830299377441

Token 110: ' ==' (ID: 951)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.046926502138376236
    2. ' ' → logprob: -3.546926498413086
    3. '>' → logprob: -4.671926498413086
    4. ' ==' → logprob: -5.546926498413086
    5. ' >=' → logprob: -6.046926498413086
    6. ' <' → logprob: -6.921926498413086
    7. '==' → logprob: -8.546926498413086
    8. ' <=' → logprob: -9.171926498413086
    9. ' ' → logprob: -10.171926498413086
    10. '>=' → logprob: -10.546926498413086

Token 111: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2005370557308197
    2. '2' → logprob: -2.2005369663238525
    3. '1' → logprob: -2.7005369663238525
    4. '3' → logprob: -5.575537204742432
    5. '4' → logprob: -13.325536727905273
    6. '  ' → logprob: -13.825536727905273
    7. ' ' → logprob: -13.825536727905273
    8. '<|end|>' → logprob: -13.950536727905273
    9. '0' → logprob: -14.888036727905273
    10. '=' → logprob: -14.888036727905273

Token 112: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.11552554368972778
    2. '1' → logprob: -2.240525484085083
    3. ' ' → logprob: -5.990525722503662
    4. '3' → logprob: -8.615525245666504
    5. '0' → logprob: -11.740525245666504
    6. '   ' → logprob: -13.053025245666504
    7. '  ' → logprob: -13.240525245666504
    8. '4' → logprob: -14.365525245666504
    9. ')' → logprob: -14.490525245666504
    10. '    ' → logprob: -14.990525245666504

Token 113: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0009370702900923789
    2. ':
' → logprob: -7.125936985015869
    3. ' :' → logprob: -9.250937461853027
    4. ':return' → logprob: -10.250937461853027
    5. ' :
' → logprob: -14.750937461853027
    6. ':
' → logprob: -15.750937461853027
    7. ' and' → logprob: -15.875937461853027
    8. '   ' → logprob: -16.12593650817871
    9. ',' → logprob: -16.12593650817871
    10. '):' → logprob: -16.62593650817871

Token 114: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05293789878487587
    2. '       ' → logprob: -3.4279379844665527
    3. '   ' → logprob: -4.052937984466553
    4. ':
' → logprob: -6.552937984466553
    5. ':return' → logprob: -9.677937507629395
    6. ' print' → logprob: -9.802937507629395
    7. '):' → logprob: -10.052937507629395
    8. ' :' → logprob: -10.552937507629395
    9. 'print' → logprob: -10.677937507629395
    10. '.' → logprob: -10.927937507629395

Token 115: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07003769278526306
    2. '       ' → logprob: -3.445037603378296
    3. ' print' → logprob: -3.445037603378296
    4. 'print' (adapté à ' print') → logprob: -6.195037841796875
    5. ' return' → logprob: -6.445037841796875
    6. 'return' → logprob: -9.820037841796875
    7. '
' → logprob: -9.945037841796875
    8. '	print' → logprob: -9.945037841796875
    9. '    ' → logprob: -10.820037841796875
    10. '	return' → logprob: -12.070037841796875

Token 116: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.23094189167022705
    2. '(int' → logprob: -2.1059417724609375
    3. '(' → logprob: -2.7309417724609375
    4. '(round' → logprob: -4.2309417724609375
    5. '((' → logprob: -5.8559417724609375
    6. '(float' → logprob: -7.4809417724609375
    7. '()' → logprob: -7.7309417724609375
    8. 'result' → logprob: -7.8559417724609375
    9. '(f' → logprob: -8.605941772460938
    10. ' (' → logprob: -9.230941772460938

Token 117: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005065653240308166
    2. ')
' → logprob: -7.625506401062012
    3. '   ' → logprob: -11.625506401062012
    4. ' )' → logprob: -12.125506401062012
    5. ')return' → logprob: -12.625506401062012
    6. '       ' → logprob: -14.875506401062012
    7. ')
' → logprob: -15.750506401062012
    8. '))' → logprob: -16.125507354736328
    9. ')}' → logprob: -16.625507354736328
    10. ')`' → logprob: -16.750507354736328

Token 118: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0037895082496106625
    2. '<|end|>' → logprob: -6.12878942489624
    3. 'else' → logprob: -7.37878942489624
    4. ' else' → logprob: -8.128789901733398
    5. ')' → logprob: -8.503789901733398
    6. '    
' → logprob: -8.878789901733398
    7. '       ' → logprob: -9.128789901733398
    8. '<|end|>' → logprob: -9.503789901733398
    9. 'elif' → logprob: -9.753789901733398
    10. ':' → logprob: -11.003789901733398

Token 119: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04221542179584503
    2. 'return' (adapté à ' return') → logprob: -3.292215347290039
    3. ' return' → logprob: -5.792215347290039
    4. '   ' → logprob: -7.042215347290039
    5. '	return' → logprob: -8.667215347290039
    6. '
' → logprob: -9.917215347290039
    7. ' ' → logprob: -12.542215347290039
    8. 'eturn' → logprob: -12.542215347290039
    9. ':return' → logprob: -12.917215347290039
    10. '<|end|>' → logprob: -13.417215347290039

Token 120: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 121: '   ' (ID: 271)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.538598358631134
    2. '
' → logprob: -1.5385982990264893
    3. '<|end|>' → logprob: -2.7885982990264893
    4. '    
' → logprob: -2.9135982990264893
    5. '   ' → logprob: -3.6635982990264893
    6. '  
' → logprob: -3.9135982990264893
    7. ' ' → logprob: -4.538598537445068
    8. ')' → logprob: -4.913598537445068
    9. '\n' → logprob: -5.163598537445068
    10. '   
' → logprob: -6.038598537445068

Token 122: ' for' (ID: 395)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' 
' → logprob: -1.1736561059951782
    2. '
' → logprob: -1.2986561059951782
    3. ' ' → logprob: -1.6736561059951782
    4. '    
' → logprob: -3.0486559867858887
    5. ')' → logprob: -3.1736559867858887
    6. '   ' → logprob: -3.4236559867858887
    7. '<|end|>' → logprob: -3.4236559867858887
    8. '  
' → logprob: -3.6736559867858887
    9. '   
' → logprob: -5.173655986785889
    10. '.' → logprob: -5.298655986785889

Token 123: ' idx' (ID: 14016)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0009582702768966556
    2. 'i' → logprob: -7.000958442687988
    3. ' ' → logprob: -10.500958442687988
    4. ' _' → logprob: -11.625958442687988
    5. ' idx' → logprob: -12.500958442687988
    6. '	i' → logprob: -13.250958442687988
    7. '_' → logprob: -13.500958442687988
    8. ' ' → logprob: -14.125958442687988
    9. '_i' → logprob: -14.250958442687988
    10. ' x' → logprob: -14.500958442687988

Token 124: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00471207220107317
    2. 'in' → logprob: -5.629712104797363
    3. ' ' → logprob: -6.879712104797363
    4. ',' → logprob: -9.879712104797363
    5. ' ,' → logprob: -11.629712104797363
    6. 's' → logprob: -12.129712104797363
    7. '	in' → logprob: -12.254712104797363
    8. '1' → logprob: -13.504712104797363
    9. ' i' → logprob: -13.567212104797363
    10. '_' → logprob: -13.817212104797363

Token 125: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.06995243579149246
    2. 'range' → logprob: -2.6949524879455566
    3. '	range' → logprob: -11.319952011108398
    4. ' ' → logprob: -13.694952011108398
    5. ' xrange' → logprob: -13.819952011108398
    6. '(range' → logprob: -13.944952011108398
    7. '   ' → logprob: -14.944952011108398
    8. '  ' → logprob: -15.444952011108398
    9. '_range' → logprob: -16.1949520111084
    10. '[' → logprob: -16.5699520111084

Token 126: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.318681188422488e-05
    2. '2' → logprob: -11.50001335144043
    3. ' (' → logprob: -13.12501335144043
    4. '(len' → logprob: -14.87501335144043
    5. '(N' → logprob: -15.00001335144043
    6. '   ' → logprob: -15.37501335144043
    7. ' ' → logprob: -15.87501335144043
    8. '(
' → logprob: -16.87501335144043
    9. '1' → logprob: -17.12501335144043
    10. 's' → logprob: -19.00001335144043

Token 127: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.06253200024366379
    2. ' ' → logprob: -2.8125319480895996
    3. '   ' → logprob: -7.9375319480896
    4. '1' → logprob: -8.812532424926758
    5. '    ' → logprob: -11.312532424926758
    6. 'len' → logprob: -11.562532424926758
    7. 'N' → logprob: -11.937532424926758
    8. ' N' → logprob: -12.062532424926758
    9. '(' → logprob: -12.125032424926758
    10. '  ' → logprob: -12.312532424926758

Token 128: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004990270361304283
    2. ',N' → logprob: -5.879990100860596
    3. ' ,' → logprob: -6.129990100860596
    4. ' N' → logprob: -13.254990577697754
    5. '   ' → logprob: -13.379990577697754
    6. 'N' → logprob: -13.504990577697754
    7. ',len' → logprob: -13.754990577697754
    8. ' ' → logprob: -14.879990577697754
    9. '(N' → logprob: -16.004989624023438
    10. ',n' → logprob: -16.004989624023438

Token 129: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.16042377054691315
    2. ' N' → logprob: -1.910423755645752
    3. '   ' → logprob: -8.91042423248291
    4. 'len' → logprob: -10.16042423248291
    5. ' len' → logprob: -10.91042423248291
    6. ' ' → logprob: -12.78542423248291
    7. '	N' → logprob: -13.16042423248291
    8. '    ' → logprob: -13.28542423248291
    9. 'n' → logprob: -14.53542423248291
    10. '  ' → logprob: -14.53542423248291

Token 130: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0070009431801736355
    2. '):
' → logprob: -5.007000923156738
    3. ' ):' → logprob: -8.257000923156738
    4. ':' → logprob: -11.132000923156738
    5. ')' → logprob: -12.132000923156738
    6. '+' → logprob: -13.132000923156738
    7. ' ):
' → logprob: -13.507000923156738
    8. '):
' → logprob: -13.882000923156738
    9. '   ' → logprob: -14.507000923156738
    10. ',' → logprob: -14.882000923156738

Token 131: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.40209999680519104
    2. '   ' → logprob: -1.5270999670028687
    3. ':' → logprob: -2.402100086212158
    4. '):' → logprob: -4.652100086212158
    5. ' ' → logprob: -6.152100086212158
    6. '+' → logprob: -6.277100086212158
    7. ',' → logprob: -6.277100086212158
    8. '    ' → logprob: -6.402100086212158
    9. ')' → logprob: -6.902100086212158
    10. ' :' → logprob: -6.902100086212158

Token 132: ' result' (ID: 1534)
  Prédit: ' result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.19962340593338013
    2. '   ' → logprob: -2.5746233463287354
    3. 'result' (adapté à ' result') → logprob: -3.4496233463287354
    4. '       ' → logprob: -4.0746235847473145
    5. ' if' → logprob: -4.3246235847473145
    6. ' val' → logprob: -4.3246235847473145
    7. ' current' → logprob: -4.6996235847473145
    8. ' new' → logprob: -4.9496235847473145
    9. ' prev' → logprob: -6.4496235847473145
    10. 'val' → logprob: -6.5746235847473145

Token 133: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.36419981718063354
    2. ' =' → logprob: -1.2391998767852783
    3. '+=' → logprob: -4.739199638366699
    4. '*=' → logprob: -5.364199638366699
    5. ' +=' → logprob: -6.614199638366699
    6. ' *=' → logprob: -7.239199638366699
    7. '-=' → logprob: -9.9891996383667
    8. '=(' → logprob: -10.3641996383667
    9. '*' → logprob: -10.7391996383667
    10. '+=(' → logprob: -10.7391996383667

Token 134: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.8602203726768494
    2. '(result' → logprob: -0.9852203726768494
    3. '(vals' → logprob: -1.6102204322814941
    4. '(round' → logprob: -6.985220432281494
    5. '(' → logprob: -7.235220432281494
    6. '(max' → logprob: -7.735220432281494
    7. '(math' → logprob: -7.735220432281494
    8. '((' → logprob: -8.360219955444336
    9. '(val' → logprob: -8.485219955444336
    10. '(values' → logprob: -8.735219955444336

Token 135: 'result' (ID: 2521)
  Prédit: 'result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.026870964094996452
    2. ' result' → logprob: -3.6518709659576416
    3. '(result' → logprob: -7.6518707275390625
    4. ' (' → logprob: -10.276870727539062
    5. 'vals' → logprob: -10.776870727539062
    6. '   ' → logprob: -11.526870727539062
    7. '(' → logprob: -12.276870727539062
    8. ' ' → logprob: -12.776870727539062
    9. ' vals' → logprob: -12.901870727539062
    10. ')' → logprob: -12.901870727539062

Token 136: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.38689371943473816
    2. ' +' → logprob: -1.1368937492370605
    3. '*' → logprob: -11.011893272399902
    4. ' ' → logprob: -13.261893272399902
    5. ' *' → logprob: -13.386893272399902
    6. ' ' → logprob: -14.386893272399902
    7. '-' → logprob: -14.886893272399902
    8. '/' → logprob: -15.136893272399902
    9. ')' → logprob: -15.511893272399902
    10. '＋' → logprob: -15.511893272399902

Token 137: ' vals' (ID: 58985)
  Prédit: ' vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vals' → logprob: -0.16161908209323883
    2. 'vals' → logprob: -1.9116190671920776
    3. '(vals' → logprob: -6.661619186401367
    4. ' (' → logprob: -9.536619186401367
    5. ' ' → logprob: -11.161619186401367
    6. '_vals' → logprob: -11.536619186401367
    7. 'val' → logprob: -12.286619186401367
    8. '(' → logprob: -12.786619186401367
    9. 'Vals' → logprob: -13.036619186401367
    10. ' val' → logprob: -13.161619186401367

Token 138: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -8.65707261255011e-06
    2. '[' → logprob: -12.375008583068848
    3. ' [' → logprob: -13.125008583068848
    4. '[
' → logprob: -13.750008583068848
    5. 'idx' → logprob: -14.750008583068848
    6. '
' → logprob: -14.875008583068848
    7. '[i' → logprob: -15.375008583068848
    8. '```' → logprob: -16.250009536743164
    9. '[id' → logprob: -16.750009536743164
    10. '   ' → logprob: -17.000009536743164

Token 139: '])/' (ID: 93047)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5287347435951233
    2. ')/' → logprob: -0.9037347435951233
    3. ' )' → logprob: -5.2787346839904785
    4. ')//' → logprob: -7.9037346839904785
    5. '))/' → logprob: -10.903735160827637
    6. '])/' → logprob: -10.903735160827637
    7. '）' → logprob: -11.278735160827637
    8. '*)' → logprob: -11.653735160827637
    9. ' ' → logprob: -11.778735160827637
    10. ')**' → logprob: -11.778735160827637

Token 140: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.603335638530552e-05
    2. ' ' → logprob: -9.625096321105957
    3. '3' → logprob: -10.500096321105957
    4. 'idx' → logprob: -14.000096321105957
    5. '(' → logprob: -14.500096321105957
    6. '   ' → logprob: -15.250096321105957
    7. 'float' → logprob: -15.625096321105957
    8. '  ' → logprob: -16.00009536743164
    9. '```' → logprob: -16.50009536743164
    10. '=' → logprob: -17.18759536743164

Token 141: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5074499845504761
    2. '<|end|>' → logprob: -1.007449984550476
    3. '\n' → logprob: -3.8824501037597656
    4. ')' → logprob: -4.757450103759766
    5. '<|end|>' → logprob: -6.757450103759766
    6. 'newline' → logprob: -7.382450103759766
    7. '   ' → logprob: -7.757450103759766
    8. '    
' → logprob: -8.507450103759766
    9. '```' → logprob: -8.632450103759766
    10. '\' → logprob: -8.632450103759766

Token 142: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8271254301071167
    2. '   ' → logprob: -1.3271254301071167
    3. ')' → logprob: -2.0771255493164062
    4. '\n' → logprob: -2.7021255493164062
    5. '<|end|>' → logprob: -3.0771255493164062
    6. '    
' → logprob: -3.9521255493164062
    7. 'print' → logprob: -4.202125549316406
    8. '  
' → logprob: -4.327125549316406
    9. '\' → logprob: -5.827125549316406
    10. ' 
' → logprob: -6.327125549316406

Token 143: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39110031723976135
    2. 'print' (adapté à ' print') → logprob: -1.391100287437439
    3. ' print' → logprob: -3.8911004066467285
    4. '<|end|>' → logprob: -4.0161004066467285
    5. '\n' → logprob: -4.2661004066467285
    6. ')' → logprob: -4.5161004066467285
    7. '    
' → logprob: -5.8911004066467285
    8. '
' → logprob: -6.5161004066467285
    9. '	print' → logprob: -6.5161004066467285
    10. '  
' → logprob: -6.6411004066467285

Token 144: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.3132912516593933
    2. '(' → logprob: -1.313291311264038
    3. 'result' → logprob: -11.938291549682617
    4. '()' → logprob: -12.188291549682617
    5. ' (' → logprob: -12.563291549682617
    6. '((' → logprob: -13.188291549682617
    7. '(results' → logprob: -13.188291549682617
    8. '(final' → logprob: -13.438291549682617
    9. '("("' → logprob: -13.438291549682617
    10. '(round' → logprob: -13.563291549682617

Token 145: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.292907877039397e-06
    2. ' )' → logprob: -12.75000286102295
    3. ')`' → logprob: -16.000003814697266
    4. '()' → logprob: -16.125003814697266
    5. ')
' → logprob: -16.375003814697266
    6. '))' → logprob: -17.125003814697266
    7. '())' → logprob: -17.500003814697266
    8. ')#' → logprob: -17.750003814697266
    9. ')}' → logprob: -18.125003814697266
    10. '`)' → logprob: -18.250003814697266

Token 146: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 147: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.2902432382106781
    2. '__' → logprob: -1.5402432680130005
    3. '_' → logprob: -3.540243148803711
    4. ' ' → logprob: -5.165243148803711
    5. ' _' → logprob: -6.415243148803711
    6. ' ' → logprob: -7.415243148803711
    7. '<|end|>' → logprob: -8.290243148803711
    8. '_name' → logprob: -9.290243148803711
    9. '___' → logprob: -9.665243148803711
    10. '  ' → logprob: -10.290243148803711

Token 148: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.25389188528060913
    2. ' ==' → logprob: -1.878891944885254
    3. '.__' → logprob: -3.128891944885254
    4. ' __' → logprob: -4.628891944885254
    5. '==' → logprob: -4.878891944885254
    6. ' .' → logprob: -5.878891944885254
    7. '__.__' → logprob: -6.003891944885254
    8. '.' → logprob: -6.378891944885254
    9. '__.' → logprob: -7.128891944885254
    10. '.name' → logprob: -7.378891944885254

Token 149: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -2.546478935983032e-05
    2. '__.__' → logprob: -10.625025749206543
    3. '==' → logprob: -14.375025749206543
    4. '__.' → logprob: -14.875025749206543
    5. '____' → logprob: -16.375024795532227
    6. '__["' → logprob: -17.875024795532227
    7. '___' → logprob: -18.000024795532227
    8. '_' → logprob: -18.750024795532227
    9. '__
' → logprob: -19.000024795532227
    10. '__,' → logprob: -19.250024795532227

Token 150: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.562530517578125
    2. '__' → logprob: -1.062530517578125
    3. '==' → logprob: -2.937530517578125
    4. '.' → logprob: -4.187530517578125
    5. '.__' → logprob: -4.312530517578125
    6. '__.__' → logprob: -6.687530517578125
    7. '=="' → logprob: -7.187530517578125
    8. ' .' → logprob: -7.687530517578125
    9. '__.' → logprob: -9.187530517578125
    10. ' ' → logprob: -9.312530517578125

Token 151: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0619952529668808
    2. ''' → logprob: -2.811995267868042
    3. ' "__' → logprob: -10.686995506286621
    4. '__' → logprob: -12.811995506286621
    5. ' "' → logprob: -13.686995506286621
    6. ' '__' → logprob: -14.311995506286621
    7. '"user' → logprob: -16.061994552612305
    8. '`' → logprob: -16.686994552612305
    9. ''"' → logprob: -17.686994552612305
    10. ' '' → logprob: -18.061994552612305

Token 152: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -8.399378566537052e-05
    2. '__' → logprob: -9.750083923339844
    3. 'name' → logprob: -10.625083923339844
    4. '_main' → logprob: -13.750083923339844
    5. 'm' → logprob: -16.125083923339844
    6. '__':
' → logprob: -16.750083923339844
    7. 'ma' → logprob: -17.250083923339844
    8. '-main' → logprob: -17.500083923339844
    9. ' main' → logprob: -17.625083923339844
    10. '```' → logprob: -18.125083923339844

Token 153: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.20145836472511292
    2. '__' → logprob: -1.7014583349227905
    3. '__:' → logprob: -10.201457977294922
    4. '__":
' → logprob: -12.326457977294922
    5. '_' → logprob: -12.951457977294922
    6. '__.' → logprob: -14.451457977294922
    7. '__('' → logprob: -15.201457977294922
    8. '':' → logprob: -15.701457977294922
    9. '___' → logprob: -17.076457977294922
    10. '('__' → logprob: -17.701457977294922

Token 154: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.5272507071495056
    2. ' main' → logprob: -0.9022507071495056
    3. '	main' → logprob: -5.65225076675415
    4. '   ' → logprob: -7.65225076675415
    5. '_main' → logprob: -9.902250289916992
    6. ' ' → logprob: -10.527250289916992
    7. '(main' → logprob: -10.902250289916992
    8. '    
' → logprob: -11.902250289916992
    9. ' ' → logprob: -12.277250289916992
    10. '<|end|>' → logprob: -12.277250289916992

Token 155: ' #' (ID: 1069)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -2.15310683415737e-05
    2. ' main' → logprob: -10.750021934509277
    3. '	main' → logprob: -17.00002098083496
    4. '   ' → logprob: -19.12502098083496
    5. 'import' → logprob: -21.62502098083496
    6. ' ' → logprob: -21.75002098083496
    7. '  ' → logprob: -22.12502098083496
    8. '.main' → logprob: -22.25002098083496
    9. '(main' → logprob: -22.75002098083496
    10. '_main' → logprob: -23.25002098083496

Token 156: ' classic' (ID: 13686)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -8.673547563375905e-05
    2. ' main' → logprob: -9.375086784362793
    3. 'import' → logprob: -13.500086784362793
    4. '	main' → logprob: -14.750086784362793
    5. '   ' → logprob: -16.500085830688477
    6. ' ' → logprob: -18.125085830688477
    7. '  ' → logprob: -18.875085830688477
    8. '(main' → logprob: -19.750085830688477
    9. '.main' → logprob: -20.125085830688477
    10. '__' → logprob: -20.500085830688477

Token 157: '
' (ID: 198)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.07924677431583405
    2. 'main' → logprob: -2.579246759414673
    3. '_main' → logprob: -8.329246520996094
    4. '	main' → logprob: -9.579246520996094
    5. '_' → logprob: -10.579246520996094
    6. '(main' → logprob: -11.579246520996094
    7. ' ' → logprob: -11.704246520996094
    8. ' ' → logprob: -13.579246520996094
    9. '__' → logprob: -14.329246520996094
    10. '.main' → logprob: -14.579246520996094

Token 158: '   ' (ID: 271)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.2519495487213135
    2. 'main' → logprob: -1.5019495487213135
    3. '	main' → logprob: -10.876949310302734
    4. '_main' → logprob: -14.501949310302734
    5. 'import' → logprob: -14.751949310302734
    6. '   ' → logprob: -15.251949310302734
    7. ' ' → logprob: -15.376949310302734
    8. '(main' → logprob: -15.876949310302734
    9. '.main' → logprob: -16.626949310302734
    10. ' ' → logprob: -17.001949310302734

Token 159: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -0.00033558503491804004
    2. ' main' → logprob: -8.000335693359375
    3. '	main' → logprob: -16.375335693359375
    4. '   ' → logprob: -17.500335693359375
    5. 'import' → logprob: -19.625335693359375
    6. ' ' → logprob: -21.000335693359375
    7. '.main' → logprob: -21.250335693359375
    8. '_main' → logprob: -21.250335693359375
    9. '(main' → logprob: -22.000335693359375
    10. '  ' → logprob: -22.250335693359375

Token 160: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0032443818636238575
    2. '(' → logprob: -5.753244400024414
    3. '()
' → logprob: -9.753244400024414
    4. '(
' → logprob: -13.378244400024414
    5. ' ()' → logprob: -13.503244400024414
    6. '()\' → logprob: -13.753244400024414
    7. '()

' → logprob: -14.003244400024414
    8. '()`' → logprob: -14.253244400024414
    9. '();' → logprob: -14.628244400024414
    10. '#' → logprob: -14.753244400024414

Token 161: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 162: ' sieve' (ID: 142781)
  Prédit: ' factorial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' factorial' → logprob: -0.5583035349845886
    2. ' average' → logprob: -2.6833035945892334
    3. ' solve' → logprob: -2.9333035945892334
    4. ' gcd' → logprob: -3.0583035945892334
    5. ' binary' → logprob: -3.1833035945892334
    6. ' ' → logprob: -4.183303356170654
    7. ' test' → logprob: -4.433303356170654
    8. ' max' → logprob: -4.433303356170654
    9. ' math' → logprob: -4.433303356170654
    10. ' helper' → logprob: -4.433303356170654

Token 163: '_of' (ID: 8023)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.18442848324775696
    2. '(n' → logprob: -1.8094284534454346
    3. '_' → logprob: -6.684428691864014
    4. '(N' → logprob: -7.184428691864014
    5. '_next' → logprob: -7.559428691864014
    6. '(_' → logprob: -8.059428215026855
    7. '(size' → logprob: -8.309428215026855
    8. '_(' → logprob: -8.559428215026855
    9. ' (' → logprob: -9.059428215026855
    10. '_s' → logprob: -9.059428215026855

Token 164: '_' (ID: 62)
  Prédit: 'erat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'erat' → logprob: -0.22306382656097412
    2. 'E' → logprob: -1.7230638265609741
    3. 'Er' → logprob: -3.9730639457702637
    4. ' erat' → logprob: -6.723063945770264
    5. 'eras' → logprob: -7.473063945770264
    6. 'er' → logprob: -7.598063945770264
    7. 'at' → logprob: -9.473063468933105
    8. 'erad' → logprob: -9.598063468933105
    9. 'Euler' → logprob: -10.223063468933105
    10. 's' → logprob: -10.598063468933105

Token 165: 'erat' (ID: 73282)
  Prédit: 'erat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'erat' → logprob: -0.03086989000439644
    2. 'E' → logprob: -3.530869960784912
    3. 'Er' → logprob: -7.155869960784912
    4. 'eras' → logprob: -8.780869483947754
    5. 'er' → logprob: -9.905869483947754
    6. ' erat' → logprob: -9.905869483947754
    7. 'erad' → logprob: -10.655869483947754
    8. 'erig' → logprob: -11.655869483947754
    9. 'eris' → logprob: -11.780869483947754
    10. 'at' → logprob: -11.905869483947754

Token 166: 'ost' (ID: 564)
  Prédit: 'ost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ost' → logprob: -0.0023404466919600964
    2. 'osten' → logprob: -6.127340316772461
    3. 'os' → logprob: -9.002340316772461
    4. 'osen' → logprob: -11.252340316772461
    5. 'hen' → logprob: -12.252340316772461
    6. ' ost' → logprob: -12.627340316772461
    7. 'ophen' → logprob: -13.127340316772461
    8. '**' → logprob: -13.502340316772461
    9. 'osest' → logprob: -13.502340316772461
    10. 'o' → logprob: -13.877340316772461

Token 167: 'hen' (ID: 5447)
  Prédit: 'hen'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hen' → logprob: -0.0013300024438649416
    2. 'es' → logprob: -7.6263298988342285
    3. 'enes' → logprob: -7.7513298988342285
    4. 'hes' → logprob: -8.001330375671387
    5. 'h' → logprob: -9.876330375671387
    6. 'esen' → logprob: -12.251330375671387
    7. 'he' → logprob: -12.751330375671387
    8. 'heses' → logprob: -12.751330375671387
    9. 'een' → logprob: -13.251330375671387
    10. 'hens' → logprob: -13.376330375671387

Token 168: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -1.9361264946837764e-07
    2. 'is' → logprob: -15.875
    3. 'enes' → logprob: -17.75
    4. 'e' → logprob: -18.375
    5. 's' → logprob: -18.375
    6. 'ES' → logprob: -19.125
    7. '```' → logprob: -19.25
    8. '#' → logprob: -20.0
    9. 'esen' → logprob: -20.375
    10. '``' → logprob: -21.0

Token 169: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.04928741976618767
    2. '(' → logprob: -3.0492873191833496
    3. '(N' → logprob: -8.049287796020508
    4. '(size' → logprob: -8.674287796020508
    5. '(limit' → logprob: -8.924287796020508
    6. '(num' → logprob: -10.674287796020508
    7. ' (' → logprob: -11.299287796020508
    8. '(k' → logprob: -11.674287796020508
    9. '(length' → logprob: -11.799287796020508
    10. '(max' → logprob: -11.799287796020508

Token 170: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04331202432513237
    2. ')' → logprob: -3.1683120727539062
    3. '(n' → logprob: -9.168312072753906
    4. '(' → logprob: -9.793312072753906
    5. ' ):' → logprob: -9.918312072753906
    6. '():' → logprob: -10.543312072753906
    7. '):
' → logprob: -10.543312072753906
    8. ':' → logprob: -10.918312072753906
    9. '_' → logprob: -11.668312072753906
    10. ' )' → logprob: -12.418312072753906

Token 171: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08672206848859787
    2. ' sieve' → logprob: -2.8367221355438232
    3. '<|end|>' → logprob: -4.336721897125244
    4. ' primes' → logprob: -5.961721897125244
    5. ' ' → logprob: -6.336721897125244
    6. 's' → logprob: -6.836721897125244
    7. ' =' → logprob: -7.336721897125244
    8. '[' → logprob: -7.836721897125244
    9. 'n' → logprob: -7.836721897125244
    10. '*' → logprob: -7.899221897125244

Token 172: ' #' (ID: 1069)
  Prédit: ' primes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' primes' → logprob: -0.9803810715675354
    2. ' is' → logprob: -1.7303810119628906
    3. ' sieve' → logprob: -1.7303810119628906
    4. 'prime' → logprob: -2.7303810119628906
    5. ' prime' → logprob: -2.8553810119628906
    6. 'pr' → logprob: -2.8553810119628906
    7. '   ' → logprob: -2.9803810119628906
    8. 's' → logprob: -3.7303810119628906
    9. 'is' → logprob: -4.230381011962891
    10. ' ' → logprob: -8.60538101196289

Token 173: ' Super' (ID: 8220)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pr' → logprob: -1.2051606178283691
    2. 'prime' → logprob: -1.2051606178283691
    3. 'is' → logprob: -1.4551606178283691
    4. 's' → logprob: -2.830160617828369
    5. ' sieve' → logprob: -3.330160617828369
    6. '   ' → logprob: -3.455160617828369
    7. ' primes' → logprob: -3.705160617828369
    8. ' is' → logprob: -4.580160617828369
    9. ' prime' → logprob: -5.830160617828369
    10. '"""' → logprob: -5.955160617828369

Token 174: ' basic' (ID: 9439)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.2256232500076294
    2. '   ' → logprob: -1.3506232500076294
    3. ' ' → logprob: -1.7256232500076294
    4. '_' → logprob: -3.10062313079834
    5. 'ior' → logprob: -3.22562313079834
    6. 'def' → logprob: -3.47562313079834
    7. 's' → logprob: -3.85062313079834
    8. ' basic' → logprob: -4.22562313079834
    9. ' =' → logprob: -4.47562313079834
    10. '[]' → logprob: -4.47562313079834

Token 175: ',' (ID: 11)
  Prédit: ' primes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' primes' → logprob: -0.6567714214324951
    2. ' sieve' → logprob: -1.0317714214324951
    3. 'pr' → logprob: -2.656771421432495
    4. 's' → logprob: -4.156771659851074
    5. ' prime' → logprob: -4.281771659851074
    6. 'prime' → logprob: -4.906771659851074
    7. ' is' → logprob: -5.156771659851074
    8. '   ' → logprob: -5.531771659851074
    9. 'is' → logprob: -6.156771659851074
    10. 'n' → logprob: -7.031771659851074

Token 176: ' probably' (ID: 7038)
  Prédit: 'prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prime' → logprob: -0.5854557752609253
    2. 'pr' → logprob: -1.0854557752609253
    3. 'is' → logprob: -2.585455894470215
    4. 's' → logprob: -4.085455894470215
    5. ' primes' → logprob: -5.335455894470215
    6. ' prime' → logprob: -5.460455894470215
    7. ' sieve' → logprob: -6.335455894470215
    8. '   ' → logprob: -6.960455894470215
    9. ' is' → logprob: -7.335455894470215
    10. '"""' → logprob: -8.085455894470215

Token 177: ' not' (ID: 625)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5476203560829163
    2. 'not' → logprob: -2.4226202964782715
    3. 'the' → logprob: -2.4226202964782715
    4. 'ine' → logprob: -2.9226202964782715
    5. 'correct' → logprob: -3.4226202964782715
    6. 's' → logprob: -4.0476202964782715
    7. ' not' → logprob: -4.2976202964782715
    8. 'one' → logprob: -4.2976202964782715
    9. 'slow' → logprob: -4.2976202964782715
    10. 'unused' → logprob: -4.6726202964782715

Token 178: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.5216192603111267
    2. 'used' → logprob: -1.7716193199157715
    3. 'optimized' → logprob: -2.5216193199157715
    4. ' the' → logprob: -2.8966193199157715
    5. 'optimal' → logprob: -2.8966193199157715
    6. 'efficient' → logprob: -3.7716193199157715
    7. ' used' → logprob: -5.0216193199157715
    8. 'needed' → logprob: -5.2716193199157715
    9. ' optimal' → logprob: -6.0216193199157715
    10. ' efficient' → logprob: -6.1466193199157715

Token 179: ' best' (ID: 1636)
  Prédit: 'most'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'most' → logprob: -0.61222904920578
    2. 'best' → logprob: -0.98722904920578
    3. 'fast' → logprob: -3.112229108810425
    4. ' most' → logprob: -3.362229108810425
    5. ' best' → logprob: -5.737228870391846
    6. 'optimal' → logprob: -6.612228870391846
    7. ' fastest' → logprob: -6.737228870391846
    8. 'old' → logprob: -9.862229347229004
    9. 'next' → logprob: -10.112229347229004
    10. 'efficient' → logprob: -10.237229347229004

Token 180: ' way' (ID: 2006)
  Prédit: ' implementation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' implementation' → logprob: -1.0308353900909424
    2. ' sieve' → logprob: -1.6558353900909424
    3. ' method' → logprob: -1.9058353900909424
    4. 'def' → logprob: -2.9058353900909424
    5. ' approach' → logprob: -2.9058353900909424
    6. ' for' → logprob: -2.9058353900909424
    7. ' way' → logprob: -3.1558353900909424
    8. 'prime' → logprob: -3.6558353900909424
    9. ' algorithm' → logprob: -4.405835151672363
    10. 'method' → logprob: -4.655835151672363

Token 181: '...
' (ID: 4908)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.13841260969638824
    2. 'to' → logprob: -2.3884127140045166
    3. '   ' → logprob: -4.0134124755859375
    4. ' ' → logprob: -4.7634124755859375
    5. ' but' → logprob: -5.1384124755859375
    6. 'def' → logprob: -6.3884124755859375
    7. ',' → logprob: -6.6384124755859375
    8. ' for' → logprob: -7.2634124755859375
    9. 'n' → logprob: -7.5134124755859375
    10. 'for' → logprob: -8.888412475585938

Token 182: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11678684502840042
    2. ' primes' → logprob: -2.6167869567871094
    3. ' sieve' → logprob: -4.116786956787109
    4. ' is' → logprob: -4.616786956787109
    5. ' prime' → logprob: -4.866786956787109
    6. 'prime' → logprob: -6.616786956787109
    7. 's' → logprob: -7.616786956787109
    8. 'is' → logprob: -7.741786956787109
    9. ' ' → logprob: -8.49178695678711
    10. '    ' → logprob: -8.86678695678711

Token 183: ' if' (ID: 538)
  Prédit: 'prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prime' → logprob: -0.33243539929389954
    2. 'pr' → logprob: -1.4574353694915771
    3. 'is' → logprob: -3.332435369491577
    4. 's' → logprob: -4.582435607910156
    5. '   ' → logprob: -6.332435607910156
    6. ' primes' → logprob: -6.957435607910156
    7. ' prime' → logprob: -7.082435607910156
    8. ' sieve' → logprob: -7.957435607910156
    9. ' is' → logprob: -9.832435607910156
    10. ' ' → logprob: -11.332435607910156

Token 184: ' type' (ID: 1490)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.02975500375032425
    2. ' n' → logprob: -3.529755115509033
    3. '	n' → logprob: -13.029754638671875
    4. 'not' → logprob: -14.404754638671875
    5. '(n' → logprob: -14.779754638671875
    6. ' ' → logprob: -15.404754638671875
    7. ' ' → logprob: -15.529754638671875
    8. '   ' → logprob: -15.529754638671875
    9. 'n't' → logprob: -15.779754638671875
    10. ' not' → logprob: -15.904754638671875

Token 185: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -5.848420551046729e-05
    2. '(' → logprob: -9.7500581741333
    3. 'n' → logprob: -15.8750581741333
    4. '(num' → logprob: -18.125059127807617
    5. '(noun' → logprob: -18.250059127807617
    6. '(not' → logprob: -18.375059127807617
    7. '(s' → logprob: -18.500059127807617
    8. '(i' → logprob: -18.500059127807617
    9. ' (' → logprob: -18.750059127807617
    10. '(x' → logprob: -18.750059127807617

Token 186: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4192173182964325
    2. '!=' → logprob: -2.169217348098755
    3. 'is' → logprob: -2.544217348098755
    4. ')!=' → logprob: -2.544217348098755
    5. ' is' → logprob: -2.919217348098755
    6. ' !=' → logprob: -5.044217109680176
    7. '==' → logprob: -5.419217109680176
    8. ')is' → logprob: -5.669217109680176
    9. '()!=' → logprob: -7.169217109680176
    10. ' )' → logprob: -7.294217109680176

Token 187: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.5375223159790039
    2. ' is' → logprob: -1.287522315979004
    3. '!=' → logprob: -2.037522315979004
    4. ' !=' → logprob: -4.912522315979004
    5. '==' → logprob: -6.162522315979004
    6. ' ==' → logprob: -11.037522315979004
    7. '```' → logprob: -11.662522315979004
    8. '!='' → logprob: -13.037522315979004
    9. 'not' → logprob: -13.287522315979004
    10. ' ' → logprob: -13.662522315979004

Token 188: ' not' (ID: 625)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0007769925869069993
    2. 'not' → logprob: -7.625776767730713
    3. ' int' → logprob: -8.375777244567871
    4. ' not' → logprob: -10.125777244567871
    5. 'float' → logprob: -11.375777244567871
    6. 'list' → logprob: -12.125777244567871
    7. 'bool' → logprob: -14.125777244567871
    8. 'str' → logprob: -14.500777244567871
    9. '<int' → logprob: -15.500777244567871
    10. '=int' → logprob: -16.500776290893555

Token 189: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.001711709308438003
    2. 'not' → logprob: -6.501711845397949
    3. ' not' → logprob: -9.50171184539795
    4. 'float' → logprob: -9.75171184539795
    5. ' int' → logprob: -10.25171184539795
    6. 'list' → logprob: -10.37671184539795
    7. 'bool' → logprob: -11.62671184539795
    8. 'str' → logprob: -14.25171184539795
    9. 'tuple' → logprob: -16.376710891723633
    10. '(int' → logprob: -16.501710891723633

Token 190: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.4743611514568329
    2. ' or' → logprob: -1.5993611812591553
    3. ':' → logprob: -2.0993611812591553
    4. 'and' → logprob: -2.9743611812591553
    5. ' :' → logprob: -6.724360942840576
    6. 'or' → logprob: -7.349360942840576
    7. ' ' → logprob: -9.349361419677734
    8. '():' → logprob: -10.349361419677734
    9. '=' → logprob: -10.599361419677734
    10. '   ' → logprob: -10.849361419677734

Token 191: '       ' (ID: 309)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.6019725203514099
    2. '   ' → logprob: -0.8519725203514099
    3. ' return' → logprob: -4.976972579956055
    4. '       ' → logprob: -5.101972579956055
    5. ':' → logprob: -5.476972579956055
    6. '    ' → logprob: -5.976972579956055
    7. ':return' → logprob: -6.101972579956055
    8. ' :' → logprob: -6.726972579956055
    9. ' ' → logprob: -7.601972579956055
    10. ' n' → logprob: -8.226972579956055

Token 192: ' raise' (ID: 9338)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6591041684150696
    2. ' return' → logprob: -0.7841041684150696
    3. 'n' → logprob: -4.284104347229004
    4. ' n' → logprob: -4.534104347229004
    5. '   ' → logprob: -7.034104347229004
    6. 'raise' (adapté à ' raise') → logprob: -8.034104347229004
    7. ' raise' → logprob: -8.284104347229004
    8. '       ' → logprob: -9.534104347229004
    9. '	return' → logprob: -10.534104347229004
    10. ':return' → logprob: -10.534104347229004

Token 193: ' Exception' (ID: 6851)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Value' → logprob: -0.4740879237651825
    2. 'Type' → logprob: -0.9740879535675049
    3. '(Value' → logprob: -12.349087715148926
    4. '(Type' → logprob: -12.599087715148926
    5. ' Value' → logprob: -13.349087715148926
    6. ' Type' → logprob: -14.224087715148926
    7. 'Assertion' → logprob: -14.224087715148926
    8. '<Type' → logprob: -16.224088668823242
    9. '<Value' → logprob: -16.974088668823242
    10. '	Value' → logprob: -17.349088668823242

Token 194: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.015659024938941002
    2. '('' → logprob: -4.640658855438232
    3. '(' → logprob: -5.140658855438232
    4. '()' → logprob: -11.01565933227539
    5. '(f' → logprob: -11.76565933227539
    6. '("")' → logprob: -12.51565933227539
    7. '("'' → logprob: -13.14065933227539
    8. 'Type' → logprob: -14.51565933227539
    9. '(
' → logprob: -15.26565933227539
    10. '(Value' → logprob: -15.76565933227539

Token 195: 'need' (ID: 24630)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.4049268066883087
    2. 'n' → logprob: -1.7799267768859863
    3. 'Input' → logprob: -2.5299267768859863
    4. 'Invalid' → logprob: -3.5299267768859863
    5. ' n' → logprob: -3.6549267768859863
    6. ''' → logprob: -4.779926776885986
    7. 'Type' → logprob: -5.029926776885986
    8. '")' → logprob: -5.279926776885986
    9. 'Value' → logprob: -5.904926776885986
    10. ' "' → logprob: -6.904926776885986

Token 196: ' int' (ID: 677)
  Prédit: ' an'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' an' → logprob: -0.02668840065598488
    2. ' integer' → logprob: -4.276688575744629
    3. ' a' → logprob: -5.526688575744629
    4. ' ' → logprob: -5.526688575744629
    5. 'an' → logprob: -6.526688575744629
    6. ' int' → logprob: -6.651688575744629
    7. ' n' → logprob: -7.401688575744629
    8. 'n' → logprob: -7.526688575744629
    9. 'int' → logprob: -8.526688575744629
    10. 'a' → logprob: -9.151688575744629

Token 197: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.23105186223983765
    2. ' input' → logprob: -2.2310519218444824
    3. ' argument' → logprob: -3.2310519218444824
    4. ' for' → logprob: -3.7310519218444824
    5. ' as' → logprob: -3.9810519218444824
    6. 'input' → logprob: -5.731051921844482
    7. 'n' → logprob: -5.856051921844482
    8. ' value' → logprob: -6.106051921844482
    9. 'argument' → logprob: -6.606051921844482
    10. ' parameter' → logprob: -6.856051921844482

Token 198: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6614875197410583
    2. '
' → logprob: -0.9114875197410583
    3. '    
' → logprob: -3.161487579345703
    4. 'n' → logprob: -3.786487579345703
    5. '  
' → logprob: -5.286487579345703
    6. 's' → logprob: -5.661487579345703
    7. ' 
' → logprob: -6.036487579345703
    8. ' if' → logprob: -6.411487579345703
    9. 'if' → logprob: -6.411487579345703
    10. '<|end|>' → logprob: -7.161487579345703

Token 199: ' if' (ID: 538)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -1.2088333368301392
    2. 'if' (adapté à ' if') → logprob: -1.8338333368301392
    3. 'pr' → logprob: -1.9588333368301392
    4. 'prime' → logprob: -2.0838332176208496
    5. '   ' → logprob: -2.3338332176208496
    6. 's' → logprob: -2.4588332176208496
    7. ' if' → logprob: -3.0838332176208496
    8. ' sieve' → logprob: -3.5838332176208496
    9. ' is' → logprob: -4.83383321762085
    10. ' primes' → logprob: -4.83383321762085

Token 200: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.47440487146377563
    2. 'n' → logprob: -0.9744048714637756
    3. '(n' → logprob: -8.599405288696289
    4. 'not' → logprob: -9.974405288696289
    5. ' not' → logprob: -10.349405288696289
    6. ' isinstance' → logprob: -11.349405288696289
    7. '	n' → logprob: -11.349405288696289
    8. ' ' → logprob: -11.724405288696289
    9. ' (' → logprob: -11.849405288696289
    10. '(' → logprob: -11.974405288696289

Token 201: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.07747602462768555
    2. ' <' → logprob: -2.7024760246276855
    3. '<=' → logprob: -4.9524760246276855
    4. ' <=' → logprob: -7.8274760246276855
    5. '==' → logprob: -10.327476501464844
    6. '<n' → logprob: -12.827476501464844
    7. '<len' → logprob: -12.827476501464844
    8. '<int' → logprob: -13.452476501464844
    9. ' ' → logprob: -13.577476501464844
    10. ' ==' → logprob: -13.827476501464844

Token 202: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00022999993234407157
    2. ' ' → logprob: -8.875229835510254
    3. '0' → logprob: -9.375229835510254
    4. '=' → logprob: -12.625229835510254
    5. '3' → logprob: -14.125229835510254
    6. '1' → logprob: -15.000229835510254
    7. '   ' → logprob: -15.500229835510254
    8. '```' → logprob: -15.625229835510254
    9. '_' → logprob: -15.812729835510254
    10. '(' → logprob: -16.06273078918457

Token 203: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0002703953068703413
    2. '0' → logprob: -8.25027084350586
    3. '3' → logprob: -13.00027084350586
    4. ' ' → logprob: -13.00027084350586
    5. '1' → logprob: -13.12527084350586
    6. '=' → logprob: -14.00027084350586
    7. '```' → logprob: -14.75027084350586
    8. '"' → logprob: -14.87527084350586
    9. '   ' → logprob: -15.37527084350586
    10. '_' → logprob: -16.25027084350586

Token 204: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.038320884108543396
    2. ':
' → logprob: -3.288320779800415
    3. ':return' → logprob: -8.663320541381836
    4. '   ' → logprob: -9.413320541381836
    5. ' or' → logprob: -11.163320541381836
    6. ' :' → logprob: -12.038320541381836
    7. ' :
' → logprob: -13.788320541381836
    8. ':
' → logprob: -13.788320541381836
    9. ',' → logprob: -14.288320541381836
    10. '       ' → logprob: -14.288320541381836

Token 205: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12667670845985413
    2. '   ' → logprob: -2.6266767978668213
    3. ' return' → logprob: -3.5016767978668213
    4. '[]' → logprob: -4.751676559448242
    5. 'return' → logprob: -5.001676559448242
    6. 'False' → logprob: -8.376676559448242
    7. ' False' → logprob: -8.626676559448242
    8. '    ' → logprob: -8.751676559448242
    9. ' True' → logprob: -8.876676559448242
    10. '[' → logprob: -9.251676559448242

Token 206: ' raise' (ID: 9338)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.3824760615825653
    2. ' return' → logprob: -1.6324760913848877
    3. '   ' → logprob: -2.1324760913848877
    4. '       ' → logprob: -5.632475852966309
    5. '	return' → logprob: -9.132475852966309
    6. ' ' → logprob: -9.757475852966309
    7. '  ' → logprob: -10.132475852966309
    8. '[]' → logprob: -10.757475852966309
    9. '    ' → logprob: -11.132475852966309
    10. ':return' → logprob: -12.132475852966309

Token 207: ' Exception' (ID: 6851)
  Prédit: 'Exception'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Exception' → logprob: -0.2723487615585327
    2. 'Value' → logprob: -1.5223487615585327
    3. 'False' → logprob: -4.272348880767822
    4. ' Exception' → logprob: -5.772348880767822
    5. 'None' → logprob: -6.772348880767822
    6. 'value' → logprob: -6.897348880767822
    7. ' Value' → logprob: -7.647348880767822
    8. 'Stop' → logprob: -8.522348403930664
    9. 'True' → logprob: -9.897348403930664
    10. 'int' → logprob: -10.522348403930664

Token 208: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.00020294437126722187
    2. '(' → logprob: -8.875203132629395
    3. '('' → logprob: -10.375203132629395
    4. '("")' → logprob: -10.625203132629395
    5. '(Value' → logprob: -13.000203132629395
    6. '"' → logprob: -13.125203132629395
    7. '(":' → logprob: -13.750203132629395
    8. '("("' → logprob: -14.125203132629395
    9. '("'' → logprob: -14.375203132629395
    10. '()' → logprob: -15.625203132629395

Token 209: 'not' (ID: 2878)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.9505445957183838
    2. ''' → logprob: -1.4505445957183838
    3. '2' → logprob: -1.7005445957183838
    4. 'n' → logprob: -1.9505445957183838
    5. ''n' → logprob: -3.200544595718384
    6. 'Input' → logprob: -6.075544357299805
    7. '"value' → logprob: -6.325544357299805
    8. 'Value' → logprob: -6.450544357299805
    9. 'Number' → logprob: -6.950544357299805
    10. 'input' → logprob: -7.200544357299805

Token 210: ' enough' (ID: 4951)
  Prédit: ' valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' valid' → logprob: -0.4960564076900482
    2. 'valid' → logprob: -1.2460564374923706
    3. ' enough' → logprob: -3.121056318283081
    4. 'implemented' → logprob: -3.996056318283081
    5. '2' → logprob: -4.62105655670166
    6. ' a' → logprob: -4.74605655670166
    7. 'a' → logprob: -5.12105655670166
    8. 'en' → logprob: -5.24605655670166
    9. 'supported' → logprob: -6.24605655670166
    10. 's' → logprob: -6.74605655670166

Token 211: '")
' (ID: 1896)
  Prédit: ' numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' numbers' → logprob: -0.15420597791671753
    2. 'numbers' → logprob: -3.1542060375213623
    3. ' primes' → logprob: -3.5292060375213623
    4. ' elements' → logprob: -3.9042060375213623
    5. ' values' → logprob: -4.279205799102783
    6. '2' → logprob: -4.779205799102783
    7. ' range' → logprob: -5.654205799102783
    8. '")' → logprob: -5.654205799102783
    9. ' input' → logprob: -5.779205799102783
    10. 'elements' → logprob: -5.779205799102783

Token 212: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014109788462519646
    2. ' sieve' → logprob: -4.5141096115112305
    3. '
' → logprob: -6.3891096115112305
    4. '    
' → logprob: -7.6391096115112305
    5. 's' → logprob: -8.01410961151123
    6. 'False' → logprob: -9.01410961151123
    7. 'True' → logprob: -9.13910961151123
    8. 'is' → logprob: -9.88910961151123
    9. '  
' → logprob: -10.13910961151123
    10. ',' → logprob: -10.38910961151123

Token 213: ' primes' (ID: 104042)
  Prédit: 'prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prime' → logprob: -0.9925087690353394
    2. 'pr' → logprob: -1.6175087690353394
    3. '   ' → logprob: -1.8675087690353394
    4. 's' → logprob: -2.117508888244629
    5. ' sieve' → logprob: -2.117508888244629
    6. 'is' → logprob: -3.492508888244629
    7. ' primes' → logprob: -5.867508888244629
    8. ' prime' → logprob: -6.617508888244629
    9. ' is' → logprob: -6.992508888244629
    10. 'limit' → logprob: -9.992508888244629

Token 214: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07892316579818726
    2. '=' → logprob: -2.578923225402832
    3. '=[' → logprob: -11.203923225402832
    4. '=[]' → logprob: -11.578923225402832
    5. '[' → logprob: -13.078923225402832
    6. 's' → logprob: -13.328923225402832
    7. ',' → logprob: -13.578923225402832
    8. ' =[' → logprob: -13.953923225402832
    9. '_list' → logprob: -14.453923225402832
    10. '=[]
' → logprob: -14.578923225402832

Token 215: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00027825910365208983
    2. '[n' → logprob: -8.75027847290039
    3. ' [' → logprob: -9.12527847290039
    4. '[]' → logprob: -11.87527847290039
    5. '[array' → logprob: -13.87527847290039
    6. '[int' → logprob: -14.50027847290039
    7. '[list' → logprob: -14.50027847290039
    8. '[s' → logprob: -15.12527847290039
    9. '[len' → logprob: -15.75027847290039
    10. '[num' → logprob: -15.75027847290039

Token 216: '1' (ID: 16)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -1.2664456789934775e-06
    2. ' True' → logprob: -14.250000953674316
    3. 'False' → logprob: -15.125000953674316
    4. '(True' → logprob: -15.625000953674316
    5. '1' → logprob: -16.375001907348633
    6. '   ' → logprob: -20.875001907348633
    7. ']' → logprob: -21.250001907348633
    8. 'Tr' → logprob: -21.250001907348633
    9. '2' → logprob: -21.500001907348633
    10. '0' → logprob: -21.625001907348633

Token 217: ']*(' (ID: 92627)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.044775303453207016
    2. ']*(' → logprob: -3.7947752475738525
    3. ',' → logprob: -4.419775485992432
    4. ']*' → logprob: -4.919775485992432
    5. ']+' → logprob: -6.794775485992432
    6. ' for' → logprob: -7.294775485992432
    7. 'for' → logprob: -9.669775009155273
    8. ' ]' → logprob: -9.669775009155273
    9. '0' → logprob: -11.544775009155273
    10. '2' → logprob: -11.669775009155273

Token 218: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -9.088346359931165e-07
    2. '(n' → logprob: -14.125000953674316
    3. ' n' → logprob: -16.125
    4. '	n' → logprob: -18.375
    5. '(' → logprob: -19.0
    6. ')n' → logprob: -20.75
    7. ' (' → logprob: -21.625
    8. '   ' → logprob: -21.875
    9. '```' → logprob: -22.25
    10. '_n' → logprob: -23.75

Token 219: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.9385402993066236e-05
    2. ')' → logprob: -11.500019073486328
    3. ' +' → logprob: -11.625019073486328
    4. '-' → logprob: -16.000019073486328
    5. '+)' → logprob: -16.750019073486328
    6. '0' → logprob: -17.125019073486328
    7. '1' → logprob: -17.375019073486328
    8. ' )' → logprob: -18.125019073486328
    9. ')+' → logprob: -18.375019073486328
    10. '```' → logprob: -18.375019073486328

Token 220: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -14.250000953674316
    3. '2' → logprob: -15.750000953674316
    4. '
' → logprob: -16.750001907348633
    5. ')' → logprob: -17.500001907348633
    6. '

' → logprob: -17.750001907348633
    7. '```' → logprob: -18.000001907348633
    8. '   ' → logprob: -18.187501907348633
    9. 'True' → logprob: -19.000001907348633
    10. '0' → logprob: -19.187501907348633

Token 221: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.963691804325208e-05
    2. ')
' → logprob: -10.500029563903809
    3. ' )' → logprob: -13.625029563903809
    4. ']' → logprob: -14.750029563903809
    5. ')
' → logprob: -15.625029563903809
    6. ')

' → logprob: -15.750029563903809
    7. ')#' → logprob: -16.750030517578125
    8. '#' → logprob: -17.125030517578125
    9. '<|end|>' → logprob: -17.625030517578125
    10. '))' → logprob: -17.875030517578125

Token 222: '   ' (ID: 271)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6384522914886475
    2. '<|end|>' → logprob: -1.3884522914886475
    3. '0' → logprob: -2.3884522914886475
    4. '   ' → logprob: -2.8884522914886475
    5. ')' → logprob: -3.1384522914886475
    6. '
' → logprob: -4.513452529907227
    7. ' ' → logprob: -4.888452529907227
    8. '    
' → logprob: -6.388452529907227
    9. '<|end|>' → logprob: -6.513452529907227
    10. 'def' → logprob: -6.763452529907227

Token 223: ' for' (ID: 395)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.004151768516749144
    2. '2' → logprob: -6.254151821136475
    3. ' primes' → logprob: -6.754151821136475
    4. '0' → logprob: -7.004151821136475
    5. '[' → logprob: -10.254151344299316
    6. 'prime' → logprob: -10.629151344299316
    7. '	pr' → logprob: -10.754151344299316
    8. 'p' → logprob: -10.879151344299316
    9. '   ' → logprob: -11.254151344299316
    10. ' ' → logprob: -11.254151344299316

Token 224: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.13781236112117767
    2. ' i' → logprob: -2.262812376022339
    3. 'p' → logprob: -3.887812376022339
    4. ' p' → logprob: -5.63781213760376
    5. 'x' → logprob: -8.012812614440918
    6. '2' → logprob: -8.512812614440918
    7. 'k' → logprob: -10.637812614440918
    8. ' x' → logprob: -11.137812614440918
    9. 'd' → logprob: -11.262812614440918
    10. 'num' → logprob: -11.637812614440918

Token 225: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02112029306590557
    2. 'in' → logprob: -3.896120309829712
    3. '=' → logprob: -7.771120071411133
    4. '2' → logprob: -10.271120071411133
    5. ' ' → logprob: -10.396120071411133
    6. ' =' → logprob: -10.396120071411133
    7. '<|end|>' → logprob: -10.521120071411133
    8. ',' → logprob: -12.021120071411133
    9. '	in' → logprob: -12.521120071411133
    10. '1' → logprob: -12.771120071411133

Token 226: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.020795514807105064
    2. '2' → logprob: -4.2707953453063965
    3. ' range' → logprob: -5.0207953453063965
    4. '(' → logprob: -12.145795822143555
    5. ' ' → logprob: -12.270795822143555
    6. '(range' → logprob: -15.145795822143555
    7. '	range' → logprob: -15.145795822143555
    8. '[' → logprob: -16.520795822143555
    9. '3' → logprob: -16.520795822143555
    10. ')' → logprob: -16.645795822143555

Token 227: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003179855877533555
    2. '2' → logprob: -5.753180027008057
    3. ' ' → logprob: -13.628179550170898
    4. ' (' → logprob: -14.253179550170898
    5. '[' → logprob: -16.1281795501709
    6. '   ' → logprob: -16.7531795501709
    7. '=' → logprob: -16.8781795501709
    8. '```' → logprob: -17.7531795501709
    9. '	' → logprob: -18.0031795501709
    10. '(
' → logprob: -18.5031795501709

Token 228: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.822646693966817e-06
    2. ' ' → logprob: -11.875007629394531
    3. '1' → logprob: -15.375007629394531
    4. '(' → logprob: -15.500007629394531
    5. '   ' → logprob: -15.625007629394531
    6. '```' → logprob: -17.25000762939453
    7. ')' → logprob: -17.75000762939453
    8. '２' → logprob: -17.87500762939453
    9. '	' → logprob: -18.18750762939453
    10. '4' → logprob: -18.25000762939453

Token 229: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004880534950643778
    2. ',n' → logprob: -5.754880428314209
    3. ' ,' → logprob: -6.379880428314209
    4. ',int' → logprob: -12.879880905151367
    5. '   ' → logprob: -13.629880905151367
    6. 'n' → logprob: -13.754880905151367
    7. ' ' → logprob: -15.379880905151367
    8. ',i' → logprob: -15.504880905151367
    9. ',(' → logprob: -15.504880905151367
    10. ',
' → logprob: -15.754880905151367

Token 230: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.01823083683848381
    2. ' int' → logprob: -4.01823091506958
    3. 'n' → logprob: -10.143230438232422
    4. '   ' → logprob: -11.143230438232422
    5. '(int' → logprob: -11.518230438232422
    6. '	int' → logprob: -11.768230438232422
    7. 'math' → logprob: -12.018230438232422
    8. ' n' → logprob: -13.643230438232422
    9. ' ' → logprob: -14.143230438232422
    10. ' math' → logprob: -14.893230438232422

Token 231: '(math' (ID: 86464)
  Prédit: '(math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(math' → logprob: -0.03981629014015198
    2. '(n' → logprob: -3.289816379547119
    3. 'math' → logprob: -6.414816379547119
    4. ' math' → logprob: -9.664815902709961
    5. '(' → logprob: -9.914815902709961
    6. '((' → logprob: -11.414815902709961
    7. 'n' → logprob: -11.539815902709961
    8. ' (' → logprob: -13.539815902709961
    9. '(pow' → logprob: -14.914815902709961
    10. '.math' → logprob: -15.539815902709961

Token 232: '.sqrt' (ID: 38011)
  Prédit: '.sqrt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sqrt' → logprob: -0.0005127601907588542
    2. 'sqrt' → logprob: -7.750512599945068
    3. '.is' → logprob: -9.875513076782227
    4. '.ceil' → logprob: -11.250513076782227
    5. '.' → logprob: -11.500513076782227
    6. '.math' → logprob: -12.375513076782227
    7. '.floor' → logprob: -13.500513076782227
    8. 'is' → logprob: -14.125513076782227
    9. '(math' → logprob: -15.000513076782227
    10. 'math' → logprob: -15.500513076782227

Token 233: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00038801267510280013
    2. 'n' → logprob: -8.500388145446777
    3. '(' → logprob: -8.625388145446777
    4. ' (' → logprob: -13.000388145446777
    5. '(i' → logprob: -13.750388145446777
    6. '((' → logprob: -14.375388145446777
    7. ' n' → logprob: -14.750388145446777
    8. ')n' → logprob: -15.250388145446777
    9. '(
' → logprob: -15.375388145446777
    10. ' ' → logprob: -16.50038719177246

Token 234: '))' (ID: 915)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.7322576642036438
    2. ')+' → logprob: -1.482257604598999
    3. '(' → logprob: -1.982257604598999
    4. ')' → logprob: -1.982257604598999
    5. '())' → logprob: -5.107257843017578
    6. '(i' → logprob: -5.482257843017578
    7. '**' → logprob: -5.857257843017578
    8. '))+' → logprob: -6.982257843017578
    9. ' ' → logprob: -7.857257843017578
    10. ' (' → logprob: -7.982257843017578

Token 235: '):
' (ID: 1883)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.06523296982049942
    2. ')+' → logprob: -3.190232992172241
    3. ' +' → logprob: -4.065232753753662
    4. '()+' → logprob: -5.440232753753662
    5. ')' → logprob: -8.06523323059082
    6. '()' → logprob: -9.31523323059082
    7. ']+' → logprob: -10.44023323059082
    8. ' ' → logprob: -10.69023323059082
    9. '(' → logprob: -11.31523323059082
    10. '   ' → logprob: -11.94023323059082

Token 236: '       ' (ID: 309)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.013269646093249321
    2. ' +' → logprob: -4.388269424438477
    3. '+i' → logprob: -8.513269424438477
    4. '   ' → logprob: -8.888269424438477
    5. ' ' → logprob: -8.888269424438477
    6. '+:' → logprob: -9.388269424438477
    7. ' i' → logprob: -9.763269424438477
    8. ':' → logprob: -9.888269424438477
    9. '2' → logprob: -11.013269424438477
    10. '1' → logprob: -11.138269424438477

Token 237: ' if' (ID: 538)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6640140414237976
    2. ' if' → logprob: -1.5390141010284424
    3. 'i' → logprob: -1.9140141010284424
    4. 'if' (adapté à ' if') → logprob: -2.1640141010284424
    5. '   ' → logprob: -5.039013862609863
    6. '2' → logprob: -7.414013862609863
    7. ' ' → logprob: -7.539013862609863
    8. '1' → logprob: -8.789013862609863
    9. '+' → logprob: -8.914013862609863
    10. '    ' → logprob: -9.539013862609863

Token 238: ' primes' (ID: 104042)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.6931848526000977
    2. ' primes' → logprob: -0.6931848526000977
    3. '(pr' → logprob: -10.818184852600098
    4. 'n' → logprob: -12.068184852600098
    5. 'prime' → logprob: -13.068184852600098
    6. ' ' → logprob: -13.193184852600098
    7. '   ' → logprob: -13.443184852600098
    8. ' not' → logprob: -13.568184852600098
    9. ' pr' → logprob: -13.818184852600098
    10. '	pr' → logprob: -13.818184852600098

Token 239: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.935296834039036e-06
    2. 'i' → logprob: -13.37500286102295
    3. '[' → logprob: -13.87500286102295
    4. ' [' → logprob: -15.62500286102295
    5. '[I' → logprob: -16.625003814697266
    6. ' i' → logprob: -18.125003814697266
    7. '\[' → logprob: -18.375003814697266
    8. '[j' → logprob: -18.625003814697266
    9. '[
' → logprob: -18.750003814697266
    10. '[int' → logprob: -19.125003814697266

Token 240: ']:
' (ID: 22152)
  Prédit: ']=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']==' → logprob: -0.5036880970001221
    2. ']:' → logprob: -1.503688097000122
    3. ']' → logprob: -1.753688097000122
    4. ']:
' → logprob: -8.878687858581543
    5. '==' → logprob: -10.128687858581543
    6. ' ]' → logprob: -10.753687858581543
    7. ']>' → logprob: -11.003687858581543
    8. ']:

' → logprob: -11.253687858581543
    9. ':' → logprob: -11.503687858581543
    10. ']!=' → logprob: -11.753687858581543

Token 241: '           ' (ID: 352)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9531139731407166
    2. ':' → logprob: -1.0781140327453613
    3. ' =' → logprob: -2.2031140327453613
    4. '       ' → logprob: -2.9531140327453613
    5. ' i' → logprob: -3.4531140327453613
    6. '   ' → logprob: -3.8281140327453613
    7. 'i' → logprob: -3.9531140327453613
    8. '=i' → logprob: -4.203114032745361
    9. '<|end|>' → logprob: -4.828114032745361
    10. '*i' → logprob: -5.953114032745361

Token 242: ' for' (ID: 395)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.08227181434631348
    2. ' i' → logprob: -2.8322718143463135
    3. 'for' (adapté à ' for') → logprob: -4.332271575927734
    4. ' for' → logprob: -5.082271575927734
    5. 'range' → logprob: -8.332271575927734
    6. '   ' → logprob: -8.582271575927734
    7. '2' → logprob: -8.707271575927734
    8. '(i' → logprob: -9.832271575927734
    9. '*i' → logprob: -9.957271575927734
    10. ' range' → logprob: -11.082271575927734

Token 243: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.029790064319968224
    2. ' j' → logprob: -3.529790163040161
    3. 'range' → logprob: -10.279789924621582
    4. ' range' → logprob: -12.529789924621582
    5. ' ' → logprob: -14.404789924621582
    6. 'x' → logprob: -14.654789924621582
    7. '	j' → logprob: -15.029789924621582
    8. 'i' → logprob: -15.779789924621582
    9. '   ' → logprob: -16.1547908782959
    10. 'k' → logprob: -17.2797908782959

Token 244: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004693442024290562
    2. 'in' → logprob: -5.379693508148193
    3. '=' → logprob: -10.004693031311035
    4. ' =' → logprob: -11.879693031311035
    5. '<|end|>' → logprob: -12.254693031311035
    6. ' i' → logprob: -12.379693031311035
    7. ' ' → logprob: -12.504693031311035
    8. 'range' → logprob: -12.629693031311035
    9. '=i' → logprob: -14.129693031311035
    10. '	in' → logprob: -14.379693031311035

Token 245: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0004309076175559312
    2. ' range' → logprob: -7.750431060791016
    3. '(range' → logprob: -15.375431060791016
    4. '   ' → logprob: -17.750431060791016
    5. '	range' → logprob: -17.750431060791016
    6. ' ' → logprob: -18.125431060791016
    7. 'i' → logprob: -18.875431060791016
    8. '  ' → logprob: -19.875431060791016
    9. 'rang' → logprob: -20.375431060791016
    10. ' xrange' → logprob: -21.375431060791016

Token 246: '(' (ID: 7)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0001847062085289508
    2. '(' → logprob: -8.625185012817383
    3. 'i' → logprob: -12.750185012817383
    4. ' (' → logprob: -14.375185012817383
    5. '(j' → logprob: -14.375185012817383
    6. '((' → logprob: -15.125185012817383
    7. ' i' → logprob: -15.750185012817383
    8. '(ii' → logprob: -15.750185012817383
    9. '(int' → logprob: -16.000185012817383
    10. '2' → logprob: -16.750185012817383

Token 247: '2' (ID: 17)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00043162284418940544
    2. '(i' → logprob: -8.625432014465332
    3. ' i' → logprob: -8.625432014465332
    4. '2' → logprob: -9.750432014465332
    5. '   ' → logprob: -12.250432014465332
    6. 'int' → logprob: -12.625432014465332
    7. ' ' → logprob: -13.375432014465332
    8. '(' → logprob: -13.625432014465332
    9. '1' → logprob: -13.875432014465332
    10. '	i' → logprob: -14.250432014465332

Token 248: '*i' (ID: 51147)
  Prédit: '*i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*i' → logprob: -0.02688848227262497
    2. ',' → logprob: -3.901888370513916
    3. '*' → logprob: -6.026888370513916
    4. '*j' → logprob: -6.276888370513916
    5. 'i' → logprob: -7.026888370513916
    6. ',i' → logprob: -7.276888370513916
    7. ' *' → logprob: -8.276888847351074
    8. ' ,' → logprob: -9.526888847351074
    9. ' i' → logprob: -10.026888847351074
    10. 'j' → logprob: -10.276888847351074

Token 249: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005619212053716183
    2. ',n' → logprob: -5.630619049072266
    3. ',j' → logprob: -6.880619049072266
    4. ' ,' → logprob: -7.255619049072266
    5. 'n' → logprob: -9.005619049072266
    6. '(n' → logprob: -9.880619049072266
    7. 'j' → logprob: -10.255619049072266
    8. ',i' → logprob: -11.130619049072266
    9. ';' → logprob: -11.255619049072266
    10. ',len' → logprob: -11.755619049072266

Token 250: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.020545506849884987
    2. ' n' → logprob: -3.895545482635498
    3. '	n' → logprob: -13.020545959472656
    4. '(n' → logprob: -14.270545959472656
    5. ' ' → logprob: -14.770545959472656
    6. '   ' → logprob: -15.395545959472656
    7. '    ' → logprob: -15.770545959472656
    8. ',' → logprob: -16.895545959472656
    9. ')n' → logprob: -16.895545959472656
    10. ',n' → logprob: -17.020545959472656

Token 251: '):
' (ID: 1883)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.8550976164988242e-05
    2. ' +' → logprob: -11.375018119812012
    3. '1' → logprob: -12.625018119812012
    4. '+j' → logprob: -13.375018119812012
    5. '+i' → logprob: -14.125018119812012
    6. '+
' → logprob: -14.875018119812012
    7. ',' → logprob: -15.000018119812012
    8. 'n' → logprob: -15.500018119812012
    9. '
' → logprob: -16.375019073486328
    10. '+n' → logprob: -16.375019073486328

Token 252: '               ' (ID: 506)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.3330794870853424
    2. 'i' → logprob: -2.0830795764923096
    3. ' j' → logprob: -2.4580795764923096
    4. ' i' → logprob: -3.3330795764923096
    5. '+' → logprob: -4.8330793380737305
    6. ',' → logprob: -4.9580793380737305
    7. '           ' → logprob: -5.4580793380737305
    8. ':j' → logprob: -5.4580793380737305
    9. '               ' → logprob: -5.7080793380737305
    10. ':i' → logprob: -5.8330793380737305

Token 253: ' if' (ID: 538)
  Prédit: ' primes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' primes' → logprob: -0.16303551197052002
    2. 'pr' → logprob: -2.0380353927612305
    3. ' if' → logprob: -4.5380353927612305
    4. 'if' (adapté à ' if') → logprob: -5.2880353927612305
    5. '                   ' → logprob: -6.4130353927612305
    6. 'j' → logprob: -6.4130353927612305
    7. '               ' → logprob: -7.2880353927612305
    8. '   ' → logprob: -8.53803539276123
    9. '           ' → logprob: -8.91303539276123
    10. ' j' → logprob: -10.53803539276123

Token 254: ' j' (ID: 441)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.5305572152137756
    2. 'j' → logprob: -1.4055571556091309
    3. ' primes' → logprob: -1.9055571556091309
    4. ' j' → logprob: -4.155557155609131
    5. 'n' → logprob: -7.280557155609131
    6. '   ' → logprob: -7.405557155609131
    7. '(pr' → logprob: -8.280557632446289
    8. ' n' → logprob: -9.405557632446289
    9. 'not' → logprob: -9.780557632446289
    10. ' not' → logprob: -9.780557632446289

Token 255: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -1.3287320137023926
    2. '<=' → logprob: -1.3287320137023926
    3. ' <=' → logprob: -1.3287320137023926
    4. ' %' → logprob: -1.7037320137023926
    5. '%i' → logprob: -3.9537320137023926
    6. '%n' → logprob: -6.203732013702393
    7. '%s' → logprob: -7.828732013702393
    8. '<|end|>' → logprob: -7.828732013702393
    9. '%d' → logprob: -8.203731536865234
    10. ')' → logprob: -8.453731536865234

Token 256: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -5.6934557505883276e-05
    2. ' i' → logprob: -10.000057220458984
    3. '2' → logprob: -12.000057220458984
    4. 'j' → logprob: -12.875057220458984
    5. ' ' → logprob: -14.500057220458984
    6. '(' → logprob: -14.625057220458984
    7. '(i' → logprob: -15.375057220458984
    8. '1' → logprob: -15.375057220458984
    9. '0' → logprob: -15.500057220458984
    10. '{i' → logprob: -15.500057220458984

Token 257: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.04369550943374634
    2. ' ==' → logprob: -3.1686954498291016
    3. '=' → logprob: -7.543695449829102
    4. '0' → logprob: -9.918695449829102
    5. '!=' → logprob: -10.043695449829102
    6. '==
' → logprob: -10.168695449829102
    7. ' !=' → logprob: -11.668695449829102
    8. ')==' → logprob: -12.043695449829102
    9. '===' → logprob: -12.293695449829102
    10. ' ' → logprob: -12.543695449829102

Token 258: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.494741632603109e-05
    2. ' ' → logprob: -9.37508487701416
    3. '=' → logprob: -18.000085830688477
    4. '۰' → logprob: -19.125085830688477
    5. '==' → logprob: -19.375085830688477
    6. '  ' → logprob: -19.500085830688477
    7. '<|end|>' → logprob: -19.500085830688477
    8. '   ' → logprob: -19.875085830688477
    9. '    ' → logprob: -20.250085830688477
    10. '  ' → logprob: -20.375085830688477

Token 259: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. 'i' → logprob: -19.37500762939453
    4. '۰' → logprob: -19.37500762939453
    5. 'zero' → logprob: -19.62500762939453
    6. '   ' → logprob: -19.62500762939453
    7. '  ' → logprob: -20.12500762939453
    8. '=' → logprob: -20.37500762939453
    9. '<|end|>' → logprob: -20.37500762939453
    10. 'o' → logprob: -20.50000762939453

Token 260: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1617613583803177
    2. '                   ' → logprob: -2.6617612838745117
    3. ':
' → logprob: -2.6617612838745117
    4. ',' → logprob: -5.786761283874512
    5. '               ' → logprob: -6.161761283874512
    6. '):
' → logprob: -7.161761283874512
    7. ' primes' → logprob: -7.161761283874512
    8. '=' → logprob: -7.786761283874512
    9. '):' → logprob: -7.786761283874512
    10. '<|end|>' → logprob: -7.911761283874512

Token 261: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.35064372420310974
    2. ' primes' → logprob: -1.2256437540054321
    3. 'pr' → logprob: -6.350643634796143
    4. '               ' → logprob: -8.8506441116333
    5. '                       ' → logprob: -9.3506441116333
    6. ',' → logprob: -9.6006441116333
    7. '                  ' → logprob: -10.4756441116333
    8. '(pr' → logprob: -11.3506441116333
    9. 'prime' → logprob: -11.7256441116333
    10. '	pr' → logprob: -11.7256441116333

Token 262: ' primes' (ID: 104042)
  Prédit: ' primes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' primes' → logprob: -0.1276804655790329
    2. 'pr' → logprob: -2.627680540084839
    3. '                   ' → logprob: -3.127680540084839
    4. '                       ' → logprob: -5.75268030166626
    5. '	pr' → logprob: -8.627680778503418
    6. '               ' → logprob: -9.002680778503418
    7. ' pr' → logprob: -9.627680778503418
    8. '   ' → logprob: -10.127680778503418
    9. 'prime' → logprob: -10.502680778503418
    10. '           ' → logprob: -10.627680778503418

Token 263: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0005520791164599359
    2. '[' → logprob: -8.1255521774292
    3. '=' → logprob: -8.6255521774292
    4. '[i' → logprob: -9.6255521774292
    5. '=j' → logprob: -12.7505521774292
    6. ']' → logprob: -13.2505521774292
    7. 'j' → logprob: -13.7505521774292
    8. '[js' → logprob: -14.1255521774292
    9. ' =' → logprob: -14.3755521774292
    10. '][' → logprob: -14.6255521774292

Token 264: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2870056927204132
    2. '=' → logprob: -1.7870056629180908
    3. ']=' → logprob: -2.537005662918091
    4. ' =' → logprob: -5.91200590133667
    5. ' ]' → logprob: -8.537005424499512
    6. '0' → logprob: -11.662005424499512
    7. '=False' → logprob: -12.037005424499512
    8. ']==' → logprob: -12.662005424499512
    9. ')' → logprob: -12.787005424499512
    10. ')=' → logprob: -13.662005424499512

Token 265: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011049000546336174
    2. ' =' → logprob: -4.511048793792725
    3. '=False' → logprob: -13.886049270629883
    4. '0' → logprob: -15.511049270629883
    5. '=
' → logprob: -17.261049270629883
    6. '=True' → logprob: -18.011049270629883
    7. ']=' → logprob: -18.261049270629883
    8. ' ' → logprob: -19.011049270629883
    9. ']' → logprob: -19.511049270629883
    10. '＝' → logprob: -19.636049270629883

Token 266: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.480199954239652e-05
    2. ' ' → logprob: -9.875064849853516
    3. 'False' → logprob: -11.250064849853516
    4. ' False' → logprob: -15.750064849853516
    5. '   ' → logprob: -17.125064849853516
    6. '  ' → logprob: -18.250064849853516
    7. 'false' → logprob: -18.750064849853516
    8. '۰' → logprob: -19.562564849853516
    9. '000' → logprob: -19.875064849853516
    10. '[' → logprob: -19.875064849853516

Token 267: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.723973582556937e-05
    2. 'False' → logprob: -11.500017166137695
    3. ' ' → logprob: -11.875017166137695
    4. ' False' → logprob: -17.375017166137695
    5. 'false' → logprob: -18.375017166137695
    6. '   ' → logprob: -18.750017166137695
    7. '۰' → logprob: -18.875017166137695
    8. '000' → logprob: -19.312517166137695
    9. '  ' → logprob: -19.312517166137695
    10. '=' → logprob: -19.562517166137695

Token 268: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 269: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 270: ' ans' (ID: 3345)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.067335844039917
    2. '   ' → logprob: -1.442335844039917
    3. '<|end|>' → logprob: -1.567335844039917
    4. ':' → logprob: -2.942335844039917
    5. '[' → logprob: -3.067335844039917
    6. ']' → logprob: -3.317335844039917
    7. '    ' → logprob: -4.317336082458496
    8. '+' → logprob: -4.567336082458496
    9. '       ' → logprob: -4.567336082458496
    10. ' ' → logprob: -4.942336082458496

Token 271: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519819140434265
    2. '=' → logprob: -1.5019819736480713
    3. '=[]' → logprob: -10.751981735229492
    4. '[:]' → logprob: -11.751981735229492
    5. ':' → logprob: -12.376981735229492
    6. '[' → logprob: -12.501981735229492
    7. ',' → logprob: -12.501981735229492
    8. ' ' → logprob: -12.876981735229492
    9. '[]' → logprob: -12.876981735229492
    10. ' =[' → logprob: -13.751981735229492

Token 272: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0785946175456047
    2. '[' → logprob: -2.82859468460083
    3. ' []' → logprob: -4.70359468460083
    4. ' [' → logprob: -5.45359468460083
    5. '[]
' → logprob: -6.20359468460083
    6. '[int' → logprob: -7.57859468460083
    7. '[n' → logprob: -8.953594207763672
    8. '[j' → logprob: -9.453594207763672
    9. '[len' → logprob: -9.828594207763672
    10. '[max' → logprob: -9.828594207763672

Token 273: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.13011224567890167
    2. '   ' → logprob: -2.6301121711730957
    3. 'for' → logprob: -3.0051121711730957
    4. '<|end|>' → logprob: -8.130112648010254
    5. '	for' → logprob: -9.630112648010254
    6. ' ' → logprob: -10.380112648010254
    7. '  ' → logprob: -12.380112648010254
    8. '<|end|>' → logprob: -13.505112648010254
    9. '    ' → logprob: -13.630112648010254
    10. ',' → logprob: -15.755112648010254

Token 274: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.004344429355114698
    2. ' for' → logprob: -5.504344463348389
    3. '   ' → logprob: -8.25434398651123
    4. '	for' → logprob: -12.12934398651123
    5. '<|end|>' → logprob: -15.12934398651123
    6. ' ' → logprob: -16.254344940185547
    7. '  ' → logprob: -17.254344940185547
    8. 'For' → logprob: -19.004344940185547
    9. '    ' → logprob: -20.504344940185547
    10. '0' → logprob: -20.629344940185547

Token 275: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.30561476945877075
    2. ' i' → logprob: -1.555614709854126
    3. 'k' → logprob: -3.680614709854126
    4. 'x' → logprob: -3.930614709854126
    5. ' x' → logprob: -5.930614948272705
    6. ' k' → logprob: -6.305614948272705
    7. 'p' → logprob: -6.430614948272705
    8. 'num' → logprob: -7.680614948272705
    9. ' p' → logprob: -7.805614948272705
    10. ' num' → logprob: -8.555614471435547

Token 276: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0380743183195591
    2. 'in' → logprob: -3.288074254989624
    3. ',' → logprob: -11.288074493408203
    4. 'range' → logprob: -11.663074493408203
    5. ' ' → logprob: -12.413074493408203
    6. '=' → logprob: -13.038074493408203
    7. '(' → logprob: -13.788074493408203
    8. '2' → logprob: -14.288074493408203
    9. '   ' → logprob: -14.788074493408203
    10. 'from' → logprob: -14.913074493408203

Token 277: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.03804412856698036
    2. ' range' → logprob: -3.2880442142486572
    3. '(range' → logprob: -13.913043975830078
    4. '	range' → logprob: -14.038043975830078
    5. '2' → logprob: -14.163043975830078
    6. ' ' → logprob: -16.288043975830078
    7. '(' → logprob: -16.663043975830078
    8. ' xrange' → logprob: -16.913043975830078
    9. '[' → logprob: -17.038043975830078
    10. '   ' → logprob: -18.288043975830078

Token 278: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -5.512236498361744e-07
    2. '2' → logprob: -15.125000953674316
    3. ' (' → logprob: -15.500000953674316
    4. '(n' → logprob: -17.25
    5. '((' → logprob: -18.5
    6. '(len' → logprob: -18.5
    7. ',' → logprob: -19.0
    8. '(
' → logprob: -19.0
    9. '(

' → logprob: -20.125
    10. ' ' → logprob: -20.375

Token 279: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00012976066500414163
    2. '1' → logprob: -10.000129699707031
    3. 'n' → logprob: -10.125129699707031
    4. ' ' → logprob: -10.125129699707031
    5. 'len' → logprob: -13.125129699707031
    6. '0' → logprob: -14.125129699707031
    7. '(' → logprob: -14.375129699707031
    8. '   ' → logprob: -15.125129699707031
    9. ' n' → logprob: -16.12512969970703
    10. '3' → logprob: -16.31262969970703

Token 280: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002821928064804524
    2. ',n' → logprob: -8.750282287597656
    3. ' ,' → logprob: -9.000282287597656
    4. 'n' → logprob: -15.750282287597656
    5. ',len' → logprob: -16.125282287597656
    6. ',int' → logprob: -16.875282287597656
    7. ',
' → logprob: -17.375282287597656
    8. ' ' → logprob: -18.250282287597656
    9. ',(' → logprob: -18.500282287597656
    10. ',i' → logprob: -18.500282287597656

Token 281: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.20142260193824768
    2. ' n' → logprob: -1.7014225721359253
    3. 'len' → logprob: -12.326422691345215
    4. ' len' → logprob: -13.326422691345215
    5. '	n' → logprob: -13.451422691345215
    6. ' ' → logprob: -14.076422691345215
    7. '   ' → logprob: -14.451422691345215
    8. '    ' → logprob: -15.076422691345215
    9. '(n' → logprob: -16.4514217376709
    10. '  ' → logprob: -17.5764217376709

Token 282: '):
' (ID: 1883)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00034356804098933935
    2. ' +' → logprob: -8.000343322753906
    3. '):' → logprob: -12.250343322753906
    4. '):
' → logprob: -13.000343322753906
    5. '   ' → logprob: -14.500343322753906
    6. '+
' → logprob: -15.500343322753906
    7. ')' → logprob: -16.375343322753906
    8. ')+' → logprob: -16.750343322753906
    9. '1' → logprob: -17.250343322753906
    10. '+n' → logprob: -17.375343322753906

Token 283: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00047630956396460533
    2. ' if' → logprob: -8.000475883483887
    3. '   ' → logprob: -9.500475883483887
    4. '<|end|>' → logprob: -10.375475883483887
    5. ',' → logprob: -11.125475883483887
    6. 'if' → logprob: -11.875475883483887
    7. '<|end|>' → logprob: -12.625475883483887
    8. ':' → logprob: -13.125475883483887
    9. ' ' → logprob: -13.500475883483887
    10. '
' → logprob: -13.875475883483887

Token 284: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.12864786386489868
    2. ' if' → logprob: -2.128647804260254
    3. '   ' → logprob: -6.628647804260254
    4. '       ' → logprob: -7.878647804260254
    5. '	if' → logprob: -11.253647804260254
    6. ' ' → logprob: -12.753647804260254
    7. '    ' → logprob: -14.003647804260254
    8. '  ' → logprob: -15.503647804260254
    9. 'If' → logprob: -15.503647804260254
    10. '	   ' → logprob: -15.503647804260254

Token 285: ' primes' (ID: 104042)
  Prédit: ' primes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' primes' → logprob: -0.25193271040916443
    2. 'pr' → logprob: -1.5019327402114868
    3. '(pr' → logprob: -13.001933097839355
    4. '	pr' → logprob: -14.251933097839355
    5. 'prime' → logprob: -14.376933097839355
    6. ' ' → logprob: -16.50193214416504
    7. ' pr' → logprob: -17.62693214416504
    8. '_pr' → logprob: -17.87693214416504
    9. '   ' → logprob: -17.87693214416504
    10. 'Pr' → logprob: -18.12693214416504

Token 286: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.0280383548888494e-06
    2. '[' → logprob: -14.875000953674316
    3. '[j' → logprob: -15.000000953674316
    4. ' [' → logprob: -16.500001907348633
    5. '[I' → logprob: -16.625001907348633
    6. 'i' → logprob: -17.375001907348633
    7. '\[' → logprob: -17.625001907348633
    8. '[
' → logprob: -18.000001907348633
    9. '[int' → logprob: -18.125001907348633
    10. '```' → logprob: -18.750001907348633

Token 287: ']' (ID: 60)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.007755680475383997
    2. ']==' → logprob: -5.007755756378174
    3. ']:
' → logprob: -7.507755756378174
    4. ']' → logprob: -7.882755756378174
    5. ':' → logprob: -9.882755279541016
    6. '==' → logprob: -10.132755279541016
    7. ']>' → logprob: -11.632755279541016
    8. '):' → logprob: -12.007755279541016
    9. ']:

' → logprob: -13.132755279541016
    10. ']:
' → logprob: -13.382755279541016

Token 288: ' ==' (ID: 951)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2889339327812195
    2. '==' → logprob: -1.4139339923858643
    3. ' ==' → logprob: -5.663933753967285
    4. '):' → logprob: -6.288933753967285
    5. ']:' → logprob: -7.038933753967285
    6. ':
' → logprob: -7.038933753967285
    7. ']==' → logprob: -7.663933753967285
    8. '=' → logprob: -9.663933753967285
    9. '<|end|>' → logprob: -10.163933753967285
    10. ')==' → logprob: -11.038933753967285

Token 289: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00015991552209015936
    2. ' ' → logprob: -8.750160217285156
    3. '   ' → logprob: -14.000160217285156
    4. '<|end|>' → logprob: -15.125160217285156
    5. '0' → logprob: -16.375160217285156
    6. '  ' → logprob: -16.875160217285156
    7. '...' → logprob: -17.625160217285156
    8. '=' → logprob: -17.875160217285156
    9. 'True' → logprob: -18.125160217285156
    10. '       ' → logprob: -18.437660217285156

Token 290: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9266199160483666e-05
    2. ' ' → logprob: -10.875019073486328
    3. '<|end|>' → logprob: -15.750019073486328
    4. '   ' → logprob: -16.375019073486328
    5. '...' → logprob: -17.625019073486328
    6. '0' → logprob: -17.625019073486328
    7. '=' → logprob: -18.000019073486328
    8. '[' → logprob: -18.312519073486328
    9. 'True' → logprob: -18.375019073486328
    10. '  ' → logprob: -18.500019073486328

Token 291: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04940066859126091
    2. ':
' → logprob: -3.049400568008423
    3. '):' → logprob: -7.549400806427002
    4. '):
' → logprob: -8.299400329589844
    5. '       ' → logprob: -11.174400329589844
    6. ')' → logprob: -12.049400329589844
    7. ',' → logprob: -12.299400329589844
    8. ' and' → logprob: -12.674400329589844
    9. ':
' → logprob: -13.049400329589844
    10. '   ' → logprob: -13.299400329589844

Token 292: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12969978153705597
    2. ' ans' → logprob: -2.37969970703125
    3. 'ans' → logprob: -4.00469970703125
    4. '       ' → logprob: -4.62969970703125
    5. '	ans' → logprob: -7.12969970703125
    6. '(ans' → logprob: -8.62969970703125
    7. '   ' → logprob: -10.50469970703125
    8. '	       ' → logprob: -11.25469970703125
    9. '          ' → logprob: -11.50469970703125
    10. '	   ' → logprob: -11.87969970703125

Token 293: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.01815216802060604
    2. ' ans' → logprob: -4.018152236938477
    3. '	ans' → logprob: -13.518152236938477
    4. '           ' → logprob: -14.893152236938477
    5. '(ans' → logprob: -15.268152236938477
    6. '       ' → logprob: -15.518152236938477
    7. '   ' → logprob: -16.393152236938477
    8. '_ans' → logprob: -17.018152236938477
    9. 'answer' → logprob: -17.768152236938477
    10. 'answers' → logprob: -18.393152236938477

Token 294: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0009172935388050973
    2. '.' → logprob: -7.000917434692383
    3. '.app' → logprob: -13.250917434692383
    4. '.extend' → logprob: -13.625917434692383
    5. ' .' → logprob: -14.000917434692383
    6. 'append' → logprob: -14.125917434692383
    7. '+.' → logprob: -14.875917434692383
    8. '.push' → logprob: -15.000917434692383
    9. '.Append' → logprob: -15.250917434692383
    10. '.ap' → logprob: -16.000917434692383

Token 295: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -5.438573680294212e-06
    2. '(' → logprob: -12.625005722045898
    3. 'i' → logprob: -13.125005722045898
    4. '(
' → logprob: -16.5000057220459
    5. ' i' → logprob: -17.0000057220459
    6. '	i' → logprob: -20.1250057220459
    7. ' (' → logprob: -20.2500057220459
    8. ',i' → logprob: -20.7500057220459
    9. '(n' → logprob: -21.0000057220459
    10. '[i' → logprob: -21.1250057220459

Token 296: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.523948907968588e-05
    2. ')
' → logprob: -10.750035285949707
    3. ' )' → logprob: -11.500035285949707
    4. ')return' → logprob: -12.750035285949707
    5. '<|end|>' → logprob: -15.500035285949707
    6. ')#' → logprob: -16.00003433227539
    7. '   ' → logprob: -16.12503433227539
    8. '),' → logprob: -16.87503433227539
    9. ')n' → logprob: -17.00003433227539
    10. ')i' → logprob: -17.25003433227539

Token 297: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22602158784866333
    2. 'return' → logprob: -1.8510215282440186
    3. ' return' → logprob: -3.1010215282440186
    4. '	return' → logprob: -9.351021766662598
    5. ':return' → logprob: -9.601021766662598
    6. '<|end|>' → logprob: -10.476021766662598
    7. ' ' → logprob: -11.851021766662598
    8. ',' → logprob: -12.226021766662598
    9. '       ' → logprob: -12.351021766662598
    10. '```' → logprob: -12.476021766662598

Token 298: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.03294187784194946
    2. '   ' → logprob: -3.9079418182373047
    3. ' return' → logprob: -4.407941818237305
    4. '	return' → logprob: -9.407941818237305
    5. ':return' → logprob: -10.407941818237305
    6. '<|end|>' → logprob: -11.407941818237305
    7. ' ' → logprob: -11.782941818237305
    8. ')' → logprob: -12.782941818237305
    9. '       ' → logprob: -12.907941818237305
    10. '  ' → logprob: -13.657941818237305

Token 299: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.011061026714742184
    2. ' ans' → logprob: -4.511061191558838
    3. '(ans' → logprob: -11.26106071472168
    4. '	ans' → logprob: -15.01106071472168
    5. '_ans' → logprob: -18.76106071472168
    6. 'pr' → logprob: -21.76106071472168
    7. '[' → logprob: -21.76106071472168
    8. ' ' → logprob: -22.01106071472168
    9. ' ' → logprob: -22.01106071472168
    10. '[]' → logprob: -22.13606071472168

Token 300: '

' (ID: 279)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6949453949928284
    2. '+' → logprob: -0.6949453949928284
    3. ':' → logprob: -7.569945335388184
    4. '):' → logprob: -8.069945335388184
    5. '+)' → logprob: -8.319945335388184
    6. ' +' → logprob: -8.694945335388184
    7. '**' → logprob: -9.069945335388184
    8. '0' → logprob: -9.319945335388184
    9. '*' → logprob: -9.569945335388184
    10. ')+' → logprob: -9.694945335388184

Token 301: 'class' (ID: 1444)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16856256127357483
    2. '+' → logprob: -2.043562650680542
    3. ':' → logprob: -4.543562412261963
    4. '<|end|>' → logprob: -4.543562412261963
    5. 's' → logprob: -7.168562412261963
    6. '_' → logprob: -7.793562412261963
    7. '*' → logprob: -7.918562412261963
    8. '(' → logprob: -8.168562889099121
    9. '<|end|>' → logprob: -8.293562889099121
    10. ']' → logprob: -8.293562889099121

Token 302: ' Union' (ID: 14746)
  Prédit: ' Solution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Solution' → logprob: -1.1240248680114746
    2. ' S' → logprob: -1.8740248680114746
    3. ' Counter' → logprob: -1.8740248680114746
    4. ' Prime' → logprob: -2.2490248680114746
    5. ' Stack' → logprob: -2.7490248680114746
    6. ' Segment' → logprob: -2.9990248680114746
    7. ' Seg' → logprob: -3.2490248680114746
    8. ' Pr' → logprob: -3.9990248680114746
    9. ' Factor' → logprob: -3.9990248680114746
    10. ' Queue' → logprob: -4.124024868011475

Token 303: 'Find' (ID: 11437)
  Prédit: 'Find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Find' → logprob: -0.05395607277750969
    2. '[' → logprob: -3.9289560317993164
    3. '_' → logprob: -4.178956031799316
    4. '_Find' → logprob: -4.553956031799316
    5. '[int' → logprob: -5.928956031799316
    6. '()' → logprob: -7.678956031799316
    7. 'F' → logprob: -7.803956031799316
    8. '[]' → logprob: -7.928956031799316
    9. '_find' → logprob: -8.053956031799316
    10. 'A' → logprob: -8.053956031799316

Token 304: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0004822697374038398
    2. '():' → logprob: -7.750482082366943
    3. '(object' → logprob: -10.000482559204102
    4. ' :' → logprob: -13.375482559204102
    5. '(' → logprob: -13.750482559204102
    6. ':
' → logprob: -14.125482559204102
    7. ':**' → logprob: -14.125482559204102
    8. '>:' → logprob: -14.625482559204102
    9. '):' → logprob: -14.750482559204102
    10. ':

' → logprob: -15.125482559204102

Token 305: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012839472852647305
    2. ' :' → logprob: -5.387839317321777
    3. '(object' → logprob: -5.387839317321777
    4. '():' → logprob: -6.137839317321777
    5. ':
' → logprob: -7.637839317321777
    6. '   ' → logprob: -8.637839317321777
    7. 'def' → logprob: -9.012839317321777
    8. '<|end|>' → logprob: -9.012839317321777
    9. ' (' → logprob: -9.387839317321777
    10. ' def' → logprob: -9.512839317321777

Token 306: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.20511874556541443
    2. 'def' (adapté à ' def') → logprob: -1.7051187753677368
    3. '   ' → logprob: -5.705118656158447
    4. '	def' → logprob: -8.830119132995605
    5. '__' → logprob: -9.330119132995605
    6. ':def' → logprob: -9.705119132995605
    7. '    ' → logprob: -11.080119132995605
    8. ' __' → logprob: -11.205119132995605
    9. ' ' → logprob: -11.330119132995605
    10. ':' → logprob: -11.455119132995605

Token 307: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.011091921478509903
    2. '__' → logprob: -4.511091709136963
    3. ' init' → logprob: -10.636092185974121
    4. 'init' → logprob: -11.011092185974121
    5. '_init' → logprob: -12.886092185974121
    6. ' _' → logprob: -14.386092185974121
    7. '___' → logprob: -15.886092185974121
    8. ' def' → logprob: -16.261091232299805
    9. '__(' → logprob: -16.886091232299805
    10. '_' → logprob: -17.011091232299805

Token 308: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -6.2729995988775045e-06
    2. ' init' → logprob: -12.000006675720215
    3. 'inite' → logprob: -18.7500057220459
    4. 'i' → logprob: -19.6250057220459
    5. 'ini' → logprob: -20.3750057220459
    6. 'in' → logprob: -20.5000057220459
    7. ' ' → logprob: -20.7500057220459
    8. 'int' → logprob: -20.7500057220459
    9. 'innit' → logprob: -20.7500057220459
    10. 'initi' → logprob: -20.8750057220459

Token 309: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0006432149093598127
    2. '(self' → logprob: -7.500643253326416
    3. '__' → logprob: -9.625642776489258
    4. '__(
' → logprob: -11.375642776489258
    5. '(' → logprob: -11.625642776489258
    6. 'self' → logprob: -13.250642776489258
    7. '__((' → logprob: -13.875642776489258
    8. '__(*' → logprob: -14.750642776489258
    9. '__('' → logprob: -15.500642776489258
    10. '<|end|>' → logprob: -15.625642776489258

Token 310: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.7729658540920354e-05
    2. ' self' → logprob: -10.500027656555176
    3. '(self' → logprob: -16.875028610229492
    4. '	self' → logprob: -18.375028610229492
    5. '0' → logprob: -19.375028610229492
    6. ',self' → logprob: -19.375028610229492
    7. '   ' → logprob: -20.000028610229492
    8. 's' → logprob: -20.125028610229492
    9. '1' → logprob: -20.250028610229492
    10. '
' → logprob: -20.375028610229492

Token 311: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04273366555571556
    2. 'self' → logprob: -3.292733669281006
    3. ',self' → logprob: -6.042733669281006
    4. '(self' → logprob: -6.292733669281006
    5. ' self' → logprob: -8.042733192443848
    6. ' ,' → logprob: -10.042733192443848
    7. '__(' → logprob: -10.417733192443848
    8. '__,' → logprob: -10.917733192443848
    9. ')(' → logprob: -11.042733192443848
    10. '	self' → logprob: -11.292733192443848

Token 312: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.006538569461554289
    2. ' n' → logprob: -5.131538391113281
    3. 'size' → logprob: -7.631538391113281
    4. 'self' → logprob: -9.506538391113281
    5. ' size' → logprob: -10.506538391113281
    6. 'N' → logprob: -11.006538391113281
    7. '   ' → logprob: -12.881538391113281
    8. ' ' → logprob: -12.881538391113281
    9. ' self' → logprob: -14.256538391113281
    10. '	n' → logprob: -15.256538391113281

Token 313: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0008059371029958129
    2. '):
' → logprob: -7.625805854797363
    3. ')' → logprob: -8.125805854797363
    4. ' ):' → logprob: -10.875805854797363
    5. ':' → logprob: -13.250805854797363
    6. '):
' → logprob: -14.250805854797363
    7. ',' → logprob: -15.250805854797363
    8. '   ' → logprob: -15.625805854797363
    9. '):

' → logprob: -16.37580680847168
    10. ' )' → logprob: -16.50080680847168

Token 314: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04866912588477135
    2. 'self' → logprob: -3.1736690998077393
    3. ' self' → logprob: -5.673669338226318
    4. '	self' → logprob: -7.173669338226318
    5. '   ' → logprob: -8.04866886138916
    6. ':' → logprob: -8.17366886138916
    7. '<|end|>' → logprob: -8.42366886138916
    8. '(self' → logprob: -8.67366886138916
    9. 'def' → logprob: -9.67366886138916
    10. '        
' → logprob: -10.17366886138916

Token 315: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.002223529852926731
    2. '   ' → logprob: -6.752223491668701
    3. '       ' → logprob: -7.502223491668701
    4. ' self' → logprob: -7.627223491668701
    5. '	self' → logprob: -11.37722396850586
    6. 'parent' → logprob: -13.12722396850586
    7. '    ' → logprob: -15.75222396850586
    8. 'super' → logprob: -16.37722396850586
    9. '  ' → logprob: -16.50222396850586
    10. ' ' → logprob: -16.50222396850586

Token 316: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.0012320152018219233
    2. 'parent' → logprob: -7.251232147216797
    3. '.' → logprob: -8.126232147216797
    4. '.parents' → logprob: -8.876232147216797
    5. '.rank' → logprob: -9.876232147216797
    6. '.size' → logprob: -11.626232147216797
    7. '._' → logprob: -11.626232147216797
    8. '_parent' → logprob: -12.001232147216797
    9. '.data' → logprob: -12.626232147216797
    10. '.par' → logprob: -12.876232147216797

Token 317: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0004306692280806601
    2. ' =' → logprob: -7.750430583953857
    3. '=[' → logprob: -18.250431060791016
    4. '[' → logprob: -19.375431060791016
    5. '=self' → logprob: -20.000431060791016
    6. '=
' → logprob: -20.125431060791016
    7. '=[]' → logprob: -20.375431060791016
    8. '＝' → logprob: -20.500431060791016
    9. '=list' → logprob: -20.500431060791016
    10. '=n' → logprob: -20.875431060791016

Token 318: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.015800192952156067
    2. '[list' → logprob: -4.2657999992370605
    3. '[-' → logprob: -7.0157999992370605
    4. ' list' → logprob: -7.2657999992370605
    5. '[' → logprob: -10.265800476074219
    6. ' [' → logprob: -13.265800476074219
    7. ' [-' → logprob: -14.140800476074219
    8. '[n' → logprob: -15.140800476074219
    9. '[parent' → logprob: -15.390800476074219
    10. '=list' → logprob: -15.390800476074219

Token 319: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.00023166877508629113
    2. 'range' → logprob: -8.375231742858887
    3. ' range' → logprob: -14.500231742858887
    4. '	range' → logprob: -14.625231742858887
    5. '(' → logprob: -16.25023078918457
    6. '=' → logprob: -18.37523078918457
    7. '

' → logprob: -18.75023078918457
    8. '   ' → logprob: -19.00023078918457
    9. '  ' → logprob: -20.12523078918457
    10. 'i' → logprob: -20.25023078918457

Token 320: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0001907855912577361
    2. 'n' → logprob: -8.625190734863281
    3. '(' → logprob: -11.750190734863281
    4. '	n' → logprob: -13.125190734863281
    5. ')n' → logprob: -13.875190734863281
    6. ' n' → logprob: -15.750190734863281
    7. '   ' → logprob: -16.25019073486328
    8. ',n' → logprob: -18.12519073486328
    9. '_n' → logprob: -18.37519073486328
    10. ')' → logprob: -18.50019073486328

Token 321: '+' (ID: 10)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -4.7159857786027715e-05
    2. '))
' → logprob: -10.250046730041504
    3. ')' → logprob: -12.000046730041504
    4. ' ))' → logprob: -12.750046730041504
    5. ')))' → logprob: -13.250046730041504
    6. '()))' → logprob: -15.000046730041504
    7. '))

' → logprob: -15.500046730041504
    8. '));' → logprob: -15.750046730041504
    9. '(n' → logprob: -16.12504768371582
    10. 'n' → logprob: -16.62504768371582

Token 322: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.5577775128767826e-06
    2. ' ' → logprob: -12.125005722045898
    3. '   ' → logprob: -18.1250057220459
    4. ')' → logprob: -19.0000057220459
    5. '```' → logprob: -19.6250057220459
    6. '１' → logprob: -19.7500057220459
    7. 'size' → logprob: -20.1250057220459
    8. 'n' → logprob: -20.2500057220459
    9. 'self' → logprob: -20.5000057220459
    10. '(' → logprob: -20.8750057220459

Token 323: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0009733980987221003
    2. ')' → logprob: -7.000973224639893
    3. '))
' → logprob: -9.87597370147705
    4. ')))' → logprob: -12.37597370147705
    5. ' ))' → logprob: -12.87597370147705
    6. '<|end|>' → logprob: -13.12597370147705
    7. '   ' → logprob: -15.00097370147705
    8. '       ' → logprob: -15.25097370147705
    9. '])' → logprob: -15.50097370147705
    10. '));' → logprob: -15.62597370147705

Token 324: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7301246523857117
    2. '       ' → logprob: -1.3551247119903564
    3. '<|end|>' → logprob: -1.4801247119903564
    4. ')' → logprob: -4.730124473571777
    5. ' ' → logprob: -4.980124473571777
    6. 'self' → logprob: -6.230124473571777
    7. '[' → logprob: -6.230124473571777
    8. '    
' → logprob: -6.230124473571777
    9. '  
' → logprob: -6.480124473571777
    10. '	self' → logprob: -6.480124473571777

Token 325: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00034869377850554883
    2. '       ' → logprob: -8.250349044799805
    3. ' self' → logprob: -9.750349044799805
    4. '   ' → logprob: -10.500349044799805
    5. '	self' → logprob: -14.750349044799805
    6. ' ' → logprob: -15.250349044799805
    7. 'def' → logprob: -15.250349044799805
    8. 's' → logprob: -15.500349044799805
    9. 'size' → logprob: -15.750349044799805
    10. '0' → logprob: -16.375349044799805

Token 326: '.rank' (ID: 96793)
  Prédit: '.rank'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.rank' → logprob: -0.023272035643458366
    2. '.size' → logprob: -3.7732720375061035
    3. 'rank' → logprob: -10.898271560668945
    4. 'size' → logprob: -12.398271560668945
    5. '.sz' → logprob: -13.023271560668945
    6. '_rank' → logprob: -14.398271560668945
    7. '.r' → logprob: -14.898271560668945
    8. '.parent' → logprob: -15.023271560668945
    9. '.depth' → logprob: -16.148271560668945
    10. ' rank' → logprob: -16.523271560668945

Token 327: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0889679342508316
    2. '=' → logprob: -2.46396803855896
    3. '   ' → logprob: -10.963968276977539
    4. '[' → logprob: -12.463968276977539
    5. ' ' → logprob: -13.088968276977539
    6. '<|end|>' → logprob: -13.088968276977539
    7. '=[]' → logprob: -14.088968276977539
    8. ' =[' → logprob: -14.463968276977539
    9. 's' → logprob: -14.713968276977539
    10. '	' → logprob: -14.963968276977539

Token 328: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0040785204619169235
    2. ' [' → logprob: -5.504078388214111
    3. '[n' → logprob: -16.004077911376953
    4. '0' → logprob: -17.629077911376953
    5. ' ' → logprob: -18.254077911376953
    6. '   ' → logprob: -18.379077911376953
    7. ' ' → logprob: -19.504077911376953
    8. 'n' → logprob: -20.379077911376953
    9. '	' → logprob: -20.754077911376953
    10. '[-' → logprob: -20.754077911376953

Token 329: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.75
    3. '1' → logprob: -16.75
    4. '۰' → logprob: -20.125
    5. '-' → logprob: -22.25
    6. '   ' → logprob: -22.375
    7. '०' → logprob: -22.875
    8. '０' → logprob: -23.125
    9. '```' → logprob: -23.125
    10. ')' → logprob: -23.5

Token 330: ']*(' (ID: 92627)
  Prédit: ']*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*(' → logprob: -0.38707423210144043
    2. ']' → logprob: -1.1370742321014404
    3. ']*' → logprob: -8.51207447052002
    4. ']+' → logprob: -14.13707447052002
    5. ' ]' → logprob: -14.63707447052002
    6. '   ' → logprob: -14.63707447052002
    7. '*(' → logprob: -15.38707447052002
    8. ' for' → logprob: -15.76207447052002
    9. '](' → logprob: -16.262073516845703
    10. 'for' → logprob: -18.012073516845703

Token 331: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.8624639324116288e-06
    2. ' n' → logprob: -13.250001907348633
    3. '   ' → logprob: -16.750001907348633
    4. '(n' → logprob: -18.375001907348633
    5. '	n' → logprob: -18.875001907348633
    6. ')n' → logprob: -19.500001907348633
    7. ' ' → logprob: -21.625001907348633
    8. '_n' → logprob: -21.625001907348633
    9. '```' → logprob: -21.750001907348633
    10. '
' → logprob: -21.875001907348633

Token 332: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -3.128163257315464e-07
    2. '+
' → logprob: -15.875
    3. ' +' → logprob: -16.0
    4. '1' → logprob: -16.875
    5. '+)' → logprob: -18.375
    6. '()+' → logprob: -19.5
    7. '+n' → logprob: -19.5
    8. '+[' → logprob: -19.875
    9. '   ' → logprob: -20.625
    10. '＋' → logprob: -21.0

Token 333: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.531315314830863e-06
    2. ' ' → logprob: -13.125003814697266
    3. '2' → logprob: -14.000003814697266
    4. '+' → logprob: -15.125003814697266
    5. '   ' → logprob: -15.750003814697266
    6. '```' → logprob: -16.687503814697266
    7. '
' → logprob: -17.500003814697266
    8. '10' → logprob: -17.875003814697266
    9. '6' → logprob: -18.000003814697266
    10. '11' → logprob: -18.062503814697266

Token 334: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.584239938296378e-06
    2. ')
' → logprob: -12.375007629394531
    3. '<|end|>' → logprob: -13.500007629394531
    4. ' )' → logprob: -13.625007629394531
    5. '   ' → logprob: -14.500007629394531
    6. '       ' → logprob: -15.875007629394531
    7. ')

' → logprob: -17.62500762939453
    8. '))' → logprob: -17.75000762939453
    9. '),' → logprob: -17.87500762939453
    10. ' ' → logprob: -17.87500762939453

Token 335: '    
' (ID: 1944)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 336: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.039664264768362045
    2. ' def' → logprob: -3.2896642684936523
    3. '   ' → logprob: -6.539664268493652
    4. '	def' → logprob: -8.664664268493652
    5. '
' → logprob: -13.039664268493652
    6. '    
' → logprob: -13.789664268493652
    7. ' ' → logprob: -14.914664268493652
    8. '       ' → logprob: -16.539663314819336
    9. '        
' → logprob: -17.039663314819336
    10. '_def' → logprob: -17.289663314819336

Token 337: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -3.650518920039758e-06
    2. ' def' → logprob: -12.625003814697266
    3. '   ' → logprob: -16.000003814697266
    4. '
' → logprob: -16.250003814697266
    5. 'self' → logprob: -17.125003814697266
    6. '    
' → logprob: -18.750003814697266
    7. '	def' → logprob: -19.625003814697266
    8. '        
' → logprob: -20.250003814697266
    9. '

' → logprob: -20.250003814697266
    10. '       ' → logprob: -20.625003814697266

Token 338: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.16022726893424988
    2. ' find' → logprob: -1.9102272987365723
    3. '_find' → logprob: -13.160226821899414
    4. '	find' → logprob: -15.285226821899414
    5. 'union' → logprob: -15.410226821899414
    6. 'root' → logprob: -15.660226821899414
    7. 'fin' → logprob: -15.910226821899414
    8. 'f' → logprob: -16.285226821899414
    9. ' ' → logprob: -16.535226821899414
    10. ' union' → logprob: -17.160226821899414

Token 339: 'root' (ID: 5488)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0014264254132285714
    2. '(' → logprob: -6.6264262199401855
    3. 'self' → logprob: -9.501426696777344
    4. ' (' → logprob: -11.251426696777344
    5. '(x' → logprob: -11.876426696777344
    6. '<|end|>' → logprob: -13.501426696777344
    7. '(parent' → logprob: -13.626426696777344
    8. '(node' → logprob: -14.626426696777344
    9. 'def' → logprob: -15.001426696777344
    10. ' self' → logprob: -15.251426696777344

Token 340: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -6.153795766294934e-06
    2. '(' → logprob: -12.125005722045898
    3. '(s' → logprob: -15.375005722045898
    4. ' (' → logprob: -15.375005722045898
    5. 'self' → logprob: -16.1250057220459
    6. '(x' → logprob: -16.3750057220459
    7. 'def' → logprob: -17.5000057220459
    8. '(parent' → logprob: -18.2500057220459
    9. '(Self' → logprob: -18.2500057220459
    10. '(u' → logprob: -18.6250057220459

Token 341: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004727371269837022
    2. 'self' → logprob: -8.000473022460938
    3. ' ,' → logprob: -9.000473022460938
    4. ',x' → logprob: -12.000473022460938
    5. ',i' → logprob: -13.250473022460938
    6. ',u' → logprob: -13.500473022460938
    7. ',self' → logprob: -13.750473022460938
    8. ',node' → logprob: -14.125473022460938
    9. '(self' → logprob: -14.625473022460938
    10. '_,' → logprob: -14.875473022460938

Token 342: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0018610459519550204
    2. ' x' → logprob: -6.876861095428467
    3. 'u' → logprob: -8.001860618591309
    4. 'a' → logprob: -8.376860618591309
    5. 'p' → logprob: -8.751860618591309
    6. 'i' → logprob: -9.626860618591309
    7. 'self' → logprob: -10.501860618591309
    8. 'node' → logprob: -13.001860618591309
    9. 'k' → logprob: -13.126860618591309
    10. ' u' → logprob: -13.251860618591309

Token 343: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0009895805269479752
    2. ')' → logprob: -7.6259894371032715
    3. '):
' → logprob: -7.6259894371032715
    4. ' ):' → logprob: -11.37598991394043
    5. '):
' → logprob: -13.75098991394043
    6. ':' → logprob: -14.25098991394043
    7. '):

' → logprob: -14.87598991394043
    8. '   ' → logprob: -15.75098991394043
    9. ' )' → logprob: -16.00098991394043
    10. ')：' → logprob: -17.87598991394043

Token 344: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1600625216960907
    2. '):' → logprob: -2.910062551498413
    3. '):
' → logprob: -3.910062551498413
    4. '():' → logprob: -3.910062551498413
    5. ':
' → logprob: -4.285062313079834
    6. '<|end|>' → logprob: -4.410062313079834
    7. '   ' → logprob: -4.535062313079834
    8. '():
' → logprob: -4.535062313079834
    9. '       ' → logprob: -6.535062313079834
    10. '(' → logprob: -7.035062313079834

Token 345: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0022141309455037117
    2. ' if' → logprob: -6.252213954925537
    3. 'while' → logprob: -8.752214431762695
    4. '       ' → logprob: -9.002214431762695
    5. '   ' → logprob: -12.877214431762695
    6. '	if' → logprob: -13.627214431762695
    7. ' while' → logprob: -14.377214431762695
    8. '           ' → logprob: -18.502214431762695
    9. '```' → logprob: -18.627214431762695
    10. '	while' → logprob: -18.752214431762695

Token 346: ' No' (ID: 3004)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0019404153572395444
    2. ' if' → logprob: -6.5019402503967285
    3. 'while' → logprob: -7.7519402503967285
    4. ' while' → logprob: -12.626940727233887
    5. '   ' → logprob: -12.876940727233887
    6. '       ' → logprob: -13.001940727233887
    7. '	if' → logprob: -16.25193977355957
    8. '```' → logprob: -17.50193977355957
    9. '    ' → logprob: -17.62693977355957
    10. 'If' → logprob: -18.75193977355957

Token 347: ' path' (ID: 3104)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6654069423675537
    2. ' =' → logprob: -1.4154069423675537
    3. ' return' → logprob: -3.2904069423675537
    4. ' +=' → logprob: -3.4154069423675537
    5. 'self' → logprob: -3.5404069423675537
    6. ' if' → logprob: -3.9154069423675537
    7. 'return' → logprob: -4.040407180786133
    8. '    ' → logprob: -4.165407180786133
    9. ' indentation' → logprob: -4.290407180786133
    10. 'space' → logprob: -4.540407180786133

Token 348: ' compression' (ID: 41811)
  Prédit: 'compression'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compression' → logprob: -0.05062316730618477
    2. ' compression' → logprob: -3.9256231784820557
    3. ' ' → logprob: -4.300622940063477
    4. '   ' → logprob: -4.675622940063477
    5. 'return' → logprob: -6.550622940063477
    6. '_' → logprob: -7.050622940063477
    7. '
' → logprob: -7.675622940063477
    8. 'compress' → logprob: -7.675622940063477
    9. '_parent' → logprob: -7.925622940063477
    10. '       ' → logprob: -8.300622940063477

Token 349: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13602794706821442
    2. '<|end|>' → logprob: -2.2610280513763428
    3. '       ' → logprob: -4.386027812957764
    4. '        
' → logprob: -5.386027812957764
    5. '<|end|>' → logprob: -6.511027812957764
    6. '    
' → logprob: -6.886027812957764
    7. '  
' → logprob: -7.011027812957764
    8. ' 
' → logprob: -7.011027812957764
    9. '   ' → logprob: -7.511027812957764
    10. '		
' → logprob: -8.261028289794922

Token 350: ' s' (ID: 265)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5281802415847778
    2. ' if' → logprob: -1.2781802415847778
    3. '       ' → logprob: -3.1531801223754883
    4. 'return' → logprob: -3.4031801223754883
    5. ' while' → logprob: -3.4031801223754883
    6. ' self' → logprob: -4.028180122375488
    7. 'if' → logprob: -6.653180122375488
    8. 'self' → logprob: -6.778180122375488
    9. '   ' → logprob: -7.528180122375488
    10. '	return' → logprob: -7.903180122375488

Token 351: 'ry' (ID: 1102)
  Prédit: 'elf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elf' → logprob: -0.04086119309067726
    2. 't' → logprob: -4.665861129760742
    3. '   ' → logprob: -5.040861129760742
    4. 'e' → logprob: -5.540861129760742
    5. 'pace' → logprob: -5.540861129760742
    6. 'o' → logprob: -5.790861129760742
    7. 'paces' → logprob: -6.040861129760742
    8. '    ' → logprob: -6.540861129760742
    9. 'plit' → logprob: -6.790861129760742
    10. '       ' → logprob: -6.790861129760742

Token 352: '!
' (ID: 4175)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.055418711155653
    2. '<|end|>' → logprob: -3.6804187297821045
    3. '       ' → logprob: -4.055418491363525
    4. '   ' → logprob: -5.430418491363525
    5. ' if' → logprob: -6.055418491363525
    6. '        
' → logprob: -6.430418491363525
    7. '  
' → logprob: -7.180418491363525
    8. ' 
' → logprob: -7.555418491363525
    9. '    
' → logprob: -7.555418491363525
    10. '<|end|>' → logprob: -7.680418491363525

Token 353: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13251176476478577
    2. '       ' → logprob: -2.132511854171753
    3. '<|end|>' → logprob: -5.507511615753174
    4. '   ' → logprob: -7.132511615753174
    5. '        
' → logprob: -8.132512092590332
    6. ' 
' → logprob: -9.132512092590332
    7. '  
' → logprob: -9.632512092590332
    8. '    
' → logprob: -9.882512092590332
    9. ' if' → logprob: -10.382512092590332
    10. '
' → logprob: -10.882512092590332

Token 354: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.2016289085149765
    2. 'while' → logprob: -1.7016289234161377
    3. ' if' → logprob: -9.451628684997559
    4. '       ' → logprob: -9.701628684997559
    5. ' while' → logprob: -9.701628684997559
    6. '   ' → logprob: -11.201628684997559
    7. '	while' → logprob: -14.576628684997559
    8. 'return' → logprob: -14.951628684997559
    9. '	if' → logprob: -15.951628684997559
    10. '    ' → logprob: -18.326629638671875

Token 355: ' x' (ID: 1215)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.004403174854815006
    2. ' self' → logprob: -6.004403114318848
    3. 'x' → logprob: -6.254403114318848
    4. ' x' → logprob: -12.754403114318848
    5. '   ' → logprob: -14.879403114318848
    6. '	self' → logprob: -15.254403114318848
    7. '(self' → logprob: -16.879404067993164
    8. '       ' → logprob: -17.754404067993164
    9. ' ' → logprob: -18.129404067993164
    10. '    ' → logprob: -19.004404067993164

Token 356: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6565588712692261
    2. '==' → logprob: -1.031558871269226
    3. ' !=' → logprob: -2.6565589904785156
    4. '!=' → logprob: -2.9065589904785156
    5. ' not' → logprob: -10.656558990478516
    6. ')' → logprob: -11.656558990478516
    7. '=' → logprob: -12.031558990478516
    8. ')==' → logprob: -12.406558990478516
    9. 'self' → logprob: -12.531558990478516
    10. 'is' → logprob: -13.031558990478516

Token 357: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.7610454708337784e-05
    2. ' self' → logprob: -10.500027656555176
    3. '0' → logprob: -18.25002670288086
    4. '=self' → logprob: -19.12502670288086
    5. '	self' → logprob: -19.25002670288086
    6. '(self' → logprob: -20.00002670288086
    7. '
' → logprob: -20.62502670288086
    8. '   ' → logprob: -20.75002670288086
    9. '1' → logprob: -21.00002670288086
    10. ' ' → logprob: -21.37502670288086

Token 358: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.0067381043918430805
    2. 'parent' → logprob: -5.006738185882568
    3. '.root' → logprob: -11.75673770904541
    4. '[parent' → logprob: -12.00673770904541
    5. 'self' → logprob: -13.00673770904541
    6. '_parent' → logprob: -13.13173770904541
    7. ',parent' → logprob: -13.63173770904541
    8. '.' → logprob: -14.13173770904541
    9. '	parent' → logprob: -14.25673770904541
    10. 'root' → logprob: -14.50673770904541

Token 359: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -6.988221684878226e-06
    2. '[' → logprob: -12.000006675720215
    3. 'x' → logprob: -14.125006675720215
    4. ' [' → logprob: -17.00000762939453
    5. '```' → logprob: -17.12500762939453
    6. ' x' → logprob: -18.37500762939453
    7. '[self' → logprob: -18.75000762939453
    8. '\[' → logprob: -19.12500762939453
    9. '[
' → logprob: -19.62500762939453
    10. '   ' → logprob: -19.87500762939453

Token 360: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10352768003940582
    2. '):
' → logprob: -2.353527784347534
    3. ')' → logprob: -5.728527545928955
    4. ':' → logprob: -10.228528022766113
    5. ']:' → logprob: -11.103528022766113
    6. '):
' → logprob: -12.353528022766113
    7. ' ):' → logprob: -12.853528022766113
    8. '):

' → logprob: -13.103528022766113
    9. '}:' → logprob: -14.228528022766113
    10. ' ):
' → logprob: -14.603528022766113

Token 361: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5256653428077698
    2. ' return' → logprob: -1.650665283203125
    3. '       ' → logprob: -2.275665283203125
    4. ':' → logprob: -3.025665283203125
    5. ':return' → logprob: -3.525665283203125
    6. 'return' → logprob: -4.025665283203125
    7. ':
' → logprob: -4.275665283203125
    8. '   ' → logprob: -6.650665283203125
    9. '	return' → logprob: -7.025665283203125
    10. '	       ' → logprob: -7.650665283203125

Token 362: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.07893209159374237
    2. ' return' → logprob: -2.578932046890259
    3. '           ' → logprob: -10.20393180847168
    4. '       ' → logprob: -12.70393180847168
    5. ':return' → logprob: -13.57893180847168
    6. '	return' → logprob: -14.07893180847168
    7. '   ' → logprob: -16.20393180847168
    8. '{return' → logprob: -16.32893180847168
    9. 'eturn' → logprob: -18.20393180847168
    10. '_return' → logprob: -18.20393180847168

Token 363: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00033546582562848926
    2. ' x' → logprob: -8.000335693359375
    3. '	x' → logprob: -19.250335693359375
    4. 'self' → logprob: -19.500335693359375
    5. ')x' → logprob: -23.875335693359375
    6. '(x' → logprob: -23.875335693359375
    7. '   ' → logprob: -24.000335693359375
    8. '_x' → logprob: -24.250335693359375
    9. ' self' → logprob: -24.500335693359375
    10. '$x' → logprob: -24.875335693359375

Token 364: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02742610312998295
    2. '
' → logprob: -3.65242600440979
    3. '        
' → logprob: -7.777426242828369
    4. '	' → logprob: -9.027425765991211
    5. ' 
' → logprob: -9.277425765991211
    6. '\n' → logprob: -9.402425765991211
    7. '   ' → logprob: -9.527425765991211
    8. ' else' → logprob: -9.527425765991211
    9. '  
' → logprob: -9.777425765991211
    10. '<|end|>' → logprob: -9.777425765991211

Token 365: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006136707379482687
    2. '	' → logprob: -7.875613689422607
    3. ' else' → logprob: -9.37561321258545
    4. '
' → logprob: -9.87561321258545
    5. 'else' → logprob: -10.75061321258545
    6. '   ' → logprob: -10.87561321258545
    7. '<|end|>' → logprob: -10.87561321258545
    8. '        
' → logprob: -11.25061321258545
    9. '	   ' → logprob: -12.00061321258545
    10. '    ' → logprob: -13.25061321258545

Token 366: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08916368335485458
    2. 'return' → logprob: -2.5891637802124023
    3. ' return' → logprob: -4.589163780212402
    4. '   ' → logprob: -10.589163780212402
    5. '	return' → logprob: -11.589163780212402
    6. '	' → logprob: -11.714163780212402
    7. '
' → logprob: -11.839163780212402
    8. 'self' → logprob: -12.589163780212402
    9. ' 
' → logprob: -13.339163780212402
    10. '        
' → logprob: -13.464163780212402

Token 367: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.0890359878540039
    2. ' return' → logprob: -3.214035987854004
    3. ':' → logprob: -3.464035987854004
    4. '           ' → logprob: -5.589035987854004
    5. ':return' → logprob: -5.714035987854004
    6. '       ' → logprob: -5.839035987854004
    7. 'return' → logprob: -6.339035987854004
    8. ' :
' → logprob: -6.839035987854004
    9. '   ' → logprob: -7.589035987854004
    10. '
' → logprob: -9.589035987854004

Token 368: '           ' (ID: 352)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.08382333070039749
    2. 'return' → logprob: -2.5838234424591064
    3. '           ' → logprob: -5.333823204040527
    4. '       ' → logprob: -9.458823204040527
    5. '	return' → logprob: -11.708823204040527
    6. '	       ' → logprob: -12.708823204040527
    7. ' ' → logprob: -13.333823204040527
    8. ':return' → logprob: -13.708823204040527
    9. '   ' → logprob: -13.833823204040527
    10. ' self' → logprob: -13.833823204040527

Token 369: ' y' (ID: 342)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0005806732806377113
    2. 'self' → logprob: -7.500580787658691
    3. ' return' → logprob: -10.500580787658691
    4. '       ' → logprob: -15.750580787658691
    5. '	return' → logprob: -18.250579833984375
    6. '           ' → logprob: -18.250579833984375
    7. ' self' → logprob: -18.750579833984375
    8. '   ' → logprob: -19.000579833984375
    9. ':return' → logprob: -21.875579833984375
    10. '{return' → logprob: -22.625579833984375

Token 370: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07889176905155182
    2. ' =' → logprob: -2.5788917541503906
    3. '=self' → logprob: -13.20389175415039
    4. 'return' → logprob: -16.45389175415039
    5. '       ' → logprob: -17.07889175415039
    6. 'self' → logprob: -17.45389175415039
    7. '           ' → logprob: -17.95389175415039
    8. '   ' → logprob: -19.20389175415039
    9. ' ' → logprob: -19.32889175415039
    10. 'eturn' → logprob: -19.82889175415039

Token 371: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0019287518225610256
    2. ' self' → logprob: -6.251928806304932
    3. '	self' → logprob: -16.876928329467773
    4. '(self' → logprob: -17.001928329467773
    5. '   ' → logprob: -17.251928329467773
    6. ' ' → logprob: -18.876928329467773
    7. '[self' → logprob: -19.126928329467773
    8. 'Self' → logprob: -19.501928329467773
    9. '=self' → logprob: -19.626928329467773
    10. 'this' → logprob: -19.626928329467773

Token 372: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.04253147915005684
    2. '.find' → logprob: -3.4175314903259277
    3. 'parent' → logprob: -4.917531490325928
    4. 'find' → logprob: -7.167531490325928
    5. 'self' → logprob: -7.542531490325928
    6. '.' → logprob: -8.91753101348877
    7. '.self' → logprob: -9.54253101348877
    8. '.__' → logprob: -12.29253101348877
    9. ' .' → logprob: -12.66753101348877
    10. '_parent' → logprob: -12.91753101348877

Token 373: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -1.9146995327901095e-05
    2. 'x' → logprob: -11.125019073486328
    3. '[self' → logprob: -12.500019073486328
    4. '(x' → logprob: -14.500019073486328
    5. '[' → logprob: -16.875019073486328
    6. 'self' → logprob: -17.750019073486328
    7. '[y' → logprob: -18.000019073486328
    8. ' x' → logprob: -18.750019073486328
    9. '{x' → logprob: -19.250019073486328
    10. '```' → logprob: -19.250019073486328

Token 374: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.040833499282598495
    2. '[x' → logprob: -3.5408334732055664
    3. ']
' → logprob: -4.540833473205566
    4. ')' → logprob: -9.165833473205566
    5. '])' → logprob: -9.165833473205566
    6. '(x' → logprob: -10.290833473205566
    7. 'x' → logprob: -10.790833473205566
    8. '])
' → logprob: -10.915833473205566
    9. '[' → logprob: -11.165833473205566
    10. ')
' → logprob: -11.540833473205566

Token 375: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011253892444074154
    2. '           ' → logprob: -4.636253833770752
    3. 'return' → logprob: -6.761253833770752
    4. ' return' → logprob: -8.01125431060791
    5. 'self' → logprob: -12.51125431060791
    6. ' self' → logprob: -13.76125431060791
    7. '   ' → logprob: -13.76125431060791
    8. 'x' → logprob: -15.26125431060791
    9. '	       ' → logprob: -15.76125431060791
    10. '	return' → logprob: -15.88625431060791

Token 376: ' y' (ID: 342)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.005267076659947634
    2. 'self' → logprob: -5.505267143249512
    3. '           ' → logprob: -7.630267143249512
    4. ' return' → logprob: -7.880267143249512
    5. '       ' → logprob: -8.130267143249512
    6. 'y' (adapté à ' y') → logprob: -11.255267143249512
    7. 'while' → logprob: -12.505267143249512
    8. 'z' → logprob: -12.630267143249512
    9. ' self' → logprob: -12.755267143249512
    10. 'x' → logprob: -13.005267143249512

Token 377: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.054923806339502335
    2. ' =' → logprob: -2.9299237728118896
    3. '=self' → logprob: -10.679924011230469
    4. '=y' → logprob: -12.304924011230469
    5. 'y' → logprob: -12.429924011230469
    6. 'return' → logprob: -12.679924011230469
    7. '=find' → logprob: -13.304924011230469
    8. '_=' → logprob: -14.179924011230469
    9. '   ' → logprob: -14.554924011230469
    10. ',' → logprob: -14.679924011230469

Token 378: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.7610454708337784e-05
    2. ' self' → logprob: -10.500027656555176
    3. '(self' → logprob: -18.37502670288086
    4. '
' → logprob: -19.75002670288086
    5. '	self' → logprob: -20.37502670288086
    6. 's' → logprob: -20.75002670288086
    7. '       ' → logprob: -21.00002670288086
    8. '[self' → logprob: -21.00002670288086
    9. 'this' → logprob: -21.25002670288086
    10. '   ' → logprob: -21.37502670288086

Token 379: '.find' (ID: 4231)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.007364421617239714
    2. '.find' → logprob: -5.382364273071289
    3. 'find' → logprob: -6.257364273071289
    4. '.parent' → logprob: -7.882364273071289
    5. 'parent' → logprob: -8.382364273071289
    6. ' self' → logprob: -9.382364273071289
    7. 'y' → logprob: -10.132364273071289
    8. '.self' → logprob: -10.382364273071289
    9. '[self' → logprob: -10.382364273071289
    10. '(self' → logprob: -11.882364273071289

Token 380: 'root' (ID: 5488)
  Prédit: 'root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -1.9361264946837764e-07
    2. ' root' → logprob: -16.125
    3. '(root' → logprob: -17.0
    4. '_root' → logprob: -17.375
    5. '	root' → logprob: -20.375
    6. '(x' → logprob: -20.625
    7. 'parent' → logprob: -21.375
    8. '```' → logprob: -21.375
    9. '.root' → logprob: -21.75
    10. '[root' → logprob: -22.125

Token 381: '(self' (ID: 2402)
  Prédit: '(y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -5.931863051955588e-05
    2. '(' → logprob: -10.375059127807617
    3. '(x' → logprob: -11.000059127807617
    4. 'y' → logprob: -11.625059127807617
    5. ' y' → logprob: -14.000059127807617
    6. '(parent' → logprob: -14.125059127807617
    7. ' (' → logprob: -14.750059127807617
    8. '(self' → logprob: -15.750059127807617
    9. '	y' → logprob: -16.000059127807617
    10. '(
' → logprob: -16.500059127807617

Token 382: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.052220363169908524
    2. 'parent' → logprob: -3.052220344543457
    3. 'y' → logprob: -6.052220344543457
    4. '.y' → logprob: -7.802220344543457
    5. '[parent' → logprob: -7.927220344543457
    6. '(parent' → logprob: -8.052220344543457
    7. '(y' → logprob: -9.677220344543457
    8. '[y' → logprob: -9.677220344543457
    9. ')' → logprob: -10.552220344543457
    10. ' parent' → logprob: -11.302220344543457

Token 383: '[x' (ID: 17295)
  Prédit: '[y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.004674691706895828
    2. '[x' → logprob: -5.379674911499023
    3. '[' → logprob: -10.629674911499023
    4. 'y' → logprob: -10.754674911499023
    5. '[parent' → logprob: -12.629674911499023
    6. 'x' → logprob: -13.629674911499023
    7. '(y' → logprob: -13.629674911499023
    8. '[self' → logprob: -13.879674911499023
    9. ' y' → logprob: -13.879674911499023
    10. ')' → logprob: -14.504674911499023

Token 384: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5377081036567688
    2. '])' → logprob: -0.9127081036567688
    3. '(y' → logprob: -4.787708282470703
    4. '[y' → logprob: -5.537708282470703
    5. 'y' → logprob: -6.912708282470703
    6. '(x' → logprob: -8.037708282470703
    7. ']' → logprob: -8.162708282470703
    8. '[x' → logprob: -9.412708282470703
    9. '])
' → logprob: -9.412708282470703
    10. ' )' → logprob: -9.537708282470703

Token 385: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030442096292972565
    2. '	' → logprob: -4.780442237854004
    3. '           ' → logprob: -4.780442237854004
    4. '<|end|>' → logprob: -6.030442237854004
    5. '        
' → logprob: -6.530442237854004
    6. '
' → logprob: -6.530442237854004
    7. '	   ' → logprob: -6.655442237854004
    8. '   ' → logprob: -6.905442237854004
    9. '\t' → logprob: -7.155442237854004
    10. '	       ' → logprob: -7.280442237854004

Token 386: ' return' (ID: 622)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.49349522590637207
    2. '       ' → logprob: -0.9934952259063721
    3. 'return' (adapté à ' return') → logprob: -4.618494987487793
    4. ' self' → logprob: -4.743494987487793
    5. '           ' → logprob: -7.618494987487793
    6. ' return' → logprob: -9.243494987487793
    7. '   ' → logprob: -10.368494987487793
    8. '	self' → logprob: -10.618494987487793
    9. 'x' → logprob: -11.868494987487793
    10. ' ' → logprob: -13.993494987487793

Token 387: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0001234428636962548
    2. ' y' → logprob: -9.000123023986816
    3. 'self' → logprob: -17.000123977661133
    4. 'x' → logprob: -17.875123977661133
    5. '	y' → logprob: -18.500123977661133
    6. ' ' → logprob: -19.125123977661133
    7. '   ' → logprob: -19.125123977661133
    8. '(y' → logprob: -19.375123977661133
    9. '<|end|>' → logprob: -21.000123977661133
    10. '    ' → logprob: -21.000123977661133

Token 388: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 389: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 390: ' def' (ID: 1056)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 391: ' union' (ID: 22208)
  Prédit: 'union'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'union' → logprob: -0.029590092599391937
    2. 'un' → logprob: -3.654590129852295
    3. ' union' → logprob: -5.904590129852295
    4. ' unite' → logprob: -7.779590129852295
    5. 'uni' → logprob: -9.529589653015137
    6. 'merge' → logprob: -10.779589653015137
    7. 'unit' → logprob: -11.654589653015137
    8. 'root' → logprob: -11.654589653015137
    9. 'find' → logprob: -12.154589653015137
    10. '_union' → logprob: -12.154589653015137

Token 392: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0005664954078383744
    2. '(' → logprob: -7.500566482543945
    3. ' (' → logprob: -11.375566482543945
    4. 'self' → logprob: -13.625566482543945
    5. '(s' → logprob: -15.625566482543945
    6. '(x' → logprob: -15.875566482543945
    7. '(root' → logprob: -16.375566482543945
    8. '<|end|>' → logprob: -16.500566482543945
    9. '(Self' → logprob: -16.500566482543945
    10. '(parent' → logprob: -16.750566482543945

Token 393: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.06670630723237991
    2. '(' → logprob: -3.441706418991089
    3. '(x' → logprob: -4.19170618057251
    4. ',' → logprob: -4.56670618057251
    5. '(root' → logprob: -5.69170618057251
    6. 'self' → logprob: -6.81670618057251
    7. 'root' → logprob: -6.81670618057251
    8. '(parent' → logprob: -7.06670618057251
    9. ' (' → logprob: -8.316706657409668
    10. ',self' → logprob: -9.191706657409668

Token 394: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.06621785461902618
    2. 'a' → logprob: -2.8162178993225098
    3. ' x' → logprob: -5.56621789932251
    4. ' a' → logprob: -7.81621789932251
    5. 'p' → logprob: -11.691217422485352
    6. 'root' → logprob: -13.191217422485352
    7. 'u' → logprob: -13.316217422485352
    8. 'self' → logprob: -15.316217422485352
    9. '	x' → logprob: -15.691217422485352
    10. ' ' → logprob: -15.816217422485352

Token 395: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010676169040380046
    2. ' ,' → logprob: -9.375106811523438
    3. ',x' → logprob: -10.750106811523438
    4. ',self' → logprob: -15.500106811523438
    5. '   ' → logprob: -16.000106811523438
    6. 'self' → logprob: -17.125106811523438
    7. '_,' → logprob: -17.625106811523438
    8. '       ' → logprob: -17.875106811523438
    9. '‌,' → logprob: -17.875106811523438
    10. ',y' → logprob: -18.125106811523438

Token 396: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.1002068892121315
    2. ' y' → logprob: -2.3502068519592285
    3. '   ' → logprob: -16.10020637512207
    4. '    ' → logprob: -16.35020637512207
    5. ' ' → logprob: -16.97520637512207
    6. '	y' → logprob: -17.22520637512207
    7. '  ' → logprob: -18.60020637512207
    8. 'x' → logprob: -19.85020637512207
    9. '       ' → logprob: -20.35020637512207
    10. '     ' → logprob: -20.47520637512207

Token 397: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.011083780787885189
    2. '):
' → logprob: -4.511083602905273
    3. '):
' → logprob: -11.261083602905273
    4. ' ):' → logprob: -11.386083602905273
    5. ')' → logprob: -11.886083602905273
    6. ':' → logprob: -13.011083602905273
    7. '):

' → logprob: -13.761083602905273
    8. '   ' → logprob: -13.886083602905273
    9. ',' → logprob: -15.011083602905273
    10. ' ):
' → logprob: -16.011083602905273

Token 398: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010395030491054058
    2. ' x' → logprob: -5.010395050048828
    3. 'x' → logprob: -6.135395050048828
    4. '   ' → logprob: -6.760395050048828
    5. ' if' → logprob: -8.385395050048828
    6. 'if' → logprob: -11.135395050048828
    7. ' px' → logprob: -11.135395050048828
    8. ',' → logprob: -11.260395050048828
    9. 'root' → logprob: -11.385395050048828
    10. ' ' → logprob: -11.635395050048828

Token 399: ' px' (ID: 27003)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.08915015310049057
    2. 'root' → logprob: -2.8391501903533936
    3. 'px' (adapté à ' px') → logprob: -4.4641499519348145
    4. 'rx' → logprob: -4.5891499519348145
    5. '   ' → logprob: -5.4641499519348145
    6. ' x' → logprob: -7.7141499519348145
    7. 'xr' → logprob: -8.839150428771973
    8. 'if' → logprob: -9.464150428771973
    9. ' root' → logprob: -9.464150428771973
    10. ' rx' → logprob: -9.589150428771973

Token 400: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07896503061056137
    2. '=' → logprob: -2.578964948654175
    3. '=self' → logprob: -9.578965187072754
    4. 'x' → logprob: -13.078965187072754
    5. '   ' → logprob: -13.953965187072754
    6. '=find' → logprob: -14.328965187072754
    7. ',' → logprob: -14.578965187072754
    8. 'y' → logprob: -14.828965187072754
    9. '=root' → logprob: -14.828965187072754
    10. '=x' → logprob: -15.328965187072754

Token 401: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00020389800192788243
    2. ' self' → logprob: -8.500204086303711
    3. '   ' → logprob: -15.125204086303711
    4. '       ' → logprob: -16.25020408630371
    5. '(self' → logprob: -17.75020408630371
    6. '	self' → logprob: -18.37520408630371
    7. '[self' → logprob: -20.25020408630371
    8. ' ' → logprob: -20.37520408630371
    9. '  ' → logprob: -20.50020408630371
    10. '    ' → logprob: -20.87520408630371

Token 402: '.find' (ID: 4231)
  Prédit: '.find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.find' → logprob: -3.941161776310764e-05
    2. 'find' → logprob: -10.500039100646973
    3. '.parent' → logprob: -11.875039100646973
    4. '.' → logprob: -12.375039100646973
    5. ' .' → logprob: -15.000039100646973
    6. ').' → logprob: -15.500039100646973
    7. 'parent' → logprob: -15.750039100646973
    8. '.findall' → logprob: -16.25004005432129
    9. '=find' → logprob: -18.50004005432129
    10. '.union' → logprob: -19.00004005432129

Token 403: 'root' (ID: 5488)
  Prédit: 'root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -2.45848218582978e-06
    2. 'parent' → logprob: -13.50000286102295
    3. '(x' → logprob: -14.75000286102295
    4. '(root' → logprob: -14.87500286102295
    5. 'x' → logprob: -15.25000286102295
    6. ' root' → logprob: -16.750001907348633
    7. '_root' → logprob: -18.250001907348633
    8. '	root' → logprob: -19.500001907348633
    9. '(' → logprob: -20.625001907348633
    10. '[root' → logprob: -20.625001907348633

Token 404: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -4.56102097814437e-05
    2. 'x' → logprob: -10.000045776367188
    3. '(' → logprob: -15.750045776367188
    4. ',x' → logprob: -18.875045776367188
    5. ' (' → logprob: -19.000045776367188
    6. '(self' → logprob: -19.125045776367188
    7. ' x' → logprob: -19.750045776367188
    8. '[x' → logprob: -20.000045776367188
    9. '(y' → logprob: -20.125045776367188
    10. '(px' → logprob: -20.250045776367188

Token 405: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3869067430496216
    2. ')
' → logprob: -1.1369067430496216
    3. ')
' → logprob: -10.511906623840332
    4. ' )
' → logprob: -12.261906623840332
    5. ' )' → logprob: -13.136906623840332
    6. ')

' → logprob: -13.386906623840332
    7. '       ' → logprob: -16.38690757751465
    8. '   ' → logprob: -16.76190757751465
    9. '),' → logprob: -18.01190757751465
    10. '())
' → logprob: -18.38690757751465

Token 406: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5872864723205566
    2. 'py' → logprob: -0.9622864723205566
    3. ' py' → logprob: -2.9622864723205566
    4. '_py' → logprob: -5.462286472320557
    5. '.py' → logprob: -5.962286472320557
    6. '(py' → logprob: -6.712286472320557
    7. '
' → logprob: -7.087286472320557
    8. '        
' → logprob: -8.337285995483398
    9. '<|end|>' → logprob: -8.337285995483398
    10. '   ' → logprob: -8.587285995483398

Token 407: ' py' (ID: 13104)
  Prédit: 'py'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'py' (adapté à ' py') → logprob: -1.3663626305060461e-05
    2. ' py' → logprob: -11.25001335144043
    3. '_py' → logprob: -15.00001335144043
    4. 'qy' → logprob: -15.37501335144043
    5. '(py' → logprob: -17.37501335144043
    6. '   ' → logprob: -18.12501335144043
    7. 'px' → logprob: -19.00001335144043
    8. '.py' → logprob: -19.50001335144043
    9. 'Py' → logprob: -20.87501335144043
    10. ' ' → logprob: -20.87501335144043

Token 408: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20143164694309235
    2. '=' → logprob: -1.7014316320419312
    3. ')' → logprob: -11.576431274414062
    4. '=self' → logprob: -12.201431274414062
    5. '<|end|>' → logprob: -13.451431274414062
    6. ' =
' → logprob: -13.951431274414062
    7. ',' → logprob: -14.451431274414062
    8. '=
' → logprob: -15.451431274414062
    9. ' ' → logprob: -15.701431274414062
    10. '=x' → logprob: -16.576431274414062

Token 409: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0009151478880085051
    2. ' self' → logprob: -7.000915050506592
    3. '(self' → logprob: -13.00091552734375
    4. '[self' → logprob: -14.37591552734375
    5. '       ' → logprob: -15.25091552734375
    6. '	self' → logprob: -15.37591552734375
    7. '<|end|>' → logprob: -15.62591552734375
    8. '=self' → logprob: -15.75091552734375
    9. '   ' → logprob: -17.00091552734375
    10. 'def' → logprob: -17.50091552734375

Token 410: '.find' (ID: 4231)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.06197004392743111
    2. '.find' → logprob: -2.8119699954986572
    3. '.' → logprob: -13.686969757080078
    4. ' find' → logprob: -14.061969757080078
    5. '	find' → logprob: -15.561969757080078
    6. '=find' → logprob: -16.061969757080078
    7. '.findall' → logprob: -16.436969757080078
    8. 'parent' → logprob: -16.936969757080078
    9. '   ' → logprob: -17.561969757080078
    10. '(find' → logprob: -17.686969757080078

Token 411: 'root' (ID: 5488)
  Prédit: 'root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -1.0683535037969705e-05
    2. '(y' → logprob: -11.87501049041748
    3. 'y' → logprob: -12.75001049041748
    4. '(root' → logprob: -15.12501049041748
    5. 'py' → logprob: -15.75001049041748
    6. ' root' → logprob: -15.87501049041748
    7. ' y' → logprob: -16.250011444091797
    8. '[y' → logprob: -17.500011444091797
    9. '
' → logprob: -18.125011444091797
    10. 'parent' → logprob: -18.250011444091797

Token 412: '(y' (ID: 14684)
  Prédit: '(y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -4.246537173457909e-06
    2. 'y' → logprob: -13.125003814697266
    3. '(' → logprob: -13.500003814697266
    4. '(py' → logprob: -14.125003814697266
    5. ' y' → logprob: -17.500003814697266
    6. 'py' → logprob: -17.750003814697266
    7. ' (' → logprob: -17.875003814697266
    8. ')' → logprob: -18.125003814697266
    9. '   ' → logprob: -18.750003814697266
    10. '       ' → logprob: -18.750003814697266

Token 413: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0052406336180865765
    2. ')
' → logprob: -5.255240440368652
    3. '       ' → logprob: -12.380240440368652
    4. ' )' → logprob: -13.505240440368652
    5. ')
' → logprob: -14.255240440368652
    6. '   ' → logprob: -15.255240440368652
    7. ')

' → logprob: -15.505240440368652
    8. ' )
' → logprob: -17.25524139404297
    9. '),' → logprob: -17.88024139404297
    10. ')`' → logprob: -18.00524139404297

Token 414: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0023172497749328613
    2. ' if' → logprob: -6.252317428588867
    3. 'if' → logprob: -8.127317428588867
    4. '<|end|>' → logprob: -10.002317428588867
    5. '
' → logprob: -10.752317428588867
    6. '   ' → logprob: -11.502317428588867
    7. '	' → logprob: -12.127317428588867
    8. '	if' → logprob: -12.377317428588867
    9. '        
' → logprob: -13.502317428588867
    10. ')' → logprob: -13.502317428588867

Token 415: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.006731122732162476
    2. ' if' → logprob: -5.256731033325195
    3. '       ' → logprob: -6.506731033325195
    4. '	if' → logprob: -13.006731033325195
    5. '   ' → logprob: -14.756731033325195
    6. '```' → logprob: -16.006731033325195
    7. '
' → logprob: -16.881731033325195
    8. 'return' → logprob: -17.131731033325195
    9. 'If' → logprob: -18.006731033325195
    10. '        
' → logprob: -18.381731033325195

Token 416: ' px' (ID: 27003)
  Prédit: 'px'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'px' → logprob: -0.12693482637405396
    2. ' px' → logprob: -2.126934766769409
    3. 'py' → logprob: -12.501935005187988
    4. '(px' → logprob: -13.126935005187988
    5. ' py' → logprob: -14.251935005187988
    6. ':px' → logprob: -15.751935005187988
    7. ' ' → logprob: -16.126934051513672
    8. '   ' → logprob: -16.751934051513672
    9. '_px' → logprob: -17.126934051513672
    10. '  ' → logprob: -18.501934051513672

Token 417: ' <' (ID: 464)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.047047633677721024
    2. ' ==' → logprob: -3.1720476150512695
    3. '!=' → logprob: -5.5470476150512695
    4. ' !=' → logprob: -8.92204761505127
    5. '=' → logprob: -12.17204761505127
    6. ']==' → logprob: -13.92204761505127
    7. '===' → logprob: -14.67204761505127
    8. '==
' → logprob: -14.92204761505127
    9. ' ' → logprob: -15.17204761505127
    10. '	' → logprob: -15.67204761505127

Token 418: ' py' (ID: 13104)
  Prédit: 'py'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'py' → logprob: -0.031119635328650475
    2. ' py' → logprob: -3.5311195850372314
    3. '0' → logprob: -7.0311198234558105
    4. '>' → logprob: -8.406119346618652
    5. '=' → logprob: -8.781119346618652
    6. '(py' → logprob: -9.906119346618652
    7. '_py' → logprob: -10.656119346618652
    8. 'y' → logprob: -10.781119346618652
    9. ' ' → logprob: -12.656119346618652
    10. '.py' → logprob: -12.781119346618652

Token 419: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06201854720711708
    2. ':
' → logprob: -2.812018632888794
    3. ' :' → logprob: -10.937018394470215
    4. '       ' → logprob: -11.562018394470215
    5. ':
' → logprob: -11.812018394470215
    6. ' and' → logprob: -11.937018394470215
    7. ':return' → logprob: -12.937018394470215
    8. '           ' → logprob: -13.062018394470215
    9. ' :
' → logprob: -13.562018394470215
    10. ':

' → logprob: -14.062018394470215

Token 420: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04057002067565918
    2. ':' → logprob: -4.165570259094238
    3. ':
' → logprob: -4.290570259094238
    4. '       ' → logprob: -5.040570259094238
    5. ' self' → logprob: -7.040570259094238
    6. ',' → logprob: -7.415570259094238
    7. ' and' → logprob: -7.540570259094238
    8. 'self' → logprob: -7.790570259094238
    9. '<|end|>' → logprob: -8.165570259094238
    10. ' or' → logprob: -8.290570259094238

Token 421: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.07381035387516022
    2. ' self' → logprob: -2.823810338973999
    3. '           ' → logprob: -4.448810577392578
    4. '               ' → logprob: -9.823810577392578
    5. '   ' → logprob: -11.573810577392578
    6. '	self' → logprob: -11.698810577392578
    7. '       ' → logprob: -13.323810577392578
    8. '```' → logprob: -14.198810577392578
    9. '[self' → logprob: -14.198810577392578
    10. '
' → logprob: -14.323810577392578

Token 422: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.00018613664724398404
    2. 'parent' → logprob: -8.6251859664917
    3. '_parent' → logprob: -12.3751859664917
    4. '[parent' → logprob: -14.0001859664917
    5. ',parent' → logprob: -14.6251859664917
    6. '	parent' → logprob: -15.0001859664917
    7. '.Parent' → logprob: -15.6251859664917
    8. '.' → logprob: -15.7501859664917
    9. '           ' → logprob: -16.000186920166016
    10. ' .' → logprob: -16.000186920166016

Token 423: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: 0.0
    2. ' [' → logprob: -19.875
    3. '   ' → logprob: -21.25
    4. 'py' → logprob: -21.375
    5. '       ' → logprob: -22.0
    6. '][' → logprob: -22.75
    7. '[p' → logprob: -22.75
    8. '(py' → logprob: -22.875
    9. '[js' → logprob: -23.25
    10. '[self' → logprob: -23.25

Token 424: 'py' (ID: 5823)
  Prédit: 'py'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'py' → logprob: -7.839121826691553e-05
    2. 'px' → logprob: -9.500078201293945
    3. ' py' → logprob: -13.125078201293945
    4. '[' → logprob: -13.625078201293945
    5. '(py' → logprob: -16.000078201293945
    6. '_py' → logprob: -16.250078201293945
    7. '   ' → logprob: -17.125078201293945
    8. 'ply' → logprob: -18.750078201293945
    9. 'Py' → logprob: -18.875078201293945
    10. '

' → logprob: -19.500078201293945

Token 425: ']' (ID: 60)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5785032510757446
    2. '=' → logprob: -0.8285032510757446
    3. ']' → logprob: -6.078503131866455
    4. ']=' → logprob: -8.328503608703613
    5. ')' → logprob: -10.953503608703613
    6. ' ]' → logprob: -11.953503608703613
    7. ')=' → logprob: -13.828503608703613
    8. ' ' → logprob: -14.453503608703613
    9. '<|end|>' → logprob: -14.578503608703613
    10. '=p' → logprob: -15.703503608703613

Token 426: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47407740354537964
    2. ' =' → logprob: -0.9740774035453796
    3. '=
' → logprob: -15.724077224731445
    4. '＝' → logprob: -17.224077224731445
    5. ' =
' → logprob: -17.349077224731445
    6. '=p' → logprob: -17.849077224731445
    7. ' ' → logprob: -17.974077224731445
    8. ')' → logprob: -17.974077224731445
    9. '.=' → logprob: -17.974077224731445
    10. '=s' → logprob: -18.474077224731445

Token 427: ' px' (ID: 27003)
  Prédit: 'px'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'px' → logprob: -6.392202976712724e-06
    2. ' px' → logprob: -12.000006675720215
    3. 'py' → logprob: -15.875006675720215
    4. '(px' → logprob: -17.7500057220459
    5. 'pc' → logprob: -18.8750057220459
    6. '   ' → logprob: -19.1250057220459
    7. 'pm' → logprob: -19.3750057220459
    8. ':px' → logprob: -19.8750057220459
    9. 'pix' → logprob: -20.0000057220459
    10. '_px' → logprob: -20.1250057220459

Token 428: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 429: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 430: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29479512572288513
    2. 'elif' → logprob: -1.4197951555252075
    3. ' elif' → logprob: -4.419795036315918
    4. '<|end|>' → logprob: -6.794795036315918
    5. 'else' (adapté à ' else') → logprob: -8.419795036315918
    6. '	elif' → logprob: -9.669795036315918
    7. ' else' → logprob: -10.669795036315918
    8. ' or' → logprob: -10.794795036315918
    9. ' and' → logprob: -11.794795036315918
    10. '.' → logprob: -11.794795036315918

Token 431: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011962656863033772
    2. ':' → logprob: -4.636962890625
    3. ':
' → logprob: -6.136962890625
    4. ',' → logprob: -11.011962890625
    5. '          ' → logprob: -11.636962890625
    6. '       ' → logprob: -12.136962890625
    7. ' if' → logprob: -12.636962890625
    8. '   ' → logprob: -12.886962890625
    9. ':
' → logprob: -13.636962890625
    10. '	       ' → logprob: -14.511962890625

Token 432: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0017025562701746821
    2. 'self' → logprob: -6.626702785491943
    3. '   ' → logprob: -8.626702308654785
    4. ' self' → logprob: -8.751702308654785
    5. '       ' → logprob: -11.001702308654785
    6. ':' → logprob: -12.126702308654785
    7. ' ' → logprob: -12.501702308654785
    8. '	       ' → logprob: -13.126702308654785
    9. '          ' → logprob: -13.251702308654785
    10. '               ' → logprob: -13.501702308654785

Token 433: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.01108248345553875
    2. ' self' → logprob: -4.636082649230957
    3. '           ' → logprob: -6.636082649230957
    4. '	self' → logprob: -12.011082649230957
    5. '               ' → logprob: -13.011082649230957
    6. '       ' → logprob: -13.136082649230957
    7. '   ' → logprob: -13.136082649230957
    8. ' ' → logprob: -14.761082649230957
    9. '[self' → logprob: -15.136082649230957
    10. '  ' → logprob: -16.01108169555664

Token 434: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.0011708177626132965
    2. 'parent' → logprob: -6.751170635223389
    3. '[parent' → logprob: -15.251171112060547
    4. '	parent' → logprob: -15.501171112060547
    5. ',parent' → logprob: -16.501171112060547
    6. ' parent' → logprob: -16.626171112060547
    7. '_parent' → logprob: -17.126171112060547
    8. '.' → logprob: -17.626171112060547
    9. 'Parent' → logprob: -18.376171112060547
    10. '   ' → logprob: -18.376171112060547

Token 435: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.320199877838604e-07
    2. '       ' → logprob: -15.625
    3. 'px' → logprob: -16.125
    4. '   ' → logprob: -17.5
    5. '```' → logprob: -17.5
    6. ':px' → logprob: -18.0
    7. '(px' → logprob: -18.25
    8. '[self' → logprob: -18.625
    9. '[parent' → logprob: -19.25
    10. ' [' → logprob: -19.5

Token 436: 'px' (ID: 3207)
  Prédit: 'px'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'px' → logprob: -2.816093228830141e-06
    2. '[' → logprob: -13.12500286102295
    3. ' px' → logprob: -14.50000286102295
    4. 'py' → logprob: -16.250001907348633
    5. '(px' → logprob: -16.750001907348633
    6. '   ' → logprob: -18.125001907348633
    7. ':px' → logprob: -18.375001907348633
    8. '       ' → logprob: -19.000001907348633
    9. '_px' → logprob: -19.875001907348633
    10. '```' → logprob: -20.250001907348633

Token 437: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03377306088805199
    2. ' =' → logprob: -3.5337729454040527
    3. ']' → logprob: -5.533772945404053
    4. ']=' → logprob: -9.908773422241211
    5. ')' → logprob: -11.283773422241211
    6. '[' → logprob: -15.283773422241211
    7. ' ]' → logprob: -15.408773422241211
    8. ')=' → logprob: -16.15877342224121
    9. '   ' → logprob: -16.28377342224121
    10. 'py' → logprob: -16.28377342224121

Token 438: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014163747429847717
    2. ' =' → logprob: -4.264163970947266
    3. '[' → logprob: -15.764163970947266
    4. '=y' → logprob: -17.014163970947266
    5. ']' → logprob: -17.264163970947266
    6. ']=' → logprob: -17.889163970947266
    7. 'py' → logprob: -18.014163970947266
    8. ')' → logprob: -18.139163970947266
    9. '   ' → logprob: -18.389163970947266
    10. ' ' → logprob: -18.514163970947266

Token 439: ' py' (ID: 13104)
  Prédit: 'py'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'py' → logprob: -2.7610454708337784e-05
    2. ' py' → logprob: -10.500027656555176
    3. '(py' → logprob: -17.25002670288086
    4. '_py' → logprob: -19.00002670288086
    5. 'ply' → logprob: -19.87502670288086
    6. 'Py' → logprob: -20.87502670288086
    7. '.py' → logprob: -21.25002670288086
    8. '   ' → logprob: -21.87502670288086
    9. 'poly' → logprob: -22.12502670288086
    10. 'px' → logprob: -22.37502670288086

Token 440: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 441: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 442: ' def' (ID: 1056)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 443: ' same' (ID: 2684)
  Prédit: 'connected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'connected' → logprob: -0.05218267813324928
    2. 'same' → logprob: -3.552182674407959
    3. 'iss' → logprob: -4.677182674407959
    4. ' connected' → logprob: -5.052182674407959
    5. 'count' → logprob: -6.177182674407959
    6. 'is' → logprob: -6.302182674407959
    7. 'size' → logprob: -6.552182674407959
    8. 'get' → logprob: -7.552182674407959
    9. ' iss' → logprob: -9.052183151245117
    10. ' same' → logprob: -9.177183151245117

Token 444: '_group' (ID: 15990)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.002999689429998398
    2. 'root' → logprob: -6.252999782562256
    3. '(' → logprob: -7.002999782562256
    4. 'self' → logprob: -10.002999305725098
    5. '(root' → logprob: -10.377999305725098
    6. 'parent' → logprob: -10.627999305725098
    7. 'set' → logprob: -11.002999305725098
    8. '_root' → logprob: -11.502999305725098
    9. '_set' → logprob: -11.877999305725098
    10. ' (' → logprob: -12.002999305725098

Token 445: '_or' (ID: 15400)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00012403888104017824
    2. '(' → logprob: -9.000123977661133
    3. ' (' → logprob: -15.250123977661133
    4. 'self' → logprob: -15.750123977661133
    5. '(s' → logprob: -16.625123977661133
    6. '(
' → logprob: -16.875123977661133
    7. '   ' → logprob: -17.500123977661133
    8. '(this' → logprob: -18.750123977661133
    9. '(Self' → logprob: -19.250123977661133
    10. ' ' → logprob: -19.500123977661133

Token 446: '_no' (ID: 13575)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.0013100019423291087
    2. '_not' → logprob: -7.126309871673584
    3. 'def' → logprob: -8.626310348510742
    4. 'no' → logprob: -8.751310348510742
    5. 'root' → logprob: -10.001310348510742
    6. 'self' → logprob: -10.876310348510742
    7. 'none' → logprob: -11.126310348510742
    8. 'NOT' → logprob: -11.501310348510742
    9. 'nof' → logprob: -11.626310348510742
    10. 'return' → logprob: -11.876310348510742

Token 447: '(self' (ID: 2402)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.024066157639026642
    2. '(self' → logprob: -3.774066209793091
    3. 'f' → logprob: -8.024065971374512
    4. 'r' → logprob: -8.524065971374512
    5. 'self' → logprob: -9.149065971374512
    6. 'p' → logprob: -9.399065971374512
    7. 'def' → logprob: -10.149065971374512
    8. 'ne' → logprob: -11.149065971374512
    9. 's' → logprob: -11.524065971374512
    10. ' (' → logprob: -11.774065971374512

Token 448: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -3.523948907968588e-05
    2. '(' → logprob: -10.375035285949707
    3. ' (' → logprob: -12.625035285949707
    4. '   ' → logprob: -15.125035285949707
    5. 'self' → logprob: -15.625035285949707
    6. '(s' → logprob: -16.00003433227539
    7. ')(' → logprob: -16.75003433227539
    8. ')' → logprob: -17.25003433227539
    9. '(this' → logprob: -17.75003433227539
    10. '       ' → logprob: -17.87503433227539

Token 449: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.03769289702177048
    2. ' x' → logprob: -3.7876927852630615
    3. 'self' → logprob: -4.287693023681641
    4. ' self' → logprob: -7.412693023681641
    5. '   ' → logprob: -13.16269302368164
    6. 'a' → logprob: -14.78769302368164
    7. '	x' → logprob: -15.28769302368164
    8. ' ' → logprob: -15.53769302368164
    9. ',x' → logprob: -15.91269302368164
    10. ',' → logprob: -15.91269302368164

Token 450: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009438612614758313
    2. ' ,' → logprob: -7.000943660736084
    3. ',x' → logprob: -11.375944137573242
    4. '   ' → logprob: -11.875944137573242
    5. '):' → logprob: -12.625944137573242
    6. ',y' → logprob: -12.750944137573242
    7. '(self' → logprob: -12.875944137573242
    8. 'self' → logprob: -13.125944137573242
    9. ',self' → logprob: -13.875944137573242
    10. '       ' → logprob: -14.250944137573242

Token 451: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.062000297009944916
    2. ' y' → logprob: -2.812000274658203
    3. '   ' → logprob: -10.437000274658203
    4. ' ' → logprob: -13.687000274658203
    5. '    ' → logprob: -13.812000274658203
    6. '  ' → logprob: -14.437000274658203
    7. 'x' → logprob: -15.062000274658203
    8. '	y' → logprob: -15.937000274658203
    9. '       ' → logprob: -16.812000274658203
    10. '     ' → logprob: -17.312000274658203

Token 452: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005342382006347179
    2. '):
' → logprob: -5.255342483520508
    3. ')' → logprob: -9.505342483520508
    4. '   ' → logprob: -10.880342483520508
    5. ' ):' → logprob: -12.130342483520508
    6. '):
' → logprob: -12.380342483520508
    7. '       ' → logprob: -13.005342483520508
    8. ':' → logprob: -13.505342483520508
    9. '):

' → logprob: -14.255342483520508
    10. ',' → logprob: -15.005342483520508

Token 453: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.38496431708335876
    2. '   ' → logprob: -2.2599642276763916
    3. '<|end|>' → logprob: -2.3849642276763916
    4. '():' → logprob: -2.7599642276763916
    5. '(True' → logprob: -3.5099642276763916
    6. '():
' → logprob: -4.509964466094971
    7. '(False' → logprob: -5.509964466094971
    8. '):' → logprob: -6.009964466094971
    9. '       ' → logprob: -6.009964466094971
    10. '(' → logprob: -6.509964466094971

Token 454: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10958128422498703
    2. '   ' → logprob: -2.984581232070923
    3. 'return' (adapté à ' return') → logprob: -3.609581232070923
    4. ' return' → logprob: -3.734581232070923
    5. '<|end|>' → logprob: -6.734581470489502
    6. '	return' → logprob: -7.734581470489502
    7. ':return' → logprob: -8.984580993652344
    8. '#' → logprob: -8.984580993652344
    9. '    ' → logprob: -9.984580993652344
    10. '0' → logprob: -10.109580993652344

Token 455: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.005235887598246336
    2. ' self' → logprob: -5.25523567199707
    3. '(self' → logprob: -13.25523567199707
    4. '   ' → logprob: -15.00523567199707
    5. ' ' → logprob: -17.50523567199707
    6. '	self' → logprob: -17.63023567199707
    7. '[self' → logprob: -18.88023567199707
    8. ' (' → logprob: -19.88023567199707
    9. 'True' → logprob: -20.00523567199707
    10. '  ' → logprob: -20.13023567199707

Token 456: '.find' (ID: 4231)
  Prédit: '.find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.find' → logprob: -7.941850526549388e-06
    2. '.' → logprob: -12.000007629394531
    3. '.parent' → logprob: -13.875007629394531
    4. 'find' → logprob: -14.500007629394531
    5. ' .' → logprob: -16.37500762939453
    6. '.findall' → logprob: -17.00000762939453
    7. ').' → logprob: -17.62500762939453
    8. '.same' → logprob: -18.75000762939453
    9. '.Find' → logprob: -19.25000762939453
    10. '.get' → logprob: -19.75000762939453

Token 457: 'root' (ID: 5488)
  Prédit: 'root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: 0.0
    2. ' root' → logprob: -17.5
    3. '(root' → logprob: -17.625
    4. '_root' → logprob: -17.75
    5. '	root' → logprob: -19.625
    6. 'x' → logprob: -20.875
    7. 'roots' → logprob: -21.625
    8. '.root' → logprob: -21.75
    9. '(x' → logprob: -22.125
    10. '[root' → logprob: -22.125

Token 458: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.00020377879263833165
    2. '(' → logprob: -8.500204086303711
    3. 'x' → logprob: -15.750204086303711
    4. ' (' → logprob: -16.37520408630371
    5. '(
' → logprob: -19.25020408630371
    6. '```' → logprob: -19.25020408630371
    7. '(y' → logprob: -19.75020408630371
    8. '(user' → logprob: -20.00020408630371
    9. '((' → logprob: -20.00020408630371
    10. '("("' → logprob: -20.37520408630371

Token 459: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006516746943816543
    2. '(x' → logprob: -7.875651836395264
    3. ')==' → logprob: -8.250651359558105
    4. 'x' → logprob: -11.750651359558105
    5. '==' → logprob: -13.875651359558105
    6. '(' → logprob: -14.125651359558105
    7. ' )' → logprob: -14.375651359558105
    8. 'y' → logprob: -16.875652313232422
    9. '   ' → logprob: -17.125652313232422
    10. 'a' → logprob: -17.125652313232422

Token 460: ' ==' (ID: 951)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.6714994311332703
    2. '==' → logprob: -0.9214994311332703
    3. '(' → logprob: -3.171499490737915
    4. '(y' → logprob: -3.671499490737915
    5. ' ==' → logprob: -3.796499490737915
    6. '()==' → logprob: -7.296499252319336
    7. '()' → logprob: -8.296499252319336
    8. ']==' → logprob: -9.546499252319336
    9. ')' → logprob: -9.546499252319336
    10. 'y' → logprob: -9.796499252319336

Token 461: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.001509739668108523
    2. ' self' → logprob: -6.501509666442871
    3. '       ' → logprob: -12.126509666442871
    4. '   ' → logprob: -14.251509666442871
    5. '(self' → logprob: -14.751509666442871
    6. 'y' → logprob: -14.876509666442871
    7. '	self' → logprob: -15.126509666442871
    8. '           ' → logprob: -16.251510620117188
    9. '=self' → logprob: -16.751510620117188
    10. '     ' → logprob: -17.126510620117188

Token 462: '.find' (ID: 4231)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.02324908785521984
    2. '.find' → logprob: -3.7732491493225098
    3. ' find' → logprob: -13.773248672485352
    4. '	find' → logprob: -14.148248672485352
    5. '.' → logprob: -14.398248672485352
    6. ')find' → logprob: -15.148248672485352
    7. 'y' → logprob: -15.273248672485352
    8. '.findall' → logprob: -15.523248672485352
    9. '(find' → logprob: -15.773248672485352
    10. '=find' → logprob: -15.898248672485352

Token 463: 'root' (ID: 5488)
  Prédit: 'root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: 0.0
    2. ' root' → logprob: -18.75
    3. '(root' → logprob: -18.875
    4. 'find' → logprob: -19.375
    5. '_root' → logprob: -19.75
    6. '.root' → logprob: -20.125
    7. 'out' → logprob: -20.75
    8. 'roots' → logprob: -21.0
    9. '	root' → logprob: -21.5
    10. 'right' → logprob: -22.125

Token 464: '(y' (ID: 14684)
  Prédit: '(y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -3.4121114822482923e-06
    2. '(x' → logprob: -13.125003814697266
    3. '(' → logprob: -13.875003814697266
    4. 'y' → logprob: -15.375003814697266
    5. ' (' → logprob: -15.875003814697266
    6. '(
' → logprob: -19.375003814697266
    7. '(py' → logprob: -19.625003814697266
    8. ' y' → logprob: -19.875003814697266
    9. '   ' → logprob: -21.000003814697266
    10. '((' → logprob: -21.250003814697266

Token 465: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.843177233240567e-05
    2. ')
' → logprob: -11.000018119812012
    3. '<|end|>' → logprob: -13.500018119812012
    4. '}' → logprob: -16.500019073486328
    5. ')

' → logprob: -16.875019073486328
    6. ' )' → logprob: -16.875019073486328
    7. '')' → logprob: -17.250019073486328
    8. ')return' → logprob: -17.375019073486328
    9. '),' → logprob: -18.125019073486328
    10. '   ' → logprob: -18.250019073486328


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 463
Tokens correctement prédits (1ère position, stricte): 173
Tokens correctement prédits (1ère position, avec adaptation): 187
Tokens correctement prédits (top 10): 360
Précision stricte (1ère position): 37.37%
Précision adaptée (1ère position): 40.39%
Précision (top 10): 77.75%
================================================================================
