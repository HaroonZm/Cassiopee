================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:58:37
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
#!/usr/bin/env python3

def process_input_check_x_count():
    input_string = input()
    x_char_count = input_string.count('x')
    minimum_required_x_count = 8
    if x_char_count < minimum_required_x_count:
        print('YES')
    else:
        print('NO')

if __name__ == '__main__':
    process_input_check_x_count()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#!/' (ID: 20670)
  → Token d'amorce (pas de prédiction)

Token 1: 'usr' (ID: 15943)
  → Token d'amorce (pas de prédiction)

Token 2: '/bin' (ID: 20950)
  → Token d'amorce (pas de prédiction)

Token 3: '/env' (ID: 34630)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.4815027713775635
    2. '/env' → logprob: -1.2315027713775635
    3. '/python' → logprob: -2.4815027713775635
    4. '/bash' → logprob: -5.231502532958984
    5. '/bin' → logprob: -6.731502532958984
    6. 'python' → logprob: -9.481502532958984
    7. '#!/' → logprob: -11.106502532958984
    8. 'env' → logprob: -11.481502532958984
    9. '/b' → logprob: -11.481502532958984
    10. '/per' → logprob: -12.481502532958984

Token 4: ' python' (ID: 22752)
  Prédit: 'python'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'python' → logprob: -0.25196680426597595
    2. ' python' → logprob: -1.5019668340682983
    3. 'bash' → logprob: -10.50196647644043
    4. ' bash' → logprob: -11.87696647644043
    5. 'perl' → logprob: -14.00196647644043
    6. 'node' → logprob: -14.50196647644043
    7. 'py' → logprob: -14.87696647644043
    8. '/python' → logprob: -14.87696647644043
    9. 'php' → logprob: -15.12696647644043
    10. ' node' → logprob: -15.50196647644043

Token 5: '3' (ID: 18)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.16446582973003387
    2. '\' → logprob: -2.28946590423584
    3. '```' → logprob: -3.66446590423584
    4. 'import' → logprob: -4.16446590423584
    5. '  
' → logprob: -5.91446590423584
    6. '3' → logprob: -6.03946590423584
    7. ' 
' → logprob: -7.16446590423584
    8. '\r' → logprob: -7.53946590423584
    9. '#' → logprob: -7.53946590423584
    10. '' → logprob: -7.66446590423584

Token 6: '

' (ID: 279)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.1383751481771469
    2. 'import' → logprob: -2.3883750438690186
    3. '```' → logprob: -4.138375282287598
    4. '\' → logprob: -4.763375282287598
    5. '
' → logprob: -5.138375282287598
    6. '  
' → logprob: -5.513375282287598
    7. ' 
' → logprob: -6.513375282287598
    8. '' → logprob: -7.763375282287598
    9. 'newline' → logprob: -8.138375282287598
    10. '\x' → logprob: -9.013375282287598

Token 7: 'def' (ID: 1314)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.01440994068980217
    2. '\n' → logprob: -4.514410018920898
    3. '\' → logprob: -6.889410018920898
    4. 'print' → logprob: -7.139410018920898
    5. '#' → logprob: -7.389410018920898
    6. '```' → logprob: -8.014410018920898
    7. ' import' → logprob: -8.514410018920898
    8. '' → logprob: -9.639410018920898
    9. ' 
' → logprob: -10.014410018920898
    10. '
' → logprob: -10.264410018920898

Token 8: ' process' (ID: 2273)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.005217275116592646
    2. ' ```' → logprob: -6.3802170753479
    3. ' space' → logprob: -6.8802170753479
    4. '<|end|>' → logprob: -8.255217552185059
    5. ' main' → logprob: -8.505217552185059
    6. ' )' → logprob: -8.755217552185059
    7. ' python' → logprob: -8.755217552185059
    8. ' a' → logprob: -8.755217552185059
    9. ' hello' → logprob: -8.880217552185059
    10. ' my' → logprob: -9.130217552185059

Token 9: '_input' (ID: 12507)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.012258391827344894
    2. '(' → logprob: -5.137258529663086
    3. '_token' → logprob: -6.012258529663086
    4. '```' → logprob: -6.637258529663086
    5. ' _' → logprob: -7.387258529663086
    6. '_data' → logprob: -8.262258529663086
    7. '_line' → logprob: -8.512258529663086
    8. ' (' → logprob: -8.512258529663086
    9. '(process' → logprob: -8.762258529663086
    10. '_input' → logprob: -9.012258529663086

Token 10: '_check' (ID: 15847)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002708700019866228
    2. '_' → logprob: -6.252708911895752
    3. '```' → logprob: -8.752708435058594
    4. '():' → logprob: -9.127708435058594
    5. '(_:' → logprob: -9.627708435058594
    6. '_token' → logprob: -9.752708435058594
    7. ':' → logprob: -9.877708435058594
    8. '(_' → logprob: -10.002708435058594
    9. '(:' → logprob: -10.127708435058594
    10. '_input' → logprob: -10.502708435058594

Token 11: '_x' (ID: 7054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03834669664502144
    2. 's' → logprob: -4.163346767425537
    3. '_' → logprob: -4.288346767425537
    4. '_input' → logprob: -6.538346767425537
    5. '(:' → logprob: -6.788346767425537
    6. '(_' → logprob: -6.913346767425537
    7. 'ing' → logprob: -7.163346767425537
    8. '(_:' → logprob: -7.163346767425537
    9. '():' → logprob: -7.288346767425537
    10. ':' → logprob: -7.663346767425537

Token 12: '_count' (ID: 7536)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.605851411819458
    2. '_' → logprob: -1.230851411819458
    3. '():' → logprob: -2.230851411819458
    4. '_:' → logprob: -4.605851173400879
    5. ':' → logprob: -4.855851173400879
    6. '):' → logprob: -5.105851173400879
    7. '```' → logprob: -5.480851173400879
    8. '(:' → logprob: -5.480851173400879
    9. '(x' → logprob: -6.105851173400879
    10. '_t' → logprob: -6.105851173400879

Token 13: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.010430659167468548
    2. '():' → logprob: -5.510430812835693
    3. '(:' → logprob: -5.510430812835693
    4. ':' → logprob: -7.385430812835693
    5. 's' → logprob: -7.510430812835693
    6. '(x' → logprob: -7.885430812835693
    7. '_' → logprob: -9.010430335998535
    8. '('' → logprob: -9.135430335998535
    9. '(s' → logprob: -9.635430335998535
    10. '(count' → logprob: -9.760430335998535

Token 14: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00840890035033226
    2. '    
' → logprob: -6.008409023284912
    3. '```' → logprob: -6.508409023284912
    4. '(' → logprob: -6.883409023284912
    5. '    ' → logprob: -6.883409023284912
    6. ' ' → logprob: -7.633409023284912
    7. ':' → logprob: -7.633409023284912
    8. '\' → logprob: -8.258408546447754
    9. '\n' → logprob: -8.383408546447754
    10. ' 
' → logprob: -8.883408546447754

Token 15: ' input' (ID: 3422)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3916703462600708
    2. 'x' → logprob: -2.1416702270507812
    3. '    ' → logprob: -2.5166702270507812
    4. '       ' → logprob: -2.6416702270507812
    5. ' ' → logprob: -4.391670227050781
    6. ' x' → logprob: -4.641670227050781
    7. ' pass' → logprob: -4.891670227050781
    8. '```' → logprob: -5.516670227050781
    9. 'count' → logprob: -5.516670227050781
    10. 'pass' → logprob: -5.641670227050781

Token 16: '_string' (ID: 8609)
  Prédit: '_str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.3473100960254669
    2. '_string' → logprob: -2.0973100662231445
    3. '_text' → logprob: -2.4723100662231445
    4. '_data' → logprob: -3.2223100662231445
    5. '_line' → logprob: -3.4723100662231445
    6. '_' → logprob: -5.0973100662231445
    7. '_value' → logprob: -5.7223100662231445
    8. '()' → logprob: -5.9723100662231445
    9. '_char' → logprob: -6.5973100662231445
    10. '(' → logprob: -7.4723100662231445

Token 17: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07498034089803696
    2. '.count' → logprob: -2.8249802589416504
    3. '=' → logprob: -4.44998025894165
    4. '.' → logprob: -7.44998025894165
    5. ' .' → logprob: -8.699980735778809
    6. '.startswith' → logprob: -9.199980735778809
    7. '.split' → logprob: -9.324980735778809
    8. '   ' → logprob: -9.574980735778809
    9. '.replace' → logprob: -10.199980735778809
    10. ')' → logprob: -10.574980735778809

Token 18: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.05530332773923874
    2. 'input' → logprob: -2.9303033351898193
    3. ' ' → logprob: -8.180303573608398
    4. ' "' → logprob: -9.680303573608398
    5. ' ""' → logprob: -10.430303573608398
    6. '"' → logprob: -11.555303573608398
    7. ' ''' → logprob: -11.555303573608398
    8. ' '' → logprob: -11.930303573608398
    9. '""' → logprob: -12.055303573608398
    10. '(input' → logprob: -12.305303573608398

Token 19: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014086170122027397
    2. '('' → logprob: -4.6390862464904785
    3. '()' → logprob: -6.2640862464904785
    4. '("("' → logprob: -6.5140862464904785
    5. '```' → logprob: -7.8890862464904785
    6. ''' → logprob: -8.63908576965332
    7. ' ' → logprob: -9.63908576965332
    8. '("")' → logprob: -9.76408576965332
    9. '(
' → logprob: -10.26408576965332
    10. '"' → logprob: -10.51408576965332

Token 20: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4550088942050934
    2. '
' → logprob: -1.580008864402771
    3. '    
' → logprob: -3.0800089836120605
    4. '  
' → logprob: -3.4550089836120605
    5. ' 
' → logprob: -3.8300089836120605
    6. '   
' → logprob: -3.9550089836120605
    7. ' ' → logprob: -4.4550089836120605
    8. 'n' → logprob: -4.4550089836120605
    9. 'x' → logprob: -5.5800089836120605
    10. 'count' → logprob: -5.9550089836120605

Token 21: ' x' (ID: 1215)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7094010710716248
    2. 'x' (adapté à ' x') → logprob: -1.2094011306762695
    3. ' x' → logprob: -1.7094011306762695
    4. ' count' → logprob: -3.9594011306762695
    5. 'count' → logprob: -5.7094011306762695
    6. '
' → logprob: -6.4594011306762695
    7. ' if' → logprob: -6.8344011306762695
    8. '```' → logprob: -7.0844011306762695
    9. '    
' → logprob: -7.4594011306762695
    10. ' ' → logprob: -7.7094011306762695

Token 22: '_char' (ID: 23398)
  Prédit: '_count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.001254634466022253
    2. '_' → logprob: -7.001254558563232
    3. '_c' → logprob: -8.62625503540039
    4. '_counts' → logprob: -9.00125503540039
    5. '_cnt' → logprob: -11.25125503540039
    6. '_counter' → logprob: -11.50125503540039
    7. 'count' → logprob: -12.37625503540039
    8. 's' → logprob: -12.50125503540039
    9. '_co' → logprob: -13.62625503540039
    10. '_Count' → logprob: -13.75125503540039

Token 23: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.01653832197189331
    2. 's' → logprob: -4.141538143157959
    3. ' =' → logprob: -8.266538619995117
    4. '=' → logprob: -9.516538619995117
    5. '_counts' → logprob: -9.641538619995117
    6. '_' → logprob: -9.766538619995117
    7. 'count' → logprob: -10.516538619995117
    8. '_s' → logprob: -11.266538619995117
    9. '```' → logprob: -13.016538619995117
    10. '_counter' → logprob: -13.641538619995117

Token 24: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759636759757996
    2. ' =' → logprob: -0.8259636759757996
    3. ' ==' → logprob: -11.450963973999023
    4. '==' → logprob: -12.200963973999023
    5. '   ' → logprob: -13.200963973999023
    6. ' ' → logprob: -13.450963973999023
    7. ')' → logprob: -13.450963973999023
    8. '_' → logprob: -13.575963973999023
    9. '.' → logprob: -14.200963973999023
    10. '  ' → logprob: -14.950963973999023

Token 25: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.09478572010993958
    2. 'input' → logprob: -2.719785690307617
    3. ' ' → logprob: -4.094785690307617
    4. '0' → logprob: -4.844785690307617
    5. '	input' → logprob: -12.844785690307617
    6. '=input' → logprob: -13.469785690307617
    7. ' ' → logprob: -13.594785690307617
    8. '(input' → logprob: -13.594785690307617
    9. ' int' → logprob: -14.094785690307617
    10. ' len' → logprob: -14.344785690307617

Token 26: '_string' (ID: 8609)
  Prédit: '_string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -0.0005149058997631073
    2. 'string' → logprob: -8.50051498413086
    3. '()' → logprob: -9.00051498413086
    4. '_' → logprob: -9.62551498413086
    5. '```' → logprob: -10.00051498413086
    6. 'String' → logprob: -10.12551498413086
    7. '_char' → logprob: -12.12551498413086
    8. '_str' → logprob: -12.37551498413086
    9. '   ' → logprob: -12.50051498413086
    10. ')' → logprob: -12.87551498413086

Token 27: '.count' (ID: 14019)
  Prédit: '.count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.count' → logprob: -0.004087897017598152
    2. '.' → logprob: -5.504087924957275
    3. ' .' → logprob: -11.879087448120117
    4. '.lower' → logprob: -13.879087448120117
    5. '   ' → logprob: -15.004087448120117
    6. 'count' → logprob: -15.254087448120117
    7. '.c' → logprob: -15.254087448120117
    8. '.replace' → logprob: -15.379087448120117
    9. '.startswith' → logprob: -15.629087448120117
    10. '.Count' → logprob: -15.754087448120117

Token 28: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.03840383142232895
    2. '(' → logprob: -3.2884037494659424
    3. '("("' → logprob: -8.038403511047363
    4. '("' → logprob: -10.288403511047363
    5. ''' → logprob: -13.413403511047363
    6. '('(' → logprob: -14.038403511047363
    7. '(('' → logprob: -14.288403511047363
    8. '(
' → logprob: -14.413403511047363
    9. '(\'' → logprob: -14.538403511047363
    10. '("""' → logprob: -15.288403511047363

Token 29: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.9743012671824545e-05
    2. ''x' → logprob: -10.875020027160645
    3. '"x' → logprob: -15.250020027160645
    4. ')' → logprob: -15.750020027160645
    5. 'X' → logprob: -15.875020027160645
    6. ''' → logprob: -16.000019073486328
    7. ' x' → logprob: -16.625019073486328
    8. '')' → logprob: -16.875019073486328
    9. ')x' → logprob: -17.375019073486328
    10. '_x' → logprob: -19.500019073486328

Token 30: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.0004429435357451439
    2. ')' → logprob: -8.250442504882812
    3. ''' → logprob: -8.750442504882812
    4. '')
' → logprob: -10.875442504882812
    5. ''))' → logprob: -13.125442504882812
    6. '")' → logprob: -13.875442504882812
    7. '')

' → logprob: -14.750442504882812
    8. ' ')' → logprob: -15.375442504882812
    9. '('' → logprob: -15.750442504882812
    10. '')
' → logprob: -16.250442504882812

Token 31: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3039112389087677
    2. '
' → logprob: -1.5539112091064453
    3. ')' → logprob: -3.8039112091064453
    4. '<|end|>' → logprob: -4.178911209106445
    5. '    
' → logprob: -5.303911209106445
    6. '\n' → logprob: -5.803911209106445
    7. '  
' → logprob: -6.428911209106445
    8. ' ' → logprob: -7.303911209106445
    9. '```' → logprob: -7.803911209106445
    10. '  ' → logprob: -8.053911209106445

Token 32: ' minimum' (ID: 11085)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00034774013329297304
    2. '    ' → logprob: -9.250348091125488
    3. '    
' → logprob: -9.250348091125488
    4. 'return' → logprob: -10.250348091125488
    5. ' ' → logprob: -10.375348091125488
    6. ' return' → logprob: -10.625348091125488
    7. ')' → logprob: -11.000348091125488
    8. '  ' → logprob: -11.250348091125488
    9. ' if' → logprob: -12.000348091125488
    10. '       ' → logprob: -12.125348091125488

Token 33: '_required' (ID: 44564)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.030070269480347633
    2. '_x' → logprob: -4.1550703048706055
    3. '_count' → logprob: -5.2800703048706055
    4. ' =' → logprob: -5.7800703048706055
    5. '=' → logprob: -6.4050703048706055
    6. ' ' → logprob: -6.6550703048706055
    7. ' _' → logprob: -7.5300703048706055
    8. '_required' → logprob: -7.7800703048706055
    9. '_space' → logprob: -7.7800703048706055
    10. '_length' → logprob: -7.9050703048706055

Token 34: '_x' (ID: 7054)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.09037911891937256
    2. '=' → logprob: -3.465379238128662
    3. ' =' → logprob: -3.465379238128662
    4. '_x' → logprob: -4.090379238128662
    5. '_count' → logprob: -5.090379238128662
    6. '_=' → logprob: -8.215378761291504
    7. 's' → logprob: -8.715378761291504
    8. ' _' → logprob: -9.090378761291504
    9. '_space' → logprob: -9.215378761291504
    10. ' ' → logprob: -9.340378761291504

Token 35: '_count' (ID: 7536)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4295214116573334
    2. '=' → logprob: -1.0545214414596558
    3. '_' → logprob: -7.304521560668945
    4. 's' → logprob: -9.304521560668945
    5. ' ' → logprob: -10.429521560668945
    6. '_count' → logprob: -12.054521560668945
    7. ')' → logprob: -12.179521560668945
    8. '   ' → logprob: -12.804521560668945
    9. '_=' → logprob: -12.929521560668945
    10. '  ' → logprob: -13.054521560668945

Token 36: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04859191179275513
    2. '=' → logprob: -3.0485918521881104
    3. ' ' → logprob: -12.798591613769531
    4. ' >' → logprob: -15.298591613769531
    5. '   ' → logprob: -15.423591613769531
    6. '=int' → logprob: -15.423591613769531
    7. ' ==' → logprob: -15.673591613769531
    8. ' =)' → logprob: -15.923591613769531
    9. '>' → logprob: -16.17359161376953
    10. '<|end|>' → logprob: -16.29859161376953

Token 37: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7193586826324463
    2. '3' → logprob: -1.4693586826324463
    3. '1' → logprob: -1.8443586826324463
    4. '2' → logprob: -2.0943586826324463
    5. '5' → logprob: -7.094358444213867
    6. '4' → logprob: -7.969358444213867
    7. '0' → logprob: -8.469358444213867
    8. '10' → logprob: -9.219358444213867
    9. '   ' → logprob: -11.156858444213867
    10. '```' → logprob: -11.281858444213867

Token 38: '8' (ID: 23)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6323069930076599
    2. '3' → logprob: -1.1323070526123047
    3. '2' → logprob: -2.0073070526123047
    4. ' ' → logprob: -4.882307052612305
    5. '0' → logprob: -6.632307052612305
    6. '5' → logprob: -6.882307052612305
    7. 'input' → logprob: -7.007307052612305
    8. '4' → logprob: -7.507307052612305
    9. 'int' → logprob: -8.507307052612305
    10. '10' → logprob: -8.757307052612305

Token 39: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15529456734657288
    2. '<|end|>' → logprob: -2.65529465675354
    3. '
' → logprob: -3.40529465675354
    4. ' ' → logprob: -4.280294418334961
    5. '    
' → logprob: -4.655294418334961
    6. ')' → logprob: -5.280294418334961
    7. ':' → logprob: -6.280294418334961
    8. '  
' → logprob: -6.405294418334961
    9. '#' → logprob: -6.530294418334961
    10. '  ' → logprob: -6.655294418334961

Token 40: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0813254788517952
    2. '
' → logprob: -3.3313255310058594
    3. '<|end|>' → logprob: -3.9563255310058594
    4. '    
' → logprob: -4.081325531005859
    5. '  
' → logprob: -6.081325531005859
    6. ' ' → logprob: -6.331325531005859
    7. '   
' → logprob: -7.581325531005859
    8. ' 
' → logprob: -7.706325531005859
    9. '  ' → logprob: -7.831325531005859
    10. '    ' → logprob: -8.20632553100586

Token 41: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7691095471382141
    2. '
' → logprob: -0.8941095471382141
    3. '    
' → logprob: -3.1441094875335693
    4. '  
' → logprob: -3.5191094875335693
    5. '<|end|>' → logprob: -4.019109725952148
    6. ' 
' → logprob: -4.144109725952148
    7. ' ' → logprob: -4.519109725952148
    8. '   
' → logprob: -5.394109725952148
    9. ' if' → logprob: -6.769109725952148
    10. '  ' → logprob: -6.769109725952148

Token 42: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.0007823493797332048
    2. ' ' → logprob: -7.375782489776611
    3. 'x' → logprob: -8.875782012939453
    4. '    ' → logprob: -12.250782012939453
    5. ' len' → logprob: -12.500782012939453
    6. ' (' → logprob: -13.250782012939453
    7. ' ' → logprob: -13.250782012939453
    8. ' input' → logprob: -13.375782012939453
    9. '   ' → logprob: -14.000782012939453
    10. ' not' → logprob: -14.750782012939453

Token 43: '_char' (ID: 23398)
  Prédit: '_char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -0.0009156247251667082
    2. '_' → logprob: -7.25091552734375
    3. '_count' → logprob: -9.12591552734375
    4. ' _' → logprob: -10.25091552734375
    5. '_chars' → logprob: -11.12591552734375
    6. ' ' → logprob: -11.50091552734375
    7. '_CHAR' → logprob: -12.12591552734375
    8. '```' → logprob: -12.50091552734375
    9. '   ' → logprob: -12.75091552734375
    10. 'char' → logprob: -12.87591552734375

Token 44: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.0006970656104385853
    2. '_char' → logprob: -7.500697135925293
    3. '_' → logprob: -9.875697135925293
    4. 's' → logprob: -9.875697135925293
    5. '```' → logprob: -11.625697135925293
    6. 'count' → logprob: -12.125697135925293
    7. ' ' → logprob: -12.375697135925293
    8. ' _' → logprob: -12.375697135925293
    9. '_c' → logprob: -12.375697135925293
    10. '   ' → logprob: -12.500697135925293

Token 45: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.25177302956581116
    2. ' >=' → logprob: -1.6267729997634888
    3. '<' → logprob: -4.251772880554199
    4. ' ' → logprob: -4.876772880554199
    5. '>=' → logprob: -5.501772880554199
    6. ' >' → logprob: -10.7517728805542
    7. '  ' → logprob: -11.1267728805542
    8. '   ' → logprob: -11.3767728805542
    9. '>' → logprob: -11.6267728805542
    10. ' ==' → logprob: -12.3767728805542

Token 46: ' minimum' (ID: 11085)
  Prédit: ' minimum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' minimum' → logprob: -0.00421100901439786
    2. 'minimum' → logprob: -5.504210948944092
    3. ' ' → logprob: -9.00421142578125
    4. ' ' → logprob: -12.37921142578125
    5. '.minimum' → logprob: -12.75421142578125
    6. '8' → logprob: -14.12921142578125
    7. '    ' → logprob: -15.00421142578125
    8. 'Minimum' → logprob: -15.37921142578125
    9. ' minimal' → logprob: -16.00421142578125
    10. ' mínimo' → logprob: -16.00421142578125

Token 47: '_required' (ID: 44564)
  Prédit: '_required'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_required' → logprob: -4.7994282795116305e-05
    2. '_' → logprob: -10.00004768371582
    3. '_REQUIRED' → logprob: -14.12504768371582
    4. ' _' → logprob: -14.37504768371582
    5. '   ' → logprob: -14.62504768371582
    6. '```' → logprob: -15.50004768371582
    7. '_require' → logprob: -15.87504768371582
    8. '_needed' → logprob: -16.50004768371582
    9. '_re' → logprob: -17.12504768371582
    10. 'Required' → logprob: -17.12504768371582

Token 48: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -7.465036105713807e-06
    2. '_' → logprob: -12.375007629394531
    3. '```' → logprob: -13.875007629394531
    4. ' _' → logprob: -14.250007629394531
    5. 'x' → logprob: -14.500007629394531
    6. '_s' → logprob: -15.625007629394531
    7. '_required' → logprob: -16.00000762939453
    8. '   ' → logprob: -16.12500762939453
    9. ' ' → logprob: -16.37500762939453
    10. '_d' → logprob: -16.75000762939453

Token 49: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.0781797394156456
    2. '_' → logprob: -2.7031798362731934
    3. '_c' → logprob: -5.078179836273193
    4. '_char' → logprob: -6.328179836273193
    5. '_co' → logprob: -9.703179359436035
    6. 'count' → logprob: -10.953179359436035
    7. '_counts' → logprob: -11.328179359436035
    8. '```' → logprob: -11.453179359436035
    9. '_chars' → logprob: -11.453179359436035
    10. '_counter' → logprob: -11.703179359436035

Token 50: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -2.129266067640856e-05
    2. ' :' → logprob: -11.375020980834961
    3. ':
' → logprob: -11.750020980834961
    4. ':**' → logprob: -14.125020980834961
    5. '):' → logprob: -14.375020980834961
    6. ':return' → logprob: -14.750020980834961
    7. '   ' → logprob: -17.87502098083496
    8. '>:' → logprob: -17.87502098083496
    9. ':def' → logprob: -18.62502098083496
    10. '.' → logprob: -18.75002098083496

Token 51: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19196590781211853
    2. '   ' → logprob: -2.0669658184051514
    3. '    ' → logprob: -3.1919658184051514
    4. '        
' → logprob: -6.1919660568237305
    5. '    
' → logprob: -6.4419660568237305
    6. ' return' → logprob: -7.5669660568237305
    7. '     
' → logprob: -7.8169660568237305
    8. ':' → logprob: -7.9419660568237305
    9. '\n' → logprob: -8.31696605682373
    10. '     ' → logprob: -8.44196605682373

Token 52: ' print' (ID: 2123)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7001696228981018
    2. '    ' → logprob: -1.325169563293457
    3. '   ' → logprob: -2.075169563293457
    4. ' return' → logprob: -3.075169563293457
    5. ' 
' → logprob: -3.950169563293457
    6. '     
' → logprob: -4.700169563293457
    7. ' print' → logprob: -4.825169563293457
    8. '        
' → logprob: -5.450169563293457
    9. '    
' → logprob: -5.575169563293457
    10. 'return' → logprob: -5.575169563293457

Token 53: '('' (ID: 706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.020155254751443863
    2. '("' → logprob: -4.020155429840088
    3. '('' → logprob: -6.395155429840088
    4. '()' → logprob: -8.39515495300293
    5. '("")' → logprob: -10.14515495300293
    6. '(f' → logprob: -10.77015495300293
    7. '("("' → logprob: -11.39515495300293
    8. '(
' → logprob: -11.64515495300293
    9. '("""' → logprob: -11.64515495300293
    10. '(`' → logprob: -12.27015495300293

Token 54: 'YES' (ID: 31958)
  Prédit: 'Error'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Error' → logprob: -0.8930450081825256
    2. 'Input' → logprob: -1.8930449485778809
    3. 'Not' → logprob: -2.768044948577881
    4. 'x' → logprob: -2.768044948577881
    5. 'ERROR' → logprob: -2.893044948577881
    6. 'Invalid' → logprob: -3.018044948577881
    7. 'Too' → logprob: -3.393044948577881
    8. 'Please' → logprob: -3.518044948577881
    9. 'Ins' → logprob: -3.643044948577881
    10. 'Minimum' → logprob: -4.393044948577881

Token 55: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.0023808805271983147
    2. ')' → logprob: -6.627380847930908
    3. '')
' → logprob: -6.877380847930908
    4. '')
' → logprob: -12.252381324768066
    5. '")' → logprob: -12.252381324768066
    6. '!' → logprob: -12.502381324768066
    7. ''' → logprob: -12.502381324768066
    8. '   ' → logprob: -12.752381324768066
    9. '')

' → logprob: -14.002381324768066
    10. ' ')' → logprob: -14.127381324768066

Token 56: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18774399161338806
    2. 'else' → logprob: -2.062743902206421
    3. ' else' → logprob: -3.937743902206421
    4. '<|end|>' → logprob: -4.437744140625
    5. '```' → logprob: -5.312744140625
    6. ')' → logprob: -6.437744140625
    7. '	else' → logprob: -6.812744140625
    8. '#' → logprob: -7.062744140625
    9. '
' → logprob: -7.437744140625
    10. '\n' → logprob: -7.437744140625

Token 57: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44517001509666443
    2. 'else' (adapté à ' else') → logprob: -1.1951700448989868
    3. ' else' → logprob: -2.9451699256896973
    4. 'elif' → logprob: -6.695169925689697
    5. '       ' → logprob: -7.570169925689697
    6. '	else' → logprob: -8.070170402526855
    7. '<|end|>' → logprob: -8.195170402526855
    8. '```' → logprob: -8.195170402526855
    9. '    
' → logprob: -8.320170402526855
    10. 'e' → logprob: -8.320170402526855

Token 58: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -9.567575034452602e-05
    2. ':
' → logprob: -9.37509536743164
    3. ' :' → logprob: -12.37509536743164
    4. '       ' → logprob: -12.50009536743164
    5. '   ' → logprob: -13.25009536743164
    6. '```' → logprob: -15.62509536743164
    7. '<|end|>' → logprob: -15.62509536743164
    8. '    ' → logprob: -15.75009536743164
    9. ':return' → logprob: -16.12509536743164
    10. ',' → logprob: -16.37509536743164

Token 59: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008340472122654319
    2. ' print' → logprob: -7.625833988189697
    3. 'print' → logprob: -8.000834465026855
    4. '   ' → logprob: -12.000834465026855
    5. '           ' → logprob: -14.125834465026855
    6. '     ' → logprob: -14.125834465026855
    7. '    ' → logprob: -14.375834465026855
    8. '      ' → logprob: -14.625834465026855
    9. '```' → logprob: -14.750834465026855
    10. '    ' → logprob: -15.000834465026855

Token 60: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.31579992175102234
    2. ' print' → logprob: -1.3157999515533447
    3. '       ' → logprob: -6.190799713134766
    4. '   ' → logprob: -7.690799713134766
    5. ' ' → logprob: -11.815799713134766
    6. '```' → logprob: -12.440799713134766
    7. ' pass' → logprob: -12.565799713134766
    8. 'pass' → logprob: -12.815799713134766
    9. '	print' → logprob: -12.815799713134766
    10. '    ' → logprob: -12.815799713134766

Token 61: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.4742046892642975
    2. '(' → logprob: -0.9742046594619751
    3. '()' → logprob: -9.349205017089844
    4. '(False' → logprob: -10.474205017089844
    5. '("' → logprob: -12.099205017089844
    6. '(True' → logprob: -12.724205017089844
    7. '(None' → logprob: -14.349205017089844
    8. '(
' → logprob: -14.474205017089844
    9. '(

' → logprob: -14.974205017089844
    10. '   ' → logprob: -14.974205017089844

Token 62: 'NO' (ID: 14695)
  Prédit: 'NO'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NO' → logprob: -5.319370302458992e-06
    2. ''' → logprob: -12.750005722045898
    3. 'YES' → logprob: -13.875005722045898
    4. 'No' → logprob: -13.875005722045898
    5. '')' → logprob: -15.375005722045898
    6. ' NO' → logprob: -15.750005722045898
    7. 'N' → logprob: -16.5000057220459
    8. 'no' → logprob: -18.5000057220459
    9. '   ' → logprob: -19.1250057220459
    10. ''N' → logprob: -19.1250057220459

Token 63: '')

' (ID: 9735)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '')' → logprob: -0.10022122412919998
    2. ')' → logprob: -2.3502211570739746
    3. '')
' → logprob: -11.725221633911133
    4. ''' → logprob: -12.600221633911133
    5. '")' → logprob: -13.725221633911133
    6. '```' → logprob: -14.350221633911133
    7. '}')' → logprob: -14.475221633911133
    8. '`)' → logprob: -15.225221633911133
    9. ')'' → logprob: -15.225221633911133
    10. '   ' → logprob: -15.725221633911133

Token 64: 'if' (ID: 366)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.18322324752807617
    2. '\n' → logprob: -2.433223247528076
    3. '<|end|>' → logprob: -2.933223247528076
    4. '#' → logprob: -5.183223247528076
    5. '```' → logprob: -5.433223247528076
    6. '\' → logprob: -5.558223247528076
    7. ')' → logprob: -5.808223247528076
    8. '' → logprob: -6.058223247528076
    9. 'x' → logprob: -6.058223247528076
    10. 'newline' → logprob: -6.558223247528076

Token 65: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0005947356694377959
    2. '__' → logprob: -8.125595092773438
    3. ' ' → logprob: -8.750595092773438
    4. ' ' → logprob: -9.500595092773438
    5. ' _' → logprob: -10.500595092773438
    6. ' process' → logprob: -10.750595092773438
    7. '_' → logprob: -12.125595092773438
    8. ' ‌' → logprob: -12.625595092773438
    9. ' ​' → logprob: -13.250595092773438
    10. ' True' → logprob: -13.500595092773438

Token 66: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.2556462287902832
    2. '.__' → logprob: -2.255646228790283
    3. '.' → logprob: -3.005646228790283
    4. ' ==' → logprob: -4.005646228790283
    5. ' .' → logprob: -4.005646228790283
    6. '__.' → logprob: -4.630646228790283
    7. '__.__' → logprob: -4.755646228790283
    8. '[' → logprob: -5.005646228790283
    9. '==' → logprob: -5.505646228790283
    10. '.py' → logprob: -6.505646228790283

Token 67: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0007325552869588137
    2. '__.' → logprob: -7.750732421875
    3. '==' → logprob: -8.500732421875
    4. '__.__' → logprob: -10.375732421875
    5. '_' → logprob: -10.750732421875
    6. '___' → logprob: -11.375732421875
    7. '```' → logprob: -11.625732421875
    8. ' ==' → logprob: -12.125732421875
    9. '=="' → logprob: -12.750732421875
    10. '__["' → logprob: -13.000732421875

Token 68: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.13638050854206085
    2. '__' → logprob: -2.636380434036255
    3. '==' → logprob: -3.011380434036255
    4. '.' → logprob: -5.761380672454834
    5. ' .' → logprob: -7.261380672454834
    6. '=="' → logprob: -7.636380672454834
    7. '.__' → logprob: -7.886380672454834
    8. '['' → logprob: -7.886380672454834
    9. '[' → logprob: -8.011380195617676
    10. '=='' → logprob: -8.136380195617676

Token 69: ' '__' (ID: 28278)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.1604200005531311
    2. '"' → logprob: -1.9104199409484863
    3. ' '__' → logprob: -9.535420417785645
    4. ' "__' → logprob: -9.910420417785645
    5. ' "' → logprob: -10.285420417785645
    6. ' '' → logprob: -10.535420417785645
    7. '__' → logprob: -11.410420417785645
    8. ' __' → logprob: -13.910420417785645
    9. ''s' → logprob: -15.160420417785645
    10. ' ' → logprob: -15.410420417785645

Token 70: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -4.5014188799541444e-05
    2. 'name' → logprob: -10.125044822692871
    3. 'm' → logprob: -12.375044822692871
    4. '_main' → logprob: -15.500044822692871
    5. 'ma' → logprob: -15.750044822692871
    6. 'maine' → logprob: -16.375045776367188
    7. ' main' → logprob: -16.875045776367188
    8. '__' → logprob: -16.875045776367188
    9. 'mp' → logprob: -18.125045776367188
    10. 'mai' → logprob: -18.875045776367188

Token 71: '__':
' (ID: 39314)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.4742357134819031
    2. '__':
' → logprob: -0.9742357134819031
    3. '__:' → logprob: -8.849235534667969
    4. '':' → logprob: -12.099235534667969
    5. '__":
' → logprob: -12.099235534667969
    6. '_' → logprob: -12.849235534667969
    7. ''' → logprob: -14.599235534667969
    8. '__('' → logprob: -14.724235534667969
    9. '___' → logprob: -15.974235534667969
    10. '__
' → logprob: -15.974235534667969

Token 72: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10678786784410477
    2. ' process' → logprob: -2.356787919998169
    3. '    
' → logprob: -5.85678768157959
    4. '	process' → logprob: -6.35678768157959
    5. ' 
' → logprob: -7.23178768157959
    6. 'process' → logprob: -7.35678768157959
    7. '```' → logprob: -8.98178768157959
    8. '(process' → logprob: -9.23178768157959
    9. ' ' → logprob: -9.48178768157959
    10. '
' → logprob: -9.48178768157959

Token 73: ' process' (ID: 2273)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' (adapté à ' process') → logprob: -0.004078997299075127
    2. ' process' → logprob: -5.5040788650512695
    3. '	process' → logprob: -15.00407886505127
    4. '   ' → logprob: -15.12907886505127
    5. '_process' → logprob: -18.004079818725586
    6. '.process' → logprob: -18.754079818725586
    7. '(process' → logprob: -18.879079818725586
    8. 'proces' → logprob: -19.504079818725586
    9. 'rocess' → logprob: -21.004079818725586
    10. 'Process' → logprob: -21.129079818725586

Token 74: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -1.4498052223643754e-05
    2. '_' → logprob: -11.250014305114746
    3. '_output' → logprob: -14.500014305114746
    4. '```' → logprob: -15.250014305114746
    5. '_x' → logprob: -15.875014305114746
    6. '_in' → logprob: -16.250015258789062
    7. ' _' → logprob: -16.375015258789062
    8. '_process' → logprob: -16.500015258789062
    9. '__' → logprob: -16.500015258789062
    10. '_Input' → logprob: -16.875015258789062

Token 75: '_check' (ID: 15847)
  Prédit: '_check'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_check' → logprob: -0.002212704159319401
    2. '_' → logprob: -6.1272125244140625
    3. '_input' → logprob: -10.877212524414062
    4. '```' → logprob: -13.252212524414062
    5. '_process' → logprob: -13.502212524414062
    6. '_checker' → logprob: -13.752212524414062
    7. '_chk' → logprob: -14.752212524414062
    8. '_
' → logprob: -14.752212524414062
    9. ' _' → logprob: -15.002212524414062
    10. '`' → logprob: -15.002212524414062

Token 76: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.0005586316110566258
    2. '_' → logprob: -8.125558853149414
    3. '_input' → logprob: -8.250558853149414
    4. ' _' → logprob: -14.250558853149414
    5. '__' → logprob: -15.375558853149414
    6. '```' → logprob: -15.500558853149414
    7. '_string' → logprob: -16.500558853149414
    8. '_
' → logprob: -16.500558853149414
    9. '_in' → logprob: -17.500558853149414
    10. '_xt' → logprob: -18.000558853149414

Token 77: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -8.470901229884475e-05
    2. '_' → logprob: -9.75008487701416
    3. '_char' → logprob: -11.12508487701416
    4. '_c' → logprob: -11.75008487701416
    5. 'count' → logprob: -13.50008487701416
    6. ' _' → logprob: -14.25008487701416
    7. '_counts' → logprob: -14.50008487701416
    8. '_x' → logprob: -14.87508487701416
    9. 'ount' → logprob: -15.62508487701416
    10. '_cnt' → logprob: -15.62508487701416

Token 78: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -2.6776029699249193e-05
    2. '()`' → logprob: -11.62502670288086
    3. '()
' → logprob: -12.00002670288086
    4. ' ()' → logprob: -12.12502670288086
    5. '(' → logprob: -12.87502670288086
    6. '`()' → logprob: -13.87502670288086
    7. '()

' → logprob: -14.87502670288086
    8. '();' → logprob: -14.87502670288086
    9. '()<' → logprob: -15.00002670288086
    10. '()?' → logprob: -15.25002670288086


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 76
Tokens correctement prédits (1ère position, stricte): 37
Tokens correctement prédits (1ère position, avec adaptation): 39
Tokens correctement prédits (top 10): 60
Précision stricte (1ère position): 48.68%
Précision adaptée (1ère position): 51.32%
Précision (top 10): 78.95%
================================================================================
