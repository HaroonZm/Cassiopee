================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:18:26
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
class dsu:
    def __init__(self, n=0):
        self._n = n
        self.parent_or_size = [-1] * n

    def merge(self, a: int, b: int) -> int:
        x = self.leader(a)
        y = self.leader(b)
        if x == y:
            return x
        if self.parent_or_size[x] > self.parent_or_size[y]:
            x, y = y, x
        self.parent_or_size[x] += self.parent_or_size[y]
        self.parent_or_size[y] = x
        return x

    def same(self, a: int, b: int) -> bool:
        return self.leader(a) == self.leader(b)

    def leader(self, a: int) -> int:
        x = a
        while self.parent_or_size[x] >= 0:
            x = self.parent_or_size[x]
        while a != x:
            self.parent_or_size[a], a = x, self.parent_or_size[a]
        return x

    def size(self, a: int) -> int:
        return -self.parent_or_size[self.leader(a)]

    def groups(self):
        g = [[] for _ in range(self._n)]
        for i in range(self._n):
            g[self.leader(i)].append(i)
        return list(c for c in g if c)

n, m = map(int, input().split())
vdata = []
for _ in range(n):
    a, b = map(int, input().split())
    vdata.append((max(a - b, 0), b))
to = [[] for _ in range(n)]
for _ in range(m):
    u, v = map(int, input().split())
    u -= 1
    v -= 1
    to[u].append(v)
    to[v].append(u)
s = dsu(n)
dp = vdata.copy()
visited = [False] * n
for u in sorted(range(n), key=lambda i: vdata[i][0]):
    req, gain = vdata[u]
    frm = {u}
    for v in to[u]:
        if visited[v]:
            frm.add(s.leader(v))
    mnextra = 10 ** 18
    for v in frm:
        e, g = dp[v]
        e += max(req - (e + g), 0)
        if e < mnextra:
            mnextra, mni = e, v
    extra, tot_gain = mnextra, sum(dp[v][1] for v in frm)
    for v in frm:
        s.merge(u, v)
    dp[s.leader(u)] = extra, tot_gain
    visited[u] = True
ans = sum(dp[s.leader(0)])
print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'class' (ID: 1444)
  → Token d'amorce (pas de prédiction)

Token 1: ' d' (ID: 272)
  → Token d'amorce (pas de prédiction)

Token 2: 'su' (ID: 20634)
  → Token d'amorce (pas de prédiction)

Token 3: ':
' (ID: 734)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.2945025861263275
    2. ' {' → logprob: -1.41950261592865
    3. ':' → logprob: -4.6695027351379395
    4. '(' → logprob: -5.7945027351379395
    5. ' ' → logprob: -7.7945027351379395
    6. '.' → logprob: -8.419502258300781
    7. '```' → logprob: -9.669502258300781
    8. ';' → logprob: -10.419502258300781
    9. ' :' → logprob: -10.544502258300781
    10. '[' → logprob: -10.794502258300781

Token 4: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.23978328704833984
    2. '```' → logprob: -2.23978328704834
    3. '(' → logprob: -2.61478328704834
    4. ''' → logprob: -4.98978328704834
    5. '   ' → logprob: -4.98978328704834
    6. '.' → logprob: -5.73978328704834
    7. '_' → logprob: -6.11478328704834
    8. '`' → logprob: -6.11478328704834
    9. '():' → logprob: -6.48978328704834
    10. '``' → logprob: -6.48978328704834

Token 5: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1285638064146042
    2. '(' → logprob: -3.75356388092041
    3. ' ' → logprob: -3.87856388092041
    4. '```' → logprob: -3.87856388092041
    5. ' def' → logprob: -4.37856388092041
    6. 'def' (adapté à ' def') → logprob: -4.50356388092041
    7. '_' → logprob: -4.50356388092041
    8. '    ' → logprob: -5.62856388092041
    9. 'class' → logprob: -6.37856388092041
    10. '__' → logprob: -6.37856388092041

Token 6: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.024357879534363747
    2. '__' → logprob: -4.024357795715332
    3. ' ' → logprob: -5.649357795715332
    4. ' init' → logprob: -6.274357795715332
    5. ' ' → logprob: -8.649357795715332
    6. ' _' → logprob: -8.899357795715332
    7. 'init' → logprob: -9.024357795715332
    8. '_' → logprob: -10.024357795715332
    9. ' ‌' → logprob: -10.024357795715332
    10. ' initialize' → logprob: -10.524357795715332

Token 7: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -7.171581091824919e-05
    2. '_init' → logprob: -9.75007152557373
    3. ' init' → logprob: -11.25007152557373
    4. 'ini' → logprob: -16.500072479248047
    5. '_i' → logprob: -16.625072479248047
    6. '_' → logprob: -17.125072479248047
    7. '	init' → logprob: -17.250072479248047
    8. '_in' → logprob: -18.125072479248047
    9. '   ' → logprob: -19.000072479248047
    10. 'int' → logprob: -19.000072479248047

Token 8: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.29305171966552734
    2. '__' → logprob: -1.9180517196655273
    3. '(' → logprob: -2.2930517196655273
    4. '_' → logprob: -5.918051719665527
    5. '(self' → logprob: -6.043051719665527
    6. '__(
' → logprob: -7.668051719665527
    7. '__((' → logprob: -8.668051719665527
    8. '_(' → logprob: -9.293051719665527
    9. ' (' → logprob: -9.418051719665527
    10. '```' → logprob: -9.668051719665527

Token 9: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0004898841143585742
    2. ' self' → logprob: -7.625489711761475
    3. ')' → logprob: -13.750490188598633
    4. '(self' → logprob: -14.875490188598633
    5. ' ' → logprob: -15.375490188598633
    6. '_self' → logprob: -17.000490188598633
    7. ',self' → logprob: -17.125490188598633
    8. '       ' → logprob: -17.250490188598633
    9. '	self' → logprob: -17.250490188598633
    10. '[self' → logprob: -17.500490188598633

Token 10: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18337419629096985
    2. 'self' → logprob: -2.1833741664886475
    3. ' ,' → logprob: -3.6833741664886475
    4. ')' → logprob: -4.308374404907227
    5. ' self' → logprob: -4.433374404907227
    6. ' )' → logprob: -6.683374404907227
    7. ' ' → logprob: -6.683374404907227
    8. '(self' → logprob: -7.308374404907227
    9. ',self' → logprob: -7.433374404907227
    10. '<|end|>' → logprob: -8.433374404907227

Token 11: ' n' (ID: 297)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.2869236469268799
    2. 'self' → logprob: -1.6619236469268799
    3. ' parent' → logprob: -3.03692364692688
    4. ' n' → logprob: -5.036923408508301
    5. 'parent' → logprob: -5.786923408508301
    6. 'n' → logprob: -6.661923408508301
    7. ' size' → logprob: -8.4119234085083
    8. ' data' → logprob: -8.7869234085083
    9. ' parents' → logprob: -9.5369234085083
    10. '   ' → logprob: -9.5369234085083

Token 12: '=' (ID: 28)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.016139119863510132
    2. ')' → logprob: -4.141139030456543
    3. ':' → logprob: -9.766139030456543
    4. ',' → logprob: -10.641139030456543
    5. '):
' → logprob: -11.391139030456543
    6. ' ):' → logprob: -12.141139030456543
    7. '   ' → logprob: -13.016139030456543
    8. '_' → logprob: -14.391139030456543
    9. ' )' → logprob: -14.766139030456543
    10. '=' → logprob: -15.016139030456543

Token 13: '0' (ID: 15)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.8676609396934509
    2. '0' → logprob: -0.9926609396934509
    3. 'n' → logprob: -2.2426609992980957
    4. ' ' → logprob: -2.8676609992980957
    5. ' )' → logprob: -3.8676609992980957
    6. ' None' → logprob: -4.117660999298096
    7. '1' → logprob: -4.867660999298096
    8. ')' → logprob: -7.117660999298096
    9. '   ' → logprob: -8.492660522460938
    10. 'None' → logprob: -8.617660522460938

Token 14: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0011046138824895024
    2. ')' → logprob: -6.876104831695557
    3. ':' → logprob: -10.501104354858398
    4. ',' → logprob: -10.751104354858398
    5. '):
' → logprob: -11.126104354858398
    6. ' ):' → logprob: -11.876104354858398
    7. '   ' → logprob: -14.876104354858398
    8. '):
' → logprob: -16.0011043548584
    9. ')：' → logprob: -16.1261043548584
    10. ''):' → logprob: -16.5011043548584

Token 15: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.036295488476753235
    2. '   ' → logprob: -4.161295413970947
    3. 'self' → logprob: -4.911295413970947
    4. '    ' → logprob: -4.911295413970947
    5. '<|end|>' → logprob: -6.911295413970947
    6. 'n' → logprob: -7.036295413970947
    7. '        ' → logprob: -7.161295413970947
    8. ' ' → logprob: -7.411295413970947
    9. '        
' → logprob: -8.286295890808105
    10. ' self' → logprob: -8.286295890808105

Token 16: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.7456334829330444
    2. 'self' (adapté à ' self') → logprob: -0.9956334829330444
    3. '       ' → logprob: -1.8706334829330444
    4. ' super' → logprob: -6.995633602142334
    5. '   ' → logprob: -7.620633602142334
    6. ' ' → logprob: -8.370633125305176
    7. 'super' → logprob: -8.995633125305176
    8. '           ' → logprob: -9.745633125305176
    9. '```' → logprob: -9.745633125305176
    10. '        ' → logprob: -9.870633125305176

Token 17: '._' (ID: 2697)
  Prédit: '.n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.4828607738018036
    2. '.' → logprob: -1.607860803604126
    3. '.parent' → logprob: -1.857860803604126
    4. ' .' → logprob: -4.357860565185547
    5. '._' → logprob: -4.732860565185547
    6. '.data' → logprob: -5.982860565185547
    7. '.parents' → logprob: -6.982860565185547
    8. '.size' → logprob: -7.607860565185547
    9. '.nodes' → logprob: -7.982860565185547
    10. '.union' → logprob: -8.607860565185547

Token 18: 'n' (ID: 77)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.10606155544519424
    2. 'n' → logprob: -2.4810614585876465
    3. 'par' → logprob: -4.7310614585876465
    4. 'parents' → logprob: -5.6060614585876465
    5. 'size' → logprob: -5.8560614585876465
    6. '_parent' → logprob: -7.2310614585876465
    7. 'data' → logprob: -7.7310614585876465
    8. '_par' → logprob: -8.606061935424805
    9. 'p' → logprob: -9.856061935424805
    10. '_n' → logprob: -9.981061935424805

Token 19: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25242191553115845
    2. '=' → logprob: -1.5024218559265137
    3. '_' → logprob: -8.627422332763672
    4. '<|end|>' → logprob: -9.377422332763672
    5. ')' → logprob: -9.877422332763672
    6. '_=' → logprob: -10.377422332763672
    7. ',' → logprob: -10.627422332763672
    8. '_space' → logprob: -10.627422332763672
    9. ' ' → logprob: -10.752422332763672
    10. 'space' → logprob: -11.127422332763672

Token 20: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3133821487426758
    2. ' n' → logprob: -1.3133821487426758
    3. '0' → logprob: -9.063382148742676
    4. ' ' → logprob: -12.688382148742676
    5. '	n' → logprob: -14.188382148742676
    6. ' ' → logprob: -14.938382148742676
    7. '   ' → logprob: -15.188382148742676
    8. ')n' → logprob: -15.938382148742676
    9. '_n' → logprob: -16.18838119506836
    10. ' н' → logprob: -17.18838119506836

Token 21: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09188340604305267
    2. '<|end|>' → logprob: -2.591883420944214
    3. '       ' → logprob: -5.591883182525635
    4. ' 
' → logprob: -6.591883182525635
    5. ' ' → logprob: -6.716883182525635
    6. '  
' → logprob: -6.966883182525635
    7. '' → logprob: -7.091883182525635
    8. '    
' → logprob: -7.466883182525635
    9. '\n' → logprob: -7.466883182525635
    10. '```' → logprob: -7.466883182525635

Token 22: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6917691826820374
    2. '<|end|>' → logprob: -0.8167691826820374
    3. '       ' → logprob: -3.0667691230773926
    4. '   ' → logprob: -6.191769123077393
    5. ')' → logprob: -6.441769123077393
    6. ' ' → logprob: -6.816769123077393
    7. '```' → logprob: -7.066769123077393
    8. '<|end|>' → logprob: -7.316769123077393
    9. '        
' → logprob: -7.441769123077393
    10. ' 
' → logprob: -7.691769123077393

Token 23: ' self' (ID: 1051)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.24183854460716248
    2. '       ' → logprob: -1.7418385744094849
    3. '<|end|>' → logprob: -3.4918384552001953
    4. 'self' (adapté à ' self') → logprob: -5.491838455200195
    5. '
' → logprob: -7.116838455200195
    6. '        
' → logprob: -7.241838455200195
    7. '\n' → logprob: -7.241838455200195
    8. '   ' → logprob: -7.991838455200195
    9. '```' → logprob: -8.116838455200195
    10. '' → logprob: -8.116838455200195

Token 24: '.parent' (ID: 17454)
  Prédit: '._'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.38803836703300476
    2. '.' → logprob: -1.2630383968353271
    3. ' .' → logprob: -3.513038396835327
    4. '.parent' → logprob: -4.888038158416748
    5. '.data' → logprob: -7.763038158416748
    6. '.parents' → logprob: -8.138038635253906
    7. '.union' → logprob: -8.138038635253906
    8. ' ' → logprob: -9.763038635253906
    9. '.d' → logprob: -9.763038635253906
    10. '.__' → logprob: -10.013038635253906

Token 25: '_or' (ID: 15400)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.833977997303009
    2. ' =' → logprob: -0.833977997303009
    3. 's' → logprob: -2.5839779376983643
    4. '_' → logprob: -3.0839779376983643
    5. '[' → logprob: -5.583978176116943
    6. '=[]' → logprob: -6.333978176116943
    7. '[:]' → logprob: -6.333978176116943
    8. '[]' → logprob: -7.333978176116943
    9. '   ' → logprob: -7.833978176116943
    10. '_=' → logprob: -8.083977699279785

Token 26: '_size' (ID: 5044)
  Prédit: '_size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_size' → logprob: -0.48930639028549194
    2. 'size' → logprob: -0.9893063902854919
    3. 'Size' → logprob: -4.864306449890137
    4. 'sz' → logprob: -5.739306449890137
    5. '-size' → logprob: -6.364306449890137
    6. '-' → logprob: -7.239306449890137
    7. ' size' → logprob: -7.489306449890137
    8. '__' → logprob: -8.364306449890137
    9. 'rank' → logprob: -9.114306449890137
    10. '<size' → logprob: -9.114306449890137

Token 27: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519516050815582
    2. '=' → logprob: -1.5019515752792358
    3. ' ' → logprob: -11.251951217651367
    4. '[' → logprob: -12.501951217651367
    5. '   ' → logprob: -13.376951217651367
    6. '=[' → logprob: -13.501951217651367
    7. '[:]' → logprob: -14.126951217651367
    8. '=[]' → logprob: -14.251951217651367
    9. '  ' → logprob: -14.501951217651367
    10. ' =[' → logprob: -14.626951217651367

Token 28: ' [-' (ID: 20191)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.25789594650268555
    2. '[' → logprob: -2.2578959465026855
    3. ' [-' → logprob: -2.2578959465026855
    4. '[-' → logprob: -4.0078959465026855
    5. ' ' → logprob: -12.257896423339844
    6. '[n' → logprob: -12.382896423339844
    7. '[int' → logprob: -14.257896423339844
    8. '[self' → logprob: -14.382896423339844
    9. '   ' → logprob: -14.632896423339844
    10. '[:]' → logprob: -14.757896423339844

Token 29: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.875
    3. '１' → logprob: -18.625
    4. '۱' → logprob: -18.625
    5. '

' → logprob: -18.875
    6. 's' → logprob: -19.125
    7. '{' → logprob: -19.1875
    8. '2' → logprob: -19.1875
    9. '১' → logprob: -19.25
    10. '-' → logprob: -19.625

Token 30: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0037841659504920244
    2. ']*' → logprob: -5.8787841796875
    3. ' for' → logprob: -7.2537841796875
    4. ' ]' → logprob: -8.5037841796875
    5. ')' → logprob: -10.6287841796875
    6. ']*(' → logprob: -10.8787841796875
    7. 'for' → logprob: -11.6287841796875
    8. ',' → logprob: -12.2537841796875
    9. '']' → logprob: -13.1287841796875
    10. ' ' → logprob: -13.6287841796875

Token 31: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.17743965983390808
    2. ' *' → logprob: -1.9274396896362305
    3. '*n' → logprob: -4.3024396896362305
    4. ' ' → logprob: -6.6774396896362305
    5. ' for' → logprob: -7.0524396896362305
    6. '[' → logprob: -8.30243968963623
    7. '*(' → logprob: -8.80243968963623
    8. '0' → logprob: -8.80243968963623
    9. '*self' → logprob: -9.05243968963623
    10. '*[' → logprob: -9.05243968963623

Token 32: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.008637731894850731
    2. ' n' → logprob: -4.75863790512085
    3. 'self' → logprob: -11.133637428283691
    4. '(n' → logprob: -11.883637428283691
    5. '	n' → logprob: -13.758637428283691
    6. ' self' → logprob: -14.758637428283691
    7. ')n' → logprob: -15.883637428283691
    8. ' (' → logprob: -16.383638381958008
    9. '_n' → logprob: -17.508638381958008
    10. '(' → logprob: -17.883638381958008

Token 33: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.014898862689733505
    2. '

' → logprob: -5.639898777008057
    3. '<|end|>' → logprob: -5.639898777008057
    4. '   ' → logprob: -6.014898777008057
    5. 'def' → logprob: -6.389898777008057
    6. '    
' → logprob: -7.014898777008057
    7. '
' → logprob: -7.139898777008057
    8. '```' → logprob: -7.514898777008057
    9. '' → logprob: -8.264899253845215
    10. '\n' → logprob: -8.764899253845215

Token 34: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05514697730541229
    2. '   ' → logprob: -3.1801469326019287
    3. '    
' → logprob: -4.555147171020508
    4. ' 
' → logprob: -8.305147171020508
    5. '```' → logprob: -8.555147171020508
    6. '' → logprob: -8.680147171020508
    7. '\n' → logprob: -8.680147171020508
    8. '  
' → logprob: -9.055147171020508
    9. 'def' → logprob: -9.055147171020508
    10. '        
' → logprob: -9.305147171020508

Token 35: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.2138991802930832
    2. '   ' → logprob: -1.8388991355895996
    3. '
' → logprob: -4.4638991355896
    4. '    
' → logprob: -4.8388991355896
    5. ' def' → logprob: -4.9638991355896
    6. '```' → logprob: -5.5888991355896
    7. ' 
' → logprob: -6.9638991355896
    8. 'd' → logprob: -7.0888991355896
    9. ' ' → logprob: -7.3388991355896
    10. '  
' → logprob: -8.338899612426758

Token 36: ' merge' (ID: 20345)
  Prédit: ' find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.2968703806400299
    2. ' merge' → logprob: -1.4218703508377075
    3. ' unite' → logprob: -4.421870231628418
    4. ' ' → logprob: -7.046870231628418
    5. ' union' → logprob: -7.171870231628418
    6. 'find' → logprob: -7.296870231628418
    7. 'merge' → logprob: -7.296870231628418
    8. ' unify' → logprob: -8.546870231628418
    9. '   ' → logprob: -9.046870231628418
    10. ' size' → logprob: -9.421870231628418

Token 37: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.4296828806400299
    2. '(' → logprob: -1.0546828508377075
    3. ' (' → logprob: -7.429682731628418
    4. '(
' → logprob: -8.429682731628418
    5. '(s' → logprob: -10.054682731628418
    6. 'self' → logprob: -10.429682731628418
    7. '<|end|>' → logprob: -10.804682731628418
    8. ' ' → logprob: -11.054682731628418
    9. '(

' → logprob: -11.054682731628418
    10. '<|end|>' → logprob: -11.929682731628418

Token 38: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008131417445838451
    2. ' ,' → logprob: -6.008131504058838
    3. '(self' → logprob: -6.383131504058838
    4. ' (' → logprob: -6.758131504058838
    5. ')' → logprob: -6.883131504058838
    6. 'self' → logprob: -7.133131504058838
    7. '(' → logprob: -7.258131504058838
    8. ' ' → logprob: -9.25813102722168
    9. '_,' → logprob: -10.63313102722168
    10. '   ' → logprob: -10.63313102722168

Token 39: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.07900424301624298
    2. ' a' → logprob: -2.5790042877197266
    3. '   ' → logprob: -10.079004287719727
    4. '	a' → logprob: -10.954004287719727
    5. ')a' → logprob: -11.204004287719727
    6. ')' → logprob: -11.329004287719727
    7. ' ' → logprob: -11.829004287719727
    8. 'u' → logprob: -11.954004287719727
    9. '(a' → logprob: -12.454004287719727
    10. ' u' → logprob: -12.829004287719727

Token 40: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04301700368523598
    2. ' ,' → logprob: -3.1680169105529785
    3. ',b' → logprob: -11.668017387390137
    4. ',a' → logprob: -12.293017387390137
    5. ')' → logprob: -12.918017387390137
    6. ':' → logprob: -14.293017387390137
    7. ' ' → logprob: -15.293017387390137
    8. ',int' → logprob: -15.418017387390137
    9. '<|end|>' → logprob: -15.543017387390137
    10. 'a' → logprob: -15.793017387390137

Token 41: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.15065482258796692
    2. ' int' → logprob: -2.1506547927856445
    3. 'int' → logprob: -4.2756547927856445
    4. ' ,' → logprob: -5.2756547927856445
    5. ' a' → logprob: -6.7756547927856445
    6. ',' → logprob: -6.9006547927856445
    7. ' )' → logprob: -7.0256547927856445
    8. 'a' → logprob: -7.6506547927856445
    9. ')' → logprob: -7.7756547927856445
    10. ' ' → logprob: -8.900654792785645

Token 42: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005936028435826302
    2. ' ,' → logprob: -5.130936145782471
    3. ',a' → logprob: -12.880935668945312
    4. ',b' → logprob: -13.380935668945312
    5. '‌,' → logprob: -14.005935668945312
    6. ',int' → logprob: -14.255935668945312
    7. ')' → logprob: -14.630935668945312
    8. '<|end|>' → logprob: -14.880935668945312
    9. 'a' → logprob: -15.005935668945312
    10. '<|end|>' → logprob: -16.505935668945312

Token 43: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.006914644967764616
    2. 'b' → logprob: -5.0069146156311035
    3. ' ' → logprob: -8.631915092468262
    4. '<|end|>' → logprob: -11.256915092468262
    5. ')' → logprob: -13.006915092468262
    6. ' ' → logprob: -13.131915092468262
    7. '<|end|>' → logprob: -13.506915092468262
    8. ' )' → logprob: -13.756915092468262
    9. ' б' → logprob: -14.506915092468262
    10. ')b' → logprob: -15.381915092468262

Token 44: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3799496293067932
    2. ':' → logprob: -1.6299495697021484
    3. '):' → logprob: -2.1299495697021484
    4. ' )' → logprob: -7.254949569702148
    5. ' ):' → logprob: -7.504949569702148
    6. '):
' → logprob: -10.879949569702148
    7. ' :' → logprob: -11.629949569702148
    8. ' ' → logprob: -11.754949569702148
    9. '   ' → logprob: -11.879949569702148
    10. ':int' → logprob: -12.129949569702148

Token 45: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.4745936393737793
    2. 'int' → logprob: -0.9745936393737793
    3. ')' → logprob: -7.724593639373779
    4. ' )' → logprob: -9.724594116210938
    5. ':int' → logprob: -11.974594116210938
    6. '=int' → logprob: -12.849594116210938
    7. '<int' → logprob: -13.224594116210938
    8. ' ' → logprob: -13.474594116210938
    9. '[int' → logprob: -13.974594116210938
    10. ']int' → logprob: -14.849594116210938

Token 46: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008662313222885132
    2. '):' → logprob: -4.758662223815918
    3. ')->' → logprob: -10.508662223815918
    4. ' )' → logprob: -11.133662223815918
    5. '   ' → logprob: -12.758662223815918
    6. ' ):' → logprob: -13.883662223815918
    7. '):
' → logprob: -14.258662223815918
    8. '`)' → logprob: -14.508662223815918
    9. ':' → logprob: -15.758662223815918
    10. ' ' → logprob: -16.258663177490234

Token 47: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11485888808965683
    2. '):' → logprob: -2.239858865737915
    3. ')' → logprob: -7.239859104156494
    4. ')->' → logprob: -7.989859104156494
    5. '->' → logprob: -8.114858627319336
    6. ' ->' → logprob: -8.114858627319336
    7. ' :' → logprob: -8.239858627319336
    8. '       ' → logprob: -10.239858627319336
    9. '():' → logprob: -10.489858627319336
    10. '>:' → logprob: -11.364858627319336

Token 48: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.026303550228476524
    2. ' int' → logprob: -3.65130352973938
    3. ' ' → logprob: -13.4013032913208
    4. '  ' → logprob: -14.6513032913208
    5. '	int' → logprob: -14.7763032913208
    6. '[int' → logprob: -15.0263032913208
    7. '<int' → logprob: -15.4013032913208
    8. '   ' → logprob: -15.7763032913208
    9. 'in' → logprob: -16.276304244995117
    10. 'i' → logprob: -16.776304244995117

Token 49: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.25349533557891846
    2. '):' → logprob: -1.5034953355789185
    3. ')' → logprob: -7.878495216369629
    4. ' :' → logprob: -8.003495216369629
    5. '       ' → logprob: -8.128495216369629
    6. '():' → logprob: -8.503495216369629
    7. '):
' → logprob: -9.628495216369629
    8. '   ' → logprob: -9.878495216369629
    9. ',' → logprob: -10.128495216369629
    10. '<|end|>' → logprob: -10.128495216369629

Token 50: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03061494790017605
    2. '
' → logprob: -4.780614852905273
    3. '    ' → logprob: -5.405614852905273
    4. ' ' → logprob: -5.780614852905273
    5. '        ' → logprob: -5.905614852905273
    6. '   ' → logprob: -6.155614852905273
    7. '        
' → logprob: -6.405614852905273
    8. '<|end|>' → logprob: -6.530614852905273
    9. ')' → logprob: -6.655614852905273
    10. ':' → logprob: -7.155614852905273

Token 51: ' x' (ID: 1215)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.9800953269004822
    2. '       ' → logprob: -1.105095386505127
    3. 'a' → logprob: -1.230095386505127
    4. ' while' → logprob: -7.355095386505127
    5. '   ' → logprob: -8.605094909667969
    6. '        ' → logprob: -8.980094909667969
    7. '```' → logprob: -8.980094909667969
    8. '    ' → logprob: -9.605094909667969
    9. '        
' → logprob: -9.730094909667969
    10. 'while' → logprob: -11.105094909667969

Token 52: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009426552802324295
    2. ',' → logprob: -5.134426593780518
    3. '=' → logprob: -5.759426593780518
    4. ' ,' → logprob: -8.13442611694336
    5. ',y' → logprob: -10.88442611694336
    6. ' ' → logprob: -11.50942611694336
    7. ' =
' → logprob: -12.50942611694336
    8. ')' → logprob: -13.00942611694336
    9. ' ==' → logprob: -13.50942611694336
    10. '   ' → logprob: -13.50942611694336

Token 53: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.026427321135997772
    2. ' self' → logprob: -3.6514272689819336
    3. '       ' → logprob: -9.401427268981934
    4. 'a' → logprob: -10.526427268981934
    5. '(self' → logprob: -11.401427268981934
    6. '=self' → logprob: -13.276427268981934
    7. '   ' → logprob: -13.776427268981934
    8. ' a' → logprob: -13.776427268981934
    9. '	self' → logprob: -13.901427268981934
    10. '[self' → logprob: -14.651427268981934

Token 54: '.le' (ID: 27349)
  Prédit: '.parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.2053622603416443
    2. '.' → logprob: -1.705362319946289
    3. '.merge' → logprob: -6.080362319946289
    4. ' .' → logprob: -6.580362319946289
    5. '.find' → logprob: -8.705362319946289
    6. 'parent' → logprob: -10.080362319946289
    7. '.root' → logprob: -11.955362319946289
    8. ''.' → logprob: -12.455362319946289
    9. '.union' → logprob: -12.455362319946289
    10. '`.' → logprob: -12.580362319946289

Token 55: 'ader' (ID: 1372)
  Prédit: 'ader'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ader' → logprob: -0.12836816906929016
    2. 'ad' → logprob: -2.1283681392669678
    3. 'af' → logprob: -8.003368377685547
    4. 'a' → logprob: -8.253368377685547
    5. 'aders' → logprob: -8.253368377685547
    6. 'ade' → logprob: -8.628368377685547
    7. 'ading' → logprob: -9.003368377685547
    8. 'q' → logprob: -9.878368377685547
    9. 't' → logprob: -10.003368377685547
    10. 'nd' → logprob: -10.503368377685547

Token 56: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.002244342816993594
    2. '(' → logprob: -6.127244472503662
    3. '(x' → logprob: -9.752243995666504
    4. ' (' → logprob: -14.752243995666504
    5. '(
' → logprob: -15.377243995666504
    6. '(b' → logprob: -15.502243995666504
    7. '(A' → logprob: -17.37724494934082
    8. '```' → logprob: -17.37724494934082
    9. '((' → logprob: -17.62724494934082
    10. '[a' → logprob: -17.62724494934082

Token 57: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010129223810508847
    2. ')
' → logprob: -7.001012802124023
    3. ' )' → logprob: -9.376012802124023
    4. '       ' → logprob: -11.376012802124023
    5. ')
' → logprob: -13.001012802124023
    6. ' )
' → logprob: -14.251012802124023
    7. '),' → logprob: -14.376012802124023
    8. '   ' → logprob: -14.626012802124023
    9. '))' → logprob: -15.251012802124023
    10. ')`' → logprob: -15.501012802124023

Token 58: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8333161473274231
    2. '
' → logprob: -1.2083160877227783
    3. ')' → logprob: -2.0833160877227783
    4. '<|end|>' → logprob: -3.3333160877227783
    5. ' if' → logprob: -4.083316326141357
    6. ' 
' → logprob: -4.458316326141357
    7. ' ' → logprob: -4.458316326141357
    8. ')
' → logprob: -4.458316326141357
    9. '        
' → logprob: -5.333316326141357
    10. '        ' → logprob: -5.458316326141357

Token 59: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' (adapté à ' y') → logprob: -0.4403076469898224
    2. ' y' → logprob: -1.6903076171875
    3. '       ' → logprob: -2.9403076171875
    4. '
' → logprob: -2.9403076171875
    5. ' ' → logprob: -3.4403076171875
    6. '<|end|>' → logprob: -4.5653076171875
    7. '        ' → logprob: -5.0653076171875
    8. ' if' → logprob: -5.6903076171875
    9. ' 
' → logprob: -6.1903076171875
    10. '    ' → logprob: -6.8153076171875

Token 60: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0004890497075393796
    2. '=' → logprob: -7.625489234924316
    3. ' ' → logprob: -14.250489234924316
    4. ' =
' → logprob: -16.12548828125
    5. '<|end|>' → logprob: -16.37548828125
    6. ')' → logprob: -16.62548828125
    7. ' =)' → logprob: -18.00048828125
    8. ' ==' → logprob: -19.25048828125
    9. ' ' → logprob: -19.37548828125
    10. '<|end|>' → logprob: -19.37548828125

Token 61: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.6931741237640381
    2. 'self' → logprob: -0.6931741237640381
    3. '<|end|>' → logprob: -11.818174362182617
    4. '(self' → logprob: -11.943174362182617
    5. ' ' → logprob: -12.818174362182617
    6. ' ' → logprob: -12.943174362182617
    7. '	self' → logprob: -13.193174362182617
    8. '[self' → logprob: -13.568174362182617
    9. '       ' → logprob: -14.068174362182617
    10. 's' → logprob: -14.068174362182617

Token 62: '.le' (ID: 27349)
  Prédit: '.le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.le' → logprob: -2.5776860184123507e-06
    2. '.' → logprob: -13.00000286102295
    3. ' .' → logprob: -15.87500286102295
    4. 'leader' → logprob: -16.875001907348633
    5. '.Le' → logprob: -17.375001907348633
    6. '_le' → logprob: -18.375001907348633
    7. '>.' → logprob: -20.375001907348633
    8. '.leading' → logprob: -20.625001907348633
    9. '```' → logprob: -20.750001907348633
    10. ').' → logprob: -20.875001907348633

Token 63: 'ader' (ID: 1372)
  Prédit: 'ader'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ader' → logprob: -0.00032259183353744447
    2. 'a' → logprob: -8.375322341918945
    3. 'ade' → logprob: -9.875322341918945
    4. '   ' → logprob: -12.125322341918945
    5. 'ad' → logprob: -12.375322341918945
    6. '_' → logprob: -12.625322341918945
    7. '       ' → logprob: -12.750322341918945
    8. '-' → logprob: -12.875322341918945
    9. 'der' → logprob: -13.000322341918945
    10. '           ' → logprob: -13.500322341918945

Token 64: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.002189045073464513
    2. '(' → logprob: -6.1271891593933105
    3. '(y' → logprob: -13.127188682556152
    4. ' (' → logprob: -14.377188682556152
    5. 'b' → logprob: -14.502188682556152
    6. ')' → logprob: -15.252188682556152
    7. ')b' → logprob: -15.377188682556152
    8. ' b' → logprob: -16.12718963623047
    9. '(B' → logprob: -17.00218963623047
    10. '(
' → logprob: -17.00218963623047

Token 65: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.2762428822461516e-05
    2. ')
' → logprob: -9.875052452087402
    3. '<|end|>' → logprob: -14.375052452087402
    4. ')return' → logprob: -15.000052452087402
    5. ' )' → logprob: -16.25005340576172
    6. '))' → logprob: -17.00005340576172
    7. ')
' → logprob: -17.00005340576172
    8. ')

' → logprob: -17.00005340576172
    9. ')y' → logprob: -17.12505340576172
    10. '       ' → logprob: -17.12505340576172

Token 66: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.013499714434146881
    2. '<|end|>' → logprob: -4.388499736785889
    3. '       ' → logprob: -7.638499736785889
    4. '
' → logprob: -7.888499736785889
    5. '<|end|>' → logprob: -10.26349925994873
    6. '' → logprob: -10.76349925994873
    7. '\n' → logprob: -10.88849925994873
    8. ' if' → logprob: -11.26349925994873
    9. ' 
' → logprob: -11.76349925994873
    10. '  
' → logprob: -11.88849925994873

Token 67: ' if' (ID: 538)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09978631138801575
    2. '       ' → logprob: -2.7247862815856934
    3. ' if' → logprob: -4.349786281585693
    4. 'if' (adapté à ' if') → logprob: -4.474786281585693
    5. ' 
' → logprob: -6.349786281585693
    6. '        
' → logprob: -7.474786281585693
    7. '<|end|>' → logprob: -7.599786281585693
    8. '  
' → logprob: -7.724786281585693
    9. '
' → logprob: -7.974786281585693
    10. '\n' → logprob: -7.974786281585693

Token 68: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.2519303858280182
    2. 'x' → logprob: -1.5019303560256958
    3. '	x' → logprob: -14.001930236816406
    4. ' ' → logprob: -14.876930236816406
    5. '(x' → logprob: -16.251930236816406
    6. '  ' → logprob: -18.251930236816406
    7. '(' → logprob: -18.501930236816406
    8. ' ' → logprob: -18.626930236816406
    9. ')x' → logprob: -19.126930236816406
    10. '   ' → logprob: -19.251930236816406

Token 69: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.17989510297775269
    2. ' ==' → logprob: -1.8048951625823975
    3. '=' → logprob: -9.179895401000977
    4. '!=' → logprob: -11.054895401000977
    5. ' ' → logprob: -11.304895401000977
    6. '==
' → logprob: -11.804895401000977
    7. ']==' → logprob: -12.929895401000977
    8. ' !=' → logprob: -13.429895401000977
    9. ' ' → logprob: -13.429895401000977
    10. '===' → logprob: -13.554895401000977

Token 70: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.2519415020942688
    2. ' y' → logprob: -1.501941442489624
    3. '	y' → logprob: -11.501941680908203
    4. ' ' → logprob: -13.251941680908203
    5. ''y' → logprob: -16.001941680908203
    6. '    ' → logprob: -16.626941680908203
    7. '<|end|>' → logprob: -16.626941680908203
    8. '‘y' → logprob: -16.751941680908203
    9. ' 
' → logprob: -17.001941680908203
    10. ')y' → logprob: -17.251941680908203

Token 71: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005804836750030518
    2. ':return' → logprob: -5.755805015563965
    3. ' :' → logprob: -6.005805015563965
    4. ':
' → logprob: -8.755805015563965
    5. '):' → logprob: -14.880805015563965
    6. ' :
' → logprob: -15.005805015563965
    7. 'return' → logprob: -15.505805015563965
    8. '   ' → logprob: -15.755805015563965
    9. ' ' → logprob: -15.755805015563965
    10. ' return' → logprob: -16.38080406188965

Token 72: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1089697778224945
    2. ':' → logprob: -3.2339696884155273
    3. ':return' → logprob: -3.6089696884155273
    4. '
' → logprob: -3.8589696884155273
    5. ' return' → logprob: -4.858969688415527
    6. 'return' → logprob: -5.858969688415527
    7. '       ' → logprob: -6.233969688415527
    8. ':
' → logprob: -6.733969688415527
    9. ' ' → logprob: -7.483969688415527
    10. '   ' → logprob: -7.983969688415527

Token 73: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0968080461025238
    2. ' return' → logprob: -2.4718079566955566
    3. '           ' → logprob: -4.971807956695557
    4. '{return' → logprob: -8.346808433532715
    5. '       ' → logprob: -8.596808433532715
    6. ':return' → logprob: -8.846808433532715
    7. '-' → logprob: -9.221808433532715
    8. '
' → logprob: -9.971808433532715
    9. '```' → logprob: -9.971808433532715
    10. '   ' → logprob: -10.221808433532715

Token 74: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.023727906867861748
    2. 'y' → logprob: -4.148727893829346
    3. '-' → logprob: -5.148727893829346
    4. ' x' → logprob: -6.898727893829346
    5. ' -' → logprob: -7.523727893829346
    6. ' y' → logprob: -8.398728370666504
    7. ' ' → logprob: -10.148728370666504
    8. '-x' → logprob: -11.023728370666504
    9. '   ' → logprob: -11.148728370666504
    10. '  ' → logprob: -11.898728370666504

Token 75: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.15647372603416443
    2. ' 
' → logprob: -2.2814736366271973
    3. '        
' → logprob: -4.281473636627197
    4. '  
' → logprob: -4.406473636627197
    5. '<|end|>' → logprob: -4.656473636627197
    6. '       ' → logprob: -5.781473636627197
    7. '
' → logprob: -7.156473636627197
    8. '    
' → logprob: -7.281473636627197
    9. '```' → logprob: -7.406473636627197
    10. '' → logprob: -8.281474113464355

Token 76: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7171979546546936
    2. '<|end|>' → logprob: -1.3421978950500488
    3. '
' → logprob: -1.4671978950500488
    4. '        
' → logprob: -5.217197895050049
    5. 'if' → logprob: -5.342197895050049
    6. '```' → logprob: -5.842197895050049
    7. ' if' → logprob: -6.342197895050049
    8. ' 
' → logprob: -6.467197895050049
    9. '<|end|>' → logprob: -6.717197895050049
    10. '  
' → logprob: -7.217197895050049

Token 77: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5491742491722107
    2. ' if' → logprob: -0.9241742491722107
    3. '       ' → logprob: -3.6741743087768555
    4. '```' → logprob: -8.424174308776855
    5. '<|end|>' → logprob: -10.049174308776855
    6. '	if' → logprob: -10.799174308776855
    7. '        
' → logprob: -10.924174308776855
    8. ';if' → logprob: -10.924174308776855
    9. ' ' → logprob: -12.049174308776855
    10. 'If' → logprob: -12.674174308776855

Token 78: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.31806379556655884
    2. 'self' → logprob: -1.318063735961914
    3. ' -' → logprob: -6.443063735961914
    4. '-' → logprob: -6.818063735961914
    5. '-self' → logprob: -7.193063735961914
    6. '   ' → logprob: -7.568063735961914
    7. '       ' → logprob: -7.943063735961914
    8. '(self' → logprob: -8.193063735961914
    9. ' ' → logprob: -9.568063735961914
    10. '	self' → logprob: -10.318063735961914

Token 79: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.00014573395310435444
    2. '.' → logprob: -9.12514591217041
    3. 'parent' → logprob: -11.25014591217041
    4. '._' → logprob: -11.50014591217041
    5. ' .' → logprob: -11.87514591217041
    6. '	parent' → logprob: -13.62514591217041
    7. '.Parent' → logprob: -14.12514591217041
    8. '.root' → logprob: -14.25014591217041
    9. '.user' → logprob: -14.37514591217041
    10. '[parent' → logprob: -14.37514591217041

Token 80: '_or' (ID: 15400)
  Prédit: '_or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_or' → logprob: 0.0
    2. 'or' → logprob: -18.75
    3. 's' → logprob: -20.375
    4. '-or' → logprob: -21.625
    5. '	or' → logprob: -21.625
    6. '_' → logprob: -21.75
    7. '_of' → logprob: -21.75
    8. ' or' → logprob: -22.125
    9. '[_' → logprob: -22.25
    10. '_OR' → logprob: -22.25

Token 81: '_size' (ID: 5044)
  Prédit: '_size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_size' → logprob: -3.35706390615087e-05
    2. 'size' → logprob: -10.750033378601074
    3. '_s' → logprob: -12.000033378601074
    4. '_' → logprob: -13.000033378601074
    5. 's' → logprob: -13.500033378601074
    6. ' size' → logprob: -14.250033378601074
    7. '_sizes' → logprob: -15.125033378601074
    8. 'siz' → logprob: -15.125033378601074
    9. '_SIZE' → logprob: -15.375033378601074
    10. '[size' → logprob: -15.375033378601074

Token 82: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.000597712118178606
    2. '[y' → logprob: -8.000597953796387
    3. '[' → logprob: -8.250597953796387
    4. 'x' → logprob: -15.125597953796387
    5. '[
' → logprob: -15.500597953796387
    6. '[self' → logprob: -15.750597953796387
    7. '[s' → logprob: -16.00059700012207
    8. ' [' → logprob: -16.37559700012207
    9. '[a' → logprob: -16.87559700012207
    10. '[u' → logprob: -16.87559700012207

Token 83: ']' (ID: 60)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.6336145997047424
    2. ']' → logprob: -1.0086145401000977
    3. ']>' → logprob: -2.2586145401000977
    4. ' >' → logprob: -9.758614540100098
    5. ')>' → logprob: -11.508614540100098
    6. '']' → logprob: -11.508614540100098
    7. ' ]' → logprob: -11.758614540100098
    8. '()>' → logprob: -12.383614540100098
    9. '"]' → logprob: -12.883614540100098
    10. ')' → logprob: -13.008614540100098

Token 84: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.008653218857944012
    2. ' >' → logprob: -4.758653163909912
    3. '">' → logprob: -11.50865364074707
    4. ')' → logprob: -12.13365364074707
    5. '()>' → logprob: -12.13365364074707
    6. ')>' → logprob: -12.75865364074707
    7. ']>' → logprob: -12.88365364074707
    8. '>-' → logprob: -13.00865364074707
    9. ']' → logprob: -13.13365364074707
    10. '&gt' → logprob: -13.88365364074707

Token 85: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.014869848266243935
    2. ' self' → logprob: -4.389869689941406
    3. '<|end|>' → logprob: -6.389869689941406
    4. ' ' → logprob: -8.514869689941406
    5. '=self' → logprob: -8.764869689941406
    6. '  ' → logprob: -8.889869689941406
    7. '0' → logprob: -9.514869689941406
    8. '[self' → logprob: -10.764869689941406
    9. '=' → logprob: -10.764869689941406
    10. '	self' → logprob: -10.889869689941406

Token 86: '.parent' (ID: 17454)
  Prédit: '[x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.73094642162323
    2. '[y' → logprob: -0.73094642162323
    3. '[parent' → logprob: -3.8559465408325195
    4. '[' → logprob: -4.8559465408325195
    5. '.parent' → logprob: -5.9809465408325195
    6. 'y' → logprob: -6.3559465408325195
    7. '][' → logprob: -7.1059465408325195
    8. 'parent' → logprob: -7.3559465408325195
    9. ']' → logprob: -7.4809465408325195
    10. '_parent' → logprob: -7.6059465408325195

Token 87: '_or' (ID: 15400)
  Prédit: '_or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_or' → logprob: -3.292907877039397e-06
    2. 'or' → logprob: -12.87500286102295
    3. '[y' → logprob: -15.00000286102295
    4. '[x' → logprob: -16.000003814697266
    5. 'Or' → logprob: -16.625003814697266
    6. '```' → logprob: -17.750003814697266
    7. '   ' → logprob: -18.125003814697266
    8. '	or' → logprob: -18.375003814697266
    9. ' or' → logprob: -18.500003814697266
    10. ' ' → logprob: -18.625003814697266

Token 88: '_size' (ID: 5044)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.6931991577148438
    2. '_size' → logprob: -0.6931991577148438
    3. 'siz' → logprob: -10.443199157714844
    4. 's' → logprob: -11.693199157714844
    5. ' size' → logprob: -11.818199157714844
    6. 'sizei' → logprob: -12.943199157714844
    7. 'ize' → logprob: -13.818199157714844
    8. '	size' → logprob: -14.068199157714844
    9. '_' → logprob: -14.693199157714844
    10. '<size' → logprob: -14.818199157714844

Token 89: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.0015888927737250924
    2. '[' → logprob: -6.501588821411133
    3. '[x' → logprob: -9.751588821411133
    4. 'y' → logprob: -10.626588821411133
    5. '[
' → logprob: -13.376588821411133
    6. '```' → logprob: -14.001588821411133
    7. ' [' → logprob: -14.626588821411133
    8. ' y' → logprob: -15.501588821411133
    9. '<|end|>' → logprob: -15.751588821411133
    10. '[s' → logprob: -15.751588821411133

Token 90: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.196011021733284
    2. ']' → logprob: -1.8210110664367676
    3. ':' → logprob: -4.196011066436768
    4. '):' → logprob: -6.946011066436768
    5. '<|end|>' → logprob: -10.19601058959961
    6. ' :' → logprob: -11.32101058959961
    7. '[' → logprob: -11.57101058959961
    8. ')' → logprob: -11.82101058959961
    9. ' ]' → logprob: -11.94601058959961
    10. ']>' → logprob: -12.07101058959961

Token 91: '           ' (ID: 352)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5284860730171204
    2. ':' → logprob: -1.2784860134124756
    3. '<|end|>' → logprob: -2.5284860134124756
    4. ' :' → logprob: -4.028486251831055
    5. ')' → logprob: -4.278486251831055
    6. '	' → logprob: -5.778486251831055
    7. '       ' → logprob: -6.028486251831055
    8. '):' → logprob: -6.153486251831055
    9. '        ' → logprob: -6.278486251831055
    10. ',' → logprob: -6.403486251831055

Token 92: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.31071317195892334
    2. 'x' (adapté à ' x') → logprob: -1.6857131719589233
    3. ' ' → logprob: -2.560713291168213
    4. ' y' → logprob: -6.185713291168213
    5. ' )' → logprob: -7.435713291168213
    6. ')' → logprob: -7.560713291168213
    7. 'y' → logprob: -7.810713291168213
    8. ',' → logprob: -8.810712814331055
    9. '    ' → logprob: -9.060712814331055
    10. ' =' → logprob: -9.185712814331055

Token 93: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005109714809805155
    2. ',y' → logprob: -5.755109786987305
    3. ' ,' → logprob: -6.255109786987305
    4. ',x' → logprob: -12.130109786987305
    5. ' ' → logprob: -13.755109786987305
    6. ',b' → logprob: -13.880109786987305
    7. ',
' → logprob: -14.380109786987305
    8. 'y' → logprob: -14.630109786987305
    9. ' y' → logprob: -15.505109786987305
    10. ',s' → logprob: -16.505109786987305

Token 94: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.03806111589074135
    2. ' y' → logprob: -3.2880611419677734
    3. '<|end|>' → logprob: -10.913061141967773
    4. '	y' → logprob: -13.663061141967773
    5. ' ' → logprob: -15.413061141967773
    6. ')y' → logprob: -17.913061141967773
    7. ',y' → logprob: -17.913061141967773
    8. ''y' → logprob: -18.413061141967773
    9. '‘y' → logprob: -18.538061141967773
    10. '<|end|>' → logprob: -18.663061141967773

Token 95: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4742809534072876
    2. '=' → logprob: -0.9742809534072876
    3. '<|end|>' → logprob: -8.974281311035156
    4. ' ' → logprob: -9.599281311035156
    5. ',' → logprob: -11.974281311035156
    6. ' =
' → logprob: -14.224281311035156
    7. ' =)' → logprob: -14.474281311035156
    8. '<|end|>' → logprob: -14.849281311035156
    9. ')' → logprob: -15.349281311035156
    10. '=
' → logprob: -15.474281311035156

Token 96: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.004688106942921877
    2. 'y' → logprob: -5.754688262939453
    3. ' ' → logprob: -6.504688262939453
    4. ' ' → logprob: -11.754688262939453
    5. '<|end|>' → logprob: -13.004688262939453
    6. '	y' → logprob: -13.129688262939453
    7. '  ' → logprob: -15.629688262939453
    8. ' ' → logprob: -16.379688262939453
    9. ' 
' → logprob: -16.504688262939453
    10. ',y' → logprob: -16.629688262939453

Token 97: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005603004829026759
    2. ',x' → logprob: -7.625560283660889
    3. ' ,' → logprob: -9.875560760498047
    4. ' x' → logprob: -11.000560760498047
    5. ',
' → logprob: -13.125560760498047
    6. '<|end|>' → logprob: -13.500560760498047
    7. ' ' → logprob: -14.750560760498047
    8. 'x' → logprob: -15.250560760498047
    9. ',y' → logprob: -17.375560760498047
    10. '	x' → logprob: -18.125560760498047

Token 98: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.03804149478673935
    2. ' x' → logprob: -3.288041591644287
    3. ' ' → logprob: -17.288042068481445
    4. '	x' → logprob: -17.788042068481445
    5. ' 
' → logprob: -21.913042068481445
    6. ')x' → logprob: -22.163042068481445
    7. '<|end|>' → logprob: -22.163042068481445
    8. '"x' → logprob: -23.288042068481445
    9. '$x' → logprob: -23.288042068481445
    10. ''x' → logprob: -23.288042068481445

Token 99: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07698829472064972
    2. ' 
' → logprob: -3.3269882202148438
    3. '<|end|>' → logprob: -4.201988220214844
    4. '        
' → logprob: -4.826988220214844
    5. '  
' → logprob: -4.826988220214844
    6. '
' → logprob: -5.576988220214844
    7. '       ' → logprob: -6.201988220214844
    8. '\n' → logprob: -7.701988220214844
    9. 'newline' → logprob: -8.576988220214844
    10. '```' → logprob: -8.951988220214844

Token 100: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.203632652759552
    2. ' 
' → logprob: -2.2036325931549072
    3. '       ' → logprob: -3.2036325931549072
    4. '        
' → logprob: -4.453632831573486
    5. '  
' → logprob: -4.703632831573486
    6. '
' → logprob: -5.453632831573486
    7. '<|end|>' → logprob: -5.703632831573486
    8. '' → logprob: -6.703632831573486
    9. '\n' → logprob: -6.703632831573486
    10. ' ' → logprob: -7.453632831573486

Token 101: ' self' (ID: 1051)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2035650610923767
    2. '<|end|>' → logprob: -2.9535651206970215
    3. '       ' → logprob: -3.3285651206970215
    4. ' ' → logprob: -3.4535651206970215
    5. ' 
' → logprob: -3.5785651206970215
    6. '        
' → logprob: -4.7035651206970215
    7. '\n' → logprob: -4.8285651206970215
    8. '```' → logprob: -5.0785651206970215
    9. '  
' → logprob: -5.4535651206970215
    10. '' → logprob: -6.5785651206970215

Token 102: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -5.796184723294573e-06
    2. 'parent' → logprob: -13.000005722045898
    3. '.' → logprob: -13.375005722045898
    4. ' .' → logprob: -14.125005722045898
    5. '[parent' → logprob: -15.250005722045898
    6. '.user' → logprob: -15.375005722045898
    7. '`.' → logprob: -15.500005722045898
    8. '	parent' → logprob: -15.750005722045898
    9. '._' → logprob: -16.6250057220459
    10. '.Parent' → logprob: -16.7500057220459

Token 103: '_or' (ID: 15400)
  Prédit: '_or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_or' → logprob: -1.9361264946837764e-07
    2. '[_' → logprob: -17.25
    3. 'or' → logprob: -18.0
    4. '_of' → logprob: -18.0
    5. '_for' → logprob: -19.375
    6. '_' → logprob: -19.625
    7. '```' → logprob: -19.625
    8. ' _' → logprob: -19.875
    9. '._' → logprob: -20.125
    10. 'Or' → logprob: -20.25

Token 104: '_size' (ID: 5044)
  Prédit: '_size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_size' → logprob: -0.14295603334903717
    2. 'size' → logprob: -2.017956018447876
    3. ' size' → logprob: -8.767955780029297
    4. 's' → logprob: -10.017955780029297
    5. 'siz' → logprob: -10.517955780029297
    6. 'ysize' → logprob: -11.267955780029297
    7. 'sizei' → logprob: -11.517955780029297
    8. '_s' → logprob: -11.517955780029297
    9. '_' → logprob: -11.892955780029297
    10. 'esize' → logprob: -12.517955780029297

Token 105: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -4.084206375409849e-05
    2. '[' → logprob: -10.125041007995605
    3. ' [' → logprob: -15.125041007995605
    4. 'x' → logprob: -15.125041007995605
    5. ' x' → logprob: -16.75004005432129
    6. '[
' → logprob: -16.87504005432129
    7. '```' → logprob: -17.50004005432129
    8. '	x' → logprob: -18.87504005432129
    9. '[self' → logprob: -19.12504005432129
    10. '[y' → logprob: -19.12504005432129

Token 106: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.016112608835101128
    2. ']+=' → logprob: -4.141112804412842
    3. ']+' → logprob: -9.516112327575684
    4. '}' → logprob: -13.141112327575684
    5. ' ]' → logprob: -13.766112327575684
    6. ')' → logprob: -14.516112327575684
    7. '```' → logprob: -14.766112327575684
    8. '']' → logprob: -14.891112327575684
    9. '"]' → logprob: -15.516112327575684
    10. '+=' → logprob: -16.39111328125

Token 107: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.009627295657992363
    2. ']+=' → logprob: -4.759627342224121
    3. ' +=' → logprob: -7.259627342224121
    4. '```' → logprob: -8.759627342224121
    5. '	' → logprob: -10.134627342224121
    6. ']' → logprob: -10.384627342224121
    7. '+' → logprob: -11.009627342224121
    8. '=' → logprob: -11.009627342224121
    9. ']+' → logprob: -11.134627342224121
    10. '}' → logprob: -12.009627342224121

Token 108: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0009131324477493763
    2. ' self' → logprob: -7.000913143157959
    3. '	self' → logprob: -13.8759126663208
    4. '<|end|>' → logprob: -15.1259126663208
    5. '[self' → logprob: -15.6259126663208
    6. '(self' → logprob: -15.7509126663208
    7. ' ' → logprob: -16.875913619995117
    8. '=self' → logprob: -16.875913619995117
    9. '-self' → logprob: -17.125913619995117
    10. '   ' → logprob: -18.125913619995117

Token 109: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.006716436706483364
    2. 'parent' → logprob: -5.006716251373291
    3. ' parent' → logprob: -15.38171672821045
    4. '_parent' → logprob: -15.38171672821045
    5. '[parent' → logprob: -15.38171672821045
    6. '.' → logprob: -15.75671672821045
    7. '.user' → logprob: -15.88171672821045
    8. '	parent' → logprob: -16.006715774536133
    9. ' .' → logprob: -17.881715774536133
    10. '(parent' → logprob: -18.131715774536133

Token 110: '_or' (ID: 15400)
  Prédit: '_or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_or' → logprob: -1.4974866644479334e-05
    2. '_org' → logprob: -11.875015258789062
    3. '_' → logprob: -13.500015258789062
    4. '_os' → logprob: -13.625015258789062
    5. '_size' → logprob: -14.125015258789062
    6. 'or' → logprob: -14.125015258789062
    7. ' _' → logprob: -14.375015258789062
    8. '_of' → logprob: -14.750015258789062
    9. '_for' → logprob: -15.000015258789062
    10. '_on' → logprob: -15.125015258789062

Token 111: '_size' (ID: 5044)
  Prédit: '_size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_size' → logprob: -0.10207153856754303
    2. 'size' → logprob: -2.352071523666382
    3. 's' → logprob: -6.977071762084961
    4. '_s' → logprob: -8.477071762084961
    5. 'siz' → logprob: -8.477071762084961
    6. 'ize' → logprob: -9.227071762084961
    7. ' size' → logprob: -9.227071762084961
    8. 'ysize' → logprob: -9.352071762084961
    9. 'sizei' → logprob: -9.727071762084961
    10. 'y' → logprob: -10.727071762084961

Token 112: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -8.77627644513268e-06
    2. '[' → logprob: -12.000008583068848
    3. 'y' → logprob: -12.875008583068848
    4. '```' → logprob: -17.500009536743164
    5. '[
' → logprob: -18.125009536743164
    6. ' [' → logprob: -18.250009536743164
    7. '	y' → logprob: -18.500009536743164
    8. '[user' → logprob: -19.125009536743164
    9. ' y' → logprob: -19.250009536743164
    10. '(y' → logprob: -19.875009536743164

Token 113: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0021726242266595364
    2. ']
' → logprob: -6.377172470092773
    3. '<|end|>' → logprob: -8.377172470092773
    4. ' ]' → logprob: -8.502172470092773
    5. ']
' → logprob: -11.627172470092773
    6. ']

' → logprob: -12.002172470092773
    7. '       ' → logprob: -12.127172470092773
    8. ')' → logprob: -12.627172470092773
    9. '<|end|>' → logprob: -13.127172470092773
    10. '],' → logprob: -13.502172470092773

Token 114: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011346068233251572
    2. ' y' → logprob: -5.886345863342285
    3. 'self' → logprob: -6.261345863342285
    4. 'y' → logprob: -6.386345863342285
    5. ' 
' → logprob: -6.636345863342285
    6. ' self' → logprob: -6.636345863342285
    7. '        
' → logprob: -6.886345863342285
    8. '
' → logprob: -7.636345863342285
    9. '\' → logprob: -9.136345863342285
    10. '<|end|>' → logprob: -9.136345863342285

Token 115: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.02703283354640007
    2. '       ' → logprob: -4.152032852172852
    3. ' self' → logprob: -4.527032852172852
    4. 'parent' → logprob: -9.402032852172852
    5. '[self' → logprob: -10.527032852172852
    6. 'y' → logprob: -11.902032852172852
    7. '	self' → logprob: -12.902032852172852
    8. '   ' → logprob: -13.027032852172852
    9. '```' → logprob: -13.652032852172852
    10. 'x' → logprob: -14.277032852172852

Token 116: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.00017743845819495618
    2. '.' → logprob: -8.750177383422852
    3. '.user' → logprob: -11.500177383422852
    4. '[parent' → logprob: -12.625177383422852
    5. 'parent' → logprob: -12.750177383422852
    6. '>.' → logprob: -14.750177383422852
    7. '	parent' → logprob: -14.875177383422852
    8. '.Parent' → logprob: -14.875177383422852
    9. ' .' → logprob: -15.125177383422852
    10. '`.' → logprob: -15.250177383422852

Token 117: '_or' (ID: 15400)
  Prédit: '_or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_or' → logprob: -1.9361264946837764e-07
    2. 'or' → logprob: -17.625
    3. '_org' → logprob: -18.125
    4. '_for' → logprob: -18.25
    5. '_of' → logprob: -18.375
    6. ' or' → logprob: -19.125
    7. '_to' → logprob: -19.375
    8. '```' → logprob: -19.875
    9. 'self' → logprob: -20.0
    10. '_OR' → logprob: -20.0

Token 118: '_size' (ID: 5044)
  Prédit: '_size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_size' → logprob: -0.0010041086934506893
    2. 'size' → logprob: -7.001004219055176
    3. '_s' → logprob: -10.126004219055176
    4. 'siz' → logprob: -10.376004219055176
    5. 's' → logprob: -11.626004219055176
    6. '_' → logprob: -12.876004219055176
    7. 'ize' → logprob: -13.126004219055176
    8. ' size' → logprob: -13.751004219055176
    9. '_or' → logprob: -13.876004219055176
    10. '_si' → logprob: -13.876004219055176

Token 119: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.00029744720086455345
    2. '[' → logprob: -8.125297546386719
    3. 'y' → logprob: -15.000297546386719
    4. ' [' → logprob: -15.250297546386719
    5. '[
' → logprob: -15.875297546386719
    6. '][' → logprob: -15.875297546386719
    7. '```' → logprob: -15.875297546386719
    8. '[x' → logprob: -16.50029754638672
    9. ']' → logprob: -16.50029754638672
    10. '[user' → logprob: -16.87529754638672

Token 120: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00730501813814044
    2. '=' → logprob: -5.382305145263672
    3. ']=' → logprob: -6.132305145263672
    4. ' =' → logprob: -7.757305145263672
    5. ' ]' → logprob: -9.507305145263672
    6. ')' → logprob: -11.882305145263672
    7. ' ' → logprob: -15.757305145263672
    8. ')=' → logprob: -16.007305145263672
    9. '}' → logprob: -16.632305145263672
    10. ',' → logprob: -16.632305145263672

Token 121: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31327250599861145
    2. ' =' → logprob: -1.313272476196289
    3. '=x' → logprob: -11.563272476196289
    4. 'x' → logprob: -14.688272476196289
    5. ' ' → logprob: -15.563272476196289
    6. ')' → logprob: -16.31327247619629
    7. ')=' → logprob: -16.56327247619629
    8. ']=' → logprob: -16.81327247619629
    9. '=y' → logprob: -17.06327247619629
    10. '=cut' → logprob: -17.18827247619629

Token 122: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.048587486147880554
    2. ' x' → logprob: -3.0485875606536865
    3. '	x' → logprob: -16.173587799072266
    4. '$x' → logprob: -18.048587799072266
    5. ')x' → logprob: -18.548587799072266
    6. '<|end|>' → logprob: -18.798587799072266
    7. ' ' → logprob: -19.048587799072266
    8. '"x' → logprob: -19.048587799072266
    9. ''x' → logprob: -19.673587799072266
    10. '>x' → logprob: -19.923587799072266

Token 123: '
' (ID: 198)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -1.3845160007476807
    2. ' return' → logprob: -1.7595160007476807
    3. 'return' → logprob: -1.8845160007476807
    4. '       ' → logprob: -2.0095160007476807
    5. '
' → logprob: -2.3845160007476807
    6. '   ' → logprob: -2.8845160007476807
    7. '\n' → logprob: -3.0095160007476807
    8. '	return' → logprob: -3.5095160007476807
    9. '    
' → logprob: -3.7595160007476807
    10. '  
' → logprob: -4.134515762329102

Token 124: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11413746327161789
    2. '   ' → logprob: -2.6141374111175537
    3. ' return' → logprob: -4.489137649536133
    4. '<|end|>' → logprob: -5.114137649536133
    5. ' ' → logprob: -5.489137649536133
    6. 'return' → logprob: -5.614137649536133
    7. '        
' → logprob: -5.864137649536133
    8. '    
' → logprob: -6.739137649536133
    9. ' 
' → logprob: -6.739137649536133
    10. '	return' → logprob: -7.239137649536133

Token 125: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.06605628877878189
    2. ' return' → logprob: -2.816056251525879
    3. '       ' → logprob: -5.566056251525879
    4. '   ' → logprob: -8.816056251525879
    5. '	return' → logprob: -10.191056251525879
    6. ' 
' → logprob: -10.691056251525879
    7. ' ' → logprob: -11.441056251525879
    8. '        
' → logprob: -11.816056251525879
    9. 'y' → logprob: -12.066056251525879
    10. '```' → logprob: -12.441056251525879

Token 126: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0031777136027812958
    2. ' x' → logprob: -5.753177642822266
    3. '	x' → logprob: -18.753177642822266
    4. ' ' → logprob: -21.503177642822266
    5. '(x' → logprob: -22.378177642822266
    6. '   ' → logprob: -23.003177642822266
    7. '<x' → logprob: -23.378177642822266
    8. ')x' → logprob: -23.503177642822266
    9. '"x' → logprob: -23.753177642822266
    10. '[x' → logprob: -24.128177642822266

Token 127: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 128: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15667769312858582
    2. '
' → logprob: -2.906677722930908
    3. ' ' → logprob: -3.156677722930908
    4. '<|end|>' → logprob: -4.281677722930908
    5. ' 
' → logprob: -4.531677722930908
    6. '    
' → logprob: -4.656677722930908
    7. '  
' → logprob: -5.156677722930908
    8. '```' → logprob: -5.781677722930908
    9. '  ' → logprob: -6.406677722930908
    10. 'def' → logprob: -7.031677722930908

Token 129: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.14553037285804749
    2. '   ' → logprob: -2.5205304622650146
    3. '
' → logprob: -3.2705304622650146
    4. ' def' → logprob: -4.1455302238464355
    5. '    
' → logprob: -7.6455302238464355
    6. ' ' → logprob: -8.145530700683594
    7. '```' → logprob: -8.270530700683594
    8. ' 
' → logprob: -9.520530700683594
    9. '  
' → logprob: -10.145530700683594
    10. '  ' → logprob: -10.270530700683594

Token 130: ' same' (ID: 2684)
  Prédit: ' leader'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' leader' → logprob: -0.011270747520029545
    2. 'leader' → logprob: -4.511270523071289
    3. ' size' → logprob: -8.761270523071289
    4. ' ' → logprob: -9.886270523071289
    5. ' find' → logprob: -12.136270523071289
    6. ' lead' → logprob: -12.886270523071289
    7. ' parent' → logprob: -13.261270523071289
    8. '_le' → logprob: -13.886270523071289
    9. ' le' → logprob: -14.011270523071289
    10. 'size' → logprob: -14.261270523071289

Token 131: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.043151166290044785
    2. '(self' → logprob: -3.1681511402130127
    3. '(a' → logprob: -9.293150901794434
    4. ')' → logprob: -11.293150901794434
    5. ' (' → logprob: -11.418150901794434
    6. '(
' → logprob: -12.043150901794434
    7. '(x' → logprob: -12.418150901794434
    8. '_' → logprob: -12.418150901794434
    9. '()' → logprob: -12.793150901794434
    10. '(

' → logprob: -12.918150901794434

Token 132: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.46238014101982117
    2. '(self' → logprob: -1.0873801708221436
    3. ')(' → logprob: -3.9623801708221436
    4. '(' → logprob: -4.9623799324035645
    5. ',' → logprob: -5.0873799324035645
    6. ' (' → logprob: -7.9623799324035645
    7. 'self' → logprob: -8.587380409240723
    8. '   ' → logprob: -9.087380409240723
    9. ' ' → logprob: -9.837380409240723
    10. '(a' → logprob: -10.212380409240723

Token 133: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.014243659563362598
    2. ' a' → logprob: -4.2642436027526855
    3. '   ' → logprob: -9.514244079589844
    4. '	a' → logprob: -13.264244079589844
    5. ' ' → logprob: -13.389244079589844
    6. 'x' → logprob: -14.139244079589844
    7. 'self' → logprob: -14.139244079589844
    8. ')' → logprob: -14.389244079589844
    9. '  ' → logprob: -14.889244079589844
    10. ')a' → logprob: -15.764244079589844

Token 134: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007507824921049178
    2. ' ,' → logprob: -7.25075101852417
    3. ',b' → logprob: -10.250750541687012
    4. ':' → logprob: -12.250750541687012
    5. ',int' → logprob: -14.875750541687012
    6. ',a' → logprob: -16.000751495361328
    7. ':int' → logprob: -16.125751495361328
    8. ',
' → logprob: -17.250751495361328
    9. ',y' → logprob: -17.875751495361328
    10. '   ' → logprob: -18.125751495361328

Token 135: ' int' (ID: 677)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.7286337614059448
    2. 'int' → logprob: -0.9786337614059448
    3. ' b' → logprob: -2.4786338806152344
    4. ' int' → logprob: -2.8536338806152344
    5. '   ' → logprob: -9.478633880615234
    6. ' ' → logprob: -10.853633880615234
    7. '  ' → logprob: -12.353633880615234
    8. ':int' → logprob: -12.603633880615234
    9. ',int' → logprob: -12.978633880615234
    10. '    ' → logprob: -12.978633880615234

Token 136: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.463036435074173e-05
    2. ' ,' → logprob: -10.625024795532227
    3. ',b' → logprob: -15.125024795532227
    4. ',int' → logprob: -18.000024795532227
    5. ',
' → logprob: -18.500024795532227
    6. ',a' → logprob: -18.875024795532227
    7. ')' → logprob: -19.750024795532227
    8. '‌,' → logprob: -20.125024795532227
    9. '   ' → logprob: -20.750024795532227
    10. ',

' → logprob: -20.750024795532227

Token 137: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.3132627606391907
    2. ' b' → logprob: -1.313262701034546
    3. '   ' → logprob: -14.063262939453125
    4. ' ' → logprob: -16.688262939453125
    5. '	b' → logprob: -16.688262939453125
    6. '  ' → logprob: -17.813262939453125
    7. '    ' → logprob: -17.938262939453125
    8. ')b' → logprob: -18.438262939453125
    9. 'int' → logprob: -18.688262939453125
    10. ' б' → logprob: -19.313262939453125

Token 138: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0038106455467641354
    2. '):' → logprob: -5.628810882568359
    3. ':' → logprob: -9.00381088256836
    4. ' )' → logprob: -9.50381088256836
    5. '   ' → logprob: -12.12881088256836
    6. ',' → logprob: -12.50381088256836
    7. ' ):' → logprob: -13.12881088256836
    8. '):
' → logprob: -13.62881088256836
    9. ' ' → logprob: -15.62881088256836
    10. '`)' → logprob: -15.87881088256836

Token 139: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.04303013160824776
    2. ' int' → logprob: -3.168030023574829
    3. ')' → logprob: -10.91802978515625
    4. '   ' → logprob: -12.29302978515625
    5. ' ' → logprob: -12.79302978515625
    6. ' )' → logprob: -13.54302978515625
    7. ':int' → logprob: -13.54302978515625
    8. '[int' → logprob: -14.04302978515625
    9. '  ' → logprob: -14.54302978515625
    10. '(int' → logprob: -14.91802978515625

Token 140: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.7729658540920354e-05
    2. '):' → logprob: -10.625027656555176
    3. ' )' → logprob: -12.750027656555176
    4. '`)' → logprob: -15.750027656555176
    5. ')->' → logprob: -16.375028610229492
    6. ':' → logprob: -16.375028610229492
    7. '):
' → logprob: -16.500028610229492
    8. '   ' → logprob: -17.500028610229492
    9. ')`' → logprob: -17.500028610229492
    10. ')
' → logprob: -17.625028610229492

Token 141: ' ->' (ID: 2747)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2929152250289917
    2. ':' → logprob: -1.4179152250289917
    3. '):' → logprob: -5.042915344238281
    4. '->' → logprob: -6.292915344238281
    5. ')->' → logprob: -6.417915344238281
    6. ' ->' → logprob: -6.417915344238281
    7. '   ' → logprob: -9.792915344238281
    8. '>' → logprob: -10.667915344238281
    9. '       ' → logprob: -11.417915344238281
    10. ' :' → logprob: -11.917915344238281

Token 142: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.4741024672985077
    2. ' bool' → logprob: -0.9741024971008301
    3. ' ' → logprob: -11.349102020263672
    4. 'int' → logprob: -11.724102020263672
    5. '   ' → logprob: -13.599102020263672
    6. ' int' → logprob: -14.224102020263672
    7. '  ' → logprob: -14.474102020263672
    8. ' True' → logprob: -14.474102020263672
    9. '(bool' → logprob: -14.474102020263672
    10. 'True' → logprob: -14.599102020263672

Token 143: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -7.44574936106801e-05
    2. '):' → logprob: -9.87507438659668
    3. ':
' → logprob: -11.12507438659668
    4. ' :' → logprob: -13.50007438659668
    5. '():' → logprob: -13.50007438659668
    6. ',' → logprob: -13.75007438659668
    7. ':return' → logprob: -13.75007438659668
    8. ')' → logprob: -14.00007438659668
    9. ':def' → logprob: -14.25007438659668
    10. ':**' → logprob: -14.25007438659668

Token 144: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5675003528594971
    2. '<|end|>' → logprob: -1.192500352859497
    3. '   ' → logprob: -2.942500352859497
    4. ' 
' → logprob: -3.317500352859497
    5. ' ' → logprob: -3.692500352859497
    6. '    ' → logprob: -4.692500114440918
    7. '    
' → logprob: -6.692500114440918
    8. '  
' → logprob: -7.067500114440918
    9. '  ' → logprob: -7.567500114440918
    10. ' return' → logprob: -7.817500114440918

Token 145: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.005466047674417496
    2. ' return' → logprob: -5.255465984344482
    3. '
' → logprob: -9.13046646118164
    4. '       ' → logprob: -9.13046646118164
    5. '	return' → logprob: -11.50546646118164
    6. 'self' → logprob: -13.25546646118164
    7. '{return' → logprob: -13.75546646118164
    8. ':return' → logprob: -13.75546646118164
    9. '        
' → logprob: -15.00546646118164
    10. '```' → logprob: -15.25546646118164

Token 146: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.38687339425086975
    2. ' self' → logprob: -1.1368733644485474
    3. '(self' → logprob: -13.386873245239258
    4. '	self' → logprob: -15.011873245239258
    5. '   ' → logprob: -15.261873245239258
    6. '[self' → logprob: -15.636873245239258
    7. '
' → logprob: -16.886873245239258
    8. ' ' → logprob: -17.511873245239258
    9. '```' → logprob: -18.386873245239258
    10. 'Self' → logprob: -19.136873245239258

Token 147: '.le' (ID: 27349)
  Prédit: '.le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.le' → logprob: -0.0015316474018618464
    2. '.same' → logprob: -6.501531600952148
    3. '.parent' → logprob: -10.626531600952148
    4. '.' → logprob: -12.876531600952148
    5. ' .' → logprob: -14.126531600952148
    6. '.leading' → logprob: -14.251531600952148
    7. '.Le' → logprob: -14.251531600952148
    8. 'leader' → logprob: -16.25153160095215
    9. '._' → logprob: -16.25153160095215
    10. '.self' → logprob: -17.12653160095215

Token 148: 'ader' (ID: 1372)
  Prédit: 'ader'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ader' → logprob: -1.652451464906335e-05
    2. 'a' → logprob: -11.875016212463379
    3. '._' → logprob: -13.125016212463379
    4. 'ad' → logprob: -13.250016212463379
    5. '.' → logprob: -14.250016212463379
    6. 'leader' → logprob: -14.250016212463379
    7. '.a' → logprob: -14.625016212463379
    8. '.__' → logprob: -14.625016212463379
    9. '.le' → logprob: -14.875016212463379
    10. '_' → logprob: -14.875016212463379

Token 149: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0004307884373702109
    2. '(' → logprob: -7.750430583953857
    3. '(
' → logprob: -16.125431060791016
    4. '((' → logprob: -17.250431060791016
    5. ' (' → logprob: -17.250431060791016
    6. '(

' → logprob: -17.750431060791016
    7. '(b' → logprob: -18.625431060791016
    8. '```' → logprob: -19.250431060791016
    9. 'a' → logprob: -20.000431060791016
    10. '(A' → logprob: -20.250431060791016

Token 150: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.143808109802194e-05
    2. ')==' → logprob: -10.375041007995605
    3. ' )' → logprob: -11.500041007995605
    4. '==' → logprob: -16.875041961669922
    5. '()' → logprob: -17.875041961669922
    6. ']' → logprob: -17.875041961669922
    7. '(' → logprob: -18.250041961669922
    8. ')
' → logprob: -18.250041961669922
    9. ']==' → logprob: -18.750041961669922
    10. '(a' → logprob: -18.750041961669922

Token 151: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2261505424976349
    2. '==' → logprob: -1.6011505126953125
    3. '=' → logprob: -7.6011505126953125
    4. '()==' → logprob: -9.101150512695312
    5. '()' → logprob: -9.601150512695312
    6. ' ' → logprob: -11.476150512695312
    7. ')==' → logprob: -11.476150512695312
    8. ' =' → logprob: -11.601150512695312
    9. ')' → logprob: -11.601150512695312
    10. ' ' → logprob: -11.976150512695312

Token 152: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.011054305359721184
    2. ' self' → logprob: -4.511054515838623
    3. '(self' → logprob: -13.261054039001465
    4. '   ' → logprob: -13.511054039001465
    5. ' ' → logprob: -13.761054039001465
    6. '	self' → logprob: -13.886054039001465
    7. ' ' → logprob: -14.886054039001465
    8. '  ' → logprob: -15.011054039001465
    9. '    ' → logprob: -15.386054039001465
    10. '       ' → logprob: -15.511054039001465

Token 153: '.le' (ID: 27349)
  Prédit: '.le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.le' → logprob: -0.0007687712204642594
    2. 'leader' → logprob: -7.250768661499023
    3. '.' → logprob: -9.750768661499023
    4. 'le' → logprob: -14.500768661499023
    5. '.Le' → logprob: -16.875768661499023
    6. ' .' → logprob: -17.500768661499023
    7. '_le' → logprob: -17.625768661499023
    8. '.leading' → logprob: -18.375768661499023
    9. ' leader' → logprob: -19.000768661499023
    10. '-le' → logprob: -19.625768661499023

Token 154: 'ader' (ID: 1372)
  Prédit: 'ader'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ader' → logprob: -6.988221684878226e-06
    2. 'a' → logprob: -13.000006675720215
    3. 'der' → logprob: -13.500006675720215
    4. 'r' → logprob: -14.125006675720215
    5. 'leader' → logprob: -14.125006675720215
    6. 'ad' → logprob: -14.750006675720215
    7. 'ade' → logprob: -14.875006675720215
    8. '(' → logprob: -15.625006675720215
    9. 'arder' → logprob: -15.750006675720215
    10. 'aler' → logprob: -15.875006675720215

Token 155: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.0005576779949478805
    2. '(' → logprob: -7.500557899475098
    3. ' (' → logprob: -12.625557899475098
    4. '(
' → logprob: -14.250557899475098
    5. '(a' → logprob: -14.750557899475098
    6. 'b' → logprob: -15.375557899475098
    7. '((' → logprob: -17.50055694580078
    8. '(

' → logprob: -17.62555694580078
    9. '(y' → logprob: -17.75055694580078
    10. ' ' → logprob: -17.87555694580078

Token 156: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4855663721391466e-05
    2. ')
' → logprob: -11.250015258789062
    3. '<|end|>' → logprob: -14.250015258789062
    4. ' )' → logprob: -14.625015258789062
    5. ')return' → logprob: -15.750015258789062
    6. ')

' → logprob: -16.500015258789062
    7. '}' → logprob: -16.750015258789062
    8. '())' → logprob: -17.000015258789062
    9. '   ' → logprob: -17.125015258789062
    10. '))' → logprob: -17.375015258789062

Token 157: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014973784796893597
    2. '
' → logprob: -4.7649736404418945
    3. '```' → logprob: -6.1399736404418945
    4. 'def' → logprob: -6.5149736404418945
    5. ' 
' → logprob: -7.0149736404418945
    6. ' def' → logprob: -7.1399736404418945
    7. ' ' → logprob: -7.6399736404418945
    8. '    
' → logprob: -8.139973640441895
    9. '  ' → logprob: -9.389973640441895
    10. '  
' → logprob: -10.139973640441895

Token 158: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0067301723174750805
    2. ' def' → logprob: -5.256730079650879
    3. '   ' → logprob: -6.506730079650879
    4. ' ' → logprob: -14.131730079650879
    5. '
' → logprob: -14.756730079650879
    6. '    
' → logprob: -15.381730079650879
    7. ' 
' → logprob: -15.381730079650879
    8. '```' → logprob: -15.631730079650879
    9. '  ' → logprob: -16.006731033325195
    10. '	def' → logprob: -17.381731033325195

Token 159: ' leader' (ID: 12554)
  Prédit: ' leader'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' leader' → logprob: -0.014180204831063747
    2. 'leader' → logprob: -4.2641801834106445
    3. ' ' → logprob: -12.014180183410645
    4. ' lead' → logprob: -13.014180183410645
    5. ' def' → logprob: -13.139180183410645
    6. '_le' → logprob: -13.264180183410645
    7. ' leaderboard' → logprob: -14.014180183410645
    8. ' lider' → logprob: -14.389180183410645
    9. '  ' → logprob: -14.639180183410645
    10. 'lead' → logprob: -14.639180183410645

Token 160: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0011720098555088043
    2. '(' → logprob: -6.751172065734863
    3. '(
' → logprob: -14.376172065734863
    4. 'self' → logprob: -14.376172065734863
    5. '<|end|>' → logprob: -15.376172065734863
    6. ' (' → logprob: -15.501172065734863
    7. '(s' → logprob: -16.126171112060547
    8. '   ' → logprob: -16.376171112060547
    9. ' self' → logprob: -17.251171112060547
    10. ' ' → logprob: -17.251171112060547

Token 161: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0038434250745922327
    2. ',' → logprob: -6.503843307495117
    3. 'self' → logprob: -6.503843307495117
    4. ')' → logprob: -7.628843307495117
    5. ')(' → logprob: -8.878843307495117
    6. '(' → logprob: -9.003843307495117
    7. ' self' → logprob: -10.378843307495117
    8. ',self' → logprob: -10.878843307495117
    9. '   ' → logprob: -11.003843307495117
    10. '<|end|>' → logprob: -12.128843307495117

Token 162: ' a' (ID: 261)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0893913060426712
    2. ' self' → logprob: -2.4643912315368652
    3. '   ' → logprob: -7.964391231536865
    4. 'a' → logprob: -9.839391708374023
    5. ' ' → logprob: -10.214391708374023
    6. ' a' → logprob: -12.089391708374023
    7. '	self' → logprob: -12.839391708374023
    8. '       ' → logprob: -13.339391708374023
    9. '  ' → logprob: -13.464391708374023
    10. '(self' → logprob: -14.339391708374023

Token 163: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.09402436017990112
    2. ')' → logprob: -2.844024419784546
    3. ':' → logprob: -3.469024419784546
    4. '):
' → logprob: -8.094024658203125
    5. ' ):' → logprob: -10.344024658203125
    6. ':int' → logprob: -10.469024658203125
    7. '   ' → logprob: -10.719024658203125
    8. ' )' → logprob: -12.719024658203125
    9. ' ' → logprob: -13.719024658203125
    10. '```' → logprob: -13.844024658203125

Token 164: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.16022473573684692
    2. ' int' → logprob: -1.9102246761322021
    3. ':int' → logprob: -15.535224914550781
    4. ')' → logprob: -15.660224914550781
    5. ' ' → logprob: -15.910224914550781
    6. '[int' → logprob: -16.53522491455078
    7. '(int' → logprob: -16.91022491455078
    8. '   ' → logprob: -17.16022491455078
    9. '<int' → logprob: -17.91022491455078
    10. '=int' → logprob: -18.66022491455078

Token 165: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3869638442993164
    2. ')' → logprob: -1.1369638442993164
    3. ' ):' → logprob: -10.136963844299316
    4. '):
' → logprob: -10.386963844299316
    5. ' )' → logprob: -11.011963844299316
    6. ':' → logprob: -12.261963844299316
    7. ')->' → logprob: -15.011963844299316
    8. '   ' → logprob: -15.261963844299316
    9. '):
' → logprob: -15.761963844299316
    10. '():' → logprob: -16.636962890625

Token 166: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0012755923671647906
    2. ' :' → logprob: -6.876275539398193
    3. '):' → logprob: -8.876276016235352
    4. '():' → logprob: -9.251276016235352
    5. ':
' → logprob: -12.626276016235352
    6. '>:' → logprob: -13.626276016235352
    7. ')' → logprob: -14.751276016235352
    8. ':**' → logprob: -15.001276016235352
    9. ']:' → logprob: -15.251276016235352
    10. ' ->' → logprob: -15.376276016235352

Token 167: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.061968132853507996
    2. ' int' → logprob: -2.8119680881500244
    3. ' ' → logprob: -15.436967849731445
    4. '(int' → logprob: -15.936967849731445
    5. 'self' → logprob: -16.561967849731445
    6. '[int' → logprob: -16.561967849731445
    7. '   ' → logprob: -18.436967849731445
    8. ' self' → logprob: -18.436967849731445
    9. '<int' → logprob: -18.686967849731445
    10. '	int' → logprob: -18.811967849731445

Token 168: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0012920241570100188
    2. ':
' → logprob: -6.7512922286987305
    3. '):' → logprob: -9.37629222869873
    4. '):
' → logprob: -11.25129222869873
    5. '():' → logprob: -11.62629222869873
    6. ' :' → logprob: -12.00129222869873
    7. '<|end|>' → logprob: -13.00129222869873
    8. '():
' → logprob: -13.50129222869873
    9. ',' → logprob: -13.87629222869873
    10. '       ' → logprob: -14.12629222869873

Token 169: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.038645289838314056
    2. '   ' → logprob: -3.5386452674865723
    3. '
' → logprob: -5.663645267486572
    4. ' if' → logprob: -6.288645267486572
    5. ' 
' → logprob: -6.663645267486572
    6. '    ' → logprob: -7.413645267486572
    7. ' ' → logprob: -8.16364574432373
    8. '<|end|>' → logprob: -8.66364574432373
    9. ' while' → logprob: -8.78864574432373
    10. 'n' → logprob: -8.78864574432373

Token 170: ' x' (ID: 1215)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3412170708179474
    2. 'p' → logprob: -1.341217041015625
    3. ' if' → logprob: -3.716217041015625
    4. 'while' → logprob: -6.466217041015625
    5. '   ' → logprob: -6.966217041015625
    6. ' p' → logprob: -8.091217041015625
    7. '       ' → logprob: -8.091217041015625
    8. ' while' → logprob: -9.216217041015625
    9. 'parent' → logprob: -11.091217041015625
    10. '	if' → logprob: -12.341217041015625

Token 171: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04859248176217079
    2. '=' → logprob: -3.0485925674438477
    3. '=self' → logprob: -12.798592567443848
    4. ' ' → logprob: -13.798592567443848
    5. ',' → logprob: -14.298592567443848
    6. '   ' → logprob: -15.673592567443848
    7. '=a' → logprob: -16.17359161376953
    8. ' ==' → logprob: -16.17359161376953
    9. '=int' → logprob: -16.54859161376953
    10. ':' → logprob: -16.79859161376953

Token 172: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -3.547789674485102e-05
    2. ' a' → logprob: -10.375035285949707
    3. 'self' → logprob: -12.500035285949707
    4. '	a' → logprob: -15.500035285949707
    5. '   ' → logprob: -16.000036239624023
    6. ' ' → logprob: -16.250036239624023
    7. ' self' → logprob: -17.625036239624023
    8. '
' → logprob: -17.875036239624023
    9. '    
' → logprob: -17.875036239624023
    10. '```' → logprob: -18.125036239624023

Token 173: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03931600973010063
    2. 'while' → logprob: -3.289315938949585
    3. 'if' → logprob: -7.414316177368164
    4. ' while' → logprob: -7.664316177368164
    5. ' if' → logprob: -9.789316177368164
    6. '       ' → logprob: -10.039316177368164
    7. '
' → logprob: -10.414316177368164
    8. '        
' → logprob: -10.414316177368164
    9. ' 
' → logprob: -10.789316177368164
    10. '	while' → logprob: -11.539316177368164

Token 174: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6728003621101379
    2. 'while' → logprob: -1.0478003025054932
    3. '       ' → logprob: -2.047800302505493
    4. ' while' → logprob: -4.797800540924072
    5. '	while' → logprob: -6.672800540924072
    6. '        
' → logprob: -8.422800064086914
    7. 'if' → logprob: -9.172800064086914
    8. ' 
' → logprob: -9.547800064086914
    9. ' if' → logprob: -11.172800064086914
    10. '   ' → logprob: -11.297800064086914

Token 175: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.0822158232331276
    2. ' while' → logprob: -2.8322157859802246
    3. '       ' → logprob: -4.082215785980225
    4. '
' → logprob: -5.832215785980225
    5. '	while' → logprob: -8.457216262817383
    6. '   ' → logprob: -11.082216262817383
    7. ' 
' → logprob: -12.082216262817383
    8. '        
' → logprob: -12.582216262817383
    9. 'While' → logprob: -12.707216262817383
    10. '           ' → logprob: -14.207216262817383

Token 176: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.012521075084805489
    2. ' self' → logprob: -4.387521266937256
    3. ' ' → logprob: -13.137520790100098
    4. '   ' → logprob: -13.137520790100098
    5. '	self' → logprob: -13.137520790100098
    6. '
' → logprob: -13.387520790100098
    7. '0' → logprob: -13.637520790100098
    8. '(self' → logprob: -13.637520790100098
    9. '       ' → logprob: -14.137520790100098
    10. '           ' → logprob: -15.887520790100098

Token 177: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -7.624555291840807e-05
    2. 'parent' → logprob: -9.500076293945312
    3. '.' → logprob: -14.625076293945312
    4. '_parent' → logprob: -15.125076293945312
    5. '[parent' → logprob: -15.500076293945312
    6. '	parent' → logprob: -15.875076293945312
    7. ' .' → logprob: -16.500076293945312
    8. '._' → logprob: -16.625076293945312
    9. ' parent' → logprob: -17.125076293945312
    10. '.par' → logprob: -17.500076293945312

Token 178: '_or' (ID: 15400)
  Prédit: '_or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_or' → logprob: 0.0
    2. 'or' → logprob: -18.25
    3. '_of' → logprob: -20.25
    4. '_' → logprob: -20.625
    5. '_if' → logprob: -20.625
    6. '```' → logprob: -20.75
    7. '_org' → logprob: -20.75
    8. '_OR' → logprob: -21.125
    9. '_o' → logprob: -21.5
    10. ' _' → logprob: -21.5

Token 179: '_size' (ID: 5044)
  Prédit: '_size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_size' → logprob: -0.029842358082532883
    2. 'size' → logprob: -3.5298423767089844
    3. 'self' → logprob: -9.904842376708984
    4. ' size' → logprob: -11.154842376708984
    5. 'siz' → logprob: -11.529842376708984
    6. 's' → logprob: -12.404842376708984
    7. '_s' → logprob: -12.529842376708984
    8. '_' → logprob: -12.904842376708984
    9. 'x' → logprob: -13.154842376708984
    10. '   ' → logprob: -14.029842376708984

Token 180: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -2.045823566731997e-05
    2. '[' → logprob: -11.000020027160645
    3. 'x' → logprob: -13.125020027160645
    4. '[self' → logprob: -13.875020027160645
    5. '[
' → logprob: -15.000020027160645
    6. ' [' → logprob: -15.125020027160645
    7. '[int' → logprob: -16.87502098083496
    8. ' x' → logprob: -18.12502098083496
    9. '```' → logprob: -18.25002098083496
    10. '<x' → logprob: -18.37502098083496

Token 181: ']' (ID: 60)
  Prédit: ']>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']>=' → logprob: -0.7041236162185669
    2. ']' → logprob: -1.079123616218567
    3. '>=' → logprob: -1.829123616218567
    4. '[' → logprob: -6.579123497009277
    5. '>' → logprob: -6.579123497009277
    6. ' >=' → logprob: -7.079123497009277
    7. ')>=' → logprob: -7.329123497009277
    8. ')' → logprob: -8.079123497009277
    9. '0' → logprob: -8.454123497009277
    10. '   ' → logprob: -9.454123497009277

Token 182: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.0024200105108320713
    2. ' >=' → logprob: -6.627419948577881
    3. ']>=' → logprob: -7.127419948577881
    4. ')>=' → logprob: -8.627420425415039
    5. '>' → logprob: -9.377420425415039
    6. '0' → logprob: -11.002420425415039
    7. '≥' → logprob: -12.627420425415039
    8. ')' → logprob: -12.877420425415039
    9. '[' → logprob: -13.627420425415039
    10. ' ' → logprob: -14.502420425415039

Token 183: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0040785204619169235
    2. ' ' → logprob: -5.504078388214111
    3. '  ' → logprob: -16.004077911376953
    4. '۰' → logprob: -16.879077911376953
    5. '   ' → logprob: -18.504077911376953
    6. ' ' → logprob: -18.879077911376953
    7. '０' → logprob: -19.879077911376953
    8. '٠' → logprob: -20.879077911376953
    9. '00' → logprob: -21.004077911376953
    10. '  
' → logprob: -21.379077911376953

Token 184: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00043102685594931245
    2. ' ' → logprob: -7.750431060791016
    3. '  ' → logprob: -15.750431060791016
    4. '۰' → logprob: -16.000431060791016
    5. '   ' → logprob: -17.250431060791016
    6. '０' → logprob: -18.500431060791016
    7. '00' → logprob: -19.625431060791016
    8. '٠' → logprob: -19.750431060791016
    9. ' ' → logprob: -20.125431060791016
    10. ' ' → logprob: -20.625431060791016

Token 185: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20180876553058624
    2. ':
' → logprob: -1.7018088102340698
    3. ' :' → logprob: -8.20180892944336
    4. ' :
' → logprob: -9.07680892944336
    5. ' and' → logprob: -13.45180892944336
    6. ':

' → logprob: -13.70180892944336
    7. ':x' → logprob: -13.95180892944336
    8. '):
' → logprob: -14.07680892944336
    9. ':
' → logprob: -14.20180892944336
    10. 'x' → logprob: -14.32680892944336

Token 186: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3433259427547455
    2. ' x' → logprob: -1.4683259725570679
    3. 'x' → logprob: -2.8433258533477783
    4. '
' → logprob: -6.843326091766357
    5. ':' → logprob: -7.718326091766357
    6. '   ' → logprob: -8.5933256149292
    7. '       ' → logprob: -9.8433256149292
    8. '		' → logprob: -10.3433256149292
    9. '	       ' → logprob: -10.3433256149292
    10. ' ' → logprob: -10.4683256149292

Token 187: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.1602451354265213
    2. ' x' → logprob: -1.9102451801300049
    3. '           ' → logprob: -11.285244941711426
    4. '       ' → logprob: -12.910244941711426
    5. '	x' → logprob: -13.035244941711426
    6. 'parent' → logprob: -13.410244941711426
    7. '   ' → logprob: -14.535244941711426
    8. ' ' → logprob: -14.910244941711426
    9. ' parent' → logprob: -15.035244941711426
    10. 'self' → logprob: -15.285244941711426

Token 188: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132626414299011
    2. '=' → logprob: -1.313262701034546
    3. ',' → logprob: -14.813262939453125
    4. ' ' → logprob: -14.938262939453125
    5. '=self' → logprob: -15.813262939453125
    6. '	' → logprob: -16.813262939453125
    7. '=x' → logprob: -17.438262939453125
    8. '＝' → logprob: -18.438262939453125
    9. '=s' → logprob: -18.688262939453125
    10. '=
' → logprob: -18.813262939453125

Token 189: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1602281779050827
    2. ' self' → logprob: -1.9102281332015991
    3. '	self' → logprob: -13.28522777557373
    4. ' ' → logprob: -13.41022777557373
    5. '   ' → logprob: -15.16022777557373
    6. '[self' → logprob: -15.28522777557373
    7. 's' → logprob: -15.91022777557373
    8. '(self' → logprob: -16.910228729248047
    9. '       ' → logprob: -17.285228729248047
    10. '```' → logprob: -17.410228729248047

Token 190: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.00016587569552939385
    2. 'parent' → logprob: -8.750165939331055
    3. '.' → logprob: -11.875165939331055
    4. ' parent' → logprob: -16.250165939331055
    5. '_parent' → logprob: -16.250165939331055
    6. '[parent' → logprob: -16.250165939331055
    7. '	parent' → logprob: -16.375165939331055
    8. '.Parent' → logprob: -16.875165939331055
    9. ' .' → logprob: -17.250165939331055
    10. ',parent' → logprob: -18.000165939331055

Token 191: '_or' (ID: 15400)
  Prédit: '_or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_or' → logprob: -4.0722858102526516e-05
    2. 'or' → logprob: -10.625041007995605
    3. '_of' → logprob: -11.875041007995605
    4. '_size' → logprob: -12.250041007995605
    5. 'Or' → logprob: -13.875041007995605
    6. '[x' → logprob: -14.750041007995605
    7. '_for' → logprob: -15.125041007995605
    8. '_parent' → logprob: -15.125041007995605
    9. 'orz' → logprob: -15.250041007995605
    10. ' or' → logprob: -15.625041007995605

Token 192: '_size' (ID: 5044)
  Prédit: '_size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_size' → logprob: -0.25278323888778687
    2. 'size' → logprob: -1.5027832984924316
    3. 'siz' → logprob: -8.002782821655273
    4. 's' → logprob: -8.502782821655273
    5. 'ize' → logprob: -9.002782821655273
    6. ' size' → logprob: -9.752782821655273
    7. 'x' → logprob: -9.877782821655273
    8. '   ' → logprob: -11.252782821655273
    9. 'si' → logprob: -11.752782821655273
    10. 'self' → logprob: -12.252782821655273

Token 193: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.001343446783721447
    2. 'x' → logprob: -6.626343250274658
    3. '[' → logprob: -11.001343727111816
    4. ' x' → logprob: -14.251343727111816
    5. '[
' → logprob: -15.876343727111816
    6. '(x' → logprob: -17.1263427734375
    7. '```' → logprob: -17.7513427734375
    8. '	x' → logprob: -17.8763427734375
    9. '<x' → logprob: -18.5013427734375
    10. '[self' → logprob: -18.6263427734375

Token 194: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06945433467626572
    2. ']' → logprob: -2.8194544315338135
    3. '       ' → logprob: -5.694454193115234
    4. ')
' → logprob: -5.694454193115234
    5. ']
' → logprob: -8.319454193115234
    6. ' )' → logprob: -8.694454193115234
    7. '
' → logprob: -8.819454193115234
    8. 'x' → logprob: -9.944454193115234
    9. ' ' → logprob: -10.819454193115234
    10. ' ]' → logprob: -10.819454193115234

Token 195: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001343446783721447
    2. '        
' → logprob: -8.251343727111816
    3. '   ' → logprob: -8.751343727111816
    4. '	' → logprob: -8.876343727111816
    5. 'self' → logprob: -8.876343727111816
    6. '
' → logprob: -8.876343727111816
    7. ' self' → logprob: -9.376343727111816
    8. '[' → logprob: -9.876343727111816
    9. '  
' → logprob: -10.001343727111816
    10. 'x' → logprob: -10.251343727111816

Token 196: ' while' (ID: 2049)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.855374276638031
    2. 'self' → logprob: -1.4803743362426758
    3. 'if' → logprob: -1.6053743362426758
    4. 'while' (adapté à ' while') → logprob: -2.605374336242676
    5. ' if' → logprob: -3.480374336242676
    6. ' while' → logprob: -3.855374336242676
    7. 'return' → logprob: -4.605374336242676
    8. ' self' → logprob: -5.480374336242676
    9. '   ' → logprob: -6.230374336242676
    10. '
' → logprob: -6.605374336242676

Token 197: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.04302019998431206
    2. ' a' → logprob: -3.168020248413086
    3. 'x' → logprob: -11.168020248413086
    4. ' ' → logprob: -12.543020248413086
    5. ' x' → logprob: -13.293020248413086
    6. '	a' → logprob: -13.543020248413086
    7. '
' → logprob: -16.293020248413086
    8. ' not' → logprob: -16.418020248413086
    9. 'self' → logprob: -16.418020248413086
    10. ' self' → logprob: -16.543020248413086

Token 198: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.004658672492951155
    2. ' !=' → logprob: -5.3796586990356445
    3. '!=-' → logprob: -10.504658699035645
    4. 'x' → logprob: -12.879658699035645
    5. '!=(' → logprob: -13.129658699035645
    6. '()!=' → logprob: -13.379658699035645
    7. ')!=' → logprob: -13.629658699035645
    8. 'a' → logprob: -14.004658699035645
    9. ']!=' → logprob: -14.129658699035645
    10. '!==' → logprob: -14.379658699035645

Token 199: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0001234428636962548
    2. ' x' → logprob: -9.000123023986816
    3. '	x' → logprob: -19.375123977661133
    4. ' ' → logprob: -21.625123977661133
    5. '(x' → logprob: -22.375123977661133
    6. '>x' → logprob: -22.375123977661133
    7. '$x' → logprob: -23.000123977661133
    8. ')x' → logprob: -23.250123977661133
    9. '"x' → logprob: -23.625123977661133
    10. '<x' → logprob: -23.750123977661133

Token 200: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.16122286021709442
    2. ':' → logprob: -1.9112228155136108
    3. ' and' → logprob: -7.1612229347229
    4. ' :
' → logprob: -8.911222457885742
    5. 'and' → logprob: -10.536222457885742
    6. ' :' → logprob: -11.161222457885742
    7. '):
' → logprob: -11.161222457885742
    8. ':
' → logprob: -11.536222457885742
    9. '       ' → logprob: -11.911222457885742
    10. '           ' → logprob: -12.036222457885742

Token 201: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06900372356176376
    2. '<|end|>' → logprob: -3.6940038204193115
    3. ' ' → logprob: -4.194003582000732
    4. ' 
' → logprob: -5.194003582000732
    5. '
' → logprob: -5.444003582000732
    6. ',' → logprob: -6.319003582000732
    7. '   ' → logprob: -6.444003582000732
    8. '            ' → logprob: -6.444003582000732
    9. '<|end|>' → logprob: -7.069003582000732
    10. '            
' → logprob: -7.194003582000732

Token 202: ' self' (ID: 1051)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.1514347791671753
    2. 'parent' → logprob: -1.2764347791671753
    3. 'y' → logprob: -1.5264347791671753
    4. 'p' → logprob: -1.7764347791671753
    5. 'v' → logprob: -5.151434898376465
    6. 'next' → logprob: -5.276434898376465
    7. 'j' → logprob: -6.276434898376465
    8. ' parent' → logprob: -6.276434898376465
    9. 'z' → logprob: -7.401434898376465
    10. 'prev' → logprob: -7.776434898376465

Token 203: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.12896279990673065
    2. 'parent' → logprob: -2.253962755203247
    3. '.' → logprob: -4.503962993621826
    4. '_parent' → logprob: -5.628962993621826
    5. '._' → logprob: -7.003962993621826
    6. ' parent' → logprob: -9.003962516784668
    7. '[parent' → logprob: -9.503962516784668
    8. '	parent' → logprob: -9.628962516784668
    9. ' .' → logprob: -9.753962516784668
    10. '<|end|>' → logprob: -10.878962516784668

Token 204: '_or' (ID: 15400)
  Prédit: '_or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_or' → logprob: -1.3856492842023727e-06
    2. 'or' → logprob: -13.625000953674316
    3. 'Or' → logprob: -18.000001907348633
    4. '_of' → logprob: -18.125001907348633
    5. ' or' → logprob: -18.625001907348633
    6. '_parent' → logprob: -18.875001907348633
    7. '-or' → logprob: -18.875001907348633
    8. '_for' → logprob: -18.875001907348633
    9. '	or' → logprob: -18.875001907348633
    10. '   ' → logprob: -19.000001907348633

Token 205: '_size' (ID: 5044)
  Prédit: '_size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_size' → logprob: -0.018168790265917778
    2. 'size' → logprob: -4.018168926239014
    3. 'self' → logprob: -11.643168449401855
    4. ' size' → logprob: -12.518168449401855
    5. '_or' → logprob: -13.143168449401855
    6. 's' → logprob: -13.893168449401855
    7. 'siz' → logprob: -14.143168449401855
    8. '_s' → logprob: -14.518168449401855
    9. 'ize' → logprob: -14.518168449401855
    10. 'or' → logprob: -15.268168449401855

Token 206: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.006791982799768448
    2. 'a' → logprob: -5.006792068481445
    3. '[' → logprob: -9.631792068481445
    4. '(a' → logprob: -13.006792068481445
    5. '```' → logprob: -13.381792068481445
    6. '[self' → logprob: -13.631792068481445
    7. ' a' → logprob: -13.881792068481445
    8. '[x' → logprob: -14.256792068481445
    9. '<|end|>' → logprob: -14.381792068481445
    10. '#a' → logprob: -14.756792068481445

Token 207: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008860878297127783
    2. '],' → logprob: -8.250885963439941
    3. ',self' → logprob: -8.375885963439941
    4. ' ,' → logprob: -8.500885963439941
    5. ',x' → logprob: -9.125885963439941
    6. '),' → logprob: -10.375885963439941
    7. 'self' → logprob: -11.000885963439941
    8. 'x' → logprob: -11.625885963439941
    9. ',
' → logprob: -12.250885963439941
    10. ',parent' → logprob: -12.375885963439941

Token 208: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.004970458801835775
    2. ' a' → logprob: -5.379970550537109
    3. '=' → logprob: -8.00497055053711
    4. ' =' → logprob: -12.12997055053711
    5. '           ' → logprob: -12.50497055053711
    6. '=a' → logprob: -12.50497055053711
    7. 'x' → logprob: -13.12997055053711
    8. '	a' → logprob: -14.87997055053711
    9. '   ' → logprob: -15.25497055053711
    10. ' ' → logprob: -15.25497055053711

Token 209: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.018150413408875465
    2. ' =' → logprob: -4.018150329589844
    3. '=
' → logprob: -15.768150329589844
    4. '<|end|>' → logprob: -15.893150329589844
    5. '=a' → logprob: -16.643150329589844
    6. '=x' → logprob: -16.768150329589844
    7. '=self' → logprob: -17.018150329589844
    8. '=

' → logprob: -17.018150329589844
    9. '=}' → logprob: -18.268150329589844
    10. ' ' → logprob: -18.643150329589844

Token 210: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.20150074362754822
    2. ' x' → logprob: -1.7015007734298706
    3. 'self' → logprob: -9.70150089263916
    4. ' self' → logprob: -10.70150089263916
    5. '	x' → logprob: -13.32650089263916
    6. ' ' → logprob: -13.82650089263916
    7. '(x' → logprob: -14.82650089263916
    8. '[x' → logprob: -14.95150089263916
    9. '    ' → logprob: -15.82650089263916
    10. '   ' → logprob: -16.701499938964844

Token 211: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 212: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0031791406217962503
    2. ' self' → logprob: -5.75317907333374
    3. '	self' → logprob: -14.503179550170898
    4. '[self' → logprob: -15.003179550170898
    5. '           ' → logprob: -15.253179550170898
    6. ' ' → logprob: -16.2531795501709
    7. '       ' → logprob: -16.2531795501709
    8. '(self' → logprob: -16.3781795501709
    9. '<|end|>' → logprob: -18.1281795501709
    10. '   ' → logprob: -18.1281795501709

Token 213: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.0007111206650733948
    2. 'parent' → logprob: -7.250710964202881
    3. '_parent' → logprob: -14.500711441040039
    4. '	parent' → logprob: -15.125711441040039
    5. '[parent' → logprob: -15.250711441040039
    6. ' parent' → logprob: -16.87571144104004
    7. '.' → logprob: -17.62571144104004
    8. '.Parent' → logprob: -17.87571144104004
    9. '._' → logprob: -18.12571144104004
    10. 'Parent' → logprob: -18.12571144104004

Token 214: '_or' (ID: 15400)
  Prédit: '_or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_or' → logprob: -1.664371848164592e-05
    2. 'or' → logprob: -11.750016212463379
    3. '_size' → logprob: -11.875016212463379
    4. 'Or' → logprob: -15.625016212463379
    5. 'size' → logprob: -15.750016212463379
    6. '-or' → logprob: -15.875016212463379
    7. '_org' → logprob: -16.000017166137695
    8. '_for' → logprob: -16.125017166137695
    9. '	or' → logprob: -16.125017166137695
    10. '_parent' → logprob: -16.250017166137695

Token 215: '_size' (ID: 5044)
  Prédit: '_size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_size' → logprob: -0.4302997887134552
    2. 'size' → logprob: -1.0552997589111328
    3. 'a' → logprob: -6.555299758911133
    4. 'x' → logprob: -9.430299758911133
    5. 'self' → logprob: -11.055299758911133
    6. ' size' → logprob: -11.305299758911133
    7. '_a' → logprob: -11.430299758911133
    8. 's' → logprob: -11.430299758911133
    9. '[a' → logprob: -11.930299758911133
    10. '   ' → logprob: -12.305299758911133

Token 216: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.0005530327325686812
    2. 'a' → logprob: -7.500553131103516
    3. '[' → logprob: -17.875553131103516
    4. '(a' → logprob: -18.375553131103516
    5. '```' → logprob: -18.625553131103516
    6. '[
' → logprob: -19.125553131103516
    7. '#a' → logprob: -19.250553131103516
    8. '	a' → logprob: -19.250553131103516
    9. '<|end|>' → logprob: -19.375553131103516
    10. '<a' → logprob: -19.750553131103516

Token 217: ']
' (ID: 1592)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.015046465210616589
    2. 'a' → logprob: -4.2650465965271
    3. ']' → logprob: -8.015046119689941
    4. ')' → logprob: -8.390046119689941
    5. '<|end|>' → logprob: -8.515046119689941
    6. ' a' → logprob: -9.640046119689941
    7. ')a' → logprob: -10.390046119689941
    8. '(a' → logprob: -11.515046119689941
    9. '[' → logprob: -12.265046119689941
    10. '	a' → logprob: -12.390046119689941

Token 218: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.050015103071928024
    2. '<|end|>' → logprob: -3.3000152111053467
    3. ' ' → logprob: -5.300014972686768
    4. '        ' → logprob: -6.300014972686768
    5. ' return' → logprob: -6.425014972686768
    6. ' 
' → logprob: -6.550014972686768
    7. '        
' → logprob: -7.550014972686768
    8. '	' → logprob: -7.800014972686768
    9. '   ' → logprob: -8.425015449523926
    10. '  
' → logprob: -8.675015449523926

Token 219: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05388616397976875
    2. ' return' → logprob: -4.1788859367370605
    3. '<|end|>' → logprob: -4.1788859367370605
    4. ' ' → logprob: -4.6788859367370605
    5. '        ' → logprob: -5.5538859367370605
    6. '   ' → logprob: -5.9288859367370605
    7. 'return' (adapté à ' return') → logprob: -6.1788859367370605
    8. '           ' → logprob: -6.9288859367370605
    9. '    ' → logprob: -7.3038859367370605
    10. '  ' → logprob: -8.053886413574219

Token 220: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.2519291639328003
    2. 'x' → logprob: -1.5019291639328003
    3. '	x' → logprob: -16.501928329467773
    4. '(x' → logprob: -17.501928329467773
    5. ' ' → logprob: -17.876928329467773
    6. ' ' → logprob: -19.251928329467773
    7. ')x' → logprob: -20.501928329467773
    8. '   ' → logprob: -21.251928329467773
    9. ' 
' → logprob: -21.751928329467773
    10. '$x' → logprob: -21.876928329467773

Token 221: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 222: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8156735301017761
    2. '<|end|>' → logprob: -1.565673589706421
    3. ')' → logprob: -1.940673589706421
    4. '[' → logprob: -2.815673589706421
    5. ' def' → logprob: -3.315673589706421
    6. '#' → logprob: -3.440673589706421
    7. '   ' → logprob: -3.690673589706421
    8. 'n' → logprob: -4.690673351287842
    9. 'd' → logprob: -4.690673351287842
    10. ' ' → logprob: -4.815673351287842

Token 223: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.03814636915922165
    2. '<|end|>' → logprob: -3.4131462574005127
    3. ' def' → logprob: -6.038146495819092
    4. '   ' → logprob: -6.913146495819092
    5. 'size' → logprob: -7.788146495819092
    6. ' ' → logprob: -8.913146018981934
    7. '#' → logprob: -9.163146018981934
    8. '    
' → logprob: -9.663146018981934
    9. '    ' → logprob: -9.663146018981934
    10. '```' → logprob: -9.788146018981934

Token 224: ' size' (ID: 2349)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.0028726309537887573
    2. ' size' → logprob: -5.877872467041016
    3. '   ' → logprob: -10.502872467041016
    4. '_size' → logprob: -11.377872467041016
    5. '	size' → logprob: -12.252872467041016
    6. '  ' → logprob: -12.377872467041016
    7. ' ' → logprob: -12.502872467041016
    8. 'sizes' → logprob: -12.502872467041016
    9. 'count' → logprob: -12.877872467041016
    10. '.size' → logprob: -13.252872467041016

Token 225: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.005237075500190258
    2. '(' → logprob: -5.255237102508545
    3. '(
' → logprob: -12.880236625671387
    4. 'def' → logprob: -15.255236625671387
    5. 'self' → logprob: -15.630236625671387
    6. '(s' → logprob: -16.130237579345703
    7. '   ' → logprob: -16.505237579345703
    8. '<|end|>' → logprob: -17.380237579345703
    9. ' (' → logprob: -17.505237579345703
    10. 's' → logprob: -17.755237579345703

Token 226: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03629756346344948
    2. '(self' → logprob: -3.786297559738159
    3. 'self' → logprob: -4.536297798156738
    4. ')' → logprob: -6.161297798156738
    5. '   ' → logprob: -10.036297798156738
    6. ',self' → logprob: -10.286297798156738
    7. 'a' → logprob: -11.036297798156738
    8. ' self' → logprob: -11.411297798156738
    9. '(' → logprob: -11.911297798156738
    10. ')(' → logprob: -12.161297798156738

Token 227: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0008152276859618723
    2. ' a' → logprob: -7.250815391540527
    3. '   ' → logprob: -9.625815391540527
    4. 'self' → logprob: -10.375815391540527
    5. ' ' → logprob: -12.125815391540527
    6. ' self' → logprob: -13.375815391540527
    7. '	a' → logprob: -14.000815391540527
    8. '  ' → logprob: -15.375815391540527
    9. ')' → logprob: -17.12581443786621
    10. '    ' → logprob: -17.75081443786621

Token 228: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7736495733261108
    2. ':' → logprob: -1.1486495733261108
    3. '):' → logprob: -1.5236495733261108
    4. '   ' → logprob: -6.6486496925354
    5. 'self' → logprob: -6.7736496925354
    6. '):
' → logprob: -7.0236496925354
    7. '(self' → logprob: -8.773649215698242
    8. '       ' → logprob: -10.148649215698242
    9. ' ):' → logprob: -10.148649215698242
    10. ' )' → logprob: -10.273649215698242

Token 229: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.01814994215965271
    2. ' int' → logprob: -4.0181498527526855
    3. ')' → logprob: -19.018150329589844
    4. ':int' → logprob: -19.143150329589844
    5. '   ' → logprob: -19.518150329589844
    6. '[int' → logprob: -20.018150329589844
    7. '(int' → logprob: -20.143150329589844
    8. ' ' → logprob: -20.643150329589844
    9. '	int' → logprob: -21.518150329589844
    10. '<int' → logprob: -21.643150329589844

Token 230: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.41866585687967e-06
    2. '):' → logprob: -12.250008583068848
    3. ' )' → logprob: -12.625008583068848
    4. '):
' → logprob: -15.625008583068848
    5. '   ' → logprob: -16.87500762939453
    6. '`)' → logprob: -17.25000762939453
    7. ')->' → logprob: -18.75000762939453
    8. ')
' → logprob: -19.25000762939453
    9. ')`' → logprob: -19.50000762939453
    10. '):

' → logprob: -19.87500762939453

Token 231: ' ->' (ID: 2747)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5832490921020508
    2. ':' → logprob: -0.8332490921020508
    3. ' ->' → logprob: -5.583249092102051
    4. '->' → logprob: -6.208249092102051
    5. '):' → logprob: -7.333249092102051
    6. ')->' → logprob: -7.458249092102051
    7. '   ' → logprob: -8.95824909210205
    8. ' :' → logprob: -10.33324909210205
    9. '>' → logprob: -10.45824909210205
    10. '()' → logprob: -10.58324909210205

Token 232: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.029752571135759354
    2. ' int' → logprob: -3.529752492904663
    3. '(int' → logprob: -14.279752731323242
    4. ':int' → logprob: -14.779752731323242
    5. '-' → logprob: -15.029752731323242
    6. '-int' → logprob: -15.404752731323242
    7. '   ' → logprob: -15.654752731323242
    8. '	int' → logprob: -15.904752731323242
    9. '[int' → logprob: -16.029752731323242
    10. 'return' → logprob: -16.529752731323242

Token 233: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09614959359169006
    2. '(' → logprob: -2.9711496829986572
    3. '(self' → logprob: -3.8461496829986572
    4. '       ' → logprob: -4.346149444580078
    5. ':
' → logprob: -5.846149444580078
    6. '   ' → logprob: -6.221149444580078
    7. '(
' → logprob: -7.721149444580078
    8. 'self' → logprob: -8.846149444580078
    9. ' :' → logprob: -9.096149444580078
    10. ')' → logprob: -9.221149444580078

Token 234: '       ' (ID: 309)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0421471931040287
    2. '       ' → logprob: -3.667147159576416
    3. ' return' → logprob: -4.167147159576416
    4. '	return' → logprob: -8.792147636413574
    5. '-return' → logprob: -10.417147636413574
    6. '   ' → logprob: -10.917147636413574
    7. ':return' → logprob: -11.417147636413574
    8. '
' → logprob: -12.167147636413574
    9. '```' → logprob: -13.417147636413574
    10. '{return' → logprob: -13.417147636413574

Token 235: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0720919817686081
    2. 'x' → logprob: -3.197092056274414
    3. '       ' → logprob: -4.322092056274414
    4. ' return' → logprob: -4.447092056274414
    5. 'root' → logprob: -6.197092056274414
    6. 'r' → logprob: -6.572092056274414
    7. ' x' → logprob: -10.072092056274414
    8. 'y' → logprob: -10.322092056274414
    9. 's' → logprob: -10.697092056274414
    10. '   ' → logprob: -10.822092056274414

Token 236: ' -' (ID: 533)
  Prédit: '-self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-self' → logprob: -0.6964311003684998
    2. ' -' → logprob: -0.9464311003684998
    3. '-' → logprob: -3.0714311599731445
    4. '   ' → logprob: -4.0714311599731445
    5. '-n' → logprob: -4.1964311599731445
    6. '-size' → logprob: -4.9464311599731445
    7. '-read' → logprob: -5.8214311599731445
    8. '-info' → logprob: -5.9464311599731445
    9. '-not' → logprob: -6.0714311599731445
    10. '-num' → logprob: -6.3214311599731445

Token 237: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -4.008129963040119e-06
    2. ' self' → logprob: -12.500003814697266
    3. '1' → logprob: -15.875003814697266
    4. '(self' → logprob: -17.250003814697266
    5. '[self' → logprob: -17.375003814697266
    6. '       ' → logprob: -17.750003814697266
    7. '   ' → logprob: -19.500003814697266
    8. '
' → logprob: -20.000003814697266
    9. '	self' → logprob: -20.000003814697266
    10. '=self' → logprob: -21.000003814697266

Token 238: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -8.637786231702194e-05
    2. 'parent' → logprob: -9.500086784362793
    3. '.' → logprob: -11.500086784362793
    4. ' .' → logprob: -14.250086784362793
    5. '[parent' → logprob: -15.125086784362793
    6. '.user' → logprob: -15.375086784362793
    7. '_parent' → logprob: -16.625085830688477
    8. '.self' → logprob: -17.375085830688477
    9. '.Parent' → logprob: -17.375085830688477
    10. '._' → logprob: -17.500085830688477

Token 239: '_or' (ID: 15400)
  Prédit: '_or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_or' → logprob: -6.704273118884885e-07
    2. 'or' → logprob: -14.375000953674316
    3. '_for' → logprob: -19.125
    4. '```' → logprob: -19.625
    5. '_OR' → logprob: -20.25
    6. '_org' → logprob: -20.25
    7. 'def' → logprob: -20.25
    8. '_of' → logprob: -20.375
    9. 'Or' → logprob: -20.5
    10. '   ' → logprob: -20.625

Token 240: '_size' (ID: 5044)
  Prédit: '_size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_size' → logprob: -0.011061619967222214
    2. 'size' → logprob: -4.511061668395996
    3. 'self' → logprob: -11.761061668395996
    4. ' size' → logprob: -13.261061668395996
    5. 'siz' → logprob: -13.386061668395996
    6. '   ' → logprob: -14.261061668395996
    7. '_s' → logprob: -14.386061668395996
    8. '_' → logprob: -14.636061668395996
    9. 's' → logprob: -15.386061668395996
    10. 'ds' → logprob: -16.13606071472168

Token 241: '[self' (ID: 33734)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.38689273595809937
    2. '[self' → logprob: -1.1368927955627441
    3. '[' → logprob: -11.136892318725586
    4. 'a' → logprob: -12.511892318725586
    5. 'self' → logprob: -12.761892318725586
    6. '[
' → logprob: -15.136892318725586
    7. '[this' → logprob: -16.511892318725586
    8. ' self' → logprob: -16.636892318725586
    9. ' [' → logprob: -17.011892318725586
    10. '[array' → logprob: -17.386892318725586

Token 242: '.le' (ID: 27349)
  Prédit: '.le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.le' → logprob: -1.0280383548888494e-06
    2. 'leader' → logprob: -14.250000953674316
    3. '.' → logprob: -15.125000953674316
    4. '.Le' → logprob: -18.250001907348633
    5. ' .' → logprob: -18.750001907348633
    6. 'self' → logprob: -18.750001907348633
    7. '.self' → logprob: -19.000001907348633
    8. '_le' → logprob: -20.250001907348633
    9. '.leading' → logprob: -20.625001907348633
    10. '..' → logprob: -21.250001907348633

Token 243: 'ader' (ID: 1372)
  Prédit: 'ader'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ader' → logprob: -2.45848218582978e-06
    2. '(a' → logprob: -14.12500286102295
    3. 'a' → logprob: -14.37500286102295
    4. 'der' → logprob: -14.75000286102295
    5. '[a' → logprob: -15.75000286102295
    6. 'leader' → logprob: -15.87500286102295
    7. 'ad' → logprob: -16.625001907348633
    8. '(' → logprob: -16.625001907348633
    9. 'arder' → logprob: -17.125001907348633
    10. 'ADER' → logprob: -17.125001907348633

Token 244: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -3.173704271830502e-06
    2. '(' → logprob: -12.75000286102295
    3. 'a' → logprob: -15.25000286102295
    4. '(
' → logprob: -18.000003814697266
    5. ' (' → logprob: -18.375003814697266
    6. '](' → logprob: -20.375003814697266
    7. '```' → logprob: -20.500003814697266
    8. '(A' → logprob: -21.000003814697266
    9. '[a' → logprob: -21.125003814697266
    10. '((' → logprob: -21.375003814697266

Token 245: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.039243802428245544
    2. '(a' → logprob: -3.289243698120117
    3. 'a' → logprob: -7.039243698120117
    4. ']' → logprob: -8.539243698120117
    5. ')' → logprob: -9.289243698120117
    6. ')a' → logprob: -11.039243698120117
    7. '(' → logprob: -11.789243698120117
    8. '])' → logprob: -12.789243698120117
    9. ')]
' → logprob: -12.914243698120117
    10. ' )' → logprob: -13.164243698120117

Token 246: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6480656266212463
    2. '<|end|>' → logprob: -0.7730656266212463
    3. '#' → logprob: -5.148065567016602
    4. '```' → logprob: -5.898065567016602
    5. ']' → logprob: -6.398065567016602
    6. '
' → logprob: -6.648065567016602
    7. '}' → logprob: -7.398065567016602
    8. ' ' → logprob: -7.523065567016602
    9. '<|end|>' → logprob: -7.773065567016602
    10. '\n' → logprob: -7.773065567016602

Token 247: ' def' (ID: 1056)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 248: ' groups' (ID: 8896)
  Prédit: 'groups'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'groups' → logprob: -0.7577953338623047
    2. 'count' → logprob: -1.3827953338623047
    3. ' groups' → logprob: -2.3827953338623047
    4. '_groups' → logprob: -2.6327953338623047
    5. '   ' → logprob: -3.2577953338623047
    6. '__' → logprob: -4.007795333862305
    7. ' ' → logprob: -4.507795333862305
    8. '  ' → logprob: -4.757795333862305
    9. '_count' → logprob: -5.007795333862305
    10. 'max' → logprob: -5.382795333862305

Token 249: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0009220616775564849
    2. '(' → logprob: -7.000922203063965
    3. ' (' → logprob: -12.500922203063965
    4. '   ' → logprob: -12.875922203063965
    5. ' ' → logprob: -13.875922203063965
    6. '(
' → logprob: -14.250922203063965
    7. '()' → logprob: -14.375922203063965
    8. 'self' → logprob: -14.375922203063965
    9. '```' → logprob: -14.875922203063965
    10. 's' → logprob: -15.125922203063965

Token 250: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9018736481666565
    2. '):' → logprob: -1.4018735885620117
    3. '(self' → logprob: -1.4018735885620117
    4. 'self' → logprob: -2.5268735885620117
    5. '):
' → logprob: -4.026873588562012
    6. ')(' → logprob: -5.901873588562012
    7. '   ' → logprob: -8.151873588562012
    8. ' ' → logprob: -8.276873588562012
    9. ' self' → logprob: -8.651873588562012
    10. '):

' → logprob: -9.026873588562012

Token 251: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022419584915041924
    2. '   ' → logprob: -4.022419452667236
    3. 'self' → logprob: -6.022419452667236
    4. 'def' → logprob: -7.022419452667236
    5. 'result' → logprob: -8.897419929504395
    6. '    ' → logprob: -9.147419929504395
    7. 'n' → logprob: -9.272419929504395
    8. '     ' → logprob: -9.522419929504395
    9. '()' → logprob: -9.647419929504395
    10. ' ' → logprob: -9.772419929504395

Token 252: ' g' (ID: 329)
  Prédit: 'leader'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'leader' → logprob: -0.4093112051486969
    2. 'result' → logprob: -1.9093111753463745
    3. 'roots' → logprob: -3.284311294555664
    4. '   ' → logprob: -3.409311294555664
    5. 'root' → logprob: -3.784311294555664
    6. 'leaders' → logprob: -4.159311294555664
    7. 'res' → logprob: -4.159311294555664
    8. 'group' → logprob: -4.284311294555664
    9. 'parent' → logprob: -4.409311294555664
    10. 'ret' → logprob: -5.034311294555664

Token 253: ' =' (ID: 314)
  Prédit: 'roups'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'roups' → logprob: -0.0003348698082845658
    2. ' =' → logprob: -8.625334739685059
    3. 'roup' → logprob: -9.625334739685059
    4. '=' → logprob: -10.000334739685059
    5. '   ' → logprob: -10.375334739685059
    6. 'groups' → logprob: -12.500334739685059
    7. '       ' → logprob: -13.000334739685059
    8. 'ro' → logprob: -13.250334739685059
    9. '=[]
' → logprob: -13.375334739685059
    10. 'rou' → logprob: -13.875334739685059

Token 254: ' [[]' (ID: 182908)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.018672963604331017
    2. '[]' → logprob: -4.268672943115234
    3. '[' → logprob: -6.518672943115234
    4. '{}
' → logprob: -6.768672943115234
    5. 'dict' → logprob: -6.768672943115234
    6. '{' → logprob: -7.893672943115234
    7. '[]
' → logprob: -8.768672943115234
    8. 'default' → logprob: -8.893672943115234
    9. 'collections' → logprob: -10.018672943115234
    10. ' [[]' → logprob: -11.893672943115234

Token 255: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6931540369987488
    2. 'for' → logprob: -0.6931540369987488
    3. ']' → logprob: -13.568154335021973
    4. ' ' → logprob: -13.693154335021973
    5. '       ' → logprob: -13.818154335021973
    6. '   ' → logprob: -13.943154335021973
    7. ',' → logprob: -14.193154335021973
    8. ')' → logprob: -14.443154335021973
    9. '
' → logprob: -15.568154335021973
    10. '         ' → logprob: -15.693154335021973

Token 256: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0002489423204679042
    2. ' _' → logprob: -8.375248908996582
    3. '_i' → logprob: -11.000248908996582
    4. 'i' → logprob: -14.875248908996582
    5. ' i' → logprob: -15.000248908996582
    6. ' in' → logprob: -15.375248908996582
    7. '_a' → logprob: -15.375248908996582
    8. '_range' → logprob: -15.750248908996582
    9. '_
' → logprob: -16.1252498626709
    10. ' ' → logprob: -16.3752498626709

Token 257: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0024788661394268274
    2. ' range' → logprob: -6.002479076385498
    3. 'in' → logprob: -13.87747859954834
    4. ' ' → logprob: -14.00247859954834
    5. ' in' → logprob: -14.37747859954834
    6. '   ' → logprob: -14.87747859954834
    7. 'ange' → logprob: -15.37747859954834
    8. '  ' → logprob: -15.50247859954834
    9. '_range' → logprob: -16.252479553222656
    10. '_' → logprob: -16.877479553222656

Token 258: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -7.493430894101039e-05
    2. ' range' → logprob: -9.500075340270996
    3. '(range' → logprob: -17.00007438659668
    4. '   ' → logprob: -18.37507438659668
    5. ' ' → logprob: -19.75007438659668
    6. '	range' → logprob: -19.75007438659668
    7. '  ' → logprob: -20.00007438659668
    8. '
' → logprob: -20.50007438659668
    9. '    ' → logprob: -21.12507438659668
    10. 'rang' → logprob: -21.37507438659668

Token 259: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.45848218582978e-06
    2. '(len' → logprob: -13.00000286102295
    3. 'self' → logprob: -16.000001907348633
    4. '(' → logprob: -17.625001907348633
    5. ' (' → logprob: -19.125001907348633
    6. '(
' → logprob: -20.750001907348633
    7. '(n' → logprob: -21.000001907348633
    8. '   ' → logprob: -21.125001907348633
    9. '(this' → logprob: -21.500001907348633
    10. '       ' → logprob: -21.625001907348633

Token 260: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.577612042427063
    2. '_n' → logprob: -0.827612042427063
    3. '   ' → logprob: -6.452611923217773
    4. 'self' → logprob: -9.827611923217773
    5. '.n' → logprob: -11.327611923217773
    6. ' _' → logprob: -11.327611923217773
    7. '       ' → logprob: -11.952611923217773
    8. ' ' → logprob: -13.077611923217773
    9. '.' → logprob: -13.452611923217773
    10. '_a' → logprob: -13.452611923217773

Token 261: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -5.512236498361744e-07
    2. '_n' → logprob: -14.500000953674316
    3. ' n' → logprob: -17.625
    4. '	n' → logprob: -17.75
    5. '.n' → logprob: -18.5
    6. '
' → logprob: -20.625
    7. ')n' → logprob: -20.75
    8. 'н' → logprob: -20.875
    9. '   ' → logprob: -21.0
    10. 'size' → logprob: -21.5

Token 262: ')]
' (ID: 11587)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.16104337573051453
    2. ')]' → logprob: -1.911043405532837
    3. ']
' → logprob: -7.161043167114258
    4. ')]
' → logprob: -11.036043167114258
    5. ' ]' → logprob: -11.411043167114258
    6. '()]' → logprob: -11.911043167114258
    7. ')' → logprob: -12.286043167114258
    8. '])' → logprob: -13.411043167114258
    9. ']

' → logprob: -14.161043167114258
    10. '}]' → logprob: -14.786043167114258

Token 263: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2288234978914261
    2. '       ' → logprob: -1.9788235425949097
    3. ' for' → logprob: -2.72882342338562
    4. '
' → logprob: -7.603823661804199
    5. '   ' → logprob: -8.3538236618042
    6. 'result' → logprob: -9.2288236618042
    7. '	for' → logprob: -9.7288236618042
    8. '        
' → logprob: -10.3538236618042
    9. 'return' → logprob: -11.2288236618042
    10. ')' → logprob: -11.3538236618042

Token 264: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -8.2994620242971e-06
    2. ' for' → logprob: -11.750008583068848
    3. '       ' → logprob: -15.125008583068848
    4. '   ' → logprob: -16.25000762939453
    5. 'return' → logprob: -18.37500762939453
    6. '	for' → logprob: -18.62500762939453
    7. '
' → logprob: -19.12500762939453
    8. ' ' → logprob: -21.37500762939453
    9. 'fo' → logprob: -21.75000762939453
    10. '           ' → logprob: -21.75000762939453

Token 265: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0005966392927803099
    2. ' i' → logprob: -8.00059700012207
    3. 'v' → logprob: -9.00059700012207
    4. 'x' → logprob: -9.37559700012207
    5. 'a' → logprob: -9.87559700012207
    6. 'k' → logprob: -13.62559700012207
    7. '	i' → logprob: -16.37559700012207
    8. 'u' → logprob: -16.37559700012207
    9. '   ' → logprob: -16.75059700012207
    10. ' ' → logprob: -16.87559700012207

Token 266: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005931401159614325
    2. 'in' → logprob: -5.130931377410889
    3. ',' → logprob: -13.630931854248047
    4. ' ' → logprob: -14.380931854248047
    5. 'n' → logprob: -14.755931854248047
    6. 'range' → logprob: -15.130931854248047
    7. '	in' → logprob: -15.255931854248047
    8. 'In' → logprob: -16.755931854248047
    9. '_in' → logprob: -17.505931854248047
    10. '  ' → logprob: -17.505931854248047

Token 267: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0002613358374219388
    2. ' range' → logprob: -8.250261306762695
    3. '(range' → logprob: -20.125261306762695
    4. '   ' → logprob: -20.500261306762695
    5. '	range' → logprob: -20.500261306762695
    6. ' ' → logprob: -22.000261306762695
    7. '  ' → logprob: -23.000261306762695
    8. '
' → logprob: -23.125261306762695
    9. '.range' → logprob: -23.125261306762695
    10. 'rang' → logprob: -23.125261306762695

Token 268: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.4974866644479334e-05
    2. '(' → logprob: -11.750015258789062
    3. 'self' → logprob: -11.875015258789062
    4. '(len' → logprob: -16.750015258789062
    5. '(s' → logprob: -17.875015258789062
    6. '(
' → logprob: -18.250015258789062
    7. ' (' → logprob: -19.125015258789062
    8. ' self' → logprob: -19.625015258789062
    9. '((' → logprob: -20.000015258789062
    10. '0' → logprob: -20.125015258789062

Token 269: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.22661468386650085
    2. '_n' → logprob: -1.6016147136688232
    3. '   ' → logprob: -7.851614475250244
    4. ' _' → logprob: -8.726614952087402
    5. '):' → logprob: -8.976614952087402
    6. '):
' → logprob: -9.226614952087402
    7. '.n' → logprob: -9.601614952087402
    8. ')' → logprob: -9.601614952087402
    9. '.' → logprob: -9.976614952087402
    10. '_self' → logprob: -9.976614952087402

Token 270: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -8.518582762917504e-05
    2. '_n' → logprob: -9.37508487701416
    3. ' n' → logprob: -16.250085830688477
    4. '   ' → logprob: -16.375085830688477
    5. '.n' → logprob: -17.250085830688477
    6. '	n' → logprob: -17.250085830688477
    7. '
' → logprob: -17.750085830688477
    8. ' ' → logprob: -18.250085830688477
    9. '```' → logprob: -19.125085830688477
    10. '`' → logprob: -19.750085830688477

Token 271: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3133910298347473
    2. '):
' → logprob: -1.3133909702301025
    3. ')' → logprob: -9.938390731811523
    4. ':' → logprob: -10.063390731811523
    5. '):
' → logprob: -10.313390731811523
    6. ' ):' → logprob: -13.438390731811523
    7. ':
' → logprob: -13.938390731811523
    8. '):

' → logprob: -14.438390731811523
    9. '   ' → logprob: -14.688390731811523
    10. ' ):
' → logprob: -15.063390731811523

Token 272: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1624370962381363
    2. 'g' → logprob: -2.1624372005462646
    3. 'leader' → logprob: -4.1624369621276855
    4. '   ' → logprob: -5.2874369621276855
    5. 'r' → logprob: -5.7874369621276855
    6. 'x' → logprob: -6.4124369621276855
    7. ' leader' → logprob: -6.5374369621276855
    8. 'v' → logprob: -6.5374369621276855
    9. '       ' → logprob: -6.9124369621276855
    10. ' g' → logprob: -7.0374369621276855

Token 273: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' (adapté à ' g') → logprob: -2.2842308680992573e-05
    2. 'leader' → logprob: -11.000022888183594
    3. ' g' → logprob: -12.500022888183594
    4. '           ' → logprob: -14.375022888183594
    5. 'l' → logprob: -14.375022888183594
    6. 'r' → logprob: -14.500022888183594
    7. '   ' → logprob: -15.250022888183594
    8. 'p' → logprob: -15.625022888183594
    9. 'x' → logprob: -16.000022888183594
    10. '       ' → logprob: -16.125022888183594

Token 274: '[self' (ID: 33734)
  Prédit: '[self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -0.08863405883312225
    2. '[' → logprob: -3.3386340141296387
    3. 'if' → logprob: -3.7136340141296387
    4. 'self' → logprob: -4.713634014129639
    5. '[
' → logprob: -4.838634014129639
    6. ' if' → logprob: -5.338634014129639
    7. '[g' → logprob: -6.213634014129639
    8. 'g' → logprob: -8.338634490966797
    9. '
' → logprob: -8.463634490966797
    10. ' self' → logprob: -8.588634490966797

Token 275: '.le' (ID: 27349)
  Prédit: '.le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.le' → logprob: -4.320199877838604e-07
    2. '.parent' → logprob: -14.875
    3. '.' → logprob: -16.625
    4. '.Le' → logprob: -17.75
    5. 'leader' → logprob: -18.625
    6. '.leading' → logprob: -18.75
    7. ' .' → logprob: -19.5
    8. '.group' → logprob: -21.75
    9. '.LE' → logprob: -21.875
    10. '.owner' → logprob: -22.5

Token 276: 'ader' (ID: 1372)
  Prédit: 'ader'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ader' → logprob: -1.9146995327901095e-05
    2. 'a' → logprob: -12.500019073486328
    3. 'ad' → logprob: -12.625019073486328
    4. 'leader' → logprob: -13.125019073486328
    5. 'ade' → logprob: -13.750019073486328
    6. 'ADER' → logprob: -14.000019073486328
    7. 'r' → logprob: -14.000019073486328
    8. 'i' → logprob: -14.000019073486328
    9. 'g' → logprob: -14.375019073486328
    10. '   ' → logprob: -14.500019073486328

Token 277: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: 0.0
    2. '(' → logprob: -17.375
    3. '(ii' → logprob: -19.625
    4. ' (' → logprob: -20.375
    5. '(I' → logprob: -20.375
    6. '[i' → logprob: -20.75
    7. '(
' → logprob: -22.125
    8. ',i' → logprob: -23.0
    9. '(a' → logprob: -23.25
    10. '(int' → logprob: -23.375

Token 278: ')].' (ID: 58800)
  Prédit: ')].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')].' → logprob: -0.2531263828277588
    2. '].' → logprob: -1.5031263828277588
    3. ').' → logprob: -7.00312614440918
    4. '()].' → logprob: -9.00312614440918
    5. ']].' → logprob: -9.37812614440918
    6. ' ].' → logprob: -10.62812614440918
    7. '(i' → logprob: -10.87812614440918
    8. ')]' → logprob: -11.25312614440918
    9. ']' → logprob: -11.50312614440918
    10. ')' → logprob: -11.87812614440918

Token 279: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -2.816093228830141e-06
    2. '.append' → logprob: -13.25000286102295
    3. ' append' → logprob: -14.00000286102295
    4. 'appen' → logprob: -16.125001907348633
    5. '	append' → logprob: -18.375001907348633
    6. '_append' → logprob: -18.500001907348633
    7. 'app' → logprob: -18.625001907348633
    8. 'ap' → logprob: -20.125001907348633
    9. 'Append' → logprob: -20.250001907348633
    10. 'a' → logprob: -22.375001907348633

Token 280: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: 0.0
    2. '(' → logprob: -17.25
    3. 'i' → logprob: -19.25
    4. '(
' → logprob: -21.125
    5. ' (' → logprob: -22.125
    6. '(ii' → logprob: -23.0
    7. ' i' → logprob: -23.25
    8. '(I' → logprob: -24.0
    9. '[i' → logprob: -24.375
    10. '(a' → logprob: -24.5

Token 281: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.061979226768016815
    2. ')
' → logprob: -2.811979293823242
    3. '       ' → logprob: -12.436979293823242
    4. ')
' → logprob: -12.436979293823242
    5. ')return' → logprob: -12.811979293823242
    6. ')

' → logprob: -15.311979293823242
    7. ' )' → logprob: -15.686979293823242
    8. 'return' → logprob: -15.686979293823242
    9. ']' → logprob: -16.686979293823242
    10. '   ' → logprob: -17.061979293823242

Token 282: '       ' (ID: 309)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.07624883949756622
    2. '       ' → logprob: -2.70124888420105
    3. ' return' → logprob: -5.326248645782471
    4. '   ' → logprob: -7.576248645782471
    5. 'result' → logprob: -7.576248645782471
    6. 'groups' → logprob: -8.326249122619629
    7. '
' → logprob: -9.826249122619629
    8. 'for' → logprob: -10.326249122619629
    9. 'results' → logprob: -11.201249122619629
    10. '```' → logprob: -11.701249122619629

Token 283: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.008740320801734924
    2. ' return' → logprob: -4.758740425109863
    3. 'res' → logprob: -10.008740425109863
    4. 'r' → logprob: -10.133740425109863
    5. '   ' → logprob: -11.133740425109863
    6. 'result' → logprob: -11.508740425109863
    7. 'ret' → logprob: -11.758740425109863
    8. '        
' → logprob: -12.758740425109863
    9. '
' → logprob: -13.258740425109863
    10. '    
' → logprob: -13.383740425109863

Token 284: ' list' (ID: 1562)
  Prédit: '[g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[g' → logprob: -0.13499712944030762
    2. '[list' → logprob: -2.6349971294403076
    3. '[i' → logprob: -3.1349971294403076
    4. '[' → logprob: -5.259997367858887
    5. ' [' → logprob: -5.759997367858887
    6. '[x' → logprob: -6.759997367858887
    7. '[group' → logprob: -7.509997367858887
    8. '[a' → logprob: -7.634997367858887
    9. 'g' → logprob: -9.384997367858887
    10. '[m' → logprob: -9.634997367858887

Token 285: '(c' (ID: 2410)
  Prédit: '(g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(g' → logprob: -0.09856298565864563
    2. '(' → logprob: -2.7235629558563232
    3. '(filter' → logprob: -3.7235629558563232
    4. '(map' → logprob: -6.098563194274902
    5. '([' → logprob: -6.723563194274902
    6. '(
' → logprob: -7.973563194274902
    7. '((' → logprob: -9.973563194274902
    8. '(sorted' → logprob: -10.348563194274902
    9. '(list' → logprob: -10.473563194274902
    10. '(`' → logprob: -10.848563194274902

Token 286: ' for' (ID: 395)
  Prédit: '(filter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(filter' → logprob: -0.007142513524740934
    2. 'filter' → logprob: -5.132142543792725
    3. '[' → logprob: -7.507142543792725
    4. 'ilter' → logprob: -8.007142066955566
    5. '.filter' → logprob: -9.007142066955566
    6. '([' → logprob: -10.007142066955566
    7. ' filter' → logprob: -10.382142066955566
    8. 'om' → logprob: -10.882142066955566
    9. 'ont' → logprob: -11.007142066955566
    10. 'omp' → logprob: -11.132142066955566

Token 287: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.16025082767009735
    2. ' c' → logprob: -1.9102507829666138
    3. '	c' → logprob: -10.535250663757324
    4. ' ' → logprob: -17.03525161743164
    5. ' ' → logprob: -17.16025161743164
    6. '  ' → logprob: -17.53525161743164
    7. '$c' → logprob: -17.78525161743164
    8. ')c' → logprob: -17.78525161743164
    9. '   ' → logprob: -17.91025161743164
    10. '_c' → logprob: -19.41025161743164

Token 288: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03739815577864647
    2. ' c' → logprob: -3.412398099899292
    3. ' ' → logprob: -5.912398338317871
    4. 'in' → logprob: -7.912398338317871
    5. ' ' → logprob: -7.912398338317871
    6. '  ' → logprob: -8.537398338317871
    7. 'c' → logprob: -10.162398338317871
    8. '   ' → logprob: -10.537398338317871
    9. ' g' → logprob: -11.287398338317871
    10. '	c' → logprob: -11.412398338317871

Token 289: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.008615515194833279
    2. ' g' → logprob: -4.758615493774414
    3. '	g' → logprob: -14.758615493774414
    4. 'c' → logprob: -15.008615493774414
    5. ' ' → logprob: -16.133615493774414
    6. '   ' → logprob: -17.508615493774414
    7. '_g' → logprob: -17.633615493774414
    8. '(g' → logprob: -17.758615493774414
    9. ' ' → logprob: -18.133615493774414
    10. '.g' → logprob: -18.383615493774414

Token 290: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.47407954931259155
    2. 'if' → logprob: -0.9740795493125916
    3. ' ' → logprob: -13.849079132080078
    4. ')' → logprob: -14.599079132080078
    5. '   ' → logprob: -15.099079132080078
    6. '  ' → logprob: -15.224079132080078
    7. 'If' → logprob: -16.099079132080078
    8. '	if' → logprob: -16.099079132080078
    9. 'f' → logprob: -16.724079132080078
    10. 'c' → logprob: -16.849079132080078

Token 291: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.017553672194480896
    2. ' c' → logprob: -4.267553806304932
    3. 'len' → logprob: -5.767553806304932
    4. ' len' → logprob: -8.267553329467773
    5. '	c' → logprob: -15.767553329467773
    6. ' ' → logprob: -16.142553329467773
    7. '(len' → logprob: -17.142553329467773
    8. '   ' → logprob: -17.517553329467773
    9. '
' → logprob: -17.642553329467773
    10. ')c' → logprob: -17.892553329467773

Token 292: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00037073178100399673
    2. ')!=' → logprob: -9.250370979309082
    3. '])' → logprob: -9.375370979309082
    4. '):' → logprob: -10.000370979309082
    5. ')]' → logprob: -10.125370979309082
    6. ')c' → logprob: -10.875370979309082
    7. ']' → logprob: -11.250370979309082
    8. '])]' → logprob: -11.250370979309082
    9. ')>' → logprob: -11.500370979309082
    10. '!=' → logprob: -11.875370979309082

Token 293: 'n' (ID: 77)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6808236241340637
    2. '<|end|>' → logprob: -1.305823564529419
    3. '#' → logprob: -2.180823564529419
    4. '
' → logprob: -2.930823564529419
    5. '[' → logprob: -3.930823564529419
    6. ':' → logprob: -4.430823802947998
    7. 'def' → logprob: -4.930823802947998
    8. '.' → logprob: -5.055823802947998
    9. '```' → logprob: -5.805823802947998
    10. '(' → logprob: -6.680823802947998

Token 294: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18268339335918427
    2. '=' → logprob: -1.9326833486557007
    3. ',' → logprob: -4.30768346786499
    4. ' ' → logprob: -4.93268346786499
    5. ' ,' → logprob: -8.057682991027832
    6. ' =
' → logprob: -8.557682991027832
    7. '.' → logprob: -8.682682991027832
    8. '<|end|>' → logprob: -8.807682991027832
    9. '  ' → logprob: -9.057682991027832
    10. ')' → logprob: -9.057682991027832

Token 295: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.44857674837112427
    2. 'q' → logprob: -1.9485766887664795
    3. ' m' → logprob: -2.1985766887664795
    4. ' q' → logprob: -2.5735766887664795
    5. 'k' → logprob: -3.8235766887664795
    6. ' k' → logprob: -5.323576927185059
    7. 'edges' → logprob: -6.448576927185059
    8. ' =' → logprob: -6.948576927185059
    9. '=' → logprob: -7.198576927185059
    10. ' edges' → logprob: -7.698576927185059

Token 296: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.34886521100997925
    2. '=' → logprob: -1.223865270614624
    3. ',' → logprob: -7.848865032196045
    4. '=input' → logprob: -10.723865509033203
    5. ' ,' → logprob: -13.098865509033203
    6. ' =
' → logprob: -13.223865509033203
    7. '=int' → logprob: -13.348865509033203
    8. ' ' → logprob: -13.598865509033203
    9. ' =
' → logprob: -15.723865509033203
    10. '=

' → logprob: -15.723865509033203

Token 297: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.3869291841983795
    2. ' map' → logprob: -1.1369291543960571
    3. ' ' → logprob: -10.261929512023926
    4. '0' → logprob: -11.636929512023926
    5. 'list' → logprob: -12.136929512023926
    6. '5' → logprob: -13.136929512023926
    7. '[' → logprob: -13.636929512023926
    8. '	map' → logprob: -13.636929512023926
    9. '10' → logprob: -13.886929512023926
    10. ' list' → logprob: -13.886929512023926

Token 298: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0011425995035097003
    2. '(' → logprob: -6.876142501831055
    3. '(input' → logprob: -9.376142501831055
    4. 'int' → logprob: -11.626142501831055
    5. '(str' → logprob: -11.876142501831055
    6. '(list' → logprob: -13.376142501831055
    7. '(map' → logprob: -13.376142501831055
    8. '(
' → logprob: -13.501142501831055
    9. '(in' → logprob: -13.626142501831055
    10. '[int' → logprob: -14.251142501831055

Token 299: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.028573917225003242
    2. ',input' → logprob: -4.028573989868164
    3. 'input' → logprob: -5.278573989868164
    4. '(' → logprob: -6.153573989868164
    5. '()' → logprob: -6.903573989868164
    6. ',' → logprob: -7.278573989868164
    7. '=input' → logprob: -7.528573989868164
    8. '(),' → logprob: -7.903573989868164
    9. '().' → logprob: -8.653573989868164
    10. '(int' → logprob: -9.278573989868164

Token 300: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.002477081725373864
    2. ' input' → logprob: -6.002477169036865
    3. 'int' → logprob: -14.877476692199707
    4. 'open' → logprob: -15.252476692199707
    5. '0' → logprob: -15.752476692199707
    6. 'str' → logprob: -16.127477645874023
    7. 'map' → logprob: -16.252477645874023
    8. 'list' → logprob: -16.502477645874023
    9. '(input' → logprob: -16.627477645874023
    10. '=input' → logprob: -16.752477645874023

Token 301: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00016039233014453202
    2. '()' → logprob: -8.750160217285156
    3. '())' → logprob: -13.500160217285156
    4. '()
' → logprob: -15.500160217285156
    5. '()[' → logprob: -16.500160217285156
    6. ' ().' → logprob: -16.750160217285156
    7. '(),' → logprob: -17.500160217285156
    8. '(' → logprob: -17.875160217285156
    9. '()>' → logprob: -18.625160217285156
    10. '().
' → logprob: -18.625160217285156

Token 302: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0002632430987432599
    2. 'strip' → logprob: -8.250263214111328
    3. ' split' → logprob: -14.000263214111328
    4. '(split' → logprob: -14.125263214111328
    5. 'rstrip' → logprob: -15.750263214111328
    6. '().' → logprob: -16.125263214111328
    7. 'spl' → logprob: -16.750263214111328
    8. 'read' → logprob: -17.250263214111328
    9. ')' → logprob: -17.500263214111328
    10. '()' → logprob: -18.375263214111328

Token 303: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.10080339014530182
    2. '()' → logprob: -2.3508033752441406
    3. ')' → logprob: -7.725803375244141
    4. '('' → logprob: -9.72580337524414
    5. '(' → logprob: -10.10080337524414
    6. '(),' → logprob: -10.47580337524414
    7. '())
' → logprob: -11.60080337524414
    8. '(','' → logprob: -12.10080337524414
    9. '());' → logprob: -13.10080337524414
    10. '("' → logprob: -13.10080337524414

Token 304: 'v' (ID: 85)
  Prédit: 'ds'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ds' → logprob: -0.01641813851892948
    2. 'edges' → logprob: -4.766417980194092
    3. 'd' → logprob: -4.891417980194092
    4. 'graph' → logprob: -9.51641845703125
    5. 'uf' → logprob: -10.26641845703125
    6. 'g' → logprob: -10.76641845703125
    7. 'e' → logprob: -11.26641845703125
    8. 'ed' → logprob: -11.64141845703125
    9. 'edge' → logprob: -11.64141845703125
    10. 'a' → logprob: -11.64141845703125

Token 305: 'data' (ID: 1074)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3799419701099396
    2. '=' → logprob: -1.8799419403076172
    3. 'al' → logprob: -2.004941940307617
    4. 'als' → logprob: -4.504941940307617
    5. 's' → logprob: -5.004941940307617
    6. '=[]' → logprob: -5.879941940307617
    7. 'ectors' → logprob: -6.629941940307617
    8. 'alue' → logprob: -6.879941940307617
    9. 'alid' → logprob: -6.879941940307617
    10. ',' → logprob: -7.379941940307617

Token 306: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20520439743995667
    2. ' =' → logprob: -1.7052043676376343
    3. 's' → logprob: -6.330204486846924
    4. '_' → logprob: -6.830204486846924
    5. ',' → logprob: -7.580204486846924
    6. '=[]' → logprob: -8.455204010009766
    7. '[]' → logprob: -8.955204010009766
    8. '_=' → logprob: -11.580204010009766
    9. '=[]
' → logprob: -11.705204010009766
    10. '_list' → logprob: -11.830204010009766

Token 307: ' []
' (ID: 8911)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.6220060586929321
    2. '[' → logprob: -1.1220060586929321
    3. '[]' → logprob: -2.1220059394836426
    4. 'list' → logprob: -5.247005939483643
    5. '[int' → logprob: -5.497005939483643
    6. '[input' → logprob: -5.872005939483643
    7. '[]
' → logprob: -6.747005939483643
    8. ' [' → logprob: -7.122005939483643
    9. '[n' → logprob: -7.622005939483643
    10. '[List' → logprob: -7.872005939483643

Token 308: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0005395700572989881
    2. ' for' → logprob: -8.125539779663086
    3. 'edges' → logprob: -9.375539779663086
    4. '[' → logprob: -10.375539779663086
    5. '[]' → logprob: -10.625539779663086
    6. 'd' → logprob: -11.250539779663086
    7. '[]
' → logprob: -11.500539779663086
    8. 'v' → logprob: -11.500539779663086
    9. '[v' → logprob: -11.625539779663086
    10. 'graph' → logprob: -11.750539779663086

Token 309: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0009119403548538685
    2. ' _' → logprob: -7.000911712646484
    3. '_i' → logprob: -15.500911712646484
    4. ' i' → logprob: -15.500911712646484
    5. ' ' → logprob: -16.375911712646484
    6. ' range' → logprob: -17.375911712646484
    7. '_range' → logprob: -17.875911712646484
    8. 'i' → logprob: -18.375911712646484
    9. ' in' → logprob: -19.250911712646484
    10. 'range' → logprob: -19.250911712646484

Token 310: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.02368156798183918
    2. 'range' → logprob: -4.398681640625
    3. ' in' → logprob: -4.523681640625
    4. 'n' → logprob: -9.273681640625
    5. 'v' → logprob: -9.898681640625
    6. '_' → logprob: -9.898681640625
    7. ' range' → logprob: -10.648681640625
    8. ' ' → logprob: -10.898681640625
    9. 'data' → logprob: -11.773681640625
    10. 'input' → logprob: -12.273681640625

Token 311: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0004886920796707273
    2. ' range' → logprob: -7.625488758087158
    3. 'v' → logprob: -14.87548828125
    4. 'input' → logprob: -15.75048828125
    5. 'in' → logprob: -16.75048828125
    6. '(range' → logprob: -17.12548828125
    7. '	range' → logprob: -17.25048828125
    8. 'data' → logprob: -17.75048828125
    9. 'r' → logprob: -18.25048828125
    10. '0' → logprob: -18.25048828125

Token 312: '(n' (ID: 2406)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -2.935296834039036e-06
    2. '(' → logprob: -12.87500286102295
    3. 'm' → logprob: -15.50000286102295
    4. '(n' → logprob: -15.75000286102295
    5. '(
' → logprob: -18.125003814697266
    6. ' (' → logprob: -19.375003814697266
    7. '(M' → logprob: -20.125003814697266
    8. '(int' → logprob: -20.500003814697266
    9. '((' → logprob: -21.625003814697266
    10. ' m' → logprob: -22.000003814697266

Token 313: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.18071821331977844
    2. '):' → logprob: -1.805718183517456
    3. ')' → logprob: -7.555718421936035
    4. '):
' → logprob: -8.430718421936035
    5. ',' → logprob: -9.305718421936035
    6. ' ):
' → logprob: -10.055718421936035
    7. ':' → logprob: -10.305718421936035
    8. '():
' → logprob: -11.180718421936035
    9. ':
' → logprob: -11.180718421936035
    10. ' ):' → logprob: -11.555718421936035

Token 314: '   ' (ID: 271)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.2621191740036011
    2. '   ' → logprob: -1.512119174003601
    3. ' v' → logprob: -5.637119293212891
    4. 'data' → logprob: -6.137119293212891
    5. '	v' → logprob: -6.387119293212891
    6. '
' → logprob: -7.012119293212891
    7. ',v' → logprob: -7.387119293212891
    8. 'int' → logprob: -7.637119293212891
    9. '_v' → logprob: -8.51211929321289
    10. 'x' → logprob: -9.26211929321289

Token 315: ' a' (ID: 261)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.04174859821796417
    2. 'a' (adapté à ' a') → logprob: -3.916748523712158
    3. 'x' → logprob: -4.291748523712158
    4. 'l' → logprob: -5.916748523712158
    5. ' v' → logprob: -6.666748523712158
    6. 'data' → logprob: -7.291748523712158
    7. 'w' → logprob: -7.541748523712158
    8. 'c' → logprob: -8.291749000549316
    9. '_v' → logprob: -8.291749000549316
    10. 'd' → logprob: -8.541749000549316

Token 316: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.983323872089386
    2. ',b' → logprob: -0.983323872089386
    3. ' =' → logprob: -1.7333238124847412
    4. '=' → logprob: -2.733323812484741
    5. 'b' → logprob: -4.85832405090332
    6. ' ,' → logprob: -7.10832405090332
    7. ',v' → logprob: -8.23332405090332
    8. 'r' → logprob: -8.48332405090332
    9. 'data' → logprob: -8.60832405090332
    10. 'rray' → logprob: -8.85832405090332

Token 317: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0050791106186807156
    2. ' b' → logprob: -5.38007926940918
    3. '_' → logprob: -8.75507926940918
    4. '_=' → logprob: -9.00507926940918
    5. 'v' → logprob: -10.50507926940918
    6. 'd' → logprob: -10.63007926940918
    7. '=' → logprob: -10.75507926940918
    8. 's' → logprob: -11.00507926940918
    9. 'p' → logprob: -11.13007926940918
    10. 't' → logprob: -11.25507926940918

Token 318: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.038646548986434937
    2. ' =' → logprob: -3.2886464595794678
    3. ',' → logprob: -7.413646697998047
    4. '=int' → logprob: -14.788646697998047
    5. '   ' → logprob: -15.163646697998047
    6. ')' → logprob: -15.163646697998047
    7. '=input' → logprob: -15.163646697998047
    8. ' ' → logprob: -15.413646697998047
    9. ' ,' → logprob: -16.163646697998047
    10. 'a' → logprob: -16.663646697998047

Token 319: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.029752222821116447
    2. ' map' → logprob: -3.529752254486084
    3. 'input' → logprob: -13.904751777648926
    4. '	map' → logprob: -14.529751777648926
    5. '
' → logprob: -15.654751777648926
    6. ' ' → logprob: -16.279752731323242
    7. ' input' → logprob: -16.904752731323242
    8. 'list' → logprob: -17.279752731323242
    9. '   ' → logprob: -18.029752731323242
    10. '(map' → logprob: -18.279752731323242

Token 320: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -7.100059156073257e-05
    2. 'int' → logprob: -9.625070571899414
    3. '(' → logprob: -12.875070571899414
    4. '(str' → logprob: -14.000070571899414
    5. '[int' → logprob: -14.875070571899414
    6. '<int' → logprob: -15.250070571899414
    7. '=int' → logprob: -15.375070571899414
    8. ' int' → logprob: -15.625070571899414
    9. '(input' → logprob: -15.750070571899414
    10. ' (' → logprob: -16.000070571899414

Token 321: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.47782233357429504
    2. ',' → logprob: -0.9778223037719727
    3. 'input' → logprob: -6.227822303771973
    4. '(input' → logprob: -7.227822303771973
    5. '(),' → logprob: -7.227822303771973
    6. '().' → logprob: -9.477822303771973
    7. ',int' → logprob: -9.602822303771973
    8. ' ,' → logprob: -9.602822303771973
    9. '   ' → logprob: -9.852822303771973
    10. '(' → logprob: -10.852822303771973

Token 322: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0005533903022296727
    2. ' input' → logprob: -7.500553607940674
    3. 'int' → logprob: -15.000553131103516
    4. 'str' → logprob: -16.625553131103516
    5. 'map' → logprob: -17.750553131103516
    6. 'list' → logprob: -19.000553131103516
    7. ' ' → logprob: -19.750553131103516
    8. '_input' → logprob: -20.875553131103516
    9. 'Input' → logprob: -21.125553131103516
    10. 'stdin' → logprob: -21.250553131103516

Token 323: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.5107177862082608e-05
    2. '()' → logprob: -10.625024795532227
    3. '())' → logprob: -14.875024795532227
    4. ' ().' → logprob: -15.125024795532227
    5. '(' → logprob: -17.250024795532227
    6. ')' → logprob: -17.250024795532227
    7. '.' → logprob: -19.125024795532227
    8. '()
' → logprob: -19.875024795532227
    9. 'split' → logprob: -20.625024795532227
    10. '().__' → logprob: -20.750024795532227

Token 324: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -3.128163257315464e-07
    2. ' split' → logprob: -15.25
    3. 'strip' → logprob: -17.5
    4. '(split' → logprob: -18.75
    5. '.split' → logprob: -20.125
    6. 'spl' → logprob: -21.25
    7. 'rstrip' → logprob: -21.875
    8. 'plit' → logprob: -23.0
    9. ')' → logprob: -23.5
    10. '_split' → logprob: -24.5

Token 325: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.25907039642333984
    2. ')' → logprob: -1.5090703964233398
    3. '()' → logprob: -5.50907039642334
    4. '())
' → logprob: -5.88407039642334
    5. ')
' → logprob: -8.25907039642334
    6. '(' → logprob: -11.75907039642334
    7. '())
' → logprob: -12.25907039642334
    8. '()
' → logprob: -12.63407039642334
    9. '())

' → logprob: -13.63407039642334
    10. '))' → logprob: -13.63407039642334

Token 326: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12805621325969696
    2. 'v' → logprob: -2.128056287765503
    3. ' v' → logprob: -7.128056049346924
    4. '<|end|>' → logprob: -9.003056526184082
    5. '	v' → logprob: -9.128056526184082
    6. ')' → logprob: -10.253056526184082
    7. '
' → logprob: -10.503056526184082
    8. ' ' → logprob: -11.503056526184082
    9. ',' → logprob: -12.503056526184082
    10. ',v' → logprob: -13.003056526184082

Token 327: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.011072585359215736
    2. ' v' → logprob: -4.636072635650635
    3. '   ' → logprob: -6.636072635650635
    4. '	v' → logprob: -12.886072158813477
    5. ' ' → logprob: -14.136072158813477
    6. '
' → logprob: -15.761072158813477
    7. '  ' → logprob: -16.011072158813477
    8. 'a' → logprob: -17.636072158813477
    9. '[v' → logprob: -17.886072158813477
    10. 'vq' → logprob: -18.261072158813477

Token 328: 'data' (ID: 1074)
  Prédit: 'data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -7.896309739408025e-07
    2. 'ata' → logprob: -14.250000953674316
    3. '_data' → logprob: -16.5
    4. 'adata' → logprob: -16.5
    5. 'a' → logprob: -17.75
    6. ' data' → logprob: -18.375
    7. '.data' → logprob: -19.5
    8. ' =' → logprob: -19.875
    9. '	data' → logprob: -19.875
    10. '   ' → logprob: -20.125

Token 329: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0005582740413956344
    2. '.' → logprob: -7.500558376312256
    3. '.ap' → logprob: -12.375557899475098
    4. '.app' → logprob: -14.750557899475098
    5. ' .' → logprob: -14.875557899475098
    6. '.extend' → logprob: -15.750557899475098
    7. '.add' → logprob: -17.250558853149414
    8. 'append' → logprob: -17.750558853149414
    9. '.a' → logprob: -17.750558853149414
    10. ').' → logprob: -18.125558853149414

Token 330: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.005668760742992163
    2. '(' → logprob: -5.255668640136719
    3. '(a' → logprob: -7.755668640136719
    4. '([' → logprob: -12.005668640136719
    5. '(
' → logprob: -15.255668640136719
    6. '((_' → logprob: -16.13066864013672
    7. '(b' → logprob: -16.50566864013672
    8. '(('' → logprob: -17.13066864013672
    9. ' (' → logprob: -17.63066864013672
    10. '(("' → logprob: -18.50566864013672

Token 331: 'max' (ID: 3228)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -2.4868770196917467e-05
    2. ' a' → logprob: -10.625024795532227
    3. '   ' → logprob: -15.250024795532227
    4. 'b' → logprob: -16.875024795532227
    5. ' ' → logprob: -16.875024795532227
    6. '(a' → logprob: -16.875024795532227
    7. '
' → logprob: -17.000024795532227
    8. 'int' → logprob: -17.250024795532227
    9. '  ' → logprob: -17.500024795532227
    10. '    ' → logprob: -17.875024795532227

Token 332: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0014910540776327252
    2. '(' → logprob: -7.251491069793701
    3. 'a' → logprob: -7.251491069793701
    4. '0' → logprob: -9.876490592956543
    5. '(abs' → logprob: -11.876490592956543
    6. ',a' → logprob: -12.376490592956543
    7. ',' → logprob: -13.251490592956543
    8. ')' → logprob: -13.376490592956543
    9. ')a' → logprob: -13.751490592956543
    10. 'abs' → logprob: -13.876490592956543

Token 333: ' -' (ID: 533)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03466861695051193
    2. ',b' → logprob: -3.4096686840057373
    3. ' ,' → logprob: -6.909668445587158
    4. 'b' → logprob: -11.284668922424316
    5. ',
' → logprob: -13.034668922424316
    6. '-' → logprob: -13.659668922424316
    7. '),' → logprob: -13.784668922424316
    8. '+' → logprob: -13.784668922424316
    9. '+b' → logprob: -13.784668922424316
    10. ' -' → logprob: -14.284668922424316

Token 334: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.5639985203742981
    2. '1' → logprob: -0.9389985203742981
    3. '0' → logprob: -3.5639984607696533
    4. '100' → logprob: -5.188998699188232
    5. 'm' → logprob: -6.313998699188232
    6. ' ' → logprob: -7.063998699188232
    7. '2' → logprob: -7.438998699188232
    8. ' b' → logprob: -7.438998699188232
    9. '10' → logprob: -7.813998699188232
    10. 'v' → logprob: -7.813998699188232

Token 335: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0022110389545559883
    2. ' ,' → logprob: -6.502211093902588
    3. '),' → logprob: -7.502211093902588
    4. ')' → logprob: -10.25221061706543
    5. ',b' → logprob: -10.62721061706543
    6. ',
' → logprob: -11.00221061706543
    7. ',n' → logprob: -11.12721061706543
    8. '+' → logprob: -11.25221061706543
    9. ',a' → logprob: -11.87721061706543
    10. ' +' → logprob: -12.12721061706543

Token 336: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04253136366605759
    2. ' ' → logprob: -3.2925312519073486
    3. 'a' → logprob: -6.292531490325928
    4. '1' → logprob: -6.417531490325928
    5. 'b' → logprob: -7.917531490325928
    6. ' a' → logprob: -8.41753101348877
    7. '-' → logprob: -8.54253101348877
    8. ' -' → logprob: -9.66753101348877
    9. ' b' → logprob: -10.04253101348877
    10. '-a' → logprob: -10.48003101348877

Token 337: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008215723559260368
    2. ' ' → logprob: -6.13321590423584
    3. 'a' → logprob: -6.38321590423584
    4. '-' → logprob: -6.50821590423584
    5. 'b' → logprob: -6.75821590423584
    6. '1' → logprob: -7.38321590423584
    7. '-b' → logprob: -7.50821590423584
    8. '-a' → logprob: -8.38321590423584
    9. '-(' → logprob: -9.38321590423584
    10. ' -' → logprob: -9.75821590423584

Token 338: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05021035298705101
    2. '),' → logprob: -3.0502102375030518
    3. ')' → logprob: -7.675210475921631
    4. '))' → logprob: -7.800210475921631
    5. ' ,' → logprob: -8.050209999084473
    6. ')))' → logprob: -8.175209999084473
    7. ',
' → logprob: -10.425209999084473
    8. ')),' → logprob: -10.675209999084473
    9. ' ),' → logprob: -11.050209999084473
    10. ',b' → logprob: -11.050209999084473

Token 339: ' b' (ID: 287)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.42683088779449463
    2. 'max' → logprob: -2.301830768585205
    3. 'min' → logprob: -2.551830768585205
    4. ' a' → logprob: -2.926830768585205
    5. ' max' → logprob: -3.051830768585205
    6. 'b' → logprob: -3.426830768585205
    7. ' min' → logprob: -3.551830768585205
    8. ' b' → logprob: -5.426830768585205
    9. '0' → logprob: -6.426830768585205
    10. 'abs' → logprob: -8.051831245422363

Token 340: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -4.143808109802194e-05
    2. '))
' → logprob: -10.625041007995605
    3. ' ))' → logprob: -11.750041007995605
    4. ')' → logprob: -11.875041007995605
    5. ')))' → logprob: -13.750041007995605
    6. ',' → logprob: -14.250041007995605
    7. '))

' → logprob: -15.750041007995605
    8. '   ' → logprob: -16.500041961669922
    9. ' ' → logprob: -16.625041961669922
    10. '));' → logprob: -16.625041961669922

Token 341: 'to' (ID: 935)
  Prédit: 'ds'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ds' → logprob: -0.025967802852392197
    2. 'v' → logprob: -4.150967597961426
    3. 'ans' → logprob: -6.150967597961426
    4. 'd' → logprob: -6.275967597961426
    5. 'uf' → logprob: -6.525967597961426
    6. 'dp' → logprob: -7.150967597961426
    7. 'edges' → logprob: -7.525967597961426
    8. 's' → logprob: -7.900967597961426
    9. '
' → logprob: -8.150967597961426
    10. 'u' → logprob: -8.525967597961426

Token 342: ' =' (ID: 314)
  Prédit: 'tal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tal' → logprob: -0.0179660152643919
    2. 't' → logprob: -4.142965793609619
    3. 'al' → logprob: -7.767965793609619
    4. 'p' → logprob: -8.017966270446777
    5. 'ols' → logprob: -8.392966270446777
    6. 'ol' → logprob: -8.767966270446777
    7. '_merge' → logprob: -8.767966270446777
    8. 'sort' → logprob: -9.892966270446777
    9. 'u' → logprob: -9.892966270446777
    10. 'data' → logprob: -10.142966270446777

Token 343: ' [[]' (ID: 182908)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0189541578292847
    2. 'ds' → logprob: -1.0189541578292847
    3. '[]' → logprob: -2.643954277038574
    4. '[n' → logprob: -3.018954277038574
    5. 'd' → logprob: -3.643954277038574
    6. '0' → logprob: -3.643954277038574
    7. '[d' → logprob: -3.768954277038574
    8. ' [' → logprob: -4.143954277038574
    9. '[m' → logprob: -4.268954277038574
    10. 'n' → logprob: -4.768954277038574

Token 344: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.31389620900154114
    2. ' for' → logprob: -1.3138961791992188
    3. ')' → logprob: -8.063896179199219
    4. ']' → logprob: -8.313896179199219
    5. ' ' → logprob: -10.313896179199219
    6. '
' → logprob: -11.063896179199219
    7. '   ' → logprob: -11.688896179199219
    8. ',' → logprob: -11.813896179199219
    9. '	for' → logprob: -13.188896179199219
    10. 'n' → logprob: -13.188896179199219

Token 345: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.01822778768837452
    2. 'range' → logprob: -4.393227577209473
    3. ' range' → logprob: -5.268227577209473
    4. 'in' → logprob: -8.018227577209473
    5. ' _' → logprob: -9.143227577209473
    6. ' in' → logprob: -9.393227577209473
    7. '_range' → logprob: -11.268227577209473
    8. 'i' → logprob: -12.518227577209473
    9. '_=' → logprob: -12.893227577209473
    10. '(range' → logprob: -13.143227577209473

Token 346: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.008405707776546478
    2. 'in' → logprob: -5.008405685424805
    3. ' range' → logprob: -6.508405685424805
    4. ' in' → logprob: -8.758405685424805
    5. '(range' → logprob: -10.258405685424805
    6. 'n' → logprob: -12.508405685424805
    7. '(n' → logprob: -13.633405685424805
    8. 'm' → logprob: -14.883405685424805
    9. 'v' → logprob: -15.633405685424805
    10. '(' → logprob: -16.133405685424805

Token 347: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.02327471412718296
    2. ' range' → logprob: -3.7732746601104736
    3. '(range' → logprob: -10.773274421691895
    4. 'v' → logprob: -12.148274421691895
    5. 'r' → logprob: -13.398274421691895
    6. 'ra' → logprob: -15.523274421691895
    7. 'rang' → logprob: -15.648274421691895
    8. '   ' → logprob: -15.648274421691895
    9. 'm' → logprob: -15.898274421691895
    10. 'ran' → logprob: -15.898274421691895

Token 348: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3007870614528656
    2. 'm' → logprob: -1.550787091255188
    3. '(n' → logprob: -3.4257869720458984
    4. '(m' → logprob: -4.675786972045898
    5. ' n' → logprob: -5.800786972045898
    6. '(' → logprob: -6.550786972045898
    7. 'v' → logprob: -7.800786972045898
    8. ' m' → logprob: -7.925786972045898
    9. ' (' → logprob: -8.675786972045898
    10. '2' → logprob: -9.550786972045898

Token 349: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -4.8590300139039755e-05
    2. ')]
' → logprob: -10.625048637390137
    3. ')' → logprob: -11.375048637390137
    4. ' )' → logprob: -11.750048637390137
    5. ']' → logprob: -12.500048637390137
    6. ')]
' → logprob: -15.000048637390137
    7. ')]

' → logprob: -15.375048637390137
    8. '+' → logprob: -15.625048637390137
    9. ' ]' → logprob: -16.00004768371582
    10. '])' → logprob: -17.12504768371582

Token 350: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0008885911083780229
    2. 'ds' → logprob: -8.12588882446289
    3. 'edges' → logprob: -8.25088882446289
    4. ' for' → logprob: -9.37588882446289
    5. 'uf' → logprob: -10.00088882446289
    6. 'deg' → logprob: -10.37588882446289
    7. 'd' → logprob: -10.87588882446289
    8. 'u' → logprob: -11.12588882446289
    9. 'degree' → logprob: -11.12588882446289
    10. 'q' → logprob: -11.75088882446289

Token 351: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.008040360175073147
    2. ' _' → logprob: -4.883040428161621
    3. '_i' → logprob: -8.258040428161621
    4. 'i' → logprob: -9.258040428161621
    5. ' i' → logprob: -9.508040428161621
    6. '__' → logprob: -13.258040428161621
    7. '_j' → logprob: -13.758040428161621
    8. '_=' → logprob: -13.883040428161621
    9. '_
' → logprob: -15.383040428161621
    10. ' ' → logprob: -15.383040428161621

Token 352: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.048726800829172134
    2. ' in' → logprob: -3.048726797103882
    3. '_' → logprob: -9.798727035522461
    4. ' ' → logprob: -10.673727035522461
    5. 'range' → logprob: -10.673727035522461
    6. 'i' → logprob: -10.923727035522461
    7. 'n' → logprob: -12.173727035522461
    8. ' _' → logprob: -12.548727035522461
    9. ',' → logprob: -12.798727035522461
    10. '_in' → logprob: -12.923727035522461

Token 353: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0021923754829913378
    2. ' range' → logprob: -6.127192497253418
    3. 'r' → logprob: -12.752192497253418
    4. 'ra' → logprob: -14.002192497253418
    5. 'in' → logprob: -14.127192497253418
    6. ' ' → logprob: -14.627192497253418
    7. '(range' → logprob: -14.752192497253418
    8. 'm' → logprob: -14.877192497253418
    9. 'v' → logprob: -15.377192497253418
    10. 'ran' → logprob: -15.502192497253418

Token 354: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.0008145124302245677
    2. ' (' → logprob: -7.875814437866211
    3. 'm' → logprob: -8.000814437866211
    4. ' m' → logprob: -9.750814437866211
    5. '(' → logprob: -10.125814437866211
    6. '(
' → logprob: -14.125814437866211
    7. '	m' → logprob: -16.25081443786621
    8. '   ' → logprob: -18.00081443786621
    9. '(n' → logprob: -18.25081443786621
    10. ' ' → logprob: -18.25081443786621

Token 355: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6935515999794006
    2. '):' → logprob: -0.6935515999794006
    3. '):
' → logprob: -7.943551540374756
    4. ')' → logprob: -10.568552017211914
    5. ' ):' → logprob: -11.818552017211914
    6. ' ):
' → logprob: -12.193552017211914
    7. ':' → logprob: -12.318552017211914
    8. '():
' → logprob: -12.818552017211914
    9. '):

' → logprob: -13.943552017211914
    10. ' ' → logprob: -13.943552017211914

Token 356: '   ' (ID: 271)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.22745227813720703
    2. 'u' → logprob: -2.727452278137207
    3. ' a' → logprob: -2.727452278137207
    4. ' u' → logprob: -3.102452278137207
    5. '   ' → logprob: -3.602452278137207
    6. 'c' → logprob: -8.852452278137207
    7. 'x' → logprob: -9.227452278137207
    8. ' c' → logprob: -10.352452278137207
    9. ' ' → logprob: -10.602452278137207
    10. 's' → logprob: -10.602452278137207

Token 357: ' u' (ID: 337)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.010462980717420578
    2. 'u' (adapté à ' u') → logprob: -4.885462760925293
    3. 'x' → logprob: -6.385462760925293
    4. ' a' → logprob: -6.885462760925293
    5. ' u' → logprob: -9.635462760925293
    6. 'c' → logprob: -10.385462760925293
    7. 'l' → logprob: -11.010462760925293
    8. 'i' → logprob: -11.885462760925293
    9. 'f' → logprob: -12.135462760925293
    10. 's' → logprob: -12.260462760925293

Token 358: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003119863977190107
    2. ' ,' → logprob: -8.500311851501465
    3. ',v' → logprob: -9.250311851501465
    4. '_,' → logprob: -12.875311851501465
    5. ',n' → logprob: -13.250311851501465
    6. ',b' → logprob: -13.250311851501465
    7. ',u' → logprob: -13.625311851501465
    8. 'a' → logprob: -13.875311851501465
    9. 's' → logprob: -14.375311851501465
    10. '1' → logprob: -14.500311851501465

Token 359: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.3132641315460205
    2. ' v' → logprob: -1.3132641315460205
    3. ',v' → logprob: -13.688263893127441
    4. ' ' → logprob: -14.313263893127441
    5. '	v' → logprob: -14.313263893127441
    6. '_v' → logprob: -16.688264846801758
    7. ',' → logprob: -18.188264846801758
    8. 'd' → logprob: -18.938264846801758
    9. 'u' → logprob: -19.313264846801758
    10. 'w' → logprob: -19.938264846801758

Token 360: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38687190413475037
    2. ' =' → logprob: -1.1368719339370728
    3. ' ' → logprob: -15.386872291564941
    4. '=u' → logprob: -15.386872291564941
    5. '=input' → logprob: -15.886872291564941
    6. ',' → logprob: -16.511871337890625
    7. ')' → logprob: -16.636871337890625
    8. '   ' → logprob: -16.761871337890625
    9. '=int' → logprob: -17.011871337890625
    10. 'u' → logprob: -17.261871337890625

Token 361: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.31326231360435486
    2. 'map' → logprob: -1.3132623434066772
    3. '   ' → logprob: -15.563261985778809
    4. '	map' → logprob: -15.813261985778809
    5. '(map' → logprob: -15.938261985778809
    6. '[' → logprob: -16.938262939453125
    7. ' ' → logprob: -17.188262939453125
    8. '.map' → logprob: -17.313262939453125
    9. 'm' → logprob: -17.938262939453125
    10. ',map' → logprob: -18.813262939453125

Token 362: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0024944450706243515
    2. 'int' → logprob: -6.0024943351745605
    3. '[int' → logprob: -11.752494812011719
    4. '=int' → logprob: -11.877494812011719
    5. '   ' → logprob: -13.752494812011719
    6. ',int' → logprob: -14.002494812011719
    7. '```' → logprob: -14.252494812011719
    8. '<int' → logprob: -14.502494812011719
    9. ']int' → logprob: -15.127494812011719
    10. ':int' → logprob: -15.627494812011719

Token 363: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2979186475276947
    2. '(),' → logprob: -1.422918677330017
    3. ',int' → logprob: -4.672918796539307
    4. 'int' → logprob: -5.047918796539307
    5. ' ,' → logprob: -8.422918319702148
    6. '(int' → logprob: -8.547918319702148
    7. '   ' → logprob: -9.172918319702148
    8. '()' → logprob: -9.422918319702148
    9. ',input' → logprob: -9.422918319702148
    10. 'input' → logprob: -10.047918319702148

Token 364: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.324042409658432
    2. 'int' → logprob: -1.3240424394607544
    3. ' input' → logprob: -4.574042320251465
    4. 'str' → logprob: -7.949042320251465
    5. ' int' → logprob: -10.824042320251465
    6. '   ' → logprob: -11.574042320251465
    7. 'list' → logprob: -11.949042320251465
    8. '(int' → logprob: -12.574042320251465
    9. '0' → logprob: -12.699042320251465
    10. '1' → logprob: -12.949042320251465

Token 365: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.25558504462242126
    2. '()' → logprob: -1.5055850744247437
    3. '()
' → logprob: -5.880585193634033
    4. ')' → logprob: -7.880585193634033
    5. '())' → logprob: -8.755584716796875
    6. ' ()' → logprob: -10.005584716796875
    7. '(),' → logprob: -10.130584716796875
    8. '()[' → logprob: -10.255584716796875
    9. '   ' → logprob: -10.505584716796875
    10. '();' → logprob: -10.755584716796875

Token 366: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.2200749754119897e-06
    2. ' split' → logprob: -13.125001907348633
    3. 'strip' → logprob: -16.625001907348633
    4. '(split' → logprob: -17.500001907348633
    5. 'spl' → logprob: -18.625001907348633
    6. 'skip' → logprob: -19.000001907348633
    7. '1' → logprob: -19.500001907348633
    8. 'plit' → logprob: -19.500001907348633
    9. '.split' → logprob: -19.875001907348633
    10. '0' → logprob: -20.625001907348633

Token 367: '())
' (ID: 4574)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.12833158671855927
    2. ')' → logprob: -2.1283316612243652
    3. ')
' → logprob: -7.128331661224365
    4. '()' → logprob: -8.253331184387207
    5. '())
' → logprob: -8.503331184387207
    6. '()
' → logprob: -9.003331184387207
    7. '())' → logprob: -11.753331184387207
    8. ')

' → logprob: -13.753331184387207
    9. ' )
' → logprob: -14.003331184387207
    10. ')`
' → logprob: -14.253331184387207

Token 368: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5884090065956116
    2. 'u' → logprob: -1.2134089469909668
    3. ' to' → logprob: -2.463408946990967
    4. 'to' → logprob: -3.213408946990967
    5. ' u' → logprob: -3.963408946990967
    6. '
' → logprob: -5.838408946990967
    7. ' 
' → logprob: -8.963409423828125
    8. '	u' → logprob: -9.838409423828125
    9. '[u' → logprob: -10.088409423828125
    10. '    
' → logprob: -10.088409423828125

Token 369: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' (adapté à ' u') → logprob: -0.030335117131471634
    2. 'to' → logprob: -4.030334949493408
    3. ' u' → logprob: -4.530334949493408
    4. ' to' → logprob: -6.655334949493408
    5. '   ' → logprob: -10.280335426330566
    6. '
' → logprob: -12.280335426330566
    7. ' 
' → logprob: -12.530335426330566
    8. '	u' → logprob: -13.530335426330566
    9. '    
' → logprob: -14.280335426330566
    10. 'v' → logprob: -15.030335426330566

Token 370: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.6971086859703064
    2. '-' → logprob: -1.3221087455749512
    3. '-=' → logprob: -1.4471087455749512
    4. ' -' → logprob: -9.072108268737793
    5. ',' → logprob: -11.322108268737793
    6. '[' → logprob: -12.197108268737793
    7. ' ' → logprob: -12.197108268737793
    8. '   ' → logprob: -12.322108268737793
    9. '0' → logprob: -13.072108268737793
    10. '=' → logprob: -13.072108268737793

Token 371: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001398929744027555
    2. ' ' → logprob: -8.875140190124512
    3. '<|end|>' → logprob: -19.875139236450195
    4. '   ' → logprob: -20.250139236450195
    5. '１' → logprob: -20.500139236450195
    6. '```' → logprob: -20.562639236450195
    7. '=' → logprob: -21.562639236450195
    8. 'to' → logprob: -21.812639236450195
    9. '2' → logprob: -21.937639236450195
    10. '0' → logprob: -22.000139236450195

Token 372: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '```' → logprob: -20.25
    4. '   ' → logprob: -20.625
    5. '１' → logprob: -20.875
    6. '<|end|>' → logprob: -20.9375
    7. '۱' → logprob: -21.5
    8. '2' → logprob: -21.875
    9. '0' → logprob: -22.25
    10. '১' → logprob: -22.375

Token 373: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.17360691726207733
    2. 'v' → logprob: -1.9236068725585938
    3. 'to' → logprob: -5.298606872558594
    4. ' v' → logprob: -5.548606872558594
    5. ' to' → logprob: -6.548606872558594
    6. ',' → logprob: -7.048606872558594
    7. '
' → logprob: -7.298606872558594
    8. ',v' → logprob: -7.548606872558594
    9. ' 
' → logprob: -7.798606872558594
    10. ';' → logprob: -8.423606872558594

Token 374: '   ' (ID: 271)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0105492128059268
    2. '
' → logprob: -4.760549068450928
    3. ' v' → logprob: -7.135549068450928
    4. '   ' → logprob: -7.635549068450928
    5. ',v' → logprob: -8.010549545288086
    6. ',' → logprob: -8.385549545288086
    7. ' 
' → logprob: -10.510549545288086
    8. 'to' → logprob: -10.885549545288086
    9. '
' → logprob: -11.260549545288086
    10. ';' → logprob: -11.635549545288086

Token 375: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -3.4121114822482923e-06
    2. ' v' → logprob: -12.625003814697266
    3. '	v' → logprob: -20.125003814697266
    4. '_v' → logprob: -20.875003814697266
    5. ',v' → logprob: -22.625003814697266
    6. '
' → logprob: -22.875003814697266
    7. 'vq' → logprob: -23.250003814697266
    8. '   ' → logprob: -23.375003814697266
    9. 'vj' → logprob: -23.875003814697266
    10. '[v' → logprob: -24.000003814697266

Token 376: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.06470312178134918
    2. '-=' → logprob: -2.8147032260894775
    3. '-' → logprob: -5.939702987670898
    4. '=' → logprob: -10.314702987670898
    5. '   ' → logprob: -10.439702987670898
    6. ' ' → logprob: -10.939702987670898
    7. ' -' → logprob: -11.564702987670898
    8. ' =' → logprob: -12.939702987670898
    9. '    ' → logprob: -13.564702987670898
    10. 'def' → logprob: -14.189702987670898

Token 377: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03804149478673935
    2. ' ' → logprob: -3.288041591644287
    3. '   ' → logprob: -18.913042068481445
    4. '```' → logprob: -19.538042068481445
    5. '-' → logprob: -19.913042068481445
    6. '<|end|>' → logprob: -20.163042068481445
    7. ' -' → logprob: -20.413042068481445
    8. ' ' → logprob: -21.288042068481445
    9. '  ' → logprob: -21.288042068481445
    10. '0' → logprob: -21.600542068481445

Token 378: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -11.875006675720215
    3. '```' → logprob: -19.87500762939453
    4. '   ' → logprob: -20.37500762939453
    5. '１' → logprob: -20.43750762939453
    6. '2' → logprob: -20.81250762939453
    7. '0' → logprob: -21.25000762939453
    8. '۱' → logprob: -21.68750762939453
    9. '  ' → logprob: -22.00000762939453
    10. 'int' → logprob: -22.12500762939453

Token 379: '
' (ID: 198)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.007357321213930845
    2. ' to' → logprob: -5.257357120513916
    3. '
' → logprob: -6.632357120513916
    4. '   ' → logprob: -7.132357120513916
    5. '[to' → logprob: -12.757357597351074
    6. '.to' → logprob: -14.257357597351074
    7. '
' → logprob: -14.632357597351074
    8. '	to' → logprob: -14.882357597351074
    9. '    
' → logprob: -15.132357597351074
    10. ',to' → logprob: -15.382357597351074

Token 380: '   ' (ID: 271)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.03903264179825783
    2. ' to' → logprob: -3.2890326976776123
    3. '   ' → logprob: -7.039032459259033
    4. '
' → logprob: -9.164032936096191
    5. 'd' → logprob: -12.289032936096191
    6. '[to' → logprob: -13.789032936096191
    7. ' d' → logprob: -14.414032936096191
    8. '.to' → logprob: -14.539032936096191
    9. '    
' → logprob: -14.914032936096191
    10. '	to' → logprob: -15.164032936096191

Token 381: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' (adapté à ' to') → logprob: -5.5577775128767826e-06
    2. 'ds' → logprob: -12.875005722045898
    3. ' to' → logprob: -13.125005722045898
    4. 'if' → logprob: -14.625005722045898
    5. 'd' → logprob: -15.375005722045898
    6. '   ' → logprob: -16.0000057220459
    7. 'v' → logprob: -16.3750057220459
    8. '
' → logprob: -17.1250057220459
    9. '```' → logprob: -17.8750057220459
    10. 't' → logprob: -18.0000057220459

Token 382: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -9.088346359931165e-07
    2. '[v' → logprob: -14.000000953674316
    3. '[' → logprob: -18.0
    4. 'u' → logprob: -18.375
    5. '[a' → logprob: -21.75
    6. '[user' → logprob: -21.875
    7. '\[' → logprob: -22.5
    8. '```' → logprob: -22.75
    9. ' [' → logprob: -23.5
    10. '
' → logprob: -23.75

Token 383: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.0002166491176467389
    2. '.append' → logprob: -8.500216484069824
    3. '.' → logprob: -11.500216484069824
    4. ').' → logprob: -13.750216484069824
    5. ']' → logprob: -13.750216484069824
    6. ' ].' → logprob: -14.125216484069824
    7. '   ' → logprob: -17.37521743774414
    8. ' .' → logprob: -17.37521743774414
    9. '[' → logprob: -17.62521743774414
    10. '}.' → logprob: -17.75021743774414

Token 384: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -3.128163257315464e-07
    2. ' append' → logprob: -16.0
    3. '.append' → logprob: -16.5
    4. 'appen' → logprob: -20.625
    5. ' ' → logprob: -21.375
    6. 'app' → logprob: -21.75
    7. '	append' → logprob: -22.25
    8. 'add' → logprob: -22.875
    9. '_append' → logprob: -23.5
    10. '   ' → logprob: -23.5

Token 385: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -4.1557283111615106e-05
    2. '(' → logprob: -10.250041961669922
    3. 'v' → logprob: -12.250041961669922
    4. '(
' → logprob: -13.625041961669922
    5. ' (' → logprob: -15.875041961669922
    6. ' v' → logprob: -18.000041961669922
    7. '((' → logprob: -18.625041961669922
    8. '()' → logprob: -20.125041961669922
    9. ')v' → logprob: -20.750041961669922
    10. '	v' → logprob: -21.625041961669922

Token 386: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004626768175512552
    2. ')
' → logprob: -5.379626750946045
    3. ' )' → logprob: -12.629627227783203
    4. '   ' → logprob: -12.879627227783203
    5. ')
' → logprob: -15.379627227783203
    6. ')

' → logprob: -16.004627227783203
    7. ' )
' → logprob: -16.129627227783203
    8. '),' → logprob: -16.129627227783203
    9. ')#' → logprob: -17.254627227783203
    10. '<|end|>' → logprob: -17.254627227783203

Token 387: '   ' (ID: 271)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.11139898002147675
    2. '   ' → logprob: -2.986398935317993
    3. ' to' → logprob: -3.111398935317993
    4. 'v' → logprob: -5.111399173736572
    5. 'u' → logprob: -6.111399173736572
    6. 'for' → logprob: -6.986399173736572
    7. 'from' → logprob: -7.361399173736572
    8. '<|end|>' → logprob: -8.736398696899414
    9. '```' → logprob: -9.236398696899414
    10. '#' → logprob: -9.486398696899414

Token 388: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' (adapté à ' to') → logprob: -0.0016369777731597424
    2. ' to' → logprob: -6.501636981964111
    3. '   ' → logprob: -9.001636505126953
    4. 'v' → logprob: -12.126636505126953
    5. 'u' → logprob: -12.251636505126953
    6. '	to' → logprob: -14.251636505126953
    7. ' ' → logprob: -16.126636505126953
    8. 't' → logprob: -16.251636505126953
    9. '[to' → logprob: -16.501636505126953
    10. '#' → logprob: -16.751636505126953

Token 389: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -1.1472419600977446e-06
    2. '[u' → logprob: -14.125000953674316
    3. '[' → logprob: -15.000000953674316
    4. 'v' → logprob: -18.000001907348633
    5. '```' → logprob: -20.750001907348633
    6. '[val' → logprob: -21.000001907348633
    7. ' [' → logprob: -21.125001907348633
    8. '[s' → logprob: -21.750001907348633
    9. '[w' → logprob: -22.375001907348633
    10. '[t' → logprob: -22.500001907348633

Token 390: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.0003619217313826084
    2. '[u' → logprob: -8.375362396240234
    3. ']' → logprob: -9.875362396240234
    4. ').' → logprob: -10.125362396240234
    5. ' ].' → logprob: -10.500362396240234
    6. '.append' → logprob: -12.250362396240234
    7. '[' → logprob: -12.250362396240234
    8. '[].' → logprob: -13.500362396240234
    9. '.' → logprob: -14.875362396240234
    10. '][' → logprob: -15.625362396240234

Token 391: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.981667537620524e-06
    2. '.append' → logprob: -13.875001907348633
    3. 'app' → logprob: -14.250001907348633
    4. 'appen' → logprob: -15.875001907348633
    5. 'add' → logprob: -16.375001907348633
    6. ' append' → logprob: -16.625001907348633
    7. '_append' → logprob: -18.625001907348633
    8. '	append' → logprob: -18.750001907348633
    9. 'prepend' → logprob: -19.625001907348633
    10. 'ap' → logprob: -20.375001907348633

Token 392: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -2.45848218582978e-06
    2. '(' → logprob: -13.62500286102295
    3. 'u' → logprob: -13.62500286102295
    4. '[u' → logprob: -18.250001907348633
    5. '(
' → logprob: -19.500001907348633
    6. '	u' → logprob: -20.125001907348633
    7. '(s' → logprob: -20.625001907348633
    8. '```' → logprob: -20.750001907348633
    9. '   ' → logprob: -21.375001907348633
    10. ' (' → logprob: -21.500001907348633

Token 393: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.630610641877865e-06
    2. ')
' → logprob: -12.000006675720215
    3. ' )' → logprob: -14.875006675720215
    4. ']' → logprob: -17.2500057220459
    5. ')

' → logprob: -17.2500057220459
    6. '<|end|>' → logprob: -17.5000057220459
    7. '   ' → logprob: -17.8750057220459
    8. '))' → logprob: -18.0000057220459
    9. '#' → logprob: -18.2500057220459
    10. '}' → logprob: -18.2500057220459

Token 394: 's' (ID: 82)
  Prédit: 'ds'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ds' → logprob: -0.4702380299568176
    2. 'dp' → logprob: -2.220237970352173
    3. 'from' → logprob: -2.720237970352173
    4. 'dist' → logprob: -2.845237970352173
    5. 'visited' → logprob: -3.345237970352173
    6. 'used' → logprob: -4.220238208770752
    7. 'seen' → logprob: -4.470238208770752
    8. 'cost' → logprob: -4.595238208770752
    9. 'uf' → logprob: -4.720238208770752
    10. 'd' → logprob: -4.845238208770752

Token 395: ' =' (ID: 314)
  Prédit: 'ize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ize' → logprob: -0.2430260181427002
    2. 't' → logprob: -2.1180260181427
    3. 'z' → logprob: -2.6180260181427
    4. 'iz' → logprob: -4.243025779724121
    5. ' =' → logprob: -5.868025779724121
    6. 'et' → logprob: -6.618025779724121
    7. 'izes' → logprob: -6.743025779724121
    8. 'um' → logprob: -6.743025779724121
    9. 'e' → logprob: -8.868025779724121
    10. 'elf' → logprob: -8.868025779724121

Token 396: ' d' (ID: 272)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5210983157157898
    2. '[' → logprob: -1.1460983753204346
    3. 'set' → logprob: -3.7710983753204346
    4. 'ds' → logprob: -3.8960983753204346
    5. '[]' → logprob: -4.1460981369018555
    6. '[v' → logprob: -4.6460981369018555
    7. '[n' → logprob: -5.1460981369018555
    8. 'sum' → logprob: -6.2710981369018555
    9. 'n' → logprob: -6.7710981369018555
    10. ' [' → logprob: -6.8960981369018555

Token 397: 'su' (ID: 20634)
  Prédit: 'su'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'su' → logprob: -3.173704271830502e-06
    2. 's' → logprob: -12.75000286102295
    3. 'sum' → logprob: -17.500003814697266
    4. 'sv' → logprob: -17.750003814697266
    5. 'sup' → logprob: -17.875003814697266
    6. '```' → logprob: -18.250003814697266
    7. ' su' → logprob: -18.375003814697266
    8. 'су' → logprob: -18.500003814697266
    9. 'sus' → logprob: -18.500003814697266
    10. 'ds' → logprob: -18.750003814697266

Token 398: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -6.869017852295656e-06
    2. '(' → logprob: -12.250006675720215
    3. '(s' → logprob: -13.500006675720215
    4. 'n' → logprob: -15.125006675720215
    5. ' (' → logprob: -15.500006675720215
    6. '(d' → logprob: -17.50000762939453
    7. 's' → logprob: -17.87500762939453
    8. '(len' → logprob: -17.87500762939453
    9. '()' → logprob: -18.00000762939453
    10. '(v' → logprob: -18.12500762939453

Token 399: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1604023277759552
    2. ')
' → logprob: -1.9104022979736328
    3. ')
' → logprob: -8.660402297973633
    4. ')

' → logprob: -12.410402297973633
    5. ')s' → logprob: -14.660402297973633
    6. ')`' → logprob: -16.535402297973633
    7. ' )' → logprob: -16.660402297973633
    8. ')`
' → logprob: -16.910402297973633
    9. ')

' → logprob: -17.410402297973633
    10. '),' → logprob: -17.660402297973633

Token 400: 'dp' (ID: 19037)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.39710289239883423
    2. 'from' → logprob: -2.1471028327941895
    3. 'visited' → logprob: -2.7721028327941895
    4. 'q' → logprob: -3.3971028327941895
    5. 'stack' → logprob: -3.7721028327941895
    6. 'ans' → logprob: -3.7721028327941895
    7. 'used' → logprob: -4.1471028327941895
    8. 'dp' → logprob: -4.2721028327941895
    9. 'import' → logprob: -4.7721028327941895
    10. 'dist' → logprob: -5.1471028327941895

Token 401: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0067478204146027565
    2. '=' → logprob: -5.006747722625732
    3. '=[' → logprob: -11.25674819946289
    4. ' =[' → logprob: -11.75674819946289
    5. '[' → logprob: -12.25674819946289
    6. ' ' → logprob: -12.88174819946289
    7. '=[[' → logprob: -13.50674819946289
    8. ',' → logprob: -14.50674819946289
    9. '```' → logprob: -14.75674819946289
    10. '   ' → logprob: -15.00674819946289

Token 402: ' v' (ID: 323)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.08954130113124847
    2. '[-' → logprob: -2.58954119682312
    3. '[[' → logprob: -4.839541435241699
    4. '[s' → logprob: -7.214541435241699
    5. '[n' → logprob: -7.339541435241699
    6. '{' → logprob: -7.964541435241699
    7. '[(' → logprob: -8.0895414352417
    8. '[{' → logprob: -8.5895414352417
    9. '{}' → logprob: -8.7145414352417
    10. ' [' → logprob: -9.0895414352417

Token 403: 'data' (ID: 1074)
  Prédit: 'data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.4760177433490753
    2. '[' → logprob: -1.226017713546753
    3. '[-' → logprob: -3.226017713546753
    4. '[n' → logprob: -3.476017713546753
    5. '[data' → logprob: -5.476017951965332
    6. ' [' → logprob: -6.351017951965332
    7. ' =' → logprob: -6.351017951965332
    8. 'size' → logprob: -6.726017951965332
    9. '[i' → logprob: -7.101017951965332
    10. '[[' → logprob: -7.226017951965332

Token 404: '.copy' (ID: 22925)
  Prédit: '[:]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:]' → logprob: -0.11474772542715073
    2. '.copy' → logprob: -2.3647477626800537
    3. '[:' → logprob: -4.239747524261475
    4. '[' → logprob: -11.489748001098633
    5. '+' → logprob: -12.114748001098633
    6. '.' → logprob: -12.114748001098633
    7. ' +' → logprob: -13.239748001098633
    8. '[::-' → logprob: -14.489748001098633
    9. '+[' → logprob: -14.739748001098633
    10. '.deepcopy' → logprob: -15.614748001098633

Token 405: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -3.190178904333152e-05
    2. '()
' → logprob: -10.750031471252441
    3. '()]' → logprob: -12.500031471252441
    4. ' ()' → logprob: -13.125031471252441
    5. '[]' → logprob: -13.500031471252441
    6. '[:]' → logprob: -14.125031471252441
    7. '()[' → logprob: -14.625031471252441
    8. '(' → logprob: -14.625031471252441
    9. '();' → logprob: -15.250031471252441
    10. '()\' → logprob: -15.375031471252441

Token 406: 'visited' (ID: 52453)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00023333763238042593
    2. 'visited' → logprob: -9.50023365020752
    3. ' for' → logprob: -9.75023365020752
    4. 'stack' → logprob: -10.12523365020752
    5. 'queue' → logprob: -10.37523365020752
    6. 'from' → logprob: -11.50023365020752
    7. 'q' → logprob: -12.12523365020752
    8. ')' → logprob: -12.25023365020752
    9. '
' → logprob: -13.00023365020752
    10. '   ' → logprob: -13.12523365020752

Token 407: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0160358939319849
    2. '=' → logprob: -4.141036033630371
    3. ' ' → logprob: -14.266036033630371
    4. ' =[' → logprob: -14.891036033630371
    5. '[' → logprob: -15.016036033630371
    6. ',' → logprob: -15.891036033630371
    7. ')' → logprob: -16.516035079956055
    8. '=[' → logprob: -16.891035079956055
    9. ']' → logprob: -17.266035079956055
    10. '=[]' → logprob: -17.516035079956055

Token 408: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.005326143000274897
    2. ' [' → logprob: -5.255326271057129
    3. 'set' → logprob: -9.505326271057129
    4. '[n' → logprob: -11.380326271057129
    5. '{' → logprob: -12.755326271057129
    6. ' set' → logprob: -13.005326271057129
    7. '[s' → logprob: -14.380326271057129
    8. '[a' → logprob: -15.380326271057129
    9. '[]' → logprob: -16.130325317382812
    10. '{}' → logprob: -16.255325317382812

Token 409: 'False' (ID: 8168)
  Prédit: 'False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.00011760921915993094
    2. '0' → logprob: -9.250117301940918
    3. ' False' → logprob: -10.750117301940918
    4. '(False' → logprob: -18.875118255615234
    5. '   ' → logprob: -19.500118255615234
    6. '
' → logprob: -19.875118255615234
    7. '[' → logprob: -20.375118255615234
    8. 'F' → logprob: -20.500118255615234
    9. 'True' → logprob: -21.000118255615234
    10. ' ' → logprob: -21.750118255615234

Token 410: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0015927036292850971
    2. ']*' → logprob: -6.751592636108398
    3. ' ]' → logprob: -8.126592636108398
    4. ' for' → logprob: -9.001592636108398
    5. 'for' → logprob: -12.876592636108398
    6. ']*(' → logprob: -14.751592636108398
    7. ']+' → logprob: -15.501592636108398
    8. ']
' → logprob: -16.1265926361084
    9. '[' → logprob: -16.3765926361084
    10. '*' → logprob: -16.5015926361084

Token 411: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.03148898854851723
    2. ' *' → logprob: -3.6564888954162598
    3. ' for' → logprob: -5.53148889541626
    4. ']*' → logprob: -7.78148889541626
    5. '*n' → logprob: -8.406489372253418
    6. ']' → logprob: -8.406489372253418
    7. '(n' → logprob: -9.031489372253418
    8. '*(' → logprob: -9.406489372253418
    9. ')' → logprob: -10.281489372253418
    10. '[n' → logprob: -10.281489372253418

Token 412: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -5.56233171664644e-05
    2. ' n' → logprob: -10.000055313110352
    3. '(n' → logprob: -11.500055313110352
    4. '(' → logprob: -16.75005531311035
    5. ' (' → logprob: -18.75005531311035
    6. '   ' → logprob: -20.00005531311035
    7. ' ' → logprob: -20.62505531311035
    8. '	n' → logprob: -20.75005531311035
    9. '
' → logprob: -21.87505531311035
    10. ')n' → logprob: -22.00005531311035

Token 413: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.19820667803287506
    2. 'from' → logprob: -2.198206663131714
    3. 'stack' → logprob: -3.198206663131714
    4. 'for' → logprob: -3.698206663131714
    5. 'queue' → logprob: -6.073206901550293
    6. 'q' → logprob: -8.448206901550293
    7. 'import' → logprob: -8.698206901550293
    8. 'def' → logprob: -9.073206901550293
    9. '
' → logprob: -9.073206901550293
    10. '  
' → logprob: -9.198206901550293

Token 414: 'for' (ID: 1938)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.6192691326141357
    2. 'stack' → logprob: -1.1192691326141357
    3. 'for' → logprob: -2.1192691326141357
    4. 'def' → logprob: -4.369269371032715
    5. 'import' → logprob: -6.244269371032715
    6. 'q' → logprob: -8.619269371032715
    7. 'queue' → logprob: -8.869269371032715
    8. ' from' → logprob: -10.119269371032715
    9. ' stack' → logprob: -10.369269371032715
    10. ' for' → logprob: -11.494269371032715

Token 415: ' u' (ID: 337)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.2672557234764099
    2. 'i' → logprob: -1.5172557830810547
    3. ' u' → logprob: -4.517255783081055
    4. 'u' → logprob: -6.142255783081055
    5. ' v' → logprob: -7.392255783081055
    6. ' start' → logprob: -7.767255783081055
    7. 'start' → logprob: -8.392255783081055
    8. 'x' → logprob: -8.517255783081055
    9. ' x' → logprob: -8.517255783081055
    10. 'v' → logprob: -9.017255783081055

Token 416: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1002197191119194
    2. 'in' → logprob: -2.3502197265625
    3. ',' → logprob: -12.6002197265625
    4. ' ' → logprob: -13.2252197265625
    5. '	in' → logprob: -13.3502197265625
    6. 'import' → logprob: -13.7252197265625
    7. ':' → logprob: -13.8502197265625
    8. 's' → logprob: -14.4752197265625
    9. '   ' → logprob: -14.4752197265625
    10. '  ' → logprob: -14.6002197265625

Token 417: ' sorted' (ID: 20099)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.004090985283255577
    2. ' range' → logprob: -5.504090785980225
    3. 'to' → logprob: -11.379091262817383
    4. 'ra' → logprob: -14.754091262817383
    5. '(range' → logprob: -15.004091262817383
    6. 'ran' → logprob: -15.504091262817383
    7. 'r' → logprob: -17.004091262817383
    8. ' to' → logprob: -17.379091262817383
    9. '   ' → logprob: -17.379091262817383
    10. ' ' → logprob: -17.504091262817383

Token 418: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.0003009041247423738
    2. '(' → logprob: -8.375301361083984
    3. '([(' → logprob: -10.250301361083984
    4. 'range' → logprob: -10.875301361083984
    5. '((' → logprob: -11.500301361083984
    6. '(list' → logprob: -13.250301361083984
    7. '(
' → logprob: -13.750301361083984
    8. '(((' → logprob: -14.000301361083984
    9. '(en' → logprob: -14.375301361083984
    10. '(v' → logprob: -14.625301361083984

Token 419: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -3.531315314830863e-06
    2. '(' → logprob: -12.875003814697266
    3. 'n' → logprob: -14.500003814697266
    4. '(len' → logprob: -14.875003814697266
    5. '(
' → logprob: -17.000003814697266
    6. ' (' → logprob: -18.750003814697266
    7. '```' → logprob: -18.875003814697266
    8. '(s' → logprob: -19.375003814697266
    9. ',n' → logprob: -19.375003814697266
    10. ')n' → logprob: -19.375003814697266

Token 420: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003571535926312208
    2. ',key' → logprob: -8.625357627868652
    3. '),' → logprob: -8.750357627868652
    4. ' ,' → logprob: -11.625357627868652
    5. 'key' → logprob: -12.500357627868652
    6. '):' → logprob: -12.625357627868652
    7. '(),' → logprob: -13.250357627868652
    8. '   ' → logprob: -14.750357627868652
    9. '):
' → logprob: -15.125357627868652
    10. ')' → logprob: -15.250357627868652

Token 421: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.004083266947418451
    2. ' key' → logprob: -5.504083156585693
    3. '   ' → logprob: -13.004083633422852
    4. '
' → logprob: -14.004083633422852
    5. 'reverse' → logprob: -14.004083633422852
    6. '(key' → logprob: -15.129083633422852
    7. '	key' → logprob: -16.12908363342285
    8. '       ' → logprob: -16.12908363342285
    9. ',key' → logprob: -16.12908363342285
    10. 'lambda' → logprob: -16.37908363342285

Token 422: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -9.639096970204264e-05
    2. '=' → logprob: -9.250096321105957
    3. '=v' → logprob: -15.375096321105957
    4. '=len' → logprob: -17.375097274780273
    5. 'lambda' → logprob: -18.375097274780273
    6. '(lambda' → logprob: -19.125097274780273
    7. '=df' → logprob: -19.125097274780273
    8. ' =' → logprob: -19.500097274780273
    9. '=
' → logprob: -19.625097274780273
    10. '=int' → logprob: -19.625097274780273

Token 423: ' i' (ID: 575)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.48703643679618835
    2. 'lambda' → logprob: -0.9870364665985107
    3. 'i' → logprob: -5.487036228179932
    4. ' u' → logprob: -5.862036228179932
    5. '=lambda' → logprob: -5.987036228179932
    6. ' lambda' → logprob: -6.362036228179932
    7. 'x' → logprob: -6.737036228179932
    8. '   ' → logprob: -8.11203670501709
    9. ':' → logprob: -9.23703670501709
    10. ' i' → logprob: -10.61203670501709

Token 424: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0002905334113165736
    2. ' :' → logprob: -8.500290870666504
    3. '=lambda' → logprob: -10.125290870666504
    4. ':v' → logprob: -10.250290870666504
    5. '=' → logprob: -11.875290870666504
    6. 'dp' → logprob: -12.625290870666504
    7. ':-' → logprob: -15.125290870666504
    8. ':
' → logprob: -15.125290870666504
    9. ':d' → logprob: -16.250289916992188
    10. ':i' → logprob: -16.625289916992188

Token 425: ' v' (ID: 323)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5476294755935669
    2. 'v' → logprob: -1.297629475593567
    3. '-v' → logprob: -3.0476293563842773
    4. 'lambda' → logprob: -3.1726293563842773
    5. '-d' → logprob: -4.047629356384277
    6. ' dp' → logprob: -4.422629356384277
    7. '-' → logprob: -5.047629356384277
    8. ' v' → logprob: -5.172629356384277
    9. ' -' → logprob: -5.297629356384277
    10. ' lambda' → logprob: -5.422629356384277

Token 426: 'data' (ID: 1074)
  Prédit: 'data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -9.686778503237292e-05
    2. 'dp' → logprob: -9.625097274780273
    3. 'adata' → logprob: -12.000097274780273
    4. 'ata' → logprob: -12.000097274780273
    5. '[i' → logprob: -12.000097274780273
    6. 'i' → logprob: -12.500097274780273
    7. 'idata' → logprob: -13.000097274780273
    8. '(data' → logprob: -13.375097274780273
    9. '[data' → logprob: -13.875097274780273
    10. ' data' → logprob: -14.125097274780273

Token 427: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -8.77627644513268e-06
    2. '[' → logprob: -11.875008583068848
    3. ')[' → logprob: -14.500008583068848
    4. '
' → logprob: -14.625008583068848
    5. ' [' → logprob: -14.875008583068848
    6. '[
' → logprob: -15.750008583068848
    7. '```' → logprob: -16.750009536743164
    8. '[u' → logprob: -16.875009536743164
    9. ')' → logprob: -17.000009536743164
    10. '   ' → logprob: -17.625009536743164

Token 428: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.04020192474126816
    2. '][' → logprob: -3.7902019023895264
    3. ')[' → logprob: -4.2902021408081055
    4. ':' → logprob: -6.0402021408081055
    5. '   ' → logprob: -8.040202140808105
    6. ' [' → logprob: -8.915202140808105
    7. ')' → logprob: -10.040202140808105
    8. ' )[' → logprob: -10.665202140808105
    9. '```' → logprob: -10.665202140808105
    10. '])' → logprob: -10.790202140808105

Token 429: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01909410022199154
    2. '1' → logprob: -4.144093990325928
    3. ' ' → logprob: -5.894093990325928
    4. '-' → logprob: -8.769094467163086
    5. '[' → logprob: -9.644094467163086
    6. ':' → logprob: -10.394094467163086
    7. '::-' → logprob: -11.269094467163086
    8. '   ' → logprob: -11.644094467163086
    9. ')' → logprob: -11.894094467163086
    10. ' -' → logprob: -12.581594467163086

Token 430: ']):
' (ID: 51989)
  Prédit: ']):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):' → logprob: -0.1391455978155136
    2. '):' → logprob: -2.139145612716675
    3. ')):' → logprob: -5.014145374298096
    4. ']):
' → logprob: -6.639145374298096
    5. '],' → logprob: -6.764145374298096
    6. ':' → logprob: -7.389145374298096
    7. ']:' → logprob: -7.389145374298096
    8. ']))' → logprob: -7.764145374298096
    9. '),' → logprob: -8.264145851135254
    10. ']' → logprob: -8.514145851135254

Token 431: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5418928265571594
    2. '   ' → logprob: -0.9168928265571594
    3. ':
' → logprob: -4.166893005371094
    4. 'u' → logprob: -6.791893005371094
    5. '):' → logprob: -7.791893005371094
    6. ',' → logprob: -8.291893005371094
    7. ' :' → logprob: -8.416893005371094
    8. ' u' → logprob: -8.541893005371094
    9. '):
' → logprob: -8.666893005371094
    10. ' for' → logprob: -9.291893005371094

Token 432: ' req' (ID: 7257)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.8165489435195923
    2. ' if' → logprob: -1.9415489435195923
    3. ' visited' → logprob: -1.9415489435195923
    4. '   ' → logprob: -2.0665488243103027
    5. 'if' → logprob: -2.3165488243103027
    6. ' for' → logprob: -3.4415488243103027
    7. 'for' → logprob: -4.816548824310303
    8. 'stack' → logprob: -6.191548824310303
    9. '    
' → logprob: -6.691548824310303
    10. ' stack' → logprob: -7.066548824310303

Token 433: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.48969125747680664
    2. 'uire' → logprob: -1.2396912574768066
    3. '=' → logprob: -2.3646912574768066
    4. 'u' → logprob: -6.864691257476807
    5. 'ui' → logprob: -7.489691257476807
    6. 'uir' → logprob: -7.489691257476807
    7. 'ire' → logprob: -8.114690780639648
    8. ' ' → logprob: -8.739690780639648
    9. '   ' → logprob: -8.989690780639648
    10. 'uries' → logprob: -9.114690780639648

Token 434: ' gain' (ID: 11621)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -1.2652802467346191
    2. 'cur' → logprob: -2.390280246734619
    3. ' cost' → logprob: -2.640280246734619
    4. 'cap' → logprob: -2.765280246734619
    5. 'need' → logprob: -3.015280246734619
    6. 'have' → logprob: -3.265280246734619
    7. 'val' → logprob: -3.765280246734619
    8. ' cur' → logprob: -4.140280246734619
    9. 'b' → logprob: -4.140280246734619
    10. 'used' → logprob: -4.265280246734619

Token 435: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3136768043041229
    2. '=' → logprob: -1.3136768341064453
    3. ',' → logprob: -7.813676834106445
    4. '=u' → logprob: -12.313676834106445
    5. ')' → logprob: -13.313676834106445
    6. '   ' → logprob: -13.438676834106445
    7. ' ' → logprob: -14.188676834106445
    8. '    ' → logprob: -14.313676834106445
    9. ',u' → logprob: -15.063676834106445
    10. '=user' → logprob: -15.313676834106445

Token 436: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.011398515664041042
    2. ' v' → logprob: -4.5113983154296875
    3. 'dp' → logprob: -8.136398315429688
    4. '   ' → logprob: -9.886398315429688
    5. ' dp' → logprob: -12.886398315429688
    6. '	v' → logprob: -14.011398315429688
    7. '    ' → logprob: -14.386398315429688
    8. ' ' → logprob: -14.636398315429688
    9. '0' → logprob: -14.761398315429688
    10. '  ' → logprob: -15.011398315429688

Token 437: 'data' (ID: 1074)
  Prédit: 'data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -5.319370302458992e-06
    2. 'adata' → logprob: -13.000005722045898
    3. 'idata' → logprob: -13.875005722045898
    4. ' data' → logprob: -14.125005722045898
    5. '_data' → logprob: -15.375005722045898
    6. 'dat' → logprob: -15.500005722045898
    7. 'DATA' → logprob: -15.750005722045898
    8. 'dp' → logprob: -16.0000057220459
    9. 'odata' → logprob: -16.0000057220459
    10. 'pdata' → logprob: -16.1250057220459

Token 438: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -3.047134305234067e-05
    2. 'u' → logprob: -10.875030517578125
    3. '[i' → logprob: -11.875030517578125
    4. '   ' → logprob: -13.250030517578125
    5. '[' → logprob: -13.625030517578125
    6. '[user' → logprob: -14.625030517578125
    7. '[
' → logprob: -15.125030517578125
    8. ' =' → logprob: -15.375030517578125
    9. '[s' → logprob: -15.625030517578125
    10. '
' → logprob: -15.875030517578125

Token 439: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03348766639828682
    2. ']
' → logprob: -3.533487558364868
    3. ')' → logprob: -5.658487796783447
    4. '   ' → logprob: -9.033487319946289
    5. ')
' → logprob: -9.783487319946289
    6. ']
' → logprob: -11.033487319946289
    7. '])' → logprob: -11.033487319946289
    8. ']

' → logprob: -11.408487319946289
    9. '[' → logprob: -12.283487319946289
    10. ' ]' → logprob: -12.283487319946289

Token 440: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1626928299665451
    2. ' if' → logprob: -2.2876927852630615
    3. 'if' → logprob: -3.9126927852630615
    4. '
' → logprob: -4.162693023681641
    5. ' for' → logprob: -5.662693023681641
    6. 'visited' → logprob: -5.662693023681641
    7. ' visited' → logprob: -6.037693023681641
    8. '    
' → logprob: -6.537693023681641
    9. 'for' → logprob: -6.912693023681641
    10. ',' → logprob: -7.787693023681641

Token 441: ' frm' (ID: 45032)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5332686305046082
    2. 'visited' → logprob: -1.158268690109253
    3. 'for' → logprob: -2.408268690109253
    4. 'dp' → logprob: -6.408268451690674
    5. 'can' → logprob: -6.783268451690674
    6. 'stack' → logprob: -6.783268451690674
    7. 'max' → logprob: -6.908268451690674
    8. '   ' → logprob: -7.283268451690674
    9. 'cur' → logprob: -7.408268451690674
    10. 'queue' → logprob: -7.658268451690674

Token 442: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1587209552526474
    2. '=' → logprob: -2.2837209701538086
    3. 'for' → logprob: -3.5337209701538086
    4. 's' → logprob: -5.658720970153809
    5. ' for' → logprob: -5.658720970153809
    6. ',' → logprob: -5.658720970153809
    7. ' in' → logprob: -6.783720970153809
    8. 'or' → logprob: -6.783720970153809
    9. ' ' → logprob: -7.533720970153809
    10. ':' → logprob: -7.658720970153809

Token 443: ' {' (ID: 354)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.7031965851783752
    2. 's' → logprob: -2.3281965255737305
    3. 'max' → logprob: -2.3281965255737305
    4. '0' → logprob: -2.8281965255737305
    5. '[]' → logprob: -2.9531965255737305
    6. 'None' → logprob: -3.0781965255737305
    7. 'req' → logprob: -3.5781965255737305
    8. 'float' → logprob: -3.9531965255737305
    9. '[u' → logprob: -3.9531965255737305
    10. 'u' → logprob: -4.0781965255737305

Token 444: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.002481008181348443
    2. '}' → logprob: -6.252480983734131
    3. 'req' → logprob: -9.377481460571289
    4. 's' → logprob: -9.377481460571289
    5. 'i' → logprob: -9.502481460571289
    6. '   ' → logprob: -9.502481460571289
    7. '0' → logprob: -9.877481460571289
    8. 'dp' → logprob: -10.752481460571289
    9. ' u' → logprob: -10.752481460571289
    10. '
' → logprob: -10.877481460571289

Token 445: '}
' (ID: 739)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.4722769856452942
    2. ':' → logprob: -1.0972769260406494
    3. ':u' → logprob: -3.2222769260406494
    4. '}
' → logprob: -6.3472771644592285
    5. '[u' → logprob: -7.9722771644592285
    6. ' }' → logprob: -8.47227668762207
    7. ' :' → logprob: -8.59727668762207
    8. '   ' → logprob: -9.97227668762207
    9. ':true' → logprob: -10.47227668762207
    10. '})' → logprob: -11.22227668762207

Token 446: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.46590396761894226
    2. '
' → logprob: -2.2159039974212646
    3. ' for' → logprob: -2.3409039974212646
    4. 'for' → logprob: -2.8409039974212646
    5. ' while' → logprob: -2.9659039974212646
    6. 'while' → logprob: -3.3409039974212646
    7. '    
' → logprob: -4.7159037590026855
    8. ',' → logprob: -6.2159037590026855
    9. 'stack' → logprob: -6.3409037590026855
    10. ' queue' → logprob: -6.4659037590026855

Token 447: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47982057929039
    2. ' for' → logprob: -2.604820489883423
    3. 'for' (adapté à ' for') → logprob: -2.729820489883423
    4. 'while' → logprob: -2.854820489883423
    5. 'visited' → logprob: -3.104820489883423
    6. ' while' → logprob: -3.229820489883423
    7. 'stack' → logprob: -3.479820489883423
    8. ' stack' → logprob: -4.229820728302002
    9. ' queue' → logprob: -4.479820728302002
    10. ' visited' → logprob: -4.729820728302002

Token 448: ' v' (ID: 323)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.1331961452960968
    2. 'v' → logprob: -2.7581961154937744
    3. 'x' → logprob: -3.1331961154937744
    4. 'vv' → logprob: -5.3831963539123535
    5. ' w' → logprob: -6.0081963539123535
    6. 'nx' → logprob: -6.0081963539123535
    7. 'nv' → logprob: -6.5081963539123535
    8. 'n' → logprob: -7.2581963539123535
    9. 'i' → logprob: -7.3831963539123535
    10. 'j' → logprob: -7.5081963539123535

Token 449: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06998345255851746
    2. 'in' → logprob: -2.69498348236084
    3. ' ' → logprob: -10.31998348236084
    4. 'n' → logprob: -11.81998348236084
    5. '	in' → logprob: -13.06998348236084
    6. '   ' → logprob: -13.94498348236084
    7. '
' → logprob: -14.56998348236084
    8. 'i' → logprob: -14.56998348236084
    9. 'v' → logprob: -14.81998348236084
    10. 's' → logprob: -14.94498348236084

Token 450: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.043016429990530014
    2. ' to' → logprob: -3.1680164337158203
    3. '   ' → logprob: -11.91801643371582
    4. ' range' → logprob: -12.79301643371582
    5. 'range' → logprob: -13.04301643371582
    6. ' ' → logprob: -13.16801643371582
    7. '[to' → logprob: -13.29301643371582
    8. '	to' → logprob: -15.10551643371582
    9. 't' → logprob: -15.23051643371582
    10. '  ' → logprob: -15.48051643371582

Token 451: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.000205566844670102
    2. 'u' → logprob: -8.500205993652344
    3. '[' → logprob: -14.250205993652344
    4. '[v' → logprob: -14.500205993652344
    5. ' [' → logprob: -15.125205993652344
    6. '
' → logprob: -15.250205993652344
    7. '   ' → logprob: -16.000205993652344
    8. '[s' → logprob: -16.750205993652344
    9. ' u' → logprob: -16.875205993652344
    10. '	u' → logprob: -17.000205993652344

Token 452: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.0018152403645217419
    2. ']:
' → logprob: -6.376815319061279
    3. ']' → logprob: -9.751814842224121
    4. '}:' → logprob: -10.251814842224121
    5. ':' → logprob: -11.126814842224121
    6. ']:
' → logprob: -13.126814842224121
    7. '):' → logprob: -14.001814842224121
    8. '>:' → logprob: -14.126814842224121
    9. ']:

' → logprob: -14.751814842224121
    10. ']>' → logprob: -15.626814842224121

Token 453: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0058356537483632565
    2. ' if' → logprob: -5.50583553314209
    3. 'if' → logprob: -7.13083553314209
    4. '   ' → logprob: -7.38083553314209
    5. ':' → logprob: -8.75583553314209
    6. ':
' → logprob: -9.50583553314209
    7. ' and' → logprob: -10.75583553314209
    8. ',' → logprob: -11.13083553314209
    9. '      ' → logprob: -11.63083553314209
    10. '    ' → logprob: -11.75583553314209

Token 454: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.024453386664390564
    2. ' if' → logprob: -3.8994534015655518
    3. '   ' → logprob: -6.024453163146973
    4. '       ' → logprob: -6.649453163146973
    5. 'frm' → logprob: -9.899453163146973
    6. 'ifr' → logprob: -9.899453163146973
    7. '           ' → logprob: -10.149453163146973
    8. '    ' → logprob: -11.524453163146973
    9. ' ' → logprob: -11.524453163146973
    10. '	if' → logprob: -12.274453163146973

Token 455: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.0941646546125412
    2. 'v' → logprob: -3.3441646099090576
    3. 'dp' → logprob: -3.9691646099090576
    4. ' visited' → logprob: -4.094164848327637
    5. 's' → logprob: -5.094164848327637
    6. 'not' → logprob: -5.219164848327637
    7. ' not' → logprob: -6.094164848327637
    8. ' v' → logprob: -6.219164848327637
    9. ' dp' → logprob: -6.469164848327637
    10. ' s' → logprob: -6.719164848327637

Token 456: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -3.011373155459296e-05
    2. 'v' → logprob: -11.250030517578125
    3. '[u' → logprob: -11.250030517578125
    4. '[' → logprob: -12.625030517578125
    5. ' v' → logprob: -15.375030517578125
    6. ' [' → logprob: -15.750030517578125
    7. '[
' → logprob: -16.000030517578125
    8. '<v' → logprob: -16.625030517578125
    9. '   ' → logprob: -17.000030517578125
    10. '[i' → logprob: -17.125030517578125

Token 457: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.05155302956700325
    2. ']' → logprob: -3.3015530109405518
    3. ']:
' → logprob: -5.051553249359131
    4. ' and' → logprob: -5.426553249359131
    5. ':' → logprob: -6.426553249359131
    6. 'and' → logprob: -7.301553249359131
    7. ']==' → logprob: -8.801552772521973
    8. ' ]' → logprob: -9.051552772521973
    9. ']:

' → logprob: -11.551552772521973
    10. ':
' → logprob: -11.676552772521973

Token 458: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3840198218822479
    2. ':
' → logprob: -1.5090198516845703
    3. ':' → logprob: -3.2590198516845703
    4. ' and' → logprob: -3.5090198516845703
    5. '       ' → logprob: -3.7590198516845703
    6. '   ' → logprob: -6.00901985168457
    7. 'frm' → logprob: -7.13401985168457
    8. ' frm' → logprob: -7.50901985168457
    9. ' or' → logprob: -7.75901985168457
    10. 'and' → logprob: -7.75901985168457

Token 459: ' frm' (ID: 45032)
  Prédit: 'frm'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'frm' (adapté à ' frm') → logprob: -0.739844560623169
    2. 'if' → logprob: -2.364844560623169
    3. '   ' → logprob: -2.489844560623169
    4. 'for' → logprob: -2.614844560623169
    5. 'req' → logprob: -2.614844560623169
    6. '       ' → logprob: -2.614844560623169
    7. ' frm' → logprob: -3.239844560623169
    8. '           ' → logprob: -3.489844560623169
    9. ' if' → logprob: -4.36484432220459
    10. ' for' → logprob: -4.86484432220459

Token 460: '.add' (ID: 1950)
  Prédit: ' |='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' |=' → logprob: -0.46643441915512085
    2. '|' → logprob: -1.5914344787597656
    3. '.update' → logprob: -2.2164344787597656
    4. '.add' → logprob: -3.2164344787597656
    5. '=' → logprob: -4.216434478759766
    6. '.' → logprob: -5.716434478759766
    7. ' =' → logprob: -6.466434478759766
    8. '.=' → logprob: -8.591434478759766
    9. ' .' → logprob: -9.216434478759766
    10. '.|' → logprob: -10.841434478759766

Token 461: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.254871666431427
    2. '(v' → logprob: -1.5048716068267822
    3. 's' → logprob: -6.379871845245361
    4. '(' → logprob: -7.504871845245361
    5. 'v' → logprob: -8.129871368408203
    6. '(dp' → logprob: -8.129871368408203
    7. '(d' → logprob: -10.004871368408203
    8. '(u' → logprob: -10.754871368408203
    9. '((' → logprob: -11.754871368408203
    10. '(
' → logprob: -12.379871368408203

Token 462: '.le' (ID: 27349)
  Prédit: '.le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.le' → logprob: -1.2664456789934775e-06
    2. '.' → logprob: -14.125000953674316
    3. '.parent' → logprob: -15.375000953674316
    4. 'leader' → logprob: -16.750001907348633
    5. '.Le' → logprob: -16.875001907348633
    6. ' .' → logprob: -17.000001907348633
    7. '.same' → logprob: -17.250001907348633
    8. ').' → logprob: -17.375001907348633
    9. '.leading' → logprob: -18.750001907348633
    10. '.find' → logprob: -19.875001907348633

Token 463: 'ader' (ID: 1372)
  Prédit: 'ader'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ader' → logprob: -1.9361264946837764e-07
    2. 'ad' → logprob: -16.875
    3. 'leader' → logprob: -17.125
    4. 'ADER' → logprob: -17.375
    5. 'a' → logprob: -18.375
    6. 'ade' → logprob: -18.625
    7. 'aders' → logprob: -19.125
    8. 'arder' → logprob: -19.375
    9. 'der' → logprob: -20.375
    10. 'arner' → logprob: -20.75

Token 464: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -4.842555426876061e-06
    2. '(' → logprob: -12.625004768371582
    3. ')(' → logprob: -14.875004768371582
    4. 'v' → logprob: -15.000004768371582
    5. ' (' → logprob: -15.000004768371582
    6. '(
' → logprob: -15.375004768371582
    7. ')' → logprob: -16.0000057220459
    8. ')v' → logprob: -16.8750057220459
    9. '((' → logprob: -17.6250057220459
    10. '(u' → logprob: -18.2500057220459

Token 465: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.02078022062778473
    2. '))
' → logprob: -4.270780086517334
    3. ')' → logprob: -5.395780086517334
    4. '])' → logprob: -6.270780086517334
    5. ')
' → logprob: -9.770780563354492
    6. '])
' → logprob: -10.020780563354492
    7. ')))' → logprob: -10.645780563354492
    8. ')])' → logprob: -11.270780563354492
    9. ']))' → logprob: -11.895780563354492
    10. '})' → logprob: -12.395780563354492

Token 466: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0533582903444767
    2. '<|end|>' → logprob: -3.553358316421509
    3. '
' → logprob: -4.42835807800293
    4. ' visited' → logprob: -5.30335807800293
    5. '    
' → logprob: -6.55335807800293
    6. ',' → logprob: -7.17835807800293
    7. ' if' → logprob: -7.30335807800293
    8. ' 
' → logprob: -7.67835807800293
    9. 'visited' → logprob: -7.67835807800293
    10. ')' → logprob: -7.80335807800293

Token 467: ' mn' (ID: 34208)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.097052812576294
    2. 'if' → logprob: -1.847052812576294
    3. 'for' → logprob: -2.097052812576294
    4. ' for' → logprob: -2.347052812576294
    5. ' if' → logprob: -2.722052812576294
    6. 'visited' → logprob: -2.972052812576294
    7. ' s' → logprob: -3.847052812576294
    8. 's' → logprob: -4.222052574157715
    9. 'dp' → logprob: -4.472052574157715
    10. 'cur' → logprob: -4.597052574157715

Token 468: 'extra' (ID: 34451)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04020123928785324
    2. '=' → logprob: -3.290201187133789
    3. ' ' → logprob: -6.790201187133789
    4. ',' → logprob: -7.540201187133789
    5. '  ' → logprob: -9.165201187133789
    6. '_' → logprob: -9.415201187133789
    7. '[' → logprob: -9.915201187133789
    8. '_req' → logprob: -10.415201187133789
    9. '   ' → logprob: -10.915201187133789
    10. '_val' → logprob: -10.915201187133789

Token 469: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.038183555006980896
    2. '=' → logprob: -3.2881834506988525
    3. ',' → logprob: -8.913183212280273
    4. ' ' → logprob: -12.788183212280273
    5. '[' → logprob: -13.913183212280273
    6. ' ,' → logprob: -14.038183212280273
    7. 's' → logprob: -14.538183212280273
    8. '   ' → logprob: -14.913183212280273
    9. '_' → logprob: -15.413183212280273
    10. '=int' → logprob: -15.413183212280273

Token 470: ' ' (ID: 220)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.4879937171936035
    2. '10' → logprob: -0.9879937171936035
    3. 'None' → logprob: -5.1129937171936035
    4. '0' → logprob: -6.6129937171936035
    5. 'req' → logprob: -6.7379937171936035
    6. 'max' → logprob: -6.7379937171936035
    7. '-' → logprob: -6.7379937171936035
    8. ' float' → logprob: -6.8629937171936035
    9. 'int' → logprob: -7.3629937171936035
    10. '1' → logprob: -7.4879937171936035

Token 471: '10' (ID: 702)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.3574370741844177
    2. '10' → logprob: -1.3574371337890625
    3. 'None' → logprob: -4.4824371337890625
    4. '-' → logprob: -4.8574371337890625
    5. '0' → logprob: -4.8574371337890625
    6. 'req' → logprob: -5.1074371337890625
    7. 'max' → logprob: -5.1074371337890625
    8. 'int' → logprob: -6.1074371337890625
    9. '1' → logprob: -7.7324371337890625
    10. '(' → logprob: -7.9824371337890625

Token 472: ' **' (ID: 6240)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -0.08947274088859558
    2. '10' → logprob: -2.589472770690918
    3. '18' → logprob: -5.589472770690918
    4. '7' → logprob: -5.839472770690918
    5. '15' → logprob: -6.589472770690918
    6. '8' → logprob: -6.964472770690918
    7. '**' → logprob: -7.339472770690918
    8. '12' → logprob: -8.214472770690918
    9. '6' → logprob: -8.339472770690918
    10. '14' → logprob: -9.089472770690918

Token 473: ' ' (ID: 220)
  Prédit: '15'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '15' → logprob: -0.3751479387283325
    2. '9' → logprob: -1.5001479387283325
    3. '18' → logprob: -3.125147819519043
    4. '10' → logprob: -3.625147819519043
    5. '16' → logprob: -4.625147819519043
    6. '12' → logprob: -5.250147819519043
    7. '14' → logprob: -6.500147819519043
    8. '13' → logprob: -7.125147819519043
    9. '20' → logprob: -7.250147819519043
    10. '17' → logprob: -7.750147819519043

Token 474: '18' (ID: 1157)
  Prédit: '15'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '15' → logprob: -0.2856851816177368
    2. '9' → logprob: -1.7856851816177368
    3. '18' → logprob: -3.1606850624084473
    4. '10' → logprob: -4.160685062408447
    5. '12' → logprob: -4.785685062408447
    6. '16' → logprob: -5.035685062408447
    7. '14' → logprob: -5.785685062408447
    8. '13' → logprob: -6.160685062408447
    9. '20' → logprob: -7.035685062408447
    10. '11' → logprob: -7.660685062408447

Token 475: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14117944240570068
    2. '<|end|>' → logprob: -2.3911795616149902
    3. ' 
' → logprob: -3.8911795616149902
    4. '  
' → logprob: -4.64117956161499
    5. '+' → logprob: -6.26617956161499
    6. ' ' → logprob: -6.39117956161499
    7. ',' → logprob: -6.76617956161499
    8. '<|end|>' → logprob: -7.01617956161499
    9. ' +' → logprob: -7.39117956161499
    10. '
' → logprob: -7.39117956161499

Token 476: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17655129730701447
    2. 'for' → logprob: -2.551551342010498
    3. ' for' → logprob: -3.051551342010498
    4. '
' → logprob: -3.801551342010498
    5. '    
' → logprob: -4.801551342010498
    6. ')' → logprob: -6.301551342010498
    7. ',' → logprob: -6.426551342010498
    8. 'extra' → logprob: -7.676551342010498
    9. ' and' → logprob: -8.55155086517334
    10. ')
' → logprob: -8.80155086517334

Token 477: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.03505094349384308
    2. 'mn' → logprob: -4.410050868988037
    3. 'best' → logprob: -5.410050868988037
    4. 'cur' → logprob: -5.535050868988037
    5. 'extra' → logprob: -5.785050868988037
    6. 'min' → logprob: -5.910050868988037
    7. 'dp' → logprob: -6.285050868988037
    8. '   ' → logprob: -7.535050868988037
    9. 'if' → logprob: -7.785050868988037
    10. 'mx' → logprob: -7.910050868988037

Token 478: ' v' (ID: 323)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.5367500185966492
    2. 'x' → logprob: -1.036750078201294
    3. 'w' → logprob: -3.911750078201294
    4. 'fr' → logprob: -4.536749839782715
    5. 'r' → logprob: -5.286749839782715
    6. 'frm' → logprob: -5.786749839782715
    7. 'p' → logprob: -5.911749839782715
    8. 'v' → logprob: -6.036749839782715
    9. 'i' → logprob: -6.161749839782715
    10. 'from' → logprob: -6.411749839782715

Token 479: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0264289453625679
    2. 'in' → logprob: -3.6514289379119873
    3. 's' → logprob: -9.901429176330566
    4. 'n' → logprob: -10.276429176330566
    5. '_in' → logprob: -11.151429176330566
    6. ' ' → logprob: -12.901429176330566
    7. 'd' → logprob: -13.026429176330566
    8. '   ' → logprob: -13.151429176330566
    9. 'i' → logprob: -13.151429176330566
    10. 'v' → logprob: -13.213929176330566

Token 480: ' frm' (ID: 45032)
  Prédit: 'frm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'frm' → logprob: -0.02698015421628952
    2. ' frm' → logprob: -3.65198016166687
    3. '   ' → logprob: -8.90198040008545
    4. 'sorted' → logprob: -9.02698040008545
    5. 'form' → logprob: -9.27698040008545
    6. 'list' → logprob: -9.40198040008545
    7. '(frm' → logprob: -9.77698040008545
    8. 'fr' → logprob: -10.52698040008545
    9. ' ' → logprob: -10.65198040008545
    10. 'range' → logprob: -10.90198040008545

Token 481: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04094221070408821
    2. ':
' → logprob: -3.2909421920776367
    3. ' in' → logprob: -6.915942192077637
    4. 'in' → logprob: -6.915942192077637
    5. '   ' → logprob: -7.415942192077637
    6. ',' → logprob: -8.665942192077637
    7. '):
' → logprob: -10.790942192077637
    8. '):' → logprob: -10.790942192077637
    9. '       ' → logprob: -11.040942192077637
    10. '.' → logprob: -11.040942192077637

Token 482: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0912908986210823
    2. ':' → logprob: -2.5912909507751465
    3. ':
' → logprob: -4.5912909507751465
    4. ' if' → logprob: -7.3412909507751465
    5. ',' → logprob: -7.4662909507751465
    6. '[' → logprob: -8.591290473937988
    7. '   ' → logprob: -8.716290473937988
    8. '):
' → logprob: -8.716290473937988
    9. '+' → logprob: -9.216290473937988
    10. 'if' → logprob: -9.716290473937988

Token 483: ' e' (ID: 319)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5656841993331909
    2. '       ' → logprob: -2.4406843185424805
    3. 'extra' → logprob: -2.8156843185424805
    4. 'req' → logprob: -2.9406843185424805
    5. '   ' → logprob: -3.0656843185424805
    6. 'mn' → logprob: -3.3156843185424805
    7. 'dp' → logprob: -3.4406843185424805
    8. ' if' → logprob: -3.6906843185424805
    9. 'x' → logprob: -3.9406843185424805
    10. 'need' → logprob: -4.6906843185424805

Token 484: ',' (ID: 11)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.31399044394493103
    2. 'f' → logprob: -1.8139904737472534
    3. 'if' → logprob: -3.063990354537964
    4. '=' → logprob: -3.813990354537964
    5. ' =' → logprob: -4.188990592956543
    6. '   ' → logprob: -5.938990592956543
    7. 'for' → logprob: -5.938990592956543
    8. 'extra' → logprob: -5.938990592956543
    9. 'req' → logprob: -6.313990592956543
    10. 'size' → logprob: -6.688990592956543

Token 485: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.11482223123311996
    2. ' g' → logprob: -2.4898221492767334
    3. 'x' → logprob: -4.3648223876953125
    4. 'f' → logprob: -5.6148223876953125
    5. 'd' → logprob: -6.4898223876953125
    6. '_g' → logprob: -6.8648223876953125
    7. ' x' → logprob: -7.2398223876953125
    8. 'c' → logprob: -7.3648223876953125
    9. '_' → logprob: -7.4898223876953125
    10. 'ex' → logprob: -7.4898223876953125

Token 486: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132670223712921
    2. '=' → logprob: -1.3132669925689697
    3. ',' → logprob: -12.43826675415039
    4. '   ' → logprob: -14.56326675415039
    5. ' ' → logprob: -15.68826675415039
    6. '    ' → logprob: -15.93826675415039
    7. '       ' → logprob: -15.93826675415039
    8. '=v' → logprob: -15.93826675415039
    9. 'v' → logprob: -16.68826675415039
    10. 's' → logprob: -17.06326675415039

Token 487: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.20160093903541565
    2. ' dp' → logprob: -1.7016009092330933
    3. '   ' → logprob: -9.451601028442383
    4. ' ' → logprob: -10.701601028442383
    5. '(dp' → logprob: -10.826601028442383
    6. '	dp' → logprob: -10.826601028442383
    7. '    ' → logprob: -11.576601028442383
    8. 'd' → logprob: -12.201601028442383
    9. '       ' → logprob: -12.326601028442383
    10. 's' → logprob: -12.451601028442383

Token 488: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.000616293225903064
    2. 'v' → logprob: -7.500616073608398
    3. '[s' → logprob: -9.750616073608398
    4. '[' → logprob: -12.375616073608398
    5. 's' → logprob: -14.375616073608398
    6. '[g' → logprob: -16.7506160736084
    7. ' v' → logprob: -16.8756160736084
    8. '[
' → logprob: -17.0006160736084
    9. '[e' → logprob: -17.2506160736084
    10. '[u' → logprob: -17.8756160736084

Token 489: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03046221099793911
    2. ']
' → logprob: -3.5304622650146484
    3. '][' → logprob: -7.280462265014648
    4. '[' → logprob: -12.030462265014648
    5. ' ]' → logprob: -12.030462265014648
    6. ']
' → logprob: -12.155462265014648
    7. ']

' → logprob: -13.155462265014648
    8. ')' → logprob: -14.405462265014648
    9. '   ' → logprob: -14.405462265014648
    10. '],' → logprob: -14.530462265014648

Token 490: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013056461699306965
    2. ' if' → logprob: -4.76305627822876
    3. '
' → logprob: -6.13805627822876
    4. 'if' → logprob: -6.51305627822876
    5. ',' → logprob: -7.38805627822876
    6. '        
' → logprob: -10.388056755065918
    7. '+' → logprob: -10.513056755065918
    8. '<|end|>' → logprob: -10.638056755065918
    9. 'extra' → logprob: -11.388056755065918
    10. '
' → logprob: -11.763056755065918

Token 491: ' e' (ID: 319)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7765876054763794
    2. 'if' → logprob: -1.7765876054763794
    3. '       ' → logprob: -2.15158748626709
    4. 'extra' → logprob: -2.27658748626709
    5. 'mn' → logprob: -2.65158748626709
    6. ' mn' → logprob: -3.02658748626709
    7. ' extra' → logprob: -3.52658748626709
    8. '   ' → logprob: -6.15158748626709
    9. 'diff' → logprob: -8.52658748626709
    10. 'extras' → logprob: -9.02658748626709

Token 492: ' +=' (ID: 2757)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9941228628158569
    2. '=' → logprob: -0.9941228628158569
    3. ' =' → logprob: -2.2441229820251465
    4. ' -=' → logprob: -3.6191229820251465
    5. '+=' → logprob: -3.7441229820251465
    6. '-' → logprob: -3.7441229820251465
    7. '-=' → logprob: -3.7441229820251465
    8. '+' → logprob: -3.9941229820251465
    9. ' +=' → logprob: -4.6191229820251465
    10. ' -' → logprob: -5.6191229820251465

Token 493: ' max' (ID: 2999)
  Prédit: 'req'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'req' → logprob: -0.6788090467453003
    2. 'gain' → logprob: -0.9288090467453003
    3. ' req' → logprob: -3.42880916595459
    4. 'max' → logprob: -3.80380916595459
    5. '-g' → logprob: -4.30380916595459
    6. ' gain' → logprob: -4.55380916595459
    7. '-' → logprob: -5.17880916595459
    8. 'mn' → logprob: -5.80380916595459
    9. '1' → logprob: -5.92880916595459
    10. ' max' → logprob: -6.30380916595459

Token 494: '(req' (ID: 12192)
  Prédit: '(req'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(req' → logprob: -0.07440897077322006
    2. '(' → logprob: -2.699409008026123
    3. '(g' → logprob: -5.449409008026123
    4. '(-' → logprob: -9.824408531188965
    5. '(m' → logprob: -10.199408531188965
    6. '((' → logprob: -10.574408531188965
    7. '(require' → logprob: -11.199408531188965
    8. 'req' → logprob: -11.824408531188965
    9. '0' → logprob: -11.949408531188965
    10. '(s' → logprob: -12.449408531188965

Token 495: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.05637611448764801
    2. '-' → logprob: -2.9313762187957764
    3. '-g' → logprob: -6.681375980377197
    4. 'g' → logprob: -9.181376457214355
    5. ',' → logprob: -9.556376457214355
    6. ' ' → logprob: -11.306376457214355
    7. '-e' → logprob: -12.181376457214355
    8. 'e' → logprob: -12.181376457214355
    9. '   ' → logprob: -12.306376457214355
    10. ' g' → logprob: -12.306376457214355

Token 496: ' (' (ID: 350)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.0013139282818883657
    2. ' g' → logprob: -7.251314163208008
    3. 'e' → logprob: -7.751314163208008
    4. '(g' → logprob: -9.126314163208008
    5. '   ' → logprob: -11.126314163208008
    6. '(e' → logprob: -11.751314163208008
    7. ' (' → logprob: -11.876314163208008
    8. 's' → logprob: -12.126314163208008
    9. 'dp' → logprob: -12.126314163208008
    10. ' e' → logprob: -12.376314163208008

Token 497: 'e' (ID: 68)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.007336845155805349
    2. 'e' → logprob: -5.132336616516113
    3. '   ' → logprob: -7.632336616516113
    4. ' g' → logprob: -7.632336616516113
    5. '(g' → logprob: -9.507336616516113
    6. 'dp' → logprob: -9.507336616516113
    7. 's' → logprob: -9.882336616516113
    8. ' e' → logprob: -10.382336616516113
    9. '-' → logprob: -10.382336616516113
    10. '(e' → logprob: -10.507336616516113

Token 498: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0174393430352211
    2. ' ,' → logprob: -4.892439365386963
    3. '+' → logprob: -5.642439365386963
    4. '0' → logprob: -6.142439365386963
    5. ' +' → logprob: -6.142439365386963
    6. '),' → logprob: -7.392439365386963
    7. 'g' → logprob: -8.142438888549805
    8. ',g' → logprob: -8.267438888549805
    9. ' -' → logprob: -8.892438888549805
    10. '   ' → logprob: -9.017438888549805

Token 499: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.008778955787420273
    2. ' g' → logprob: -4.758779048919678
    3. '0' → logprob: -9.75877857208252
    4. '   ' → logprob: -9.88377857208252
    5. ' ' → logprob: -11.38377857208252
    6. ')' → logprob: -12.19627857208252
    7. '    ' → logprob: -12.38377857208252
    8. '           ' → logprob: -12.57127857208252
    9. '  ' → logprob: -12.69627857208252
    10. '+' → logprob: -12.94627857208252

Token 500: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.00772941904142499
    2. ',' → logprob: -5.132729530334473
    3. ' ),' → logprob: -6.382729530334473
    4. ' ,' → logprob: -9.882729530334473
    5. ')' → logprob: -10.132729530334473
    6. '   ' → logprob: -12.132729530334473
    7. '       ' → logprob: -12.757729530334473
    8. '0' → logprob: -13.382729530334473
    9. '),(' → logprob: -13.757729530334473
    10. ',),' → logprob: -14.132729530334473

Token 501: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0699872374534607
    2. ' ' → logprob: -2.6949872970581055
    3. ')' → logprob: -10.694987297058105
    4. ' req' → logprob: -11.694987297058105
    5. ' )' → logprob: -12.319987297058105
    6. '1' → logprob: -12.319987297058105
    7. 'req' → logprob: -12.569987297058105
    8. ' e' → logprob: -13.194987297058105
    9. ' ' → logprob: -14.319987297058105
    10. ' )
' → logprob: -14.507487297058105

Token 502: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0036077939439564943
    2. ' ' → logprob: -5.628607749938965
    3. ')' → logprob: -12.503607749938965
    4. '   ' → logprob: -14.128607749938965
    5. '1' → logprob: -14.253607749938965
    6. 'v' → logprob: -15.316107749938965
    7. 'g' → logprob: -15.378607749938965
    8. ' e' → logprob: -15.378607749938965
    9. '  ' → logprob: -15.566107749938965
    10. 'e' → logprob: -16.06610870361328

Token 503: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04328006133437157
    2. ')
' → logprob: -3.2932801246643066
    3. '       ' → logprob: -5.293280124664307
    4. ' )' → logprob: -9.418279647827148
    5. ',' → logprob: -10.293279647827148
    6. ')
' → logprob: -10.418279647827148
    7. ' )
' → logprob: -10.918279647827148
    8. '   ' → logprob: -11.543279647827148
    9. '<|end|>' → logprob: -12.168279647827148
    10. '
' → logprob: -12.418279647827148

Token 504: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002955399686470628
    2. ' if' → logprob: -9.125295639038086
    3. ',' → logprob: -9.375295639038086
    4. 'if' → logprob: -9.625295639038086
    5. '
' → logprob: -11.125295639038086
    6. '           ' → logprob: -12.000295639038086
    7. '   ' → logprob: -12.000295639038086
    8. ',m' → logprob: -13.500295639038086
    9. 'm' → logprob: -13.625295639038086
    10. 'mn' → logprob: -13.875295639038086

Token 505: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4475795030593872
    2. 'if' (adapté à ' if') → logprob: -1.3225795030593872
    3. '   ' → logprob: -2.4475793838500977
    4. '       ' → logprob: -5.697579383850098
    5. 'mn' → logprob: -5.822579383850098
    6. ' mn' → logprob: -6.572579383850098
    7. '           ' → logprob: -9.822579383850098
    8. '
' → logprob: -10.072579383850098
    9. '    ' → logprob: -10.447579383850098
    10. ' for' → logprob: -11.822579383850098

Token 506: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.28160154819488525
    2. ' e' → logprob: -1.4066015481948853
    3. ' mn' → logprob: -8.406601905822754
    4. 'mn' → logprob: -9.281601905822754
    5. '   ' → logprob: -9.906601905822754
    6. '(e' → logprob: -10.281601905822754
    7. ' ' → logprob: -10.531601905822754
    8. '	e' → logprob: -11.281601905822754
    9. '  ' → logprob: -12.656601905822754
    10. '    ' → logprob: -12.906601905822754

Token 507: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.02655920572578907
    2. '<' → logprob: -3.6515591144561768
    3. '<m' → logprob: -8.401558876037598
    4. '<|end|>' → logprob: -11.276558876037598
    5. '<n' → logprob: -12.026558876037598
    6. ' ' → logprob: -13.276558876037598
    7. ',' → logprob: -13.526558876037598
    8. ')' → logprob: -13.651558876037598
    9. '<int' → logprob: -13.901558876037598
    10. ' <=' → logprob: -14.026558876037598

Token 508: ' mn' (ID: 34208)
  Prédit: 'mn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mn' → logprob: -0.003603871213272214
    2. ' mn' → logprob: -5.628603935241699
    3. '   ' → logprob: -12.7536039352417
    4. 'mx' → logprob: -14.8786039352417
    5. '.mn' → logprob: -15.7536039352417
    6. 'min' → logprob: -16.253602981567383
    7. ' ' → logprob: -16.253602981567383
    8. '       ' → logprob: -16.628602981567383
    9. 'mnt' → logprob: -17.253602981567383
    10. '           ' → logprob: -17.253602981567383

Token 509: 'extra' (ID: 34451)
  Prédit: 'extra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'extra' → logprob: -1.981667537620524e-06
    2. '_extra' → logprob: -13.500001907348633
    3. ' extra' → logprob: -15.500001907348633
    4. 'e' → logprob: -15.625001907348633
    5. 'extr' → logprob: -15.750001907348633
    6. '(extra' → logprob: -18.000001907348633
    7. '.extra' → logprob: -18.375001907348633
    8. 'ex' → logprob: -18.875001907348633
    9. '```' → logprob: -19.000001907348633
    10. '-extra' → logprob: -19.375001907348633

Token 510: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1629444658756256
    2. ':
' → logprob: -1.9129444360733032
    3. '       ' → logprob: -6.287944316864014
    4. '           ' → logprob: -7.287944316864014
    5. '):
' → logprob: -9.912944793701172
    6. '   ' → logprob: -10.912944793701172
    7. ':

' → logprob: -11.037944793701172
    8. ',' → logprob: -11.162944793701172
    9. '<|end|>' → logprob: -11.162944793701172
    10. ':
' → logprob: -11.287944793701172

Token 511: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24228061735630035
    2. '           ' → logprob: -1.9922806024551392
    3. ' mn' → logprob: -2.7422807216644287
    4. 'mn' → logprob: -4.74228048324585
    5. '               ' → logprob: -6.24228048324585
    6. '   ' → logprob: -6.74228048324585
    7. ' 
' → logprob: -7.86728048324585
    8. '        
' → logprob: -8.117280960083008
    9. '<|end|>' → logprob: -8.492280960083008
    10. '        ' → logprob: -8.867280960083008

Token 512: ' mn' (ID: 34208)
  Prédit: 'mn'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mn' (adapté à ' mn') → logprob: -0.020689258351922035
    2. ' mn' → logprob: -4.395689487457275
    3. 'best' → logprob: -5.770689487457275
    4. 'v' → logprob: -7.145689487457275
    5. 'idx' → logprob: -7.270689487457275
    6. 'u' → logprob: -7.395689487457275
    7. 'p' → logprob: -7.770689487457275
    8. 'pos' → logprob: -7.770689487457275
    9. 'mx' → logprob: -8.020689010620117
    10. 'ans' → logprob: -8.145689010620117

Token 513: 'extra' (ID: 34451)
  Prédit: 'extra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'extra' → logprob: -3.7697225252486533e-06
    2. 'e' → logprob: -13.000003814697266
    3. '_extra' → logprob: -14.000003814697266
    4. 'extr' → logprob: -15.250003814697266
    5. 'ex' → logprob: -16.125003814697266
    6. '   ' → logprob: -16.125003814697266
    7. 'ext' → logprob: -16.375003814697266
    8. ' extra' → logprob: -17.125003814697266
    9. 'x' → logprob: -17.250003814697266
    10. '(extra' → logprob: -17.750003814697266

Token 514: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6452436447143555
    2. ' =' → logprob: -0.7702436447143555
    3. ',' → logprob: -4.3952436447143555
    4. '=e' → logprob: -8.645243644714355
    5. ',e' → logprob: -11.145243644714355
    6. ' ,' → logprob: -11.395243644714355
    7. '=v' → logprob: -11.645243644714355
    8. '   ' → logprob: -12.145243644714355
    9. '    ' → logprob: -12.895243644714355
    10. ' ' → logprob: -13.145243644714355

Token 515: ' m' (ID: 284)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'best' → logprob: -1.1695208549499512
    2. 'idx' → logprob: -2.169520854949951
    3. 'pos' → logprob: -2.669520854949951
    4. 'p' → logprob: -2.919520854949951
    5. 'leader' → logprob: -3.294520854949951
    6. 'fr' → logprob: -3.419520854949951
    7. 'x' → logprob: -3.794520854949951
    8. 'par' → logprob: -3.794520854949951
    9. 'from' → logprob: -3.919520854949951
    10. 'v' → logprob: -3.919520854949951

Token 516: 'ni' (ID: 1906)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.03950682282447815
    2. 'n' → logprob: -4.289506912231445
    3. 'e' → logprob: -5.414506912231445
    4. 'mn' → logprob: -5.414506912231445
    5. 'p' → logprob: -5.539506912231445
    6. 'x' → logprob: -5.664506912231445
    7. 'm' → logprob: -5.789506912231445
    8. 'u' → logprob: -6.164506912231445
    9. 'nv' → logprob: -7.289506912231445
    10. 'in' → logprob: -7.789506912231445

Token 517: ' =' (ID: 314)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.5946265459060669
    2. 'n' → logprob: -1.094626545906067
    3. 'nd' → logprob: -3.3446264266967773
    4. 'x' → logprob: -3.3446264266967773
    5. 'd' → logprob: -3.8446264266967773
    6. ' =' → logprob: -4.719626426696777
    7. '=' → logprob: -5.094626426696777
    8. 'e' → logprob: -5.469626426696777
    9. 'dx' → logprob: -7.219626426696777
    10. ',' → logprob: -8.219626426696777

Token 518: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.00071386230411008
    2. ' e' → logprob: -7.25071382522583
    3. 'v' → logprob: -12.500714302062988
    4. '   ' → logprob: -16.375713348388672
    5. '	e' → logprob: -16.875713348388672
    6. ' v' → logprob: -17.375713348388672
    7. '_e' → logprob: -17.875713348388672
    8. '(e' → logprob: -18.125713348388672
    9. ' ' → logprob: -18.750713348388672
    10. '    ' → logprob: -19.125713348388672

Token 519: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2931584119796753
    2. '=' → logprob: -1.9181584119796753
    3. ' =' → logprob: -2.418158531188965
    4. ',v' → logprob: -4.168158531188965
    5. 'v' → logprob: -6.918158531188965
    6. ' v' → logprob: -6.918158531188965
    7. '=v' → logprob: -8.168158531188965
    8. ' ,' → logprob: -8.418158531188965
    9. ' ' → logprob: -9.293158531188965
    10. '   ' → logprob: -10.418158531188965

Token 520: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0002613358374219388
    2. ' v' → logprob: -8.250261306762695
    3. '[v' → logprob: -19.250261306762695
    4. '	v' → logprob: -19.375261306762695
    5. '$v' → logprob: -21.125261306762695
    6. '   ' → logprob: -21.250261306762695
    7. ')v' → logprob: -21.625261306762695
    8. '(v' → logprob: -21.875261306762695
    9. '<v' → logprob: -22.000261306762695
    10. ' ' → logprob: -22.250261306762695

Token 521: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018090123310685158
    2. 'for' → logprob: -4.39309024810791
    3. 'if' → logprob: -5.89309024810791
    4. ' for' → logprob: -6.26809024810791
    5. '
' → logprob: -7.89309024810791
    6. ' if' → logprob: -8.51809024810791
    7. 'dp' → logprob: -9.14309024810791
    8. 'm' → logprob: -9.76809024810791
    9. '    
' → logprob: -10.39309024810791
    10. 's' → logprob: -10.51809024810791

Token 522: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.059498805552721024
    2. ' for' → logprob: -3.3094987869262695
    3. 'for' → logprob: -5.4344987869262695
    4. ' if' → logprob: -5.8094987869262695
    5. ' dp' → logprob: -5.8094987869262695
    6. 's' → logprob: -6.1844987869262695
    7. 'm' → logprob: -6.4344987869262695
    8. ' s' → logprob: -6.5594987869262695
    9. 'dp' → logprob: -6.6844987869262695
    10. '    ' → logprob: -6.8094987869262695

Token 523: ' extra' (ID: 5018)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5486771464347839
    2. ' dp' → logprob: -1.5486772060394287
    3. '   ' → logprob: -2.5486772060394287
    4. 'visited' → logprob: -2.7986772060394287
    5. 's' → logprob: -3.9236772060394287
    6. ' visited' → logprob: -4.67367696762085
    7. ' s' → logprob: -4.92367696762085
    8. 'if' → logprob: -5.17367696762085
    9. ' if' → logprob: -5.29867696762085
    10. 'mn' → logprob: -5.54867696762085

Token 524: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2610456645488739
    2. ' =' → logprob: -1.5110456943511963
    3. '=' → logprob: -5.261045455932617
    4. ' ,' → logprob: -6.011045455932617
    5. '<|end|>' → logprob: -6.636045455932617
    6. ' ' → logprob: -11.011045455932617
    7. '    ' → logprob: -11.511045455932617
    8. ' +=' → logprob: -11.636045455932617
    9. '<|end|>' → logprob: -11.761045455932617
    10. '  ' → logprob: -11.761045455932617

Token 525: ' tot' (ID: 2417)
  Prédit: 'gain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'gain' → logprob: -0.6436914801597595
    2. 'g' → logprob: -1.0186915397644043
    3. ' gain' → logprob: -3.0186915397644043
    4. ' g' → logprob: -3.1436915397644043
    5. 'gn' → logprob: -4.768691539764404
    6. '_gain' → logprob: -5.893691539764404
    7. '_g' → logprob: -6.143691539764404
    8. 'dp' → logprob: -6.143691539764404
    9. ' dp' → logprob: -6.893691539764404
    10. ' gn' → logprob: -7.768691539764404

Token 526: '_gain' (ID: 99774)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8985662460327148
    2. 'g' → logprob: -1.8985662460327148
    3. '_g' → logprob: -2.023566246032715
    4. 'al' → logprob: -2.273566246032715
    5. ',' → logprob: -2.398566246032715
    6. '=' → logprob: -2.523566246032715
    7. '=g' → logprob: -4.523566246032715
    8. 'gain' → logprob: -4.773566246032715
    9. 'a' → logprob: -5.023566246032715
    10. '_gain' → logprob: -5.398566246032715

Token 527: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740802049636841
    2. '=' → logprob: -0.9740802049636841
    3. ',' → logprob: -12.974080085754395
    4. ' ' → logprob: -14.974080085754395
    5. '   ' → logprob: -15.224080085754395
    6. ')' → logprob: -15.349080085754395
    7. '  ' → logprob: -16.84908103942871
    8. '>' → logprob: -18.09908103942871
    9. '    ' → logprob: -18.22408103942871
    10. ')=' → logprob: -18.34908103942871

Token 528: ' mn' (ID: 34208)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.02664603851735592
    2. ' dp' → logprob: -3.651646137237549
    3. '   ' → logprob: -8.52664566040039
    4. '10' → logprob: -10.15164566040039
    5. ' ' → logprob: -10.40164566040039
    6. 'max' → logprob: -11.15164566040039
    7. '
' → logprob: -11.15164566040039
    8. '0' → logprob: -11.77664566040039
    9. '	dp' → logprob: -12.02664566040039
    10. '  ' → logprob: -12.02664566040039

Token 529: 'extra' (ID: 34451)
  Prédit: 'extra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'extra' → logprob: -2.2200749754119897e-06
    2. 'e' → logprob: -14.375001907348633
    3. '   ' → logprob: -14.500001907348633
    4. 'x' → logprob: -15.250001907348633
    5. '_extra' → logprob: -15.500001907348633
    6. 'ex' → logprob: -16.000001907348633
    7. 'dp' → logprob: -16.375001907348633
    8. '(extra' → logprob: -16.875001907348633
    9. '
' → logprob: -17.250001907348633
    10. 'data' → logprob: -17.375001907348633

Token 530: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001422495348379016
    2. '
' → logprob: -7.62642240524292
    3. '   ' → logprob: -7.75142240524292
    4. '<|end|>' → logprob: -9.001422882080078
    5. ',
' → logprob: -9.376422882080078
    6. '    
' → logprob: -9.876422882080078
    7. ' ,' → logprob: -10.001422882080078
    8. '+' → logprob: -10.251422882080078
    9. ' +' → logprob: -10.626422882080078
    10. ' =' → logprob: -11.126422882080078

Token 531: ' sum' (ID: 4215)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.18232810497283936
    2. '0' → logprob: -2.307328224182129
    3. '-' → logprob: -3.432328224182129
    4. ' dp' → logprob: -3.807328224182129
    5. '10' → logprob: -5.307328224182129
    6. ' ' → logprob: -5.807328224182129
    7. 'max' → logprob: -6.182328224182129
    8. ' -' → logprob: -6.432328224182129
    9. '-d' → logprob: -8.932328224182129
    10. ' max' → logprob: -9.057328224182129

Token 532: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.008022037334740162
    2. '([' → logprob: -5.633021831512451
    3. '(g' → logprob: -5.633021831512451
    4. '(' → logprob: -7.508021831512451
    5. 'dp' → logprob: -9.00802230834961
    6. '((' → logprob: -9.75802230834961
    7. '(
' → logprob: -9.88302230834961
    8. '(d' → logprob: -10.63302230834961
    9. '(v' → logprob: -11.75802230834961
    10. 'g' → logprob: -12.13302230834961

Token 533: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.03372615948319435
    2. '[m' → logprob: -3.658726215362549
    3. '[i' → logprob: -5.533726215362549
    4. '[s' → logprob: -6.408726215362549
    5. '[' → logprob: -6.908726215362549
    6. '[c' → logprob: -8.78372573852539
    7. '[p' → logprob: -8.90872573852539
    8. '[x' → logprob: -8.90872573852539
    9. 'v' → logprob: -9.40872573852539
    10. '[d' → logprob: -9.40872573852539

Token 534: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.000516217143740505
    2. '][' → logprob: -7.625516414642334
    3. '[i' → logprob: -11.375515937805176
    4. '[v' → logprob: -11.500515937805176
    5. '   ' → logprob: -13.250515937805176
    6. '[j' → logprob: -13.625515937805176
    7. ')[' → logprob: -14.250515937805176
    8. ' [' → logprob: -14.250515937805176
    9. '()[' → logprob: -14.375515937805176
    10. '
' → logprob: -15.000515937805176

Token 535: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.723352049040841e-06
    2. '
' → logprob: -13.000004768371582
    3. '   ' → logprob: -13.500004768371582
    4. '0' → logprob: -15.125004768371582
    5. '```' → logprob: -15.375004768371582
    6. ' ' → logprob: -15.750004768371582
    7. '
' → logprob: -16.250003814697266
    8. '    
' → logprob: -16.500003814697266
    9. '[' → logprob: -16.875003814697266
    10. '

' → logprob: -17.125003814697266

Token 536: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0003566767554730177
    2. 'for' → logprob: -8.000356674194336
    3. ' ]' → logprob: -11.500356674194336
    4. ' for' → logprob: -11.625356674194336
    5. ']
' → logprob: -14.875356674194336
    6. 'v' → logprob: -14.875356674194336
    7. '	for' → logprob: -15.000356674194336
    8. '])' → logprob: -15.375356674194336
    9. '   ' → logprob: -15.500356674194336
    10. '
' → logprob: -16.000356674194336

Token 537: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.08904318511486053
    2. 'for' → logprob: -2.464043140411377
    3. '	for' → logprob: -9.839043617248535
    4. ' ' → logprob: -10.339043617248535
    5. '
' → logprob: -12.214043617248535
    6. '   ' → logprob: -12.464043617248535
    7. '    ' → logprob: -12.839043617248535
    8. ')' → logprob: -13.464043617248535
    9. '  ' → logprob: -13.589043617248535
    10. ' ' → logprob: -13.839043617248535

Token 538: ' v' (ID: 323)
  Prédit: 'frm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'frm' → logprob: -0.42902618646621704
    2. ' frm' → logprob: -1.0540261268615723
    3. 'v' → logprob: -8.92902660369873
    4. ' v' → logprob: -9.17902660369873
    5. '   ' → logprob: -10.42902660369873
    6. ' ' → logprob: -10.55402660369873
    7. '(frm' → logprob: -11.05402660369873
    8. '.frm' → logprob: -12.30402660369873
    9. 'fr' → logprob: -12.67902660369873
    10. '    ' → logprob: -13.55402660369873

Token 539: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.028550976887345314
    2. 'in' → logprob: -3.653550863265991
    3. 'v' → logprob: -6.52855110168457
    4. ' v' → logprob: -7.15355110168457
    5. ' ' → logprob: -13.15355110168457
    6. 's' → logprob: -13.15355110168457
    7. ')' → logprob: -15.52855110168457
    8. ',v' → logprob: -15.77855110168457
    9. ' в' → logprob: -16.02855110168457
    10. 'In' → logprob: -16.15355110168457

Token 540: ' frm' (ID: 45032)
  Prédit: 'frm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'frm' → logprob: -0.0031812789384275675
    2. ' frm' → logprob: -5.753181457519531
    3. ' ' → logprob: -14.753181457519531
    4. 'fr' → logprob: -14.753181457519531
    5. 'form' → logprob: -14.753181457519531
    6. '(frm' → logprob: -14.878181457519531
    7. '.frm' → logprob: -14.878181457519531
    8. 'sorted' → logprob: -15.003181457519531
    9. 'list' → logprob: -15.003181457519531
    10. '   ' → logprob: -15.628181457519531

Token 541: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002964865416288376
    2. ')
' → logprob: -5.877964973449707
    3. ')+' → logprob: -9.377964973449707
    4. '   ' → logprob: -10.002964973449707
    5. ' )' → logprob: -10.877964973449707
    6. ')
' → logprob: -12.252964973449707
    7. '<|end|>' → logprob: -13.252964973449707
    8. ')

' → logprob: -14.002964973449707
    9. ' ' → logprob: -14.127964973449707
    10. '  ' → logprob: -14.502964973449707

Token 542: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.4924730658531189
    2. 'if' → logprob: -1.6174731254577637
    3. '   ' → logprob: -2.2424731254577637
    4. 'visited' → logprob: -3.4924731254577637
    5. ' if' → logprob: -4.117473125457764
    6. 'for' → logprob: -4.367473125457764
    7. ' dp' → logprob: -4.867473125457764
    8. ')' → logprob: -5.117473125457764
    9. ' for' → logprob: -5.242473125457764
    10. '
' → logprob: -6.867473125457764

Token 543: ' for' (ID: 395)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6773626804351807
    2. 'dp' → logprob: -1.6773626804351807
    3. 'for' (adapté à ' for') → logprob: -2.0523626804351807
    4. 's' → logprob: -2.4273626804351807
    5. '   ' → logprob: -2.5523626804351807
    6. 'visited' → logprob: -6.427362442016602
    7. 'extra' → logprob: -6.677362442016602
    8. 'm' → logprob: -6.677362442016602
    9. 'new' → logprob: -7.052362442016602
    10. ' s' → logprob: -7.302362442016602

Token 544: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.20168755948543549
    2. ' v' → logprob: -1.7016875743865967
    3. 'f' → logprob: -9.451687812805176
    4. 'x' → logprob: -9.826687812805176
    5. 'w' → logprob: -10.201687812805176
    6. ' f' → logprob: -10.951687812805176
    7. ' w' → logprob: -11.576687812805176
    8. 'i' → logprob: -11.576687812805176
    9. 'vv' → logprob: -11.826687812805176
    10. 'u' → logprob: -11.951687812805176

Token 545: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008623555302619934
    2. 'in' → logprob: -4.7586236000061035
    3. 's' → logprob: -12.758623123168945
    4. ' ' → logprob: -13.133623123168945
    5. 'v' → logprob: -13.758623123168945
    6. '_in' → logprob: -14.633623123168945
    7. '
' → logprob: -15.008623123168945
    8. 'to' → logprob: -15.571123123168945
    9. 'n' → logprob: -15.821123123168945
    10. 'd' → logprob: -15.883623123168945

Token 546: ' frm' (ID: 45032)
  Prédit: 'frm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'frm' → logprob: -0.38942456245422363
    2. ' frm' → logprob: -1.1394245624542236
    3. ' sorted' → logprob: -6.7644243240356445
    4. 'sorted' → logprob: -6.8894243240356445
    5. '(frm' → logprob: -8.639424324035645
    6. '   ' → logprob: -9.389424324035645
    7. ' ' → logprob: -9.889424324035645
    8. 'list' → logprob: -11.014424324035645
    9. ' list' → logprob: -11.139424324035645
    10. '    ' → logprob: -11.514424324035645

Token 547: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.051014404743909836
    2. ':' → logprob: -3.0510144233703613
    3. '   ' → logprob: -6.301014423370361
    4. '       ' → logprob: -8.551013946533203
    5. ' in' → logprob: -8.801013946533203
    6. 'in' → logprob: -9.676013946533203
    7. 'if' → logprob: -9.801013946533203
    8. '):
' → logprob: -10.051013946533203
    9. ' if' → logprob: -10.301013946533203
    10. ':
' → logprob: -10.676013946533203

Token 548: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1035214513540268
    2. ' if' → logprob: -2.9785213470458984
    3. 'if' → logprob: -3.2285213470458984
    4. 'e' → logprob: -6.228521347045898
    5. 'dp' → logprob: -6.353521347045898
    6. 's' → logprob: -6.978521347045898
    7. '   ' → logprob: -7.228521347045898
    8. ' s' → logprob: -7.353521347045898
    9. ' dp' → logprob: -7.603521347045898
    10. 'extra' → logprob: -7.603521347045898

Token 549: ' s' (ID: 265)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2608795464038849
    2. 'extra' → logprob: -2.1358795166015625
    3. 'dp' → logprob: -2.8858795166015625
    4. 'e' → logprob: -3.3858795166015625
    5. 's' (adapté à ' s') → logprob: -4.5108795166015625
    6. '   ' → logprob: -4.7608795166015625
    7. 'visited' → logprob: -6.6358795166015625
    8. '       ' → logprob: -8.260879516601562
    9. 'x' → logprob: -8.885879516601562
    10. 'ex' → logprob: -9.260879516601562

Token 550: '.merge' (ID: 51225)
  Prédit: '.merge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.merge' → logprob: -0.009916160255670547
    2. '.' → logprob: -4.634916305541992
    3. '.parent' → logprob: -9.009916305541992
    4. '.union' → logprob: -11.634916305541992
    5. '.le' → logprob: -11.759916305541992
    6. 'merge' → logprob: -12.509916305541992
    7. ' .' → logprob: -12.884916305541992
    8. '   ' → logprob: -12.884916305541992
    9. '.m' → logprob: -13.009916305541992
    10. '._' → logprob: -13.259916305541992

Token 551: '(u' (ID: 17057)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.0012903552269563079
    2. '(v' → logprob: -6.751290321350098
    3. '(' → logprob: -9.501290321350098
    4. '(s' → logprob: -10.126290321350098
    5. '(u' → logprob: -12.501290321350098
    6. 'm' → logprob: -13.501290321350098
    7. '(
' → logprob: -16.876291275024414
    8. 'v' → logprob: -17.126291275024414
    9. 's' → logprob: -17.751291275024414
    10. '(extra' → logprob: -18.376291275024414

Token 552: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001605115394340828
    2. ',v' → logprob: -8.750160217285156
    3. ' ,' → logprob: -13.250160217285156
    4. 'v' → logprob: -15.875160217285156
    5. ',
' → logprob: -16.250160217285156
    6. '   ' → logprob: -19.000160217285156
    7. '
' → logprob: -20.500160217285156
    8. ' v' → logprob: -21.125160217285156
    9. '`,' → logprob: -21.250160217285156
    10. ',m' → logprob: -21.500160217285156

Token 553: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -5.848420551046729e-05
    2. ' v' → logprob: -9.7500581741333
    3. ')v' → logprob: -16.375059127807617
    4. '   ' → logprob: -18.500059127807617
    5. '	v' → logprob: -18.500059127807617
    6. '<|end|>' → logprob: -19.125059127807617
    7. ' ' → logprob: -19.625059127807617
    8. '
' → logprob: -19.750059127807617
    9. ')' → logprob: -20.125059127807617
    10. 'vq' → logprob: -20.250059127807617

Token 554: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.522638169466518e-05
    2. ')
' → logprob: -10.625024795532227
    3. ' )' → logprob: -14.750024795532227
    4. ')v' → logprob: -15.625024795532227
    5. ')
' → logprob: -16.000024795532227
    6. ')

' → logprob: -17.125024795532227
    7. '   ' → logprob: -17.375024795532227
    8. ')#' → logprob: -17.875024795532227
    9. ')`' → logprob: -18.125024795532227
    10. '),' → logprob: -18.250024795532227

Token 555: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.39444440603256226
    2. '   ' → logprob: -1.519444465637207
    3. ' dp' → logprob: -2.519444465637207
    4. '
' → logprob: -4.019444465637207
    5. ')' → logprob: -6.019444465637207
    6. 'm' → logprob: -6.894444465637207
    7. ',' → logprob: -7.144444465637207
    8. ' for' → logprob: -7.269444465637207
    9. '	dp' → logprob: -7.894444465637207
    10. 'for' → logprob: -8.019444465637207

Token 556: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.012474333867430687
    2. ' dp' → logprob: -4.762474536895752
    3. '   ' → logprob: -7.012474536895752
    4. 'leader' → logprob: -7.137474536895752
    5. 'root' → logprob: -7.512474536895752
    6. 'm' → logprob: -7.762474536895752
    7. 'rep' → logprob: -7.887474536895752
    8. 'idx' → logprob: -8.887474060058594
    9. 'for' → logprob: -8.887474060058594
    10. 'new' → logprob: -9.387474060058594

Token 557: '[s' (ID: 24177)
  Prédit: '[s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -3.047134305234067e-05
    2. '[u' → logprob: -11.000030517578125
    3. '[' → logprob: -12.000030517578125
    4. '[m' → logprob: -12.375030517578125
    5. 's' → logprob: -12.875030517578125
    6. '=' → logprob: -15.000030517578125
    7. ' =' → logprob: -15.625030517578125
    8. '=s' → logprob: -15.750030517578125
    9. ' [' → logprob: -16.250030517578125
    10. '[...]' → logprob: -17.000030517578125

Token 558: '.le' (ID: 27349)
  Prédit: '.le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.le' → logprob: -0.1025531068444252
    2. '.merge' → logprob: -2.477553129196167
    3. '[m' → logprob: -5.852552890777588
    4. '.m' → logprob: -5.852552890777588
    5. '.size' → logprob: -5.977552890777588
    6. '.' → logprob: -6.102552890777588
    7. '].' → logprob: -7.102552890777588
    8. '[' → logprob: -7.852552890777588
    9. '```' → logprob: -8.102553367614746
    10. ']' → logprob: -8.727553367614746

Token 559: 'ader' (ID: 1372)
  Prédit: 'ader'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ader' → logprob: -1.8074162653647363e-05
    2. 'ad' → logprob: -12.500018119812012
    3. 'ADER' → logprob: -13.000018119812012
    4. 'der' → logprob: -13.125018119812012
    5. 'a' → logprob: -13.500018119812012
    6. '
' → logprob: -13.750018119812012
    7. '   ' → logprob: -13.875018119812012
    8. '{' → logprob: -14.500018119812012
    9. '
' → logprob: -14.750018119812012
    10. '

' → logprob: -14.750018119812012

Token 560: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.00018149138486478478
    2. '(m' → logprob: -8.875181198120117
    3. '(s' → logprob: -10.750181198120117
    4. '(' → logprob: -11.250181198120117
    5. 'u' → logprob: -12.500181198120117
    6. '[u' → logprob: -13.500181198120117
    7. '(n' → logprob: -14.125181198120117
    8. ')(' → logprob: -15.000181198120117
    9. '(i' → logprob: -15.000181198120117
    10. ')' → logprob: -16.125181198120117

Token 561: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.02194550819694996
    2. ']' → logprob: -4.021945476531982
    3. ')' → logprob: -5.646945476531982
    4. '])' → logprob: -8.77194595336914
    5. ' )' → logprob: -10.02194595336914
    6. '   ' → logprob: -11.02194595336914
    7. ')][' → logprob: -11.14694595336914
    8. ' ]' → logprob: -11.39694595336914
    9. ']=' → logprob: -12.02194595336914
    10. ']]' → logprob: -12.77194595336914

Token 562: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25193333625793457
    2. ' =' → logprob: -1.5019333362579346
    3. '[' → logprob: -13.251933097839355
    4. '=[' → logprob: -13.376933097839355
    5. '=(' → logprob: -14.626933097839355
    6. '＝' → logprob: -16.001934051513672
    7. ' =[' → logprob: -16.126934051513672
    8. '=

' → logprob: -16.376934051513672
    9. ' =(' → logprob: -16.876934051513672
    10. '=
' → logprob: -17.626934051513672

Token 563: ' extra' (ID: 5018)
  Prédit: '(extra'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(extra' → logprob: -0.2631380259990692
    2. '(max' → logprob: -1.5131380558013916
    3. '(' → logprob: -4.8881378173828125
    4. '(ex' → logprob: -6.3881378173828125
    5. ' (' → logprob: -7.1381378173828125
    6. '(min' → logprob: -7.7631378173828125
    7. '(req' → logprob: -8.263137817382812
    8. '[max' → logprob: -8.763137817382812
    9. 'extra' → logprob: -9.513137817382812
    10. '   ' → logprob: -10.013137817382812

Token 564: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004365102213341743
    2. '   ' → logprob: -8.750436782836914
    3. ' ,' → logprob: -9.000436782836914
    4. ',t' → logprob: -10.000436782836914
    5. ',total' → logprob: -10.250436782836914
    6. ',
' → logprob: -10.500436782836914
    7. ',max' → logprob: -11.750436782836914
    8. ',n' → logprob: -12.125436782836914
    9. '0' → logprob: -12.375436782836914
    10. ',m' → logprob: -12.375436782836914

Token 565: ' tot' (ID: 2417)
  Prédit: 'tot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tot' → logprob: -0.00193149340339005
    2. ' tot' → logprob: -6.251931667327881
    3. 'total' → logprob: -12.876931190490723
    4. 'to' → logprob: -16.25193214416504
    5. 't' → logprob: -16.37693214416504
    6. ' ' → logprob: -17.12693214416504
    7. '   ' → logprob: -17.25193214416504
    8. 'tol' → logprob: -17.87693214416504
    9. 'tod' → logprob: -18.12693214416504
    10. '
' → logprob: -18.87693214416504

Token 566: '_gain' (ID: 99774)
  Prédit: '_gain'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_gain' → logprob: -2.4987974029500037e-05
    2. 'gain' → logprob: -10.625024795532227
    3. '_GAIN' → logprob: -14.375024795532227
    4. ' gain' → logprob: -17.375024795532227
    5. '_loss' → logprob: -17.750024795532227
    6. 'Gain' → logprob: -17.750024795532227
    7. '+' → logprob: -18.000024795532227
    8. '_profit' → logprob: -18.125024795532227
    9. '_g' → logprob: -19.000024795532227
    10. '_gap' → logprob: -19.000024795532227

Token 567: '
' (ID: 198)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.6338880062103271
    2. '   ' → logprob: -0.7588880062103271
    3. '
' → logprob: -7.508888244628906
    4. ' visited' → logprob: -7.633888244628906
    5. '<|end|>' → logprob: -9.508888244628906
    6. 'print' → logprob: -10.133888244628906
    7. ')' → logprob: -10.508888244628906
    8. '       ' → logprob: -10.633888244628906
    9. '           ' → logprob: -10.883888244628906
    10. 'for' → logprob: -11.133888244628906

Token 568: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 569: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' (adapté à ' visited') → logprob: -0.0017328945687040687
    2. '   ' → logprob: -6.50173282623291
    3. ' visited' → logprob: -8.37673282623291
    4. '    
' → logprob: -15.75173282623291
    5. '
' → logprob: -16.126733779907227
    6. ' ' → logprob: -16.501733779907227
    7. '  ' → logprob: -17.501733779907227
    8. 'for' → logprob: -17.501733779907227
    9. 'visible' → logprob: -18.001733779907227
    10. '    ' → logprob: -18.626733779907227

Token 570: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -3.128163257315464e-07
    2. '[' → logprob: -15.25
    3. '[s' → logprob: -16.875
    4. 'u' → logprob: -19.5
    5. '[user' → logprob: -21.125
    6. '[v' → logprob: -21.125
    7. '[i' → logprob: -22.625
    8. ' [' → logprob: -22.625
    9. '```' → logprob: -22.625
    10. '<u' → logprob: -23.0

Token 571: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.008971082977950573
    2. '=' → logprob: -4.758971214294434
    3. ']=' → logprob: -8.133971214294434
    4. ' =' → logprob: -9.758971214294434
    5. '=True' → logprob: -12.883971214294434
    6. ' ]' → logprob: -12.883971214294434
    7. '[' → logprob: -16.383970260620117
    8. ')' → logprob: -16.758970260620117
    9. 'True' → logprob: -17.008970260620117
    10. ']
' → logprob: -17.758970260620117

Token 572: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00863123033195734
    2. ' =' → logprob: -4.758631229400635
    3. '=True' → logprob: -11.008631706237793
    4. '[' → logprob: -16.633630752563477
    5. ']' → logprob: -17.883630752563477
    6. ')' → logprob: -18.758630752563477
    7. ']=' → logprob: -18.758630752563477
    8. 'True' → logprob: -18.758630752563477
    9. ' ' → logprob: -19.008630752563477
    10. '＝' → logprob: -19.008630752563477

Token 573: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -4.842555426876061e-06
    2. ' True' → logprob: -12.250004768371582
    3. '   ' → logprob: -19.2500057220459
    4. '(True' → logprob: -20.7500057220459
    5. '=True' → logprob: -22.2500057220459
    6. 'False' → logprob: -22.6250057220459
    7. '1' → logprob: -24.0000057220459
    8. 'Tr' → logprob: -24.1250057220459
    9. '.True' → logprob: -24.1250057220459
    10. 'true' → logprob: -24.6250057220459

Token 574: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 575: 'ans' (ID: 616)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 576: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08688153326511383
    2. '=' → logprob: -2.586881637573242
    3. '[' → logprob: -5.211881637573242
    4. '<|end|>' → logprob: -7.586881637573242
    5. '_' → logprob: -7.711881637573242
    6. ',' → logprob: -7.711881637573242
    7. ' +=' → logprob: -8.586881637573242
    8. ')' → logprob: -8.711881637573242
    9. '[:]' → logprob: -8.836881637573242
    10. '.' → logprob: -9.586881637573242

Token 577: ' sum' (ID: 4215)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.7230638265609741
    2. 'dp' → logprob: -1.3480638265609741
    3. '0' → logprob: -2.8480639457702637
    4. 'sum' → logprob: -3.0980639457702637
    5. ' dp' → logprob: -3.0980639457702637
    6. ' max' → logprob: -3.3480639457702637
    7. 'min' → logprob: -3.4730639457702637
    8. '10' → logprob: -3.5980639457702637
    9. ' ' → logprob: -5.973063945770264
    10. ' min' → logprob: -6.348063945770264

Token 578: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.06253021210432053
    2. '(' → logprob: -3.687530279159546
    3. '(x' → logprob: -4.187530040740967
    4. 'dp' → logprob: -5.312530040740967
    5. '(v' → logprob: -5.437530040740967
    6. '([' → logprob: -5.562530040740967
    7. '((' → logprob: -6.437530040740967
    8. '(i' → logprob: -6.562530040740967
    9. '(max' → logprob: -6.687530040740967
    10. '(d' → logprob: -6.812530040740967

Token 579: '[s' (ID: 24177)
  Prédit: '[s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.7143759727478027
    2. '[' → logprob: -0.9643759727478027
    3. '[i' → logprob: -2.0893759727478027
    4. '()[' → logprob: -5.964375972747803
    5. '[v' → logprob: -7.214375972747803
    6. ')[' → logprob: -7.714375972747803
    7. '[u' → logprob: -7.839375972747803
    8. ')' → logprob: -7.964375972747803
    9. '[-' → logprob: -8.589376449584961
    10. '(s' → logprob: -8.589376449584961

Token 580: '.le' (ID: 27349)
  Prédit: '.le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.le' → logprob: -7.465036105713807e-06
    2. 'i' → logprob: -12.625007629394531
    3. ' .' → logprob: -13.375007629394531
    4. 'leader' → logprob: -14.125007629394531
    5. '.' → logprob: -14.625007629394531
    6. 'le' → logprob: -15.000007629394531
    7. '[i' → logprob: -15.000007629394531
    8. '.Le' → logprob: -15.375007629394531
    9. '_le' → logprob: -15.875007629394531
    10. '```' → logprob: -16.12500762939453

Token 581: 'ader' (ID: 1372)
  Prédit: 'ader'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ader' → logprob: -0.017111632972955704
    2. '.le' → logprob: -4.767111778259277
    3. 'leader' → logprob: -4.892111778259277
    4. 'e' → logprob: -7.142111778259277
    5. '_le' → logprob: -9.767111778259277
    6. '.' → logprob: -10.517111778259277
    7. '.e' → logprob: -11.392111778259277
    8. '{' → logprob: -11.767111778259277
    9. '   ' → logprob: -11.892111778259277
    10. '```' → logprob: -12.017111778259277

Token 582: '(' (ID: 7)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.004930362105369568
    2. '(u' → logprob: -5.37993049621582
    3. 'i' → logprob: -9.00493049621582
    4. '(v' → logprob: -9.25493049621582
    5. '(' → logprob: -9.50493049621582
    6. '(x' → logprob: -12.12993049621582
    7. '(n' → logprob: -12.37993049621582
    8. '(k' → logprob: -13.62993049621582
    9. 'u' → logprob: -13.87993049621582
    10. '(_)' → logprob: -14.12993049621582

Token 583: '0' (ID: 15)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00036406738217920065
    2. 'u' → logprob: -8.000364303588867
    3. '0' → logprob: -11.625364303588867
    4. '(i' → logprob: -11.625364303588867
    5. ' i' → logprob: -12.250364303588867
    6. 'v' → logprob: -12.625364303588867
    7. 'x' → logprob: -14.375364303588867
    8. '_i' → logprob: -14.375364303588867
    9. '_)' → logprob: -14.625364303588867
    10. '_' → logprob: -15.000364303588867

Token 584: ')])
' (ID: 66560)
  Prédit: ')]['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')][' → logprob: -0.02478906325995922
    2. '][' → logprob: -4.024788856506348
    3. ')[' → logprob: -5.774788856506348
    4. '])[' → logprob: -5.899788856506348
    5. ')])' → logprob: -8.149788856506348
    6. '])' → logprob: -9.149788856506348
    7. '   ' → logprob: -9.399788856506348
    8. ')' → logprob: -9.399788856506348
    9. ']][' → logprob: -9.524788856506348
    10. ')]' → logprob: -9.649788856506348

Token 585: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6413856744766235
    2. '
' → logprob: -0.7663856744766235
    3. 'if' → logprob: -5.266385555267334
    4. '<|end|>' → logprob: -6.141385555267334
    5. ' print' → logprob: -7.516385555267334
    6. ' if' → logprob: -7.766385555267334
    7. '
' → logprob: -9.266386032104492
    8. '  
' → logprob: -10.016386032104492
    9. ')' → logprob: -10.141386032104492
    10. '+' → logprob: -10.141386032104492

Token 586: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.007201340049505234
    2. '()' → logprob: -5.007201194763184
    3. '(' → logprob: -7.757201194763184
    4. 'ans' → logprob: -10.132201194763184
    5. '(sum' → logprob: -11.632201194763184
    6. '(*' → logprob: -12.257201194763184
    7. '(dp' → logprob: -13.507201194763184
    8. '(answer' → logprob: -14.132201194763184
    9. '(
' → logprob: -14.507201194763184
    10. '('' → logprob: -14.757201194763184

Token 587: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.259079363080673e-05
    2. ' )' → logprob: -11.500012397766113
    3. ')
' → logprob: -13.250012397766113
    4. '))' → logprob: -15.500012397766113
    5. '+' → logprob: -15.875012397766113
    6. ')`' → logprob: -16.12501335144043
    7. '```' → logprob: -16.75001335144043
    8. '`)' → logprob: -16.87501335144043
    9. '**' → logprob: -17.37501335144043
    10. '()' → logprob: -17.62501335144043


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 585
Tokens correctement prédits (1ère position, stricte): 258
Tokens correctement prédits (1ère position, avec adaptation): 285
Tokens correctement prédits (top 10): 523
Précision stricte (1ère position): 44.10%
Précision adaptée (1ère position): 48.72%
Précision (top 10): 89.40%
================================================================================
