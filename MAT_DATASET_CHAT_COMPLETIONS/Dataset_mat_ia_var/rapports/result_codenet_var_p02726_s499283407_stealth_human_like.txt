================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:20:21
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n, x, y = map(int, input().split())
a = [0 for _ in range(n)]
for i in range(n):
    # hmm i guess I have to loop over j
    for j in range(i+1, n):
        d1 = j-i
        tmp = abs(i - (x-1)) + abs(j - (y-1)) + 1
        if d1 < tmp:
            idx = d1
        else:
            idx = tmp
        a[idx] = a[idx] + 1 # probably could use += but this is clearer?
# print results, but skip a[0] since that's always 0 anyway?
for val in a[1:]:
    print(val)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' x' (ID: 1215)
  → Token d'amorce (pas de prédiction)

Token 3: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07215066254138947
    2. ' =' → logprob: -2.697150707244873
    3. ',' → logprob: -6.197150707244873
    4. '[' → logprob: -9.822150230407715
    5. ' ' → logprob: -9.822150230407715
    6. '+' → logprob: -11.322150230407715
    7. '_' → logprob: -11.322150230407715
    8. '.' → logprob: -11.447150230407715
    9. ')' → logprob: -11.822150230407715
    10. '*' → logprob: -12.197150230407715

Token 4: ' y' (ID: 342)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.13689367473125458
    2. ' =' → logprob: -2.1368937492370605
    3. ',' → logprob: -4.6368937492370605
    4. ')' → logprob: -9.386893272399902
    5. ' ' → logprob: -10.011893272399902
    6. '.' → logprob: -10.511893272399902
    7. ';' → logprob: -11.011893272399902
    8. ' ,' → logprob: -11.261893272399902
    9. '_' → logprob: -11.511893272399902
    10. ':' → logprob: -12.511893272399902

Token 5: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.007321697659790516
    2. ' =' → logprob: -5.007321834564209
    3. ',' → logprob: -7.632321834564209
    4. ';' → logprob: -10.50732135772705
    5. '```' → logprob: -11.00732135772705
    6. ')' → logprob: -11.13232135772705
    7. '+' → logprob: -11.38232135772705
    8. '_' → logprob: -11.38232135772705
    9. '=
' → logprob: -11.63232135772705
    10. '.' → logprob: -11.75732135772705

Token 6: ' map' (ID: 4014)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6395848393440247
    2. ' ' → logprob: -0.7645848393440247
    3. 'map' → logprob: -6.264585018157959
    4. ' map' → logprob: -6.389585018157959
    5. 'input' → logprob: -6.639585018157959
    6. '1' → logprob: -6.764585018157959
    7. ' input' → logprob: -8.0145845413208
    8. '10' → logprob: -8.6395845413208
    9. '5' → logprob: -9.3895845413208
    10. ' n' → logprob: -9.6395845413208

Token 7: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014534374698996544
    2. '```' → logprob: -5.2645344734191895
    3. '<|end|>' → logprob: -5.3895344734191895
    4. '(lambda' → logprob: -5.7645344734191895
    5. ')' → logprob: -8.139533996582031
    6. '(int' → logprob: -8.639533996582031
    7. '<|end|>' → logprob: -8.764533996582031
    8. '(str' → logprob: -9.264533996582031
    9. '\(' → logprob: -9.514533996582031
    10. '_' → logprob: -10.014533996582031

Token 8: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09385255724191666
    2. ')' → logprob: -3.0938525199890137
    3. '(input' → logprob: -3.4688525199890137
    4. '(str' → logprob: -5.093852519989014
    5. '<|end|>' → logprob: -6.718852519989014
    6. '```' → logprob: -6.968852519989014
    7. '(ord' → logprob: -7.093852519989014
    8. 'input' → logprob: -7.093852519989014
    9. '(token' → logprob: -7.468852519989014
    10. '(user' → logprob: -7.718852519989014

Token 9: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.062121618539094925
    2. ' input' → logprob: -2.812121629714966
    3. '(input' → logprob: -9.437121391296387
    4. ')' → logprob: -9.562121391296387
    5. ',input' → logprob: -12.937121391296387
    6. '=input' → logprob: -14.437121391296387
    7. 'str' → logprob: -15.687121391296387
    8. '[input' → logprob: -15.812121391296387
    9. ' ' → logprob: -16.187122344970703
    10. '```' → logprob: -16.437122344970703

Token 10: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.946772575378418
    2. '(' → logprob: -1.071772575378418
    3. ')' → logprob: -1.821772575378418
    4. '())' → logprob: -2.571772575378418
    5. '(token' → logprob: -5.446772575378418
    6. '```' → logprob: -5.696772575378418
    7. '(()' → logprob: -5.696772575378418
    8. '().' → logprob: -5.821772575378418
    9. '('' → logprob: -6.071772575378418
    10. '`()' → logprob: -6.196772575378418

Token 11: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00013882013445254415
    2. 'strip' → logprob: -9.125139236450195
    3. 'rstrip' → logprob: -10.625139236450195
    4. ' split' → logprob: -12.750139236450195
    5. '(split' → logprob: -13.750139236450195
    6. ')' → logprob: -14.375139236450195
    7. 'read' → logprob: -14.625139236450195
    8. 'spl' → logprob: -14.750139236450195
    9. '```' → logprob: -16.375139236450195
    10. 'startswith' → logprob: -17.625139236450195

Token 12: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0026015799958258867
    2. '))' → logprob: -6.127601623535156
    3. '())' → logprob: -8.627601623535156
    4. '`)' → logprob: -9.127601623535156
    5. '(' → logprob: -9.377601623535156
    6. ')`' → logprob: -11.002601623535156
    7. '()' → logprob: -11.627601623535156
    8. ')))' → logprob: -12.377601623535156
    9. '```' → logprob: -13.127601623535156
    10. ' )' → logprob: -13.252601623535156

Token 13: 'a' (ID: 64)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8381796479225159
    2. '\n' → logprob: -1.338179588317871
    3. 'i' → logprob: -2.338179588317871
    4. '```' → logprob: -3.338179588317871
    5. 'for' → logprob: -3.588179588317871
    6. '#' → logprob: -3.838179588317871
    7. '\' → logprob: -3.963179588317871
    8. '`' → logprob: -4.088179588317871
    9. '
' → logprob: -4.338179588317871
    10. 'a' → logprob: -4.713179588317871

Token 14: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.306286096572876
    2. ',' → logprob: -1.556286096572876
    3. ' =' → logprob: -1.931286096572876
    4. 'rr' → logprob: -2.306286096572876
    5. '[i' → logprob: -2.806286096572876
    6. 'rray' → logprob: -3.056286096572876
    7. 'r' → logprob: -3.056286096572876
    8. '=' → logprob: -3.181286096572876
    9. '.' → logprob: -4.556285858154297
    10. ',b' → logprob: -5.056285858154297

Token 15: ' [' (ID: 723)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.7809139490127563
    2. 'list' → logprob: -1.4059139490127563
    3. ' list' → logprob: -2.655913829803467
    4. ' []' → logprob: -2.905913829803467
    5. ' [' → logprob: -3.030913829803467
    6. '[int' → logprob: -3.405913829803467
    7. '[' → logprob: -3.530913829803467
    8. '[n' → logprob: -3.530913829803467
    9. '[x' → logprob: -4.405913829803467
    10. '[min' → logprob: -5.155913829803467

Token 16: '0' (ID: 15)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.07553880661725998
    2. '0' → logprob: -2.7005388736724854
    3. ']' → logprob: -6.325538635253906
    4. '*' → logprob: -6.950538635253906
    5. 'map' → logprob: -6.950538635253906
    6. ']int' → logprob: -6.950538635253906
    7. ' int' → logprob: -8.075538635253906
    8. ']*' → logprob: -8.575538635253906
    9. '(int' → logprob: -8.700538635253906
    10. 'list' → logprob: -9.325538635253906

Token 17: ' for' (ID: 395)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.032538216561079025
    2. ',' → logprob: -3.5325381755828857
    3. ']*' → logprob: -6.532538414001465
    4. ' for' → logprob: -7.157538414001465
    5. ' ]' → logprob: -8.407538414001465
    6. ')' → logprob: -9.157538414001465
    7. 'for' → logprob: -9.532538414001465
    8. ')]' → logprob: -9.657538414001465
    9. ']*(' → logprob: -9.782538414001465
    10. 'a' → logprob: -11.657538414001465

Token 18: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.69753497838974
    2. ' _' → logprob: -0.82253497838974
    3. ' ' → logprob: -2.9475350379943848
    4. ' i' → logprob: -4.697535037994385
    5. ' range' → logprob: -7.322535037994385
    6. '(' → logprob: -8.322534561157227
    7. '_range' → logprob: -8.947534561157227
    8. 'range' → logprob: -9.322534561157227
    9. 'i' → logprob: -9.572534561157227
    10. '(i' → logprob: -10.197534561157227

Token 19: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2300301194190979
    2. ' range' → logprob: -1.8550300598144531
    3. ' in' → logprob: -3.105030059814453
    4. 'in' → logprob: -6.355030059814453
    5. '_' → logprob: -6.730030059814453
    6. ' xrange' → logprob: -7.855030059814453
    7. ' ' → logprob: -8.355030059814453
    8. 'a' → logprob: -8.355030059814453
    9. 'i' → logprob: -8.980030059814453
    10. '_range' → logprob: -9.480030059814453

Token 20: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.12692883610725403
    2. ' range' → logprob: -2.1269288063049316
    3. '(range' → logprob: -15.00192928314209
    4. '	range' → logprob: -15.12692928314209
    5. ' ' → logprob: -16.876928329467773
    6. ' xrange' → logprob: -17.251928329467773
    7. 'rang' → logprob: -17.751928329467773
    8. 'ran' → logprob: -18.126928329467773
    9. 'a' → logprob: -18.126928329467773
    10. ')' → logprob: -18.376928329467773

Token 21: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0024763736873865128
    2. '(' → logprob: -6.002476215362549
    3. ' (' → logprob: -14.502476692199707
    4. '(
' → logprob: -16.87747573852539
    5. '(x' → logprob: -17.00247573852539
    6. 'n' → logprob: -17.00247573852539
    7. '(len' → logprob: -17.25247573852539
    8. '((' → logprob: -17.62747573852539
    9. '(nx' → logprob: -17.75247573852539
    10. '(N' → logprob: -18.00247573852539

Token 22: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -1.7835754988482222e-05
    2. ')' → logprob: -11.750018119812012
    3. ']' → logprob: -12.750018119812012
    4. ')])' → logprob: -12.875018119812012
    5. ' )' → logprob: -13.250018119812012
    6. '])]' → logprob: -13.625018119812012
    7. ')],' → logprob: -14.125018119812012
    8. '')]' → logprob: -15.500018119812012
    9. '])' → logprob: -16.250017166137695
    10. '+' → logprob: -16.500017166137695

Token 23: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.48503735661506653
    2. 'a' → logprob: -1.9850373268127441
    3. ' for' → logprob: -2.235037326812744
    4. 'x' → logprob: -2.985037326812744
    5. ' 
' → logprob: -4.485037326812744
    6. '```' → logprob: -4.485037326812744
    7. '\n' → logprob: -4.485037326812744
    8. '
' → logprob: -4.610037326812744
    9. '\' → logprob: -4.735037326812744
    10. ' ' → logprob: -4.860037326812744

Token 24: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.1408836841583252
    2. ' ' → logprob: -2.140883684158325
    3. '_' → logprob: -4.890883445739746
    4. ' _' → logprob: -5.140883445739746
    5. 'i' → logprob: -8.015883445739746
    6. '  ' → logprob: -9.765883445739746
    7. ' ‌' → logprob: -9.890883445739746
    8. ' ' → logprob: -10.890883445739746
    9. ' range' → logprob: -11.015883445739746
    10. ' x' → logprob: -12.140883445739746

Token 25: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014290434308350086
    2. 'in' → logprob: -4.2642903327941895
    3. ' ' → logprob: -9.264290809631348
    4. '  ' → logprob: -11.264290809631348
    5. '+' → logprob: -11.764290809631348
    6. '	in' → logprob: -12.889290809631348
    7. ' i' → logprob: -13.139290809631348
    8. 'n' → logprob: -13.764290809631348
    9. 'range' → logprob: -14.139290809631348
    10. '_' → logprob: -14.826790809631348

Token 26: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.029752571135759354
    2. 'range' → logprob: -3.529752492904663
    3. ' ' → logprob: -13.529752731323242
    4. '	range' → logprob: -14.904752731323242
    5. ' xrange' → logprob: -15.279752731323242
    6. '(range' → logprob: -16.404752731323242
    7. '_' → logprob: -16.904752731323242
    8. '  ' → logprob: -17.154752731323242
    9. '_range' → logprob: -17.529752731323242
    10. ' ran' → logprob: -18.779752731323242

Token 27: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.31344547867774963
    2. '(' → logprob: -1.3134454488754272
    3. ' (' → logprob: -9.063445091247559
    4. '(x' → logprob: -10.188445091247559
    5. '(y' → logprob: -11.563445091247559
    6. '(space' → logprob: -12.688445091247559
    7. '(

' → logprob: -12.688445091247559
    8. ' n' → logprob: -12.813445091247559
    9. '(range' → logprob: -13.188445091247559
    10. '(
' → logprob: -13.313445091247559

Token 28: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0024030047934502363
    2. ')' → logprob: -6.1274027824401855
    3. ' ):' → logprob: -9.252403259277344
    4. '):
' → logprob: -9.627403259277344
    5. ':' → logprob: -10.127403259277344
    6. ']:' → logprob: -12.502403259277344
    7. '+' → logprob: -12.502403259277344
    8. '-' → logprob: -12.877403259277344
    9. ' ' → logprob: -14.002403259277344
    10. '):

' → logprob: -14.377403259277344

Token 29: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5140162110328674
    2. '<|end|>' → logprob: -2.0140161514282227
    3. ' a' → logprob: -2.1390161514282227
    4. 'a' → logprob: -2.2640161514282227
    5. '   ' → logprob: -4.014016151428223
    6. '    ' → logprob: -4.264016151428223
    7. '<|end|>' → logprob: -6.139016151428223
    8. ' ' → logprob: -6.389016151428223
    9. ' 
' → logprob: -7.014016151428223
    10. ' x' → logprob: -7.139016151428223

Token 30: ' #' (ID: 1069)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6936641335487366
    2. ' a' → logprob: -0.6936641335487366
    3. 'x' → logprob: -8.81866455078125
    4. ' ' → logprob: -8.94366455078125
    5. ' x' → logprob: -10.06866455078125
    6. '_' → logprob: -10.81866455078125
    7. 'b' → logprob: -10.94366455078125
    8. '_a' → logprob: -11.06866455078125
    9. '	a' → logprob: -11.06866455078125
    10. '   ' → logprob: -11.19366455078125

Token 31: ' hmm' (ID: 186402)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -1.367155909538269
    2. 'a' → logprob: -1.492155909538269
    3. ' ' → logprob: -1.617155909538269
    4. ' x' → logprob: -1.867155909538269
    5. 'x' → logprob: -2.3671560287475586
    6. '_' → logprob: -3.6171560287475586
    7. '<|end|>' → logprob: -4.742156028747559
    8. 'int' → logprob: -4.992156028747559
    9. ' _' → logprob: -5.492156028747559
    10. '_a' → logprob: -5.742156028747559

Token 32: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8538323044776917
    2. '   ' → logprob: -1.1038322448730469
    3. '<|end|>' → logprob: -3.103832244873047
    4. ':' → logprob: -3.478832244873047
    5. ' if' → logprob: -3.728832244873047
    6. 'a' → logprob: -3.853832244873047
    7. 'x' → logprob: -4.103832244873047
    8. ' a' → logprob: -4.353832244873047
    9. ',' → logprob: -4.478832244873047
    10. ' x' → logprob: -4.603832244873047

Token 33: ' guess' (ID: 11915)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.5630004405975342
    2. 'n' → logprob: -0.9380004405975342
    3. '+' → logprob: -4.688000679016113
    4. 't' → logprob: -5.438000679016113
    5. ' =' → logprob: -5.438000679016113
    6. 'nt' → logprob: -5.563000679016113
    7. '=' → logprob: -6.063000679016113
    8. ' +=' → logprob: -6.063000679016113
    9. 'nd' → logprob: -6.188000679016113
    10. ' ' → logprob: -6.438000679016113

Token 34: ' I' (ID: 357)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5127743482589722
    2. ' a' → logprob: -1.0127743482589722
    3. '   ' → logprob: -4.387774467468262
    4. ' ' → logprob: -4.637774467468262
    5. '_' → logprob: -5.887774467468262
    6. 'x' → logprob: -6.262774467468262
    7. 'b' → logprob: -6.637774467468262
    8. ' pass' → logprob: -6.637774467468262
    9. ' _' → logprob: -6.762774467468262
    10. ' x' → logprob: -6.887774467468262

Token 35: ' have' (ID: 679)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1707230806350708
    2. ''ll' → logprob: -1.6707230806350708
    3. ' need' → logprob: -2.4207229614257812
    4. 'a' → logprob: -2.9207229614257812
    5. ' can' → logprob: -3.1707229614257812
    6. 'could' → logprob: -3.1707229614257812
    7. ' could' → logprob: -3.4207229614257812
    8. '=' → logprob: -3.5457229614257812
    9. ' =' → logprob: -3.7957229614257812
    10. ' want' → logprob: -3.9207229614257812

Token 36: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.14857174456119537
    2. 'to' → logprob: -2.023571729660034
    3. 'a' → logprob: -5.773571968078613
    4. 'n't' → logprob: -6.773571968078613
    5. ' ' → logprob: -7.648571968078613
    6. ' a' → logprob: -7.648571968078613
    7. ' not' → logprob: -8.523571968078613
    8. ' no' → logprob: -9.523571968078613
    9. 'not' → logprob: -9.648571968078613
    10. 'x' → logprob: -9.648571968078613

Token 37: ' loop' (ID: 11453)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.18852108716964722
    2. ' a' → logprob: -2.563521146774292
    3. '   ' → logprob: -3.313521146774292
    4. 'for' → logprob: -3.688521146774292
    5. ' continue' → logprob: -4.813520908355713
    6. ' for' → logprob: -4.813520908355713
    7. 'continue' → logprob: -5.438520908355713
    8. ' pass' → logprob: -5.813520908355713
    9. ' do' → logprob: -6.313520908355713
    10. ' break' → logprob: -6.813520908355713

Token 38: ' over' (ID: 1072)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34566858410835266
    2. ' through' → logprob: -1.8456685543060303
    3. ' for' → logprob: -2.5956685543060303
    4. ' over' → logprob: -3.8456685543060303
    5. 'for' → logprob: -3.9706685543060303
    6. ' ' → logprob: -5.095668792724609
    7. ' to' → logprob: -5.470668792724609
    8. '    ' → logprob: -5.720668792724609
    9. 'over' → logprob: -7.220668792724609
    10. '  ' → logprob: -7.595668792724609

Token 39: ' j' (ID: 441)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0365087129175663
    2. ' range' → logprob: -3.411508798599243
    3. 'x' → logprob: -6.161508560180664
    4. 'a' → logprob: -7.661508560180664
    5. '(range' → logprob: -9.536508560180664
    6. 'y' → logprob: -9.911508560180664
    7. 'n' → logprob: -10.536508560180664
    8. '   ' → logprob: -10.536508560180664
    9. ' x' → logprob: -11.036508560180664
    10. ' a' → logprob: -11.036508560180664

Token 40: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.1619545221328735
    2. '   ' → logprob: -1.6619545221328735
    3. ' in' → logprob: -1.7869545221328735
    4. '<|end|>' → logprob: -2.161954402923584
    5. ',' → logprob: -3.036954402923584
    6. 'in' → logprob: -3.536954402923584
    7. ' ' → logprob: -3.536954402923584
    8. ' to' → logprob: -3.786954402923584
    9. ' range' → logprob: -3.786954402923584
    10. '    ' → logprob: -4.411954402923584

Token 41: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9185331463813782
    2. ' for' → logprob: -1.2935330867767334
    3. '<|end|>' → logprob: -1.4185330867767334
    4. ' ' → logprob: -3.5435330867767334
    5. 'for' → logprob: -3.9185330867767334
    6. '```' → logprob: -4.2935333251953125
    7. ',' → logprob: -5.0435333251953125
    8. '    ' → logprob: -5.1685333251953125
    9. '  ' → logprob: -6.0435333251953125
    10. '<|end|>' → logprob: -6.1685333251953125

Token 42: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.42300334572792053
    2. '   ' → logprob: -1.1730033159255981
    3. 'for' (adapté à ' for') → logprob: -4.048003196716309
    4. ' ' → logprob: -5.048003196716309
    5. '<|end|>' → logprob: -5.423003196716309
    6. '    ' → logprob: -6.173003196716309
    7. ':' → logprob: -6.423003196716309
    8. '       ' → logprob: -6.798003196716309
    9. ' in' → logprob: -7.298003196716309
    10. ',' → logprob: -7.673003196716309

Token 43: ' j' (ID: 441)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.030642811208963394
    2. 'range' → logprob: -3.5306427478790283
    3. ' ' → logprob: -7.655642986297607
    4. ' j' → logprob: -8.53064250946045
    5. ' in' → logprob: -10.03064250946045
    6. ' x' → logprob: -10.03064250946045
    7. ' xrange' → logprob: -10.53064250946045
    8. '_range' → logprob: -11.15564250946045
    9. 'j' → logprob: -11.28064250946045
    10. '_' → logprob: -11.28064250946045

Token 44: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01619636081159115
    2. 'in' → logprob: -4.141196250915527
    3. ' ' → logprob: -8.891196250915527
    4. 'range' → logprob: -11.641196250915527
    5. ' range' → logprob: -12.141196250915527
    6. '    ' → logprob: -12.391196250915527
    7. '  ' → logprob: -13.891196250915527
    8. ')' → logprob: -14.141196250915527
    9. '	in' → logprob: -14.266196250915527
    10. '   ' → logprob: -14.266196250915527

Token 45: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.06197284162044525
    2. 'range' → logprob: -2.8119728565216064
    3. '(range' → logprob: -12.811972618103027
    4. '	range' → logprob: -13.686972618103027
    5. ' xrange' → logprob: -14.811972618103027
    6. ' ' → logprob: -14.811972618103027
    7. '_range' → logprob: -16.186973571777344
    8. ')' → logprob: -16.436973571777344
    9. '  ' → logprob: -16.811973571777344
    10. '(' → logprob: -16.936973571777344

Token 46: '(i' (ID: 3649)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.09832726418972015
    2. '(' → logprob: -3.223327159881592
    3. '(x' → logprob: -3.223327159881592
    4. '(i' → logprob: -4.473327159881592
    5. '(y' → logprob: -5.973327159881592
    6. '(j' → logprob: -11.34832763671875
    7. '(len' → logprob: -11.72332763671875
    8. '(m' → logprob: -11.97332763671875
    9. '(s' → logprob: -12.34832763671875
    10. ' (' → logprob: -12.72332763671875

Token 47: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.021596277132630348
    2. ' +' → logprob: -4.021596431732178
    3. '):' → logprob: -6.896596431732178
    4. ')' → logprob: -7.146596431732178
    5. '+n' → logprob: -7.146596431732178
    6. ',' → logprob: -8.39659595489502
    7. ',n' → logprob: -8.39659595489502
    8. '):
' → logprob: -9.27159595489502
    9. '   ' → logprob: -9.27159595489502
    10. ' n' → logprob: -9.39659595489502

Token 48: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.584861744660884e-05
    2. ' ' → logprob: -10.000045776367188
    3. 'n' → logprob: -15.500045776367188
    4. '2' → logprob: -16.500045776367188
    5. '0' → logprob: -17.375045776367188
    6. ' n' → logprob: -17.500045776367188
    7. '   ' → logprob: -17.625045776367188
    8. '```' → logprob: -18.750045776367188
    9. '１' → logprob: -19.062545776367188
    10. '  ' → logprob: -19.312545776367188

Token 49: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.030642123892903328
    2. ',n' → logprob: -3.530642032623291
    3. ' ,' → logprob: -7.030642032623291
    4. 'n' → logprob: -13.03064250946045
    5. '):' → logprob: -13.40564250946045
    6. '   ' → logprob: -13.53064250946045
    7. ' n' → logprob: -14.65564250946045
    8. '):
' → logprob: -15.28064250946045
    9. '  ' → logprob: -15.78064250946045
    10. ')' → logprob: -15.78064250946045

Token 50: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.04860871285200119
    2. ' n' → logprob: -3.0486087799072266
    3. '   ' → logprob: -11.298608779907227
    4. ' ' → logprob: -12.673608779907227
    5. '    ' → logprob: -12.798608779907227
    6. '	n' → logprob: -13.548608779907227
    7. 'x' → logprob: -14.923608779907227
    8. ')' → logprob: -14.923608779907227
    9. '  ' → logprob: -15.298608779907227
    10. 'y' → logprob: -15.673608779907227

Token 51: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00021843716967850924
    2. '):
' → logprob: -9.000218391418457
    3. ':' → logprob: -9.625218391418457
    4. ')' → logprob: -10.875218391418457
    5. '+' → logprob: -12.500218391418457
    6. ' ):' → logprob: -12.625218391418457
    7. '   ' → logprob: -13.500218391418457
    8. '):
' → logprob: -14.125218391418457
    9. '():' → logprob: -15.125218391418457
    10. ',' → logprob: -16.000219345092773

Token 52: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16411060094833374
    2. '       ' → logprob: -2.1641106605529785
    3. '<|end|>' → logprob: -3.6641106605529785
    4. '   ' → logprob: -5.5391106605529785
    5. ',' → logprob: -6.2891106605529785
    6. '):' → logprob: -6.5391106605529785
    7. ')' → logprob: -7.1641106605529785
    8. ':
' → logprob: -7.2891106605529785
    9. ' ' → logprob: -7.9141106605529785
    10. '<|end|>' → logprob: -8.03911018371582

Token 53: ' d' (ID: 272)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5009653568267822
    2. ' ' → logprob: -2.0009653568267822
    3. 'if' → logprob: -2.6259653568267822
    4. 'a' → logprob: -2.8759653568267822
    5. '       ' → logprob: -3.1259653568267822
    6. ' a' → logprob: -3.6259653568267822
    7. '   ' → logprob: -3.8759653568267822
    8. ':' → logprob: -4.500965118408203
    9. '           ' → logprob: -4.875965118408203
    10. '<|end|>' → logprob: -5.125965118408203

Token 54: '1' (ID: 16)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17303375899791718
    2. '=' → logprob: -1.9230337142944336
    3. 'ist' → logprob: -5.298033714294434
    4. 'istance' → logprob: -5.673033714294434
    5. 'i' → logprob: -6.923033714294434
    6. ',' → logprob: -7.423033714294434
    7. ' ' → logprob: -7.423033714294434
    8. 'f' → logprob: -7.798033714294434
    9. 'e' → logprob: -8.048033714294434
    10. 'ef' → logprob: -8.298033714294434

Token 55: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04431413114070892
    2. '=' → logprob: -3.16931414604187
    3. ',' → logprob: -7.669313907623291
    4. ' ' → logprob: -8.16931438446045
    5. 'istance' → logprob: -8.16931438446045
    6. 'ist' → logprob: -8.66931438446045
    7. 'f' → logprob: -10.79431438446045
    8. 'if' → logprob: -11.29431438446045
    9. 'iff' → logprob: -11.54431438446045
    10. '   ' → logprob: -11.54431438446045

Token 56: ' j' (ID: 441)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.5628316402435303
    2. 'x' → logprob: -1.5628316402435303
    3. '(x' → logprob: -2.3128316402435303
    4. '(abs' → logprob: -2.8128316402435303
    5. ' abs' → logprob: -3.4378316402435303
    6. ' (' → logprob: -4.312831878662109
    7. 'a' → logprob: -5.437831878662109
    8. ' x' → logprob: -5.437831878662109
    9. '(a' → logprob: -6.687831878662109
    10. '((' → logprob: -6.812831878662109

Token 57: '-i' (ID: 18499)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5715989470481873
    2. '-' → logprob: -0.9465989470481873
    3. '-i' → logprob: -3.071599006652832
    4. ' ' → logprob: -7.196599006652832
    5. '-x' → logprob: -8.821599006652832
    6. ' i' → logprob: -10.821599006652832
    7. 'i' → logprob: -11.071599006652832
    8. '  ' → logprob: -11.821599006652832
    9. 'x' → logprob: -11.946599006652832
    10. '   ' → logprob: -11.946599006652832

Token 58: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.1239922046661377
    2. 'd' → logprob: -1.4989922046661377
    3. '
' → logprob: -2.2489922046661377
    4. '<|end|>' → logprob: -2.3739922046661377
    5. ' +' → logprob: -2.7489922046661377
    6. ' d' → logprob: -2.9989922046661377
    7. ' ' → logprob: -3.2489922046661377
    8. '*d' → logprob: -3.9989922046661377
    9. '**' → logprob: -4.248991966247559
    10. ',' → logprob: -4.623991966247559

Token 59: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 60: ' tmp' (ID: 8919)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.3269125521183014
    2. ' d' → logprob: -1.326912522315979
    3. '*d' → logprob: -4.5769124031066895
    4. ' if' → logprob: -7.7019124031066895
    5. ' *' → logprob: -8.201912879943848
    6. '       ' → logprob: -8.326912879943848
    7. '+' → logprob: -8.326912879943848
    8. '*' → logprob: -8.576912879943848
    9. 'if' → logprob: -8.701912879943848
    10. '**' → logprob: -8.701912879943848

Token 61: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.34950384497642517
    2. '=' → logprob: -1.2245038747787476
    3. ' ' → logprob: -8.099503517150879
    4. '_' → logprob: -8.599503517150879
    5. 'x' → logprob: -8.974503517150879
    6. ',' → logprob: -9.474503517150879
    7. 's' → logprob: -9.724503517150879
    8. 'd' → logprob: -9.974503517150879
    9. '>' → logprob: -10.724503517150879
    10. '+' → logprob: -10.724503517150879

Token 62: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.8800849914550781
    2. ' abs' → logprob: -1.8800849914550781
    3. 'a' → logprob: -2.255084991455078
    4. 'x' → logprob: -2.380084991455078
    5. ' (' → logprob: -2.755084991455078
    6. '(x' → logprob: -3.630084991455078
    7. '(abs' → logprob: -3.755084991455078
    8. 'd' → logprob: -3.755084991455078
    9. ' x' → logprob: -3.880084991455078
    10. ' a' → logprob: -4.630084991455078

Token 63: '(i' (ID: 3649)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.2124553918838501
    2. '(a' → logprob: -1.71245539188385
    3. '((' → logprob: -5.3374552726745605
    4. '(y' → logprob: -5.3374552726745605
    5. '(' → logprob: -6.8374552726745605
    6. '(d' → logprob: -9.087455749511719
    7. 'a' → logprob: -9.587455749511719
    8. 'x' → logprob: -10.337455749511719
    9. '(j' → logprob: -11.337455749511719
    10. '(abs' → logprob: -11.587455749511719

Token 64: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5315061807632446
    2. ' -' → logprob: -1.4065061807632446
    3. '-y' → logprob: -2.281506061553955
    4. '-x' → logprob: -2.906506061553955
    5. '-j' → logprob: -5.781506061553955
    6. '+' → logprob: -5.906506061553955
    7. ' ' → logprob: -6.906506061553955
    8. '-n' → logprob: -7.156506061553955
    9. '-d' → logprob: -7.406506061553955
    10. '-s' → logprob: -7.906506061553955

Token 65: ' (' (ID: 350)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.07378765195608139
    2. 'y' → logprob: -2.9487876892089844
    3. ' x' → logprob: -4.823787689208984
    4. 'a' → logprob: -6.073787689208984
    5. ' y' → logprob: -6.198787689208984
    6. '(x' → logprob: -6.323787689208984
    7. 'j' → logprob: -6.573787689208984
    8. '   ' → logprob: -7.323787689208984
    9. '((' → logprob: -7.948787689208984
    10. 'd' → logprob: -7.948787689208984

Token 66: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.021844971925020218
    2. 'y' → logprob: -4.271844863891602
    3. ' x' → logprob: -5.146844863891602
    4. 'j' → logprob: -7.396844863891602
    5. ' y' → logprob: -7.771844863891602
    6. 'n' → logprob: -8.396844863891602
    7. ')' → logprob: -9.021844863891602
    8. '   ' → logprob: -9.146844863891602
    9. ' ' → logprob: -9.146844863891602
    10. 'i' → logprob: -10.271844863891602

Token 67: '-' (ID: 12)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.7085919976234436
    2. '-' → logprob: -0.9585919976234436
    3. '+' → logprob: -3.083591938018799
    4. ' -' → logprob: -3.208591938018799
    5. ' +' → logprob: -4.458591938018799
    6. ')' → logprob: -4.958591938018799
    7. '+j' → logprob: -5.083591938018799
    8. ' if' → logprob: -5.708591938018799
    9. '+y' → logprob: -5.833591938018799
    10. ' ' → logprob: -6.833591938018799

Token 68: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010640407708706334
    2. ' ' → logprob: -9.375106811523438
    3. '-' → logprob: -11.750106811523438
    4. 'j' → logprob: -12.375106811523438
    5. '))' → logprob: -12.500106811523438
    6. ')' → logprob: -13.250106811523438
    7. ' -' → logprob: -13.937606811523438
    8. '+' → logprob: -14.562606811523438
    9. '[' → logprob: -14.875106811523438
    10. ' j' → logprob: -14.937606811523438

Token 69: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.05063246563076973
    2. ')' → logprob: -3.0506324768066406
    3. ' ))' → logprob: -7.175632476806641
    4. ')))' → logprob: -7.925632476806641
    5. '+' → logprob: -8.30063247680664
    6. ')**' → logprob: -8.55063247680664
    7. ' )' → logprob: -8.92563247680664
    8. ' ' → logprob: -9.42563247680664
    9. '))
' → logprob: -9.80063247680664
    10. '))+' → logprob: -9.92563247680664

Token 70: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.04676246643066406
    2. '+' → logprob: -3.171762466430664
    3. '<|end|>' → logprob: -6.546762466430664
    4. ' *' → logprob: -7.046762466430664
    5. '*' → logprob: -7.546762466430664
    6. ')' → logprob: -8.046762466430664
    7. ' -' → logprob: -8.296762466430664
    8. ' ' → logprob: -9.296762466430664
    9. '       ' → logprob: -10.046762466430664
    10. '**' → logprob: -10.296762466430664

Token 71: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.005523549858480692
    2. ' abs' → logprob: -5.255523681640625
    3. 'd' → logprob: -8.505523681640625
    4. '(abs' → logprob: -9.880523681640625
    5. '   ' → logprob: -11.380523681640625
    6. ' d' → logprob: -12.130523681640625
    7. '  ' → logprob: -12.505523681640625
    8. ' ' → logprob: -12.630523681640625
    9. 'j' → logprob: -12.755523681640625
    10. '       ' → logprob: -13.005523681640625

Token 72: '(j' (ID: 4997)
  Prédit: '(j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.00020461321400944144
    2. '(' → logprob: -8.750205039978027
    3. '(y' → logprob: -10.375205039978027
    4. 'j' → logprob: -11.375205039978027
    5. '(i' → logprob: -14.000205039978027
    6. '<|end|>' → logprob: -14.250205039978027
    7. '[j' → logprob: -14.500205039978027
    8. '(x' → logprob: -15.250205039978027
    9. '((' → logprob: -15.375205039978027
    10. '(s' → logprob: -15.500205039978027

Token 73: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.03823220357298851
    2. '-' → logprob: -3.2882320880889893
    3. '-(' → logprob: -9.03823184967041
    4. '<|end|>' → logprob: -10.03823184967041
    5. ' -(' → logprob: -11.28823184967041
    6. ' ' → logprob: -11.28823184967041
    7. '<|end|>' → logprob: -13.66323184967041
    8. ')-(' → logprob: -14.66323184967041
    9. ')' → logprob: -15.03823184967041
    10. '  ' → logprob: -15.41323184967041

Token 74: ' (' (ID: 350)
  Prédit: '(y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.009879685938358307
    2. ' (' → logprob: -4.6348795890808105
    3. '(' → logprob: -9.384880065917969
    4. 'y' → logprob: -10.759880065917969
    5. ' y' → logprob: -12.009880065917969
    6. '<|end|>' → logprob: -12.009880065917969
    7. ' ' → logprob: -13.509880065917969
    8. '   ' → logprob: -13.634880065917969
    9. '(x' → logprob: -14.009880065917969
    10. '  ' → logprob: -14.884880065917969

Token 75: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0009232500451616943
    2. ' y' → logprob: -7.500923156738281
    3. '(y' → logprob: -8.000923156738281
    4. ')y' → logprob: -11.375923156738281
    5. 'x' → logprob: -11.875923156738281
    6. ')' → logprob: -12.500923156738281
    7. '<|end|>' → logprob: -13.000923156738281
    8. '	y' → logprob: -13.375923156738281
    9. ' (' → logprob: -13.500923156738281
    10. '   ' → logprob: -14.000923156738281

Token 76: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -3.786196975852363e-05
    2. ' -' → logprob: -10.250038146972656
    3. '1' → logprob: -13.375038146972656
    4. ')' → logprob: -15.000038146972656
    5. '<|end|>' → logprob: -15.500038146972656
    6. ')-' → logprob: -16.250038146972656
    7. ' ' → logprob: -16.375038146972656
    8. '2' → logprob: -16.875038146972656
    9. '<|end|>' → logprob: -17.250038146972656
    10. '0' → logprob: -17.250038146972656

Token 77: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.319370302458992e-06
    2. ' ' → logprob: -12.500005722045898
    3. ')' → logprob: -14.312505722045898
    4. '<|end|>' → logprob: -15.187505722045898
    5. '2' → logprob: -15.562505722045898
    6. '```' → logprob: -16.5625057220459
    7. '   ' → logprob: -16.8125057220459
    8. '۱' → logprob: -16.9375057220459
    9. '-' → logprob: -17.0625057220459
    10. '<|end|>' → logprob: -17.4375057220459

Token 78: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.3869195580482483
    2. ')' → logprob: -1.1369194984436035
    3. ')))' → logprob: -10.636919975280762
    4. '))
' → logprob: -11.511919975280762
    5. ' ))' → logprob: -13.136919975280762
    6. '))

' → logprob: -13.261919975280762
    7. ')**' → logprob: -13.261919975280762
    8. ' )' → logprob: -13.511919975280762
    9. ''))' → logprob: -13.886919975280762
    10. ')
' → logprob: -14.136919975280762

Token 79: ' +' (ID: 659)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29946908354759216
    2. '<|end|>' → logprob: -1.5494691133499146
    3. '+' → logprob: -4.174468994140625
    4. ')' → logprob: -4.299468994140625
    5. ' ' → logprob: -5.174468994140625
    6. '        ' → logprob: -5.799468994140625
    7. ' if' → logprob: -6.299468994140625
    8. '           ' → logprob: -6.799468994140625
    9. '*' → logprob: -7.049468994140625
    10. 'if' → logprob: -7.174468994140625

Token 80: ' ' (ID: 220)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.09328337758779526
    2. ' d' → logprob: -2.4682834148406982
    3. 'abs' → logprob: -6.218283176422119
    4. ' abs' → logprob: -6.218283176422119
    5. ' ' → logprob: -8.843283653259277
    6. '1' → logprob: -9.093283653259277
    7. '   ' → logprob: -10.843283653259277
    8. '  ' → logprob: -11.718283653259277
    9. '	d' → logprob: -11.843283653259277
    10. '(d' → logprob: -11.843283653259277

Token 81: '1' (ID: 16)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.012429474852979183
    2. ' d' → logprob: -4.512429237365723
    3. 'abs' → logprob: -6.762429237365723
    4. ' abs' → logprob: -9.262429237365723
    5. '1' → logprob: -9.887429237365723
    6. ' ' → logprob: -10.637429237365723
    7. 'max' → logprob: -11.137429237365723
    8. '   ' → logprob: -11.387429237365723
    9. '	d' → logprob: -12.012429237365723
    10. '  ' → logprob: -12.512429237365723

Token 82: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3139503002166748
    2. ')' → logprob: -2.688950300216675
    3. '        ' → logprob: -3.188950300216675
    4. '<|end|>' → logprob: -3.313950300216675
    5. '        
' → logprob: -3.313950300216675
    6. '\n' → logprob: -4.438950538635254
    7. '
' → logprob: -4.438950538635254
    8. ' ' → logprob: -4.813950538635254
    9. '\' → logprob: -4.938950538635254
    10. ',' → logprob: -5.188950538635254

Token 83: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6486725807189941
    2. '<|end|>' → logprob: -1.0236725807189941
    3. ')' → logprob: -3.023672580718994
    4. ' if' → logprob: -3.773672580718994
    5. 'if' → logprob: -3.898672580718994
    6. '           ' → logprob: -5.523672580718994
    7. '        
' → logprob: -5.648672580718994
    8. '        ' → logprob: -5.773672580718994
    9. ' ' → logprob: -6.148672580718994
    10. '```' → logprob: -6.523672580718994

Token 84: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -1.213547945022583
    2. '<|end|>' → logprob: -1.213547945022583
    3. ' if' → logprob: -1.713547945022583
    4. '       ' → logprob: -2.338547945022583
    5. ' ' → logprob: -3.463547945022583
    6. 'a' → logprob: -3.588547945022583
    7. ')' → logprob: -3.838547945022583
    8. '           ' → logprob: -4.213547706604004
    9. '        ' → logprob: -4.838547706604004
    10. '        
' → logprob: -4.963547706604004

Token 85: ' d' (ID: 272)
  Prédit: ' tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tmp' → logprob: -0.32040613889694214
    2. 'tmp' → logprob: -1.445406198501587
    3. ' d' → logprob: -3.570406198501587
    4. 'd' → logprob: -4.945405960083008
    5. ' a' → logprob: -6.445405960083008
    6. 'a' → logprob: -6.820405960083008
    7. ' abs' → logprob: -8.695405960083008
    8. ' ' → logprob: -9.320405960083008
    9. '(tmp' → logprob: -9.320405960083008
    10. 't' → logprob: -10.195405960083008

Token 86: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010575797641649842
    2. '_' → logprob: -7.0010576248168945
    3. '>' → logprob: -9.876057624816895
    4. '<' → logprob: -10.001057624816895
    5. '<=' → logprob: -10.876057624816895
    6. '==' → logprob: -11.876057624816895
    7. '```' → logprob: -12.626057624816895
    8. ' <=' → logprob: -12.751057624816895
    9. '-' → logprob: -12.751057624816895
    10. ' >' → logprob: -12.876057624816895

Token 87: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -1.1630859375
    2. '>' → logprob: -1.9130859375
    3. ' <' → logprob: -1.9130859375
    4. ' >' → logprob: -1.9130859375
    5. ' <=' → logprob: -2.5380859375
    6. '==' → logprob: -2.7880859375
    7. '<=' → logprob: -2.9130859375
    8. ' ==' → logprob: -3.6630859375
    9. ' >=' → logprob: -5.0380859375
    10. ' ' → logprob: -5.0380859375

Token 88: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.020672215148806572
    2. ' tmp' → logprob: -3.89567232131958
    3. '=' → logprob: -10.020671844482422
    4. 'a' → logprob: -10.395671844482422
    5. 't' → logprob: -10.895671844482422
    6. 'abs' → logprob: -12.145671844482422
    7. ' ' → logprob: -12.270671844482422
    8. '/tmp' → logprob: -12.520671844482422
    9. 'tm' → logprob: -12.770671844482422
    10. 'd' → logprob: -12.770671844482422

Token 89: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0013310716021806002
    2. ':
' → logprob: -6.751330852508545
    3. '           ' → logprob: -9.876331329345703
    4. '       ' → logprob: -10.251331329345703
    5. ' :' → logprob: -10.376331329345703
    6. '):' → logprob: -10.876331329345703
    7. ' and' → logprob: -11.876331329345703
    8. '=' → logprob: -12.751331329345703
    9. ',' → logprob: -12.751331329345703
    10. '   ' → logprob: -13.001331329345703

Token 90: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4867894649505615
    2. ':' → logprob: -0.9867894649505615
    3. '       ' → logprob: -5.736789703369141
    4. ':
' → logprob: -5.861789703369141
    5. 'a' → logprob: -5.986789703369141
    6. '               ' → logprob: -6.611789703369141
    7. ' :' → logprob: -6.736789703369141
    8. ' a' → logprob: -8.23678970336914
    9. '):' → logprob: -8.48678970336914
    10. '<|end|>' → logprob: -8.73678970336914

Token 91: ' idx' (ID: 14016)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.009275144897401333
    2. ' a' → logprob: -5.259274959564209
    3. '           ' → logprob: -5.884274959564209
    4. 'print' → logprob: -6.884274959564209
    5. '   ' → logprob: -9.509275436401367
    6. '               ' → logprob: -10.009275436401367
    7. '       ' → logprob: -10.009275436401367
    8. ' print' → logprob: -10.759275436401367
    9. 'continue' → logprob: -11.509275436401367
    10. '```' → logprob: -11.509275436401367

Token 92: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5804687142372131
    2. ' =' → logprob: -0.8304687142372131
    3. 's' → logprob: -5.455468654632568
    4. ']' → logprob: -9.955469131469727
    5. ',' → logprob: -10.330469131469727
    6. '_' → logprob: -10.580469131469727
    7. '1' → logprob: -10.705469131469727
    8. ' ' → logprob: -10.830469131469727
    9. '[' → logprob: -10.955469131469727
    10. ')' → logprob: -11.580469131469727

Token 93: ' d' (ID: 272)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4857081472873688
    2. 'j' → logprob: -0.9857081174850464
    3. ' i' → logprob: -5.110708236694336
    4. ' j' → logprob: -5.735708236694336
    5. 'd' → logprob: -7.485708236694336
    6. 'x' → logprob: -7.485708236694336
    7. 'a' → logprob: -8.235708236694336
    8. 'n' → logprob: -8.360708236694336
    9. '0' → logprob: -8.985708236694336
    10. 'y' → logprob: -9.360708236694336

Token 94: '1' (ID: 16)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.000902884581591934
    2. '1' → logprob: -7.2509026527404785
    3. 'i' → logprob: -9.000903129577637
    4. 'j' → logprob: -10.500903129577637
    5. 'ex' → logprob: -11.500903129577637
    6. 'f' → logprob: -11.625903129577637
    7. 'e' → logprob: -12.500903129577637
    8. '```' → logprob: -13.000903129577637
    9. 's' → logprob: -13.250903129577637
    10. 'c' → logprob: -13.875903129577637

Token 95: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 96: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 97: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.07545579224824905
    2. ' else' → logprob: -2.700455904006958
    3. '       ' → logprob: -6.950455665588379
    4. 'elif' → logprob: -7.075455665588379
    5. '           ' → logprob: -7.325455665588379
    6. ']' → logprob: -7.575455665588379
    7. 'a' → logprob: -7.700455665588379
    8. '<|end|>' → logprob: -7.825455665588379
    9. '	else' → logprob: -7.950455665588379
    10. '=' → logprob: -8.200455665588379

Token 98: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001347615267150104
    2. ':
' → logprob: -6.751347541809082
    3. 'idx' → logprob: -9.626347541809082
    4. '           ' → logprob: -10.001347541809082
    5. ' :' → logprob: -10.501347541809082
    6. ' idx' → logprob: -11.376347541809082
    7. '<|end|>' → logprob: -11.376347541809082
    8. '{' → logprob: -13.126347541809082
    9. ':

' → logprob: -13.376347541809082
    10. '       ' → logprob: -13.501347541809082

Token 99: '           ' (ID: 352)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.3657386004924774
    2. ' tmp' → logprob: -1.2407386302947998
    3. '           ' → logprob: -4.115738391876221
    4. 'idx' → logprob: -7.865738391876221
    5. ' idx' → logprob: -8.990738868713379
    6. 'd' → logprob: -9.740738868713379
    7. '	tmp' → logprob: -9.740738868713379
    8. ' d' → logprob: -10.365738868713379
    9. '[tmp' → logprob: -10.740738868713379
    10. ' j' → logprob: -10.740738868713379

Token 100: ' idx' (ID: 14016)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.014197944663465023
    2. ' tmp' → logprob: -4.264197826385498
    3. '   ' → logprob: -11.764198303222656
    4. '           ' → logprob: -12.014198303222656
    5. '/tmp' → logprob: -12.014198303222656
    6. '	tmp' → logprob: -12.889198303222656
    7. 'idx' (adapté à ' idx') → logprob: -13.014198303222656
    8. 'd' → logprob: -13.014198303222656
    9. 't' → logprob: -13.764198303222656
    10. '$tmp' → logprob: -14.014198303222656

Token 101: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.17981314659118652
    2. ' =' → logprob: -1.8048131465911865
    3. ' +=' → logprob: -10.554813385009766
    4. '+=' → logprob: -10.804813385009766
    5. '+' → logprob: -11.054813385009766
    6. ' ' → logprob: -12.679813385009766
    7. ',' → logprob: -14.679813385009766
    8. ')' → logprob: -15.054813385009766
    9. '<|end|>' → logprob: -15.179813385009766
    10. '<' → logprob: -15.304813385009766

Token 102: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.03804585337638855
    2. ' tmp' → logprob: -3.288045883178711
    3. '/tmp' → logprob: -13.288045883178711
    4. '	tmp' → logprob: -14.163045883178711
    5. '   ' → logprob: -14.413045883178711
    6. ' ' → logprob: -14.913045883178711
    7. '$tmp' → logprob: -15.288045883178711
    8. 't' → logprob: -15.538045883178711
    9. '(tmp' → logprob: -15.538045883178711
    10. 'temp' → logprob: -15.538045883178711

Token 103: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01436316967010498
    2. 'a' → logprob: -4.6393632888793945
    3. '<|end|>' → logprob: -6.1393632888793945
    4. '
' → logprob: -7.3893632888793945
    5. '           ' → logprob: -7.5143632888793945
    6. '   ' → logprob: -7.6393632888793945
    7. '        
' → logprob: -7.8893632888793945
    8. ' a' → logprob: -9.014363288879395
    9. '+' → logprob: -10.139363288879395
    10. '```' → logprob: -10.264363288879395

Token 104: '       ' (ID: 309)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.28042900562286377
    2. '       ' → logprob: -1.6554290056228638
    3. '   ' → logprob: -3.405428886413574
    4. '<|end|>' → logprob: -4.155428886413574
    5. '           ' → logprob: -6.280428886413574
    6. 'print' → logprob: -7.030428886413574
    7. ' a' → logprob: -7.530428886413574
    8. '#' → logprob: -8.280428886413574
    9. ')' → logprob: -8.780428886413574
    10. ' ' → logprob: -9.155428886413574

Token 105: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.5331637859344482
    2. '       ' → logprob: -0.9081637859344482
    3. '   ' → logprob: -5.908164024353027
    4. ' a' → logprob: -6.033164024353027
    5. 'if' → logprob: -6.158164024353027
    6. ' if' → logprob: -6.533164024353027
    7. '           ' → logprob: -7.283164024353027
    8. '+' → logprob: -9.033164024353027
    9. '        
' → logprob: -9.158164024353027
    10. '```' → logprob: -9.408164024353027

Token 106: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.0002492999192327261
    2. '[' → logprob: -8.625248908996582
    3. '[i' → logprob: -10.125248908996582
    4. '\[' → logprob: -11.500248908996582
    5. '[j' → logprob: -11.750248908996582
    6. '[index' → logprob: -12.000248908996582
    7. '[a' → logprob: -13.500248908996582
    8. '```' → logprob: -13.750248908996582
    9. '[Index' → logprob: -14.500248908996582
    10. '[int' → logprob: -14.625248908996582

Token 107: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.062340278178453445
    2. ']+=' → logprob: -2.812340259552002
    3. '+=' → logprob: -8.06234073638916
    4. ')' → logprob: -10.93734073638916
    5. ']+' → logprob: -11.31234073638916
    6. '+' → logprob: -11.43734073638916
    7. ']=' → logprob: -11.93734073638916
    8. ' +=' → logprob: -12.68734073638916
    9. '=' → logprob: -13.06234073638916
    10. ' ]' → logprob: -13.31234073638916

Token 108: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.009927851147949696
    2. ' +=' → logprob: -5.009927749633789
    3. '=' → logprob: -5.759927749633789
    4. '+' → logprob: -10.509927749633789
    5. ']+=' → logprob: -11.009927749633789
    6. ' =' → logprob: -11.509927749633789
    7. '+='' → logprob: -13.884927749633789
    8. '+=(' → logprob: -15.009927749633789
    9. '++' → logprob: -15.384927749633789
    10. '```' → logprob: -15.884927749633789

Token 109: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5992222428321838
    2. 'max' → logprob: -0.9742222428321838
    3. '1' → logprob: -3.349222183227539
    4. ' max' → logprob: -3.724222183227539
    5. ' a' → logprob: -5.099222183227539
    6. '0' → logprob: -5.349222183227539
    7. ' ' → logprob: -6.474222183227539
    8. '+' → logprob: -7.599222183227539
    9. 'd' → logprob: -7.599222183227539
    10. 'min' → logprob: -9.099222183227539

Token 110: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.06274553388357162
    2. '[j' → logprob: -2.8127455711364746
    3. '[i' → logprob: -7.687745571136475
    4. 'idx' → logprob: -8.812745094299316
    5. '[' → logprob: -9.062745094299316
    6. ' idx' → logprob: -11.812745094299316
    7. '[a' → logprob: -11.937745094299316
    8. 'j' → logprob: -11.937745094299316
    9. '```' → logprob: -12.062745094299316
    10. '[index' → logprob: -12.687745094299316

Token 111: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3434809446334839
    2. ']' → logprob: -1.4684809446334839
    3. ']+' → logprob: -2.8434810638427734
    4. ' +' → logprob: -6.468481063842773
    5. ']+=' → logprob: -8.968481063842773
    6. '<|end|>' → logprob: -9.218481063842773
    7. '```' → logprob: -9.593481063842773
    8. ' plus' → logprob: -9.718481063842773
    9. '>' → logprob: -9.968481063842773
    10. '+]' → logprob: -9.968481063842773

Token 112: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -6.8497312895488e-05
    2. ' +' → logprob: -9.625068664550781
    3. '1' → logprob: -14.125068664550781
    4. '++' → logprob: -15.000068664550781
    5. ' plus' → logprob: -15.250068664550781
    6. '```' → logprob: -15.375068664550781
    7. '+
' → logprob: -15.625068664550781
    8. 'plus' → logprob: -15.750068664550781
    9. '+=' → logprob: -15.875068664550781
    10. '0' → logprob: -16.37506866455078

Token 113: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011048762127757072
    2. ' ' → logprob: -4.511048793792725
    3. '2' → logprob: -14.261048316955566
    4. '   ' → logprob: -15.761048316955566
    5. '+' → logprob: -16.886049270629883
    6. ' ' → logprob: -16.886049270629883
    7. '0' → logprob: -17.261049270629883
    8. '  ' → logprob: -17.448549270629883
    9. '10' → logprob: -17.636049270629883
    10. 'd' → logprob: -17.948549270629883

Token 114: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.511406809295295e-06
    2. ' ' → logprob: -12.000006675720215
    3. '2' → logprob: -15.500006675720215
    4. '-' → logprob: -17.7500057220459
    5. 'a' → logprob: -17.7500057220459
    6. 'd' → logprob: -17.7500057220459
    7. '   ' → logprob: -18.3750057220459
    8. '+' → logprob: -18.7500057220459
    9. '```' → logprob: -18.8750057220459
    10. '１' → logprob: -19.0625057220459

Token 115: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 116: ' probably' (ID: 7038)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 117: ' could' (ID: 2023)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 118: ' use' (ID: 1199)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.819460391998291
    2. ' be' → logprob: -1.194460391998291
    3. 'a' → logprob: -1.569460391998291
    4. '#' → logprob: -4.319460391998291
    5. '```' → logprob: -4.569460391998291
    6. 'replace' → logprob: -5.069460391998291
    7. ' a' → logprob: -5.569460391998291
    8. 'continue' → logprob: -5.694460391998291
    9. '   ' → logprob: -5.819460391998291
    10. '+' → logprob: -6.319460391998291

Token 119: ' +=' (ID: 2757)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3742488920688629
    2. ' a' → logprob: -2.24924898147583
    3. 'default' → logprob: -2.37424898147583
    4. 'collections' → logprob: -2.74924898147583
    5. ' collections' → logprob: -4.99924898147583
    6. 'range' → logprob: -5.24924898147583
    7. 'enumer' → logprob: -5.24924898147583
    8. 'continue' → logprob: -5.24924898147583
    9. ' defaultdict' → logprob: -5.37424898147583
    10. 'break' → logprob: -5.99924898147583

Token 120: ' but' (ID: 889)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 121: ' this' (ID: 495)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5702043175697327
    2. '1' → logprob: -1.445204257965088
    3. ' continue' → logprob: -2.695204257965088
    4. ' a' → logprob: -2.945204257965088
    5. '<|end|>' → logprob: -3.695204257965088
    6. ' not' → logprob: -5.070204257965088
    7. ' continues' → logprob: -5.445204257965088
    8. '<|end|>' → logprob: -5.570204257965088
    9. ' you' → logprob: -6.070204257965088
    10. ' here' → logprob: -6.195204257965088

Token 122: ' is' (ID: 382)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 123: ' clearer' (ID: 88743)
  Prédit: ' fine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' fine' → logprob: -0.11953440308570862
    2. 'fine' → logprob: -2.744534492492676
    3. ' valid' → logprob: -4.619534492492676
    4. ' correct' → logprob: -4.744534492492676
    5. 'also' → logprob: -4.869534492492676
    6. ' also' → logprob: -5.244534492492676
    7. ' okay' → logprob: -5.494534492492676
    8. 'correct' → logprob: -5.869534492492676
    9. 'valid' → logprob: -6.244534492492676
    10. 'okay' → logprob: -6.619534492492676

Token 124: '?
' (ID: 3901)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 125: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 126: ' print' (ID: 2123)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 127: ' results' (ID: 4376)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.6083552837371826
    2. '(' → logprob: -1.2333552837371826
    3. '(*' → logprob: -1.9833552837371826
    4. '(len' → logprob: -4.608355522155762
    5. '(max' → logprob: -4.983355522155762
    6. '(sum' → logprob: -5.233355522155762
    7. '('' → logprob: -6.358355522155762
    8. '()' → logprob: -7.233355522155762
    9. '("' → logprob: -7.233355522155762
    10. 'a' → logprob: -7.233355522155762

Token 128: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0029635541141033173
    2. ' for' → logprob: -5.877963542938232
    3. '
' → logprob: -9.25296401977539
    4. '```' → logprob: -10.12796401977539
    5. 'print' → logprob: -11.37796401977539
    6. '\n' → logprob: -12.50296401977539
    7. '<|end|>' → logprob: -12.50296401977539
    8. '``' → logprob: -13.37796401977539
    9. 'n' → logprob: -13.75296401977539
    10. ' 
' → logprob: -15.00296401977539

Token 129: ' but' (ID: 889)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.038099437952041626
    2. ' for' → logprob: -3.288099527359009
    3. '```' → logprob: -10.66309928894043
    4. '<|end|>' → logprob: -10.91309928894043
    5. '
' → logprob: -11.91309928894043
    6. 'print' → logprob: -12.28809928894043
    7. ' 
' → logprob: -12.78809928894043
    8. '  
' → logprob: -14.28809928894043
    9. ')' → logprob: -14.53809928894043
    10. ' ' → logprob: -15.78809928894043

Token 130: ' skip' (ID: 16677)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5766951441764832
    2. 'for' → logprob: -0.8266951441764832
    3. ' not' → logprob: -7.451694965362549
    4. ' ' → logprob: -9.451695442199707
    5. 'not' → logprob: -10.201695442199707
    6. ' with' → logprob: -11.701695442199707
    7. ' a' → logprob: -12.201695442199707
    8. '  ' → logprob: -12.326695442199707
    9. '```' → logprob: -12.326695442199707
    10. ' I' → logprob: -12.826695442199707

Token 131: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.030851513147354126
    2. ' a' → logprob: -3.7808516025543213
    3. '0' → logprob: -4.905851364135742
    4. ' ' → logprob: -9.030851364135742
    5. '[' → logprob: -11.155851364135742
    6. 'for' → logprob: -11.405851364135742
    7. 'range' → logprob: -11.905851364135742
    8. ' for' → logprob: -12.280851364135742
    9. ' the' → logprob: -12.530851364135742
    10. 'i' → logprob: -12.905851364135742

Token 132: '[' (ID: 58)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.9928506016731262
    2. '0' → logprob: -1.4928505420684814
    3. '[' → logprob: -1.6178505420684814
    4. ' ' → logprob: -1.7428505420684814
    5. 'for' → logprob: -4.1178507804870605
    6. ' for' → logprob: -4.8678507804870605
    7. ' range' → logprob: -5.7428507804870605
    8. 'range' → logprob: -5.9928507804870605
    9. 'from' → logprob: -7.4928507804870605
    10. ' [' → logprob: -8.117850303649902

Token 133: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.107425062713446e-06
    2. '[' → logprob: -11.875006675720215
    3. ' ' → logprob: -16.50000762939453
    4. ' ' → logprob: -19.25000762939453
    5. '```' → logprob: -19.50000762939453
    6. '
' → logprob: -20.50000762939453
    7. '#' → logprob: -20.62500762939453
    8. '00' → logprob: -20.62500762939453
    9. 'a' → logprob: -20.62500762939453
    10. '`' → logprob: -20.75000762939453

Token 134: ']' (ID: 60)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2293168604373932
    2. ')' → logprob: -3.1043169498443604
    3. '(' → logprob: -3.2293169498443604
    4. '1' → logprob: -3.3543169498443604
    5. ' for' → logprob: -3.4793169498443604
    6. '[' → logprob: -3.7293169498443604
    7. '<|end|>' → logprob: -4.979316711425781
    8. '
' → logprob: -5.104316711425781
    9. '```' → logprob: -5.229316711425781
    10. '\n' → logprob: -5.854316711425781

Token 135: ' since' (ID: 3630)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.013441854156553745
    2. '
' → logprob: -5.013442039489746
    3. ' for' → logprob: -5.013442039489746
    4. '\n' → logprob: -10.763442039489746
    5. '```' → logprob: -11.138442039489746
    6. '  
' → logprob: -11.888442039489746
    7. '<|end|>' → logprob: -12.388442039489746
    8. 'print' → logprob: -12.888442039489746
    9. ' 
' → logprob: -13.138442039489746
    10. '	for' → logprob: -13.388442039489746

Token 136: ' that's' (ID: 10954)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1976943165063858
    2. ' range' → logprob: -2.5726943016052246
    3. 'for' → logprob: -3.3226943016052246
    4. ' a' → logprob: -3.4476943016052246
    5. 'range' → logprob: -3.8226943016052246
    6. 'a' → logprob: -4.822694301605225
    7. '0' → logprob: -6.322694301605225
    8. ' ' → logprob: -6.447694301605225
    9. '_' → logprob: -6.697694301605225
    10. ' the' → logprob: -8.197694778442383

Token 137: ' always' (ID: 3324)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.2723664045333862
    2. 'not' → logprob: -1.3973664045333862
    3. 'count' → logprob: -1.6473664045333862
    4. '0' → logprob: -2.397366523742676
    5. 'always' → logprob: -2.772366523742676
    6. 'for' → logprob: -3.272366523742676
    7. 'a' → logprob: -3.272366523742676
    8. 'unused' → logprob: -4.022366523742676
    9. ' the' → logprob: -5.272366523742676
    10. 'length' → logprob: -5.522366523742676

Token 138: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0024898070842027664
    2. 'zero' → logprob: -6.127490043640137
    3. 'unused' → logprob: -8.252490043640137
    4. 'a' → logprob: -10.752490043640137
    5. ' ' → logprob: -11.877490043640137
    6. 'empty' → logprob: -12.377490043640137
    7. 'always' → logprob: -12.627490043640137
    8. ' zero' → logprob: -12.752490043640137
    9. 'n' → logprob: -13.377490043640137
    10. 'count' → logprob: -14.002490043640137

Token 139: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00011617878044489771
    2. 'zero' → logprob: -9.250116348266602
    3. ' ' → logprob: -11.500116348266602
    4. 'unused' → logprob: -12.250116348266602
    5. 'empty' → logprob: -12.625116348266602
    6. 'n' → logprob: -14.125116348266602
    7. 'a' → logprob: -15.250116348266602
    8. ' zero' → logprob: -15.625116348266602
    9. '#' → logprob: -16.1251163482666
    10. '```' → logprob: -16.1251163482666

Token 140: ' anyway' (ID: 22332)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0009243228123523295
    2. ' for' → logprob: -7.500924110412598
    3. '
' → logprob: -8.125924110412598
    4. 'print' → logprob: -9.625924110412598
    5. '\n' → logprob: -12.000924110412598
    6. '```' → logprob: -13.375924110412598
    7. '<|end|>' → logprob: -14.000924110412598
    8. ' 
' → logprob: -15.375924110412598
    9. '\' → logprob: -15.625924110412598
    10. '	for' → logprob: -15.750924110412598

Token 141: '?
' (ID: 3901)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06591388583183289
    2. '
' → logprob: -2.8159139156341553
    3. ' for' → logprob: -5.565913677215576
    4. '```' → logprob: -9.815914154052734
    5. '\n' → logprob: -10.440914154052734
    6. 'print' → logprob: -11.565914154052734
    7. '  
' → logprob: -12.190914154052734
    8. '<|end|>' → logprob: -12.565914154052734
    9. '    
' → logprob: -13.065914154052734
    10. '
' → logprob: -13.190914154052734

Token 142: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0028926096856594086
    2. ' for' → logprob: -6.25289249420166
    3. '
' → logprob: -7.00289249420166
    4. '```' → logprob: -10.37789249420166
    5. '<|end|>' → logprob: -11.75289249420166
    6. '\n' → logprob: -11.87789249420166
    7. 'print' → logprob: -12.25289249420166
    8. '  
' → logprob: -14.00289249420166
    9. '	for' → logprob: -14.00289249420166
    10. '``' → logprob: -14.12789249420166

Token 143: ' val' (ID: 1459)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.03983049467206001
    2. ' i' → logprob: -3.289830446243286
    3. 'k' → logprob: -6.539830684661865
    4. 'idx' → logprob: -8.789830207824707
    5. 'd' → logprob: -9.164830207824707
    6. ' k' → logprob: -10.164830207824707
    7. ' idx' → logprob: -10.789830207824707
    8. ' d' → logprob: -11.664830207824707
    9. 'dist' → logprob: -11.914830207824707
    10. 'x' → logprob: -12.789830207824707

Token 144: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03805985301733017
    2. 'in' → logprob: -3.288059949874878
    3. ' ' → logprob: -12.038060188293457
    4. ',' → logprob: -12.663060188293457
    5. '_in' → logprob: -12.663060188293457
    6. '	in' → logprob: -12.788060188293457
    7. 'a' → logprob: -14.788060188293457
    8. 's' → logprob: -15.163060188293457
    9. 'In' → logprob: -15.288060188293457
    10. 'i' → logprob: -15.413060188293457

Token 145: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.01814994215965271
    2. ' a' → logprob: -4.0181498527526855
    3. '	a' → logprob: -17.893150329589844
    4. '_a' → logprob: -18.643150329589844
    5. 'range' → logprob: -20.268150329589844
    6. '(a' → logprob: -20.268150329589844
    7. ' range' → logprob: -21.143150329589844
    8. '#a' → logprob: -21.393150329589844
    9. '>a' → logprob: -21.393150329589844
    10. ')a' → logprob: -21.643150329589844

Token 146: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.624555291840807e-05
    2. '1' → logprob: -9.625076293945312
    3. ':' → logprob: -11.750076293945312
    4. 'print' → logprob: -13.250076293945312
    5. '(' → logprob: -15.500076293945312
    6. ' ' → logprob: -16.500076293945312
    7. 'from' → logprob: -16.750076293945312
    8. ' [' → logprob: -16.750076293945312
    9. '   ' → logprob: -17.750076293945312
    10. '2' → logprob: -18.375076293945312

Token 147: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2200749754119897e-06
    2. 'range' → logprob: -13.375001907348633
    3. ' ' → logprob: -14.375001907348633
    4. ' range' → logprob: -17.625001907348633
    5. ')' → logprob: -20.375001907348633
    6. ']' → logprob: -20.500001907348633
    7. '   ' → logprob: -21.375001907348633
    8. '
' → logprob: -21.750001907348633
    9. '(' → logprob: -22.125001907348633
    10. '１' → logprob: -22.250001907348633

Token 148: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008660539984703064
    2. ']:' → logprob: -5.133660316467285
    3. ':]' → logprob: -6.008660316467285
    4. '):' → logprob: -8.508660316467285
    5. '>:' → logprob: -11.133660316467285
    6. '():' → logprob: -11.133660316467285
    7. ':n' → logprob: -11.633660316467285
    8. '+:' → logprob: -12.133660316467285
    9. ':],' → logprob: -12.258660316467285
    10. '}:' → logprob: -12.258660316467285

Token 149: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.013384087942540646
    2. ']:
' → logprob: -4.638383865356445
    3. ':' → logprob: -5.888383865356445
    4. ']' → logprob: -7.513383865356445
    5. '):' → logprob: -8.513383865356445
    6. 'print' → logprob: -9.888383865356445
    7. ']:
' → logprob: -11.013383865356445
    8. '):
' → logprob: -11.263383865356445
    9. ':
' → logprob: -11.763383865356445
    10. ':]' → logprob: -12.638383865356445

Token 150: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06048661097884178
    2. 'print' → logprob: -3.1854865550994873
    3. ' print' → logprob: -4.060486793518066
    4. '	print' → logprob: -9.810486793518066
    5. '```' → logprob: -10.810486793518066
    6. '
' → logprob: -11.435486793518066
    7. '    
' → logprob: -12.685486793518066
    8. '       ' → logprob: -13.560486793518066
    9. '<|end|>' → logprob: -13.560486793518066
    10. '#print' → logprob: -14.560486793518066

Token 151: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -5.955703818472102e-05
    2. ' print' → logprob: -9.750059127807617
    3. '   ' → logprob: -13.750059127807617
    4. '```' → logprob: -16.000059127807617
    5. '	print' → logprob: -18.250059127807617
    6. '``' → logprob: -20.875059127807617
    7. '
' → logprob: -21.250059127807617
    8. '`' → logprob: -22.000059127807617
    9. '.print' → logprob: -22.875059127807617
    10. 'printf' → logprob: -23.000059127807617

Token 152: '(val' (ID: 17391)
  Prédit: '(val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(val' → logprob: -0.014164801687002182
    2. 'val' → logprob: -4.264164924621582
    3. '(' → logprob: -14.139164924621582
    4. ' val' → logprob: -14.639164924621582
    5. '[val' → logprob: -17.639163970947266
    6. ',val' → logprob: -17.764163970947266
    7. '	val' → logprob: -18.764163970947266
    8. '_val' → logprob: -20.264163970947266
    9. 'Val' → logprob: -20.889163970947266
    10. '-val' → logprob: -21.514163970947266

Token 153: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001278534036828205
    2. '()' → logprob: -9.500127792358398
    3. '())' → logprob: -9.875127792358398
    4. ' )' → logprob: -14.250127792358398
    5. '(' → logprob: -14.875127792358398
    6. '))' → logprob: -16.0001277923584
    7. ',)' → logprob: -16.0001277923584
    8. ')
' → logprob: -16.5001277923584
    9. ');' → logprob: -16.8751277923584
    10. ')`' → logprob: -17.0001277923584


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 151
Tokens correctement prédits (1ère position, stricte): 44
Tokens correctement prédits (1ère position, avec adaptation): 48
Tokens correctement prédits (top 10): 103
Précision stricte (1ère position): 29.14%
Précision adaptée (1ère position): 31.79%
Précision (top 10): 68.21%
================================================================================
