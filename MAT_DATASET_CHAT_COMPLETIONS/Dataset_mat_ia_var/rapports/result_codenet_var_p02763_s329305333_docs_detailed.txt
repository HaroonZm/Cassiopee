================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:24:08
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

def input():
    """
    Reads a line from standard input and strips the trailing newline character.
    
    Returns:
        str: The input line without the trailing newline.
    """
    return sys.stdin.readline()[:-1]

INF = float("inf")  # Representation of infinity for possible use in algorithms

class BIT:
    """
    Binary Indexed Tree (Fenwick Tree) implementation to support efficient prefix sum queries and updates.

    Attributes:
        N (int): The size of the array for the BIT (number of possible indices).
        bit (List[int]): Internal array representing the Binary Indexed Tree.
    """
    def __init__(self, N):
        """
        Initializes the BIT for N elements (indices 1 to N inclusive).

        Args:
            N (int): Number of elements for the BIT structure.
        """
        self.N = N
        self.bit = [0] * (N + 1)  # 1-based indexing
    
    def add(self, x, a):
        """
        Adds value 'a' to index 'x' in the BIT, and propagates the update.

        Args:
            x (int): The index at which the value should be added (1-based).
            a (int): The value to add to the index.
        """
        while x <= self.N:
            self.bit[x] += a
            x += x & -x  # Move to the next node responsible for this index

    def sum(self, x):
        """
        Computes the prefix sum of elements from index 1 to x.

        Args:
            x (int): The index up to which the sum is computed (inclusive, 1-based).

        Returns:
            int: The sum from index 1 to x.
        """
        ret = 0
        while x != 0:
            ret += self.bit[x]
            x -= x & -x  # Move to parent node
        return ret

# Read input for string length
N = int(input())
# Read the initial string as a list of characters
S = list(input())
# Number of queries to process
Q = int(input())

# Create a BIT for each lowercase letter (total 26 letters)
bit = [BIT(N + 1) for _ in range(26)]

# Initialize BITs, count occurrences of each character at each position
for i in range(N):
    char_index = ord(S[i]) - 97  # Map character 'a'-'z' to 0-25
    bit[char_index].add(i + 1, 1)  # BITs are 1-based indexed

# Process each query
for _ in range(Q):
    parts = input().split()
    q = int(parts[0])

    if q == 1:
        # Update query: Change character at a given position to another character
        i = int(parts[1]) - 1  # 0-based index for position in S
        new_c = parts[2]
        old_c_index = ord(S[i]) - 97  # Index of the old character
        new_c_index = ord(new_c) - 97  # Index of the new character

        # Remove old character count from BIT
        bit[old_c_index].add(i + 1, -1)
        # Update the character in the string
        S[i] = new_c
        # Add new character count to BIT
        bit[new_c_index].add(i + 1, 1)
    else:
        # Query for the number of distinct letters in a substring (range query)
        l = int(parts[1])
        r = int(parts[2])
        distinct_count = 0

        # Iterate over all 26 alphabets to check for presence in the substring [l, r]
        for letter_index in range(26):
            occurrences = bit[letter_index].sum(r) - bit[letter_index].sum(l - 1)
            if occurrences > 0:
                distinct_count += 1
        print(distinct_count)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.03690023347735405
    2. '\n' → logprob: -3.661900281906128
    3. 'import' → logprob: -5.786900043487549
    4. '\' → logprob: -6.286900043487549
    5. 'newline' → logprob: -6.786900043487549
    6. '' → logprob: -7.161900043487549
    7. '```' → logprob: -7.411900043487549
    8. '<|end|>' → logprob: -7.411900043487549
    9. '[' → logprob: -7.661900043487549
    10. '
' → logprob: -7.786900043487549

Token 4: ' input' (ID: 3422)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.27202650904655457
    2. ' process' → logprob: -2.647026538848877
    3. ' read' → logprob: -3.022026538848877
    4. ' space' → logprob: -3.397026538848877
    5. ' main' → logprob: -3.772026538848877
    6. ' calculate' → logprob: -4.772026538848877
    7. ' my' → logprob: -5.022026538848877
    8. ' sys' → logprob: -5.272026538848877
    9. ' ' → logprob: -5.522026538848877
    10. ' def' → logprob: -5.772026538848877

Token 5: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.000963627069722861
    2. '_' → logprob: -7.2509636878967285
    3. ' (' → logprob: -9.62596321105957
    4. '("("' → logprob: -10.00096321105957
    5. '('' → logprob: -10.12596321105957
    6. '("' → logprob: -10.87596321105957
    7. 's' → logprob: -11.50096321105957
    8. '()' → logprob: -11.50096321105957
    9. '():' → logprob: -11.87596321105957
    10. '(
' → logprob: -12.00096321105957

Token 6: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2886835038661957
    2. ''' → logprob: -1.913683533668518
    3. '(' → logprob: -2.6636834144592285
    4. '()' → logprob: -4.9136834144592285
    5. '  ' → logprob: -5.0386834144592285
    6. '"' → logprob: -5.1636834144592285
    7. ' )' → logprob: -5.2886834144592285
    8. '<|end|>' → logprob: -6.4136834144592285
    9. ' (' → logprob: -6.6636834144592285
    10. '_' → logprob: -6.7886834144592285

Token 7: ' """
' (ID: 7037)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.704198956489563
    2. ' return' → logprob: -1.329198956489563
    3. 'return' → logprob: -1.954198956489563
    4. 'sys' → logprob: -3.2041988372802734
    5. '   ' → logprob: -3.5791988372802734
    6. ' pass' → logprob: -4.579198837280273
    7. 'pass' → logprob: -4.704198837280273
    8. ' ' → logprob: -5.454198837280273
    9. ' input' → logprob: -5.954198837280273
    10. 'input' → logprob: -5.954198837280273

Token 8: '   ' (ID: 271)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -1.1914509534835815
    2. '   ' → logprob: -1.4414509534835815
    3. '()' → logprob: -1.6914509534835815
    4. ' ' → logprob: -2.191451072692871
    5. ')' → logprob: -2.566451072692871
    6. ' return' → logprob: -3.691451072692871
    7. ' """' → logprob: -3.816451072692871
    8. ' )' → logprob: -5.066451072692871
    9. '  ' → logprob: -5.191451072692871
    10. ' ()' → logprob: -5.691451072692871

Token 9: ' Reads' (ID: 88839)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.6615210771560669
    2. '   ' → logprob: -1.411521077156067
    3. 'return' → logprob: -1.911521077156067
    4. ' return' → logprob: -3.5365209579467773
    5. 'Return' → logprob: -4.036520957946777
    6. 'pass' → logprob: -4.536520957946777
    7. ' pass' → logprob: -4.911520957946777
    8. 'Pass' → logprob: -5.661520957946777
    9. 'Read' → logprob: -5.911520957946777
    10. ''''' → logprob: -6.286520957946777

Token 10: ' a' (ID: 261)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.24418975412845612
    2. ' ' → logprob: -2.619189739227295
    3. ' from' → logprob: -3.244189739227295
    4. ' line' → logprob: -3.369189739227295
    5. '<|end|>' → logprob: -4.244189739227295
    6. '<|end|>' → logprob: -4.369189739227295
    7. ')' → logprob: -4.869189739227295
    8. ' a' → logprob: -4.994189739227295
    9. '   ' → logprob: -5.494189739227295
    10. ' )' → logprob: -5.744189739227295

Token 11: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.00551725784316659
    2. 'line' → logprob: -5.505517482757568
    3. 'n' → logprob: -7.130517482757568
    4. ' single' → logprob: -8.13051700592041
    5. ' string' → logprob: -9.00551700592041
    6. ' ' → logprob: -9.13051700592041
    7. '_line' → logprob: -10.00551700592041
    8. ' newline' → logprob: -11.38051700592041
    9. ' n' → logprob: -11.50551700592041
    10. 'string' → logprob: -11.75551700592041

Token 12: ' from' (ID: 591)
  Prédit: ' from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' from' → logprob: -0.004193079192191362
    2. '   ' → logprob: -6.504193305969238
    3. 'from' → logprob: -6.754193305969238
    4. '<|end|>' → logprob: -6.754193305969238
    5. '<|end|>' → logprob: -9.629193305969238
    6. ' of' → logprob: -9.629193305969238
    7. ' ' → logprob: -10.379193305969238
    8. ')' → logprob: -10.629193305969238
    9. ' line' → logprob: -10.879193305969238
    10. ' and' → logprob: -10.879193305969238

Token 13: ' standard' (ID: 7024)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.05573840066790581
    2. 'sys' → logprob: -3.0557384490966797
    3. ' stdin' → logprob: -5.68073844909668
    4. ' standard' → logprob: -6.05573844909668
    5. ' the' → logprob: -7.43073844909668
    6. 'stdin' → logprob: -7.55573844909668
    7. ' input' → logprob: -8.55573844909668
    8. 'standard' → logprob: -10.43073844909668
    9. 'input' → logprob: -11.05573844909668
    10. '=sys' → logprob: -12.18073844909668

Token 14: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.07890675216913223
    2. 'input' → logprob: -2.578906774520874
    3. 'in' → logprob: -12.078907012939453
    4. 'stdin' → logprob: -12.578907012939453
    5. ' sys' → logprob: -13.078907012939453
    6. ' stdin' → logprob: -13.203907012939453
    7. ' in' → logprob: -13.578907012939453
    8. '_input' → logprob: -14.703907012939453
    9. '```' → logprob: -14.703907012939453
    10. 'sys' → logprob: -14.703907012939453

Token 15: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.039792921394109726
    2. ')' → logprob: -4.414793014526367
    3. '.' → logprob: -4.414793014526367
    4. '```' → logprob: -5.289793014526367
    5. ',' → logprob: -5.914793014526367
    6. '"""' → logprob: -6.039793014526367
    7. ' and' → logprob: -6.539793014526367
    8. '\n' → logprob: -7.414793014526367
    9. '<|end|>' → logprob: -7.414793014526367
    10. ' with' → logprob: -8.039793014526367

Token 16: ' strips' (ID: 52023)
  Prédit: ' strips'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' strips' → logprob: -0.49736782908439636
    2. ' returns' → logprob: -0.9973678588867188
    3. '   ' → logprob: -4.497367858886719
    4. 'returns' → logprob: -5.247367858886719
    5. 'rstrip' → logprob: -5.497367858886719
    6. 'strip' → logprob: -6.872367858886719
    7. 'return' → logprob: -7.372367858886719
    8. ' removes' → logprob: -8.497367858886719
    9. '```' → logprob: -8.622367858886719
    10. ' return' → logprob: -8.872367858886719

Token 17: ' the' (ID: 290)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2334105372428894
    2. ' the' → logprob: -2.358410596847534
    3. ' leading' → logprob: -3.358410596847534
    4. '<|end|>' → logprob: -3.358410596847534
    5. ' trailing' → logprob: -3.733410596847534
    6. '<|end|>' → logprob: -5.483410358428955
    7. '   ' → logprob: -5.608410358428955
    8. ' any' → logprob: -5.608410358428955
    9. ' it' → logprob: -6.233410358428955
    10. 'the' → logprob: -6.983410358428955

Token 18: ' trailing' (ID: 57985)
  Prédit: ' trailing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' trailing' → logprob: -0.18129374086856842
    2. ' newline' → logprob: -1.9312937259674072
    3. 'newline' → logprob: -4.431293964385986
    4. '\n' → logprob: -5.306293964385986
    5. ' input' → logprob: -6.306293964385986
    6. ' line' → logprob: -7.806293964385986
    7. ' whitespace' → logprob: -7.931293964385986
    8. ' leading' → logprob: -7.931293964385986
    9. '```' → logprob: -8.556293487548828
    10. 'input' → logprob: -9.056293487548828

Token 19: ' newline' (ID: 95802)
  Prédit: ' newline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' newline' → logprob: -0.3408438265323639
    2. 'newline' → logprob: -1.5908437967300415
    3. '\n' → logprob: -2.840843915939331
    4. ' whitespace' → logprob: -3.965843915939331
    5. '```' → logprob: -5.840843677520752
    6. ''\' → logprob: -6.715843677520752
    7. '  ' → logprob: -7.465843677520752
    8. '   ' → logprob: -7.840843677520752
    9. '\' → logprob: -7.965843677520752
    10. '`' → logprob: -8.09084415435791

Token 20: ' character' (ID: 5855)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2812565267086029
    2. ' character' → logprob: -2.2812564373016357
    3. '\n' → logprob: -2.6562564373016357
    4. '```' → logprob: -3.9062564373016357
    5. '"""' → logprob: -4.406256675720215
    6. 'character' → logprob: -4.406256675720215
    7. '
' → logprob: -4.656256675720215
    8. ' characters' → logprob: -5.156256675720215
    9. '<|end|>' → logprob: -6.531256675720215
    10. '    
' → logprob: -6.531256675720215

Token 21: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1763533502817154
    2. '\n' → logprob: -1.9263533353805542
    3. '
' → logprob: -5.801353454589844
    4. '.' → logprob: -6.051353454589844
    5. ')' → logprob: -6.176353454589844
    6. '"""' → logprob: -6.176353454589844
    7. '```' → logprob: -6.551353454589844
    8. '    
' → logprob: -6.926353454589844
    9. 'return' → logprob: -7.676353454589844
    10. '\' → logprob: -7.801353454589844

Token 22: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09748576581478119
    2. '"""' → logprob: -2.4724857807159424
    3. 'return' → logprob: -5.472485542297363
    4. '""' → logprob: -6.597485542297363
    5. ')' → logprob: -6.597485542297363
    6. ' return' → logprob: -7.222485542297363
    7. '\n' → logprob: -8.222485542297363
    8. '"""
' → logprob: -8.472485542297363
    9. '```' → logprob: -9.097485542297363
    10. ' """' → logprob: -9.472485542297363

Token 23: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022548500448465347
    2. 'return' → logprob: -4.272548675537109
    3. ' return' → logprob: -4.897548675537109
    4. ')' → logprob: -7.647548675537109
    5. '"""' → logprob: -8.89754867553711
    6. ' ' → logprob: -9.02254867553711
    7. '       ' → logprob: -10.39754867553711
    8. '""' → logprob: -10.52254867553711
    9. '    ' → logprob: -10.89754867553711
    10. '```' → logprob: -11.52254867553711

Token 24: ' Returns' (ID: 9609)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.04226639121770859
    2. '   ' → logprob: -3.292266368865967
    3. 'line' → logprob: -5.667266368865967
    4. ' return' → logprob: -7.667266368865967
    5. 'try' → logprob: -8.667266845703125
    6. ' line' → logprob: -9.917266845703125
    7. '"""' → logprob: -10.667266845703125
    8. 'user' → logprob: -11.292266845703125
    9. 'pass' → logprob: -12.042266845703125
    10. ')' → logprob: -12.167266845703125

Token 25: ':
' (ID: 734)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.5084142088890076
    2. ' ' → logprob: -1.0084142684936523
    3. ' input' → logprob: -3.7584142684936523
    4. ' line' → logprob: -6.133414268493652
    5. ' a' → logprob: -6.133414268493652
    6. ' '' → logprob: -6.383414268493652
    7. 'sys' → logprob: -7.008414268493652
    8. ' None' → logprob: -7.133414268493652
    9. 'input' → logprob: -7.258414268493652
    10. ' `' → logprob: -7.633414268493652

Token 26: '       ' (ID: 309)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.525533139705658
    2. ' input' → logprob: -1.5255331993103027
    3. ' line' → logprob: -2.7755331993103027
    4. '   ' → logprob: -3.1505331993103027
    5. ' str' → logprob: -3.5255331993103027
    6. 'input' → logprob: -3.7755331993103027
    7. 'sys' → logprob: -4.025533199310303
    8. 'str' → logprob: -5.525533199310303
    9. ' a' → logprob: -5.525533199310303
    10. 'line' → logprob: -6.275533199310303

Token 27: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' (adapté à ' str') → logprob: -0.40629175305366516
    2. 'sys' → logprob: -1.5312917232513428
    3. 'input' → logprob: -2.7812917232513428
    4. ' sys' → logprob: -4.031291961669922
    5. ' str' → logprob: -4.156291961669922
    6. 'line' → logprob: -4.406291961669922
    7. ' input' → logprob: -5.406291961669922
    8. ' line' → logprob: -5.781291961669922
    9. 'string' → logprob: -7.781291961669922
    10. '   ' → logprob: -8.156291961669922

Token 28: ':' (ID: 25)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36273130774497986
    2. ')' → logprob: -1.4877313375473022
    3. '<|end|>' → logprob: -2.9877312183380127
    4. '):' → logprob: -4.237731456756592
    5. '<|end|>' → logprob: -5.612731456756592
    6. ':' → logprob: -5.737731456756592
    7. '       ' → logprob: -6.237731456756592
    8. 'input' → logprob: -7.112731456756592
    9. ' ' → logprob: -7.612731456756592
    10. '```' → logprob: -7.612731456756592

Token 29: ' The' (ID: 623)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.15269018709659576
    2. 'sys' → logprob: -2.0276901721954346
    3. ' The' → logprob: -6.027690410614014
    4. ' input' → logprob: -6.027690410614014
    5. ' next' → logprob: -6.402690410614014
    6. '   ' → logprob: -7.152690410614014
    7. 'The' → logprob: -7.277690410614014
    8. ' line' → logprob: -7.527690410614014
    9. 'input' → logprob: -7.902690410614014
    10. ' super' → logprob: -8.527689933776855

Token 30: ' input' (ID: 3422)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.07757685333490372
    2. ' input' → logprob: -3.0775768756866455
    3. ' line' → logprob: -4.327576637268066
    4. ' user's' → logprob: -5.077576637268066
    5. ' user' → logprob: -5.327576637268066
    6. 'next' → logprob: -6.577576637268066
    7. ' stripped' → logprob: -6.827576637268066
    8. ' result' → logprob: -7.577576637268066
    9. 'input' → logprob: -8.077576637268066
    10. 'line' → logprob: -8.202576637268066

Token 31: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.5642687678337097
    2. ' string' → logprob: -1.6892688274383545
    3. '<|end|>' → logprob: -2.3142688274383545
    4. ' ' → logprob: -2.4392688274383545
    5. '()' → logprob: -3.9392688274383545
    6. 'string' → logprob: -4.189268589019775
    7. '   ' → logprob: -4.939268589019775
    8. '  ' → logprob: -5.314268589019775
    9. 'line' → logprob: -5.564268589019775
    10. '().' → logprob: -6.064268589019775

Token 32: ' without' (ID: 2935)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3458320200443268
    2. '.rstrip' → logprob: -1.9708319902420044
    3. '.strip' → logprob: -2.845832109451294
    4. '<|end|>' → logprob: -3.845832109451294
    5. '    ' → logprob: -4.095831871032715
    6. '().' → logprob: -4.595831871032715
    7. ')' → logprob: -5.345831871032715
    8. '.readline' → logprob: -5.345831871032715
    9. ' ' → logprob: -5.345831871032715
    10. '  ' → logprob: -5.470831871032715

Token 33: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.04837760701775551
    2. ' a' → logprob: -3.548377513885498
    3. ' trailing' → logprob: -4.548377513885498
    4. 'the' → logprob: -5.423377513885498
    5. ' any' → logprob: -5.798377513885498
    6. 'a' → logprob: -8.048377990722656
    7. ' newline' → logprob: -9.673377990722656
    8. 'newline' → logprob: -11.048377990722656
    9. ' leading' → logprob: -11.673377990722656
    10. 'any' → logprob: -11.923377990722656

Token 34: ' trailing' (ID: 57985)
  Prédit: ' trailing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' trailing' → logprob: -0.029267845675349236
    2. ' newline' → logprob: -3.7792677879333496
    3. 'newline' → logprob: -5.15426778793335
    4. 'tr' → logprob: -9.529268264770508
    5. '\n' → logprob: -9.654268264770508
    6. ''\' → logprob: -10.029268264770508
    7. '`' → logprob: -11.904268264770508
    8. ' final' → logprob: -12.029268264770508
    9. '```' → logprob: -12.154268264770508
    10. '`\' → logprob: -12.154268264770508

Token 35: ' newline' (ID: 95802)
  Prédit: ' newline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' newline' → logprob: -0.019543804228305817
    2. '\n' → logprob: -4.644543647766113
    3. 'newline' → logprob: -4.644543647766113
    4. ' whitespace' → logprob: -10.144543647766113
    5. ' new' → logprob: -10.519543647766113
    6. ''\' → logprob: -10.644543647766113
    7. '\' → logprob: -11.644543647766113
    8. ' \' → logprob: -11.769543647766113
    9. ' '\' → logprob: -12.519543647766113
    10. '"\' → logprob: -12.894543647766113

Token 36: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6523779034614563
    2. '"""' → logprob: -1.5273778438568115
    3. '\n' → logprob: -2.1523778438568115
    4. '
' → logprob: -2.9023778438568115
    5. '"""
' → logprob: -3.6523778438568115
    6. '`' → logprob: -4.402378082275391
    7. '```' → logprob: -4.527378082275391
    8. ')' → logprob: -4.527378082275391
    9. '"' → logprob: -4.902378082275391
    10. '    
' → logprob: -5.027378082275391

Token 37: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25338059663772583
    2. '"""' → logprob: -1.503380537033081
    3. '""' → logprob: -7.50338077545166
    4. '"""
' → logprob: -8.12838077545166
    5. ')' → logprob: -8.25338077545166
    6. '```' → logprob: -8.87838077545166
    7. '"' → logprob: -9.75338077545166
    8. '\n' → logprob: -9.75338077545166
    9. ' """' → logprob: -9.87838077545166
    10. '    
' → logprob: -11.25338077545166

Token 38: ' """
' (ID: 7037)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.019394854083657265
    2. '   ' → logprob: -4.144394874572754
    3. ' """' → logprob: -6.894394874572754
    4. '"""
' (adapté à ' """
') → logprob: -6.894394874572754
    5. '""' → logprob: -7.394394874572754
    6. ')' → logprob: -7.894394874572754
    7. '```' → logprob: -8.394394874572754
    8. '"' → logprob: -9.394394874572754
    9. ' """
' → logprob: -11.144394874572754
    10. ''''' → logprob: -12.769394874572754

Token 39: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004001703578978777
    2. 'return' → logprob: -5.879001617431641
    3. ' return' → logprob: -6.754001617431641
    4. 'try' → logprob: -10.87900161743164
    5. ' try' → logprob: -12.00400161743164
    6. '   ' → logprob: -13.12900161743164
    7. '       ' → logprob: -14.00400161743164
    8. '    ' → logprob: -14.12900161743164
    9. '	return' → logprob: -15.00400161743164
    10. '    
' → logprob: -15.50400161743164

Token 40: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.003833332797512412
    2. 'try' → logprob: -6.253833293914795
    3. '   ' → logprob: -6.503833293914795
    4. ' return' → logprob: -8.128833770751953
    5. 'line' → logprob: -9.128833770751953
    6. ' try' → logprob: -14.503833770751953
    7. ' line' → logprob: -14.628833770751953
    8. 'import' → logprob: -15.503833770751953
    9. ' ' → logprob: -15.878833770751953
    10. 'ret' → logprob: -15.878833770751953

Token 41: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.0297523383051157
    2. 'sys' → logprob: -3.529752254486084
    3. ' input' → logprob: -13.779752731323242
    4. 'input' → logprob: -14.279752731323242
    5. '=sys' → logprob: -16.404752731323242
    6. '(sys' → logprob: -16.529752731323242
    7. '	sys' → logprob: -16.654752731323242
    8. ' ' → logprob: -17.404752731323242
    9. ' ' → logprob: -19.029752731323242
    10. '_sys' → logprob: -19.779752731323242

Token 42: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0006473870598711073
    2. '.' → logprob: -7.75064754486084
    3. '.stdout' → logprob: -8.50064754486084
    4. '.argv' → logprob: -12.00064754486084
    5. '.std' → logprob: -12.25064754486084
    6. '.readline' → logprob: -13.37564754486084
    7. '.stderr' → logprob: -15.12564754486084
    8. ' .' → logprob: -15.75064754486084
    9. '.st' → logprob: -16.125646591186523
    10. '.input' → logprob: -16.625646591186523

Token 43: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -4.4849443838757e-06
    2. '.' → logprob: -12.500004768371582
    3. '.read' → logprob: -14.500004768371582
    4. ' readline' → logprob: -16.625003814697266
    5. '.readlines' → logprob: -18.750003814697266
    6. 'read' → logprob: -18.875003814697266
    7. ' .' → logprob: -19.750003814697266
    8. '().' → logprob: -20.375003814697266
    9. '```' → logprob: -21.625003814697266
    10. '.rstrip' → logprob: -22.250003814697266

Token 44: '()' (ID: 416)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.575952410697937
    2. '()' → logprob: -0.825952410697937
    3. '(' → logprob: -11.575952529907227
    4. ' ()' → logprob: -13.700952529907227
    5. ' ().' → logprob: -14.825952529907227
    6. '()[' → logprob: -14.950952529907227
    7. '()?.' → logprob: -14.950952529907227
    8. '()
' → logprob: -15.450952529907227
    9. '()`' → logprob: -16.075952529907227
    10. '()(' → logprob: -16.075952529907227

Token 45: '[:-' (ID: 63556)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.3879801034927368
    2. '.rstrip' → logprob: -1.2629801034927368
    3. '.strip' → logprob: -4.137979984283447
    4. '[:-' → logprob: -4.137979984283447
    5. '()' → logprob: -5.637979984283447
    6. '.' → logprob: -6.512979984283447
    7. 'rstrip' → logprob: -6.637979984283447
    8. '(' → logprob: -8.512980461120605
    9. ' .' → logprob: -8.762980461120605
    10. ' ().' → logprob: -10.137980461120605

Token 46: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. '```' → logprob: -17.375
    4. '   ' → logprob: -17.625
    5. '\n' → logprob: -19.375
    6. '１' → logprob: -19.875
    7. '\' → logprob: -20.25
    8. '``' → logprob: -20.25
    9. '  ' → logprob: -20.625
    10. 'newline' → logprob: -20.875

Token 47: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1398757123970427e-05
    2. ')
' → logprob: -12.250011444091797
    3. '<|end|>' → logprob: -12.375011444091797
    4. ']' → logprob: -14.375011444091797
    5. '）' → logprob: -14.375011444091797
    6. ' )' → logprob: -15.000011444091797
    7. '}' → logprob: -15.000011444091797
    8. ')

' → logprob: -15.875011444091797
    9. '```' → logprob: -16.375011444091797
    10. '')' → logprob: -16.375011444091797

Token 48: 'INF' (ID: 64358)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.2802369594573975
    2. '<|end|>' → logprob: -1.4052369594573975
    3. '\n' → logprob: -1.5302369594573975
    4. '#' → logprob: -1.6552369594573975
    5. '```' → logprob: -4.280237197875977
    6. '

' → logprob: -4.530237197875977
    7. '\' → logprob: -4.780237197875977
    8. ' ' → logprob: -4.905237197875977
    9. ')' → logprob: -5.030237197875977
    10. 'def' → logprob: -5.280237197875977

Token 49: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1711505651473999
    2. '=' → logprob: -2.5461506843566895
    3. '_' → logprob: -2.5461506843566895
    4. ',' → logprob: -9.046150207519531
    5. ' _' → logprob: -9.046150207519531
    6. ')' → logprob: -9.171150207519531
    7. ':' → logprob: -9.796150207519531
    8. '.' → logprob: -10.296150207519531
    9. '_SPACE' → logprob: -10.546150207519531
    10. '_=' → logprob: -11.171150207519531

Token 50: ' float' (ID: 4428)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.6900532841682434
    2. ' ' → logprob: -1.4400532245635986
    3. 'float' → logprob: -1.6900532245635986
    4. ' float' → logprob: -2.5650532245635986
    5. 'int' → logprob: -9.69005298614502
    6. '100' → logprob: -10.56505298614502
    7. ' int' → logprob: -11.81505298614502
    8. '1' → logprob: -11.81505298614502
    9. '   ' → logprob: -12.56505298614502
    10. '	float' → logprob: -13.81505298614502

Token 51: '("' (ID: 568)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -1.735893965815194e-05
    2. '(' → logprob: -11.250017166137695
    3. '("' → logprob: -12.375017166137695
    4. '('+' → logprob: -16.625017166137695
    5. ' ('' → logprob: -17.250017166137695
    6. ''' → logprob: -17.250017166137695
    7. '(\'' → logprob: -17.875017166137695
    8. '('-' → logprob: -17.875017166137695
    9. '(`' → logprob: -19.250017166137695
    10. '('\' → logprob: -20.000017166137695

Token 52: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.1739836484193802
    2. ''in' → logprob: -2.048983573913574
    3. ''' → logprob: -3.673983573913574
    4. '"' → logprob: -5.298983573913574
    5. ''ex' → logprob: -9.298983573913574
    6. ''end' → logprob: -9.923983573913574
    7. ''i' → logprob: -10.173983573913574
    8. ''inc' → logprob: -10.548983573913574
    9. '"in' → logprob: -10.673983573913574
    10. 'info' → logprob: -10.798983573913574

Token 53: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.07239806652069092
    2. ')' → logprob: -2.8223981857299805
    3. ')")' → logprob: -4.5723981857299805
    4. ')"' → logprob: -10.44739818572998
    5. '"' → logprob: -11.94739818572998
    6. '}")' → logprob: -12.94739818572998
    7. ' )' → logprob: -13.07239818572998
    8. ' ")' → logprob: -13.82239818572998
    9. '')' → logprob: -14.44739818572998
    10. '")
' → logprob: -14.94739818572998

Token 54: ' ' (ID: 220)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6379520893096924
    2. '

' → logprob: -0.8879520893096924
    3. '
' → logprob: -2.8879520893096924
    4. 'class' → logprob: -6.887951850891113
    5. '\' → logprob: -7.262951850891113
    6. '\n' → logprob: -7.387951850891113
    7. '#' → logprob: -7.887951850891113
    8. '```' → logprob: -8.137951850891113
    9. '
' → logprob: -8.387951850891113
    10. ' 

' → logprob: -8.512951850891113

Token 55: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.004972474183887243
    2. 'class' → logprob: -5.629972457885742
    3. '

' → logprob: -7.379972457885742
    4. '#' → logprob: -8.254972457885742
    5. '
' → logprob: -8.754972457885742
    6. '' → logprob: -9.754972457885742
    7. '\' → logprob: -10.004972457885742
    8. 'n' → logprob: -10.379972457885742
    9. 'dp' → logprob: -10.629972457885742
    10. '```' → logprob: -10.629972457885742

Token 56: ' Representation' (ID: 155197)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1545599699020386
    2. ' MAX' → logprob: -2.529560089111328
    3. 'MAX' → logprob: -2.654560089111328
    4. ' max' → logprob: -2.904560089111328
    5. ' class' → logprob: -3.029560089111328
    6. ' graph' → logprob: -3.404560089111328
    7. ' distance' → logprob: -3.529560089111328
    8. ' #' → logprob: -3.654560089111328
    9. 'def' → logprob: -3.654560089111328
    10. 'distance' → logprob: -3.654560089111328

Token 57: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.0076458994299173355
    2. 'of' → logprob: -5.007646083831787
    3. ' for' → logprob: -7.632646083831787
    4. '<|end|>' → logprob: -8.007645606994629
    5. 'for' → logprob: -9.882645606994629
    6. ')' → logprob: -10.882645606994629
    7. '<|end|>' → logprob: -11.257645606994629
    8. ' ' → logprob: -11.382645606994629
    9. '_' → logprob: -12.632645606994629
    10. '```' → logprob: -12.632645606994629

Token 58: ' infinity' (ID: 103156)
  Prédit: ' infinity'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' infinity' → logprob: -0.06401848047971725
    2. 'in' → logprob: -2.814018487930298
    3. ' positive' → logprob: -6.939018249511719
    4. ' infinite' → logprob: -7.564018249511719
    5. ' an' → logprob: -7.814018249511719
    6. ' a' → logprob: -9.439018249511719
    7. '.infinity' → logprob: -10.814018249511719
    8. '∞' → logprob: -11.189018249511719
    9. 'an' → logprob: -11.314018249511719
    10. 'positive' → logprob: -11.689018249511719

Token 59: ' for' (ID: 395)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9403554201126099
    2. '

' → logprob: -1.0653554201126099
    3. '
' → logprob: -1.6903554201126099
    4. '\n' → logprob: -3.5653553009033203
    5. '#' → logprob: -3.9403553009033203
    6. '\' → logprob: -4.94035530090332
    7. '```' → logprob: -4.94035530090332
    8. 'newline' → logprob: -5.19035530090332
    9. 'n' → logprob: -5.56535530090332
    10. '' → logprob: -5.81535530090332

Token 60: ' possible' (ID: 4149)
  Prédit: ' distances'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' distances' → logprob: -0.17729710042476654
    2. ' comparisons' → logprob: -2.8022971153259277
    3. ' graph' → logprob: -3.5522971153259277
    4. ' distance' → logprob: -3.9272971153259277
    5. ' comparison' → logprob: -4.302297115325928
    6. ' use' → logprob: -5.052297115325928
    7. ' edge' → logprob: -5.177297115325928
    8. ' algorithms' → logprob: -5.177297115325928
    9. ' the' → logprob: -5.677297115325928
    10. ' initialization' → logprob: -6.052297115325928

Token 61: ' use' (ID: 1199)
  Prédit: ' distances'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' distances' → logprob: -0.1304614394903183
    2. ' graph' → logprob: -3.2554614543914795
    3. ' edge' → logprob: -3.2554614543914795
    4. ' weights' → logprob: -3.6304614543914795
    5. ' distance' → logprob: -5.0054612159729
    6. ' shortest' → logprob: -6.2554612159729
    7. 'distance' → logprob: -6.3804612159729
    8. 'dist' → logprob: -6.5054612159729
    9. 'weights' → logprob: -6.8804612159729
    10. ' edges' → logprob: -7.0054612159729

Token 62: ' in' (ID: 306)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.18997488915920258
    2. 'def' → logprob: -1.9399749040603638
    3. '
' → logprob: -3.814974784851074
    4. '\n' → logprob: -6.439974784851074
    5. '```' → logprob: -6.689974784851074
    6. '#' → logprob: -6.689974784851074
    7. 'newline' → logprob: -7.064974784851074
    8. '<|end|>' → logprob: -7.189974784851074
    9. '\' → logprob: -8.189974784851074
    10. 'n' → logprob: -8.439974784851074

Token 63: ' algorithms' (ID: 41730)
  Prédit: 'alg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alg' → logprob: -0.7935597896575928
    2. ' algorithms' → logprob: -1.1685597896575928
    3. ' graph' → logprob: -2.2935597896575928
    4. 'graph' → logprob: -2.7935597896575928
    5. 'graphs' → logprob: -3.6685597896575928
    6. 'the' → logprob: -4.543560028076172
    7. ' graphs' → logprob: -4.918560028076172
    8. 'distance' → logprob: -5.043560028076172
    9. ' the' → logprob: -5.043560028076172
    10. 'dist' → logprob: -5.793560028076172

Token 64: '

' (ID: 279)
  Prédit: '

'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.2179805338382721
    2. '
' → logprob: -1.7179805040359497
    3. 'def' → logprob: -4.59298038482666
    4. '```' → logprob: -6.09298038482666
    5. '<|end|>' → logprob: -6.59298038482666
    6. '\n' → logprob: -6.71798038482666
    7. '#' → logprob: -7.34298038482666
    8. '\' → logprob: -8.59298038482666
    9. '' → logprob: -9.09298038482666
    10. '
' → logprob: -9.21798038482666

Token 65: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0035879528149962425
    2. 'class' → logprob: -5.87858772277832
    3. '
' → logprob: -8.00358772277832
    4. '#' → logprob: -9.12858772277832
    5. 'n' → logprob: -9.12858772277832
    6. '```' → logprob: -9.50358772277832
    7. '

' → logprob: -10.12858772277832
    8. '\' → logprob: -10.12858772277832
    9. '\n' → logprob: -10.75358772277832
    10. 'from' → logprob: -11.87858772277832

Token 66: ' BIT' (ID: 52185)
  Prédit: ' Graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Graph' → logprob: -0.008791361935436726
    2. ' ' → logprob: -5.133791446685791
    3. ' Solution' → logprob: -6.758791446685791
    4. ' My' → logprob: -7.008791446685791
    5. 'Graph' → logprob: -8.633790969848633
    6. ' Solver' → logprob: -8.758790969848633
    7. ' Space' → logprob: -8.883790969848633
    8. ' Node' → logprob: -9.258790969848633
    9. ' D' → logprob: -9.633790969848633
    10. ' Tree' → logprob: -10.508790969848633

Token 67: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0030764674302190542
    2. '(' → logprob: -5.878076553344727
    3. '():' → logprob: -8.503076553344727
    4. ' :' → logprob: -10.003076553344727
    5. '(object' → logprob: -12.003076553344727
    6. ':**' → logprob: -12.878076553344727
    7. ' (' → logprob: -13.128076553344727
    8. ':
' → logprob: -13.378076553344727
    9. '(Tree' → logprob: -13.503076553344727
    10. '{' → logprob: -13.753076553344727

Token 68: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005549400229938328
    2. ':
' → logprob: -8.375555038452148
    3. ' :' → logprob: -8.500555038452148
    4. '(object' → logprob: -9.625555038452148
    5. '   ' → logprob: -10.625555038452148
    6. '(' → logprob: -11.500555038452148
    7. '():' → logprob: -11.875555038452148
    8. '  ' → logprob: -12.750555038452148
    9. '    ' → logprob: -13.000555038452148
    10. ' (' → logprob: -13.125555038452148

Token 69: ' """
' (ID: 7037)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.1908869743347168
    2. '   ' → logprob: -2.440886974334717
    3. '    ' → logprob: -2.565886974334717
    4. 'def' → logprob: -5.315886974334717
    5. ' ' → logprob: -5.690886974334717
    6. ' 
' → logprob: -7.565886974334717
    7. ' class' → logprob: -8.690887451171875
    8. '    
' → logprob: -8.690887451171875
    9. 'class' → logprob: -8.690887451171875
    10. ' """' → logprob: -9.065887451171875

Token 70: '   ' (ID: 271)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -1.0733128786087036
    2. '   ' → logprob: -1.4483128786087036
    3. 'Binary' → logprob: -1.9483128786087036
    4. ' Binary' → logprob: -2.073312759399414
    5. 'Fen' → logprob: -3.073312759399414
    6. '    ' → logprob: -3.573312759399414
    7. ' Fen' → logprob: -4.198312759399414
    8. 'class' → logprob: -4.323312759399414
    9. 'def' → logprob: -4.448312759399414
    10. ' ' → logprob: -4.823312759399414

Token 71: ' Binary' (ID: 32672)
  Prédit: ' Binary'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Binary' → logprob: -0.3236284852027893
    2. 'Binary' (adapté à ' Binary') → logprob: -1.3236284255981445
    3. 'Fen' → logprob: -5.6986284255981445
    4. 'A' → logprob: -6.8236284255981445
    5. 'B' → logprob: -6.8236284255981445
    6. ' Fen' → logprob: -6.9486284255981445
    7. ' B' → logprob: -7.1986284255981445
    8. '   ' → logprob: -7.3236284255981445
    9. ' binary' → logprob: -7.5736284255981445
    10. 'F' → logprob: -7.5736284255981445

Token 72: ' Indexed' (ID: 158810)
  Prédit: ' Indexed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Indexed' → logprob: -0.0820944756269455
    2. 'Indexed' → logprob: -2.582094430923462
    3. ' indexed' → logprob: -7.082094669342041
    4. 'I' → logprob: -7.207094669342041
    5. ' ' → logprob: -7.707094669342041
    6. '  ' → logprob: -7.832094669342041
    7. 'Index' → logprob: -8.207094192504883
    8. ' Index' → logprob: -8.707094192504883
    9. '   ' → logprob: -8.832094192504883
    10. ' I' → logprob: -9.332094192504883

Token 73: ' Tree' (ID: 14224)
  Prédit: 'Tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tree' → logprob: -0.007335194852203131
    2. ' Tree' → logprob: -5.007335186004639
    3. ' ' → logprob: -7.882335186004639
    4. '  ' → logprob: -9.007335662841797
    5. '(Tree' → logprob: -9.882335662841797
    6. ' tree' → logprob: -11.007335662841797
    7. 'ree' → logprob: -11.382335662841797
    8. '   ' → logprob: -11.382335662841797
    9. '	Tree' → logprob: -11.507335662841797
    10. '<Tree' → logprob: -12.257335662841797

Token 74: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0378371998667717
    2. '   ' → logprob: -3.912837266921997
    3. '(' → logprob: -5.162837028503418
    4. '<|end|>' → logprob: -5.412837028503418
    5. '):' → logprob: -6.787837028503418
    6. ')' → logprob: -6.912837028503418
    7. '(object' → logprob: -7.037837028503418
    8. ' (' → logprob: -7.287837028503418
    9. '(B' → logprob: -7.537837028503418
    10. '(n' → logprob: -7.662837028503418

Token 75: 'Fen' (ID: 155141)
  Prédit: 'Fen'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Fen' → logprob: -0.3073612153530121
    2. ')' → logprob: -1.8073612451553345
    3. '):' → logprob: -2.557361125946045
    4. ' Fen' → logprob: -4.432361125946045
    5. ' or' → logprob: -6.182361125946045
    6. '/F' → logprob: -6.307361125946045
    7. '):
' → logprob: -6.307361125946045
    8. '   ' → logprob: -6.932361125946045
    9. '/f' → logprob: -7.057361125946045
    10. ':' → logprob: -7.307361125946045

Token 76: 'wick' (ID: 14105)
  Prédit: 'wick'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wick' → logprob: -0.18008200824260712
    2. 'w' → logprob: -1.8050819635391235
    3. '   ' → logprob: -8.930082321166992
    4. '```' → logprob: -9.930082321166992
    5. 'wik' → logprob: -9.930082321166992
    6. '       ' → logprob: -10.305082321166992
    7. ')' → logprob: -10.930082321166992
    8. ']' → logprob: -11.430082321166992
    9. ' ' → logprob: -11.930082321166992
    10. '  ' → logprob: -12.180082321166992

Token 77: ' Tree' (ID: 14224)
  Prédit: 'Tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tree' → logprob: -0.16101090610027313
    2. ' Tree' → logprob: -1.9110108613967896
    3. ')' → logprob: -8.0360107421875
    4. ' ' → logprob: -8.1610107421875
    5. '	Tree' → logprob: -10.0360107421875
    6. '(Tree' → logprob: -10.2860107421875
    7. 'T' → logprob: -10.5360107421875
    8. ' tree' → logprob: -11.0360107421875
    9. 'ree' → logprob: -11.1610107421875
    10. '<Tree' → logprob: -11.2860107421875

Token 78: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08522236347198486
    2. '):' → logprob: -2.5852222442626953
    3. '):
' → logprob: -5.085222244262695
    4. '   ' → logprob: -9.710222244262695
    5. ')
' → logprob: -10.460222244262695
    6. ':' → logprob: -11.710222244262695
    7. '):

' → logprob: -11.960222244262695
    8. ' for' → logprob: -12.585222244262695
    9. '):
' → logprob: -12.835222244262695
    10. '```' → logprob: -12.835222244262695

Token 79: ' implementation' (ID: 13847)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03675131872296333
    2. '):' → logprob: -3.7867512702941895
    3. '   ' → logprob: -5.1617512702941895
    4. ':
' → logprob: -5.2867512702941895
    5. ')' → logprob: -6.4117512702941895
    6. '
' → logprob: -8.161751747131348
    7. '):
' → logprob: -8.411751747131348
    8. '```' → logprob: -8.786751747131348
    9. '<|end|>' → logprob: -9.536751747131348
    10. ' for' → logprob: -10.161751747131348

Token 80: ' to' (ID: 316)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5097994208335876
    2. '   ' → logprob: -1.5097994804382324
    3. '<|end|>' → logprob: -2.0097994804382324
    4. '):' → logprob: -4.384799480438232
    5. '<|end|>' → logprob: -4.884799480438232
    6. ' for' → logprob: -5.134799480438232
    7. ')' → logprob: -5.134799480438232
    8. '
' → logprob: -5.759799480438232
    9. 'class' → logprob: -6.134799480438232
    10. '```' → logprob: -6.384799480438232

Token 81: ' support' (ID: 2498)
  Prédit: ' efficiently'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' efficiently' → logprob: -0.3770662546157837
    2. ' support' → logprob: -1.7520662546157837
    3. ' provide' → logprob: -2.002066135406494
    4. 'support' → logprob: -6.377066135406494
    5. ' facilitate' → logprob: -6.627066135406494
    6. ' ' → logprob: -7.627066135406494
    7. 'efficient' → logprob: -7.627066135406494
    8. 'provide' → logprob: -7.877066135406494
    9. ' maintain' → logprob: -8.002066612243652
    10. '   ' → logprob: -8.627066612243652

Token 82: ' efficient' (ID: 12430)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0573850870132446
    2. ' a' → logprob: -1.5573850870132446
    3. ' the' → logprob: -2.432384967803955
    4. ' ' → logprob: -2.557384967803955
    5. ' dynamic' → logprob: -2.682384967803955
    6. ' update' → logprob: -2.932384967803955
    7. ' efficient' → logprob: -3.557384967803955
    8. ' range' → logprob: -3.682384967803955
    9. '  ' → logprob: -4.182384967803955
    10. ' prefix' → logprob: -4.307384967803955

Token 83: ' prefix' (ID: 18633)
  Prédit: ' updates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' updates' → logprob: -0.37065672874450684
    2. ' update' → logprob: -1.2456567287445068
    3. ' range' → logprob: -4.745656967163086
    4. ' updating' → logprob: -5.370656967163086
    5. ' ' → logprob: -6.245656967163086
    6. ' query' → logprob: -6.620656967163086
    7. ' operations' → logprob: -6.745656967163086
    8. ' cumulative' → logprob: -7.120656967163086
    9. ' queries' → logprob: -7.245656967163086
    10. '  ' → logprob: -7.495656967163086

Token 84: ' sum' (ID: 4215)
  Prédit: ' sums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sums' → logprob: -0.5670008659362793
    2. ' sum' → logprob: -0.9420008659362793
    3. 'sum' → logprob: -3.9420008659362793
    4. '   ' → logprob: -4.692000865936279
    5. '_sum' → logprob: -4.817000865936279
    6. ' updates' → logprob: -6.067000865936279
    7. ' ' → logprob: -6.067000865936279
    8. ' queries' → logprob: -7.442000865936279
    9. ' _' → logprob: -7.817000865936279
    10. ' query' → logprob: -8.067001342773438

Token 85: ' queries' (ID: 32122)
  Prédit: ' queries'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' queries' → logprob: -0.9236352443695068
    2. ' operations' → logprob: -1.1736352443695068
    3. '   ' → logprob: -1.6736352443695068
    4. ' updates' → logprob: -2.798635244369507
    5. '  ' → logprob: -4.298635482788086
    6. ' ' → logprob: -4.673635482788086
    7. 's' → logprob: -4.673635482788086
    8. ' query' → logprob: -5.298635482788086
    9. ' and' → logprob: -6.048635482788086
    10. ' calculations' → logprob: -6.423635482788086

Token 86: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5771694779396057
    2. ' and' → logprob: -0.8271694779396057
    3. 'and' → logprob: -7.077169418334961
    4. '    ' → logprob: -9.327169418334961
    5. ')' → logprob: -9.577169418334961
    6. '  ' → logprob: -9.577169418334961
    7. '<|end|>' → logprob: -9.827169418334961
    8. 's' → logprob: -10.077169418334961
    9. '    
' → logprob: -11.077169418334961
    10. '```' → logprob: -11.452169418334961

Token 87: ' updates' (ID: 12663)
  Prédit: ' updates'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' updates' → logprob: -0.004062490072101355
    2. ' point' → logprob: -6.629062652587891
    3. 'updates' → logprob: -6.629062652587891
    4. ' update' → logprob: -6.629062652587891
    5. ' range' → logprob: -9.62906265258789
    6. 'update' → logprob: -12.00406265258789
    7. '   ' → logprob: -12.37906265258789
    8. '_updates' → logprob: -12.62906265258789
    9. 'point' → logprob: -13.00406265258789
    10. ' updating' → logprob: -13.25406265258789

Token 88: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05640529841184616
    2. '.' → logprob: -3.0564053058624268
    3. ':' → logprob: -5.431405067443848
    4. '```' → logprob: -6.681405067443848
    5. '    
' → logprob: -7.931405067443848
    6. '
' → logprob: -7.931405067443848
    7. ' for' → logprob: -8.056405067443848
    8. '  ' → logprob: -8.431405067443848
    9. '.
' → logprob: -8.931405067443848
    10. ' ' → logprob: -9.056405067443848

Token 89: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029307786375284195
    2. '
' → logprob: -4.404307842254639
    3. '    
' → logprob: -4.404307842254639
    4. '```' → logprob: -6.654307842254639
    5. ' 
' → logprob: -7.404307842254639
    6. ')' → logprob: -7.404307842254639
    7. ':' → logprob: -8.02930736541748
    8. 'class' → logprob: -8.15430736541748
    9. '"""' → logprob: -8.52930736541748
    10. '   
' → logprob: -8.65430736541748

Token 90: ' Attributes' (ID: 70472)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10251425951719284
    2. '   ' → logprob: -3.1025142669677734
    3. '    
' → logprob: -3.2275142669677734
    4. '"""
' → logprob: -5.102514266967773
    5. '"""' → logprob: -5.727514266967773
    6. '```' → logprob: -6.477514266967773
    7. ' 
' → logprob: -7.602514266967773
    8. '  
' → logprob: -7.852514266967773
    9. '"""

' → logprob: -7.852514266967773
    10. '   
' → logprob: -8.477514266967773

Token 91: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2585482597351074
    2. '<|end|>' → logprob: -1.6335482597351074
    3. '   ' → logprob: -3.8835482597351074
    4. ' =' → logprob: -5.383548259735107
    5. '<|end|>' → logprob: -5.508548259735107
    6. '[' → logprob: -7.258548259735107
    7. '=' → logprob: -7.383548259735107
    8. ':
' → logprob: -7.508548259735107
    9. ' :' → logprob: -7.758548259735107
    10. '```' → logprob: -8.633548736572266

Token 92: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36736035346984863
    2. '    ' → logprob: -1.3673603534698486
    3. '       ' → logprob: -3.4923603534698486
    4. ' ' → logprob: -5.4923601150512695
    5. '    
' → logprob: -5.6173601150512695
    6. '```' → logprob: -5.7423601150512695
    7. '
' → logprob: -5.8673601150512695
    8. ' 
' → logprob: -5.9923601150512695
    9. '     ' → logprob: -6.4923601150512695
    10. 'n' → logprob: -6.6173601150512695

Token 93: ' N' (ID: 478)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -1.625596284866333
    2. '   ' → logprob: -1.875596284866333
    3. ' n' → logprob: -2.000596284866333
    4. 'size' → logprob: -2.000596284866333
    5. 'self' → logprob: -2.125596284866333
    6. ' size' → logprob: -2.125596284866333
    7. 'n' → logprob: -2.250596284866333
    8. ' def' → logprob: -4.125596046447754
    9. 'int' → logprob: -5.250596046447754
    10. '    ' → logprob: -5.250596046447754

Token 94: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5290465950965881
    2. '<|end|>' → logprob: -1.4040465354919434
    3. '    ' → logprob: -2.0290465354919434
    4. ':' → logprob: -4.029046535491943
    5. '<|end|>' → logprob: -5.279046535491943
    6. '  ' → logprob: -5.529046535491943
    7. ' =' → logprob: -6.654046535491943
    8. '```' → logprob: -6.904046535491943
    9. ' :' → logprob: -7.279046535491943
    10. ' ' → logprob: -7.279046535491943

Token 95: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.07178425788879395
    2. ' int' → logprob: -2.696784257888794
    3. '   ' → logprob: -6.946784019470215
    4. ')' → logprob: -7.821784019470215
    5. '):' → logprob: -8.696784019470215
    6. ':int' → logprob: -8.821784019470215
    7. 'self' → logprob: -9.946784019470215
    8. ' )' → logprob: -10.196784019470215
    9. '    ' → logprob: -10.946784019470215
    10. ':' → logprob: -11.321784019470215

Token 96: '):' (ID: 3127)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06639791280031204
    2. '):' → logprob: -3.0663979053497314
    3. ' )' → logprob: -4.8163981437683105
    4. '   ' → logprob: -4.9413981437683105
    5. '):
' → logprob: -6.5663981437683105
    6. ' ):' → logprob: -7.5663981437683105
    7. ' ' → logprob: -8.816397666931152
    8. '    ' → logprob: -9.191397666931152
    9. '<|end|>' → logprob: -9.691397666931152
    10. ':' → logprob: -10.066397666931152

Token 97: ' The' (ID: 623)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.697690486907959
    2. ' The' → logprob: -1.072690486907959
    3. '    ' → logprob: -1.947690486907959
    4. 'The' → logprob: -4.947690486907959
    5. 'int' → logprob: -5.447690486907959
    6. ' int' → logprob: -6.447690486907959
    7. '   ' → logprob: -6.822690486907959
    8. ' An' → logprob: -7.322690486907959
    9. ' None' → logprob: -7.447690486907959
    10. '  ' → logprob: -7.697690486907959

Token 98: ' size' (ID: 2349)
  Prédit: ' size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' size' → logprob: -0.026435449719429016
    2. ' number' → logprob: -4.651435375213623
    3. 'size' → logprob: -4.651435375213623
    4. ' current' → logprob: -5.276435375213623
    5. ' length' → logprob: -6.651435375213623
    6. '   ' → logprob: -8.651435852050781
    7. ' ' → logprob: -9.026435852050781
    8. 'current' → logprob: -9.776435852050781
    9. ' total' → logprob: -9.776435852050781
    10. 'number' → logprob: -10.151435852050781

Token 99: ' of' (ID: 328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15232960879802704
    2. ' of' → logprob: -2.652329683303833
    3. '    ' → logprob: -3.402329683303833
    4. '<|end|>' → logprob: -4.027329444885254
    5. ')' → logprob: -4.527329444885254
    6. '  ' → logprob: -5.902329444885254
    7. ' ' → logprob: -6.402329444885254
    8. ' =' → logprob: -6.402329444885254
    9. '=' → logprob: -7.152329444885254
    10. '       ' → logprob: -7.652329444885254

Token 100: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.28121712803840637
    2. 'the' → logprob: -1.406217098236084
    3. '   ' → logprob: -9.781217575073242
    4. ' ' → logprob: -12.531217575073242
    5. '  ' → logprob: -13.906217575073242
    6. '<|end|>' → logprob: -14.281217575073242
    7. ')' → logprob: -14.406217575073242
    8. '```' → logprob: -14.531217575073242
    9. '	the' → logprob: -14.656217575073242
    10. 'array' → logprob: -14.781217575073242

Token 101: ' array' (ID: 2644)
  Prédit: ' tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tree' → logprob: -0.6759288907051086
    2. 'array' → logprob: -1.4259288311004639
    3. 'tree' → logprob: -1.8009288311004639
    4. ' array' → logprob: -2.800928831100464
    5. 'data' → logprob: -5.425929069519043
    6. 'Fen' → logprob: -5.425929069519043
    7. 'BIT' → logprob: -5.425929069519043
    8. 'input' → logprob: -5.925929069519043
    9. ' BIT' → logprob: -6.050929069519043
    10. '   ' → logprob: -6.550929069519043

Token 102: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18736648559570312
    2. ')' → logprob: -1.8123664855957031
    3. '```' → logprob: -5.687366485595703
    4. '<|end|>' → logprob: -5.937366485595703
    5. '  ' → logprob: -7.812366485595703
    6. '    
' → logprob: -8.062366485595703
    7. '    ' → logprob: -8.562366485595703
    8. '<|end|>' → logprob: -8.812366485595703
    9. '       ' → logprob: -9.562366485595703
    10. '
' → logprob: -9.812366485595703

Token 103: ' the' (ID: 290)
  Prédit: ' which'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' which' → logprob: -0.24252206087112427
    2. ' the' → logprob: -1.9925220012664795
    3. '   ' → logprob: -2.6175220012664795
    4. 'which' → logprob: -5.492522239685059
    5. 'the' → logprob: -7.242522239685059
    6. ' self' → logprob: -7.492522239685059
    7. '    ' → logprob: -8.867522239685059
    8. ' update' → logprob: -9.117522239685059
    9. 'self' → logprob: -9.367522239685059
    10. ' updates' → logprob: -9.742522239685059

Token 104: ' BIT' (ID: 52185)
  Prédit: ' BIT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' BIT' → logprob: -0.2534269690513611
    2. 'BIT' → logprob: -2.128427028656006
    3. ' Binary' → logprob: -3.128427028656006
    4. ' Fen' → logprob: -3.878427028656006
    5. 'Fen' → logprob: -4.253427028656006
    6. ' tree' → logprob: -4.753427028656006
    7. ' fen' → logprob: -5.003427028656006
    8. ' data' → logprob: -6.003427028656006
    9. ' bit' → logprob: -6.003427028656006
    10. 'Binary' → logprob: -6.503427028656006

Token 105: ' (' (ID: 350)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4332854747772217
    2. '   ' → logprob: -1.0582854747772217
    3. ')
' → logprob: -6.058285713195801
    4. '```' → logprob: -7.308285713195801
    5. '<|end|>' → logprob: -7.808285713195801
    6. '.' → logprob: -8.0582857131958
    7. '
' → logprob: -8.1832857131958
    8. '       ' → logprob: -9.1832857131958
    9. '  ' → logprob: -9.6832857131958
    10. '    ' → logprob: -10.0582857131958

Token 106: 'number' (ID: 8096)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.022971386089920998
    2. ')
' → logprob: -4.397971153259277
    3. '   ' → logprob: -4.897971153259277
    4. ' )' → logprob: -6.397971153259277
    5. 'the' → logprob: -7.522971153259277
    6. ' the' → logprob: -8.147971153259277
    7. ' )
' → logprob: -9.647971153259277
    8. '```' → logprob: -9.647971153259277
    9. ').' → logprob: -10.022971153259277
    10. ' ' → logprob: -10.772971153259277

Token 107: ' of' (ID: 328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1801152378320694
    2. 'of' → logprob: -3.180115222930908
    3. '_of' → logprob: -3.680115222930908
    4. ')' → logprob: -4.055115222930908
    5. '=' → logprob: -4.055115222930908
    6. ' of' → logprob: -4.180115222930908
    7. '       ' → logprob: -4.305115222930908
    8. ' ' → logprob: -5.180115222930908
    9. '    ' → logprob: -5.180115222930908
    10. '):' → logprob: -5.305115222930908

Token 108: ' possible' (ID: 4149)
  Prédit: ' elements'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' elements' → logprob: -0.011576583608984947
    2. 'elements' → logprob: -5.1365766525268555
    3. ')' → logprob: -5.6365766525268555
    4. ' )' → logprob: -6.6365766525268555
    5. '   ' → logprob: -7.3865766525268555
    6. ' ' → logprob: -10.886576652526855
    7. ' fen' → logprob: -10.886576652526855
    8. '_elements' → logprob: -11.011576652526855
    9. '    ' → logprob: -11.261576652526855
    10. '  ' → logprob: -11.761576652526855

Token 109: ' indices' (ID: 30378)
  Prédit: ' elements'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' elements' → logprob: -0.014776128344237804
    2. 'elements' → logprob: -4.514776229858398
    3. ' indices' → logprob: -6.639776229858398
    4. ' updates' → logprob: -6.889776229858398
    5. ')' → logprob: -7.514776229858398
    6. 'indices' → logprob: -8.514776229858398
    7. 'updates' → logprob: -8.514776229858398
    8. ' update' → logprob: -9.639776229858398
    9. ' positions' → logprob: -9.764776229858398
    10. '   ' → logprob: -9.889776229858398

Token 110: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05380866676568985
    2. '   ' → logprob: -3.4288086891174316
    3. ').' → logprob: -4.178808689117432
    4. ' )' → logprob: -5.553808689117432
    5. ')
' → logprob: -7.803808689117432
    6. '):' → logprob: -9.303808212280273
    7. '```' → logprob: -10.178808212280273
    8. '):
' → logprob: -10.178808212280273
    9. ' ).' → logprob: -10.178808212280273
    10. ')

' → logprob: -11.053808212280273

Token 111: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08021828532218933
    2. '
' → logprob: -2.8302183151245117
    3. ')' → logprob: -4.705218315124512
    4. '    
' → logprob: -5.330218315124512
    5. '```' → logprob: -5.955218315124512
    6. '"""
' → logprob: -7.705218315124512
    7. ')
' → logprob: -8.205218315124512
    8. '<|end|>' → logprob: -8.830218315124512
    9. '  
' → logprob: -9.080218315124512
    10. '"""' → logprob: -9.080218315124512

Token 112: ' bit' (ID: 3546)
  Prédit: ' tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tree' → logprob: -0.12100870162248611
    2. 'tree' → logprob: -2.2460086345672607
    3. ' bit' → logprob: -5.12100887298584
    4. 'bit' (adapté à ' bit') → logprob: -6.87100887298584
    5. '   ' → logprob: -7.12100887298584
    6. ' data' → logprob: -8.62100887298584
    7. 'data' → logprob: -9.24600887298584
    8. 'BIT' → logprob: -11.74600887298584
    9. ' fen' → logprob: -11.87100887298584
    10. 'arr' → logprob: -11.87100887298584

Token 113: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.15455810725688934
    2. ' =' → logprob: -2.4045581817626953
    3. '   ' → logprob: -3.4045581817626953
    4. ' :' → logprob: -4.654558181762695
    5. ')' → logprob: -5.654558181762695
    6. ' ' → logprob: -6.029558181762695
    7. '  ' → logprob: -7.029558181762695
    8. '=' → logprob: -7.029558181762695
    9. '[]' → logprob: -7.529558181762695
    10. '    ' → logprob: -8.154558181762695

Token 114: 'List' (ID: 950)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.07982532680034637
    2. ' list' → logprob: -2.5798254013061523
    3. 'List' → logprob: -7.829825401306152
    4. '   ' → logprob: -8.454825401306152
    5. 'int' → logprob: -8.829825401306152
    6. ')' → logprob: -8.954825401306152
    7. '[list' → logprob: -10.579825401306152
    8. '[int' → logprob: -11.329825401306152
    9. ':list' → logprob: -12.829825401306152
    10. ' List' → logprob: -13.079825401306152

Token 115: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -9.472211968386546e-05
    2. '   ' → logprob: -10.625094413757324
    3. '<int' → logprob: -10.625094413757324
    4. '```' → logprob: -11.125094413757324
    5. ')' → logprob: -11.500094413757324
    6. '[' → logprob: -12.125094413757324
    7. '):' → logprob: -12.125094413757324
    8. '
' → logprob: -12.375094413757324
    9. 'int' → logprob: -13.250094413757324
    10. '):
' → logprob: -13.375094413757324

Token 116: ']):' (ID: 60705)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0009549325914122164
    2. ']):' → logprob: -7.125955104827881
    3. ' ])' → logprob: -9.500954627990723
    4. ']' → logprob: -10.500954627990723
    5. ')' → logprob: -10.875954627990723
    6. '])]' → logprob: -11.250954627990723
    7. '"])' → logprob: -12.125954627990723
    8. ']):
' → logprob: -13.250954627990723
    9. ')]' → logprob: -13.250954627990723
    10. '[int' → logprob: -13.500954627990723

Token 117: ' Internal' (ID: 24798)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.5748085975646973
    2. 'List' → logprob: -1.4498085975646973
    3. ' [' → logprob: -3.0748085975646973
    4. '[]' → logprob: -3.1998085975646973
    5. ' List' → logprob: -3.1998085975646973
    6. 'list' → logprob: -4.074808597564697
    7. '[List' → logprob: -4.074808597564697
    8. ' []' → logprob: -4.824808597564697
    9. '[int' → logprob: -4.824808597564697
    10. '[' → logprob: -5.199808597564697

Token 118: ' array' (ID: 2644)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.5317705273628235
    2. ' array' → logprob: -1.4067704677581787
    3. '   ' → logprob: -2.7817704677581787
    4. '<|end|>' → logprob: -3.0317704677581787
    5. '[]' → logprob: -4.031770706176758
    6. ' ' → logprob: -4.906770706176758
    7. ')' → logprob: -5.156770706176758
    8. '_list' → logprob: -5.406770706176758
    9. '[' → logprob: -5.531770706176758
    10. '  ' → logprob: -5.656770706176758

Token 119: ' representing' (ID: 25389)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2856709063053131
    2. ' of' → logprob: -2.0356709957122803
    3. ' to' → logprob: -3.0356709957122803
    4. ' representing' → logprob: -3.1606709957122803
    5. ' for' → logprob: -4.660670757293701
    6. ')' → logprob: -5.660670757293701
    7. ' that' → logprob: -5.785670757293701
    8. '[' → logprob: -6.035670757293701
    9. '    ' → logprob: -6.285670757293701
    10. '```' → logprob: -6.660670757293701

Token 120: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.008651564829051495
    2. 'the' → logprob: -4.8836517333984375
    3. '   ' → logprob: -7.1336517333984375
    4. ' ' → logprob: -8.758651733398438
    5. ' fen' → logprob: -10.633651733398438
    6. 'Fen' → logprob: -11.258651733398438
    7. ' Fen' → logprob: -11.758651733398438
    8. ' tree' → logprob: -12.008651733398438
    9. '    ' → logprob: -12.008651733398438
    10. '  ' → logprob: -12.133651733398438

Token 121: ' Binary' (ID: 32672)
  Prédit: ' tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tree' → logprob: -0.1046120822429657
    2. ' fen' → logprob: -3.479612112045288
    3. ' binary' → logprob: -3.979612112045288
    4. 'tree' → logprob: -4.604611873626709
    5. ' BIT' → logprob: -4.604611873626709
    6. ' Fen' → logprob: -4.729611873626709
    7. 'Fen' → logprob: -4.979611873626709
    8. 'BIT' → logprob: -5.479611873626709
    9. ' Binary' → logprob: -5.854611873626709
    10. ' data' → logprob: -6.229611873626709

Token 122: ' Indexed' (ID: 158810)
  Prédit: ' Indexed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Indexed' → logprob: -0.10051310062408447
    2. 'Indexed' → logprob: -2.350512981414795
    3. ' indexed' → logprob: -8.850513458251953
    4. '_' → logprob: -9.225513458251953
    5. '   ' → logprob: -10.225513458251953
    6. ' _' → logprob: -10.975513458251953
    7. ' ' → logprob: -12.475513458251953
    8. 'Index' → logprob: -12.975513458251953
    9. 'indexed' → logprob: -13.600513458251953
    10. '  ' → logprob: -13.850513458251953

Token 123: ' Tree' (ID: 14224)
  Prédit: ' Tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Tree' → logprob: -0.25194936990737915
    2. 'Tree' → logprob: -1.5019493103027344
    3. ' tree' → logprob: -11.251949310302734
    4. ' ' → logprob: -12.376949310302734
    5. '_tree' → logprob: -14.001949310302734
    6. '  ' → logprob: -14.376949310302734
    7. '   ' → logprob: -14.376949310302734
    8. '	Tree' → logprob: -14.751949310302734
    9. ' Trees' → logprob: -15.001949310302734
    10. '_T' → logprob: -16.001949310302734

Token 124: '.
' (ID: 558)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.8754493594169617
    2. '   ' → logprob: -1.1254494190216064
    3. ')' → logprob: -1.3754494190216064
    4. '[' → logprob: -6.500449180603027
    5. '```' → logprob: -7.125449180603027
    6. 'def' → logprob: -7.250449180603027
    7. '.' → logprob: -7.625449180603027
    8. ']

' → logprob: -7.875449180603027
    9. '  ' → logprob: -8.250449180603027
    10. '")' → logprob: -8.625449180603027

Token 125: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24071815609931946
    2. '
' → logprob: -2.115718126296997
    3. ')' → logprob: -2.490718126296997
    4. '    
' → logprob: -5.990718364715576
    5. '```' → logprob: -5.990718364715576
    6. '

' → logprob: -6.365718364715576
    7. '<|end|>' → logprob: -6.865718364715576
    8. ')
' → logprob: -7.490718364715576
    9. 'def' → logprob: -7.615718364715576
    10. ']' → logprob: -7.740718364715576

Token 126: ' """
' (ID: 7037)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.22076670825481415
    2. '   ' → logprob: -2.34576678276062
    3. ')' → logprob: -2.84576678276062
    4. '

' → logprob: -4.345766544342041
    5. '```' → logprob: -4.720766544342041
    6. 'def' → logprob: -5.095766544342041
    7. '    
' → logprob: -5.095766544342041
    8. '
' → logprob: -5.970766544342041
    9. ']' → logprob: -6.220766544342041
    10. '"""' → logprob: -6.845766544342041

Token 127: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39875882863998413
    2. '
' → logprob: -1.148758888244629
    3. '    
' → logprob: -4.773758888244629
    4. 'def' → logprob: -6.273758888244629
    5. ' def' → logprob: -6.773758888244629
    6. ' 
' → logprob: -8.398758888244629
    7. '

' → logprob: -10.273758888244629
    8. '        
' → logprob: -11.148758888244629
    9. '```' → logprob: -11.273758888244629
    10. '[' → logprob: -11.773758888244629

Token 128: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.6391491889953613
    2. 'def' (adapté à ' def') → logprob: -1.1391491889953613
    3. '   ' → logprob: -1.8891491889953613
    4. '
' → logprob: -7.389149188995361
    5. '    
' → logprob: -8.139148712158203
    6. ' 
' → logprob: -10.264148712158203
    7. '    ' → logprob: -11.514148712158203
    8. ' ' → logprob: -12.139148712158203
    9. '	def' → logprob: -12.764148712158203
    10. '  
' → logprob: -13.889148712158203

Token 129: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.8723332285881042
    2. 'init' → logprob: -0.8723332285881042
    3. '__' → logprob: -2.122333288192749
    4. ' init' → logprob: -3.247333288192749
    5. '_init' → logprob: -5.24733304977417
    6. ' def' → logprob: -9.372333526611328
    7. ' _' → logprob: -10.747333526611328
    8. 'def' → logprob: -10.747333526611328
    9. '_' → logprob: -10.872333526611328
    10. '**' → logprob: -12.747333526611328

Token 130: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. ' init' → logprob: -19.75
    3. '_init' → logprob: -21.25
    4. 'inite' → logprob: -21.5
    5. 'int' → logprob: -22.375
    6. 'ini' → logprob: -23.75
    7. '	init' → logprob: -23.75
    8. 'innit' → logprob: -24.125
    9. '(init' → logprob: -24.375
    10. 'inti' → logprob: -24.5

Token 131: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0020392718724906445
    2. '__' → logprob: -6.252039432525635
    3. '(self' → logprob: -9.252038955688477
    4. '__(
' → logprob: -11.502038955688477
    5. '_(' → logprob: -13.502038955688477
    6. '(' → logprob: -13.502038955688477
    7. '__((' → logprob: -13.877038955688477
    8. '__('' → logprob: -15.627038955688477
    9. '___' → logprob: -15.627038955688477
    10. '_' → logprob: -15.627038955688477

Token 132: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.15310683415737e-05
    2. ' self' → logprob: -10.750021934509277
    3. '   ' → logprob: -17.62502098083496
    4. '
' → logprob: -18.87502098083496
    5. '(self' → logprob: -19.87502098083496
    6. '0' → logprob: -19.87502098083496
    7. ' ' → logprob: -20.25002098083496
    8. ',' → logprob: -20.37502098083496
    9. ')' → logprob: -20.87502098083496
    10. '       ' → logprob: -21.12502098083496

Token 133: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.9082251191139221
    2. 'self' → logprob: -1.1582250595092773
    3. ',' → logprob: -1.2832250595092773
    4. ' self' → logprob: -6.033225059509277
    5. ' (' → logprob: -6.283225059509277
    6. '   ' → logprob: -7.408225059509277
    7. ',self' → logprob: -8.283225059509277
    8. ')(' → logprob: -8.658225059509277
    9. ' ,' → logprob: -8.783225059509277
    10. ' ' → logprob: -10.658225059509277

Token 134: ' N' (ID: 478)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.06842254102230072
    2. ' self' → logprob: -2.818422555923462
    3. 'N' → logprob: -5.193422317504883
    4. ' N' → logprob: -7.568422317504883
    5. '   ' → logprob: -8.568422317504883
    6. 'n' → logprob: -8.943422317504883
    7. ' n' → logprob: -10.943422317504883
    8. '       ' → logprob: -11.443422317504883
    9. 'size' → logprob: -11.693422317504883
    10. ' size' → logprob: -12.443422317504883

Token 135: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.012721887789666653
    2. '):
' → logprob: -4.387722015380859
    3. ':' → logprob: -9.01272201538086
    4. ' ):' → logprob: -9.51272201538086
    5. ')' → logprob: -11.51272201538086
    6. '):
' → logprob: -12.76272201538086
    7. '   ' → logprob: -13.13772201538086
    8. ' ):
' → logprob: -15.13772201538086
    9. '):

' → logprob: -15.26272201538086
    10. ' :' → logprob: -15.38772201538086

Token 136: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002533528604544699
    2. ':' → logprob: -9.125253677368164
    3. 'self' → logprob: -10.000253677368164
    4. '   ' → logprob: -10.250253677368164
    5. ' self' → logprob: -11.500253677368164
    6. '        
' → logprob: -11.625253677368164
    7. ',' → logprob: -12.000253677368164
    8. ')' → logprob: -12.125253677368164
    9. '<|end|>' → logprob: -12.500253677368164
    10. '      ' → logprob: -12.875253677368164

Token 137: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10325399041175842
    2. ' self' → logprob: -2.6032540798187256
    3. 'self' → logprob: -3.7282540798187256
    4. '   ' → logprob: -10.603254318237305
    5. '	self' → logprob: -11.978254318237305
    6. '           ' → logprob: -14.103254318237305
    7. ' ' → logprob: -14.603254318237305
    8. '	   ' → logprob: -14.853254318237305
    9. '      ' → logprob: -15.103254318237305
    10. '        ' → logprob: -15.103254318237305

Token 138: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5850311517715454
    2. ' self' → logprob: -0.8350311517715454
    3. '       ' → logprob: -4.710031032562256
    4. '   ' → logprob: -10.335031509399414
    5. ' super' → logprob: -12.460031509399414
    6. 'super' → logprob: -12.585031509399414
    7. ' ' → logprob: -13.335031509399414
    8. '	self' → logprob: -13.585031509399414
    9. ' ' → logprob: -13.710031509399414
    10. '    ' → logprob: -14.585031509399414

Token 139: ' Initializes' (ID: 73569)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.3791862428188324
    2. 'self' → logprob: -1.6291862726211548
    3. '       ' → logprob: -2.1291861534118652
    4. '   ' → logprob: -7.504186153411865
    5. ' ' → logprob: -13.129186630249023
    6. 'Self' → logprob: -13.254186630249023
    7. '	self' → logprob: -13.379186630249023
    8. '    ' → logprob: -14.254186630249023
    9. ' super' → logprob: -14.504186630249023
    10. '        ' → logprob: -14.879186630249023

Token 140: ' the' (ID: 290)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3167702555656433
    2. ' self' → logprob: -1.316770315170288
    3. '       ' → logprob: -5.691770076751709
    4. '   ' → logprob: -9.316770553588867
    5. '(self' → logprob: -10.441770553588867
    6. '	self' → logprob: -12.191770553588867
    7. ' the' → logprob: -14.066770553588867
    8. ' ' → logprob: -14.066770553588867
    9. '    ' → logprob: -14.316770553588867
    10. '     ' → logprob: -14.691770553588867

Token 141: ' BIT' (ID: 52185)
  Prédit: 'BIT'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'BIT' → logprob: -0.5727425217628479
    2. ' BIT' → logprob: -1.0727424621582031
    3. ' bit' → logprob: -2.947742462158203
    4. 'bit' → logprob: -4.072742462158203
    5. 'N' → logprob: -4.572742462158203
    6. ' N' → logprob: -4.697742462158203
    7. ' ' → logprob: -7.322742462158203
    8. 'self' → logprob: -7.572742462158203
    9. ' size' → logprob: -7.697742462158203
    10. ' binary' → logprob: -7.697742462158203

Token 142: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0450297594070435
    2. '(self' → logprob: -1.0450297594070435
    3. '   ' → logprob: -2.045029640197754
    4. ',' → logprob: -2.920029640197754
    5. ' self' → logprob: -2.920029640197754
    6. ' (' → logprob: -3.920029640197754
    7. 'self' → logprob: -4.170029640197754
    8. ' with' → logprob: -4.170029640197754
    9. ':' → logprob: -5.420029640197754
    10. ')' → logprob: -7.045029640197754

Token 143: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.5763675570487976
    2. ' N' → logprob: -0.8263675570487976
    3. 'self' → logprob: -8.451367378234863
    4. ' self' → logprob: -8.826367378234863
    5. ' ' → logprob: -10.576367378234863
    6. ' the' → logprob: -10.701367378234863
    7. '   ' → logprob: -12.076367378234863
    8. ')' → logprob: -12.326367378234863
    9. '0' → logprob: -13.576367378234863
    10. ' a' → logprob: -13.701367378234863

Token 144: ' elements' (ID: 8632)
  Prédit: ' elements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' elements' → logprob: -0.9983854293823242
    2. '+' → logprob: -1.6233854293823242
    3. ')' → logprob: -2.123385429382324
    4. ' +' → logprob: -2.748385429382324
    5. ' )' → logprob: -2.873385429382324
    6. '   ' → logprob: -2.998385429382324
    7. '):
' → logprob: -3.373385429382324
    8. '=' → logprob: -3.873385429382324
    9. '):' → logprob: -4.123385429382324
    10. ' ):
' → logprob: -4.123385429382324

Token 145: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05243779346346855
    2. ':
' → logprob: -3.3024377822875977
    3. '):' → logprob: -4.927437782287598
    4. '):
' → logprob: -5.677437782287598
    5. '       ' → logprob: -5.927437782287598
    6. '   ' → logprob: -7.302437782287598
    7. ' :' → logprob: -9.427437782287598
    8. ',' → logprob: -9.552437782287598
    9. '.' → logprob: -9.802437782287598
    10. ')' → logprob: -10.177437782287598

Token 146: 'indices' (ID: 30992)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.8481649160385132
    2. ')' → logprob: -1.0981649160385132
    3. '):' → logprob: -2.5981650352478027
    4. ' N' → logprob: -2.7231650352478027
    5. 'N' → logprob: -3.2231650352478027
    6. '   ' → logprob: -3.5981650352478027
    7. '       ' → logprob: -4.473165035247803
    8. ' )' → logprob: -5.098165035247803
    9. ' ):
' → logprob: -5.098165035247803
    10. ').' → logprob: -6.473165035247803

Token 147: ' ' (ID: 220)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.28781870007514954
    2. '+' → logprob: -1.4128186702728271
    3. '=' → logprob: -5.662818908691406
    4. '   ' → logprob: -6.412818908691406
    5. ' =' → logprob: -7.162818908691406
    6. '       ' → logprob: -8.037818908691406
    7. '):
' → logprob: -8.912818908691406
    8. '    ' → logprob: -9.162818908691406
    9. ')' → logprob: -9.912818908691406
    10. '):' → logprob: -9.912818908691406

Token 148: '1' (ID: 16)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.43230801820755005
    2. ' +' → logprob: -1.0573079586029053
    3. '=' → logprob: -6.182308197021484
    4. '   ' → logprob: -7.557308197021484
    5. ' =' → logprob: -7.557308197021484
    6. ' plus' → logprob: -8.307308197021484
    7. ')' → logprob: -9.682308197021484
    8. ' ' → logprob: -10.682308197021484
    9. ' N' → logprob: -10.682308197021484
    10. ' from' → logprob: -10.807308197021484

Token 149: ' to' (ID: 316)
  Prédit: '-based'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-based' → logprob: -0.2589084506034851
    2. '   ' → logprob: -2.50890851020813
    3. ' to' → logprob: -3.13390851020813
    4. ' through' → logprob: -3.38390851020813
    5. 'based' → logprob: -3.50890851020813
    6. '       ' → logprob: -4.383908271789551
    7. ',' → logprob: -4.633908271789551
    8. '-index' → logprob: -5.008908271789551
    9. ' based' → logprob: -5.633908271789551
    10. '):
' → logprob: -6.383908271789551

Token 150: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.575986385345459
    2. ' N' → logprob: -0.825986385345459
    3. '   ' → logprob: -10.450986862182617
    4. '    ' → logprob: -11.700986862182617
    5. ' ' → logprob: -11.700986862182617
    6. '	N' → logprob: -14.450986862182617
    7. '  ' → logprob: -15.325986862182617
    8. ')' → logprob: -15.450986862182617
    9. ' ' → logprob: -16.325986862182617
    10. 'self' → logprob: -16.700986862182617

Token 151: ' inclusive' (ID: 29482)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.533785343170166
    2. '):' → logprob: -0.908785343170166
    3. '+' → logprob: -5.283785343170166
    4. ')' → logprob: -5.533785343170166
    5. ').' → logprob: -6.783785343170166
    6. '):
' → logprob: -8.658784866333008
    7. '   ' → logprob: -9.033784866333008
    8. '):

' → logprob: -9.783784866333008
    9. ' +' → logprob: -10.158784866333008
    10. ' ):
' → logprob: -11.158784866333008

Token 152: ').

' (ID: 3991)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5057334899902344
    2. '):' → logprob: -1.0057334899902344
    3. ')' → logprob: -3.8807334899902344
    4. ').' → logprob: -4.630733489990234
    5. ')
' → logprob: -7.630733489990234
    6. ').
' → logprob: -8.755733489990234
    7. '):
' → logprob: -9.505733489990234
    8. '):

' → logprob: -10.380733489990234
    9. '       ' → logprob: -11.130733489990234
    10. '   ' → logprob: -11.505733489990234

Token 153: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003407635958865285
    2. '        
' → logprob: -6.2534074783325195
    3. 'self' → logprob: -7.6284074783325195
    4. '   ' → logprob: -8.00340747833252
    5. '    
' → logprob: -8.37840747833252
    6. '  
' → logprob: -9.25340747833252
    7. '\n' → logprob: -9.37840747833252
    8. '
' → logprob: -9.87840747833252
    9. ' self' → logprob: -10.37840747833252
    10. ' 
' → logprob: -10.62840747833252

Token 154: ' Args' (ID: 39185)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0725562795996666
    2. ' self' → logprob: -3.322556257247925
    3. 'self' → logprob: -3.447556257247925
    4. '   ' → logprob: -6.197556495666504
    5. ' ' → logprob: -11.072556495666504
    6. '	self' → logprob: -11.072556495666504
    7. ' super' → logprob: -12.072556495666504
    8. '        
' → logprob: -12.322556495666504
    9. '	' → logprob: -12.447556495666504
    10. 'super' → logprob: -12.572556495666504

Token 155: ':
' (ID: 734)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04374000430107117
    2. ':' → logprob: -3.4187400341033936
    3. '   ' → logprob: -5.2937397956848145
    4. '):' → logprob: -6.0437397956848145
    5. '       ' → logprob: -6.6687397956848145
    6. 'self' → logprob: -7.5437397956848145
    7. '=' → logprob: -7.9187397956848145
    8. '(self' → logprob: -9.543740272521973
    9. '[' → logprob: -9.668740272521973
    10. ',
' → logprob: -10.168740272521973

Token 156: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2175183892250061
    2. 'self' → logprob: -1.8425183296203613
    3. '           ' → logprob: -3.4675183296203613
    4. ' self' → logprob: -5.217518329620361
    5. '   ' → logprob: -8.34251880645752
    6. '        ' → logprob: -9.84251880645752
    7. '(self' → logprob: -9.96751880645752
    8. '               ' → logprob: -10.34251880645752
    9. ',' → logprob: -11.21751880645752
    10. '	       ' → logprob: -11.34251880645752

Token 157: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' (adapté à ' N') → logprob: -0.7330873608589172
    2. ' N' → logprob: -1.1080873012542725
    3. 'self' → logprob: -1.9830873012542725
    4. ' self' → logprob: -2.9830873012542725
    5. '       ' → logprob: -7.358087539672852
    6. '   ' → logprob: -8.108087539672852
    7. 'n' → logprob: -9.733087539672852
    8. ' ' → logprob: -10.733087539672852
    9. '    ' → logprob: -10.733087539672852
    10. 'int' → logprob: -10.858087539672852

Token 158: ' (' (ID: 350)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.17563103139400482
    2. ':' → logprob: -1.925631046295166
    3. '):
' → logprob: -4.300631046295166
    4. '   ' → logprob: -7.300631046295166
    5. ':int' → logprob: -7.550631046295166
    6. ' ):' → logprob: -7.925631046295166
    7. ' :' → logprob: -9.175630569458008
    8. ')' → logprob: -10.675630569458008
    9. '```' → logprob: -11.925630569458008
    10. '    ' → logprob: -12.050630569458008

Token 159: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0076276883482933044
    2. ' int' → logprob: -5.132627487182617
    3. ')' → logprob: -6.757627487182617
    4. ':int' → logprob: -8.132627487182617
    5. '=int' → logprob: -9.007627487182617
    6. '[int' → logprob: -10.007627487182617
    7. '):
' → logprob: -10.382627487182617
    8. '<int' → logprob: -11.882627487182617
    9. '):' → logprob: -11.882627487182617
    10. '(int' → logprob: -12.007627487182617

Token 160: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003584272228181362
    2. '):
' → logprob: -6.003584384918213
    3. ')' → logprob: -7.003584384918213
    4. ' ):' → logprob: -8.628583908081055
    5. ':' → logprob: -11.753583908081055
    6. '   ' → logprob: -12.378583908081055
    7. '):

' → logprob: -12.503583908081055
    8. '):
' → logprob: -12.878583908081055
    9. ' )' → logprob: -14.878583908081055
    10. '<|end|>' → logprob: -15.003583908081055

Token 161: ' Number' (ID: 9184)
  Prédit: ' N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.011088027618825436
    2. 'N' → logprob: -4.511087894439697
    3. '    ' → logprob: -10.761088371276855
    4. '       ' → logprob: -12.386088371276855
    5. '   ' → logprob: -12.636088371276855
    6. ' ' → logprob: -13.011088371276855
    7. '        ' → logprob: -13.136088371276855
    8. ' ' → logprob: -13.636088371276855
    9. 'n' → logprob: -13.886088371276855
    10. ' n' → logprob: -13.886088371276855

Token 162: ' of' (ID: 328)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5452550053596497
    2. ')' → logprob: -1.1702549457550049
    3. '   ' → logprob: -3.795254945755005
    4. ' ' → logprob: -4.545255184173584
    5. '):' → logprob: -4.545255184173584
    6. '       ' → logprob: -4.670255184173584
    7. ':' → logprob: -4.795255184173584
    8. ' =' → logprob: -4.795255184173584
    9. ' of' → logprob: -5.045255184173584
    10. '[' → logprob: -5.420255184173584

Token 163: ' elements' (ID: 8632)
  Prédit: ' elements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' elements' → logprob: -0.0017652629176154733
    2. 'elements' → logprob: -7.001765251159668
    3. ' ' → logprob: -7.376765251159668
    4. ' indices' → logprob: -8.876765251159668
    5. ')' → logprob: -10.001765251159668
    6. ' )' → logprob: -11.626765251159668
    7. '_elements' → logprob: -12.126765251159668
    8. 'indices' → logprob: -12.251765251159668
    9. ' data' → logprob: -12.376765251159668
    10. ' nodes' → logprob: -12.626765251159668

Token 164: ' for' (ID: 395)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.34393563866615295
    2. '):
' → logprob: -1.3439356088638306
    3. '   ' → logprob: -4.093935489654541
    4. ')' → logprob: -4.343935489654541
    5. ':' → logprob: -9.0939359664917
    6. '       ' → logprob: -9.3439359664917
    7. ' ):' → logprob: -9.3439359664917
    8. '):
' → logprob: -9.8439359664917
    9. '```' → logprob: -9.9689359664917
    10. ' ):
' → logprob: -10.5939359664917

Token 165: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.0006521515315398574
    2. 'the' → logprob: -7.875652313232422
    3. ' self' → logprob: -8.625652313232422
    4. ' initialization' → logprob: -10.125652313232422
    5. ' indexing' → logprob: -11.750652313232422
    6. ' space' → logprob: -12.000652313232422
    7. ' this' → logprob: -12.125652313232422
    8. ' which' → logprob: -12.125652313232422
    9. ' update' → logprob: -12.125652313232422
    10. ')' → logprob: -12.125652313232422

Token 166: ' BIT' (ID: 52185)
  Prédit: ' BIT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' BIT' → logprob: -0.47738218307495117
    2. 'BIT' → logprob: -0.9773821830749512
    3. ' Binary' → logprob: -6.102382183074951
    4. 'Binary' → logprob: -7.727382183074951
    5. '_BIT' → logprob: -8.60238265991211
    6. ' bit' → logprob: -9.10238265991211
    7. 'Fen' → logprob: -9.35238265991211
    8. 'bit' → logprob: -9.85238265991211
    9. ' Fen' → logprob: -10.35238265991211
    10. ' tree' → logprob: -10.47738265991211

Token 167: ' structure' (ID: 8866)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.356168657541275
    2. '):
' → logprob: -1.2311686277389526
    3. ')' → logprob: -5.231168746948242
    4. '   ' → logprob: -6.106168746948242
    5. '):
' → logprob: -9.481168746948242
    6. '       ' → logprob: -10.606168746948242
    7. ':' → logprob: -12.231168746948242
    8. '```' → logprob: -12.731168746948242
    9. '):

' → logprob: -12.856168746948242
    10. ' ):' → logprob: -13.356168746948242

Token 168: '.
' (ID: 558)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.20836222171783447
    2. '):
' → logprob: -1.7083622217178345
    3. ')' → logprob: -5.458362102508545
    4. '   ' → logprob: -5.958362102508545
    5. '):
' → logprob: -9.833362579345703
    6. ':' → logprob: -11.458362579345703
    7. '       ' → logprob: -12.208362579345703
    8. '):

' → logprob: -12.833362579345703
    9. '```' → logprob: -12.833362579345703
    10. '.' → logprob: -13.208362579345703

Token 169: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6940374970436096
    2. ')' → logprob: -0.9440374970436096
    3. '   ' → logprob: -2.444037437438965
    4. '):
' → logprob: -4.069037437438965
    5. '):' → logprob: -5.444037437438965
    6. '    
' → logprob: -7.569037437438965
    7. '        
' → logprob: -7.569037437438965
    8. '```' → logprob: -7.569037437438965
    9. '
' → logprob: -8.069037437438965
    10. ')
' → logprob: -8.569037437438965

Token 170: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00163662014529109
    2. 'self' → logprob: -6.626636505126953
    3. ' self' → logprob: -8.501636505126953
    4. '   ' → logprob: -10.001636505126953
    5. ')' → logprob: -10.751636505126953
    6. '):
' → logprob: -11.376636505126953
    7. '```' → logprob: -11.751636505126953
    8. '           ' → logprob: -12.126636505126953
    9. '        
' → logprob: -12.501636505126953
    10. '      ' → logprob: -13.126636505126953

Token 171: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -5.013994814362377e-05
    2. 'self' → logprob: -10.37505054473877
    3. ' self' → logprob: -12.12505054473877
    4. '
' → logprob: -12.12505054473877
    5. '        
' → logprob: -12.50005054473877
    6. '	' → logprob: -13.37505054473877
    7. '   ' → logprob: -14.00005054473877
    8. '	   ' → logprob: -14.87505054473877
    9. '```' → logprob: -15.00005054473877
    10. '    
' → logprob: -15.25005054473877

Token 172: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.09780309349298477
    2. ' self' → logprob: -2.8478031158447266
    3. '       ' → logprob: -3.3478031158447266
    4. '   ' → logprob: -10.222803115844727
    5. 'super' → logprob: -13.722803115844727
    6. '	self' → logprob: -13.972803115844727
    7. ' ' → logprob: -14.597803115844727
    8. 'def' → logprob: -16.097803115844727
    9. ' super' → logprob: -16.097803115844727
    10. '    ' → logprob: -16.472803115844727

Token 173: '.N' (ID: 4439)
  Prédit: '.N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.N' → logprob: -0.1430889070034027
    2. '.' → logprob: -2.0180888175964355
    3. ' .' → logprob: -8.018089294433594
    4. '.bit' → logprob: -10.268089294433594
    5. '.n' → logprob: -11.018089294433594
    6. '.B' → logprob: -11.268089294433594
    7. 'N' → logprob: -12.393089294433594
    8. '.T' → logprob: -13.143089294433594
    9. '   ' → logprob: -13.268089294433594
    10. ' ' → logprob: -13.768089294433594

Token 174: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931533813476562
    2. ' =' → logprob: -0.6931533813476562
    3. '=N' → logprob: -12.318153381347656
    4. '    ' → logprob: -13.943153381347656
    5. '   ' → logprob: -14.818153381347656
    6. ' ' → logprob: -15.068153381347656
    7. '        ' → logprob: -15.818153381347656
    8. '       ' → logprob: -16.443153381347656
    9. '=int' → logprob: -16.943153381347656
    10. ')' → logprob: -17.568153381347656

Token 175: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.38687387108802795
    2. 'N' → logprob: -1.1368738412857056
    3. '	N' → logprob: -13.511874198913574
    4. '    ' → logprob: -14.511874198913574
    5. ' ' → logprob: -14.761874198913574
    6. '   ' → logprob: -15.011874198913574
    7. ' ' → logprob: -15.136874198913574
    8. '[' → logprob: -17.886873245239258
    9. '[N' → logprob: -18.011873245239258
    10. '_N' → logprob: -18.386873245239258

Token 176: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -7.755678961984813e-05
    2. 'self' → logprob: -9.625077247619629
    3. '
' → logprob: -12.000077247619629
    4. ',' → logprob: -13.500077247619629
    5. '<|end|>' → logprob: -13.625077247619629
    6. ' self' → logprob: -14.000077247619629
    7. '   ' → logprob: -14.500077247619629
    8. '```' → logprob: -15.000077247619629
    9. '           ' → logprob: -15.750077247619629
    10. '	' → logprob: -16.250078201293945

Token 177: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -5.598092684522271e-05
    2. 'self' → logprob: -10.125056266784668
    3. '   ' → logprob: -11.375056266784668
    4. ' self' → logprob: -14.000056266784668
    5. '	' → logprob: -14.250056266784668
    6. ',' → logprob: -14.375056266784668
    7. '<|end|>' → logprob: -14.375056266784668
    8. '
' → logprob: -15.000056266784668
    9. '           ' → logprob: -15.000056266784668
    10. '```' → logprob: -15.375056266784668

Token 178: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.002650093985721469
    2. ' self' → logprob: -6.127650260925293
    3. '       ' → logprob: -7.877650260925293
    4. '   ' → logprob: -9.377650260925293
    5. '	self' → logprob: -15.002650260925293
    6. 'bit' → logprob: -15.752650260925293
    7. '    ' → logprob: -16.002649307250977
    8. ' ' → logprob: -16.002649307250977
    9. '     ' → logprob: -16.252649307250977
    10. '           ' → logprob: -16.377649307250977

Token 179: '.bit' (ID: 61866)
  Prédit: '.bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.bit' → logprob: -0.0006173660513013601
    2. '.' → logprob: -7.500617504119873
    3. ' .' → logprob: -10.000617027282715
    4. '.bits' → logprob: -11.500617027282715
    5. '.b' → logprob: -12.625617027282715
    6. 'bit' → logprob: -12.625617027282715
    7. ' bit' → logprob: -14.500617027282715
    8. '.bet' → logprob: -14.875617027282715
    9. '.bitmap' → logprob: -15.750617027282715
    10. '.bt' → logprob: -16.12561798095703

Token 180: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03804171830415726
    2. ' =' → logprob: -3.288041830062866
    3. '=[' → logprob: -15.913042068481445
    4. '[' → logprob: -16.663042068481445
    5. ' ' → logprob: -17.538042068481445
    6. ' =[' → logprob: -18.163042068481445
    7. '   ' → logprob: -18.538042068481445
    8. '＝' → logprob: -20.288042068481445
    9. '=}' → logprob: -20.413042068481445
    10. '	' → logprob: -20.413042068481445

Token 181: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.12692862749099731
    2. ' [' → logprob: -2.1269285678863525
    3. '   ' → logprob: -14.876928329467773
    4. '[N' → logprob: -16.251928329467773
    5. ' ' → logprob: -17.501928329467773
    6. '[int' → logprob: -17.626928329467773
    7. '[self' → logprob: -18.001928329467773
    8. '[n' → logprob: -18.626928329467773
    9. ' ' → logprob: -19.251928329467773
    10. '0' → logprob: -19.251928329467773

Token 182: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.494741632603109e-05
    2. ' ' → logprob: -9.37508487701416
    3. '   ' → logprob: -17.750085830688477
    4. '۰' → logprob: -18.875085830688477
    5. '00' → logprob: -19.500085830688477
    6. '000' → logprob: -19.750085830688477
    7. '  ' → logprob: -19.875085830688477
    8. '    ' → logprob: -20.875085830688477
    9. '       ' → logprob: -21.250085830688477
    10. '０' → logprob: -21.437585830688477

Token 183: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0015611659036949277
    2. ']*(' → logprob: -6.501561164855957
    3. ']*' → logprob: -9.751561164855957
    4. ']+' → logprob: -14.626561164855957
    5. ' ]' → logprob: -16.251562118530273
    6. ' for' → logprob: -17.251562118530273
    7. '*' → logprob: -17.501562118530273
    8. ')' → logprob: -17.876562118530273
    9. '*(' → logprob: -18.001562118530273
    10. 'for' → logprob: -18.876562118530273

Token 184: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.023865975439548492
    2. ']*(' → logprob: -3.7738659381866455
    3. ']*' → logprob: -7.773866176605225
    4. ' *' → logprob: -9.523865699768066
    5. ' for' → logprob: -10.273865699768066
    6. '*(' → logprob: -10.523865699768066
    7. '*' → logprob: -10.648865699768066
    8. ']+' → logprob: -11.398865699768066
    9. '   ' → logprob: -11.523865699768066
    10. 'for' → logprob: -12.273865699768066

Token 185: ' (' (ID: 350)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0033855263609439135
    2. ' (' → logprob: -5.753385543823242
    3. '((' → logprob: -9.753385543823242
    4. '(' → logprob: -9.753385543823242
    5. '(n' → logprob: -9.878385543823242
    6. '   ' → logprob: -10.503385543823242
    7. '(self' → logprob: -11.878385543823242
    8. '(NS' → logprob: -12.878385543823242
    9. '  ' → logprob: -14.003385543823242
    10. ' ' → logprob: -14.378385543823242

Token 186: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.693920373916626
    2. '(N' → logprob: -0.693920373916626
    3. 'self' → logprob: -8.068920135498047
    4. ' (' → logprob: -8.568920135498047
    5. ' N' → logprob: -9.193920135498047
    6. '(self' → logprob: -9.318920135498047
    7. '   ' → logprob: -9.568920135498047
    8. '(' → logprob: -12.568920135498047
    9. '[N' → logprob: -13.568920135498047
    10. ' ' → logprob: -14.068920135498047

Token 187: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0024758970830589533
    2. ' +' → logprob: -6.002475738525391
    3. '+
' → logprob: -15.50247573852539
    4. ' plus' → logprob: -18.25247573852539
    5. '＋' → logprob: -18.50247573852539
    6. ' +
' → logprob: -18.87747573852539
    7. ' ' → logprob: -19.62747573852539
    8. '+)' → logprob: -19.75247573852539
    9. '   ' → logprob: -19.87747573852539
    10. '+n' → logprob: -19.87747573852539

Token 188: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7729658540920354e-05
    2. ' ' → logprob: -10.500027656555176
    3. '2' → logprob: -15.625027656555176
    4. '   ' → logprob: -18.125028610229492
    5. '```' → logprob: -18.250028610229492
    6. '7' → logprob: -19.625028610229492
    7. '１' → logprob: -20.062528610229492
    8. '10' → logprob: -20.312528610229492
    9. '5' → logprob: -20.312528610229492
    10. '
' → logprob: -20.375028610229492

Token 189: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7697225252486533e-06
    2. '2' → logprob: -12.875003814697266
    3. ' ' → logprob: -13.875003814697266
    4. '
' → logprob: -16.000003814697266
    5. '```' → logprob: -16.750003814697266
    6. '   ' → logprob: -17.062503814697266
    7. '10' → logprob: -17.937503814697266
    8. '

' → logprob: -18.312503814697266
    9. '5' → logprob: -18.375003814697266
    10. '１' → logprob: -18.875003814697266

Token 190: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.081584716506768e-05
    2. ')
' → logprob: -11.250020980834961
    3. '<|end|>' → logprob: -12.375020980834961
    4. ' )' → logprob: -13.250020980834961
    5. '       ' → logprob: -13.875020980834961
    6. '   ' → logprob: -15.125020980834961
    7. ')

' → logprob: -15.750020980834961
    8. '),' → logprob: -16.87502098083496
    9. ')return' → logprob: -17.50002098083496
    10. '<|end|>' → logprob: -17.50002098083496

Token 191: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.24507704377174377
    2. '<|end|>' → logprob: -1.9950770139694214
    3. '   ' → logprob: -2.995077133178711
    4. '    
' → logprob: -3.745077133178711
    5. 'def' → logprob: -6.120077133178711
    6. '<|end|>' → logprob: -6.245077133178711
    7. '  
' → logprob: -6.995077133178711
    8. '	
' → logprob: -7.370077133178711
    9. '	def' → logprob: -7.745077133178711
    10. '

' → logprob: -7.995077133178711

Token 192: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1295727640390396
    2. 'def' → logprob: -2.129572868347168
    3. ' def' → logprob: -6.504572868347168
    4. '   ' → logprob: -7.504572868347168
    5. '    
' → logprob: -8.004572868347168
    6. '<|end|>' → logprob: -9.004572868347168
    7. '

' → logprob: -10.004572868347168
    8. '
' → logprob: -10.379572868347168
    9. '	def' → logprob: -11.129572868347168
    10. '	
' → logprob: -11.629572868347168

Token 193: ' ' (ID: 220)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1633647084236145
    2. '
' → logprob: -2.2883646488189697
    3. '<|end|>' → logprob: -4.038364887237549
    4. '   ' → logprob: -4.288364887237549
    5. ')' → logprob: -5.038364887237549
    6. ' def' → logprob: -5.163364887237549
    7. '```' → logprob: -5.913364887237549
    8. '1' → logprob: -7.163364887237549
    9. '

' → logprob: -7.538364887237549
    10. '    
' → logprob: -7.913364887237549

Token 194: '1' (ID: 16)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.11715641617774963
    2. 'N' → logprob: -2.867156505584717
    3. '1' → logprob: -3.492156505584717
    4. 'self' → logprob: -4.242156505584717
    5. 'def' → logprob: -5.617156505584717
    6. '```' → logprob: -6.992156505584717
    7. ')' → logprob: -7.117156505584717
    8. '0' → logprob: -7.242156505584717
    9. '(' → logprob: -7.867156505584717
    10. '   ' → logprob: -7.992156505584717

Token 195: '-based' (ID: 8235)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4528641998767853
    2. ']' → logprob: -1.452864170074463
    3. '<|end|>' → logprob: -2.577864170074463
    4. '   ' → logprob: -4.202864170074463
    5. '[' → logprob: -4.452864170074463
    6. ' )' → logprob: -5.202864170074463
    7. '       ' → logprob: -5.452864170074463
    8. ' ]' → logprob: -5.452864170074463
    9. '-index' → logprob: -6.077864170074463
    10. '    ' → logprob: -6.077864170074463

Token 196: ' indexing' (ID: 105989)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 197: '
    
' (ID: 15698)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13308638334274292
    2. '<|end|>' → logprob: -2.6330864429473877
    3. '   ' → logprob: -3.3830864429473877
    4. '    
' → logprob: -5.008086204528809
    5. 'def' → logprob: -5.633086204528809
    6. ')' → logprob: -6.258086204528809
    7. '       ' → logprob: -7.008086204528809
    8. '

' → logprob: -7.133086204528809
    9. ' def' → logprob: -7.258086204528809
    10. ' 
' → logprob: -7.508086204528809

Token 198: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2774740755558014
    2. '   ' → logprob: -1.777474045753479
    3. '    
' → logprob: -3.1524741649627686
    4. 'def' → logprob: -3.6524741649627686
    5. ' def' → logprob: -6.1524739265441895
    6. '	def' → logprob: -6.5274739265441895
    7. '	
' → logprob: -8.402474403381348
    8. '

' → logprob: -8.527474403381348
    9. '        
' → logprob: -8.652474403381348
    10. ' 
' → logprob: -8.902474403381348

Token 199: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -7.588793960167095e-05
    2. ' def' → logprob: -9.500076293945312
    3. '   ' → logprob: -13.875076293945312
    4. '	def' → logprob: -18.250076293945312
    5. 'de' → logprob: -19.625076293945312
    6. '
' → logprob: -20.125076293945312
    7. ' ' → logprob: -21.125076293945312
    8. '    
' → logprob: -22.125076293945312
    9. 'd' → logprob: -22.750076293945312
    10. '  ' → logprob: -23.625076293945312

Token 200: ' add' (ID: 1147)
  Prédit: ' update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' update' → logprob: -0.020200932398438454
    2. '_update' → logprob: -4.645200729370117
    3. ' add' → logprob: -5.145200729370117
    4. 'update' → logprob: -6.395200729370117
    5. ' query' → logprob: -6.895200729370117
    6. ' sum' → logprob: -7.145200729370117
    7. ' _' → logprob: -7.395200729370117
    8. ' def' → logprob: -8.895200729370117
    9. '_add' → logprob: -9.145200729370117
    10. '_' → logprob: -9.395200729370117

Token 201: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.12709198892116547
    2. '(' → logprob: -2.127091884613037
    3. ' (' → logprob: -9.002092361450195
    4. '(i' → logprob: -11.252092361450195
    5. '(s' → logprob: -12.002092361450195
    6. '(sel' → logprob: -12.002092361450195
    7. '(idx' → logprob: -12.752092361450195
    8. '(index' → logprob: -12.877092361450195
    9. '(x' → logprob: -13.127092361450195
    10. '   ' → logprob: -13.377092361450195

Token 202: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07170514762401581
    2. '(self' → logprob: -2.8217051029205322
    3. ' ,' → logprob: -6.071705341339111
    4. ')' → logprob: -6.446705341339111
    5. 'self' → logprob: -6.571705341339111
    6. '(index' → logprob: -6.696705341339111
    7. '(idx' → logprob: -7.196705341339111
    8. '(i' → logprob: -7.321705341339111
    9. '(' → logprob: -7.571705341339111
    10. '   ' → logprob: -7.696705341339111

Token 203: ' x' (ID: 1215)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.1016687154769897
    2. 'idx' → logprob: -1.1016687154769897
    3. ' idx' → logprob: -1.8516687154769897
    4. ' i' → logprob: -1.8516687154769897
    5. 'index' → logprob: -4.851668834686279
    6. 'self' → logprob: -5.601668834686279
    7. ' index' → logprob: -5.976668834686279
    8. 'p' → logprob: -6.476668834686279
    9. ' p' → logprob: -6.476668834686279
    10. 'x' → logprob: -6.601668834686279

Token 204: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020783171930816025
    2. ' ,' → logprob: -8.500207901000977
    3. ',x' → logprob: -13.375207901000977
    4. '   ' → logprob: -13.500207901000977
    5. ',value' → logprob: -15.000207901000977
    6. ',int' → logprob: -16.000207901000977
    7. 'self' → logprob: -16.250207901000977
    8. ',self' → logprob: -16.250207901000977
    9. ',val' → logprob: -16.500207901000977
    10. ',
' → logprob: -16.500207901000977

Token 205: ' a' (ID: 261)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.025040116161108017
    2. ' v' → logprob: -4.025040149688721
    3. 'val' → logprob: -5.150040149688721
    4. 'delta' → logprob: -7.275040149688721
    5. ' val' → logprob: -8.650039672851562
    6. 'y' → logprob: -9.025039672851562
    7. ' delta' → logprob: -10.400039672851562
    8. 'w' → logprob: -11.150039672851562
    9. 'd' → logprob: -11.400039672851562
    10. '1' → logprob: -11.525039672851562

Token 206: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02635127305984497
    2. '):
' → logprob: -3.6513512134552
    3. ')' → logprob: -10.526350975036621
    4. ' ):' → logprob: -11.276350975036621
    5. '):
' → logprob: -12.776350975036621
    6. ':' → logprob: -13.526350975036621
    7. 'd' → logprob: -13.526350975036621
    8. 'dd' → logprob: -13.901350975036621
    9. 'm' → logprob: -14.151350975036621
    10. '=' → logprob: -14.526350975036621

Token 207: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10016611218452454
    2. ':' → logprob: -2.600166082382202
    3. '):' → logprob: -4.350166320800781
    4. '   ' → logprob: -6.100166320800781
    5. '<|end|>' → logprob: -6.100166320800781
    6. '):
' → logprob: -6.225166320800781
    7. ')' → logprob: -7.225166320800781
    8. ':
' → logprob: -7.350166320800781
    9. ' :' → logprob: -9.600166320800781
    10. '():' → logprob: -9.975166320800781

Token 208: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04351211339235306
    2. '   ' → logprob: -3.5435121059417725
    3. '<|end|>' → logprob: -4.918512344360352
    4. '
' → logprob: -5.793512344360352
    5. ')' → logprob: -7.043512344360352
    6. ':' → logprob: -7.293512344360352
    7. ':
' → logprob: -8.168512344360352
    8. ' 
' → logprob: -8.543512344360352
    9. ' ' → logprob: -8.543512344360352
    10. '#' → logprob: -8.793512344360352

Token 209: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007884251535870135
    2. '   ' → logprob: -7.75078821182251
    3. '    ' → logprob: -9.125788688659668
    4. '        ' → logprob: -9.250788688659668
    5. '      ' → logprob: -10.250788688659668
    6. ' x' → logprob: -10.375788688659668
    7. '           ' → logprob: -10.625788688659668
    8. '     ' → logprob: -11.625788688659668
    9. ' while' → logprob: -11.875788688659668
    10. '        
' → logprob: -12.125788688659668

Token 210: ' Adds' (ID: 54605)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006457666400820017
    2. ' while' → logprob: -5.756457805633545
    3. '   ' → logprob: -6.756457805633545
    4. '    ' → logprob: -8.006457328796387
    5. '        ' → logprob: -8.131457328796387
    6. 'while' → logprob: -8.256457328796387
    7. '        
' → logprob: -8.506457328796387
    8. '           ' → logprob: -8.631457328796387
    9. '      ' → logprob: -9.131457328796387
    10. '    
' → logprob: -9.631457328796387

Token 211: ' value' (ID: 1432)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.01841014251112938
    2. 'a' → logprob: -4.0184102058410645
    3. '<|end|>' → logprob: -9.643409729003906
    4. ' x' → logprob: -10.268409729003906
    5. '   ' → logprob: -10.393409729003906
    6. '    ' → logprob: -10.518409729003906
    7. ' ' → logprob: -10.643409729003906
    8. ' an' → logprob: -11.268409729003906
    9. ')' → logprob: -11.393409729003906
    10. 'x' → logprob: -11.393409729003906

Token 212: ' '' (ID: 461)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.3499438762664795
    2. ' a' → logprob: -2.0999438762664795
    3. ' x' → logprob: -2.5999438762664795
    4. ' ' → logprob: -2.9749438762664795
    5. '   ' → logprob: -3.8499438762664795
    6. '    ' → logprob: -5.099944114685059
    7. '<|end|>' → logprob: -5.224944114685059
    8. ')' → logprob: -5.849944114685059
    9. '(x' → logprob: -5.849944114685059
    10. ' (' → logprob: -6.349944114685059

Token 213: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5760159492492676
    2. ' a' → logprob: -0.8260159492492676
    3. '   ' → logprob: -10.07601547241211
    4. ' ' → logprob: -11.57601547241211
    5. ')' → logprob: -11.70101547241211
    6. '    ' → logprob: -12.20101547241211
    7. '       ' → logprob: -12.82601547241211
    8. ' to' → logprob: -13.07601547241211
    9. '')' → logprob: -13.45101547241211
    10. ''a' → logprob: -13.82601547241211

Token 214: ''' (ID: 6)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.14489828050136566
    2. ')' → logprob: -2.1448981761932373
    3. '   ' → logprob: -4.644898414611816
    4. ''' → logprob: -5.394898414611816
    5. ',' → logprob: -6.394898414611816
    6. ' at' → logprob: -7.769898414611816
    7. 'to' → logprob: -7.769898414611816
    8. '       ' → logprob: -8.644898414611816
    9. '```' → logprob: -8.894898414611816
    10. '    ' → logprob: -8.894898414611816

Token 215: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.0007768734358251095
    2. '   ' → logprob: -8.250777244567871
    3. ' at' → logprob: -8.500777244567871
    4. ',' → logprob: -8.875777244567871
    5. ')' → logprob: -10.125777244567871
    6. 'to' → logprob: -10.125777244567871
    7. ' ' → logprob: -10.625777244567871
    8. '       ' → logprob: -11.000777244567871
    9. '<|end|>' → logprob: -11.500777244567871
    10. '    ' → logprob: -12.000777244567871

Token 216: ' index' (ID: 3472)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.007633720524609089
    2. 'x' → logprob: -4.882633686065674
    3. ' self' → logprob: -11.382634162902832
    4. ' ' → logprob: -11.882634162902832
    5. ' the' → logprob: -12.507634162902832
    6. '	x' → logprob: -13.382634162902832
    7. 'self' → logprob: -14.132634162902832
    8. ')' → logprob: -14.382634162902832
    9. '(x' → logprob: -14.507634162902832
    10. '<|end|>' → logprob: -14.632634162902832

Token 217: ' '' (ID: 461)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.006299064960330725
    2. 'x' → logprob: -5.881299018859863
    3. ' ' → logprob: -5.881299018859863
    4. '_' → logprob: -7.631299018859863
    5. '=' → logprob: -10.631299018859863
    6. ')' → logprob: -10.756299018859863
    7. ' (' → logprob: -10.756299018859863
    8. '   ' → logprob: -11.131299018859863
    9. ' `' → logprob: -11.131299018859863
    10. '_x' → logprob: -11.131299018859863

Token 218: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.061968132853507996
    2. ' x' → logprob: -2.8119680881500244
    3. ')x' → logprob: -15.811967849731445
    4. '   ' → logprob: -16.561967849731445
    5. ')' → logprob: -17.061967849731445
    6. ''x' → logprob: -17.061967849731445
    7. ' ' → logprob: -17.186967849731445
    8. '	x' → logprob: -17.186967849731445
    9. '`' → logprob: -17.186967849731445
    10. '{x' → logprob: -17.561967849731445

Token 219: ''' (ID: 6)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2825804948806763
    2. '):
' → logprob: -1.2825804948806763
    3. '):' → logprob: -2.0325803756713867
    4. ')' → logprob: -2.1575803756713867
    5. '       ' → logprob: -2.1575803756713867
    6. '
' → logprob: -3.7825803756713867
    7. ' +=' → logprob: -4.032580375671387
    8. ':' → logprob: -5.157580375671387
    9. ' ' → logprob: -5.532580375671387
    10. '    ' → logprob: -5.532580375671387

Token 220: ' in' (ID: 306)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.13654066622257233
    2. '   ' → logprob: -2.761540651321411
    3. '       ' → logprob: -3.511540651321411
    4. ':
' → logprob: -4.01154088973999
    5. '<|end|>' → logprob: -5.76154088973999
    6. ')' → logprob: -6.01154088973999
    7. '.' → logprob: -6.51154088973999
    8. '):' → logprob: -6.63654088973999
    9. '):
' → logprob: -6.76154088973999
    10. ' in' → logprob: -7.26154088973999

Token 221: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.5124872922897339
    2. 'self' → logprob: -1.6374872922897339
    3. ' self' → logprob: -1.6374872922897339
    4. 'the' → logprob: -5.262487411499023
    5. '   ' → logprob: -5.387487411499023
    6. ')' → logprob: -7.137487411499023
    7. '    ' → logprob: -7.762487411499023
    8. '       ' → logprob: -8.012487411499023
    9. '<|end|>' → logprob: -8.262487411499023
    10. ' ' → logprob: -9.137487411499023

Token 222: ' BIT' (ID: 52185)
  Prédit: ' bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bit' → logprob: -0.1445099413394928
    2. ' BIT' → logprob: -2.51951003074646
    3. 'BIT' → logprob: -3.76951003074646
    4. 'bit' → logprob: -4.269509792327881
    5. ' self' → logprob: -4.394509792327881
    6. 'self' → logprob: -6.269509792327881
    7. '_BIT' → logprob: -6.894509792327881
    8. '   ' → logprob: -7.894509792327881
    9. '.bit' → logprob: -7.894509792327881
    10. ' binary' → logprob: -8.019510269165039

Token 223: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4193361699581146
    2. '       ' → logprob: -2.0443360805511475
    3. ':
' → logprob: -2.5443360805511475
    4. '   ' → logprob: -3.0443360805511475
    5. '):
' → logprob: -3.1693360805511475
    6. '):' → logprob: -4.044336318969727
    7. ')' → logprob: -4.419336318969727
    8. '.' → logprob: -5.169336318969727
    9. '
' → logprob: -5.294336318969727
    10. '<|end|>' → logprob: -6.544336318969727

Token 224: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19328610599040985
    2. ' while' → logprob: -2.318286180496216
    3. ' x' → logprob: -3.318286180496216
    4. ' 
' → logprob: -4.193285942077637
    5. '   ' → logprob: -4.693285942077637
    6. '
' → logprob: -4.943285942077637
    7. '        
' → logprob: -5.943285942077637
    8. 'x' → logprob: -7.068285942077637
    9. '  
' → logprob: -7.193285942077637
    10. '    
' → logprob: -7.193285942077637

Token 225: ' propag' (ID: 26611)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.4741123914718628
    2. ' while' → logprob: -1.2241123914718628
    3. 'x' → logprob: -2.7241125106811523
    4. 'while' → logprob: -5.224112510681152
    5. '    ' → logprob: -5.349112510681152
    6. '       ' → logprob: -5.474112510681152
    7. '   ' → logprob: -5.849112510681152
    8. ' ' → logprob: -8.599112510681152
    9. '	while' → logprob: -8.599112510681152
    10. '        ' → logprob: -9.599112510681152

Token 226: 'ates' (ID: 1381)
  Prédit: 'ates'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ates' → logprob: -0.004079708829522133
    2. 'ate' → logprob: -5.504079818725586
    3. '   ' → logprob: -14.129079818725586
    4. 'ATES' → logprob: -15.379079818725586
    5. '       ' → logprob: -16.129079818725586
    6. 'x' → logprob: -16.879079818725586
    7. 'tes' → logprob: -16.879079818725586
    8. '```' → logprob: -17.254079818725586
    9. 'te' → logprob: -17.504079818725586
    10. 'a' → logprob: -17.504079818725586

Token 227: ' the' (ID: 290)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.08321911096572876
    2. 'x' → logprob: -3.208219051361084
    3. '       ' → logprob: -3.708219051361084
    4. '   ' → logprob: -4.833219051361084
    5. ' the' → logprob: -5.333219051361084
    6. ' ' → logprob: -7.958219051361084
    7. ')' → logprob: -8.208219528198242
    8. '    ' → logprob: -8.208219528198242
    9. '(x' → logprob: -8.333219528198242
    10. '	x' → logprob: -8.833219528198242

Token 228: ' update' (ID: 4027)
  Prédit: ' update'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' update' → logprob: -0.18463891744613647
    2. ' updates' → logprob: -2.6846389770507812
    3. ' x' → logprob: -2.9346389770507812
    4. 'x' → logprob: -3.6846389770507812
    5. ' change' → logprob: -5.059638977050781
    6. 'update' → logprob: -5.309638977050781
    7. ' +=' → logprob: -5.934638977050781
    8. ' changes' → logprob: -6.309638977050781
    9. 'updates' → logprob: -6.684638977050781
    10. '   ' → logprob: -6.934638977050781

Token 229: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08060461282730103
    2. '   ' → logprob: -3.0806045532226562
    3. ' to' → logprob: -4.705604553222656
    4. '        
' → logprob: -5.330604553222656
    5. '    ' → logprob: -5.580604553222656
    6. '.' → logprob: -5.830604553222656
    7. ',' → logprob: -6.455604553222656
    8. '    
' → logprob: -6.580604553222656
    9. '<|end|>' → logprob: -6.830604553222656
    10. ' x' → logprob: -6.830604553222656

Token 230: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7740769386291504
    2. '
' → logprob: -0.8990769386291504
    3. '        
' → logprob: -3.0240769386291504
    4. '\n' → logprob: -4.14907693862915
    5. '<|end|>' → logprob: -4.14907693862915
    6. ' 
' → logprob: -4.27407693862915
    7. '```' → logprob: -4.39907693862915
    8. '  
' → logprob: -4.52407693862915
    9. '   ' → logprob: -5.14907693862915
    10. '    
' → logprob: -5.89907693862915

Token 231: ' Args' (ID: 39185)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.17287693917751312
    2. ' 
' → logprob: -2.5478768348693848
    3. '       ' → logprob: -2.9228768348693848
    4. '\n' → logprob: -4.297876834869385
    5. '        
' → logprob: -5.172876834869385
    6. '  
' → logprob: -5.797876834869385
    7. '    
' → logprob: -6.422876834869385
    8. '   ' → logprob: -7.547876834869385
    9. '\' → logprob: -7.797876834869385
    10. ' while' → logprob: -7.922876834869385

Token 232: ':
' (ID: 734)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5104514956474304
    2. ',' → logprob: -1.8854515552520752
    3. '):
' → logprob: -2.260451555252075
    4. ':' → logprob: -2.385451555252075
    5. '       ' → logprob: -3.760451555252075
    6. '<|end|>' → logprob: -4.635451316833496
    7. ')' → logprob: -5.010451316833496
    8. '   ' → logprob: -5.135451316833496
    9. '<|end|>' → logprob: -7.010451316833496
    10. '):

' → logprob: -7.135451316833496

Token 233: '           ' (ID: 352)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.4146330952644348
    2. '       ' → logprob: -1.28963303565979
    3. 'x' → logprob: -2.78963303565979
    4. 'self' → logprob: -6.789633274078369
    5. ' self' → logprob: -7.164633274078369
    6. ',' → logprob: -8.539632797241211
    7. '        ' → logprob: -8.539632797241211
    8. '   ' → logprob: -9.039632797241211
    9. '           ' → logprob: -9.664632797241211
    10. '    ' → logprob: -10.039632797241211

Token 234: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.20143644511699677
    2. ' x' → logprob: -1.7014364004135132
    3. '       ' → logprob: -11.701436042785645
    4. '   ' → logprob: -11.701436042785645
    5. 'a' → logprob: -13.076436042785645
    6. 'self' → logprob: -13.201436042785645
    7. '	x' → logprob: -14.076436042785645
    8. ' ' → logprob: -14.451436042785645
    9. '    ' → logprob: -14.951436042785645
    10. ' a' → logprob: -15.326436042785645

Token 235: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.15216949582099915
    2. '<|end|>' → logprob: -2.1521694660186768
    3. ' ,' → logprob: -4.527169704437256
    4. ' +=' → logprob: -4.652169704437256
    5. ')' → logprob: -6.777169704437256
    6. ' x' → logprob: -6.902169704437256
    7. '+=' → logprob: -7.402169704437256
    8. ':' → logprob: -8.277169227600098
    9. '<|end|>' → logprob: -8.277169227600098
    10. '   ' → logprob: -8.402169227600098

Token 236: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.04295099899172783
    2. ',' → logprob: -4.1679511070251465
    3. 'x' → logprob: -4.6679511070251465
    4. ':int' → logprob: -4.9179511070251465
    5. ' int' → logprob: -5.0429511070251465
    6. '       ' → logprob: -6.7929511070251465
    7. ',int' → logprob: -7.1679511070251465
    8. ' x' → logprob: -7.5429511070251465
    9. ' ,' → logprob: -7.7929511070251465
    10. ')' → logprob: -9.042950630187988

Token 237: '):' (ID: 3127)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.9385402993066236e-05
    2. ' ,' → logprob: -11.125019073486328
    3. ',x' → logprob: -13.625019073486328
    4. '   ' → logprob: -14.125019073486328
    5. ',
' → logprob: -14.375019073486328
    6. '<|end|>' → logprob: -14.750019073486328
    7. '       ' → logprob: -14.875019073486328
    8. ')' → logprob: -15.000019073486328
    9. '),' → logprob: -15.375019073486328
    10. '):' → logprob: -15.875019073486328

Token 238: ' The' (ID: 623)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.1345786601305008
    2. ' ' → logprob: -2.1345787048339844
    3. 'x' → logprob: -5.509578704833984
    4. ' a' → logprob: -6.509578704833984
    5. ')' → logprob: -6.884578704833984
    6. '    ' → logprob: -8.259578704833984
    7. ' )' → logprob: -8.509578704833984
    8. ' ' → logprob: -9.009578704833984
    9. 'a' → logprob: -9.384578704833984
    10. ' index' → logprob: -9.634578704833984

Token 239: ' index' (ID: 3472)
  Prédit: ' index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' index' → logprob: -0.12545807659626007
    2. 'index' → logprob: -2.250458002090454
    3. ' position' → logprob: -5.375458240509033
    4. ' x' → logprob: -6.000458240509033
    5. ' next' → logprob: -6.375458240509033
    6. ' ' → logprob: -6.500458240509033
    7. 'x' → logprob: -7.875458240509033
    8. ' value' → logprob: -8.125457763671875
    9. 'position' → logprob: -8.125457763671875
    10. '<|end|>' → logprob: -8.250457763671875

Token 240: ' at' (ID: 540)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 241: ' which' (ID: 1118)
  Prédit: ' which'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' which' → logprob: -0.007751794066280127
    2. 'which' → logprob: -5.257751941680908
    3. '<|end|>' → logprob: -6.257751941680908
    4. ')' → logprob: -8.63275146484375
    5. ' ' → logprob: -8.88275146484375
    6. ' x' → logprob: -9.50775146484375
    7. 'x' → logprob: -9.75775146484375
    8. ' least' → logprob: -10.13275146484375
    9. 'Which' → logprob: -10.25775146484375
    10. '    ' → logprob: -11.00775146484375

Token 242: ' the' (ID: 290)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.5861186981201172
    2. '       ' → logprob: -1.8361186981201172
    3. ' add' → logprob: -3.086118698120117
    4. '    ' → logprob: -3.461118698120117
    5. ' x' → logprob: -3.461118698120117
    6. '<|end|>' → logprob: -3.586118698120117
    7. '+=' → logprob: -3.836118698120117
    8. ' the' → logprob: -3.961118698120117
    9. ')' → logprob: -4.211118698120117
    10. ' +=' → logprob: -4.211118698120117

Token 243: ' value' (ID: 1432)
  Prédit: ' value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.8208086490631104
    2. ' update' → logprob: -1.0708086490631104
    3. ' add' → logprob: -2.5708086490631104
    4. 'value' → logprob: -2.8208086490631104
    5. 'add' → logprob: -3.0708086490631104
    6. 'update' → logprob: -3.5708086490631104
    7. ' addition' → logprob: -5.445808410644531
    8. ' change' → logprob: -7.195808410644531
    9. 'a' → logprob: -7.570808410644531
    10. 'addition' → logprob: -7.945808410644531

Token 244: ' should' (ID: 1757)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.08929558843374252
    2. '+=' → logprob: -3.2142956256866455
    3. ' to' → logprob: -3.3392956256866455
    4. '       ' → logprob: -5.214295387268066
    5. ' is' → logprob: -6.714295387268066
    6. '   ' → logprob: -7.089295387268066
    7. ',' → logprob: -7.839295387268066
    8. ' should' → logprob: -7.839295387268066
    9. ')' → logprob: -8.339295387268066
    10. '    ' → logprob: -8.464295387268066

Token 245: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -5.6934557505883276e-05
    2. 'be' → logprob: -10.000057220458984
    3. '+=' → logprob: -12.125057220458984
    4. '       ' → logprob: -13.375057220458984
    5. ' +=' → logprob: -13.500057220458984
    6. '    ' → logprob: -13.875057220458984
    7. '+' → logprob: -14.000057220458984
    8. ')' → logprob: -15.125057220458984
    9. '   ' → logprob: -15.625057220458984
    10. '<|end|>' → logprob: -15.625057220458984

Token 246: ' added' (ID: 5768)
  Prédit: ' added'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' added' → logprob: -0.5763195157051086
    2. 'added' → logprob: -0.8263195157051086
    3. 'add' → logprob: -8.451319694519043
    4. 'updated' → logprob: -9.451319694519043
    5. ' updated' → logprob: -9.951319694519043
    6. '   ' → logprob: -10.701319694519043
    7. ' add' → logprob: -12.201319694519043
    8. '_added' → logprob: -12.701319694519043
    9. '-added' → logprob: -12.826319694519043
    10. '       ' → logprob: -13.076319694519043

Token 247: ' (' (ID: 350)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01676752232015133
    2. '       ' → logprob: -4.766767501831055
    3. '<|end|>' → logprob: -5.891767501831055
    4. '):
' → logprob: -6.141767501831055
    5. ',' → logprob: -6.641767501831055
    6. '):' → logprob: -7.141767501831055
    7. ')
' → logprob: -8.016767501831055
    8. '<|end|>' → logprob: -8.641767501831055
    9. '),' → logprob: -9.141767501831055
    10. ')x' → logprob: -9.391767501831055

Token 248: '1' (ID: 16)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12152642756700516
    2. ' )' → logprob: -2.6215264797210693
    3. '):
' → logprob: -4.87152624130249
    4. '       ' → logprob: -5.12152624130249
    5. ',' → logprob: -5.37152624130249
    6. ')x' → logprob: -5.49652624130249
    7. '):' → logprob: -5.62152624130249
    8. '   ' → logprob: -5.74652624130249
    9. ' x' → logprob: -5.87152624130249
    10. '<|end|>' → logprob: -6.24652624130249

Token 249: '-based' (ID: 8235)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.037309158593416214
    2. '):
' → logprob: -4.662309169769287
    3. '   ' → logprob: -5.037309169769287
    4. '):' → logprob: -5.287309169769287
    5. ' <=' → logprob: -5.537309169769287
    6. ' +=' → logprob: -6.412309169769287
    7. '<|end|>' → logprob: -6.537309169769287
    8. ',' → logprob: -6.662309169769287
    9. ' <<=' → logprob: -6.787309169769287
    10. ')<<' → logprob: -6.912309169769287

Token 250: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002805467927828431
    2. ' )' → logprob: -6.127805233001709
    3. ' index' → logprob: -7.877805233001709
    4. ')
' → logprob: -8.877805709838867
    5. 'index' → logprob: -10.002805709838867
    6. '   ' → logprob: -11.127805709838867
    7. ' ' → logprob: -11.377805709838867
    8. ')x' → logprob: -12.002805709838867
    9. ' )
' → logprob: -12.627805709838867
    10. '_index' → logprob: -12.752805709838867

Token 251: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21513621509075165
    2. ')' → logprob: -1.840136170387268
    3. '):
' → logprob: -4.8401360511779785
    4. '   ' → logprob: -4.9651360511779785
    5. '        
' → logprob: -5.0901360511779785
    6. '
' → logprob: -5.2151360511779785
    7. ')
' → logprob: -6.3401360511779785
    8. '):' → logprob: -6.4651360511779785
    9. '```' → logprob: -6.5901360511779785
    10. '    
' → logprob: -7.0901360511779785

Token 252: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.16036710143089294
    2. ' a' → logprob: -1.9103671312332153
    3. '           ' → logprob: -9.285367012023926
    4. '       ' → logprob: -10.410367012023926
    5. '   ' → logprob: -12.910367012023926
    6. ' ' → logprob: -12.910367012023926
    7. '```' → logprob: -12.910367012023926
    8. 'value' → logprob: -13.035367012023926
    9. '        ' → logprob: -13.160367012023926
    10. '            ' → logprob: -13.285367012023926

Token 253: ' (' (ID: 350)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.051398806273937225
    2. '):
' → logprob: -3.051398754119873
    3. ':' → logprob: -6.676398754119873
    4. '   ' → logprob: -7.426398754119873
    5. ')' → logprob: -7.676398754119873
    6. ' ):' → logprob: -8.176399230957031
    7. '       ' → logprob: -9.176399230957031
    8. ':int' → logprob: -10.551399230957031
    9. '    ' → logprob: -11.301399230957031
    10. '):
' → logprob: -11.301399230957031

Token 254: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.02352520264685154
    2. ' int' → logprob: -3.7735252380371094
    3. ')' → logprob: -8.27352523803711
    4. ':int' → logprob: -11.02352523803711
    5. '):
' → logprob: -13.14852523803711
    6. '):' → logprob: -13.27352523803711
    7. ' )' → logprob: -14.14852523803711
    8. '   ' → logprob: -14.39852523803711
    9. '=int' → logprob: -14.39852523803711
    10. ',int' → logprob: -14.52352523803711

Token 255: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03832719102501869
    2. '):
' → logprob: -3.288327217102051
    3. ')' → logprob: -8.53832721710205
    4. '   ' → logprob: -10.66332721710205
    5. '):

' → logprob: -10.91332721710205
    6. ' ):' → logprob: -11.28832721710205
    7. ':' → logprob: -11.28832721710205
    8. '       ' → logprob: -11.41332721710205
    9. '):
' → logprob: -11.53832721710205
    10. ' ' → logprob: -14.78832721710205

Token 256: ' The' (ID: 623)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.9451269507408142
    2. '<|end|>' → logprob: -1.820127010345459
    3. ' The' → logprob: -1.945127010345459
    4. ' the' → logprob: -2.070127010345459
    5. ' ' → logprob: -2.945127010345459
    6. ')' → logprob: -2.945127010345459
    7. 'a' → logprob: -3.820127010345459
    8. ' value' → logprob: -4.820127010345459
    9. 'The' → logprob: -4.820127010345459
    10. ' )' → logprob: -5.070127010345459

Token 257: ' value' (ID: 1432)
  Prédit: ' value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.45720621943473816
    2. 'value' → logprob: -1.2072062492370605
    3. '<|end|>' → logprob: -3.7072062492370605
    4. ')' → logprob: -4.4572062492370605
    5. ' amount' → logprob: -4.7072062492370605
    6. 'amount' → logprob: -4.7072062492370605
    7. '+' → logprob: -5.0822062492370605
    8. ' ' → logprob: -6.4572062492370605
    9. ' +=' → logprob: -6.5822062492370605
    10. '+=' → logprob: -6.8322062492370605

Token 258: ' to' (ID: 316)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 259: ' add' (ID: 1147)
  Prédit: ' be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.1713743656873703
    2. ' add' → logprob: -1.9213743209838867
    3. ' added' → logprob: -5.296374320983887
    4. 'add' → logprob: -5.546374320983887
    5. 'added' → logprob: -6.921374320983887
    6. ')' → logprob: -7.921374320983887
    7. 'be' → logprob: -8.296374320983887
    8. ')add' → logprob: -8.546374320983887
    9. '   ' → logprob: -9.546374320983887
    10. ' ' → logprob: -9.546374320983887

Token 260: ' to' (ID: 316)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007186899892985821
    2. ')
' → logprob: -5.1321868896484375
    3. '       ' → logprob: -7.2571868896484375
    4. '):
' → logprob: -7.7571868896484375
    5. '   ' → logprob: -9.382186889648438
    6. '):' → logprob: -10.632186889648438
    7. ' )' → logprob: -12.007186889648438
    8. ')**' → logprob: -13.132186889648438
    9. ')`' → logprob: -13.382186889648438
    10. ').' → logprob: -13.507186889648438

Token 261: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.30480995774269104
    2. 'the' → logprob: -2.054810047149658
    3. 'x' → logprob: -2.304810047149658
    4. 'self' → logprob: -3.929810047149658
    5. ' self' → logprob: -5.304810047149658
    6. ' x' → logprob: -5.429810047149658
    7. ')' → logprob: -5.554810047149658
    8. 'bit' → logprob: -6.804810047149658
    9. ' bit' → logprob: -7.429810047149658
    10. 'index' → logprob: -9.6798095703125

Token 262: ' index' (ID: 3472)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.5796332359313965
    2. 'x' → logprob: -0.8296332359313965
    3. ' bit' → logprob: -5.7046332359313965
    4. 'bit' → logprob: -8.954633712768555
    5. '[x' → logprob: -9.329633712768555
    6. ' index' → logprob: -10.329633712768555
    7. ' BIT' → logprob: -10.329633712768555
    8. ' element' → logprob: -10.454633712768555
    9. '   ' → logprob: -11.829633712768555
    10. ' position' → logprob: -11.829633712768555

Token 263: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018801787868142128
    2. ')
' → logprob: -4.268801689147949
    3. '       ' → logprob: -5.518801689147949
    4. '   ' → logprob: -7.518801689147949
    5. '           ' → logprob: -10.39380168914795
    6. '):
' → logprob: -11.26880168914795
    7. ')x' → logprob: -12.39380168914795
    8. ' )' → logprob: -12.51880168914795
    9. ')
' → logprob: -12.76880168914795
    10. '               ' → logprob: -12.89380168914795

Token 264: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.536217212677002
    2. '       ' → logprob: -1.661217212677002
    3. '   ' → logprob: -1.786217212677002
    4. '
' → logprob: -4.286217212677002
    5. ')
' → logprob: -4.661217212677002
    6. '    
' → logprob: -4.911217212677002
    7. '):
' → logprob: -4.911217212677002
    8. '  
' → logprob: -5.161217212677002
    9. '        
' → logprob: -5.661217212677002
    10. '\n' → logprob: -5.911217212677002

Token 265: ' """
' (ID: 7037)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.693266749382019
    2. '       ' → logprob: -0.818266749382019
    3. '\n' → logprob: -4.318266868591309
    4. ')' → logprob: -4.443266868591309
    5. '        
' → logprob: -4.693266868591309
    6. '   ' → logprob: -4.943266868591309
    7. '  
' → logprob: -5.068266868591309
    8. '```' → logprob: -5.568266868591309
    9. '    
' → logprob: -5.818266868591309
    10. ')
' → logprob: -6.568266868591309

Token 266: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00016516048344783485
    2. '
' → logprob: -9.500164985656738
    3. '        
' → logprob: -10.250164985656738
    4. '```' → logprob: -10.875164985656738
    5. '   ' → logprob: -11.125164985656738
    6. '           ' → logprob: -12.750164985656738
    7. '    
' → logprob: -12.875164985656738
    8. '	' → logprob: -13.125164985656738
    9. '        ' → logprob: -13.250164985656738
    10. ' x' → logprob: -13.375164985656738

Token 267: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.0754089206457138
    2. '       ' → logprob: -2.825408935546875
    3. ' while' → logprob: -4.325408935546875
    4. '   ' → logprob: -9.325408935546875
    5. '	while' → logprob: -10.700408935546875
    6. 'x' → logprob: -11.450408935546875
    7. 'While' → logprob: -15.450408935546875
    8. '```' → logprob: -15.450408935546875
    9. ' x' → logprob: -16.075408935546875
    10. '      ' → logprob: -16.200408935546875

Token 268: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.005238140933215618
    2. 'x' → logprob: -5.255238056182861
    3. '   ' → logprob: -13.38023853302002
    4. '    ' → logprob: -13.88023853302002
    5. '	x' → logprob: -13.88023853302002
    6. ' ' → logprob: -14.38023853302002
    7. '(x' → logprob: -16.255237579345703
    8. '1' → logprob: -16.505237579345703
    9. '       ' → logprob: -16.880237579345703
    10. '_x' → logprob: -17.005237579345703

Token 269: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.5760643482208252
    2. '<=' → logprob: -0.8260643482208252
    3. '<' → logprob: -9.451064109802246
    4. ' <' → logprob: -10.576064109802246
    5. '   ' → logprob: -11.451064109802246
    6. ' +=' → logprob: -12.326064109802246
    7. '+=' → logprob: -12.576064109802246
    8. '```' → logprob: -15.076064109802246
    9. '≤' → logprob: -15.076064109802246
    10. ' ' → logprob: -15.201064109802246

Token 270: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0007101670489646494
    2. ' self' → logprob: -7.2507100105285645
    3. '   ' → logprob: -16.125709533691406
    4. '(self' → logprob: -17.250709533691406
    5. '       ' → logprob: -17.375709533691406
    6. '```' → logprob: -17.500709533691406
    7. '[self' → logprob: -17.875709533691406
    8. '	self' → logprob: -18.250709533691406
    9. 'Self' → logprob: -18.875709533691406
    10. '
' → logprob: -19.125709533691406

Token 271: '.N' (ID: 4439)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00019650737522169948
    2. '.N' → logprob: -8.62519645690918
    3. 'self' → logprob: -11.12519645690918
    4. '   ' → logprob: -13.37519645690918
    5. ' N' → logprob: -14.75019645690918
    6. '	N' → logprob: -16.00019645690918
    7. '.' → logprob: -17.00019645690918
    8. '<N' → logprob: -18.12519645690918
    9. ' self' → logprob: -18.12519645690918
    10. 'Ｎ' → logprob: -18.25019645690918

Token 272: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.18021799623966217
    2. ':' → logprob: -1.805217981338501
    3. '):
' → logprob: -7.93021821975708
    4. '       ' → logprob: -9.430217742919922
    5. '           ' → logprob: -11.805217742919922
    6. ':
' → logprob: -11.930217742919922
    7. ' and' → logprob: -12.555217742919922
    8. '):' → logprob: -12.805217742919922
    9. '   ' → logprob: -13.055217742919922
    10. ' :
' → logprob: -13.180217742919922

Token 273: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002263494301587343
    2. '       ' → logprob: -6.50226354598999
    3. '```' → logprob: -8.002263069152832
    4. ':
' → logprob: -9.127263069152832
    5. 'x' → logprob: -9.252263069152832
    6. '
' → logprob: -9.877263069152832
    7. '<|end|>' → logprob: -10.252263069152832
    8. ',' → logprob: -10.752263069152832
    9. ' x' → logprob: -11.002263069152832
    10. '            
' → logprob: -11.502263069152832

Token 274: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.03296621888875961
    2. '           ' → logprob: -3.782966136932373
    3. ' self' → logprob: -4.657966136932373
    4. '               ' → logprob: -9.407966613769531
    5. '       ' → logprob: -10.032966613769531
    6. '   ' → logprob: -10.282966613769531
    7. '```' → logprob: -11.157966613769531
    8. '	self' → logprob: -12.532966613769531
    9. '[self' → logprob: -12.532966613769531
    10. '``' → logprob: -14.032966613769531

Token 275: '.bit' (ID: 61866)
  Prédit: '.bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.bit' → logprob: -2.927930654550437e-05
    2. '.' → logprob: -10.875029563903809
    3. 'bit' → logprob: -12.625029563903809
    4. ' .' → logprob: -12.750029563903809
    5. '.bits' → logprob: -12.875029563903809
    6. ' bit' → logprob: -14.500029563903809
    7. '.b' → logprob: -16.000028610229492
    8. '   ' → logprob: -16.125028610229492
    9. '.user' → logprob: -16.250028610229492
    10. '.add' → logprob: -16.500028610229492

Token 276: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -5.512236498361744e-07
    2. '[' → logprob: -15.375000953674316
    3. ' [' → logprob: -16.375
    4. '```' → logprob: -16.5
    5. 'x' → logprob: -17.625
    6. '           ' → logprob: -18.375
    7. '       ' → logprob: -18.75
    8. '[self' → logprob: -19.0
    9. '   ' → logprob: -19.25
    10. ' x' → logprob: -19.875

Token 277: ']' (ID: 60)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.7315952181816101
    2. '+=' → logprob: -0.7315952181816101
    3. ']+=' → logprob: -3.856595277786255
    4. ']' → logprob: -4.106595039367676
    5. '    ' → logprob: -9.481595039367676
    6. '   ' → logprob: -11.231595039367676
    7. '+' → logprob: -11.606595039367676
    8. ' ]' → logprob: -12.356595039367676
    9. ')' → logprob: -12.856595039367676
    10. '        ' → logprob: -12.856595039367676

Token 278: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.1002068892121315
    2. ' +=' → logprob: -2.3502068519592285
    3. ']+=' → logprob: -16.22520637512207
    4. '=' → logprob: -16.97520637512207
    5. '   ' → logprob: -17.22520637512207
    6. '    ' → logprob: -17.35020637512207
    7. '+' → logprob: -17.47520637512207
    8. '       ' → logprob: -19.60020637512207
    9. '        ' → logprob: -19.72520637512207
    10. '	' → logprob: -20.10020637512207

Token 279: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0040785204619169235
    2. ' a' → logprob: -5.504078388214111
    3. '           ' → logprob: -16.879077911376953
    4. '   ' → logprob: -18.254077911376953
    5. '	a' → logprob: -19.129077911376953
    6. ' ' → logprob: -21.254077911376953
    7. '       ' → logprob: -21.379077911376953
    8. '    ' → logprob: -21.754077911376953
    9. '               ' → logprob: -22.379077911376953
    10. '_a' → logprob: -22.504077911376953

Token 280: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008969316841103137
    2. '
' → logprob: -7.75089693069458
    3. 'x' → logprob: -8.625897407531738
    4. ' x' → logprob: -9.125897407531738
    5. '            
' → logprob: -9.250897407531738
    6. '       ' → logprob: -10.750897407531738
    7. '               ' → logprob: -11.000897407531738
    8. ',' → logprob: -11.250897407531738
    9. '   ' → logprob: -12.000897407531738
    10. ',
' → logprob: -12.750897407531738

Token 281: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14043200016021729
    2. 'x' → logprob: -2.3904318809509277
    3. ' x' → logprob: -3.6404318809509277
    4. '
' → logprob: -4.390431880950928
    5. '       ' → logprob: -8.265432357788086
    6. '   ' → logprob: -8.640432357788086
    7. '            
' → logprob: -8.890432357788086
    8. '```' → logprob: -9.765432357788086
    9. '               ' → logprob: -10.140432357788086
    10. '\n' → logprob: -10.390432357788086

Token 282: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.008614808320999146
    2. ' x' → logprob: -4.758615016937256
    3. '   ' → logprob: -15.883614540100098
    4. '	x' → logprob: -16.133615493774414
    5. '           ' → logprob: -17.258615493774414
    6. '       ' → logprob: -18.758615493774414
    7. ' ' → logprob: -19.258615493774414
    8. '    ' → logprob: -21.508615493774414
    9. '  ' → logprob: -21.508615493774414
    10. '               ' → logprob: -21.508615493774414

Token 283: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.03824150189757347
    2. ' +=' → logprob: -3.288241386413574
    3. '|' → logprob: -8.538241386413574
    4. '&' → logprob: -13.038241386413574
    5. ' |=' → logprob: -13.788241386413574
    6. '=' → logprob: -14.913241386413574
    7. '	' → logprob: -15.788241386413574
    8. '   ' → logprob: -15.913241386413574
    9. '+=(' → logprob: -16.16324234008789
    10. ']+=' → logprob: -16.41324234008789

Token 284: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.008615872822701931
    2. ' x' → logprob: -4.758615970611572
    3. '(x' → logprob: -14.008615493774414
    4. ' (' → logprob: -15.133615493774414
    5. ' ' → logprob: -16.383615493774414
    6. '	x' → logprob: -16.758615493774414
    7. '(' → logprob: -16.758615493774414
    8. '   ' → logprob: -18.258615493774414
    9. '```' → logprob: -18.508615493774414
    10. '{x' → logprob: -19.883615493774414

Token 285: ' &' (ID: 827)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.011056899093091488
    2. ' &' → logprob: -4.511056900024414
    3. '&amp' → logprob: -13.011056900024414
    4. '&i' → logprob: -13.136056900024414
    5. '&t' → logprob: -13.386056900024414
    6. '&id' → logprob: -14.261056900024414
    7. '&r' → logprob: -14.636056900024414
    8. '&B' → logprob: -15.386056900024414
    9. '&a' → logprob: -15.511056900024414
    10. '&q' → logprob: -15.636056900024414

Token 286: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.40406742691993713
    2. '-x' → logprob: -1.1540673971176147
    3. ' -' → logprob: -4.154067516326904
    4. '(-' → logprob: -6.904067516326904
    5. 'x' → logprob: -8.029067039489746
    6. ' (-' → logprob: -11.529067039489746
    7. ' x' → logprob: -12.279067039489746
    8. '-s' → logprob: -13.654067039489746
    9. '-k' → logprob: -14.529067039489746
    10. '-l' → logprob: -14.654067039489746

Token 287: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.8624639324116288e-06
    2. ' x' → logprob: -13.250001907348633
    3. '	x' → logprob: -20.375001907348633
    4. ')x' → logprob: -21.750001907348633
    5. '<|end|>' → logprob: -21.875001907348633
    6. '"x' → logprob: -22.000001907348633
    7. '{x' → logprob: -22.375001907348633
    8. ''x' → logprob: -22.625001907348633
    9. '$x' → logprob: -23.000001907348633
    10. ' ' → logprob: -23.875001907348633

Token 288: ' ' (ID: 220)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0017106400337070227
    2. ' x' → logprob: -6.376710414886475
    3. '<|end|>' → logprob: -12.251710891723633
    4. '(x' → logprob: -13.376710891723633
    5. '	x' → logprob: -14.251710891723633
    6. ')x' → logprob: -14.501710891723633
    7. '{x' → logprob: -15.376710891723633
    8. '_x' → logprob: -15.876710891723633
    9. ' ' → logprob: -16.126710891723633
    10. '   ' → logprob: -16.376710891723633

Token 289: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 290: ' Move' (ID: 25485)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.6386942863464355
    2. 'x' → logprob: -0.7636942863464355
    3. '<|end|>' → logprob: -5.1386942863464355
    4. ' ' → logprob: -9.513694763183594
    5. '(x' → logprob: -10.263694763183594
    6. '1' → logprob: -10.388694763183594
    7. ')' → logprob: -10.888694763183594
    8. '0' → logprob: -11.513694763183594
    9. '```' → logprob: -11.513694763183594
    10. ')x' → logprob: -11.513694763183594

Token 291: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.2382797747850418
    2. 'to' → logprob: -1.6132798194885254
    3. 'x' → logprob: -4.863279819488525
    4. ' x' → logprob: -5.363279819488525
    5. '<|end|>' → logprob: -7.988279819488525
    6. ' the' → logprob: -10.863279342651367
    7. 'the' → logprob: -12.613279342651367
    8. ' ' → logprob: -13.488279342651367
    9. 'next' → logprob: -13.613279342651367
    10. '           ' → logprob: -13.863279342651367

Token 292: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.4167202413082123
    2. 'the' → logprob: -1.1667202711105347
    3. 'x' → logprob: -3.791720151901245
    4. ' x' → logprob: -5.666720390319824
    5. 'next' → logprob: -6.166720390319824
    6. ' next' → logprob: -6.666720390319824
    7. '(x' → logprob: -12.041720390319824
    8. 'Next' → logprob: -12.666720390319824
    9. 'lowest' → logprob: -13.041720390319824
    10. '<|end|>' → logprob: -13.166720390319824

Token 293: ' next' (ID: 2613)
  Prédit: ' next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.3876945674419403
    2. 'next' → logprob: -1.1376945972442627
    3. 'last' → logprob: -8.137694358825684
    4. 'x' → logprob: -8.762694358825684
    5. 'Next' → logprob: -8.887694358825684
    6. 'lowest' → logprob: -9.637694358825684
    7. 'least' → logprob: -10.262694358825684
    8. ' last' → logprob: -10.387694358825684
    9. '(next' → logprob: -10.637694358825684
    10. '<|end|>' → logprob: -11.012694358825684

Token 294: ' node' (ID: 4596)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.08741329610347748
    2. ' index' → logprob: -2.8374133110046387
    3. '<|end|>' → logprob: -3.9624133110046387
    4. 'x' → logprob: -5.712413311004639
    5. 'position' → logprob: -7.212413311004639
    6. 'idx' → logprob: -7.462413311004639
    7. ' ' → logprob: -7.587413311004639
    8. 'bit' → logprob: -8.71241283416748
    9. 'element' → logprob: -8.83741283416748
    10. ' position' → logprob: -9.08741283416748

Token 295: ' responsible' (ID: 10908)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 296: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.016907600685954094
    2. 'for' → logprob: -4.641907691955566
    3. '<|end|>' → logprob: -5.016907691955566
    4. ' in' → logprob: -8.766907691955566
    5. ' of' → logprob: -9.766907691955566
    6. '<|end|>' → logprob: -10.141907691955566
    7. '           ' → logprob: -10.266907691955566
    8. ')' → logprob: -10.266907691955566
    9. '       ' → logprob: -10.266907691955566
    10. '```' → logprob: -10.266907691955566

Token 297: ' this' (ID: 495)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.07951885461807251
    2. 'updates' → logprob: -3.5795187950134277
    3. 'this' → logprob: -3.9545187950134277
    4. 'up' → logprob: -4.204518795013428
    5. 'the' → logprob: -4.954518795013428
    6. ' updating' → logprob: -6.329518795013428
    7. ' x' → logprob: -6.329518795013428
    8. ' this' → logprob: -6.829518795013428
    9. ' the' → logprob: -7.579518795013428
    10. 'index' → logprob: -7.954518795013428

Token 298: ' index' (ID: 3472)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.300414502620697
    2. 'index' → logprob: -2.050414562225342
    3. ' index' → logprob: -2.675414562225342
    4. ' x' → logprob: -2.800414562225342
    5. 'idx' → logprob: -8.175414085388184
    6. 'position' → logprob: -8.800414085388184
    7. ' position' → logprob: -8.925414085388184
    8. 'indices' → logprob: -9.175414085388184
    9. '   ' → logprob: -9.425414085388184
    10. ' ' → logprob: -9.550414085388184

Token 299: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 300: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 301: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4808446764945984
    2. '    
' → logprob: -1.1058447360992432
    3. 'def' (adapté à ' def') → logprob: -3.230844736099243
    4. '<|end|>' → logprob: -5.355844497680664
    5. '
' → logprob: -6.105844497680664
    6. '        
' → logprob: -6.605844497680664
    7. ' def' → logprob: -6.730844497680664
    8. '```' → logprob: -6.855844497680664
    9. '  
' → logprob: -8.105844497680664
    10. '   
' → logprob: -8.730844497680664

Token 302: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.06252405047416687
    2. ' sum' → logprob: -2.8125240802764893
    3. 'query' → logprob: -8.43752384185791
    4. 'prefix' → logprob: -8.68752384185791
    5. ' prefix' → logprob: -9.56252384185791
    6. '_sum' → logprob: -9.93752384185791
    7. ' query' → logprob: -10.06252384185791
    8. 'get' → logprob: -12.81252384185791
    9. '.sum' → logprob: -13.81252384185791
    10. '_prefix' → logprob: -13.93752384185791

Token 303: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.05572960898280144
    2. '(' → logprob: -2.930729627609253
    3. ' (' → logprob: -7.430729389190674
    4. '(x' → logprob: -8.805729866027832
    5. '_' → logprob: -10.180729866027832
    6. 'self' → logprob: -10.555729866027832
    7. '_(' → logprob: -11.180729866027832
    8. '   ' → logprob: -12.430729866027832
    9. '(
' → logprob: -12.680729866027832
    10. 's' → logprob: -12.680729866027832

Token 304: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005877005867660046
    2. 'self' → logprob: -5.5058770179748535
    3. '(self' → logprob: -6.3808770179748535
    4. '   ' → logprob: -9.880876541137695
    5. ' ,' → logprob: -10.630876541137695
    6. '       ' → logprob: -11.880876541137695
    7. ' self' → logprob: -12.130876541137695
    8. ',self' → logprob: -12.505876541137695
    9. 'def' → logprob: -12.630876541137695
    10. ')' → logprob: -13.380876541137695

Token 305: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.03984161093831062
    2. ' x' → logprob: -3.289841651916504
    3. 'self' → logprob: -6.414841651916504
    4. ' self' → logprob: -8.789841651916504
    5. '   ' → logprob: -12.039841651916504
    6. 'k' → logprob: -14.289841651916504
    7. ')' → logprob: -14.414841651916504
    8. ' ' → logprob: -14.539841651916504
    9. 'def' → logprob: -14.539841651916504
    10. '       ' → logprob: -15.414841651916504

Token 306: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.2537215054035187
    2. '):' → logprob: -1.5037214756011963
    3. '(self' → logprob: -7.253721714019775
    4. '   ' → logprob: -7.878721714019775
    5. '       ' → logprob: -8.128721237182617
    6. ')' → logprob: -8.503721237182617
    7. 'self' → logprob: -8.878721237182617
    8. ',' → logprob: -10.378721237182617
    9. '):
' → logprob: -10.878721237182617
    10. '):

' → logprob: -12.003721237182617

Token 307: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04928969219326973
    2. '(self' → logprob: -3.0492897033691406
    3. '(' → logprob: -7.924289703369141
    4. 'self' → logprob: -8.79928970336914
    5. ':' → logprob: -9.79928970336914
    6. '   ' → logprob: -9.92428970336914
    7. ' self' → logprob: -11.54928970336914
    8. '[' → logprob: -11.67428970336914
    9. 'def' → logprob: -11.67428970336914
    10. '<|end|>' → logprob: -11.92428970336914

Token 308: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002797868102788925
    2. '0' → logprob: -7.127798080444336
    3. 'int' → logprob: -7.627798080444336
    4. '   ' → logprob: -8.127798080444336
    5. '<|end|>' → logprob: -8.252798080444336
    6. '
' → logprob: -8.502798080444336
    7. '        
' → logprob: -8.877798080444336
    8. ' ' → logprob: -9.252798080444336
    9. ':' → logprob: -9.752798080444336
    10. '    
' → logprob: -9.877798080444336

Token 309: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -8.220573363360018e-05
    2. 'int' → logprob: -9.500082015991211
    3. '   ' → logprob: -12.875082015991211
    4. '        ' → logprob: -13.125082015991211
    5. '      ' → logprob: -13.875082015991211
    6. 'def' → logprob: -15.125082015991211
    7. '           ' → logprob: -15.125082015991211
    8. '0' → logprob: -15.250082015991211
    9. '        
' → logprob: -15.750082015991211
    10. '```' → logprob: -15.750082015991211

Token 310: ' Computes' (ID: 165922)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02194236032664776
    2. 'res' → logprob: -5.021942138671875
    3. ' res' → logprob: -5.146942138671875
    4. 'result' → logprob: -5.521942138671875
    5. '   ' → logprob: -6.021942138671875
    6. 'total' → logprob: -6.771942138671875
    7. ' result' → logprob: -7.396942138671875
    8. ' s' → logprob: -7.896942138671875
    9. ' total' → logprob: -8.146942138671875
    10. 's' → logprob: -8.146942138671875

Token 311: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.9119938015937805
    2. 'result' → logprob: -1.2869937419891357
    3. ' result' → logprob: -1.7869937419891357
    4. '   ' → logprob: -2.5369937419891357
    5. 'the' → logprob: -3.2869937419891357
    6. 's' → logprob: -4.411993980407715
    7. '       ' → logprob: -4.661993980407715
    8. 'res' → logprob: -4.911993980407715
    9. ' s' → logprob: -5.536993980407715
    10. ' res' → logprob: -5.911993980407715

Token 312: ' prefix' (ID: 18633)
  Prédit: ' result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.16727223992347717
    2. 'result' → logprob: -2.1672723293304443
    3. 's' → logprob: -4.792272090911865
    4. ' s' → logprob: -5.042272090911865
    5. ' prefix' → logprob: -5.042272090911865
    6. ' res' → logprob: -5.292272090911865
    7. 'prefix' → logprob: -5.417272090911865
    8. ' total' → logprob: -5.667272090911865
    9. 'res' → logprob: -5.792272090911865
    10. '   ' → logprob: -6.792272090911865

Token 313: ' sum' (ID: 4215)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.512890636920929
    2. '_sum' → logprob: -1.3878905773162842
    3. ' sum' → logprob: -2.762890577316284
    4. '   ' → logprob: -2.887890577316284
    5. 'sum' → logprob: -4.012890815734863
    6. ' _' → logprob: -4.512890815734863
    7. '       ' → logprob: -6.262890815734863
    8. ' ' → logprob: -6.887890815734863
    9. '_s' → logprob: -8.762890815734863
    10. '    ' → logprob: -8.762890815734863

Token 314: ' of' (ID: 328)
  Prédit: ' up'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' up' → logprob: -0.14756335318088531
    2. '       ' → logprob: -2.2725634574890137
    3. '   ' → logprob: -4.397563457489014
    4. '(' → logprob: -4.647563457489014
    5. '(self' → logprob: -5.397563457489014
    6. '<|end|>' → logprob: -5.897563457489014
    7. ' until' → logprob: -6.522563457489014
    8. 'up' → logprob: -7.147563457489014
    9. '_up' → logprob: -7.772563457489014
    10. '        
' → logprob: -7.772563457489014

Token 315: ' elements' (ID: 8632)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.3153188228607178
    2. 'x' → logprob: -1.3153188228607178
    3. ' the' → logprob: -6.815319061279297
    4. ' self' → logprob: -7.940319061279297
    5. 'self' → logprob: -8.190319061279297
    6. ' indices' → logprob: -8.940319061279297
    7. 'the' → logprob: -9.815319061279297
    8. 'indices' → logprob: -10.315319061279297
    9. '   ' → logprob: -10.690319061279297
    10. '```' → logprob: -11.315319061279297

Token 316: ' from' (ID: 591)
  Prédit: ' up'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' up' → logprob: -0.5346941351890564
    2. '       ' → logprob: -1.4096941947937012
    3. '   ' → logprob: -2.034694194793701
    4. 'up' → logprob: -3.534694194793701
    5. '_' → logprob: -5.409694194793701
    6. '_up' → logprob: -7.034694194793701
    7. '    ' → logprob: -7.159694194793701
    8. '[' → logprob: -7.284694194793701
    9. '```' → logprob: -7.284694194793701
    10. '(' → logprob: -7.534694194793701

Token 317: ' index' (ID: 3472)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002239708323031664
    2. ' ' → logprob: -6.12723970413208
    3. '   ' → logprob: -10.502240180969238
    4. '0' → logprob: -11.502240180969238
    5. 'index' → logprob: -12.002240180969238
    6. ' index' → logprob: -12.002240180969238
    7. '       ' → logprob: -12.877240180969238
    8. '```' → logprob: -13.377240180969238
    9. 'def' → logprob: -15.377240180969238
    10. '[' → logprob: -15.377240180969238

Token 318: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5763697624206543
    2. ' ' → logprob: -0.8263697624206543
    3. '   ' → logprob: -8.326370239257812
    4. '```' → logprob: -9.451370239257812
    5. '0' → logprob: -10.451370239257812
    6. '       ' → logprob: -10.701370239257812
    7. '[' → logprob: -10.826370239257812
    8. '    ' → logprob: -10.826370239257812
    9. '        ' → logprob: -12.076370239257812
    10. ' [' → logprob: -13.076370239257812

Token 319: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -14.125000953674316
    3. '```' → logprob: -15.500000953674316
    4. '   ' → logprob: -16.250001907348633
    5. '       ' → logprob: -16.875001907348633
    6. '0' → logprob: -17.250001907348633
    7. '           ' → logprob: -19.625001907348633
    8. 'def' → logprob: -19.750001907348633
    9. '`' → logprob: -20.000001907348633
    10. '``' → logprob: -20.875001907348633

Token 320: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.014291849918663502
    2. 'to' → logprob: -5.014291763305664
    3. ' up' → logprob: -5.889291763305664
    4. '       ' → logprob: -5.889291763305664
    5. ' through' → logprob: -6.514291763305664
    6. '   ' → logprob: -7.764291763305664
    7. '        ' → logprob: -10.514291763305664
    8. ',' → logprob: -10.639291763305664
    9. '    ' → logprob: -11.514291763305664
    10. 'through' → logprob: -11.514291763305664

Token 321: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.1602245420217514
    2. ' x' → logprob: -1.9102245569229126
    3. '   ' → logprob: -15.410224914550781
    4. '	x' → logprob: -16.66022491455078
    5. '```' → logprob: -17.03522491455078
    6. ',' → logprob: -17.41022491455078
    7. '(x' → logprob: -17.66022491455078
    8. ',x' → logprob: -17.66022491455078
    9. 'index' → logprob: -18.16022491455078
    10. '       ' → logprob: -18.16022491455078

Token 322: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06502510607242584
    2. '   ' → logprob: -3.3150250911712646
    3. '.' → logprob: -4.690025329589844
    4. ',' → logprob: -4.815025329589844
    5. '<|end|>' → logprob: -5.565025329589844
    6. ')' → logprob: -6.815025329589844
    7. ' (' → logprob: -7.190025329589844
    8. ':' → logprob: -7.440025329589844
    9. '```' → logprob: -7.565025329589844
    10. ' up' → logprob: -7.565025329589844

Token 323: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024461064487695694
    2. '   ' → logprob: -4.149461269378662
    3. '<|end|>' → logprob: -5.024461269378662
    4. '        
' → logprob: -7.399461269378662
    5. '    
' → logprob: -8.149460792541504
    6. '<|end|>' → logprob: -8.149460792541504
    7. ')' → logprob: -8.899460792541504
    8. '```' → logprob: -9.524460792541504
    9. '  
' → logprob: -9.774460792541504
    10. ' 
' → logprob: -9.774460792541504

Token 324: ' Args' (ID: 39185)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0020843585953116417
    2. '        
' → logprob: -7.002084255218506
    3. '   ' → logprob: -7.377084255218506
    4. '    
' → logprob: -8.877084732055664
    5. ' 
' → logprob: -9.127084732055664
    6. '  
' → logprob: -9.502084732055664
    7. '```' → logprob: -9.877084732055664
    8. '        ' → logprob: -10.752084732055664
    9. '
' → logprob: -10.877084732055664
    10. '           ' → logprob: -10.877084732055664

Token 325: ':
' (ID: 734)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 326: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025384416803717613
    2. '           ' → logprob: -4.150384426116943
    3. 'x' → logprob: -5.275384426116943
    4. '   ' → logprob: -5.900384426116943
    5. 'int' → logprob: -7.900384426116943
    6. '        
' → logprob: -8.150383949279785
    7. ' x' → logprob: -8.650383949279785
    8. '```' → logprob: -8.900383949279785
    9. ' 
' → logprob: -9.025383949279785
    10. '    
' → logprob: -9.275383949279785

Token 327: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.20148341357707977
    2. ' x' → logprob: -1.7014833688735962
    3. 'int' → logprob: -9.826483726501465
    4. '       ' → logprob: -11.201483726501465
    5. '   ' → logprob: -13.201483726501465
    6. ' int' → logprob: -14.576483726501465
    7. '           ' → logprob: -18.07648277282715
    8. '	x' → logprob: -18.32648277282715
    9. '```' → logprob: -18.57648277282715
    10. 'self' → logprob: -18.70148277282715

Token 328: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3257959485054016
    2. '):
' → logprob: -1.8257958889007568
    3. '):' → logprob: -3.075795888900757
    4. ':int' → logprob: -3.700795888900757
    5. '   ' → logprob: -4.075796127319336
    6. '<|end|>' → logprob: -4.200796127319336
    7. ':
' → logprob: -5.450796127319336
    8. '<|end|>' → logprob: -6.075796127319336
    9. ' :' → logprob: -6.325796127319336
    10. '```' → logprob: -6.950796127319336

Token 329: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -5.512236498361744e-07
    2. ' int' → logprob: -14.500000953674316
    3. '       ' → logprob: -21.875
    4. '[int' → logprob: -22.25
    5. '   ' → logprob: -22.625
    6. ':int' → logprob: -22.75
    7. '(int' → logprob: -23.0
    8. '           ' → logprob: -23.5
    9. '<int' → logprob: -23.5
    10. '=int' → logprob: -23.875

Token 330: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6341867446899414
    2. '):
' → logprob: -0.7591867446899414
    3. ':' → logprob: -6.634186744689941
    4. '   ' → logprob: -9.259186744689941
    5. ')' → logprob: -9.884186744689941
    6. ':int' → logprob: -10.259186744689941
    7. '):

' → logprob: -10.384186744689941
    8. '):
' → logprob: -11.134186744689941
    9. '<|end|>' → logprob: -11.134186744689941
    10. '       ' → logprob: -11.634186744689941

Token 331: ' The' (ID: 623)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.09063643217086792
    2. 'int' → logprob: -2.4656364917755127
    3. '       ' → logprob: -6.590636253356934
    4. ' x' → logprob: -9.590636253356934
    5. '<|end|>' → logprob: -9.590636253356934
    6. ' ' → logprob: -9.715636253356934
    7. '[int' → logprob: -10.215636253356934
    8. '   ' → logprob: -10.590636253356934
    9. '0' → logprob: -10.840636253356934
    10. '=int' → logprob: -11.715636253356934

Token 332: ' index' (ID: 3472)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.6342312693595886
    2. 'int' → logprob: -0.7592312693595886
    3. ' index' → logprob: -7.634231090545654
    4. 'n' → logprob: -8.884231567382812
    5. ' position' → logprob: -8.884231567382812
    6. '[int' → logprob: -8.884231567382812
    7. ' current' → logprob: -9.009231567382812
    8. '   ' → logprob: -9.134231567382812
    9. ')' → logprob: -9.759231567382812
    10. 'index' → logprob: -10.009231567382812

Token 333: ' up' (ID: 869)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 334: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17845448851585388
    2. '```' → logprob: -3.0534543991088867
    3. '       ' → logprob: -3.1784543991088867
    4. '=' → logprob: -3.9284543991088867
    5. ' to' → logprob: -4.428454399108887
    6. '    ' → logprob: -4.803454399108887
    7. 'to' → logprob: -5.053454399108887
    8. '           ' → logprob: -5.928454399108887
    9. '  ' → logprob: -5.928454399108887
    10. 'x' → logprob: -6.178454399108887

Token 335: ' which' (ID: 1118)
  Prédit: ' which'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' which' → logprob: -0.06203557923436165
    2. 'which' → logprob: -2.81203556060791
    3. 'x' → logprob: -10.18703556060791
    4. ' x' → logprob: -11.31203556060791
    5. ' ' → logprob: -11.56203556060791
    6. '   ' → logprob: -12.43703556060791
    7. 'Which' → logprob: -12.93703556060791
    8. ' and' → logprob: -14.68703556060791
    9. '```' → logprob: -14.68703556060791
    10. '  ' → logprob: -14.93703556060791

Token 336: ' the' (ID: 290)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.014466932974755764
    2. ' the' → logprob: -5.389466762542725
    3. 'to' → logprob: -5.639466762542725
    4. '       ' → logprob: -6.139466762542725
    5. '   ' → logprob: -6.264466762542725
    6. ' sum' → logprob: -7.014466762542725
    7. '    ' → logprob: -8.514467239379883
    8. ')' → logprob: -8.514467239379883
    9. ' ' → logprob: -8.764467239379883
    10. ' (' → logprob: -8.889467239379883

Token 337: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.31932154297828674
    2. 'sum' → logprob: -1.3193215131759644
    3. ' prefix' → logprob: -5.569321632385254
    4. 'prefix' → logprob: -6.819321632385254
    5. '       ' → logprob: -7.319321632385254
    6. ' result' → logprob: -8.444321632385254
    7. '   ' → logprob: -8.694321632385254
    8. 'result' → logprob: -9.819321632385254
    9. '_sum' → logprob: -11.319321632385254
    10. ' ' → logprob: -12.444321632385254

Token 338: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.6209584474563599
    2. ' should' → logprob: -1.1209584474563599
    3. 'should' → logprob: -2.4959583282470703
    4. 'is' → logprob: -3.3709583282470703
    5. '   ' → logprob: -3.9959583282470703
    6. ')' → logprob: -7.74595832824707
    7. ' will' → logprob: -7.99595832824707
    8. '       ' → logprob: -8.62095832824707
    9. ' ' → logprob: -9.62095832824707
    10. '```' → logprob: -9.74595832824707

Token 339: ' computed' (ID: 46716)
  Prédit: ' computed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' computed' → logprob: -0.9113581776618958
    2. ' calculated' → logprob: -1.286358118057251
    3. 'computed' → logprob: -1.411358118057251
    4. 'cal' → logprob: -2.661358118057251
    5. '       ' → logprob: -5.78635835647583
    6. '   ' → logprob: -5.91135835647583
    7. ' accumulated' → logprob: -7.53635835647583
    8. 'included' → logprob: -7.78635835647583
    9. ' to' → logprob: -8.161357879638672
    10. 'to' → logprob: -8.536357879638672

Token 340: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.49695393443107605
    2. '   ' → logprob: -1.6219539642333984
    3. ')' → logprob: -2.2469539642333984
    4. '):
' → logprob: -3.4969539642333984
    5. '):' → logprob: -3.9969539642333984
    6. '```' → logprob: -3.9969539642333984
    7. '<|end|>' → logprob: -4.996953964233398
    8. '.' → logprob: -5.371953964233398
    9. ',' → logprob: -5.621953964233398
    10. ':' → logprob: -6.496953964233398

Token 341: 'inclusive' (ID: 186093)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.05992957949638367
    2. ' int' → logprob: -2.934929609298706
    3. ')' → logprob: -6.059929370880127
    4. '   ' → logprob: -6.934929370880127
    5. '[int' → logprob: -7.309929370880127
    6. '       ' → logprob: -8.184929847717285
    7. '):
' → logprob: -8.434929847717285
    8. ' )' → logprob: -9.184929847717285
    9. '):' → logprob: -9.184929847717285
    10. ':int' → logprob: -9.434929847717285

Token 342: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5671917796134949
    2. ')' → logprob: -1.1921918392181396
    3. '):
' → logprob: -2.1921918392181396
    4. ').' → logprob: -4.0671916007995605
    5. '   ' → logprob: -8.192192077636719
    6. '       ' → logprob: -9.442192077636719
    7. '):

' → logprob: -9.817192077636719
    8. ')
' → logprob: -10.442192077636719
    9. '):
' → logprob: -11.067192077636719
    10. '),' → logprob: -11.192192077636719

Token 343: ' ' (ID: 220)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2373197078704834
    2. '):
' → logprob: -1.6123197078704834
    3. '       ' → logprob: -1.7373197078704834
    4. '   ' → logprob: -2.1123197078704834
    5. '):' → logprob: -2.7373197078704834
    6. ' int' → logprob: -2.9873197078704834
    7. 'int' → logprob: -3.4873197078704834
    8. 'def' → logprob: -4.3623199462890625
    9. ' ' → logprob: -4.4873199462890625
    10. ' 
' → logprob: -4.6123199462890625

Token 344: '1' (ID: 16)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.5232917666435242
    2. ')' → logprob: -1.273291826248169
    3. 'def' → logprob: -2.398291826248169
    4. '   ' → logprob: -4.52329158782959
    5. '       ' → logprob: -4.77329158782959
    6. 'x' → logprob: -5.27329158782959
    7. '1' → logprob: -5.39829158782959
    8. '):
' → logprob: -6.14829158782959
    9. ' ' → logprob: -6.77329158782959
    10. '0' → logprob: -6.89829158782959

Token 345: '-based' (ID: 8235)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.7713757753372192
    2. '-based' → logprob: -1.0213757753372192
    3. '   ' → logprob: -2.6463756561279297
    4. '):' → logprob: -3.1463756561279297
    5. '<=' → logprob: -3.8963756561279297
    6. ')' → logprob: -4.27137565612793
    7. ' <=' → logprob: -4.27137565612793
    8. 'based' → logprob: -5.52137565612793
    9. '       ' → logprob: -5.64637565612793
    10. '```' → logprob: -5.89637565612793

Token 346: ').

' (ID: 3991)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2044370472431183
    2. '):' → logprob: -2.329437017440796
    3. ').' → logprob: -2.579437017440796
    4. '):
' → logprob: -4.454437255859375
    5. ')
' → logprob: -10.829437255859375
    6. '):

' → logprob: -10.954437255859375
    7. ').
' → logprob: -11.079437255859375
    8. '   ' → logprob: -11.204437255859375
    9. '):
' → logprob: -11.329437255859375
    10. '),' → logprob: -11.954437255859375

Token 347: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017256340943276882
    2. '   ' → logprob: -6.876725673675537
    3. 'result' → logprob: -7.751725673675537
    4. '```' → logprob: -9.126725196838379
    5. ' result' → logprob: -9.626725196838379
    6. '        
' → logprob: -9.876725196838379
    7. '    
' → logprob: -11.876725196838379
    8. '    ' → logprob: -12.001725196838379
    9. '	' → logprob: -12.376725196838379
    10. '           ' → logprob: -12.626725196838379

Token 348: ' Returns' (ID: 9609)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003723361063748598
    2. ' result' → logprob: -5.87872314453125
    3. 'result' → logprob: -7.37872314453125
    4. '   ' → logprob: -8.87872314453125
    5. '```' → logprob: -9.75372314453125
    6. ')' → logprob: -10.00372314453125
    7. '        
' → logprob: -10.62872314453125
    8. '):
' → logprob: -11.75372314453125
    9. '
' → logprob: -12.12872314453125
    10. '    
' → logprob: -12.62872314453125

Token 349: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8360818028450012
    2. '       ' → logprob: -1.4610817432403564
    3. 'int' → logprob: -2.2110817432403564
    4. ' int' → logprob: -2.5860817432403564
    5. '   ' → logprob: -3.2110817432403564
    6. '<|end|>' → logprob: -3.5860817432403564
    7. ')' → logprob: -3.8360817432403564
    8. '    ' → logprob: -4.3360819816589355
    9. ':int' → logprob: -4.4610819816589355
    10. '        ' → logprob: -4.7110819816589355

Token 350: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027922164648771286
    2. ' int' → logprob: -4.0279221534729
    3. 'int' → logprob: -4.7779221534729
    4. '        ' → logprob: -6.7779221534729
    5. '0' → logprob: -9.152922630310059
    6. '           ' → logprob: -11.152922630310059
    7. ':' → logprob: -12.027922630310059
    8. '<int' → logprob: -12.027922630310059
    9. '   ' → logprob: -12.152922630310059
    10. ' self' → logprob: -12.402922630310059

Token 351: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' (adapté à ' int') → logprob: -0.0031806828919798136
    2. ' int' → logprob: -5.753180503845215
    3. '       ' → logprob: -13.003180503845215
    4. '   ' → logprob: -14.128180503845215
    5. 'self' → logprob: -17.75318145751953
    6. '           ' → logprob: -18.37818145751953
    7. '[int' → logprob: -18.62818145751953
    8. '	int' → logprob: -19.00318145751953
    9. '(int' → logprob: -19.12818145751953
    10. '<int' → logprob: -19.50318145751953

Token 352: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.37552279233932495
    2. '       ' → logprob: -1.6255228519439697
    3. '<|end|>' → logprob: -2.5005228519439697
    4. '   ' → logprob: -3.8755228519439697
    5. ')' → logprob: -5.000522613525391
    6. ':
' → logprob: -6.500522613525391
    7. '    ' → logprob: -7.000522613525391
    8. '<|end|>' → logprob: -7.125522613525391
    9. '        ' → logprob: -7.250522613525391
    10. '           ' → logprob: -7.500522613525391

Token 353: ' The' (ID: 623)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6576887965202332
    2. ' ' → logprob: -0.9076887965202332
    3. '       ' → logprob: -2.657688856124878
    4. ' self' → logprob: -5.407688617706299
    5. '        ' → logprob: -6.782688617706299
    6. 'self' → logprob: -6.907688617706299
    7. 'sum' → logprob: -7.407688617706299
    8. '   ' → logprob: -8.157689094543457
    9. '           ' → logprob: -8.907689094543457
    10. '    ' → logprob: -9.032689094543457

Token 354: ' sum' (ID: 4215)
  Prédit: ' prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prefix' → logprob: -0.6595199108123779
    2. ' sum' → logprob: -0.9095199108123779
    3. 'prefix' → logprob: -3.034519910812378
    4. 'sum' → logprob: -4.159520149230957
    5. ' result' → logprob: -4.659520149230957
    6. ' cumulative' → logprob: -5.659520149230957
    7. ' total' → logprob: -6.034520149230957
    8. ' accumulated' → logprob: -7.784520149230957
    9. 'result' → logprob: -8.034520149230957
    10. ' current' → logprob: -8.534520149230957

Token 355: ' from' (ID: 591)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 356: ' index' (ID: 3472)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.062231846153736115
    2. ' ' → logprob: -2.8122317790985107
    3. '0' → logprob: -9.18723201751709
    4. '   ' → logprob: -9.93723201751709
    5. '           ' → logprob: -10.43723201751709
    6. 'index' → logprob: -10.56223201751709
    7. ' index' → logprob: -10.93723201751709
    8. ' the' → logprob: -11.18723201751709
    9. '       ' → logprob: -11.68723201751709
    10. 'the' → logprob: -12.68723201751709

Token 357: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.47491973638534546
    2. ' ' → logprob: -0.9749197363853455
    3. '0' → logprob: -7.34991979598999
    4. '           ' → logprob: -9.349919319152832
    5. '```' → logprob: -10.099919319152832
    6. '   ' → logprob: -10.474919319152832
    7. '       ' → logprob: -11.474919319152832
    8. '    ' → logprob: -11.724919319152832
    9. '            ' → logprob: -11.974919319152832
    10. '        ' → logprob: -12.224919319152832

Token 358: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.214019307051785e-05
    2. ' ' → logprob: -11.250032424926758
    3. '```' → logprob: -11.625032424926758
    4. '0' → logprob: -12.000032424926758
    5. '   ' → logprob: -13.000032424926758
    6. '           ' → logprob: -14.125032424926758
    7. '       ' → logprob: -14.125032424926758
    8. '`' → logprob: -15.625032424926758
    9. '
' → logprob: -16.875032424926758
    10. 'def' → logprob: -17.375032424926758

Token 359: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.013512296602129936
    2. 'to' → logprob: -4.888512134552002
    3. '           ' → logprob: -5.388512134552002
    4. '       ' → logprob: -7.263512134552002
    5. '   ' → logprob: -8.76351261138916
    6. ' through' → logprob: -9.01351261138916
    7. '            ' → logprob: -9.13851261138916
    8. '        ' → logprob: -10.01351261138916
    9. '    ' → logprob: -10.51351261138916
    10. ' up' → logprob: -10.63851261138916

Token 360: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.07889066636562347
    2. ' x' → logprob: -2.578890562057495
    3. '   ' → logprob: -14.703890800476074
    4. '```' → logprob: -15.203890800476074
    5. '`' → logprob: -16.703889846801758
    6. '       ' → logprob: -16.703889846801758
    7. ' `' → logprob: -17.078889846801758
    8. '	x' → logprob: -18.578889846801758
    9. ' ' → logprob: -18.703889846801758
    10. '           ' → logprob: -18.828889846801758

Token 361: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16880899667739868
    2. ')' → logprob: -2.418808937072754
    3. '<|end|>' → logprob: -3.543808937072754
    4. '   ' → logprob: -3.918808937072754
    5. '.' → logprob: -4.668808937072754
    6. '
' → logprob: -5.668808937072754
    7. '```' → logprob: -6.668808937072754
    8. '<|end|>' → logprob: -6.793808937072754
    9. ').' → logprob: -7.793808937072754
    10. '):
' → logprob: -7.918808937072754

Token 362: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.46501779556274414
    2. '   ' → logprob: -1.2150177955627441
    3. '    
' → logprob: -3.715017795562744
    4. '<|end|>' → logprob: -4.090017795562744
    5. '```' → logprob: -4.715017795562744
    6. '  
' → logprob: -5.215017795562744
    7. '        
' → logprob: -5.590017795562744
    8. '    ' → logprob: -5.965017795562744
    9. ' 
' → logprob: -6.215017795562744
    10. '   
' → logprob: -6.340017795562744

Token 363: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0034865085035562515
    2. '   ' → logprob: -6.503486633300781
    3. '
' → logprob: -7.128486633300781
    4. '```' → logprob: -7.503486633300781
    5. ')' → logprob: -8.378486633300781
    6. '    ' → logprob: -8.503486633300781
    7. '        
' → logprob: -9.753486633300781
    8. '        ' → logprob: -9.878486633300781
    9. '"""
' (adapté à ' """
') → logprob: -11.128486633300781
    10. '):
' → logprob: -11.378486633300781

Token 364: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001167364651337266
    2. '   ' → logprob: -7.376167297363281
    3. 'result' → logprob: -7.876167297363281
    4. 'total' → logprob: -9.876167297363281
    5. 's' → logprob: -10.501167297363281
    6. ' result' → logprob: -11.001167297363281
    7. 'res' → logprob: -11.001167297363281
    8. 'sum' → logprob: -11.126167297363281
    9. '```' → logprob: -11.251167297363281
    10. ' total' → logprob: -12.751167297363281

Token 365: ' ret' (ID: 2881)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.13057170808315277
    2. 's' → logprob: -2.1305716037750244
    3. 'result' → logprob: -5.6305718421936035
    4. '       ' → logprob: -10.505571365356445
    5. 'ret' (adapté à ' ret') → logprob: -11.255571365356445
    6. ' res' → logprob: -12.130571365356445
    7. '   ' → logprob: -13.005571365356445
    8. ' s' → logprob: -13.380571365356445
    9. 'r' → logprob: -14.880571365356445
    10. 'ans' → logprob: -15.380571365356445

Token 366: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3134899139404297
    2. '=' → logprob: -1.3134899139404297
    3. ' ' → logprob: -8.81348991394043
    4. '   ' → logprob: -9.81348991394043
    5. '  ' → logprob: -11.81348991394043
    6. '    ' → logprob: -11.93848991394043
    7. ' +=' → logprob: -12.31348991394043
    8. '       ' → logprob: -12.93848991394043
    9. '        ' → logprob: -14.18848991394043
    10. ',' → logprob: -14.68848991394043

Token 367: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004307884373702109
    2. ' ' → logprob: -7.750430583953857
    3. '   ' → logprob: -16.000431060791016
    4. '       ' → logprob: -18.125431060791016
    5. ' ' → logprob: -20.125431060791016
    6. '  ' → logprob: -20.500431060791016
    7. '۰' → logprob: -20.500431060791016
    8. '=' → logprob: -21.000431060791016
    9. '    ' → logprob: -21.500431060791016
    10. '           ' → logprob: -21.625431060791016

Token 368: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '   ' → logprob: -21.125
    4. '۰' → logprob: -21.125
    5. '０' → logprob: -21.875
    6. '000' → logprob: -22.625
    7. 'self' → logprob: -23.125
    8. '=' → logprob: -23.875
    9. '```' → logprob: -24.0
    10. '012' → logprob: -24.125

Token 369: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2552240788936615
    2. '
' → logprob: -1.5052241086959839
    3. '        
' → logprob: -6.630224227905273
    4. '<|end|>' → logprob: -7.130224227905273
    5. '  
' → logprob: -8.255224227905273
    6. '   ' → logprob: -8.380224227905273
    7. '    
' → logprob: -8.380224227905273
    8. '
' → logprob: -9.380224227905273
    9. '	' → logprob: -9.505224227905273
    10. ' 
' → logprob: -10.005224227905273

Token 370: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07797443866729736
    2. '
' → logprob: -2.702974319458008
    3. '        
' → logprob: -6.202974319458008
    4. '<|end|>' → logprob: -6.202974319458008
    5. '	' → logprob: -6.952974319458008
    6. '   ' → logprob: -7.077974319458008
    7. '  
' → logprob: -7.827974319458008
    8. '    
' → logprob: -7.827974319458008
    9. '		
' → logprob: -7.952974319458008
    10. ' 
' → logprob: -8.327974319458008

Token 371: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.029828930273652077
    2. '       ' → logprob: -3.7798290252685547
    3. ' while' → logprob: -5.029829025268555
    4. '   ' → logprob: -11.404829025268555
    5. '	while' → logprob: -12.029829025268555
    6. 'While' → logprob: -13.154829025268555
    7. 'x' → logprob: -13.654829025268555
    8. 'i' → logprob: -14.279829025268555
    9. 'def' → logprob: -15.154829025268555
    10. '        ' → logprob: -15.404829025268555

Token 372: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.01814994215965271
    2. 'x' → logprob: -4.0181498527526855
    3. '	x' → logprob: -17.643150329589844
    4. ' ' → logprob: -19.518150329589844
    5. ')x' → logprob: -21.143150329589844
    6. '{x' → logprob: -21.268150329589844
    7. '"x' → logprob: -21.393150329589844
    8. '   ' → logprob: -21.643150329589844
    9. '$x' → logprob: -21.643150329589844
    10. '>x' → logprob: -22.268150329589844

Token 373: ' !=' (ID: 1666)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.0009156247251667082
    2. ' >' → logprob: -7.00091552734375
    3. '>=' → logprob: -13.62591552734375
    4. '&gt' → logprob: -13.75091552734375
    5. ':' → logprob: -14.00091552734375
    6. '   ' → logprob: -15.00091552734375
    7. '">' → logprob: -15.87591552734375
    8. '[' → logprob: -16.37591552734375
    9. '>:' → logprob: -16.75091552734375
    10. '>
' → logprob: -17.00091552734375

Token 374: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001398929744027555
    2. ' ' → logprob: -8.875140190124512
    3. '   ' → logprob: -20.250139236450195
    4. '  ' → logprob: -21.625139236450195
    5. '۰' → logprob: -22.500139236450195
    6. '>' → logprob: -22.625139236450195
    7. '=' → logprob: -23.000139236450195
    8. '    ' → logprob: -23.125139236450195
    9. '```' → logprob: -23.125139236450195
    10. '<|end|>' → logprob: -23.375139236450195

Token 375: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '   ' → logprob: -21.3750057220459
    4. '```' → logprob: -23.7500057220459
    5. '  ' → logprob: -23.8750057220459
    6. '000' → logprob: -24.0000057220459
    7. '00' → logprob: -24.0000057220459
    8. 'None' → logprob: -24.1250057220459
    9. '۰' → logprob: -24.2500057220459
    10. '>' → logprob: -24.2500057220459

Token 376: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.09859203547239304
    2. ':' → logprob: -2.4735920429229736
    3. '           ' → logprob: -4.7235918045043945
    4. '       ' → logprob: -8.348591804504395
    5. '<|end|>' → logprob: -8.348591804504395
    6. ',' → logprob: -9.098591804504395
    7. '):
' → logprob: -10.098591804504395
    8. '<|end|>' → logprob: -10.348591804504395
    9. ' and' → logprob: -11.473591804504395
    10. '   ' → logprob: -11.848591804504395

Token 377: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -5.5027299822540954e-05
    2. '
' → logprob: -10.375055313110352
    3. '       ' → logprob: -11.750055313110352
    4. '```' → logprob: -11.750055313110352
    5. '<|end|>' → logprob: -12.500055313110352
    6. '	       ' → logprob: -13.875055313110352
    7. '            
' → logprob: -14.750055313110352
    8. '   ' → logprob: -14.875055313110352
    9. '          ' → logprob: -15.000055313110352
    10. '		' → logprob: -15.375055313110352

Token 378: ' ret' (ID: 2881)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ret' (adapté à ' ret') → logprob: -0.12130820006132126
    2. '           ' → logprob: -2.3713080883026123
    3. ' ret' → logprob: -3.8713080883026123
    4. '       ' → logprob: -10.371308326721191
    5. '	ret' → logprob: -12.246308326721191
    6. '               ' → logprob: -12.496308326721191
    7. '```' → logprob: -12.871308326721191
    8. '$ret' → logprob: -12.996308326721191
    9. '(ret' → logprob: -13.496308326721191
    10. '   ' → logprob: -14.246308326721191

Token 379: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.10052108019590378
    2. '+=' → logprob: -2.3505210876464844
    3. '           ' → logprob: -8.225521087646484
    4. '            ' → logprob: -11.225521087646484
    5. '       ' → logprob: -11.350521087646484
    6. '+' → logprob: -11.725521087646484
    7. '        ' → logprob: -12.475521087646484
    8. ']+=' → logprob: -12.475521087646484
    9. '   ' → logprob: -13.475521087646484
    10. '    ' → logprob: -13.850521087646484

Token 380: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0009117019944824278
    2. ' self' → logprob: -7.000911712646484
    3. 'bit' → logprob: -16.000911712646484
    4. '   ' → logprob: -17.500911712646484
    5. '[self' → logprob: -17.625911712646484
    6. '	self' → logprob: -18.500911712646484
    7. '```' → logprob: -18.625911712646484
    8. '(self' → logprob: -18.875911712646484
    9. '       ' → logprob: -19.125911712646484
    10. ' ' → logprob: -19.250911712646484

Token 381: '.bit' (ID: 61866)
  Prédit: '.bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.bit' → logprob: -3.4285862057004124e-05
    2. '.' → logprob: -10.62503433227539
    3. 'bit' → logprob: -11.62503433227539
    4. ' .' → logprob: -14.25003433227539
    5. '.bits' → logprob: -16.00003433227539
    6. '.bet' → logprob: -16.50003433227539
    7. ' bit' → logprob: -16.62503433227539
    8. '.b' → logprob: -17.62503433227539
    9. '.Bit' → logprob: -18.00003433227539
    10. '.bot' → logprob: -18.37503433227539

Token 382: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -2.696889623621246e-06
    2. 'x' → logprob: -13.12500286102295
    3. '[' → logprob: -14.37500286102295
    4. ' [' → logprob: -17.250001907348633
    5. '[
' → logprob: -17.750001907348633
    6. '```' → logprob: -18.000001907348633
    7. ' x' → logprob: -19.625001907348633
    8. '(x' → logprob: -19.875001907348633
    9. '\[' → logprob: -19.875001907348633
    10. '{x' → logprob: -20.875001907348633

Token 383: ']
' (ID: 1592)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13525530695915222
    2. ')' → logprob: -2.3852553367614746
    3. '<|end|>' → logprob: -4.260255336761475
    4. ')
' → logprob: -4.760255336761475
    5. ']' → logprob: -5.510255336761475
    6. '       ' → logprob: -5.760255336761475
    7. ')x' → logprob: -7.385255336761475
    8. '   ' → logprob: -7.385255336761475
    9. '<|end|>' → logprob: -7.385255336761475
    10. '               ' → logprob: -7.635255336761475

Token 384: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010376387275755405
    2. '
' → logprob: -4.760376453399658
    3. '       ' → logprob: -7.260376453399658
    4. 'x' → logprob: -7.635376453399658
    5. ' x' → logprob: -7.885376453399658
    6. '   ' → logprob: -9.3853759765625
    7. '```' → logprob: -9.7603759765625
    8. '               ' → logprob: -11.2603759765625
    9. '            
' → logprob: -11.2603759765625
    10. ',' → logprob: -12.5103759765625

Token 385: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.38878297805786133
    2. 'x' (adapté à ' x') → logprob: -1.1387829780578613
    3. '           ' → logprob: -6.263782978057861
    4. '   ' → logprob: -13.263782501220703
    5. '
' → logprob: -13.513782501220703
    6. '	x' → logprob: -14.138782501220703
    7. '       ' → logprob: -14.263782501220703
    8. '```' → logprob: -14.638782501220703
    9. '               ' → logprob: -14.888782501220703
    10. ' ' → logprob: -15.263782501220703

Token 386: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.44606542587280273
    2. '-=' → logprob: -1.1960654258728027
    3. '&' → logprob: -2.9460654258728027
    4. ' &=' → logprob: -5.821065425872803
    5. '-' → logprob: -6.571065425872803
    6. ' &' → logprob: -7.696065425872803
    7. '&nbsp' → logprob: -9.696065902709961
    8. '=' → logprob: -11.071065902709961
    9. '-&' → logprob: -11.946065902709961
    10. '   ' → logprob: -12.321065902709961

Token 387: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0009114635176956654
    2. ' x' → logprob: -7.000911235809326
    3. '	x' → logprob: -19.250911712646484
    4. '(x' → logprob: -20.625911712646484
    5. '   ' → logprob: -21.625911712646484
    6. '```' → logprob: -22.375911712646484
    7. '{x' → logprob: -22.875911712646484
    8. ' ' → logprob: -23.000911712646484
    9. '_x' → logprob: -23.625911712646484
    10. '"x' → logprob: -23.875911712646484

Token 388: ' &' (ID: 827)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.04862154647707939
    2. ' &' → logprob: -3.048621654510498
    3. 'x' → logprob: -10.54862117767334
    4. '&amp' → logprob: -12.29862117767334
    5. '&t' → logprob: -14.67362117767334
    6. '&_' → logprob: -14.92362117767334
    7. '"&' → logprob: -15.17362117767334
    8. ' ' → logprob: -15.17362117767334
    9. '&
' → logprob: -15.29862117767334
    10. '&nbsp' → logprob: -15.42362117767334

Token 389: ' -' (ID: 533)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.06202325597405434
    2. ' x' → logprob: -2.812023162841797
    3. ' -' → logprob: -10.687023162841797
    4. '-x' → logprob: -10.812023162841797
    5. '-' → logprob: -11.312023162841797
    6. '	x' → logprob: -15.437023162841797
    7. ' ' → logprob: -16.937023162841797
    8. '_x' → logprob: -17.437023162841797
    9. '```' → logprob: -18.312023162841797
    10. '(x' → logprob: -18.562023162841797

Token 390: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -3.128163257315464e-07
    2. ' x' → logprob: -15.375
    3. '	x' → logprob: -19.75
    4. '<|end|>' → logprob: -19.75
    5. ')x' → logprob: -20.25
    6. '(x' → logprob: -20.75
    7. '```' → logprob: -20.75
    8. '{x' → logprob: -20.875
    9. '%x' → logprob: -21.25
    10. '$x' → logprob: -21.375

Token 391: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09082727134227753
    2. '<|end|>' → logprob: -2.590827226638794
    3. ' return' → logprob: -5.215827465057373
    4. 'return' → logprob: -6.215827465057373
    5. '
' → logprob: -6.840827465057373
    6. ' ' → logprob: -7.465827465057373
    7. '   ' → logprob: -7.840827465057373
    8. '        
' → logprob: -7.840827465057373
    9. '0' → logprob: -8.090826988220215
    10. '<|end|>' → logprob: -8.215826988220215

Token 392: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6380850672721863
    2. 'return' → logprob: -1.263085126876831
    3. '<|end|>' → logprob: -2.263085126876831
    4. ' return' → logprob: -3.513085126876831
    5. '
' → logprob: -3.638085126876831
    6. '0' → logprob: -4.638084888458252
    7. '```' → logprob: -4.763084888458252
    8. '           ' → logprob: -6.138084888458252
    9. '	return' → logprob: -6.638084888458252
    10. ' ' → logprob: -6.763084888458252

Token 393: ' Move' (ID: 25485)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.387078195810318
    2. 'x' → logprob: -1.1370781660079956
    3. '1' → logprob: -9.262078285217285
    4. '<|end|>' → logprob: -9.512078285217285
    5. ' ' → logprob: -11.262078285217285
    6. '```' → logprob: -11.387078285217285
    7. '0' → logprob: -12.512078285217285
    8. ')' → logprob: -12.637078285217285
    9. ')x' → logprob: -13.262078285217285
    10. '(x' → logprob: -13.762078285217285

Token 394: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -1.0546568632125854
    2. ' x' → logprob: -1.0546568632125854
    3. 'x' → logprob: -1.9296568632125854
    4. '<|end|>' → logprob: -2.429656982421875
    5. 'to' → logprob: -2.679656982421875
    6. 's' → logprob: -7.679656982421875
    7. ' ' → logprob: -8.054656982421875
    8. '<|end|>' → logprob: -8.179656982421875
    9. 'To' → logprob: -9.304656982421875
    10. '```' → logprob: -9.804656982421875

Token 395: ' parent' (ID: 5980)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.07889000326395035
    2. ' x' → logprob: -2.578890085220337
    3. '(x' → logprob: -16.078889846801758
    4. 'the' → logprob: -17.328889846801758
    5. ' the' → logprob: -17.453889846801758
    6. '```' → logprob: -17.578889846801758
    7. ' ' → logprob: -18.203889846801758
    8. '	x' → logprob: -18.453889846801758
    9. 'The' → logprob: -19.328889846801758
    10. '{x' → logprob: -19.703889846801758

Token 396: ' node' (ID: 4596)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 397: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019105203449726105
    2. '<|end|>' → logprob: -4.269105434417725
    3. 'return' → logprob: -6.019105434417725
    4. ' return' → logprob: -6.394105434417725
    5. '
' → logprob: -7.519105434417725
    6. '<|end|>' → logprob: -9.394104957580566
    7. '        
' → logprob: -9.894104957580566
    8. '   ' → logprob: -10.519104957580566
    9. '	return' → logprob: -10.769104957580566
    10. ':return' → logprob: -11.019104957580566

Token 398: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006590616540051997
    2. ' return' → logprob: -7.750658988952637
    3. '```' → logprob: -9.875658988952637
    4. '   ' → logprob: -10.125658988952637
    5. 'return' → logprob: -10.625658988952637
    6. '	' → logprob: -10.625658988952637
    7. '[' → logprob: -10.750658988952637
    8. '<|end|>' → logprob: -11.000658988952637
    9. '
' → logprob: -11.125658988952637
    10. '        
' → logprob: -11.375658988952637

Token 399: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026478644460439682
    2. ' return' → logprob: -3.7764785289764404
    3. 'return' (adapté à ' return') → logprob: -5.7764787673950195
    4. '   ' → logprob: -9.02647876739502
    5. '	return' → logprob: -12.27647876739502
    6. '```' → logprob: -13.15147876739502
    7. ' ' → logprob: -14.90147876739502
    8. '
' → logprob: -14.90147876739502
    9. ':return' → logprob: -16.026477813720703
    10. '           ' → logprob: -16.026477813720703

Token 400: ' ret' (ID: 2881)
  Prédit: ' ret'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ret' → logprob: -0.12692810595035553
    2. 'ret' → logprob: -2.1269280910491943
    3. '	ret' → logprob: -17.126928329467773
    4. '(ret' → logprob: -17.251928329467773
    5. '$ret' → logprob: -18.751928329467773
    6. '.ret' → logprob: -19.751928329467773
    7. ' ' → logprob: -20.001928329467773
    8. '_ret' → logprob: -20.126928329467773
    9. 'rets' → logprob: -20.376928329467773
    10. ' retval' → logprob: -20.751928329467773

Token 401: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 402: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 403: ' Read' (ID: 5405)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.47925835847854614
    2. 'def' → logprob: -1.7292582988739014
    3. 'n' → logprob: -2.8542582988739014
    4. '[' → logprob: -3.2292582988739014
    5. '<|end|>' → logprob: -3.4792582988739014
    6. 'a' → logprob: -3.6042582988739014
    7. '
' → logprob: -4.6042585372924805
    8. 'd' → logprob: -4.7292585372924805
    9. ' ' → logprob: -5.3542585372924805
    10. ')' → logprob: -5.4792585372924805

Token 404: ' input' (ID: 3422)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2870304584503174
    2. '(' → logprob: -1.6620304584503174
    3. ' =' → logprob: -4.412030220031738
    4. '_' → logprob: -4.787030220031738
    5. 'import' → logprob: -5.037030220031738
    6. 'input' → logprob: -5.287030220031738
    7. '#' → logprob: -5.662030220031738
    8. '[' → logprob: -5.787030220031738
    9. 's' → logprob: -5.787030220031738
    10. '[]' → logprob: -6.162030220031738

Token 405: ' for' (ID: 395)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.023968864232301712
    2. 'N' → logprob: -3.8989689350128174
    3. '()' → logprob: -5.773968696594238
    4. 'def' → logprob: -9.398968696594238
    5. ' n' → logprob: -10.148968696594238
    6. '(n' → logprob: -10.273968696594238
    7. '()
' → logprob: -10.398968696594238
    8. '
' → logprob: -10.773968696594238
    9. ':' → logprob: -11.273968696594238
    10. 'if' → logprob: -11.398968696594238

Token 406: ' string' (ID: 1621)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.17850524187088013
    2. 'N' → logprob: -1.9285051822662354
    3. ' n' → logprob: -4.1785054206848145
    4. ' N' → logprob: -6.3035054206848145
    5. 't' → logprob: -8.053504943847656
    6. 'T' → logprob: -8.928504943847656
    7. 'Q' → logprob: -8.928504943847656
    8. '_' → logprob: -9.428504943847656
    9. 'the' → logprob: -9.928504943847656
    10. 'def' → logprob: -10.428504943847656

Token 407: ' length' (ID: 5517)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.08599920570850372
    2. 'S' → logprob: -2.5859992504119873
    3. 'n' → logprob: -5.210999011993408
    4. ' =' → logprob: -7.335999011993408
    5. 'N' → logprob: -7.460999011993408
    6. '()' → logprob: -8.960999488830566
    7. '=' → logprob: -9.460999488830566
    8. 'line' → logprob: -10.210999488830566
    9. '_s' → logprob: -10.335999488830566
    10. ' s' → logprob: -10.335999488830566

Token 408: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.04859577491879463
    2. 'N' → logprob: -3.048595666885376
    3. 'L' → logprob: -12.298595428466797
    4. '```' → logprob: -12.923595428466797
    5. '
' → logprob: -14.798595428466797
    6. ' n' → logprob: -14.798595428466797
    7. 'length' → logprob: -15.673595428466797
    8. '_n' → logprob: -16.173595428466797
    9. '(n' → logprob: -16.673595428466797
    10. 's' → logprob: -17.048595428466797

Token 409: 'N' (ID: 45)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.07889188081026077
    2. 'N' → logprob: -2.5788919925689697
    3. ' n' → logprob: -14.07889175415039
    4. '```' → logprob: -14.07889175415039
    5. 'L' → logprob: -15.95389175415039
    6. 'length' → logprob: -16.32889175415039
    7. '_n' → logprob: -16.57889175415039
    8. '
' → logprob: -16.82889175415039
    9. ' N' → logprob: -17.32889175415039
    10. '#' → logprob: -17.57889175415039

Token 410: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3151482939720154
    2. '=' → logprob: -1.3151483535766602
    3. ',' → logprob: -6.44014835357666
    4. '=int' → logprob: -8.19014835357666
    5. '   ' → logprob: -12.44014835357666
    6. '=N' → logprob: -13.06514835357666
    7. '=input' → logprob: -13.44014835357666
    8. '=sys' → logprob: -13.56514835357666
    9. ',N' → logprob: -13.94014835357666
    10. ' ,' → logprob: -14.56514835357666

Token 411: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0001234428636962548
    2. ' int' → logprob: -9.000123023986816
    3. 'input' → logprob: -18.750123977661133
    4. 'len' → logprob: -19.125123977661133
    5. '0' → logprob: -20.750123977661133
    6. '(int' → logprob: -20.750123977661133
    7. '[int' → logprob: -20.875123977661133
    8. '   ' → logprob: -21.250123977661133
    9. '=int' → logprob: -22.125123977661133
    10. ' ' → logprob: -22.375123977661133

Token 412: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.012193618342280388
    2. 'input' → logprob: -5.13719367980957
    3. '()' → logprob: -5.76219367980957
    4. '(' → logprob: -6.13719367980957
    5. '(sys' → logprob: -7.01219367980957
    6. ' (' → logprob: -11.01219367980957
    7. 'sys' → logprob: -11.63719367980957
    8. ' input' → logprob: -12.01219367980957
    9. '=input' → logprob: -13.13719367980957
    10. ' ()' → logprob: -13.26219367980957

Token 413: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.011061026714742184
    2. '()' → logprob: -4.511061191558838
    3. ')' → logprob: -11.63606071472168
    4. '().' → logprob: -13.13606071472168
    5. ' ())' → logprob: -13.76106071472168
    6. '())
' → logprob: -14.01106071472168
    7. '(' → logprob: -15.38606071472168
    8. '();)' → logprob: -15.63606071472168
    9. '())

' → logprob: -16.76106071472168
    10. '()
' → logprob: -16.88606071472168

Token 414: '#' (ID: 2)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.02977907471358776
    2. 's' → logprob: -3.5297789573669434
    3. '```' → logprob: -11.029779434204102
    4. 'A' → logprob: -12.404779434204102
    5. ' S' → logprob: -12.529779434204102
    6. 'T' → logprob: -13.279779434204102
    7. 'string' → logprob: -14.529779434204102
    8. 'W' → logprob: -15.029779434204102
    9. 'a' → logprob: -15.029779434204102
    10. 't' → logprob: -15.404779434204102

Token 415: ' Read' (ID: 5405)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.0792553648352623
    2. 's' → logprob: -2.5792553424835205
    3. 'A' → logprob: -8.329255104064941
    4. 'a' → logprob: -10.829255104064941
    5. ' S' → logprob: -11.079255104064941
    6. '```' → logprob: -11.079255104064941
    7. '#' → logprob: -11.204255104064941
    8. 'T' → logprob: -11.579255104064941
    9. 'string' → logprob: -11.579255104064941
    10. 'data' → logprob: -11.704255104064941

Token 416: ' the' (ID: 290)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.38703539967536926
    2. 's' → logprob: -1.1370353698730469
    3. ' S' → logprob: -9.762035369873047
    4. 'string' → logprob: -10.637035369873047
    5. ' s' → logprob: -10.762035369873047
    6. 'data' → logprob: -11.137035369873047
    7. '```' → logprob: -11.262035369873047
    8. 'A' → logprob: -11.387035369873047
    9. 'input' → logprob: -12.262035369873047
    10. 'str' → logprob: -12.637035369873047

Token 417: ' initial' (ID: 4871)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.4299558997154236
    2. 's' → logprob: -1.0549559593200684
    3. 'string' → logprob: -6.804955959320068
    4. ' S' → logprob: -9.80495548248291
    5. '```' → logprob: -11.17995548248291
    6. 'A' → logprob: -11.30495548248291
    7. 'data' → logprob: -11.30495548248291
    8. 'text' → logprob: -11.67995548248291
    9. ' s' → logprob: -11.80495548248291
    10. 'str' → logprob: -11.92995548248291

Token 418: ' string' (ID: 1621)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.600836455821991
    2. 's' → logprob: -0.975836455821991
    3. 'string' → logprob: -2.6008365154266357
    4. ' S' → logprob: -9.100836753845215
    5. '_s' → logprob: -9.225836753845215
    6. 'data' → logprob: -10.100836753845215
    7. 'A' → logprob: -10.100836753845215
    8. '_string' → logprob: -10.100836753845215
    9. 'line' → logprob: -10.475836753845215
    10. 'str' → logprob: -10.600836753845215

Token 419: ' as' (ID: 472)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.1603538990020752
    2. 's' → logprob: -1.9103538990020752
    3. '
' → logprob: -9.410353660583496
    4. '```' → logprob: -10.160353660583496
    5. '    
' → logprob: -13.410353660583496
    6. '_s' → logprob: -14.035353660583496
    7. '(S' → logprob: -14.285353660583496
    8. '(s' → logprob: -14.285353660583496
    9. ' S' → logprob: -14.535353660583496
    10. 'T' → logprob: -14.535353660583496

Token 420: ' a' (ID: 261)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.2551751434803009
    2. 'input' → logprob: -1.5051751136779785
    3. 's' → logprob: -5.7551751136779785
    4. 'sys' → logprob: -10.880175590515137
    5. 'S' → logprob: -11.005175590515137
    6. 'str' → logprob: -11.255175590515137
    7. ' list' → logprob: -11.755175590515137
    8. ' input' → logprob: -11.880175590515137
    9. 'a' → logprob: -12.130175590515137
    10. 'lst' → logprob: -12.880175590515137

Token 421: ' list' (ID: 1562)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.4983596205711365
    2. 'list' → logprob: -1.3733596801757812
    3. 'string' → logprob: -2.7483596801757812
    4. 's' → logprob: -2.7483596801757812
    5. 'input' → logprob: -4.748359680175781
    6. 'line' → logprob: -6.998359680175781
    7. 'raw' → logprob: -7.373359680175781
    8. ' list' → logprob: -7.623359680175781
    9. 'strip' → logprob: -8.998359680175781
    10. ' str' → logprob: -9.248359680175781

Token 422: ' of' (ID: 328)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.35174012184143066
    2. 's' → logprob: -1.2267401218414307
    3. ' =' → logprob: -6.226739883422852
    4. '()' → logprob: -8.101739883422852
    5. '=' → logprob: -8.351739883422852
    6. ' S' → logprob: -8.726739883422852
    7. 'A' → logprob: -9.101739883422852
    8. 'of' → logprob: -9.476739883422852
    9. '```' → logprob: -9.476739883422852
    10. '
' → logprob: -9.851739883422852

Token 423: ' characters' (ID: 9862)
  Prédit: 'chars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chars' → logprob: -0.34586793184280396
    2. 'list' → logprob: -1.8458678722381592
    3. 'characters' → logprob: -2.345867872238159
    4. 'str' → logprob: -3.345867872238159
    5. 'input' → logprob: -5.720868110656738
    6. ' characters' → logprob: -9.095868110656738
    7. ' chars' → logprob: -9.845868110656738
    8. 'sys' → logprob: -10.345868110656738
    9. 'char' → logprob: -10.845868110656738
    10. 'strings' → logprob: -12.595868110656738

Token 424: '
' (ID: 198)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.062425509095191956
    2. 's' → logprob: -2.8124256134033203
    3. '
' → logprob: -8.06242561340332
    4. 'A' → logprob: -9.81242561340332
    5. '```' → logprob: -10.31242561340332
    6. '    
' → logprob: -11.06242561340332
    7. 'a' → logprob: -11.31242561340332
    8. ' S' → logprob: -12.56242561340332
    9. '   ' → logprob: -12.68742561340332
    10. 'T' → logprob: -12.93742561340332

Token 425: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.04327058047056198
    2. 's' → logprob: -3.1682705879211426
    3. 'A' → logprob: -8.543270111083984
    4. 'a' → logprob: -10.418270111083984
    5. ' S' → logprob: -11.168270111083984
    6. 'C' → logprob: -12.293270111083984
    7. 'T' → logprob: -12.293270111083984
    8. 'c' → logprob: -12.543270111083984
    9. 'data' → logprob: -13.043270111083984
    10. '```' → logprob: -13.043270111083984

Token 426: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759463310241699
    2. ' =' → logprob: -0.8259463310241699
    3. '=list' → logprob: -12.075946807861328
    4. '=S' → logprob: -14.575946807861328
    5. '()' → logprob: -15.075946807861328
    6. 'list' → logprob: -15.825946807861328
    7. '   ' → logprob: -16.450946807861328
    8. 's' → logprob: -17.075946807861328
    9. '＝' → logprob: -17.200946807861328
    10. '=s' → logprob: -17.325946807861328

Token 427: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -2.696889623621246e-06
    2. ' list' → logprob: -13.25000286102295
    3. '[list' → logprob: -14.12500286102295
    4. 'input' → logprob: -15.87500286102295
    5. '(list' → logprob: -17.375001907348633
    6. '=list' → logprob: -19.875001907348633
    7. '[input' → logprob: -20.125001907348633
    8. '[' → logprob: -20.875001907348633
    9. '	list' → logprob: -21.500001907348633
    10. '.list' → logprob: -21.750001907348633

Token 428: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -3.976922744186595e-05
    2. 'input' → logprob: -10.500040054321289
    3. '(str' → logprob: -11.750040054321289
    4. '(' → logprob: -13.250040054321289
    5. '()' → logprob: -13.500040054321289
    6. '(sys' → logprob: -14.000040054321289
    7. '(map' → logprob: -16.37504005432129
    8. '=input' → logprob: -16.50004005432129
    9. ' (' → logprob: -17.00004005432129
    10. '(list' → logprob: -17.37504005432129

Token 429: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0007272057700902224
    2. '()' → logprob: -7.25072717666626
    3. '().' → logprob: -11.250727653503418
    4. ')' → logprob: -13.625727653503418
    5. '())
' → logprob: -13.750727653503418
    6. ' ())' → logprob: -14.000727653503418
    7. '()))' → logprob: -14.625727653503418
    8. '();)' → logprob: -14.750727653503418
    9. '())

' → logprob: -16.0007266998291
    10. '()]' → logprob: -16.6257266998291

Token 430: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.558849036693573
    2. 'Q' → logprob: -0.933849036693573
    3. 'M' → logprob: -5.058848857879639
    4. 'positions' → logprob: -5.308848857879639
    5. 'counts' → logprob: -5.308848857879639
    6. 'class' → logprob: -5.933848857879639
    7. 'freq' → logprob: -6.308848857879639
    8. 'q' → logprob: -6.433848857879639
    9. 'char' → logprob: -6.433848857879639
    10. 'bit' → logprob: -6.808848857879639

Token 431: ' Number' (ID: 9184)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.44398945569992065
    2. 'Q' → logprob: -1.5689895153045654
    3. 'bit' → logprob: -2.0689895153045654
    4. 'from' → logprob: -4.443989276885986
    5. 'q' → logprob: -5.568989276885986
    6. 'class' → logprob: -5.943989276885986
    7. 'bits' → logprob: -6.818989276885986
    8. 'M' → logprob: -6.818989276885986
    9. 'pos' → logprob: -6.943989276885986
    10. 'import' → logprob: -7.693989276885986

Token 432: ' of' (ID: 328)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'of' → logprob: -0.8011730313301086
    2. '=' → logprob: -1.3011729717254639
    3. '_of' → logprob: -1.4261729717254639
    4. '_' → logprob: -3.926172971725464
    5. ' =' → logprob: -4.926173210144043
    6. '_queries' → logprob: -5.551173210144043
    7. ' of' → logprob: -6.176173210144043
    8. '_tokens' → logprob: -6.926173210144043
    9. 'Q' → logprob: -7.051173210144043
    10. 's' → logprob: -7.801173210144043

Token 433: ' queries' (ID: 32122)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.22601626813411713
    2. 'queries' → logprob: -1.9760162830352783
    3. ' queries' → logprob: -3.3510162830352783
    4. '_queries' → logprob: -3.8510162830352783
    5. ' Q' → logprob: -4.976016044616699
    6. 'q' → logprob: -8.7260160446167
    7. 'query' → logprob: -9.6010160446167
    8. 'Queries' → logprob: -9.7260160446167
    9. '_' → logprob: -10.1010160446167
    10. 'commands' → logprob: -10.6010160446167

Token 434: ' to' (ID: 316)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.04078005254268646
    2. '=' → logprob: -3.2907800674438477
    3. ' =' → logprob: -6.040780067443848
    4. 'q' → logprob: -8.040780067443848
    5. ' Q' → logprob: -11.165780067443848
    6. '=int' → logprob: -11.540780067443848
    7. 'M' → logprob: -11.915780067443848
    8. 'int' → logprob: -13.415780067443848
    9. '
' → logprob: -15.165780067443848
    10. '=
' → logprob: -15.290780067443848

Token 435: ' process' (ID: 2273)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0034661905374377966
    2. ' int' → logprob: -5.8784661293029785
    3. '=int' → logprob: -7.6284661293029785
    4. 'process' → logprob: -8.878466606140137
    5. ' process' → logprob: -10.878466606140137
    6. '
' → logprob: -12.253466606140137
    7. 'read' → logprob: -12.378466606140137
    8. '(int' → logprob: -12.753466606140137
    9. ' =' → logprob: -14.253466606140137
    10. '=' → logprob: -14.378466606140137

Token 436: '
' (ID: 198)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -3.547789674485102e-05
    2. 'q' → logprob: -10.500035285949707
    3. 'M' → logprob: -11.875035285949707
    4. '
' → logprob: -14.375035285949707
    5. ' =' → logprob: -16.000036239624023
    6. ' Q' → logprob: -16.250036239624023
    7. '	Q' → logprob: -17.875036239624023
    8. 'K' → logprob: -18.000036239624023
    9. '```' → logprob: -18.250036239624023
    10. '=' → logprob: -18.250036239624023

Token 437: 'Q' (ID: 48)
  Prédit: 'Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -5.1928003813372925e-05
    2. 'q' → logprob: -9.875051498413086
    3. 'M' → logprob: -15.125051498413086
    4. ' Q' → logprob: -16.375051498413086
    5. 'int' → logprob: -16.750051498413086
    6. '_Q' → logprob: -18.250051498413086
    7. '```' → logprob: -18.500051498413086
    8. 'N' → logprob: -19.250051498413086
    9. 'T' → logprob: -19.250051498413086
    10. '	Q' → logprob: -19.375051498413086

Token 438: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740903675556183
    2. ' =' → logprob: -0.9740903377532959
    3. '=int' → logprob: -11.224090576171875
    4. ' ' → logprob: -18.099090576171875
    5. '   ' → logprob: -19.349090576171875
    6. ' ' → logprob: -19.349090576171875
    7. '＝' → logprob: -19.599090576171875
    8. '  ' → logprob: -20.849090576171875
    9. ')' → logprob: -20.974090576171875
    10. '=
' → logprob: -21.224090576171875

Token 439: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.676292231422849e-05
    2. ' int' → logprob: -11.000017166137695
    3. '=int' → logprob: -20.000017166137695
    4. '[int' → logprob: -20.875017166137695
    5. '   ' → logprob: -21.625017166137695
    6. '(int' → logprob: -21.875017166137695
    7. ' ' → logprob: -22.875017166137695
    8. '<int' → logprob: -23.125017166137695
    9. '	int' → logprob: -23.125017166137695
    10. '  ' → logprob: -24.250017166137695

Token 440: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.007154115010052919
    2. 'input' → logprob: -5.0071539878845215
    3. ' input' → logprob: -7.7571539878845215
    4. ' (' → logprob: -12.25715446472168
    5. '(' → logprob: -12.88215446472168
    6. '()' → logprob: -13.25715446472168
    7. '=input' → logprob: -13.38215446472168
    8. '[input' → logprob: -16.00715446472168
    9. '<input' → logprob: -16.75715446472168
    10. ',input' → logprob: -16.75715446472168

Token 441: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.2568281292915344
    2. ')' → logprob: -1.5068280696868896
    3. '()' → logprob: -5.381828308105469
    4. '())
' → logprob: -8.256828308105469
    5. ')
' → logprob: -10.881828308105469
    6. '()
' → logprob: -11.881828308105469
    7. ' ())' → logprob: -13.881828308105469
    8. ' )' → logprob: -14.506828308105469
    9. '();)' → logprob: -15.131828308105469
    10. '())
' → logprob: -15.506828308105469

Token 442: '#' (ID: 2)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.37427160143852234
    2. 'for' → logprob: -1.3742716312408447
    3. 'bits' → logprob: -4.499271392822266
    4. 'from' → logprob: -4.624271392822266
    5. 'queries' → logprob: -4.874271392822266
    6. '#' → logprob: -5.374271392822266
    7. 'freq' → logprob: -5.374271392822266
    8. 'BIT' → logprob: -5.749271392822266
    9. 'results' → logprob: -5.874271392822266
    10. 'answers' → logprob: -5.874271392822266

Token 443: ' Create' (ID: 6585)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.23170839250087738
    2. 'class' → logprob: -2.481708288192749
    3. 'from' → logprob: -3.231708288192749
    4. '#' → logprob: -3.231708288192749
    5. 'for' → logprob: -3.356708288192749
    6. 'queries' → logprob: -6.106708526611328
    7. 'bits' → logprob: -6.231708526611328
    8. 'results' → logprob: -6.231708526611328
    9. 'def' → logprob: -7.231708526611328
    10. 'answers' → logprob: -7.981708526611328

Token 444: ' a' (ID: 261)
  Prédit: 'BIT'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'BIT' → logprob: -0.2054338902235031
    2. 'bit' → logprob: -1.7054338455200195
    3. ' bit' → logprob: -6.7054338455200195
    4. 'a' → logprob: -6.9554338455200195
    5. ' BIT' → logprob: -6.9554338455200195
    6. '_BIT' → logprob: -7.7054338455200195
    7. '_bit' → logprob: -9.45543384552002
    8. 'BITS' → logprob: -9.70543384552002
    9. '[' → logprob: -9.83043384552002
    10. 'Bit' → logprob: -10.20543384552002

Token 445: ' BIT' (ID: 52185)
  Prédit: 'BIT'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'BIT' → logprob: -0.15189076960086823
    2. 'default' → logprob: -2.776890754699707
    3. 'bit' → logprob: -2.776890754699707
    4. '[' → logprob: -5.276890754699707
    5. 'dict' → logprob: -5.526890754699707
    6. 'list' → logprob: -6.151890754699707
    7. 'dictionary' → logprob: -6.776890754699707
    8. 'bits' → logprob: -7.151890754699707
    9. ' BIT' → logprob: -7.651890754699707
    10. '_BIT' → logprob: -8.401890754699707

Token 446: ' for' (ID: 395)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4732624590396881
    2. '(S' → logprob: -1.4732624292373657
    3. '(' → logprob: -2.5982625484466553
    4. '(N' → logprob: -3.8482625484466553
    5. 'bit' → logprob: -3.8482625484466553
    6. 'S' → logprob: -5.223262310028076
    7. '=' → logprob: -5.348262310028076
    8. 'BIT' → logprob: -5.348262310028076
    9. 'for' → logprob: -5.723262310028076
    10. 's' → logprob: -5.973262310028076

Token 447: ' each' (ID: 2454)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.6941031217575073
    2. '26' → logprob: -0.6941031217575073
    3. ' N' → logprob: -7.194103240966797
    4. '256' → logprob: -9.819103240966797
    5. ' ' → logprob: -10.194103240966797
    6. 'alphabet' → logprob: -10.819103240966797
    7. '25' → logprob: -10.944103240966797
    8. 'len' → logprob: -11.319103240966797
    9. 'ord' → logprob: -11.444103240966797
    10. 'Q' → logprob: -11.944103240966797

Token 448: ' lowercase' (ID: 90395)
  Prédit: '26'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '26' → logprob: -0.0005717403837479651
    2. ' ' → logprob: -7.6255717277526855
    3. '(' → logprob: -10.125572204589844
    4. '25' → logprob: -10.625572204589844
    5. '27' → logprob: -12.125572204589844
    6. ' alphabet' → logprob: -12.750572204589844
    7. 'alphabet' → logprob: -13.125572204589844
    8. '
' → logprob: -13.375572204589844
    9. '256' → logprob: -13.750572204589844
    10. 'range' → logprob: -13.875572204589844

Token 449: ' letter' (ID: 10263)
  Prédit: '26'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '26' → logprob: -0.2339780628681183
    2. 'alphabet' → logprob: -2.108978033065796
    3. 'abcdefghijklmnopqrstuvwxyz' → logprob: -2.858978033065796
    4. ' alphabet' → logprob: -3.608978033065796
    5. 'letter' → logprob: -6.358978271484375
    6. ' letter' → logprob: -7.983978271484375
    7. 'alph' → logprob: -8.733978271484375
    8. '_letter' → logprob: -9.108978271484375
    9. 'alpha' → logprob: -9.233978271484375
    10. ' ' → logprob: -9.733978271484375

Token 450: ' (' (ID: 350)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.7853182554244995
    2. 'bit' → logprob: -1.2853182554244995
    3. 's' → logprob: -2.035318374633789
    4. ' =' → logprob: -3.535318374633789
    5. '26' → logprob: -3.660318374633789
    6. 'BIT' → logprob: -4.285318374633789
    7. 'letters' → logprob: -4.660318374633789
    8. 'from' → logprob: -4.660318374633789
    9. '=' → logprob: -5.160318374633789
    10. ' bit' → logprob: -5.160318374633789

Token 451: 'total' (ID: 9577)
  Prédit: '26'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '26' → logprob: -0.0002557369298301637
    2. ' ' → logprob: -8.375255584716797
    3. '27' → logprob: -11.000255584716797
    4. '
' → logprob: -13.250255584716797
    5. 'abcdefghijklmnopqrstuvwxyz' → logprob: -13.250255584716797
    6. ')' → logprob: -13.875255584716797
    7. '25' → logprob: -14.000255584716797
    8. '28' → logprob: -14.125255584716797
    9. 'range' → logprob: -14.375255584716797
    10. '```' → logprob: -14.750255584716797

Token 452: ' ' (ID: 220)
  Prédit: '26'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '26' → logprob: -0.1309613138437271
    2. '=' → logprob: -2.1309614181518555
    3. ' =' → logprob: -5.8809614181518555
    4. ' of' → logprob: -7.6309614181518555
    5. 'of' → logprob: -8.255961418151855
    6. ' ' → logprob: -9.005961418151855
    7. 'abcdefghijklmnopqrstuvwxyz' → logprob: -9.630961418151855
    8. 'import' → logprob: -10.005961418151855
    9. 's' → logprob: -10.255961418151855
    10. '
' → logprob: -10.255961418151855

Token 453: '26' (ID: 2109)
  Prédit: '26'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '26' → logprob: -0.005271345842629671
    2. '=' → logprob: -5.2552714347839355
    3. 'of' → logprob: -11.130270957946777
    4. ' =' → logprob: -11.380270957946777
    5. 'abcdefghijklmnopqrstuvwxyz' → logprob: -12.880270957946777
    6. ' ' → logprob: -13.130270957946777
    7. 'import' → logprob: -13.505270957946777
    8. 'alphabet' → logprob: -13.755270957946777
    9. '27' → logprob: -13.880270957946777
    10. 'a' → logprob: -14.255270957946777

Token 454: ' letters' (ID: 18151)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002544035669416189
    2. ')
' → logprob: -6.127543926239014
    3. ' )' → logprob: -8.002544403076172
    4. 'for' → logprob: -11.877544403076172
    5. '26' → logprob: -12.377544403076172
    6. ' )
' → logprob: -12.627544403076172
    7. ').' → logprob: -13.002544403076172
    8. ' for' → logprob: -14.127544403076172
    9. '),' → logprob: -14.252544403076172
    10. ')
' → logprob: -14.252544403076172

Token 455: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002693959278985858
    2. ')
' → logprob: -6.002694129943848
    3. 'for' → logprob: -9.252694129943848
    4. ' )' → logprob: -9.252694129943848
    5. '[' → logprob: -12.627694129943848
    6. ' for' → logprob: -12.752694129943848
    7. '26' → logprob: -12.877694129943848
    8. ',' → logprob: -12.877694129943848
    9. '`)' → logprob: -13.127694129943848
    10. 's' → logprob: -13.377694129943848

Token 456: 'bit' (ID: 6516)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.02500220388174057
    2. 'bit' → logprob: -3.7750022411346436
    3. 'BITS' → logprob: -6.7750020027160645
    4. 'BIT' → logprob: -7.9000020027160645
    5. 'letters' → logprob: -10.025002479553223
    6. 'b' → logprob: -10.525002479553223
    7. 'trees' → logprob: -10.650002479553223
    8. 'B' → logprob: -10.775002479553223
    9. ' bits' → logprob: -10.900002479553223
    10. '_bits' → logprob: -11.275002479553223

Token 457: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.06677433103322983
    2. ' =' → logprob: -3.316774368286133
    3. '=' → logprob: -3.566774368286133
    4. ' s' → logprob: -10.941774368286133
    5. '=s' → logprob: -11.441774368286133
    6. '_s' → logprob: -11.441774368286133
    7. '[' → logprob: -11.816774368286133
    8. '=[' → logprob: -11.941774368286133
    9. '[]' → logprob: -11.941774368286133
    10. '[s' → logprob: -12.941774368286133

Token 458: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.006725437473505735
    2. ' [' → logprob: -5.006725311279297
    3. '[class' → logprob: -12.381725311279297
    4. '[int' → logprob: -13.381725311279297
    5. '[array' → logprob: -13.631725311279297
    6. '[B' → logprob: -13.756725311279297
    7. '{' → logprob: -14.881725311279297
    8. '[List' → logprob: -15.381725311279297
    9. '[i' → logprob: -16.006725311279297
    10. '[val' → logprob: -16.006725311279297

Token 459: 'BIT' (ID: 41038)
  Prédit: 'BIT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'BIT' → logprob: -3.6312321753939614e-05
    2. ' BIT' → logprob: -10.250036239624023
    3. 'Bit' → logprob: -14.375036239624023
    4. 'BIN' → logprob: -16.000036239624023
    5. '	BIT' → logprob: -16.750036239624023
    6. '   ' → logprob: -17.000036239624023
    7. 'BITS' → logprob: -17.250036239624023
    8. '_BIT' → logprob: -17.875036239624023
    9. 'BI' → logprob: -18.625036239624023
    10. 'BT' → logprob: -18.875036239624023

Token 460: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.4744682013988495
    2. '(' → logprob: -0.9744682312011719
    3. '26' → logprob: -8.474468231201172
    4. '(len' → logprob: -9.724468231201172
    5. ')(' → logprob: -10.724468231201172
    6. 'N' → logprob: -10.724468231201172
    7. ' (' → logprob: -10.724468231201172
    8. '((' → logprob: -10.849468231201172
    9. ')' → logprob: -10.974468231201172
    10. '(n' → logprob: -11.599468231201172

Token 461: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.451116051815916e-05
    2. ')]' → logprob: -11.000024795532227
    3. '+' → logprob: -12.375024795532227
    4. ')
' → logprob: -13.375024795532227
    5. ' )' → logprob: -13.375024795532227
    6. ']' → logprob: -16.125024795532227
    7. ' ' → logprob: -16.500024795532227
    8. ' +' → logprob: -16.500024795532227
    9. '))' → logprob: -16.625024795532227
    10. '),' → logprob: -17.000024795532227

Token 462: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03208000212907791
    2. '2' → logprob: -3.5320799350738525
    3. '10' → logprob: -7.032080173492432
    4. '5' → logprob: -7.407080173492432
    5. ' ' → logprob: -7.407080173492432
    6. '0' → logprob: -9.157079696655273
    7. '26' → logprob: -9.657079696655273
    8. '100' → logprob: -10.907079696655273
    9. '3' → logprob: -11.157079696655273
    10. '   ' → logprob: -11.907079696655273

Token 463: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1446177363395691
    2. '2' → logprob: -2.019617795944214
    3. '5' → logprob: -7.019617557525635
    4. '10' → logprob: -7.019617557525635
    5. ' ' → logprob: -9.644618034362793
    6. '0' → logprob: -9.644618034362793
    7. '3' → logprob: -11.144618034362793
    8. '26' → logprob: -12.894618034362793
    9. '100' → logprob: -13.394618034362793
    10. '4' → logprob: -13.769618034362793

Token 464: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.869017852295656e-06
    2. ')]' → logprob: -12.000006675720215
    3. ' )' → logprob: -14.250006675720215
    4. ')
' → logprob: -17.00000762939453
    5. ']' → logprob: -17.50000762939453
    6. '),' → logprob: -17.75000762939453
    7. '))' → logprob: -18.50000762939453
    8. '   ' → logprob: -18.62500762939453
    9. ')`' → logprob: -18.87500762939453
    10. ')])' → logprob: -19.37500762939453

Token 465: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.07255317270755768
    2. 'for' → logprob: -2.6975531578063965
    3. ')' → logprob: -6.0725531578063965
    4. ']' → logprob: -8.447553634643555
    5. '()' → logprob: -9.697553634643555
    6. '   ' → logprob: -10.947553634643555
    7. '	for' → logprob: -11.947553634643555
    8. ')]' → logprob: -12.447553634643555
    9. ' ' → logprob: -13.947553634643555
    10. ' )' → logprob: -14.322553634643555

Token 466: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0033835109788924456
    2. '_range' → logprob: -5.753383636474609
    3. 'range' → logprob: -9.12838363647461
    4. ' range' → logprob: -9.50338363647461
    5. ' _' → logprob: -11.37838363647461
    6. '_i' → logprob: -12.25338363647461
    7. '_letter' → logprob: -13.25338363647461
    8. '_bit' → logprob: -13.37838363647461
    9. '_r' → logprob: -14.25338363647461
    10. '_token' → logprob: -15.12838363647461

Token 467: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -2.451116051815916e-05
    2. ' range' → logprob: -10.625024795532227
    3. '_' → logprob: -16.750024795532227
    4. '_range' → logprob: -16.875024795532227
    5. '(range' → logprob: -17.500024795532227
    6. '	range' → logprob: -19.000024795532227
    7. 'rang' → logprob: -19.375024795532227
    8. 'bit' → logprob: -19.875024795532227
    9. '
' → logprob: -19.875024795532227
    10. '```' → logprob: -20.125024795532227

Token 468: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -6.611323624383658e-05
    2. ' range' → logprob: -9.625065803527832
    3. '(range' → logprob: -17.12506675720215
    4. '
' → logprob: -17.87506675720215
    5. '```' → logprob: -18.37506675720215
    6. '	range' → logprob: -18.62506675720215
    7. '`' → logprob: -19.25006675720215
    8. '   ' → logprob: -19.50006675720215
    9. ')' → logprob: -19.75006675720215
    10. '"' → logprob: -19.87506675720215

Token 469: '(' (ID: 7)
  Prédit: '26'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '26' → logprob: -0.1269543468952179
    2. '(' → logprob: -2.1269543170928955
    3. '27' → logprob: -10.626954078674316
    4. '28' → logprob: -13.626954078674316
    5. ' ' → logprob: -15.126954078674316
    6. '25' → logprob: -15.751954078674316
    7. ' (' → logprob: -16.126955032348633
    8. 'range' → logprob: -16.751955032348633
    9. ')' → logprob: -17.501955032348633
    10. '
' → logprob: -17.751955032348633

Token 470: '26' (ID: 2109)
  Prédit: '26'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '26' → logprob: -4.246537173457909e-06
    2. '27' → logprob: -12.375003814697266
    3. ' ' → logprob: -17.625003814697266
    4. '28' → logprob: -18.375003814697266
    5. '(' → logprob: -19.125003814697266
    6. '2' → logprob: -19.750003814697266
    7. ')' → logprob: -19.812503814697266
    8. '```' → logprob: -19.875003814697266
    9. 'abcdefghijklmnopqrstuvwxyz' → logprob: -20.125003814697266
    10. '   ' → logprob: -20.187503814697266

Token 471: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.004081247374415398
    2. ')' → logprob: -5.5040812492370605
    3. ']' → logprob: -13.379080772399902
    4. ' )' → logprob: -14.004080772399902
    5. ')],' → logprob: -15.379080772399902
    6. ')])' → logprob: -16.37908172607422
    7. ')}' → logprob: -16.50408172607422
    8. '))' → logprob: -17.12908172607422
    9. ')]
' → logprob: -17.50408172607422
    10. ')
' → logprob: -17.62908172607422

Token 472: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.000386701402021572
    2. '#' → logprob: -7.875386714935303
    3. ' for' → logprob: -12.000386238098145
    4. '```' → logprob: -15.250386238098145
    5. 'For' → logprob: -16.37538719177246
    6. '	for' → logprob: -17.00038719177246
    7. 'def' → logprob: -17.50038719177246
    8. '
' → logprob: -17.62538719177246
    9. '<|end|>' → logprob: -17.75038719177246
    10. 'from' → logprob: -18.87538719177246

Token 473: ' Initialize' (ID: 19496)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0002366753324167803
    2. '#' → logprob: -8.375236511230469
    3. 'def' → logprob: -12.375236511230469
    4. ' for' → logprob: -13.750236511230469
    5. '```' → logprob: -15.000236511230469
    6. 'For' → logprob: -15.625236511230469
    7. 'from' → logprob: -15.750236511230469
    8. 'import' → logprob: -16.12523651123047
    9. '
' → logprob: -17.37523651123047
    10. 'A' → logprob: -18.75023651123047

Token 474: ' BIT' (ID: 52185)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.006608553230762482
    2. ' for' → logprob: -5.131608486175537
    3. 'the' → logprob: -8.006608963012695
    4. '#' → logprob: -8.131608963012695
    5. ' the' → logprob: -11.256608963012695
    6. 'S' → logprob: -11.256608963012695
    7. 'bit' → logprob: -11.506608963012695
    8. 'each' → logprob: -12.381608963012695
    9. 'indices' → logprob: -13.256608963012695
    10. '
' → logprob: -13.506608963012695

Token 475: 's' (ID: 82)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03134343400597572
    2. ' for' → logprob: -3.656343460083008
    3. 's' → logprob: -5.406343460083008
    4. '<|end|>' → logprob: -7.906343460083008
    5. '   ' → logprob: -10.031343460083008
    6. '#' → logprob: -10.906343460083008
    7. '<|end|>' → logprob: -11.031343460083008
    8. 'with' → logprob: -11.156343460083008
    9. '[' → logprob: -11.156343460083008
    10. 'indices' → logprob: -11.531343460083008

Token 476: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.006762736942619085
    2. ' for' → logprob: -5.006762504577637
    3. '   ' → logprob: -10.256762504577637
    4. '
' → logprob: -11.631762504577637
    5. '#' → logprob: -14.381762504577637
    6. ':' → logprob: -14.756762504577637
    7. 'with' → logprob: -14.756762504577637
    8. '<|end|>' → logprob: -14.756762504577637
    9. '	for' → logprob: -15.256762504577637
    10. '    
' → logprob: -15.256762504577637

Token 477: ' count' (ID: 3605)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.001712901284918189
    2. ' for' → logprob: -6.376712799072266
    3. '
' → logprob: -11.626712799072266
    4. '   ' → logprob: -14.251712799072266
    5. '#' → logprob: -14.626712799072266
    6. '	for' → logprob: -15.376712799072266
    7. '```' → logprob: -15.376712799072266
    8. '    
' → logprob: -15.751712799072266
    9. '<|end|>' → logprob: -17.001712799072266
    10. ')' → logprob: -17.376712799072266

Token 478: ' occurrences' (ID: 108073)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07338077574968338
    2. ' for' → logprob: -3.198380708694458
    3. 'ing' → logprob: -4.823380947113037
    4. '=' → logprob: -5.073380947113037
    5. 's' → logprob: -5.823380947113037
    6. '(S' → logprob: -6.073380947113037
    7. ' =' → logprob: -6.573380947113037
    8. 'S' → logprob: -6.573380947113037
    9. 'the' → logprob: -7.198380947113037
    10. ')' → logprob: -7.198380947113037

Token 479: ' of' (ID: 328)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.002439266536384821
    2. 'of' → logprob: -6.627439498901367
    3. ' for' → logprob: -7.002439498901367
    4. 'in' → logprob: -9.502439498901367
    5. ' of' → logprob: -9.752439498901367
    6. '   ' → logprob: -10.752439498901367
    7. '#' → logprob: -10.877439498901367
    8. '
' → logprob: -11.252439498901367
    9. ')' → logprob: -12.877439498901367
    10. 'from' → logprob: -13.127439498901367

Token 480: ' each' (ID: 2454)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'each' → logprob: -0.012096350081264973
    2. ' each' → logprob: -4.887096405029297
    3. 'characters' → logprob: -5.637096405029297
    4. 'letters' → logprob: -8.012096405029297
    5. ' characters' → logprob: -8.512096405029297
    6. 'S' → logprob: -8.762096405029297
    7. 'chars' → logprob: -9.262096405029297
    8. 'all' → logprob: -9.387096405029297
    9. 'char' → logprob: -10.887096405029297
    10. ' letters' → logprob: -11.387096405029297

Token 481: ' character' (ID: 5855)
  Prédit: 'char'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'char' → logprob: -0.3897974193096161
    2. ' character' → logprob: -1.8897974491119385
    3. 'character' → logprob: -2.7647974491119385
    4. 'ch' → logprob: -3.2647974491119385
    5. ' letter' → logprob: -3.6397974491119385
    6. 'letter' → logprob: -4.014797210693359
    7. 'c' → logprob: -4.514797210693359
    8. 'i' → logprob: -4.639797210693359
    9. ' char' → logprob: -6.264797210693359
    10. ' i' → logprob: -6.764797210693359

Token 482: ' at' (ID: 540)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.015604927204549313
    2. ' for' → logprob: -4.2656049728393555
    3. 'in' → logprob: -6.8906049728393555
    4. '   ' → logprob: -8.515604972839355
    5. ' in' → logprob: -8.765604972839355
    6. 'at' → logprob: -11.265604972839355
    7. ' at' → logprob: -11.390604972839355
    8. 's' → logprob: -11.765604972839355
    9. ',' → logprob: -11.890604972839355
    10. '
' → logprob: -12.015604972839355

Token 483: ' each' (ID: 2454)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.04248176887631416
    2. 'each' → logprob: -3.6674816608428955
    3. ' i' → logprob: -5.292481899261475
    4. 'index' → logprob: -5.417481899261475
    5. ' each' → logprob: -5.917481899261475
    6. 'position' → logprob: -6.667481899261475
    7. 'positions' → logprob: -6.667481899261475
    8. '1' → logprob: -8.292481422424316
    9. 'indices' → logprob: -8.417481422424316
    10. 'idx' → logprob: -8.792481422424316

Token 484: ' position' (ID: 4010)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.4609249234199524
    2. 'index' → logprob: -1.4609248638153076
    3. ' position' → logprob: -2.4609248638153076
    4. 'i' → logprob: -3.3359248638153076
    5. ' index' → logprob: -4.335925102233887
    6. '1' → logprob: -6.335925102233887
    7. ' i' → logprob: -6.710925102233887
    8. ' ' → logprob: -9.335925102233887
    9. 'pos' → logprob: -9.460925102233887
    10. 'idx' → logprob: -9.960925102233887

Token 485: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0036251279525458813
    2. ' for' → logprob: -5.62862491607666
    3. ')' → logprob: -11.87862491607666
    4. '   ' → logprob: -11.87862491607666
    5. '
' → logprob: -12.00362491607666
    6. ']' → logprob: -12.62862491607666
    7. ',' → logprob: -14.25362491607666
    8. ')
' → logprob: -15.75362491607666
    9. '```' → logprob: -15.75362491607666
    10. '#' → logprob: -16.003625869750977

Token 486: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0003360582049936056
    2. ' for' → logprob: -8.000335693359375
    3. '```' → logprob: -14.875335693359375
    4. '   ' → logprob: -15.625335693359375
    5. '
' → logprob: -15.750335693359375
    6. '	for' → logprob: -18.375335693359375
    7. '<|end|>' → logprob: -19.250335693359375
    8. '    
' → logprob: -19.625335693359375
    9. ')' → logprob: -19.875335693359375
    10. '``' → logprob: -19.875335693359375

Token 487: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.004078639671206474
    2. ' i' → logprob: -5.5040788650512695
    3. 'idx' → logprob: -15.75407886505127
    4. '(i' → logprob: -16.879077911376953
    5. 'pos' → logprob: -18.504077911376953
    6. 'index' → logprob: -19.254077911376953
    7. ' idx' → logprob: -19.629077911376953
    8. '   ' → logprob: -19.879077911376953
    9. '	i' → logprob: -20.254077911376953
    10. '```' → logprob: -20.379077911376953

Token 488: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04325893893837929
    2. 'in' → logprob: -3.1682589054107666
    3. ',' → logprob: -8.668258666992188
    4. '(' → logprob: -10.293258666992188
    5. '   ' → logprob: -10.793258666992188
    6. ')' → logprob: -11.793258666992188
    7. ' ' → logprob: -11.918258666992188
    8. 'range' → logprob: -12.668258666992188
    9. '1' → logprob: -12.793258666992188
    10. ' (' → logprob: -13.043258666992188

Token 489: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0011703446507453918
    2. ' range' → logprob: -6.7511701583862305
    3. '   ' → logprob: -15.62617015838623
    4. '(range' → logprob: -17.626171112060547
    5. '```' → logprob: -17.876171112060547
    6. ' ' → logprob: -17.876171112060547
    7. '
' → logprob: -18.376171112060547
    8. '	range' → logprob: -18.876171112060547
    9. '  ' → logprob: -19.751171112060547
    10. ')' → logprob: -20.626171112060547

Token 490: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.16073890030384064
    2. '(' → logprob: -1.9107389450073242
    3. 'N' → logprob: -8.160738945007324
    4. '1' → logprob: -8.660738945007324
    5. '(len' → logprob: -10.285738945007324
    6. ' N' → logprob: -11.785738945007324
    7. '(n' → logprob: -12.160738945007324
    8. '   ' → logprob: -12.785738945007324
    9. ' ' → logprob: -12.910738945007324
    10. ' (' → logprob: -14.285738945007324

Token 491: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.26546984910964966
    2. '):' → logprob: -1.8904697895050049
    3. '+' → logprob: -2.515469789505005
    4. '   ' → logprob: -7.515470027923584
    5. ' +' → logprob: -7.515470027923584
    6. '):
' → logprob: -9.265469551086426
    7. ':' → logprob: -10.890469551086426
    8. ')' → logprob: -10.890469551086426
    9. ',' → logprob: -11.015469551086426
    10. '1' → logprob: -11.515469551086426

Token 492: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2371324598789215
    2. ' bit' → logprob: -1.9871324300765991
    3. 'bit' → logprob: -2.6121325492858887
    4. '       ' → logprob: -7.737132549285889
    5. '```' → logprob: -9.48713207244873
    6. '    
' → logprob: -11.11213207244873
    7. '.bit' → logprob: -11.36213207244873
    8. '_bit' → logprob: -11.36213207244873
    9. '(bit' → logprob: -11.48713207244873
    10. '   ' → logprob: -11.61213207244873

Token 493: ' char' (ID: 1826)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.0012198820477351546
    2. ' bit' → logprob: -7.001219749450684
    3. 'idx' → logprob: -8.376219749450684
    4. 'char' (adapté à ' char') → logprob: -10.251219749450684
    5. 'c' → logprob: -11.001219749450684
    6. '   ' → logprob: -11.376219749450684
    7. 'ch' → logprob: -12.001219749450684
    8. 'index' → logprob: -12.251219749450684
    9. ' idx' → logprob: -12.751219749450684
    10. ' c' → logprob: -16.126220703125

Token 494: '_index' (ID: 7748)
  Prédit: '_idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.06459483504295349
    2. '_index' → logprob: -2.8145947456359863
    3. ' =' → logprob: -6.314594745635986
    4. 'idx' → logprob: -8.439595222473145
    5. '_id' → logprob: -8.564595222473145
    6. '_code' → logprob: -9.064595222473145
    7. '_ind' → logprob: -9.564595222473145
    8. '_i' → logprob: -10.064595222473145
    9. 'Index' → logprob: -10.314595222473145
    10. '=' → logprob: -10.314595222473145

Token 495: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9940672516822815
    2. '=' → logprob: -1.1190671920776367
    3. ' =' → logprob: -1.2440671920776367
    4. '   ' → logprob: -4.369067192077637
    5. ')' → logprob: -7.869067192077637
    6. ']' → logprob: -8.369067192077637
    7. '[S' → logprob: -8.369067192077637
    8. 'S' → logprob: -8.619067192077637
    9. ' [' → logprob: -8.869067192077637
    10. '```' → logprob: -8.994067192077637

Token 496: ' ord' (ID: 6608)
  Prédit: 'ord'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ord' → logprob: -0.04860372841358185
    2. ' ord' → logprob: -3.0486037731170654
    3. '(ord' → logprob: -11.048604011535645
    4. '   ' → logprob: -15.173604011535645
    5. '26' → logprob: -16.173603057861328
    6. ' ' → logprob: -16.923603057861328
    7. '
' → logprob: -18.173603057861328
    8. 'ords' → logprob: -18.423603057861328
    9. '_ord' → logprob: -19.048603057861328
    10. 'ordi' → logprob: -19.923603057861328

Token 497: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -7.231182826217264e-05
    2. 'S' → logprob: -9.625072479248047
    3. '(' → logprob: -12.125072479248047
    4. '('' → logprob: -15.000072479248047
    5. '(s' → logprob: -15.500072479248047
    6. '(
' → logprob: -16.625072479248047
    7. '[S' → logprob: -17.000072479248047
    8. 's' → logprob: -17.750072479248047
    9. '```' → logprob: -17.750072479248047
    10. ')' → logprob: -18.000072479248047

Token 498: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.1472419600977446e-06
    2. '[S' → logprob: -14.875000953674316
    3. '[I' → logprob: -15.000000953674316
    4. 'i' → logprob: -15.875000953674316
    5. ')' → logprob: -16.000001907348633
    6. '[' → logprob: -16.125001907348633
    7. 'S' → logprob: -17.375001907348633
    8. '```' → logprob: -17.500001907348633
    9. '(i' → logprob: -17.625001907348633
    10. '[
' → logprob: -18.625001907348633

Token 499: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002726601669564843
    2. ' )' → logprob: -8.750272750854492
    3. '   ' → logprob: -10.250272750854492
    4. '[i' → logprob: -10.375272750854492
    5. '[' → logprob: -10.875272750854492
    6. ')-' → logprob: -11.500272750854492
    7. ' ' → logprob: -12.875272750854492
    8. ' -' → logprob: -13.125272750854492
    9. '-)' → logprob: -13.125272750854492
    10. '')' → logprob: -13.125272750854492

Token 500: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.44187405705451965
    2. '-' → logprob: -1.0668740272521973
    3. ')' → logprob: -4.441874027252197
    4. '   ' → logprob: -6.816874027252197
    5. ')-' → logprob: -9.941874504089355
    6. ' ' → logprob: -10.066874504089355
    7. '```' → logprob: -10.941874504089355
    8. '()' → logprob: -11.066874504089355
    9. '[' → logprob: -11.191874504089355
    10. '[i' → logprob: -11.441874504089355

Token 501: ' ' (ID: 220)
  Prédit: '97'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '97' → logprob: -0.04863516986370087
    2. 'ord' → logprob: -3.048635244369507
    3. ' ord' → logprob: -10.798635482788086
    4. '96' → logprob: -10.923635482788086
    5. 'a' → logprob: -12.548635482788086
    6. '(ord' → logprob: -13.173635482788086
    7. '   ' → logprob: -13.423635482788086
    8. ' ' → logprob: -14.048635482788086
    9. '```' → logprob: -14.298635482788086
    10. '`' → logprob: -14.298635482788086

Token 502: '97' (ID: 5170)
  Prédit: '97'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '97' → logprob: -0.4741668999195099
    2. 'ord' → logprob: -0.9741668701171875
    3. 'a' → logprob: -10.099166870117188
    4. ' ord' → logprob: -10.724166870117188
    5. '(ord' → logprob: -11.599166870117188
    6. '96' → logprob: -11.724166870117188
    7. '   ' → logprob: -12.599166870117188
    8. '```' → logprob: -12.849166870117188
    9. '`' → logprob: -13.099166870117188
    10. ' ' → logprob: -14.974166870117188

Token 503: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4351830780506134
    2. '
' → logprob: -1.435183048248291
    3. ')' → logprob: -2.810183048248291
    4. ')
' → logprob: -3.810183048248291
    5. 'bit' → logprob: -3.935183048248291
    6. '    
' → logprob: -4.685183048248291
    7. ' bit' → logprob: -6.060183048248291
    8. '
' → logprob: -8.68518352508545
    9. '       ' → logprob: -9.06018352508545
    10. ').' → logprob: -9.18518352508545

Token 504: ' #' (ID: 1069)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.07154158502817154
    2. '   ' → logprob: -3.1965415477752686
    3. ')' → logprob: -4.321541786193848
    4. ' bit' → logprob: -4.821541786193848
    5. ')
' → logprob: -5.571541786193848
    6. '
' → logprob: -6.071541786193848
    7. '.bit' → logprob: -8.446541786193848
    8. '    
' → logprob: -9.321541786193848
    9. '(bit' → logprob: -9.446541786193848
    10. 'bitr' → logprob: -9.571541786193848

Token 505: ' Map' (ID: 7343)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10581526160240173
    2. 'bit' → logprob: -2.4808151721954346
    3. 'i' → logprob: -4.480815410614014
    4. '   ' → logprob: -6.105815410614014
    5. ' bit' → logprob: -6.480815410614014
    6. ' ' → logprob: -7.105815410614014
    7. ' i' → logprob: -7.855815410614014
    8. ')' → logprob: -8.980814933776855
    9. '```' → logprob: -9.730814933776855
    10. '0' → logprob: -9.855814933776855

Token 506: ' character' (ID: 5855)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0757608413696289
    2. ' i' → logprob: -2.825760841369629
    3. 'S' → logprob: -5.200760841369629
    4. ')' → logprob: -5.325760841369629
    5. '(i' → logprob: -6.450760841369629
    6. 'char' → logprob: -8.200760841369629
    7. ')i' → logprob: -8.200760841369629
    8. ' S' → logprob: -8.575760841369629
    9. '   ' → logprob: -8.700760841369629
    10. '[i' → logprob: -8.825760841369629

Token 507: ' '' (ID: 461)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2811760902404785
    2. '[i' → logprob: -1.2811760902404785
    3. ' to' → logprob: -1.9061760902404785
    4. 'to' → logprob: -2.2811760902404785
    5. '<|end|>' → logprob: -2.5311760902404785
    6. '[' → logprob: -3.0311760902404785
    7. ']' → logprob: -3.2811760902404785
    8. ',' → logprob: -4.9061760902404785
    9. 'i' → logprob: -5.2811760902404785
    10. '(i' → logprob: -6.5311760902404785

Token 508: 'a' (ID: 64)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.6298568248748779
    2. 'a' → logprob: -1.254856824874878
    3. ''a' → logprob: -2.254856824874878
    4. 'i' → logprob: -3.004856824874878
    5. ''s' → logprob: -4.629857063293457
    6. ''i' → logprob: -5.129857063293457
    7. ''' → logprob: -5.504857063293457
    8. 's' → logprob: -5.629857063293457
    9. ''S' → logprob: -6.504857063293457
    10. '[i' → logprob: -7.254857063293457

Token 509: ''-' (ID: 44302)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.8728624582290649
    2. '+' → logprob: -0.9978624582290649
    3. ' to' → logprob: -2.6228623390197754
    4. ')' → logprob: -2.8728623390197754
    5. '+i' → logprob: -3.1228623390197754
    6. 'to' → logprob: -4.122862339019775
    7. '<|end|>' → logprob: -4.247862339019775
    8. ')+' → logprob: -5.622862339019775
    9. '')' → logprob: -6.122862339019775
    10. ''' → logprob: -6.872862339019775

Token 510: ''' (ID: 6)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.9302722811698914
    2. '0' → logprob: -1.4302723407745361
    3. '97' → logprob: -1.5552723407745361
    4. ''a' → logprob: -2.430272340774536
    5. ''' → logprob: -3.680272340774536
    6. 'ord' → logprob: -4.305272102355957
    7. '```' → logprob: -4.555272102355957
    8. 'z' → logprob: -5.555272102355957
    9. 'i' → logprob: -5.805272102355957
    10. ' ' → logprob: -5.930272102355957

Token 511: 'z' (ID: 89)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.9609782695770264
    2. 'a' → logprob: -0.9609782695770264
    3. '97' → logprob: -2.0859782695770264
    4. 'i' → logprob: -2.3359782695770264
    5. '```' → logprob: -5.2109785079956055
    6. 'ord' → logprob: -5.4609785079956055
    7. ''a' → logprob: -6.8359785079956055
    8. ''' → logprob: -7.0859785079956055
    9. ' ' → logprob: -8.085978507995605
    10. ''i' → logprob: -8.085978507995605

Token 512: ''' (ID: 6)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05892321839928627
    2. ')
' → logprob: -3.1839232444763184
    3. '   ' → logprob: -4.308923244476318
    4. '
' → logprob: -6.558923244476318
    5. ']' → logprob: -7.558923244476318
    6. 'for' → logprob: -9.55892276763916
    7. '    
' → logprob: -10.05892276763916
    8. '#' → logprob: -10.18392276763916
    9. ')]' → logprob: -10.43392276763916
    10. ',' → logprob: -10.68392276763916

Token 513: ' to' (ID: 316)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.22074280679225922
    2. ')' → logprob: -2.220742702484131
    3. '   ' → logprob: -2.720742702484131
    4. '
' → logprob: -4.595742702484131
    5. ')
' → logprob: -5.095742702484131
    6. ' bit' → logprob: -5.720742702484131
    7. ').' → logprob: -6.720742702484131
    8. '    
' → logprob: -7.595742702484131
    9. '<|end|>' → logprob: -7.845742702484131
    10. '.bit' → logprob: -8.095743179321289

Token 514: ' ' (ID: 220)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0022927559912204742
    2. ' i' → logprob: -6.252292633056641
    3. '0' → logprob: -8.87729263305664
    4. 'char' → logprob: -9.50229263305664
    5. '[i' → logprob: -9.62729263305664
    6. 'the' → logprob: -11.12729263305664
    7. ')' → logprob: -11.12729263305664
    8. '1' → logprob: -11.25229263305664
    9. ' ' → logprob: -12.25229263305664
    10. ' the' → logprob: -12.37729263305664

Token 515: '0' (ID: 15)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.003157045692205429
    2. 'char' → logprob: -6.503157138824463
    3. '0' → logprob: -7.503157138824463
    4. ' i' → logprob: -8.003156661987305
    5. 'the' → logprob: -8.128156661987305
    6. 'bit' → logprob: -9.128156661987305
    7. 'int' → logprob: -9.378156661987305
    8. '[i' → logprob: -9.378156661987305
    9. 'index' → logprob: -10.003156661987305
    10. 'S' → logprob: -10.628156661987305

Token 516: '-' (ID: 12)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.42768481373786926
    2. '
' → logprob: -2.052684783935547
    3. '<|end|>' → logprob: -2.052684783935547
    4. ')' → logprob: -2.677684783935547
    5. 'for' → logprob: -5.302684783935547
    6. '<|end|>' → logprob: -5.552684783935547
    7. '    
' → logprob: -5.927684783935547
    8. ' for' → logprob: -6.552684783935547
    9. ',' → logprob: -6.677684783935547
    10. ']' → logprob: -7.177684783935547

Token 517: '25' (ID: 1161)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.17162169516086578
    2. '1' → logprob: -2.546621799468994
    3. '26' → logprob: -3.046621799468994
    4. '25' → logprob: -4.171621799468994
    5. '
' → logprob: -5.296621799468994
    6. 'z' → logprob: -5.671621799468994
    7. 'based' → logprob: -6.296621799468994
    8. '```' → logprob: -6.421621799468994
    9. ' i' → logprob: -6.671621799468994
    10. '<|end|>' → logprob: -7.671621799468994

Token 518: '
' (ID: 198)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.04061935842037201
    2. '   ' → logprob: -4.165619373321533
    3. ' bit' → logprob: -4.415619373321533
    4. ')' → logprob: -4.540619373321533
    5. ')
' → logprob: -7.415619373321533
    6. '
' → logprob: -8.290618896484375
    7. '.bit' → logprob: -8.665618896484375
    8. '    
' → logprob: -9.290618896484375
    9. '-bit' → logprob: -9.290618896484375
    10. 'bitr' → logprob: -9.415618896484375

Token 519: '   ' (ID: 271)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.04021577909588814
    2. '   ' → logprob: -3.7902157306671143
    3. ' bit' → logprob: -4.290215969085693
    4. ')' → logprob: -5.915215969085693
    5. '```' → logprob: -9.040215492248535
    6. 'bitr' → logprob: -9.790215492248535
    7. '(bit' → logprob: -9.790215492248535
    8. '.bit' → logprob: -10.165215492248535
    9. ' ' → logprob: -10.165215492248535
    10. ').' → logprob: -10.665215492248535

Token 520: ' bit' (ID: 3546)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' (adapté à ' bit') → logprob: -2.2200749754119897e-06
    2. ' bit' → logprob: -13.125001907348633
    3. '   ' → logprob: -16.250001907348633
    4. 'for' → logprob: -18.250001907348633
    5. 'bitr' → logprob: -19.250001907348633
    6. 'char' → logprob: -19.625001907348633
    7. '
' → logprob: -19.625001907348633
    8. '(bit' → logprob: -20.000001907348633
    9. 'bits' → logprob: -21.000001907348633
    10. '```' → logprob: -21.250001907348633

Token 521: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.082895273109898e-05
    2. '[i' → logprob: -10.500030517578125
    3. 'char' → logprob: -13.875030517578125
    4. '```' → logprob: -14.625030517578125
    5. '[class' → logprob: -14.875030517578125
    6. ' [' → logprob: -15.125030517578125
    7. '[var' → logprob: -15.875030517578125
    8. '][' → logprob: -15.875030517578125
    9. '[col' → logprob: -16.125030517578125
    10. 'bit' → logprob: -16.750030517578125

Token 522: 'char' (ID: 3257)
  Prédit: 'char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'char' → logprob: -3.173704271830502e-06
    2. '[' → logprob: -12.87500286102295
    3. ' char' → logprob: -14.87500286102295
    4. '<char' → logprob: -16.375003814697266
    5. '(char' → logprob: -17.375003814697266
    6. '.char' → logprob: -17.875003814697266
    7. '_char' → logprob: -19.625003814697266
    8. 'bit' → logprob: -19.875003814697266
    9. '	char' → logprob: -20.000003814697266
    10. '   ' → logprob: -20.125003814697266

Token 523: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.03966975957155228
    2. 'index' → logprob: -3.2896697521209717
    3. 'i' → logprob: -6.789669990539551
    4. '[' → logprob: -8.41466999053955
    5. 'char' → logprob: -8.78966999053955
    6. '][' → logprob: -10.41466999053955
    7. ']' → logprob: -10.53966999053955
    8. 's' → logprob: -10.78966999053955
    9. 'Index' → logprob: -11.41466999053955
    10. '[i' → logprob: -11.78966999053955

Token 524: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.004698426462709904
    2. '.add' → logprob: -5.379698276519775
    3. ').' → logprob: -9.754698753356934
    4. '[' → logprob: -11.504698753356934
    5. '.' → logprob: -12.004698753356934
    6. '   ' → logprob: -13.754698753356934
    7. ']' → logprob: -14.004698753356934
    8. ' ].' → logprob: -14.004698753356934
    9. '.bit' → logprob: -14.629698753356934
    10. '[i' → logprob: -14.754698753356934

Token 525: 'add' (ID: 964)
  Prédit: 'add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: 0.0
    2. '.add' → logprob: -19.0
    3. ' add' → logprob: -19.0
    4. '```' → logprob: -22.75
    5. '
' → logprob: -22.875
    6. 'Add' → logprob: -24.0
    7. 'addi' → logprob: -24.0
    8. '_add' → logprob: -24.125
    9. ')add' → logprob: -24.375
    10. 'ad' → logprob: -24.5

Token 526: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -1.1472419600977446e-06
    2. '(' → logprob: -14.000000953674316
    3. '(
' → logprob: -16.500001907348633
    4. 'i' → logprob: -16.750001907348633
    5. '((' → logprob: -17.625001907348633
    6. '```' → logprob: -18.875001907348633
    7. ' (' → logprob: -19.250001907348633
    8. '[i' → logprob: -19.250001907348633
    9. '(I' → logprob: -19.500001907348633
    10. '   ' → logprob: -20.125001907348633

Token 527: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04641840234398842
    2. ' +' → logprob: -3.2964184284210205
    3. '1' → logprob: -4.796418190002441
    4. ',' → logprob: -10.421418190002441
    5. ' ' → logprob: -10.421418190002441
    6. '+
' → logprob: -12.046418190002441
    7. '+,' → logprob: -12.421418190002441
    8. '   ' → logprob: -12.796418190002441
    9. '()+' → logprob: -13.171418190002441
    10. '<|end|>' → logprob: -13.671418190002441

Token 528: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.750001907348633
    3. '   ' → logprob: -15.000001907348633
    4. '2' → logprob: -15.500001907348633
    5. '```' → logprob: -16.000001907348633
    6. '
' → logprob: -17.937501907348633
    7. '<|end|>' → logprob: -18.250001907348633
    8. '+' → logprob: -18.437501907348633
    9. '۱' → logprob: -19.062501907348633
    10. '``' → logprob: -19.187501907348633

Token 529: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.375001907348633
    3. '2' → logprob: -15.000001907348633
    4. '   ' → logprob: -17.125001907348633
    5. '```' → logprob: -17.500001907348633
    6. '۱' → logprob: -18.000001907348633
    7. '
' → logprob: -18.062501907348633
    8. '１' → logprob: -18.625001907348633
    9. '  ' → logprob: -18.625001907348633
    10. '+' → logprob: -18.937501907348633

Token 530: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013325021136552095
    2. '1' → logprob: -6.6263322830200195
    3. ' ,' → logprob: -12.12633228302002
    4. '   ' → logprob: -14.75133228302002
    5. ')' → logprob: -15.12633228302002
    6. ',
' → logprob: -15.37633228302002
    7. ' ' → logprob: -16.376333236694336
    8. '```' → logprob: -17.001333236694336
    9. '),' → logprob: -17.126333236694336
    10. '2' → logprob: -17.251333236694336

Token 531: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '   ' → logprob: -16.875001907348633
    4. '```' → logprob: -19.625001907348633
    5. ')' → logprob: -20.000001907348633
    6. '+' → logprob: -20.625001907348633
    7. '  ' → logprob: -21.625001907348633
    8. '۱' → logprob: -22.250001907348633
    9. '<|end|>' → logprob: -22.250001907348633
    10. '    ' → logprob: -22.687501907348633

Token 532: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '   ' → logprob: -18.875
    4. ')' → logprob: -19.625
    5. '```' → logprob: -19.625
    6. '+' → logprob: -20.125
    7. '۱' → logprob: -20.625
    8. '`' → logprob: -22.0625
    9. '
' → logprob: -22.25
    10. '１' → logprob: -22.375

Token 533: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2113979209971149e-05
    2. '<|end|>' → logprob: -11.875012397766113
    3. ')
' → logprob: -12.375012397766113
    4. ' )' → logprob: -14.625012397766113
    5. '   ' → logprob: -15.625012397766113
    6. ')#' → logprob: -15.875012397766113
    7. '),' → logprob: -17.500011444091797
    8. ')return' → logprob: -17.625011444091797
    9. '```' → logprob: -17.750011444091797
    10. '<|end|>' → logprob: -17.750011444091797

Token 534: ' ' (ID: 220)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0010496005415916443
    2. '
' → logprob: -7.626049518585205
    3. ' for' → logprob: -7.626049518585205
    4. 'Q' → logprob: -10.376049995422363
    5. '<|end|>' → logprob: -10.751049995422363
    6. '```' → logprob: -11.876049995422363
    7. '  
' → logprob: -12.001049995422363
    8. '#' → logprob: -12.626049995422363
    9. '    
' → logprob: -13.501049995422363
    10. ' 
' → logprob: -13.876049995422363

Token 535: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3653513789176941
    2. '
' → logprob: -1.4903514385223389
    3. '<|end|>' → logprob: -2.615351438522339
    4. '  
' → logprob: -5.99035120010376
    5. ' for' → logprob: -6.36535120010376
    6. '#' → logprob: -7.11535120010376
    7. '

' → logprob: -7.24035120010376
    8. '```' → logprob: -7.36535120010376
    9. '    
' → logprob: -7.99035120010376
    10. ' 
' → logprob: -8.365351676940918

Token 536: ' BIT' (ID: 52185)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 537: 's' (ID: 82)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 538: ' are' (ID: 553)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1349106878042221
    2. '[i' → logprob: -2.3849105834960938
    3. '<|end|>' → logprob: -3.6349105834960938
    4. '.add' → logprob: -6.259910583496094
    5. ' for' → logprob: -7.009910583496094
    6. '.' → logprob: -7.009910583496094
    7. ')' → logprob: -7.134910583496094
    8. 'for' → logprob: -7.134910583496094
    9. '   ' → logprob: -7.759910583496094
    10. '[word' → logprob: -9.009910583496094

Token 539: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.030135618522763252
    2. ' ' → logprob: -3.6551356315612793
    3. ' one' → logprob: -6.155135631561279
    4. 'one' → logprob: -7.780135631561279
    5. 'initialized' → logprob: -8.280135154724121
    6. 'indexed' → logprob: -8.405135154724121
    7. '```' → logprob: -8.405135154724121
    8. '   ' → logprob: -8.905135154724121
    9. 'used' → logprob: -9.030135154724121
    10. 'based' → logprob: -9.155135154724121

Token 540: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0028437452856451273
    2. 'one' → logprob: -6.127843856811523
    3. ' ' → logprob: -7.627843856811523
    4. ' one' → logprob: -9.877843856811523
    5. 'based' → logprob: -10.002843856811523
    6. 'used' → logprob: -10.127843856811523
    7. 'initialized' → logprob: -11.752843856811523
    8. 'indexed' → logprob: -11.877843856811523
    9. '```' → logprob: -11.877843856811523
    10. 'using' → logprob: -12.502843856811523

Token 541: '-based' (ID: 8235)
  Prédit: '-based'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-based' → logprob: -0.000552555953618139
    2. '-index' → logprob: -7.875552654266357
    3. 'based' → logprob: -9.0005521774292
    4. ' -' → logprob: -10.0005521774292
    5. ')-' → logprob: -13.5005521774292
    6. '_based' → logprob: -14.2505521774292
    7. ']-' → logprob: -15.0005521774292
    8. ' based' → logprob: -15.1255521774292
    9. '-Based' → logprob: -15.2505521774292
    10. '-' → logprob: -15.2505521774292

Token 542: ' indexed' (ID: 44010)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00617253640666604
    2. '<|end|>' → logprob: -5.6311726570129395
    3. ' for' → logprob: -6.3811726570129395
    4. '
' → logprob: -7.2561726570129395
    5. '#' → logprob: -9.381172180175781
    6. '<|end|>' → logprob: -10.381172180175781
    7. '```' → logprob: -10.506172180175781
    8. ')' → logprob: -11.881172180175781
    9. '  
' → logprob: -12.256172180175781
    10. '

' → logprob: -12.256172180175781

Token 543: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.014919169247150421
    2. '<|end|>' → logprob: -4.639919281005859
    3. ' for' → logprob: -5.514919281005859
    4. '
' → logprob: -7.014919281005859
    5. '<|end|>' → logprob: -9.26491928100586
    6. '```' → logprob: -10.01491928100586
    7. 'Q' → logprob: -10.01491928100586
    8. ')' → logprob: -11.38991928100586
    9. '  
' → logprob: -11.63991928100586
    10. '#' → logprob: -11.76491928100586

Token 544: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -3.4121114822482923e-06
    2. 'queries' → logprob: -13.500003814697266
    3. ' for' → logprob: -13.750003814697266
    4. 'query' → logprob: -15.375003814697266
    5. 'results' → logprob: -15.625003814697266
    6. '#' → logprob: -15.750003814697266
    7. 'Q' → logprob: -16.125003814697266
    8. 'result' → logprob: -16.250003814697266
    9. '```' → logprob: -17.500003814697266
    10. 'output' → logprob: -17.625003814697266

Token 545: ' Process' (ID: 12482)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -2.2961512513575144e-05
    2. 'results' → logprob: -11.750022888183594
    3. 'def' → logprob: -12.250022888183594
    4. 'output' → logprob: -12.750022888183594
    5. ' for' → logprob: -12.875022888183594
    6. 'result' → logprob: -13.250022888183594
    7. 'outputs' → logprob: -14.125022888183594
    8. '#' → logprob: -14.375022888183594
    9. 'from' → logprob: -14.625022888183594
    10. 'answers' → logprob: -14.750022888183594

Token 546: ' each' (ID: 2454)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.010451301001012325
    2. ' for' → logprob: -4.760451316833496
    3. 'Q' → logprob: -6.385451316833496
    4. ' Q' → logprob: -9.385451316833496
    5. 'range' → logprob: -10.635451316833496
    6. ' queries' → logprob: -10.885451316833496
    7. 'queries' → logprob: -11.385451316833496
    8. ' range' → logprob: -12.385451316833496
    9. '_queries' → logprob: -13.260451316833496
    10. '_' → logprob: -13.385451316833496

Token 547: ' query' (ID: 5703)
  Prédit: ' query'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' query' → logprob: -0.09256314486265182
    2. 'query' → logprob: -2.5925631523132324
    3. '_query' → logprob: -4.467563152313232
    4. '_' → logprob: -6.467563152313232
    5. ' _' → logprob: -8.467562675476074
    6. ' line' → logprob: -8.842562675476074
    7. ' q' → logprob: -9.967562675476074
    8. 'for' → logprob: -10.467562675476074
    9. 'q' → logprob: -10.467562675476074
    10. 'Q' → logprob: -10.592562675476074

Token 548: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.3856492842023727e-06
    2. ' for' → logprob: -13.875000953674316
    3. '
' → logprob: -15.500000953674316
    4. '```' → logprob: -16.375001907348633
    5. '``' → logprob: -20.625001907348633
    6. '    
' → logprob: -21.500001907348633
    7. '	for' → logprob: -21.750001907348633
    8. '   ' → logprob: -22.375001907348633
    9. 'while' → logprob: -23.125001907348633
    10. '\
' → logprob: -23.500001907348633

Token 549: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: 0.0
    2. ' for' → logprob: -17.75
    3. '
' → logprob: -18.25
    4. '```' → logprob: -20.25
    5. '	for' → logprob: -23.875
    6. 'while' → logprob: -24.125
    7. 'from' → logprob: -24.625
    8. '    
' → logprob: -25.125
    9. 'import' → logprob: -25.125
    10. '``' → logprob: -25.25

Token 550: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2521553635597229
    2. ' _' → logprob: -1.5021553039550781
    3. ' in' → logprob: -8.502155303955078
    4. 'in' → logprob: -11.377155303955078
    5. '_i' → logprob: -13.127155303955078
    6. '_in' → logprob: -13.127155303955078
    7. ' ' → logprob: -13.127155303955078
    8. 'i' → logprob: -13.377155303955078
    9. '_q' → logprob: -13.877155303955078
    10. ' i' → logprob: -14.377155303955078

Token 551: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.25199633836746216
    2. ' in' → logprob: -1.5019962787628174
    3. ' ' → logprob: -10.376996040344238
    4. 'range' → logprob: -11.626996040344238
    5. 'i' → logprob: -11.751996040344238
    6. 'n' → logprob: -12.376996040344238
    7. 's' → logprob: -12.501996040344238
    8. '_' → logprob: -13.501996040344238
    9. ',' → logprob: -13.876996040344238
    10. 'import' → logprob: -14.126996040344238

Token 552: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0008061755215749145
    2. ' range' → logprob: -7.1258063316345215
    3. '(range' → logprob: -15.125805854797363
    4. '	range' → logprob: -15.500805854797363
    5. 'r' → logprob: -15.750805854797363
    6. 'in' → logprob: -15.875805854797363
    7. 'rang' → logprob: -16.00080680847168
    8. 'input' → logprob: -16.50080680847168
    9. '```' → logprob: -16.62580680847168
    10. '
' → logprob: -16.75080680847168

Token 553: '(Q' (ID: 14437)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.8784897923469543
    2. ' Q' → logprob: -0.8784897923469543
    3. '(Q' → logprob: -1.8784897327423096
    4. '(' → logprob: -4.503489971160889
    5. ' (' → logprob: -6.253489971160889
    6. ' range' → logprob: -6.753489971160889
    7. 'range' → logprob: -7.128489971160889
    8. '()' → logprob: -7.503489971160889
    9. ',' → logprob: -7.753489971160889
    10. ',Q' → logprob: -9.62848949432373

Token 554: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04177992045879364
    2. '):
' → logprob: -3.2917799949645996
    3. ':' → logprob: -5.7917799949646
    4. ',' → logprob: -7.5417799949646
    5. ':
' → logprob: -10.041779518127441
    6. ')' → logprob: -10.166779518127441
    7. '():' → logprob: -10.666779518127441
    8. '):
' → logprob: -11.666779518127441
    9. '():
' → logprob: -12.041779518127441
    10. '   ' → logprob: -12.041779518127441

Token 555: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005089545156806707
    2. 't' → logprob: -6.63008975982666
    3. 'line' → logprob: -6.88008975982666
    4. ' line' → logprob: -7.13008975982666
    5. '```' → logprob: -7.75508975982666
    6. 'tokens' → logprob: -8.25508975982666
    7. 's' → logprob: -8.50508975982666
    8. '	line' → logprob: -8.50508975982666
    9. 'q' → logprob: -8.63008975982666
    10. 'query' → logprob: -9.00508975982666

Token 556: ' parts' (ID: 7881)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.8362802863121033
    2. 'line' → logprob: -1.711280345916748
    3. ' line' → logprob: -1.836280345916748
    4. 's' → logprob: -2.461280345916748
    5. 'query' → logprob: -3.711280345916748
    6. ' l' → logprob: -3.961280345916748
    7. 'cmd' → logprob: -4.211280345916748
    8. 't' → logprob: -4.336280345916748
    9. 'args' → logprob: -4.461280345916748
    10. 'lst' → logprob: -4.586280345916748

Token 557: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11282848566770554
    2. ' =' → logprob: -2.237828493118286
    3. '[' → logprob: -12.862828254699707
    4. '=line' → logprob: -13.737828254699707
    5. '   ' → logprob: -14.487828254699707
    6. '=input' → logprob: -14.737828254699707
    7. '<|end|>' → logprob: -14.862828254699707
    8. '=
' → logprob: -15.487828254699707
    9. ')' → logprob: -15.987828254699707
    10. ' ' → logprob: -16.237829208374023

Token 558: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0024924222379922867
    2. ' input' → logprob: -6.002492427825928
    3. 'list' → logprob: -11.00249195098877
    4. ' list' → logprob: -16.752492904663086
    5. '(input' → logprob: -18.127492904663086
    6. '[input' → logprob: -18.627492904663086
    7. '=input' → logprob: -19.127492904663086
    8. 'sys' → logprob: -19.752492904663086
    9. '<input' → logprob: -20.502492904663086
    10. '	input' → logprob: -21.252492904663086

Token 559: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0003365350130479783
    2. '()' → logprob: -8.000336647033691
    3. '.split' → logprob: -14.125336647033691
    4. 'split' → logprob: -15.750336647033691
    5. '()[' → logprob: -16.875335693359375
    6. '()
' → logprob: -17.250335693359375
    7. ' ().' → logprob: -17.750335693359375
    8. '(' → logprob: -17.875335693359375
    9. '.strip' → logprob: -18.625335693359375
    10. '   ' → logprob: -19.125335693359375

Token 560: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00020354038861114532
    2. 'strip' → logprob: -8.500203132629395
    3. 'rstrip' → logprob: -16.75020408630371
    4. ' split' → logprob: -17.25020408630371
    5. '(split' → logprob: -19.75020408630371
    6. 'spl' → logprob: -20.12520408630371
    7. '.split' → logprob: -22.25020408630371
    8. '```' → logprob: -23.00020408630371
    9. '_split' → logprob: -23.75020408630371
    10. 'plit' → logprob: -25.00020408630371

Token 561: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00889310147613287
    2. '()
' → logprob: -5.008893013000488
    3. '<|end|>' → logprob: -6.383893013000488
    4. '[' → logprob: -8.883893013000488
    5. '   ' → logprob: -9.258893013000488
    6. '()[' → logprob: -10.383893013000488
    7. '<|end|>' → logprob: -10.383893013000488
    8. '(' → logprob: -10.508893013000488
    9. '
' → logprob: -10.883893013000488
    10. '    
' → logprob: -11.008893013000488

Token 562: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7665495872497559
    2. ' if' → logprob: -1.0165495872497559
    3. 'if' → logprob: -1.7665495872497559
    4. 'i' → logprob: -6.266549587249756
    5. ' i' → logprob: -8.266550064086914
    6. ' ' → logprob: -8.766550064086914
    7. '  ' → logprob: -9.641550064086914
    8. '    
' → logprob: -9.766550064086914
    9. '    ' → logprob: -10.266550064086914
    10. '```' → logprob: -10.266550064086914

Token 563: ' q' (ID: 2335)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.012827341444790363
    2. 't' → logprob: -4.637827396392822
    3. 'q' (adapté à ' q') → logprob: -6.762827396392822
    4. 'i' → logprob: -6.887827396392822
    5. ' if' → logprob: -7.887827396392822
    6. 'cmd' → logprob: -8.012826919555664
    7. 'c' → logprob: -9.137826919555664
    8. 'query' → logprob: -9.762826919555664
    9. 'type' → logprob: -12.012826919555664
    10. 'command' → logprob: -13.012826919555664

Token 564: ' =' (ID: 314)
  Prédit: '_type'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_type' → logprob: -0.1745358407497406
    2. '[' → logprob: -2.4245357513427734
    3. 'type' → logprob: -2.7995357513427734
    4. '_' → logprob: -5.049535751342773
    5. 'Type' → logprob: -7.049535751342773
    6. '_id' → logprob: -7.299535751342773
    7. 'ype' → logprob: -7.424535751342773
    8. 'id' → logprob: -7.549535751342773
    9. ' =' → logprob: -7.799535751342773
    10. '=' → logprob: -8.299535751342773

Token 565: ' int' (ID: 677)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.20190928876399994
    2. 'int' → logprob: -1.7019093036651611
    3. ' parts' → logprob: -7.826909065246582
    4. ' int' → logprob: -9.326909065246582
    5. '[int' → logprob: -12.701909065246582
    6. '(parts' → logprob: -12.826909065246582
    7. 'ints' → logprob: -13.701909065246582
    8. '(int' → logprob: -15.201909065246582
    9. 'Parts' → logprob: -15.701909065246582
    10. 'list' → logprob: -15.951909065246582

Token 566: '(parts' (ID: 102573)
  Prédit: '(parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parts' → logprob: -0.002048197668045759
    2. 'parts' → logprob: -6.252048015594482
    3. '(' → logprob: -9.12704849243164
    4. '[' → logprob: -12.00204849243164
    5. ' parts' → logprob: -12.37704849243164
    6. '_parts' → logprob: -15.75204849243164
    7. '()' → logprob: -15.87704849243164
    8. '(
' → logprob: -16.00204849243164
    9. 'Parts' → logprob: -16.87704849243164
    10. ' (' → logprob: -17.00204849243164

Token 567: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.596781946020201e-05
    2. '0' → logprob: -10.000045776367188
    3. '   ' → logprob: -15.375045776367188
    4. '[
' → logprob: -16.125045776367188
    5. '1' → logprob: -16.500045776367188
    6. ')' → logprob: -17.000045776367188
    7. ' [' → logprob: -17.250045776367188
    8. '(' → logprob: -17.875045776367188
    9. '```' → logprob: -17.875045776367188
    10. ' ' → logprob: -18.250045776367188

Token 568: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.511406809295295e-06
    2. '[' → logprob: -12.000006675720215
    3. ' ' → logprob: -15.500006675720215
    4. '1' → logprob: -17.8750057220459
    5. '
' → logprob: -18.0000057220459
    6. '   ' → logprob: -18.3750057220459
    7. ')' → logprob: -19.2500057220459
    8. '```' → logprob: -19.2500057220459
    9. '۰' → logprob: -20.5000057220459
    10. '(' → logprob: -20.7500057220459

Token 569: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000514548271894455
    2. '])' → logprob: -7.875514507293701
    3. ')
' → logprob: -10.00051498413086
    4. ']' → logprob: -10.00051498413086
    5. '<|end|>' → logprob: -10.87551498413086
    6. ')]' → logprob: -11.25051498413086
    7. ' )' → logprob: -12.12551498413086
    8. ')])' → logprob: -13.87551498413086
    9. '   ' → logprob: -14.00051498413086
    10. '）' → logprob: -14.25051498413086

Token 570: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.27078887820243835
    2. 'if' → logprob: -1.8957889080047607
    3. '<|end|>' → logprob: -2.8957889080047607
    4. '   ' → logprob: -4.020788669586182
    5. ' ' → logprob: -5.145788669586182
    6. ' 
' → logprob: -5.645788669586182
    7. '[' → logprob: -6.395788669586182
    8. '
' → logprob: -6.895788669586182
    9. '    ' → logprob: -7.895788669586182
    10. '  ' → logprob: -8.39578914642334

Token 571: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.3890857398509979
    2. ' if' → logprob: -1.1390857696533203
    3. '   ' → logprob: -6.38908576965332
    4. '<|end|>' → logprob: -8.63908576965332
    5. ' ' → logprob: -8.88908576965332
    6. ' 
' → logprob: -9.26408576965332
    7. '
' → logprob: -10.13908576965332
    8. '    ' → logprob: -10.76408576965332
    9. 'If' → logprob: -11.26408576965332
    10. ')' → logprob: -11.88908576965332

Token 572: ' q' (ID: 2335)
  Prédit: ' q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' q' → logprob: -0.06196824833750725
    2. 'q' → logprob: -2.8119683265686035
    3. ' ' → logprob: -15.436967849731445
    4. '1' → logprob: -15.811967849731445
    5. '	q' → logprob: -16.186967849731445
    6. ' ' → logprob: -17.311967849731445
    7. '_' → logprob: -17.436967849731445
    8. '    ' → logprob: -18.186967849731445
    9. '2' → logprob: -18.436967849731445
    10. 'space' → logprob: -19.061967849731445

Token 573: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.38699206709861755
    2. ' ==' → logprob: -1.13699209690094
    3. '=' → logprob: -9.261992454528809
    4. ' =' → logprob: -12.011992454528809
    5. ')' → logprob: -12.261992454528809
    6. '[' → logprob: -12.761992454528809
    7. '==
' → logprob: -12.886992454528809
    8. ')==' → logprob: -13.011992454528809
    9. '===' → logprob: -13.261992454528809
    10. '1' → logprob: -13.386992454528809

Token 574: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001279641641303897
    2. '2' → logprob: -6.751279830932617
    3. ' ' → logprob: -9.126279830932617
    4. '0' → logprob: -15.251279830932617
    5. '
' → logprob: -15.751279830932617
    6. '```' → logprob: -15.876279830932617
    7. '   ' → logprob: -16.876279830932617
    8. '=' → logprob: -17.001279830932617
    9. '

' → logprob: -17.376279830932617
    10. '  ' → logprob: -17.626279830932617

Token 575: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.32392441527918e-05
    2. '2' → logprob: -9.875053405761719
    3. ' ' → logprob: -13.500053405761719
    4. '```' → logprob: -15.625053405761719
    5. '0' → logprob: -17.50005340576172
    6. '
' → logprob: -18.00005340576172
    7. '=' → logprob: -18.12505340576172
    8. 'update' → logprob: -18.25005340576172
    9. '   ' → logprob: -18.50005340576172
    10. '  ' → logprob: -18.62505340576172

Token 576: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.28129974007606506
    2. ':
' → logprob: -1.4062997102737427
    3. ',' → logprob: -9.531299591064453
    4. '   ' → logprob: -10.531299591064453
    5. '):
' → logprob: -10.656299591064453
    6. ' :
' → logprob: -11.531299591064453
    7. '):' → logprob: -12.156299591064453
    8. ':
' → logprob: -12.531299591064453
    9. ' :' → logprob: -12.781299591064453
    10. '       ' → logprob: -13.406299591064453

Token 577: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8118433952331543
    2. ' x' → logprob: -1.0618433952331543
    3. '       ' → logprob: -2.0618433952331543
    4. ' s' → logprob: -4.436843395233154
    5. ' parts' → logprob: -4.436843395233154
    6. ',' → logprob: -4.811843395233154
    7. ' idx' → logprob: -4.811843395233154
    8. ' char' → logprob: -4.936843395233154
    9. '    ' → logprob: -5.061843395233154
    10. ' #' → logprob: -5.436843395233154

Token 578: ' #' (ID: 1069)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.38467538356781
    2. 'pos' → logprob: -1.38467538356781
    3. ' i' → logprob: -1.75967538356781
    4. ' pos' → logprob: -2.3846755027770996
    5. ' x' → logprob: -2.6346755027770996
    6. 'x' → logprob: -2.6346755027770996
    7. 'idx' → logprob: -3.0096755027770996
    8. ' idx' → logprob: -3.5096755027770996
    9. 'index' → logprob: -5.5096755027771
    10. ' index' → logprob: -6.1346755027771

Token 579: ' Update' (ID: 9152)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.2604053020477295
    2. 'i' → logprob: -2.1354053020477295
    3. 'idx' → logprob: -2.3854053020477295
    4. 'x' → logprob: -4.510405540466309
    5. 'index' → logprob: -5.385405540466309
    6. '_,' → logprob: -6.635405540466309
    7. ' pos' → logprob: -6.885405540466309
    8. 'p' → logprob: -7.635405540466309
    9. '#' → logprob: -8.760405540466309
    10. ' i' → logprob: -8.885405540466309

Token 580: ' query' (ID: 5703)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0989022254943848
    2. ' S' → logprob: -2.2239022254943848
    3. ' ' → logprob: -2.5989022254943848
    4. '_' → logprob: -2.5989022254943848
    5. ' idx' → logprob: -2.5989022254943848
    6. 'idx' → logprob: -3.4739022254943848
    7. '<|end|>' → logprob: -3.4739022254943848
    8. ' s' → logprob: -3.4739022254943848
    9. 'index' → logprob: -3.5989022254943848
    10. ',' → logprob: -3.7239022254943848

Token 581: ':' (ID: 25)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5027173757553101
    2. ',' → logprob: -1.37771737575531
    3. '       ' → logprob: -3.6277174949645996
    4. ' ,' → logprob: -3.6277174949645996
    5. ' x' → logprob: -3.7527174949645996
    6. ' idx' → logprob: -3.7527174949645996
    7. '_,' → logprob: -4.5027174949646
    8. '        
' → logprob: -5.6277174949646
    9. '    
' → logprob: -5.6277174949646
    10. ' 
' → logprob: -5.6277174949646

Token 582: ' Change' (ID: 16167)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.8390822410583496
    2. 'pos' → logprob: -1.7140822410583496
    3. ' idx' → logprob: -1.8390822410583496
    4. ' pos' → logprob: -2.0890822410583496
    5. 'i' → logprob: -3.2140822410583496
    6. 'idx' → logprob: -3.8390822410583496
    7. ' x' → logprob: -4.46408224105835
    8. ' index' → logprob: -4.71408224105835
    9. 'index' → logprob: -4.96408224105835
    10. ' p' → logprob: -5.21408224105835

Token 583: ' character' (ID: 5855)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.07987958192825317
    2. ' S' → logprob: -2.5798795223236084
    3. ' ' → logprob: -8.454879760742188
    4. '   ' → logprob: -8.579879760742188
    5. ' the' → logprob: -8.829879760742188
    6. ' parts' → logprob: -8.954879760742188
    7. 'parts' → logprob: -9.079879760742188
    8. 'the' → logprob: -9.329879760742188
    9. '1' → logprob: -10.204879760742188
    10. '_S' → logprob: -11.204879760742188

Token 584: ' at' (ID: 540)
  Prédit: ' at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.4124341309070587
    2. '   ' → logprob: -1.5374341011047363
    3. ' S' → logprob: -3.1624341011047363
    4. ',' → logprob: -4.162434101104736
    5. ' =' → logprob: -4.162434101104736
    6. ' s' → logprob: -4.162434101104736
    7. 's' → logprob: -5.287434101104736
    8. 'S' → logprob: -5.287434101104736
    9. ' x' → logprob: -5.537434101104736
    10. 'at' → logprob: -5.787434101104736

Token 585: ' a' (ID: 261)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.056627802550792694
    2. ' int' → logprob: -3.4316277503967285
    3. 'parts' → logprob: -3.9316277503967285
    4. ' parts' → logprob: -5.9316277503967285
    5. 'index' → logprob: -8.806628227233887
    6. '(parts' → logprob: -9.431628227233887
    7. 'positions' → logprob: -9.556628227233887
    8. 'i' → logprob: -9.931628227233887
    9. '   ' → logprob: -10.306628227233887
    10. '(int' → logprob: -11.181628227233887

Token 586: ' given' (ID: 4335)
  Prédit: ' parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' parts' → logprob: -0.19803555309772491
    2. ' position' → logprob: -2.573035478591919
    3. 'parts' → logprob: -2.823035478591919
    4. 'position' → logprob: -4.948035717010498
    5. ' ' → logprob: -5.073035717010498
    6. '[' → logprob: -5.073035717010498
    7. '[position' → logprob: -5.073035717010498
    8. '(parts' → logprob: -5.573035717010498
    9. ' index' → logprob: -6.073035717010498
    10. ' s' → logprob: -6.198035717010498

Token 587: ' position' (ID: 4010)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.677971601486206
    2. 'index' → logprob: -1.052971601486206
    3. ' position' → logprob: -2.302971601486206
    4. ' index' → logprob: -3.177971601486206
    5. ' ' → logprob: -7.052971839904785
    6. '<|end|>' → logprob: -7.052971839904785
    7. 'x' → logprob: -11.177971839904785
    8. '_index' → logprob: -11.302971839904785
    9. 'idx' → logprob: -11.927971839904785
    10. '<|end|>' → logprob: -12.052971839904785

Token 588: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.727999210357666
    2. ',' → logprob: -1.602999210357666
    3. ' parts' → logprob: -2.477999210357666
    4. ' =' → logprob: -2.727999210357666
    5. '       ' → logprob: -3.227999210357666
    6. ' ,' → logprob: -3.227999210357666
    7. ' x' → logprob: -3.977999210357666
    8. '(parts' → logprob: -4.352999210357666
    9. ' pos' → logprob: -4.477999210357666
    10. ' idx' → logprob: -4.602999210357666

Token 589: ' another' (ID: 3613)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.33884385228157043
    2. ' parts' → logprob: -1.338843822479248
    3. 'the' → logprob: -4.588843822479248
    4. '(parts' → logprob: -5.338843822479248
    5. ' the' → logprob: -5.713843822479248
    6. 'a' → logprob: -5.963843822479248
    7. ' a' → logprob: -6.463843822479248
    8. 'char' → logprob: -6.838843822479248
    9. 'c' → logprob: -7.588843822479248
    10. 'new' → logprob: -8.088844299316406

Token 590: ' character' (ID: 5855)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.6511329412460327
    2. ',' → logprob: -2.2761330604553223
    3. '_' → logprob: -2.4011330604553223
    4. '
' → logprob: -2.5261330604553223
    5. ' ' → logprob: -2.5261330604553223
    6. ' s' → logprob: -2.7761330604553223
    7. '       ' → logprob: -2.9011330604553223
    8. ' =' → logprob: -3.4011330604553223
    9. '    
' → logprob: -3.6511330604553223
    10. 's' → logprob: -3.6511330604553223

Token 591: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16697418689727783
    2. '       ' → logprob: -2.1669740676879883
    3. ',' → logprob: -4.416974067687988
    4. ' x' → logprob: -5.041974067687988
    5. '        
' → logprob: -5.041974067687988
    6. '    
' → logprob: -5.791974067687988
    7. ' 
' → logprob: -6.416974067687988
    8. '
' → logprob: -6.541974067687988
    9. ' ' → logprob: -6.666974067687988
    10. ' ,' → logprob: -7.041974067687988

Token 592: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03826937824487686
    2. '   ' → logprob: -3.663269281387329
    3. '<|end|>' → logprob: -4.913269519805908
    4. ',' → logprob: -6.788269519805908
    5. '        
' → logprob: -7.163269519805908
    6. ':' → logprob: -7.163269519805908
    7. '
' → logprob: -8.28826904296875
    8. '[' → logprob: -8.28826904296875
    9. '```' → logprob: -8.28826904296875
    10. '<|end|>' → logprob: -8.66326904296875

Token 593: ' i' (ID: 575)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.14788658916950226
    2. 'x' → logprob: -3.0228865146636963
    3. 'idx' → logprob: -3.0228865146636963
    4. 'i' (adapté à ' i') → logprob: -4.022886753082275
    5. ' pos' → logprob: -4.272886753082275
    6. 'p' → logprob: -6.022886753082275
    7. ' x' → logprob: -6.272886753082275
    8. ' idx' → logprob: -6.772886753082275
    9. 'index' → logprob: -6.897886753082275
    10. ' i' → logprob: -7.397886753082275

Token 594: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12633752822875977
    2. '=' → logprob: -2.2513375282287598
    3. ',' → logprob: -4.37633752822876
    4. ' ' → logprob: -8.251337051391602
    5. ' ,' → logprob: -8.751337051391602
    6. ')' → logprob: -9.251337051391602
    7. '   ' → logprob: -9.626337051391602
    8. '[' → logprob: -10.251337051391602
    9. '+' → logprob: -10.501337051391602
    10. ' +=' → logprob: -10.626337051391602

Token 595: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0015023599844425917
    2. ' int' → logprob: -6.501502513885498
    3. '[int' → logprob: -17.251502990722656
    4. '	int' → logprob: -18.001502990722656
    5. '   ' → logprob: -18.376502990722656
    6. '<int' → logprob: -19.251502990722656
    7. '(int' → logprob: -19.251502990722656
    8. '=int' → logprob: -19.376502990722656
    9. '1' → logprob: -19.501502990722656
    10. '    ' → logprob: -19.876502990722656

Token 596: '(parts' (ID: 102573)
  Prédit: '(parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parts' → logprob: -0.0020685410127043724
    2. '(' → logprob: -6.627068519592285
    3. 'parts' → logprob: -7.877068519592285
    4. ' parts' → logprob: -8.002068519592285
    5. ' (' → logprob: -11.002068519592285
    6. ')' → logprob: -12.252068519592285
    7. '(
' → logprob: -12.752068519592285
    8. '_parts' → logprob: -14.002068519592285
    9. '(part' → logprob: -14.252068519592285
    10. ' ' → logprob: -14.502068519592285

Token 597: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.796184723294573e-06
    2. '1' → logprob: -12.750005722045898
    3. ' [' → logprob: -13.750005722045898
    4. '   ' → logprob: -14.625005722045898
    5. '       ' → logprob: -14.750005722045898
    6. ')' → logprob: -15.750005722045898
    7. '```' → logprob: -15.750005722045898
    8. ')[' → logprob: -16.0000057220459
    9. '\[' → logprob: -16.0000057220459
    10. '[
' → logprob: -16.1250057220459

Token 598: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. '[' → logprob: -16.125
    3. ' ' → logprob: -16.5
    4. '2' → logprob: -17.0
    5. '   ' → logprob: -17.125
    6. '```' → logprob: -17.875
    7. '0' → logprob: -19.375
    8. '(' → logprob: -19.5
    9. '１' → logprob: -20.125
    10. ')' → logprob: -20.25

Token 599: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06206381320953369
    2. ')
' → logprob: -2.812063694000244
    3. '<|end|>' → logprob: -10.062064170837402
    4. ' )' → logprob: -10.937064170837402
    5. ' )
' → logprob: -11.687064170837402
    6. '       ' → logprob: -12.187064170837402
    7. ')
' → logprob: -12.187064170837402
    8. '),' → logprob: -12.312064170837402
    9. ',' → logprob: -13.062064170837402
    10. '   ' → logprob: -13.312064170837402

Token 600: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.39922046661376953
    2. '       ' → logprob: -1.6492204666137695
    3. '<|end|>' → logprob: -3.0242204666137695
    4. ' -' → logprob: -3.3992204666137695
    5. '   ' → logprob: -4.1492204666137695
    6. ' c' → logprob: -4.6492204666137695
    7. ' ' → logprob: -4.7742204666137695
    8. 'c' → logprob: -5.8992204666137695
    9. 'old' → logprob: -6.1492204666137695
    10. ' i' → logprob: -6.1492204666137695

Token 601: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -14.125000953674316
    3. '<|end|>' → logprob: -15.375000953674316
    4. '```' → logprob: -17.500001907348633
    5. '0' → logprob: -18.875001907348633
    6. '<|end|>' → logprob: -19.250001907348633
    7. '   ' → logprob: -19.500001907348633
    8. '=' → logprob: -20.250001907348633
    9. '#' → logprob: -20.750001907348633
    10. ',' → logprob: -21.000001907348633

Token 602: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.625001907348633
    3. '<|end|>' → logprob: -15.125001907348633
    4. '0' → logprob: -18.125001907348633
    5. '```' → logprob: -18.375001907348633
    6. '<|end|>' → logprob: -19.000001907348633
    7. '2' → logprob: -20.500001907348633
    8. '   ' → logprob: -20.562501907348633
    9. '#' → logprob: -21.312501907348633
    10. '=' → logprob: -21.375001907348633

Token 603: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 604: ' #' (ID: 1069)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3995704650878906
    2. '
' → logprob: -1.5245704650878906
    3. '   ' → logprob: -2.1495704650878906
    4. 'old' → logprob: -2.2745704650878906
    5. '<|end|>' → logprob: -2.5245704650878906
    6. 'c' → logprob: -2.8995704650878906
    7. '    
' → logprob: -3.3995704650878906
    8. '  
' → logprob: -3.3995704650878906
    9. ' 
' → logprob: -3.8995704650878906
    10. '       ' → logprob: -4.149570465087891

Token 605: ' ' (ID: 220)
  Prédit: 'old'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'old' → logprob: -0.050691623240709305
    2. ' old' → logprob: -3.550691604614258
    3. 'c' → logprob: -4.425691604614258
    4. 'char' → logprob: -5.550691604614258
    5. 'prev' → logprob: -5.800691604614258
    6. 'new' → logprob: -7.300691604614258
    7. 'x' → logprob: -7.675691604614258
    8. ' c' → logprob: -8.800691604614258
    9. 'bit' → logprob: -9.050691604614258
    10. ' char' → logprob: -9.550691604614258

Token 606: '0' (ID: 15)
  Prédit: 'old'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'old' → logprob: -0.04742639139294624
    2. 'char' → logprob: -4.047426223754883
    3. 'c' → logprob: -4.172426223754883
    4. 'x' → logprob: -5.547426223754883
    5. 'prev' → logprob: -6.047426223754883
    6. ' old' → logprob: -6.172426223754883
    7. 'new' → logprob: -6.422426223754883
    8. 'bit' → logprob: -6.672426223754883
    9. 'current' → logprob: -7.672426223754883
    10. 'pos' → logprob: -7.922426223754883

Token 607: '-based' (ID: 8235)
  Prédit: '-based'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-based' → logprob: -0.700575590133667
    2. 'based' → logprob: -1.325575590133667
    3. '<|end|>' → logprob: -1.575575590133667
    4. ')' → logprob: -4.700575828552246
    5. ' based' → logprob: -5.200575828552246
    6. '```' → logprob: -5.700575828552246
    7. '<|end|>' → logprob: -5.700575828552246
    8. '   ' → logprob: -5.825575828552246
    9. ']' → logprob: -6.075575828552246
    10. 'Based' → logprob: -6.450575828552246

Token 608: ' index' (ID: 3472)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 609: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.363162875175476
    2. '       ' → logprob: -1.488162875175476
    3. '   ' → logprob: -2.1131629943847656
    4. '    
' → logprob: -2.6131629943847656
    5. ')
' → logprob: -2.7381629943847656
    6. 'old' → logprob: -3.1131629943847656
    7. '<|end|>' → logprob: -3.1131629943847656
    8. '
' → logprob: -3.3631629943847656
    9. 'new' → logprob: -3.6131629943847656
    10. '  
' → logprob: -3.8631629943847656

Token 610: ' position' (ID: 4010)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.005188812967389822
    2. 'i' → logprob: -6.005188941955566
    3. 'the' → logprob: -6.630188941955566
    4. 'position' → logprob: -7.255188941955566
    5. ' S' → logprob: -7.630188941955566
    6. ' the' → logprob: -10.005188941955566
    7. 'internal' → logprob: -10.255188941955566
    8. ' i' → logprob: -10.505188941955566
    9. 'positions' → logprob: -10.755188941955566
    10. ' position' → logprob: -11.505188941955566

Token 611: ' in' (ID: 306)
  Prédit: 'old'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'old' → logprob: -1.5172638893127441
    2. ')' → logprob: -1.8922638893127441
    3. '
' → logprob: -2.017263889312744
    4. 'c' → logprob: -2.392263889312744
    5. '    
' → logprob: -2.642263889312744
    6. 'new' → logprob: -2.892263889312744
    7. '<|end|>' → logprob: -3.017263889312744
    8. '   ' → logprob: -3.142263889312744
    9. '       ' → logprob: -3.517263889312744
    10. ')
' → logprob: -3.642263889312744

Token 612: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.00012833021173719317
    2. ' S' → logprob: -9.000128746032715
    3. 'the' → logprob: -12.750128746032715
    4. 'code' → logprob: -14.625128746032715
    5. ' code' → logprob: -15.000128746032715
    6. ' the' → logprob: -15.250128746032715
    7. 'string' → logprob: -15.375128746032715
    8. ')' → logprob: -15.375128746032715
    9. '```' → logprob: -16.1251277923584
    10. 's' → logprob: -16.6251277923584

Token 613: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0987818241119385
    2. '<|end|>' → logprob: -1.0987818241119385
    3. '       ' → logprob: -2.3487818241119385
    4. '   ' → logprob: -2.7237818241119385
    5. '
' → logprob: -2.7237818241119385
    6. ')
' → logprob: -3.8487818241119385
    7. '    
' → logprob: -3.9737818241119385
    8. '  
' → logprob: -4.473781585693359
    9. ' 
' → logprob: -4.598781585693359
    10. '        
' → logprob: -4.723781585693359

Token 614: '       ' (ID: 309)
  Prédit: 'old'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'old' → logprob: -0.9098539352416992
    2. 'c' → logprob: -1.7848539352416992
    3. ' old' → logprob: -1.7848539352416992
    4. ' c' → logprob: -2.159853935241699
    5. '
' → logprob: -2.534853935241699
    6. '       ' → logprob: -3.409853935241699
    7. 'new' → logprob: -4.909853935241699
    8. '   ' → logprob: -5.034853935241699
    9. ' new' → logprob: -5.409853935241699
    10. ')
' → logprob: -5.784853935241699

Token 615: ' new' (ID: 620)
  Prédit: 'old'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'old' → logprob: -0.03279053419828415
    2. 'c' → logprob: -4.032790660858154
    3. 'char' → logprob: -5.282790660858154
    4. 'new' (adapté à ' new') → logprob: -5.407790660858154
    5. 'bit' → logprob: -6.032790660858154
    6. 'prev' → logprob: -6.407790660858154
    7. 'ch' → logprob: -8.157790184020996
    8. 'x' → logprob: -8.282790184020996
    9. ' old' → logprob: -8.532790184020996
    10. 'orig' → logprob: -10.282790184020996

Token 616: '_c' (ID: 1303)
  Prédit: '_char'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -0.07945434004068375
    2. '_c' → logprob: -2.5794544219970703
    3. '_ch' → logprob: -7.95445442199707
    4. 'char' → logprob: -9.45445442199707
    5. 'Char' → logprob: -10.07945442199707
    6. '_chr' → logprob: -10.20445442199707
    7. 'c' → logprob: -10.95445442199707
    8. ' =' → logprob: -11.07945442199707
    9. '_' → logprob: -11.07945442199707
    10. '=' → logprob: -12.82945442199707

Token 617: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07889287173748016
    2. ' =' → logprob: -2.578892946243286
    3. '_idx' → logprob: -14.453892707824707
    4. '_' → logprob: -14.578892707824707
    5. '   ' → logprob: -14.703892707824707
    6. ' ' → logprob: -14.703892707824707
    7. 'x' → logprob: -14.828892707824707
    8. '_index' → logprob: -15.578892707824707
    9. '_char' → logprob: -16.328893661499023
    10. 'ex' → logprob: -16.328893661499023

Token 618: ' parts' (ID: 7881)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.31328821182250977
    2. ' parts' → logprob: -1.3132882118225098
    3. '(parts' → logprob: -10.688287734985352
    4. '   ' → logprob: -13.438287734985352
    5. ' ' → logprob: -15.188287734985352
    6. '.parts' → logprob: -15.313287734985352
    7. '`' → logprob: -15.438287734985352
    8. 'part' → logprob: -15.438287734985352
    9. 'Parts' → logprob: -15.813287734985352
    10. '_parts' → logprob: -15.813287734985352

Token 619: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.704273118884885e-07
    2. '1' → logprob: -14.500000953674316
    3. ' [' → logprob: -16.5
    4. '[
' → logprob: -17.0
    5. '```' → logprob: -17.0
    6. '
' → logprob: -17.875
    7. '[-' → logprob: -18.625
    8. '   ' → logprob: -19.0
    9. '2' → logprob: -19.25
    10. '(' → logprob: -19.875

Token 620: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0015104549238458276
    2. '1' → logprob: -6.5015106201171875
    3. '[' → logprob: -12.751510620117188
    4. ' ' → logprob: -13.001510620117188
    5. '   ' → logprob: -13.126510620117188
    6. '-' → logprob: -14.501510620117188
    7. '```' → logprob: -15.751510620117188
    8. '  ' → logprob: -17.001510620117188
    9. '0' → logprob: -17.126510620117188
    10. '
' → logprob: -17.376510620117188

Token 621: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.024831049144268036
    2. '[' → logprob: -3.7748310565948486
    3. ']
' → logprob: -7.3998308181762695
    4. ')' → logprob: -7.6498308181762695
    5. ' ]' → logprob: -8.64983081817627
    6. '']' → logprob: -8.89983081817627
    7. '"]' → logprob: -9.39983081817627
    8. '])' → logprob: -10.02483081817627
    9. '][' → logprob: -10.89983081817627
    10. ')]' → logprob: -11.52483081817627

Token 622: '       ' (ID: 309)
  Prédit: 'old'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'old' → logprob: -0.4788875877857208
    2. ' old' → logprob: -1.1038875579833984
    3. '   ' → logprob: -3.1038875579833984
    4. '
' → logprob: -6.728887557983398
    5. '       ' → logprob: -7.478887557983398
    6. '_old' → logprob: -7.478887557983398
    7. '	old' → logprob: -7.603887557983398
    8. 'prev' → logprob: -8.103887557983398
    9. 'current' → logprob: -8.353887557983398
    10. '    
' → logprob: -8.478887557983398

Token 623: ' old' (ID: 2890)
  Prédit: 'old'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'old' (adapté à ' old') → logprob: -9.662937372922897e-05
    2. ' old' → logprob: -9.500096321105957
    3. 'prev' → logprob: -11.500096321105957
    4. 'char' → logprob: -12.000096321105957
    5. 'c' → logprob: -13.375096321105957
    6. 'orig' → logprob: -14.125096321105957
    7. '   ' → logprob: -14.250096321105957
    8. '       ' → logprob: -14.875096321105957
    9. 'current' → logprob: -15.000096321105957
    10. '```' → logprob: -15.125096321105957

Token 624: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.005336928181350231
    2. '_char' → logprob: -5.255336761474609
    3. ' =' → logprob: -10.75533676147461
    4. 'char' → logprob: -10.88033676147461
    5. '_index' → logprob: -10.88033676147461
    6. '=' → logprob: -11.63033676147461
    7. '_i' → logprob: -11.88033676147461
    8. '```' → logprob: -11.88033676147461
    9. '_idx' → logprob: -12.00533676147461
    10. '_' → logprob: -12.75533676147461

Token 625: '_index' (ID: 7748)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.031902894377708435
    2. ' =' → logprob: -3.78190279006958
    3. '_index' → logprob: -5.28190279006958
    4. '_idx' → logprob: -5.65690279006958
    5. 'idx' → logprob: -10.781903266906738
    6. 'index' → logprob: -12.031903266906738
    7. '_ord' → logprob: -12.406903266906738
    8. '_ind' → logprob: -12.531903266906738
    9. 'ind' → logprob: -12.781903266906738
    10. '_ix' → logprob: -13.156903266906738

Token 626: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519293427467346
    2. '=' → logprob: -1.5019292831420898
    3. ' ' → logprob: -15.87692928314209
    4. ',' → logprob: -16.876930236816406
    5. '   ' → logprob: -17.126930236816406
    6. '=
' → logprob: -17.376930236816406
    7. ' =
' → logprob: -17.501930236816406
    8. '[' → logprob: -17.501930236816406
    9. ')' → logprob: -17.751930236816406
    10. '```' → logprob: -17.751930236816406

Token 627: ' ord' (ID: 6608)
  Prédit: 'ord'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ord' → logprob: -0.011052302084863186
    2. ' ord' → logprob: -4.511052131652832
    3. '(ord' → logprob: -12.511052131652832
    4. '   ' → logprob: -14.136052131652832
    5. '
' → logprob: -17.51105308532715
    6. 'ords' → logprob: -17.76105308532715
    7. 'bit' → logprob: -17.88605308532715
    8. 'org' → logprob: -18.63605308532715
    9. '_ord' → logprob: -18.63605308532715
    10. 'ordi' → logprob: -18.76105308532715

Token 628: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.006718452088534832
    2. 'S' → logprob: -5.006718635559082
    3. '[S' → logprob: -13.506718635559082
    4. '(' → logprob: -13.881718635559082
    5. 's' → logprob: -15.006718635559082
    6. '(s' → logprob: -15.631718635559082
    7. ')' → logprob: -16.256717681884766
    8. '```' → logprob: -16.756717681884766
    9. '(
' → logprob: -17.381717681884766
    10. ''S' → logprob: -17.506717681884766

Token 629: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.961759259458631e-06
    2. 'i' → logprob: -12.875004768371582
    3. '[' → logprob: -13.250004768371582
    4. '[
' → logprob: -15.500004768371582
    5. '[I' → logprob: -16.5000057220459
    6. '```' → logprob: -16.5000057220459
    7. ')' → logprob: -16.8750057220459
    8. ' [' → logprob: -18.1250057220459
    9. '[u' → logprob: -18.5000057220459
    10. ' i' → logprob: -18.5000057220459

Token 630: '])' (ID: 4636)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.001078302855603397
    2. '])' → logprob: -6.876078128814697
    3. ')' → logprob: -10.126078605651855
    4. '])-' → logprob: -13.001078605651855
    5. '[' → logprob: -13.501078605651855
    6. ']' → logprob: -14.376078605651855
    7. '   ' → logprob: -14.751078605651855
    8. 'i' → logprob: -15.501078605651855
    9. '       ' → logprob: -15.751078605651855
    10. '(i' → logprob: -16.75107765197754

Token 631: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.030702343210577965
    2. 'new' → logprob: -4.030702114105225
    3. '[' → logprob: -4.530702114105225
    4. ')-' → logprob: -7.405702114105225
    5. '[i' → logprob: -8.155702590942383
    6. ' new' → logprob: -8.780702590942383
    7. ' -' → logprob: -8.780702590942383
    8. '[new' → logprob: -8.780702590942383
    9. '-' → logprob: -9.155702590942383
    10. ']' → logprob: -9.655702590942383

Token 632: ' ' (ID: 220)
  Prédit: '97'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '97' → logprob: -0.0002637199067976326
    2. ' ' → logprob: -8.250264167785645
    3. '```' → logprob: -14.125264167785645
    4. ''' → logprob: -14.250264167785645
    5. '96' → logprob: -14.750264167785645
    6. 'a' → logprob: -15.500264167785645
    7. '`' → logprob: -16.125263214111328
    8. '097' → logprob: -16.125263214111328
    9. '   ' → logprob: -16.562763214111328
    10. ''a' → logprob: -17.187763214111328

Token 633: '97' (ID: 5170)
  Prédit: '97'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '97' → logprob: -4.008129963040119e-06
    2. ' ' → logprob: -12.750003814697266
    3. '```' → logprob: -14.750003814697266
    4. 'a' → logprob: -15.250003814697266
    5. '96' → logprob: -15.750003814697266
    6. ''' → logprob: -16.125003814697266
    7. '097' → logprob: -16.625003814697266
    8. '`' → logprob: -17.000003814697266
    9. 'ord' → logprob: -18.000003814697266
    10. '   ' → logprob: -18.312503814697266

Token 634: ' ' (ID: 220)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11055391281843185
    2. ')
' → logprob: -2.9855539798736572
    3. 'bit' → logprob: -3.6105539798736572
    4. '       ' → logprob: -4.235553741455078
    5. ' bit' → logprob: -4.735553741455078
    6. '<|end|>' → logprob: -6.860553741455078
    7. '   ' → logprob: -7.485553741455078
    8. '           ' → logprob: -7.735553741455078
    9. '```' → logprob: -8.485553741455078
    10. '
' → logprob: -8.610553741455078

Token 635: ' #' (ID: 1069)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12565690279006958
    2. '       ' → logprob: -3.250656843185425
    3. ')
' → logprob: -3.375656843185425
    4. 'bit' → logprob: -3.875656843185425
    5. '<|end|>' → logprob: -4.375657081604004
    6. ' bit' → logprob: -5.750657081604004
    7. '   ' → logprob: -6.125657081604004
    8. '
' → logprob: -6.375657081604004
    9. '           ' → logprob: -6.625657081604004
    10. '        
' → logprob: -7.500657081604004

Token 636: ' Index' (ID: 14580)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.003215738106518984
    2. ' bit' → logprob: -5.753215789794922
    3. '1' → logprob: -11.253215789794922
    4. 'new' → logprob: -12.128215789794922
    5. 'old' → logprob: -12.128215789794922
    6. ')' → logprob: -12.503215789794922
    7. '           ' → logprob: -13.503215789794922
    8. '       ' → logprob: -13.753215789794922
    9. '
' → logprob: -13.878215789794922
    10. '0' → logprob: -13.878215789794922

Token 637: ' of' (ID: 328)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7930427193641663
    2. '[' → logprob: -1.2930426597595215
    3. '[new' → logprob: -1.6680426597595215
    4. 'new' → logprob: -3.6680426597595215
    5. 'old' → logprob: -3.9180426597595215
    6. ')' → logprob: -4.6680426597595215
    7. '<|end|>' → logprob: -4.9180426597595215
    8. '           ' → logprob: -5.5430426597595215
    9. '(old' → logprob: -5.6680426597595215
    10. '[
' → logprob: -6.4180426597595215

Token 638: ' the' (ID: 290)
  Prédit: 'old'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'old' → logprob: -0.04886190965771675
    2. 'S' → logprob: -3.1738619804382324
    3. ' old' → logprob: -5.298861980438232
    4. ' S' → logprob: -7.298861980438232
    5. 'new' → logprob: -8.923861503601074
    6. 'ord' → logprob: -11.048861503601074
    7. ' new' → logprob: -12.048861503601074
    8. '(old' → logprob: -12.298861503601074
    9. '_old' → logprob: -12.423861503601074
    10. 'the' → logprob: -12.548861503601074

Token 639: ' old' (ID: 2890)
  Prédit: 'old'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'old' → logprob: -0.01784881018102169
    2. ' old' → logprob: -5.017848968505859
    3. 'bit' → logprob: -5.517848968505859
    4. 'new' → logprob: -6.017848968505859
    5. 'ord' → logprob: -6.392848968505859
    6. 'S' → logprob: -6.642848968505859
    7. 'char' → logprob: -7.017848968505859
    8. ' new' → logprob: -9.01784896850586
    9. ' bit' → logprob: -9.26784896850586
    10. 'previous' → logprob: -9.26784896850586

Token 640: ' character' (ID: 5855)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.08035162836313248
    2. 'S' → logprob: -3.5803515911102295
    3. ']' → logprob: -4.080351829528809
    4. 'c' → logprob: -4.330351829528809
    5. 'char' → logprob: -5.080351829528809
    6. ')' → logprob: -5.455351829528809
    7. '_s' → logprob: -5.705351829528809
    8. 'character' → logprob: -6.205351829528809
    9. 'new' → logprob: -6.830351829528809
    10. 'bit' → logprob: -8.205351829528809

Token 641: '
' (ID: 198)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.011557850055396557
    2. ' bit' → logprob: -4.7615580558776855
    3. ')' → logprob: -6.7615580558776855
    4. ')
' → logprob: -7.1365580558776855
    5. '       ' → logprob: -7.8865580558776855
    6. '
' → logprob: -8.511557579040527
    7. '   ' → logprob: -9.011557579040527
    8. '.bit' → logprob: -9.511557579040527
    9. '(bit' → logprob: -10.511557579040527
    10. 'old' → logprob: -10.761557579040527

Token 642: '       ' (ID: 309)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.13295958936214447
    2. ' bit' → logprob: -2.1329596042633057
    3. '       ' → logprob: -5.507959365844727
    4. ')' → logprob: -8.007959365844727
    5. 'old' → logprob: -8.382959365844727
    6. 'new' → logprob: -8.382959365844727
    7. '```' → logprob: -8.632959365844727
    8. '   ' → logprob: -8.757959365844727
    9. '           ' → logprob: -9.132959365844727
    10. ' new' → logprob: -9.132959365844727

Token 643: ' new' (ID: 620)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.00012725738633889705
    2. 'old' → logprob: -9.500126838684082
    3. 'char' → logprob: -10.875126838684082
    4. 'new' (adapté à ' new') → logprob: -10.875126838684082
    5. ' bit' → logprob: -11.500126838684082
    6. 'S' → logprob: -13.375126838684082
    7. '#' → logprob: -13.625126838684082
    8. '   ' → logprob: -14.750126838684082
    9. '```' → logprob: -15.500126838684082
    10. '       ' → logprob: -15.625126838684082

Token 644: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -1.3544423381972592e-05
    2. '_' → logprob: -12.25001335144043
    3. '_code' → logprob: -13.25001335144043
    4. '```' → logprob: -13.50001335144043
    5. '_char' → logprob: -13.62501335144043
    6. '_bit' → logprob: -14.00001335144043
    7. '
' → logprob: -14.37501335144043
    8. '_s' → logprob: -14.87501335144043
    9. '}_' → logprob: -15.25001335144043
    10. 'c' → logprob: -15.25001335144043

Token 645: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -4.23917081207037e-05
    2. '_idx' → logprob: -11.250041961669922
    3. 'index' → logprob: -11.750041961669922
    4. ' =' → logprob: -11.750041961669922
    5. '_code' → logprob: -12.625041961669922
    6. '=' → logprob: -13.000041961669922
    7. '```' → logprob: -13.375041961669922
    8. '=_' → logprob: -13.625041961669922
    9. '_ind' → logprob: -13.875041961669922
    10. '_i' → logprob: -14.250041961669922

Token 646: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12692862749099731
    2. '=' → logprob: -2.1269285678863525
    3. '<|end|>' → logprob: -14.876928329467773
    4. ')' → logprob: -15.626928329467773
    5. ' ' → logprob: -16.751928329467773
    6. ' =
' → logprob: -17.751928329467773
    7. ',' → logprob: -17.751928329467773
    8. '   ' → logprob: -18.001928329467773
    9. '=int' → logprob: -18.501928329467773
    10. '=
' → logprob: -18.876928329467773

Token 647: ' ord' (ID: 6608)
  Prédit: 'ord'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ord' → logprob: -0.31326422095298767
    2. ' ord' → logprob: -1.31326425075531
    3. '(ord' → logprob: -12.938263893127441
    4. '   ' → logprob: -16.688264846801758
    5. 'ords' → logprob: -17.938264846801758
    6. ' ' → logprob: -18.938264846801758
    7. 'ordinal' → logprob: -19.063264846801758
    8. '       ' → logprob: -19.313264846801758
    9. '_ord' → logprob: -19.313264846801758
    10. 'org' → logprob: -19.438264846801758

Token 648: '(new' (ID: 2648)
  Prédit: '(new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(new' → logprob: -0.2552024722099304
    2. 'new' → logprob: -1.5052025318145752
    3. '(parts' → logprob: -6.005202293395996
    4. 'parts' → logprob: -8.130202293395996
    5. '(S' → logprob: -8.130202293395996
    6. ' new' → logprob: -9.005202293395996
    7. 'S' → logprob: -10.005202293395996
    8. '(' → logprob: -10.255202293395996
    9. '[new' → logprob: -12.380202293395996
    10. ' parts' → logprob: -13.380202293395996

Token 649: '_c' (ID: 1303)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.7602456212043762
    2. '(new' → logprob: -0.8852456212043762
    3. 'c' → logprob: -3.1352455615997314
    4. '(parts' → logprob: -3.3852455615997314
    5. '_c' → logprob: -3.6352455615997314
    6. 'parts' → logprob: -4.5102458000183105
    7. ' new' → logprob: -6.6352458000183105
    8. '[new' → logprob: -6.7602458000183105
    9. '(' → logprob: -7.0102458000183105
    10. 'C' → logprob: -7.1352458000183105

Token 650: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.707997428951785e-05
    2. ' )' → logprob: -10.750077247619629
    3. ')-' → logprob: -11.125077247619629
    4. '')' → logprob: -11.625077247619629
    5. 'new' → logprob: -11.875077247619629
    6. '")' → logprob: -12.125077247619629
    7. '   ' → logprob: -12.375077247619629
    8. ' -' → logprob: -12.500077247619629
    9. '[' → logprob: -12.625077247619629
    10. '-' → logprob: -12.875077247619629

Token 651: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.00280784466303885
    2. '-' → logprob: -5.8778076171875
    3. ')' → logprob: -13.6278076171875
    4. '<|end|>' → logprob: -14.1278076171875
    5. ' ' → logprob: -15.0028076171875
    6. '   ' → logprob: -15.2528076171875
    7. '[' → logprob: -16.2528076171875
    8. ' –' → logprob: -16.5028076171875
    9. '```' → logprob: -16.5028076171875
    10. '()-' → logprob: -16.6278076171875

Token 652: ' ' (ID: 220)
  Prédit: '97'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '97' → logprob: -0.0004319804720580578
    2. ' ' → logprob: -7.750432014465332
    3. '```' → logprob: -14.875432014465332
    4. '96' → logprob: -15.125432014465332
    5. '097' → logprob: -15.375432014465332
    6. '967' → logprob: -16.375431060791016
    7. ''' → logprob: -16.812931060791016
    8. '   ' → logprob: -16.875431060791016
    9. '`' → logprob: -17.187931060791016
    10. '95' → logprob: -17.312931060791016

Token 653: '97' (ID: 5170)
  Prédit: '97'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '97' → logprob: -1.7432603272027336e-06
    2. ' ' → logprob: -13.375001907348633
    3. '097' → logprob: -16.500001907348633
    4. '```' → logprob: -16.625001907348633
    5. '96' → logprob: -17.375001907348633
    6. ''' → logprob: -18.875001907348633
    7. '`' → logprob: -19.000001907348633
    8. 'a' → logprob: -19.250001907348633
    9. '971' → logprob: -19.375001907348633
    10. '   ' → logprob: -19.500001907348633

Token 654: ' ' (ID: 220)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.37171152234077454
    2. ' bit' → logprob: -2.371711492538452
    3. '   ' → logprob: -2.746711492538452
    4. 'bit' → logprob: -3.246711492538452
    5. '<|end|>' → logprob: -3.496711492538452
    6. '       ' → logprob: -3.621711492538452
    7. '
' → logprob: -3.871711492538452
    8. ')
' → logprob: -4.121711730957031
    9. '    
' → logprob: -4.746711730957031
    10. '        
' → logprob: -5.496711730957031

Token 655: ' #' (ID: 1069)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.05930009111762047
    2. ')' → logprob: -4.059299945831299
    3. ' bit' → logprob: -4.309299945831299
    4. '
' → logprob: -4.309299945831299
    5. '   ' → logprob: -5.684299945831299
    6. ')
' → logprob: -5.684299945831299
    7. '       ' → logprob: -6.559299945831299
    8. '    
' → logprob: -6.684299945831299
    9. '```' → logprob: -7.184299945831299
    10. '<|end|>' → logprob: -7.184299945831299

Token 656: ' Index' (ID: 14580)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.16480900347232819
    2. '<|end|>' → logprob: -1.914808988571167
    3. ' ' → logprob: -5.914809226989746
    4. '97' → logprob: -7.164809226989746
    5. '0' → logprob: -7.414809226989746
    6. '```' → logprob: -8.289809226989746
    7. '#' → logprob: -9.914809226989746
    8. '<|end|>' → logprob: -10.039809226989746
    9. ')' → logprob: -10.539809226989746
    10. '32' → logprob: -11.414809226989746

Token 657: ' of' (ID: 328)
  Prédit: '(old'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(old' → logprob: -1.232658863067627
    2. 'of' → logprob: -1.357658863067627
    3. ' of' → logprob: -1.857658863067627
    4. '[' → logprob: -2.107658863067627
    5. 'old' → logprob: -2.232658863067627
    6. '(S' → logprob: -3.482658863067627
    7. '[new' → logprob: -4.732658863067627
    8. '[S' → logprob: -5.482658863067627
    9. ' =' → logprob: -5.732658863067627
    10. ' old' → logprob: -5.857658863067627

Token 658: ' the' (ID: 290)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.004106542561203241
    2. ' new' → logprob: -5.504106521606445
    3. 'the' → logprob: -10.504106521606445
    4. ' the' → logprob: -14.379106521606445
    5. 'ord' → logprob: -16.754106521606445
    6. '	new' → logprob: -18.504106521606445
    7. '[new' → logprob: -18.504106521606445
    8. ' ' → logprob: -18.629106521606445
    9. '97' → logprob: -18.754106521606445
    10. '
' → logprob: -19.004106521606445

Token 659: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.0003811025235336274
    2. ' new' → logprob: -7.875380992889404
    3. 'n' → logprob: -13.875381469726562
    4. '```' → logprob: -17.125381469726562
    5. '
' → logprob: -17.750381469726562
    6. 'ord' → logprob: -18.000381469726562
    7. '[new' → logprob: -18.000381469726562
    8. ' ' → logprob: -18.500381469726562
    9. '	new' → logprob: -18.875381469726562
    10. ')new' → logprob: -18.875381469726562

Token 660: ' character' (ID: 5855)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.03581057861447334
    2. 'new' → logprob: -3.4108104705810547
    3. 'c' → logprob: -6.910810470581055
    4. ' new' → logprob: -6.910810470581055
    5. ' ' → logprob: -9.535810470581055
    6. '_' → logprob: -10.785810470581055
    7. '[new' → logprob: -11.035810470581055
    8. '```' → logprob: -11.160810470581055
    9. '_new' → logprob: -11.660810470581055
    10. '(' → logprob: -12.535810470581055

Token 661: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9623844623565674
    2. 'bit' → logprob: -1.0873844623565674
    3. ' bit' → logprob: -1.7123844623565674
    4. '       ' → logprob: -2.5873844623565674
    5. ')' → logprob: -4.962384223937988
    6. '
' → logprob: -4.962384223937988
    7. '```' → logprob: -5.962384223937988
    8. '    
' → logprob: -6.462384223937988
    9. '        
' → logprob: -6.712384223937988
    10. '(bit' → logprob: -7.337384223937988

Token 662: '       ' (ID: 309)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.23350293934345245
    2. ' bit' → logprob: -1.858502984046936
    3. '   ' → logprob: -3.4835028648376465
    4. '       ' → logprob: -3.8585028648376465
    5. '```' → logprob: -8.358503341674805
    6. '        
' → logprob: -9.733503341674805
    7. '
' → logprob: -10.233503341674805
    8. '    
' → logprob: -10.358503341674805
    9. '           ' → logprob: -10.608503341674805
    10. '(bit' → logprob: -10.858503341674805

Token 663: ' #' (ID: 1069)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.0001625379954930395
    2. 'if' → logprob: -9.125162124633789
    3. '#' (adapté à ' #') → logprob: -9.875162124633789
    4. '   ' → logprob: -14.250162124633789
    5. 'S' → logprob: -14.875162124633789
    6. '       ' → logprob: -15.125162124633789
    7. ' bit' → logprob: -15.125162124633789
    8. '
' → logprob: -15.375162124633789
    9. '    
' → logprob: -16.00016212463379
    10. '        
' → logprob: -16.50016212463379

Token 664: ' Remove' (ID: 18141)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.00015908108616713434
    2. '#' → logprob: -8.87515926361084
    3. 'if' → logprob: -11.00015926361084
    4. ' bit' → logprob: -13.25015926361084
    5. '   ' → logprob: -15.62515926361084
    6. '
' → logprob: -15.62515926361084
    7. 'S' → logprob: -16.625158309936523
    8. '(bit' → logprob: -16.750158309936523
    9. 'bitr' → logprob: -17.250158309936523
    10. 'If' → logprob: -17.250158309936523

Token 665: ' old' (ID: 2890)
  Prédit: 'old'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'old' → logprob: -0.5837236642837524
    2. '1' → logprob: -1.4587236642837524
    3. 'bit' → logprob: -1.7087236642837524
    4. '(old' → logprob: -4.708723545074463
    5. '(' → logprob: -5.458723545074463
    6. ' old' → logprob: -5.708723545074463
    7. ' bit' → logprob: -6.333723545074463
    8. 'char' → logprob: -6.333723545074463
    9. '(bit' → logprob: -6.333723545074463
    10. ' ' → logprob: -6.958723545074463

Token 666: ' character' (ID: 5855)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.0005388548015616834
    2. ')' → logprob: -8.12553882598877
    3. 'c' → logprob: -9.50053882598877
    4. 'char' → logprob: -11.00053882598877
    5. ' ' → logprob: -11.12553882598877
    6. '```' → logprob: -11.12553882598877
    7. '   ' → logprob: -11.25053882598877
    8. '_' → logprob: -11.25053882598877
    9. 'bit' → logprob: -11.37553882598877
    10. '_s' → logprob: -11.87553882598877

Token 667: ' count' (ID: 3605)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.15077385306358337
    2. '       ' → logprob: -2.650773763656616
    3. ' bit' → logprob: -2.900773763656616
    4. 'index' → logprob: -5.275774002075195
    5. ')' → logprob: -5.775774002075195
    6. '   ' → logprob: -6.775774002075195
    7. ',' → logprob: -7.025774002075195
    8. ' at' → logprob: -7.400774002075195
    9. '```' → logprob: -7.775774002075195
    10. ''s' → logprob: -7.775774002075195

Token 668: ' from' (ID: 591)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.476986289024353
    2. '       ' → logprob: -1.726986289024353
    3. '(bit' → logprob: -2.3519864082336426
    4. ' bit' → logprob: -3.3519864082336426
    5. ' at' → logprob: -4.101986408233643
    6. 'from' → logprob: -4.476986408233643
    7. '   ' → logprob: -4.726986408233643
    8. ')' → logprob: -4.851986408233643
    9. ' from' → logprob: -4.976986408233643
    10. ',' → logprob: -5.101986408233643

Token 669: ' BIT' (ID: 52185)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.03941021487116814
    2. 'old' → logprob: -3.53941011428833
    3. ' bit' → logprob: -4.78941011428833
    4. 'i' → logprob: -7.41441011428833
    5. ' old' → logprob: -8.414410591125488
    6. 'new' → logprob: -9.039410591125488
    7. '
' → logprob: -9.789410591125488
    8. '(bit' → logprob: -10.039410591125488
    9. ' i' → logprob: -10.164410591125488
    10. '           ' → logprob: -10.289410591125488

Token 670: '
' (ID: 198)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.49969956278800964
    2. '       ' → logprob: -1.624699592590332
    3. ' bit' → logprob: -1.749699592590332
    4. '[' → logprob: -4.499699592590332
    5. '(bit' → logprob: -5.374699592590332
    6. ',' → logprob: -6.499699592590332
    7. ')' → logprob: -6.874699592590332
    8. '
' → logprob: -6.999699592590332
    9. '           ' → logprob: -7.124699592590332
    10. '   ' → logprob: -7.249699592590332

Token 671: '       ' (ID: 309)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.5022003650665283
    2. '       ' → logprob: -1.1272003650665283
    3. ' bit' → logprob: -2.7522003650665283
    4. '[' → logprob: -5.752200126647949
    5. '   ' → logprob: -6.252200126647949
    6. '(bit' → logprob: -6.752200126647949
    7. '           ' → logprob: -8.25220012664795
    8. ',' → logprob: -9.12720012664795
    9. '```' → logprob: -9.12720012664795
    10. '
' → logprob: -9.87720012664795

Token 672: ' bit' (ID: 3546)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' (adapté à ' bit') → logprob: -0.00035786881926469505
    2. ' bit' → logprob: -8.000357627868652
    3. '       ' → logprob: -10.875357627868652
    4. '   ' → logprob: -13.250357627868652
    5. '(bit' → logprob: -14.250357627868652
    6. '           ' → logprob: -14.500357627868652
    7. '```' → logprob: -16.12535858154297
    8. 'bitr' → logprob: -16.37535858154297
    9. 'bits' → logprob: -16.50035858154297
    10. '.bit' → logprob: -16.62535858154297

Token 673: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.45848218582978e-06
    2. 'old' → logprob: -13.37500286102295
    3. '[
' → logprob: -15.12500286102295
    4. '```' → logprob: -15.12500286102295
    5. ' [' → logprob: -15.75000286102295
    6. '
' → logprob: -17.875001907348633
    7. '[o' → logprob: -18.125001907348633
    8. '   ' → logprob: -18.375001907348633
    9. '[new' → logprob: -18.750001907348633
    10. '][' → logprob: -18.875001907348633

Token 674: 'old' (ID: 1280)
  Prédit: 'old'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'old' → logprob: -9.662937372922897e-05
    2. '[' → logprob: -9.250096321105957
    3. ' old' → logprob: -14.500096321105957
    4. '(old' → logprob: -17.875097274780273
    5. '_old' → logprob: -19.125097274780273
    6. '	old' → logprob: -19.375097274780273
    7. 'olds' → logprob: -19.500097274780273
    8. '.old' → logprob: -19.750097274780273
    9. 'older' → logprob: -19.875097274780273
    10. '```' → logprob: -20.000097274780273

Token 675: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -5.967624019831419e-05
    2. '[' → logprob: -10.000060081481934
    3. 'c' → logprob: -11.875060081481934
    4. 'old' → logprob: -12.625060081481934
    5. '[c' → logprob: -13.250060081481934
    6. '```' → logprob: -14.875060081481934
    7. '
' → logprob: -15.000060081481934
    8. 'char' → logprob: -15.625060081481934
    9. '_s' → logprob: -15.750060081481934
    10. '[_' → logprob: -15.875060081481934

Token 676: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.006827967241406441
    2. '[' → logprob: -5.8818278312683105
    3. 'index' → logprob: -6.1318278312683105
    4. 'old' → logprob: -7.1318278312683105
    5. '_c' → logprob: -8.006828308105469
    6. '[index' → logprob: -8.256828308105469
    7. 'c' → logprob: -8.881828308105469
    8. '][' → logprob: -9.756828308105469
    9. '```' → logprob: -10.256828308105469
    10. '[i' → logprob: -10.631828308105469

Token 677: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.006952168419957161
    2. ').' → logprob: -5.506952285766602
    3. '.add' → logprob: -5.881952285766602
    4. '   ' → logprob: -10.256952285766602
    5. '.' → logprob: -10.506952285766602
    6. '}.' → logprob: -12.256952285766602
    7. '       ' → logprob: -12.631952285766602
    8. '[' → logprob: -13.256952285766602
    9. ' .' → logprob: -13.506952285766602
    10. '           ' → logprob: -13.506952285766602

Token 678: 'add' (ID: 964)
  Prédit: 'add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: 0.0
    2. ' add' → logprob: -18.125
    3. '.add' → logprob: -20.125
    4. '_add' → logprob: -20.5
    5. '	add' → logprob: -22.125
    6. '```' → logprob: -22.375
    7. 'addi' → logprob: -22.625
    8. 'sum' → logprob: -23.5
    9. 'subtract' → logprob: -23.5
    10. 'adde' → logprob: -24.0

Token 679: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -6.392202976712724e-06
    2. 'i' → logprob: -12.250006675720215
    3. '(' → logprob: -14.000006675720215
    4. '(
' → logprob: -14.625006675720215
    5. '[i' → logprob: -16.5000057220459
    6. '   ' → logprob: -16.5000057220459
    7. '```' → logprob: -17.2500057220459
    8. '((' → logprob: -17.5000057220459
    9. ')i' → logprob: -18.1250057220459
    10. ' i' → logprob: -18.1250057220459

Token 680: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.20182833075523376
    2. ' +' → logprob: -1.7018283605575562
    3. '1' → logprob: -8.076828002929688
    4. ' ' → logprob: -10.326828002929688
    5. ',' → logprob: -11.201828002929688
    6. '[' → logprob: -11.451828002929688
    7. '   ' → logprob: -11.576828002929688
    8. '+
' → logprob: -11.701828002929688
    9. '```' → logprob: -12.451828002929688
    10. ')' → logprob: -12.576828002929688

Token 681: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3544423381972592e-05
    2. ' ' → logprob: -11.25001335144043
    3. '-' → logprob: -15.00001335144043
    4. '```' → logprob: -17.00001335144043
    5. ' -' → logprob: -18.12501335144043
    6. '   ' → logprob: -18.25001335144043
    7. '<|end|>' → logprob: -19.37501335144043
    8. '0' → logprob: -19.68751335144043
    9. '  ' → logprob: -20.25001335144043
    10. ',' → logprob: -20.25001335144043

Token 682: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.3080716346157715e-05
    2. '-' → logprob: -11.000022888183594
    3. ' ' → logprob: -12.125022888183594
    4. ' -' → logprob: -14.125022888183594
    5. '```' → logprob: -17.250022888183594
    6. '   ' → logprob: -17.625022888183594
    7. '0' → logprob: -18.875022888183594
    8. '<|end|>' → logprob: -19.437522888183594
    9. '  ' → logprob: -19.625022888183594
    10. '(-' → logprob: -20.312522888183594

Token 683: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.869639476761222e-05
    2. ',-' → logprob: -10.625039100646973
    3. ' ,' → logprob: -11.750039100646973
    4. '-' → logprob: -12.250039100646973
    5. '           ' → logprob: -13.750039100646973
    6. ',
' → logprob: -15.000039100646973
    7. '       ' → logprob: -15.875039100646973
    8. '```' → logprob: -16.500038146972656
    9. '-,' → logprob: -16.875038146972656
    10. '   ' → logprob: -17.000038146972656

Token 684: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -6.704273118884885e-07
    2. ' -' → logprob: -14.250000953674316
    3. '   ' → logprob: -21.0
    4. '```' → logprob: -21.625
    5. '           ' → logprob: -23.5
    6. '  ' → logprob: -23.5
    7. '−' → logprob: -24.0
    8. '       ' → logprob: -24.0
    9. '\-' → logprob: -24.375
    10. '‌' → logprob: -25.0

Token 685: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.0
    3. '```' → logprob: -19.0
    4. '   ' → logprob: -19.625
    5. '<|end|>' → logprob: -19.625
    6. '       ' → logprob: -20.875
    7. '           ' → logprob: -22.0
    8. ')' → logprob: -22.5
    9. '۱' → logprob: -23.375
    10. '[' → logprob: -23.875

Token 686: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0789082944393158
    2. ')
' → logprob: -2.5789082050323486
    3. ')

' → logprob: -11.82890796661377
    4. ')
' → logprob: -12.07890796661377
    5. '       ' → logprob: -12.45390796661377
    6. '   ' → logprob: -14.20390796661377
    7. ' )' → logprob: -15.20390796661377
    8. '),' → logprob: -15.70390796661377
    9. ')#' → logprob: -16.453908920288086
    10. ' )
' → logprob: -16.453908920288086

Token 687: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011466870084404945
    2. 'bit' → logprob: -5.136466979980469
    3. ' bit' → logprob: -5.261466979980469
    4. '           ' → logprob: -8.761466979980469
    5. '```' → logprob: -9.136466979980469
    6. '        
' → logprob: -10.761466979980469
    7. '   ' → logprob: -11.136466979980469
    8. '               ' → logprob: -12.136466979980469
    9. ')' → logprob: -12.261466979980469
    10. '      ' → logprob: -12.886466979980469

Token 688: ' #' (ID: 1069)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.1505776047706604
    2. '       ' → logprob: -2.2755775451660156
    3. 'bit' → logprob: -3.4005775451660156
    4. ' bit' → logprob: -6.150577545166016
    5. ' S' → logprob: -6.650577545166016
    6. '           ' → logprob: -9.400577545166016
    7. '   ' → logprob: -9.525577545166016
    8. '```' → logprob: -9.900577545166016
    9. '        
' → logprob: -10.775577545166016
    10. '        ' → logprob: -11.650577545166016

Token 689: ' Update' (ID: 9152)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.3157886266708374
    2. 'S' → logprob: -1.3157886266708374
    3. '       ' → logprob: -6.690788745880127
    4. ' bit' → logprob: -7.065788745880127
    5. ' S' → logprob: -8.315788269042969
    6. '           ' → logprob: -9.440788269042969
    7. '#' → logprob: -10.315788269042969
    8. '   ' → logprob: -10.815788269042969
    9. '               ' → logprob: -11.565788269042969
    10. 'bits' → logprob: -11.815788269042969

Token 690: ' the' (ID: 290)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.008010920137166977
    2. ' S' → logprob: -4.8830108642578125
    3. '           ' → logprob: -8.758010864257812
    4. 'bit' → logprob: -9.008010864257812
    5. ' bit' → logprob: -9.508010864257812
    6. '       ' → logprob: -11.008010864257812
    7. 'i' → logprob: -11.383010864257812
    8. '               ' → logprob: -11.633010864257812
    9. '   ' → logprob: -12.133010864257812
    10. 's' → logprob: -13.383010864257812

Token 691: ' character' (ID: 5855)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.0009543364867568016
    2. ' S' → logprob: -7.1259541511535645
    3. 'bit' → logprob: -9.000954627990723
    4. ' bit' → logprob: -11.250954627990723
    5. '           ' → logprob: -12.375954627990723
    6. '       ' → logprob: -13.000954627990723
    7. 'char' → logprob: -13.500954627990723
    8. 's' → logprob: -13.625954627990723
    9. 'old' → logprob: -14.000954627990723
    10. '   ' → logprob: -14.250954627990723

Token 692: ' in' (ID: 306)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.004132422618567944
    2. '       ' → logprob: -6.129132270812988
    3. ' S' → logprob: -6.754132270812988
    4. '[i' → logprob: -8.129132270812988
    5. '           ' → logprob: -8.129132270812988
    6. '   ' → logprob: -9.129132270812988
    7. 's' → logprob: -10.129132270812988
    8. '[' → logprob: -11.504132270812988
    9. '        
' → logprob: -12.129132270812988
    10. '[S' → logprob: -12.129132270812988

Token 693: ' the' (ID: 290)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -1.676292231422849e-05
    2. ' S' → logprob: -11.000017166137695
    3. '```' → logprob: -19.125017166137695
    4. '   ' → logprob: -19.500017166137695
    5. '`' → logprob: -19.875017166137695
    6. '
' → logprob: -20.125017166137695
    7. '_S' → logprob: -20.500017166137695
    8. 'the' → logprob: -20.625017166137695
    9. 's' → logprob: -20.750017166137695
    10. '       ' → logprob: -21.125017166137695

Token 694: ' string' (ID: 1621)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -1.1472419600977446e-06
    2. ' S' → logprob: -13.875000953674316
    3. 'string' → logprob: -16.500001907348633
    4. '```' → logprob: -17.375001907348633
    5. 's' → logprob: -18.500001907348633
    6. '`' → logprob: -18.875001907348633
    7. '   ' → logprob: -19.250001907348633
    8. '>S' → logprob: -19.500001907348633
    9. 'code' → logprob: -19.875001907348633
    10. '       ' → logprob: -20.000001907348633

Token 695: '
' (ID: 198)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.009743928909301758
    2. '       ' → logprob: -4.759743690490723
    3. ' S' → logprob: -6.884743690490723
    4. '           ' → logprob: -9.759743690490723
    5. '   ' → logprob: -10.134743690490723
    6. '        
' → logprob: -13.509743690490723
    7. '        ' → logprob: -13.634743690490723
    8. '[' → logprob: -13.634743690490723
    9. '               ' → logprob: -14.134743690490723
    10. 's' → logprob: -14.259743690490723

Token 696: '       ' (ID: 309)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.4797709882259369
    2. '       ' → logprob: -0.9797710180282593
    3. ' S' → logprob: -5.229771137237549
    4. '   ' → logprob: -8.47977066040039
    5. '           ' → logprob: -9.60477066040039
    6. 's' → logprob: -11.10477066040039
    7. '[' → logprob: -11.22977066040039
    8. '```' → logprob: -11.72977066040039
    9. '               ' → logprob: -13.10477066040039
    10. '        
' → logprob: -13.35477066040039

Token 697: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' (adapté à ' S') → logprob: -0.00037859921576455235
    2. ' S' → logprob: -8.375378608703613
    3. '       ' → logprob: -9.000378608703613
    4. '           ' → logprob: -10.750378608703613
    5. '   ' → logprob: -12.750378608703613
    6. '               ' → logprob: -15.750378608703613
    7. '        ' → logprob: -16.625377655029297
    8. ' ' → logprob: -16.875377655029297
    9. '```' → logprob: -17.250377655029297
    10. '    ' → logprob: -17.375377655029297

Token 698: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.896309739408025e-07
    2. '[' → logprob: -14.250000953674316
    3. '[I' → logprob: -16.625
    4. '```' → logprob: -16.875
    5. '\[' → logprob: -18.5
    6. '[index' → logprob: -19.625
    7. '[
' → logprob: -20.125
    8. '[S' → logprob: -20.25
    9. '[int' → logprob: -20.375
    10. 'i' → logprob: -20.5

Token 699: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.17092029750347137
    2. '=' → logprob: -1.9209202527999878
    3. ']=' → logprob: -4.795920372009277
    4. ' =' → logprob: -6.045920372009277
    5. ' ]' → logprob: -11.795920372009277
    6. ')' → logprob: -15.295920372009277
    7. '   ' → logprob: -16.17091941833496
    8. ')=' → logprob: -16.54591941833496
    9. '']=' → logprob: -16.92091941833496
    10. '"]=' → logprob: -16.92091941833496

Token 700: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01416350994259119
    2. ' =' → logprob: -4.264163494110107
    3. '=
' → logprob: -18.264163970947266
    4. '.=' → logprob: -19.764163970947266
    5. '＝' → logprob: -20.139163970947266
    6. '   ' → logprob: -20.389163970947266
    7. '=new' → logprob: -20.639163970947266
    8. '    ' → logprob: -20.889163970947266
    9. '=

' → logprob: -21.014163970947266
    10. '[' → logprob: -21.264163970947266

Token 701: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.0019286326132714748
    2. ' new' → logprob: -6.251928806304932
    3. '   ' → logprob: -20.626928329467773
    4. '	new' → logprob: -20.876928329467773
    5. '_new' → logprob: -22.001928329467773
    6. '```' → logprob: -22.001928329467773
    7. '[new' → logprob: -22.126928329467773
    8. ' ' → logprob: -22.251928329467773
    9. '新' → logprob: -22.251928329467773
    10. 'New' → logprob: -22.626928329467773

Token 702: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -1.1875571544806007e-05
    2. '_' → logprob: -11.375011444091797
    3. 'c' → logprob: -15.500011444091797
    4. ' _' → logprob: -16.500011444091797
    5. '```' → logprob: -19.125011444091797
    6. '\' → logprob: -19.375011444091797
    7. 'new' → logprob: -19.375011444091797
    8. '`' → logprob: -19.500011444091797
    9. ')' → logprob: -20.000011444091797
    10. 'space' → logprob: -20.125011444091797

Token 703: '
' (ID: 198)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.11715494096279144
    2. '       ' → logprob: -2.242154836654663
    3. ' bit' → logprob: -6.367155075073242
    4. '```' → logprob: -6.742155075073242
    5. '
' → logprob: -6.867155075073242
    6. '        
' → logprob: -8.867155075073242
    7. '``' → logprob: -9.492155075073242
    8. '   ' → logprob: -9.742155075073242
    9. '(bit' → logprob: -10.367155075073242
    10. 'bitr' → logprob: -10.867155075073242

Token 704: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4820358157157898
    2. 'bit' → logprob: -0.9820358157157898
    3. '```' → logprob: -4.9820356369018555
    4. ' bit' → logprob: -7.1070356369018555
    5. '``' → logprob: -8.482035636901855
    6. '   ' → logprob: -10.857035636901855
    7. '           ' → logprob: -11.482035636901855
    8. '        
' → logprob: -12.732035636901855
    9. '(bit' → logprob: -13.107035636901855
    10. '
' → logprob: -13.607035636901855

Token 705: ' #' (ID: 1069)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.07948242127895355
    2. '       ' → logprob: -2.579482316970825
    3. '#' (adapté à ' #') → logprob: -8.079482078552246
    4. ' bit' → logprob: -8.704482078552246
    5. '```' → logprob: -9.204482078552246
    6. '   ' → logprob: -12.329482078552246
    7. '``' → logprob: -12.329482078552246
    8. '        
' → logprob: -13.079482078552246
    9. '           ' → logprob: -13.079482078552246
    10. '(bit' → logprob: -14.579482078552246

Token 706: ' Add' (ID: 4063)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bit' → logprob: -1.6047699318733066e-05
    2. '       ' → logprob: -11.625016212463379
    3. '#' → logprob: -12.250016212463379
    4. ' bit' → logprob: -13.625016212463379
    5. '   ' → logprob: -14.000016212463379
    6. '           ' → logprob: -16.000015258789062
    7. 'Add' → logprob: -16.875015258789062
    8. '(bit' → logprob: -18.750015258789062
    9. '      ' → logprob: -19.500015258789062
    10. '     ' → logprob: -19.500015258789062

Token 707: ' new' (ID: 620)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.27164435386657715
    2. '(bit' → logprob: -1.7716443538665771
    3. ' bit' → logprob: -3.021644353866577
    4. '(i' → logprob: -4.021644592285156
    5. 'new' → logprob: -7.271644592285156
    6. '(' → logprob: -7.771644592285156
    7. '1' → logprob: -10.896644592285156
    8. ' new' → logprob: -12.021644592285156
    9. '.bit' → logprob: -12.021644592285156
    10. '```' → logprob: -12.396644592285156

Token 708: ' character' (ID: 5855)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_c' → logprob: -6.921253225300461e-05
    2. '[' → logprob: -9.875069618225098
    3. '<|end|>' → logprob: -12.375069618225098
    4. ')' → logprob: -12.875069618225098
    5. 'token' → logprob: -13.375069618225098
    6. ' ' → logprob: -13.375069618225098
    7. '```' → logprob: -13.500069618225098
    8. '   ' → logprob: -13.500069618225098
    9. '[token' → logprob: -13.875069618225098
    10. 'c' → logprob: -14.125069618225098

Token 709: ' count' (ID: 3605)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bit' → logprob: -1.349414348602295
    2. ' bit' → logprob: -1.474414348602295
    3. '[' → logprob: -2.099414348602295
    4. 'index' → logprob: -2.099414348602295
    5. 'count' → logprob: -2.099414348602295
    6. '_index' → logprob: -3.599414348602295
    7. '```' → logprob: -3.724414348602295
    8. '<|end|>' → logprob: -3.849414348602295
    9. ' index' → logprob: -4.224414348602295
    10. '   ' → logprob: -4.724414348602295

Token 710: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.27766698598861694
    2. 'bit' → logprob: -2.7776670455932617
    3. ' bit' → logprob: -3.0276670455932617
    4. ' at' → logprob: -3.1526670455932617
    5. '       ' → logprob: -3.4026670455932617
    6. 'to' → logprob: -3.6526670455932617
    7. '   ' → logprob: -4.277667045593262
    8. '[' → logprob: -5.152667045593262
    9. '```' → logprob: -6.027667045593262
    10. '(bit' → logprob: -6.527667045593262

Token 711: ' BIT' (ID: 52185)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.005948586855083704
    2. ' bit' → logprob: -5.130948543548584
    3. '(bit' → logprob: -11.380949020385742
    4. 'the' → logprob: -12.630949020385742
    5. ' the' → logprob: -12.880949020385742
    6. '```' → logprob: -14.005949020385742
    7. 'i' → logprob: -15.255949020385742
    8. '.bit' → logprob: -15.380949020385742
    9. '
' → logprob: -15.630949020385742
    10. ' i' → logprob: -15.755949020385742

Token 712: '
' (ID: 198)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.12596774101257324
    2. '       ' → logprob: -3.0009677410125732
    3. ' bit' → logprob: -3.0009677410125732
    4. '[' → logprob: -4.500967979431152
    5. '.bit' → logprob: -5.750967979431152
    6. '   ' → logprob: -6.375967979431152
    7. '```' → logprob: -7.000967979431152
    8. '           ' → logprob: -7.125967979431152
    9. '(bit' → logprob: -7.250967979431152
    10. '
' → logprob: -8.875967979431152

Token 713: '       ' (ID: 309)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.02172810211777687
    2. '       ' → logprob: -4.146728038787842
    3. ' bit' → logprob: -5.271728038787842
    4. '   ' → logprob: -8.896728515625
    5. '           ' → logprob: -9.146728515625
    6. '(bit' → logprob: -9.146728515625
    7. '[' → logprob: -9.271728515625
    8. '```' → logprob: -9.771728515625
    9. '.bit' → logprob: -10.896728515625
    10. '               ' → logprob: -12.646728515625

Token 714: ' bit' (ID: 3546)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' (adapté à ' bit') → logprob: -1.0325924449716695e-05
    2. ' bit' → logprob: -11.50001049041748
    3. '(bit' → logprob: -17.000009536743164
    4. '```' → logprob: -17.500009536743164
    5. '   ' → logprob: -18.375009536743164
    6. '[' → logprob: -18.500009536743164
    7. '       ' → logprob: -18.750009536743164
    8. '           ' → logprob: -19.375009536743164
    9. '.bit' → logprob: -20.000009536743164
    10. 'bitr' → logprob: -20.250009536743164

Token 715: '[new' (ID: 89436)
  Prédit: '[new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[new' → logprob: -1.1472419600977446e-06
    2. 'new' → logprob: -13.750000953674316
    3. '```' → logprob: -18.875001907348633
    4. '[' → logprob: -21.125001907348633
    5. '=new' → logprob: -21.875001907348633
    6. '[next' → logprob: -22.250001907348633
    7. '
' → logprob: -22.250001907348633
    8. ' new' → logprob: -22.500001907348633
    9. '[
' → logprob: -22.750001907348633
    10. '	new' → logprob: -23.375001907348633

Token 716: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.0003103175258729607
    2. '[new' → logprob: -8.125309944152832
    3. 'new' → logprob: -11.750309944152832
    4. 'c' → logprob: -12.250309944152832
    5. '[' → logprob: -14.500309944152832
    6. '[c' → logprob: -15.125309944152832
    7. '```' → logprob: -16.00031089782715
    8. '[_' → logprob: -17.06281089782715
    9. '`' → logprob: -17.25031089782715
    10. '_[' → logprob: -17.25031089782715

Token 717: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.1608532816171646
    2. '[new' → logprob: -1.9108532667160034
    3. '[' → logprob: -8.035853385925293
    4. 'new' → logprob: -9.035853385925293
    5. 'index' → logprob: -9.785853385925293
    6. '[index' → logprob: -10.035853385925293
    7. '[_' → logprob: -10.785853385925293
    8. '[i' → logprob: -11.035853385925293
    9. '```' → logprob: -11.535853385925293
    10. '_indices' → logprob: -12.410853385925293

Token 718: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.00325661594979465
    2. '.add' → logprob: -5.753256797790527
    3. '.' → logprob: -10.003256797790527
    4. ').' → logprob: -10.878256797790527
    5. '   ' → logprob: -12.128256797790527
    6. ' .' → logprob: -12.628256797790527
    7. '}.' → logprob: -13.128256797790527
    8. '.bit' → logprob: -13.628256797790527
    9. '>.' → logprob: -13.753256797790527
    10. ' ].' → logprob: -14.378256797790527

Token 719: 'add' (ID: 964)
  Prédit: 'add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: 0.0
    2. ' add' → logprob: -18.0
    3. '.add' → logprob: -20.25
    4. '```' → logprob: -20.375
    5. '	add' → logprob: -21.75
    6. '_add' → logprob: -22.125
    7. '(add' → logprob: -22.375
    8. 'Add' → logprob: -22.375
    9. '
' → logprob: -22.5
    10. '**' → logprob: -22.75

Token 720: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -4.320199877838604e-07
    2. '(' → logprob: -15.5
    3. 'i' → logprob: -15.625
    4. '(
' → logprob: -18.0
    5. '(x' → logprob: -18.625
    6. '```' → logprob: -20.125
    7. ' i' → logprob: -20.5
    8. '[i' → logprob: -21.0
    9. '(I' → logprob: -21.0
    10. ' (' → logprob: -21.0

Token 721: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.06294479966163635
    2. ' +' → logprob: -2.8129448890686035
    3. '1' → logprob: -7.0629448890686035
    4. 'i' → logprob: -10.562944412231445
    5. '+i' → logprob: -11.062944412231445
    6. '   ' → logprob: -11.062944412231445
    7. '[i' → logprob: -11.312944412231445
    8. ' ' → logprob: -11.562944412231445
    9. ',' → logprob: -11.687944412231445
    10. ' i' → logprob: -11.812944412231445

Token 722: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.876193169271573e-05
    2. ' ' → logprob: -9.375088691711426
    3. '   ' → logprob: -12.750088691711426
    4. '```' → logprob: -14.875088691711426
    5. '       ' → logprob: -15.500088691711426
    6. ',' → logprob: -16.375089645385742
    7. '+' → logprob: -16.625089645385742
    8. '           ' → logprob: -17.250089645385742
    9. '<|end|>' → logprob: -17.625089645385742
    10. '     ' → logprob: -17.750089645385742

Token 723: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.127333340875339e-06
    2. ' ' → logprob: -12.625003814697266
    3. '+' → logprob: -14.625003814697266
    4. '   ' → logprob: -16.000003814697266
    5. '```' → logprob: -16.750003814697266
    6. 'i' → logprob: -19.000003814697266
    7. '       ' → logprob: -19.125003814697266
    8. ')' → logprob: -19.500003814697266
    9. '
' → logprob: -19.562503814697266
    10. '`' → logprob: -19.625003814697266

Token 724: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.127333340875339e-06
    2. ' ,' → logprob: -12.625003814697266
    3. ',
' → logprob: -14.875003814697266
    4. '1' → logprob: -14.875003814697266
    5. '       ' → logprob: -18.000003814697266
    6. '   ' → logprob: -18.750003814697266
    7. ')' → logprob: -18.875003814697266
    8. '<|end|>' → logprob: -19.000003814697266
    9. '           ' → logprob: -19.250003814697266
    10. '+,' → logprob: -19.625003814697266

Token 725: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -12.87500286102295
    3. '   ' → logprob: -17.625001907348633
    4. '+' → logprob: -17.750001907348633
    5. '       ' → logprob: -21.250001907348633
    6. '           ' → logprob: -21.625001907348633
    7. '  ' → logprob: -22.375001907348633
    8. '    ' → logprob: -22.750001907348633
    9. '```' → logprob: -22.750001907348633
    10. ' +' → logprob: -23.375001907348633

Token 726: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.625
    3. '+' → logprob: -19.5
    4. '   ' → logprob: -20.5
    5. ')' → logprob: -21.625
    6. '```' → logprob: -24.25
    7. '       ' → logprob: -24.625
    8. '           ' → logprob: -25.25
    9. '  ' → logprob: -25.5
    10. '１' → logprob: -26.125

Token 727: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17998303472995758
    2. '<|end|>' → logprob: -1.8049830198287964
    3. '<|end|>' → logprob: -8.929983139038086
    4. '```' → logprob: -10.929983139038086
    5. '}' → logprob: -11.054983139038086
    6. '")' → logprob: -11.054983139038086
    7. ')
' → logprob: -11.179983139038086
    8. ')return' → logprob: -11.679983139038086
    9. '   ' → logprob: -11.804983139038086
    10. '
' → logprob: -12.304983139038086

Token 728: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008270698599517345
    2. '```' → logprob: -5.008270740509033
    3. 'elif' → logprob: -6.508270740509033
    4. 'else' → logprob: -10.508270263671875
    5. '<|end|>' → logprob: -10.508270263671875
    6. ' elif' → logprob: -12.758270263671875
    7. '``' → logprob: -12.758270263671875
    8. '    
' → logprob: -14.258270263671875
    9. '	elif' → logprob: -14.383270263671875
    10. '       ' → logprob: -14.758270263671875

Token 729: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.0949983224272728
    2. '   ' → logprob: -3.094998359680176
    3. 'elif' → logprob: -3.094998359680176
    4. ' else' → logprob: -9.844998359680176
    5. '```' → logprob: -11.219998359680176
    6. ' elif' → logprob: -11.844998359680176
    7. 'if' → logprob: -13.844998359680176
    8. '    
' → logprob: -15.094998359680176
    9. '	elif' → logprob: -15.469998359680176
    10. '	else' → logprob: -15.844998359680176

Token 730: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.15070556104183197
    2. '   ' → logprob: -2.275705575942993
    3. '       ' → logprob: -4.400705337524414
    4. ' :' → logprob: -4.650705337524414
    5. ':
' → logprob: -5.150705337524414
    6. ' =' → logprob: -6.150705337524414
    7. '{' → logprob: -6.650705337524414
    8. '<|end|>' → logprob: -6.900705337524414
    9. ',' → logprob: -7.025705337524414
    10. '=' → logprob: -7.275705337524414

Token 731: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5142814517021179
    2. '   ' → logprob: -1.0142815113067627
    3. ' l' → logprob: -3.3892815113067627
    4. 'l' → logprob: -6.264281272888184
    5. ' L' → logprob: -6.514281272888184
    6. ',' → logprob: -7.389281272888184
    7. '    ' → logprob: -7.764281272888184
    8. '_,' → logprob: -8.139281272888184
    9. 'L' → logprob: -8.264281272888184
    10. '#' → logprob: -9.014281272888184

Token 732: ' #' (ID: 1069)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.34456855058670044
    2. 'L' → logprob: -1.5945684909820557
    3. ' l' → logprob: -2.9695684909820557
    4. ' L' → logprob: -3.7195684909820557
    5. '   ' → logprob: -4.719568729400635
    6. '       ' → logprob: -5.719568729400635
    7. 'from' → logprob: -8.469568252563477
    8. 'left' → logprob: -8.719568252563477
    9. '```' → logprob: -9.844568252563477
    10. ',' → logprob: -10.219568252563477

Token 733: ' Query' (ID: 18574)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.004206970799714327
    2. 'L' → logprob: -5.504207134246826
    3. ' l' → logprob: -9.754206657409668
    4. 'left' → logprob: -10.629206657409668
    5. '   ' → logprob: -11.254206657409668
    6. '```' → logprob: -12.129206657409668
    7. '_,' → logprob: -12.129206657409668
    8. '#' → logprob: -12.254206657409668
    9. '_l' → logprob: -12.629206657409668
    10. 'from' → logprob: -12.879206657409668

Token 734: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2996087670326233
    2. ' =' → logprob: -1.5496087074279785
    3. '       ' → logprob: -4.2996087074279785
    4. ',' → logprob: -4.6746087074279785
    5. '_count' → logprob: -5.5496087074279785
    6. '=' → logprob: -5.6746087074279785
    7. '_' → logprob: -5.7996087074279785
    8. ':' → logprob: -6.6746087074279785
    9. '1' → logprob: -6.6746087074279785
    10. '[' → logprob: -7.2996087074279785

Token 735: ' the' (ID: 290)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.0847240686416626
    2. ' l' → logprob: -1.7097240686416626
    3. 'the' → logprob: -1.9597240686416626
    4. 'range' → logprob: -2.209723949432373
    5. ' the' → logprob: -2.334723949432373
    6. 'count' → logprob: -2.959723949432373
    7. 'a' → logprob: -4.584723949432373
    8. ' parts' → logprob: -4.709723949432373
    9. ' range' → logprob: -4.959723949432373
    10. 'distinct' → logprob: -4.959723949432373

Token 736: ' number' (ID: 2086)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.10233005881309509
    2. 'count' → logprob: -2.852329969406128
    3. 'res' → logprob: -4.477330207824707
    4. 'distinct' → logprob: -5.102330207824707
    5. 'cnt' → logprob: -5.227330207824707
    6. 'length' → logprob: -5.477330207824707
    7. 'result' → logprob: -5.852330207824707
    8. 'range' → logprob: -6.102330207824707
    9. 'ans' → logprob: -6.477330207824707
    10. 'parts' → logprob: -6.727330207824707

Token 737: ' of' (ID: 328)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'of' → logprob: -0.33001479506492615
    2. ' of' → logprob: -1.3300148248672485
    3. '_of' → logprob: -4.580014705657959
    4. ' ' → logprob: -6.330014705657959
    5. '   ' → logprob: -6.580014705657959
    6. '[' → logprob: -6.580014705657959
    7. '(' → logprob: -7.830014705657959
    8. 'Of' → logprob: -8.330015182495117
    9. '_parts' → logprob: -8.705015182495117
    10. '_tokens' → logprob: -8.830015182495117

Token 738: ' distinct' (ID: 16913)
  Prédit: 'distinct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distinct' → logprob: -0.008724601939320564
    2. 'different' → logprob: -5.258724689483643
    3. 'unique' → logprob: -6.258724689483643
    4. ' distinct' → logprob: -6.508724689483643
    5. '
' → logprob: -10.008724212646484
    6. ' unique' → logprob: -11.758724212646484
    7. ' different' → logprob: -12.133724212646484
    8. '   ' → logprob: -12.633724212646484
    9. '```' → logprob: -12.883724212646484
    10. ' ' → logprob: -13.133724212646484

Token 739: ' letters' (ID: 18151)
  Prédit: 'characters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'characters' → logprob: -0.2405988574028015
    2. ' characters' → logprob: -2.2405989170074463
    3. 'letters' → logprob: -2.6155989170074463
    4. ' letters' → logprob: -3.7405989170074463
    5. 'chars' → logprob: -4.990598678588867
    6. 'tokens' → logprob: -6.240598678588867
    7. '<|end|>' → logprob: -6.990598678588867
    8. '_letters' → logprob: -8.115598678588867
    9. '_chars' → logprob: -9.115598678588867
    10. ' tokens' → logprob: -9.240598678588867

Token 740: ' in' (ID: 306)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6779025793075562
    2. '       ' → logprob: -1.0529025793075562
    3. ' in' → logprob: -2.6779026985168457
    4. 'in' → logprob: -3.0529026985168457
    5. ',' → logprob: -4.177902698516846
    6. 'l' → logprob: -5.427902698516846
    7. 'from' → logprob: -6.427902698516846
    8. ' =' → logprob: -6.552902698516846
    9. 'between' → logprob: -7.427902698516846
    10. '=' → logprob: -7.552902698516846

Token 741: ' a' (ID: 261)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.3599972724914551
    2. 'range' → logprob: -1.734997272491455
    3. 'the' → logprob: -2.984997272491455
    4. 'l' → logprob: -3.859997272491455
    5. ' the' → logprob: -4.484997272491455
    6. 'r' → logprob: -4.484997272491455
    7. 'parts' → logprob: -4.859997272491455
    8. ' range' → logprob: -4.984997272491455
    9. ' parts' → logprob: -5.109997272491455
    10. ' int' → logprob: -5.484997272491455

Token 742: ' substring' (ID: 89494)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1134687066078186
    2. ' range' → logprob: -2.613468647003174
    3. 'substring' → logprob: -3.988468647003174
    4. ' substring' → logprob: -5.113468647003174
    5. ' segment' → logprob: -5.863468647003174
    6. 'segment' → logprob: -5.863468647003174
    7. ' given' → logprob: -5.988468647003174
    8. 'sub' → logprob: -8.488469123840332
    9. 'given' → logprob: -8.488469123840332
    10. '   ' → logprob: -8.738469123840332

Token 743: ' (' (ID: 350)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.6547396779060364
    2. '   ' → logprob: -0.9047396779060364
    3. 'l' → logprob: -3.1547396183013916
    4. ' L' → logprob: -4.029739856719971
    5. '       ' → logprob: -5.154739856719971
    6. 'L' → logprob: -6.279739856719971
    7. 'left' → logprob: -6.404739856719971
    8. ',' → logprob: -6.779739856719971
    9. ' left' → logprob: -6.904739856719971
    10. '	l' → logprob: -7.279739856719971

Token 744: 'range' (ID: 20967)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.09049531817436218
    2. 'L' → logprob: -2.7154953479766846
    3. ' l' → logprob: -4.4654951095581055
    4. ')' → logprob: -5.9654951095581055
    5. ' L' → logprob: -5.9654951095581055
    6. '   ' → logprob: -6.0904951095581055
    7. 'left' → logprob: -7.7154951095581055
    8. 's' → logprob: -8.090495109558105
    9. 'def' → logprob: -8.965495109558105
    10. ' left' → logprob: -9.965495109558105

Token 745: ' query' (ID: 5703)
  Prédit: '(parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(parts' → logprob: -0.7096511125564575
    2. ')' → logprob: -2.209650993347168
    3. '=' → logprob: -2.334650993347168
    4. 'parts' → logprob: -2.584650993347168
    5. 'def' → logprob: -2.959650993347168
    6. '(' → logprob: -3.209650993347168
    7. '[' → logprob: -3.334650993347168
    8. ' =' → logprob: -3.459650993347168
    9. 'int' → logprob: -3.834650993347168
    10. ' parts' → logprob: -5.084650993347168

Token 746: ')
' (ID: 446)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19933319091796875
    2. ')' → logprob: -2.3243331909179688
    3. ',' → logprob: -3.4493331909179688
    4. ' =' → logprob: -4.574333190917969
    5. '<|end|>' → logprob: -4.574333190917969
    6. '(' → logprob: -4.824333190917969
    7. '       ' → logprob: -4.824333190917969
    8. '(parts' → logprob: -5.699333190917969
    9. ' ,' → logprob: -6.699333190917969
    10. '[' → logprob: -6.824333190917969

Token 747: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6367238759994507
    2. '   ' → logprob: -0.8867238759994507
    3. 'l' → logprob: -3.7617239952087402
    4. ' l' → logprob: -3.8867239952087402
    5. '```' → logprob: -4.88672399520874
    6. ',' → logprob: -6.38672399520874
    7. '(' → logprob: -6.76172399520874
    8. ' (' → logprob: -7.63672399520874
    9. 'left' → logprob: -7.76172399520874
    10. 'start' → logprob: -7.76172399520874

Token 748: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' (adapté à ' l') → logprob: -0.006927546579390764
    2. 'L' → logprob: -5.006927490234375
    3. '   ' → logprob: -9.131927490234375
    4. ' l' → logprob: -10.256927490234375
    5. '```' → logprob: -10.631927490234375
    6. 'left' → logprob: -10.756927490234375
    7. 'from' → logprob: -11.131927490234375
    8. '    
' → logprob: -13.006927490234375
    9. 'li' → logprob: -14.006927490234375
    10. 'le' → logprob: -14.256927490234375

Token 749: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08587602525949478
    2. ' =' → logprob: -3.085875988006592
    3. ',' → logprob: -3.335875988006592
    4. '=int' → logprob: -7.085875988006592
    5. ' ,' → logprob: -9.58587646484375
    6. '   ' → logprob: -9.58587646484375
    7. '=
' → logprob: -11.21087646484375
    8. ' ' → logprob: -12.33587646484375
    9. ',int' → logprob: -12.46087646484375
    10. 'int' → logprob: -12.58587646484375

Token 750: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0007100477814674377
    2. ' int' → logprob: -7.2507100105285645
    3. '[int' → logprob: -17.250709533691406
    4. '	int' → logprob: -18.000709533691406
    5. '<int' → logprob: -18.875709533691406
    6. '(int' → logprob: -19.125709533691406
    7. '   ' → logprob: -19.875709533691406
    8. '=int' → logprob: -20.375709533691406
    9. '0' → logprob: -20.750709533691406
    10. '1' → logprob: -21.125709533691406

Token 751: '(parts' (ID: 102573)
  Prédit: '(parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parts' → logprob: -0.10283730924129486
    2. 'parts' → logprob: -2.352837324142456
    3. ' parts' → logprob: -5.977837085723877
    4. '[' → logprob: -9.352837562561035
    5. '   ' → logprob: -12.977837562561035
    6. '_parts' → logprob: -14.102837562561035
    7. '(' → logprob: -14.227837562561035
    8. '.parts' → logprob: -14.602837562561035
    9. '
' → logprob: -14.727837562561035
    10. ' (' → logprob: -14.852837562561035

Token 752: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0006602536886930466
    2. '1' → logprob: -7.375660419464111
    3. '(' → logprob: -11.250659942626953
    4. '2' → logprob: -11.875659942626953
    5. ' [' → logprob: -12.000659942626953
    6. '   ' → logprob: -13.125659942626953
    7. ')' → logprob: -13.625659942626953
    8. '       ' → logprob: -13.750659942626953
    9. ')[' → logprob: -13.875659942626953
    10. '()[' → logprob: -14.125659942626953

Token 753: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.18052037060260773
    2. '2' → logprob: -1.8055204153060913
    3. '[' → logprob: -7.180520534515381
    4. '   ' → logprob: -12.180520057678223
    5. ' ' → logprob: -12.180520057678223
    6. '3' → logprob: -13.305520057678223
    7. '```' → logprob: -13.805520057678223
    8. '][' → logprob: -15.055520057678223
    9. ']' → logprob: -16.05552101135254
    10. ' [' → logprob: -16.30552101135254

Token 754: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1615089327096939
    2. ')
' → logprob: -1.9115089178085327
    3. ',' → logprob: -7.036509037017822
    4. '),' → logprob: -8.411508560180664
    5. '<|end|>' → logprob: -9.536508560180664
    6. '   ' → logprob: -9.786508560180664
    7. ' )' → logprob: -11.036508560180664
    8. ');' → logprob: -11.786508560180664
    9. ' )
' → logprob: -12.036508560180664
    10. '[' → logprob: -12.536508560180664

Token 755: '       ' (ID: 309)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.3787599205970764
    2. ' r' → logprob: -1.6287598609924316
    3. '       ' → logprob: -2.3787598609924316
    4. ',' → logprob: -4.003759860992432
    5. '   ' → logprob: -5.628759860992432
    6. ' ,' → logprob: -6.628759860992432
    7. ' ' → logprob: -7.003759860992432
    8. ',r' → logprob: -7.003759860992432
    9. '<|end|>' → logprob: -7.628759860992432
    10. '           ' → logprob: -8.62876033782959

Token 756: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -4.644463479053229e-05
    2. ' r' → logprob: -10.625046730041504
    3. '       ' → logprob: -10.750046730041504
    4. '	r' → logprob: -14.875046730041504
    5. '_r' → logprob: -15.625046730041504
    6. ',r' → logprob: -17.000045776367188
    7. '           ' → logprob: -17.625045776367188
    8. '```' → logprob: -18.250045776367188
    9. 'R' → logprob: -18.625045776367188
    10. '   ' → logprob: -19.125045776367188

Token 757: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8705668449401855
    2. '=' → logprob: -0.9955668449401855
    3. '<|end|>' → logprob: -2.4955668449401855
    4. '       ' → logprob: -2.7455668449401855
    5. '<|end|>' → logprob: -3.6205668449401855
    6. ',' → logprob: -4.6205668449401855
    7. '   ' → logprob: -4.8705668449401855
    8. ' +=' → logprob: -5.6205668449401855
    9. '+=' → logprob: -6.1205668449401855
    10. '+' → logprob: -6.2455668449401855

Token 758: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0002613358374219388
    2. ' int' → logprob: -8.250261306762695
    3. '=int' → logprob: -17.125261306762695
    4. '<int' → logprob: -17.375261306762695
    5. '(int' → logprob: -17.500261306762695
    6. '[int' → logprob: -17.875261306762695
    7. '   ' → logprob: -20.125261306762695
    8. ':int' → logprob: -20.125261306762695
    9. '	int' → logprob: -20.125261306762695
    10. ']int' → logprob: -20.875261306762695

Token 759: '(parts' (ID: 102573)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.02362941950559616
    2. 'parts' → logprob: -4.648629188537598
    3. ' parts' → logprob: -5.523629188537598
    4. ' int' → logprob: -5.773629188537598
    5. '(parts' → logprob: -6.023629188537598
    6. '(int' → logprob: -6.273629188537598
    7. '[' → logprob: -6.898629188537598
    8. ')' → logprob: -7.148629188537598
    9. '[int' → logprob: -8.148629188537598
    10. '
' → logprob: -9.648629188537598

Token 760: '[' (ID: 58)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.005378660745918751
    2. '[' → logprob: -5.255378723144531
    3. '])' → logprob: -10.380378723144531
    4. '```' → logprob: -10.505378723144531
    5. '1' → logprob: -10.630378723144531
    6. '   ' → logprob: -11.130378723144531
    7. ')' → logprob: -11.505378723144531
    8. '][' → logprob: -11.755378723144531
    9. ']' → logprob: -12.255378723144531
    10. '])
' → logprob: -12.880378723144531

Token 761: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.04358048364520073
    2. '1' → logprob: -3.1685805320739746
    3. '0' → logprob: -8.043580055236816
    4. ' ' → logprob: -8.418580055236816
    5. '   ' → logprob: -11.543580055236816
    6. '```' → logprob: -12.168580055236816
    7. ']' → logprob: -12.606080055236816
    8. '])' → logprob: -12.981080055236816
    9. '[' → logprob: -13.106080055236816
    10. '3' → logprob: -13.168580055236816

Token 762: '])
' (ID: 5169)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.31330275535583496
    2. ')' → logprob: -1.313302755355835
    3. ')
' → logprob: -11.563302993774414
    4. ')

' → logprob: -11.688302993774414
    5. '])' → logprob: -12.063302993774414
    6. '       ' → logprob: -12.063302993774414
    7. ')]' → logprob: -12.563302993774414
    8. '   ' → logprob: -13.063302993774414
    9. '])
' → logprob: -13.188302993774414
    10. ']
' → logprob: -13.813302993774414

Token 763: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2173231989145279
    2. 'count' → logprob: -1.7173231840133667
    3. 'cnt' → logprob: -4.842323303222656
    4. '   ' → logprob: -5.217323303222656
    5. '```' → logprob: -6.217323303222656
    6. 'result' → logprob: -9.092323303222656
    7. '``' → logprob: -9.717323303222656
    8. ' count' → logprob: -9.842323303222656
    9. 'ans' → logprob: -9.967323303222656
    10. 'answer' → logprob: -10.342323303222656

Token 764: ' distinct' (ID: 16913)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.6904916763305664
    2. 'cnt' → logprob: -1.1904916763305664
    3. 'ans' → logprob: -1.9404916763305664
    4. 'res' → logprob: -3.4404916763305664
    5. 'answer' → logprob: -4.815491676330566
    6. '       ' → logprob: -5.190491676330566
    7. 'result' → logprob: -5.315491676330566
    8. '
' → logprob: -9.690491676330566
    9. 'c' → logprob: -9.690491676330566
    10. 'counter' → logprob: -10.190491676330566

Token 765: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.10226581245660782
    2. ' =' → logprob: -2.3522658348083496
    3. '=' → logprob: -6.35226583480835
    4. '_cnt' → logprob: -9.227265357971191
    5. '_chars' → logprob: -9.227265357971191
    6. '_counts' → logprob: -9.852265357971191
    7. '_letters' → logprob: -10.602265357971191
    8. 'count' → logprob: -11.477265357971191
    9. 'Count' → logprob: -11.977265357971191
    10. '_' → logprob: -11.977265357971191

Token 766: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2014133334159851
    2. '=' → logprob: -1.7014133930206299
    3. '   ' → logprob: -18.201414108276367
    4. '```' → logprob: -18.201414108276367
    5. '0' → logprob: -18.326414108276367
    6. ')' → logprob: -18.451414108276367
    7. ' +=' → logprob: -18.451414108276367
    8. ' ' → logprob: -18.826414108276367
    9. ' =
' → logprob: -19.201414108276367
    10. ',' → logprob: -19.201414108276367

Token 767: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002614550176076591
    2. ' ' → logprob: -8.250261306762695
    3. '   ' → logprob: -16.250261306762695
    4. 'sum' → logprob: -17.000261306762695
    5. '```' → logprob: -19.375261306762695
    6. ' sum' → logprob: -19.750261306762695
    7. ' ' → logprob: -20.000261306762695
    8. '       ' → logprob: -20.500261306762695
    9. '  ' → logprob: -21.000261306762695
    10. '
' → logprob: -21.250261306762695

Token 768: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.375000953674316
    3. 'sum' → logprob: -15.250000953674316
    4. '   ' → logprob: -18.125
    5. '```' → logprob: -20.625
    6. '
' → logprob: -22.25
    7. '``' → logprob: -22.5
    8. '۰' → logprob: -23.0
    9. '000' → logprob: -23.25
    10. '00' → logprob: -23.25

Token 769: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5628807544708252
    2. ' for' → logprob: -1.1878807544708252
    3. '
' → logprob: -2.687880754470825
    4. 'for' → logprob: -3.437880754470825
    5. '<|end|>' → logprob: -4.562880516052246
    6. '   ' → logprob: -5.062880516052246
    7. '        
' → logprob: -5.562880516052246
    8. '  
' → logprob: -6.062880516052246
    9. ' 
' → logprob: -7.062880516052246
    10. '    
' → logprob: -7.937880516052246

Token 770: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014379149302840233
    2. ' for' → logprob: -4.514379024505615
    3. 'for' → logprob: -5.764379024505615
    4. '   ' → logprob: -8.764379501342773
    5. '
' → logprob: -10.764379501342773
    6. '        
' → logprob: -12.639379501342773
    7. '```' → logprob: -12.764379501342773
    8. '<|end|>' → logprob: -13.514379501342773
    9. '           ' → logprob: -13.639379501342773
    10. '	for' → logprob: -14.014379501342773

Token 771: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00026741522015072405
    2. '       ' → logprob: -8.375267028808594
    3. ' for' → logprob: -10.250267028808594
    4. '```' → logprob: -14.375267028808594
    5. '   ' → logprob: -14.500267028808594
    6. '	for' → logprob: -14.750267028808594
    7. '
' → logprob: -17.000267028808594
    8. '           ' → logprob: -17.375267028808594
    9. '``' → logprob: -18.625267028808594
    10. 'from' → logprob: -19.875267028808594

Token 772: ' Iterate' (ID: 129410)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -3.128163257315464e-07
    2. ' for' → logprob: -15.5
    3. '       ' → logprob: -16.25
    4. '   ' → logprob: -18.625
    5. '```' → logprob: -19.875
    6. '
' → logprob: -21.375
    7. '	for' → logprob: -21.5
    8. '           ' → logprob: -22.25
    9. 'from' → logprob: -22.25
    10. '``' → logprob: -24.5

Token 773: ' over' (ID: 1072)
  Prédit: 'over'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'over' → logprob: -0.470660537481308
    2. 'for' → logprob: -1.4706605672836304
    3. ' over' → logprob: -2.345660448074341
    4. 'through' → logprob: -3.845660448074341
    5. '       ' → logprob: -4.59566068649292
    6. ' through' → logprob: -5.09566068649292
    7. '   ' → logprob: -5.47066068649292
    8. ' for' → logprob: -5.59566068649292
    9. 'in' → logprob: -6.34566068649292
    10. '           ' → logprob: -6.34566068649292

Token 774: ' all' (ID: 722)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00019221604452468455
    2. ' range' → logprob: -8.625192642211914
    3. '26' → logprob: -12.250192642211914
    4. 'bit' → logprob: -12.875192642211914
    5. 'c' → logprob: -13.000192642211914
    6. '
' → logprob: -13.125192642211914
    7. '   ' → logprob: -14.625192642211914
    8. 'char' → logprob: -15.750192642211914
    9. '```' → logprob: -16.625192642211914
    10. '	range' → logprob: -16.625192642211914

Token 775: ' ' (ID: 220)
  Prédit: '26'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '26' → logprob: -0.29042842984199524
    2. 'range' → logprob: -1.4154284000396729
    3. ' range' → logprob: -5.540428638458252
    4. 'c' → logprob: -6.165428638458252
    5. '   ' → logprob: -6.415428638458252
    6. ' ' → logprob: -7.290428638458252
    7. 'i' → logprob: -8.040428161621094
    8. 'letters' → logprob: -8.915428161621094
    9. '25' → logprob: -9.415428161621094
    10. 'char' → logprob: -9.790428161621094

Token 776: '26' (ID: 2109)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.018329622223973274
    2. '26' → logprob: -4.018329620361328
    3. 'bit' → logprob: -8.768329620361328
    4. ' range' → logprob: -11.018329620361328
    5. 'letter' → logprob: -12.768329620361328
    6. 'char' → logprob: -13.643329620361328
    7. '25' → logprob: -13.893329620361328
    8. 'letters' → logprob: -14.643329620361328
    9. 'i' → logprob: -14.768329620361328
    10. '   ' → logprob: -14.893329620361328

Token 777: ' alph' (ID: 133679)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8662646412849426
    2. 'letters' → logprob: -0.8662646412849426
    3. 'characters' → logprob: -2.866264581680298
    4. ' for' → logprob: -3.116264581680298
    5. ' letters' → logprob: -3.491264581680298
    6. 'abcdefghijklmnopqrstuvwxyz' → logprob: -4.616264820098877
    7. ' characters' → logprob: -5.616264820098877
    8. '26' → logprob: -6.116264820098877
    9. 'bit' → logprob: -6.241264820098877
    10. 'range' → logprob: -6.366264820098877

Token 778: 'abets' (ID: 164013)
  Prédit: 'abet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abet' → logprob: -0.3561784029006958
    2. 'abets' → logprob: -1.2311784029006958
    3. 'ab' → logprob: -5.981178283691406
    4. 'a' → logprob: -5.981178283691406
    5. 'abcdefghijklmnopqrstuvwxyz' → logprob: -6.856178283691406
    6. '```' → logprob: -6.856178283691406
    7. 'abeth' → logprob: -8.106178283691406
    8. 'bet' → logprob: -9.981178283691406
    9. '   ' → logprob: -10.606178283691406
    10. 'abetic' → logprob: -10.731178283691406

Token 779: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11318132281303406
    2. ' for' → logprob: -2.7381813526153564
    3. 'for' → logprob: -3.4881813526153564
    4. ':
' → logprob: -4.988181114196777
    5. ':' → logprob: -6.363181114196777
    6. '   ' → logprob: -6.488181114196777
    7. '           ' → logprob: -7.488181114196777
    8. ' in' → logprob: -8.238181114196777
    9. ',' → logprob: -8.488181114196777
    10. ' to' → logprob: -8.738181114196777

Token 780: ' check' (ID: 2371)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.17372475564479828
    2. 'count' → logprob: -2.54872465133667
    3. ' check' → logprob: -3.67372465133667
    4. 'for' → logprob: -3.92372465133667
    5. '       ' → logprob: -4.17372465133667
    6. '   ' → logprob: -5.04872465133667
    7. 'det' → logprob: -5.42372465133667
    8. ' for' → logprob: -6.29872465133667
    9. 'calculate' → logprob: -6.42372465133667
    10. 'range' → logprob: -6.42372465133667

Token 781: ' for' (ID: 395)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.12870299816131592
    2. '       ' → logprob: -2.8787031173706055
    3. 'for' → logprob: -3.3787031173706055
    4. ' if' → logprob: -4.0037031173706055
    5. '   ' → logprob: -4.5037031173706055
    6. ' for' → logprob: -8.003703117370605
    7. 'whether' → logprob: -8.628703117370605
    8. 'range' → logprob: -8.753703117370605
    9. '           ' → logprob: -9.128703117370605
    10. 'count' → logprob: -9.503703117370605

Token 782: ' presence' (ID: 14324)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.31071820855140686
    2. ' bit' → logprob: -2.685718297958374
    3. 'presence' → logprob: -2.935718297958374
    4. 'range' → logprob: -3.310718297958374
    5. 'distinct' → logprob: -3.935718297958374
    6. 'each' → logprob: -4.060718059539795
    7. 'c' → logprob: -4.560718059539795
    8. 'i' → logprob: -4.560718059539795
    9. ' presence' → logprob: -4.685718059539795
    10. 'char' → logprob: -4.810718059539795

Token 783: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010949020273983479
    2. ' in' → logprob: -5.01094913482666
    3. ' for' → logprob: -6.51094913482666
    4. 'for' → logprob: -6.63594913482666
    5. 'in' → logprob: -6.88594913482666
    6. '   ' → logprob: -8.76094913482666
    7. '           ' → logprob: -8.88594913482666
    8. ',' → logprob: -10.51094913482666
    9. ':
' → logprob: -11.13594913482666
    10. ':' → logprob: -11.51094913482666

Token 784: ' the' (ID: 290)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.10350198298692703
    2. 'bit' → logprob: -2.853502035140991
    3. ' range' → logprob: -3.853502035140991
    4. 'the' → logprob: -4.978501796722412
    5. ' bit' → logprob: -5.353501796722412
    6. 'r' → logprob: -5.853501796722412
    7. ' the' → logprob: -5.978501796722412
    8. '   ' → logprob: -6.853501796722412
    9. 'S' → logprob: -7.228501796722412
    10. 'substring' → logprob: -8.47850227355957

Token 785: ' substring' (ID: 89494)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.036220405250787735
    2. ' range' → logprob: -3.5362203121185303
    3. 'substring' → logprob: -5.286220550537109
    4. 'bit' → logprob: -7.536220550537109
    5. ' substring' → logprob: -8.16122055053711
    6. 'r' → logprob: -8.41122055053711
    7. '   ' → logprob: -9.28622055053711
    8. 'sub' → logprob: -9.41122055053711
    9. 'substr' → logprob: -10.53622055053711
    10. '[r' → logprob: -10.78622055053711

Token 786: ' [' (ID: 723)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.031845737248659134
    2. 'for' → logprob: -4.031845569610596
    3. ' for' → logprob: -4.406845569610596
    4. '   ' → logprob: -7.156845569610596
    5. ':
' → logprob: -8.906846046447754
    6. ':' → logprob: -9.031846046447754
    7. '           ' → logprob: -9.531846046447754
    8. '        
' → logprob: -9.781846046447754
    9. '```' → logprob: -10.281846046447754
    10. ',' → logprob: -10.406846046447754

Token 787: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0004433011345099658
    2. ' l' → logprob: -8.500443458557129
    3. 'r' → logprob: -8.625443458557129
    4. '       ' → logprob: -10.875443458557129
    5. '   ' → logprob: -11.500443458557129
    6. '           ' → logprob: -11.625443458557129
    7. ',' → logprob: -11.625443458557129
    8. '
' → logprob: -12.375443458557129
    9. '```' → logprob: -13.000443458557129
    10. '	l' → logprob: -13.375443458557129

Token 788: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08002903312444687
    2. ',r' → logprob: -2.580029010772705
    3. ' ,' → logprob: -7.705029010772705
    4. 'r' → logprob: -8.330029487609863
    5. '-' → logprob: -9.205029487609863
    6. ',
' → logprob: -9.455029487609863
    7. ':r' → logprob: -9.580029487609863
    8. ';r' → logprob: -9.830029487609863
    9. '       ' → logprob: -9.955029487609863
    10. '...' → logprob: -10.830029487609863

Token 789: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0011720098555088043
    2. ' r' → logprob: -6.751172065734863
    3. '   ' → logprob: -13.751172065734863
    4. ',' → logprob: -15.501172065734863
    5. '       ' → logprob: -15.751172065734863
    6. '
' → logprob: -16.001171112060547
    7. '```' → logprob: -16.251171112060547
    8. '           ' → logprob: -16.626171112060547
    9. ' ' → logprob: -17.501171112060547
    10. '    ' → logprob: -17.751171112060547

Token 790: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6549188494682312
    2. ']:' → logprob: -1.029918909072876
    3. ']:
' → logprob: -2.154918909072876
    4. ']
' → logprob: -5.529918670654297
    5. '       ' → logprob: -6.154918670654297
    6. ']+' → logprob: -8.154918670654297
    7. '   ' → logprob: -8.404918670654297
    8. ']:
' → logprob: -8.404918670654297
    9. '+' → logprob: -8.779918670654297
    10. ']:

' → logprob: -9.154918670654297

Token 791: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01601031795144081
    2. ' for' → logprob: -4.766010284423828
    3. 'for' → logprob: -5.016010284423828
    4. '   ' → logprob: -7.891010284423828
    5. '        
' → logprob: -8.641010284423828
    6. '
' → logprob: -9.766010284423828
    7. '<|end|>' → logprob: -9.891010284423828
    8. '```' → logprob: -10.641010284423828
    9. '           ' → logprob: -10.891010284423828
    10. '	for' → logprob: -12.016010284423828

Token 792: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.007190215401351452
    2. ' for' → logprob: -5.257190227508545
    3. '       ' → logprob: -6.257190227508545
    4. '   ' → logprob: -10.382189750671387
    5. '```' → logprob: -12.382189750671387
    6. '	for' → logprob: -13.882189750671387
    7. '           ' → logprob: -13.882189750671387
    8. '
' → logprob: -14.632189750671387
    9. 'range' → logprob: -15.757189750671387
    10. '``' → logprob: -16.882190704345703

Token 793: ' letter' (ID: 10263)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.03967468813061714
    2. 'j' → logprob: -3.789674758911133
    3. 'i' → logprob: -4.789674758911133
    4. 'ch' → logprob: -5.039674758911133
    5. 'idx' → logprob: -6.664674758911133
    6. ' c' → logprob: -9.664674758911133
    7. 'char' → logprob: -9.664674758911133
    8. 'k' → logprob: -9.664674758911133
    9. 'ci' → logprob: -10.664674758911133
    10. 'letter' → logprob: -12.289674758911133

Token 794: '_index' (ID: 7748)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0807785764336586
    2. '_idx' → logprob: -2.7057785987854004
    3. '_index' → logprob: -5.0807785987854
    4. 'in' → logprob: -6.0807785987854
    5. 'idx' → logprob: -7.3307785987854
    6. '_i' → logprob: -7.4557785987854
    7. '   ' → logprob: -7.8307785987854
    8. '_' → logprob: -8.455778121948242
    9. 'i' → logprob: -8.830778121948242
    10. '```' → logprob: -9.955778121948242

Token 795: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.011050889268517494
    2. 'in' → logprob: -4.511050701141357
    3. '	in' → logprob: -13.636051177978516
    4. ' ' → logprob: -14.636051177978516
    5. '   ' → logprob: -15.011051177978516
    6. '=' → logprob: -15.761051177978516
    7. '<|end|>' → logprob: -16.011051177978516
    8. '0' → logprob: -16.136051177978516
    9. 's' → logprob: -16.386051177978516
    10. '    ' → logprob: -16.511051177978516

Token 796: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00033546582562848926
    2. ' range' → logprob: -8.000335693359375
    3. '(range' → logprob: -20.625335693359375
    4. '	range' → logprob: -20.875335693359375
    5. '
' → logprob: -23.875335693359375
    6. ' ' → logprob: -24.000335693359375
    7. '0' → logprob: -24.000335693359375
    8. '   ' → logprob: -24.125335693359375
    9. 'Range' → logprob: -25.250335693359375
    10. 'rang' → logprob: -25.500335693359375

Token 797: '(' (ID: 7)
  Prédit: '26'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '26' → logprob: -0.07890333980321884
    2. '(' → logprob: -2.5789034366607666
    3. '   ' → logprob: -11.828903198242188
    4. ' ' → logprob: -12.328903198242188
    5. ',' → logprob: -14.328903198242188
    6. '           ' → logprob: -15.078903198242188
    7. '25' → logprob: -15.328903198242188
    8. '       ' → logprob: -15.828903198242188
    9. ')' → logprob: -15.953903198242188
    10. '0' → logprob: -16.328903198242188

Token 798: '26' (ID: 2109)
  Prédit: '26'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '26' → logprob: 0.0
    2. '0' → logprob: -18.0
    3. ' ' → logprob: -19.0
    4. '   ' → logprob: -19.0
    5. '
' → logprob: -21.875
    6. '2' → logprob: -22.375
    7. '25' → logprob: -22.75
    8. '1' → logprob: -23.0
    9. ')' → logprob: -23.0
    10. 'a' → logprob: -23.25

Token 799: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.001621503266505897
    2. '):' → logprob: -6.501621723175049
    3. '       ' → logprob: -10.12662124633789
    4. '):
' → logprob: -10.37662124633789
    5. ':
' → logprob: -10.50162124633789
    6. '           ' → logprob: -11.00162124633789
    7. ':' → logprob: -13.25162124633789
    8. '   ' → logprob: -14.25162124633789
    9. '):

' → logprob: -14.37662124633789
    10. ']:
' → logprob: -15.50162124633789

Token 800: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.051153965294361115
    2. '
' → logprob: -3.9261538982391357
    3. ' if' → logprob: -3.9261538982391357
    4. 'if' → logprob: -4.676154136657715
    5. '```' → logprob: -8.301154136657715
    6. '   ' → logprob: -8.426154136657715
    7. '            
' → logprob: -9.051154136657715
    8. '       ' → logprob: -9.051154136657715
    9. '    
' → logprob: -9.426154136657715
    10. '  
' → logprob: -9.801154136657715

Token 801: ' occurrences' (ID: 108073)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.06941897422075272
    2. ' if' → logprob: -3.1944189071655273
    3. '           ' → logprob: -3.6944189071655273
    4. 'count' → logprob: -7.194418907165527
    5. 'sum' → logprob: -9.069418907165527
    6. 'left' → logprob: -9.569418907165527
    7. '   ' → logprob: -9.569418907165527
    8. '       ' → logprob: -10.194418907165527
    9. 'res' → logprob: -10.319418907165527
    10. '```' → logprob: -10.694418907165527

Token 802: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25988903641700745
    2. ' =' → logprob: -1.509889006614685
    3. '>' → logprob: -5.009889125823975
    4. '           ' → logprob: -7.259889125823975
    5. '   ' → logprob: -8.384888648986816
    6. ' >' → logprob: -9.009888648986816
    7. 'if' → logprob: -9.509888648986816
    8. '       ' → logprob: -10.259888648986816
    9. ' +=' → logprob: -10.634888648986816
    10. '+=' → logprob: -11.384888648986816

Token 803: ' bit' (ID: 3546)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.0015024791937321424
    2. ' bit' → logprob: -6.501502513885498
    3. '(bit' → logprob: -16.376502990722656
    4. '           ' → logprob: -17.251502990722656
    5. '   ' → logprob: -18.876502990722656
    6. 'bits' → logprob: -19.626502990722656
    7. 'bitr' → logprob: -20.626502990722656
    8. 'b' → logprob: -20.751502990722656
    9. '.bit' → logprob: -20.751502990722656
    10. '               ' → logprob: -21.001502990722656

Token 804: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.088346359931165e-07
    2. 'bit' → logprob: -15.125000953674316
    3. 'letter' → logprob: -15.250000953674316
    4. '```' → logprob: -16.125
    5. ' [' → logprob: -16.25
    6. 's' → logprob: -16.5
    7. 'a' → logprob: -17.875
    8. '   ' → logprob: -18.0
    9. '[
' → logprob: -18.375
    10. '
' → logprob: -18.375

Token 805: 'letter' (ID: 12793)
  Prédit: 'letter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'letter' → logprob: -0.012612665072083473
    2. '[' → logprob: -4.387612819671631
    3. ' letter' → logprob: -9.887612342834473
    4. 'bit' → logprob: -10.637612342834473
    5. '(letter' → logprob: -10.887612342834473
    6. 'r' → logprob: -12.762612342834473
    7. '```' → logprob: -13.262612342834473
    8. '_letter' → logprob: -13.637612342834473
    9. '[r' → logprob: -14.512612342834473
    10. 'Letter' → logprob: -14.637612342834473

Token 806: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.274251252412796
    2. '[' → logprob: -1.7742512226104736
    3. 'r' → logprob: -2.8992512226104736
    4. 'index' → logprob: -5.024251461029053
    5. 'letter' → logprob: -5.774251461029053
    6. '[r' → logprob: -6.399251461029053
    7. '   ' → logprob: -7.274251461029053
    8. ']' → logprob: -7.524251461029053
    9. '```' → logprob: -7.649251461029053
    10. 's' → logprob: -8.024250984191895

Token 807: '].' (ID: 1651)
  Prédit: '.sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sum' → logprob: -1.0921942703134846e-05
    2. '].' → logprob: -12.50001049041748
    3. '.' → logprob: -12.62501049041748
    4. ').' → logprob: -13.00001049041748
    5. ' .' → logprob: -13.62501049041748
    6. '.s' → logprob: -15.50001049041748
    7. '}.' → logprob: -16.125011444091797
    8. 'sum' → logprob: -16.375011444091797
    9. '>.' → logprob: -17.625011444091797
    10. '   ' → logprob: -17.875011444091797

Token 808: 'sum' (ID: 12298)
  Prédit: 'sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -2.935296834039036e-06
    2. '.sum' → logprob: -13.00000286102295
    3. ' sum' → logprob: -14.50000286102295
    4. '```' → logprob: -17.000003814697266
    5. '(sum' → logprob: -17.500003814697266
    6. '   ' → logprob: -17.625003814697266
    7. 'bit' → logprob: -18.250003814697266
    8. '	sum' → logprob: -18.375003814697266
    9. '`' → logprob: -18.625003814697266
    10. '
' → logprob: -18.750003814697266

Token 809: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -1.7432603272027336e-06
    2. '[r' → logprob: -13.625001907348633
    3. '(' → logprob: -15.875001907348633
    4. '```' → logprob: -16.000001907348633
    5. 'r' → logprob: -16.250001907348633
    6. '(
' → logprob: -17.125001907348633
    7. ' (' → logprob: -17.625001907348633
    8. ')(' → logprob: -18.250001907348633
    9. '   ' → logprob: -18.500001907348633
    10. '#' → logprob: -18.625001907348633

Token 810: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.372916686814278e-05
    2. ' )' → logprob: -10.1250638961792
    3. ')-' → logprob: -10.7500638961792
    4. '           ' → logprob: -14.1250638961792
    5. '-)' → logprob: -14.5000638961792
    6. ' -' → logprob: -15.2500638961792
    7. '-' → logprob: -16.125062942504883
    8. '       ' → logprob: -16.250062942504883
    9. ')
' → logprob: -16.250062942504883
    10. '        ' → logprob: -16.250062942504883

Token 811: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.039713528007268906
    2. '-' → logprob: -3.2897136211395264
    3. '           ' → logprob: -6.664713382720947
    4. '<|end|>' → logprob: -9.039713859558105
    5. '            ' → logprob: -9.414713859558105
    6. '          ' → logprob: -9.539713859558105
    7. '        ' → logprob: -10.164713859558105
    8. '```' → logprob: -10.539713859558105
    9. '       ' → logprob: -11.414713859558105
    10. ' -
' → logprob: -11.664713859558105

Token 812: ' bit' (ID: 3546)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.0001584850688232109
    2. ' bit' → logprob: -8.750158309936523
    3. '(bit' → logprob: -17.875158309936523
    4. '   ' → logprob: -18.750158309936523
    5. '           ' → logprob: -19.500158309936523
    6. '               ' → logprob: -21.375158309936523
    7. 'bitr' → logprob: -21.375158309936523
    8. '.bit' → logprob: -22.500158309936523
    9. 'b' → logprob: -22.500158309936523
    10. '       ' → logprob: -22.625158309936523

Token 813: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0001290454383706674
    2. 'bit' → logprob: -9.000128746032715
    3. '```' → logprob: -12.625128746032715
    4. '(bit' → logprob: -14.000128746032715
    5. '(letter' → logprob: -14.125128746032715
    6. '[
' → logprob: -15.500128746032715
    7. '[l' → logprob: -16.00012969970703
    8. 'letter' → logprob: -16.25012969970703
    9. '(' → logprob: -16.62512969970703
    10. '{' → logprob: -16.75012969970703

Token 814: 'letter' (ID: 12793)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4927460551261902
    2. 'letter' → logprob: -0.9927460551261902
    3. 'bit' → logprob: -3.992746114730835
    4. ' letter' → logprob: -10.367746353149414
    5. 'b' → logprob: -12.617746353149414
    6. '(letter' → logprob: -12.742746353149414
    7. '```' → logprob: -13.242746353149414
    8. '{' → logprob: -13.242746353149414
    9. ' bit' → logprob: -13.992746353149414
    10. '_letter' → logprob: -14.367746353149414

Token 815: '_index' (ID: 7748)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1853480041027069
    2. '_index' → logprob: -1.8103480339050293
    3. 'letter' → logprob: -5.435348033905029
    4. 'index' → logprob: -7.560348033905029
    5. '_letter' → logprob: -8.310347557067871
    6. '[l' → logprob: -8.560347557067871
    7. '(letter' → logprob: -9.310347557067871
    8. 'bit' → logprob: -9.685347557067871
    9. '{' → logprob: -10.685347557067871
    10. 'l' → logprob: -11.060347557067871

Token 816: '].' (ID: 1651)
  Prédit: '.sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sum' → logprob: -0.0010288810590282083
    2. ').' → logprob: -7.376029014587402
    3. '.' → logprob: -8.251029014587402
    4. ' .' → logprob: -9.626029014587402
    5. '.bit' → logprob: -9.876029014587402
    6. '].' → logprob: -11.376029014587402
    7. '>.' → logprob: -12.626029014587402
    8. '.s' → logprob: -13.001029014587402
    9. '[' → logprob: -13.251029014587402
    10. '.Sum' → logprob: -13.751029014587402

Token 817: 'sum' (ID: 12298)
  Prédit: 'sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -3.054500666621607e-06
    2. ' sum' → logprob: -13.00000286102295
    3. '.sum' → logprob: -14.37500286102295
    4. 'bit' → logprob: -15.62500286102295
    5. 's' → logprob: -17.500003814697266
    6. '	sum' → logprob: -18.625003814697266
    7. 'summ' → logprob: -19.500003814697266
    8. '```' → logprob: -19.500003814697266
    9. '_sum' → logprob: -20.000003814697266
    10. '1' → logprob: -20.250003814697266

Token 818: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -1.6240566083070007e-06
    2. '(' → logprob: -13.500001907348633
    3. '(ll' → logprob: -16.500001907348633
    4. 'l' → logprob: -17.500001907348633
    5. '(
' → logprob: -18.250001907348633
    6. ' (' → logprob: -18.750001907348633
    7. '((' → logprob: -18.750001907348633
    8. '(L' → logprob: -19.625001907348633
    9. '\(' → logprob: -20.000001907348633
    10. '(left' → logprob: -20.250001907348633

Token 819: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.02641419880092144
    2. ' -' → logprob: -3.651414155960083
    3. '   ' → logprob: -9.901413917541504
    4. '1' → logprob: -10.276413917541504
    5. '0' → logprob: -11.526413917541504
    6. '[' → logprob: -11.651413917541504
    7. '```' → logprob: -12.776413917541504
    8. ' ' → logprob: -12.901413917541504
    9. '2' → logprob: -13.901413917541504
    10. '           ' → logprob: -14.026413917541504

Token 820: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. '   ' → logprob: -18.0
    4. '```' → logprob: -19.375
    5. '<|end|>' → logprob: -20.375
    6. ')' → logprob: -20.5
    7. '2' → logprob: -21.125
    8. '  ' → logprob: -22.0
    9. '۱' → logprob: -22.125
    10. '    ' → logprob: -22.25

Token 821: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.981667537620524e-06
    2. ' ' → logprob: -13.250001907348633
    3. '   ' → logprob: -17.000001907348633
    4. '```' → logprob: -18.000001907348633
    5. '0' → logprob: -18.375001907348633
    6. ')' → logprob: -18.375001907348633
    7. '2' → logprob: -18.500001907348633
    8. '    ' → logprob: -19.875001907348633
    9. '           ' → logprob: -20.187501907348633
    10. '  ' → logprob: -20.250001907348633

Token 822: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004547369200736284
    2. ')>' → logprob: -6.129547595977783
    3. ')
' → logprob: -6.254547595977783
    4. '<|end|>' → logprob: -8.504547119140625
    5. '           ' → logprob: -9.504547119140625
    6. '):
' → logprob: -10.129547119140625
    7. '>' → logprob: -10.754547119140625
    8. ' )' → logprob: -10.879547119140625
    9. ')>=' → logprob: -11.004547119140625
    10. '       ' → logprob: -11.254547119140625

Token 823: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003484962275251746
    2. '```' → logprob: -6.378484725952148
    3. '<|end|>' → logprob: -6.878484725952148
    4. ' if' → logprob: -7.503484725952148
    5. '               ' → logprob: -9.878484725952148
    6. '[' → logprob: -10.378484725952148
    7. '          ' → logprob: -10.753484725952148
    8. '       ' → logprob: -11.003484725952148
    9. '``' → logprob: -11.128484725952148
    10. 'if' → logprob: -11.628484725952148

Token 824: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4656123220920563
    2. ' if' → logprob: -1.4656122922897339
    3. 'if' (adapté à ' if') → logprob: -1.9656122922897339
    4. '```' → logprob: -7.090612411499023
    5. '       ' → logprob: -8.465612411499023
    6. '   ' → logprob: -9.590612411499023
    7. '	if' → logprob: -10.590612411499023
    8. '               ' → logprob: -10.590612411499023
    9. ' ' → logprob: -11.215612411499023
    10. '          ' → logprob: -11.340612411499023

Token 825: ' occurrences' (ID: 108073)
  Prédit: 'occ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'occ' → logprob: -0.1603609174489975
    2. ' occurrences' → logprob: -1.9103609323501587
    3. 'occur' → logprob: -9.035361289978027
    4. '   ' → logprob: -12.160361289978027
    5. 'oc' → logprob: -12.160361289978027
    6. '_occ' → logprob: -13.035361289978027
    7. '           ' → logprob: -13.535361289978027
    8. 'Occurrences' → logprob: -14.035361289978027
    9. '       ' → logprob: -14.410361289978027
    10. ' occur' → logprob: -14.410361289978027

Token 826: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.04859452322125435
    2. ' >' → logprob: -3.0485944747924805
    3. '   ' → logprob: -12.92359447479248
    4. '           ' → logprob: -13.42359447479248
    5. ' ' → logprob: -14.42359447479248
    6. '()>' → logprob: -14.67359447479248
    7. '&gt' → logprob: -14.92359447479248
    8. ':' → logprob: -15.04859447479248
    9. ')>' → logprob: -15.04859447479248
    10. '               ' → logprob: -15.17359447479248

Token 827: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00023059594968799502
    2. ' ' → logprob: -8.37523078918457
    3. '   ' → logprob: -17.12523078918457
    4. '<|end|>' → logprob: -19.25023078918457
    5. '```' → logprob: -19.25023078918457
    6. '
' → logprob: -19.87523078918457
    7. ' ' → logprob: -20.00023078918457
    8. '=' → logprob: -20.37523078918457
    9. '۰' → logprob: -20.50023078918457
    10. '  ' → logprob: -20.62523078918457

Token 828: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.625008583068848
    3. '<|end|>' → logprob: -17.875009536743164
    4. '```' → logprob: -19.250009536743164
    5. 'zero' → logprob: -19.375009536743164
    6. '۰' → logprob: -19.625009536743164
    7. '   ' → logprob: -20.000009536743164
    8. '=' → logprob: -20.500009536743164
    9. ' ' → logprob: -21.125009536743164
    10. '000' → logprob: -21.375009536743164

Token 829: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7680256962776184
    2. ':
' → logprob: -0.7680256962776184
    3. ':' → logprob: -2.6430256366729736
    4. '           ' → logprob: -7.143025875091553
    5. '):
' → logprob: -8.893025398254395
    6. ',' → logprob: -10.643025398254395
    7. '              ' → logprob: -11.643025398254395
    8. '                   ' → logprob: -11.768025398254395
    9. '	           ' → logprob: -11.893025398254395
    10. ':
' → logprob: -12.143025398254395

Token 830: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -6.408677290892228e-05
    2. ' distinct' → logprob: -10.8750638961792
    3. '	           ' → logprob: -11.0000638961792
    4. 'distinct' → logprob: -11.3750638961792
    5. '           ' → logprob: -12.3750638961792
    6. '                   ' → logprob: -12.5000638961792
    7. '		       ' → logprob: -12.5000638961792
    8. '	       ' → logprob: -12.8750638961792
    9. '              ' → logprob: -14.0000638961792
    10. '			' → logprob: -14.6250638961792

Token 831: ' distinct' (ID: 16913)
  Prédit: 'distinct'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distinct' (adapté à ' distinct') → logprob: -0.020618263632059097
    2. ' distinct' → logprob: -4.020618438720703
    3. '               ' → logprob: -6.020618438720703
    4. '                   ' → logprob: -10.395618438720703
    5. 'dist' → logprob: -12.645618438720703
    6. '           ' → logprob: -13.145618438720703
    7. '   ' → logprob: -13.645618438720703
    8. '```' → logprob: -15.895618438720703
    9. '                       ' → logprob: -17.145618438720703
    10. '                ' → logprob: -17.770618438720703

Token 832: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -1.9361264946837764e-07
    2. 'count' → logprob: -15.625
    3. '_dist' → logprob: -19.625
    4. 'Count' → logprob: -20.0
    5. 'distinct' → logprob: -20.25
    6. '_counts' → logprob: -20.375
    7. '```' → logprob: -20.75
    8. '_COUNT' → logprob: -21.25
    9. '_token' → logprob: -21.25
    10. '_index' → logprob: -21.625

Token 833: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.018282098695635796
    2. ' +=' → logprob: -4.018281936645508
    3. '               ' → logprob: -9.393281936645508
    4. '                   ' → logprob: -10.268281936645508
    5. ']+=' → logprob: -12.018281936645508
    6. '           ' → logprob: -13.018281936645508
    7. '                ' → logprob: -13.518281936645508
    8. '+' → logprob: -13.643281936645508
    9. '```' → logprob: -13.643281936645508
    10. '                       ' → logprob: -14.143281936645508

Token 834: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '   ' → logprob: -20.125
    4. '```' → logprob: -21.125
    5. '１' → logprob: -24.25
    6. '
' → logprob: -25.0
    7. '۱' → logprob: -25.125
    8. '`' → logprob: -25.5
    9. '+' → logprob: -25.5
    10. '       ' → logprob: -25.625

Token 835: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.25
    3. '```' → logprob: -19.5
    4. '   ' → logprob: -21.375
    5. '
' → logprob: -22.125
    6. '１' → logprob: -23.0
    7. '۱' → logprob: -23.25
    8. '`' → logprob: -24.5
    9. '১' → logprob: -24.625
    10. '१' → logprob: -24.75

Token 836: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026546897366642952
    2. '
' → logprob: -3.6515469551086426
    3. 'print' → logprob: -8.776546478271484
    4. ' print' → logprob: -10.526546478271484
    5. '<|end|>' → logprob: -10.526546478271484
    6. '        
' → logprob: -11.401546478271484
    7. '   ' → logprob: -11.776546478271484
    8. '
' → logprob: -11.901546478271484
    9. '\n' → logprob: -12.276546478271484
    10. '  
' → logprob: -13.276546478271484

Token 837: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011436698958277702
    2. 'print' → logprob: -4.511436462402344
    3. '```' → logprob: -8.761436462402344
    4. ' print' → logprob: -8.886436462402344
    5. '
' → logprob: -9.636436462402344
    6. '   ' → logprob: -10.636436462402344
    7. '<|end|>' → logprob: -12.886436462402344
    8. '``' → logprob: -14.511436462402344
    9. '           ' → logprob: -15.261436462402344
    10. '\' → logprob: -15.261436462402344

Token 838: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.7432603272027336e-06
    2. ' print' → logprob: -13.500001907348633
    3. '```' → logprob: -16.125001907348633
    4. '   ' → logprob: -16.375001907348633
    5. '       ' → logprob: -16.875001907348633
    6. '
' → logprob: -17.875001907348633
    7. '	print' → logprob: -18.625001907348633
    8. '``' → logprob: -20.125001907348633
    9. '#print' → logprob: -21.125001907348633
    10. '\' → logprob: -21.500001907348633

Token 839: '(dist' (ID: 78981)
  Prédit: '(dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dist' → logprob: -1.1472419600977446e-06
    2. '(' → logprob: -13.875000953674316
    3. 'distinct' → logprob: -16.125001907348633
    4. '(div' → logprob: -18.250001907348633
    5. 'dist' → logprob: -19.625001907348633
    6. ' (' → logprob: -20.625001907348633
    7. '()' → logprob: -20.625001907348633
    8. '	dist' → logprob: -21.625001907348633
    9. '(f' → logprob: -21.875001907348633
    10. '(
' → logprob: -22.000001907348633

Token 840: 'inct' (ID: 11251)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.21123000979423523
    2. 'inct' → logprob: -1.9612300395965576
    3. 'ct' → logprob: -3.3362300395965576
    4. 'ict' → logprob: -5.4612298011779785
    5. 't' → logprob: -5.7112298011779785
    6. '(dist' → logprob: -5.8362298011779785
    7. 'ist' → logprob: -6.7112298011779785
    8. 'n' → logprob: -7.3362298011779785
    9. 'distinct' → logprob: -7.4612298011779785
    10. 'int' → logprob: -7.8362298011779785

Token 841: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -5.5577775128767826e-06
    2. '_dist' → logprob: -12.375005722045898
    3. 's' → logprob: -14.125005722045898
    4. 'count' → logprob: -14.875005722045898
    5. 't' → logprob: -16.8750057220459
    6. '_' → logprob: -16.8750057220459
    7. '_counts' → logprob: -18.0000057220459
    8. '_cnt' → logprob: -18.2500057220459
    9. ')' → logprob: -18.5000057220459
    10. 'distinct' → logprob: -18.8750057220459

Token 842: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.704273118884885e-07
    2. '())' → logprob: -15.250000953674316
    3. ')
' → logprob: -15.375000953674316
    4. '()' → logprob: -16.0
    5. ' )' → logprob: -17.875
    6. ')`' → logprob: -19.375
    7. '))' → logprob: -19.5
    8. '`)' → logprob: -19.625
    9. '```' → logprob: -19.625
    10. ')}' → logprob: -19.75


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 840
Tokens correctement prédits (1ère position, stricte): 271
Tokens correctement prédits (1ère position, avec adaptation): 298
Tokens correctement prédits (top 10): 596
Précision stricte (1ère position): 32.26%
Précision adaptée (1ère position): 35.48%
Précision (top 10): 70.95%
================================================================================
