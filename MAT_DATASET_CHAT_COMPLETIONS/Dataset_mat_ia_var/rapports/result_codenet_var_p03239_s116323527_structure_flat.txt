================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:06:43
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n, t = (int(x) for x in input().split())
pc = 1001
i = 0
while i < n:
    cc, ct = (int(x) for x in input().split())
    if ct <= t and cc < pc:
        pc = cc
    i += 1
if pc > 1000:
    print('TLE')
else:
    print(pc)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' t' (ID: 260)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0757545456290245
    2. ',' → logprob: -3.4507546424865723
    3. ' =' → logprob: -3.7007546424865723
    4. '*' → logprob: -5.200754642486572
    5. '+' → logprob: -5.200754642486572
    6. ')' → logprob: -5.825754642486572
    7. ';' → logprob: -7.200754642486572
    8. ' ' → logprob: -7.700754642486572
    9. '.' → logprob: -8.075754165649414
    10. ':' → logprob: -8.825754165649414

Token 4: ' (' (ID: 350)
  Prédit: ' map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.5343184471130371
    2. ' input' → logprob: -1.534318447113037
    3. 'map' → logprob: -2.159318447113037
    4. 'input' → logprob: -2.784318447113037
    5. ' ' → logprob: -4.659318447113037
    6. '0' → logprob: -4.659318447113037
    7. ' n' → logprob: -7.284318447113037
    8. ' int' → logprob: -7.784318447113037
    9. '10' → logprob: -7.784318447113037
    10. 'int' → logprob: -8.284318923950195

Token 5: 'int' (ID: 491)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2041665315628052
    2. 'n' → logprob: -1.4541665315628052
    3. '1' → logprob: -1.5791665315628052
    4. '5' → logprob: -2.3291664123535156
    5. '10' → logprob: -2.8291664123535156
    6. 'int' → logprob: -3.3291664123535156
    7. 'map' → logprob: -3.5791664123535156
    8. ')' → logprob: -3.9541664123535156
    9. '42' → logprob: -4.829166412353516
    10. '100' → logprob: -5.454166412353516

Token 6: '(x' (ID: 4061)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03480781614780426
    2. '(' → logprob: -3.4098079204559326
    3. ',' → logprob: -7.9098076820373535
    4. '(n' → logprob: -8.409808158874512
    5. ')(' → logprob: -9.034808158874512
    6. '[' → logprob: -9.659808158874512
    7. ' ' → logprob: -9.909808158874512
    8. ')n' → logprob: -10.034808158874512
    9. ' )' → logprob: -10.159808158874512
    10. 's' → logprob: -10.409808158874512

Token 7: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011381926015019417
    2. '(x' → logprob: -8.001137733459473
    3. '(input' → logprob: -8.126137733459473
    4. '),' → logprob: -8.751137733459473
    5. 'input' → logprob: -9.251137733459473
    6. '))' → logprob: -9.501137733459473
    7. '(n' → logprob: -9.626137733459473
    8. ')n' → logprob: -10.126137733459473
    9. ')x' → logprob: -10.501137733459473
    10. '(token' → logprob: -11.626137733459473

Token 8: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.348120778799057
    2. 'for' → logprob: -1.4731208086013794
    3. ' for' → logprob: -3.09812068939209
    4. '(x' → logprob: -4.22312068939209
    5. '(input' → logprob: -6.59812068939209
    6. 'x' → logprob: -6.84812068939209
    7. ')x' → logprob: -7.34812068939209
    8. '(n' → logprob: -8.09812068939209
    9. '<|end|>' → logprob: -8.09812068939209
    10. '),' → logprob: -8.22312068939209

Token 9: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.859424352645874
    2. ' x' → logprob: -1.359424352645874
    3. '_' → logprob: -2.484424352645874
    4. ' line' → logprob: -2.984424352645874
    5. 'user' → logprob: -3.234424352645874
    6. 'input' → logprob: -3.484424352645874
    7. 'line' → logprob: -3.609424352645874
    8. ' in' → logprob: -3.859424352645874
    9. 'range' → logprob: -3.859424352645874
    10. 'in' → logprob: -4.484424591064453

Token 10: ' in' (ID: 306)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.2388492375612259
    2. 'input' → logprob: -1.6138492822647095
    3. ' in' → logprob: -4.36384916305542
    4. 'in' → logprob: -8.613849639892578
    5. '=input' → logprob: -8.613849639892578
    6. '(input' → logprob: -8.988849639892578
    7. ' range' → logprob: -9.988849639892578
    8. ')' → logprob: -10.363849639892578
    9. 'range' → logprob: -11.113849639892578
    10. ' raw' → logprob: -11.738849639892578

Token 11: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.38687315583229065
    2. 'input' → logprob: -1.1368731260299683
    3. ' ' → logprob: -14.136873245239258
    4. '(input' → logprob: -14.636873245239258
    5. '=input' → logprob: -15.261873245239258
    6. 'range' → logprob: -15.761873245239258
    7. '```' → logprob: -16.261873245239258
    8. '<input' → logprob: -16.386873245239258
    9. '	input' → logprob: -16.511873245239258
    10. ' range' → logprob: -16.511873245239258

Token 12: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.3894285261631012
    2. '()' → logprob: -1.1394284963607788
    3. '().' → logprob: -6.389428615570068
    4. '(' → logprob: -7.764428615570068
    5. ')' → logprob: -8.01442813873291
    6. '());' → logprob: -10.51442813873291
    7. ' ())' → logprob: -10.63942813873291
    8. '();)' → logprob: -10.88942813873291
    9. '()]' → logprob: -11.38942813873291
    10. '()),' → logprob: -11.38942813873291

Token 13: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0009588662651367486
    2. 'strip' → logprob: -7.0009589195251465
    3. 'rstrip' → logprob: -10.250958442687988
    4. ' split' → logprob: -11.375958442687988
    5. 'read' → logprob: -15.000958442687988
    6. '(split' → logprob: -16.125959396362305
    7. 'spl' → logprob: -16.375959396362305
    8. ')' → logprob: -17.000959396362305
    9. '```' → logprob: -17.500959396362305
    10. ' strip' → logprob: -17.750959396362305

Token 14: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0049790008924901485
    2. ')' → logprob: -6.004979133605957
    3. '()' → logprob: -6.004979133605957
    4. '()))' → logprob: -11.254979133605957
    5. ' ())' → logprob: -11.754979133605957
    6. '))' → logprob: -12.879979133605957
    7. '(' → logprob: -13.004979133605957
    8. '();)' → logprob: -13.129979133605957
    9. '()]' → logprob: -13.254979133605957
    10. '())
' → logprob: -13.629979133605957

Token 15: 'pc' (ID: 6344)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7063758373260498
    2. '\n' → logprob: -0.9563758373260498
    3. '#' → logprob: -3.45637583732605
    4. '\' → logprob: -3.83137583732605
    5. '
' → logprob: -4.456376075744629
    6. 'if' → logprob: -4.706376075744629
    7. '' → logprob: -4.956376075744629
    8. 'a' → logprob: -5.206376075744629
    9. 'i' → logprob: -5.331376075744629
    10. 'n' → logprob: -5.456376075744629

Token 16: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4806640148162842
    2. 'o' → logprob: -1.4806640148162842
    3. ' =' → logprob: -2.980664014816284
    4. 'd' → logprob: -3.230664014816284
    5. '[' → logprob: -4.355664253234863
    6. 's' → logprob: -4.355664253234863
    7. 'a' → logprob: -4.480664253234863
    8. '_' → logprob: -4.730664253234863
    9. 'ount' → logprob: -5.980664253234863
    10. 'i' → logprob: -6.230664253234863

Token 17: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.763356626033783
    2. '[]' → logprob: -1.2633566856384277
    3. '[' → logprob: -2.7633566856384277
    4. ' ' → logprob: -3.2633566856384277
    5. ' [' → logprob: -3.2633566856384277
    6. ' []' → logprob: -3.3883566856384277
    7. '[int' → logprob: -4.138356685638428
    8. '[n' → logprob: -4.388356685638428
    9. '{}' → logprob: -4.388356685638428
    10. 't' → logprob: -4.388356685638428

Token 18: '100' (ID: 1353)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6615135669708252
    2. '[]' → logprob: -1.6615135669708252
    3. '[' → logprob: -1.7865135669708252
    4. '[int' → logprob: -1.7865135669708252
    5. '[t' → logprob: -2.161513566970825
    6. '[n' → logprob: -2.911513566970825
    7. 't' → logprob: -3.536513566970825
    8. 'list' → logprob: -3.661513566970825
    9. 'n' → logprob: -4.661513328552246
    10. '[input' → logprob: -4.786513328552246

Token 19: '1' (ID: 16)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.7831045389175415
    2. '*' → logprob: -1.5331045389175415
    3. '0' → logprob: -1.7831045389175415
    4. ' *' → logprob: -2.908104419708252
    5. ' ' → logprob: -3.283104419708252
    6. '.' → logprob: -4.158104419708252
    7. ',' → logprob: -4.658104419708252
    8. ')' → logprob: -4.908104419708252
    9. '#' → logprob: -5.533104419708252
    10. '**' → logprob: -5.658104419708252

Token 20: '
' (ID: 198)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.9677191972732544
    2. '
' → logprob: -1.4677191972732544
    3. ' ' → logprob: -2.842719078063965
    4. '+' → logprob: -2.967719078063965
    5. 'for' → logprob: -2.967719078063965
    6. '<|end|>' → logprob: -3.092719078063965
    7. '.' → logprob: -3.592719078063965
    8. ')' → logprob: -3.717719078063965
    9. '0' → logprob: -3.967719078063965
    10. ' for' → logprob: -4.217719078063965

Token 21: 'i' (ID: 72)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8964292407035828
    2. '*' → logprob: -1.1464293003082275
    3. '+' → logprob: -3.1464293003082275
    4. ' for' → logprob: -3.2714293003082275
    5. '#' → logprob: -3.8964293003082275
    6. ')' → logprob: -4.021429061889648
    7. 'if' → logprob: -4.271429061889648
    8. '%' → logprob: -4.271429061889648
    9. 'while' → logprob: -4.396429061889648
    10. '-' → logprob: -4.396429061889648

Token 22: ' =' (ID: 314)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.2905106246471405
    2. '=' → logprob: -2.290510654449463
    3. 'n' → logprob: -2.415510654449463
    4. ' =' → logprob: -3.040510654449463
    5. '+' → logprob: -5.665510654449463
    6. 'nd' → logprob: -6.040510654449463
    7. 's' → logprob: -6.290510654449463
    8. 'd' → logprob: -6.290510654449463
    9. 'nt' → logprob: -6.540510654449463
    10. '_' → logprob: -7.790510654449463

Token 23: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2708068788051605
    2. '0' → logprob: -1.520806908607483
    3. '1' → logprob: -4.270806789398193
    4. ' pc' → logprob: -6.145806789398193
    5. 'pc' → logprob: -6.895806789398193
    6. '2' → logprob: -7.645806789398193
    7. ' n' → logprob: -8.270807266235352
    8. ' t' → logprob: -8.645807266235352
    9. '100' → logprob: -8.645807266235352
    10. 'n' → logprob: -8.895807266235352

Token 24: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.18012133240699768
    2. '1' → logprob: -1.9301213026046753
    3. 'pc' → logprob: -4.680121421813965
    4. '2' → logprob: -5.680121421813965
    5. ' ' → logprob: -5.930121421813965
    6. '100' → logprob: -6.180121421813965
    7. 'n' → logprob: -6.930121421813965
    8. 't' → logprob: -7.680121421813965
    9. ' pc' → logprob: -8.680121421813965
    10. '10' → logprob: -8.930121421813965

Token 25: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.7976161241531372
    2. ' while' → logprob: -1.2976161241531372
    3. '
' → logprob: -1.4226161241531372
    4. '<|end|>' → logprob: -4.172616004943848
    5. ' ' → logprob: -4.922616004943848
    6. ' 
' → logprob: -6.172616004943848
    7. '```' → logprob: -6.297616004943848
    8. '' → logprob: -6.797616004943848
    9. '\n' → logprob: -6.922616004943848
    10. 'w' → logprob: -6.922616004943848

Token 26: 'while' (ID: 7032)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.7250577211380005
    2. 'while' → logprob: -0.7250577211380005
    3. ' ' → logprob: -3.600057601928711
    4. '+' → logprob: -7.100057601928711
    5. ')' → logprob: -7.350057601928711
    6. ',' → logprob: -7.600057601928711
    7. '<|end|>' → logprob: -7.600057601928711
    8. 's' → logprob: -7.850057601928711
    9. 'w' → logprob: -8.975057601928711
    10. 'for' → logprob: -9.350057601928711

Token 27: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.009291441179811954
    2. 'i' → logprob: -4.759291648864746
    3. ' ' → logprob: -7.384291648864746
    4. ' n' → logprob: -10.759291648864746
    5. ' ' → logprob: -11.634291648864746
    6. ' pc' → logprob: -11.759291648864746
    7. '(i' → logprob: -12.259291648864746
    8. ' t' → logprob: -12.759291648864746
    9. ' (' → logprob: -13.259291648864746
    10. 'n' → logprob: -13.509291648864746

Token 28: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.0071277194656431675
    2. '<' → logprob: -5.00712776184082
    3. ' <=' → logprob: -7.88212776184082
    4. ' ' → logprob: -10.75712776184082
    5. ' <
' → logprob: -12.50712776184082
    6. '<n' → logprob: -13.25712776184082
    7. '<=' → logprob: -13.63212776184082
    8. ' \<' → logprob: -14.00712776184082
    9. ' !=' → logprob: -14.00712776184082
    10. '<|end|>' → logprob: -14.13212776184082

Token 29: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.9155773520469666
    2. 'n' → logprob: -1.0405774116516113
    3. ' t' → logprob: -2.0405774116516113
    4. 't' → logprob: -2.1655774116516113
    5. ' ' → logprob: -6.415577411651611
    6. '100' → logprob: -9.915576934814453
    7. 'nt' → logprob: -10.040576934814453
    8. ' pc' → logprob: -10.415576934814453
    9. 'pc' → logprob: -11.040576934814453
    10. ' ' → logprob: -11.540576934814453

Token 30: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.026417799293994904
    2. ' :' → logprob: -3.6514177322387695
    3. ':
' → logprob: -9.90141773223877
    4. '+:' → logprob: -11.02641773223877
    5. ' :
' → logprob: -11.40141773223877
    6. ':**' → logprob: -11.65141773223877
    7. '   ' → logprob: -11.90141773223877
    8. ' ' → logprob: -12.02641773223877
    9. ':i' → logprob: -12.27641773223877
    10. '+' → logprob: -12.52641773223877

Token 31: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4317511320114136
    2. ' ' → logprob: -1.5567511320114136
    3. '    ' → logprob: -2.681751251220703
    4. ' i' → logprob: -3.681751251220703
    5. ' print' → logprob: -5.181751251220703
    6. '    
' → logprob: -5.181751251220703
    7. ' ,' → logprob: -5.306751251220703
    8. ' 
' → logprob: -5.431751251220703
    9. ' pc' → logprob: -5.556751251220703
    10. '     
' → logprob: -5.681751251220703

Token 32: ' cc' (ID: 22988)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.42540836334228516
    2. '   ' → logprob: -2.925408363342285
    3. ' t' → logprob: -3.050408363342285
    4. 't' → logprob: -3.050408363342285
    5. ' p' → logprob: -3.425408363342285
    6. ' pc' → logprob: -3.425408363342285
    7. ' 
' → logprob: -3.800408363342285
    8. ' s' → logprob: -4.425408363342285
    9. ' input' → logprob: -4.425408363342285
    10. ' print' → logprob: -4.550408363342285

Token 33: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.13866616785526276
    2. '=' → logprob: -2.2636661529541016
    3. ' ' → logprob: -5.138666152954102
    4. ',' → logprob: -5.138666152954102
    5. '   ' → logprob: -5.388666152954102
    6. ' +=' → logprob: -5.763666152954102
    7. '+=' → logprob: -7.263666152954102
    8. '  ' → logprob: -7.388666152954102
    9. '+' → logprob: -7.638666152954102
    10. 'ode' → logprob: -7.638666152954102

Token 34: ' ct' (ID: 40541)
  Prédit: ' tc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' tc' → logprob: -1.918915033340454
    2. ' pc' → logprob: -2.293915033340454
    3. 'tc' → logprob: -2.668915033340454
    4. ' mc' → logprob: -3.418915033340454
    5. ' t' → logprob: -3.481415033340454
    6. ' p' → logprob: -3.481415033340454
    7. ' sc' → logprob: -3.543915033340454
    8. '_' → logprob: -3.668915033340454
    9. ' dc' → logprob: -3.668915033340454
    10. 'pc' → logprob: -3.731415033340454

Token 35: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759870409965515
    2. ' =' → logprob: -0.8259870409965515
    3. ',' → logprob: -10.075986862182617
    4. ' ' → logprob: -12.825986862182617
    5. ')' → logprob: -13.450986862182617
    6. 'okens' → logprob: -14.950986862182617
    7. ')=' → logprob: -15.575986862182617
    8. 's' → logprob: -15.575986862182617
    9. '＝' → logprob: -16.138486862182617
    10. '=int' → logprob: -16.388486862182617

Token 36: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.03425607830286026
    2. '(input' → logprob: -4.0342559814453125
    3. '(int' → logprob: -4.2842559814453125
    4. ' map' → logprob: -7.4092559814453125
    5. '(map' → logprob: -7.5342559814453125
    6. ' input' → logprob: -7.9092559814453125
    7. '[int' → logprob: -8.784255981445312
    8. 'input' → logprob: -9.034255981445312
    9. 'map' → logprob: -9.159255981445312
    10. ' ' → logprob: -9.284255981445312

Token 37: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.001281303120777011
    2. '(int' → logprob: -7.251281261444092
    3. ' int' → logprob: -7.751281261444092
    4. '[int' → logprob: -9.50128173828125
    5. 'str' → logprob: -10.62628173828125
    6. 'map' → logprob: -11.37628173828125
    7. 'input' → logprob: -11.75128173828125
    8. '   ' → logprob: -11.75128173828125
    9. 'float' → logprob: -12.25128173828125
    10. ' ' → logprob: -13.00128173828125

Token 38: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -9.698698704596609e-05
    2. '(' → logprob: -9.375097274780273
    3. ')' → logprob: -12.000097274780273
    4. '()' → logprob: -12.500097274780273
    5. '(y' → logprob: -14.500097274780273
    6. 'x' → logprob: -14.750097274780273
    7. '(s' → logprob: -14.875097274780273
    8. '(code' → logprob: -15.500097274780273
    9. '(a' → logprob: -15.875097274780273
    10. '(token' → logprob: -16.125097274780273

Token 39: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1610586941242218
    2. '()' → logprob: -1.9110586643218994
    3. 'for' → logprob: -7.6610589027404785
    4. ' for' → logprob: -8.66105842590332
    5. '(x' → logprob: -8.66105842590332
    6. ' ' → logprob: -12.03605842590332
    7. '   ' → logprob: -12.66105842590332
    8. '())' → logprob: -13.16105842590332
    9. ' )' → logprob: -13.53605842590332
    10. '```' → logprob: -14.16105842590332

Token 40: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.40301021933555603
    2. ')' → logprob: -1.4030102491378784
    3. 'for' → logprob: -2.653010129928589
    4. '()' → logprob: -4.528010368347168
    5. '<|end|>' → logprob: -5.653010368347168
    6. '<|end|>' → logprob: -7.028010368347168
    7. '())' → logprob: -10.153010368347168
    8. ' )' → logprob: -10.153010368347168
    9. '(x' → logprob: -10.528010368347168
    10. '...' → logprob: -11.153010368347168

Token 41: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.5967902541160583
    2. ' input' → logprob: -1.4717903137207031
    3. 'input' → logprob: -2.221790313720703
    4. 'x' → logprob: -2.346790313720703
    5. '<|end|>' → logprob: -4.721790313720703
    6. ' in' → logprob: -5.721790313720703
    7. 'in' → logprob: -6.596790313720703
    8. ')' → logprob: -7.471790313720703
    9. '<|end|>' → logprob: -8.221790313720703
    10. ' ' → logprob: -8.346790313720703

Token 42: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.14299499988555908
    2. 'in' → logprob: -2.0179948806762695
    3. ')' → logprob: -9.26799488067627
    4. ' ' → logprob: -9.76799488067627
    5. '<|end|>' → logprob: -9.76799488067627
    6. 'input' → logprob: -10.64299488067627
    7. 'n' → logprob: -11.14299488067627
    8. 's' → logprob: -11.14299488067627
    9. '_' → logprob: -11.26799488067627
    10. '  ' → logprob: -11.89299488067627

Token 43: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.2811523377895355
    2. 'input' → logprob: -1.406152367591858
    3. '(input' → logprob: -14.656152725219727
    4. ' ' → logprob: -14.781152725219727
    5. ')' → logprob: -15.156152725219727
    6. '=input' → logprob: -15.281152725219727
    7. '<input' → logprob: -15.781152725219727
    8. '	input' → logprob: -16.031152725219727
    9. ' ' → logprob: -16.406152725219727
    10. '[input' → logprob: -16.843652725219727

Token 44: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0815451368689537
    2. '()' → logprob: -2.581545114517212
    3. '())' → logprob: -5.956545352935791
    4. ')' → logprob: -10.331544876098633
    5. '(' → logprob: -11.581544876098633
    6. '()).' → logprob: -12.456544876098633
    7. '()))' → logprob: -12.581544876098633
    8. '());' → logprob: -12.706544876098633
    9. '()>' → logprob: -13.206544876098633
    10. '();)' → logprob: -13.456544876098633

Token 45: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.5048530030981055e-06
    2. 'strip' → logprob: -14.250001907348633
    3. ' split' → logprob: -14.375001907348633
    4. ')' → logprob: -16.125001907348633
    5. '(split' → logprob: -17.000001907348633
    6. 'rstrip' → logprob: -17.125001907348633
    7. 'spl' → logprob: -17.375001907348633
    8. 'plit' → logprob: -17.375001907348633
    9. '()' → logprob: -18.375001907348633
    10. '```' → logprob: -18.875001907348633

Token 46: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.021572241559624672
    2. '()' → logprob: -4.021572113037109
    3. ')' → logprob: -5.771572113037109
    4. '()))' → logprob: -8.27157211303711
    5. '))' → logprob: -10.39657211303711
    6. '())
' → logprob: -11.39657211303711
    7. ' ())' → logprob: -13.64657211303711
    8. '()),' → logprob: -14.52157211303711
    9. '()
' → logprob: -14.64657211303711
    10. '();)' → logprob: -14.77157211303711

Token 47: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.056982677429914474
    2. '
' → logprob: -3.8069827556610107
    3. '    
' → logprob: -4.431982517242432
    4. '```' → logprob: -4.806982517242432
    5. '    ' → logprob: -5.681982517242432
    6. '\n' → logprob: -6.306982517242432
    7. '   
' → logprob: -6.806982517242432
    8. '  
' → logprob: -6.931982517242432
    9. '     
' → logprob: -7.056982517242432
    10. ')' → logprob: -7.306982517242432

Token 48: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7569345831871033
    2. 'if' (adapté à ' if') → logprob: -2.131934642791748
    3. ' ' → logprob: -2.506934642791748
    4. ' 
' → logprob: -2.506934642791748
    5. ' if' → logprob: -2.506934642791748
    6. '
' → logprob: -3.256934642791748
    7. '    ' → logprob: -3.381934642791748
    8. '    
' → logprob: -3.381934642791748
    9. 'i' → logprob: -3.881934642791748
    10. '<|end|>' → logprob: -5.006934642791748

Token 49: ' ct' (ID: 40541)
  Prédit: ' ct'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ct' → logprob: -0.7033522129058838
    2. ' cc' → logprob: -1.2033522129058838
    3. ' pc' → logprob: -1.7033522129058838
    4. ' t' → logprob: -4.203351974487305
    5. 'cc' → logprob: -6.203351974487305
    6. 'ct' → logprob: -6.203351974487305
    7. ' ' → logprob: -6.703351974487305
    8. ' ' → logprob: -7.453351974487305
    9. 't' → logprob: -7.828351974487305
    10. 'pc' → logprob: -7.953351974487305

Token 50: ' <=' (ID: 5017)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.7497705817222595
    2. ' <=' → logprob: -1.3747706413269043
    3. ' <' → logprob: -1.7497706413269043
    4. ' >=' → logprob: -3.1247706413269043
    5. ' ==' → logprob: -3.9997706413269043
    6. '>' → logprob: -3.9997706413269043
    7. ' ' → logprob: -4.749770641326904
    8. '<' → logprob: -5.249770641326904
    9. '<=' → logprob: -6.374770641326904
    10. ' *' → logprob: -6.499770641326904

Token 51: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.011325323022902012
    2. ' t' → logprob: -4.511325359344482
    3. 'pc' → logprob: -8.386324882507324
    4. '100' → logprob: -10.761324882507324
    5. ' pc' → logprob: -11.511324882507324
    6. '   ' → logprob: -12.011324882507324
    7. 'tc' → logprob: -12.136324882507324
    8. ' ' → logprob: -12.511324882507324
    9. '	t' → logprob: -14.636324882507324
    10. '0' → logprob: -14.761324882507324

Token 52: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.022439759224653244
    2. ' and' → logprob: -3.89743971824646
    3. ':
' → logprob: -7.272439956665039
    4. ' :' → logprob: -7.397439956665039
    5. 'and' → logprob: -8.022439956665039
    6. '   ' → logprob: -8.897439956665039
    7. '       ' → logprob: -10.147439956665039
    8. ' or' → logprob: -11.147439956665039
    9. '*' → logprob: -11.397439956665039
    10. '):' → logprob: -11.647439956665039

Token 53: ' cc' (ID: 22988)
  Prédit: ' cc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cc' → logprob: -0.19387754797935486
    2. 'cc' → logprob: -2.0688774585723877
    3. ' pc' → logprob: -3.1938774585723877
    4. 'pc' → logprob: -5.068877696990967
    5. '(cc' → logprob: -6.693877696990967
    6. ' (' → logprob: -7.943877696990967
    7. ' ct' → logprob: -8.318877220153809
    8. ' ' → logprob: -9.068877220153809
    9. ' i' → logprob: -9.068877220153809
    10. '(' → logprob: -9.318877220153809

Token 54: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.21514727175235748
    2. ' <=' → logprob: -1.7151472568511963
    3. ' ' → logprob: -4.965147495269775
    4. '<' → logprob: -5.340147495269775
    5. ' ==' → logprob: -7.590147495269775
    6. '<=' → logprob: -7.715147495269775
    7. ' >=' → logprob: -8.465147018432617
    8. '<|end|>' → logprob: -8.715147018432617
    9. ' >' → logprob: -8.840147018432617
    10. ' *' → logprob: -9.465147018432617

Token 55: ' pc' (ID: 18736)
  Prédit: 'pc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pc' → logprob: -0.5231711864471436
    2. ' pc' → logprob: -0.8981711864471436
    3. '=' → logprob: -11.148171424865723
    4. '	pc' → logprob: -11.148171424865723
    5. '(pc' → logprob: -11.898171424865723
    6. '_pc' → logprob: -13.148171424865723
    7. ' ' → logprob: -13.148171424865723
    8. 'p' → logprob: -13.148171424865723
    9. '.pc' → logprob: -13.398171424865723
    10. ' ' → logprob: -13.898171424865723

Token 56: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0007150543970055878
    2. ':
' → logprob: -7.625715255737305
    3. '):' → logprob: -8.625715255737305
    4. ' :' → logprob: -10.375715255737305
    5. '       ' → logprob: -11.875715255737305
    6. '   ' → logprob: -12.375715255737305
    7. ')' → logprob: -13.625715255737305
    8. '):
' → logprob: -14.000715255737305
    9. ',' → logprob: -14.375715255737305
    10. ' and' → logprob: -14.750715255737305

Token 57: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24051499366760254
    2. '<|end|>' → logprob: -2.3655149936676025
    3. '
' → logprob: -3.1155149936676025
    4. '   ' → logprob: -3.4905149936676025
    5. ':' → logprob: -4.615514755249023
    6. '    ' → logprob: -4.990514755249023
    7. 'pc' → logprob: -5.365514755249023
    8. '        
' → logprob: -5.490514755249023
    9. ' ' → logprob: -5.490514755249023
    10. '_' → logprob: -5.990514755249023

Token 58: ' pc' (ID: 18736)
  Prédit: ' pc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pc' → logprob: -0.3954315483570099
    2. 'pc' (adapté à ' pc') → logprob: -1.1454315185546875
    3. ' 
' → logprob: -5.5204315185546875
    4. '	pc' → logprob: -6.3954315185546875
    5. '_pc' → logprob: -7.0204315185546875
    6. '
' → logprob: -7.3954315185546875
    7. '(pc' → logprob: -7.7704315185546875
    8. '    
' → logprob: -8.270431518554688
    9. '   ' → logprob: -8.770431518554688
    10. '.pc' → logprob: -9.395431518554688

Token 59: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.474077433347702
    2. '=' → logprob: -0.9740774631500244
    3. ',' → logprob: -15.474077224731445
    4. ' ' → logprob: -16.224077224731445
    5. '＝' → logprob: -16.849077224731445
    6. '=

' → logprob: -17.599077224731445
    7. ' =
' → logprob: -17.724077224731445
    8. ' =)' → logprob: -18.349077224731445
    9. '=}' → logprob: -18.599077224731445
    10. '=cv' → logprob: -18.599077224731445

Token 60: ' cc' (ID: 22988)
  Prédit: 'cc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' → logprob: -0.029753733426332474
    2. ' cc' → logprob: -3.5297536849975586
    3. '	cc' → logprob: -12.904753684997559
    4. 'ct' → logprob: -15.029753684997559
    5. '   ' → logprob: -15.654753684997559
    6. '_cc' → logprob: -16.654754638671875
    7. ' ' → logprob: -16.904754638671875
    8. '(cc' → logprob: -17.154754638671875
    9. ' ' → logprob: -17.404754638671875
    10. 'c' → logprob: -18.029754638671875

Token 61: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25882139801979065
    2. '
' → logprob: -1.6338213682174683
    3. '    
' → logprob: -4.383821487426758
    4. 'i' → logprob: -4.758821487426758
    5. ' i' → logprob: -5.133821487426758
    6. '  
' → logprob: -6.633821487426758
    7. ' 
' → logprob: -6.633821487426758
    8. '	i' → logprob: -7.258821487426758
    9. '   
' → logprob: -7.383821487426758
    10. '
' → logprob: -7.508821487426758

Token 62: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.738608181476593
    2. ' 
' → logprob: -1.7386081218719482
    3. '   ' → logprob: -2.1136081218719482
    4. '  
' → logprob: -2.4886081218719482
    5. '    
' → logprob: -2.7386081218719482
    6. 'i' → logprob: -3.6136081218719482
    7. '   
' → logprob: -3.8636081218719482
    8. '\n' → logprob: -4.363608360290527
    9. ' i' → logprob: -4.613608360290527
    10. ' ' → logprob: -6.363608360290527

Token 63: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.11485591530799866
    2. '   ' → logprob: -2.239856004714966
    3. ' i' → logprob: -6.864855766296387
    4. '
' → logprob: -8.114855766296387
    5. '	i' → logprob: -8.114855766296387
    6. '\n' → logprob: -8.614855766296387
    7. '    
' → logprob: -9.239855766296387
    8. '```' → logprob: -10.489855766296387
    9. '\' → logprob: -10.864855766296387
    10. 'n' → logprob: -11.489855766296387

Token 64: ' +=' (ID: 2757)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03499132767319679
    2. '+=' → logprob: -3.4099912643432617
    3. ' +=' → logprob: -6.659991264343262
    4. ' +' → logprob: -10.159991264343262
    5. '++' → logprob: -11.659991264343262
    6. '=' → logprob: -12.034991264343262
    7. '<|end|>' → logprob: -12.159991264343262
    8. ' ' → logprob: -13.659991264343262
    9. '+++' → logprob: -13.659991264343262
    10. '+='' → logprob: -13.784991264343262

Token 65: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0040785204619169235
    2. ' ' → logprob: -5.504078388214111
    3. '   ' → logprob: -16.504077911376953
    4. '```' → logprob: -18.504077911376953
    5. ' ' → logprob: -18.754077911376953
    6. '+' → logprob: -19.566577911376953
    7. '  ' → logprob: -19.879077911376953
    8. '    ' → logprob: -20.129077911376953
    9. '１' → logprob: -20.629077911376953
    10. '0' → logprob: -20.691577911376953

Token 66: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -13.625000953674316
    3. '   ' → logprob: -17.375001907348633
    4. '```' → logprob: -17.625001907348633
    5. '`' → logprob: -19.750001907348633
    6. '0' → logprob: -19.937501907348633
    7. '  ' → logprob: -20.250001907348633
    8. '１' → logprob: -20.312501907348633
    9. '१' → logprob: -20.562501907348633
    10. '۱' → logprob: -20.625001907348633

Token 67: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.23423822224140167
    2. '
' → logprob: -1.6092382669448853
    3. '<|end|>' → logprob: -4.984238147735596
    4. '```' → logprob: -7.609238147735596
    5. '\n' → logprob: -8.359238624572754
    6. '#' → logprob: -8.609238624572754
    7. '  
' → logprob: -8.859238624572754
    8. ' 
' → logprob: -8.859238624572754
    9. 'p' → logprob: -9.234238624572754
    10. ')' → logprob: -9.234238624572754

Token 68: 'if' (ID: 366)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0010631787590682507
    2. '
' → logprob: -7.376063346862793
    3. '<|end|>' → logprob: -9.126063346862793
    4. '```' → logprob: -9.251063346862793
    5. 'if' → logprob: -9.626063346862793
    6. 'pr' → logprob: -9.751063346862793
    7. ' print' → logprob: -10.251063346862793
    8. 'p' → logprob: -10.376063346862793
    9. 'pc' → logprob: -11.751063346862793
    10. ' 
' → logprob: -11.751063346862793

Token 69: ' pc' (ID: 18736)
  Prédit: ' pc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pc' → logprob: -0.20186050236225128
    2. 'pc' → logprob: -1.7018605470657349
    3. ' t' → logprob: -8.326860427856445
    4. 't' → logprob: -9.201860427856445
    5. '(pc' → logprob: -10.076860427856445
    6. '	pc' → logprob: -10.826860427856445
    7. ' ' → logprob: -10.951860427856445
    8. ' ' → logprob: -11.576860427856445
    9. '   ' → logprob: -12.451860427856445
    10. '  ' → logprob: -13.201860427856445

Token 70: ' >' (ID: 1424)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5319996476173401
    2. '==' → logprob: -0.9069996476173401
    3. '<' → logprob: -6.031999588012695
    4. '<=' → logprob: -6.156999588012695
    5. ' <=' → logprob: -6.281999588012695
    6. ' <' → logprob: -6.656999588012695
    7. '!=' → logprob: -7.656999588012695
    8. ' !=' → logprob: -7.781999588012695
    9. '```' → logprob: -9.781999588012695
    10. '100' → logprob: -10.031999588012695

Token 71: ' ' (ID: 220)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.47470128536224365
    2. '100' → logprob: -0.9747012853622437
    3. ' ' → logprob: -8.599700927734375
    4. '10' → logprob: -8.724700927734375
    5. ' t' → logprob: -8.974700927734375
    6. '999' → logprob: -9.349700927734375
    7. '1' → logprob: -9.974700927734375
    8. 'int' → logprob: -13.349700927734375
    9. '   ' → logprob: -13.599700927734375
    10. '0' → logprob: -13.724700927734375

Token 72: '100' (ID: 1353)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.3879804313182831
    2. '100' → logprob: -1.1379804611206055
    3. '999' → logprob: -7.0129804611206055
    4. '10' → logprob: -9.137980461120605
    5. ' t' → logprob: -10.387980461120605
    6. '1' → logprob: -11.262980461120605
    7. ' ' → logprob: -11.512980461120605
    8. '```' → logprob: -12.012980461120605
    9. '`t' → logprob: -12.012980461120605
    10. '900' → logprob: -12.262980461120605

Token 73: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4974866644479334e-05
    2. '1' → logprob: -12.000015258789062
    3. ' ' → logprob: -12.625015258789062
    4. ':' → logprob: -13.812515258789062
    5. '>' → logprob: -14.312515258789062
    6. '<|end|>' → logprob: -14.375015258789062
    7. '2' → logprob: -14.500015258789062
    8. '۰' → logprob: -15.000015258789062
    9. '9' → logprob: -15.312515258789062
    10. ')' → logprob: -15.500015258789062

Token 74: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005256645381450653
    2. ':
' → logprob: -5.255256652832031
    3. ':

' → logprob: -12.255256652832031
    4. 'print' → logprob: -12.380256652832031
    5. ':
' → logprob: -12.380256652832031
    6. ':return' → logprob: -12.755256652832031
    7. '0' → logprob: -13.380256652832031
    8. ' :' → logprob: -14.005256652832031
    9. ' and' → logprob: -14.630256652832031
    10. ',' → logprob: -15.130256652832031

Token 75: '   ' (ID: 271)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3142780363559723
    2. 'print' → logprob: -1.31427800655365
    3. '-print' → logprob: -8.064277648925781
    4. ' print' → logprob: -8.189277648925781
    5. '100' → logprob: -9.064277648925781
    6. ' -' → logprob: -9.064277648925781
    7. '   ' → logprob: -9.689277648925781
    8. 'Print' → logprob: -10.939277648925781
    9. '```' → logprob: -11.189277648925781
    10. '\' → logprob: -11.439277648925781

Token 76: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0002570481738075614
    2. '-' → logprob: -9.12525749206543
    3. 'pr' → logprob: -9.50025749206543
    4. ' print' → logprob: -10.00025749206543
    5. '   ' → logprob: -12.00025749206543
    6. 'printf' → logprob: -12.50025749206543
    7. 'prin' → logprob: -12.50025749206543
    8. 'prit' → logprob: -12.62525749206543
    9. 'println' → logprob: -12.87525749206543
    10. '-print' → logprob: -13.37525749206543

Token 77: '('' (ID: 706)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.15500864386558533
    2. '(' → logprob: -2.280008554458618
    3. '("' → logprob: -3.280008554458618
    4. '-' → logprob: -6.280008792877197
    5. '("-' → logprob: -6.905008792877197
    6. '('' → logprob: -7.405008792877197
    7. '()' → logprob: -9.780008316040039
    8. '(None' → logprob: -10.530008316040039
    9. '(":' → logprob: -10.655008316040039
    10. '0' → logprob: -11.155008316040039

Token 78: 'T' (ID: 51)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0024310708977282047
    2. 'T' → logprob: -6.1274309158325195
    3. 'Impossible' → logprob: -9.50243091583252
    4. '-T' → logprob: -9.75243091583252
    5. ':T' → logprob: -10.25243091583252
    6. ':' → logprob: -11.12743091583252
    7. '"T' → logprob: -11.87743091583252
    8. '`' → logprob: -12.00243091583252
    9. ''T' → logprob: -12.12743091583252
    10. '```' → logprob: -12.50243091583252

Token 79: 'LE' (ID: 1400)
  Prédit: 'LE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LE' → logprob: -0.10670312494039536
    2. 'oo' → logprob: -2.856703042984009
    3. 'ime' → logprob: -4.231703281402588
    4. 'I' → logprob: -4.731703281402588
    5. 'IME' → logprob: -5.231703281402588
    6. 'im' → logprob: -5.981703281402588
    7. 'o' → logprob: -6.106703281402588
    8. 'E' → logprob: -6.481703281402588
    9. 'le' → logprob: -6.981703281402588
    10. 'L' → logprob: -7.106703281402588

Token 80: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.1030099093914032
    2. ')' → logprob: -2.6030099391937256
    3. '')
' → logprob: -3.8530099391937256
    4. '')
' → logprob: -6.9780097007751465
    5. 'else' → logprob: -7.2280097007751465
    6. ')
' → logprob: -7.4780097007751465
    7. '")' → logprob: -8.978010177612305
    8. ')')
' → logprob: -9.728010177612305
    9. ')
' → logprob: -10.603010177612305
    10. 'O' → logprob: -10.978010177612305

Token 81: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -3.214019307051785e-05
    2. ' else' → logprob: -10.375032424926758
    3. 'elif' → logprob: -15.000032424926758
    4. '   ' → logprob: -15.375032424926758
    5. '```' → logprob: -16.250032424926758
    6. '	else' → logprob: -17.125032424926758
    7. 'elses' → logprob: -17.250032424926758
    8. 'el' → logprob: -17.250032424926758
    9. 'els' → logprob: -17.375032424926758
    10. '    
' → logprob: -18.000032424926758

Token 82: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.015099780634045601
    2. '   ' → logprob: -4.265100002288818
    3. ':
' → logprob: -7.015100002288818
    4. '       ' → logprob: -11.39009952545166
    5. 'print' → logprob: -11.76509952545166
    6. '    ' → logprob: -12.01509952545166
    7. ' print' → logprob: -12.26509952545166
    8. ' :' → logprob: -13.39009952545166
    9. '  ' → logprob: -13.51509952545166
    10. '    
' → logprob: -14.26509952545166

Token 83: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0005987849435769022
    2. ' print' → logprob: -7.500598907470703
    3. '   ' → logprob: -10.000598907470703
    4. '```' → logprob: -15.500598907470703
    5. 'pc' → logprob: -16.000598907470703
    6. 'pr' → logprob: -16.750598907470703
    7. '	print' → logprob: -17.250598907470703
    8. ' ' → logprob: -17.750598907470703
    9. '(print' → logprob: -18.750598907470703
    10. '  ' → logprob: -19.250598907470703

Token 84: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.0280383548888494e-06
    2. ' print' → logprob: -14.250000953674316
    3. 'pr' → logprob: -14.875000953674316
    4. '   ' → logprob: -18.250001907348633
    5. 'prin' → logprob: -18.250001907348633
    6. '```' → logprob: -18.500001907348633
    7. 'pc' → logprob: -19.125001907348633
    8. 'prit' → logprob: -20.250001907348633
    9. '	print' → logprob: -20.500001907348633
    10. 'printf' → logprob: -20.750001907348633

Token 85: '(pc' (ID: 103264)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4811854362487793
    2. '(pc' → logprob: -0.9811854362487793
    3. '('' → logprob: -4.981185436248779
    4. '(f' → logprob: -9.981185913085938
    5. '(p' → logprob: -10.231185913085938
    6. '('(' → logprob: -10.356185913085938
    7. '("("' → logprob: -10.606185913085938
    8. '(ps' → logprob: -11.106185913085938
    9. ' (' → logprob: -11.981185913085938
    10. '(pi' → logprob: -12.106185913085938

Token 86: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2664456789934775e-06
    2. '')' → logprob: -14.500000953674316
    3. ' )' → logprob: -14.750000953674316
    4. '))' → logprob: -16.125001907348633
    5. ')
' → logprob: -16.125001907348633
    6. '`)' → logprob: -17.500001907348633
    7. ')`' → logprob: -18.250001907348633
    8. '}' → logprob: -19.250001907348633
    9. '")' → logprob: -19.375001907348633
    10. ')#' → logprob: -19.500001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 84
Tokens correctement prédits (1ère position, stricte): 32
Tokens correctement prédits (1ère position, avec adaptation): 35
Tokens correctement prédits (top 10): 75
Précision stricte (1ère position): 38.10%
Précision adaptée (1ère position): 41.67%
Précision (top 10): 89.29%
================================================================================
