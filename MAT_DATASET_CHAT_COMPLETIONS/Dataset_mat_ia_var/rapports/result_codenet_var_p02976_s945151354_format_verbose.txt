================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:51:59
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

from collections import deque

read_input_line = sys.stdin.readline

sys.setrecursionlimit(10**6)

number_of_nodes, number_of_edges = map(int, read_input_line().split())

if number_of_edges % 2 == 1:
    print(-1)
    exit()

edge_list = [ [int(vertex) for vertex in read_input_line().split()] for _ in range(number_of_edges) ]

adjacency_list = [[] for _ in range(number_of_nodes + 1)]

for node_a, node_b in edge_list:
    adjacency_list[node_a].append(node_b)
    adjacency_list[node_b].append(node_a)

spanning_tree_edges = [ set() for _ in range(number_of_nodes + 1) ]
visited_nodes = [False] * (number_of_nodes + 1)
visited_nodes[1] = True

bfs_queue = deque([1])

while bfs_queue:
    current_node = bfs_queue.popleft()
    for neighbor_node in adjacency_list[current_node]:
        if visited_nodes[neighbor_node]:
            continue
        visited_nodes[neighbor_node] = True
        spanning_tree_edges[current_node].add(neighbor_node)
        spanning_tree_edges[neighbor_node].add(current_node)
        bfs_queue.append(neighbor_node)

node_out_degrees = [0] * (number_of_nodes + 1)
edge_orientations = []

for node_a, node_b in edge_list:
    if node_b in spanning_tree_edges[node_a]:
        continue
    edge_orientations.append('{} {}'.format(node_a, node_b))
    node_out_degrees[node_a] += 1

def assign_edge_directions(current_node = 1, parent_node = None):
    for adjacent_node in spanning_tree_edges[current_node]:
        if adjacent_node == parent_node:
            continue
        assign_edge_directions(adjacent_node, current_node)
        if node_out_degrees[adjacent_node] % 2 == 0:
            edge_orientations.append('{} {}'.format(current_node, adjacent_node))
            node_out_degrees[current_node] += 1
        else:
            edge_orientations.append('{} {}'.format(adjacent_node, current_node))
            node_out_degrees[adjacent_node] += 1

assign_edge_directions()

print('\n'.join(edge_orientations))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'from' (ID: 2845)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.025130433961749077
    2. '\n' → logprob: -4.400130271911621
    3. 'import' → logprob: -5.275130271911621
    4. '<|end|>' → logprob: -5.900130271911621
    5. '\' → logprob: -6.150130271911621
    6. 'newline' → logprob: -7.900130271911621
    7. '' → logprob: -8.025130271911621
    8. '
' → logprob: -8.400130271911621
    9. ';' → logprob: -8.525130271911621
    10. ',' → logprob: -8.525130271911621

Token 4: ' collections' (ID: 22690)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.011599683202803135
    2. 'os' → logprob: -5.386599540710449
    3. ' ' → logprob: -5.886599540710449
    4. ' sys' → logprob: -6.136599540710449
    5. ' collections' → logprob: -6.886599540710449
    6. ' import' → logprob: -8.13659954071045
    7. ' math' → logprob: -9.26159954071045
    8. ' typing' → logprob: -9.51159954071045
    9. ' pathlib' → logprob: -9.51159954071045
    10. ' setuptools' → logprob: -9.63659954071045

Token 5: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.8083444833755493
    2. ' import' → logprob: -0.8083444833755493
    3. '.' → logprob: -2.3083443641662598
    4. ' ' → logprob: -5.55834436416626
    5. '```' → logprob: -5.68334436416626
    6. '_' → logprob: -6.93334436416626
    7. ' .' → logprob: -7.93334436416626
    8. '.import' → logprob: -8.433344841003418
    9. '_import' → logprob: -9.558344841003418
    10. '`' → logprob: -9.808344841003418

Token 6: ' deque' (ID: 90347)
  Prédit: ' defaultdict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.0686163455247879
    2. ' deque' → logprob: -2.9436163902282715
    3. ' abc' → logprob: -4.4436163902282715
    4. 'deque' → logprob: -7.0686163902282715
    5. ' Counter' → logprob: -7.1936163902282715
    6. ' named' → logprob: -9.443615913391113
    7. ' import' → logprob: -9.568615913391113
    8. ' ' → logprob: -10.193615913391113
    9. ' counter' → logprob: -10.318615913391113
    10. ' collections' → logprob: -11.318615913391113

Token 7: '

' (ID: 279)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.1517118364572525
    2. 'import' → logprob: -2.901711940765381
    3. '\' → logprob: -3.776711940765381
    4. '
' → logprob: -3.901711940765381
    5. '

' → logprob: -4.026711940765381
    6. '<|end|>' → logprob: -4.526711940765381
    7. '```' → logprob: -5.151711940765381
    8. 'newline' → logprob: -5.776711940765381
    9. ',' → logprob: -6.901711940765381
    10. '.' → logprob: -7.151711940765381

Token 8: 'read' (ID: 1293)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6490504145622253
    2. 'def' → logprob: -1.8990504741668701
    3. 'import' → logprob: -2.27405047416687
    4. '`' → logprob: -3.39905047416687
    5. '```' → logprob: -3.77405047416687
    6. ',' → logprob: -4.024050235748291
    7. '
' → logprob: -4.024050235748291
    8. '#' → logprob: -4.149050235748291
    9. 'deque' → logprob: -4.274050235748291
    10. 'n' → logprob: -4.649050235748291

Token 9: '_input' (ID: 12507)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.752131462097168
    2. '(' → logprob: -1.252131462097168
    3. 'line' → logprob: -1.877131462097168
    4. '_line' → logprob: -2.627131462097168
    5. 'er' → logprob: -4.502131462097168
    6. 'lines' → logprob: -6.252131462097168
    7. '_' → logprob: -7.377131462097168
    8. '_data' → logprob: -7.502131462097168
    9. '_lines' → logprob: -7.752131462097168
    10. 'ing' → logprob: -7.877131462097168

Token 10: '_line' (ID: 14418)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004869518801569939
    2. '()' → logprob: -5.50486946105957
    3. '_line' → logprob: -8.87986946105957
    4. '_' → logprob: -9.00486946105957
    5. '('' → logprob: -9.00486946105957
    6. ')' → logprob: -9.87986946105957
    7. '(
' → logprob: -10.00486946105957
    8. '=' → logprob: -10.00486946105957
    9. '("("' → logprob: -10.00486946105957
    10. 'er' → logprob: -10.25486946105957

Token 11: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2568729519844055
    2. 's' → logprob: -1.5068728923797607
    3. '(' → logprob: -5.38187313079834
    4. '=' → logprob: -9.00687313079834
    5. ' =' → logprob: -9.75687313079834
    6. '()`' → logprob: -10.00687313079834
    7. 't' → logprob: -11.38187313079834
    8. '():' → logprob: -11.63187313079834
    9. '();' → logprob: -11.75687313079834
    10. '(s' → logprob: -11.75687313079834

Token 12: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.5768068432807922
    2. 'sys' → logprob: -0.8268068432807922
    3. ' lambda' → logprob: -7.826807022094727
    4. 'input' → logprob: -8.451807022094727
    5. 'lambda' → logprob: -8.576807022094727
    6. ' input' → logprob: -9.826807022094727
    7. ' ' → logprob: -12.201807022094727
    8. '=sys' → logprob: -12.701807022094727
    9. '(sys' → logprob: -13.451807022094727
    10. '	sys' → logprob: -13.451807022094727

Token 13: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.01570209674537182
    2. '.' → logprob: -4.265702247619629
    3. '.stdout' → logprob: -6.765702247619629
    4. '.readline' → logprob: -8.265702247619629
    5. '.argv' → logprob: -9.515702247619629
    6. '.std' → logprob: -10.515702247619629
    7. '.stderr' → logprob: -11.640702247619629
    8. '.read' → logprob: -12.265702247619629
    9. '.version' → logprob: -13.140702247619629
    10. ' .' → logprob: -13.265702247619629

Token 14: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0005639957962557673
    2. '.read' → logprob: -8.125563621520996
    3. '.' → logprob: -8.250563621520996
    4. '.readlines' → logprob: -12.500563621520996
    5. 'read' → logprob: -13.000563621520996
    6. '.buffer' → logprob: -14.875563621520996
    7. '.Read' → logprob: -16.000564575195312
    8. ' .' → logprob: -16.375564575195312
    9. ' readline' → logprob: -16.375564575195312
    10. '.write' → logprob: -16.625564575195312

Token 15: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.09049531817436218
    2. '(' → logprob: -2.5904953479766846
    3. '
' → logprob: -5.3404951095581055
    4. '(
' → logprob: -5.9654951095581055
    5. '()
' → logprob: -7.0904951095581055
    6. ')' → logprob: -7.3404951095581055
    7. '()\' → logprob: -7.8404951095581055
    8. '```' → logprob: -7.9654951095581055
    9. '()

' → logprob: -8.090495109558105
    10. '<|end|>' → logprob: -8.340495109558105

Token 16: 'sys' (ID: 17324)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5754936337471008
    2. '(' → logprob: -0.9504936337471008
    3. 'def' → logprob: -3.450493574142456
    4. 'deque' → logprob: -5.325493812561035
    5. 'data' → logprob: -6.325493812561035
    6. 'queue' → logprob: -6.700493812561035
    7. '(
' → logprob: -6.825493812561035
    8. '#' → logprob: -6.825493812561035
    9. ')' → logprob: -6.950493812561035
    10. 'q' → logprob: -6.950493812561035

Token 17: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.008107413537800312
    2. '.stdin' → logprob: -5.2581071853637695
    3. '.readline' → logprob: -6.5081071853637695
    4. '.stdout' → logprob: -7.3831071853637695
    5. '.exit' → logprob: -8.00810718536377
    6. '.write' → logprob: -9.00810718536377
    7. '.read' → logprob: -9.13310718536377
    8. '.argv' → logprob: -9.25810718536377
    9. '.setdefault' → logprob: -10.63310718536377
    10. '.stderr' → logprob: -10.75810718536377

Token 18: 'rec' (ID: 9285)
  Prédit: 'rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.018466202542185783
    2. 's' → logprob: -5.143465995788574
    3. '_' → logprob: -5.893465995788574
    4. 'limit' → logprob: -6.018465995788574
    5. '_rec' → logprob: -6.518465995788574
    6. 'execution' → logprob: -7.018465995788574
    7. '_execution' → logprob: -7.768465995788574
    8. '_limit' → logprob: -7.768465995788574
    9. 't' → logprob: -8.018465995788574
    10. 'trace' → logprob: -8.018465995788574

Token 19: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.00015097891446202993
    2. 'urs' → logprob: -9.125150680541992
    3. 'ursive' → logprob: -11.125150680541992
    4. 'ur' → logprob: -11.125150680541992
    5. 'ursor' → logprob: -12.125150680541992
    6. 'limit' → logprob: -12.125150680541992
    7. 't' → logprob: -14.125150680541992
    8. 'urse' → logprob: -16.250150680541992
    9. 'urf' → logprob: -16.250150680541992
    10. 'usion' → logprob: -16.250150680541992

Token 20: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -8.792751032160595e-05
    2. '_limit' → logprob: -9.37508773803711
    3. 'depth' → logprob: -13.37508773803711
    4. ' limit' → logprob: -13.50008773803711
    5. 'Limit' → logprob: -17.37508773803711
    6. '.limit' → logprob: -17.75008773803711
    7. '(limit' → logprob: -17.75008773803711
    8. '-limit' → logprob: -17.75008773803711
    9. 'stack' → logprob: -18.25008773803711
    10. '_LIMIT' → logprob: -18.37508773803711

Token 21: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.2200749754119897e-06
    2. ' (' → logprob: -13.875001907348633
    3. '((' → logprob: -14.625001907348633
    4. '()' → logprob: -14.750001907348633
    5. '(
' → logprob: -15.750001907348633
    6. '40' → logprob: -17.125001907348633
    7. '(int' → logprob: -17.375001907348633
    8. '(

' → logprob: -17.500001907348633
    9. '("("' → logprob: -17.750001907348633
    10. ' ' → logprob: -18.500001907348633

Token 22: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.06200286000967026
    2. '100' → logprob: -2.8120028972625732
    3. ' ' → logprob: -11.437003135681152
    4. '500' → logprob: -11.812003135681152
    5. '200' → logprob: -12.062003135681152
    6. '300' → logprob: -12.687003135681152
    7. '400' → logprob: -12.687003135681152
    8. '999' → logprob: -13.187003135681152
    9. '1' → logprob: -13.312003135681152
    10. '250' → logprob: -14.437003135681152

Token 23: '**' (ID: 410)
  Prédit: '000'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.195823535323143
    2. '00' → logprob: -2.4458234310150146
    3. '0' → logprob: -3.0708234310150146
    4. '7' → logprob: -3.3208234310150146
    5. '6' → logprob: -5.320823669433594
    6. '**' → logprob: -5.695823669433594
    7. '07' → logprob: -8.570823669433594
    8. '8' → logprob: -9.070823669433594
    9. '5' → logprob: -9.945823669433594
    10. '007' → logprob: -10.070823669433594

Token 24: '6' (ID: 21)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0011880877427756786
    2. '9' → logprob: -6.751188278198242
    3. '8' → logprob: -11.001188278198242
    4. '6' → logprob: -13.626188278198242
    5. '**' → logprob: -18.626188278198242
    6. '```' → logprob: -19.626188278198242
    7. ' ' → logprob: -20.626188278198242
    8. '

' → logprob: -21.501188278198242
    9. '+' → logprob: -21.876188278198242
    10. '``' → logprob: -22.376188278198242

Token 25: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2664456789934775e-06
    2. ' )' → logprob: -14.250000953674316
    3. '))' → logprob: -14.625000953674316
    4. ')
' → logprob: -17.000001907348633
    5. ')))' → logprob: -18.500001907348633
    6. '）' → logprob: -19.000001907348633
    7. '0' → logprob: -19.000001907348633
    8. ')`' → logprob: -19.125001907348633
    9. ')

' → logprob: -19.250001907348633
    10. '),' → logprob: -19.250001907348633

Token 26: 'number' (ID: 8096)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5682402849197388
    2. 'n' → logprob: -0.9432402849197388
    3. 'class' → logprob: -3.693240165710449
    4. 'N' → logprob: -4.693240165710449
    5. '
' → logprob: -6.068240165710449
    6. '

' → logprob: -6.068240165710449
    7. 'deque' → logprob: -6.068240165710449
    8. 'input' → logprob: -8.06824016571045
    9. 'd' → logprob: -8.19324016571045
    10. '```' → logprob: -8.31824016571045

Token 27: '_of' (ID: 8023)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.028105884790420532
    2. ' =' → logprob: -4.528105735778809
    3. '_' → logprob: -4.778105735778809
    4. '_s' → logprob: -5.153105735778809
    5. '_of' → logprob: -6.403105735778809
    6. '=' → logprob: -7.278105735778809
    7. 'of' → logprob: -8.903105735778809
    8. ' s' → logprob: -9.403105735778809
    9. ' ' → logprob: -9.778105735778809
    10. ' of' → logprob: -10.403105735778809

Token 28: '_nodes' (ID: 34593)
  Prédit: '_nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -0.9466541409492493
    2. '_' → logprob: -1.9466540813446045
    3. '_vertices' → logprob: -2.3216540813446045
    4. '_items' → logprob: -3.0716540813446045
    5. '_players' → logprob: -3.3216540813446045
    6. '_students' → logprob: -3.3216540813446045
    7. '_lines' → logprob: -3.9466540813446045
    8. '_boxes' → logprob: -4.071654319763184
    9. ' _' → logprob: -4.071654319763184
    10. '_cards' → logprob: -4.321654319763184

Token 29: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006167559418827295
    2. '=' → logprob: -5.131167411804199
    3. ',' → logprob: -9.2561674118042
    4. ' ' → logprob: -9.3811674118042
    5. ' ,' → logprob: -9.8811674118042
    6. ' =
' → logprob: -12.5061674118042
    7. ' =)' → logprob: -14.1311674118042
    8. '_' → logprob: -14.3811674118042
    9. '=int' → logprob: -14.7561674118042
    10. ')' → logprob: -14.8811674118042

Token 30: ' number' (ID: 2086)
  Prédit: ' number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.28161874413490295
    2. 'number' → logprob: -1.4066187143325806
    3. ' ' → logprob: -8.03161907196045
    4. 'space' → logprob: -9.65661907196045
    5. ' =' → logprob: -11.03161907196045
    6. '[number' → logprob: -11.15661907196045
    7. ' space' → logprob: -11.40661907196045
    8. '=' → logprob: -11.53161907196045
    9. '_number' → logprob: -11.90661907196045
    10. '	number' → logprob: -12.03161907196045

Token 31: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -2.117345684382599e-05
    2. '_nodes' → logprob: -11.625020980834961
    3. '_' → logprob: -12.125020980834961
    4. 'of' → logprob: -13.625020980834961
    5. 's' → logprob: -13.875020980834961
    6. '_tokens' → logprob: -14.500020980834961
    7. '=_' → logprob: -14.625020980834961
    8. '_s' → logprob: -14.875020980834961
    9. '_for' → logprob: -14.875020980834961
    10. ' of' → logprob: -15.000020980834961

Token 32: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.0013772567035630345
    2. 'edges' → logprob: -7.501377105712891
    3. '_nodes' → logprob: -8.62637710571289
    4. '_neighbors' → logprob: -8.87637710571289
    5. '_queries' → logprob: -9.00137710571289
    6. ' edges' → logprob: -9.00137710571289
    7. '_' → logprob: -9.12637710571289
    8. '_connections' → logprob: -9.87637710571289
    9. '_links' → logprob: -10.62637710571289
    10. '_children' → logprob: -11.25137710571289

Token 33: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01897374540567398
    2. '=' → logprob: -4.0189738273620605
    3. ',' → logprob: -7.2689738273620605
    4. ' ,' → logprob: -9.643973350524902
    5. ' ' → logprob: -9.768973350524902
    6. ' =
' → logprob: -13.393973350524902
    7. ' =",' → logprob: -14.518973350524902
    8. '<|end|>' → logprob: -14.518973350524902
    9. ' =[' → logprob: -14.518973350524902
    10. ' ='' → logprob: -15.268973350524902

Token 34: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.0057484181597828865
    2. 'map' → logprob: -5.255748271942139
    3. ' read' → logprob: -7.630748271942139
    4. ' list' → logprob: -11.880748748779297
    5. ' sys' → logprob: -11.880748748779297
    6. ' ' → logprob: -12.005748748779297
    7. 'read' → logprob: -12.630748748779297
    8. ' [' → logprob: -12.880748748779297
    9. ' tuple' → logprob: -13.880748748779297
    10. ' input' → logprob: -14.380748748779297

Token 35: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.10128103941679001
    2. '(' → logprob: -2.351280927658081
    3. '(lambda' → logprob: -7.22628116607666
    4. '(str' → logprob: -8.10128116607666
    5. '(input' → logprob: -11.35128116607666
    6. '(
' → logprob: -11.72628116607666
    7. 'int' → logprob: -11.97628116607666
    8. '(list' → logprob: -12.22628116607666
    9. '(read' → logprob: -12.47628116607666
    10. '(eval' → logprob: -13.35128116607666

Token 36: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6182588934898376
    2. '(read' → logprob: -1.1182589530944824
    3. '(sys' → logprob: -2.4932589530944824
    4. '(' → logprob: -3.3682589530944824
    5. 'read' → logprob: -4.243258953094482
    6. '(input' → logprob: -6.993258953094482
    7. ',' → logprob: -7.368258953094482
    8. 'sys' → logprob: -7.993258953094482
    9. ')(' → logprob: -8.993258476257324
    10. ' (' → logprob: -9.243258476257324

Token 37: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.3488069772720337
    2. ' read' → logprob: -1.2238069772720337
    3. ')' → logprob: -8.848807334899902
    4. ' input' → logprob: -8.973807334899902
    5. 'input' → logprob: -9.848807334899902
    6. ' readline' → logprob: -11.473807334899902
    7. '(read' → logprob: -11.473807334899902
    8. ' sys' → logprob: -11.598807334899902
    9. ' )' → logprob: -12.473807334899902
    10. 'sys' → logprob: -12.973807334899902

Token 38: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -1.1279553291387856e-05
    2. '_' → logprob: -12.750011444091797
    3. '(' → logprob: -13.125011444091797
    4. '(_' → logprob: -13.375011444091797
    5. ')' → logprob: -13.625011444091797
    6. 'input' → logprob: -14.000011444091797
    7. '```' → logprob: -14.125011444091797
    8. '(sys' → logprob: -15.250011444091797
    9. '_output' → logprob: -15.375011444091797
    10. '_INPUT' → logprob: -15.500011444091797

Token 39: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -1.3425219549390022e-05
    2. 'line' → logprob: -11.50001335144043
    3. '_LINE' → logprob: -14.12501335144043
    4. '_lines' → logprob: -14.37501335144043
    5. ')' → logprob: -14.62501335144043
    6. '_' → logprob: -14.87501335144043
    7. ')_' → logprob: -14.87501335144043
    8. '```' → logprob: -15.37501335144043
    9. '_token' → logprob: -16.62501335144043
    10. ' line' → logprob: -16.62501335144043

Token 40: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.01635199412703514
    2. '()' → logprob: -4.14135217666626
    3. '())' → logprob: -8.141351699829102
    4. '(' → logprob: -12.016351699829102
    5. '('' → logprob: -12.016351699829102
    6. '()[' → logprob: -12.766351699829102
    7. '()
' → logprob: -13.141351699829102
    8. '().'' → logprob: -13.141351699829102
    9. ' ().' → logprob: -13.766351699829102
    10. '()))' → logprob: -13.891351699829102

Token 41: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.4794514775276184
    2. 'split' → logprob: -0.9794514775276184
    3. 'rstrip' → logprob: -5.229451656341553
    4. 'read' → logprob: -12.729451179504395
    5. '(split' → logprob: -15.354451179504395
    6. ' strip' → logprob: -15.854451179504395
    7. '```' → logprob: -16.10445213317871
    8. ' split' → logprob: -16.22945213317871
    9. '(strip' → logprob: -16.72945213317871
    10. '-strip' → logprob: -18.22945213317871

Token 42: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.05205685272812843
    2. ')' → logprob: -3.0520567893981934
    3. '()' → logprob: -5.802056789398193
    4. '()))' → logprob: -8.302057266235352
    5. '))' → logprob: -8.802057266235352
    6. '(' → logprob: -11.302057266235352
    7. '())
' → logprob: -12.177057266235352
    8. '(),' → logprob: -12.427057266235352
    9. '()),' → logprob: -12.427057266235352
    10. ' ())' → logprob: -12.427057266235352

Token 43: 'if' (ID: 366)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.014073829166591167
    2. 'adj' → logprob: -5.014073848724365
    3. 'edges' → logprob: -5.514073848724365
    4. 'visited' → logprob: -6.389073848724365
    5. ' graph' → logprob: -7.264073848724365
    6. 'nodes' → logprob: -8.014073371887207
    7. '
' → logprob: -8.889073371887207
    8. 'parent' → logprob: -9.139073371887207
    9. 'node' → logprob: -9.389073371887207
    10. ' adjacency' → logprob: -9.639073371887207

Token 44: ' number' (ID: 2086)
  Prédit: ' number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.03888176009058952
    2. 'number' → logprob: -3.288881778717041
    3. ' not' → logprob: -7.288881778717041
    4. ' ' → logprob: -9.038881301879883
    5. '	number' → logprob: -11.538881301879883
    6. '_number' → logprob: -11.788881301879883
    7. '[number' → logprob: -12.288881301879883
    8. '(number' → logprob: -12.413881301879883
    9. ' ' → logprob: -12.538881301879883
    10. ' __' → logprob: -13.038881301879883

Token 45: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -0.004159364849328995
    2. 'of' → logprob: -5.754159450531006
    3. '==' → logprob: -7.879159450531006
    4. '_' → logprob: -8.629158973693848
    5. ' ==' → logprob: -8.879158973693848
    6. '_nodes' → logprob: -9.379158973693848
    7. ' of' → logprob: -10.129158973693848
    8. '_for' → logprob: -10.504158973693848
    9. '__' → logprob: -10.629158973693848
    10. '>' → logprob: -11.254158973693848

Token 46: '_edges' (ID: 68870)
  Prédit: '_nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -0.012713531032204628
    2. '_edges' → logprob: -4.387713432312012
    3. 'nodes' → logprob: -9.137713432312012
    4. '_lines' → logprob: -10.387713432312012
    5. '_' → logprob: -11.012713432312012
    6. 'edges' → logprob: -11.887713432312012
    7. '_node' → logprob: -12.012713432312012
    8. '_vertices' → logprob: -12.887713432312012
    9. '_neighbors' → logprob: -13.137713432312012
    10. '_edge' → logprob: -13.387713432312012

Token 47: ' %' (ID: 1851)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.03035084716975689
    2. '>' → logprob: -4.280350685119629
    3. ' ==' → logprob: -4.280350685119629
    4. ' ' → logprob: -6.530350685119629
    5. '==' → logprob: -8.030350685119629
    6. ' <' → logprob: -8.405350685119629
    7. '  ' → logprob: -10.030350685119629
    8. ' !=' → logprob: -10.030350685119629
    9. ':' → logprob: -10.405350685119629
    10. ' :' → logprob: -10.655350685119629

Token 48: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1602294147014618
    2. '2' → logprob: -1.9102294445037842
    3. '3' → logprob: -13.660229682922363
    4. '  ' → logprob: -13.910229682922363
    5. '```' → logprob: -14.472729682922363
    6. ' ' → logprob: -15.097729682922363
    7. '>' → logprob: -15.222729682922363
    8. '1' → logprob: -15.347729682922363
    9. '4' → logprob: -15.660229682922363
    10. ' two' → logprob: -15.722729682922363

Token 49: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.007618814241141081
    2. ' ' → logprob: -4.8826189041137695
    3. '3' → logprob: -12.50761890411377
    4. 'number' → logprob: -12.88261890411377
    5. '  ' → logprob: -13.50761890411377
    6. '!' → logprob: -14.13261890411377
    7. '4' → logprob: -14.25761890411377
    8. '```' → logprob: -14.50761890411377
    9. '==' → logprob: -14.63261890411377
    10. '10' → logprob: -14.63261890411377

Token 50: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.7884700894355774
    2. ' !=' → logprob: -0.9134700894355774
    3. '==' → logprob: -2.2884700298309326
    4. '!=' → logprob: -3.1634700298309326
    5. ':' → logprob: -8.288470268249512
    6. ' ' → logprob: -8.538470268249512
    7. '=' → logprob: -9.288470268249512
    8. ' =' → logprob: -10.413470268249512
    9. ' :' → logprob: -10.788470268249512
    10. '>' → logprob: -11.288470268249512

Token 51: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.026770107448101044
    2. '0' → logprob: -3.7767701148986816
    3. '1' → logprob: -5.651770114898682
    4. ' ' → logprob: -13.276769638061523
    5. ' !=' → logprob: -14.151769638061523
    6. ' not' → logprob: -14.276769638061523
    7. ':' → logprob: -14.401769638061523
    8. '=' → logprob: -14.651769638061523
    9. '  ' → logprob: -14.839269638061523
    10. '==' → logprob: -15.089269638061523

Token 52: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.38932424783706665
    2. '1' → logprob: -1.7643241882324219
    3. ' ' → logprob: -1.8893241882324219
    4. '  ' → logprob: -13.139324188232422
    5. ':' → logprob: -13.701824188232422
    6. '!=' → logprob: -13.701824188232422
    7. '==' → logprob: -13.951824188232422
    8. ' !=' → logprob: -14.326824188232422
    9. '=' → logprob: -14.514324188232422
    10. '```' → logprob: -14.639324188232422

Token 53: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0028279386460781097
    2. ' :' → logprob: -5.877828121185303
    3. ':
' → logprob: -10.877827644348145
    4. ':return' → logprob: -13.377827644348145
    5. '):' → logprob: -14.252827644348145
    6. ',' → logprob: -14.627827644348145
    7. ' :
' → logprob: -14.752827644348145
    8. ' and' → logprob: -15.127827644348145
    9. ':

' → logprob: -15.377827644348145
    10. ':**' → logprob: -15.502827644348145

Token 54: '   ' (ID: 271)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.6387313604354858
    2. '   ' → logprob: -0.7637313604354858
    3. 'print' → logprob: -5.513731479644775
    4. '\n' → logprob: -7.388731479644775
    5. '	print' → logprob: -8.013731002807617
    6. ' 
' → logprob: -8.263731002807617
    7. '    
' → logprob: -8.388731002807617
    8. '    ' → logprob: -8.763731002807617
    9. ' ' → logprob: -9.638731002807617
    10. '   ' → logprob: -9.638731002807617

Token 55: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.008803417906165123
    2. 'print' (adapté à ' print') → logprob: -4.883803367614746
    3. ' 
' → logprob: -7.758803367614746
    4. '    ' → logprob: -7.883803367614746
    5. '   ' → logprob: -8.758803367614746
    6. ' ' → logprob: -9.508803367614746
    7. ' sys' → logprob: -10.008803367614746
    8. '\n' → logprob: -10.758803367614746
    9. '     
' → logprob: -11.133803367614746
    10. ' \' → logprob: -11.508803367614746

Token 56: '(-' (ID: 8087)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4671333432197571
    2. '("' → logprob: -1.4671332836151123
    3. '(-' → logprob: -1.9671332836151123
    4. '('' → logprob: -6.092133522033691
    5. '(NO' → logprob: -8.842133522033691
    6. '(No' → logprob: -9.842133522033691
    7. '(False' → logprob: -9.967133522033691
    8. '()' → logprob: -10.092133522033691
    9. '(None' → logprob: -10.217133522033691
    10. '("-' → logprob: -10.217133522033691

Token 57: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.796184723294573e-06
    2. '2' → logprob: -12.750005722045898
    3. ' ' → logprob: -13.250005722045898
    4. '```' → logprob: -15.750005722045898
    5. '11' → logprob: -16.0000057220459
    6. ')' → logprob: -16.3125057220459
    7. '0' → logprob: -16.5000057220459
    8. '１' → logprob: -16.7500057220459
    9. '-' → logprob: -16.8125057220459
    10. '10' → logprob: -16.8750057220459

Token 58: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009155054576694965
    2. ')
' → logprob: -7.00091552734375
    3. ' )' → logprob: -13.50091552734375
    4. ')
' → logprob: -13.50091552734375
    5. '   ' → logprob: -14.62591552734375
    6. '))' → logprob: -15.50091552734375
    7. ')return' → logprob: -15.50091552734375
    8. '()' → logprob: -16.12591552734375
    9. ')

' → logprob: -16.62591552734375
    10. '```' → logprob: -17.00091552734375

Token 59: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5534403324127197
    2. 'else' → logprob: -0.9284403324127197
    3. '
' → logprob: -4.553440093994141
    4. ' else' → logprob: -4.803440093994141
    5. '<|end|>' → logprob: -5.303440093994141
    6. '    
' → logprob: -5.928440093994141
    7. ')' → logprob: -6.303440093994141
    8. '```' → logprob: -7.053440093994141
    9. 'elif' → logprob: -8.30344009399414
    10. '<|end|>' → logprob: -9.30344009399414

Token 60: ' exit' (ID: 10654)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.6096230745315552
    2. '   ' → logprob: -1.4846230745315552
    3. '
' → logprob: -2.3596229553222656
    4. 'exit' (adapté à ' exit') → logprob: -2.9846229553222656
    5. '	exit' → logprob: -3.3596229553222656
    6. '    
' → logprob: -3.9846229553222656
    7. ' exit' → logprob: -4.359622955322266
    8. ' else' → logprob: -4.609622955322266
    9. '\n' → logprob: -5.859622955322266
    10. '```' → logprob: -6.234622955322266

Token 61: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.001656494103372097
    2. '(' → logprob: -6.501656532287598
    3. '()
' → logprob: -9.126656532287598
    4. '()\' → logprob: -10.376656532287598
    5. '()

' → logprob: -12.501656532287598
    6. '()`' → logprob: -12.751656532287598
    7. ' ()' → logprob: -13.001656532287598
    8. '0' → logprob: -13.126656532287598
    9. '()
' → logprob: -14.001656532287598
    10. '(
' → logprob: -14.376656532287598

Token 62: 'edge' (ID: 13457)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.12247345596551895
    2. 'edges' → logprob: -2.7474734783172607
    3. 'visited' → logprob: -4.122473239898682
    4. '
' → logprob: -4.622473239898682
    5. 'else' → logprob: -5.747473239898682
    6. 'adj' → logprob: -5.872473239898682
    7. '```' → logprob: -6.122473239898682
    8. 'for' → logprob: -6.372473239898682
    9. 'nodes' → logprob: -6.497473239898682
    10. '_graph' → logprob: -6.747473239898682

Token 63: '_list' (ID: 4162)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00669251149520278
    2. '_list' → logprob: -5.506692409515381
    3. '_s' → logprob: -6.131692409515381
    4. ' s' → logprob: -9.131692886352539
    5. '_index' → logprob: -9.881692886352539
    6. '_' → logprob: -10.006692886352539
    7. '_indices' → logprob: -10.006692886352539
    8. '_count' → logprob: -10.256692886352539
    9. 'list' → logprob: -11.131692886352539
    10. '_to' → logprob: -11.381692886352539

Token 64: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012520955875515938
    2. '=' → logprob: -4.387520790100098
    3. 's' → logprob: -12.262520790100098
    4. '=[]' → logprob: -12.637520790100098
    5. ' ' → logprob: -13.762520790100098
    6. '_' → logprob: -14.887520790100098
    7. '[:]' → logprob: -15.012520790100098
    8. ',' → logprob: -15.012520790100098
    9. '[' → logprob: -15.137520790100098
    10. ':' → logprob: -15.137520790100098

Token 65: ' [' (ID: 723)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.491255521774292
    2. ' []' → logprob: -0.991255521774292
    3. ' [' → logprob: -4.491255760192871
    4. '[' → logprob: -5.991255760192871
    5. 'deque' → logprob: -5.991255760192871
    6. ' [[]' → logprob: -7.616255760192871
    7. ' deque' → logprob: -8.116255760192871
    8. '[list' → logprob: -11.866255760192871
    9. '[][]' → logprob: -12.116255760192871
    10. '[]
' → logprob: -12.866255760192871

Token 66: ' [' (ID: 723)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.010497190989553928
    2. ' []' → logprob: -5.760497093200684
    3. ']' → logprob: -6.135497093200684
    4. '()]' → logprob: -6.510497093200684
    5. 'tuple' → logprob: -6.760497093200684
    6. 'list' → logprob: -6.760497093200684
    7. '[' → logprob: -8.135497093200684
    8. '0' → logprob: -8.385497093200684
    9. '()' → logprob: -8.385497093200684
    10. '[]
' → logprob: -8.760497093200684

Token 67: 'int' (ID: 491)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.18104879558086395
    2. '0' → logprob: -2.05604887008667
    3. 'False' → logprob: -4.05604887008667
    4. ' ]' → logprob: -4.43104887008667
    5. '[]' → logprob: -5.55604887008667
    6. '][]' → logprob: -6.93104887008667
    7. '()]' → logprob: -7.30604887008667
    8. '[],' → logprob: -7.30604887008667
    9. '-' → logprob: -7.68104887008667
    10. '   ' → logprob: -7.80604887008667

Token 68: '(vertex' (ID: 96471)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.07971768081188202
    2. ']' → logprob: -3.0797176361083984
    3. '()' → logprob: -4.204717636108398
    4. ']()' → logprob: -4.579717636108398
    5. '(read' → logprob: -5.954717636108398
    6. '(' → logprob: -6.454717636108398
    7. '(x' → logprob: -7.329717636108398
    8. '(),' → logprob: -8.829717636108398
    9. ' ]' → logprob: -9.204717636108398
    10. ' ' → logprob: -9.704717636108398

Token 69: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13104130327701569
    2. '())' → logprob: -2.6310412883758545
    3. '()' → logprob: -3.2560412883758545
    4. '(x' → logprob: -5.381041526794434
    5. '(read' → logprob: -5.756041526794434
    6. ')]' → logprob: -6.381041526794434
    7. '()]' → logprob: -7.131041526794434
    8. '(input' → logprob: -8.631041526794434
    9. ')-' → logprob: -8.631041526794434
    10. '(i' → logprob: -8.881041526794434

Token 70: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2109110802412033
    2. ')' → logprob: -1.8359110355377197
    3. 'for' → logprob: -4.710911273956299
    4. '())' → logprob: -4.835911273956299
    5. ' for' → logprob: -4.960911273956299
    6. '()]' → logprob: -6.085911273956299
    7. ',' → logprob: -6.585911273956299
    8. '()-' → logprob: -7.585911273956299
    9. '(read' → logprob: -7.835911273956299
    10. ']' → logprob: -8.21091079711914

Token 71: ' vertex' (ID: 25363)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.8722729682922363
    2. ' read' → logprob: -1.1222729682922363
    3. '_' → logprob: -1.4972729682922363
    4. 'vertex' → logprob: -4.122272968292236
    5. ' vertex' → logprob: -4.872272968292236
    6. ' _' → logprob: -4.997272968292236
    7. 'range' → logprob: -7.872272968292236
    8. '_vertex' → logprob: -8.122272491455078
    9. ' in' → logprob: -8.247272491455078
    10. ' ' → logprob: -8.372272491455078

Token 72: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.029768308624625206
    2. 'in' → logprob: -3.529768228530884
    3. ' ' → logprob: -12.279767990112305
    4. 'read' → logprob: -12.654767990112305
    5. 's' → logprob: -13.779767990112305
    6. 'to' → logprob: -14.029767990112305
    7. 'In' → logprob: -14.029767990112305
    8. '...' → logprob: -14.154767990112305
    9. '  ' → logprob: -14.217267990112305
    10. ',' → logprob: -14.279767990112305

Token 73: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.014180909842252731
    2. ' read' → logprob: -4.264181137084961
    3. 'range' → logprob: -12.139181137084961
    4. 'input' → logprob: -12.389181137084961
    5. ' ' → logprob: -12.639181137084961
    6. '	read' → logprob: -13.889181137084961
    7. '  ' → logprob: -14.014181137084961
    8. '   ' → logprob: -14.764181137084961
    9. '
' → logprob: -14.889181137084961
    10. ' readline' → logprob: -15.264181137084961

Token 74: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -9.281485836254433e-05
    2. 'input' → logprob: -9.500092506408691
    3. '(_' → logprob: -12.375092506408691
    4. '(input' → logprob: -12.875092506408691
    5. '_output' → logprob: -12.875092506408691
    6. '_' → logprob: -13.125092506408691
    7. '_in' → logprob: -14.375092506408691
    8. '__' → logprob: -14.375092506408691
    9. '_line' → logprob: -14.375092506408691
    10. ' _' → logprob: -14.500092506408691

Token 75: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.00015395533409900963
    2. 'line' → logprob: -8.875153541564941
    3. '_input' → logprob: -12.750153541564941
    4. '().' → logprob: -13.125153541564941
    5. '_' → logprob: -13.625153541564941
    6. '-line' → logprob: -13.750153541564941
    7. '_LINE' → logprob: -13.750153541564941
    8. '()' → logprob: -13.875153541564941
    9. 'Line' → logprob: -14.250153541564941
    10. '_lines' → logprob: -14.375153541564941

Token 76: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.750436007976532e-05
    2. '()' → logprob: -10.25003719329834
    3. '()]' → logprob: -14.12503719329834
    4. '()].' → logprob: -14.12503719329834
    5. ' ().' → logprob: -14.37503719329834
    6. '(' → logprob: -18.250038146972656
    7. '()[' → logprob: -18.250038146972656
    8. '()][' → logprob: -18.500038146972656
    9. '()
' → logprob: -19.375038146972656
    10. '()).' → logprob: -19.500038146972656

Token 77: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.023596934974193573
    2. 'strip' → logprob: -3.773597002029419
    3. 'rstrip' → logprob: -8.02359676361084
    4. ' split' → logprob: -10.77359676361084
    5. ' strip' → logprob: -12.89859676361084
    6. '(split' → logprob: -16.523597717285156
    7. ' ' → logprob: -16.898597717285156
    8. 'spl' → logprob: -17.148597717285156
    9. '   ' → logprob: -17.398597717285156
    10. '.split' → logprob: -17.648597717285156

Token 78: '()]' (ID: 59063)
  Prédit: '()]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.00029720881138928235
    2. '()' → logprob: -8.375297546386719
    3. '())' → logprob: -9.750297546386719
    4. '(' → logprob: -12.500297546386719
    5. '()]
' → logprob: -13.250297546386719
    6. '()],' → logprob: -13.625297546386719
    7. ']' → logprob: -14.125297546386719
    8. '(),' → logprob: -15.250297546386719
    9. '()][' → logprob: -16.12529754638672
    10. '()].' → logprob: -16.12529754638672

Token 79: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.06245989724993706
    2. 'for' → logprob: -2.812459945678711
    3. '   ' → logprob: -8.437459945678711
    4. '	for' → logprob: -8.562459945678711
    5. ' ' → logprob: -10.312459945678711
    6. ']' → logprob: -10.812459945678711
    7. '()' → logprob: -11.312459945678711
    8. '    ' → logprob: -12.312459945678711
    9. '<|end|>' → logprob: -13.062459945678711
    10. '  ' → logprob: -13.187459945678711

Token 80: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.040083058178424835
    2. 'range' → logprob: -3.415083169937134
    3. '_' → logprob: -5.540082931518555
    4. ' _' → logprob: -6.040082931518555
    5. '_range' → logprob: -9.290082931518555
    6. ' ' → logprob: -11.665082931518555
    7. '	range' → logprob: -12.290082931518555
    8. ' in' → logprob: -13.540082931518555
    9. '(range' → logprob: -13.790082931518555
    10. '  ' → logprob: -14.915082931518555

Token 81: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1688566356897354
    2. 'in' → logprob: -2.043856620788574
    3. 'range' → logprob: -3.668856620788574
    4. ' range' → logprob: -8.418856620788574
    5. ' ' → logprob: -9.168856620788574
    6. '  ' → logprob: -13.043856620788574
    7. '(range' → logprob: -13.043856620788574
    8. '	in' → logprob: -13.418856620788574
    9. '	range' → logprob: -13.793856620788574
    10. 'i' → logprob: -14.418856620788574

Token 82: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.006727333180606365
    2. ' range' → logprob: -5.00672721862793
    3. ' ' → logprob: -12.25672721862793
    4. '(range' → logprob: -13.00672721862793
    5. '   ' → logprob: -13.38172721862793
    6. '	range' → logprob: -13.63172721862793
    7. '  ' → logprob: -13.75672721862793
    8. 'r' → logprob: -15.13172721862793
    9. '[' → logprob: -15.63172721862793
    10. '    ' → logprob: -16.00672721862793

Token 83: '(number' (ID: 32955)
  Prédit: '(number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(number' → logprob: -4.8232690460281447e-05
    2. '(' → logprob: -10.000048637390137
    3. 'number' → logprob: -12.875048637390137
    4. ' (' → logprob: -15.500048637390137
    5. ' number' → logprob: -16.87504768371582
    6. '(n' → logprob: -18.50004768371582
    7. '(Number' → logprob: -19.00004768371582
    8. '(num' → logprob: -19.12504768371582
    9. '	number' → logprob: -19.12504768371582
    10. ')' → logprob: -19.25004768371582

Token 84: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -9.088346359931165e-07
    2. 'of' → logprob: -14.375000953674316
    3. '_edges' → logprob: -16.25
    4. ' of' → logprob: -17.5
    5. '(' → logprob: -17.875
    6. 's' → logprob: -18.0
    7. '_nodes' → logprob: -18.25
    8. '_' → logprob: -18.625
    9. 'Of' → logprob: -18.75
    10. '_OF' → logprob: -18.875

Token 85: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.033710017800331116
    2. '_nodes' → logprob: -3.40871000289917
    3. 'edges' → logprob: -9.908710479736328
    4. '_vertices' → logprob: -11.783710479736328
    5. '_' → logprob: -13.158710479736328
    6. ' edges' → logprob: -14.033710479736328
    7. 'nodes' → logprob: -14.033710479736328
    8. 'Edges' → logprob: -14.158710479736328
    9. '_ed' → logprob: -14.408710479736328
    10. '_edge' → logprob: -14.783710479736328

Token 86: ')' (ID: 8)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.11667758971452713
    2. ']' → logprob: -2.3666775226593018
    3. ')' → logprob: -4.116677761077881
    4. ' ]' → logprob: -11.366677284240723
    5. '])' → logprob: -11.491677284240723
    6. '])]' → logprob: -12.366677284240723
    7. ')])' → logprob: -12.491677284240723
    8. ' )' → logprob: -12.491677284240723
    9. '()]' → logprob: -13.366677284240723
    10. ')],' → logprob: -14.241677284240723

Token 87: ' ]

' (ID: 32229)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00015288250870071352
    2. ')]' → logprob: -9.250152587890625
    3. ' ]' → logprob: -10.250152587890625
    4. ')' → logprob: -11.000152587890625
    5. ']
' → logprob: -12.875152587890625
    6. '()]' → logprob: -14.000152587890625
    7. ']

' → logprob: -14.250152587890625
    8. '])' → logprob: -15.750152587890625
    9. '   ' → logprob: -16.000152587890625
    10. '`]' → logprob: -16.500152587890625

Token 88: 'adj' (ID: 57001)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8899849653244019
    2. 'graph' → logprob: -1.2649849653244019
    3. '<|end|>' → logprob: -2.6399850845336914
    4. '\n' → logprob: -2.7649850845336914
    5. 'edges' → logprob: -3.1399850845336914
    6. '#' → logprob: -3.1399850845336914
    7. ')' → logprob: -4.014985084533691
    8. 'adj' → logprob: -4.264985084533691
    9. 'n' → logprob: -4.264985084533691
    10. 'visited' → logprob: -5.139985084533691

Token 89: 'acency' (ID: 118557)
  Prédit: 'acency'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acency' → logprob: -0.06592393666505814
    2. '_list' → logprob: -3.4409239292144775
    3. '_' → logprob: -3.6909239292144775
    4. 'ac' → logprob: -5.815924167633057
    5. ' =' → logprob: -6.565924167633057
    6. 'acent' → logprob: -6.690924167633057
    7. '[' → logprob: -7.815924167633057
    8. '_ac' → logprob: -8.690923690795898
    9. '```' → logprob: -8.690923690795898
    10. '=' → logprob: -8.815923690795898

Token 90: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.15221332013607025
    2. '_' → logprob: -2.0272133350372314
    3. '=' → logprob: -5.777213096618652
    4. '_lists' → logprob: -5.777213096618652
    5. ' =' → logprob: -6.527213096618652
    6. 'List' → logprob: -6.777213096618652
    7. '[' → logprob: -7.777213096618652
    8. 's' → logprob: -9.527213096618652
    9. '=[]' → logprob: -10.027213096618652
    10. '_lst' → logprob: -10.152213096618652

Token 91: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.007607577834278345
    2. '=' → logprob: -4.882607460021973
    3. '[' → logprob: -14.132607460021973
    4. ' =[' → logprob: -15.007607460021973
    5. 's' → logprob: -15.757607460021973
    6. ' ' → logprob: -16.38260841369629
    7. '_' → logprob: -17.00760841369629
    8. '<|end|>' → logprob: -17.13260841369629
    9. '=[]' → logprob: -17.38260841369629
    10. ' =
' → logprob: -17.50760841369629

Token 92: ' [[]' (ID: 182908)
  Prédit: ' [[]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [[]' → logprob: -0.5783835649490356
    2. '[' → logprob: -0.8283835649490356
    3. '{' → logprob: -6.078383445739746
    4. ' [' → logprob: -9.453383445739746
    5. ' {' → logprob: -9.703383445739746
    6. '{}' → logprob: -11.828383445739746
    7. ' defaultdict' → logprob: -14.078383445739746
    8. 'default' → logprob: -14.328383445739746
    9. '[]' → logprob: -14.828383445739746
    10. ' ' → logprob: -15.453383445739746

Token 93: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4783523380756378
    2. ' for' → logprob: -1.6033523082733154
    3. '(' → logprob: -2.2283523082733154
    4. ')' → logprob: -3.1033523082733154
    5. '(number' → logprob: -4.1033525466918945
    6. ']' → logprob: -4.8533525466918945
    7. ',' → logprob: -6.8533525466918945
    8. ' (' → logprob: -7.8533525466918945
    9. '(n' → logprob: -8.603352546691895
    10. '(for' → logprob: -9.478352546691895

Token 94: ' _' (ID: 1175)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6955189108848572
    2. '_' → logprob: -0.9455189108848572
    3. 'range' → logprob: -3.195518970489502
    4. ' range' → logprob: -3.445518970489502
    5. ' _' → logprob: -3.945518970489502
    6. '(range' → logprob: -4.070518970489502
    7. '(_' → logprob: -6.320518970489502
    8. '_range' → logprob: -7.070518970489502
    9. ' ' → logprob: -7.570518970489502
    10. '(i' → logprob: -9.695518493652344

Token 95: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.40097251534461975
    2. 'in' → logprob: -1.4009724855422974
    3. ' in' → logprob: -2.525972604751587
    4. ' range' → logprob: -5.525972366333008
    5. '(range' → logprob: -11.900972366333008
    6. ' ' → logprob: -13.650972366333008
    7. 'number' → logprob: -14.025972366333008
    8. 'i' → logprob: -14.400972366333008
    9. '_' → logprob: -14.650972366333008
    10. '0' → logprob: -15.150972366333008

Token 96: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0619908832013607
    2. ' range' → logprob: -2.811990976333618
    3. '(range' → logprob: -10.686990737915039
    4. '	range' → logprob: -16.06199073791504
    5. '   ' → logprob: -16.18699073791504
    6. ' ' → logprob: -16.31199073791504
    7. '  ' → logprob: -18.18699073791504
    8. 'ran' → logprob: -18.31199073791504
    9. 'r' → logprob: -18.31199073791504
    10. 'rang' → logprob: -18.56199073791504

Token 97: '(number' (ID: 32955)
  Prédit: '(number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(number' → logprob: -0.00016671013145241886
    2. '(range' → logprob: -9.000166893005371
    3. '(' → logprob: -10.125166893005371
    4. ' (' → logprob: -13.625166893005371
    5. 'number' → logprob: -13.625166893005371
    6. 'range' → logprob: -14.625166893005371
    7. '((' → logprob: -15.250166893005371
    8. '(node' → logprob: -17.375165939331055
    9. ' number' → logprob: -17.375165939331055
    10. ' range' → logprob: -17.875165939331055

Token 98: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -9.729906196298543e-06
    2. '_nodes' → logprob: -12.125009536743164
    3. 'of' → logprob: -12.375009536743164
    4. ' of' → logprob: -18.000009536743164
    5. '_' → logprob: -19.625009536743164
    6. 'Of' → logprob: -19.875009536743164
    7. '__' → logprob: -20.125009536743164
    8. '_OF' → logprob: -20.125009536743164
    9. '_for' → logprob: -20.375009536743164
    10. 's' → logprob: -20.375009536743164

Token 99: '_nodes' (ID: 34593)
  Prédit: '_nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -4.751746746478602e-05
    2. 'nodes' → logprob: -10.25004768371582
    3. 's' → logprob: -12.25004768371582
    4. '_vertices' → logprob: -12.50004768371582
    5. '_edges' → logprob: -13.00004768371582
    6. '```' → logprob: -15.12504768371582
    7. ' nodes' → logprob: -15.50004768371582
    8. 'Nodes' → logprob: -15.50004768371582
    9. '_tokens' → logprob: -16.00004768371582
    10. '_' → logprob: -16.37504768371582

Token 100: ' +' (ID: 659)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3872016370296478
    2. ')]' → logprob: -1.1372016668319702
    3. ' ]' → logprob: -8.512201309204102
    4. '+' → logprob: -9.637201309204102
    5. '()]' → logprob: -11.012201309204102
    6. '+]' → logprob: -11.012201309204102
    7. ')' → logprob: -11.262201309204102
    8. '>]' → logprob: -11.762201309204102
    9. '}]' → logprob: -12.637201309204102
    10. ']]' → logprob: -13.012201309204102

Token 101: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007381578907370567
    2. ' ' → logprob: -7.250738143920898
    3. '2' → logprob: -10.500738143920898
    4. '0' → logprob: -15.000738143920898
    5. ')' → logprob: -15.938238143920898
    6. '```' → logprob: -16.0007381439209
    7. '   ' → logprob: -16.1257381439209
    8. '  ' → logprob: -17.7507381439209
    9. '`' → logprob: -17.9382381439209
    10. '１' → logprob: -18.3132381439209

Token 102: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.4881879400927573e-05
    2. ' ' → logprob: -10.375035285949707
    3. '2' → logprob: -12.625035285949707
    4. '0' → logprob: -16.12503433227539
    5. '```' → logprob: -17.06253433227539
    6. '１' → logprob: -17.25003433227539
    7. '   ' → logprob: -17.31253433227539
    8. '7' → logprob: -18.12503433227539
    9. '۱' → logprob: -18.12503433227539
    10. '  ' → logprob: -18.31253433227539

Token 103: ')]

' (ID: 56882)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0007226797170005739
    2. ')]' → logprob: -7.375722885131836
    3. ' ]' → logprob: -9.625722885131836
    4. ')' → logprob: -10.500722885131836
    5. '])' → logprob: -13.375722885131836
    6. ']
' → logprob: -14.375722885131836
    7. ']

' → logprob: -15.125722885131836
    8. '()]' → logprob: -16.500722885131836
    9. ']]' → logprob: -16.875722885131836
    10. ']()' → logprob: -17.750722885131836

Token 104: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00038169484469108284
    2. ' for' → logprob: -7.8753814697265625
    3. ')' → logprob: -14.625381469726562
    4. 'i' → logprob: -14.750381469726562
    5. '<|end|>' → logprob: -15.250381469726562
    6. '```' → logprob: -15.500381469726562
    7. '	for' → logprob: -16.000381469726562
    8. '   ' → logprob: -16.625381469726562
    9. 'For' → logprob: -17.250381469726562
    10. '
' → logprob: -17.750381469726562

Token 105: ' node' (ID: 4596)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.6003569960594177
    2. 'u' → logprob: -0.8503569960594177
    3. ' edge' → logprob: -4.8503570556640625
    4. ' start' → logprob: -5.7253570556640625
    5. 'a' → logprob: -5.8503570556640625
    6. 'start' → logprob: -5.8503570556640625
    7. ' a' → logprob: -6.1003570556640625
    8. 'edge' → logprob: -6.4753570556640625
    9. '(u' → logprob: -7.7253570556640625
    10. ' vertex' → logprob: -7.7253570556640625

Token 106: '_a' (ID: 10852)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.17027974128723145
    2. '1' → logprob: -2.7952797412872314
    3. 'in' → logprob: -3.1702797412872314
    4. ',' → logprob: -3.6702797412872314
    5. 'u' → logprob: -4.670279502868652
    6. '_u' → logprob: -5.420279502868652
    7. '_in' → logprob: -5.670279502868652
    8. '_from' → logprob: -5.670279502868652
    9. 'a' → logprob: -6.545279502868652
    10. '_' → logprob: -6.670279502868652

Token 107: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0043460913002491
    2. ',node' → logprob: -5.504345893859863
    3. ' ,' → logprob: -9.129345893859863
    4. 'in' → logprob: -9.629345893859863
    5. ' in' → logprob: -10.004345893859863
    6. ',a' → logprob: -11.504345893859863
    7. 'a' → logprob: -11.629345893859863
    8. ',in' → logprob: -12.129345893859863
    9. '[' → logprob: -12.879345893859863
    10. '[node' → logprob: -13.004345893859863

Token 108: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.06196858361363411
    2. ' node' → logprob: -2.8119685649871826
    3. '_node' → logprob: -15.311968803405762
    4. '(node' → logprob: -15.436968803405762
    5. '	node' → logprob: -15.561968803405762
    6. ',node' → logprob: -15.686968803405762
    7. '[node' → logprob: -16.186967849731445
    8. ' ' → logprob: -16.811967849731445
    9. 'Node' → logprob: -16.936967849731445
    10. '/node' → logprob: -18.311967849731445

Token 109: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -2.3438327843905427e-05
    2. '_a' → logprob: -10.75002384185791
    3. '_,' → logprob: -14.25002384185791
    4. 'b' → logprob: -14.37502384185791
    5. ',' → logprob: -15.62502384185791
    6. '_' → logprob: -15.75002384185791
    7. ',_' → logprob: -16.000022888183594
    8. '_c' → logprob: -16.375022888183594
    9. '```' → logprob: -16.625022888183594
    10. 'B' → logprob: -17.250022888183594

Token 110: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.043125130236148834
    2. 'in' → logprob: -3.1681251525878906
    3. ',' → logprob: -9.16812515258789
    4. ' ' → logprob: -12.04312515258789
    5. ' ,' → logprob: -12.29312515258789
    6. ',in' → logprob: -12.29312515258789
    7. '	in' → logprob: -12.41812515258789
    8. '_in' → logprob: -14.29312515258789
    9. 'In' → logprob: -14.91812515258789
    10. '  ' → logprob: -15.29312515258789

Token 111: ' edge' (ID: 11165)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.20142056047916412
    2. ' edge' → logprob: -1.701420545578003
    3. '(edge' → logprob: -12.451420783996582
    4. '=edge' → logprob: -13.701420783996582
    5. ' ' → logprob: -14.201420783996582
    6. '_edge' → logprob: -14.451420783996582
    7. 'edges' → logprob: -14.826420783996582
    8. 'Edge' → logprob: -15.076420783996582
    9. '   ' → logprob: -16.076419830322266
    10. ' edges' → logprob: -16.451419830322266

Token 112: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.01657748781144619
    2. 's' → logprob: -4.39157772064209
    3. '_' → logprob: -5.51657772064209
    4. '_s' → logprob: -11.64157772064209
    5. 'list' → logprob: -11.89157772064209
    6. '_,' → logprob: -12.39157772064209
    7. '_a' → logprob: -12.51657772064209
    8. '_:' → logprob: -13.01657772064209
    9. 'List' → logprob: -13.14157772064209
    10. '_in' → logprob: -13.14157772064209

Token 113: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -5.919942486798391e-05
    2. ':
' → logprob: -10.125059127807617
    3. '.append' → logprob: -11.625059127807617
    4. '):' → logprob: -12.625059127807617
    5. ',' → logprob: -13.125059127807617
    6. '   ' → logprob: -13.875059127807617
    7. ':**' → logprob: -14.125059127807617
    8. '.' → logprob: -14.500059127807617
    9. ' :' → logprob: -14.625059127807617
    10. '<|end|>' → logprob: -15.000059127807617

Token 114: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -4.7994282795116305e-05
    2. '    
' → logprob: -10.50004768371582
    3. ' adjacency' → logprob: -11.37504768371582
    4. '```' → logprob: -12.50004768371582
    5. '       ' → logprob: -13.12504768371582
    6. '<|end|>' → logprob: -13.37504768371582
    7. '
' → logprob: -15.00004768371582
    8. '   ' → logprob: -15.25004768371582
    9. 'adj' → logprob: -15.50004768371582
    10. ',' → logprob: -15.75004768371582

Token 115: ' adjacency' (ID: 177015)
  Prédit: ' adjacency'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' adjacency' → logprob: -0.15357822179794312
    2. '   ' → logprob: -2.028578281402588
    3. 'adj' → logprob: -4.528578281402588
    4. ' adj' → logprob: -10.52857780456543
    5. '```' → logprob: -11.77857780456543
    6. ' adjacent' → logprob: -12.65357780456543
    7. ' ' → logprob: -12.77857780456543
    8. 'ad' → logprob: -13.52857780456543
    9. '``' → logprob: -13.65357780456543
    10. '    ' → logprob: -13.65357780456543

Token 116: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -3.128163257315464e-07
    2. '[_' → logprob: -17.25
    3. '[' → logprob: -17.375
    4. 's' → logprob: -17.875
    5. '```' → logprob: -17.875
    6. '_' → logprob: -18.125
    7. 'List' → logprob: -18.375
    8. '_LIST' → logprob: -18.625
    9. '_lists' → logprob: -19.0
    10. 'list' → logprob: -19.25

Token 117: '[node' (ID: 67268)
  Prédit: '[node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[node' → logprob: -4.320199877838604e-07
    2. '[' → logprob: -15.0
    3. ' [' → logprob: -20.875
    4. '(node' → logprob: -21.375
    5. 'node' → logprob: -21.625
    6. '[user' → logprob: -21.875
    7. '[token' → logprob: -22.25
    8. '[
' → logprob: -22.375
    9. '[int' → logprob: -22.375
    10. '```' → logprob: -23.0

Token 118: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -5.5577775128767826e-06
    2. '_b' → logprob: -12.500005722045898
    3. 'a' → logprob: -13.375005722045898
    4. '_' → logprob: -16.3750057220459
    5. '.append' → logprob: -16.7500057220459
    6. '   ' → logprob: -17.3750057220459
    7. ' _' → logprob: -18.0000057220459
    8. '-' → logprob: -18.5000057220459
    9. '[' → logprob: -18.6250057220459
    10. 'A' → logprob: -18.8750057220459

Token 119: '].' (ID: 1651)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.07544197887182236
    2. '].' → logprob: -2.82544207572937
    3. '.' → logprob: -4.325441837310791
    4. ').' → logprob: -8.95044231414795
    5. ' .' → logprob: -11.07544231414795
    6. ']' → logprob: -12.82544231414795
    7. '.app' → logprob: -13.32544231414795
    8. '   ' → logprob: -13.32544231414795
    9. ' ].' → logprob: -13.82544231414795
    10. '>.' → logprob: -14.20044231414795

Token 120: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: 0.0
    2. ' append' → logprob: -17.5
    3. '.append' → logprob: -19.875
    4. 'appen' → logprob: -21.0
    5. '	append' → logprob: -22.0
    6. 'app' → logprob: -22.625
    7. 'add' → logprob: -23.375
    8. '_append' → logprob: -23.625
    9. 'Append' → logprob: -24.0
    10. '```' → logprob: -24.5

Token 121: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -1.5048530030981055e-06
    2. '(' → logprob: -13.500001907348633
    3. 'node' → logprob: -17.875001907348633
    4. '(Node' → logprob: -20.875001907348633
    5. '((' → logprob: -21.000001907348633
    6. '(
' → logprob: -21.375001907348633
    7. ' node' → logprob: -21.875001907348633
    8. ' (' → logprob: -22.125001907348633
    9. ',node' → logprob: -22.375001907348633
    10. '[node' → logprob: -23.000001907348633

Token 122: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.0003365350130479783
    2. '_a' → logprob: -8.000336647033691
    3. '_)' → logprob: -14.875336647033691
    4. 'b' → logprob: -15.500336647033691
    5. 'a' → logprob: -15.625336647033691
    6. '_' → logprob: -15.875336647033691
    7. ')_' → logprob: -15.875336647033691
    8. ')' → logprob: -16.125335693359375
    9. '_,' → logprob: -17.625335693359375
    10. '[' → logprob: -18.000335693359375

Token 123: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.771655115589965e-05
    2. ')
' → logprob: -11.375018119812012
    3. '   ' → logprob: -12.625018119812012
    4. ' )' → logprob: -12.750018119812012
    5. ')

' → logprob: -17.875017166137695
    6. '),' → logprob: -18.000017166137695
    7. '<|end|>' → logprob: -18.625017166137695
    8. ')#' → logprob: -19.250017166137695
    9. ')add' → logprob: -19.375017166137695
    10. ' ' → logprob: -19.625017166137695

Token 124: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -3.128163257315464e-07
    2. '    
' → logprob: -15.75
    3. '
' → logprob: -16.75
    4. '<|end|>' → logprob: -17.375
    5. '```' → logprob: -18.125
    6. '       ' → logprob: -18.75
    7. '   ' → logprob: -19.0
    8. 'adj' → logprob: -19.375
    9. '[' → logprob: -19.625
    10. '  
' → logprob: -20.25

Token 125: ' adjacency' (ID: 177015)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.08132371306419373
    2. ' adjacency' → logprob: -2.8313236236572266
    3. '   ' → logprob: -3.9563236236572266
    4. ' adj' → logprob: -10.581323623657227
    5. '    ' → logprob: -13.206323623657227
    6. ' ' → logprob: -13.206323623657227
    7. '  ' → logprob: -13.581323623657227
    8. 'Adj' → logprob: -13.581323623657227
    9. '       ' → logprob: -13.956323623657227
    10. 'ad' → logprob: -14.081323623657227

Token 126: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -1.9361264946837764e-07
    2. '[_' → logprob: -17.125
    3. 'List' → logprob: -17.25
    4. 'list' → logprob: -18.75
    5. '[' → logprob: -19.125
    6. '_' → logprob: -19.375
    7. '_LIST' → logprob: -20.0
    8. '_List' → logprob: -20.5
    9. 's' → logprob: -20.75
    10. ' _' → logprob: -21.0

Token 127: '[node' (ID: 67268)
  Prédit: '[node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[node' → logprob: -4.656383680412546e-05
    2. '[' → logprob: -10.000046730041504
    3. '[_' → logprob: -14.250046730041504
    4. '_node' → logprob: -15.625046730041504
    5. '_[' → logprob: -15.750046730041504
    6. '[user' → logprob: -17.125045776367188
    7. '(node' → logprob: -17.375045776367188
    8. '[
' → logprob: -18.250045776367188
    9. 'node' → logprob: -18.500045776367188
    10. '_adj' → logprob: -19.000045776367188

Token 128: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.043020881712436676
    2. '_a' → logprob: -3.1680209636688232
    3. 'a' → logprob: -11.918021202087402
    4. '_' → logprob: -12.293021202087402
    5. 'b' → logprob: -12.668021202087402
    6. ')_' → logprob: -12.918021202087402
    7. ']_' → logprob: -13.793021202087402
    8. '_c' → logprob: -14.168021202087402
    9. '_s' → logprob: -14.668021202087402
    10. '_)' → logprob: -14.793021202087402

Token 129: '].' (ID: 1651)
  Prédit: ').'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.5518870949745178
    2. '.append' → logprob: -0.9268870949745178
    3. '.' → logprob: -3.676887035369873
    4. '].' → logprob: -6.176887035369873
    5. ')' → logprob: -7.301887035369873
    6. ' .' → logprob: -9.426887512207031
    7. '.setdefault' → logprob: -9.551887512207031
    8. '[' → logprob: -10.051887512207031
    9. '   ' → logprob: -10.551887512207031
    10. '.Append' → logprob: -11.176887512207031

Token 130: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: 0.0
    2. 'appen' → logprob: -17.75
    3. ' append' → logprob: -17.875
    4. '.append' → logprob: -18.625
    5. '	append' → logprob: -19.125
    6. '_append' → logprob: -21.5
    7. 'app' → logprob: -21.625
    8. '```' → logprob: -22.375
    9. 'Append' → logprob: -23.0
    10. 'add' → logprob: -23.125

Token 131: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -2.45848218582978e-06
    2. '(' → logprob: -13.00000286102295
    3. 'node' → logprob: -16.625001907348633
    4. '(
' → logprob: -18.500001907348633
    5. '[node' → logprob: -21.000001907348633
    6. ',node' → logprob: -21.000001907348633
    7. ' node' → logprob: -21.375001907348633
    8. '(Node' → logprob: -21.375001907348633
    9. '=node' → logprob: -23.375001907348633
    10. '	node' → logprob: -23.375001907348633

Token 132: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -1.6166903151315637e-05
    2. 'a' → logprob: -11.125016212463379
    3. '_)' → logprob: -14.250016212463379
    4. ')' → logprob: -14.375016212463379
    5. '_' → logprob: -16.125015258789062
    6. ')_' → logprob: -17.500015258789062
    7. '_node' → logprob: -18.250015258789062
    8. '_b' → logprob: -18.375015258789062
    9. '_]' → logprob: -19.750015258789062
    10. '[node' → logprob: -20.250015258789062

Token 133: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.253090865968261e-06
    2. ')
' → logprob: -11.625009536743164
    3. ' )' → logprob: -15.125009536743164
    4. ')

' → logprob: -17.500009536743164
    5. '   ' → logprob: -18.000009536743164
    6. '}' → logprob: -18.875009536743164
    7. '
' → logprob: -18.875009536743164
    8. ')`' → logprob: -18.875009536743164
    9. '```' → logprob: -19.125009536743164
    10. '))' → logprob: -19.125009536743164

Token 134: 'sp' (ID: 1148)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.15002872049808502
    2. 'color' → logprob: -3.025028705596924
    3. 'colors' → logprob: -3.775028705596924
    4. 'degree' → logprob: -4.150028705596924
    5. 'edge' → logprob: -4.525028705596924
    6. 'parent' → logprob: -4.525028705596924
    7. 'depth' → logprob: -5.275028705596924
    8. 'used' → logprob: -5.650028705596924
    9. 'degrees' → logprob: -5.650028705596924
    10. 'node' → logprob: -5.900028705596924

Token 135: 'anning' (ID: 6674)
  Prédit: 'anning'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'anning' → logprob: -0.5574650168418884
    2. 'lit' → logprob: -0.9324650168418884
    3. 'an' → logprob: -4.432465076446533
    4. 'anned' → logprob: -5.057465076446533
    5. 'l' → logprob: -5.432465076446533
    6. 'ath' → logprob: -6.182465076446533
    7. 'lace' → logprob: -6.432465076446533
    8. 'ec' → logprob: -6.682465076446533
    9. 'ar' → logprob: -6.807465076446533
    10. 'ant' → logprob: -7.307465076446533

Token 136: '_tree' (ID: 27118)
  Prédit: '_tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tree' → logprob: -0.0006912283133715391
    2. 'tree' → logprob: -8.250691413879395
    3. '_t' → logprob: -8.375691413879395
    4. '_f' → logprob: -8.875691413879395
    5. '_' → logprob: -10.250691413879395
    6. '_list' → logprob: -11.875691413879395
    7. '_stack' → logprob: -12.500691413879395
    8. 'Tree' → logprob: -12.500691413879395
    9. '_set' → logprob: -12.625691413879395
    10. '_edges' → logprob: -14.000691413879395

Token 137: '_edges' (ID: 68870)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16631290316581726
    2. '_par' → logprob: -3.1663129329681396
    3. '_' → logprob: -3.2913129329681396
    4. '_edges' → logprob: -3.2913129329681396
    5. '_parent' → logprob: -4.0413126945495605
    6. '=' → logprob: -4.6663126945495605
    7. '_stack' → logprob: -5.2913126945495605
    8. '_nodes' → logprob: -5.6663126945495605
    9. '_edge' → logprob: -7.4163126945495605
    10. '_depth' → logprob: -9.291313171386719

Token 138: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02325083687901497
    2. '=' → logprob: -3.7732508182525635
    3. '_' → logprob: -12.648250579833984
    4. '=[]' → logprob: -13.273250579833984
    5. ' ' → logprob: -15.773250579833984
    6. ',' → logprob: -16.023250579833984
    7. 's' → logprob: -16.773250579833984
    8. ':' → logprob: -18.148250579833984
    9. ' ' → logprob: -18.273250579833984
    10. '.' → logprob: -18.273250579833984

Token 139: ' [' (ID: 723)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0030226295348256826
    2. ' []' → logprob: -6.25302267074585
    3. 'set' → logprob: -7.12802267074585
    4. 'deque' → logprob: -8.253022193908691
    5. '[' → logprob: -10.878022193908691
    6. ' set' → logprob: -11.878022193908691
    7. '[]
' → logprob: -13.378022193908691
    8. '[]}' → logprob: -13.378022193908691
    9. '[][]' → logprob: -14.503022193908691
    10. ' deque' → logprob: -14.628022193908691

Token 140: ' set' (ID: 920)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.14002397656440735
    2. ']' → logprob: -2.640023946762085
    3. '0' → logprob: -3.140023946762085
    4. '[]' → logprob: -4.390024185180664
    5. '-' → logprob: -5.890024185180664
    6. '[' → logprob: -9.015024185180664
    7. 'set' → logprob: -9.015024185180664
    8. '()]' → logprob: -9.015024185180664
    9. '(False' → logprob: -9.015024185180664
    10. ' False' → logprob: -9.765024185180664

Token 141: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.023254211992025375
    2. '()]' → logprob: -3.773254156112671
    3. '()
' → logprob: -13.02325439453125
    4. ']()' → logprob: -13.14825439453125
    5. '(' → logprob: -13.77325439453125
    6. '()

' → logprob: -14.14825439453125
    7. '(),' → logprob: -14.27325439453125
    8. ']' → logprob: -14.39825439453125
    9. '()}' → logprob: -14.89825439453125
    10. ' ()' → logprob: -15.14825439453125

Token 142: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.24306312203407288
    2. ' for' → logprob: -1.7430630922317505
    3. 'for' → logprob: -3.36806321144104
    4. ']' → logprob: -5.618062973022461
    5. '()]' → logprob: -6.243062973022461
    6. ')' → logprob: -8.118062973022461
    7. '(' → logprob: -8.243062973022461
    8. ',' → logprob: -9.868062973022461
    9. '[]' → logprob: -10.243062973022461
    10. '   ' → logprob: -10.493062973022461

Token 143: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.7668040990829468
    2. '_' → logprob: -1.0168040990829468
    3. ' _' → logprob: -1.7668040990829468
    4. 'range' → logprob: -5.891804218292236
    5. '_range' → logprob: -9.141803741455078
    6. '(range' → logprob: -12.266803741455078
    7. ' in' → logprob: -12.766803741455078
    8. '_in' → logprob: -15.266803741455078
    9. ' ' → logprob: -15.766803741455078
    10. '	range' → logprob: -16.016803741455078

Token 144: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.05002338066697121
    2. ' range' → logprob: -3.050023317337036
    3. '(range' → logprob: -6.550023555755615
    4. '(' → logprob: -12.675023078918457
    5. 'in' → logprob: -14.050023078918457
    6. ' in' → logprob: -14.300023078918457
    7. '	range' → logprob: -15.550023078918457
    8. '_range' → logprob: -16.550024032592773
    9. '-range' → logprob: -18.300024032592773
    10. '_' → logprob: -18.675024032592773

Token 145: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2016272395849228
    2. ' range' → logprob: -1.701627254486084
    3. '(range' → logprob: -8.451626777648926
    4. '	range' → logprob: -15.951626777648926
    5. '(' → logprob: -16.576627731323242
    6. ' ' → logprob: -17.951627731323242
    7. 'rang' → logprob: -17.951627731323242
    8. 'ran' → logprob: -18.201627731323242
    9. '_range' → logprob: -18.201627731323242
    10. '[' → logprob: -18.701627731323242

Token 146: '(number' (ID: 32955)
  Prédit: '(number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(number' → logprob: -4.870950215263292e-05
    2. '(' → logprob: -10.750048637390137
    3. 'number' → logprob: -11.125048637390137
    4. ' (' → logprob: -11.875048637390137
    5. '(range' → logprob: -12.625048637390137
    6. '((' → logprob: -13.375048637390137
    7. '(n' → logprob: -15.750048637390137
    8. ' number' → logprob: -16.125049591064453
    9. '(node' → logprob: -17.000049591064453
    10. 'range' → logprob: -17.000049591064453

Token 147: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -0.0005968777113594115
    2. 'of' → logprob: -8.12559700012207
    3. '_nodes' → logprob: -8.12559700012207
    4. ' of' → logprob: -13.25059700012207
    5. '_edges' → logprob: -13.37559700012207
    6. ')' → logprob: -14.62559700012207
    7. '+' → logprob: -15.62559700012207
    8. ')]' → logprob: -16.12559700012207
    9. '(nodes' → logprob: -16.50059700012207
    10. '_' → logprob: -16.62559700012207

Token 148: '_nodes' (ID: 34593)
  Prédit: '_nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -0.02101360633969307
    2. 'nodes' → logprob: -3.8960134983062744
    3. '_edges' → logprob: -8.271013259887695
    4. 'range' → logprob: -9.396013259887695
    5. 'edges' → logprob: -10.396013259887695
    6. '(nodes' → logprob: -10.771013259887695
    7. 's' → logprob: -11.146013259887695
    8. 'number' → logprob: -11.396013259887695
    9. 'adj' → logprob: -11.521013259887695
    10. 'node' → logprob: -11.771013259887695

Token 149: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6933315396308899
    2. ' +' → logprob: -0.6933315396308899
    3. ')]' → logprob: -9.193331718444824
    4. ')' → logprob: -9.443331718444824
    5. ' ' → logprob: -14.443331718444824
    6. ']' → logprob: -14.443331718444824
    7. '+
' → logprob: -14.818331718444824
    8. ' +
' → logprob: -14.943331718444824
    9. ' )' → logprob: -15.193331718444824
    10. '_plus' → logprob: -15.443331718444824

Token 150: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004914337769150734
    2. ' ' → logprob: -7.625491619110107
    3. '(' → logprob: -13.00049114227295
    4. '   ' → logprob: -14.87549114227295
    5. '2' → logprob: -15.12549114227295
    6. '```' → logprob: -15.12549114227295
    7. '7' → logprob: -16.250492095947266
    8. ')' → logprob: -16.875492095947266
    9. ' (' → logprob: -17.000492095947266
    10. '0' → logprob: -17.125492095947266

Token 151: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.908022285439074e-05
    2. ' ' → logprob: -9.875059127807617
    3. '   ' → logprob: -12.750059127807617
    4. '2' → logprob: -12.875059127807617
    5. ')' → logprob: -14.500059127807617
    6. '```' → logprob: -14.625059127807617
    7. '0' → logprob: -14.812559127807617
    8. '7' → logprob: -15.750059127807617
    9. '  ' → logprob: -16.625059127807617
    10. '6' → logprob: -16.625059127807617

Token 152: ')' (ID: 8)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03726183995604515
    2. ')]' → logprob: -3.787261724472046
    3. ')' → logprob: -4.287261962890625
    4. ' ]' → logprob: -8.662261962890625
    5. ' )' → logprob: -13.537261962890625
    6. '])' → logprob: -13.912261962890625
    7. '()]' → logprob: -15.287261962890625
    8. ']
' → logprob: -16.037261962890625
    9. '   ' → logprob: -16.287261962890625
    10. '}' → logprob: -16.412261962890625

Token 153: ' ]
' (ID: 10213)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00011725161311915144
    2. ' ]' → logprob: -9.125117301940918
    3. ']

' → logprob: -12.500117301940918
    4. ']
' → logprob: -12.625117301940918
    5. ')' → logprob: -14.375117301940918
    6. '()]' → logprob: -15.125117301940918
    7. ')]' → logprob: -15.500117301940918
    8. '   ' → logprob: -16.0001163482666
    9. ']
' → logprob: -17.5001163482666
    10. '`]' → logprob: -17.6251163482666

Token 154: 'visited' (ID: 52453)
  Prédit: 'visited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.19371934235095978
    2. 'parent' → logprob: -2.4437193870544434
    3. 'stack' → logprob: -3.3187193870544434
    4. 'depth' → logprob: -4.193719387054443
    5. ')' → logprob: -4.318719387054443
    6. 'color' → logprob: -4.943719387054443
    7. 'def' → logprob: -5.568719387054443
    8. 'for' → logprob: -6.068719387054443
    9. 'parents' → logprob: -6.193719387054443
    10. ']' → logprob: -6.443719387054443

Token 155: '_nodes' (ID: 34593)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.048632219433784485
    2. '=' → logprob: -3.0486321449279785
    3. '[' → logprob: -10.423632621765137
    4. '_' → logprob: -11.548632621765137
    5. ' ' → logprob: -12.673632621765137
    6. ' =[' → logprob: -15.048632621765137
    7. ']' → logprob: -15.173632621765137
    8. '[:]' → logprob: -15.298632621765137
    9. ',' → logprob: -15.548632621765137
    10. '.' → logprob: -15.798632621765137

Token 156: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132624924182892
    2. '=' → logprob: -1.3132624626159668
    3. '[' → logprob: -14.563262939453125
    4. ' ' → logprob: -15.813262939453125
    5. '=set' → logprob: -16.813262939453125
    6. ',' → logprob: -17.563262939453125
    7. '＝' → logprob: -17.688262939453125
    8. ' =[' → logprob: -17.813262939453125
    9. ')' → logprob: -18.188262939453125
    10. ']' → logprob: -18.188262939453125

Token 157: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.038168299943208694
    2. ' [' → logprob: -3.28816819190979
    3. 'set' → logprob: -9.288167953491211
    4. ' set' → logprob: -10.288167953491211
    5. '{' → logprob: -15.663167953491211
    6. '[node' → logprob: -16.53816795349121
    7. '(set' → logprob: -17.16316795349121
    8. '   ' → logprob: -17.16316795349121
    9. ' ' → logprob: -17.41316795349121
    10. '=set' → logprob: -18.03816795349121

Token 158: 'False' (ID: 8168)
  Prédit: 'False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0019324433524161577
    2. ' False' → logprob: -6.251932621002197
    3. '0' → logprob: -12.501932144165039
    4. '(False' → logprob: -16.00193214416504
    5. '=False' → logprob: -19.87693214416504
    6. 'True' → logprob: -20.37693214416504
    7. '.False' → logprob: -21.12693214416504
    8. '   ' → logprob: -21.25193214416504
    9. '_false' → logprob: -22.25193214416504
    10. ']' → logprob: -22.87693214416504

Token 159: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.43288084864616394
    2. ' for' → logprob: -1.0578808784484863
    3. 'for' → logprob: -5.557880878448486
    4. ' ]' → logprob: -8.932880401611328
    5. ']*' → logprob: -9.182880401611328
    6. ']*(' → logprob: -10.682880401611328
    7. ')' → logprob: -10.807880401611328
    8. ' ' → logprob: -10.932880401611328
    9. ',' → logprob: -11.932880401611328
    10. ']+' → logprob: -13.182880401611328

Token 160: ' *' (ID: 425)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1994626671075821
    2. '(' → logprob: -2.449462652206421
    3. '[' → logprob: -3.824462652206421
    4. ' for' → logprob: -3.824462652206421
    5. ' +' → logprob: -3.949462652206421
    6. '*' → logprob: -4.699462890625
    7. ']' → logprob: -4.949462890625
    8. 'for' → logprob: -5.074462890625
    9. ')' → logprob: -5.949462890625
    10. ' *' → logprob: -6.324462890625

Token 161: ' (' (ID: 350)
  Prédit: '(number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(number' → logprob: -4.7994282795116305e-05
    2. ' (' → logprob: -10.00004768371582
    3. '((' → logprob: -13.87504768371582
    4. '(' → logprob: -14.25004768371582
    5. '(len' → logprob: -15.00004768371582
    6. '(n' → logprob: -15.62504768371582
    7. '(node' → logprob: -16.00004768371582
    8. '   ' → logprob: -16.62504768371582
    9. '[number' → logprob: -16.87504768371582
    10. '(num' → logprob: -17.12504768371582

Token 162: 'number' (ID: 8096)
  Prédit: '(number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(number' → logprob: -0.008290559984743595
    2. 'number' → logprob: -4.883290767669678
    3. ' (' → logprob: -7.383290767669678
    4. ' number' → logprob: -10.00829029083252
    5. '[number' → logprob: -11.50829029083252
    6. '(' → logprob: -13.13329029083252
    7. '((' → logprob: -13.25829029083252
    8. '   ' → logprob: -13.63329029083252
    9. '<number' → logprob: -13.88329029083252
    10. '(len' → logprob: -14.88329029083252

Token 163: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -4.60414821645827e-06
    2. 'of' → logprob: -12.875004768371582
    3. '_nodes' → logprob: -13.250004768371582
    4. ' of' → logprob: -16.000003814697266
    5. '   ' → logprob: -16.750003814697266
    6. '```' → logprob: -17.750003814697266
    7. '+' → logprob: -18.375003814697266
    8. ' _' → logprob: -18.875003814697266
    9. '_OF' → logprob: -19.000003814697266
    10. '_number' → logprob: -19.125003814697266

Token 164: '_nodes' (ID: 34593)
  Prédit: '_nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -0.03811126574873924
    2. '(number' → logprob: -3.9131112098693848
    3. '(nodes' → logprob: -4.538111209869385
    4. 'nodes' → logprob: -5.288111209869385
    5. '(node' → logprob: -7.288111209869385
    6. 'Nodes' → logprob: -8.038111686706543
    7. '(len' → logprob: -9.288111686706543
    8. 'number' → logprob: -9.288111686706543
    9. '+' → logprob: -9.788111686706543
    10. '(n' → logprob: -9.913111686706543

Token 165: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.01603659801185131
    2. ' +' → logprob: -4.141036510467529
    3. ' ' → logprob: -13.891036987304688
    4. '+
' → logprob: -13.891036987304688
    5. '_plus' → logprob: -15.391036987304688
    6. ' plus' → logprob: -16.891036987304688
    7. '＋' → logprob: -16.891036987304688
    8. ' +
' → logprob: -17.016036987304688
    9. '```' → logprob: -17.141036987304688
    10. '+

' → logprob: -17.516036987304688

Token 166: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002632430987432599
    2. ' ' → logprob: -8.250263214111328
    3. '7' → logprob: -13.750263214111328
    4. '   ' → logprob: -14.750263214111328
    5. '2' → logprob: -15.250263214111328
    6. '(' → logprob: -15.875263214111328
    7. '```' → logprob: -17.250263214111328
    8. '  ' → logprob: -17.500263214111328
    9. ')' → logprob: -17.750263214111328
    10. '6' → logprob: -18.000263214111328

Token 167: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.176947600673884e-05
    2. ' ' → logprob: -10.750021934509277
    3. '   ' → logprob: -15.750021934509277
    4. '7' → logprob: -16.50002098083496
    5. '2' → logprob: -17.12502098083496
    6. '0' → logprob: -17.50002098083496
    7. '  ' → logprob: -18.25002098083496
    8. '１' → logprob: -18.62502098083496
    9. '```' → logprob: -18.87502098083496
    10. '6' → logprob: -19.37502098083496

Token 168: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3856492842023727e-06
    2. ')
' → logprob: -13.750000953674316
    3. ' )' → logprob: -15.750000953674316
    4. ')

' → logprob: -16.000001907348633
    5. ']' → logprob: -17.250001907348633
    6. '))' → logprob: -18.500001907348633
    7. '),' → logprob: -18.750001907348633
    8. '])' → logprob: -19.125001907348633
    9. '#' → logprob: -19.500001907348633
    10. '）' → logprob: -19.750001907348633

Token 169: 'visited' (ID: 52453)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.5252556204795837
    2. 'def' → logprob: -1.2752556800842285
    3. 'queue' → logprob: -2.4002556800842285
    4. 'visited' → logprob: -4.0252556800842285
    5. 'parent' → logprob: -4.4002556800842285
    6. 'deque' → logprob: -5.6502556800842285
    7. 'depth' → logprob: -6.9002556800842285
    8. 'q' → logprob: -7.2752556800842285
    9. ' stack' → logprob: -7.9002556800842285
    10. 'for' → logprob: -7.9002556800842285

Token 170: '_nodes' (ID: 34593)
  Prédit: '_nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -0.004238550551235676
    2. '_' → logprob: -5.504238605499268
    3. '[' → logprob: -9.87923812866211
    4. '_stack' → logprob: -10.75423812866211
    5. '[_' → logprob: -10.87923812866211
    6. '_n' → logprob: -11.37923812866211
    7. '_edges' → logprob: -11.50423812866211
    8. '_vertices' → logprob: -11.87923812866211
    9. '_[' → logprob: -12.62923812866211
    10. '_node' → logprob: -12.62923812866211

Token 171: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.5822400857578032e-05
    2. '=' → logprob: -11.750025749206543
    3. '\[' → logprob: -12.500025749206543
    4. '[:]' → logprob: -12.875025749206543
    5. '[node' → logprob: -13.000025749206543
    6. '<|end|>' → logprob: -13.250025749206543
    7. ' =' → logprob: -13.500025749206543
    8. ']' → logprob: -13.625025749206543
    9. '[...]' → logprob: -14.000025749206543
    10. ')' → logprob: -14.125025749206543

Token 172: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0028074870351701975
    2. '0' → logprob: -5.8778076171875
    3. ' ' → logprob: -12.8778076171875
    4. '[' → logprob: -17.3778076171875
    5. '   ' → logprob: -17.8778076171875
    6. '=' → logprob: -18.0028076171875
    7. '(' → logprob: -18.1278076171875
    8. ')' → logprob: -18.3778076171875
    9. '
' → logprob: -18.5028076171875
    10. '2' → logprob: -18.7528076171875

Token 173: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.4021237802808173e-05
    2. ']=' → logprob: -11.375014305114746
    3. ' ]' → logprob: -13.000014305114746
    4. '=' → logprob: -15.500014305114746
    5. ')' → logprob: -17.00001335144043
    6. ' =' → logprob: -17.75001335144043
    7. '[' → logprob: -18.50001335144043
    8. ']
' → logprob: -18.62501335144043
    9. '=True' → logprob: -19.37501335144043
    10. '   ' → logprob: -19.87501335144043

Token 174: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4741261601448059
    2. '=' → logprob: -0.9741261601448059
    3. '=True' → logprob: -9.974125862121582
    4. '=False' → logprob: -14.474125862121582
    5. ')' → logprob: -14.724125862121582
    6. '=

' → logprob: -15.099125862121582
    7. '[' → logprob: -15.224125862121582
    8. ']' → logprob: -15.724125862121582
    9. ' =
' → logprob: -15.724125862121582
    10. 'space' → logprob: -16.0991268157959

Token 175: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -4.5491004129871726e-05
    2. ' True' → logprob: -10.000045776367188
    3. '1' → logprob: -18.375045776367188
    4. 'False' → logprob: -18.875045776367188
    5. '(True' → logprob: -19.625045776367188
    6. '=True' → logprob: -20.500045776367188
    7. '0' → logprob: -20.875045776367188
    8. 'true' → logprob: -21.750045776367188
    9. 'Tr' → logprob: -22.500045776367188
    10. 'T' → logprob: -22.500045776367188

Token 176: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.059357840567827225
    2. 'queue' → logprob: -3.4343578815460205
    3. 'stack' → logprob: -4.184357643127441
    4. 'deque' → logprob: -6.184357643127441
    5. ',' → logprob: -6.434357643127441
    6. ' queue' → logprob: -7.434357643127441
    7. '\n' → logprob: -7.434357643127441
    8. ',
' → logprob: -7.559357643127441
    9. 'q' → logprob: -7.559357643127441
    10. 'for' → logprob: -7.684357643127441

Token 177: 'b' (ID: 65)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.3507934808731079
    2. 'stack' → logprob: -1.225793480873108
    3. 'deque' → logprob: -6.725793361663818
    4. 'parent' → logprob: -7.850793361663818
    5. ' queue' → logprob: -8.725793838500977
    6. 'for' → logprob: -8.725793838500977
    7. 'from' → logprob: -9.350793838500977
    8. 'q' → logprob: -9.350793838500977
    9. 'node' → logprob: -9.725793838500977
    10. 'to' → logprob: -9.850793838500977

Token 178: 'fs' (ID: 6469)
  Prédit: 'fs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fs' → logprob: -0.4337306022644043
    2. 'queue' → logprob: -1.0587306022644043
    3. 'read' → logprob: -6.308730602264404
    4. 'e' → logprob: -6.558730602264404
    5. 'r' → logprob: -7.808730602264404
    6. '   ' → logprob: -7.933730602264404
    7. 'q' → logprob: -8.433731079101562
    8. '_queue' → logprob: -8.683731079101562
    9. 'FS' → logprob: -8.808731079101562
    10. 'f' → logprob: -9.558731079101562

Token 179: '_queue' (ID: 25622)
  Prédit: '_queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_queue' → logprob: -0.32477426528930664
    2. '_' → logprob: -1.6997742652893066
    3. '(' → logprob: -2.5747742652893066
    4. '=' → logprob: -4.949774265289307
    5. '(queue' → logprob: -5.074774265289307
    6. ' =' → logprob: -5.574774265289307
    7. '_de' → logprob: -7.449774265289307
    8. 'queue' → logprob: -8.324773788452148
    9. 'deque' → logprob: -8.449773788452148
    10. '_q' → logprob: -9.824773788452148

Token 180: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02975083328783512
    2. '=' → logprob: -3.5297508239746094
    3. '.' → logprob: -16.02975082397461
    4. ' ' → logprob: -16.15475082397461
    5. ')' → logprob: -17.40475082397461
    6. ' ' → logprob: -18.27975082397461
    7. ' =
' → logprob: -18.77975082397461
    8. '=[]' → logprob: -18.77975082397461
    9. 'deque' → logprob: -19.15475082397461
    10. '	' → logprob: -19.27975082397461

Token 181: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.04858794063329697
    2. ' deque' → logprob: -3.0485880374908447
    3. 'de' → logprob: -14.673587799072266
    4. 'Deque' → logprob: -16.048587799072266
    5. '(de' → logprob: -20.173587799072266
    6. '	de' → logprob: -20.798587799072266
    7. 'queue' → logprob: -21.548587799072266
    8. '```' → logprob: -21.923587799072266
    9. ' dequeue' → logprob: -22.048587799072266
    10. 'collections' → logprob: -22.173587799072266

Token 182: '([' (ID: 5194)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.062406688928604126
    2. '([' → logprob: -3.3124067783355713
    3. '(' → logprob: -3.8124067783355713
    4. '([(' → logprob: -6.562406539916992
    5. '([]' → logprob: -7.562406539916992
    6. '((' → logprob: -11.062406539916992
    7. '([...' → logprob: -11.687406539916992
    8. '()]' → logprob: -12.437406539916992
    9. '[(' → logprob: -13.312406539916992
    10. '(['' → logprob: -13.312406539916992

Token 183: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.375000953674316
    3. '(' → logprob: -15.875000953674316
    4. '   ' → logprob: -19.25
    5. '```' → logprob: -21.75
    6. '１' → logprob: -22.125
    7. '
' → logprob: -22.75
    8. '۱' → logprob: -23.0
    9. '  ' → logprob: -23.625
    10. ')' → logprob: -24.125

Token 184: '])

' (ID: 21045)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -3.3451433409936726e-05
    2. ')' → logprob: -10.375033378601074
    3. ')])' → logprob: -13.750033378601074
    4. '))' → logprob: -14.500033378601074
    5. ' ])' → logprob: -15.125033378601074
    6. '])
' → logprob: -15.375033378601074
    7. ')]' → logprob: -16.50003433227539
    8. ']))' → logprob: -17.00003433227539
    9. ']' → logprob: -17.25003433227539
    10. '])

' → logprob: -18.50003433227539

Token 185: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.06684224307537079
    2. ' while' → logprob: -3.1918423175811768
    3. '   ' → logprob: -3.8168423175811768
    4. ')' → logprob: -6.816842079162598
    5. '```' → logprob: -8.316842079162598
    6. '	while' → logprob: -9.066842079162598
    7. '  ' → logprob: -10.566842079162598
    8. 'b' → logprob: -10.816842079162598
    9. ' ' → logprob: -10.941842079162598
    10. 'While' → logprob: -11.066842079162598

Token 186: ' bfs' (ID: 147571)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.47409316897392273
    2. ' bfs' → logprob: -0.9740931987762451
    3. '(b' → logprob: -11.724093437194824
    4. ' b' → logprob: -12.849093437194824
    5. 'len' → logprob: -13.099093437194824
    6. '	b' → logprob: -13.974093437194824
    7. ' ' → logprob: -14.599093437194824
    8. ' len' → logprob: -14.849093437194824
    9. 'bs' → logprob: -14.849093437194824
    10. '\b' → logprob: -15.724093437194824

Token 187: '_queue' (ID: 25622)
  Prédit: '_queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_queue' → logprob: -1.8624639324116288e-06
    2. '._' → logprob: -14.875001907348633
    3. '(_' → logprob: -15.000001907348633
    4. ' _' → logprob: -15.375001907348633
    5. '_' → logprob: -15.500001907348633
    6. '_q' → logprob: -15.750001907348633
    7. '_QUEUE' → logprob: -16.125001907348633
    8. '```' → logprob: -16.250001907348633
    9. '_b' → logprob: -16.625001907348633
    10. 'Queue' → logprob: -16.750001907348633

Token 188: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7335793375968933
    2. '.p' → logprob: -0.7335793375968933
    3. '):' → logprob: -3.733579397201538
    4. '.' → logprob: -4.733579158782959
    5. '.append' → logprob: -5.233579158782959
    6. 'opleft' → logprob: -7.733579158782959
    7. '.pop' → logprob: -8.358579635620117
    8. ':
' → logprob: -8.608579635620117
    9. ')' → logprob: -8.733579635620117
    10. '():' → logprob: -9.608579635620117

Token 189: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6188451051712036
    2. ' current' → logprob: -1.3688451051712036
    3. ' node' → logprob: -1.6188451051712036
    4. 'current' → logprob: -5.493844985961914
    5. 'node' → logprob: -5.493844985961914
    6. '    
' → logprob: -7.868844985961914
    7. '	node' → logprob: -8.743844985961914
    8. '```' → logprob: -9.493844985961914
    9. '	current' → logprob: -10.618844985961914
    10. ',node' → logprob: -11.868844985961914

Token 190: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' (adapté à ' current') → logprob: -0.47592735290527344
    2. ' current' → logprob: -0.9759273529052734
    3. '   ' → logprob: -6.350927352905273
    4. 'node' → logprob: -9.725927352905273
    5. ' node' → logprob: -10.725927352905273
    6. 'u' → logprob: -11.600927352905273
    7. '```' → logprob: -12.475927352905273
    8. '    
' → logprob: -12.725927352905273
    9. '	current' → logprob: -12.725927352905273
    10. ' u' → logprob: -14.225927352905273

Token 191: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.014337553642690182
    2. '_' → logprob: -4.264337539672852
    3. '_queue' → logprob: -9.889337539672852
    4. '_b' → logprob: -10.139337539672852
    5. '_nodes' → logprob: -10.389337539672852
    6. '_token' → logprob: -10.764337539672852
    7. '_vertex' → logprob: -10.889337539672852
    8. '=' → logprob: -13.139337539672852
    9. ' =' → logprob: -13.264337539672852
    10. '_current' → logprob: -13.639337539672852

Token 192: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141461491584778
    2. '=' → logprob: -1.7014145851135254
    3. ',' → logprob: -14.201415061950684
    4. ' ' → logprob: -15.576415061950684
    5. '   ' → logprob: -15.701415061950684
    6. '.' → logprob: -16.076414108276367
    7. ')' → logprob: -16.576414108276367
    8. ' =
' → logprob: -17.451414108276367
    9. '=b' → logprob: -17.701414108276367
    10. ' ' → logprob: -17.951414108276367

Token 193: ' bfs' (ID: 147571)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.04858771339058876
    2. ' bfs' → logprob: -3.0485877990722656
    3. ' ' → logprob: -15.923587799072266
    4. ' b' → logprob: -16.798587799072266
    5. '```' → logprob: -17.048587799072266
    6. 's' → logprob: -17.048587799072266
    7. 'bf' → logprob: -17.173587799072266
    8. 'q' → logprob: -17.673587799072266
    9. '	b' → logprob: -17.798587799072266
    10. 'deque' → logprob: -18.048587799072266

Token 194: '_queue' (ID: 25622)
  Prédit: '_queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_queue' → logprob: -5.319370302458992e-06
    2. 'queue' → logprob: -12.750005722045898
    3. '_' → logprob: -14.000005722045898
    4. '_node' → logprob: -14.500005722045898
    5. '_QUEUE' → logprob: -15.250005722045898
    6. 'Queue' → logprob: -15.375005722045898
    7. '_q' → logprob: -15.625005722045898
    8. '```' → logprob: -15.875005722045898
    9. ' _' → logprob: -16.7500057220459
    10. '   ' → logprob: -17.3750057220459

Token 195: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -3.6550729419104755e-05
    2. '.' → logprob: -10.250036239624023
    3. '.pop' → logprob: -14.250036239624023
    4. 'p' → logprob: -15.500036239624023
    5. '   ' → logprob: -15.500036239624023
    6. ' .' → logprob: -16.125036239624023
    7. ').' → logprob: -17.500036239624023
    8. '```' → logprob: -17.875036239624023
    9. '.dequeue' → logprob: -18.000036239624023
    10. ' ' → logprob: -18.250036239624023

Token 196: 'opleft' (ID: 182170)
  Prédit: 'opleft'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opleft' → logprob: -0.02329043485224247
    2. 'op' → logprob: -3.7732903957366943
    3. 'ople' → logprob: -10.273290634155273
    4. 'opl' → logprob: -11.648290634155273
    5. 'opf' → logprob: -14.398290634155273
    6. 'opup' → logprob: -14.648290634155273
    7. 'o' → logprob: -15.023290634155273
    8. 'opt' → logprob: -15.523290634155273
    9. 'oplevel' → logprob: -16.523290634155273
    10. 'ope' → logprob: -16.898290634155273

Token 197: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.4140441635390744e-05
    2. '(' → logprob: -11.750014305114746
    3. '()
' → logprob: -12.125014305114746
    4. '()

' → logprob: -14.750014305114746
    5. '()]' → logprob: -16.37501335144043
    6. ' ()' → logprob: -16.62501335144043
    7. '())' → logprob: -16.87501335144043
    8. '();' → logprob: -17.75001335144043
    9. ')' → logprob: -17.87501335144043
    10. '(),' → logprob: -18.25001335144043

Token 198: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0023117882665246725
    2. ' for' → logprob: -6.502311706542969
    3. '    
' → logprob: -7.252311706542969
    4. 'for' → logprob: -9.627311706542969
    5. '
' → logprob: -10.502311706542969
    6. '	for' → logprob: -13.127311706542969
    7. ' 
' → logprob: -13.502311706542969
    8. '<|end|>' → logprob: -14.002311706542969
    9. '  
' → logprob: -14.127311706542969
    10. '   
' → logprob: -14.377311706542969

Token 199: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.026353711262345314
    2. ' for' → logprob: -3.776353597640991
    3. '   ' → logprob: -5.77635383605957
    4. '    
' → logprob: -13.27635383605957
    5. '	for' → logprob: -13.77635383605957
    6. '```' → logprob: -14.90135383605957
    7. ' ' → logprob: -16.15135383605957
    8. '  ' → logprob: -16.52635383605957
    9. '
' → logprob: -17.27635383605957
    10. '       ' → logprob: -17.77635383605957

Token 200: ' neighbor' (ID: 13034)
  Prédit: 'neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -0.11190829426050186
    2. ' neighbor' → logprob: -2.361908197402954
    3. 'next' → logprob: -5.361908435821533
    4. ' next' → logprob: -5.736908435821533
    5. 'adj' → logprob: -5.736908435821533
    6. ' adjacent' → logprob: -7.736908435821533
    7. ' neighbour' → logprob: -10.611907958984375
    8. 'ne' → logprob: -10.861907958984375
    9. '   ' → logprob: -12.736907958984375
    10. ' neighboring' → logprob: -12.986907958984375

Token 201: '_node' (ID: 11390)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.023395953699946404
    2. 'in' → logprob: -3.7733960151672363
    3. ' ' → logprob: -9.273395538330078
    4. '_in' → logprob: -10.148395538330078
    5. '	in' → logprob: -11.773395538330078
    6. '_' → logprob: -12.148395538330078
    7. '  ' → logprob: -13.648395538330078
    8. '<|end|>' → logprob: -13.773395538330078
    9. 's' → logprob: -14.273395538330078
    10. '   ' → logprob: -15.023395538330078

Token 202: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012524725869297981
    2. 'in' → logprob: -4.387524604797363
    3. '	in' → logprob: -12.012524604797363
    4. ' ' → logprob: -12.387524604797363
    5. '    ' → logprob: -12.887524604797363
    6. '_in' → logprob: -14.262524604797363
    7. '   ' → logprob: -14.262524604797363
    8. 's' → logprob: -15.512524604797363
    9. '<|end|>' → logprob: -15.512524604797363
    10. ' ' → logprob: -15.512524604797363

Token 203: ' adjacency' (ID: 177015)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.10020774602890015
    2. ' adjacency' → logprob: -2.350207805633545
    3. '   ' → logprob: -14.225207328796387
    4. ' adj' → logprob: -15.100207328796387
    5. ' adjacent' → logprob: -16.225208282470703
    6. 'Adj' → logprob: -17.850208282470703
    7. ' ' → logprob: -18.350208282470703
    8. '  ' → logprob: -19.225208282470703
    9. '    ' → logprob: -19.225208282470703
    10. '_adj' → logprob: -19.850208282470703

Token 204: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -1.3856492842023727e-06
    2. '[' → logprob: -14.750000953674316
    3. 'list' → logprob: -15.250000953674316
    4. 'List' → logprob: -15.875000953674316
    5. '[_' → logprob: -16.000001907348633
    6. '[current' → logprob: -16.250001907348633
    7. '_LIST' → logprob: -17.000001907348633
    8. '   ' → logprob: -17.750001907348633
    9. '```' → logprob: -17.750001907348633
    10. '_' → logprob: -18.000001907348633

Token 205: '[current' (ID: 49470)
  Prédit: '[current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[current' → logprob: -1.5048530030981055e-06
    2. 'current' → logprob: -14.125001907348633
    3. '[' → logprob: -14.250001907348633
    4. '[cur' → logprob: -17.500001907348633
    5. ' current' → logprob: -18.625001907348633
    6. '   ' → logprob: -18.875001907348633
    7. ' [' → logprob: -18.875001907348633
    8. '[
' → logprob: -19.625001907348633
    9. '```' → logprob: -19.875001907348633
    10. '	current' → logprob: -20.000001907348633

Token 206: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -9.491498531133402e-06
    2. '_nodes' → logprob: -12.500009536743164
    3. '_' → logprob: -13.250009536743164
    4. 'node' → logprob: -13.750009536743164
    5. '[node' → logprob: -13.750009536743164
    6. '[current' → logprob: -15.000009536743164
    7. 'current' → logprob: -15.250009536743164
    8. '_list' → logprob: -15.500009536743164
    9. '```' → logprob: -16.000009536743164
    10. '_NODE' → logprob: -16.500009536743164

Token 207: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.023478398099541664
    2. ']:
' → logprob: -3.7734785079956055
    3. ']' → logprob: -8.898478507995605
    4. ']:
' → logprob: -10.148478507995605
    5. '):' → logprob: -10.273478507995605
    6. '):
' → logprob: -11.773478507995605
    7. '   ' → logprob: -12.398478507995605
    8. ':' → logprob: -12.523478507995605
    9. ' ]' → logprob: -13.023478507995605
    10. ']:

' → logprob: -13.398478507995605

Token 208: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02491174265742302
    2. '   ' → logprob: -4.274911880493164
    3. ' if' → logprob: -5.399911880493164
    4. '<|end|>' → logprob: -5.649911880493164
    5. ' ' → logprob: -6.524911880493164
    6. '    ' → logprob: -7.774911880493164
    7. 'if' → logprob: -8.899911880493164
    8. '        
' → logprob: -8.899911880493164
    9. ' 
' → logprob: -9.524911880493164
    10. '    
' → logprob: -9.524911880493164

Token 209: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.27406248450279236
    2. ' ' → logprob: -1.6490625143051147
    3. 'if' (adapté à ' if') → logprob: -3.774062395095825
    4. '        ' → logprob: -4.774062633514404
    5. '       ' → logprob: -5.024062633514404
    6. '           ' → logprob: -5.149062633514404
    7. ' 
' → logprob: -6.274062633514404
    8. '<|end|>' → logprob: -6.899062633514404
    9. '   ' → logprob: -8.524062156677246
    10. '    ' → logprob: -9.024062156677246

Token 210: ' visited' (ID: 18416)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.03804275393486023
    2. 'not' → logprob: -3.2880427837371826
    3. ' visited' → logprob: -14.538043022155762
    4. 'visited' → logprob: -15.163043022155762
    5. '!' → logprob: -15.288043022155762
    6. '(not' → logprob: -16.163042068481445
    7. '	not' → logprob: -16.288042068481445
    8. ' ' → logprob: -17.163042068481445
    9. ' ' → logprob: -17.788042068481445
    10. '   ' → logprob: -18.038042068481445

Token 211: '_nodes' (ID: 34593)
  Prédit: '_nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -2.5776860184123507e-06
    2. '_neighbors' → logprob: -14.12500286102295
    3. '_' → logprob: -14.75000286102295
    4. '[' → logprob: -14.87500286102295
    5. '_node' → logprob: -15.00000286102295
    6. '[_' → logprob: -15.37500286102295
    7. '
' → logprob: -15.62500286102295
    8. '```' → logprob: -15.75000286102295
    9. '

' → logprob: -16.750001907348633
    10. '[node' → logprob: -17.375001907348633

Token 212: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.320199877838604e-07
    2. '[
' → logprob: -15.125
    3. ' [' → logprob: -16.875
    4. '[current' → logprob: -17.25
    5. '[next' → logprob: -18.0
    6. '   ' → logprob: -19.875
    7. '```' → logprob: -19.875
    8. '[node' → logprob: -20.125
    9. '	' → logprob: -21.125
    10. '

' → logprob: -21.375

Token 213: 'neighbor' (ID: 108409)
  Prédit: 'neighbor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -7.541112427134067e-05
    2. ' neighbor' → logprob: -9.500075340270996
    3. '
' → logprob: -15.625075340270996
    4. '[' → logprob: -15.875075340270996
    5. '   ' → logprob: -17.250076293945312
    6. '_neighbor' → logprob: -18.000076293945312
    7. ']' → logprob: -18.125076293945312
    8. 'False' → logprob: -18.375076293945312
    9. '           ' → logprob: -18.875076293945312
    10. '

' → logprob: -19.125076293945312

Token 214: '_node' (ID: 11390)
  Prédit: '_nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -0.0015728295547887683
    2. '_node' → logprob: -6.501572608947754
    3. ']' → logprob: -10.126572608947754
    4. ']_' → logprob: -12.126572608947754
    5. '[node' → logprob: -12.626572608947754
    6. ']==' → logprob: -12.626572608947754
    7. '[' → logprob: -13.001572608947754
    8. '_]' → logprob: -13.251572608947754
    9. '   ' → logprob: -13.376572608947754
    10. '_' → logprob: -13.501572608947754

Token 215: ']:
' (ID: 22152)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01513759233057499
    2. ']==' → logprob: -4.390137672424316
    3. ' ]' → logprob: -6.765137672424316
    4. '==' → logprob: -7.140137672424316
    5. ' ==' → logprob: -7.640137672424316
    6. ']:' → logprob: -8.890137672424316
    7. ']:
' → logprob: -10.515137672424316
    8. ' is' → logprob: -11.640137672424316
    9. ']=' → logprob: -11.765137672424316
    10. ')' → logprob: -11.890137672424316

Token 216: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06515009701251984
    2. ':' → logprob: -3.065150022506714
    3. ' continue' → logprob: -4.315150260925293
    4. ':
' → logprob: -6.440150260925293
    5. 'continue' → logprob: -7.690150260925293
    6. '       ' → logprob: -8.065150260925293
    7. '               ' → logprob: -8.940150260925293
    8. ' continues' → logprob: -8.940150260925293
    9. ',' → logprob: -9.315150260925293
    10. '<|end|>' → logprob: -9.940150260925293

Token 217: ' continue' (ID: 4901)
  Prédit: ' continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.0328344888985157
    2. 'continue' (adapté à ' continue') → logprob: -3.907834529876709
    3. '           ' → logprob: -4.782834529876709
    4. '               ' → logprob: -6.157834529876709
    5. '       ' → logprob: -7.282834529876709
    6. ':' → logprob: -7.657834529876709
    7. '   ' → logprob: -8.53283405303955
    8. '	continue' → logprob: -9.65783405303955
    9. '_continue' → logprob: -9.78283405303955
    10. ' continues' → logprob: -10.03283405303955

Token 218: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17435261607170105
    2. '
' → logprob: -1.9243526458740234
    3. '        
' → logprob: -5.174352645874023
    4. ' visited' → logprob: -5.424352645874023
    5. 'visited' → logprob: -5.674352645874023
    6. ' 
' → logprob: -9.299352645874023
    7. '   ' → logprob: -9.424352645874023
    8. '
' → logprob: -9.549352645874023
    9. '    
' → logprob: -9.924352645874023
    10. '            
' → logprob: -10.049352645874023

Token 219: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019899355247616768
    2. ' visited' → logprob: -4.144899368286133
    3. 'visited' → logprob: -6.144899368286133
    4. '        
' → logprob: -6.769899368286133
    5. '   ' → logprob: -8.769899368286133
    6. '
' → logprob: -9.144899368286133
    7. ' 
' → logprob: -9.644899368286133
    8. '           ' → logprob: -9.644899368286133
    9. 'b' → logprob: -10.519899368286133
    10. '<|end|>' → logprob: -10.769899368286133

Token 220: ' visited' (ID: 18416)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8417234420776367
    2. 'visited' (adapté à ' visited') → logprob: -1.0917234420776367
    3. ' visited' → logprob: -1.4667234420776367
    4. '        
' → logprob: -6.966723442077637
    5. '   ' → logprob: -7.466723442077637
    6. '           ' → logprob: -7.841723442077637
    7. '
' → logprob: -8.091723442077637
    8. 'b' → logprob: -9.341723442077637
    9. ' bfs' → logprob: -9.341723442077637
    10. '            
' → logprob: -9.591723442077637

Token 221: '_nodes' (ID: 34593)
  Prédit: '_nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -9.253090865968261e-06
    2. '_tokens' → logprob: -11.875009536743164
    3. '_' → logprob: -13.625009536743164
    4. '```' → logprob: -14.250009536743164
    5. '[_' → logprob: -17.125009536743164
    6. ' _' → logprob: -17.375009536743164
    7. '[' → logprob: -17.375009536743164
    8. '
' → logprob: -17.500009536743164
    9. '_states' → logprob: -17.500009536743164
    10. 's' → logprob: -17.625009536743164

Token 222: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.9361264946837764e-07
    2. '```' → logprob: -16.875
    3. ' [' → logprob: -17.625
    4. '[node' → logprob: -18.0
    5. '[current' → logprob: -19.25
    6. '[
' → logprob: -19.625
    7. '[parent' → logprob: -19.75
    8. ')[' → logprob: -19.75
    9. '[next' → logprob: -20.125
    10. '\[' → logprob: -20.25

Token 223: 'neighbor' (ID: 108409)
  Prédit: 'neighbor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -5.5577775128767826e-06
    2. ' neighbor' → logprob: -12.125005722045898
    3. '[' → logprob: -16.8750057220459
    4. '_neighbor' → logprob: -17.0000057220459
    5. 'node' → logprob: -18.2500057220459
    6. 'neighbors' → logprob: -19.7500057220459
    7. '
' → logprob: -20.3750057220459
    8. '```' → logprob: -20.7500057220459
    9. 'ne' → logprob: -21.7500057220459
    10. ']' → logprob: -22.5000057220459

Token 224: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.036147404462099075
    2. '[' → logprob: -3.536147356033325
    3. '_nodes' → logprob: -5.161147594451904
    4. 's' → logprob: -8.286147117614746
    5. '_neighbor' → logprob: -8.286147117614746
    6. 'neighbor' → logprob: -9.911147117614746
    7. '[node' → logprob: -10.911147117614746
    8. ']' → logprob: -11.161147117614746
    9. '```' → logprob: -11.286147117614746
    10. '][' → logprob: -11.411147117614746

Token 225: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.1160349458805285e-05
    2. ']=' → logprob: -11.750011444091797
    3. ' ]' → logprob: -12.750011444091797
    4. '=' → logprob: -15.625011444091797
    5. ']
' → logprob: -16.500011444091797
    6. ')' → logprob: -17.250011444091797
    7. ' =' → logprob: -18.875011444091797
    8. ']

' → logprob: -19.000011444091797
    9. '[' → logprob: -19.625011444091797
    10. '   ' → logprob: -20.625011444091797

Token 226: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759406089782715
    2. '=' → logprob: -0.8259406089782715
    3. '=True' → logprob: -13.70094108581543
    4. ']' → logprob: -17.57594108581543
    5. ' ' → logprob: -17.95094108581543
    6. ')' → logprob: -17.95094108581543
    7. '[' → logprob: -18.32594108581543
    8. '   ' → logprob: -18.82594108581543
    9. ',' → logprob: -18.95094108581543
    10. '＝' → logprob: -19.07594108581543

Token 227: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.011047814972698689
    2. ' True' → logprob: -4.511047840118408
    3. '(True' → logprob: -19.51104736328125
    4. '=True' → logprob: -21.51104736328125
    5. 'Tr' → logprob: -22.88604736328125
    6. 'true' → logprob: -23.63604736328125
    7. ' Tru' → logprob: -24.13604736328125
    8. 'T' → logprob: -24.26104736328125
    9. '1' → logprob: -24.63604736328125
    10. '_true' → logprob: -24.76104736328125

Token 228: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22221006453037262
    2. '
' → logprob: -2.097210168838501
    3. 'b' → logprob: -2.972210168838501
    4. '        
' → logprob: -4.347209930419922
    5. '<|end|>' → logprob: -5.847209930419922
    6. ' 
' → logprob: -5.972209930419922
    7. '```' → logprob: -6.347209930419922
    8. '  
' → logprob: -6.972209930419922
    9. '   ' → logprob: -6.972209930419922
    10. '    
' → logprob: -7.097209930419922

Token 229: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04633225128054619
    2. '        
' → logprob: -4.046332359313965
    3. 'b' → logprob: -4.546332359313965
    4. '
' → logprob: -5.046332359313965
    5. 'sp' → logprob: -5.296332359313965
    6. '   ' → logprob: -6.546332359313965
    7. '```' → logprob: -6.921332359313965
    8. ' sp' → logprob: -7.421332359313965
    9. '	sp' → logprob: -7.421332359313965
    10. '    
' → logprob: -7.796332359313965

Token 230: ' spanning' (ID: 66335)
  Prédit: 'sp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sp' → logprob: -0.00414523808285594
    2. 'b' → logprob: -5.50414514541626
    3. 'span' → logprob: -11.129145622253418
    4. '```' → logprob: -11.254145622253418
    5. ' spanning' → logprob: -11.254145622253418
    6. '   ' → logprob: -11.754145622253418
    7. '       ' → logprob: -12.004145622253418
    8. 'current' → logprob: -12.379145622253418
    9. 'visited' → logprob: -13.129145622253418
    10. 'queue' → logprob: -13.754145622253418

Token 231: '_tree' (ID: 27118)
  Prédit: '_tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tree' → logprob: -2.2200749754119897e-06
    2. '_t' → logprob: -13.625001907348633
    3. '_' → logprob: -14.500001907348633
    4. '_TREE' → logprob: -16.000001907348633
    5. 'tree' → logprob: -16.125001907348633
    6. '_node' → logprob: -16.500001907348633
    7. '```' → logprob: -17.000001907348633
    8. ' _' → logprob: -17.125001907348633
    9. '<Tree' → logprob: -17.375001907348633
    10. ')_' → logprob: -17.500001907348633

Token 232: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -7.896309739408025e-07
    2. 'edges' → logprob: -15.625000953674316
    3. '_nodes' → logprob: -16.125
    4. '_sp' → logprob: -16.25
    5. '[_' → logprob: -16.625
    6. '_ed' → logprob: -17.5
    7. '_' → logprob: -17.625
    8. '```' → logprob: -17.625
    9. '_edge' → logprob: -17.75
    10. '\' → logprob: -18.25

Token 233: '[current' (ID: 49470)
  Prédit: '[current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[current' → logprob: -1.318681188422488e-05
    2. '[' → logprob: -11.37501335144043
    3. '[cur' → logprob: -13.87501335144043
    4. '[curr' → logprob: -14.75001335144043
    5. 'current' → logprob: -15.50001335144043
    6. '[node' → logprob: -16.00001335144043
    7. '[parent' → logprob: -17.25001335144043
    8. ' [' → logprob: -17.75001335144043
    9. '   ' → logprob: -17.87501335144043
    10. '```' → logprob: -18.62501335144043

Token 234: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.00041458409396000206
    2. 'node' → logprob: -7.8754143714904785
    3. '[node' → logprob: -10.875414848327637
    4. '][' → logprob: -12.125414848327637
    5. ']_' → logprob: -12.625414848327637
    6. '_nodes' → logprob: -13.000414848327637
    7. ')_' → logprob: -14.500414848327637
    8. '[' → logprob: -14.625414848327637
    9. 'Node' → logprob: -14.875414848327637
    10. ']' → logprob: -15.125414848327637

Token 235: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -1.8193366486229934e-05
    2. '.add' → logprob: -11.250018119812012
    3. ']' → logprob: -12.500018119812012
    4. ' ].' → logprob: -14.750018119812012
    5. '}.' → logprob: -15.500018119812012
    6. '[' → logprob: -15.500018119812012
    7. ').' → logprob: -15.750018119812012
    8. '.append' → logprob: -15.750018119812012
    9. '.' → logprob: -16.000019073486328
    10. '   ' → logprob: -16.125019073486328

Token 236: 'add' (ID: 964)
  Prédit: 'add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -6.704273118884885e-07
    2. '.add' → logprob: -14.500000953674316
    3. ' add' → logprob: -15.750000953674316
    4. 'append' → logprob: -18.875
    5. '	add' → logprob: -19.375
    6. 'update' → logprob: -19.75
    7. ')add' → logprob: -20.25
    8. '_add' → logprob: -20.375
    9. 'adde' → logprob: -21.75
    10. '(add' → logprob: -21.75

Token 237: '(ne' (ID: 79401)
  Prédit: '(ne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ne' → logprob: -1.981667537620524e-06
    2. 'neighbor' → logprob: -13.625001907348633
    3. '(' → logprob: -14.250001907348633
    4. '(
' → logprob: -16.500001907348633
    5. 'ne' → logprob: -18.750001907348633
    6. ' (' → logprob: -19.125001907348633
    7. '((' → logprob: -20.000001907348633
    8. '(next' → logprob: -20.500001907348633
    9. ' neighbor' → logprob: -20.625001907348633
    10. '(friend' → logprob: -21.125001907348633

Token 238: 'ighbor' (ID: 28225)
  Prédit: 'ighbor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ighbor' → logprob: -0.0005651841638609767
    2. 'gh' → logprob: -7.500565052032471
    3. 'igh' → logprob: -11.750565528869629
    4. 'ight' → logprob: -12.875565528869629
    5. 'ighbors' → logprob: -14.625565528869629
    6. 'neighbor' → logprob: -14.625565528869629
    7. 'ighborhood' → logprob: -15.250565528869629
    8. 'ighbour' → logprob: -15.625565528869629
    9. 'g' → logprob: -16.500564575195312
    10. 'ig' → logprob: -16.750564575195312

Token 239: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -8.2994620242971e-06
    2. '_nodes' → logprob: -11.750008583068848
    3. '_neighbor' → logprob: -16.00000762939453
    4. ')' → logprob: -16.37500762939453
    5. 'neighbor' → logprob: -16.75000762939453
    6. 'node' → logprob: -17.37500762939453
    7. ')_' → logprob: -18.87500762939453
    8. '_NODE' → logprob: -18.87500762939453
    9. '_' → logprob: -19.25000762939453
    10. '_neighbors' → logprob: -20.00000762939453

Token 240: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00018935515254270285
    2. ')
' → logprob: -8.625189781188965
    3. ' )' → logprob: -12.375189781188965
    4. '<|end|>' → logprob: -12.750189781188965
    5. '       ' → logprob: -13.625189781188965
    6. '   ' → logprob: -14.250189781188965
    7. '),' → logprob: -15.375189781188965
    8. '<|end|>' → logprob: -16.37518882751465
    9. ')

' → logprob: -16.62518882751465
    10. ')
' → logprob: -16.75018882751465

Token 241: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007641222910024226
    2. 'b' → logprob: -7.375763893127441
    3. '	b' → logprob: -10.250763893127441
    4. '        
' → logprob: -10.500763893127441
    5. '	' → logprob: -10.750763893127441
    6. '   ' → logprob: -11.250763893127441
    7. '<|end|>' → logprob: -11.625763893127441
    8. ' bfs' → logprob: -12.000763893127441
    9. ',b' → logprob: -12.500763893127441
    10. ')' → logprob: -12.500763893127441

Token 242: ' spanning' (ID: 66335)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.000516813131980598
    2. 'sp' → logprob: -8.125516891479492
    3. '       ' → logprob: -8.875516891479492
    4. ' bfs' → logprob: -10.000516891479492
    5. '   ' → logprob: -11.125516891479492
    6. '           ' → logprob: -11.625516891479492
    7. 'visited' → logprob: -12.125516891479492
    8. '```' → logprob: -12.625516891479492
    9. '         ' → logprob: -14.500516891479492
    10. ' b' → logprob: -14.625516891479492

Token 243: '_tree' (ID: 27118)
  Prédit: '_tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tree' → logprob: -3.774276774493046e-05
    2. 'tree' → logprob: -10.500038146972656
    3. '_queue' → logprob: -11.625038146972656
    4. '_node' → logprob: -15.125038146972656
    5. '_TREE' → logprob: -15.125038146972656
    6. 'Tree' → logprob: -15.875038146972656
    7. '_t' → logprob: -16.000038146972656
    8. '_' → logprob: -16.000038146972656
    9. '-tree' → logprob: -16.125038146972656
    10. '_nodes' → logprob: -16.500038146972656

Token 244: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.00018530222587287426
    2. '[current' → logprob: -9.000185012817383
    3. '_nodes' → logprob: -11.250185012817383
    4. 's' → logprob: -11.375185012817383
    5. 'edges' → logprob: -11.375185012817383
    6. 'current' → logprob: -11.750185012817383
    7. '[_' → logprob: -12.125185012817383
    8. '[' → logprob: -12.625185012817383
    9. '[node' → logprob: -12.750185012817383
    10. '```' → logprob: -13.250185012817383

Token 245: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0003832445072475821
    2. '[current' → logprob: -7.875383377075195
    3. 'neighbor' → logprob: -13.625383377075195
    4. '[next' → logprob: -13.875383377075195
    5. 'current' → logprob: -14.625383377075195
    6. '[node' → logprob: -15.375383377075195
    7. '```' → logprob: -15.750383377075195
    8. '[parent' → logprob: -17.375383377075195
    9. '[now' → logprob: -17.750383377075195
    10. '[cur' → logprob: -18.000383377075195

Token 246: 'neighbor' (ID: 108409)
  Prédit: 'neighbor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -7.696077227592468e-05
    2. 'current' → logprob: -10.000077247619629
    3. ' neighbor' → logprob: -10.375077247619629
    4. '```' → logprob: -15.875077247619629
    5. 'node' → logprob: -16.000076293945312
    6. 'neighbors' → logprob: -16.875076293945312
    7. '[' → logprob: -17.625076293945312
    8. '[current' → logprob: -17.625076293945312
    9. 'ne' → logprob: -17.875076293945312
    10. '
' → logprob: -17.875076293945312

Token 247: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.005488333757966757
    2. '_nodes' → logprob: -5.380488395690918
    3. 'node' → logprob: -8.005488395690918
    4. 'neighbor' → logprob: -8.255488395690918
    5. 'current' → logprob: -9.630488395690918
    6. 'ode' → logprob: -10.005488395690918
    7. '][' → logprob: -10.630488395690918
    8. ']' → logprob: -11.255488395690918
    9. '[node' → logprob: -11.255488395690918
    10. '```' → logprob: -11.380488395690918

Token 248: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.00190293591003865
    2. ').' → logprob: -6.501903057098389
    3. '.add' → logprob: -8.87690258026123
    4. '}.' → logprob: -9.37690258026123
    5. ']' → logprob: -9.50190258026123
    6. '[current' → logprob: -9.75190258026123
    7. '.' → logprob: -11.12690258026123
    8. ' ].' → logprob: -11.37690258026123
    9. '   ' → logprob: -12.00190258026123
    10. '[' → logprob: -12.62690258026123

Token 249: 'add' (ID: 964)
  Prédit: 'add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -1.3425219549390022e-05
    2. 'current' → logprob: -11.37501335144043
    3. '.add' → logprob: -13.37501335144043
    4. ' add' → logprob: -15.25001335144043
    5. '(add' → logprob: -18.87501335144043
    6. ' ' → logprob: -19.25001335144043
    7. ')add' → logprob: -19.25001335144043
    8. '(current' → logprob: -19.25001335144043
    9. '	add' → logprob: -19.37501335144043
    10. 'append' → logprob: -19.62501335144043

Token 250: '(current' (ID: 15023)
  Prédit: '(current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(current' → logprob: -2.069664333248511e-05
    2. '(' → logprob: -11.000020980834961
    3. 'current' → logprob: -13.125020980834961
    4. '(
' → logprob: -13.375020980834961
    5. '(cur' → logprob: -15.250020980834961
    6. '(curr' → logprob: -16.12502098083496
    7. '[current' → logprob: -18.62502098083496
    8. '()' → logprob: -18.87502098083496
    9. ',current' → logprob: -18.87502098083496
    10. '(node' → logprob: -19.00002098083496

Token 251: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -3.702754474943504e-05
    2. '_nodes' → logprob: -11.50003719329834
    3. '_' → logprob: -12.00003719329834
    4. 'node' → logprob: -12.12503719329834
    5. ')' → logprob: -12.25003719329834
    6. '_token' → logprob: -12.50003719329834
    7. ')_' → logprob: -12.62503719329834
    8. '_user' → logprob: -14.50003719329834
    9. 'current' → logprob: -14.75003719329834
    10. '[node' → logprob: -14.87503719329834

Token 252: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004779784067068249
    2. '       ' → logprob: -8.00047779083252
    3. ')
' → logprob: -9.37547779083252
    4. '<|end|>' → logprob: -9.87547779083252
    5. ' )' → logprob: -12.75047779083252
    6. '   ' → logprob: -13.75047779083252
    7. '<|end|>' → logprob: -15.12547779083252
    8. '))' → logprob: -15.37547779083252
    9. '```' → logprob: -15.37547779083252
    10. ')#' → logprob: -15.75047779083252

Token 253: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013560286723077297
    2. 'b' → logprob: -4.3885602951049805
    3. '   ' → logprob: -7.0135602951049805
    4. '```' → logprob: -9.26356029510498
    5. ' bfs' → logprob: -10.38856029510498
    6. '	b' → logprob: -11.88856029510498
    7. '        
' → logprob: -12.51356029510498
    8. '``' → logprob: -12.88856029510498
    9. '           ' → logprob: -13.13856029510498
    10. '<|end|>' → logprob: -13.26356029510498

Token 254: ' bfs' (ID: 147571)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0028065370861440897
    2. ' bfs' → logprob: -5.877806663513184
    3. '```' → logprob: -13.752806663513184
    4. '   ' → logprob: -14.752806663513184
    5. ' b' → logprob: -16.502805709838867
    6. '	b' → logprob: -17.127805709838867
    7. '       ' → logprob: -17.252805709838867
    8. 's' → logprob: -17.627805709838867
    9. ')' → logprob: -17.752805709838867
    10. 'B' → logprob: -18.002805709838867

Token 255: '_queue' (ID: 25622)
  Prédit: '_queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_queue' → logprob: -3.128163257315464e-07
    2. '_' → logprob: -15.125
    3. '_enqueue' → logprob: -17.375
    4. '_QUEUE' → logprob: -17.5
    5. '_q' → logprob: -17.625
    6. '._' → logprob: -18.75
    7. ' _' → logprob: -19.25
    8. '```' → logprob: -19.5
    9. 'Queue' → logprob: -19.75
    10. ')_' → logprob: -19.875

Token 256: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -2.558399319241289e-05
    2. '.' → logprob: -10.875025749206543
    3. '.enqueue' → logprob: -12.625025749206543
    4. '.extend' → logprob: -13.125025749206543
    5. '.p' → logprob: -14.125025749206543
    6. '.put' → logprob: -15.250025749206543
    7. ').' → logprob: -16.125024795532227
    8. 'append' → logprob: -16.625024795532227
    9. '.push' → logprob: -16.875024795532227
    10. '.app' → logprob: -16.875024795532227

Token 257: '(ne' (ID: 79401)
  Prédit: '(ne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ne' → logprob: -0.0005533903022296727
    2. '(' → logprob: -7.500553607940674
    3. '(
' → logprob: -15.500553131103516
    4. 'neighbor' → logprob: -17.250553131103516
    5. '((' → logprob: -17.625553131103516
    6. ' (' → logprob: -18.250553131103516
    7. '(next' → logprob: -18.625553131103516
    8. '(n' → logprob: -19.000553131103516
    9. '(friend' → logprob: -19.250553131103516
    10. '(

' → logprob: -19.375553131103516

Token 258: 'ighbor' (ID: 28225)
  Prédit: 'ighbor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ighbor' → logprob: -8.537868779967539e-06
    2. 'igh' → logprob: -12.000008583068848
    3. 'ight' → logprob: -13.625008583068848
    4. 'gh' → logprob: -14.000008583068848
    5. 'ighbour' → logprob: -16.25000762939453
    6. 'ighbors' → logprob: -16.37500762939453
    7. 'ighborhood' → logprob: -16.50000762939453
    8. 'ig' → logprob: -17.25000762939453
    9. 'i' → logprob: -18.87500762939453
    10. 'neighbor' → logprob: -19.62500762939453

Token 259: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -2.1008713702030946e-06
    2. 'node' → logprob: -14.250001907348633
    3. '_nodes' → logprob: -14.625001907348633
    4. '_' → logprob: -15.125001907348633
    5. '```' → logprob: -16.000001907348633
    6. ')_' → logprob: -16.750001907348633
    7. '_neighbor' → logprob: -16.750001907348633
    8. ')' → logprob: -16.875001907348633
    9. 'ode' → logprob: -17.375001907348633
    10. '_queue' → logprob: -17.500001907348633

Token 260: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3663626305060461e-05
    2. ')
' → logprob: -11.25001335144043
    3. ' )' → logprob: -15.12501335144043
    4. '<|end|>' → logprob: -15.87501335144043
    5. ')return' → logprob: -16.75001335144043
    6. '   ' → logprob: -17.12501335144043
    7. '),' → logprob: -17.50001335144043
    8. '```' → logprob: -17.62501335144043
    9. ')

' → logprob: -18.25001335144043
    10. '))' → logprob: -18.50001335144043

Token 261: 'node' (ID: 7005)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -1.3949306011199951
    2. 'def' → logprob: -1.8949306011199951
    3. 'parent' → logprob: -2.394930601119995
    4. 'color' → logprob: -2.519930601119995
    5. 'sub' → logprob: -2.769930601119995
    6. 'par' → logprob: -2.894930601119995
    7. 'node' → logprob: -2.894930601119995
    8. 'depth' → logprob: -3.769930601119995
    9. 'visited' → logprob: -3.769930601119995
    10. 'degree' → logprob: -3.769930601119995

Token 262: '_out' (ID: 12171)
  Prédit: '_colors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_colors' → logprob: -0.9097738265991211
    2. '_de' → logprob: -1.534773826599121
    3. '_par' → logprob: -2.284773826599121
    4. '_values' → logprob: -3.034773826599121
    5. '_degree' → logprob: -3.159773826599121
    6. '_stack' → logprob: -3.159773826599121
    7. '_color' → logprob: -3.659773826599121
    8. '_labels' → logprob: -3.909773826599121
    9. '_depth' → logprob: -4.034773826599121
    10. '_states' → logprob: -4.534773826599121

Token 263: '_de' (ID: 5047)
  Prédit: '_de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_de' → logprob: -0.406430184841156
    2. '_degree' → logprob: -2.031430244445801
    3. 'degree' → logprob: -2.531430244445801
    4. 'degrees' → logprob: -2.781430244445801
    5. 'put' → logprob: -3.281430244445801
    6. 'puts' → logprob: -5.031430244445801
    7. 'going' → logprob: -5.156430244445801
    8. '_edges' → logprob: -5.781430244445801
    9. 'deg' → logprob: -6.156430244445801
    10. 'comes' → logprob: -6.281430244445801

Token 264: 'grees' (ID: 86997)
  Prédit: 'gree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gree' → logprob: -0.1524413824081421
    2. 'grees' → logprob: -2.0274415016174316
    3. 'g' → logprob: -4.652441501617432
    4. 'gs' → logprob: -9.152441024780273
    5. 'gre' → logprob: -10.402441024780273
    6. 'gr' → logprob: -11.027441024780273
    7. 'gress' → logprob: -11.402441024780273
    8. 'gres' → logprob: -12.277441024780273
    9. 'egree' → logprob: -12.527441024780273
    10. 'G' → logprob: -13.777441024780273

Token 265: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01815790683031082
    2. '=' → logprob: -4.018157958984375
    3. '[' → logprob: -12.143157958984375
    4. ' =[' → logprob: -14.143157958984375
    5. ' ' → logprob: -14.518157958984375
    6. ',' → logprob: -14.893157958984375
    7. '=[' → logprob: -14.893157958984375
    8. ')' → logprob: -15.393157958984375
    9. '=[]' → logprob: -15.518157958984375
    10. '_' → logprob: -16.268157958984375

Token 266: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.02364025078713894
    2. ' [' → logprob: -3.7736401557922363
    3. '[len' → logprob: -8.023640632629395
    4. '[node' → logprob: -9.898640632629395
    5. '[number' → logprob: -12.398640632629395
    6. '[n' → logprob: -13.023640632629395
    7. '[count' → logprob: -13.148640632629395
    8. '[s' → logprob: -14.023640632629395
    9. '[current' → logprob: -14.023640632629395
    10. '[int' → logprob: -14.023640632629395

Token 267: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01127711869776249
    2. 'len' → logprob: -4.511277198791504
    3. ' ' → logprob: -8.761277198791504
    4. ' len' → logprob: -9.636277198791504
    5. 'set' → logprob: -13.011277198791504
    6. '(len' → logprob: -13.636277198791504
    7. '   ' → logprob: -14.511277198791504
    8. ']' → logprob: -14.573777198791504
    9. '```' → logprob: -14.698777198791504
    10. 'sum' → logprob: -15.136277198791504

Token 268: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06900171935558319
    2. ' for' → logprob: -2.9440016746520996
    3. 'for' → logprob: -4.3190016746521
    4. ']*(' → logprob: -7.4440016746521
    5. ']*' → logprob: -10.319002151489258
    6. ' ' → logprob: -10.569002151489258
    7. ' ]' → logprob: -10.944002151489258
    8. '(' → logprob: -11.069002151489258
    9. '	for' → logprob: -11.694002151489258
    10. '   ' → logprob: -12.069002151489258

Token 269: ' *' (ID: 425)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5131145119667053
    2. ' for' → logprob: -1.5131144523620605
    3. '*' → logprob: -2.7631144523620605
    4. '*(' → logprob: -3.0131144523620605
    5. '+' → logprob: -3.8881144523620605
    6. '(number' → logprob: -4.0131144523620605
    7. '(' → logprob: -4.1381144523620605
    8. ' *' → logprob: -5.3881144523620605
    9. ')' → logprob: -5.5131144523620605
    10. '(node' → logprob: -6.2631144523620605

Token 270: ' (' (ID: 350)
  Prédit: '(number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(number' → logprob: -0.00029995047952979803
    2. '(len' → logprob: -8.250300407409668
    3. ' (' → logprob: -10.250300407409668
    4. '(n' → logprob: -13.500300407409668
    5. '(node' → logprob: -14.375300407409668
    6. '(length' → logprob: -14.750300407409668
    7. '(' → logprob: -14.750300407409668
    8. '((' → logprob: -15.375300407409668
    9. '   ' → logprob: -16.00029945373535
    10. '(num' → logprob: -16.75029945373535

Token 271: 'number' (ID: 8096)
  Prédit: '(number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(number' → logprob: -0.0793793573975563
    2. 'number' → logprob: -2.5793793201446533
    3. '(len' → logprob: -7.954379558563232
    4. 'len' → logprob: -9.079379081726074
    5. '[number' → logprob: -11.204379081726074
    6. ' number' → logprob: -12.079379081726074
    7. ' (' → logprob: -12.579379081726074
    8. '<number' → logprob: -14.704379081726074
    9. '(n' → logprob: -14.954379081726074
    10. '(' → logprob: -15.204379081726074

Token 272: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -1.5332478142227046e-05
    2. '_nodes' → logprob: -11.625015258789062
    3. 'of' → logprob: -12.000015258789062
    4. ' of' → logprob: -15.500015258789062
    5. '_OF' → logprob: -18.000015258789062
    6. '```' → logprob: -18.000015258789062
    7. 'Of' → logprob: -18.125015258789062
    8. ')' → logprob: -18.500015258789062
    9. '__' → logprob: -18.750015258789062
    10. '_edges' → logprob: -19.000015258789062

Token 273: '_nodes' (ID: 34593)
  Prédit: '_nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -0.004770091734826565
    2. 'nodes' → logprob: -5.379770278930664
    3. '_edges' → logprob: -9.379770278930664
    4. 'node' → logprob: -10.754770278930664
    5. 'Nodes' → logprob: -11.379770278930664
    6. '(nodes' → logprob: -12.129770278930664
    7. 'len' → logprob: -12.379770278930664
    8. '(' → logprob: -12.629770278930664
    9. 'number' → logprob: -13.254770278930664
    10. '1' → logprob: -13.254770278930664

Token 274: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.01109261903911829
    2. ' +' → logprob: -4.511092662811279
    3. '+
' → logprob: -10.136092185974121
    4. ')' → logprob: -13.136092185974121
    5. ' +
' → logprob: -13.136092185974121
    6. '+)' → logprob: -13.886092185974121
    7. '+

' → logprob: -16.136093139648438
    8. '[' → logprob: -16.886093139648438
    9. ' ' → logprob: -16.886093139648438
    10. '<|end|>' → logprob: -17.136093139648438

Token 275: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00016587569552939385
    2. ' ' → logprob: -8.750165939331055
    3. ')' → logprob: -13.250165939331055
    4. '   ' → logprob: -13.375165939331055
    5. '```' → logprob: -13.937665939331055
    6. '
' → logprob: -14.500165939331055
    7. '(' → logprob: -15.312665939331055
    8. '

' → logprob: -15.500165939331055
    9. '2' → logprob: -15.562665939331055
    10. '+' → logprob: -15.625165939331055

Token 276: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.438573680294212e-06
    2. ' ' → logprob: -12.250005722045898
    3. '2' → logprob: -15.125005722045898
    4. '```' → logprob: -16.1250057220459
    5. '   ' → logprob: -16.2500057220459
    6. '
' → logprob: -16.5000057220459
    7. '0' → logprob: -17.8125057220459
    8. '１' → logprob: -17.8750057220459
    9. '3' → logprob: -18.0000057220459
    10. '7' → logprob: -18.1250057220459

Token 277: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.4881879400927573e-05
    2. ')
' → logprob: -10.375035285949707
    3. ')

' → logprob: -12.625035285949707
    4. ' )' → logprob: -15.125035285949707
    5. ')
' → logprob: -17.37503433227539
    6. ']' → logprob: -19.25003433227539
    7. '),' → logprob: -19.62503433227539
    8. ' ' → logprob: -20.00003433227539
    9. ')`' → logprob: -20.00003433227539
    10. '
' → logprob: -20.12503433227539

Token 278: 'edge' (ID: 13457)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.006354258395731449
    2. 'def' → logprob: -5.506354331970215
    3. 'stack' → logprob: -7.006354331970215
    4. 'degree' → logprob: -7.881354331970215
    5. 'result' → logprob: -8.006354331970215
    6. 'parent' → logprob: -8.881354331970215
    7. 'edge' → logprob: -9.006354331970215
    8. ' for' → logprob: -9.256354331970215
    9. 'visited' → logprob: -9.381354331970215
    10. 'out' → logprob: -10.381354331970215

Token 279: '_or' (ID: 15400)
  Prédit: '_counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_counts' → logprob: -0.9390541315078735
    2. '_de' → logprob: -1.5640541315078735
    3. 's' → logprob: -2.314054012298584
    4. '_list' → logprob: -2.564054012298584
    5. '_out' → logprob: -2.564054012298584
    6. '_count' → logprob: -2.814054012298584
    7. '_in' → logprob: -3.814054012298584
    8. '_' → logprob: -4.064054012298584
    9. '_indices' → logprob: -4.439054012298584
    10. '_usage' → logprob: -4.814054012298584

Token 280: 'ient' (ID: 773)
  Prédit: 'der'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'der' → logprob: -0.48843032121658325
    2. 'ient' → logprob: -1.2384302616119385
    3. 'ientation' → logprob: -2.7384302616119385
    4. 'ders' → logprob: -4.488430500030518
    5. 'igin' → logprob: -4.988430500030518
    6. 'd' → logprob: -5.863430500030518
    7. 'iented' → logprob: -6.363430500030518
    8. 'iginal' → logprob: -6.488430500030518
    9. 'bit' → logprob: -7.238430500030518
    10. 'ent' → logprob: -7.363430500030518

Token 281: 'ations' (ID: 929)
  Prédit: 'ations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ations' → logprob: -0.16203400492668152
    2. 'ation' → logprob: -1.912034034729004
    3. 's' → logprob: -7.037034034729004
    4. 'ed' → logprob: -8.162034034729004
    5. '_edges' → logprob: -8.662034034729004
    6. 'edges' → logprob: -8.787034034729004
    7. ' =' → logprob: -9.162034034729004
    8. '=' → logprob: -9.537034034729004
    9. '[' → logprob: -10.537034034729004
    10. '```' → logprob: -11.162034034729004

Token 282: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029753148555755615
    2. '=' → logprob: -3.5297532081604004
    3. '=[]' → logprob: -14.029752731323242
    4. '[' → logprob: -14.154752731323242
    5. ' ' → logprob: -14.154752731323242
    6. '[:]' → logprob: -16.529752731323242
    7. '_' → logprob: -16.654752731323242
    8. ')' → logprob: -16.904752731323242
    9. ' =[' → logprob: -16.904752731323242
    10. ' =
' → logprob: -17.029752731323242

Token 283: ' []

' (ID: 32833)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.061181385070085526
    2. '[]' → logprob: -3.3111813068389893
    3. '{}' → logprob: -4.436181545257568
    4. '[-' → logprob: -4.561181545257568
    5. '['' → logprob: -8.06118106842041
    6. ' [' → logprob: -9.31118106842041
    7. '[[' → logprob: -9.93618106842041
    8. '["' → logprob: -10.06118106842041
    9. '{' → logprob: -11.06118106842041
    10. '[:]' → logprob: -11.06118106842041

Token 284: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.023313960060477257
    2. 'def' → logprob: -3.7733139991760254
    3. ' for' → logprob: -10.273313522338867
    4. 'stack' → logprob: -10.648313522338867
    5. 'visited' → logprob: -11.898313522338867
    6. 'queue' → logprob: -13.523313522338867
    7. 'deque' → logprob: -14.523313522338867
    8. '```' → logprob: -15.148313522338867
    9. '   ' → logprob: -15.398313522338867
    10. 'b' → logprob: -15.398313522338867

Token 285: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.5517955422401428
    2. ' node' → logprob: -1.551795482635498
    3. 'current' → logprob: -2.051795482635498
    4. ' current' → logprob: -2.551795482635498
    5. 'u' → logprob: -5.551795482635498
    6. 'parent' → logprob: -7.301795482635498
    7. 'i' → logprob: -8.051795959472656
    8. ' parent' → logprob: -8.051795959472656
    9. ' u' → logprob: -8.426795959472656
    10. ' i' → logprob: -9.301795959472656

Token 286: '_a' (ID: 10852)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10358184576034546
    2. '_' → logprob: -2.8535819053649902
    3. 'in' → logprob: -3.4785819053649902
    4. '_in' → logprob: -4.72858190536499
    5. ' ' → logprob: -7.85358190536499
    6. ',' → logprob: -8.228581428527832
    7. ' _' → logprob: -8.478581428527832
    8. '	in' → logprob: -9.478581428527832
    9. ' i' → logprob: -10.353581428527832
    10. '_i' → logprob: -10.853581428527832

Token 287: ',' (ID: 11)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.20188768208026886
    2. ' in' → logprob: -1.9518877267837524
    3. ',' → logprob: -3.201887607574463
    4. ' ,' → logprob: -10.701888084411621
    5. 's' → logprob: -11.076888084411621
    6. ' ' → logprob: -11.576888084411621
    7. '<|end|>' → logprob: -11.951888084411621
    8. '1' → logprob: -12.201888084411621
    9. '```' → logprob: -12.389388084411621
    10. '.' → logprob: -12.451888084411621

Token 288: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.11285670101642609
    2. ' node' → logprob: -2.23785662651062
    3. '(node' → logprob: -11.4878568649292
    4. '[node' → logprob: -11.4878568649292
    5. 'edge' → logprob: -11.6128568649292
    6. ',node' → logprob: -13.4878568649292
    7. '	node' → logprob: -13.9878568649292
    8. '_node' → logprob: -14.4878568649292
    9. '   ' → logprob: -14.9878568649292
    10. 'nodes' → logprob: -15.3628568649292

Token 289: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.4953193664550781
    2. ',' → logprob: -1.6203193664550781
    3. ',_' → logprob: -1.7453193664550781
    4. 'b' → logprob: -4.870319366455078
    5. '_a' → logprob: -5.370319366455078
    6. 's' → logprob: -5.870319366455078
    7. '_list' → logprob: -6.870319366455078
    8. ' in' → logprob: -7.495319366455078
    9. 'a' → logprob: -8.370319366455078
    10. '_,' → logprob: -8.495319366455078

Token 290: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3485879898071289
    2. 'in' → logprob: -1.223587989807129
    3. ' ' → logprob: -9.223587989807129
    4. ',' → logprob: -10.223587989807129
    5. '	in' → logprob: -13.098587989807129
    6. '  ' → logprob: -13.348587989807129
    7. '   ' → logprob: -14.098587989807129
    8. ')' → logprob: -14.598587989807129
    9. ' ' → logprob: -14.598587989807129
    10. ' ,' → logprob: -14.598587989807129

Token 291: ' edge' (ID: 11165)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.00020985817536711693
    2. ' edge' → logprob: -8.50020980834961
    3. 'enumer' → logprob: -13.00020980834961
    4. 'range' → logprob: -14.25020980834961
    5. '(edge' → logprob: -14.25020980834961
    6. 'sp' → logprob: -14.62520980834961
    7. 'span' → logprob: -14.75020980834961
    8. '[' → logprob: -15.25020980834961
    9. 'edges' → logprob: -15.37520980834961
    10. '=edge' → logprob: -15.37520980834961

Token 292: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -8.792751032160595e-05
    2. 's' → logprob: -9.87508773803711
    3. '_' → logprob: -10.87508773803711
    4. ' in' → logprob: -12.00008773803711
    5. '_in' → logprob: -12.00008773803711
    6. 'in' → logprob: -13.12508773803711
    7. 'List' → logprob: -14.12508773803711
    8. 'list' → logprob: -14.25008773803711
    9. '_l' → logprob: -14.50008773803711
    10. '_List' → logprob: -14.62508773803711

Token 293: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06197956204414368
    2. ':
' → logprob: -2.8119795322418213
    3. '   ' → logprob: -12.186979293823242
    4. ':
' → logprob: -13.436979293823242
    5. '):
' → logprob: -13.811979293823242
    6. ',' → logprob: -14.061979293823242
    7. ':

' → logprob: -14.311979293823242
    8. '=' → logprob: -14.311979293823242
    9. 'if' → logprob: -14.561979293823242
    10. ' if' → logprob: -14.811979293823242

Token 294: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0021025598980486393
    2. 'if' → logprob: -6.877102375030518
    3. ' if' → logprob: -6.877102375030518
    4. 'edge' → logprob: -10.877102851867676
    5. '       ' → logprob: -11.627102851867676
    6. ' edge' → logprob: -12.252102851867676
    7. '<|end|>' → logprob: -13.502102851867676
    8. '    
' → logprob: -13.877102851867676
    9. ' ' → logprob: -13.877102851867676
    10. '	if' → logprob: -14.127102851867676

Token 295: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.009106826968491077
    2. '   ' → logprob: -4.884106636047363
    3. 'edge' → logprob: -6.634106636047363
    4. 'node' → logprob: -9.509106636047363
    5. ' if' → logprob: -10.134106636047363
    6. '```' → logprob: -10.259106636047363
    7. '       ' → logprob: -11.134106636047363
    8. 'for' → logprob: -12.259106636047363
    9. '#' → logprob: -13.259106636047363
    10. 'orientation' → logprob: -13.509106636047363

Token 296: ' node' (ID: 4596)
  Prédit: ' node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' node' → logprob: -0.4312129616737366
    2. 'node' → logprob: -1.0562129020690918
    3. '(node' → logprob: -7.181212902069092
    4. 'neighbor' → logprob: -7.181212902069092
    5. ' (' → logprob: -8.30621337890625
    6. ' neighbor' → logprob: -9.05621337890625
    7. '	node' → logprob: -9.05621337890625
    8. ' ' → logprob: -9.30621337890625
    9. 'edge' → logprob: -9.30621337890625
    10. ' edge' → logprob: -9.55621337890625

Token 297: '_b' (ID: 1535)
  Prédit: '_a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.4531248211860657
    2. '_b' → logprob: -1.203124761581421
    3. ' in' → logprob: -3.703124761581421
    4. 'a' → logprob: -4.203125
    5. 'in' → logprob: -4.328125
    6. 's' → logprob: -5.703125
    7. '_out' → logprob: -5.703125
    8. '_in' → logprob: -6.578125
    9. 'b' → logprob: -6.828125
    10. 'node' → logprob: -7.953125

Token 298: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10062974691390991
    2. 'in' → logprob: -2.3506298065185547
    3. ' not' → logprob: -8.475629806518555
    4. ' ' → logprob: -8.600629806518555
    5. 'not' → logprob: -11.600629806518555
    6. ' i' → logprob: -12.100629806518555
    7. '
' → logprob: -12.475629806518555
    8. '	in' → logprob: -12.725629806518555
    9. ' 
' → logprob: -13.538129806518555
    10. ' ' → logprob: -13.788129806518555

Token 299: ' spanning' (ID: 66335)
  Prédit: 'sp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sp' → logprob: -0.07005436718463898
    2. ' spanning' → logprob: -2.695054292678833
    3. 'span' → logprob: -9.195054054260254
    4. 'spann' → logprob: -11.695054054260254
    5. '	sp' → logprob: -12.320054054260254
    6. 'spacing' → logprob: -13.695054054260254
    7. '(sp' → logprob: -14.570054054260254
    8. ' sp' → logprob: -14.695054054260254
    9. '_sp' → logprob: -15.570054054260254
    10. '   ' → logprob: -15.570054054260254

Token 300: '_tree' (ID: 27118)
  Prédit: '_tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tree' → logprob: -1.9146995327901095e-05
    2. 'tree' → logprob: -10.875019073486328
    3. '_TREE' → logprob: -16.500019073486328
    4. ' tree' → logprob: -17.250019073486328
    5. '-tree' → logprob: -17.500019073486328
    6. '_t' → logprob: -18.875019073486328
    7. '_' → logprob: -19.000019073486328
    8. 'trees' → logprob: -19.375019073486328
    9. '<Tree' → logprob: -19.500019073486328
    10. '```' → logprob: -19.625019073486328

Token 301: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -7.896309739408025e-07
    2. 'edges' → logprob: -14.750000953674316
    3. '_nodes' → logprob: -16.125
    4. '_ed' → logprob: -16.625
    5. '[node' → logprob: -17.25
    6. '[' → logprob: -17.5
    7. '[_' → logprob: -17.875
    8. '
' → logprob: -18.5
    9. '_edge' → logprob: -18.5
    10. 's' → logprob: -18.5

Token 302: '[node' (ID: 67268)
  Prédit: '[node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[node' → logprob: -1.8624639324116288e-06
    2. '[current' → logprob: -13.375001907348633
    3. '[' → logprob: -15.125001907348633
    4. 'node' → logprob: -18.500001907348633
    5. '(node' → logprob: -18.500001907348633
    6. ' [' → logprob: -19.250001907348633
    7. '[[' → logprob: -20.000001907348633
    8. '[user' → logprob: -20.000001907348633
    9. '[next' → logprob: -20.000001907348633
    10. '[a' → logprob: -20.125001907348633

Token 303: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.00129785411991179
    2. '_b' → logprob: -6.876297950744629
    3. 'a' → logprob: -8.251297950744629
    4. '[a' → logprob: -13.501297950744629
    5. 'b' → logprob: -13.626297950744629
    6. ']' → logprob: -16.001296997070312
    7. '[node' → logprob: -16.126296997070312
    8. '][' → logprob: -16.126296997070312
    9. 's' → logprob: -16.251296997070312
    10. '_or' → logprob: -16.376296997070312

Token 304: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.18019132316112518
    2. '):
' → logprob: -1.8051912784576416
    3. ' ):' → logprob: -8.680191040039062
    4. ')' → logprob: -8.805191040039062
    5. ' ):
' → logprob: -10.180191040039062
    6. '   ' → logprob: -10.305191040039062
    7. ':' → logprob: -10.555191040039062
    8. '):
' → logprob: -11.305191040039062
    9. '):

' → logprob: -12.680191040039062
    10. ']:' → logprob: -12.930191040039062

Token 305: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11154613643884659
    2. '   ' → logprob: -2.486546039581299
    3. ':
' → logprob: -4.111546039581299
    4. ':' → logprob: -5.611546039581299
    5. 'edge' → logprob: -6.736546039581299
    6. '):
' → logprob: -7.736546039581299
    7. ' edge' → logprob: -7.736546039581299
    8. 'node' → logprob: -9.986546516418457
    9. '
' → logprob: -10.236546516418457
    10. ',' → logprob: -10.611546516418457

Token 306: ' continue' (ID: 4901)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.28566887974739075
    2. '   ' → logprob: -1.5356688499450684
    3. 'node' → logprob: -3.7856688499450684
    4. '       ' → logprob: -4.910668849945068
    5. ' edge' → logprob: -5.910668849945068
    6. 'orientation' → logprob: -9.160669326782227
    7. '           ' → logprob: -9.285669326782227
    8. ' node' → logprob: -9.410669326782227
    9. '```' → logprob: -10.285669326782227
    10. ' ' → logprob: -11.410669326782227

Token 307: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002115404698997736
    2. '
' → logprob: -6.627115249633789
    3. '    
' → logprob: -7.252115249633789
    4. 'edge' → logprob: -10.377115249633789
    5. ' edge' → logprob: -10.877115249633789
    6. '<|end|>' → logprob: -11.627115249633789
    7. ')' → logprob: -12.252115249633789
    8. '  
' → logprob: -13.252115249633789
    9. '   
' → logprob: -13.252115249633789
    10. '        
' → logprob: -13.377115249633789

Token 308: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0001980570232262835
    2. 'edge' → logprob: -9.375198364257812
    3. ' edge' → logprob: -9.875198364257812
    4. '    
' → logprob: -10.500198364257812
    5. '
' → logprob: -10.750198364257812
    6. 'node' → logprob: -12.500198364257812
    7. 'if' → logprob: -13.250198364257812
    8. ' if' → logprob: -13.625198364257812
    9. ')' → logprob: -14.000198364257812
    10. ' node' → logprob: -14.125198364257812

Token 309: ' edge' (ID: 11165)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' (adapté à ' edge') → logprob: -0.09144974499940872
    2. '   ' → logprob: -2.716449737548828
    3. ' edge' → logprob: -4.091449737548828
    4. 'node' → logprob: -5.966449737548828
    5. 'if' → logprob: -6.466449737548828
    6. ' if' → logprob: -8.591449737548828
    7. ' node' → logprob: -9.216449737548828
    8. 'orientation' → logprob: -10.341449737548828
    9. '#' → logprob: -10.841449737548828
    10. '```' → logprob: -10.966449737548828

Token 310: '_or' (ID: 15400)
  Prédit: '_or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_or' → logprob: -0.0011260485043749213
    2. '_orientation' → logprob: -7.126125812530518
    3. '_' → logprob: -8.126126289367676
    4. '_out' → logprob: -12.376126289367676
    5. ' _' → logprob: -12.751126289367676
    6. 's' → logprob: -13.126126289367676
    7. '_s' → logprob: -13.251126289367676
    8. 'or' → logprob: -14.376126289367676
    9. '_space' → logprob: -14.376126289367676
    10. ')_' → logprob: -14.376126289367676

Token 311: 'ient' (ID: 773)
  Prédit: 'ient'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ient' → logprob: -0.001048412173986435
    2. 'ent' → logprob: -6.876048564910889
    3. 'ientation' → logprob: -11.62604808807373
    4. 'i' → logprob: -12.50104808807373
    5. 'iented' → logprob: -13.75104808807373
    6. 'int' → logprob: -15.25104808807373
    7. 't' → logprob: -15.50104808807373
    8. 'e' → logprob: -15.50104808807373
    9. 'der' → logprob: -16.001049041748047
    10. 'entions' → logprob: -16.001049041748047

Token 312: 'ations' (ID: 929)
  Prédit: 'ations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ations' → logprob: -0.23364196717739105
    2. 'ation' → logprob: -1.6086419820785522
    3. '=' → logprob: -4.858642101287842
    4. '_edges' → logprob: -9.358641624450684
    5. '_edge' → logprob: -9.858641624450684
    6. 'edge' → logprob: -9.983641624450684
    7. '=edge' → logprob: -10.233641624450684
    8. '_' → logprob: -10.358641624450684
    9. ',' → logprob: -10.358641624450684
    10. 'edges' → logprob: -10.483641624450684

Token 313: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.006798379123210907
    2. '.' → logprob: -5.006798267364502
    3. '.ap' → logprob: -10.13179874420166
    4. '.app' → logprob: -10.63179874420166
    5. ' .' → logprob: -11.38179874420166
    6. '.extend' → logprob: -11.88179874420166
    7. '.push' → logprob: -15.63179874420166
    8. ').' → logprob: -15.88179874420166
    9. '.Append' → logprob: -16.256797790527344
    10. ' ' → logprob: -16.381797790527344

Token 314: '('{}' (ID: 179645)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '((' → logprob: -0.025979770347476006
    2. '(' → logprob: -3.77597975730896
    3. '(f' → logprob: -6.400979995727539
    4. '('' → logprob: -7.400979995727539
    5. '(('' → logprob: -8.400979995727539
    6. '("' → logprob: -8.775979995727539
    7. '(("' → logprob: -9.775979995727539
    8. '(node' → logprob: -12.025979995727539
    9. '([' → logprob: -12.150979995727539
    10. '("("' → logprob: -12.900979995727539

Token 315: ' {}'.' (ID: 62777)
  Prédit: '(node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(node' → logprob: -0.28545597195625305
    2. ' {}' → logprob: -2.0354559421539307
    3. '{}' → logprob: -2.6604559421539307
    4. ' (' → logprob: -4.16045618057251
    5. ' node' → logprob: -4.41045618057251
    6. '{' → logprob: -5.53545618057251
    7. '(' → logprob: -6.03545618057251
    8. 'a' → logprob: -6.16045618057251
    9. 'node' → logprob: -6.28545618057251
    10. ' ' → logprob: -6.53545618057251

Token 316: 'format' (ID: 4078)
  Prédit: '(node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(node' → logprob: -0.0011274790158495307
    2. '(str' → logprob: -7.126127243041992
    3. 'node' → logprob: -8.251127243041992
    4. 'str' → logprob: -11.126127243041992
    5. 'f' → logprob: -11.251127243041992
    6. '[node' → logprob: -11.501127243041992
    7. '(edge' → logprob: -11.751127243041992
    8. '(f' → logprob: -12.376127243041992
    9. '(vertex' → logprob: -12.626127243041992
    10. 'a' → logprob: -13.001127243041992

Token 317: '(node' (ID: 13356)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -5.438573680294212e-06
    2. ' node' → logprob: -12.625005722045898
    3. '(node' → logprob: -13.875005722045898
    4. 'edge' → logprob: -14.125005722045898
    5. 'b' → logprob: -15.250005722045898
    6. '   ' → logprob: -17.3750057220459
    7. 'vertex' → logprob: -17.5000057220459
    8. 'a' → logprob: -17.5000057220459
    9. ',node' → logprob: -17.7500057220459
    10. 'number' → logprob: -17.8750057220459

Token 318: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.0032738489098846912
    2. '_b' → logprob: -5.753273963928223
    3. 'a' → logprob: -9.253273963928223
    4. 'b' → logprob: -15.753273963928223
    5. '_u' → logprob: -17.378273010253906
    6. ')' → logprob: -17.753273010253906
    7. '_node' → logprob: -17.878273010253906
    8. '_c' → logprob: -17.878273010253906
    9. '	a' → logprob: -18.128273010253906
    10. '_s' → logprob: -18.128273010253906

Token 319: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11343710124492645
    2. ',node' → logprob: -2.2384371757507324
    3. ' ,' → logprob: -7.863437175750732
    4. ',b' → logprob: -8.613436698913574
    5. ' node' → logprob: -11.113436698913574
    6. ',n' → logprob: -11.988436698913574
    7. ',
' → logprob: -12.363436698913574
    8. '   ' → logprob: -12.363436698913574
    9. '(node' → logprob: -12.863436698913574
    10. ')' → logprob: -12.863436698913574

Token 320: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.029751643538475037
    2. ' node' → logprob: -3.5297515392303467
    3. 'edge' → logprob: -13.904751777648926
    4. ' ' → logprob: -16.40475082397461
    5. '(node' → logprob: -17.15475082397461
    6. '   ' → logprob: -17.15475082397461
    7. '	node' → logprob: -17.27975082397461
    8. '[node' → logprob: -17.77975082397461
    9. 'vertex' → logprob: -17.90475082397461
    10. ' edge' → logprob: -17.90475082397461

Token 321: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -5.478889215737581e-05
    2. 'b' → logprob: -10.750054359436035
    3. '_a' → logprob: -11.125054359436035
    4. '_' → logprob: -11.500054359436035
    5. '_)' → logprob: -12.750054359436035
    6. ')' → logprob: -13.000054359436035
    7. '   ' → logprob: -13.750054359436035
    8. 'a' → logprob: -14.375054359436035
    9. ')_' → logprob: -14.750054359436035
    10. ' _' → logprob: -15.250054359436035

Token 322: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5857582688331604
    2. '))' → logprob: -0.8357582688331604
    3. '))
' → logprob: -5.210758209228516
    4. ')
' → logprob: -5.460758209228516
    5. ')\' → logprob: -10.710758209228516
    6. '\n' → logprob: -11.085758209228516
    7. '   ' → logprob: -11.960758209228516
    8. '
' → logprob: -12.210758209228516
    9. '))

' → logprob: -13.085758209228516
    10. ' )' → logprob: -13.335758209228516

Token 323: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0488891527056694
    2. '
' → logprob: -3.67388916015625
    3. ' for' → logprob: -4.67388916015625
    4. '<|end|>' → logprob: -5.79888916015625
    5. ')' → logprob: -6.04888916015625
    6. '  
' → logprob: -6.42388916015625
    7. '    
' → logprob: -6.54888916015625
    8. 'node' → logprob: -6.67388916015625
    9. '   ' → logprob: -6.92388916015625
    10. ' 
' → logprob: -7.92388916015625

Token 324: ' node' (ID: 4596)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3104021549224854
    2. '\n' → logprob: -1.3104021549224854
    3. '
' → logprob: -1.6854021549224854
    4. '<|end|>' → logprob: -1.6854021549224854
    5. ' 
' → logprob: -3.6854021549224854
    6. 'node' (adapté à ' node') → logprob: -4.560401916503906
    7. ' ' → logprob: -4.810401916503906
    8. 'edge' → logprob: -4.935401916503906
    9. '  
' → logprob: -5.310401916503906
    10. '    
' → logprob: -5.310401916503906

Token 325: '_out' (ID: 12171)
  Prédit: '_out'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_out' → logprob: -1.1160349458805285e-05
    2. '_de' → logprob: -11.875011444091797
    3. '_a' → logprob: -13.375011444091797
    4. '_in' → logprob: -13.500011444091797
    5. 'out' → logprob: -14.250011444091797
    6. '_degree' → logprob: -16.000011444091797
    7. '_' → logprob: -16.250011444091797
    8. 'a' → logprob: -16.250011444091797
    9. 'Out' → logprob: -16.375011444091797
    10. '```' → logprob: -17.000011444091797

Token 326: '_de' (ID: 5047)
  Prédit: '_de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_de' → logprob: -5.438573680294212e-06
    2. 'degrees' → logprob: -12.500005722045898
    3. '_degree' → logprob: -15.000005722045898
    4. 'de' → logprob: -15.375005722045898
    5. '_counts' → logprob: -15.500005722045898
    6. 's' → logprob: -15.875005722045898
    7. '_out' → logprob: -16.1250057220459
    8. 'Degrees' → logprob: -16.2500057220459
    9. '```' → logprob: -16.2500057220459
    10. '_' → logprob: -16.5000057220459

Token 327: 'grees' (ID: 86997)
  Prédit: 'grees'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grees' → logprob: -9.088346359931165e-07
    2. 'gre' → logprob: -15.250000953674316
    3. 'gree' → logprob: -15.375000953674316
    4. 'gress' → logprob: -15.500000953674316
    5. 'g' → logprob: -16.25
    6. 'degrees' → logprob: -17.5
    7. 'eg' → logprob: -17.625
    8. 'gres' → logprob: -18.75
    9. 'rees' → logprob: -19.875
    10. '```' → logprob: -20.375

Token 328: '[node' (ID: 67268)
  Prédit: '[node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[node' → logprob: -1.2948405128554441e-05
    2. '[' → logprob: -11.37501335144043
    3. '[current' → logprob: -14.00001335144043
    4. '[number' → logprob: -14.87501335144043
    5. '[a' → logprob: -16.37501335144043
    6. '[token' → logprob: -17.25001335144043
    7. '```' → logprob: -18.12501335144043
    8. '[user' → logprob: -18.12501335144043
    9. '[int' → logprob: -18.87501335144043
    10. '[
' → logprob: -19.00001335144043

Token 329: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.012094934470951557
    2. 'a' → logprob: -4.512094974517822
    3. '_b' → logprob: -6.887094974517822
    4. 'b' → logprob: -11.762094497680664
    5. '[a' → logprob: -12.012094497680664
    6. '[node' → logprob: -12.137094497680664
    7. '[' → logprob: -13.512094497680664
    8. '_nodes' → logprob: -14.137094497680664
    9. '_' → logprob: -14.512094497680664
    10. 'а' → logprob: -14.762094497680664

Token 330: ']' (ID: 60)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.20551776885986328
    2. ' +=' → logprob: -1.7055177688598633
    3. '+' → logprob: -5.705517768859863
    4. ')' → logprob: -7.580517768859863
    5. ']+=' → logprob: -8.330517768859863
    6. ' +' → logprob: -11.955517768859863
    7. ')+' → logprob: -12.830517768859863
    8. '[' → logprob: -13.330517768859863
    9. '-=' → logprob: -13.580517768859863
    10. '   ' → logprob: -13.830517768859863

Token 331: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0043025268241763115
    2. ' +=' → logprob: -5.629302501678467
    3. '+' → logprob: -7.504302501678467
    4. '[' → logprob: -9.254302978515625
    5. ']+=' → logprob: -9.879302978515625
    6. '+='' → logprob: -13.504302978515625
    7. '1' → logprob: -14.379302978515625
    8. '-=' → logprob: -14.754302978515625
    9. '+="' → logprob: -14.879302978515625
    10. '=' → logprob: -15.004302978515625

Token 332: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. '+' → logprob: -20.500003814697266
    4. '```' → logprob: -20.750003814697266
    5. '   ' → logprob: -20.875003814697266
    6. '0' → logprob: -20.875003814697266
    7. '2' → logprob: -21.500003814697266
    8. '
' → logprob: -21.500003814697266
    9. '۱' → logprob: -21.500003814697266
    10. '１' → logprob: -21.687503814697266

Token 333: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.25
    3. '<|end|>' → logprob: -21.125
    4. '```' → logprob: -21.375
    5. '0' → logprob: -21.5
    6. '۱' → logprob: -21.875
    7. '
' → logprob: -22.1875
    8. '+' → logprob: -22.5625
    9. '   ' → logprob: -22.625
    10. '১' → logprob: -22.875

Token 334: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05190417915582657
    2. '
' → logprob: -3.3019042015075684
    3. ' for' → logprob: -4.426904201507568
    4. '<|end|>' → logprob: -7.426904201507568
    5. '

' → logprob: -8.30190372467041
    6. 'n' → logprob: -8.55190372467041
    7. ')' → logprob: -8.67690372467041
    8. ' 
' → logprob: -9.05190372467041
    9. '  
' → logprob: -9.42690372467041
    10. '\n' → logprob: -9.80190372467041

Token 335: 'def' (ID: 1314)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00030078491545282304
    2. 'def' → logprob: -8.750300407409668
    3. ' for' → logprob: -9.250300407409668
    4. 'stack' → logprob: -11.125300407409668
    5. 'visited' → logprob: -11.250300407409668
    6. '```' → logprob: -11.750300407409668
    7. '#' → logprob: -12.625300407409668
    8. 'while' → logprob: -13.625300407409668
    9. 'print' → logprob: -14.000300407409668
    10. 'current' → logprob: -14.375300407409668

Token 336: ' assign' (ID: 14975)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.404750257730484
    2. ' dfs' → logprob: -1.1547502279281616
    3. 'adjust' → logprob: -4.904750347137451
    4. 'assign' → logprob: -5.904750347137451
    5. 'balance' → logprob: -6.154750347137451
    6. ' adjust' → logprob: -6.404750347137451
    7. ' balance' → logprob: -6.529750347137451
    8. ' assign' → logprob: -6.779750347137451
    9. 'process' → logprob: -7.904750347137451
    10. ' process' → logprob: -8.154749870300293

Token 337: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -0.31711825728416443
    2. '_out' → logprob: -1.9421182870864868
    3. '_d' → logprob: -3.0671181678771973
    4. '_or' → logprob: -3.3171181678771973
    5. '_edges' → logprob: -3.8171181678771973
    6. '_direction' → logprob: -4.817118167877197
    7. '_orientation' → logprob: -5.567118167877197
    8. '_par' → logprob: -5.567118167877197
    9. '_remaining' → logprob: -6.192118167877197
    10. '_parent' → logprob: -7.067118167877197

Token 338: '_d' (ID: 1565)
  Prédit: '_or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_or' → logprob: -0.06181461736559868
    2. '_d' → logprob: -3.061814546585083
    3. '_orientation' → logprob: -5.186814785003662
    4. 's' → logprob: -5.686814785003662
    5. 'orient' → logprob: -5.811814785003662
    6. '_direction' → logprob: -7.311814785003662
    7. '_out' → logprob: -8.436814308166504
    8. 'or' → logprob: -9.186814308166504
    9. 'dire' → logprob: -9.311814308166504
    10. 'orientation' → logprob: -11.311814308166504

Token 339: 'irections' (ID: 119283)
  Prédit: 'irections'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'irections' → logprob: -0.2578379213809967
    2. 'irection' → logprob: -1.5078378915786743
    3. 'ep' → logprob: -5.507837772369385
    4. 'eg' → logprob: -7.632837772369385
    5. 'ir' → logprob: -7.632837772369385
    6. 'egree' → logprob: -8.382838249206543
    7. 'e' → logprob: -8.382838249206543
    8. 'irected' → logprob: -9.257838249206543
    9. 'rection' → logprob: -9.507838249206543
    10. 'ire' → logprob: -9.757838249206543

Token 340: '(current' (ID: 15023)
  Prédit: '(node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -0.001040552044287324
    2. '(' → logprob: -7.251040458679199
    3. '(current' → logprob: -8.5010404586792
    4. ' (' → logprob: -9.0010404586792
    5. '(u' → logprob: -13.0010404586792
    6. '(n' → logprob: -14.2510404586792
    7. '(parent' → logprob: -14.6260404586792
    8. '(vertex' → logprob: -15.2510404586792
    9. '(root' → logprob: -15.8760404586792
    10. '(nodes' → logprob: -16.501041412353516

Token 341: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.01228323858231306
    2. ',' → logprob: -4.5122833251953125
    3. ',node' → logprob: -7.3872833251953125
    4. 'node' → logprob: -8.262283325195312
    5. '):' → logprob: -8.887283325195312
    6. ' ,' → logprob: -9.887283325195312
    7. '_nodes' → logprob: -9.887283325195312
    8. ',_' → logprob: -10.387283325195312
    9. ')' → logprob: -10.512283325195312
    10. '(node' → logprob: -10.762283325195312

Token 342: ' =' (ID: 314)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.20194464921951294
    2. ',' → logprob: -1.7019445896148682
    3. ':' → logprob: -8.576944351196289
    4. ')' → logprob: -8.826944351196289
    5. ' ):' → logprob: -9.076944351196289
    6. '):
' → logprob: -9.951944351196289
    7. ' ,' → logprob: -10.826944351196289
    8. ',node' → logprob: -12.576944351196289
    9. '   ' → logprob: -13.451944351196289
    10. ',n' → logprob: -13.826944351196289

Token 343: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00407923199236393
    2. ' ' → logprob: -5.504079341888428
    3. ')' → logprob: -14.87907886505127
    4. '0' → logprob: -15.75407886505127
    5. 'None' → logprob: -16.129079818725586
    6. '   ' → logprob: -16.504079818725586
    7. ',' → logprob: -16.504079818725586
    8. '  ' → logprob: -16.879079818725586
    9. '<|end|>' → logprob: -16.879079818725586
    10. ' None' → logprob: -16.879079818725586

Token 344: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000158842682139948
    2. ' ' → logprob: -8.75015926361084
    3. '0' → logprob: -15.37515926361084
    4. ')' → logprob: -16.500158309936523
    5. '   ' → logprob: -18.250158309936523
    6. '<|end|>' → logprob: -18.750158309936523
    7. 'None' → logprob: -18.750158309936523
    8. '  ' → logprob: -19.000158309936523
    9. ',' → logprob: -19.500158309936523
    10. '...' → logprob: -20.125158309936523

Token 345: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0020497434306889772
    2. ',' → logprob: -6.877049922943115
    3. '):
' → logprob: -7.002049922943115
    4. ')' → logprob: -9.252049446105957
    5. ' ):' → logprob: -12.377049446105957
    6. '):
' → logprob: -12.752049446105957
    7. '   ' → logprob: -13.127049446105957
    8. ':' → logprob: -14.377049446105957
    9. ' ' → logprob: -14.877049446105957
    10. '):

' → logprob: -15.752049446105957

Token 346: ' parent' (ID: 5980)
  Prédit: ' parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parent' → logprob: -0.35499754548072815
    2. 'parent' → logprob: -1.2299975156784058
    3. '   ' → logprob: -5.479997634887695
    4. ')' → logprob: -6.729997634887695
    5. '):
' → logprob: -7.979997634887695
    6. '):' → logprob: -8.229997634887695
    7. ' ' → logprob: -9.479997634887695
    8. 'current' → logprob: -10.104997634887695
    9. 'parents' → logprob: -10.229997634887695
    10. ' )' → logprob: -10.229997634887695

Token 347: '_node' (ID: 11390)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.31945520639419556
    2. ',' → logprob: -1.9444551467895508
    3. '=None' → logprob: -2.319455146789551
    4. '):
' → logprob: -3.944455146789551
    5. '=' → logprob: -4.569455146789551
    6. ')' → logprob: -6.819455146789551
    7. '_node' → logprob: -7.694455146789551
    8. ' None' → logprob: -9.06945514678955
    9. '):

' → logprob: -9.19445514678955
    10. '=-' → logprob: -9.44445514678955

Token 348: ' =' (ID: 314)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5838514566421509
    2. '=' → logprob: -1.0838514566421509
    3. '=None' → logprob: -3.2088513374328613
    4. '=-' → logprob: -3.2088513374328613
    5. ',' → logprob: -4.333851337432861
    6. '):
' → logprob: -5.333851337432861
    7. ' =' → logprob: -5.458851337432861
    8. ')' → logprob: -7.583851337432861
    9. '   ' → logprob: -8.58385181427002
    10. ':' → logprob: -9.20885181427002

Token 349: ' None' (ID: 4662)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.013146818615496159
    2. '-' → logprob: -4.513146877288818
    3. ' ' → logprob: -6.388146877288818
    4. 'None' → logprob: -8.26314640045166
    5. ' -' → logprob: -8.88814640045166
    6. ' None' → logprob: -10.88814640045166
    7. '1' → logprob: -14.38814640045166
    8. '   ' → logprob: -15.51314640045166
    9. '  ' → logprob: -16.388147354125977
    10. '
' → logprob: -18.013147354125977

Token 350: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.029797818511724472
    2. '):
' → logprob: -3.5297977924346924
    3. '):
' → logprob: -10.779797554016113
    4. ')' → logprob: -10.904797554016113
    5. ':' → logprob: -12.404797554016113
    6. '   ' → logprob: -13.404797554016113
    7. ' ):' → logprob: -14.029797554016113
    8. ',' → logprob: -14.029797554016113
    9. '):

' → logprob: -14.154797554016113
    10. ' ' → logprob: -16.02979850769043

Token 351: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019912561401724815
    2. ' for' → logprob: -4.3949127197265625
    3. ':' → logprob: -5.5199127197265625
    4. 'for' → logprob: -5.8949127197265625
    5. '```' → logprob: -8.019912719726562
    6. '    
' → logprob: -9.394912719726562
    7. ',' → logprob: -10.019912719726562
    8. ')' → logprob: -10.394912719726562
    9. '	for' → logprob: -10.519912719726562
    10. '<|end|>' → logprob: -10.894912719726562

Token 352: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4123140573501587
    2. 'for' (adapté à ' for') → logprob: -1.1623140573501587
    3. '   ' → logprob: -3.787313938140869
    4. 'total' → logprob: -7.037313938140869
    5. ' total' → logprob: -7.412313938140869
    6. 'out' → logprob: -8.412314414978027
    7. 'children' → logprob: -8.412314414978027
    8. 'count' → logprob: -9.162314414978027
    9. 'stack' → logprob: -9.912314414978027
    10. ' out' → logprob: -10.412314414978027

Token 353: ' adjacent' (ID: 39069)
  Prédit: 'child'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'child' → logprob: -0.4804617464542389
    2. 'neighbor' → logprob: -0.9804617166519165
    3. 'adj' → logprob: -5.855461597442627
    4. 'next' → logprob: -5.855461597442627
    5. ' neighbor' → logprob: -8.105462074279785
    6. ' child' → logprob: -8.105462074279785
    7. 'connected' → logprob: -11.855462074279785
    8. 'ne' → logprob: -12.105462074279785
    9. ' next' → logprob: -12.230462074279785
    10. 'children' → logprob: -12.480462074279785

Token 354: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.05301613360643387
    2. 'node' → logprob: -3.053016185760498
    3. ' in' → logprob: -5.553016185760498
    4. 'in' → logprob: -8.05301570892334
    5. ' node' → logprob: -9.17801570892334
    6. 'Node' → logprob: -10.05301570892334
    7. 'neighbor' → logprob: -10.55301570892334
    8. '_neighbor' → logprob: -11.05301570892334
    9. '_vertex' → logprob: -11.17801570892334
    10. '_nodes' → logprob: -12.67801570892334

Token 355: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08895756304264069
    2. 'in' → logprob: -2.4639575481414795
    3. '	in' → logprob: -12.088957786560059
    4. ',' → logprob: -12.338957786560059
    5. ' ' → logprob: -12.713957786560059
    6. '   ' → logprob: -14.213957786560059
    7. 'd' → logprob: -14.776457786560059
    8. '_in' → logprob: -15.026457786560059
    9. ' ' → logprob: -15.151457786560059
    10. '<|end|>' → logprob: -15.151457786560059

Token 356: ' spanning' (ID: 66335)
  Prédit: 'sp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sp' → logprob: -0.010679911822080612
    2. ' spanning' → logprob: -4.885679721832275
    3. 'adj' → logprob: -5.885679721832275
    4. 'span' → logprob: -8.635680198669434
    5. ' adjacency' → logprob: -9.260680198669434
    6. '   ' → logprob: -11.510680198669434
    7. ' sp' → logprob: -12.760680198669434
    8. '(sp' → logprob: -14.135680198669434
    9. 'list' → logprob: -14.135680198669434
    10. '	sp' → logprob: -14.260680198669434

Token 357: '_tree' (ID: 27118)
  Prédit: '_tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tree' → logprob: -1.6240566083070007e-06
    2. 'tree' → logprob: -13.500001907348633
    3. '_TREE' → logprob: -16.250001907348633
    4. '-tree' → logprob: -17.500001907348633
    5. ' tree' → logprob: -18.375001907348633
    6. 'current' → logprob: -19.125001907348633
    7. '_node' → logprob: -19.375001907348633
    8. '_t' → logprob: -19.500001907348633
    9. '<Tree' → logprob: -19.750001907348633
    10. '	tree' → logprob: -20.125001907348633

Token 358: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -5.371605948312208e-05
    2. '[current' → logprob: -10.750053405761719
    3. 'edges' → logprob: -11.000053405761719
    4. 's' → logprob: -12.125053405761719
    5. '[node' → logprob: -12.375053405761719
    6. '_nodes' → logprob: -12.875053405761719
    7. 'Edges' → logprob: -14.125053405761719
    8. 'current' → logprob: -14.875053405761719
    9. 'es' → logprob: -15.250053405761719
    10. '_list' → logprob: -15.250053405761719

Token 359: '[current' (ID: 49470)
  Prédit: '[current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[current' → logprob: -1.0280383548888494e-06
    2. 'current' → logprob: -13.875000953674316
    3. '[' → logprob: -16.875001907348633
    4. '   ' → logprob: -18.500001907348633
    5. '[cur' → logprob: -18.500001907348633
    6. ' [' → logprob: -19.625001907348633
    7. ' current' → logprob: -19.625001907348633
    8. '(current' → logprob: -19.875001907348633
    9. '[curr' → logprob: -20.625001907348633
    10. '```' → logprob: -20.750001907348633

Token 360: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.0007068329723551869
    2. 'node' → logprob: -8.500706672668457
    3. '[current' → logprob: -8.625706672668457
    4. 'current' → logprob: -9.125706672668457
    5. '_nodes' → logprob: -9.125706672668457
    6. '[node' → logprob: -9.250706672668457
    7. '_list' → logprob: -13.000706672668457
    8. '_current' → logprob: -13.625706672668457
    9. '_edges' → logprob: -13.750706672668457
    10. '_code' → logprob: -14.250706672668457

Token 361: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.026505449786782265
    2. ']:
' → logprob: -3.651505470275879
    3. ']' → logprob: -9.401505470275879
    4. ']:
' → logprob: -10.026505470275879
    5. '   ' → logprob: -10.526505470275879
    6. ' ]' → logprob: -11.026505470275879
    7. ']:

' → logprob: -11.901505470275879
    8. '):' → logprob: -12.151505470275879
    9. ':' → logprob: -12.276505470275879
    10. '       ' → logprob: -12.526505470275879

Token 362: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003236655378714204
    2. '   ' → logprob: -6.628236770629883
    3. ' if' → logprob: -6.753236770629883
    4. ',' → logprob: -7.878236770629883
    5. ':' → logprob: -8.128236770629883
    6. '    ' → logprob: -11.003236770629883
    7. '        
' → logprob: -11.253236770629883
    8. '<|end|>' → logprob: -11.753236770629883
    9. 'if' → logprob: -11.878236770629883
    10. '      ' → logprob: -12.503236770629883

Token 363: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.1856754869222641
    2. 'if' (adapté à ' if') → logprob: -1.9356755018234253
    3. '       ' → logprob: -3.6856753826141357
    4. '   ' → logprob: -10.060675621032715
    5. ' ' → logprob: -12.810675621032715
    6. '           ' → logprob: -12.810675621032715
    7. '	if' → logprob: -14.310675621032715
    8. '
' → logprob: -15.060675621032715
    9. '    ' → logprob: -15.060675621032715
    10. '```' → logprob: -15.185675621032715

Token 364: ' adjacent' (ID: 39069)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.008157548494637012
    2. ' adjacent' → logprob: -4.883157730102539
    3. '   ' → logprob: -7.758157730102539
    4. ' adj' → logprob: -10.758157730102539
    5. 'not' → logprob: -11.133157730102539
    6. '    ' → logprob: -11.133157730102539
    7. '           ' → logprob: -11.258157730102539
    8. 'visited' → logprob: -11.633157730102539
    9. '(adj' → logprob: -11.633157730102539
    10. '  ' → logprob: -11.758157730102539

Token 365: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.38694125413894653
    2. '_nodes' → logprob: -1.1369411945343018
    3. '_' → logprob: -11.136940956115723
    4. '
' → logprob: -11.761940956115723
    5. 'node' → logprob: -11.886940956115723
    6. '==' → logprob: -12.136940956115723
    7. 'Node' → logprob: -12.699440956115723
    8. 'nodes' → logprob: -12.824440956115723
    9. '```' → logprob: -13.074440956115723
    10. ' ==' → logprob: -13.449440956115723

Token 366: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.16023357212543488
    2. ' ==' → logprob: -1.9102336168289185
    3. '!=' → logprob: -12.160233497619629
    4. '==
' → logprob: -13.035233497619629
    5. ' !=' → logprob: -14.035233497619629
    6. '=' → logprob: -14.660233497619629
    7. 'is' → logprob: -15.285233497619629
    8. ']==' → logprob: -15.535233497619629
    9. ')==' → logprob: -16.535234451293945
    10. '```' → logprob: -16.785234451293945

Token 367: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.0005530327325686812
    2. ' parent' → logprob: -7.500553131103516
    3. 'current' → logprob: -17.500553131103516
    4. '	parent' → logprob: -17.875553131103516
    5. '   ' → logprob: -18.000553131103516
    6. ' ' → logprob: -19.000553131103516
    7. '
' → logprob: -20.125553131103516
    8. '  ' → logprob: -20.625553131103516
    9. '(parent' → logprob: -20.875553131103516
    10. 'paren' → logprob: -21.000553131103516

Token 368: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -7.107425062713446e-06
    2. 'node' → logprob: -12.000006675720215
    3. ')_' → logprob: -15.750006675720215
    4. '_' → logprob: -16.00000762939453
    5. ')' → logprob: -16.12500762939453
    6. ':' → logprob: -16.25000762939453
    7. '_NODE' → logprob: -16.50000762939453
    8. '```' → logprob: -16.87500762939453
    9. '
' → logprob: -17.12500762939453
    10. ' _' → logprob: -17.25000762939453

Token 369: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5313562750816345
    2. ':' → logprob: -1.0313563346862793
    3. ' or' → logprob: -3.1563563346862793
    4. '           ' → logprob: -4.781356334686279
    5. '       ' → logprob: -5.406356334686279
    6. '   ' → logprob: -9.531355857849121
    7. ',' → logprob: -10.031355857849121
    8. '):
' → logprob: -10.531355857849121
    9. ':return' → logprob: -10.656355857849121
    10. ' continue' → logprob: -11.156355857849121

Token 370: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5198336839675903
    2. ':' → logprob: -1.1448336839675903
    3. ':
' → logprob: -2.644833564758301
    4. '       ' → logprob: -4.269833564758301
    5. ' continue' → logprob: -6.894833564758301
    6. ' or' → logprob: -7.894833564758301
    7. 'continue' → logprob: -8.0198335647583
    8. ',' → logprob: -8.6448335647583
    9. '   ' → logprob: -9.8948335647583
    10. '):
' → logprob: -10.7698335647583

Token 371: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.015392575412988663
    2. ' continue' → logprob: -4.515392780303955
    3. '           ' → logprob: -5.765392780303955
    4. '       ' → logprob: -6.890392780303955
    5. '               ' → logprob: -8.765392303466797
    6. '   ' → logprob: -11.265392303466797
    7. '	continue' → logprob: -11.765392303466797
    8. 'contin' → logprob: -13.140392303466797
    9. 'continu' → logprob: -13.640392303466797
    10. '
' → logprob: -13.640392303466797

Token 372: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011430807411670685
    2. '
' → logprob: -4.636430740356445
    3. '   ' → logprob: -6.761430740356445
    4. '        
' → logprob: -8.761430740356445
    5. '<|end|>' → logprob: -9.011430740356445
    6. 'if' → logprob: -9.761430740356445
    7. ' if' → logprob: -10.011430740356445
    8. '    
' → logprob: -10.011430740356445
    9. ',' → logprob: -10.886430740356445
    10. ')' → logprob: -11.386430740356445

Token 373: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02113652043044567
    2. '   ' → logprob: -3.896136522293091
    3. '<|end|>' → logprob: -8.396136283874512
    4. '
' → logprob: -9.146136283874512
    5. '```' → logprob: -9.896136283874512
    6. 'if' → logprob: -9.896136283874512
    7. ' if' → logprob: -10.271136283874512
    8. '        
' → logprob: -10.646136283874512
    9. 'assign' → logprob: -10.896136283874512
    10. '           ' → logprob: -11.021136283874512

Token 374: ' assign' (ID: 14975)
  Prédit: 'assign'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'assign' (adapté à ' assign') → logprob: -0.1283203661441803
    2. '   ' → logprob: -2.1283204555511475
    3. ' assign' → logprob: -7.378320217132568
    4. '       ' → logprob: -7.503320217132568
    5. 'if' → logprob: -8.753320693969727
    6. '
' → logprob: -11.128320693969727
    7. '	assign' → logprob: -12.003320693969727
    8. '    
' → logprob: -12.128320693969727
    9. '        
' → logprob: -12.628320693969727
    10. 'edge' → logprob: -12.753320693969727

Token 375: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -1.0921942703134846e-05
    2. 'edge' → logprob: -11.50001049041748
    3. 'assign' → logprob: -15.12501049041748
    4. 'Edge' → logprob: -15.62501049041748
    5. '_direction' → logprob: -16.000011444091797
    6. '_' → logprob: -16.125011444091797
    7. '_EDGE' → logprob: -17.000011444091797
    8. '_edges' → logprob: -18.250011444091797
    9. '_node' → logprob: -18.375011444091797
    10. 'd' → logprob: -18.500011444091797

Token 376: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.048822395503520966
    2. 'dire' → logprob: -3.0488224029541016
    3. 'edge' → logprob: -9.048822402954102
    4. 'd' → logprob: -9.673822402954102
    5. '_edge' → logprob: -10.673822402954102
    6. 'direction' → logprob: -11.673822402954102
    7. '```' → logprob: -12.173822402954102
    8. 'Directions' → logprob: -12.673822402954102
    9. '
' → logprob: -13.048822402954102
    10. '\' → logprob: -13.173822402954102

Token 377: 'irections' (ID: 119283)
  Prédit: 'irections'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'irections' → logprob: -9.253090865968261e-06
    2. 're' → logprob: -12.000009536743164
    3. 'ire' → logprob: -14.000009536743164
    4. 'dire' → logprob: -14.250009536743164
    5. 'Directions' → logprob: -14.875009536743164
    6. 'irection' → logprob: -14.875009536743164
    7. 'ections' → logprob: -15.625009536743164
    8. 'ir' → logprob: -15.750009536743164
    9. 'irect' → logprob: -16.250009536743164
    10. ' directions' → logprob: -16.375009536743164

Token 378: '(adj' (ID: 141921)
  Prédit: '(adj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(adj' → logprob: -2.3080716346157715e-05
    2. '(current' → logprob: -12.000022888183594
    3. '(ad' → logprob: -12.000022888183594
    4. ' (' → logprob: -12.125022888183594
    5. '(' → logprob: -12.375022888183594
    6. '(
' → logprob: -14.625022888183594
    7. '(aux' → logprob: -15.625022888183594
    8. 'adj' → logprob: -16.500022888183594
    9. '(next' → logprob: -16.500022888183594
    10. '   ' → logprob: -17.875022888183594

Token 379: 'acent' (ID: 28063)
  Prédit: 'acent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acent' → logprob: -0.000373950315406546
    2. 'ent' → logprob: -9.250373840332031
    3. 'current' → logprob: -9.500373840332031
    4. 'ec' → logprob: -9.625373840332031
    5. 'cent' → logprob: -9.875373840332031
    6. '(current' → logprob: -11.000373840332031
    7. 'ac' → logprob: -11.125373840332031
    8. 'acency' → logprob: -11.375373840332031
    9. '   ' → logprob: -11.750373840332031
    10. '```' → logprob: -12.500373840332031

Token 380: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.013551576063036919
    2. 'ent' → logprob: -4.513551712036133
    3. 'ant' → logprob: -6.513551712036133
    4. 'node' → logprob: -8.138551712036133
    5. 'ode' → logprob: -8.388551712036133
    6. 'e' → logprob: -8.638551712036133
    7. 'ed' → logprob: -9.263551712036133
    8. 'ate' → logprob: -9.513551712036133
    9. 'de' → logprob: -10.888551712036133
    10. 'adj' → logprob: -11.138551712036133

Token 381: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002016548067331314
    2. ',current' → logprob: -6.252016544342041
    3. ' ,' → logprob: -9.6270170211792
    4. 'current' → logprob: -11.1270170211792
    5. ')' → logprob: -12.7520170211792
    6. '(current' → logprob: -13.2520170211792
    7. ' current' → logprob: -13.5020170211792
    8. ',
' → logprob: -14.2520170211792
    9. '   ' → logprob: -15.7520170211792
    10. '[current' → logprob: -15.8770170211792

Token 382: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.0040785204619169235
    2. ' current' → logprob: -5.504078388214111
    3. '[current' → logprob: -17.504077911376953
    4. '	current' → logprob: -17.629077911376953
    5. '   ' → logprob: -17.879077911376953
    6. 'Current' → logprob: -18.129077911376953
    7. '$current' → logprob: -18.129077911376953
    8. '
' → logprob: -18.504077911376953
    9. '=current' → logprob: -18.629077911376953
    10. '.current' → logprob: -18.754077911376953

Token 383: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.0009142052149400115
    2. 'node' → logprob: -7.000914096832275
    3. '_nodes' → logprob: -13.875914573669434
    4. '_token' → logprob: -14.250914573669434
    5. ' node' → logprob: -14.375914573669434
    6. '[node' → logprob: -15.625914573669434
    7. ')' → logprob: -16.750913619995117
    8. '-node' → logprob: -16.875913619995117
    9. '_NODE' → logprob: -16.875913619995117
    10. 'Node' → logprob: -17.250913619995117

Token 384: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.4743211269378662
    2. ')' → logprob: -0.9743211269378662
    3. '       ' → logprob: -8.724321365356445
    4. ')

' → logprob: -10.224321365356445
    5. '   ' → logprob: -10.599321365356445
    6. ')
' → logprob: -10.974321365356445
    7. ' )
' → logprob: -13.224321365356445
    8. ' )' → logprob: -14.599321365356445
    9. ')\
' → logprob: -15.974321365356445
    10. '
' → logprob: -16.224321365356445

Token 385: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03481760621070862
    2. '   ' → logprob: -3.409817695617676
    3. '       ' → logprob: -7.409817695617676
    4. '
' → logprob: -8.659817695617676
    5. ' if' → logprob: -9.034817695617676
    6. '    
' → logprob: -9.534817695617676
    7. '  
' → logprob: -9.784817695617676
    8. '

' → logprob: -9.909817695617676
    9. 'if' → logprob: -10.034817695617676
    10. ' 
' → logprob: -11.034817695617676

Token 386: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0879603773355484
    2. '       ' → logprob: -3.2129604816436768
    3. ' if' → logprob: -4.087960243225098
    4. 'node' → logprob: -4.212960243225098
    5. '   ' → logprob: -4.837960243225098
    6. 'edge' → logprob: -5.712960243225098
    7. ' node' → logprob: -7.587960243225098
    8. '```' → logprob: -7.837960243225098
    9. ' edge' → logprob: -9.212960243225098
    10. '           ' → logprob: -10.087960243225098

Token 387: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.022711312398314476
    2. ' node' → logprob: -3.8977112770080566
    3. '(node' → logprob: -6.147711277008057
    4. '   ' → logprob: -11.147711753845215
    5. ' (' → logprob: -12.147711753845215
    6. 'not' → logprob: -13.272711753845215
    7. ' ' → logprob: -13.397711753845215
    8. 'len' → logprob: -13.522711753845215
    9. '	node' → logprob: -13.522711753845215
    10. '[node' → logprob: -14.022711753845215

Token 388: '_out' (ID: 12171)
  Prédit: '_out'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_out' → logprob: -8.537868779967539e-06
    2. 'out' → logprob: -11.750008583068848
    3. 'Out' → logprob: -16.00000762939453
    4. '
' → logprob: -16.12500762939453
    5. ' out' → logprob: -17.00000762939453
    6. '_or' → logprob: -17.12500762939453
    7. '$out' → logprob: -17.50000762939453
    8. '_in' → logprob: -17.62500762939453
    9. '```' → logprob: -17.62500762939453
    10. '_node' → logprob: -17.75000762939453

Token 389: '_de' (ID: 5047)
  Prédit: '_de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_de' → logprob: -2.7133641196996905e-05
    2. 'out' → logprob: -11.25002670288086
    3. '_out' → logprob: -11.62502670288086
    4. 'de' → logprob: -13.12502670288086
    5. 'degrees' → logprob: -13.37502670288086
    6. '	de' → logprob: -15.25002670288086
    7. '_or' → logprob: -15.50002670288086
    8. '__' → logprob: -15.62502670288086
    9. '_d' → logprob: -16.12502670288086
    10. 's' → logprob: -16.12502670288086

Token 390: 'grees' (ID: 86997)
  Prédit: 'grees'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grees' → logprob: -9.088346359931165e-07
    2. 'gree' → logprob: -14.625000953674316
    3. 'degrees' → logprob: -15.750000953674316
    4. 'g' → logprob: -16.5
    5. 'gress' → logprob: -16.625
    6. 'gre' → logprob: -16.875
    7. 'eg' → logprob: -17.125
    8. 'rees' → logprob: -18.375
    9. 'GRE' → logprob: -19.625
    10. '```' → logprob: -19.875

Token 391: '[' (ID: 58)
  Prédit: '[current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[current' → logprob: -0.12715992331504822
    2. '[' → logprob: -2.127159833908081
    3. '[parent' → logprob: -9.12716007232666
    4. '[node' → logprob: -9.25216007232666
    5. 'current' → logprob: -10.62716007232666
    6. 'adj' → logprob: -13.37716007232666
    7. '[curr' → logprob: -14.75216007232666
    8. ' [' → logprob: -15.75216007232666
    9. '[next' → logprob: -15.87716007232666
    10. '[cur' → logprob: -16.252159118652344

Token 392: 'adj' (ID: 57001)
  Prédit: 'adj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.25911980867385864
    2. 'current' → logprob: -1.5091197490692139
    3. '[current' → logprob: -5.384119987487793
    4. '[' → logprob: -6.009119987487793
    5. ' current' → logprob: -10.134119987487793
    6. ' adjacent' → logprob: -10.259119987487793
    7. '(adj' → logprob: -11.384119987487793
    8. 'sp' → logprob: -11.759119987487793
    9. '```' → logprob: -12.759119987487793
    10. 'child' → logprob: -12.884119987487793

Token 393: 'acent' (ID: 28063)
  Prédit: 'acent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acent' → logprob: -0.008196331560611725
    2. 'acency' → logprob: -5.2581963539123535
    3. '[current' → logprob: -6.1331963539123535
    4. 'current' → logprob: -7.8831963539123535
    5. 'ent' → logprob: -8.508195877075195
    6. 'ac' → logprob: -9.883195877075195
    7. 'ec' → logprob: -10.383195877075195
    8. '(current' → logprob: -10.383195877075195
    9. 'cent' → logprob: -10.758195877075195
    10. '[' → logprob: -11.133195877075195

Token 394: '_node' (ID: 11390)
  Prédit: '_de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_de' → logprob: -0.6493905782699585
    2. '_nodes' → logprob: -1.0243905782699585
    3. '_node' → logprob: -2.149390697479248
    4. 'de' → logprob: -7.274390697479248
    5. 'node' → logprob: -7.274390697479248
    6. '[node' → logprob: -7.899390697479248
    7. 'degrees' → logprob: -9.77439022064209
    8. '_degree' → logprob: -10.14939022064209
    9. '_indices' → logprob: -10.52439022064209
    10. '_edges' → logprob: -10.52439022064209

Token 395: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0005698331515304744
    2. ']%' → logprob: -7.750569820404053
    3. '%' → logprob: -9.125570297241211
    4. '}' → logprob: -11.375570297241211
    5. ')' → logprob: -11.625570297241211
    6. '[' → logprob: -12.000570297241211
    7. '```' → logprob: -13.750570297241211
    8. ' ]' → logprob: -14.125570297241211
    9. '']' → logprob: -14.250570297241211
    10. '"]' → logprob: -14.875570297241211

Token 396: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -6.229872087715194e-05
    2. ' %' → logprob: -9.875061988830566
    3. ']' → logprob: -13.000061988830566
    4. ')' → logprob: -13.250061988830566
    5. '```' → logprob: -13.250061988830566
    6. '[' → logprob: -13.750061988830566
    7. '==' → logprob: -13.875061988830566
    8. '%
' → logprob: -14.125061988830566
    9. ']%' → logprob: -15.000061988830566
    10. '>' → logprob: -15.125061988830566

Token 397: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0024783893022686243
    2. ' ' → logprob: -6.00247859954834
    3. '==' → logprob: -13.37747859954834
    4. '```' → logprob: -14.87747859954834
    5. '=' → logprob: -15.25247859954834
    6. '   ' → logprob: -15.37747859954834
    7. ' ==' → logprob: -15.87747859954834
    8. '  ' → logprob: -16.002477645874023
    9. '!=' → logprob: -16.752477645874023
    10. '    ' → logprob: -17.627477645874023

Token 398: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.5570885807392187e-05
    2. ' ' → logprob: -11.125015258789062
    3. '```' → logprob: -15.250015258789062
    4. '   ' → logprob: -16.312515258789062
    5. '202' → logprob: -16.562515258789062
    6. '=' → logprob: -16.875015258789062
    7. '
' → logprob: -17.187515258789062
    8. '==' → logprob: -17.250015258789062
    9. '[' → logprob: -17.437515258789062
    10. '  ' → logprob: -17.562515258789062

Token 399: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.05637025460600853
    2. ' ==' → logprob: -2.931370258331299
    3. '!=' → logprob: -6.681370258331299
    4. ' !=' → logprob: -8.68136978149414
    5. '==
' → logprob: -10.80636978149414
    6. ')==' → logprob: -11.18136978149414
    7. '=' → logprob: -11.30636978149414
    8. '()==' → logprob: -11.80636978149414
    9. '0' → logprob: -12.30636978149414
    10. ')' → logprob: -13.55636978149414

Token 400: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.21824634075164795
    2. '1' → logprob: -1.718246340751648
    3. ' ' → logprob: -4.0932464599609375
    4. '=' → logprob: -13.093246459960938
    5. '   ' → logprob: -13.218246459960938
    6. '```' → logprob: -13.593246459960938
    7. '==' → logprob: -14.218246459960938
    8. ' ==' → logprob: -15.968246459960938
    9. '           ' → logprob: -15.968246459960938
    10. ' =' → logprob: -16.155746459960938

Token 401: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5759453177452087
    2. '0' → logprob: -0.8259453177452087
    3. ' ' → logprob: -12.450944900512695
    4. '```' → logprob: -13.638444900512695
    5. '=' → logprob: -15.888444900512695
    6. '   ' → logprob: -16.013444900512695
    7. '3' → logprob: -16.825944900512695
    8. '==' → logprob: -17.013444900512695
    9. 'o' → logprob: -17.450944900512695
    10. '-' → logprob: -17.638444900512695

Token 402: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2823169529438019
    2. ':' → logprob: -1.4073169231414795
    3. '       ' → logprob: -7.282317161560059
    4. '           ' → logprob: -8.282317161560059
    5. '   ' → logprob: -9.032317161560059
    6. '):
' → logprob: -10.282317161560059
    7. ' :
' → logprob: -10.657317161560059
    8. ' and' → logprob: -11.157317161560059
    9. ':
' → logprob: -11.407317161560059
    10. ':

' → logprob: -12.032317161560059

Token 403: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13858863711357117
    2. '   ' → logprob: -2.8885886669158936
    3. '       ' → logprob: -3.2635886669158936
    4. 'edge' → logprob: -3.7635886669158936
    5. ' edge' → logprob: -4.5135884284973145
    6. ':
' → logprob: -7.7635884284973145
    7. '):
' → logprob: -8.013588905334473
    8. '```' → logprob: -8.888588905334473
    9. '(edge' → logprob: -10.013588905334473
    10. ':' → logprob: -10.388588905334473

Token 404: ' edge' (ID: 11165)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' (adapté à ' edge') → logprob: -0.2740238606929779
    2. '           ' → logprob: -2.3990237712860107
    3. 'node' → logprob: -2.6490237712860107
    4. '   ' → logprob: -3.1490237712860107
    5. ' edge' → logprob: -3.8990237712860107
    6. '       ' → logprob: -4.52402400970459
    7. ' node' → logprob: -5.89902400970459
    8. 'continue' → logprob: -8.02402400970459
    9. '```' → logprob: -8.52402400970459
    10. '               ' → logprob: -8.64902400970459

Token 405: '_or' (ID: 15400)
  Prédit: '_or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_or' → logprob: -2.4868770196917467e-05
    2. '_orientation' → logprob: -11.000024795532227
    3. 'orient' → logprob: -12.125024795532227
    4. '_out' → logprob: -13.875024795532227
    5. 'or' → logprob: -14.250024795532227
    6. '_d' → logprob: -14.375024795532227
    7. '
' → logprob: -16.125024795532227
    8. '_direction' → logprob: -16.250024795532227
    9. '   ' → logprob: -16.625024795532227
    10. 's' → logprob: -17.250024795532227

Token 406: 'ient' (ID: 773)
  Prédit: 'ient'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ient' → logprob: -0.027305353432893753
    2. '_or' → logprob: -3.7773053646087646
    3. 'orient' → logprob: -5.5273051261901855
    4. 'ent' → logprob: -10.277305603027344
    5. 't' → logprob: -11.277305603027344
    6. 'or' → logprob: -12.152305603027344
    7. 'int' → logprob: -12.402305603027344
    8. 'in' → logprob: -12.527305603027344
    9. 'e' → logprob: -13.027305603027344
    10. 'iented' → logprob: -13.402305603027344

Token 407: 'ations' (ID: 929)
  Prédit: 'ations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ations' → logprob: -0.00019448090461082757
    2. 't' → logprob: -8.750194549560547
    3. 'e' → logprob: -10.625194549560547
    4. 'c' → logprob: -12.625194549560547
    5. 'et' → logprob: -13.250194549560547
    6. 'r' → logprob: -14.125194549560547
    7. 'ections' → logprob: -14.250194549560547
    8. 'at' → logprob: -14.375194549560547
    9. 'a' → logprob: -14.625194549560547
    10. 'u' → logprob: -14.875194549560547

Token 408: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0005539863486774266
    2. '.' → logprob: -7.500554084777832
    3. 'append' → logprob: -15.000554084777832
    4. '.app' → logprob: -15.250554084777832
    5. ' .' → logprob: -15.375554084777832
    6. '].' → logprob: -16.750553131103516
    7. '.ap' → logprob: -16.750553131103516
    8. '.extend' → logprob: -17.125553131103516
    9. '   ' → logprob: -17.500553131103516
    10. ').' → logprob: -17.750553131103516

Token 409: '('{}' (ID: 179645)
  Prédit: '('{}'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('{}' → logprob: -0.0035593274515122175
    2. '(f' → logprob: -6.253559112548828
    3. '('' → logprob: -6.503559112548828
    4. ''' → logprob: -9.003559112548828
    5. '(' → logprob: -12.503559112548828
    6. 'f' → logprob: -13.378559112548828
    7. '('{' → logprob: -13.503559112548828
    8. '("{}' → logprob: -14.003559112548828
    9. ' '{}' → logprob: -14.503559112548828
    10. '(('' → logprob: -16.128559112548828

Token 410: ' {}'.' (ID: 62777)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.011369172483682632
    2. '{}' → logprob: -5.136369228363037
    3. 'adj' → logprob: -5.636369228363037
    4. '(adj' → logprob: -6.761369228363037
    5. ' '' → logprob: -8.636368751525879
    6. ' adj' → logprob: -9.011368751525879
    7. '('{}' → logprob: -9.136368751525879
    8. ' '{}' → logprob: -10.261368751525879
    9. ''ad' → logprob: -10.261368751525879
    10. '{}'.' → logprob: -10.261368751525879

Token 411: 'format' (ID: 4078)
  Prédit: '(adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(adj' → logprob: -0.020528579130768776
    2. '(current' → logprob: -4.020528793334961
    3. '(ad' → logprob: -6.770528793334961
    4. '(' → logprob: -6.770528793334961
    5. '(sp' → logprob: -10.645528793334961
    6. 'adj' → logprob: -10.770528793334961
    7. '(cur' → logprob: -11.645528793334961
    8. '(node' → logprob: -12.020528793334961
    9. '(curr' → logprob: -12.020528793334961
    10. 'current' → logprob: -12.270528793334961

Token 412: '(current' (ID: 15023)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.04312856122851372
    2. '(adj' → logprob: -3.293128490447998
    3. 'current' → logprob: -5.293128490447998
    4. '(current' → logprob: -10.043128967285156
    5. ' adjacent' → logprob: -13.043128967285156
    6. '(ad' → logprob: -13.543128967285156
    7. '   ' → logprob: -14.793128967285156
    8. '(' → logprob: -14.793128967285156
    9. '_adj' → logprob: -15.918128967285156
    10. ' current' → logprob: -16.043128967285156

Token 413: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -1.1472419600977446e-06
    2. 'node' → logprob: -14.000000953674316
    3. '_NODE' → logprob: -16.125001907348633
    4. '_' → logprob: -16.750001907348633
    5. 'Node' → logprob: -18.125001907348633
    6. '[node' → logprob: -18.125001907348633
    7. '_Node' → logprob: -18.125001907348633
    8. '
' → logprob: -18.250001907348633
    9. '_nodes' → logprob: -19.000001907348633
    10. 'adj' → logprob: -19.000001907348633

Token 414: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.6696149840718135e-05
    2. ' ,' → logprob: -9.875056266784668
    3. 'adj' → logprob: -13.250056266784668
    4. '',' → logprob: -13.375056266784668
    5. ',
' → logprob: -13.750056266784668
    6. ','' → logprob: -15.625056266784668
    7. '           ' → logprob: -16.125057220458984
    8. '   ' → logprob: -16.125057220458984
    9. ''' → logprob: -16.250057220458984
    10. ',node' → logprob: -16.625057220458984

Token 415: ' adjacent' (ID: 39069)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.004083624575287104
    2. ' adjacent' → logprob: -5.504083633422852
    3. ' adj' → logprob: -12.879083633422852
    4. '(adj' → logprob: -13.504083633422852
    5. '   ' → logprob: -14.754083633422852
    6. 'Adjacent' → logprob: -15.379083633422852
    7. ' ' → logprob: -16.25408363342285
    8. 'neighbor' → logprob: -16.62908363342285
    9. 'aj' → logprob: -16.87908363342285
    10. ' adjacency' → logprob: -17.00408363342285

Token 416: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.0002233245177194476
    2. 'node' → logprob: -8.625223159790039
    3. ')' → logprob: -10.875223159790039
    4. '_nodes' → logprob: -11.250223159790039
    5. '
' → logprob: -12.250223159790039
    6. '_' → logprob: -13.875223159790039
    7. 'Node' → logprob: -14.125223159790039
    8. ')_' → logprob: -14.250223159790039
    9. '_NODE' → logprob: -14.750223159790039
    10. '_b' → logprob: -14.750223159790039

Token 417: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.06762123107910156
    2. '))
' → logprob: -2.8176212310791016
    3. ')' → logprob: -5.192621231079102
    4. ')
' → logprob: -9.942621231079102
    5. '       ' → logprob: -11.317621231079102
    6. '   ' → logprob: -12.067621231079102
    7. ''))' → logprob: -12.317621231079102
    8. '))
' → logprob: -12.942621231079102
    9. '           ' → logprob: -13.067621231079102
    10. '))

' → logprob: -13.942621231079102

Token 418: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11543791741132736
    2. 'else' → logprob: -2.2404379844665527
    3. ' else' → logprob: -5.990437984466553
    4. '           ' → logprob: -9.990437507629395
    5. '<|end|>' → logprob: -10.490437507629395
    6. '   ' → logprob: -11.240437507629395
    7. ')' → logprob: -11.240437507629395
    8. '```' → logprob: -12.490437507629395
    9. '}else' → logprob: -13.865437507629395
    10. 'elif' → logprob: -13.990437507629395

Token 419: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' (adapté à ' node') → logprob: -0.023353558033704758
    2. ' node' → logprob: -3.7733535766601562
    3. '
' → logprob: -9.398353576660156
    4. '   ' → logprob: -11.148353576660156
    5. '           ' → logprob: -12.648353576660156
    6. '	node' → logprob: -12.898353576660156
    7. '
' → logprob: -13.523353576660156
    8. '    
' → logprob: -14.148353576660156
    9. '[node' → logprob: -14.523353576660156
    10. '            
' → logprob: -14.523353576660156

Token 420: '_out' (ID: 12171)
  Prédit: '_out'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_out' → logprob: -2.45848218582978e-06
    2. 'out' → logprob: -13.37500286102295
    3. 'Out' → logprob: -14.87500286102295
    4. '_output' → logprob: -16.625001907348633
    5. '_' → logprob: -16.750001907348633
    6. '_to' → logprob: -16.750001907348633
    7. '_in' → logprob: -17.125001907348633
    8. '_OUT' → logprob: -17.250001907348633
    9. '_on' → logprob: -17.625001907348633
    10. '_of' → logprob: -17.875001907348633

Token 421: '_de' (ID: 5047)
  Prédit: '_de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_de' → logprob: -3.762356209335849e-05
    2. '_out' → logprob: -11.12503719329834
    3. 'degrees' → logprob: -11.25003719329834
    4. 'de' → logprob: -12.12503719329834
    5. 'out' → logprob: -12.37503719329834
    6. '_of' → logprob: -17.125038146972656
    7. '_or' → logprob: -17.250038146972656
    8. 'or' → logprob: -17.375038146972656
    9. '```' → logprob: -17.500038146972656
    10. 'of' → logprob: -17.750038146972656

Token 422: 'grees' (ID: 86997)
  Prédit: 'grees'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grees' → logprob: -2.45848218582978e-06
    2. 'eg' → logprob: -13.87500286102295
    3. 'g' → logprob: -14.12500286102295
    4. 'degrees' → logprob: -14.75000286102295
    5. 'gre' → logprob: -15.62500286102295
    6. 'gree' → logprob: -16.125001907348633
    7. 'gress' → logprob: -17.250001907348633
    8. 'rees' → logprob: -18.000001907348633
    9. '```' → logprob: -19.000001907348633
    10. 'GRE' → logprob: -19.375001907348633

Token 423: '[current' (ID: 49470)
  Prédit: '[current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[current' → logprob: -5.6696149840718135e-05
    2. '[' → logprob: -10.000056266784668
    3. '[node' → logprob: -12.000056266784668
    4. 'current' → logprob: -12.750056266784668
    5. '[curr' → logprob: -14.250056266784668
    6. '[cur' → logprob: -14.375056266784668
    7. 'adj' → logprob: -15.125056266784668
    8. '[parent' → logprob: -15.250056266784668
    9. '
' → logprob: -16.125057220458984
    10. '[
' → logprob: -16.125057220458984

Token 424: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.01627013087272644
    2. '_de' → logprob: -5.141270160675049
    3. '_nodes' → logprob: -5.516270160675049
    4. '_out' → logprob: -5.891270160675049
    5. 'node' → logprob: -6.141270160675049
    6. 'de' → logprob: -7.641270160675049
    7. 'out' → logprob: -7.891270160675049
    8. '[node' → logprob: -8.76626968383789
    9. 'degrees' → logprob: -9.76626968383789
    10. ']' → logprob: -9.89126968383789

Token 425: ']' (ID: 60)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.10177000612020493
    2. ' +=' → logprob: -2.3517699241638184
    3. ']+=' → logprob: -6.976769924163818
    4. ')' → logprob: -7.601769924163818
    5. '[' → logprob: -9.101770401000977
    6. '   ' → logprob: -11.976770401000977
    7. ']' → logprob: -12.851770401000977
    8. '+' → logprob: -12.851770401000977
    9. ')+' → logprob: -13.351770401000977
    10. '```' → logprob: -13.601770401000977

Token 426: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0004942946252413094
    2. ' +=' → logprob: -7.625494480133057
    3. ']+=' → logprob: -12.500494003295898
    4. '[' → logprob: -13.125494003295898
    5. '+=(' → logprob: -15.875494003295898
    6. '-=' → logprob: -16.0004940032959
    7. '+' → logprob: -16.2504940032959
    8. '+='' → logprob: -16.3754940032959
    9. '=' → logprob: -16.8754940032959
    10. '+="' → logprob: -17.6254940032959

Token 427: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00029601677670143545
    2. ' ' → logprob: -8.125295639038086
    3. '   ' → logprob: -18.625295639038086
    4. '0' → logprob: -19.312795639038086
    5. '
' → logprob: -19.500295639038086
    6. '2' → logprob: -19.687795639038086
    7. '+' → logprob: -19.875295639038086
    8. '```' → logprob: -20.000295639038086
    9. '-' → logprob: -20.437795639038086
    10. ' ' → logprob: -20.937795639038086

Token 428: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '0' → logprob: -17.5
    4. '۱' → logprob: -19.0625
    5. '```' → logprob: -19.1875
    6. '2' → logprob: -19.375
    7. '
' → logprob: -19.8125
    8. '-' → logprob: -20.0
    9. '<|end|>' → logprob: -20.25
    10. '   ' → logprob: -20.3125

Token 429: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.060502324253320694
    2. 'else' → logprob: -3.185502290725708
    3. '   ' → logprob: -5.060502529144287
    4. '<|end|>' → logprob: -5.185502529144287
    5. ' else' → logprob: -5.310502529144287
    6. 'elif' → logprob: -8.935502052307129
    7. '        ' → logprob: -9.685502052307129
    8. '    ' → logprob: -9.935502052307129
    9. ')' → logprob: -10.435502052307129
    10. '```' → logprob: -10.435502052307129

Token 430: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.057698026299476624
    2. 'else' → logprob: -2.9326980113983154
    3. ' else' → logprob: -5.9326982498168945
    4. '<|end|>' → logprob: -9.182698249816895
    5. '   ' → logprob: -10.182698249816895
    6. 'elif' → logprob: -11.432698249816895
    7. '```' → logprob: -12.557698249816895
    8. '	else' → logprob: -13.807698249816895
    9. ')' → logprob: -13.807698249816895
    10. '	' → logprob: -14.557698249816895

Token 431: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.4986124336719513
    2. '       ' → logprob: -1.248612403869629
    3. ' else' → logprob: -2.248612403869629
    4. '   ' → logprob: -8.748612403869629
    5. 'elif' → logprob: -11.623612403869629
    6. '	else' → logprob: -11.748612403869629
    7. '<|end|>' → logprob: -14.248612403869629
    8. ' elif' → logprob: -14.498612403869629
    9. '```' → logprob: -14.623612403869629
    10. '_else' → logprob: -14.873612403869629

Token 432: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.16549451649188995
    2. ':' → logprob: -1.9154945611953735
    3. '           ' → logprob: -5.290494441986084
    4. '       ' → logprob: -9.040494918823242
    5. '):
' → logprob: -10.290494918823242
    6. ':

' → logprob: -11.290494918823242
    7. '   ' → logprob: -11.415494918823242
    8. '          ' → logprob: -11.665494918823242
    9. ' :
' → logprob: -11.915494918823242
    10. '         ' → logprob: -12.790494918823242

Token 433: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.17653658986091614
    2. ' edge' → logprob: -2.1765365600585938
    3. 'edge' → logprob: -3.0515365600585938
    4. '       ' → logprob: -7.551536560058594
    5. '   ' → logprob: -7.926536560058594
    6. '          ' → logprob: -9.926536560058594
    7. '               ' → logprob: -10.551536560058594
    8. '
' → logprob: -10.551536560058594
    9. '         ' → logprob: -10.926536560058594
    10. '```' → logprob: -10.926536560058594

Token 434: ' edge' (ID: 11165)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' (adapté à ' edge') → logprob: -0.010241523385047913
    2. ' edge' → logprob: -4.635241508483887
    3. '           ' → logprob: -7.760241508483887
    4. '       ' → logprob: -10.010241508483887
    5. '   ' → logprob: -12.135241508483887
    6. '               ' → logprob: -13.385241508483887
    7. '```' → logprob: -13.510241508483887
    8. '(edge' → logprob: -14.010241508483887
    9. '            ' → logprob: -14.260241508483887
    10. ' ' → logprob: -14.510241508483887

Token 435: '_or' (ID: 15400)
  Prédit: '_or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_or' → logprob: -1.0206720617134124e-05
    2. 'orient' → logprob: -12.12501049041748
    3. '_orientation' → logprob: -12.62501049041748
    4. 'or' → logprob: -13.87501049041748
    5. '_out' → logprob: -15.25001049041748
    6. '
' → logprob: -16.750009536743164
    7. '\' → logprob: -17.375009536743164
    8. '   ' → logprob: -17.500009536743164
    9. ' orientations' → logprob: -18.375009536743164
    10. '-or' → logprob: -18.500009536743164

Token 436: 'ient' (ID: 773)
  Prédit: 'ient'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ient' → logprob: -0.2592391073703766
    2. 'orient' → logprob: -1.5092390775680542
    3. 'out' → logprob: -5.884239196777344
    4. '_or' → logprob: -6.759239196777344
    5. 'or' → logprob: -7.259239196777344
    6. 'ent' → logprob: -7.384239196777344
    7. 'in' → logprob: -7.509239196777344
    8. 'int' → logprob: -7.759239196777344
    9. 'ien' → logprob: -8.384239196777344
    10. 'iented' → logprob: -8.884239196777344

Token 437: 'ations' (ID: 929)
  Prédit: 'ations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ations' → logprob: -0.001813224982470274
    2. '.append' → logprob: -6.8768134117126465
    3. '_' → logprob: -8.376812934875488
    4. '_edges' → logprob: -9.126812934875488
    5. 'ances' → logprob: -9.251812934875488
    6. 's' → logprob: -9.501812934875488
    7. '_d' → logprob: -9.626812934875488
    8. '_angles' → logprob: -10.251812934875488
    9. '_or' → logprob: -10.626812934875488
    10. '[' → logprob: -11.251812934875488

Token 438: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -7.588793960167095e-05
    2. '.' → logprob: -9.500076293945312
    3. 'append' → logprob: -14.125076293945312
    4. ' .' → logprob: -16.375076293945312
    5. '.extend' → logprob: -16.375076293945312
    6. '.app' → logprob: -17.375076293945312
    7. '           ' → logprob: -18.500076293945312
    8. '   ' → logprob: -18.500076293945312
    9. '.add' → logprob: -19.500076293945312
    10. '.ap' → logprob: -19.500076293945312

Token 439: '('{}' (ID: 179645)
  Prédit: '('{}'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('{}' → logprob: -0.0011865380220115185
    2. '('' → logprob: -6.751186370849609
    3. ''' → logprob: -11.75118637084961
    4. '(f' → logprob: -12.00118637084961
    5. '('{' → logprob: -13.62618637084961
    6. '(' → logprob: -14.25118637084961
    7. '("{}' → logprob: -15.62618637084961
    8. 'f' → logprob: -15.75118637084961
    9. ' '{}' → logprob: -17.62618637084961
    10. '(('' → logprob: -17.62618637084961

Token 440: ' {}'.' (ID: 62777)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.15536203980445862
    2. ' '{}' → logprob: -2.405362129211426
    3. '{}' → logprob: -3.030362129211426
    4. ' {}' → logprob: -6.155362129211426
    5. '('{}' → logprob: -6.155362129211426
    6. ' '{}'' → logprob: -7.405362129211426
    7. ' '' → logprob: -8.030362129211426
    8. '"' → logprob: -10.530362129211426
    9. ''{' → logprob: -10.780362129211426
    10. '.format' → logprob: -10.905362129211426

Token 441: 'format' (ID: 4078)
  Prédit: 'format'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'format' → logprob: -0.0001427538663847372
    2. '(format' → logprob: -9.750143051147461
    3. '.format' → logprob: -9.875143051147461
    4. ''' → logprob: -10.875143051147461
    5. ''.' → logprob: -11.625143051147461
    6. '.' → logprob: -13.500143051147461
    7. 'append' → logprob: -13.875143051147461
    8. ' format' → logprob: -14.250143051147461
    9. '{}.' → logprob: -14.625143051147461
    10. '{}'.' → logprob: -14.750143051147461

Token 442: '(adj' (ID: 141921)
  Prédit: '(adj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(adj' → logprob: -0.011049113236367702
    2. 'adj' → logprob: -4.511049270629883
    3. '(ad' → logprob: -14.511049270629883
    4. '(' → logprob: -15.011049270629883
    5. '   ' → logprob: -16.136049270629883
    6. '_adj' → logprob: -16.261049270629883
    7. '(current' → logprob: -16.636049270629883
    8. '```' → logprob: -17.511049270629883
    9. '           ' → logprob: -17.761049270629883
    10. ' adjacent' → logprob: -18.011049270629883

Token 443: 'acent' (ID: 28063)
  Prédit: 'acent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acent' → logprob: -7.517272024415433e-05
    2. '_node' → logprob: -10.375075340270996
    3. 'ac' → logprob: -11.375075340270996
    4. 'acency' → logprob: -12.125075340270996
    5. 'cent' → logprob: -12.250075340270996
    6. 'node' → logprob: -12.375075340270996
    7. 'adj' → logprob: -12.500075340270996
    8. 'current' → logprob: -12.750075340270996
    9. '_nodes' → logprob: -13.625075340270996
    10. '
' → logprob: -13.875075340270996

Token 444: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.0015691416338086128
    2. '_out' → logprob: -7.1265692710876465
    3. '_nodes' → logprob: -7.5015692710876465
    4. 'node' → logprob: -9.376568794250488
    5. 'Node' → logprob: -10.376568794250488
    6. 'out' → logprob: -11.001568794250488
    7. '_or' → logprob: -11.376568794250488
    8. '_current' → logprob: -11.501568794250488
    9. '_' → logprob: -11.751568794250488
    10. 'current' → logprob: -12.376568794250488

Token 445: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004971518646925688
    2. ',current' → logprob: -7.875497341156006
    3. ' ,' → logprob: -9.125496864318848
    4. '',' → logprob: -12.125496864318848
    5. 'current' → logprob: -13.750496864318848
    6. ' current' → logprob: -14.125496864318848
    7. ''' → logprob: -15.000496864318848
    8. ',
' → logprob: -15.250496864318848
    9. ','' → logprob: -15.625496864318848
    10. '[current' → logprob: -16.750497817993164

Token 446: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.011050998233258724
    2. ' current' → logprob: -4.511051177978516
    3. '[current' → logprob: -13.136051177978516
    4. '(current' → logprob: -15.011051177978516
    5. ',current' → logprob: -15.261051177978516
    6. ')' → logprob: -15.636051177978516
    7. '$current' → logprob: -15.761051177978516
    8. '	current' → logprob: -16.386051177978516
    9. '   ' → logprob: -16.511051177978516
    10. '.current' → logprob: -17.011051177978516

Token 447: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -5.7888184528565034e-05
    2. 'node' → logprob: -10.0000581741333
    3. '_' → logprob: -11.8750581741333
    4. ')' → logprob: -12.5000581741333
    5. ')_' → logprob: -14.6250581741333
    6. '_NODE' → logprob: -15.3750581741333
    7. '_)' → logprob: -15.6250581741333
    8. 'Node' → logprob: -15.7500581741333
    9. '_nodes' → logprob: -16.125057220458984
    10. '[node' → logprob: -16.250057220458984

Token 448: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.008150212466716766
    2. ')' → logprob: -5.508150100708008
    3. '))
' → logprob: -5.508150100708008
    4. ''))' → logprob: -12.258150100708008
    5. ')
' → logprob: -12.633150100708008
    6. '   ' → logprob: -14.133150100708008
    7. '       ' → logprob: -14.883150100708008
    8. ' ))' → logprob: -15.383150100708008
    9. ')))' → logprob: -15.508150100708008
    10. '))

' → logprob: -15.883150100708008

Token 449: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.021696016192436218
    2. '
' → logprob: -3.896696090698242
    3. 'node' → logprob: -7.396696090698242
    4. '       ' → logprob: -9.021696090698242
    5. '   ' → logprob: -9.271696090698242
    6. '            
' → logprob: -9.771696090698242
    7. '```' → logprob: -9.896696090698242
    8. ')' → logprob: -10.021696090698242
    9. '(node' → logprob: -10.521696090698242
    10. ' node' → logprob: -10.521696090698242

Token 450: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' (adapté à ' node') → logprob: -0.0011724866926670074
    2. ' node' → logprob: -6.7511725425720215
    3. '           ' → logprob: -13.376172065734863
    4. '```' → logprob: -14.751172065734863
    5. '	node' → logprob: -16.25117301940918
    6. '
' → logprob: -16.25117301940918
    7. '   ' → logprob: -16.87617301940918
    8. '[node' → logprob: -16.87617301940918
    9. '            
' → logprob: -17.25117301940918
    10. '               ' → logprob: -18.12617301940918

Token 451: '_out' (ID: 12171)
  Prédit: '_out'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_out' → logprob: -2.816093228830141e-06
    2. 'out' → logprob: -13.62500286102295
    3. ''_' → logprob: -14.75000286102295
    4. '```' → logprob: -15.37500286102295
    5. 'Out' → logprob: -16.125001907348633
    6. '
' → logprob: -16.125001907348633
    7. '_or' → logprob: -16.250001907348633
    8. ')_' → logprob: -16.250001907348633
    9. ']_' → logprob: -16.250001907348633
    10. '._' → logprob: -16.375001907348633

Token 452: '_de' (ID: 5047)
  Prédit: '_de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_de' → logprob: -5.796184723294573e-06
    2. 'degrees' → logprob: -12.500005722045898
    3. '_out' → logprob: -13.625005722045898
    4. 'out' → logprob: -15.000005722045898
    5. 'de' → logprob: -15.250005722045898
    6. '_degree' → logprob: -16.5000057220459
    7. '_DE' → logprob: -16.8750057220459
    8. 'Degrees' → logprob: -17.0000057220459
    9. 'or' → logprob: -17.3750057220459
    10. '_or' → logprob: -17.5000057220459

Token 453: 'grees' (ID: 86997)
  Prédit: 'grees'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grees' → logprob: -9.014684110297821e-06
    2. 'eg' → logprob: -11.875008583068848
    3. 'rees' → logprob: -14.000008583068848
    4. 'gre' → logprob: -15.125008583068848
    5. 'degrees' → logprob: -15.125008583068848
    6. 'g' → logprob: -15.625008583068848
    7. 'gress' → logprob: -15.750008583068848
    8. 'gree' → logprob: -16.000009536743164
    9. '[' → logprob: -16.375009536743164
    10. '```' → logprob: -17.500009536743164

Token 454: '[' (ID: 58)
  Prédit: '[current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[current' → logprob: -0.003985196817666292
    2. '[' → logprob: -5.878985404968262
    3. '[node' → logprob: -6.753985404968262
    4. 'current' → logprob: -12.378985404968262
    5. '[curr' → logprob: -12.628985404968262
    6. '```' → logprob: -13.378985404968262
    7. '[cur' → logprob: -13.378985404968262
    8. '[
' → logprob: -13.878985404968262
    9. '[parent' → logprob: -14.128985404968262
    10. 'adj' → logprob: -14.753985404968262

Token 455: 'adj' (ID: 57001)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.03485225886106491
    2. 'adj' → logprob: -3.9098522663116455
    3. '[current' → logprob: -4.284852027893066
    4. '[' → logprob: -8.034852027893066
    5. ' current' → logprob: -9.284852027893066
    6. 'parent' → logprob: -12.909852027893066
    7. '	current' → logprob: -13.159852027893066
    8. '   ' → logprob: -13.284852027893066
    9. '```' → logprob: -13.284852027893066
    10. '(current' → logprob: -13.659852027893066

Token 456: 'acent' (ID: 28063)
  Prédit: 'acent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acent' → logprob: -4.394135612528771e-05
    2. 'ges' → logprob: -11.125043869018555
    3. 'adj' → logprob: -12.000043869018555
    4. 'acency' → logprob: -12.375043869018555
    5. 'cent' → logprob: -13.000043869018555
    6. 'j' → logprob: -13.000043869018555
    7. 'ac' → logprob: -13.000043869018555
    8. '[' → logprob: -13.000043869018555
    9. '[current' → logprob: -13.250043869018555
    10. '_nodes' → logprob: -13.625043869018555

Token 457: '_node' (ID: 11390)
  Prédit: '_de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_de' → logprob: -0.003396933199837804
    2. '_nodes' → logprob: -6.128396987915039
    3. '_' → logprob: -8.003396987915039
    4. '[current' → logprob: -8.253396987915039
    5. '_node' → logprob: -9.003396987915039
    6. '_out' → logprob: -9.128396987915039
    7. 'degrees' → logprob: -9.128396987915039
    8. 's' → logprob: -9.753396987915039
    9. '[node' → logprob: -9.753396987915039
    10. 'de' → logprob: -10.253396987915039

Token 458: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0076578580774366856
    2. ']+=' → logprob: -4.882658004760742
    3. ']-' → logprob: -11.382658004760742
    4. '[' → logprob: -11.507658004760742
    5. '+=' → logprob: -11.882658004760742
    6. ' +=' → logprob: -12.257658004760742
    7. ' ]' → logprob: -12.382658004760742
    8. ')' → logprob: -12.507658004760742
    9. ' -=' → logprob: -12.507658004760742
    10. ']+' → logprob: -12.882658004760742

Token 459: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.024667296558618546
    2. '-=' → logprob: -4.399667263031006
    3. ' +=' → logprob: -4.524667263031006
    4. ' -=' → logprob: -6.899667263031006
    5. '[' → logprob: -9.274667739868164
    6. '-' → logprob: -9.524667739868164
    7. '[-' → logprob: -10.774667739868164
    8. ']+=' → logprob: -11.024667739868164
    9. '=' → logprob: -11.399667739868164
    10. '   ' → logprob: -11.399667739868164

Token 460: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003802680876106024
    2. ' ' → logprob: -7.875380039215088
    3. '   ' → logprob: -15.875380516052246
    4. '0' → logprob: -18.12537956237793
    5. '           ' → logprob: -18.25037956237793
    6. '
' → logprob: -19.25037956237793
    7. '    ' → logprob: -19.62537956237793
    8. '```' → logprob: -19.62537956237793
    9. '2' → logprob: -20.00037956237793
    10. '       ' → logprob: -20.12537956237793

Token 461: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.875000953674316
    3. '-' → logprob: -15.750000953674316
    4. '0' → logprob: -19.5
    5. '   ' → logprob: -19.5
    6. '2' → logprob: -19.625
    7. '```' → logprob: -19.75
    8. '<|end|>' → logprob: -19.875
    9. '+' → logprob: -21.375
    10. '=' → logprob: -21.5

Token 462: '

' (ID: 279)
  Prédit: 'assign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'assign' → logprob: -0.6434987187385559
    2. '   ' → logprob: -0.8934987187385559
    3. '
' → logprob: -3.018498659133911
    4. '<|end|>' → logprob: -4.39349889755249
    5. '(assign' → logprob: -6.64349889755249
    6. 'return' → logprob: -7.14349889755249
    7. ' assign' → logprob: -7.39349889755249
    8. '	assign' → logprob: -7.89349889755249
    9. '    
' → logprob: -8.018498420715332
    10. ')' → logprob: -8.518498420715332

Token 463: 'assign' (ID: 14297)
  Prédit: 'assign'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'assign' → logprob: -1.652451464906335e-05
    2. ' assign' → logprob: -12.000016212463379
    3. 'return' → logprob: -12.125016212463379
    4. '
' → logprob: -12.625016212463379
    5. '(assign' → logprob: -13.500016212463379
    6. '.assign' → logprob: -16.500017166137695
    7. '_assign' → logprob: -16.875017166137695
    8. 'assing' → logprob: -17.375017166137695
    9. '	assign' → logprob: -17.750017166137695
    10. '<|end|>' → logprob: -18.000017166137695

Token 464: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -0.00012368128227535635
    2. 'edge' → logprob: -9.000123977661133
    3. 'assign' → logprob: -15.875123977661133
    4. 'Edge' → logprob: -16.375123977661133
    5. '_' → logprob: -18.375123977661133
    6. '_EDGE' → logprob: -18.750123977661133
    7. '_edges' → logprob: -19.500123977661133
    8. ' edge' → logprob: -20.000123977661133
    9. '_node' → logprob: -20.625123977661133
    10. '_assign' → logprob: -20.750123977661133

Token 465: '_d' (ID: 1565)
  Prédit: '_edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -0.0018727132119238377
    2. '_d' → logprob: -6.626872539520264
    3. 'edge' → logprob: -8.001873016357422
    4. 'dire' → logprob: -8.501873016357422
    5. 'd' → logprob: -12.376873016357422
    6. '_direction' → logprob: -12.751873016357422
    7. 'dge' → logprob: -14.501873016357422
    8. 'Edge' → logprob: -14.751873016357422
    9. '_edges' → logprob: -15.376873016357422
    10. '_dir' → logprob: -16.376873016357422

Token 466: 'irections' (ID: 119283)
  Prédit: 'irections'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'irections' → logprob: -9.088346359931165e-07
    2. 're' → logprob: -14.500000953674316
    3. 'ire' → logprob: -15.125000953674316
    4. 'Directions' → logprob: -16.625
    5. 'ections' → logprob: -17.0
    6. 'irect' → logprob: -17.625
    7. '_' → logprob: -18.125
    8. 'dire' → logprob: -18.25
    9. '
' → logprob: -18.625
    10. ' ire' → logprob: -18.625

Token 467: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -4.990154047845863e-05
    2. '(' → logprob: -10.000049591064453
    3. '()
' → logprob: -12.625049591064453
    4. ' ()' → logprob: -15.125049591064453
    5. '()

' → logprob: -15.625049591064453
    6. '()<' → logprob: -15.875049591064453
    7. '();' → logprob: -16.250049591064453
    8. '()`' → logprob: -16.375049591064453
    9. '()]' → logprob: -16.375049591064453
    10. '())' → logprob: -16.375049591064453

Token 468: 'print' (ID: 1598)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1002265140414238
    2. 'print' → logprob: -2.350226402282715
    3. ' for' → logprob: -10.850226402282715
    4. ' print' → logprob: -15.225226402282715
    5. 'if' → logprob: -15.600226402282715
    6. '```' → logprob: -17.85022735595703
    7. '#print' → logprob: -18.35022735595703
    8. '\n' → logprob: -19.10022735595703
    9. '[' → logprob: -19.35022735595703
    10. '#' → logprob: -19.72522735595703

Token 469: '('\' (ID: 24345)
  Prédit: '('\'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('\' → logprob: -0.007034562528133392
    2. '(len' → logprob: -5.007034778594971
    3. '(' → logprob: -9.132034301757812
    4. '(*' → logprob: -9.132034301757812
    5. '("\' → logprob: -9.507034301757812
    6. '()' → logprob: -10.757034301757812
    7. '('' → logprob: -12.257034301757812
    8. 'len' → logprob: -13.757034301757812
    9. ''\' → logprob: -14.382034301757812
    10. '(\' → logprob: -15.757034301757812

Token 470: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.1756367712223437e-05
    2. '\n' → logprob: -11.625011444091797
    3. '
' → logprob: -13.125011444091797
    4. 'join' → logprob: -14.375011444091797
    5. ' n' → logprob: -17.125011444091797
    6. ''\' → logprob: -17.250011444091797
    7. '```' → logprob: -18.750011444091797
    8. '``' → logprob: -19.125011444091797
    9. ' 
' → logprob: -19.875011444091797
    10. '
' → logprob: -20.125011444091797

Token 471: ''.' (ID: 6120)
  Prédit: ''.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''.' → logprob: -0.3635193109512329
    2. '.join' → logprob: -1.488519310951233
    3. '.' → logprob: -2.7385191917419434
    4. 'join' → logprob: -4.488519191741943
    5. '".' → logprob: -6.113519191741943
    6. '''.' → logprob: -7.738519191741943
    7. ' .' → logprob: -8.488519668579102
    8. ').' → logprob: -8.613519668579102
    9. ')' → logprob: -10.488519668579102
    10. 'print' → logprob: -10.738519668579102

Token 472: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -1.9361264946837764e-07
    2. ' join' → logprob: -16.0
    3. 'j' → logprob: -17.125
    4. 'jo' → logprob: -18.125
    5. 'print' → logprob: -18.375
    6. '(join' → logprob: -20.0
    7. '.join' → logprob: -20.375
    8. '```' → logprob: -20.5
    9. '/j' → logprob: -22.125
    10. '
' → logprob: -22.625

Token 473: '(edge' (ID: 84023)
  Prédit: '(edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(edge' → logprob: -0.00015860427811276168
    2. 'edge' → logprob: -8.750158309936523
    3. '=edge' → logprob: -16.000158309936523
    4. ' edge' → logprob: -16.875158309936523
    5. '(' → logprob: -17.125158309936523
    6. '(
' → logprob: -19.625158309936523
    7. '(line' → logprob: -20.250158309936523
    8. 'Edge' → logprob: -20.750158309936523
    9. '(angle' → logprob: -21.250158309936523
    10. '_edge' → logprob: -21.625158309936523

Token 474: '_or' (ID: 15400)
  Prédit: '_or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_or' → logprob: -3.128163257315464e-07
    2. '_orientation' → logprob: -16.25
    3. '_out' → logprob: -16.625
    4. 'orient' → logprob: -19.0
    5. '_
' → logprob: -20.0
    6. 'or' → logprob: -20.25
    7. '_opt' → logprob: -20.5
    8. '_' → logprob: -20.625
    9. '```' → logprob: -21.0
    10. '
' → logprob: -21.625

Token 475: 'ient' (ID: 773)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.4025818109512329
    2. 't' → logprob: -1.152581810951233
    3. 'ient' → logprob: -4.402581691741943
    4. 'ations' → logprob: -5.777581691741943
    5. 'nt' → logprob: -10.027582168579102
    6. 'et' → logprob: -10.402582168579102
    7. 'int' → logprob: -10.402582168579102
    8. 'entions' → logprob: -10.652582168579102
    9. 'er' → logprob: -10.777582168579102
    10. 'z' → logprob: -10.902582168579102

Token 476: 'ations' (ID: 929)
  Prédit: 'ations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ations' → logprob: -4.870950215263292e-05
    2. 't' → logprob: -10.750048637390137
    3. 's' → logprob: -10.875048637390137
    4. 'e' → logprob: -12.625048637390137
    5. 'ons' → logprob: -14.250048637390137
    6. 'es' → logprob: -14.375048637390137
    7. '
' → logprob: -14.375048637390137
    8. 'als' → logprob: -14.750048637390137
    9. 'entions' → logprob: -14.750048637390137
    10. 'ections' → logprob: -15.125048637390137

Token 477: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.16022484004497528
    2. ')' → logprob: -1.9102247953414917
    3. '))
' → logprob: -14.910224914550781
    4. ')))' → logprob: -15.660224914550781
    5. '})' → logprob: -16.53522491455078
    6. ')
' → logprob: -16.78522491455078
    7. '())' → logprob: -17.28522491455078
    8. '])' → logprob: -17.41022491455078
    9. '()))' → logprob: -17.66022491455078
    10. ')}' → logprob: -18.28522491455078


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 475
Tokens correctement prédits (1ère position, stricte): 264
Tokens correctement prédits (1ère position, avec adaptation): 276
Tokens correctement prédits (top 10): 430
Précision stricte (1ère position): 55.58%
Précision adaptée (1ère position): 58.11%
Précision (top 10): 90.53%
================================================================================
