================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:43:53
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def min_cost_to_unlock_all_boxes():
    """
    Reads the number of boxes and keys, then reads the list of keys (each with coverage and cost).
    Computes the minimum cost to open all boxes using dynamic programming over bitmasks.
    Prints the minimal total cost or -1 if not all boxes can be opened.
    """
    # Read the number of boxes N, and the number of keys M
    N, M = map(int, input().split())

    # List to hold each key as a tuple: (bitmask of boxes it can open, cost)
    keys = []
    for _ in range(M):
        # Read the cost 'a' and the number of boxes this key can open 'b'
        a, b = map(int, input().split())
        # Read list 'c' of which boxes (1-indexed) this key can open
        c = list(map(int, input().split()))
        s = 0  # Bitmask representing boxes this key can open (0 means box closed)
        for cc in c:
            cc -= 1         # Convert to 0-based indexing
            s |= 1 << cc    # Set the bit corresponding to box cc
        # Append this key's bitmask and cost
        keys.append((s, a))

    # Dynamic Programming table:
    # dp[state] = minimal cost required to reach 'state' (which boxes opened)
    dp = [float('inf')] * (1 << N)
    # Base case: cost to open no boxes is 0
    dp[0] = 0

    # Loop over all possible states (sets of opened boxes)
    for s in range(1 << N):
        for i in range(M):
            # t: state if using key i from current state s
            t = s | keys[i][0]  # Open any boxes attainable by this key
            # Update the minimal cost to reach state t
            dp[t] = min(dp[t], keys[i][1] + dp[s])

    # If it's impossible to open all boxes (dp[-1] is infinite), output -1
    if dp[-1] == float('inf'):
        print(-1)
    else:
        # Else, print minimal cost to open all boxes
        print(dp[-1])
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' min' (ID: 1349)
  → Token d'amorce (pas de prédiction)

Token 2: '_cost' (ID: 36820)
  → Token d'amorce (pas de prédiction)

Token 3: '_to' (ID: 5089)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.013123643584549427
    2. '_cost' → logprob: -5.263123512268066
    3. '_to' → logprob: -5.888123512268066
    4. '_:' → logprob: -6.763123512268066
    5. '(' → logprob: -7.388123512268066
    6. '_min' → logprob: -7.638123512268066
    7. '(_' → logprob: -7.638123512268066
    8. '```' → logprob: -8.138123512268066
    9. '_function' → logprob: -8.263123512268066
    10. '_token' → logprob: -9.013123512268066

Token 4: '_unlock' (ID: 51221)
  Prédit: '_re'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_re' → logprob: -0.7473720908164978
    2. '_build' → logprob: -1.1223721504211426
    3. '_tr' → logprob: -2.4973721504211426
    4. '_buy' → logprob: -3.2473721504211426
    5. '_connect' → logprob: -4.122372150421143
    6. '_' → logprob: -4.247372150421143
    7. '_pay' → logprob: -5.247372150421143
    8. '_move' → logprob: -5.247372150421143
    9. '_complete' → logprob: -5.372372150421143
    10. '_construct' → logprob: -5.622372150421143

Token 5: '_all' (ID: 13305)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6647222638130188
    2. '():' → logprob: -1.414722204208374
    3. '_' → logprob: -2.539722204208374
    4. '_:' → logprob: -2.914722204208374
    5. '_unlock' → logprob: -3.164722204208374
    6. '(_:' → logprob: -3.664722204208374
    7. '_password' → logprob: -4.289722442626953
    8. '(:' → logprob: -4.914722442626953
    9. '(_' → logprob: -5.289722442626953
    10. '_parent' → logprob: -5.914722442626953

Token 6: '_boxes' (ID: 93347)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.6514594554901123
    2. '(' → logprob: -0.9014594554901123
    3. '_:' → logprob: -4.401459693908691
    4. '(:' → logprob: -4.526459693908691
    5. '_' → logprob: -4.651459693908691
    6. '(_:' → logprob: -4.901459693908691
    7. '_unlock' → logprob: -5.026459693908691
    8. '(_' → logprob: -5.151459693908691
    9. ':' → logprob: -6.026459693908691
    10. '(s' → logprob: -6.151459693908691

Token 7: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.012982209213078022
    2. '():' → logprob: -4.762982368469238
    3. '(:' → logprob: -6.012982368469238
    4. '_' → logprob: -6.887982368469238
    5. ':' → logprob: -7.637982368469238
    6. '(_:' → logprob: -8.887982368469238
    7. '_:' → logprob: -9.262982368469238
    8. '(":' → logprob: -10.512982368469238
    9. '```' → logprob: -10.762982368469238
    10. '(_' → logprob: -11.012982368469238

Token 8: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2313009649515152
    2. '   ' → logprob: -2.2313010692596436
    3. '```' → logprob: -3.2313010692596436
    4. '():' → logprob: -3.3563010692596436
    5. '(' → logprob: -4.7313008308410645
    6. '\' → logprob: -5.2313008308410645
    7. ':
' → logprob: -5.9813008308410645
    8. '\n' → logprob: -5.9813008308410645
    9. '
' → logprob: -6.8563008308410645
    10. '    
' → logprob: -6.8563008308410645

Token 9: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36200231313705444
    2. '\' → logprob: -2.612002372741699
    3. '    ' → logprob: -2.862002372741699
    4. '```' → logprob: -2.987002372741699
    5. ' ' → logprob: -3.237002372741699
    6. 'n' → logprob: -4.112002372741699
    7. '\n' → logprob: -4.487002372741699
    8. 'pass' → logprob: -4.487002372741699
    9. 'b' → logprob: -4.987002372741699
    10. ' pass' → logprob: -5.112002372741699

Token 10: '   ' (ID: 271)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.86557936668396
    2. 'Calculate' → logprob: -0.99057936668396
    3. ' Calculate' → logprob: -2.86557936668396
    4. '   ' → logprob: -2.99057936668396
    5. ' """' → logprob: -3.11557936668396
    6. 'Find' → logprob: -3.99057936668396
    7. ' Find' → logprob: -4.740579605102539
    8. ''''' → logprob: -4.990579605102539
    9. '\n' → logprob: -5.490579605102539
    10. ' calculate' → logprob: -6.365579605102539

Token 11: ' Reads' (ID: 88839)
  Prédit: 'Calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Calculate' → logprob: -0.14412720501422882
    2. 'Find' → logprob: -2.269127130508423
    3. 'Calcul' → logprob: -4.019127368927002
    4. ' Calculate' → logprob: -5.769127368927002
    5. 'Unlock' → logprob: -6.019127368927002
    6. '"""' → logprob: -6.644127368927002
    7. '   ' → logprob: -6.769127368927002
    8. ' Calculates' → logprob: -6.769127368927002
    9. 'Compute' → logprob: -6.894127368927002
    10. 'Returns' → logprob: -6.894127368927002

Token 12: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.5160139203071594
    2. ' input' → logprob: -1.7660138607025146
    3. ' lines' → logprob: -2.5160138607025146
    4. ' a' → logprob: -3.5160138607025146
    5. 'input' → logprob: -3.5160138607025146
    6. 'the' → logprob: -3.5160138607025146
    7. ')' → logprob: -4.391014099121094
    8. '   ' → logprob: -4.891014099121094
    9. ' )' → logprob: -4.891014099121094
    10. ' an' → logprob: -5.266014099121094

Token 13: ' number' (ID: 2086)
  Prédit: ' keys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' keys' → logprob: -0.9512838125228882
    2. ' cost' → logprob: -1.2012838125228882
    3. ' costs' → logprob: -1.9512838125228882
    4. ' input' → logprob: -3.3262839317321777
    5. 'cost' → logprob: -3.8262839317321777
    6. ' box' → logprob: -3.9512839317321777
    7. ' next' → logprob: -4.326283931732178
    8. '   ' → logprob: -4.701283931732178
    9. ' initial' → logprob: -4.701283931732178
    10. ' boxes' → logprob: -4.826283931732178

Token 14: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.3264930844306946
    2. 'of' → logprob: -1.3264930248260498
    3. '_of' → logprob: -5.201493263244629
    4. 's' → logprob: -5.701493263244629
    5. ' ' → logprob: -6.951493263244629
    6. '<|end|>' → logprob: -7.076493263244629
    7. '```' → logprob: -7.701493263244629
    8. '_tokens' → logprob: -7.701493263244629
    9. ')' → logprob: -8.076493263244629
    10. '   ' → logprob: -8.451493263244629

Token 15: ' boxes' (ID: 21967)
  Prédit: ' boxes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' boxes' → logprob: -0.003078959882259369
    2. ' ' → logprob: -6.378078937530518
    3. ' spaces' → logprob: -7.503078937530518
    4. ' keys' → logprob: -8.128079414367676
    5. ' lines' → logprob: -9.253079414367676
    6. ' characters' → logprob: -9.378079414367676
    7. ' box' → logprob: -9.503079414367676
    8. ' tokens' → logprob: -9.753079414367676
    9. ' unlock' → logprob: -9.753079414367676
    10. 'boxes' → logprob: -10.253079414367676

Token 16: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5035618543624878
    2. ' and' → logprob: -2.1285619735717773
    3. ' ' → logprob: -2.2535619735717773
    4. ',' → logprob: -2.8785619735717773
    5. '    ' → logprob: -3.1285619735717773
    6. ')' → logprob: -4.253561973571777
    7. '\n' → logprob: -4.628561973571777
    8. '<|end|>' → logprob: -5.003561973571777
    9. '```' → logprob: -5.003561973571777
    10. 'n' → logprob: -5.128561973571777

Token 17: ' keys' (ID: 12994)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.14048421382904053
    2. ' their' → logprob: -2.64048433303833
    3. ' unlock' → logprob: -4.01548433303833
    4. 'the' → logprob: -4.14048433303833
    5. ' locks' → logprob: -5.14048433303833
    6. '   ' → logprob: -5.26548433303833
    7. ' keys' → logprob: -5.89048433303833
    8. ' returns' → logprob: -6.01548433303833
    9. 'their' → logprob: -6.64048433303833
    10. 'locks' → logprob: -7.01548433303833

Token 18: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5485039949417114
    2. ',' → logprob: -1.5485039949417114
    3. ' and' → logprob: -2.673503875732422
    4. '```' → logprob: -3.173503875732422
    5. '    ' → logprob: -3.673503875732422
    6. ' ,' → logprob: -4.548503875732422
    7. '.' → logprob: -4.548503875732422
    8. ' available' → logprob: -4.673503875732422
    9. '
' → logprob: -4.798503875732422
    10. ' from' → logprob: -4.798503875732422

Token 19: ' then' (ID: 1815)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.2043161690235138
    2. ' then' → logprob: -2.4543161392211914
    3. '   ' → logprob: -2.7043161392211914
    4. '    ' → logprob: -4.454316139221191
    5. 'and' → logprob: -4.579316139221191
    6. ' ' → logprob: -6.079316139221191
    7. ' a' → logprob: -6.829316139221191
    8. ' the' → logprob: -6.954316139221191
    9. ',' → logprob: -7.204316139221191
    10. ' reads' → logprob: -7.329316139221191

Token 20: ' reads' (ID: 31523)
  Prédit: ' calculates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calculates' → logprob: -0.12062321603298187
    2. ' returns' → logprob: -3.2456231117248535
    3. ' computes' → logprob: -3.9956231117248535
    4. ' processes' → logprob: -4.1206231117248535
    5. ' reads' → logprob: -4.4956231117248535
    6. ' finds' → logprob: -4.6206231117248535
    7. ' continues' → logprob: -4.7456231117248535
    8. '   ' → logprob: -6.1206231117248535
    9. ' determines' → logprob: -6.2456231117248535
    10. ' calculate' → logprob: -6.9956231117248535

Token 21: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.06926826387643814
    2. ' keys' → logprob: -3.194268226623535
    3. 'the' → logprob: -4.444268226623535
    4. '```' → logprob: -5.444268226623535
    5. ' each' → logprob: -5.694268226623535
    6. '   ' → logprob: -6.444268226623535
    7. ' their' → logprob: -6.444268226623535
    8. ' available' → logprob: -6.819268226623535
    9. ' a' → logprob: -8.069268226623535
    10. ' more' → logprob: -8.569268226623535

Token 22: ' list' (ID: 1562)
  Prédit: ' keys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' keys' → logprob: -0.40576377511024475
    2. ' cost' → logprob: -2.030763864517212
    3. ' connections' → logprob: -2.655763864517212
    4. ' edges' → logprob: -3.155763864517212
    5. ' costs' → logprob: -4.155763626098633
    6. ' next' → logprob: -4.280763626098633
    7. ' number' → logprob: -4.405763626098633
    8. ' adjacency' → logprob: -5.030763626098633
    9. ' weights' → logprob: -5.530763626098633
    10. 'cost' → logprob: -5.905763626098633

Token 23: ' of' (ID: 328)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5808400511741638
    2. ' of' → logprob: -0.9558400511741638
    3. '   ' → logprob: -4.455840110778809
    4. '_' → logprob: -4.455840110778809
    5. ' ' → logprob: -4.830840110778809
    6. '```' → logprob: -5.205840110778809
    7. '`' → logprob: -5.330840110778809
    8. '    ' → logprob: -5.830840110778809
    9. 's' → logprob: -5.830840110778809
    10. ')' → logprob: -6.205840110778809

Token 24: ' keys' (ID: 12994)
  Prédit: ' keys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' keys' → logprob: -0.01400458998978138
    2. ' boxes' → logprob: -4.639004707336426
    3. ' edges' → logprob: -6.514004707336426
    4. ' costs' → logprob: -7.014004707336426
    5. ' weights' → logprob: -8.264004707336426
    6. ' box' → logprob: -8.264004707336426
    7. ' spaces' → logprob: -8.389004707336426
    8. ' available' → logprob: -8.639004707336426
    9. 'keys' → logprob: -8.639004707336426
    10. ' key' → logprob: -8.764004707336426

Token 25: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.202821135520935
    2. '   ' → logprob: -1.452821135520935
    3. '_' → logprob: -2.2028212547302246
    4. ' ,' → logprob: -2.7028212547302246
    5. ' and' → logprob: -2.7028212547302246
    6. '.' → logprob: -3.0778212547302246
    7. ' available' → logprob: -3.5778212547302246
    8. '    ' → logprob: -4.077821254730225
    9. ' to' → logprob: -4.202821254730225
    10. ' ' → logprob: -4.202821254730225

Token 26: 'each' (ID: 21309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2699199318885803
    2. ' )' → logprob: -1.7699198722839355
    3. ' available' → logprob: -3.7699198722839355
    4. '),' → logprob: -4.7699198722839355
    5. 'available' → logprob: -5.0199198722839355
    6. ' ),' → logprob: -5.5199198722839355
    7. ' and' → logprob: -5.5199198722839355
    8. ' keys' → logprob: -5.7699198722839355
    9. ' integers' → logprob: -5.7699198722839355
    10. ' that' → logprob: -6.1449198722839355

Token 27: ' with' (ID: 483)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.6108872890472412
    2. ')' → logprob: -1.4858872890472412
    3. ' token' → logprob: -1.7358872890472412
    4. ' available' → logprob: -3.860887289047241
    5. 'token' → logprob: -4.86088752746582
    6. ' ' → logprob: -5.61088752746582
    7. ' key' → logprob: -6.11088752746582
    8. ' line' → logprob: -6.11088752746582
    9. '_token' → logprob: -6.36088752746582
    10. ' has' → logprob: -6.48588752746582

Token 28: ' coverage' (ID: 13422)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.41303277015686035
    2. ' their' → logprob: -2.2880327701568604
    3. ' the' → logprob: -2.5380327701568604
    4. 'a' → logprob: -3.1630327701568604
    5. ' an' → logprob: -3.9130327701568604
    6. ')' → logprob: -4.038032531738281
    7. ' keys' → logprob: -4.163032531738281
    8. ' available' → logprob: -4.288032531738281
    9. 'the' → logprob: -4.538032531738281
    10. ' )' → logprob: -4.788032531738281

Token 29: ' and' (ID: 326)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.056404292583465576
    2. ' and' → logprob: -4.056404113769531
    3. '   ' → logprob: -4.306404113769531
    4. ' )' → logprob: -4.931404113769531
    5. '),' → logprob: -5.056404113769531
    6. ').' → logprob: -6.056404113769531
    7. 's' → logprob: -6.056404113769531
    8. ' coverage' → logprob: -7.181404113769531
    9. 'and' → logprob: -7.306404113769531
    10. '_' → logprob: -7.556404113769531

Token 30: ' cost' (ID: 3097)
  Prédit: ' cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cost' → logprob: -0.0761425718665123
    2. 'cost' → logprob: -3.2011425495147705
    3. ' price' → logprob: -5.07614278793335
    4. ')' → logprob: -5.20114278793335
    5. ' weight' → logprob: -6.32614278793335
    6. '   ' → logprob: -6.32614278793335
    7. ' strength' → logprob: -6.57614278793335
    8. ' coverage' → logprob: -6.70114278793335
    9. ' frequency' → logprob: -6.70114278793335
    10. ' unlocking' → logprob: -6.82614278793335

Token 31: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18590672314167023
    2. '),' → logprob: -1.8109067678451538
    3. '):' → logprob: -5.685906887054443
    4. ').' → logprob: -6.685906887054443
    5. '   ' → logprob: -7.560906887054443
    6. '):
' → logprob: -7.935906887054443
    7. 's' → logprob: -8.685906410217285
    8. ',' → logprob: -9.060906410217285
    9. '```' → logprob: -9.060906410217285
    10. ')
' → logprob: -9.560906410217285

Token 32: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02053605392575264
    2. '    
' → logprob: -5.270535945892334
    3. ' 
' → logprob: -5.395535945892334
    4. '\n' → logprob: -5.520535945892334
    5. '    ' → logprob: -6.395535945892334
    6. ')' → logprob: -6.645535945892334
    7. '  
' → logprob: -7.145535945892334
    8. '```' → logprob: -7.395535945892334
    9. '\' → logprob: -7.520535945892334
    10. ' ' → logprob: -7.895535945892334

Token 33: ' Computes' (ID: 165922)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029041610658168793
    2. '\n' → logprob: -4.904041767120361
    3. ' 
' → logprob: -5.029041767120361
    4. '    
' → logprob: -5.279041767120361
    5. '    ' → logprob: -6.029041767120361
    6. '  
' → logprob: -6.279041767120361
    7. '
' → logprob: -6.779041767120361
    8. '"""' → logprob: -7.029041767120361
    9. '```' → logprob: -7.529041767120361
    10. '   
' → logprob: -7.904041767120361

Token 34: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.2952669560909271
    2. '<|end|>' → logprob: -1.4202669858932495
    3. '<|end|>' → logprob: -4.795267105102539
    4. 'the' → logprob: -5.545267105102539
    5. ' ' → logprob: -7.670267105102539
    6. ' and' → logprob: -7.920267105102539
    7. '_' → logprob: -8.295267105102539
    8. '_the' → logprob: -9.045267105102539
    9. '    ' → logprob: -9.170267105102539
    10. ' an' → logprob: -9.170267105102539

Token 35: ' minimum' (ID: 11085)
  Prédit: ' minimum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' minimum' → logprob: -0.10471782088279724
    2. ' minimal' → logprob: -2.47971773147583
    3. 'minimum' → logprob: -4.22971773147583
    4. ' min' → logprob: -7.85471773147583
    5. ' cheapest' → logprob: -8.729718208312988
    6. 'minimal' → logprob: -8.729718208312988
    7. ' best' → logprob: -9.354718208312988
    8. 'min' → logprob: -9.354718208312988
    9. ' least' → logprob: -10.229718208312988
    10. ' maximum' → logprob: -10.229718208312988

Token 36: ' cost' (ID: 3097)
  Prédit: ' cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cost' → logprob: -0.03345572575926781
    2. '_cost' → logprob: -3.7834556102752686
    3. 'cost' → logprob: -5.908455848693848
    4. ' _' → logprob: -5.908455848693848
    5. '_' → logprob: -6.533455848693848
    6. ' total' → logprob: -7.033455848693848
    7. ' possible' → logprob: -7.283455848693848
    8. ' to' → logprob: -7.658455848693848
    9. '-cost' → logprob: -8.033455848693848
    10. ' additional' → logprob: -8.783455848693848

Token 37: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.19546036422252655
    2. '   ' → logprob: -1.820460319519043
    3. ' ' → logprob: -4.820460319519043
    4. '_' → logprob: -6.695460319519043
    5. ' of' → logprob: -6.945460319519043
    6. ',' → logprob: -6.945460319519043
    7. ')' → logprob: -7.320460319519043
    8. '    ' → logprob: -7.445460319519043
    9. ' for' → logprob: -7.570460319519043
    10. ' that' → logprob: -7.820460319519043

Token 38: ' open' (ID: 2494)
  Prédit: ' cover'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cover' → logprob: -0.0631677508354187
    2. ' unlock' → logprob: -2.9381678104400635
    3. ' ' → logprob: -5.188167572021484
    4. ' buy' → logprob: -7.313167572021484
    5. '_cover' → logprob: -8.313167572021484
    6. ' purchase' → logprob: -8.688167572021484
    7. '_unlock' → logprob: -8.688167572021484
    8. 'cover' → logprob: -8.688167572021484
    9. ' open' → logprob: -8.813167572021484
    10. ' select' → logprob: -8.938167572021484

Token 39: ' all' (ID: 722)
  Prédit: ' all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.002614421071484685
    2. 'all' → logprob: -6.627614498138428
    3. '_all' → logprob: -7.127614498138428
    4. ' the' → logprob: -8.12761402130127
    5. ' each' → logprob: -9.75261402130127
    6. '_' → logprob: -9.75261402130127
    7. ' a' → logprob: -10.25261402130127
    8. ' an' → logprob: -11.50261402130127
    9. ' any' → logprob: -11.87761402130127
    10. ' _' → logprob: -12.25261402130127

Token 40: ' boxes' (ID: 21967)
  Prédit: ' boxes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' boxes' → logprob: -0.159937784075737
    2. ' the' → logprob: -2.034937858581543
    3. '_boxes' → logprob: -4.284937858581543
    4. ' keys' → logprob: -6.784937858581543
    5. '_' → logprob: -7.159937858581543
    6. 'boxes' → logprob: -7.659937858581543
    7. 'the' → logprob: -8.034937858581543
    8. '<|end|>' → logprob: -8.659937858581543
    9. ' possible' → logprob: -9.409937858581543
    10. ' unlocked' → logprob: -10.034937858581543

Token 41: ' using' (ID: 2360)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.40519610047340393
    2. '   ' → logprob: -1.2801960706710815
    3. '):' → logprob: -3.655196189880371
    4. ',' → logprob: -4.030196189880371
    5. ')' → logprob: -6.030196189880371
    6. '_' → logprob: -6.405196189880371
    7. ' :' → logprob: -6.655196189880371
    8. 'def' → logprob: -6.905196189880371
    9. '.' → logprob: -7.030196189880371
    10. '```' → logprob: -7.280196189880371

Token 42: ' dynamic' (ID: 14012)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.0434932708740234
    2. ' keys' → logprob: -1.0434932708740234
    3. ' a' → logprob: -2.0434932708740234
    4. ' given' → logprob: -2.9184932708740234
    5. ' selected' → logprob: -3.6684932708740234
    6. ' available' → logprob: -3.7934932708740234
    7. ' all' → logprob: -3.9184932708740234
    8. ' some' → logprob: -4.043493270874023
    9. ' any' → logprob: -4.668493270874023
    10. ' sets' → logprob: -5.043493270874023

Token 43: ' programming' (ID: 23238)
  Prédit: ' programming'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' programming' → logprob: -0.009671925567090511
    2. '_' → logprob: -4.759671688079834
    3. '_program' → logprob: -8.259672164916992
    4. ' Programming' → logprob: -8.384672164916992
    5. 'Programming' → logprob: -8.509672164916992
    6. ' ' → logprob: -8.509672164916992
    7. ' _' → logprob: -9.384672164916992
    8. 'program' → logprob: -10.634672164916992
    9. '   ' → logprob: -10.884672164916992
    10. '  ' → logprob: -11.634672164916992

Token 44: ' over' (ID: 1072)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21758560836315155
    2. ':' → logprob: -1.842585563659668
    3. '
' → logprob: -4.592585563659668
    4. 'n' → logprob: -5.092585563659668
    5. '(n' → logprob: -5.467585563659668
    6. '):' → logprob: -5.717585563659668
    7. '\n' → logprob: -5.967585563659668
    8. ')' → logprob: -6.342585563659668
    9. '```' → logprob: -6.342585563659668
    10. '_' → logprob: -6.467585563659668

Token 45: ' bit' (ID: 3546)
  Prédit: ' subsets'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' subsets' → logprob: -0.31395334005355835
    2. ' keys' → logprob: -2.188953399658203
    3. ' bit' → logprob: -2.813953399658203
    4. ' the' → logprob: -3.063953399658203
    5. ' all' → logprob: -3.438953399658203
    6. ' sets' → logprob: -5.313953399658203
    7. ' key' → logprob: -5.688953399658203
    8. ' masks' → logprob: -5.813953399658203
    9. ' a' → logprob: -6.563953399658203
    10. ' coverage' → logprob: -6.938953399658203

Token 46: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.13857722282409668
    2. 'mask' → logprob: -2.2635772228240967
    3. ' masks' → logprob: -3.8885772228240967
    4. '   ' → logprob: -6.263577461242676
    5. 's' → logprob: -6.888577461242676
    6. '_mask' → logprob: -7.638577461242676
    7. '-' → logprob: -8.013577461242676
    8. ' mask' → logprob: -8.138577461242676
    9. '_' → logprob: -8.263577461242676
    10. '_masks' → logprob: -8.388577461242676

Token 47: 'asks' (ID: 9523)
  Prédit: 'aps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aps' → logprob: -0.6596873998641968
    2. 'a' → logprob: -1.0346873998641968
    3. 'ap' → logprob: -2.1596875190734863
    4. 'asks' → logprob: -4.659687519073486
    5. 'apping' → logprob: -6.909687519073486
    6. 'ask' → logprob: -6.909687519073486
    7. '```' → logprob: -9.284687042236328
    8. 'as' → logprob: -9.409687042236328
    9. '   ' → logprob: -9.784687042236328
    10. '1' → logprob: -9.784687042236328

Token 48: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7559167742729187
    2. ':' → logprob: -0.8809167742729187
    3. '
' → logprob: -3.1309168338775635
    4. '```' → logprob: -3.3809168338775635
    5. '):' → logprob: -4.880916595458984
    6. '\' → logprob: -5.130916595458984
    7. '    
' → logprob: -5.130916595458984
    8. '\n' → logprob: -5.505916595458984
    9. '(n' → logprob: -6.130916595458984
    10. ':
' → logprob: -6.380916595458984

Token 49: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010753614827990532
    2. '"""' → logprob: -5.135753631591797
    3. '```' → logprob: -5.760753631591797
    4. '"' → logprob: -7.760753631591797
    5. ' """' → logprob: -8.135753631591797
    6. '    ' → logprob: -8.135753631591797
    7. ' ' → logprob: -9.135753631591797
    8. ')' → logprob: -9.135753631591797
    9. '`' → logprob: -9.260753631591797
    10. 'n' → logprob: -9.510753631591797

Token 50: ' Prints' (ID: 92195)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09033054858446121
    2. '
' → logprob: -3.0903306007385254
    3. '\n' → logprob: -4.340330600738525
    4. 'n' → logprob: -4.465330600738525
    5. '    
' → logprob: -4.965330600738525
    6. '```' → logprob: -5.715330600738525
    7. ' 
' → logprob: -5.840330600738525
    8. '\' → logprob: -7.465330600738525
    9. '    ' → logprob: -7.465330600738525
    10. '   
' → logprob: -7.590330600738525

Token 51: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.668724536895752
    2. '(' → logprob: -0.793724536895752
    3. 'the' → logprob: -3.793724536895752
    4. '("' → logprob: -4.793724536895752
    5. '('' → logprob: -6.543724536895752
    6. ' ' → logprob: -6.668724536895752
    7. ' -' → logprob: -7.793724536895752
    8. '()' → logprob: -7.918724536895752
    9. '    ' → logprob: -8.418724060058594
    10. '"' → logprob: -8.668724060058594

Token 52: ' minimal' (ID: 19957)
  Prédit: ' minimum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' minimum' → logprob: -0.1523125171661377
    2. ' minimal' → logprob: -2.4023125171661377
    3. 'minimum' → logprob: -4.152312278747559
    4. ' total' → logprob: -4.402312278747559
    5. ' ' → logprob: -4.902312278747559
    6. ' result' → logprob: -5.152312278747559
    7. ' best' → logprob: -5.652312278747559
    8. ' remaining' → logprob: -6.902312278747559
    9. ' least' → logprob: -7.027312278747559
    10. ' maximum' → logprob: -7.402312278747559

Token 53: ' total' (ID: 3609)
  Prédit: ' cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cost' → logprob: -0.014673802070319653
    2. ' ' → logprob: -4.639673709869385
    3. 'cost' → logprob: -5.889673709869385
    4. ' possible' → logprob: -7.014673709869385
    5. '_cost' → logprob: -8.514674186706543
    6. ' total' → logprob: -8.514674186706543
    7. ' space' → logprob: -8.764674186706543
    8. ' result' → logprob: -9.014674186706543
    9. ' complete' → logprob: -9.764674186706543
    10. '   ' → logprob: -9.764674186706543

Token 54: ' cost' (ID: 3097)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5436238050460815
    2. ' cost' → logprob: -0.9186238050460815
    3. ' _' → logprob: -5.043623924255371
    4. '_' → logprob: -5.293623924255371
    5. '_cost' → logprob: -5.293623924255371
    6. 'cost' → logprob: -6.168623924255371
    7. ' space' → logprob: -7.793623924255371
    8. ' ▁' → logprob: -8.918623924255371
    9. '  ' → logprob: -9.043623924255371
    10. ' )' → logprob: -9.168623924255371

Token 55: ' or' (ID: 503)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21534866094589233
    2. ':' → logprob: -2.340348720550537
    3. '.' → logprob: -3.465348720550537
    4. '):' → logprob: -3.590348720550537
    5. '```' → logprob: -4.590348720550537
    6. ')' → logprob: -4.715348720550537
    7. ',' → logprob: -5.215348720550537
    8. '"""' → logprob: -5.715348720550537
    9. 'def' → logprob: -5.965348720550537
    10. ' ' → logprob: -6.465348720550537

Token 56: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.06967528909444809
    2. ' ' → logprob: -3.0696752071380615
    3. '-' → logprob: -4.444675445556641
    4. ' "' → logprob: -5.694675445556641
    5. '   ' → logprob: -6.569675445556641
    6. ' the' → logprob: -7.319675445556641
    7. ' a' → logprob: -7.319675445556641
    8. '"' → logprob: -7.444675445556641
    9. ' None' → logprob: -7.444675445556641
    10. ' '' → logprob: -7.569675445556641

Token 57: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.60414821645827e-06
    2. ' ' → logprob: -12.500004768371582
    3. '   ' → logprob: -14.625004768371582
    4. '```' → logprob: -16.500003814697266
    5. ' -' → logprob: -16.562503814697266
    6. '`' → logprob: -16.937503814697266
    7. '-' → logprob: -17.250003814697266
    8. '2' → logprob: -17.312503814697266
    9. 'print' → logprob: -17.500003814697266
    10. '  ' → logprob: -18.125003814697266

Token 58: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1028554439544678
    2. '):' → logprob: -1.1028554439544678
    3. '```' → logprob: -2.1028554439544678
    4. '<|end|>' → logprob: -2.3528554439544678
    5. ')' → logprob: -2.9778554439544678
    6. ':' → logprob: -3.1028554439544678
    7. '"""' → logprob: -5.977855682373047
    8. 'def' → logprob: -6.102855682373047
    9. ' if' → logprob: -6.102855682373047
    10. '
' → logprob: -6.102855682373047

Token 59: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.44830840826034546
    2. ' impossible' → logprob: -1.0733084678649902
    3. ' there' → logprob: -5.07330846786499
    4. ' no' → logprob: -5.19830846786499
    5. ' the' → logprob: -6.69830846786499
    6. ' it' → logprob: -6.82330846786499
    7. ' all' → logprob: -6.82330846786499
    8. ' a' → logprob: -6.82330846786499
    9. 'not' → logprob: -7.07330846786499
    10. ' unable' → logprob: -7.19830846786499

Token 60: ' all' (ID: 722)
  Prédit: ' possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' possible' → logprob: -0.0013378625735640526
    2. 'possible' → logprob: -6.876338005065918
    3. '_possible' → logprob: -8.751338005065918
    4. ' feasible' → logprob: -9.751338005065918
    5. ' found' → logprob: -10.126338005065918
    6. ' achievable' → logprob: -10.876338005065918
    7. ' ' → logprob: -12.001338005065918
    8. ' available' → logprob: -12.251338005065918
    9. ' poss' → logprob: -12.376338005065918
    10. ' posible' → logprob: -12.501338005065918

Token 61: ' boxes' (ID: 21967)
  Prédit: ' boxes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' boxes' → logprob: -0.021355684846639633
    2. ' can' → logprob: -4.021355628967285
    3. ' possible' → logprob: -6.521355628967285
    4. 'boxes' → logprob: -7.396355628967285
    5. ' reachable' → logprob: -8.271355628967285
    6. '_boxes' → logprob: -9.021355628967285
    7. ' coverage' → logprob: -9.021355628967285
    8. ' keys' → logprob: -9.146355628967285
    9. ' all' → logprob: -9.146355628967285
    10. ' are' → logprob: -10.021355628967285

Token 62: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.005651932675391436
    2. 'can' → logprob: -5.630651950836182
    3. '   ' → logprob: -6.880651950836182
    4. '_can' → logprob: -7.630651950836182
    5. ' are' → logprob: -8.130651473999023
    6. ' to' → logprob: -9.630651473999023
    7. '	can' → logprob: -10.130651473999023
    8. '_' → logprob: -10.505651473999023
    9. '_open' → logprob: -11.005651473999023
    10. ' open' → logprob: -11.130651473999023

Token 63: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.0025019366294145584
    2. 'be' → logprob: -6.002501964569092
    3. '_be' → logprob: -11.252501487731934
    4. ' ' → logprob: -12.502501487731934
    5. '	be' → logprob: -12.877501487731934
    6. '    ' → logprob: -13.252501487731934
    7. '   ' → logprob: -13.627501487731934
    8. '```' → logprob: -14.065001487731934
    9. '  ' → logprob: -15.065001487731934
    10. '_' → logprob: -15.440001487731934

Token 64: ' opened' (ID: 13906)
  Prédit: ' opened'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' opened' → logprob: -0.37757283449172974
    2. 'opened' → logprob: -1.752572774887085
    3. ' unlocked' → logprob: -2.002572774887085
    4. 'un' → logprob: -5.752573013305664
    5. ' covered' → logprob: -6.502573013305664
    6. 'covered' → logprob: -7.502573013305664
    7. '   ' → logprob: -8.002573013305664
    8. ' ' → logprob: -8.502573013305664
    9. '```' → logprob: -9.815073013305664
    10. ' reached' → logprob: -9.940073013305664

Token 65: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6954278945922852
    2. '):' → logprob: -1.4454278945922852
    3. ':' → logprob: -1.6954278945922852
    4. '
' → logprob: -3.195427894592285
    5. '```' → logprob: -3.945427894592285
    6. ')' → logprob: -4.820427894592285
    7. '\n' → logprob: -5.570427894592285
    8. '):
' → logprob: -6.445427894592285
    9. '    
' → logprob: -6.445427894592285
    10. '\' → logprob: -6.570427894592285

Token 66: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08558694273233414
    2. '"""' → logprob: -3.0855870246887207
    3. '```' → logprob: -3.4605870246887207
    4. '"""
' → logprob: -6.085587024688721
    5. '
' → logprob: -6.960587024688721
    6. '"' → logprob: -7.710587024688721
    7. '""' → logprob: -8.210586547851562
    8. '\n' → logprob: -8.210586547851562
    9. '    
' → logprob: -8.710586547851562
    10. '    ' → logprob: -8.960586547851562

Token 67: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2759585380554199
    2. '
' → logprob: -1.77595853805542
    3. '```' → logprob: -2.90095853805542
    4. '\n' → logprob: -4.65095853805542
    5. '    
' → logprob: -5.40095853805542
    6. 'n' → logprob: -7.02595853805542
    7. '    ' → logprob: -7.65095853805542
    8. ' 
' → logprob: -7.90095853805542
    9. '\' → logprob: -8.025959014892578
    10. '"""' → logprob: -9.025959014892578

Token 68: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.25776204466819763
    2. '   ' → logprob: -2.1327619552612305
    3. '\n' → logprob: -3.5077619552612305
    4. 'n' → logprob: -3.6327619552612305
    5. '    
' → logprob: -3.6327619552612305
    6. ' 
' → logprob: -4.5077619552612305
    7. '    ' → logprob: -5.1327619552612305
    8. '```' → logprob: -5.6327619552612305
    9. '\' → logprob: -5.8827619552612305
    10. '     
' → logprob: -7.0077619552612305

Token 69: ' #' (ID: 1069)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2312166541814804
    2. '   ' → logprob: -2.2312166690826416
    3. ' n' → logprob: -2.3562166690826416
    4. 'import' → logprob: -6.8562164306640625
    5. ' import' → logprob: -7.2312164306640625
    6. '#' (adapté à ' #') → logprob: -7.9812164306640625
    7. ' #' → logprob: -7.9812164306640625
    8. ' boxes' → logprob: -7.9812164306640625
    9. ' keys' → logprob: -8.481216430664062
    10. '\n' → logprob: -8.731216430664062

Token 70: ' Read' (ID: 5405)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.16355998814105988
    2. 'n' → logprob: -1.9135600328445435
    3. '   ' → logprob: -6.663559913635254
    4. ' input' → logprob: -6.788559913635254
    5. ' #' → logprob: -8.413559913635254
    6. 'input' → logprob: -8.413559913635254
    7. ' num' → logprob: -8.413559913635254
    8. ' import' → logprob: -9.413559913635254
    9. 'num' → logprob: -10.163559913635254
    10. ' pass' → logprob: -10.663559913635254

Token 71: ' the' (ID: 290)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.231333389878273
    2. ' the' → logprob: -2.9813334941864014
    3. 'n' → logprob: -3.3563334941864014
    4. '    ' → logprob: -3.3563334941864014
    5. ' number' → logprob: -3.6063334941864014
    6. '   ' → logprob: -3.9813334941864014
    7. ' input' → logprob: -4.606333255767822
    8. ' ' → logprob: -4.856333255767822
    9. '```' → logprob: -5.731333255767822
    10. '<|end|>' → logprob: -5.731333255767822

Token 72: ' number' (ID: 2086)
  Prédit: ' number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.04384828731417656
    2. ' n' → logprob: -3.4188482761383057
    3. 'n' → logprob: -5.293848514556885
    4. 'number' → logprob: -5.668848514556885
    5. ' ' → logprob: -6.918848514556885
    6. ' num' → logprob: -7.668848514556885
    7. 'num' → logprob: -9.543848037719727
    8. ' input' → logprob: -9.668848037719727
    9. ' total' → logprob: -10.418848037719727
    10. ' first' → logprob: -11.043848037719727

Token 73: ' of' (ID: 328)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.10360108315944672
    2. ' ' → logprob: -3.3536009788513184
    3. ' of' → logprob: -3.7286009788513184
    4. 's' → logprob: -4.103600978851318
    5. '_of' → logprob: -4.353600978851318
    6. ')' → logprob: -5.728600978851318
    7. '=' → logprob: -6.478600978851318
    8. '   ' → logprob: -6.978600978851318
    9. '_tokens' → logprob: -6.978600978851318
    10. '[' → logprob: -7.478600978851318

Token 74: ' boxes' (ID: 21967)
  Prédit: ' boxes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' boxes' → logprob: -0.05098087713122368
    2. ' n' → logprob: -3.050980806350708
    3. ' ' → logprob: -6.925981044769287
    4. ' keys' → logprob: -7.425981044769287
    5. 'n' → logprob: -7.675981044769287
    6. ' spaces' → logprob: -8.550980567932129
    7. '_boxes' → logprob: -9.800980567932129
    8. '   ' → logprob: -10.175980567932129
    9. ' box' → logprob: -10.925980567932129
    10. ' num' → logprob: -11.300980567932129

Token 75: ' N' (ID: 478)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.16492527723312378
    2. '   ' → logprob: -1.9149253368377686
    3. ' n' → logprob: -5.6649250984191895
    4. ' and' → logprob: -8.039925575256348
    5. '    ' → logprob: -8.539925575256348
    6. '    
' → logprob: -8.789925575256348
    7. '```' → logprob: -8.789925575256348
    8. 's' → logprob: -9.289925575256348
    9. '(n' → logprob: -9.914925575256348
    10. ',' → logprob: -10.039925575256348

Token 76: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.109963059425354
    2. ' and' → logprob: -3.1099629402160645
    3. 'n' → logprob: -3.4849629402160645
    4. '```' → logprob: -4.2349629402160645
    5. '    
' → logprob: -5.2349629402160645
    6. '<|end|>' → logprob: -5.3599629402160645
    7. ',' → logprob: -6.9849629402160645
    8. '<|end|>' → logprob: -7.1099629402160645
    9. '\n' → logprob: -7.8599629402160645
    10. ' N' → logprob: -7.8599629402160645

Token 77: ' and' (ID: 326)
  Prédit: ' keys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' keys' → logprob: -0.020252572372555733
    2. ' key' → logprob: -5.020252704620361
    3. ' M' → logprob: -5.645252704620361
    4. ' n' → logprob: -6.145252704620361
    5. ' K' → logprob: -6.145252704620361
    6. 'keys' → logprob: -6.145252704620361
    7. ' and' → logprob: -6.520252704620361
    8. 'K' → logprob: -8.270252227783203
    9. ' ' → logprob: -8.645252227783203
    10. ' k' → logprob: -8.645252227783203

Token 78: ' the' (ID: 290)
  Prédit: ' keys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' keys' → logprob: -0.016735052689909935
    2. 'keys' → logprob: -4.516735076904297
    3. ' M' → logprob: -6.141735076904297
    4. ' the' → logprob: -6.516735076904297
    5. ' number' → logprob: -6.891735076904297
    6. ' K' → logprob: -7.891735076904297
    7. 'M' → logprob: -8.266735076904297
    8. ' key' → logprob: -9.141735076904297
    9. 'K' → logprob: -9.266735076904297
    10. 'the' → logprob: -10.016735076904297

Token 79: ' number' (ID: 2086)
  Prédit: ' number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.32378432154655457
    2. ' keys' → logprob: -1.573784351348877
    3. 'keys' → logprob: -3.823784351348877
    4. ' M' → logprob: -3.948784351348877
    5. 'number' → logprob: -3.948784351348877
    6. ' K' → logprob: -5.448784351348877
    7. 'M' → logprob: -6.198784351348877
    8. 'K' → logprob: -7.073784351348877
    9. ' and' → logprob: -7.323784351348877
    10. ' key' → logprob: -8.823783874511719

Token 80: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -1.1189861297607422
    2. '_of' → logprob: -1.1189861297607422
    3. '_' → logprob: -2.493986129760742
    4. '=' → logprob: -2.743986129760742
    5. ')' → logprob: -2.868986129760742
    6. 's' → logprob: -2.993986129760742
    7. '_token' → logprob: -4.243986129760742
    8. ' ' → logprob: -4.618986129760742
    9. '`' → logprob: -4.743986129760742
    10. 'of' → logprob: -4.868986129760742

Token 81: ' keys' (ID: 12994)
  Prédit: ' keys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' keys' → logprob: -0.6636497974395752
    2. ' ' → logprob: -0.7886497974395752
    3. ' boxes' → logprob: -3.538649797439575
    4. ' spaces' → logprob: -6.913649559020996
    5. ' key' → logprob: -8.163649559020996
    6. ' k' → logprob: -9.288649559020996
    7. ' space' → logprob: -9.913649559020996
    8. ' b' → logprob: -10.288649559020996
    9. ' box' → logprob: -10.663649559020996
    10. 'keys' → logprob: -10.663649559020996

Token 82: ' M' (ID: 391)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19994555413722992
    2. 'N' → logprob: -2.6999454498291016
    3. ' =' → logprob: -3.1999454498291016
    4. 'n' → logprob: -3.5749454498291016
    5. ' N' → logprob: -3.8249454498291016
    6. '=' → logprob: -5.074945449829102
    7. '```' → logprob: -5.074945449829102
    8. '    
' → logprob: -5.449945449829102
    9. '(N' → logprob: -6.574945449829102
    10. '
' → logprob: -6.574945449829102

Token 83: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5641106963157654
    2. '\n' → logprob: -1.4391107559204102
    3. '    
' → logprob: -2.18911075592041
    4. '
' → logprob: -3.18911075592041
    5. 'n' → logprob: -3.43911075592041
    6. '```' → logprob: -5.93911075592041
    7. ' 
' → logprob: -6.68911075592041
    8. '  
' → logprob: -6.93911075592041
    9. '   
' → logprob: -7.06411075592041
    10. 'newline' → logprob: -7.31411075592041

Token 84: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7756539583206177
    2. '   ' → logprob: -0.7756539583206177
    3. '\n' → logprob: -3.400653839111328
    4. '    
' → logprob: -3.650653839111328
    5. 'n' → logprob: -4.025653839111328
    6. '```' → logprob: -6.900653839111328
    7. '  
' → logprob: -8.275653839111328
    8. 'N' → logprob: -8.900653839111328
    9. ' 
' → logprob: -8.900653839111328
    10. 'newline' → logprob: -9.025653839111328

Token 85: ' N' (ID: 478)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.9033656120300293
    2. '\n' → logprob: -1.7783656120300293
    3. ' 
' → logprob: -1.9033656120300293
    4. '   ' → logprob: -2.5283656120300293
    5. '    
' → logprob: -2.6533656120300293
    6. 'N' (adapté à ' N') → logprob: -2.7783656120300293
    7. '
' → logprob: -3.1533656120300293
    8. ' N' → logprob: -4.153365612030029
    9. '```' → logprob: -6.403365612030029
    10. ' n' → logprob: -6.778365612030029

Token 86: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.327856630785391e-05
    2. ' ,' → logprob: -10.125082969665527
    3. ' =' → logprob: -10.500082969665527
    4. '=' → logprob: -11.625082969665527
    5. ',N' → logprob: -12.875082969665527
    6. ',num' → logprob: -14.500082969665527
    7. ',int' → logprob: -14.625082969665527
    8. ',n' → logprob: -14.625082969665527
    9. ',user' → logprob: -14.625082969665527
    10. ')' → logprob: -15.500082969665527

Token 87: ' M' (ID: 391)
  Prédit: ' M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.0376364104449749
    2. ' ' → logprob: -3.5376365184783936
    3. 'M' → logprob: -5.0376362800598145
    4. '<|end|>' → logprob: -7.2876362800598145
    5. '  ' → logprob: -8.162636756896973
    6. '    ' → logprob: -8.787636756896973
    7. ' =' → logprob: -9.287636756896973
    8. ' ' → logprob: -10.037636756896973
    9. '=' → logprob: -10.787636756896973
    10. ' )' → logprob: -10.912636756896973

Token 88: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011056192219257355
    2. '=' → logprob: -4.511056423187256
    3. '=input' → logprob: -12.136055946350098
    4. ',' → logprob: -13.136055946350098
    5. '=int' → logprob: -14.386055946350098
    6. ' =
' → logprob: -15.886055946350098
    7. ')' → logprob: -16.011056900024414
    8. '<|end|>' → logprob: -16.636056900024414
    9. 'input' → logprob: -18.261056900024414
    10. '.' → logprob: -18.386056900024414

Token 89: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.000556012790184468
    2. 'map' → logprob: -7.500555992126465
    3. ' list' → logprob: -13.000555992126465
    4. ' ' → logprob: -14.500555992126465
    5. '	map' → logprob: -15.625555992126465
    6. ' input' → logprob: -16.87555694580078
    7. ' mapa' → logprob: -17.00055694580078
    8. ' tuple' → logprob: -17.62555694580078
    9. ' [' → logprob: -18.00055694580078
    10. ' ' → logprob: -18.37555694580078

Token 90: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3115629255771637
    2. '(int' → logprob: -1.4365628957748413
    3. '(str' → logprob: -3.561563014984131
    4. '(input' → logprob: -6.936563014984131
    5. '(list' → logprob: -8.186562538146973
    6. '(eval' → logprob: -9.311562538146973
    7. '(lambda' → logprob: -9.686562538146973
    8. '(tuple' → logprob: -10.686562538146973
    9. '<|end|>' → logprob: -10.936562538146973
    10. '(range' → logprob: -11.311562538146973

Token 91: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.06760262697935104
    2. '(' → logprob: -3.1926026344299316
    3. ',' → logprob: -4.692602634429932
    4. ',input' → logprob: -4.692602634429932
    5. ')' → logprob: -5.817602634429932
    6. 'input' → logprob: -6.067602634429932
    7. '(int' → logprob: -7.942602634429932
    8. ' input' → logprob: -9.067602157592773
    9. '=input' → logprob: -9.567602157592773
    10. ' (' → logprob: -10.442602157592773

Token 92: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.20141363143920898
    2. ' input' → logprob: -1.701413631439209
    3. '(input' → logprob: -15.576414108276367
    4. '   ' → logprob: -16.826414108276367
    5. '=input' → logprob: -17.451414108276367
    6. '	input' → logprob: -17.701414108276367
    7. ',input' → logprob: -17.701414108276367
    8. ')' → logprob: -18.076414108276367
    9. ' ' → logprob: -18.701414108276367
    10. '<input' → logprob: -18.826414108276367

Token 93: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.18287532031536102
    2. '()' → logprob: -1.9328752756118774
    3. '())' → logprob: -3.807875394821167
    4. ')' → logprob: -9.932875633239746
    5. '()>' → logprob: -9.932875633239746
    6. '());' → logprob: -11.307875633239746
    7. '(' → logprob: -11.432875633239746
    8. '()`' → logprob: -11.432875633239746
    9. '()[' → logprob: -11.432875633239746
    10. '(),' → logprob: -11.682875633239746

Token 94: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00012654215970542282
    2. 'strip' → logprob: -9.000126838684082
    3. 'rstrip' → logprob: -13.125126838684082
    4. 'spl' → logprob: -14.000126838684082
    5. 'read' → logprob: -15.875126838684082
    6. '(split' → logprob: -16.125125885009766
    7. ' split' → logprob: -16.875125885009766
    8. ')' → logprob: -18.875125885009766
    9. '_split' → logprob: -19.500125885009766
    10. 's' → logprob: -19.750125885009766

Token 95: '())

' (ID: 27654)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01046781986951828
    2. '())' → logprob: -4.885468006134033
    3. '()' → logprob: -6.010468006134033
    4. '))' → logprob: -8.010467529296875
    5. '(' → logprob: -9.885467529296875
    6. ')`' → logprob: -12.135467529296875
    7. ')")' → logprob: -12.510467529296875
    8. ' )' → logprob: -12.760467529296875
    9. '('' → logprob: -12.885467529296875
    10. ')
' → logprob: -13.635467529296875

Token 96: '   ' (ID: 271)
  Prédit: ' keys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' keys' → logprob: -0.5531674027442932
    2. '   ' → logprob: -1.9281673431396484
    3. 'keys' → logprob: -1.9281673431396484
    4. ' 
' → logprob: -2.5531673431396484
    5. '    
' → logprob: -3.6781673431396484
    6. '	keys' → logprob: -5.428167343139648
    7. '```' → logprob: -5.428167343139648
    8. '
' → logprob: -5.553167343139648
    9. 'n' → logprob: -5.678167343139648
    10. 'dp' → logprob: -6.178167343139648

Token 97: ' #' (ID: 1069)
  Prédit: 'keys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'keys' → logprob: -0.06358028948307037
    2. 'dp' → logprob: -3.313580274581909
    3. ' keys' → logprob: -4.063580513000488
    4. 'cost' → logprob: -5.938580513000488
    5. 'key' → logprob: -6.688580513000488
    6. 'boxes' → logprob: -6.813580513000488
    7. 'INF' → logprob: -7.313580513000488
    8. 'all' → logprob: -7.688580513000488
    9. ' dp' → logprob: -7.813580513000488
    10. '#' (adapté à ' #') → logprob: -8.313580513000488

Token 98: ' List' (ID: 2655)
  Prédit: ' keys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' keys' → logprob: -0.6975547075271606
    2. 'keys' → logprob: -0.9475547075271606
    3. '#' → logprob: -3.197554588317871
    4. 'dp' → logprob: -3.322554588317871
    5. ' dp' → logprob: -5.322554588317871
    6. ' coverage' → logprob: -5.572554588317871
    7. 'from' → logprob: -5.697554588317871
    8. 'boxes' → logprob: -5.822554588317871
    9. 'cost' → logprob: -5.947554588317871
    10. 'Initialize' → logprob: -5.947554588317871

Token 99: ' to' (ID: 316)
  Prédit: '_keys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_keys' → logprob: -0.7694053053855896
    2. '_of' → logprob: -0.8944053053855896
    3. '_' → logprob: -2.8944053649902344
    4. ' of' → logprob: -3.3944053649902344
    5. 's' → logprob: -3.8944053649902344
    6. ' =' → logprob: -5.394405364990234
    7. 'of' → logprob: -5.519405364990234
    8. '()' → logprob: -5.644405364990234
    9. '(' → logprob: -7.144405364990234
    10. '_to' → logprob: -7.144405364990234

Token 100: ' hold' (ID: 5060)
  Prédit: ' store'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' store' → logprob: -0.5813409686088562
    2. 'store' → logprob: -1.206341028213501
    3. '[]' → logprob: -2.331341028213501
    4. ' keys' → logprob: -4.081340789794922
    5. 'keys' → logprob: -4.206340789794922
    6. ' hold' → logprob: -6.331340789794922
    7. '_keys' → logprob: -6.456340789794922
    8. 'collect' → logprob: -6.456340789794922
    9. 'cover' → logprob: -6.706340789794922
    10. 'stores' → logprob: -6.956340789794922

Token 101: ' each' (ID: 2454)
  Prédit: ' keys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' keys' → logprob: -0.05568777397274971
    2. 'keys' → logprob: -3.055687665939331
    3. ' coverage' → logprob: -5.80568790435791
    4. ' key' → logprob: -6.55568790435791
    5. ' the' → logprob: -6.68068790435791
    6. 'coverage' → logprob: -7.80568790435791
    7. 'key' → logprob: -8.05568790435791
    8. 'the' → logprob: -8.93068790435791
    9. '[]' → logprob: -9.30568790435791
    10. 'cost' → logprob: -9.55568790435791

Token 102: ' key' (ID: 2140)
  Prédit: ' key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' key' → logprob: -0.3859012722969055
    2. ' keys' → logprob: -2.0109012126922607
    3. '_key' → logprob: -2.5109012126922607
    4. 'key' → logprob: -3.0109012126922607
    5. '_keys' → logprob: -3.7609012126922607
    6. 'keys' → logprob: -4.38590145111084
    7. '()' → logprob: -5.01090145111084
    8. '(' → logprob: -5.38590145111084
    9. '(key' → logprob: -5.88590145111084
    10. ' coverage' → logprob: -6.01090145111084

Token 103: ' as' (ID: 472)
  Prédit: '_keys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_keys' → logprob: -0.09012392163276672
    2. '_' → logprob: -2.7151238918304443
    3. ' =' → logprob: -4.465124130249023
    4. '_cover' → logprob: -5.840124130249023
    5. 'keys' → logprob: -6.965124130249023
    6. 'coverage' → logprob: -7.090124130249023
    7. 's' → logprob: -7.215124130249023
    8. '_key' → logprob: -7.590124130249023
    9. '_masks' → logprob: -7.715124130249023
    10. '_bits' → logprob: -7.965124130249023

Token 104: ' a' (ID: 261)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.07807720452547073
    2. ' tuples' → logprob: -2.8280773162841797
    3. ' a' → logprob: -4.57807731628418
    4. '(' → logprob: -5.70307731628418
    5. '[]' → logprob: -7.57807731628418
    6. '(N' → logprob: -8.20307731628418
    7. ' bit' → logprob: -8.45307731628418
    8. ' coverage' → logprob: -8.57807731628418
    9. ' []' → logprob: -8.57807731628418
    10. '()' → logprob: -9.07807731628418

Token 105: ' tuple' (ID: 31311)
  Prédit: ' tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tuple' → logprob: -0.10759513080120087
    2. 'tuple' → logprob: -2.482595205307007
    3. ' (' → logprob: -4.482594966888428
    4. '(tuple' → logprob: -5.732594966888428
    5. '(' → logprob: -6.482594966888428
    6. ' pair' → logprob: -7.232594966888428
    7. 'bit' → logprob: -7.857594966888428
    8. ' bit' → logprob: -8.232595443725586
    9. 'pair' → logprob: -8.232595443725586
    10. ' list' → logprob: -8.357595443725586

Token 106: ':' (ID: 25)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.2000264674425125
    2. '(keys' → logprob: -2.450026512145996
    3. ' =' → logprob: -3.700026512145996
    4. '   ' → logprob: -3.950026512145996
    5. '[]' → logprob: -3.950026512145996
    6. ' of' → logprob: -4.950026512145996
    7. '(' → logprob: -5.075026512145996
    8. ' keys' → logprob: -5.450026512145996
    9. '_keys' → logprob: -5.950026512145996
    10. '(key' → logprob: -6.200026512145996

Token 107: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.05720943957567215
    2. '(' → logprob: -3.3072094917297363
    3. '(keys' → logprob: -4.682209491729736
    4. '(cost' → logprob: -5.557209491729736
    5. '[]' → logprob: -6.557209491729736
    6. '   ' → logprob: -7.057209491729736
    7. '(bit' → logprob: -7.182209491729736
    8. ' []' → logprob: -7.307209491729736
    9. '(bits' → logprob: -7.432209491729736
    10. '(key' → logprob: -7.932209491729736

Token 108: 'bit' (ID: 6516)
  Prédit: 'coverage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coverage' → logprob: -0.47550392150878906
    2. ' coverage' → logprob: -1.100503921508789
    3. 'bit' → logprob: -4.100503921508789
    4. 'mask' → logprob: -4.600503921508789
    5. 'cover' → logprob: -5.225503921508789
    6. 'covered' → logprob: -5.350503921508789
    7. ' bit' → logprob: -5.725503921508789
    8. 'cost' → logprob: -5.725503921508789
    9. ' mask' → logprob: -7.350503921508789
    10. ' covered' → logprob: -7.725503921508789

Token 109: 'mask' (ID: 22527)
  Prédit: 'mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.44761237502098083
    2. '_mask' → logprob: -1.0726124048233032
    3. '_' → logprob: -4.697612285614014
    4. ')' → logprob: -4.947612285614014
    5. ' _' → logprob: -7.447612285614014
    6. '_masks' → logprob: -7.697612285614014
    7. '   ' → logprob: -8.197612762451172
    8. 'm' → logprob: -8.197612762451172
    9. 'wise' → logprob: -8.697612762451172
    10. ',' → logprob: -8.697612762451172

Token 110: ' of' (ID: 328)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00879372376948595
    2. ' ,' → logprob: -5.383793830871582
    3. '_' → logprob: -6.508793830871582
    4. '_mask' → logprob: -7.383793830871582
    5. '_cost' → logprob: -7.758793830871582
    6. '_cover' → logprob: -7.758793830871582
    7. ')' → logprob: -7.883793830871582
    8. '_keys' → logprob: -8.008793830871582
    9. '_,' → logprob: -9.008793830871582
    10. '_key' → logprob: -9.008793830871582

Token 111: ' boxes' (ID: 21967)
  Prédit: ' boxes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' boxes' → logprob: -0.7703912258148193
    2. 'boxes' → logprob: -1.6453912258148193
    3. ' coverage' → logprob: -2.1453912258148193
    4. 'covered' → logprob: -2.2703912258148193
    5. ' covered' → logprob: -2.6453912258148193
    6. 'coverage' → logprob: -3.5203912258148193
    7. 'opened' → logprob: -4.520391464233398
    8. ' unlocked' → logprob: -5.270391464233398
    9. ' opened' → logprob: -5.395391464233398
    10. ' keys' → logprob: -7.145391464233398

Token 112: ' it' (ID: 480)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5713670253753662
    2. ',' → logprob: -0.9463670253753662
    3. ' ,' → logprob: -3.696367025375366
    4. ')' → logprob: -4.946367263793945
    5. ' that' → logprob: -5.196367263793945
    6. ' it' → logprob: -5.696367263793945
    7. ' covered' → logprob: -6.696367263793945
    8. '_un' → logprob: -6.821367263793945
    9. ' to' → logprob: -7.196367263793945
    10. '_open' → logprob: -7.571367263793945

Token 113: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.281098872423172
    2. 'can' → logprob: -1.7810988426208496
    3. 'opens' → logprob: -3.1560988426208496
    4. 'un' → logprob: -4.28109884262085
    5. ' opens' → logprob: -4.65609884262085
    6. ' covers' → logprob: -5.28109884262085
    7. 'covers' → logprob: -6.65609884262085
    8. '_can' → logprob: -6.90609884262085
    9. ' unlock' → logprob: -7.15609884262085
    10. '   ' → logprob: -7.15609884262085

Token 114: ' open' (ID: 2494)
  Prédit: 'open'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'open' → logprob: -0.21332727372646332
    2. ' open' → logprob: -1.7133272886276245
    3. 'unlock' → logprob: -4.588327407836914
    4. ' unlock' → logprob: -6.713327407836914
    5. ' cover' → logprob: -8.838327407836914
    6. 'cover' → logprob: -8.838327407836914
    7. '	open' → logprob: -10.338327407836914
    8. '_open' → logprob: -10.588327407836914
    9. '_unlock' → logprob: -10.588327407836914
    10. '   ' → logprob: -10.838327407836914

Token 115: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0018555807182565331
    2. ')' → logprob: -6.751855373382568
    3. ' ,' → logprob: -7.376855373382568
    4. '   ' → logprob: -10.626855850219727
    5. ' )' → logprob: -11.376855850219727
    6. ',)' → logprob: -11.501855850219727
    7. '),' → logprob: -11.751855850219727
    8. ',
' → logprob: -13.751855850219727
    9. '    ' → logprob: -14.126855850219727
    10. ' ' → logprob: -14.501855850219727

Token 116: ' cost' (ID: 3097)
  Prédit: ' cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cost' → logprob: -0.02055695280432701
    2. 'cost' → logprob: -3.895556926727295
    3. ')' → logprob: -12.145557403564453
    4. ',' → logprob: -12.645557403564453
    5. ' ,' → logprob: -13.020557403564453
    6. ' price' → logprob: -13.520557403564453
    7. ' )' → logprob: -14.020557403564453
    8. '    ' → logprob: -14.270557403564453
    9. '_cost' → logprob: -15.395557403564453
    10. 'int' → logprob: -15.395557403564453

Token 117: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13007999956607819
    2. ',' → logprob: -2.130079984664917
    3. '   ' → logprob: -6.005080223083496
    4. ',)' → logprob: -8.130080223083496
    5. ' )' → logprob: -8.255080223083496
    6. '),' → logprob: -9.755080223083496
    7. '`)' → logprob: -11.130080223083496
    8. '    ' → logprob: -12.255080223083496
    9. ').' → logprob: -12.630080223083496
    10. 'def' → logprob: -12.630080223083496

Token 118: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6991758942604065
    2. ' keys' → logprob: -1.3241758346557617
    3. 'keys' → logprob: -1.4491758346557617
    4. '
' → logprob: -7.199175834655762
    5. '    
' → logprob: -7.449175834655762
    6. '	keys' → logprob: -8.074175834655762
    7. 'key' → logprob: -8.199175834655762
    8. ' key' → logprob: -9.199175834655762
    9. '.keys' → logprob: -9.324175834655762
    10. '```' → logprob: -10.074175834655762

Token 119: ' keys' (ID: 12994)
  Prédit: ' keys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' keys' → logprob: -0.1453395038843155
    2. 'keys' (adapté à ' keys') → logprob: -2.0203394889831543
    3. '   ' → logprob: -6.020339488983154
    4. ' key' → logprob: -8.895339965820312
    5. 'key' → logprob: -9.520339965820312
    6. '	keys' → logprob: -11.895339965820312
    7. '```' → logprob: -12.020339965820312
    8. '.keys' → logprob: -13.457839965820312
    9. '    
' → logprob: -13.707839965820312
    10. 'boxes' → logprob: -14.270339965820312

Token 120: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0015072436071932316
    2. '=' → logprob: -6.50150728225708
    3. '=[]' → logprob: -12.501506805419922
    4. 's' → logprob: -14.501506805419922
    5. '[]' → logprob: -14.751506805419922
    6. ' ' → logprob: -16.251506805419922
    7. ' []' → logprob: -16.376506805419922
    8. '   ' → logprob: -17.501506805419922
    9. '.append' → logprob: -18.126506805419922
    10. '	' → logprob: -18.126506805419922

Token 121: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.693156361579895
    2. ' []' → logprob: -0.693156361579895
    3. '[' → logprob: -11.818156242370605
    4. ' [' → logprob: -13.693156242370605
    5. '[]
' → logprob: -15.443156242370605
    6. '   ' → logprob: -16.068157196044922
    7. '[]}' → logprob: -16.443157196044922
    8. ' []
' → logprob: -16.943157196044922
    9. '[:]' → logprob: -17.193157196044922
    10. ' ' → logprob: -17.443157196044922

Token 122: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2445182204246521
    2. ' for' → logprob: -2.244518280029297
    3. 'for' → logprob: -2.369518280029297
    4. '
' → logprob: -4.244518280029297
    5. '    
' → logprob: -6.369518280029297
    6. '<|end|>' → logprob: -7.494518280029297
    7. '	for' → logprob: -7.869518280029297
    8. '  
' → logprob: -8.869518280029297
    9. ' 
' → logprob: -8.994518280029297
    10. ' ' → logprob: -10.619518280029297

Token 123: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.10199330002069473
    2. ' for' → logprob: -2.3519933223724365
    3. '   ' → logprob: -6.476993083953857
    4. '
' → logprob: -8.601993560791016
    5. '	for' → logprob: -10.226993560791016
    6. ' 
' → logprob: -11.351993560791016
    7. '    
' → logprob: -11.601993560791016
    8. '' → logprob: -13.351993560791016
    9. '```' → logprob: -13.726993560791016
    10. '\n' → logprob: -13.851993560791016

Token 124: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.0009282566024921834
    2. '_' → logprob: -7.5009284019470215
    3. ' i' → logprob: -8.125927925109863
    4. ' ' → logprob: -9.500927925109863
    5. ' ‌' → logprob: -12.750927925109863
    6. ' ' → logprob: -15.000927925109863
    7. ' range' → logprob: -15.000927925109863
    8. ' key' → logprob: -15.125927925109863
    9. ' ▁' → logprob: -15.125927925109863
    10. ' __' → logprob: -15.875927925109863

Token 125: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.20338287949562073
    2. 'in' → logprob: -1.7033828496932983
    3. 'range' → logprob: -6.953382968902588
    4. ' ' → logprob: -7.078382968902588
    5. 'i' → logprob: -10.32838249206543
    6. '  ' → logprob: -10.45338249206543
    7. 'input' → logprob: -10.82838249206543
    8. '1' → logprob: -11.45338249206543
    9. ' range' → logprob: -11.70338249206543
    10. 's' → logprob: -11.82838249206543

Token 126: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0013320252764970064
    2. ' range' → logprob: -6.626331806182861
    3. 'input' → logprob: -12.62633228302002
    4. '(range' → logprob: -13.50133228302002
    5. '```' → logprob: -14.87633228302002
    6. '	range' → logprob: -15.25133228302002
    7. 'int' → logprob: -15.62633228302002
    8. '   ' → logprob: -16.251331329345703
    9. 'Range' → logprob: -16.501331329345703
    10. '[' → logprob: -16.626331329345703

Token 127: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.08216574788093567
    2. '(' → logprob: -2.9571657180786133
    3. ' (' → logprob: -3.7071657180786133
    4. ' M' → logprob: -6.082165718078613
    5. 'M' → logprob: -10.082165718078613
    6. '(int' → logprob: -11.207165718078613
    7. '(
' → logprob: -11.457165718078613
    8. ' ' → logprob: -11.582165718078613
    9. '(range' → logprob: -13.082165718078613
    10. '()' → logprob: -13.707165718078613

Token 128: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01709768734872341
    2. '):
' → logprob: -4.517097473144531
    3. ' ):' → logprob: -5.392097473144531
    4. ')' → logprob: -6.642097473144531
    5. ' ):
' → logprob: -9.642097473144531
    6. ':' → logprob: -10.017097473144531
    7. ' )' → logprob: -10.142097473144531
    8. ',' → logprob: -11.517097473144531
    9. '   ' → logprob: -12.267097473144531
    10. '):
' → logprob: -12.517097473144531

Token 129: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003399432636797428
    2. '   ' → logprob: -6.00339937210083
    3. '    ' → logprob: -8.378399848937988
    4. '        
' → logprob: -8.628399848937988
    5. '	   ' → logprob: -9.503399848937988
    6. '    
' → logprob: -10.253399848937988
    7. '      ' → logprob: -10.378399848937988
    8. '     ' → logprob: -10.503399848937988
    9. ' ' → logprob: -10.503399848937988
    10. '```' → logprob: -10.503399848937988

Token 130: ' #' (ID: 1069)
  Prédit: 'coverage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coverage' → logprob: -0.4634914696216583
    2. 'c' → logprob: -1.588491439819336
    3. ' coverage' → logprob: -3.088491439819336
    4. 'a' → logprob: -3.338491439819336
    5. 'cover' → logprob: -4.338491439819336
    6. 'C' → logprob: -4.338491439819336
    7. 'cost' → logprob: -4.463491439819336
    8. '   ' → logprob: -4.713491439819336
    9. 'l' → logprob: -4.713491439819336
    10. 'L' → logprob: -4.838491439819336

Token 131: ' Read' (ID: 5405)
  Prédit: 'coverage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coverage' → logprob: -0.6709224581718445
    2. ' coverage' → logprob: -1.2959225177764893
    3. 'l' → logprob: -2.7959225177764893
    4. 'c' → logprob: -3.1709225177764893
    5. 'a' → logprob: -3.4209225177764893
    6. 'b' → logprob: -4.42092227935791
    7. 'cover' → logprob: -4.92092227935791
    8. 'L' → logprob: -4.92092227935791
    9. 'boxes' → logprob: -5.04592227935791
    10. ' l' → logprob: -5.42092227935791

Token 132: ' the' (ID: 290)
  Prédit: 'coverage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coverage' → logprob: -0.272409051656723
    2. ' coverage' → logprob: -1.5224090814590454
    3. 'cover' → logprob: -4.397408962249756
    4. 'c' → logprob: -6.022408962249756
    5. 'boxes' → logprob: -7.022408962249756
    6. 'cov' → logprob: -7.272408962249756
    7. 'a' → logprob: -7.397408962249756
    8. 'l' → logprob: -7.522408962249756
    9. 'b' → logprob: -8.022409439086914
    10. 'k' → logprob: -8.272409439086914

Token 133: ' cost' (ID: 3097)
  Prédit: 'coverage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coverage' → logprob: -0.5729669332504272
    2. 'cost' → logprob: -1.3229669332504272
    3. 'k' → logprob: -3.197967052459717
    4. 'c' → logprob: -3.447967052459717
    5. ' coverage' → logprob: -3.947967052459717
    6. 'a' → logprob: -4.322967052459717
    7. 'cover' → logprob: -4.697967052459717
    8. 'boxes' → logprob: -4.947967052459717
    9. 'input' → logprob: -5.322967052459717
    10. 'line' → logprob: -5.697967052459717

Token 134: ' '' (ID: 461)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011897868476808071
    2. ' ,' → logprob: -4.886898040771484
    3. ' and' → logprob: -6.761898040771484
    4. 'and' → logprob: -6.886898040771484
    5. ',k' → logprob: -7.761898040771484
    6. ',num' → logprob: -8.136898040771484
    7. ',n' → logprob: -8.636898040771484
    8. '   ' → logprob: -8.636898040771484
    9. ',b' → logprob: -9.011898040771484
    10. ',c' → logprob: -9.261898040771484

Token 135: 'a' (ID: 64)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.49736303091049194
    2. 'c' → logprob: -1.4973630905151367
    3. 'k' → logprob: -3.6223630905151367
    4. ' c' → logprob: -3.7473630905151367
    5. ',c' → logprob: -3.8723630905151367
    6. 'and' → logprob: -3.9973630905151367
    7. 'cost' → logprob: -4.122363090515137
    8. ' and' → logprob: -4.372363090515137
    9. 'coverage' → logprob: -4.622363090515137
    10. ' coverage' → logprob: -5.122363090515137

Token 136: ''' (ID: 6)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011359741911292076
    2. ' ,' → logprob: -5.261359691619873
    3. ',b' → logprob: -6.511359691619873
    4. 'nd' → logprob: -7.386359691619873
    5. ',k' → logprob: -7.386359691619873
    6. '_and' → logprob: -7.511359691619873
    7. 'and' → logprob: -7.761359691619873
    8. ',n' → logprob: -7.886359691619873
    9. 'n' → logprob: -8.136360168457031
    10. 'b' → logprob: -8.261360168457031

Token 137: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0014890312450006604
    2. ',a' → logprob: -7.376489162445068
    3. ' ,' → logprob: -7.501489162445068
    4. ',b' → logprob: -9.75148868560791
    5. 'and' → logprob: -10.00148868560791
    6. ',n' → logprob: -10.12648868560791
    7. ' and' → logprob: -10.12648868560791
    8. 'a' → logprob: -10.75148868560791
    9. ',k' → logprob: -10.87648868560791
    10. '=' → logprob: -11.62648868560791

Token 138: ' the' (ID: 290)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.675948977470398
    2. 'k' → logprob: -0.800948977470398
    3. 'coverage' → logprob: -4.5509490966796875
    4. ' b' → logprob: -5.3009490966796875
    5. 'num' → logprob: -5.3009490966796875
    6. ' k' → logprob: -5.5509490966796875
    7. 'c' → logprob: -5.6759490966796875
    8. '_' → logprob: -5.8009490966796875
    9. 'boxes' → logprob: -6.4259490966796875
    10. 's' → logprob: -7.0509490966796875

Token 139: ' number' (ID: 2086)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.8836595416069031
    2. 'coverage' → logprob: -1.3836596012115479
    3. 'k' → logprob: -1.7586596012115479
    4. 'boxes' → logprob: -2.883659601211548
    5. 'bit' → logprob: -3.383659601211548
    6. 'num' → logprob: -3.758659601211548
    7. 'covered' → logprob: -4.758659362792969
    8. 'box' → logprob: -5.508659362792969
    9. 'count' → logprob: -5.508659362792969
    10. 'c' → logprob: -5.633659362792969

Token 140: ' of' (ID: 328)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'of' → logprob: -0.22710278630256653
    2. ' of' → logprob: -1.8521027565002441
    3. '_of' → logprob: -3.102102756500244
    4. 'a' → logprob: -7.852102756500244
    5. 'tokens' → logprob: -8.352103233337402
    6. 'line' → logprob: -9.352103233337402
    7. ')' → logprob: -9.602103233337402
    8. 'token' → logprob: -9.852103233337402
    9. '_tokens' → logprob: -9.852103233337402
    10. '_' → logprob: -10.602103233337402

Token 141: ' boxes' (ID: 21967)
  Prédit: 'boxes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'boxes' → logprob: -0.4950581192970276
    2. ' boxes' → logprob: -1.7450580596923828
    3. 'b' → logprob: -1.9950580596923828
    4. 'keys' → logprob: -3.245058059692383
    5. 'covered' → logprob: -4.120058059692383
    6. ' b' → logprob: -5.495058059692383
    7. ' keys' → logprob: -5.620058059692383
    8. 'coverage' → logprob: -6.495058059692383
    9. 'd' → logprob: -6.745058059692383
    10. 'box' → logprob: -6.870058059692383

Token 142: ' this' (ID: 495)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.34631669521331787
    2. ' it' → logprob: -2.3463168144226074
    3. ' k' → logprob: -2.9713168144226074
    4. ' ,' → logprob: -4.346316814422607
    5. ' that' → logprob: -4.346316814422607
    6. ' n' → logprob: -4.471316814422607
    7. 'covered' → logprob: -4.596316814422607
    8. 'opened' → logprob: -4.596316814422607
    9. '_' → logprob: -4.721316814422607
    10. 'that' → logprob: -4.971316814422607

Token 143: ' key' (ID: 2140)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.772995114326477
    2. ' key' → logprob: -1.272995114326477
    3. ' keys' → logprob: -1.897995114326477
    4. '_key' → logprob: -3.6479949951171875
    5. ' a' → logprob: -4.1479949951171875
    6. 'can' → logprob: -4.2729949951171875
    7. ' ' → logprob: -4.7729949951171875
    8. ' box' → logprob: -5.2729949951171875
    9. 'key' → logprob: -5.3979949951171875
    10. ' it' → logprob: -5.3979949951171875

Token 144: ' can' (ID: 665)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5112041234970093
    2. 'can' → logprob: -1.3862041234970093
    3. ' can' → logprob: -3.261204242706299
    4. ' it' → logprob: -3.386204242706299
    5. 'it' → logprob: -4.386204242706299
    6. ' ,' → logprob: -4.511204242706299
    7. 'opens' → logprob: -4.511204242706299
    8. ' that' → logprob: -5.261204242706299
    9. '_can' → logprob: -5.511204242706299
    10. '   ' → logprob: -5.636204242706299

Token 145: ' open' (ID: 2494)
  Prédit: ' open'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' open' → logprob: -0.6950932741165161
    2. 'open' → logprob: -0.6950932741165161
    3. 'unlock' → logprob: -7.195093154907227
    4. ' unlock' → logprob: -8.070093154907227
    5. '   ' → logprob: -8.320093154907227
    6. ' access' → logprob: -8.445093154907227
    7. ' cover' → logprob: -9.195093154907227
    8. 'cover' → logprob: -9.570093154907227
    9. '```' → logprob: -10.070093154907227
    10. '	open' → logprob: -10.320093154907227

Token 146: ' '' (ID: 461)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06642234325408936
    2. ' ,' → logprob: -3.566422462463379
    3. ',a' → logprob: -4.316422462463379
    4. 'a' → logprob: -4.816422462463379
    5. '   ' → logprob: -4.941422462463379
    6. ' a' → logprob: -5.691422462463379
    7. '    ' → logprob: -6.816422462463379
    8. ',k' → logprob: -6.941422462463379
    9. '       ' → logprob: -8.066422462463379
    10. ' ' → logprob: -8.316422462463379

Token 147: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.05012509226799011
    2. 'k' → logprob: -3.1751251220703125
    3. 'c' → logprob: -5.9251251220703125
    4. ' b' → logprob: -6.8001251220703125
    5. 'x' → logprob: -7.1751251220703125
    6. 's' → logprob: -7.5501251220703125
    7. 'l' → logprob: -7.8001251220703125
    8. 'num' → logprob: -8.300125122070312
    9. 'm' → logprob: -8.550125122070312
    10. ')' → logprob: -8.800125122070312

Token 148: ''
' (ID: 2207)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.38023972511291504
    2. ')' → logprob: -2.130239725112915
    3. ')'' → logprob: -2.755239725112915
    4. ',' → logprob: -2.880239725112915
    5. '')' → logprob: -3.255239725112915
    6. ''
' → logprob: -4.630239486694336
    7. ' '' → logprob: -5.005239486694336
    8. '   ' → logprob: -5.005239486694336
    9. ' =' → logprob: -5.380239486694336
    10. ')
' → logprob: -5.630239486694336

Token 149: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.665882408618927
    2. ',' → logprob: -0.790882408618927
    3. ' ,' → logprob: -4.290882587432861
    4. '   ' → logprob: -4.540882587432861
    5. ',a' → logprob: -5.665882587432861
    6. '<|end|>' → logprob: -6.040882587432861
    7. 'a' → logprob: -7.665882587432861
    8. ' ' → logprob: -8.290882110595703
    9. '    ' → logprob: -8.415882110595703
    10. ' a' → logprob: -8.415882110595703

Token 150: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.03366967290639877
    2. ' a' → logprob: -3.4086697101593018
    3. '   ' → logprob: -10.908669471740723
    4. '	a' → logprob: -12.408669471740723
    5. '       ' → logprob: -14.533669471740723
    6. '    ' → logprob: -15.158669471740723
    7. ' ' → logprob: -15.658669471740723
    8. 'cost' → logprob: -16.15867042541504
    9. '  ' → logprob: -16.40867042541504
    10. ' cost' → logprob: -16.65867042541504

Token 151: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0019470835104584694
    2. ',b' → logprob: -6.251946926116943
    3. ' ,' → logprob: -11.251947402954102
    4. 'b' → logprob: -12.626947402954102
    5. ',a' → logprob: -14.251947402954102
    6. '=' → logprob: -14.376947402954102
    7. ',int' → logprob: -15.126947402954102
    8. ' =' → logprob: -15.626947402954102
    9. ',input' → logprob: -16.3769474029541
    10. ',k' → logprob: -16.8769474029541

Token 152: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.348552942276001
    2. ' b' → logprob: -1.223552942276001
    3. ' ' → logprob: -9.848552703857422
    4. 'c' → logprob: -10.348552703857422
    5. ' c' → logprob: -11.098552703857422
    6. '    ' → logprob: -12.848552703857422
    7. ' =' → logprob: -14.223552703857422
    8. '	b' → logprob: -14.473552703857422
    9. '  ' → logprob: -14.723552703857422
    10. 's' → logprob: -14.723552703857422

Token 153: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4288731515407562
    2. '=' → logprob: -1.0538731813430786
    3. ',' → logprob: -8.803873062133789
    4. ')' → logprob: -10.928873062133789
    5. '   ' → logprob: -13.053873062133789
    6. ')=' → logprob: -14.303873062133789
    7. '=input' → logprob: -14.553873062133789
    8. ' ' → logprob: -14.928873062133789
    9. '    ' → logprob: -15.178873062133789
    10. ' )' → logprob: -16.55387306213379

Token 154: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.005929863080382347
    2. 'map' → logprob: -5.130929946899414
    3. ' ' → logprob: -14.505929946899414
    4. '	map' → logprob: -14.630929946899414
    5. ' input' → logprob: -15.880929946899414
    6. ' list' → logprob: -16.630929946899414
    7. 'input' → logprob: -16.755929946899414
    8. ' mapa' → logprob: -17.755929946899414
    9. '(map' → logprob: -18.130929946899414
    10. '_map' → logprob: -18.130929946899414

Token 155: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -5.88418151892256e-05
    2. '(' → logprob: -9.875059127807617
    3. 'int' → logprob: -12.625059127807617
    4. '<int' → logprob: -13.375059127807617
    5. '(str' → logprob: -14.125059127807617
    6. '[int' → logprob: -14.375059127807617
    7. '(input' → logprob: -14.750059127807617
    8. '(
' → logprob: -15.125059127807617
    9. '=int' → logprob: -15.125059127807617
    10. ' (' → logprob: -15.750059127807617

Token 156: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009220932610332966
    2. ',input' → logprob: -4.759221076965332
    3. '(' → logprob: -7.634221076965332
    4. '(input' → logprob: -10.134221076965332
    5. '(),' → logprob: -10.884221076965332
    6. ')' → logprob: -11.009221076965332
    7. 'input' → logprob: -11.009221076965332
    8. ',int' → logprob: -11.259221076965332
    9. ' ,' → logprob: -11.509221076965332
    10. ',(' → logprob: -13.259221076965332

Token 157: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.011048762127757072
    2. ' input' → logprob: -4.511048793792725
    3. '(input' → logprob: -14.261048316955566
    4. ')' → logprob: -16.261049270629883
    5. ',input' → logprob: -16.511049270629883
    6. '=input' → logprob: -16.886049270629883
    7. '_input' → logprob: -18.011049270629883
    8. ' ' → logprob: -19.136049270629883
    9. '	input' → logprob: -19.761049270629883
    10. '[input' → logprob: -19.886049270629883

Token 158: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.696889623621246e-06
    2. '()' → logprob: -13.00000286102295
    3. ' ().' → logprob: -15.00000286102295
    4. '(' → logprob: -17.000001907348633
    5. '.' → logprob: -17.500001907348633
    6. ')' → logprob: -17.875001907348633
    7. '().'' → logprob: -18.375001907348633
    8. '()
' → logprob: -18.750001907348633
    9. ').' → logprob: -19.125001907348633
    10. '('' → logprob: -19.625001907348633

Token 159: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.8624639324116288e-06
    2. '(split' → logprob: -14.250001907348633
    3. 'strip' → logprob: -14.875001907348633
    4. 'spl' → logprob: -15.125001907348633
    5. ' split' → logprob: -15.250001907348633
    6. 'rstrip' → logprob: -15.875001907348633
    7. 'read' → logprob: -16.000001907348633
    8. 'plit' → logprob: -18.125001907348633
    9. ')' → logprob: -18.375001907348633
    10. '_split' → logprob: -18.500001907348633

Token 160: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003881430719047785
    2. '())' → logprob: -5.878881454467773
    3. '()' → logprob: -7.003881454467773
    4. ')
' → logprob: -8.878881454467773
    5. ' )' → logprob: -12.003881454467773
    6. '   ' → logprob: -12.003881454467773
    7. '())
' → logprob: -12.128881454467773
    8. '))' → logprob: -12.628881454467773
    9. '       ' → logprob: -13.253881454467773
    10. '),' → logprob: -13.878881454467773

Token 161: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 162: ' #' (ID: 1069)
  Prédit: ' boxes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' boxes' → logprob: -0.04622742906212807
    2. 'boxes' → logprob: -3.92122745513916
    3. ' box' → logprob: -4.67122745513916
    4. ' keys' → logprob: -5.04622745513916
    5. ' key' → logprob: -6.04622745513916
    6. ' coverage' → logprob: -6.67122745513916
    7. ' bit' → logprob: -6.92122745513916
    8. 'box' → logprob: -6.92122745513916
    9. ' s' → logprob: -7.42122745513916
    10. ' covered' → logprob: -7.67122745513916

Token 163: ' Read' (ID: 5405)
  Prédit: 'boxes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'boxes' → logprob: -0.6562761664390564
    2. ' boxes' → logprob: -0.9062761664390564
    3. 'box' → logprob: -3.531276226043701
    4. 'coverage' → logprob: -4.531276226043701
    5. ' coverage' → logprob: -4.906276226043701
    6. 'bit' → logprob: -5.156276226043701
    7. 'covered' → logprob: -5.281276226043701
    8. ' box' → logprob: -5.406276226043701
    9. 'mask' → logprob: -6.031276226043701
    10. ' key' → logprob: -6.406276226043701

Token 164: ' list' (ID: 1562)
  Prédit: ' boxes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' boxes' → logprob: -0.09311188757419586
    2. 'boxes' → logprob: -2.468111991882324
    3. ' box' → logprob: -5.843111991882324
    4. ' the' → logprob: -8.218111991882324
    5. 'box' → logprob: -8.218111991882324
    6. ' indices' → logprob: -8.593111991882324
    7. '_boxes' → logprob: -8.843111991882324
    8. 'indices' → logprob: -8.968111991882324
    9. 'the' → logprob: -10.093111991882324
    10. 'indexes' → logprob: -10.468111991882324

Token 165: ' '' (ID: 461)
  Prédit: ' boxes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' boxes' → logprob: -1.060023307800293
    2. '_boxes' → logprob: -1.310023307800293
    3. ' of' → logprob: -1.560023307800293
    4. 'boxes' → logprob: -2.560023307800293
    5. 'of' → logprob: -3.310023307800293
    6. 's' → logprob: -4.060023307800293
    7. '()' → logprob: -4.685023307800293
    8. '   ' → logprob: -4.935023307800293
    9. '_of' → logprob: -5.185023307800293
    10. 'keys' → logprob: -5.560023307800293

Token 166: 'c' (ID: 66)
  Prédit: 'boxes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'boxes' → logprob: -0.08062528818845749
    2. ' boxes' → logprob: -2.580625295639038
    3. 'box' → logprob: -7.205625057220459
    4. 'opened' → logprob: -8.705625534057617
    5. 'indices' → logprob: -8.955625534057617
    6. ' box' → logprob: -8.955625534057617
    7. '   ' → logprob: -8.955625534057617
    8. 'open' → logprob: -9.330625534057617
    9. 'covered' → logprob: -9.705625534057617
    10. 's' → logprob: -9.955625534057617

Token 167: ''' (ID: 6)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08134295046329498
    2. '=' → logprob: -2.581342935562134
    3. '_boxes' → logprob: -6.581343173980713
    4. 's' → logprob: -7.206343173980713
    5. 'boxes' → logprob: -9.831342697143555
    6. '   ' → logprob: -9.831342697143555
    7. 'c' → logprob: -10.081342697143555
    8. ' boxes' → logprob: -10.331342697143555
    9. '=list' → logprob: -10.581342697143555
    10. ')' → logprob: -10.581342697143555

Token 168: ' of' (ID: 328)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.033704597502946854
    2. '=' → logprob: -3.4087045192718506
    3. '   ' → logprob: -10.03370475769043
    4. 'c' → logprob: -12.28370475769043
    5. '    ' → logprob: -13.03370475769043
    6. '_' → logprob: -13.65870475769043
    7. '       ' → logprob: -13.78370475769043
    8. ' ' → logprob: -13.78370475769043
    9. ' =[' → logprob: -13.90870475769043
    10. '	' → logprob: -14.40870475769043

Token 169: ' which' (ID: 1118)
  Prédit: 'boxes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'boxes' → logprob: -0.23151877522468567
    2. ' boxes' → logprob: -2.1065187454223633
    3. 'list' → logprob: -3.1065187454223633
    4. 'c' → logprob: -4.106518745422363
    5. 'box' → logprob: -4.356518745422363
    6. ' list' → logprob: -5.731518745422363
    7. ' box' → logprob: -6.231518745422363
    8. ' c' → logprob: -6.731518745422363
    9. 'b' → logprob: -6.856518745422363
    10. 'inte' → logprob: -6.981518745422363

Token 170: ' boxes' (ID: 21967)
  Prédit: ' boxes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' boxes' → logprob: -0.22648067772388458
    2. 'boxes' → logprob: -1.6014807224273682
    3. 'c' → logprob: -7.476480484008789
    4. ' c' → logprob: -8.976480484008789
    5. ' box' → logprob: -9.476480484008789
    6. ' indices' → logprob: -9.476480484008789
    7. 'indices' → logprob: -9.601480484008789
    8. '_boxes' → logprob: -9.601480484008789
    9. 'box' → logprob: -9.851480484008789
    10. 'b' → logprob: -11.601480484008789

Token 171: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.24001914262771606
    2. '=' → logprob: -1.7400190830230713
    3. 'can' → logprob: -3.9900190830230713
    4. ' can' → logprob: -4.24001932144165
    5. 'open' → logprob: -6.74001932144165
    6. ' are' → logprob: -6.86501932144165
    7. '   ' → logprob: -7.36501932144165
    8. '_can' → logprob: -7.99001932144165
    9. '=open' → logprob: -8.115018844604492
    10. ' to' → logprob: -8.740018844604492

Token 172: '1' (ID: 16)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3666727840900421
    2. ' )' → logprob: -1.7416727542877197
    3. ' are' → logprob: -2.7416727542877197
    4. ' that' → logprob: -4.241672992706299
    5. ' the' → logprob: -4.366672992706299
    6. ' can' → logprob: -4.866672992706299
    7. ' indices' → logprob: -5.116672992706299
    8. ' to' → logprob: -5.241672992706299
    9. 'indices' → logprob: -5.616672992706299
    10. ' in' → logprob: -5.866672992706299

Token 173: '-index' (ID: 45533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9602627754211426
    2. ',' → logprob: -1.8352627754211426
    3. ' ,' → logprob: -1.9602627754211426
    4. ' )' → logprob: -1.9602627754211426
    5. 'based' → logprob: -2.5852627754211426
    6. '-based' → logprob: -2.8352627754211426
    7. ' <=' → logprob: -4.210262775421143
    8. '_based' → logprob: -4.960262775421143
    9. ' ' → logprob: -5.460262775421143
    10. '<=' → logprob: -5.835262775421143

Token 174: 'ed' (ID: 295)
  Prédit: 'ed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -5.12127808178775e-05
    2. 'based' → logprob: -10.875051498413086
    3. 'ex' → logprob: -12.000051498413086
    4. 'ated' → logprob: -12.125051498413086
    5. 'ased' → logprob: -12.500051498413086
    6. 'e' → logprob: -12.750051498413086
    7. 'es' → logprob: -13.000051498413086
    8. 'ized' → logprob: -13.250051498413086
    9. '   ' → logprob: -13.500051498413086
    10. 'd' → logprob: -13.625051498413086

Token 175: ')' (ID: 8)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.3133794367313385
    2. ')' → logprob: -1.3133794069290161
    3. ' to' → logprob: -11.063379287719727
    4. '   ' → logprob: -11.188379287719727
    5. ' are' → logprob: -11.313379287719727
    6. ')c' → logprob: -11.563379287719727
    7. ' ' → logprob: -11.688379287719727
    8. ' )
' → logprob: -11.688379287719727
    9. 'indices' → logprob: -12.063379287719727
    10. ' that' → logprob: -12.063379287719727

Token 176: ' this' (ID: 495)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06546647101640701
    2. '=' → logprob: -2.9404664039611816
    3. 'c' → logprob: -5.315466403961182
    4. ' c' → logprob: -5.940466403961182
    5. '       ' → logprob: -6.065466403961182
    6. '   ' → logprob: -8.06546688079834
    7. '=c' → logprob: -9.94046688079834
    8. ',' → logprob: -10.31546688079834
    9. '_c' → logprob: -10.44046688079834
    10. '	c' → logprob: -10.44046688079834

Token 177: ' key' (ID: 2140)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.4716509282588959
    2. ' keys' → logprob: -1.5966509580612183
    3. 'can' → logprob: -2.9716508388519287
    4. 'keys' → logprob: -3.0966508388519287
    5. 'c' → logprob: -3.5966508388519287
    6. ' c' → logprob: -4.096651077270508
    7. '_keys' → logprob: -4.346651077270508
    8. ' key' → logprob: -5.596651077270508
    9. '.keys' → logprob: -5.971651077270508
    10. ' ' → logprob: -6.096651077270508

Token 178: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.3196577727794647
    2. 'can' → logprob: -1.944657802581787
    3. ' =' → logprob: -2.944657802581787
    4. '=' → logprob: -3.319657802581787
    5. '_can' → logprob: -4.319657802581787
    6. ' covers' → logprob: -4.444657802581787
    7. '   ' → logprob: -5.194657802581787
    8. 'opens' → logprob: -5.444657802581787
    9. 'covers' → logprob: -6.069657802581787
    10. ' opens' → logprob: -6.319657802581787

Token 179: ' open' (ID: 2494)
  Prédit: 'open'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'open' → logprob: -0.47422704100608826
    2. ' open' → logprob: -0.9742270708084106
    3. 'unlock' → logprob: -9.599226951599121
    4. ' access' → logprob: -11.224226951599121
    5. '_open' → logprob: -11.224226951599121
    6. 'cover' → logprob: -11.349226951599121
    7. ' unlock' → logprob: -11.349226951599121
    8. '	open' → logprob: -11.599226951599121
    9. '   ' → logprob: -11.724226951599121
    10. ' cover' → logprob: -11.849226951599121

Token 180: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006619804538786411
    2. 'c' → logprob: -6.631619930267334
    3. ' c' → logprob: -6.881619930267334
    4. ',' → logprob: -7.131619930267334
    5. '   ' → logprob: -7.256619930267334
    6. '        
' → logprob: -7.256619930267334
    7. '
' → logprob: -7.506619930267334
    8. '	c' → logprob: -7.881619930267334
    9. '        ' → logprob: -8.631619453430176
    10. ',c' → logprob: -8.631619453430176

Token 181: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012608295073732734
    2. ',' → logprob: -7.876260757446289
    3. '        
' → logprob: -8.126260757446289
    4. ' c' → logprob: -8.626260757446289
    5. '<|end|>' → logprob: -9.126260757446289
    6. '   ' → logprob: -9.626260757446289
    7. 'c' → logprob: -10.126260757446289
    8. ')' → logprob: -10.626260757446289
    9. ' ,' → logprob: -10.626260757446289
    10. ' ' → logprob: -10.876260757446289

Token 182: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.576000988483429
    2. 'c' (adapté à ' c') → logprob: -0.826000988483429
    3. '       ' → logprob: -10.076001167297363
    4. '	c' → logprob: -11.576001167297363
    5. '   ' → logprob: -12.451001167297363
    6. '    ' → logprob: -13.326001167297363
    7. ')c' → logprob: -13.576001167297363
    8. '        ' → logprob: -14.201001167297363
    9. ' ' → logprob: -14.951001167297363
    10. 's' → logprob: -14.951001167297363

Token 183: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868746757507324
    2. '=' → logprob: -1.1368746757507324
    3. ',' → logprob: -13.51187515258789
    4. '   ' → logprob: -14.63687515258789
    5. '=list' → logprob: -14.76187515258789
    6. 's' → logprob: -14.88687515258789
    7. '_' → logprob: -15.26187515258789
    8. ')' → logprob: -15.38687515258789
    9. ' ' → logprob: -15.88687515258789
    10. '	' → logprob: -16.26187515258789

Token 184: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.5759394764900208
    2. ' list' → logprob: -0.8259394764900208
    3. '[list' → logprob: -16.950939178466797
    4. '[' → logprob: -17.825939178466797
    5. 'map' → logprob: -17.950939178466797
    6. '	list' → logprob: -17.950939178466797
    7. '=list' → logprob: -18.700939178466797
    8. ' [' → logprob: -18.825939178466797
    9. ' ' → logprob: -19.325939178466797
    10. 'List' → logprob: -19.325939178466797

Token 185: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.6269922852516174
    2. '(' → logprob: -0.8769922852516174
    3. '(int' → logprob: -3.0019922256469727
    4. '(range' → logprob: -11.001992225646973
    5. 'map' → logprob: -11.251992225646973
    6. '(input' → logprob: -11.501992225646973
    7. '(
' → logprob: -11.626992225646973
    8. '()' → logprob: -11.751992225646973
    9. '[int' → logprob: -11.751992225646973
    10. ' (' → logprob: -12.626992225646973

Token 186: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0005137138650752604
    2. 'int' → logprob: -7.750513553619385
    3. '(' → logprob: -9.500514030456543
    4. ',int' → logprob: -12.625514030456543
    5. '[int' → logprob: -13.000514030456543
    6. '=int' → logprob: -13.750514030456543
    7. '<int' → logprob: -14.375514030456543
    8. '(lambda' → logprob: -15.625514030456543
    9. '```' → logprob: -15.625514030456543
    10. ']int' → logprob: -15.750514030456543

Token 187: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.19162069261074066
    2. ',input' → logprob: -2.0666205883026123
    3. '(input' → logprob: -3.0666205883026123
    4. '(' → logprob: -7.066620826721191
    5. 'input' → logprob: -8.316620826721191
    6. '(),' → logprob: -10.316620826721191
    7. ' ,' → logprob: -10.566620826721191
    8. ',int' → logprob: -11.941620826721191
    9. '   ' → logprob: -12.066620826721191
    10. '```' → logprob: -12.191620826721191

Token 188: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.014163747429847717
    2. ' input' → logprob: -4.264163970947266
    3. '(input' → logprob: -16.014163970947266
    4. ',input' → logprob: -16.889163970947266
    5. ' ' → logprob: -17.764163970947266
    6. '=input' → logprob: -18.264163970947266
    7. '_input' → logprob: -18.389163970947266
    8. '	input' → logprob: -18.764163970947266
    9. ')' → logprob: -18.764163970947266
    10. 'lambda' → logprob: -19.014163970947266

Token 189: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.7432603272027336e-06
    2. '()' → logprob: -13.375001907348633
    3. ' ().' → logprob: -16.375001907348633
    4. '.' → logprob: -16.625001907348633
    5. '.split' → logprob: -19.000001907348633
    6. '(' → logprob: -19.375001907348633
    7. ' .' → logprob: -19.625001907348633
    8. ').' → logprob: -19.750001907348633
    9. '()
' → logprob: -19.875001907348633
    10. ')' → logprob: -20.000001907348633

Token 190: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.5776860184123507e-06
    2. 'strip' → logprob: -13.00000286102295
    3. ' split' → logprob: -15.62500286102295
    4. '(split' → logprob: -16.500001907348633
    5. 'spl' → logprob: -17.125001907348633
    6. 'rstrip' → logprob: -17.125001907348633
    7. 'read' → logprob: -18.125001907348633
    8. '().' → logprob: -18.500001907348633
    9. ')' → logprob: -19.750001907348633
    10. 's' → logprob: -19.750001907348633

Token 191: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.0009513601544313133
    2. '))' → logprob: -7.375951290130615
    3. '()' → logprob: -8.500951766967773
    4. '()))
' → logprob: -10.000951766967773
    5. '())' → logprob: -10.375951766967773
    6. '()));' → logprob: -10.500951766967773
    7. '(' → logprob: -11.250951766967773
    8. '()))

' → logprob: -13.375951766967773
    9. '())).' → logprob: -14.000951766967773
    10. '().' → logprob: -14.875951766967773

Token 192: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3731914162635803
    2. '       ' → logprob: -1.4981913566589355
    3. '    
' → logprob: -2.8731913566589355
    4. '        
' → logprob: -4.4981913566589355
    5. ' 
' → logprob: -5.4981913566589355
    6. '
' → logprob: -5.4981913566589355
    7. '   
' → logprob: -5.8731913566589355
    8. '  
' → logprob: -5.8731913566589355
    9. '<|end|>' → logprob: -6.3731913566589355
    10. '     
' → logprob: -6.9981913566589355

Token 193: ' s' (ID: 265)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.47730860114097595
    2. 'mask' → logprob: -1.6023086309432983
    3. '   ' → logprob: -2.852308511734009
    4. 'box' → logprob: -2.977308511734009
    5. ' key' → logprob: -3.977308511734009
    6. ' box' → logprob: -4.477308750152588
    7. 'key' → logprob: -4.602308750152588
    8. ' mask' → logprob: -4.727308750152588
    9. '        
' → logprob: -5.352308750152588
    10. 'bit' → logprob: -5.727308750152588

Token 194: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.24710215628147125
    2. '=' → logprob: -1.87210214138031
    3. '_mask' → logprob: -3.9971022605895996
    4. '_bit' → logprob: -4.2471022605896
    5. 'mask' → logprob: -4.8721022605896
    6. 'et' → logprob: -4.9971022605896
    7. '_boxes' → logprob: -5.7471022605896
    8. '_bits' → logprob: -6.1221022605896
    9. '   ' → logprob: -6.1221022605896
    10. '_' → logprob: -6.2471022605896

Token 195: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.371605948312208e-05
    2. ' ' → logprob: -9.875053405761719
    3. '   ' → logprob: -13.250053405761719
    4. 'sum' → logprob: -15.125053405761719
    5. '(' → logprob: -16.12505340576172
    6. '       ' → logprob: -17.62505340576172
    7. '```' → logprob: -17.87505340576172
    8. '  ' → logprob: -18.00005340576172
    9. '    ' → logprob: -18.56255340576172
    10. '`' → logprob: -18.93755340576172

Token 196: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5094070477061905e-05
    2. 'sum' → logprob: -11.375015258789062
    3. ' ' → logprob: -12.750015258789062
    4. '   ' → logprob: -14.625015258789062
    5. '(' → logprob: -15.125015258789062
    6. '```' → logprob: -18.250015258789062
    7. ' sum' → logprob: -18.625015258789062
    8. '       ' → logprob: -18.750015258789062
    9. '  ' → logprob: -19.375015258789062
    10. '(sum' → logprob: -19.625015258789062

Token 197: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 198: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07574658840894699
    2. ' for' → logprob: -2.950746536254883
    3. '   ' → logprob: -4.700746536254883
    4. '<|end|>' → logprob: -4.950746536254883
    5. '       ' → logprob: -6.075746536254883
    6. '
' → logprob: -6.325746536254883
    7. '	for' → logprob: -8.700746536254883
    8. ' ' → logprob: -8.825746536254883
    9. '    
' → logprob: -11.075746536254883
    10. '<|end|>' → logprob: -11.075746536254883

Token 199: ' Bit' (ID: 9422)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3133389949798584
    2. ' for' → logprob: -1.3133389949798584
    3. '<|end|>' → logprob: -10.188339233398438
    4. '       ' → logprob: -11.438339233398438
    5. '   ' → logprob: -11.813339233398438
    6. '	for' → logprob: -11.938339233398438
    7. ' ' → logprob: -12.313339233398438
    8. '0' → logprob: -12.688339233398438
    9. '
' → logprob: -13.063339233398438
    10. 'For' → logprob: -13.438339233398438

Token 200: 'mask' (ID: 22527)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 201: ' representing' (ID: 25389)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4100207984447479
    2. '<|end|>' → logprob: -1.2850208282470703
    3. 'for' → logprob: -3.0350208282470703
    4. '<|end|>' → logprob: -5.03502082824707
    5. ' <<=' → logprob: -6.53502082824707
    6. ' ' → logprob: -6.91002082824707
    7. '=' → logprob: -7.53502082824707
    8. ' |=' → logprob: -7.66002082824707
    9. ')' → logprob: -8.28502082824707
    10. '   ' → logprob: -8.41002082824707

Token 202: ' boxes' (ID: 21967)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.8739461898803711
    2. '0' → logprob: -1.748946189880371
    3. ' which' → logprob: -1.873946189880371
    4. 'the' → logprob: -1.998946189880371
    5. 'which' → logprob: -2.998946189880371
    6. ' boxes' → logprob: -3.623946189880371
    7. 'boxes' → logprob: -3.623946189880371
    8. ' ' → logprob: -4.623946189880371
    9. 'covered' → logprob: -6.123946189880371
    10. ' keys' → logprob: -6.998946189880371

Token 203: ' this' (ID: 495)
  Prédit: ' |='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' |=' → logprob: -0.1604352444410324
    2. '|' → logprob: -2.035435199737549
    3. ' |' → logprob: -5.285435199737549
    4. 'for' → logprob: -5.535435199737549
    5. ' for' → logprob: -6.285435199737549
    6. '=' → logprob: -6.285435199737549
    7. ' =' → logprob: -6.535435199737549
    8. '<|end|>' → logprob: -6.910435199737549
    9. ' <<=' → logprob: -7.785435199737549
    10. '   ' → logprob: -7.785435199737549

Token 204: ' key' (ID: 2140)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.5122187733650208
    2. 'can' → logprob: -1.387218713760376
    3. ' key' → logprob: -2.387218713760376
    4. 'key' → logprob: -3.637218713760376
    5. '_key' → logprob: -3.762218713760376
    6. '_can' → logprob: -5.137218952178955
    7. ' for' → logprob: -7.137218952178955
    8. '   ' → logprob: -7.512218952178955
    9. ' ' → logprob: -7.887218952178955
    10. 's' → logprob: -7.887218952178955

Token 205: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.22813984751701355
    2. 'can' → logprob: -1.603139877319336
    3. '   ' → logprob: -6.978139877319336
    4. '       ' → logprob: -7.728139877319336
    5. '_can' → logprob: -7.728139877319336
    6. 'for' → logprob: -8.103139877319336
    7. ' for' → logprob: -9.103139877319336
    8. '	can' → logprob: -9.228139877319336
    9. ' ' → logprob: -9.728139877319336
    10. 'opens' → logprob: -9.978139877319336

Token 206: ' open' (ID: 2494)
  Prédit: 'open'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'open' → logprob: -0.02384711243212223
    2. ' open' → logprob: -3.7738471031188965
    3. 'unlock' → logprob: -7.8988471031188965
    4. 'cover' → logprob: -8.648847579956055
    5. ' cover' → logprob: -10.523847579956055
    6. ' unlock' → logprob: -11.273847579956055
    7. '_open' → logprob: -12.023847579956055
    8. '	open' → logprob: -12.273847579956055
    9. '   ' → logprob: -14.273847579956055
    10. ' ' → logprob: -14.523847579956055

Token 207: ' (' (ID: 350)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 208: '0' (ID: 15)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0134193897247314
    2. ')' → logprob: -1.3884193897247314
    3. '1' → logprob: -1.3884193897247314
    4. ' for' → logprob: -3.5134193897247314
    5. '0' → logprob: -3.6384193897247314
    6. 'c' → logprob: -3.6384193897247314
    7. ' ' → logprob: -4.263419151306152
    8. '|' → logprob: -4.888419151306152
    9. '       ' → logprob: -4.888419151306152
    10. 's' → logprob: -5.263419151306152

Token 209: ' means' (ID: 4748)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0292469263076782
    2. ')' → logprob: -1.1542469263076782
    3. ' for' → logprob: -1.4042469263076782
    4. '|' → logprob: -3.1542468070983887
    5. '   ' → logprob: -3.9042468070983887
    6. ' |' → logprob: -5.154246807098389
    7. 'b' → logprob: -5.779246807098389
    8. ')
' → logprob: -5.779246807098389
    9. ' |=' → logprob: -6.654246807098389
    10. '
' → logprob: -6.654246807098389

Token 210: ' box' (ID: 5506)
  Prédit: ' no'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' no' → logprob: -0.7711416482925415
    2. 'no' → logprob: -0.7711416482925415
    3. 'none' → logprob: -3.146141529083252
    4. ' none' → logprob: -3.646141529083252
    5. 'nothing' → logprob: -6.396141529083252
    6. '   ' → logprob: -6.646141529083252
    7. ' nothing' → logprob: -7.021141529083252
    8. 'not' → logprob: -7.771141529083252
    9. ')' → logprob: -8.27114200592041
    10. ' boxes' → logprob: -8.39614200592041

Token 211: ' closed' (ID: 12412)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.5995084047317505
    2. ' is' → logprob: -1.7245084047317505
    3. ')' → logprob: -1.8495084047317505
    4. '-' → logprob: -2.099508285522461
    5. ' not' → logprob: -2.099508285522461
    6. '0' → logprob: -3.599508285522461
    7. ' -' → logprob: -3.724508285522461
    8. ' can' → logprob: -3.849508285522461
    9. 'not' → logprob: -3.974508285522461
    10. ' ' → logprob: -4.099508285522461

Token 212: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007176732178777456
    2. ')
' → logprob: -7.750717639923096
    3. ' for' → logprob: -9.625718116760254
    4. ';' → logprob: -9.625718116760254
    5. '   ' → logprob: -9.750718116760254
    6. ' )' → logprob: -10.250718116760254
    7. '       ' → logprob: -11.000718116760254
    8. ',' → logprob: -11.000718116760254
    9. 's' → logprob: -11.875718116760254
    10. 'for' → logprob: -12.250718116760254

Token 213: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7353357672691345
    2. ' for' → logprob: -0.8603357672691345
    3. '   ' → logprob: -3.1103358268737793
    4. 'for' → logprob: -3.7353358268737793
    5. ' ' → logprob: -4.860335826873779
    6. '        
' → logprob: -5.235335826873779
    7. '<|end|>' → logprob: -5.485335826873779
    8. ' 
' → logprob: -6.110335826873779
    9. '	' → logprob: -6.360335826873779
    10. '    
' → logprob: -6.485335826873779

Token 214: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3224365711212158
    2. 'for' (adapté à ' for') → logprob: -1.3224365711212158
    3. '       ' → logprob: -4.822436332702637
    4. '   ' → logprob: -6.947436332702637
    5. '	for' → logprob: -9.197436332702637
    6. '           ' → logprob: -12.197436332702637
    7. ' ' → logprob: -12.447436332702637
    8. ' 
' → logprob: -12.572436332702637
    9. '    ' → logprob: -12.947436332702637
    10. '
' → logprob: -13.197436332702637

Token 215: ' cc' (ID: 22988)
  Prédit: 'box'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'box' → logprob: -0.4595709443092346
    2. 'x' → logprob: -1.0845708847045898
    3. ' box' → logprob: -3.58457088470459
    4. 'ci' → logprob: -6.83457088470459
    5. ' x' → logprob: -7.08457088470459
    6. 'v' → logprob: -7.95957088470459
    7. 'i' → logprob: -9.33457088470459
    8. 'idx' → logprob: -10.08457088470459
    9. '_box' → logprob: -10.08457088470459
    10. 'j' → logprob: -10.20957088470459

Token 216: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02977270446717739
    2. 'in' → logprob: -3.5297727584838867
    3. 'n' → logprob: -11.279772758483887
    4. ' ' → logprob: -12.529772758483887
    5. 's' → logprob: -13.279772758483887
    6. 'i' → logprob: -13.654772758483887
    7. 'c' → logprob: -14.029772758483887
    8. '_in' → logprob: -14.904772758483887
    9. '  ' → logprob: -15.154772758483887
    10. '   ' → logprob: -15.404772758483887

Token 217: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.10020806640386581
    2. ' c' → logprob: -2.350208044052124
    3. '   ' → logprob: -14.475208282470703
    4. '	c' → logprob: -14.850208282470703
    5. 'cc' → logprob: -15.600208282470703
    6. ' ' → logprob: -15.725208282470703
    7. ')c' → logprob: -15.975208282470703
    8. '(c' → logprob: -16.850208282470703
    9. '    ' → logprob: -17.350208282470703
    10. '  ' → logprob: -17.600208282470703

Token 218: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0887548103928566
    2. ':
' → logprob: -2.588754892349243
    3. '       ' → logprob: -4.963754653930664
    4. '<<' → logprob: -6.838754653930664
    5. '   ' → logprob: -6.963754653930664
    6. ' <<=' → logprob: -7.963754653930664
    7. '           ' → logprob: -8.463754653930664
    8. 's' → logprob: -10.088754653930664
    9. '|' → logprob: -10.213754653930664
    10. '):
' → logprob: -10.463754653930664

Token 219: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011060084216296673
    2. 's' → logprob: -5.5110602378845215
    3. ' s' → logprob: -5.6360602378845215
    4. '       ' → logprob: -5.8860602378845215
    5. '               ' → logprob: -8.011059761047363
    6. '<|end|>' → logprob: -9.761059761047363
    7. ',' → logprob: -10.136059761047363
    8. '	       ' → logprob: -10.511059761047363
    9. '        
' → logprob: -10.761059761047363
    10. '            
' → logprob: -11.011059761047363

Token 220: ' cc' (ID: 22988)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.15269622206687927
    2. 's' → logprob: -2.027696132659912
    3. '           ' → logprob: -4.652696132659912
    4. '               ' → logprob: -7.777696132659912
    5. '       ' → logprob: -12.27769660949707
    6. '   ' → logprob: -12.27769660949707
    7. '            ' → logprob: -12.77769660949707
    8. '                   ' → logprob: -13.02769660949707
    9. '          ' → logprob: -15.02769660949707
    10. ' ' → logprob: -15.40269660949707

Token 221: ' -=' (ID: 12583)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.7530993819236755
    2. '-=' → logprob: -0.7530993819236755
    3. ' -=' → logprob: -2.8780994415283203
    4. '=' → logprob: -7.50309944152832
    5. '   ' → logprob: -7.50309944152832
    6. '           ' → logprob: -8.12809944152832
    7. 's' → logprob: -9.12809944152832
    8. ' -' → logprob: -9.25309944152832
    9. '```' → logprob: -9.62809944152832
    10. '       ' → logprob: -9.62809944152832

Token 222: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014025058771949261
    2. ' ' → logprob: -8.875140190124512
    3. '   ' → logprob: -14.875140190124512
    4. '```' → logprob: -17.500141143798828
    5. '<|end|>' → logprob: -19.250141143798828
    6. 'def' → logprob: -19.437641143798828
    7. '１' → logprob: -19.750141143798828
    8. '  ' → logprob: -19.875141143798828
    9. '0' → logprob: -19.875141143798828
    10. ' ' → logprob: -20.000141143798828

Token 223: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '```' → logprob: -18.125001907348633
    4. '   ' → logprob: -18.750001907348633
    5. '１' → logprob: -20.500001907348633
    6. '`' → logprob: -20.687501907348633
    7. '۱' → logprob: -20.875001907348633
    8. 'def' → logprob: -21.000001907348633
    9. '<|end|>' → logprob: -21.062501907348633
    10. '১' → logprob: -21.187501907348633

Token 224: '        ' (ID: 269)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.3136597871780396
    2. '           ' → logprob: -1.6886597871780396
    3. '       ' → logprob: -1.6886597871780396
    4. 's' → logprob: -1.9386597871780396
    5. '<|end|>' → logprob: -2.18865966796875
    6. ' s' → logprob: -2.81365966796875
    7. ' 
' → logprob: -4.06365966796875
    8. '<<' → logprob: -4.31365966796875
    9. '   ' → logprob: -6.31365966796875
    10. ')' → logprob: -6.31365966796875

Token 225: ' #' (ID: 1069)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.043036408722400665
    2. '           ' → logprob: -4.168036460876465
    3. '
' → logprob: -4.293036460876465
    4. ' s' → logprob: -4.543036460876465
    5. '1' → logprob: -7.418036460876465
    6. '<|end|>' → logprob: -7.668036460876465
    7. '       ' → logprob: -7.918036460876465
    8. ' 
' → logprob: -8.793036460876465
    9. ' ' → logprob: -8.793036460876465
    10. ')' → logprob: -9.168036460876465

Token 226: ' Convert' (ID: 15629)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0019914438016712666
    2. ' s' → logprob: -6.251991271972656
    3. '1' → logprob: -9.876991271972656
    4. '           ' → logprob: -11.626991271972656
    5. ' ' → logprob: -14.001991271972656
    6. '```' → logprob: -14.251991271972656
    7. '<|end|>' → logprob: -15.626991271972656
    8. '   ' → logprob: -15.751991271972656
    9. '`s' → logprob: -15.876991271972656
    10. '       ' → logprob: -16.251991271972656

Token 227: ' to' (ID: 316)
  Prédit: 'cc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' → logprob: -0.015322266146540642
    2. 'to' → logprob: -4.515322208404541
    3. ' cc' → logprob: -5.765322208404541
    4. ' to' → logprob: -7.140322208404541
    5. '1' → logprob: -8.7653226852417
    6. '(cc' → logprob: -9.1403226852417
    7. ' ' → logprob: -11.0153226852417
    8. '	cc' → logprob: -11.0153226852417
    9. '```' → logprob: -11.2653226852417
    10. 'the' → logprob: -11.8903226852417

Token 228: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07134269177913666
    2. ' zero' → logprob: -3.321342706680298
    3. 'zero' → logprob: -4.321342468261719
    4. ' ' → logprob: -4.696342468261719
    5. 'cc' → logprob: -4.946342468261719
    6. ' cc' → logprob: -5.821342468261719
    7. '(cc' → logprob: -9.321342468261719
    8. '1' → logprob: -9.446342468261719
    9. 'bit' → logprob: -10.446342468261719
    10. ' (' → logprob: -11.071342468261719

Token 229: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06506621837615967
    2. 'zero' → logprob: -2.815066337585449
    3. ' zero' → logprob: -5.815066337585449
    4. ' ' → logprob: -9.69006633758545
    5. 'cc' → logprob: -9.94006633758545
    6. ' cc' → logprob: -14.56506633758545
    7. '(cc' → logprob: -14.56506633758545
    8. '   ' → logprob: -16.190065383911133
    9. '```' → logprob: -16.315065383911133
    10. 'index' → logprob: -16.690065383911133

Token 230: '-based' (ID: 8235)
  Prédit: '-based'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-based' → logprob: -0.1282021850347519
    2. 'based' → logprob: -2.128202199935913
    3. '-index' → logprob: -6.878201961517334
    4. ' based' → logprob: -8.628202438354492
    5. ' -' → logprob: -10.628202438354492
    6. 'indexed' → logprob: -10.628202438354492
    7. 'index' → logprob: -11.503202438354492
    8. '-' → logprob: -13.753202438354492
    9. '_based' → logprob: -13.753202438354492
    10. ' indexing' → logprob: -13.878202438354492

Token 231: ' indexing' (ID: 105989)
  Prédit: ' indexing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' indexing' → logprob: -0.3604094088077545
    2. 'index' → logprob: -1.6104093790054321
    3. 'indices' → logprob: -3.2354094982147217
    4. ' index' → logprob: -3.8604094982147217
    5. ' indices' → logprob: -3.9854094982147217
    6. '<|end|>' → logprob: -4.735409259796143
    7. 's' → logprob: -5.360409259796143
    8. '
' → logprob: -5.860409259796143
    9. '           ' → logprob: -6.735409259796143
    10. '       ' → logprob: -6.985409259796143

Token 232: '
' (ID: 198)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.350492924451828
    2. '<|end|>' → logprob: -2.2254929542541504
    3. '           ' → logprob: -2.3504929542541504
    4. ' s' → logprob: -2.4754929542541504
    5. '       ' → logprob: -5.72549295425415
    6. ')' → logprob: -6.35049295425415
    7. '
' → logprob: -6.85049295425415
    8. '<|end|>' → logprob: -7.22549295425415
    9. '            
' → logprob: -7.60049295425415
    10. ',' → logprob: -8.600492477416992

Token 233: '           ' (ID: 352)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.23700203001499176
    2. ' s' → logprob: -1.7370020151138306
    3. '           ' → logprob: -3.48700213432312
    4. '       ' → logprob: -5.487001895904541
    5. '   ' → logprob: -9.7370023727417
    6. '<|end|>' → logprob: -9.8620023727417
    7. '<<' → logprob: -11.3620023727417
    8. '               ' → logprob: -11.6120023727417
    9. '(s' → logprob: -11.7370023727417
    10. ' ' → logprob: -11.9870023727417

Token 234: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.002202240051701665
    2. ' s' → logprob: -6.127202033996582
    3. '           ' → logprob: -11.002202033996582
    4. '   ' → logprob: -15.002202033996582
    5. '       ' → logprob: -16.0022029876709
    6. ' ' → logprob: -17.8772029876709
    7. '`s' → logprob: -17.8772029876709
    8. '	s' → logprob: -18.0022029876709
    9. ' ' → logprob: -18.1272029876709
    10. '               ' → logprob: -18.3772029876709

Token 235: ' |=' (ID: 19917)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -0.0008055794751271605
    2. ' |=' → logprob: -7.125805377960205
    3. '=' → logprob: -14.250805854797363
    4. '   ' → logprob: -15.875805854797363
    5. '```' → logprob: -16.250804901123047
    6. '│' → logprob: -16.625804901123047
    7. '+=' → logprob: -17.125804901123047
    8. '|=
' → logprob: -17.500804901123047
    9. '|\' → logprob: -18.000804901123047
    10. ' |' → logprob: -18.125804901123047

Token 236: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04911355301737785
    2. '(' → logprob: -3.0491135120391846
    3. ' ' → logprob: -7.799113750457764
    4. ' (' → logprob: -9.299113273620605
    5. '   ' → logprob: -10.674113273620605
    6. '           ' → logprob: -13.924113273620605
    7. '
' → logprob: -16.049114227294922
    8. '       ' → logprob: -16.049114227294922
    9. '[' → logprob: -16.424114227294922
    10. '  ' → logprob: -16.674114227294922

Token 237: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.25194287300109863
    2. '(' → logprob: -1.5019428730010986
    3. ' (' → logprob: -11.62694263458252
    4. ' ' → logprob: -12.50194263458252
    5. '   ' → logprob: -14.25194263458252
    6. '
' → logprob: -15.50194263458252
    7. '[' → logprob: -16.376943588256836
    8. '```' → logprob: -16.626943588256836
    9. '           ' → logprob: -16.876943588256836
    10. '{' → logprob: -17.126943588256836

Token 238: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.38687533140182495
    2. ' <<' → logprob: -1.1368753910064697
    3. '<' → logprob: -13.76187515258789
    4. ' <<=' → logprob: -13.88687515258789
    5. '<<<' → logprob: -13.88687515258789
    6. '<<(' → logprob: -14.51187515258789
    7. ' ' → logprob: -15.51187515258789
    8. '()<<' → logprob: -15.88687515258789
    9. '           ' → logprob: -16.13687515258789
    10. '   ' → logprob: -16.26187515258789

Token 239: ' cc' (ID: 22988)
  Prédit: 'cc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' → logprob: -4.842555426876061e-06
    2. ' cc' → logprob: -12.250004768371582
    3. '	cc' → logprob: -21.8750057220459
    4. '(cc' → logprob: -22.2500057220459
    5. 'ccc' → logprob: -23.1250057220459
    6. '_cc' → logprob: -24.2500057220459
    7. 'ccd' → logprob: -24.7500057220459
    8. 'c' → logprob: -26.2500057220459
    9. 'cccc' → logprob: -26.2500057220459
    10. 'cd' → logprob: -27.1250057220459

Token 240: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3635603189468384
    2. '<|end|>' → logprob: -1.2385603189468384
    3. '<|end|>' → logprob: -4.988560199737549
    4. '   ' → logprob: -5.613560199737549
    5. '
' → logprob: -6.363560199737549
    6. '        
' → logprob: -6.863560199737549
    7. '  
' → logprob: -8.113560676574707
    8. '    
' → logprob: -8.113560676574707
    9. ')' → logprob: -8.488560676574707
    10. '\n' → logprob: -8.613560676574707

Token 241: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 242: ' Set' (ID: 3957)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.03614579513669014
    2. 'cc' → logprob: -3.5361456871032715
    3. ' s' → logprob: -5.1611456871032715
    4. ' cc' → logprob: -7.9111456871032715
    5. '1' → logprob: -9.03614616394043
    6. '```' → logprob: -10.53614616394043
    7. '<|end|>' → logprob: -10.78614616394043
    8. ' ' → logprob: -11.53614616394043
    9. 'ss' → logprob: -11.66114616394043
    10. ')' → logprob: -11.66114616394043

Token 243: ' the' (ID: 290)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.696060299873352
    2. 'cc' → logprob: -0.821060299873352
    3. ' s' → logprob: -3.8210601806640625
    4. 'the' → logprob: -3.9460601806640625
    5. ' the' → logprob: -4.3210601806640625
    6. ' cc' → logprob: -5.3210601806640625
    7. '(cc' → logprob: -6.6960601806640625
    8. 'bit' → logprob: -8.446060180664062
    9. '```' → logprob: -8.946060180664062
    10. '`' → logprob: -9.571060180664062

Token 244: ' bit' (ID: 3546)
  Prédit: 'cc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' → logprob: -0.16576693952083588
    2. 'bit' → logprob: -2.040766954421997
    3. ' bit' → logprob: -4.415766716003418
    4. 's' → logprob: -5.165766716003418
    5. ' cc' → logprob: -6.165766716003418
    6. 'cor' → logprob: -7.290766716003418
    7. ' corresponding' → logprob: -7.290766716003418
    8. 'box' → logprob: -7.915766716003418
    9. 'bits' → logprob: -7.915766716003418
    10. 'position' → logprob: -8.415766716003418

Token 245: ' corresponding' (ID: 21824)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 246: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.16142037510871887
    2. 'to' → logprob: -1.9114203453063965
    3. 'cc' → logprob: -7.4114203453063965
    4. 's' → logprob: -8.786420822143555
    5. ' cc' → logprob: -8.786420822143555
    6. '(cc' → logprob: -8.911420822143555
    7. ' ' → logprob: -9.786420822143555
    8. '<|end|>' → logprob: -9.911420822143555
    9. ' s' → logprob: -11.911420822143555
    10. '    ' → logprob: -12.036420822143555

Token 247: ' box' (ID: 5506)
  Prédit: 'cc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' → logprob: -0.03463084250688553
    2. ' cc' → logprob: -3.40963077545166
    3. 'the' → logprob: -7.40963077545166
    4. ' the' → logprob: -8.03463077545166
    5. 'box' → logprob: -10.78463077545166
    6. ' box' → logprob: -11.40963077545166
    7. 'that' → logprob: -11.53463077545166
    8. ' that' → logprob: -12.28463077545166
    9. '	cc' → logprob: -13.40963077545166
    10. '(cc' → logprob: -13.65963077545166

Token 248: ' cc' (ID: 22988)
  Prédit: 'cc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' → logprob: -0.00039289999403990805
    2. ' cc' → logprob: -7.875392913818359
    3. '(cc' → logprob: -11.75039291381836
    4. '_cc' → logprob: -14.12539291381836
    5. '           ' → logprob: -14.12539291381836
    6. 's' → logprob: -14.25039291381836
    7. '	cc' → logprob: -14.25039291381836
    8. '`' → logprob: -14.37539291381836
    9. '   ' → logprob: -14.37539291381836
    10. '```' → logprob: -14.87539291381836

Token 249: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 250: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05959010496735573
    2. '   ' → logprob: -3.8095901012420654
    3. '<|end|>' → logprob: -3.9345901012420654
    4. ',' → logprob: -4.6845903396606445
    5. ')' → logprob: -6.5595903396606445
    6. '        
' → logprob: -6.6845903396606445
    7. '	' → logprob: -7.3095903396606445
    8. ' keys' → logprob: -7.4345903396606445
    9. '
' → logprob: -7.5595903396606445
    10. '	keys' → logprob: -7.9345903396606445

Token 251: ' #' (ID: 1069)
  Prédit: ' keys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' keys' → logprob: -0.39633721113204956
    2. '       ' → logprob: -1.8963372707366943
    3. 'keys' → logprob: -2.0213372707366943
    4. '   ' → logprob: -3.1463372707366943
    5. '	keys' → logprob: -7.521337032318115
    6. '.keys' → logprob: -7.771337032318115
    7. '
' → logprob: -7.896337032318115
    8. '(keys' → logprob: -9.146337509155273
    9. '```' → logprob: -9.771337509155273
    10. ',' → logprob: -10.396337509155273

Token 252: ' Append' (ID: 58624)
  Prédit: 'keys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'keys' → logprob: -0.0005588700296357274
    2. ' keys' → logprob: -7.500558853149414
    3. '   ' → logprob: -12.375558853149414
    4. '       ' → logprob: -14.250558853149414
    5. '	keys' → logprob: -14.875558853149414
    6. '.keys' → logprob: -15.250558853149414
    7. '(keys' → logprob: -15.875558853149414
    8. '
' → logprob: -16.375558853149414
    9. '```' → logprob: -16.750558853149414
    10. 'key' → logprob: -17.125558853149414

Token 253: ' this' (ID: 495)
  Prédit: '(keys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(keys' → logprob: -0.050863053649663925
    2. ' (' → logprob: -3.050863027572632
    3. 'keys' → logprob: -6.425863265991211
    4. ' keys' → logprob: -7.425863265991211
    5. '   ' → logprob: -10.300863265991211
    6. '(key' → logprob: -10.925863265991211
    7. '(s' → logprob: -12.550863265991211
    8. '(a' → logprob: -14.300863265991211
    9. '	keys' → logprob: -14.800863265991211
    10. '(k' → logprob: -14.800863265991211

Token 254: ' key' (ID: 2140)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.8878967761993408
    2. ' keys' → logprob: -1.0128967761993408
    3. 'keys' → logprob: -2.262896776199341
    4. '(keys' → logprob: -2.262896776199341
    5. '(key' → logprob: -5.012896537780762
    6. '(' → logprob: -5.512896537780762
    7. ' key' → logprob: -5.887896537780762
    8. ',' → logprob: -6.762896537780762
    9. 'key' → logprob: -7.262896537780762
    10. '_keys' → logprob: -7.512896537780762

Token 255: ''s' (ID: 885)
  Prédit: '(keys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(keys' → logprob: -0.04275525361299515
    2. ' (' → logprob: -3.417755365371704
    3. ',' → logprob: -5.292755126953125
    4. '(' → logprob: -6.042755126953125
    5. '(s' → logprob: -7.417755126953125
    6. '   ' → logprob: -7.542755126953125
    7. 'keys' → logprob: -9.042755126953125
    8. '(key' → logprob: -9.542755126953125
    9. '.keys' → logprob: -9.792755126953125
    10. ' ,' → logprob: -10.042755126953125

Token 256: ' bit' (ID: 3546)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.4934861361980438
    2. ' (' → logprob: -0.9934861660003662
    3. 's' → logprob: -5.493485927581787
    4. ' coverage' → logprob: -6.118485927581787
    5. ' tuple' → logprob: -6.243485927581787
    6. '(key' → logprob: -6.368485927581787
    7. ' keys' → logprob: -6.493485927581787
    8. '(' → logprob: -6.868485927581787
    9. '(cost' → logprob: -6.993485927581787
    10. ' bit' → logprob: -7.243485927581787

Token 257: 'mask' (ID: 22527)
  Prédit: 'mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.0056451670825481415
    2. ' mask' → logprob: -6.005645275115967
    3. '_mask' → logprob: -6.130645275115967
    4. 's' → logprob: -8.130644798278809
    5. '   ' → logprob: -8.630644798278809
    6. ',' → logprob: -8.630644798278809
    7. ' (' → logprob: -9.130644798278809
    8. '(s' → logprob: -9.630644798278809
    9. '       ' → logprob: -10.130644798278809
    10. ' s' → logprob: -10.880644798278809

Token 258: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01856098882853985
    2. ' and' → logprob: -4.393560886383057
    3. 'and' → logprob: -5.268560886383057
    4. ',s' → logprob: -8.143561363220215
    5. ' ,' → logprob: -8.518561363220215
    6. 's' → logprob: -8.768561363220215
    7. ',
' → logprob: -9.393561363220215
    8. ',key' → logprob: -9.518561363220215
    9. '   ' → logprob: -10.643561363220215
    10. ',(' → logprob: -11.643561363220215

Token 259: ' cost' (ID: 3097)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.08897152543067932
    2. ' a' → logprob: -2.4639716148376465
    3. '(a' → logprob: -10.963971138000488
    4. 'cost' → logprob: -11.588971138000488
    5. ' cost' → logprob: -13.338971138000488
    6. ' (' → logprob: -13.338971138000488
    7. '   ' → logprob: -13.838971138000488
    8. '	a' → logprob: -14.713971138000488
    9. ' ' → logprob: -15.088971138000488
    10. ' ' → logprob: -16.338972091674805

Token 260: '
' (ID: 198)
  Prédit: '(keys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(keys' → logprob: -0.17708350718021393
    2. ',' → logprob: -2.6770834922790527
    3. 'keys' → logprob: -3.1770834922790527
    4. ' keys' → logprob: -3.6770834922790527
    5. ' (' → logprob: -4.302083492279053
    6. '   ' → logprob: -4.927083492279053
    7. ' ,' → logprob: -5.927083492279053
    8. '.keys' → logprob: -6.677083492279053
    9. ' to' → logprob: -6.927083492279053
    10. '       ' → logprob: -8.302083969116211

Token 261: '       ' (ID: 309)
  Prédit: 'keys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'keys' → logprob: -0.3007296323776245
    2. '(keys' → logprob: -1.6757296323776245
    3. '   ' → logprob: -3.550729751586914
    4. ',' → logprob: -3.800729751586914
    5. ' keys' → logprob: -4.425729751586914
    6. '       ' → logprob: -4.925729751586914
    7. '.keys' → logprob: -6.425729751586914
    8. '	keys' → logprob: -8.675729751586914
    9. ' to' → logprob: -8.800729751586914
    10. '(' → logprob: -9.675729751586914

Token 262: ' keys' (ID: 12994)
  Prédit: 'keys'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'keys' (adapté à ' keys') → logprob: -0.006795066874474287
    2. ' keys' → logprob: -5.0067949295043945
    3. '   ' → logprob: -9.756794929504395
    4. '       ' → logprob: -11.381794929504395
    5. '(keys' → logprob: -11.631794929504395
    6. '.keys' → logprob: -14.256794929504395
    7. '	keys' → logprob: -14.256794929504395
    8. '           ' → logprob: -17.38179588317871
    9. 'key' → logprob: -17.75679588317871
    10. '(' → logprob: -18.13179588317871

Token 263: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -2.093505099765025e-05
    2. '.' → logprob: -10.875020980834961
    3. ').' → logprob: -14.375020980834961
    4. '.app' → logprob: -14.625020980834961
    5. 'append' → logprob: -14.625020980834961
    6. '.ap' → logprob: -15.500020980834961
    7. '.Append' → logprob: -16.37502098083496
    8. '.push' → logprob: -17.37502098083496
    9. '.add' → logprob: -17.50002098083496
    10. '.setdefault' → logprob: -17.75002098083496

Token 264: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0015774748753756285
    2. '(' → logprob: -6.501577377319336
    3. '(s' → logprob: -9.501577377319336
    4. '   ' → logprob: -14.876577377319336
    5. ' ((' → logprob: -17.376577377319336
    6. '(
' → logprob: -17.626577377319336
    7. '(((' → logprob: -18.751577377319336
    8. ' (' → logprob: -19.126577377319336
    9. '(('' → logprob: -19.126577377319336
    10. '(("' → logprob: -19.626577377319336

Token 265: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -4.320199877838604e-07
    2. ' s' → logprob: -14.875
    3. '   ' → logprob: -17.875
    4. '(s' → logprob: -18.0
    5. '	s' → logprob: -20.375
    6. '_s' → logprob: -20.75
    7. ')' → logprob: -21.625
    8. '{s' → logprob: -21.625
    9. '`s' → logprob: -21.625
    10. '```' → logprob: -22.25

Token 266: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009206312242895365
    2. ',a' → logprob: -7.00092077255249
    3. ' ,' → logprob: -12.250920295715332
    4. 'a' → logprob: -12.375920295715332
    5. ',
' → logprob: -15.875920295715332
    6. '   ' → logprob: -17.62592124938965
    7. ' a' → logprob: -18.12592124938965
    8. ',

' → logprob: -18.12592124938965
    9. '‌,' → logprob: -18.25092124938965
    10. '),' → logprob: -18.87592124938965

Token 267: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0005530327325686812
    2. ' a' → logprob: -7.500553131103516
    3. '   ' → logprob: -16.250553131103516
    4. ' ' → logprob: -18.750553131103516
    5. '	a' → logprob: -18.750553131103516
    6. '_a' → logprob: -20.125553131103516
    7. '    ' → logprob: -20.375553131103516
    8. ')a' → logprob: -20.375553131103516
    9. '  ' → logprob: -20.750553131103516
    10. ' ' → logprob: -20.875553131103516

Token 268: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.011067037470638752
    2. ')' → logprob: -4.511066913604736
    3. '))
' → logprob: -11.011067390441895
    4. ')
' → logprob: -14.136067390441895
    5. ')))' → logprob: -14.386067390441895
    6. '),' → logprob: -14.511067390441895
    7. ' ))' → logprob: -14.886067390441895
    8. '));' → logprob: -15.261067390441895
    9. ')}' → logprob: -16.511066436767578
    10. ' )' → logprob: -16.761066436767578

Token 269: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16723109781742096
    2. 'dp' → logprob: -1.9172310829162598
    3. '
' → logprob: -5.04223108291626
    4. '```' → logprob: -8.417231559753418
    5. '    
' → logprob: -9.042231559753418
    6. 'DP' → logprob: -9.542231559753418
    7. ' dp' → logprob: -9.792231559753418
    8. 'max' → logprob: -11.292231559753418
    9. '#' → logprob: -11.792231559753418
    10. '	dp' → logprob: -12.042231559753418

Token 270: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6132529973983765
    2. '   ' → logprob: -0.8632529973983765
    3. '#' (adapté à ' #') → logprob: -3.613253116607666
    4. 'INF' → logprob: -4.738253116607666
    5. 'DP' → logprob: -7.863253116607666
    6. 'import' → logprob: -8.863252639770508
    7. '
' → logprob: -9.113252639770508
    8. '    
' → logprob: -9.238252639770508
    9. 'max' → logprob: -9.738252639770508
    10. 'from' → logprob: -9.988252639770508

Token 271: ' Dynamic' (ID: 37191)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.10611708462238312
    2. 'INF' → logprob: -2.356117010116577
    3. '#' → logprob: -5.731117248535156
    4. 'MAX' → logprob: -6.731117248535156
    5. 'max' → logprob: -7.231117248535156
    6. 'from' → logprob: -8.231117248535156
    7. 'import' → logprob: -8.606117248535156
    8. 'DP' → logprob: -8.981117248535156
    9. '   ' → logprob: -9.231117248535156
    10. 'inf' → logprob: -10.231117248535156

Token 272: ' Programming' (ID: 65103)
  Prédit: ' programming'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' programming' → logprob: -0.29316446185112
    2. 'program' → logprob: -1.6681644916534424
    3. '_program' → logprob: -2.9181644916534424
    4. 'prog' → logprob: -5.168164253234863
    5. '   ' → logprob: -5.918164253234863
    6. 'Programming' → logprob: -6.543164253234863
    7. 'import' → logprob: -7.293164253234863
    8. '_prog' → logprob: -7.793164253234863
    9. ' Programming' → logprob: -8.918164253234863
    10. 'dp' → logprob: -8.918164253234863

Token 273: ' table' (ID: 3293)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7554524540901184
    2. 'dp' → logprob: -1.1304523944854736
    3. ' dp' → logprob: -1.6304523944854736
    4. '
' → logprob: -4.880452632904053
    5. 'DP' → logprob: -7.005452632904053
    6. ' DP' → logprob: -7.130452632904053
    7. '    
' → logprob: -7.255452632904053
    8. '_dp' → logprob: -8.005452156066895
    9. 'INF' → logprob: -8.505452156066895
    10. '	dp' → logprob: -8.630452156066895

Token 274: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5863680243492126
    2. 'dp' → logprob: -0.8363680243492126
    3. ' dp' → logprob: -4.586368083953857
    4. 'DP' → logprob: -9.8363676071167
    5. '	dp' → logprob: -10.0863676071167
    6. 'import' → logprob: -10.9613676071167
    7. '_dp' → logprob: -10.9613676071167
    8. '
' → logprob: -10.9613676071167
    9. ' DP' → logprob: -11.9613676071167
    10. '```' → logprob: -12.0863676071167

Token 275: '   ' (ID: 271)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.17633934319019318
    2. 'dp' → logprob: -2.3013393878936768
    3. '   ' → logprob: -2.8013393878936768
    4. ' DP' → logprob: -7.676339149475098
    5. 'DP' → logprob: -8.926339149475098
    6. ' import' → logprob: -9.426339149475098
    7. 'import' → logprob: -9.551339149475098
    8. '	dp' → logprob: -11.301339149475098
    9. '_dp' → logprob: -11.426339149475098
    10. '```' → logprob: -11.676339149475098

Token 276: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3470202386379242
    2. ' dp' → logprob: -1.4720202684402466
    3. '   ' → logprob: -2.847020149230957
    4. 'INF' → logprob: -5.847020149230957
    5. ' INF' → logprob: -6.097020149230957
    6. 'import' → logprob: -8.972020149230957
    7. ' from' → logprob: -9.222020149230957
    8. 'DP' → logprob: -9.472020149230957
    9. ' import' → logprob: -9.722020149230957
    10. ' DP' → logprob: -9.972020149230957

Token 277: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.005895730573683977
    2. 'INF' → logprob: -5.380895614624023
    3. '   ' → logprob: -7.005895614624023
    4. ' dp' → logprob: -8.880895614624023
    5. 'from' → logprob: -9.630895614624023
    6. '#' → logprob: -9.880895614624023
    7. 'max' → logprob: -10.005895614624023
    8. 'import' → logprob: -11.005895614624023
    9. 'inf' → logprob: -11.130895614624023
    10. 'DP' → logprob: -11.380895614624023

Token 278: '[state' (ID: 134476)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0001468067930545658
    2. '=' → logprob: -8.875146865844727
    3. '   ' → logprob: -12.250146865844727
    4. '=[' → logprob: -14.625146865844727
    5. '_size' → logprob: -15.000146865844727
    6. ' ' → logprob: -15.000146865844727
    7. ' =[' → logprob: -15.250146865844727
    8. 'size' → logprob: -15.250146865844727
    9. '```' → logprob: -15.500146865844727
    10. '[' → logprob: -16.625146865844727

Token 279: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0027507843915373087
    2. ' =' → logprob: -6.127750873565674
    3. '])' → logprob: -8.627750396728516
    4. ')' → logprob: -8.752750396728516
    5. ']=' → logprob: -9.377750396728516
    6. ' ]' → logprob: -9.877750396728516
    7. '=' → logprob: -10.252750396728516
    8. '   ' → logprob: -11.127750396728516
    9. '[' → logprob: -11.127750396728516
    10. '][' → logprob: -12.127750396728516

Token 280: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016036715358495712
    2. '=' → logprob: -4.141036510467529
    3. '   ' → logprob: -13.266036987304688
    4. '=[' → logprob: -15.391036987304688
    5. '[' → logprob: -15.766036987304688
    6. ' ' → logprob: -16.266036987304688
    7. ']' → logprob: -16.766036987304688
    8. ' =[' → logprob: -16.766036987304688
    9. '  ' → logprob: -17.016036987304688
    10. ')' → logprob: -17.641036987304688

Token 281: ' minimal' (ID: 19957)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.000511091377120465
    2. '0' → logprob: -8.125511169433594
    3. 'inf' → logprob: -9.000511169433594
    4. ' float' → logprob: -9.750511169433594
    5. '-' → logprob: -11.000511169433594
    6. '   ' → logprob: -12.125511169433594
    7. '10' → logprob: -12.125511169433594
    8. '(float' → logprob: -13.375511169433594
    9. '<float' → logprob: -14.375511169433594
    10. '	float' → logprob: -14.625511169433594

Token 282: ' cost' (ID: 3097)
  Prédit: '_cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.1767539083957672
    2. ' cost' → logprob: -1.9267538785934448
    3. 'cost' → logprob: -4.426753997802734
    4. '_' → logprob: -5.676753997802734
    5. ' _' → logprob: -7.551753997802734
    6. '   ' → logprob: -8.551753997802734
    7. ' =' → logprob: -8.801753997802734
    8. '_price' → logprob: -10.551753997802734
    9. 'dp' → logprob: -10.801753997802734
    10. ')' → logprob: -11.051753997802734

Token 283: ' required' (ID: 3759)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.024424880743026733
    2. '   ' → logprob: -3.8994247913360596
    3. '[state' → logprob: -6.899425029754639
    4. '=' → logprob: -7.024425029754639
    5. '[' → logprob: -7.399425029754639
    6. 'dp' → logprob: -7.524425029754639
    7. ' for' → logprob: -8.14942455291748
    8. ' dp' → logprob: -9.27442455291748
    9. '_dp' → logprob: -9.27442455291748
    10. '<|end|>' → logprob: -9.89942455291748

Token 284: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.3613770008087158
    2. '   ' → logprob: -1.6113770008087158
    3. ' =' → logprob: -2.611377000808716
    4. 'to' → logprob: -4.236376762390137
    5. ' for' → logprob: -5.111376762390137
    6. '=' → logprob: -5.361376762390137
    7. 'for' → logprob: -6.986376762390137
    8. '[' → logprob: -7.111376762390137
    9. 'dp' → logprob: -7.111376762390137
    10. ')' → logprob: -7.486376762390137

Token 285: ' reach' (ID: 7627)
  Prédit: 'open'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'open' → logprob: -0.1823202520608902
    2. 'unlock' → logprob: -2.4323203563690186
    3. ' open' → logprob: -3.5573203563690186
    4. 'reach' → logprob: -4.3073201179504395
    5. 'cover' → logprob: -4.8073201179504395
    6. ' reach' → logprob: -4.9323201179504395
    7. ' unlock' → logprob: -5.0573201179504395
    8. ' cover' → logprob: -5.0573201179504395
    9. 'ach' → logprob: -5.6823201179504395
    10. 'state' → logprob: -6.3073201179504395

Token 286: ' '' (ID: 461)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.5344626307487488
    2. ' state' → logprob: -0.9094626307487488
    3. ' that' → logprob: -5.0344624519348145
    4. '[state' → logprob: -6.1594624519348145
    5. 'that' → logprob: -7.2844624519348145
    6. ' the' → logprob: -7.2844624519348145
    7. ' a' → logprob: -7.6594624519348145
    8. '   ' → logprob: -8.784462928771973
    9. ' `' → logprob: -9.034462928771973
    10. '`' → logprob: -9.284462928771973

Token 287: 'state' (ID: 5294)
  Prédit: 'state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.00867011770606041
    2. ' state' → logprob: -4.758670330047607
    3. '   ' → logprob: -11.00866985321045
    4. ''' → logprob: -11.13366985321045
    5. '`' → logprob: -12.38366985321045
    6. '[state' → logprob: -12.63366985321045
    7. ' ' → logprob: -13.38366985321045
    8. '```' → logprob: -13.50866985321045
    9. 'all' → logprob: -13.63366985321045
    10. '	state' → logprob: -13.75866985321045

Token 288: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5821301937103271
    2. ']' → logprob: -1.0821301937103271
    3. '   ' → logprob: -3.332130193710327
    4. ']'' → logprob: -3.582130193710327
    5. '"' → logprob: -4.332130432128906
    6. '']' → logprob: -4.582130432128906
    7. ' =' → logprob: -5.582130432128906
    8. ' with' → logprob: -5.957130432128906
    9. ',' → logprob: -6.707130432128906
    10. ')' → logprob: -6.707130432128906

Token 289: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3372225761413574
    2. ' =' → logprob: -1.3372225761413574
    3. 'dp' → logprob: -4.087222576141357
    4. ' dp' → logprob: -5.587222576141357
    5. '
' → logprob: -6.587222576141357
    6. '=' → logprob: -6.962222576141357
    7. '_dp' → logprob: -8.587223052978516
    8. ',' → logprob: -8.712223052978516
    9. '(dp' → logprob: -9.087223052978516
    10. '    
' → logprob: -9.462223052978516

Token 290: 'which' (ID: 13980)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1544649600982666
    2. ' where' → logprob: -1.5294649600982666
    3. ' all' → logprob: -1.9044649600982666
    4. 'where' → logprob: -2.2794649600982666
    5. 'state' → logprob: -2.9044649600982666
    6. 'all' → logprob: -3.4044649600982666
    7. '   ' → logprob: -3.6544649600982666
    8. ' a' → logprob: -4.1544647216796875
    9. 'a' → logprob: -4.2794647216796875
    10. ' state' → logprob: -4.4044647216796875

Token 291: ' boxes' (ID: 21967)
  Prédit: ' represents'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' represents' → logprob: -0.21152402460575104
    2. 'rep' → logprob: -2.21152400970459
    3. ' is' → logprob: -3.58652400970459
    4. ' means' → logprob: -4.33652400970459
    5. 'is' → logprob: -4.58652400970459
    6. 'means' → logprob: -5.33652400970459
    7. ' corresponds' → logprob: -5.46152400970459
    8. ' contains' → logprob: -5.46152400970459
    9. ')' → logprob: -5.58652400970459
    10. ' has' → logprob: -5.83652400970459

Token 292: ' opened' (ID: 13906)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.9067222476005554
    2. '_' → logprob: -1.5317223072052002
    3. '_open' → logprob: -2.1567223072052
    4. '_un' → logprob: -2.6567223072052
    5. 'opened' → logprob: -3.0317223072052
    6. ' have' → logprob: -3.6567223072052
    7. '_are' → logprob: -3.6567223072052
    8. '   ' → logprob: -3.9067223072052
    9. ')' → logprob: -3.9067223072052
    10. ' opened' → logprob: -4.156722068786621

Token 293: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0019057857571169734
    2. '])' → logprob: -7.126905918121338
    3. '_states' → logprob: -8.50190544128418
    4. ']' → logprob: -9.12690544128418
    5. ' )' → logprob: -9.12690544128418
    6. '_)' → logprob: -9.37690544128418
    7. ')_' → logprob: -9.37690544128418
    8. '   ' → logprob: -9.62690544128418
    9. '`)' → logprob: -9.87690544128418
    10. '[])' → logprob: -9.87690544128418

Token 294: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14809805154800415
    2. ' =' → logprob: -2.1480979919433594
    3. 'dp' → logprob: -4.398097991943359
    4. ' dp' → logprob: -5.023097991943359
    5. '=' → logprob: -6.898097991943359
    6. '_dp' → logprob: -7.773097991943359
    7. '
' → logprob: -8.14809799194336
    8. '    
' → logprob: -9.39809799194336
    9. '```' → logprob: -9.64809799194336
    10. '	dp' → logprob: -10.02309799194336

Token 295: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.3351365327835083
    2. '   ' → logprob: -1.3351365327835083
    3. ' dp' → logprob: -3.8351364135742188
    4. '
' → logprob: -11.585136413574219
    5. 'import' → logprob: -11.835136413574219
    6. '```' → logprob: -11.835136413574219
    7. '	dp' → logprob: -11.960136413574219
    8. '_dp' → logprob: -12.210136413574219
    9. ' ' → logprob: -13.835136413574219
    10. '    
' → logprob: -14.085136413574219

Token 296: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014174322597682476
    2. '=' → logprob: -4.264174461364746
    3. '[' → logprob: -11.889174461364746
    4. ')' → logprob: -13.014174461364746
    5. '=[' → logprob: -14.014174461364746
    6. ']' → logprob: -14.514174461364746
    7. '```' → logprob: -15.764174461364746
    8. ' =[' → logprob: -15.889174461364746
    9. '<|end|>' → logprob: -17.13917350769043
    10. '.' → logprob: -17.38917350769043

Token 297: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.787507714354433e-05
    2. ' [' → logprob: -10.00004768371582
    3. '{' → logprob: -13.62504768371582
    4. '[int' → logprob: -14.50004768371582
    5. '[-' → logprob: -15.12504768371582
    6. '   ' → logprob: -15.62504768371582
    7. '[min' → logprob: -16.25004768371582
    8. '[a' → logprob: -17.25004768371582
    9. '[len' → logprob: -18.00004768371582
    10. '[self' → logprob: -18.12504768371582

Token 298: 'float' (ID: 7829)
  Prédit: 'float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.0011717714369297028
    2. '10' → logprob: -6.751171588897705
    3. ' float' → logprob: -14.376172065734863
    4. '-' → logprob: -14.501172065734863
    5. '(float' → logprob: -14.626172065734863
    6. 'int' → logprob: -17.376171112060547
    7. 'flo' → logprob: -18.501171112060547
    8. '(' → logprob: -18.751171112060547
    9. 'pow' → logprob: -19.251171112060547
    10. '1' → logprob: -19.376171112060547

Token 299: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0021033943630754948
    2. ''in' → logprob: -6.252103328704834
    3. ''' → logprob: -8.877103805541992
    4. '("' → logprob: -11.127103805541992
    5. ''s' → logprob: -11.377103805541992
    6. '(' → logprob: -13.377103805541992
    7. '   ' → logprob: -13.377103805541992
    8. ''inc' → logprob: -14.252103805541992
    9. 'inf' → logprob: -14.377103805541992
    10. ''d' → logprob: -14.502103805541992

Token 300: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.0019476758316159248
    2. ''' → logprob: -6.25194787979126
    3. ''in' → logprob: -11.126947402954102
    4. '"' → logprob: -13.376947402954102
    5. 'in' → logprob: -14.001947402954102
    6. ''s' → logprob: -14.001947402954102
    7. '('' → logprob: -14.751947402954102
    8. 'info' → logprob: -15.501947402954102
    9. ''n' → logprob: -15.876947402954102
    10. '`' → logprob: -17.0019474029541

Token 301: '')]' (ID: 94377)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.253424733877182
    2. '')]' → logprob: -1.5034247636795044
    3. ']' → logprob: -7.128424644470215
    4. ')' → logprob: -7.503424644470215
    5. '')' → logprob: -9.503424644470215
    6. '")]' → logprob: -10.378424644470215
    7. '']' → logprob: -10.753424644470215
    8. ''' → logprob: -12.628424644470215
    9. '}]' → logprob: -13.128424644470215
    10. ' )' → logprob: -13.253424644470215

Token 302: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.033298809081315994
    2. ' *' → logprob: -4.033298969268799
    3. ']*(' → logprob: -4.908298969268799
    4. '*' → logprob: -6.033298969268799
    5. '*(' → logprob: -6.408298969268799
    6. ' for' → logprob: -6.533298969268799
    7. ']*' → logprob: -7.033298969268799
    8. '   ' → logprob: -7.283298969268799
    9. 'for' → logprob: -9.03329849243164
    10. ',' → logprob: -9.40829849243164

Token 303: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -5.676981345459353e-06
    2. ' (' → logprob: -12.375005722045898
    3. '   ' → logprob: -13.875005722045898
    4. '((' → logprob: -14.625005722045898
    5. '
' → logprob: -19.5000057220459
    6. '\(' → logprob: -19.7500057220459
    7. '```' → logprob: -20.5000057220459
    8. '(max' → logprob: -21.1250057220459
    9. '(int' → logprob: -21.2500057220459
    10. '(pow' → logprob: -21.5000057220459

Token 304: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0011712945997714996
    2. '(' → logprob: -6.751171112060547
    3. '   ' → logprob: -13.876171112060547
    4. ' ' → logprob: -16.376171112060547
    5. '2' → logprob: -16.751171112060547
    6. ' (' → logprob: -18.626171112060547
    7. '{' → logprob: -18.751171112060547
    8. '```' → logprob: -18.876171112060547
    9. '[' → logprob: -19.501171112060547
    10. '`' → logprob: -19.751171112060547

Token 305: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.4741708040237427
    2. ' <<' → logprob: -0.9741708040237427
    3. '1' → logprob: -10.099170684814453
    4. '<<(' → logprob: -10.224170684814453
    5. ' ' → logprob: -11.599170684814453
    6. '   ' → logprob: -12.849170684814453
    7. '2' → logprob: -12.974170684814453
    8. '<' → logprob: -14.474170684814453
    9. '0' → logprob: -14.599170684814453
    10. '<<<' → logprob: -15.724170684814453

Token 306: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -1.2664456789934775e-06
    2. ' N' → logprob: -13.750000953674316
    3. '   ' → logprob: -16.000001907348633
    4. '	N' → logprob: -17.875001907348633
    5. 'n' → logprob: -18.375001907348633
    6. '(N' → logprob: -18.875001907348633
    7. '```' → logprob: -19.375001907348633
    8. '`' → logprob: -19.875001907348633
    9. '_N' → logprob: -20.250001907348633
    10. ' ' → logprob: -20.750001907348633

Token 307: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.574251918005757e-05
    2. ')
' → logprob: -9.875055313110352
    3. ' )' → logprob: -12.625055313110352
    4. ')
' → logprob: -15.250055313110352
    5. ')

' → logprob: -15.375055313110352
    6. ')`' → logprob: -15.375055313110352
    7. '   ' → logprob: -15.875055313110352
    8. '))' → logprob: -16.75005531311035
    9. '),' → logprob: -17.12505531311035
    10. ']' → logprob: -18.12505531311035

Token 308: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.003484962275251746
    2. '   ' → logprob: -5.753484725952148
    3. ' dp' → logprob: -8.878484725952148
    4. '```' → logprob: -9.253484725952148
    5. '	dp' → logprob: -10.753484725952148
    6. '
' → logprob: -11.253484725952148
    7. '    
' → logprob: -11.378484725952148
    8. '(dp' → logprob: -11.503484725952148
    9. '[' → logprob: -12.503484725952148
    10. '\n' → logprob: -12.753484725952148

Token 309: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -2.8921695047756657e-05
    2. '   ' → logprob: -10.500028610229492
    3. ' dp' → logprob: -13.625028610229492
    4. '	dp' → logprob: -17.000028610229492
    5. '```' → logprob: -17.125028610229492
    6. '_dp' → logprob: -20.000028610229492
    7. '`' → logprob: -20.125028610229492
    8. '(dp' → logprob: -21.250028610229492
    9. 'dt' → logprob: -21.500028610229492
    10. '[' → logprob: -21.750028610229492

Token 310: ' Base' (ID: 8729)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -5.512236498361744e-07
    2. ' dp' → logprob: -14.500000953674316
    3. 'import' → logprob: -17.625
    4. '```' → logprob: -17.75
    5. '	dp' → logprob: -18.25
    6. '   ' → logprob: -19.125
    7. '0' → logprob: -19.75
    8. 'from' → logprob: -20.25
    9. '`' → logprob: -20.375
    10. 'dc' → logprob: -20.5

Token 311: ' case' (ID: 1890)
  Prédit: '_dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_dp' → logprob: -0.7123580574989319
    2. 'dp' → logprob: -0.9623580574989319
    3. '   ' → logprob: -2.837357997894287
    4. '_state' → logprob: -3.712357997894287
    5. ' dp' → logprob: -4.087357997894287
    6. '[' → logprob: -4.337357997894287
    7. 'state' → logprob: -4.962357997894287
    8. '```' → logprob: -6.462357997894287
    9. ' state' → logprob: -6.587357997894287
    10. '[state' → logprob: -7.087357997894287

Token 312: ':' (ID: 25)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.008020617999136448
    2. ' dp' → logprob: -5.133020401000977
    3. '[' → logprob: -6.883020401000977
    4. '   ' → logprob: -7.008020401000977
    5. '(dp' → logprob: -9.758020401000977
    6. '	dp' → logprob: -9.758020401000977
    7. '_dp' → logprob: -10.633020401000977
    8. '
' → logprob: -11.008020401000977
    9. '    
' → logprob: -13.758020401000977
    10. '.dp' → logprob: -13.883020401000977

Token 313: ' cost' (ID: 3097)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0003357006062287837
    2. ' dp' → logprob: -8.000335693359375
    3. '   ' → logprob: -15.750335693359375
    4. '0' → logprob: -16.875335693359375
    5. '	dp' → logprob: -17.375335693359375
    6. '_dp' → logprob: -20.000335693359375
    7. '[' → logprob: -20.250335693359375
    8. '(dp' → logprob: -20.375335693359375
    9. 'd' → logprob: -21.375335693359375
    10. 'dc' → logprob: -21.375335693359375

Token 314: ' to' (ID: 316)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.391927033662796
    2. '[' → logprob: -1.3919270038604736
    3. '   ' → logprob: -3.5169270038604736
    4. ' dp' → logprob: -3.6419270038604736
    5. ' for' → logprob: -5.141927242279053
    6. ' to' → logprob: -5.391927242279053
    7. ' =' → logprob: -5.391927242279053
    8. ' of' → logprob: -6.641927242279053
    9. 's' → logprob: -6.891927242279053
    10. 'for' → logprob: -7.141927242279053

Token 315: ' open' (ID: 2494)
  Prédit: 'open'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'open' → logprob: -0.11728428304195404
    2. ' open' → logprob: -2.4922842979431152
    3. ' reach' → logprob: -4.492284297943115
    4. 'reach' → logprob: -5.117284297943115
    5. '0' → logprob: -5.242284297943115
    6. 'unlock' → logprob: -5.742284297943115
    7. 'dp' → logprob: -7.367284297943115
    8. '   ' → logprob: -7.742284297943115
    9. ' unlock' → logprob: -8.242283821105957
    10. ' ' → logprob: -8.367283821105957

Token 316: ' no' (ID: 860)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5813515186309814
    2. 'no' → logprob: -1.0813515186309814
    3. ' no' → logprob: -2.3313515186309814
    4. 'dp' → logprob: -6.456351280212402
    5. 'all' → logprob: -6.956351280212402
    6. ' ' → logprob: -7.081351280212402
    7. 'none' → logprob: -7.456351280212402
    8. 'state' → logprob: -8.831351280212402
    9. 'nothing' → logprob: -8.956351280212402
    10. '   ' → logprob: -9.206351280212402

Token 317: ' boxes' (ID: 21967)
  Prédit: ' boxes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' boxes' → logprob: -0.08097285777330399
    2. 'boxes' → logprob: -3.330972909927368
    3. '_boxes' → logprob: -3.330972909927368
    4. '_' → logprob: -5.205972671508789
    5. '_box' → logprob: -8.455972671508789
    6. 'box' → logprob: -8.580972671508789
    7. ' box' → logprob: -8.580972671508789
    8. ' _' → logprob: -9.080972671508789
    9. 'b' → logprob: -10.705972671508789
    10. ' ' → logprob: -10.955972671508789

Token 318: ' is' (ID: 382)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.41587352752685547
    2. ' is' → logprob: -1.5408735275268555
    3. ' dp' → logprob: -2.5408735275268555
    4. ' =' → logprob: -3.4158735275268555
    5. 'is' → logprob: -4.9158735275268555
    6. '   ' → logprob: -5.2908735275268555
    7. '=' → logprob: -6.2908735275268555
    8. '(dp' → logprob: -9.415873527526855
    9. '[' → logprob: -10.540873527526855
    10. '	dp' → logprob: -10.790873527526855

Token 319: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009117019944824278
    2. ' ' → logprob: -7.000911712646484
    3. '   ' → logprob: -15.125911712646484
    4. ' ' → logprob: -21.000911712646484
    5. 'zero' → logprob: -21.000911712646484
    6. '  ' → logprob: -21.125911712646484
    7. ' zero' → logprob: -21.375911712646484
    8. '    ' → logprob: -21.750911712646484
    9. '۰' → logprob: -22.750911712646484
    10. '000' → logprob: -23.000911712646484

Token 320: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.107425062713446e-06
    2. ' ' → logprob: -11.875006675720215
    3. '   ' → logprob: -16.25000762939453
    4. 'zero' → logprob: -17.75000762939453
    5. '```' → logprob: -20.87500762939453
    6. '`' → logprob: -21.50000762939453
    7. '  ' → logprob: -21.62500762939453
    8. '=' → logprob: -21.87500762939453
    9. '000' → logprob: -21.87500762939453
    10. '
' → logprob: -21.87500762939453

Token 321: '
' (ID: 198)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.05607815831899643
    2. '   ' → logprob: -3.0560781955718994
    3. '
' → logprob: -5.30607795715332
    4. ' dp' → logprob: -6.05607795715332
    5. '	dp' → logprob: -9.30607795715332
    6. '    
' → logprob: -10.30607795715332
    7. '(dp' → logprob: -11.05607795715332
    8. '_dp' → logprob: -12.05607795715332
    9. '[' → logprob: -12.68107795715332
    10. '  
' → logprob: -13.05607795715332

Token 322: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.09201888740062714
    2. '   ' → logprob: -2.5920188426971436
    3. ' dp' → logprob: -4.342019081115723
    4. '	dp' → logprob: -10.717019081115723
    5. '```' → logprob: -12.092019081115723
    6. ' ' → logprob: -13.342019081115723
    7. '`' → logprob: -13.967019081115723
    8. '(dp' → logprob: -14.092019081115723
    9. '_dp' → logprob: -14.342019081115723
    10. '    
' → logprob: -14.592019081115723

Token 323: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -8.061054359131958e-06
    2. ' dp' → logprob: -11.750007629394531
    3. '   ' → logprob: -16.25000762939453
    4. '	dp' → logprob: -20.75000762939453
    5. '```' → logprob: -22.37500762939453
    6. '_dp' → logprob: -23.50000762939453
    7. 'dc' → logprob: -24.00000762939453
    8. '`' → logprob: -24.12500762939453
    9. ' ' → logprob: -24.25000762939453
    10. 'dt' → logprob: -24.25000762939453

Token 324: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.981667537620524e-06
    2. ' [' → logprob: -13.375001907348633
    3. '\[' → logprob: -15.500001907348633
    4. '0' → logprob: -15.875001907348633
    5. '   ' → logprob: -17.625001907348633
    6. '[
' → logprob: -19.750001907348633
    7. ' ' → logprob: -20.125001907348633
    8. '```' → logprob: -20.375001907348633
    9. '=' → logprob: -20.500001907348633
    10. ' =' → logprob: -20.625001907348633

Token 325: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. '   ' → logprob: -17.25
    4. '000' → logprob: -19.25
    5. '00' → logprob: -19.375
    6. ')' → logprob: -19.875
    7. '       ' → logprob: -20.25
    8. '(' → logprob: -20.875
    9. '     ' → logprob: -20.875
    10. '    ' → logprob: -21.0

Token 326: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -3.845798710244708e-05
    2. ')' → logprob: -10.375038146972656
    3. ' ]' → logprob: -12.875038146972656
    4. ')]' → logprob: -12.875038146972656
    5. '])' → logprob: -13.625038146972656
    6. ']=' → logprob: -14.000038146972656
    7. '[' → logprob: -17.750038146972656
    8. ']
' → logprob: -18.875038146972656
    9. '`]' → logprob: -19.250038146972656
    10. '   ' → logprob: -19.625038146972656

Token 327: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03804149478673935
    2. ' =' → logprob: -3.288041591644287
    3. '＝' → logprob: -18.663042068481445
    4. ' ' → logprob: -19.538042068481445
    5. '.=' → logprob: -19.538042068481445
    6. ')=' → logprob: -19.538042068481445
    7. '=

' → logprob: -20.038042068481445
    8. '=}' → logprob: -20.163042068481445
    9. '[' → logprob: -20.288042068481445
    10. '=
' → logprob: -20.413042068481445

Token 328: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -16.875
    3. '   ' → logprob: -22.0
    4. '000' → logprob: -23.0
    5. '00' → logprob: -23.625
    6. '۰' → logprob: -24.375
    7. '```' → logprob: -24.5
    8. '  ' → logprob: -26.25
    9. '=' → logprob: -26.375
    10. '`' → logprob: -26.625

Token 329: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -19.875
    3. '00' → logprob: -24.0
    4. '000' → logprob: -24.25
    5. '```' → logprob: -25.125
    6. '۰' → logprob: -25.375
    7. '   ' → logprob: -25.625
    8. '=' → logprob: -26.875
    9. '1' → logprob: -27.125
    10. '０' → logprob: -27.125

Token 330: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1307903230190277
    2. ' for' → logprob: -2.3807902336120605
    3. 'for' → logprob: -4.1307902336120605
    4. '
' → logprob: -4.5057902336120605
    5. '    
' → logprob: -6.5057902336120605
    6. '<|end|>' → logprob: -6.7557902336120605
    7. '	for' → logprob: -9.380790710449219
    8. '```' → logprob: -9.505790710449219
    9. ' 
' → logprob: -9.630790710449219
    10. '  
' → logprob: -9.755790710449219

Token 331: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04352307319641113
    2. 'for' → logprob: -3.543523073196411
    3. ' for' → logprob: -4.293522834777832
    4. '```' → logprob: -10.793522834777832
    5. '       ' → logprob: -15.168522834777832
    6. '
' → logprob: -15.293522834777832
    7. '	for' → logprob: -15.668522834777832
    8. '    
' → logprob: -15.793522834777832
    9. '   ' → logprob: -16.54352378845215
    10. '`' → logprob: -17.29352378845215

Token 332: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00027599421446211636
    2. '   ' → logprob: -8.250275611877441
    3. ' for' → logprob: -11.125275611877441
    4. '```' → logprob: -18.000276565551758
    5. 'from' → logprob: -18.250276565551758
    6. '	for' → logprob: -18.375276565551758
    7. '
' → logprob: -19.250276565551758
    8. '    
' → logprob: -20.000276565551758
    9. 'full' → logprob: -20.250276565551758
    10. ')' → logprob: -20.625276565551758

Token 333: ' Loop' (ID: 40095)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.4259644558478612e-05
    2. '   ' → logprob: -11.250014305114746
    3. ' for' → logprob: -13.625014305114746
    4. 'from' → logprob: -18.75001335144043
    5. '```' → logprob: -18.75001335144043
    6. '	for' → logprob: -20.00001335144043
    7. '       ' → logprob: -20.25001335144043
    8. 'state' → logprob: -22.37501335144043
    9. '
' → logprob: -22.50001335144043
    10. '``' → logprob: -22.50001335144043

Token 334: ' over' (ID: 1072)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.17875951528549194
    2. '   ' → logprob: -2.0537595748901367
    3. ' over' → logprob: -3.8037595748901367
    4. 'for' → logprob: -4.678759574890137
    5. ' through' → logprob: -6.178759574890137
    6. ' i' → logprob: -7.053759574890137
    7. '    ' → logprob: -8.178759574890137
    8. ' ' → logprob: -8.553759574890137
    9. '	for' → logprob: -8.803759574890137
    10. ' _' → logprob: -9.303759574890137

Token 335: ' all' (ID: 722)
  Prédit: ' keys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' keys' → logprob: -0.5164783596992493
    2. 'keys' → logprob: -2.1414783000946045
    3. ' state' → logprob: -2.1414783000946045
    4. 'state' → logprob: -2.2664783000946045
    5. ' key' → logprob: -3.8914783000946045
    6. ' range' → logprob: -4.141478538513184
    7. 'key' → logprob: -5.141478538513184
    8. 'range' → logprob: -5.141478538513184
    9. ' s' → logprob: -5.266478538513184
    10. 's' → logprob: -5.516478538513184

Token 336: ' possible' (ID: 4149)
  Prédit: ' states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' states' → logprob: -0.7362114191055298
    2. 'states' → logprob: -1.3612114191055298
    3. 'state' → logprob: -1.6112114191055298
    4. ' state' → logprob: -2.9862112998962402
    5. 'dp' → logprob: -4.86121129989624
    6. ' keys' → logprob: -6.36121129989624
    7. ' dp' → logprob: -6.48621129989624
    8. 'mask' → logprob: -6.73621129989624
    9. ' possible' → logprob: -7.73621129989624
    10. 'keys' → logprob: -7.98621129989624

Token 337: ' states' (ID: 9407)
  Prédit: 'states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'states' → logprob: -0.5604590177536011
    2. 'state' → logprob: -1.560459017753601
    3. ' states' → logprob: -1.560459017753601
    4. ' state' → logprob: -4.935459136962891
    5. 'dp' → logprob: -7.060459136962891
    6. 'mask' → logprob: -7.435459136962891
    7. 'm' → logprob: -9.56045913696289
    8. '   ' → logprob: -9.93545913696289
    9. ' dp' → logprob: -10.18545913696289
    10. 'prev' → logprob: -10.43545913696289

Token 338: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04037975147366524
    2. ' for' → logprob: -3.290379762649536
    3. 'for' → logprob: -7.165379524230957
    4. ':' → logprob: -7.540379524230957
    5. '
' → logprob: -7.540379524230957
    6. '    
' → logprob: -8.290379524230957
    7. ',' → logprob: -9.290379524230957
    8. ' and' → logprob: -10.165379524230957
    9. '  
' → logprob: -10.290379524230957
    10. ':
' → logprob: -10.540379524230957

Token 339: 'sets' (ID: 7234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7244745492935181
    2. '1' → logprob: -1.224474549293518
    3. 'state' → logprob: -1.849474549293518
    4. ' (' → logprob: -3.9744744300842285
    5. ' state' → logprob: -4.4744744300842285
    6. 'dp' → logprob: -4.5994744300842285
    7. 'states' → logprob: -4.7244744300842285
    8. 'range' → logprob: -5.2244744300842285
    9. ')' → logprob: -5.5994744300842285
    10. ' states' → logprob: -6.3494744300842285

Token 340: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.41217055916786194
    2. 'of' → logprob: -1.2871705293655396
    3. '   ' → logprob: -3.162170648574829
    4. ')' → logprob: -4.16217041015625
    5. ' in' → logprob: -6.28717041015625
    6. 'for' → logprob: -7.41217041015625
    7. ' for' → logprob: -7.53717041015625
    8. 'in' → logprob: -8.66217041015625
    9. '_of' → logprob: -9.41217041015625
    10. ',' → logprob: -9.53717041015625

Token 341: ' opened' (ID: 13906)
  Prédit: 'opened'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opened' → logprob: -0.6439211964607239
    2. 'boxes' → logprob: -1.018921136856079
    3. ' boxes' → logprob: -2.643921136856079
    4. ' opened' → logprob: -3.768921136856079
    5. 'keys' → logprob: -4.393921375274658
    6. 'open' → logprob: -5.768921375274658
    7. ' keys' → logprob: -5.893921375274658
    8. ')' → logprob: -8.2689208984375
    9. '   ' → logprob: -8.2689208984375
    10. 'bits' → logprob: -8.5189208984375

Token 342: ' boxes' (ID: 21967)
  Prédit: 'boxes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'boxes' → logprob: -0.46785110235214233
    2. ' boxes' → logprob: -1.092851161956787
    3. 'keys' → logprob: -4.467851161956787
    4. ')' → logprob: -4.717851161956787
    5. '_boxes' → logprob: -4.967851161956787
    6. ' keys' → logprob: -5.217851161956787
    7. 'states' → logprob: -6.342851161956787
    8. '   ' → logprob: -6.342851161956787
    9. ' states' → logprob: -6.967851161956787
    10. '_' → logprob: -8.467850685119629

Token 343: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5341165661811829
    2. '):' → logprob: -0.9091165661811829
    3. '):
' → logprob: -5.409116744995117
    4. '   ' → logprob: -5.409116744995117
    5. ':' → logprob: -7.159116744995117
    6. ',' → logprob: -7.284116744995117
    7. ')
' → logprob: -8.659116744995117
    8. 'for' → logprob: -8.784116744995117
    9. ' for' → logprob: -9.034116744995117
    10. ' )' → logprob: -10.534116744995117

Token 344: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8693605661392212
    2. ' for' → logprob: -1.1193605661392212
    3. 'for' → logprob: -1.3693605661392212
    4. '```' → logprob: -10.99436092376709
    5. '	for' → logprob: -13.61936092376709
    6. '    
' → logprob: -14.11936092376709
    7. ' ' → logprob: -14.11936092376709
    8. ',' → logprob: -14.74436092376709
    9. ' and' → logprob: -15.11936092376709
    10. '    ' → logprob: -15.24436092376709

Token 345: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.3944053649902344
    2. ' for' → logprob: -1.1444053649902344
    3. '   ' → logprob: -4.894405364990234
    4. 'state' → logprob: -11.144405364990234
    5. ' state' → logprob: -13.269405364990234
    6. '```' → logprob: -14.644405364990234
    7. '	for' → logprob: -15.519405364990234
    8. ' ' → logprob: -15.769405364990234
    9. '    
' → logprob: -16.144405364990234
    10. 'from' → logprob: -16.394405364990234

Token 346: ' s' (ID: 265)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.1815185546875
    2. ' state' → logprob: -1.8065185546875
    3. 'mask' → logprob: -7.3065185546875
    4. 's' → logprob: -7.9315185546875
    5. 'i' → logprob: -8.9315185546875
    6. ' s' → logprob: -9.0565185546875
    7. ' mask' → logprob: -9.4315185546875
    8. ' current' → logprob: -9.6815185546875
    9. 'st' → logprob: -9.8065185546875
    10. ' i' → logprob: -9.8065185546875

Token 347: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03420907258987427
    2. 'in' → logprob: -3.4092090129852295
    3. ' ' → logprob: -7.909209251403809
    4. ' i' → logprob: -9.659209251403809
    5. '_' → logprob: -10.034209251403809
    6. ',' → logprob: -10.284209251403809
    7. 'i' → logprob: -11.159209251403809
    8. '  ' → logprob: -11.784209251403809
    9. '   ' → logprob: -12.159209251403809
    10. 'n' → logprob: -12.284209251403809

Token 348: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.003100350499153137
    2. 'dp' → logprob: -6.128100395202637
    3. ' range' → logprob: -7.003100395202637
    4. '(range' → logprob: -12.753100395202637
    5. ' dp' → logprob: -14.378100395202637
    6. '   ' → logprob: -15.003100395202637
    7. 'keys' → logprob: -15.003100395202637
    8. '(dp' → logprob: -15.628100395202637
    9. ')' → logprob: -15.753100395202637
    10. '0' → logprob: -15.753100395202637

Token 349: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0007118358626030385
    2. '((' → logprob: -7.250711917877197
    3. '1' → logprob: -13.875711441040039
    4. '(len' → logprob: -14.250711441040039
    5. ' (' → logprob: -15.250711441040039
    6. '   ' → logprob: -17.25071144104004
    7. '(
' → logprob: -18.37571144104004
    8. ' ' → logprob: -19.62571144104004
    9. '(dp' → logprob: -19.75071144104004
    10. 'len' → logprob: -21.50071144104004

Token 350: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.029750952497124672
    2. '(' → logprob: -3.5297510623931885
    3. ' (' → logprob: -15.52975082397461
    4. '   ' → logprob: -15.77975082397461
    5. ' ' → logprob: -16.15475082397461
    6. ')' → logprob: -17.02975082397461
    7. 'dp' → logprob: -18.27975082397461
    8. 'len' → logprob: -18.40475082397461
    9. '
' → logprob: -19.52975082397461
    10. '0' → logprob: -19.52975082397461

Token 351: ' <<' (ID: 2256)
  Prédit: ' <<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <<' → logprob: -0.5759925842285156
    2. '<<' → logprob: -0.8259925842285156
    3. ',' → logprob: -9.950992584228516
    4. '1' → logprob: -13.075992584228516
    5. '<<(' → logprob: -13.075992584228516
    6. '   ' → logprob: -14.325992584228516
    7. ' ,' → logprob: -15.325992584228516
    8. ' ' → logprob: -16.075992584228516
    9. ')<<' → logprob: -16.325992584228516
    10. '(' → logprob: -16.700992584228516

Token 352: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0031995740719139576
    2. 'M' → logprob: -5.753199577331543
    3. '   ' → logprob: -11.503199577331543
    4. ' N' → logprob: -11.753199577331543
    5. 's' → logprob: -13.753199577331543
    6. '(N' → logprob: -13.753199577331543
    7. ' ' → logprob: -15.378199577331543
    8. '	N' → logprob: -15.503199577331543
    9. 'n' → logprob: -15.878199577331543
    10. '```' → logprob: -15.878199577331543

Token 353: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.31333020329475403
    2. '):
' → logprob: -1.3133301734924316
    3. '):
' → logprob: -10.06333065032959
    4. ')' → logprob: -11.31333065032959
    5. '   ' → logprob: -11.68833065032959
    6. ':' → logprob: -13.06333065032959
    7. '       ' → logprob: -13.81333065032959
    8. ' ):' → logprob: -13.81333065032959
    9. '):

' → logprob: -14.06333065032959
    10. ' ):
' → logprob: -15.81333065032959

Token 354: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007746085175313056
    2. ' for' → logprob: -7.875774383544922
    3. '   ' → logprob: -8.000774383544922
    4. 'for' → logprob: -10.375774383544922
    5. '	   ' → logprob: -11.000774383544922
    6. '<|end|>' → logprob: -12.500774383544922
    7. ',' → logprob: -13.625774383544922
    8. '    ' → logprob: -13.625774383544922
    9. '	' → logprob: -14.125774383544922
    10. '           ' → logprob: -14.125774383544922

Token 355: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.7611980438232422
    2. 'if' → logprob: -1.2611980438232422
    3. '       ' → logprob: -2.136198043823242
    4. '   ' → logprob: -2.761198043823242
    5. ' if' → logprob: -3.261198043823242
    6. ' for' → logprob: -3.511198043823242
    7. '           ' → logprob: -10.761198043823242
    8. ' ' → logprob: -11.261198043823242
    9. 'cost' → logprob: -11.511198043823242
    10. '	for' → logprob: -12.386198043823242

Token 356: ' i' (ID: 575)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.9958388209342957
    2. 'key' → logprob: -0.9958388209342957
    3. 'mask' → logprob: -2.3708388805389404
    4. 'ks' → logprob: -2.6208388805389404
    5. 's' → logprob: -3.2458388805389404
    6. '(k' → logprob: -3.4958388805389404
    7. '(s' → logprob: -4.120838642120361
    8. 'km' → logprob: -6.120838642120361
    9. 'bit' → logprob: -6.245838642120361
    10. '(key' → logprob: -6.620838642120361

Token 357: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.161164328455925
    2. 'in' → logprob: -1.9111642837524414
    3. ',' → logprob: -7.036164283752441
    4. ' ,' → logprob: -10.411164283752441
    5. '   ' → logprob: -11.286164283752441
    6. '	in' → logprob: -12.286164283752441
    7. ' ' → logprob: -12.661164283752441
    8. '       ' → logprob: -13.036164283752441
    9. '    ' → logprob: -13.661164283752441
    10. '_in' → logprob: -13.786164283752441

Token 358: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00024727347772568464
    2. ' range' → logprob: -8.37524700164795
    3. 'keys' → logprob: -11.00024700164795
    4. '   ' → logprob: -17.000247955322266
    5. '(range' → logprob: -17.375247955322266
    6. '	range' → logprob: -17.750247955322266
    7. ' keys' → logprob: -19.125247955322266
    8. ')' → logprob: -19.375247955322266
    9. 'M' → logprob: -19.375247955322266
    10. ' ' → logprob: -19.375247955322266

Token 359: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.10060613602399826
    2. 'M' → logprob: -2.3506062030792236
    3. 'len' → logprob: -8.225605964660645
    4. '(len' → logprob: -9.350605964660645
    5. '   ' → logprob: -10.225605964660645
    6. '       ' → logprob: -12.975605964660645
    7. ' M' → logprob: -13.100605964660645
    8. '	M' → logprob: -13.475605964660645
    9. '           ' → logprob: -13.850605964660645
    10. '[M' → logprob: -14.475605964660645

Token 360: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.10038652271032333
    2. '):' → logprob: -2.350386619567871
    3. '       ' → logprob: -9.225386619567871
    4. '):
' → logprob: -9.850386619567871
    5. '           ' → logprob: -10.850386619567871
    6. '   ' → logprob: -11.975386619567871
    7. ' ):
' → logprob: -13.975386619567871
    8. '):

' → logprob: -14.100386619567871
    9. ' ):' → logprob: -14.600386619567871
    10. ')' → logprob: -15.225386619567871

Token 361: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008370272698812187
    2. ' if' → logprob: -7.7508368492126465
    3. '       ' → logprob: -8.875837326049805
    4. ',' → logprob: -9.500837326049805
    5. '            
' → logprob: -10.500837326049805
    6. '	       ' → logprob: -11.000837326049805
    7. '               ' → logprob: -11.125837326049805
    8. ':' → logprob: -11.125837326049805
    9. '<|end|>' → logprob: -11.250837326049805
    10. ' 
' → logprob: -11.500837326049805

Token 362: ' #' (ID: 1069)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' next' → logprob: -1.0277708768844604
    2. ' new' → logprob: -1.2777708768844604
    3. '           ' → logprob: -2.27777099609375
    4. ' ns' → logprob: -2.40277099609375
    5. 'ns' → logprob: -3.02777099609375
    6. 'next' → logprob: -3.27777099609375
    7. ' s' → logprob: -3.65277099609375
    8. 'new' → logprob: -3.77777099609375
    9. '       ' → logprob: -4.27777099609375
    10. 's' → logprob: -5.65277099609375

Token 363: ' t' (ID: 260)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.6187056303024292
    2. 'next' → logprob: -1.4937056303024292
    3. 'ns' → logprob: -1.6187056303024292
    4. 's' → logprob: -3.9937057495117188
    5. 'curr' → logprob: -5.618705749511719
    6. 'key' → logprob: -5.743705749511719
    7. 'mask' → logprob: -5.743705749511719
    8. 'cost' → logprob: -6.368705749511719
    9. '   ' → logprob: -6.618705749511719
    10. 'cur' → logprob: -6.618705749511719

Token 364: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011161243543028831
    2. '=' → logprob: -4.5111613273620605
    3. 'arget' → logprob: -10.636160850524902
    4. 'state' → logprob: -11.136160850524902
    5. 's' → logprob: -11.261160850524902
    6. 'emp' → logprob: -11.261160850524902
    7. '_state' → logprob: -11.386160850524902
    8. '=s' → logprob: -11.886160850524902
    9. '   ' → logprob: -12.386160850524902
    10. '           ' → logprob: -12.511160850524902

Token 365: ' state' (ID: 2608)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -1.275708794593811
    2. 'dp' → logprob: -1.275708794593811
    3. ' dp' → logprob: -1.400708794593811
    4. 's' → logprob: -1.775708794593811
    5. ' keys' → logprob: -4.2757086753845215
    6. 'keys' → logprob: -5.2757086753845215
    7. ' new' → logprob: -6.0257086753845215
    8. 'new' → logprob: -6.5257086753845215
    9. 'next' → logprob: -6.7757086753845215
    10. ' next' → logprob: -7.0257086753845215

Token 366: ' if' (ID: 538)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10040819644927979
    2. '=' → logprob: -2.3504080772399902
    3. 's' → logprob: -8.725408554077148
    4. 't' → logprob: -11.475408554077148
    5. '|' → logprob: -11.725408554077148
    6. '=s' → logprob: -11.725408554077148
    7. '   ' → logprob: -13.225408554077148
    8. '           ' → logprob: -13.350408554077148
    9. '       ' → logprob: -13.475408554077148
    10. 'next' → logprob: -13.475408554077148

Token 367: ' using' (ID: 2360)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.48759767413139343
    2. 'dp' → logprob: -1.4875977039337158
    3. ' s' → logprob: -2.987597703933716
    4. '(s' → logprob: -3.987597703933716
    5. 't' → logprob: -4.112597465515137
    6. ' dp' → logprob: -4.112597465515137
    7. 'opened' → logprob: -4.487597465515137
    8. ' we' → logprob: -4.612597465515137
    9. 'keys' → logprob: -4.862597465515137
    10. 'we' → logprob: -4.987597465515137

Token 368: ' key' (ID: 2140)
  Prédit: 'keys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'keys' → logprob: -0.4917154312133789
    2. ' keys' → logprob: -1.616715431213379
    3. 'dp' → logprob: -2.241715431213379
    4. 's' → logprob: -3.616715431213379
    5. ' dp' → logprob: -4.241715431213379
    6. 'the' → logprob: -4.616715431213379
    7. ' the' → logprob: -4.866715431213379
    8. '(s' → logprob: -5.116715431213379
    9. ' s' → logprob: -5.366715431213379
    10. '(keys' → logprob: -5.991715431213379

Token 369: ' i' (ID: 575)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029227565973997116
    2. 's' → logprob: -4.0292277336120605
    3. '=' → logprob: -5.4042277336120605
    4. '_s' → logprob: -5.7792277336120605
    5. ' s' → logprob: -7.0292277336120605
    6. '_mask' → logprob: -7.5292277336120605
    7. '           ' → logprob: -7.7792277336120605
    8. '_key' → logprob: -7.7792277336120605
    9. '_state' → logprob: -8.779227256774902
    10. '   ' → logprob: -8.904227256774902

Token 370: ' from' (ID: 591)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020678052678704262
    2. '=' → logprob: -3.8956780433654785
    3. '           ' → logprob: -9.395678520202637
    4. 's' → logprob: -10.770678520202637
    5. '       ' → logprob: -11.395678520202637
    6. '   ' → logprob: -12.270678520202637
    7. 't' → logprob: -12.895678520202637
    8. '=s' → logprob: -12.895678520202637
    9. ')' → logprob: -13.020678520202637
    10. '               ' → logprob: -13.270678520202637

Token 371: ' current' (ID: 2208)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.12250393629074097
    2. ' s' → logprob: -2.2475039958953857
    3. 'state' → logprob: -5.622503757476807
    4. 'dp' → logprob: -5.997503757476807
    5. 'current' → logprob: -7.122503757476807
    6. '`s' → logprob: -7.622503757476807
    7. ' current' → logprob: -7.747503757476807
    8. ' dp' → logprob: -7.747503757476807
    9. ' state' → logprob: -7.747503757476807
    10. 'keys' → logprob: -7.997503757476807

Token 372: ' state' (ID: 2608)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7996833324432373
    2. ' state' → logprob: -1.2996833324432373
    3. ' s' → logprob: -1.6746833324432373
    4. 'state' → logprob: -2.4246833324432373
    5. '   ' → logprob: -8.174683570861816
    6. '`s' → logprob: -8.424683570861816
    7. ''s' → logprob: -8.549683570861816
    8. '_s' → logprob: -8.549683570861816
    9. 'dp' → logprob: -8.674683570861816
    10. '_state' → logprob: -8.799683570861816

Token 373: ' s' (ID: 265)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.007847463712096214
    2. '=' → logprob: -5.007847309112549
    3. '           ' → logprob: -6.882847309112549
    4. 's' → logprob: -10.632847785949707
    5. '       ' → logprob: -10.757847785949707
    6. '               ' → logprob: -11.257847785949707
    7. 't' → logprob: -11.382847785949707
    8. ',' → logprob: -11.632847785949707
    9. '=s' → logprob: -11.882847785949707
    10. ' s' → logprob: -12.132847785949707

Token 374: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05583648011088371
    2. '=' → logprob: -2.9308364391326904
    3. '           ' → logprob: -7.3058366775512695
    4. '=s' → logprob: -8.68083667755127
    5. 's' → logprob: -9.80583667755127
    6. ' s' → logprob: -11.05583667755127
    7. 't' → logprob: -11.55583667755127
    8. '       ' → logprob: -11.55583667755127
    9. '               ' → logprob: -12.30583667755127
    10. '=t' → logprob: -12.30583667755127

Token 375: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4073849618434906
    2. ' =' → logprob: -1.282384991645813
    3. '=' → logprob: -2.9073848724365234
    4. '       ' → logprob: -7.407384872436523
    5. ',' → logprob: -7.657384872436523
    6. ' s' → logprob: -8.282384872436523
    7. 's' → logprob: -8.407384872436523
    8. '            
' → logprob: -8.657384872436523
    9. 't' → logprob: -8.782384872436523
    10. '               ' → logprob: -8.907384872436523

Token 376: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' (adapté à ' t') → logprob: -0.25606510043144226
    2. ' t' → logprob: -1.5060651302337646
    3. '           ' → logprob: -6.0060648918151855
    4. 'dp' → logprob: -7.6310648918151855
    5. 'new' → logprob: -8.506065368652344
    6. '               ' → logprob: -8.631065368652344
    7. 'next' → logprob: -8.631065368652344
    8. ' new' → logprob: -8.881065368652344
    9. ' dp' → logprob: -9.006065368652344
    10. '   ' → logprob: -9.506065368652344

Token 377: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759420394897461
    2. ' =' → logprob: -0.8259420394897461
    3. '=s' → logprob: -13.200942039489746
    4. 's' → logprob: -14.450942039489746
    5. ')' → logprob: -16.825942993164062
    6. '＝' → logprob: -16.825942993164062
    7. '=
' → logprob: -17.450942993164062
    8. ' ' → logprob: -17.825942993164062
    9. ' =
' → logprob: -17.950942993164062
    10. '>' → logprob: -18.450942993164062

Token 378: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0024838652461767197
    2. ' s' → logprob: -6.00248384475708
    3. '   ' → logprob: -12.002484321594238
    4. '`s' → logprob: -14.627484321594238
    5. '           ' → logprob: -14.752484321594238
    6. 'dp' → logprob: -15.127484321594238
    7. ' ' → logprob: -15.377484321594238
    8. '  ' → logprob: -16.002483367919922
    9. '	s' → logprob: -16.252483367919922
    10. '     ' → logprob: -16.377483367919922

Token 379: ' |' (ID: 1022)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -0.06197004392743111
    2. ' |' → logprob: -2.8119699954986572
    3. '|get' → logprob: -13.311969757080078
    4. '│' → logprob: -15.061969757080078
    5. '|(' → logprob: -15.811969757080078
    6. ' ' → logprob: -16.561969757080078
    7. '|string' → logprob: -16.561969757080078
    8. '|max' → logprob: -17.061969757080078
    9. ')' → logprob: -17.811969757080078
    10. '|`
' → logprob: -17.936969757080078

Token 380: ' keys' (ID: 12994)
  Prédit: 'keys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'keys' → logprob: -7.941850526549388e-06
    2. ' keys' → logprob: -11.750007629394531
    3. '(keys' → logprob: -17.62500762939453
    4. '	keys' → logprob: -19.87500762939453
    5. '.keys' → logprob: -20.12500762939453
    6. '   ' → logprob: -20.75000762939453
    7. 'key' → logprob: -21.75000762939453
    8. '           ' → logprob: -22.50000762939453
    9. '```' → logprob: -22.75000762939453
    10. '`' → logprob: -23.25000762939453

Token 381: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.8624639324116288e-06
    2. '[' → logprob: -13.500001907348633
    3. '[s' → logprob: -15.625001907348633
    4. '[
' → logprob: -16.250001907348633
    5. '```' → logprob: -17.375001907348633
    6. '[t' → logprob: -17.375001907348633
    7. '\[' → logprob: -17.625001907348633
    8. ' [' → logprob: -18.375001907348633
    9. 'i' → logprob: -18.375001907348633
    10. '[key' → logprob: -19.375001907348633

Token 382: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1282929927110672
    2. '][' → logprob: -2.128293037414551
    3. '0' → logprob: -7.503293037414551
    4. ')[' → logprob: -7.628293037414551
    5. 's' → logprob: -9.12829303741455
    6. ']' → logprob: -10.12829303741455
    7. ' [' → logprob: -10.12829303741455
    8. '\[' → logprob: -10.87829303741455
    9. ''s' → logprob: -11.00329303741455
    10. '[i' → logprob: -11.00329303741455

Token 383: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.7432603272027336e-06
    2. ' ' → logprob: -13.875001907348633
    3. '00' → logprob: -15.812501907348633
    4. '   ' → logprob: -16.125001907348633
    5. '000' → logprob: -16.625001907348633
    6. '1' → logprob: -16.812501907348633
    7. '```' → logprob: -17.000001907348633
    8. '[' → logprob: -17.187501907348633
    9. '۰' → logprob: -17.750001907348633
    10. '`' → logprob: -17.875001907348633

Token 384: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2619274854660034
    2. '])' → logprob: -1.7619274854660034
    3. ']' → logprob: -2.886927604675293
    4. ')]' → logprob: -6.011927604675293
    5. ' )' → logprob: -8.261927604675293
    6. ')])' → logprob: -9.261927604675293
    7. ' ])' → logprob: -9.761927604675293
    8. ')
' → logprob: -10.636927604675293
    9. ' ]' → logprob: -10.886927604675293
    10. '))' → logprob: -11.136927604675293

Token 385: ' ' (ID: 220)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2616480886936188
    2. '
' → logprob: -1.6366480588912964
    3. '            
' → logprob: -4.261648178100586
    4. '       ' → logprob: -5.511648178100586
    5. '               ' → logprob: -5.511648178100586
    6. ' 
' → logprob: -6.011648178100586
    7. '  
' → logprob: -6.386648178100586
    8. '
' → logprob: -6.386648178100586
    9. '<|end|>' → logprob: -6.386648178100586
    10. ' if' → logprob: -6.386648178100586

Token 386: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.038203172385692596
    2. '
' → logprob: -3.788203239440918
    3. '               ' → logprob: -5.163203239440918
    4. '            
' → logprob: -5.413203239440918
    5. '       ' → logprob: -7.163203239440918
    6. ')' → logprob: -7.163203239440918
    7. '<|end|>' → logprob: -7.288203239440918
    8. ' if' → logprob: -7.913203239440918
    9. '  
' → logprob: -8.288203239440918
    10. '          ' → logprob: -8.413203239440918

Token 387: ' Open' (ID: 7788)
  Prédit: 'keys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'keys' → logprob: -0.4853506088256836
    2. ' keys' → logprob: -1.9853506088256836
    3. 'dp' → logprob: -2.1103506088256836
    4. 's' → logprob: -3.6103506088256836
    5. '1' → logprob: -4.235350608825684
    6. '
' → logprob: -4.235350608825684
    7. ']' → logprob: -4.610350608825684
    8. ' s' → logprob: -4.860350608825684
    9. ' dp' → logprob: -4.860350608825684
    10. ')' → logprob: -5.360350608825684

Token 388: ' any' (ID: 1062)
  Prédit: 'ed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.9161898493766785
    2. ' boxes' → logprob: -2.1661899089813232
    3. 't' → logprob: -2.2911899089813232
    4. 'keys' → logprob: -2.5411899089813232
    5. 'all' → logprob: -2.6661899089813232
    6. ' t' → logprob: -2.7911899089813232
    7. ' keys' → logprob: -3.0411899089813232
    8. 'boxes' → logprob: -3.1661899089813232
    9. ' all' → logprob: -3.2911899089813232
    10. 'the' → logprob: -4.041189670562744

Token 389: ' boxes' (ID: 21967)
  Prédit: ' boxes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' boxes' → logprob: -0.08193545043468475
    2. 'boxes' → logprob: -2.706935405731201
    3. ' additional' → logprob: -5.956935405731201
    4. 'additional' → logprob: -6.581935405731201
    5. '|' → logprob: -6.706935405731201
    6. ' box' → logprob: -6.706935405731201
    7. ' unopened' → logprob: -7.081935405731201
    8. ' new' → logprob: -7.206935405731201
    9. ' |' → logprob: -7.581935405731201
    10. 'box' → logprob: -7.706935405731201

Token 390: ' attainable' (ID: 138276)
  Prédit: ' with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' with' → logprob: -1.018744707107544
    2. '           ' → logprob: -1.268744707107544
    3. '<|end|>' → logprob: -2.018744707107544
    4. ' if' → logprob: -2.393744707107544
    5. 'with' → logprob: -2.393744707107544
    6. ')' → logprob: -4.518744468688965
    7. '       ' → logprob: -4.893744468688965
    8. '               ' → logprob: -5.643744468688965
    9. '<|end|>' → logprob: -6.018744468688965
    10. '          ' → logprob: -6.018744468688965

Token 391: ' by' (ID: 656)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7524749636650085
    2. ' with' → logprob: -0.8774749636650085
    3. 'with' → logprob: -2.6274750232696533
    4. ' by' → logprob: -4.377474784851074
    5. ' if' → logprob: -4.877474784851074
    6. 'by' → logprob: -5.377474784851074
    7. '       ' → logprob: -5.377474784851074
    8. '<|end|>' → logprob: -5.627474784851074
    9. ' at' → logprob: -6.127474784851074
    10. '               ' → logprob: -6.627474784851074

Token 392: ' this' (ID: 495)
  Prédit: 'keys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'keys' → logprob: -0.5210022330284119
    2. ' keys' → logprob: -1.0210022926330566
    3. 'the' → logprob: -3.5210022926330566
    4. ' the' → logprob: -4.396002292633057
    5. 'key' → logprob: -6.771002292633057
    6. 'this' → logprob: -7.396002292633057
    7. 'a' → logprob: -7.896002292633057
    8. ' this' → logprob: -8.146001815795898
    9. 'using' → logprob: -8.146001815795898
    10. ' a' → logprob: -8.146001815795898

Token 393: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.2931498885154724
    2. '[i' → logprob: -2.168149948120117
    3. ' key' → logprob: -2.918149948120117
    4. 'keys' → logprob: -2.918149948120117
    5. 'i' → logprob: -4.293149948120117
    6. '[' → logprob: -5.543149948120117
    7. ' i' → logprob: -5.793149948120117
    8. ' keys' → logprob: -5.918149948120117
    9. ' [' → logprob: -6.418149948120117
    10. ' ' → logprob: -7.168149948120117

Token 394: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004285911098122597
    2. '
' → logprob: -6.75428581237793
    3. '            
' → logprob: -6.87928581237793
    4. '<|end|>' → logprob: -6.87928581237793
    5. '               ' → logprob: -8.25428581237793
    6. ',' → logprob: -8.25428581237793
    7. '<|end|>' → logprob: -8.75428581237793
    8. ' if' → logprob: -9.12928581237793
    9. ')' → logprob: -9.87928581237793
    10. '		' → logprob: -10.37928581237793

Token 395: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.22428768873214722
    2. '
' → logprob: -1.724287748336792
    3. '<|end|>' → logprob: -4.599287509918213
    4. '            
' → logprob: -4.974287509918213
    5. '               ' → logprob: -6.474287509918213
    6. '  
' → logprob: -7.349287509918213
    7. ' 
' → logprob: -7.349287509918213
    8. '<|end|>' → logprob: -7.974287509918213
    9. '                   ' → logprob: -8.099287986755371
    10. '                        
' → logprob: -8.224287986755371

Token 396: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.2961668372154236
    2. ' dp' → logprob: -2.5461668968200684
    3. ' if' → logprob: -2.6711668968200684
    4. 'if' → logprob: -2.7961668968200684
    5. '           ' → logprob: -3.6711668968200684
    6. 'cost' → logprob: -4.296166896820068
    7. ' cost' → logprob: -5.796166896820068
    8. 'new' → logprob: -5.921166896820068
    9. ' new' → logprob: -6.046166896820068
    10. '               ' → logprob: -8.29616641998291

Token 397: ' Update' (ID: 9152)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.30024227499961853
    2. 'if' → logprob: -1.425242304801941
    3. ' if' → logprob: -4.9252424240112305
    4. '           ' → logprob: -5.0502424240112305
    5. 'cost' → logprob: -6.0502424240112305
    6. 'new' → logprob: -6.4252424240112305
    7. ' dp' → logprob: -6.8002424240112305
    8. ' new' → logprob: -10.17524242401123
    9. '               ' → logprob: -10.30024242401123
    10. 'current' → logprob: -10.92524242401123

Token 398: ' the' (ID: 290)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.17567363381385803
    2. ' dp' → logprob: -2.050673723220825
    3. ' if' → logprob: -4.175673484802246
    4. 'if' → logprob: -4.550673484802246
    5. '           ' → logprob: -5.050673484802246
    6. '               ' → logprob: -9.925673484802246
    7. '   ' → logprob: -10.175673484802246
    8. '(dp' → logprob: -11.300673484802246
    9. '	dp' → logprob: -11.675673484802246
    10. '_dp' → logprob: -11.800673484802246

Token 399: ' minimal' (ID: 19957)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.019034799188375473
    2. 'if' → logprob: -4.6440348625183105
    3. ' dp' → logprob: -5.0190348625183105
    4. ' if' → logprob: -6.1440348625183105
    5. '           ' → logprob: -7.8940348625183105
    6. 'cost' → logprob: -10.019034385681152
    7. '               ' → logprob: -10.769034385681152
    8. '   ' → logprob: -11.519034385681152
    9. '                   ' → logprob: -12.144034385681152
    10. ' cost' → logprob: -12.394034385681152

Token 400: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.5822082161903381
    2. 'dp' → logprob: -1.0822081565856934
    3. ' cost' → logprob: -2.4572081565856934
    4. ' dp' → logprob: -4.332208156585693
    5. 'if' → logprob: -6.082208156585693
    6. ' if' → logprob: -7.332208156585693
    7. '           ' → logprob: -7.582208156585693
    8. '   ' → logprob: -9.582208633422852
    9. '(dp' → logprob: -10.582208633422852
    10. '               ' → logprob: -10.707208633422852

Token 401: ' to' (ID: 316)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5362175107002258
    2. ' if' → logprob: -1.161217451095581
    3. 'if' → logprob: -3.036217451095581
    4. 'dp' → logprob: -3.286217451095581
    5. ' dp' → logprob: -4.28621768951416
    6. ' with' → logprob: -7.41121768951416
    7. ' for' → logprob: -7.66121768951416
    8. '   ' → logprob: -8.16121768951416
    9. ' =' → logprob: -8.41121768951416
    10. '       ' → logprob: -8.53621768951416

Token 402: ' reach' (ID: 7627)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.24888990819454193
    2. 'open' → logprob: -1.9988899230957031
    3. '   ' → logprob: -3.998889923095703
    4. 'unlock' → logprob: -3.998889923095703
    5. ' dp' → logprob: -4.123889923095703
    6. 'min' → logprob: -4.748889923095703
    7. 'reach' → logprob: -5.373889923095703
    8. ' reach' → logprob: -5.373889923095703
    9. 't' → logprob: -5.498889923095703
    10. '           ' → logprob: -5.873889923095703

Token 403: ' state' (ID: 2608)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.12379158288240433
    2. 'dp' → logprob: -2.4987916946411133
    3. ' t' → logprob: -3.6237916946411133
    4. ' dp' → logprob: -4.998791694641113
    5. '[t' → logprob: -8.123791694641113
    6. '           ' → logprob: -8.373791694641113
    7. '`t' → logprob: -8.623791694641113
    8. 'the' → logprob: -10.498791694641113
    9. ' the' → logprob: -10.748791694641113
    10. '`' → logprob: -10.748791694641113

Token 404: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.09393297880887985
    2. '[t' → logprob: -3.093932867050171
    3. ' t' → logprob: -3.343932867050171
    4. '           ' → logprob: -4.84393310546875
    5. '   ' → logprob: -7.71893310546875
    6. 'dp' → logprob: -8.46893310546875
    7. '       ' → logprob: -9.09393310546875
    8. '`t' → logprob: -9.21893310546875
    9. '               ' → logprob: -9.84393310546875
    10. '```' → logprob: -10.21893310546875

Token 405: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.40259259939193726
    2. ' if' → logprob: -1.402592658996582
    3. 'dp' → logprob: -2.777592658996582
    4. ' dp' → logprob: -4.777592658996582
    5. ' =' → logprob: -5.277592658996582
    6. 'if' → logprob: -5.652592658996582
    7. ' with' → logprob: -6.152592658996582
    8. '   ' → logprob: -7.402592658996582
    9. '               ' → logprob: -7.402592658996582
    10. ',' → logprob: -7.652592658996582

Token 406: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3684116005897522
    2. 'dp' → logprob: -1.8684115409851074
    3. ' if' → logprob: -2.2434115409851074
    4. ' dp' → logprob: -3.2434115409851074
    5. 'if' → logprob: -5.118411540985107
    6. '               ' → logprob: -6.868411540985107
    7. '       ' → logprob: -7.618411540985107
    8. '(dp' → logprob: -8.243412017822266
    9. '   ' → logprob: -8.618412017822266
    10. '                   ' → logprob: -8.618412017822266

Token 407: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.007495647296309471
    2. 'if' → logprob: -5.007495880126953
    3. '           ' → logprob: -7.882495880126953
    4. ' dp' → logprob: -8.632495880126953
    5. 'new' → logprob: -9.257495880126953
    6. ' if' → logprob: -9.382495880126953
    7. 'cost' → logprob: -10.257495880126953
    8. '               ' → logprob: -12.757495880126953
    9. '   ' → logprob: -13.382495880126953
    10. 'old' → logprob: -13.882495880126953

Token 408: '[t' (ID: 32184)
  Prédit: '[t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[t' → logprob: -3.4121114822482923e-06
    2. '[s' → logprob: -12.750003814697266
    3. 't' → logprob: -15.000003814697266
    4. '[' → logprob: -15.750003814697266
    5. ' [' → logprob: -19.250003814697266
    6. '\[' → logprob: -19.875003814697266
    7. '[i' → logprob: -20.125003814697266
    8. '```' → logprob: -20.375003814697266
    9. '[T' → logprob: -20.875003814697266
    10. '	t' → logprob: -21.000003814697266

Token 409: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0016860088799148798
    2. ']=' → logprob: -6.626686096191406
    3. ')' → logprob: -8.251686096191406
    4. '])' → logprob: -10.251686096191406
    5. ' ]' → logprob: -10.626686096191406
    6. '=' → logprob: -11.126686096191406
    7. ' =' → logprob: -11.126686096191406
    8. '[' → logprob: -12.626686096191406
    9. '   ' → logprob: -13.126686096191406
    10. '],' → logprob: -14.001686096191406

Token 410: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.038270529359579086
    2. ' =' → logprob: -3.2882704734802246
    3. '=min' → logprob: -8.413270950317383
    4. '[min' → logprob: -12.413270950317383
    5. '[' → logprob: -13.788270950317383
    6. 'min' → logprob: -14.163270950317383
    7. '   ' → logprob: -14.413270950317383
    8. ']=' → logprob: -15.538270950317383
    9. ']' → logprob: -15.538270950317383
    10. '.=' → logprob: -16.288270950317383

Token 411: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -1.0206720617134124e-05
    2. ' min' → logprob: -11.50001049041748
    3. '   ' → logprob: -19.375009536743164
    4. '	min' → logprob: -20.375009536743164
    5. 'max' → logprob: -21.500009536743164
    6. 'mini' → logprob: -23.000009536743164
    7. '(min' → logprob: -23.000009536743164
    8. '[min' → logprob: -23.500009536743164
    9. '=min' → logprob: -23.625009536743164
    10. '.min' → logprob: -23.750009536743164

Token 412: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -5.8961017202818766e-05
    2. '(' → logprob: -9.750059127807617
    3. 'dp' → logprob: -14.375059127807617
    4. '(
' → logprob: -16.625059127807617
    5. '	dp' → logprob: -18.500059127807617
    6. ' (' → logprob: -18.625059127807617
    7. '(d' → logprob: -19.125059127807617
    8. '(df' → logprob: -19.250059127807617
    9. '(dt' → logprob: -19.375059127807617
    10. '(

' → logprob: -20.250059127807617

Token 413: '[t' (ID: 32184)
  Prédit: '[t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[t' → logprob: -0.2735916078090668
    2. '(dp' → logprob: -2.2735915184020996
    3. '[' → logprob: -2.5235915184020996
    4. 'dp' → logprob: -2.8985915184020996
    5. ' dp' → logprob: -8.023591995239258
    6. '_dp' → logprob: -8.398591995239258
    7. '[s' → logprob: -9.023591995239258
    8. '.dp' → logprob: -9.273591995239258
    9. '	dp' → logprob: -9.398591995239258
    10. '[df' → logprob: -9.523591995239258

Token 414: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001114106344175525
    2. '],' → logprob: -9.37511157989502
    3. 'dp' → logprob: -11.25011157989502
    4. ' ,' → logprob: -11.25011157989502
    5. '(dp' → logprob: -15.50011157989502
    6. ' dp' → logprob: -16.125110626220703
    7. ',
' → logprob: -16.250110626220703
    8. '),' → logprob: -16.375110626220703
    9. 's' → logprob: -17.000110626220703
    10. ']' → logprob: -17.375110626220703

Token 415: ' keys' (ID: 12994)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0006299942615441978
    2. ' dp' → logprob: -7.375629901885986
    3. '           ' → logprob: -13.500630378723145
    4. '	dp' → logprob: -13.625630378723145
    5. '               ' → logprob: -14.750630378723145
    6. '(dp' → logprob: -15.125630378723145
    7. '   ' → logprob: -16.375629425048828
    8. '                   ' → logprob: -17.000629425048828
    9. '_dp' → logprob: -17.000629425048828
    10. '.dp' → logprob: -17.875629425048828

Token 416: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.927930654550437e-05
    2. '[' → logprob: -11.000029563903809
    3. ' [' → logprob: -11.875029563903809
    4. ')[' → logprob: -12.875029563903809
    5. '```' → logprob: -14.125029563903809
    6. '][' → logprob: -14.750029563903809
    7. '[
' → logprob: -15.375029563903809
    8. '[t' → logprob: -15.500029563903809
    9. '\[' → logprob: -15.750029563903809
    10. '[I' → logprob: -15.875029563903809

Token 417: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.021990632638335228
    2. '[i' → logprob: -4.146990776062012
    3. '[' → logprob: -5.271990776062012
    4. ')[' → logprob: -8.271990776062012
    5. ']' → logprob: -8.771990776062012
    6. ' ][' → logprob: -9.521990776062012
    7. '"][' → logprob: -9.896990776062012
    8. '[][' → logprob: -10.146990776062012
    9. 's' → logprob: -10.271990776062012
    10. ''][' → logprob: -10.771990776062012

Token 418: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008404768304899335
    2. 's' → logprob: -7.625840663909912
    3. 'i' → logprob: -8.000840187072754
    4. '][' → logprob: -12.000840187072754
    5. ']' → logprob: -13.000840187072754
    6. '0' → logprob: -13.000840187072754
    7. '[' → logprob: -13.500840187072754
    8. ' ' → logprob: -14.313340187072754
    9. '   ' → logprob: -14.688340187072754
    10. ')' → logprob: -14.938340187072754

Token 419: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.10722553730010986
    2. '+' → logprob: -2.6072254180908203
    3. ' +' → logprob: -3.7322254180908203
    4. ']+' → logprob: -6.10722541809082
    5. ')' → logprob: -6.48222541809082
    6. '])' → logprob: -8.73222541809082
    7. '   ' → logprob: -10.60722541809082
    8. ' ]' → logprob: -10.85722541809082
    9. ']))' → logprob: -11.48222541809082
    10. '+]' → logprob: -12.23222541809082

Token 420: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5759861469268799
    2. '+' → logprob: -0.8259861469268799
    3. ')' → logprob: -10.2009859085083
    4. '   ' → logprob: -12.0759859085083
    5. ' ' → logprob: -13.5759859085083
    6. ']' → logprob: -13.7009859085083
    7. ')+' → logprob: -14.4509859085083
    8. ']+' → logprob: -15.2009859085083
    9. ' ' → logprob: -15.4509859085083
    10. '))' → logprob: -15.9509859085083

Token 421: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00023107275774236768
    2. ' dp' → logprob: -8.37523078918457
    3. '	dp' → logprob: -15.25023078918457
    4. '(dp' → logprob: -15.75023078918457
    5. '_dp' → logprob: -17.12523078918457
    6. '   ' → logprob: -17.62523078918457
    7. 'd' → logprob: -18.00023078918457
    8. '
' → logprob: -18.50023078918457
    9. '.dp' → logprob: -19.12523078918457
    10. '           ' → logprob: -19.87523078918457

Token 422: '[s' (ID: 24177)
  Prédit: '[s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -4.36574100604048e-06
    2. 's' → logprob: -12.375004768371582
    3. '[' → logprob: -18.250003814697266
    4. '```' → logprob: -18.875003814697266
    5. '[
' → logprob: -19.625003814697266
    6. '(s' → logprob: -19.750003814697266
    7. '{s' → logprob: -21.125003814697266
    8. '`s' → logprob: -21.250003814697266
    9. ' [' → logprob: -21.375003814697266
    10. '	s' → logprob: -22.000003814697266

Token 423: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014196882955729961
    2. '])' → logprob: -4.264196872711182
    3. '))' → logprob: -10.88919734954834
    4. ' )' → logprob: -12.13919734954834
    5. ')
' → logprob: -12.76419734954834
    6. ')])' → logprob: -13.01419734954834
    7. ')]' → logprob: -13.76419734954834
    8. ']' → logprob: -14.01419734954834
    9. '   ' → logprob: -14.26419734954834
    10. '       ' → logprob: -14.88919734954834

Token 424: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01834050565958023
    2. 'if' → logprob: -4.768340587615967
    3. 'return' → logprob: -5.518340587615967
    4. '```' → logprob: -6.268340587615967
    5. 'print' → logprob: -7.143340587615967
    6. '
' → logprob: -7.268340587615967
    7. ' if' → logprob: -7.518340587615967
    8. '    
' → logprob: -7.518340587615967
    9. '<|end|>' → logprob: -8.268340110778809
    10. ')' → logprob: -8.268340110778809

Token 425: ' #' (ID: 1069)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.4614664614200592
    2. 'full' → logprob: -1.7114664316177368
    3. 'final' → logprob: -2.3364665508270264
    4. 'res' → logprob: -3.4614665508270264
    5. 'answer' → logprob: -3.8364665508270264
    6. '   ' → logprob: -4.461466312408447
    7. '```' → logprob: -5.461466312408447
    8. 'return' → logprob: -5.836466312408447
    9. 'print' → logprob: -5.836466312408447
    10. ' result' → logprob: -5.961466312408447

Token 426: ' If' (ID: 1843)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.2994614541530609
    2. 'result' → logprob: -2.0494613647460938
    3. 'ans' → logprob: -2.5494613647460938
    4. 'answer' → logprob: -3.7994613647460938
    5. 'final' → logprob: -3.9244613647460938
    6. 'full' → logprob: -5.174461364746094
    7. 'if' → logprob: -5.674461364746094
    8. 'all' → logprob: -7.674461364746094
    9. '#' → logprob: -9.549461364746094
    10. 'goal' → logprob: -10.799461364746094

Token 427: ' it's' (ID: 4275)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3491976261138916
    2. ' dp' → logprob: -1.2241976261138916
    3. '(dp' → logprob: -7.2241973876953125
    4. ' (' → logprob: -11.224197387695312
    5. '(' → logprob: -11.974197387695312
    6. 'all' → logprob: -13.349197387695312
    7. ' all' → logprob: -14.224197387695312
    8. '	dp' → logprob: -14.474197387695312
    9. ' ' → logprob: -14.849197387695312
    10. '   ' → logprob: -15.349197387695312

Token 428: ' impossible' (ID: 19786)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.020607639104127884
    2. ' dp' → logprob: -3.8956077098846436
    3. '(dp' → logprob: -9.895607948303223
    4. '   ' → logprob: -11.270607948303223
    5. ' ' → logprob: -13.895607948303223
    6. ' not' → logprob: -15.020607948303223
    7. '	dp' → logprob: -15.020607948303223
    8. 'possible' → logprob: -15.770607948303223
    9. '1' → logprob: -15.895607948303223
    10. 'not' → logprob: -15.895607948303223

Token 429: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.254124253988266
    2. 'to' → logprob: -1.5041242837905884
    3. '   ' → logprob: -6.129124164581299
    4. '_to' → logprob: -12.004124641418457
    5. 'for' → logprob: -13.254124641418457
    6. '[to' → logprob: -13.379124641418457
    7. 'if' → logprob: -13.879124641418457
    8. ' for' → logprob: -14.504124641418457
    9. ':' → logprob: -14.504124641418457
    10. 'To' → logprob: -14.629124641418457

Token 430: ' open' (ID: 2494)
  Prédit: 'open'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'open' → logprob: -0.0029029434081166983
    2. ' open' → logprob: -5.877902984619141
    3. 'reach' → logprob: -9.87790298461914
    4. 'unlock' → logprob: -10.62790298461914
    5. ' reach' → logprob: -11.75290298461914
    6. 'print' → logprob: -12.37790298461914
    7. 'dp' → logprob: -12.50290298461914
    8. 'cover' → logprob: -13.62790298461914
    9. '(open' → logprob: -14.25290298461914
    10. '
' → logprob: -14.25290298461914

Token 431: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.13826324045658112
    2. ' all' → logprob: -2.63826322555542
    3. '(' → logprob: -2.88826322555542
    4. ' (' → logprob: -6.88826322555542
    5. '((' → logprob: -7.01326322555542
    6. ' ((' → logprob: -11.013263702392578
    7. '_all' → logprob: -11.263263702392578
    8. '   ' → logprob: -11.513263702392578
    9. '(all' → logprob: -11.638263702392578
    10. ' ' → logprob: -13.513263702392578

Token 432: ' boxes' (ID: 21967)
  Prédit: 'boxes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'boxes' → logprob: -0.20285747945308685
    2. ' boxes' → logprob: -1.702857494354248
    3. '_boxes' → logprob: -6.577857494354248
    4. '(N' → logprob: -11.32785701751709
    5. 'the' → logprob: -11.45285701751709
    6. '   ' → logprob: -11.95285701751709
    7. 'N' → logprob: -12.20285701751709
    8. '(' → logprob: -12.32785701751709
    9. ' the' → logprob: -12.45285701751709
    10. ' N' → logprob: -12.57785701751709

Token 433: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.596061110496521
    2. ':' → logprob: -1.471061110496521
    3. ',' → logprob: -2.7210612297058105
    4. 'if' → logprob: -2.7210612297058105
    5. ' if' → logprob: -2.8460612297058105
    6. ':
' → logprob: -4.5960612297058105
    7. ' and' → logprob: -5.0960612297058105
    8. ' to' → logprob: -5.2210612297058105
    9. ' or' → logprob: -5.5960612297058105
    10. ' full' → logprob: -6.8460612297058105

Token 434: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0004533142491709441
    2. ' dp' → logprob: -7.875453472137451
    3. '   ' → logprob: -10.000452995300293
    4. '(dp' → logprob: -11.000452995300293
    5. 'if' → logprob: -12.000452995300293
    6. ')' → logprob: -13.250452995300293
    7. '
' → logprob: -14.375452995300293
    8. 'all' → logprob: -14.500452995300293
    9. '(' → logprob: -15.375452995300293
    10. '    ' → logprob: -15.625452995300293

Token 435: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.6942575573921204
    2. '[(' → logprob: -0.6942575573921204
    3. '[' → logprob: -6.819257736206055
    4. '[len' → logprob: -11.569257736206055
    5. '[N' → logprob: -12.694257736206055
    6. '```' → logprob: -13.194257736206055
    7. '``' → logprob: -14.569257736206055
    8. '(' → logprob: -14.694257736206055
    9. ')' → logprob: -14.819257736206055
    10. '
' → logprob: -14.944257736206055

Token 436: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -14.12500286102295
    3. ']' → logprob: -14.75000286102295
    4. '-' → logprob: -15.25000286102295
    5. ')' → logprob: -15.31250286102295
    6. '
' → logprob: -15.75000286102295
    7. '])' → logprob: -15.75000286102295
    8. '   ' → logprob: -15.87500286102295
    9. '```' → logprob: -16.000003814697266
    10. '(' → logprob: -16.062503814697266

Token 437: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.008061175234615803
    2. ']==' → logprob: -4.883061408996582
    3. '])' → logprob: -7.883061408996582
    4. ' ]' → logprob: -10.633061408996582
    5. '[' → logprob: -10.883061408996582
    6. ')' → logprob: -11.633061408996582
    7. ']
' → logprob: -11.633061408996582
    8. ')]' → logprob: -12.258061408996582
    9. '   ' → logprob: -12.758061408996582
    10. ']

' → logprob: -13.633061408996582

Token 438: ' is' (ID: 382)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.1699056476354599
    2. ' ==' → logprob: -1.919905662536621
    3. ')' → logprob: -4.919905662536621
    4. ')==' → logprob: -6.919905662536621
    5. ']==' → logprob: -6.919905662536621
    6. '[' → logprob: -8.919905662536621
    7. ']' → logprob: -9.419905662536621
    8. '   ' → logprob: -10.169905662536621
    9. '==
' → logprob: -10.419905662536621
    10. ' )' → logprob: -10.544905662536621

Token 439: ' infinite' (ID: 48413)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.0015093892579898238
    2. ' float' → logprob: -6.501509189605713
    3. 'inf' → logprob: -12.251509666442871
    4. '=float' → logprob: -13.251509666442871
    5. '   ' → logprob: -15.126509666442871
    6. '(float' → logprob: -16.001508712768555
    7. ',float' → logprob: -16.626508712768555
    8. '	float' → logprob: -17.126508712768555
    9. '```' → logprob: -17.501508712768555
    10. 'in' → logprob: -17.751508712768555

Token 440: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.9209204912185669
    2. '):
' → logprob: -1.045920491218567
    3. '):' → logprob: -1.545920491218567
    4. '   ' → logprob: -3.6709203720092773
    5. ')' → logprob: -4.670920372009277
    6. ' or' → logprob: -6.795920372009277
    7. 'or' → logprob: -7.795920372009277
    8. ',' → logprob: -8.045920372009277
    9. '):

' → logprob: -8.545920372009277
    10. ' ),' → logprob: -9.045920372009277

Token 441: ' output' (ID: 4733)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3044484853744507
    2. '   ' → logprob: -1.8044484853744507
    3. ' print' → logprob: -2.4294486045837402
    4. '       ' → logprob: -4.67944860458374
    5. 'if' → logprob: -8.179448127746582
    6. ' if' → logprob: -8.554448127746582
    7. 'return' → logprob: -10.554448127746582
    8. ' return' → logprob: -11.679448127746582
    9. '    ' → logprob: -12.179448127746582
    10. '	print' → logprob: -12.554448127746582

Token 442: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0003886086633428931
    2. ' -' → logprob: -8.375388145446777
    3. '-print' → logprob: -9.375388145446777
    4. '   ' → logprob: -9.750388145446777
    5. '(-' → logprob: -11.250388145446777
    6. 'print' → logprob: -13.625388145446777
    7. '```' → logprob: -15.125388145446777
    8. '`' → logprob: -15.875388145446777
    9. ' ' → logprob: -17.000389099121094
    10. '(' → logprob: -17.125389099121094

Token 443: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000506326905451715
    2. '-' → logprob: -7.625506401062012
    3. '```' → logprob: -11.875506401062012
    4. '`' → logprob: -12.250506401062012
    5. ' ' → logprob: -12.375506401062012
    6. ' -' → logprob: -13.750506401062012
    7. '   ' → logprob: -14.000506401062012
    8. '``' → logprob: -15.500506401062012
    9. ''' → logprob: -16.750505447387695
    10. '"' → logprob: -17.000505447387695

Token 444: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04791887477040291
    2. 'print' → logprob: -3.6729187965393066
    3. ' if' → logprob: -4.922918796539307
    4. '
' → logprob: -4.922918796539307
    5. 'if' → logprob: -5.172918796539307
    6. ' print' → logprob: -7.547918796539307
    7. 'return' → logprob: -8.547919273376465
    8. 'else' → logprob: -9.047919273376465
    9. '```' → logprob: -9.422919273376465
    10. ' or' → logprob: -9.672919273376465

Token 445: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002544631715863943
    2. 'print' → logprob: -6.502544403076172
    3. 'if' → logprob: -7.627544403076172
    4. ' if' → logprob: -8.127544403076172
    5. 'return' → logprob: -8.627544403076172
    6. ' return' → logprob: -10.752544403076172
    7. '```' → logprob: -10.752544403076172
    8. ' print' → logprob: -11.127544403076172
    9. ',' → logprob: -11.877544403076172
    10. '    
' → logprob: -12.252544403076172

Token 446: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.08223184943199158
    2. 'if' (adapté à ' if') → logprob: -2.5822317600250244
    3. '   ' → logprob: -5.8322319984436035
    4. ' print' → logprob: -8.832231521606445
    5. ' if' → logprob: -9.082231521606445
    6. '```' → logprob: -9.332231521606445
    7. 'return' → logprob: -9.832231521606445
    8. 'result' → logprob: -13.457231521606445
    9. '``' → logprob: -14.082231521606445
    10. '`' → logprob: -14.582231521606445

Token 447: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0040801819413900375
    2. ' dp' → logprob: -5.504080295562744
    3. '(dp' → logprob: -13.629079818725586
    4. '	dp' → logprob: -15.129079818725586
    5. '   ' → logprob: -15.379079818725586
    6. ' ' → logprob: -16.379079818725586
    7. 'not' → logprob: -17.879079818725586
    8. 'float' → logprob: -18.379079818725586
    9. '  ' → logprob: -18.379079818725586
    10. 'math' → logprob: -19.254079818725586

Token 448: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.0011608157074078918
    2. '[len' → logprob: -6.876160621643066
    3. '[(' → logprob: -9.376160621643066
    4. '[' → logprob: -10.126160621643066
    5. '[N' → logprob: -13.001160621643066
    6. '```' → logprob: -14.501160621643066
    7. '==' → logprob: -16.001161575317383
    8. '[int' → logprob: -16.751161575317383
    9. 'len' → logprob: -16.876161575317383
    10. '   ' → logprob: -17.626161575317383

Token 449: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -14.125000953674316
    3. '   ' → logprob: -16.062501907348633
    4. '0' → logprob: -16.125001907348633
    5. '2' → logprob: -16.125001907348633
    6. ']' → logprob: -16.625001907348633
    7. '```' → logprob: -17.250001907348633
    8. '`' → logprob: -17.687501907348633
    9. '  ' → logprob: -17.687501907348633
    10. '
' → logprob: -18.500001907348633

Token 450: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.004723106976598501
    2. ' ==' → logprob: -5.379723072052002
    3. ')' → logprob: -9.50472354888916
    4. ')==' → logprob: -11.00472354888916
    5. ']==' → logprob: -11.62972354888916
    6. ']' → logprob: -13.75472354888916
    7. '=' → logprob: -15.00472354888916
    8. '()==' → logprob: -15.25472354888916
    9. '==
' → logprob: -15.25472354888916
    10. '===' → logprob: -15.50472354888916

Token 451: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0004897649050690234
    2. ' ==' → logprob: -7.625489711761475
    3. '==
' → logprob: -13.750490188598633
    4. 'is' → logprob: -15.125490188598633
    5. '```' → logprob: -16.375490188598633
    6. '<' → logprob: -16.500490188598633
    7. '===' → logprob: -16.500490188598633
    8. ')==' → logprob: -16.625490188598633
    9. '=' → logprob: -17.500490188598633
    10. '   ' → logprob: -17.625490188598633

Token 452: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -5.512236498361744e-07
    2. ' float' → logprob: -14.500000953674316
    3. '   ' → logprob: -17.875
    4. 'flo' → logprob: -20.375
    5. '(float' → logprob: -20.5
    6. '	float' → logprob: -20.625
    7. '=float' → logprob: -20.75
    8. 'int' → logprob: -21.25
    9. ' ' → logprob: -21.875
    10. 'fl' → logprob: -22.0

Token 453: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -1.8624639324116288e-06
    2. '(' → logprob: -13.500001907348633
    3. '("' → logprob: -15.875001907348633
    4. '('.' → logprob: -16.250001907348633
    5. ''s' → logprob: -16.375001907348633
    6. '('_' → logprob: -17.750001907348633
    7. '('-' → logprob: -18.000001907348633
    8. ''in' → logprob: -18.500001907348633
    9. ' ('' → logprob: -18.625001907348633
    10. ''' → logprob: -19.000001907348633

Token 454: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -1.2664456789934775e-06
    2. ''in' → logprob: -13.875000953674316
    3. ''' → logprob: -15.250000953674316
    4. 'in' → logprob: -19.625001907348633
    5. ' inf' → logprob: -19.875001907348633
    6. '('' → logprob: -20.375001907348633
    7. ''s' → logprob: -20.500001907348633
    8. ')' → logprob: -20.750001907348633
    9. 'info' → logprob: -20.750001907348633
    10. 'inp' → logprob: -21.125001907348633

Token 455: ''):
' (ID: 26539)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.31582018733024597
    2. '):' → logprob: -1.3158202171325684
    3. ')' → logprob: -6.190820217132568
    4. '):
' → logprob: -7.940820217132568
    5. ''):
' → logprob: -9.19081974029541
    6. '   ' → logprob: -11.06581974029541
    7. ':' → logprob: -11.44081974029541
    8. ''):' → logprob: -11.44081974029541
    9. '):

' → logprob: -12.19081974029541
    10. '"):
' → logprob: -12.69081974029541

Token 456: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002624086628202349
    2. 'print' → logprob: -8.375262260437012
    3. ' print' → logprob: -10.750262260437012
    4. '   ' → logprob: -11.625262260437012
    5. '           ' → logprob: -14.875262260437012
    6. '```' → logprob: -15.375262260437012
    7. '      ' → logprob: -15.875262260437012
    8. '	   ' → logprob: -16.250263214111328
    9. 'return' → logprob: -16.250263214111328
    10. ':' → logprob: -16.375263214111328

Token 457: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00047297184937633574
    2. '       ' → logprob: -8.000473022460938
    3. '   ' → logprob: -9.250473022460938
    4. ' print' → logprob: -10.125473022460938
    5. '```' → logprob: -14.000473022460938
    6. 'return' → logprob: -15.000473022460938
    7. '	print' → logprob: -15.750473022460938
    8. '`' → logprob: -18.250473022460938
    9. '           ' → logprob: -19.000473022460938
    10. '_print' → logprob: -19.875473022460938

Token 458: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -5.764977686339989e-05
    2. '(' → logprob: -9.875057220458984
    3. '-' → logprob: -12.000057220458984
    4. '("-' → logprob: -17.875057220458984
    5. '('-' → logprob: -19.125057220458984
    6. '()' → logprob: -19.500057220458984
    7. '()-' → logprob: -19.625057220458984
    8. '(
' → logprob: -20.000057220458984
    9. '(+' → logprob: -20.750057220458984
    10. '('' → logprob: -21.000057220458984

Token 459: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.125
    3. '-' → logprob: -18.5
    4. ''' → logprob: -19.25
    5. '2' → logprob: -19.75
    6. ')' → logprob: -20.375
    7. '"' → logprob: -20.875
    8. '```' → logprob: -21.75
    9. '4' → logprob: -21.875
    10. '`' → logprob: -22.0

Token 460: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02340235747396946
    2. ')
' → logprob: -3.773402452468872
    3. '   ' → logprob: -8.773402214050293
    4. ')
' → logprob: -14.023402214050293
    5. ')return' → logprob: -14.648402214050293
    6. '       ' → logprob: -15.023402214050293
    7. 'else' → logprob: -16.14840316772461
    8. ' )' → logprob: -16.77340316772461
    9. '）' → logprob: -17.14840316772461
    10. '")' → logprob: -17.14840316772461

Token 461: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030032552778720856
    2. 'else' → logprob: -3.5300326347351074
    3. '       ' → logprob: -8.40503215789795
    4. ' else' → logprob: -9.78003215789795
    5. 'return' → logprob: -14.03003215789795
    6. '```' → logprob: -14.15503215789795
    7. '	else' → logprob: -15.78003215789795
    8. '   ' → logprob: -18.405033111572266
    9. '  ' → logprob: -18.655033111572266
    10. '
' → logprob: -18.655033111572266

Token 462: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.06248776987195015
    2. '   ' → logprob: -2.812487840652466
    3. ' else' → logprob: -7.562487602233887
    4. '	else' → logprob: -15.437487602233887
    5. '```' → logprob: -16.312488555908203
    6. '       ' → logprob: -16.562488555908203
    7. 'return' → logprob: -17.437488555908203
    8. '_else' → logprob: -18.312488555908203
    9. 'elif' → logprob: -18.687488555908203
    10. ' ' → logprob: -18.937488555908203

Token 463: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05916077271103859
    2. '       ' → logprob: -3.4341607093811035
    3. ':
' → logprob: -3.6841607093811035
    4. '   ' → logprob: -9.934161186218262
    5. '():' → logprob: -12.184161186218262
    6. 'print' → logprob: -12.434161186218262
    7. '[' → logprob: -12.559161186218262
    8. ':

' → logprob: -13.059161186218262
    9. ' :' → logprob: -13.434161186218262
    10. '():
' → logprob: -13.684161186218262

Token 464: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04912944883108139
    2. 'print' → logprob: -3.0491294860839844
    3. ' print' → logprob: -7.549129486083984
    4. '   ' → logprob: -11.674129486083984
    5. '```' → logprob: -12.299129486083984
    6. '	print' → logprob: -13.299129486083984
    7. '(print' → logprob: -15.174129486083984
    8. '           ' → logprob: -16.049129486083984
    9. '.print' → logprob: -16.799129486083984
    10. '     ' → logprob: -17.174129486083984

Token 465: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -9.849109119386412e-06
    2. ' print' → logprob: -11.750009536743164
    3. '```' → logprob: -13.500009536743164
    4. '       ' → logprob: -14.750009536743164
    5. '   ' → logprob: -16.125009536743164
    6. '	print' → logprob: -18.250009536743164
    7. '``' → logprob: -20.000009536743164
    8. '.print' → logprob: -21.375009536743164
    9. '#print' → logprob: -21.875009536743164
    10. '(print' → logprob: -21.875009536743164

Token 466: ' Else' (ID: 42978)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.60414821645827e-06
    2. '       ' → logprob: -12.750004768371582
    3. ' print' → logprob: -13.500004768371582
    4. '   ' → logprob: -15.500004768371582
    5. '```' → logprob: -17.500003814697266
    6. '	print' → logprob: -19.500003814697266
    7. '           ' → logprob: -21.250003814697266
    8. '  ' → logprob: -21.875003814697266
    9. 'printf' → logprob: -22.000003814697266
    10. ' ' → logprob: -22.000003814697266

Token 467: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04121771082282066
    2. 'print' → logprob: -3.291217803955078
    3. ' print' → logprob: -5.791217803955078
    4. '   ' → logprob: -9.291217803955078
    5. ':' → logprob: -11.166217803955078
    6. '           ' → logprob: -12.041217803955078
    7. '```' → logprob: -12.541217803955078
    8. '	print' → logprob: -15.166217803955078
    9. '      ' → logprob: -15.416217803955078
    10. ':
' → logprob: -15.541217803955078

Token 468: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.01623072475194931
    2. '       ' → logprob: -4.516230583190918
    3. ' print' → logprob: -5.266230583190918
    4. '   ' → logprob: -12.141230583190918
    5. '```' → logprob: -14.141230583190918
    6. '	print' → logprob: -15.391230583190918
    7. '           ' → logprob: -15.766230583190918
    8. ' ' → logprob: -17.516231536865234
    9. '.print' → logprob: -18.141231536865234
    10. '_print' → logprob: -18.766231536865234

Token 469: ' minimal' (ID: 19957)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.008627578616142273
    2. '(dp' → logprob: -4.758627414703369
    3. ' dp' → logprob: -11.258627891540527
    4. 'int' → logprob: -16.75862693786621
    5. '	dp' → logprob: -17.13362693786621
    6. '   ' → logprob: -19.63362693786621
    7. '(int' → logprob: -20.50862693786621
    8. '_dp' → logprob: -22.25862693786621
    9. '(' → logprob: -22.38362693786621
    10. '.dp' → logprob: -22.38362693786621

Token 470: ' cost' (ID: 3097)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.7202998399734497
    2. '(dp' → logprob: -0.7202998399734497
    3. 'cost' → logprob: -3.72029972076416
    4. ' dp' → logprob: -6.22029972076416
    5. ' cost' → logprob: -7.97029972076416
    6. 'total' → logprob: -8.59529972076416
    7. '   ' → logprob: -11.09529972076416
    8. ' total' → logprob: -11.84529972076416
    9. '(cost' → logprob: -12.59529972076416
    10. '_cost' → logprob: -13.09529972076416

Token 471: ' to' (ID: 316)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.006159504875540733
    2. '       ' → logprob: -5.63115930557251
    3. 'dp' → logprob: -6.00615930557251
    4. 'print' → logprob: -10.131159782409668
    5. '(' → logprob: -10.506159782409668
    6. '   ' → logprob: -11.256159782409668
    7. ' dp' → logprob: -12.006159782409668
    8. '(print' → logprob: -12.881159782409668
    9. '```' → logprob: -13.381159782409668
    10. ' (' → logprob: -14.256159782409668

Token 472: ' open' (ID: 2494)
  Prédit: 'open'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'open' → logprob: -0.02876042015850544
    2. 'print' → logprob: -3.6537604331970215
    3. 'unlock' → logprob: -6.2787604331970215
    4. ' open' → logprob: -7.7787604331970215
    5. '   ' → logprob: -9.028759956359863
    6. ' print' → logprob: -11.403759956359863
    7. 'min' → logprob: -11.903759956359863
    8. '       ' → logprob: -12.653759956359863
    9. ' unlock' → logprob: -12.653759956359863
    10. 'dp' → logprob: -12.778759956359863

Token 473: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -2.9160102712921798e-05
    2. ' all' → logprob: -10.500029563903809
    3. '   ' → logprob: -13.875029563903809
    4. '       ' → logprob: -15.250029563903809
    5. 'dp' → logprob: -15.500029563903809
    6. '_all' → logprob: -16.625028610229492
    7. 'alls' → logprob: -16.875028610229492
    8. '	all' → logprob: -17.500028610229492
    9. '```' → logprob: -17.875028610229492
    10. ''all' → logprob: -18.000028610229492

Token 474: ' boxes' (ID: 21967)
  Prédit: ' boxes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' boxes' → logprob: -0.25196531414985657
    2. 'boxes' → logprob: -1.5019652843475342
    3. '_boxes' → logprob: -11.001965522766113
    4. '   ' → logprob: -11.126965522766113
    5. ' the' → logprob: -13.126965522766113
    6. '       ' → logprob: -14.376965522766113
    7. 'the' → logprob: -14.876965522766113
    8. 'box' → logprob: -14.876965522766113
    9. 'print' → logprob: -15.001965522766113
    10. ' ' → logprob: -15.126965522766113

Token 475: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.31343039870262146
    2. 'print' → logprob: -1.3134304285049438
    3. ' print' → logprob: -8.938430786132812
    4. '   ' → logprob: -10.813430786132812
    5. '(print' → logprob: -11.813430786132812
    6. '(' → logprob: -12.063430786132812
    7. '```' → logprob: -12.563430786132812
    8. '           ' → logprob: -15.313430786132812
    9. '	print' → logprob: -15.313430786132812
    10. '.print' → logprob: -16.688430786132812

Token 476: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04869001358747482
    2. 'print' → logprob: -3.0486900806427
    3. ' print' → logprob: -9.798689842224121
    4. '   ' → logprob: -10.173689842224121
    5. '```' → logprob: -11.673689842224121
    6. '           ' → logprob: -15.423689842224121
    7. '	print' → logprob: -16.173690795898438
    8. '(print' → logprob: -16.548690795898438
    9. '     ' → logprob: -18.173690795898438
    10. '``' → logprob: -18.298690795898438

Token 477: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.2664456789934775e-06
    2. ' print' → logprob: -14.250000953674316
    3. '       ' → logprob: -14.750000953674316
    4. '   ' → logprob: -15.500000953674316
    5. '```' → logprob: -17.250001907348633
    6. '	print' → logprob: -21.250001907348633
    7. '``' → logprob: -22.750001907348633
    8. '.print' → logprob: -23.750001907348633
    9. '  ' → logprob: -24.000001907348633
    10. 'printf' → logprob: -24.500001907348633

Token 478: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -4.320199877838604e-07
    2. 'dp' → logprob: -15.25
    3. '(' → logprob: -16.375
    4. '(int' → logprob: -19.5
    5. '(df' → logprob: -19.625
    6. ' (' → logprob: -20.375
    7. ' dp' → logprob: -21.0
    8. '(dc' → logprob: -21.5
    9. '	dp' → logprob: -21.5
    10. '((' → logprob: -21.875

Token 479: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -2.339278580620885e-06
    2. '[' → logprob: -13.000001907348633
    3. '   ' → logprob: -18.250001907348633
    4. '[len' → logprob: -19.875001907348633
    5. '[(' → logprob: -20.125001907348633
    6. '[N' → logprob: -20.375001907348633
    7. ')' → logprob: -20.625001907348633
    8. '][-' → logprob: -20.750001907348633
    9. '```' → logprob: -21.000001907348633
    10. '`' → logprob: -22.125001907348633

Token 480: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -15.375000953674316
    3. '   ' → logprob: -16.0
    4. '0' → logprob: -16.3125
    5. '```' → logprob: -16.375
    6. '(' → logprob: -16.8125
    7. '
' → logprob: -16.9375
    8. '`' → logprob: -17.125
    9. '{' → logprob: -17.3125
    10. '2' → logprob: -17.5

Token 481: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.173704271830502e-06
    2. '())' → logprob: -13.12500286102295
    3. ')
' → logprob: -14.25000286102295
    4. '))' → logprob: -15.87500286102295
    5. '()' → logprob: -16.500003814697266
    6. ' )' → logprob: -16.500003814697266
    7. '   ' → logprob: -16.750003814697266
    8. '`)' → logprob: -17.625003814697266
    9. '')' → logprob: -17.750003814697266
    10. '")' → logprob: -18.000003814697266


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 479
Tokens correctement prédits (1ère position, stricte): 161
Tokens correctement prédits (1ère position, avec adaptation): 174
Tokens correctement prédits (top 10): 332
Précision stricte (1ère position): 33.61%
Précision adaptée (1ère position): 36.33%
Précision (top 10): 69.31%
================================================================================
