================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:45:59
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N, K = map(int, input().split())
S = input()
packet = []
packet_len = 1
direction = S[0]
seq = 1
for i in range(1, N - 1):
    if S[i] == direction:
        seq += 1
    else:
        packet.append(seq)
        seq = 1
        direction = S[i]
        packet_len += 1
if S[N - 1] == direction:
    seq += 1
    packet.append(seq)
else:
    packet.append(seq)
    seq = 1
    direction = S[N - 1]
    packet.append(seq)
    packet_len += 1
num = 2 * K + 1
if packet_len == 1 or packet_len == 2 or num >= packet_len:
    print(N - 1)
elif num < packet_len:
    rem = packet_len - num
    print(N - rem - 1)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' K' (ID: 658)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04897349700331688
    2. ' =' → logprob: -3.173973560333252
    3. ',' → logprob: -5.173973560333252
    4. ')' → logprob: -9.048973083496094
    5. '.' → logprob: -9.798973083496094
    6. ';' → logprob: -10.548973083496094
    7. '+' → logprob: -10.798973083496094
    8. '```' → logprob: -11.173973083496094
    9. '=int' → logprob: -11.298973083496094
    10. '#' → logprob: -11.548973083496094

Token 4: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.20483088493347168
    2. ' input' → logprob: -2.4548308849334717
    3. 'map' → logprob: -2.5798308849334717
    4. 'input' → logprob: -4.329831123352051
    5. ' ' → logprob: -5.204831123352051
    6. '10' → logprob: -6.204831123352051
    7. ' int' → logprob: -6.579831123352051
    8. ' list' → logprob: -7.579831123352051
    9. 'int' → logprob: -8.57983112335205
    10. ' N' → logprob: -8.70483112335205

Token 5: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03673947975039482
    2. '<|end|>' → logprob: -4.286739349365234
    3. '(int' → logprob: -4.411739349365234
    4. '(lambda' → logprob: -5.411739349365234
    5. '```' → logprob: -6.286739349365234
    6. '(str' → logprob: -6.786739349365234
    7. '<|end|>' → logprob: -7.411739349365234
    8. ')' → logprob: -7.536739349365234
    9. '(input' → logprob: -8.911739349365234
    10. '(len' → logprob: -9.036739349365234

Token 6: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.318373441696167
    2. '(input' → logprob: -1.443373441696167
    3. '(' → logprob: -3.943373441696167
    4. '```' → logprob: -5.193373680114746
    5. '`)' → logprob: -5.318373680114746
    6. 'input' → logprob: -6.318373680114746
    7. '`' → logprob: -6.568373680114746
    8. '(user' → logprob: -6.568373680114746
    9. ')(' → logprob: -7.568373680114746
    10. '(int' → logprob: -8.693373680114746

Token 7: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.023271452635526657
    2. ' input' → logprob: -3.7732715606689453
    3. '(input' → logprob: -11.148271560668945
    4. ')' → logprob: -11.523271560668945
    5. ',input' → logprob: -13.648271560668945
    6. '```' → logprob: -15.648271560668945
    7. '<input' → logprob: -16.523271560668945
    8. '=input' → logprob: -17.023271560668945
    9. '	input' → logprob: -17.398271560668945
    10. '[input' → logprob: -17.773271560668945

Token 8: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.8359453678131104
    2. '())' → logprob: -0.8359453678131104
    3. ')' → logprob: -2.7109453678131104
    4. '(' → logprob: -3.3359453678131104
    5. '('' → logprob: -4.960945129394531
    6. '(""))' → logprob: -5.085945129394531
    7. '`()' → logprob: -5.835945129394531
    8. '());' → logprob: -6.335945129394531
    9. '();)' → logprob: -6.585945129394531
    10. '().' → logprob: -6.710945129394531

Token 9: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0007239909609779716
    2. 'strip' → logprob: -7.250723838806152
    3. 'rstrip' → logprob: -11.750723838806152
    4. ' split' → logprob: -12.750723838806152
    5. ')' → logprob: -13.000723838806152
    6. 'read' → logprob: -14.250723838806152
    7. 'spl' → logprob: -15.250723838806152
    8. '(split' → logprob: -16.00072479248047
    9. 'startswith' → logprob: -16.25072479248047
    10. 'replace' → logprob: -17.50072479248047

Token 10: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06425416469573975
    2. '))' → logprob: -3.0642542839050293
    3. '())' → logprob: -4.189254283905029
    4. '()' → logprob: -8.689253807067871
    5. '()))' → logprob: -9.314253807067871
    6. '`)' → logprob: -9.939253807067871
    7. '(' → logprob: -10.314253807067871
    8. ')`' → logprob: -11.064253807067871
    9. ')))' → logprob: -12.189253807067871
    10. '```' → logprob: -12.564253807067871

Token 11: 'S' (ID: 50)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.451621651649475
    2. 'a' → logprob: -2.0766215324401855
    3. '#' → logprob: -2.3266215324401855
    4. ')' → logprob: -2.5766215324401855
    5. '\n' → logprob: -2.5766215324401855
    6. ',' → logprob: -2.8266215324401855
    7. '.' → logprob: -2.9516215324401855
    8. 'if' → logprob: -3.0766215324401855
    9. '`' → logprob: -3.3266215324401855
    10. 'x' → logprob: -3.3266215324401855

Token 12: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.771105945110321
    2. '=' → logprob: -1.2711060047149658
    3. ' =' → logprob: -2.021106004714966
    4. '.' → logprob: -2.271106004714966
    5. '[:]' → logprob: -4.396105766296387
    6. '[:' → logprob: -5.646105766296387
    7. '_' → logprob: -7.396105766296387
    8. '[i' → logprob: -7.521105766296387
    9. '[]' → logprob: -7.771105766296387
    10. ')' → logprob: -7.771105766296387

Token 13: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.5231854319572449
    2. 'input' → logprob: -0.8981854319572449
    3. ' list' → logprob: -10.898185729980469
    4. 'list' → logprob: -11.273185729980469
    5. '[input' → logprob: -11.773185729980469
    6. '""' → logprob: -11.898185729980469
    7. '=input' → logprob: -12.773185729980469
    8. '(input' → logprob: -12.898185729980469
    9. '"' → logprob: -13.148185729980469
    10. 'str' → logprob: -13.273185729980469

Token 14: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.030179912224411964
    2. '(' → logprob: -3.530179977416992
    3. ')' → logprob: -8.905179977416992
    4. '().' → logprob: -9.655179977416992
    5. '`()' → logprob: -9.905179977416992
    6. ' ()' → logprob: -10.405179977416992
    7. '```' → logprob: -10.405179977416992
    8. '('' → logprob: -10.780179977416992
    9. '())' → logprob: -10.780179977416992
    10. '()`' → logprob: -11.530179977416992

Token 15: 'packet' (ID: 55525)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.3673357963562012
    2. 'if' → logprob: -1.4923357963562012
    3. 'result' → logprob: -1.6173357963562012
    4. 'for' → logprob: -1.9923357963562012
    5. 'i' → logprob: -3.492335796356201
    6. 'dp' → logprob: -3.492335796356201
    7. '_' → logprob: -3.742335796356201
    8. 'c' → logprob: -3.992335796356201
    9. 'd' → logprob: -3.992335796356201
    10. 's' → logprob: -4.492335796356201

Token 16: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.03607910871505737
    2. '_' → logprob: -4.661078929901123
    3. '_size' → logprob: -4.661078929901123
    4. '_s' → logprob: -5.036078929901123
    5. ' =' → logprob: -5.036078929901123
    6. '_len' → logprob: -7.036078929901123
    7. '_count' → logprob: -7.411078929901123
    8. '[' → logprob: -7.536078929901123
    9. '_type' → logprob: -7.911078929901123
    10. '_length' → logprob: -8.286079406738281

Token 17: ' []
' (ID: 8911)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.29080989956855774
    2. '[]' → logprob: -1.4158098697662354
    3. '[' → logprob: -5.5408101081848145
    4. ' [' → logprob: -5.6658101081848145
    5. 'set' → logprob: -7.4158101081848145
    6. ' {}' → logprob: -7.6658101081848145
    7. '{}' → logprob: -7.9158101081848145
    8. ' set' → logprob: -8.665809631347656
    9. ' ' → logprob: -9.165809631347656
    10. 'list' → logprob: -9.540809631347656

Token 18: 'packet' (ID: 55525)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06435610353946686
    2. 'f' → logprob: -3.3143560886383057
    3. '.' → logprob: -4.564356327056885
    4. 'i' → logprob: -4.814356327056885
    5. ' for' → logprob: -6.564356327056885
    6. '_' → logprob: -6.689356327056885
    7. '=' → logprob: -6.689356327056885
    8. 'count' → logprob: -7.189356327056885
    9. '[' → logprob: -7.564356327056885
    10. 'if' → logprob: -7.689356327056885

Token 19: '_len' (ID: 13683)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.12712453305721283
    2. '.append' → logprob: -2.127124547958374
    3. '.pop' → logprob: -9.752124786376953
    4. '.clear' → logprob: -9.877124786376953
    5. '<|end|>' → logprob: -11.127124786376953
    6. '.setdefault' → logprob: -11.252124786376953
    7. '=' → logprob: -11.627124786376953
    8. '[:]' → logprob: -11.752124786376953
    9. '[' → logprob: -12.002124786376953
    10. ' .' → logprob: -12.127124786376953

Token 20: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9529133439064026
    2. '=' → logprob: -1.0779132843017578
    3. 's' → logprob: -1.8279132843017578
    4. ' =' → logprob: -2.702913284301758
    5. '[' → logprob: -3.202913284301758
    6. '(' → logprob: -6.077913284301758
    7. '[]' → logprob: -6.952913284301758
    8. ')' → logprob: -7.202913284301758
    9. ']' → logprob: -8.327913284301758
    10. '()' → logprob: -8.327913284301758

Token 21: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7192491888999939
    2. ' ' → logprob: -0.7192491888999939
    3. ' len' → logprob: -4.344249248504639
    4. 'len' → logprob: -4.469249248504639
    5. ' []' → logprob: -7.719249248504639
    6. '[]' → logprob: -7.844249248504639
    7. '[len' → logprob: -8.34424877166748
    8. '[' → logprob: -8.84424877166748
    9. ' [' → logprob: -10.34424877166748
    10. '1' → logprob: -10.59424877166748

Token 22: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006924942601472139
    2. '[]' → logprob: -5.631925106048584
    3. 'len' → logprob: -6.006925106048584
    4. ' ' → logprob: -7.256925106048584
    5. '[' → logprob: -9.256924629211426
    6. '[len' → logprob: -10.881924629211426
    7. 'N' → logprob: -11.506924629211426
    8. ' []' → logprob: -11.631924629211426
    9. ' len' → logprob: -12.256924629211426
    10. '[]
' → logprob: -12.756924629211426

Token 23: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8976835608482361
    2. '\n' → logprob: -1.7726836204528809
    3. ' 
' → logprob: -1.8976836204528809
    4. '<|end|>' → logprob: -2.272683620452881
    5. 'for' → logprob: -3.522683620452881
    6. '\' → logprob: -3.647683620452881
    7. ' for' → logprob: -3.772683620452881
    8. '```' → logprob: -3.897683620452881
    9. '' → logprob: -4.147683620452881
    10. '[' → logprob: -4.772683620452881

Token 24: 'direction' (ID: 43278)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09375661611557007
    2. ' for' → logprob: -2.968756675720215
    3. 'i' → logprob: -4.218756675720215
    4. 'current' → logprob: -5.343756675720215
    5. '_' → logprob: -5.968756675720215
    6. '=' → logprob: -6.093756675720215
    7. 'if' → logprob: -6.218756675720215
    8. '```' → logprob: -6.343756675720215
    9. '[' → logprob: -6.468756675720215
    10. 'c' → logprob: -6.718756675720215

Token 25: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.010413667187094688
    2. '=' → logprob: -4.635413646697998
    3. '_' → logprob: -7.510413646697998
    4. 's' → logprob: -9.510414123535156
    5. '[' → logprob: -11.510414123535156
    6. ' ' → logprob: -11.510414123535156
    7. ',' → logprob: -12.635414123535156
    8. ')' → logprob: -12.885414123535156
    9. '_space' → logprob: -13.385414123535156
    10. '.' → logprob: -13.635414123535156

Token 26: ' S' (ID: 336)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3238908350467682
    2. ' ' → logprob: -1.6988908052444458
    3. ''' → logprob: -3.5738909244537354
    4. '0' → logprob: -4.073890686035156
    5. ' True' → logprob: -4.323890686035156
    6. ' '' → logprob: -4.698890686035156
    7. 'True' → logprob: -4.823890686035156
    8. '"' → logprob: -4.948890686035156
    9. '''' → logprob: -5.823890686035156
    10. '""' → logprob: -6.573890686035156

Token 27: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.001943984068930149
    2. '[-' → logprob: -7.876944065093994
    3. '[token' → logprob: -8.251943588256836
    4. '[count' → logprob: -8.376943588256836
    5. '[p' → logprob: -8.626943588256836
    6. '[]' → logprob: -8.876943588256836
    7. '[i' → logprob: -9.251943588256836
    8. '[N' → logprob: -9.376943588256836
    9. '\[' → logprob: -9.751943588256836
    10. '[len' → logprob: -9.751943588256836

Token 28: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003010030835866928
    2. '-' → logprob: -6.503009796142578
    3. '1' → logprob: -7.128009796142578
    4. ' ' → logprob: -7.628009796142578
    5. 'packet' → logprob: -8.753009796142578
    6. ' -' → logprob: -10.253009796142578
    7. ' packet' → logprob: -12.253009796142578
    8. ']' → logprob: -13.065509796142578
    9. '   ' → logprob: -13.315509796142578
    10. 'len' → logprob: -13.378009796142578

Token 29: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.013565334491431713
    2. '])' → logprob: -4.638565540313721
    3. ')' → logprob: -5.638565540313721
    4. ' ]' → logprob: -8.763565063476562
    5. ')]' → logprob: -10.888565063476562
    6. ']==' → logprob: -10.888565063476562
    7. ' )' → logprob: -11.013565063476562
    8. ' ])' → logprob: -11.263565063476562
    9. '[' → logprob: -11.763565063476562
    10. '])]' → logprob: -12.388565063476562

Token 30: 'seq' (ID: 27794)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7609183192253113
    2. ' for' → logprob: -1.510918378829956
    3. '<|end|>' → logprob: -1.635918378829956
    4. '\n' → logprob: -3.260918378829956
    5. ' ' → logprob: -3.635918378829956
    6. '
' → logprob: -4.010918140411377
    7. ')' → logprob: -5.010918140411377
    8. ' 
' → logprob: -5.135918140411377
    9. '<|end|>' → logprob: -5.260918140411377
    10. ':' → logprob: -5.385918140411377

Token 31: ' =' (ID: 314)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.5374862551689148
    2. '_len' → logprob: -1.2874863147735596
    3. '_' → logprob: -2.5374863147735596
    4. 'ue' → logprob: -3.4124863147735596
    5. '=' → logprob: -5.1624860763549805
    6. '_length' → logprob: -5.7874860763549805
    7. 'ence' → logprob: -5.7874860763549805
    8. ' =' → logprob: -5.9124860763549805
    9. 'uel' → logprob: -6.0374860763549805
    10. '_count' → logprob: -6.4124860763549805

Token 32: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2622271180152893
    2. ' ' → logprob: -2.1372270584106445
    3. 'direction' → logprob: -3.0122270584106445
    4. ' direction' → logprob: -3.6372270584106445
    5. '0' → logprob: -3.7622270584106445
    6. ''' → logprob: -5.2622270584106445
    7. '[' → logprob: -5.7622270584106445
    8. '''' → logprob: -6.6372270584106445
    9. ' []' → logprob: -7.3872270584106445
    10. ' '' → logprob: -7.5122270584106445

Token 33: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4357524812221527
    2. '[' → logprob: -2.1857523918151855
    3. '''' → logprob: -2.5607523918151855
    4. '[]' → logprob: -2.8107523918151855
    5. 'direction' → logprob: -3.1857523918151855
    6. '0' → logprob: -3.3107523918151855
    7. '""' → logprob: -3.8107523918151855
    8. '['' → logprob: -6.9357523918151855
    9. '[]
' → logprob: -7.9357523918151855
    10. ''d' → logprob: -8.060752868652344

Token 34: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.13159972429275513
    2. ' for' → logprob: -2.5065996646881104
    3. 'if' → logprob: -3.7565996646881104
    4. ' if' → logprob: -4.7565999031066895
    5. 'i' → logprob: -5.3815999031066895
    6. '```' → logprob: -7.2565999031066895
    7. '#' → logprob: -7.3815999031066895
    8. ' 
' → logprob: -7.6315999031066895
    9. '.' → logprob: -7.7565999031066895
    10. ',' → logprob: -8.006599426269531

Token 35: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8966858386993408
    2. ' for' → logprob: -1.3966858386993408
    3. 'i' → logprob: -2.521685838699341
    4. 'if' → logprob: -2.896685838699341
    5. ' if' → logprob: -2.896685838699341
    6. '
' → logprob: -3.021685838699341
    7. '<|end|>' → logprob: -3.146685838699341
    8. '\n' → logprob: -3.521685838699341
    9. ' 
' → logprob: -4.771685600280762
    10. '```' → logprob: -5.271685600280762

Token 36: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.30996429920196533
    2. ' ' → logprob: -1.4349642992019653
    3. ' _' → logprob: -3.809964179992676
    4. ' c' → logprob: -5.559964179992676
    5. 'i' → logprob: -6.559964179992676
    6. '_' → logprob: -7.684964179992676
    7. 'c' → logprob: -8.934964179992676
    8. ' char' → logprob: -8.934964179992676
    9. ' ch' → logprob: -9.559964179992676
    10. ' direction' → logprob: -9.809964179992676

Token 37: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.015494709834456444
    2. 'in' → logprob: -4.2654948234558105
    3. ' ' → logprob: -6.6404948234558105
    4. '<|end|>' → logprob: -12.515494346618652
    5. '+' → logprob: -12.765494346618652
    6. ' i' → logprob: -12.890494346618652
    7. '  ' → logprob: -12.890494346618652
    8. ',' → logprob: -13.015494346618652
    9. 'range' → logprob: -13.265494346618652
    10. ' range' → logprob: -13.265494346618652

Token 38: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.023246755823493004
    2. 'range' → logprob: -3.7732467651367188
    3. ' ' → logprob: -14.398246765136719
    4. '(range' → logprob: -15.023246765136719
    5. '	range' → logprob: -15.023246765136719
    6. ' xrange' → logprob: -16.64824676513672
    7. '_range' → logprob: -17.77324676513672
    8. ' in' → logprob: -18.02324676513672
    9. '  ' → logprob: -18.39824676513672
    10. '```' → logprob: -19.39824676513672

Token 39: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.463036435074173e-05
    2. ' (' → logprob: -11.000024795532227
    3. '(len' → logprob: -12.000024795532227
    4. '(
' → logprob: -14.125024795532227
    5. '(N' → logprob: -14.625024795532227
    6. ' ' → logprob: -15.500024795532227
    7. '1' → logprob: -16.125024795532227
    8. '(i' → logprob: -16.125024795532227
    9. '(n' → logprob: -16.625024795532227
    10. '(space' → logprob: -17.125024795532227

Token 40: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001601539261173457
    2. ' ' → logprob: -9.000160217285156
    3. 'N' → logprob: -10.500160217285156
    4. 'len' → logprob: -11.875160217285156
    5. '   ' → logprob: -13.750160217285156
    6. ' N' → logprob: -14.125160217285156
    7. 'K' → logprob: -15.750160217285156
    8. ' len' → logprob: -16.000160217285156
    9. '0' → logprob: -16.375160217285156
    10. '(' → logprob: -17.812660217285156

Token 41: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007698441040702164
    2. ',N' → logprob: -7.50076961517334
    3. ',len' → logprob: -8.87576961517334
    4. ' ,' → logprob: -9.62576961517334
    5. ' N' → logprob: -13.12576961517334
    6. 'N' → logprob: -13.12576961517334
    7. ' ' → logprob: -13.37576961517334
    8. 'len' → logprob: -13.87576961517334
    9. '(len' → logprob: -14.37576961517334
    10. '```' → logprob: -14.62576961517334

Token 42: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.008615399710834026
    2. ' N' → logprob: -4.758615493774414
    3. 'len' → logprob: -14.508615493774414
    4. 'K' → logprob: -15.758615493774414
    5. 'n' → logprob: -15.883615493774414
    6. ' len' → logprob: -16.133615493774414
    7. '	N' → logprob: -16.758615493774414
    8. ' ' → logprob: -16.883615493774414
    9. ')' → logprob: -17.383615493774414
    10. '   ' → logprob: -18.883615493774414

Token 43: ' -' (ID: 533)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0021384824067354202
    2. '):
' → logprob: -6.252138614654541
    3. ':' → logprob: -8.502138137817383
    4. ')' → logprob: -13.002138137817383
    5. '):
' → logprob: -13.127138137817383
    6. '}:' → logprob: -13.752138137817383
    7. ' ):' → logprob: -15.377138137817383
    8. ']:' → logprob: -15.502138137817383
    9. '):

' → logprob: -15.502138137817383
    10. '```' → logprob: -15.502138137817383

Token 44: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01157081313431263
    2. '0' → logprob: -5.386570930480957
    3. 'K' → logprob: -5.511570930480957
    4. ' ' → logprob: -6.261570930480957
    5. ' K' → logprob: -7.511570930480957
    6. '-' → logprob: -8.386570930480957
    7. '+' → logprob: -9.261570930480957
    8. 'N' → logprob: -10.261570930480957
    9. ')' → logprob: -10.761570930480957
    10. '2' → logprob: -11.511570930480957

Token 45: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00025311444187536836
    2. 'K' → logprob: -8.500252723693848
    3. '0' → logprob: -10.125252723693848
    4. ' ' → logprob: -11.750252723693848
    5. '2' → logprob: -15.000252723693848
    6. ' K' → logprob: -15.000252723693848
    7. '```' → logprob: -15.000252723693848
    8. '-' → logprob: -15.125252723693848
    9. '+' → logprob: -16.125253677368164
    10. ')' → logprob: -16.500253677368164

Token 46: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0010356683051213622
    2. ':' → logprob: -7.126035690307617
    3. '):
' → logprob: -9.126035690307617
    4. ')' → logprob: -9.126035690307617
    5. '+' → logprob: -11.626035690307617
    6. ' ):' → logprob: -13.501035690307617
    7. ',' → logprob: -13.626035690307617
    8. '}:' → logprob: -14.501035690307617
    9. '):
' → logprob: -14.751035690307617
    10. '+:' → logprob: -15.376035690307617

Token 47: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25847718119621277
    2. '<|end|>' → logprob: -1.6334772109985352
    3. '```' → logprob: -5.008477210998535
    4. ' ' → logprob: -5.133477210998535
    5. ' if' → logprob: -5.633477210998535
    6. '<|end|>' → logprob: -5.633477210998535
    7. ' 
' → logprob: -5.633477210998535
    8. '    
' → logprob: -6.008477210998535
    9. ':' → logprob: -6.258477210998535
    10. '
' → logprob: -6.508477210998535

Token 48: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8689624667167664
    2. ' ' → logprob: -1.1189625263214111
    3. ' if' → logprob: -2.368962526321411
    4. '<|end|>' → logprob: -2.993962526321411
    5. ' 
' → logprob: -3.243962526321411
    6. '    ' → logprob: -3.743962526321411
    7. '```' → logprob: -4.368962287902832
    8. 'if' (adapté à ' if') → logprob: -4.993962287902832
    9. '  ' → logprob: -5.743962287902832
    10. ' ```' → logprob: -5.868962287902832

Token 49: ' S' (ID: 336)
  Prédit: ' S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.1436428427696228
    2. 'S' → logprob: -2.0186429023742676
    3. ' direction' → logprob: -7.393642902374268
    4. ' ' → logprob: -8.64364242553711
    5. 'direction' → logprob: -9.01864242553711
    6. '    ' → logprob: -10.51864242553711
    7. '   ' → logprob: -11.01864242553711
    8. ' ' → logprob: -12.89364242553711
    9. ' (' → logprob: -13.26864242553711
    10. '  ' → logprob: -13.51864242553711

Token 50: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.9266199160483666e-05
    2. '[' → logprob: -10.875019073486328
    3. '[I' → logprob: -15.625019073486328
    4. '```' → logprob: -16.875019073486328
    5. '\[' → logprob: -17.750019073486328
    6. '[
' → logprob: -18.250019073486328
    7. 'i' → logprob: -18.500019073486328
    8. ' [' → logprob: -18.625019073486328
    9. '[j' → logprob: -19.500019073486328
    10. '[...]' → logprob: -19.500019073486328

Token 51: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.41689252853393555
    2. ']' → logprob: -1.5418925285339355
    3. '==' → logprob: -2.2918925285339355
    4. ']==' → logprob: -3.7918925285339355
    5. ')' → logprob: -6.4168925285339355
    6. ' ]' → logprob: -6.7918925285339355
    7. ' ' → logprob: -8.166893005371094
    8. '=' → logprob: -9.291893005371094
    9. ')==' → logprob: -9.791893005371094
    10. '[' → logprob: -11.166893005371094

Token 52: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.1427195966243744
    2. '==' → logprob: -2.0177195072174072
    3. ')' → logprob: -11.142719268798828
    4. ' ' → logprob: -11.642719268798828
    5. ' !=' → logprob: -12.267719268798828
    6. '=' → logprob: -12.392719268798828
    7. ']==' → logprob: -13.267719268798828
    8. '!=' → logprob: -13.267719268798828
    9. ')==' → logprob: -13.267719268798828
    10. '[' → logprob: -13.392719268798828

Token 53: ' direction' (ID: 9262)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.23316800594329834
    2. ' direction' → logprob: -1.9831680059432983
    3. 'S' → logprob: -2.858168125152588
    4. ' S' → logprob: -4.358168125152588
    5. ' ' → logprob: -9.10816764831543
    6. '   ' → logprob: -11.54566764831543
    7. '  ' → logprob: -11.60816764831543
    8. ' ' → logprob: -12.42066764831543
    9. '(direction' → logprob: -12.48316764831543
    10. ''' → logprob: -12.67066764831543

Token 54: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008256753906607628
    2. ' and' → logprob: -4.883256912231445
    3. 'and' → logprob: -8.258256912231445
    4. ' :' → logprob: -8.508256912231445
    5. '=' → logprob: -10.008256912231445
    6. ':
' → logprob: -10.258256912231445
    7. '       ' → logprob: -10.633256912231445
    8. '   ' → logprob: -10.758256912231445
    9. '):' → logprob: -11.133256912231445
    10. '<|end|>' → logprob: -11.383256912231445

Token 55: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06815320998430252
    2. '   ' → logprob: -3.193153142929077
    3. 'packet' → logprob: -4.193153381347656
    4. ' packet' → logprob: -5.443153381347656
    5. 'seq' → logprob: -6.068153381347656
    6. ' and' → logprob: -6.568153381347656
    7. '	packet' → logprob: -7.693153381347656
    8. 'and' → logprob: -8.318153381347656
    9. ':' → logprob: -8.568153381347656
    10. ' seq' → logprob: -9.068153381347656

Token 56: ' seq' (ID: 26775)
  Prédit: 'seq'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seq' (adapté à ' seq') → logprob: -0.151890367269516
    2. ' seq' → logprob: -2.026890277862549
    3. '   ' → logprob: -5.776890277862549
    4. 'packet' → logprob: -6.276890277862549
    5. '_seq' → logprob: -6.526890277862549
    6. '       ' → logprob: -6.651890277862549
    7. ' packet' → logprob: -7.776890277862549
    8. ' ' → logprob: -8.401890754699707
    9. 'sequence' → logprob: -8.776890754699707
    10. '(seq' → logprob: -8.901890754699707

Token 57: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.17986483871936798
    2. ' +=' → logprob: -1.8048648834228516
    3. '+' → logprob: -9.804864883422852
    4. '=' → logprob: -10.054864883422852
    5. '<|end|>' → logprob: -11.179864883422852
    6. ']+=' → logprob: -12.179864883422852
    7. '+='' → logprob: -13.804864883422852
    8. ' =' → logprob: -14.929864883422852
    9. '```' → logprob: -15.054864883422852
    10. ' ' → logprob: -15.179864883422852

Token 58: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.50001049041748
    3. '<|end|>' → logprob: -18.375009536743164
    4. '   ' → logprob: -18.750009536743164
    5. '```' → logprob: -20.000009536743164
    6. '+' → logprob: -20.250009536743164
    7. '  ' → logprob: -21.625009536743164
    8. '۱' → logprob: -21.875009536743164
    9. '-' → logprob: -21.875009536743164
    10. '१' → logprob: -22.250009536743164

Token 59: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.45848218582978e-06
    2. ' ' → logprob: -13.00000286102295
    3. '<|end|>' → logprob: -16.375001907348633
    4. '```' → logprob: -18.125001907348633
    5. '   ' → logprob: -19.000001907348633
    6. '-' → logprob: -19.500001907348633
    7. '+' → logprob: -20.250001907348633
    8. '`' → logprob: -20.500001907348633
    9. '۱' → logprob: -20.875001907348633
    10. '१' → logprob: -21.250001907348633

Token 60: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011843563988804817
    2. 'else' → logprob: -5.136843681335449
    3. '<|end|>' → logprob: -5.511843681335449
    4. '       ' → logprob: -7.261843681335449
    5. ' else' → logprob: -7.511843681335449
    6. 'elif' → logprob: -8.38684368133545
    7. '```' → logprob: -9.13684368133545
    8. '
' → logprob: -9.51184368133545
    9. ' ' → logprob: -9.63684368133545
    10. '<|end|>' → logprob: -10.13684368133545

Token 61: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1036418229341507
    2. 'else' → logprob: -2.6036417484283447
    3. '<|end|>' → logprob: -4.603641986846924
    4. 'elif' → logprob: -5.103641986846924
    5. ' else' → logprob: -5.603641986846924
    6. '       ' → logprob: -6.353641986846924
    7. '
' → logprob: -6.478641986846924
    8. ' ' → logprob: -8.103641510009766
    9. '```' → logprob: -8.478641510009766
    10. ' elif' → logprob: -8.603641510009766

Token 62: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.1736026108264923
    2. '   ' → logprob: -1.92360258102417
    3. ' else' → logprob: -4.42360258102417
    4. 'elif' → logprob: -6.79860258102417
    5. '       ' → logprob: -9.798603057861328
    6. '	else' → logprob: -10.173603057861328
    7. ' ' → logprob: -10.298603057861328
    8. '<|end|>' → logprob: -10.798603057861328
    9. ' elif' → logprob: -11.423603057861328
    10. '```' → logprob: -11.548603057861328

Token 63: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005765845999121666
    2. ':
' → logprob: -5.255765914916992
    3. '       ' → logprob: -8.255765914916992
    4. '   ' → logprob: -8.880765914916992
    5. '<|end|>' → logprob: -9.630765914916992
    6. ',' → logprob: -11.005765914916992
    7. ' :' → logprob: -11.130765914916992
    8. '<|end|>' → logprob: -12.005765914916992
    9. '```' → logprob: -12.255765914916992
    10. ' :
' → logprob: -12.630765914916992

Token 64: '       ' (ID: 309)
  Prédit: 'packet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'packet' → logprob: -0.8879818916320801
    2. ' packet' → logprob: -1.13798189163208
    3. '       ' → logprob: -1.63798189163208
    4. '   ' → logprob: -2.63798189163208
    5. '	packet' → logprob: -7.26298189163208
    6. '```' → logprob: -7.38798189163208
    7. '    ' → logprob: -8.887981414794922
    8. '        
' → logprob: -9.262981414794922
    9. ' if' → logprob: -9.512981414794922
    10. ' ' → logprob: -9.512981414794922

Token 65: ' packet' (ID: 21133)
  Prédit: ' packet'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' packet' → logprob: -0.6347023844718933
    2. 'packet' (adapté à ' packet') → logprob: -0.7597023844718933
    3. '       ' → logprob: -6.634702205657959
    4. '   ' → logprob: -7.509702205657959
    5. '	packet' → logprob: -9.384702682495117
    6. '```' → logprob: -9.509702682495117
    7. '``' → logprob: -10.884702682495117
    8. '           ' → logprob: -11.259702682495117
    9. 'package' → logprob: -11.634702682495117
    10. '
' → logprob: -11.759702682495117

Token 66: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0036361846141517162
    2. '.' → logprob: -5.628636360168457
    3. '.extend' → logprob: -10.878636360168457
    4. 'append' → logprob: -11.503636360168457
    5. '_append' → logprob: -13.003636360168457
    6. '.setdefault' → logprob: -13.628636360168457
    7. '<|end|>' → logprob: -13.753636360168457
    8. ' .' → logprob: -14.253636360168457
    9. ').' → logprob: -15.253636360168457
    10. '.Append' → logprob: -15.378636360168457

Token 67: '(seq' (ID: 78669)
  Prédit: '(seq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(seq' → logprob: -5.955703818472102e-05
    2. '(' → logprob: -10.500059127807617
    3. '((' → logprob: -10.750059127807617
    4. '(sequence' → logprob: -12.125059127807617
    5. '(packet' → logprob: -12.250059127807617
    6. '(len' → logprob: -15.625059127807617
    7. 'seq' → logprob: -16.375059127807617
    8. '(se' → logprob: -16.875059127807617
    9. '(max' → logprob: -18.125059127807617
    10. '(tuple' → logprob: -18.125059127807617

Token 68: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005944444332271814
    2. ')
' → logprob: -5.13094425201416
    3. '<|end|>' → logprob: -11.63094425201416
    4. ')
' → logprob: -12.63094425201416
    5. '),' → logprob: -14.38094425201416
    6. '```' → logprob: -14.50594425201416
    7. ')

' → logprob: -14.63094425201416
    8. '<|end|>' → logprob: -14.75594425201416
    9. ' )' → logprob: -15.25594425201416
    10. ')`' → logprob: -16.005945205688477

Token 69: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.30039703845977783
    2. '   ' → logprob: -1.6753970384597778
    3. '\n' → logprob: -3.8003969192504883
    4. 'direction' → logprob: -4.050396919250488
    5. 'newline' → logprob: -4.800396919250488
    6. '        
' → logprob: -5.050396919250488
    7. '    
' → logprob: -5.425396919250488
    8. ' ' → logprob: -6.175396919250488
    9. ' 
' → logprob: -6.175396919250488
    10. '' → logprob: -6.300396919250488

Token 70: ' seq' (ID: 26775)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.05829862132668495
    2. 'seq' (adapté à ' seq') → logprob: -3.0582985877990723
    3. 'packet' → logprob: -5.183298587799072
    4. 'sequence' → logprob: -5.808298587799072
    5. ' direction' → logprob: -7.183298587799072
    6. '   ' → logprob: -8.68329906463623
    7. '       ' → logprob: -10.43329906463623
    8. ' seq' → logprob: -10.68329906463623
    9. 'dir' → logprob: -10.93329906463623
    10. '           ' → logprob: -11.43329906463623

Token 71: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07889022678136826
    2. ' =' → logprob: -2.578890323638916
    3. '＝' → logprob: -15.078889846801758
    4. '<|end|>' → logprob: -16.203889846801758
    5. ' =)' → logprob: -17.203889846801758
    6. '.=' → logprob: -17.453889846801758
    7. ')' → logprob: -18.078889846801758
    8. '+=' → logprob: -18.203889846801758
    9. '=
' → logprob: -18.328889846801758
    10. ' +=' → logprob: -18.578889846801758

Token 72: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.054500666621607e-06
    2. ' ' → logprob: -12.75000286102295
    3. '0' → logprob: -16.250003814697266
    4. '   ' → logprob: -19.125003814697266
    5. '```' → logprob: -20.250003814697266
    6. '2' → logprob: -20.375003814697266
    7. '<|end|>' → logprob: -20.500003814697266
    8. '  ' → logprob: -22.187503814697266
    9. '۱' → logprob: -22.187503814697266
    10. '１' → logprob: -22.625003814697266

Token 73: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.054500666621607e-06
    2. ' ' → logprob: -12.87500286102295
    3. '0' → logprob: -15.25000286102295
    4. '2' → logprob: -17.000003814697266
    5. '```' → logprob: -17.500003814697266
    6. '   ' → logprob: -18.125003814697266
    7. '<|end|>' → logprob: -18.625003814697266
    8. '۱' → logprob: -18.687503814697266
    9. '１' → logprob: -19.312503814697266
    10. '१' → logprob: -19.500003814697266

Token 74: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8470592498779297
    2. 'direction' → logprob: -1.2220592498779297
    3. '<|end|>' → logprob: -1.4720592498779297
    4. ' direction' → logprob: -3.3470592498779297
    5. '       ' → logprob: -5.34705924987793
    6. 'i' → logprob: -5.34705924987793
    7. '```' → logprob: -7.47205924987793
    8. ')' → logprob: -7.84705924987793
    9. '<|end|>' → logprob: -7.84705924987793
    10. ' i' → logprob: -8.09705924987793

Token 75: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 76: ' direction' (ID: 9262)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'direction' (adapté à ' direction') → logprob: -4.1080467781284824e-05
    2. ' direction' → logprob: -10.375041007995605
    3. '   ' → logprob: -12.250041007995605
    4. '       ' → logprob: -12.250041007995605
    5. '```' → logprob: -16.875041961669922
    6. '(direction' → logprob: -17.125041961669922
    7. 'N' → logprob: -17.625041961669922
    8. '           ' → logprob: -17.750041961669922
    9. '方向' → logprob: -17.875041961669922
    10. 'packet' → logprob: -18.000041961669922

Token 77: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759398937225342
    2. ' =' → logprob: -0.8259398937225342
    3. '＝' → logprob: -15.325940132141113
    4. ' ' → logprob: -15.700940132141113
    5. '=

' → logprob: -18.200939178466797
    6. ' =)' → logprob: -18.325939178466797
    7. '<|end|>' → logprob: -18.450939178466797
    8. ' =
' → logprob: -18.575939178466797
    9. ',' → logprob: -19.700939178466797
    10. ' ==' → logprob: -19.700939178466797

Token 78: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.0005530327325686812
    2. ' S' → logprob: -7.500553131103516
    3. ' ' → logprob: -17.875553131103516
    4. '   ' → logprob: -18.375553131103516
    5. 's' → logprob: -18.500553131103516
    6. '_S' → logprob: -18.875553131103516
    7. ''S' → logprob: -19.000553131103516
    8. '`' → logprob: -19.500553131103516
    9. '	S' → logprob: -19.500553131103516
    10. '```' → logprob: -19.875553131103516

Token 79: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -8.2994620242971e-06
    2. '[' → logprob: -11.750008583068848
    3. '```' → logprob: -15.375008583068848
    4. 'i' → logprob: -16.75000762939453
    5. '[I' → logprob: -17.25000762939453
    6. '[
' → logprob: -17.50000762939453
    7. '<|end|>' → logprob: -19.12500762939453
    8. '[int' → logprob: -19.12500762939453
    9. '`' → logprob: -19.37500762939453
    10. '[index' → logprob: -19.87500762939453

Token 80: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007805353961884975
    2. ']' → logprob: -4.882805347442627
    3. '])' → logprob: -9.507805824279785
    4. '<|end|>' → logprob: -10.132805824279785
    5. ' )' → logprob: -10.257805824279785
    6. ')]' → logprob: -11.382805824279785
    7. '}' → logprob: -11.507805824279785
    8. ')
' → logprob: -11.632805824279785
    9. '')' → logprob: -12.632805824279785
    10. '[' → logprob: -12.757805824279785

Token 81: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 82: ' packet' (ID: 21133)
  Prédit: 'packet'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'packet' (adapté à ' packet') → logprob: -0.44187331199645996
    2. 'if' → logprob: -1.06687331199646
    3. 'for' → logprob: -4.816873550415039
    4. 'i' → logprob: -5.691873550415039
    5. '```' → logprob: -7.691873550415039
    6. '<|end|>' → logprob: -7.816873550415039
    7. ' packet' → logprob: -8.441873550415039
    8. ' if' → logprob: -8.941873550415039
    9. '#' → logprob: -9.566873550415039
    10. ')' → logprob: -9.566873550415039

Token 83: '_len' (ID: 13683)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.16086973249912262
    2. '.' → logprob: -1.9108697175979614
    3. '.extend' → logprob: -8.285869598388672
    4. '<|end|>' → logprob: -8.410869598388672
    5. '.setdefault' → logprob: -9.910869598388672
    6. 'append' → logprob: -10.035869598388672
    7. '.pop' → logprob: -10.785869598388672
    8. '.app' → logprob: -11.285869598388672
    9. '.
' → logprob: -11.910869598388672
    10. '.Append' → logprob: -11.910869598388672

Token 84: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.0493929497897625
    2. '+=' → logprob: -3.5493929386138916
    3. '+' → logprob: -4.049393177032471
    4. ' +' → logprob: -6.549393177032471
    5. '=' → logprob: -8.049392700195312
    6. ' =' → logprob: -8.674392700195312
    7. ' ' → logprob: -10.049392700195312
    8. '<|end|>' → logprob: -10.549392700195312
    9. '++' → logprob: -11.049392700195312
    10. ' ' → logprob: -13.174392700195312

Token 85: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.676292231422849e-05
    2. ' ' → logprob: -11.000017166137695
    3. '   ' → logprob: -19.125017166137695
    4. '<|end|>' → logprob: -19.625017166137695
    5. '```' → logprob: -19.875017166137695
    6. '2' → logprob: -20.625017166137695
    7. '0' → logprob: -21.750017166137695
    8. '１' → logprob: -22.125017166137695
    9. '  ' → logprob: -22.375017166137695
    10. '۱' → logprob: -22.625017166137695

Token 86: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '<|end|>' → logprob: -19.500001907348633
    4. '2' → logprob: -20.250001907348633
    5. '```' → logprob: -20.750001907348633
    6. '   ' → logprob: -20.875001907348633
    7. '  ' → logprob: -22.125001907348633
    8. '-' → logprob: -22.500001907348633
    9. '１' → logprob: -22.625001907348633
    10. 'len' → logprob: -22.750001907348633

Token 87: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 88: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8788997530937195
    2. '<|end|>' → logprob: -0.8788997530937195
    3. 'packet' → logprob: -2.6288998126983643
    4. ')' → logprob: -3.1288998126983643
    5. 'for' → logprob: -3.3788998126983643
    6. ' if' → logprob: -5.003899574279785
    7. '```' → logprob: -5.378899574279785
    8. '#' → logprob: -5.878899574279785
    9. '<|end|>' → logprob: -7.128899574279785
    10. '[' → logprob: -7.253899574279785

Token 89: ' S' (ID: 336)
  Prédit: ' S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.24641907215118408
    2. 'S' → logprob: -1.621419072151184
    3. ' seq' → logprob: -4.2464189529418945
    4. 'seq' → logprob: -5.2464189529418945
    5. ' packet' → logprob: -7.9964189529418945
    6. ' direction' → logprob: -8.746418952941895
    7. 'packet' → logprob: -8.996418952941895
    8. ' ' → logprob: -9.121418952941895
    9. ' N' → logprob: -9.246418952941895
    10. 'direction' → logprob: -9.746418952941895

Token 90: '[N' (ID: 49776)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.16035157442092896
    2. '[N' → logprob: -1.9103515148162842
    3. '[' → logprob: -9.160351753234863
    4. '[len' → logprob: -11.535351753234863
    5. '[i' → logprob: -12.160351753234863
    6. ' and' → logprob: -13.285351753234863
    7. 'and' → logprob: -13.285351753234863
    8. '[n' → logprob: -13.535351753234863
    9. '[I' → logprob: -13.910351753234863
    10. '[S' → logprob: -14.285351753234863

Token 91: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.004637791775166988
    2. ' -' → logprob: -5.379637718200684
    3. '1' → logprob: -11.504637718200684
    4. ' ' → logprob: -12.379637718200684
    5. '[' → logprob: -13.629637718200684
    6. '–' → logprob: -15.192137718200684
    7. '−' → logprob: -15.317137718200684
    8. ']' → logprob: -15.379637718200684
    9. '```' → logprob: -15.692137718200684
    10. '==' → logprob: -15.817137718200684

Token 92: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007174347410909832
    2. '2' → logprob: -7.875717639923096
    3. ' ' → logprob: -8.000717163085938
    4. '   ' → logprob: -14.375717163085938
    5. '```' → logprob: -15.188217163085938
    6. '  ' → logprob: -15.313217163085938
    7. '-' → logprob: -15.875717163085938
    8. '۱' → logprob: -15.875717163085938
    9. '１' → logprob: -16.313217163085938
    10. ')' → logprob: -16.625717163085938

Token 93: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0028122442308813334
    2. '2' → logprob: -5.877812385559082
    3. ' ' → logprob: -12.002812385559082
    4. '   ' → logprob: -14.502812385559082
    5. '```' → logprob: -15.315312385559082
    6. '１' → logprob: -16.127811431884766
    7. '  ' → logprob: -16.752811431884766
    8. '۱' → logprob: -16.815311431884766
    9. '3' → logprob: -17.065311431884766
    10. '१' → logprob: -17.627811431884766

Token 94: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.2023247927427292
    2. ' ==' → logprob: -1.7023247480392456
    3. ']' → logprob: -7.452324867248535
    4. ' ' → logprob: -9.077324867248535
    5. ']==' → logprob: -9.202324867248535
    6. ')' → logprob: -9.577324867248535
    7. '=' → logprob: -11.577324867248535
    8. '   ' → logprob: -11.577324867248535
    9. '	' → logprob: -11.952324867248535
    10. '!=' → logprob: -12.077324867248535

Token 95: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.2812279164791107
    2. ' ==' → logprob: -1.406227946281433
    3. '=' → logprob: -10.281228065490723
    4. ' ' → logprob: -11.281228065490723
    5. '!=' → logprob: -11.281228065490723
    6. ' !=' → logprob: -12.281228065490723
    7. ')' → logprob: -12.531228065490723
    8. '   ' → logprob: -13.156228065490723
    9. ' =' → logprob: -13.406228065490723
    10. '	' → logprob: -13.656228065490723

Token 96: ' direction' (ID: 9262)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.22542841732501984
    2. ' direction' → logprob: -1.6004284620285034
    3. 'S' → logprob: -11.725428581237793
    4. ' ' → logprob: -13.225428581237793
    5. '   ' → logprob: -13.350428581237793
    6. '(direction' → logprob: -13.350428581237793
    7. ' S' → logprob: -13.600428581237793
    8. '    ' → logprob: -14.725428581237793
    9. 'd' → logprob: -15.475428581237793
    10. '  ' → logprob: -15.600428581237793

Token 97: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20149092376232147
    2. ':
' → logprob: -1.701490879058838
    3. '   ' → logprob: -9.951491355895996
    4. '):
' → logprob: -11.451491355895996
    5. '):' → logprob: -12.701491355895996
    6. '       ' → logprob: -12.826491355895996
    7. ':
' → logprob: -12.826491355895996
    8. ' :' → logprob: -12.951491355895996
    9. ' :
' → logprob: -12.951491355895996
    10. '==' → logprob: -13.201491355895996

Token 98: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21266907453536987
    2. '   ' → logprob: -2.0876691341400146
    3. 'seq' → logprob: -2.8376691341400146
    4. ' seq' → logprob: -5.2126688957214355
    5. ':' → logprob: -5.8376688957214355
    6. ':
' → logprob: -8.587669372558594
    7. '```' → logprob: -9.337669372558594
    8. ' ' → logprob: -9.587669372558594
    9. '  ' → logprob: -9.587669372558594
    10. '      ' → logprob: -9.587669372558594

Token 99: ' seq' (ID: 26775)
  Prédit: 'seq'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seq' (adapté à ' seq') → logprob: -6.360996485454962e-05
    2. '   ' → logprob: -10.0000638961792
    3. ' seq' → logprob: -11.0000638961792
    4. '```' → logprob: -15.0000638961792
    5. '       ' → logprob: -15.3750638961792
    6. 'sequence' → logprob: -15.3750638961792
    7. '(seq' → logprob: -15.5000638961792
    8. '
' → logprob: -15.6250638961792
    9. '_seq' → logprob: -16.000062942504883
    10. ' ' → logprob: -16.750062942504883

Token 100: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.6931522488594055
    2. '+=' → logprob: -0.6931522488594055
    3. '+' → logprob: -13.06815242767334
    4. ']+=' → logprob: -13.19315242767334
    5. '+='' → logprob: -15.06815242767334
    6. '=' → logprob: -15.31815242767334
    7. '<|end|>' → logprob: -15.69315242767334
    8. '+=(' → logprob: -15.94315242767334
    9. '```' → logprob: -16.318151473999023
    10. '+="' → logprob: -16.443151473999023

Token 101: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003802680876106024
    2. ' ' → logprob: -7.875380039215088
    3. '   ' → logprob: -16.50037956237793
    4. '```' → logprob: -18.37537956237793
    5. '0' → logprob: -19.25037956237793
    6. '<|end|>' → logprob: -19.50037956237793
    7. '  ' → logprob: -19.75037956237793
    8. '１' → logprob: -20.37537956237793
    9. '+' → logprob: -20.62537956237793
    10. '`' → logprob: -21.06287956237793

Token 102: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9027791495318525e-05
    2. ' ' → logprob: -10.875019073486328
    3. '0' → logprob: -17.250019073486328
    4. '   ' → logprob: -20.500019073486328
    5. '```' → logprob: -20.625019073486328
    6. '<|end|>' → logprob: -21.250019073486328
    7. '2' → logprob: -21.500019073486328
    8. '-' → logprob: -21.625019073486328
    9. '１' → logprob: -22.125019073486328
    10. '+' → logprob: -22.562519073486328

Token 103: '
' (ID: 198)
  Prédit: 'packet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'packet' → logprob: -0.003217164659872651
    2. 'else' → logprob: -5.7532172203063965
    3. ' packet' → logprob: -10.253216743469238
    4. '   ' → logprob: -13.628216743469238
    5. '	packet' → logprob: -13.878216743469238
    6. ' else' → logprob: -14.628216743469238
    7. '
' → logprob: -14.628216743469238
    8. '```' → logprob: -15.003216743469238
    9. '(packet' → logprob: -15.128216743469238
    10. 'elif' → logprob: -15.378216743469238

Token 104: '   ' (ID: 271)
  Prédit: 'packet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'packet' → logprob: -0.00684585003182292
    2. 'else' → logprob: -5.006845951080322
    3. ' packet' → logprob: -9.256845474243164
    4. '```' → logprob: -10.756845474243164
    5. '
' → logprob: -12.381845474243164
    6. '	packet' → logprob: -12.881845474243164
    7. ' else' → logprob: -13.506845474243164
    8. 'elif' → logprob: -13.631845474243164
    9. '(packet' → logprob: -13.631845474243164
    10. '   ' → logprob: -14.506845474243164

Token 105: ' packet' (ID: 21133)
  Prédit: 'packet'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'packet' (adapté à ' packet') → logprob: -5.88418151892256e-05
    2. 'else' → logprob: -10.500059127807617
    3. ' packet' → logprob: -10.500059127807617
    4. '
' → logprob: -13.125059127807617
    5. '   ' → logprob: -14.125059127807617
    6. '	packet' → logprob: -14.375059127807617
    7. 'elif' → logprob: -15.625059127807617
    8. '(packet' → logprob: -16.125059127807617
    9. '```' → logprob: -16.250059127807617
    10. 'package' → logprob: -17.125059127807617

Token 106: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00015455135144293308
    2. 'append' → logprob: -8.875154495239258
    3. '.' → logprob: -11.750154495239258
    4. '[-' → logprob: -12.000154495239258
    5. '.app' → logprob: -15.000154495239258
    6. '.extend' → logprob: -16.125154495239258
    7. 'app' → logprob: -16.500154495239258
    8. 'Append' → logprob: -17.000154495239258
    9. '.setdefault' → logprob: -17.875154495239258
    10. '[' → logprob: -18.125154495239258

Token 107: '(seq' (ID: 78669)
  Prédit: '(seq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(seq' → logprob: -3.4121114822482923e-06
    2. '(' → logprob: -12.625003814697266
    3. '(sequence' → logprob: -17.125003814697266
    4. '(se' → logprob: -18.250003814697266
    5. ' (' → logprob: -19.250003814697266
    6. '(
' → logprob: -19.875003814697266
    7. '(sess' → logprob: -20.000003814697266
    8. 'seq' → logprob: -20.125003814697266
    9. '(ss' → logprob: -20.500003814697266
    10. '(packet' → logprob: -21.000003814697266

Token 108: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.061977315694093704
    2. ')
' → logprob: -2.8119773864746094
    3. 'else' → logprob: -11.93697738647461
    4. ')

' → logprob: -13.81197738647461
    5. ')
' → logprob: -13.93697738647461
    6. ' )' → logprob: -14.31197738647461
    7. ' )
' → logprob: -15.43697738647461
    8. ')#' → logprob: -15.93697738647461
    9. '   ' → logprob: -16.18697738647461
    10. ')return' → logprob: -16.68697738647461

Token 109: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.00018244501552544534
    2. ' else' → logprob: -9.000182151794434
    3. 'elif' → logprob: -9.875182151794434
    4. '```' → logprob: -12.750182151794434
    5. ')' → logprob: -13.125182151794434
    6. '<|end|>' → logprob: -13.625182151794434
    7. '#else' → logprob: -14.000182151794434
    8. '}else' → logprob: -15.750182151794434
    9. '#' → logprob: -15.875182151794434
    10. ']' → logprob: -16.12518310546875

Token 110: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.39510008692741394
    2. ':' → logprob: -1.7701001167297363
    3. '   ' → logprob: -1.8951001167297363
    4. '       ' → logprob: -5.520100116729736
    5. ' :
' → logprob: -7.020100116729736
    6. '{
' → logprob: -8.270099639892578
    7. '```' → logprob: -8.520099639892578
    8. '{' → logprob: -8.645099639892578
    9. ' :' → logprob: -9.645099639892578
    10. '    ' → logprob: -10.520099639892578

Token 111: '   ' (ID: 271)
  Prédit: 'packet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'packet' → logprob: -0.34682944416999817
    2. '   ' → logprob: -1.3468294143676758
    3. ' packet' → logprob: -3.596829414367676
    4. '       ' → logprob: -5.471829414367676
    5. '	packet' → logprob: -6.846829414367676
    6. ' ' → logprob: -9.096829414367676
    7. '1' → logprob: -9.971829414367676
    8. '  ' → logprob: -10.471829414367676
    9. '```' → logprob: -10.846829414367676
    10. '(packet' → logprob: -11.096829414367676

Token 112: ' packet' (ID: 21133)
  Prédit: 'packet'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'packet' (adapté à ' packet') → logprob: -1.3663626305060461e-05
    2. '   ' → logprob: -11.62501335144043
    3. ' packet' → logprob: -12.62501335144043
    4. '	packet' → logprob: -14.25001335144043
    5. 'seq' → logprob: -15.12501335144043
    6. '       ' → logprob: -16.37501335144043
    7. '```' → logprob: -16.37501335144043
    8. 'sequence' → logprob: -16.62501335144043
    9. 'package' → logprob: -17.12501335144043
    10. 'pkt' → logprob: -17.25001335144043

Token 113: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00015121731848921627
    2. '.' → logprob: -8.875151634216309
    3. '.extend' → logprob: -12.000151634216309
    4. 'append' → logprob: -12.625151634216309
    5. '.app' → logprob: -13.250151634216309
    6. '.ap' → logprob: -16.875150680541992
    7. 'app' → logprob: -16.875150680541992
    8. '.pop' → logprob: -17.125150680541992
    9. '.setdefault' → logprob: -17.875150680541992
    10. '.Append' → logprob: -18.000150680541992

Token 114: '(seq' (ID: 78669)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2023005485534668
    2. '1' → logprob: -1.7023005485534668
    3. '(seq' → logprob: -7.077300548553467
    4. 'seq' → logprob: -10.077301025390625
    5. ' ' → logprob: -14.452301025390625
    6. '(
' → logprob: -16.327301025390625
    7. '```' → logprob: -17.702301025390625
    8. '2' → logprob: -18.202301025390625
    9. '`' → logprob: -18.202301025390625
    10. '((' → logprob: -18.577301025390625

Token 115: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.02326120063662529
    2. ')' → logprob: -3.773261308670044
    3. '   ' → logprob: -11.773261070251465
    4. ')
' → logprob: -12.023261070251465
    5. ')

' → logprob: -13.773261070251465
    6. ' )
' → logprob: -14.398261070251465
    7. 'packet' → logprob: -15.898261070251465
    8. '       ' → logprob: -16.89826202392578
    9. '),' → logprob: -16.89826202392578
    10. ')`
' → logprob: -17.02326202392578

Token 116: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2317321002483368
    2. 'packet' → logprob: -2.356732130050659
    3. 'if' → logprob: -2.981732130050659
    4. 'max' → logprob: -3.981732130050659
    5. 'K' → logprob: -4.23173189163208
    6. 'result' → logprob: -4.98173189163208
    7. '#' → logprob: -5.23173189163208
    8. 'answer' → logprob: -5.35673189163208
    9. 'for' → logprob: -5.73173189163208
    10. 'total' → logprob: -5.85673189163208

Token 117: ' seq' (ID: 26775)
  Prédit: 'packet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'packet' → logprob: -0.0007703172159381211
    2. 'seq' (adapté à ' seq') → logprob: -7.250770092010498
    3. '1' → logprob: -10.625770568847656
    4. 'sequence' → logprob: -11.000770568847656
    5. 'direction' → logprob: -11.625770568847656
    6. ' packet' → logprob: -12.250770568847656
    7. '	packet' → logprob: -13.000770568847656
    8. '   ' → logprob: -14.250770568847656
    9. 'pack' → logprob: -14.625770568847656
    10. 'pkt' → logprob: -15.000770568847656

Token 118: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.1041145626222715e-05
    2. ' =' → logprob: -11.500011444091797
    3. '1' → logprob: -14.750011444091797
    4. '=
' → logprob: -15.375011444091797
    5. '+=' → logprob: -15.750011444091797
    6. '=

' → logprob: -16.625011444091797
    7. '```' → logprob: -19.250011444091797
    8. '＝' → logprob: -19.375011444091797
    9. '.=' → logprob: -19.375011444091797
    10. '   ' → logprob: -19.500011444091797

Token 119: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.25
    3. '0' → logprob: -18.375
    4. '```' → logprob: -18.875
    5. '2' → logprob: -19.625
    6. '   ' → logprob: -19.75
    7. '' → logprob: -21.125
    8. '१' → logprob: -21.25
    9. '۱' → logprob: -21.25
    10. '`' → logprob: -21.25

Token 120: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.250000953674316
    3. '0' → logprob: -17.875
    4. '2' → logprob: -18.0
    5. '   ' → logprob: -19.625
    6. '```' → logprob: -19.875
    7. '<|end|>' → logprob: -20.375
    8. '`' → logprob: -20.8125
    9. '۱' → logprob: -21.375
    10. '१' → logprob: -21.6875

Token 121: '
' (ID: 198)
  Prédit: 'packet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'packet' → logprob: -0.6527590155601501
    2. 'if' → logprob: -0.9027590155601501
    3. 'for' → logprob: -2.652759075164795
    4. '#' → logprob: -6.777759075164795
    5. '<|end|>' → logprob: -6.902759075164795
    6. '```' → logprob: -8.402758598327637
    7. 'max' → logprob: -8.402758598327637
    8. 'while' → logprob: -8.527758598327637
    9. ' if' → logprob: -9.027758598327637
    10. 'print' → logprob: -9.402758598327637

Token 122: '   ' (ID: 271)
  Prédit: 'packet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'packet' → logprob: -0.10587166249752045
    2. 'for' → logprob: -3.1058716773986816
    3. '<|end|>' → logprob: -3.3558716773986816
    4. 'if' → logprob: -4.230871677398682
    5. '```' → logprob: -6.105871677398682
    6. ')' → logprob: -6.230871677398682
    7. '#' → logprob: -7.480871677398682
    8. 'direction' → logprob: -7.605871677398682
    9. ' packet' → logprob: -8.355871200561523
    10. ' for' → logprob: -9.105871200561523

Token 123: ' direction' (ID: 9262)
  Prédit: 'packet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'packet' → logprob: -0.0011745095252990723
    2. 'direction' (adapté à ' direction') → logprob: -6.751174449920654
    3. ' packet' → logprob: -13.126174926757812
    4. '   ' → logprob: -14.376174926757812
    5. '	packet' → logprob: -14.501174926757812
    6. '```' → logprob: -14.876174926757812
    7. 'package' → logprob: -15.251174926757812
    8. 'pack' → logprob: -16.001174926757812
    9. '(packet' → logprob: -16.126174926757812
    10. ' direction' → logprob: -16.501174926757812

Token 124: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0485873706638813
    2. ' =' → logprob: -3.0485873222351074
    3. '=

' → logprob: -17.798587799072266
    4. '=S' → logprob: -18.173587799072266
    5. '＝' → logprob: -18.673587799072266
    6. '=
' → logprob: -19.423587799072266
    7. '=}' → logprob: -19.923587799072266
    8. ' ' → logprob: -20.048587799072266
    9. 'S' → logprob: -20.673587799072266
    10. ')' → logprob: -20.923587799072266

Token 125: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -5.1928003813372925e-05
    2. ' S' → logprob: -9.875051498413086
    3. '   ' → logprob: -15.875051498413086
    4. '`' → logprob: -16.125051498413086
    5. ' ' → logprob: -16.375051498413086
    6. ''S' → logprob: -17.375051498413086
    7. '_S' → logprob: -18.625051498413086
    8. '	S' → logprob: -18.750051498413086
    9. '```' → logprob: -18.750051498413086
    10. '  ' → logprob: -19.125051498413086

Token 126: '[N' (ID: 49776)
  Prédit: '[N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[N' → logprob: -2.696889623621246e-06
    2. '[' → logprob: -13.50000286102295
    3. '[-' → logprob: -13.62500286102295
    4. '[n' → logprob: -16.750001907348633
    5. 'N' → logprob: -17.125001907348633
    6. '[S' → logprob: -17.500001907348633
    7. '```' → logprob: -17.750001907348633
    8. '[i' → logprob: -18.000001907348633
    9. '[
' → logprob: -18.625001907348633
    10. ' [' → logprob: -19.375001907348633

Token 127: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -4.632542913896032e-05
    2. '[' → logprob: -10.375046730041504
    3. ' -' → logprob: -11.125046730041504
    4. '[-' → logprob: -15.125046730041504
    5. '[i' → logprob: -16.500045776367188
    6. '```' → logprob: -17.000045776367188
    7. '[N' → logprob: -17.500045776367188
    8. '1' → logprob: -18.250045776367188
    9. '-
' → logprob: -19.250045776367188
    10. '−' → logprob: -19.375045776367188

Token 128: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.6537622034084052e-05
    2. ' ' → logprob: -10.62502670288086
    3. '```' → logprob: -13.62502670288086
    4. '-' → logprob: -14.81252670288086
    5. '`' → logprob: -16.37502670288086
    6. '   ' → logprob: -16.50002670288086
    7. '2' → logprob: -16.68752670288086
    8. '``' → logprob: -16.93752670288086
    9. '[' → logprob: -17.18752670288086
    10. '0' → logprob: -17.56252670288086

Token 129: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2200749754119897e-06
    2. ' ' → logprob: -13.250001907348633
    3. '```' → logprob: -15.750001907348633
    4. '-' → logprob: -16.250001907348633
    5. '`' → logprob: -17.562501907348633
    6. '2' → logprob: -17.750001907348633
    7. '11' → logprob: -18.125001907348633
    8. '１' → logprob: -18.625001907348633
    9. '۱' → logprob: -18.625001907348633
    10. '[' → logprob: -18.750001907348633

Token 130: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6953491568565369
    2. ']' → logprob: -0.6953491568565369
    3. ')
' → logprob: -7.195349216461182
    4. '<|end|>' → logprob: -7.195349216461182
    5. ']
' → logprob: -8.070348739624023
    6. '']' → logprob: -8.570348739624023
    7. '}' → logprob: -9.320348739624023
    8. '')' → logprob: -10.445348739624023
    9. '```' → logprob: -10.695348739624023
    10. '])' → logprob: -10.945348739624023

Token 131: '   ' (ID: 271)
  Prédit: 'packet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'packet' → logprob: -2.2961512513575144e-05
    2. '   ' → logprob: -11.125022888183594
    3. ' packet' → logprob: -13.000022888183594
    4. '```' → logprob: -13.125022888183594
    5. '	packet' → logprob: -13.250022888183594
    6. 'if' → logprob: -13.625022888183594
    7. '#' → logprob: -15.250022888183594
    8. '(packet' → logprob: -15.750022888183594
    9. 'print' → logprob: -16.125022888183594
    10. '.packet' → logprob: -16.125022888183594

Token 132: ' packet' (ID: 21133)
  Prédit: 'packet'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'packet' (adapté à ' packet') → logprob: -1.9361264946837764e-07
    2. ' packet' → logprob: -16.625
    3. 'package' → logprob: -17.5
    4. '   ' → logprob: -18.25
    5. '	packet' → logprob: -18.25
    6. '(packet' → logprob: -20.25
    7. 'pack' → logprob: -20.5
    8. '```' → logprob: -21.5
    9. '.packet' → logprob: -21.875
    10. 'pkt' → logprob: -22.0

Token 133: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.3146915137767792
    2. '_len' → logprob: -1.3146915435791016
    3. 'append' → logprob: -6.689691543579102
    4. '_append' → logprob: -8.814691543579102
    5. 'len' → logprob: -11.189691543579102
    6. '.extend' → logprob: -11.439691543579102
    7. '._' → logprob: -12.439691543579102
    8. '.' → logprob: -13.189691543579102
    9. 'Len' → logprob: -13.189691543579102
    10. ' append' → logprob: -14.189691543579102

Token 134: '(seq' (ID: 78669)
  Prédit: '(seq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(seq' → logprob: -0.00021831797494087368
    2. '(' → logprob: -8.750218391418457
    3. 'seq' → logprob: -9.750218391418457
    4. '1' → logprob: -13.375218391418457
    5. '(sequence' → logprob: -17.75021743774414
    6. '(se' → logprob: -18.87521743774414
    7. ' seq' → logprob: -20.00021743774414
    8. '(
' → logprob: -20.37521743774414
    9. 'Seq' → logprob: -21.12521743774414
    10. '_seq' → logprob: -21.25021743774414

Token 135: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1472419600977446e-06
    2. ')
' → logprob: -14.000000953674316
    3. ' )' → logprob: -15.875000953674316
    4. '))' → logprob: -16.875001907348633
    5. ')`' → logprob: -17.125001907348633
    6. '```' → logprob: -17.875001907348633
    7. '()' → logprob: -18.000001907348633
    8. '）' → logprob: -18.125001907348633
    9. '`)' → logprob: -18.125001907348633
    10. '')' → logprob: -18.375001907348633

Token 136: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1861346811056137
    2. 'for' → logprob: -2.1861345767974854
    3. '
' → logprob: -4.1861348152160645
    4. ' if' → logprob: -4.1861348152160645
    5. ')' → logprob: -4.3111348152160645
    6. '\n' → logprob: -5.6861348152160645
    7. '#' → logprob: -6.5611348152160645
    8. ' for' → logprob: -6.5611348152160645
    9. 'max' → logprob: -6.6861348152160645
    10. '<|end|>' → logprob: -6.9361348152160645

Token 137: ' packet' (ID: 21133)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.5435028076171875
    2. 'for' → logprob: -1.1685028076171875
    3. 'packet' (adapté à ' packet') → logprob: -3.2935028076171875
    4. 'if' → logprob: -4.0435028076171875
    5. 'K' → logprob: -4.7935028076171875
    6. 'window' → logprob: -5.0435028076171875
    7. ')' → logprob: -5.5435028076171875
    8. 'total' → logprob: -5.7935028076171875
    9. 'answer' → logprob: -5.7935028076171875
    10. 'dp' → logprob: -5.7935028076171875

Token 138: '_len' (ID: 13683)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 139: ' +=' (ID: 2757)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2156471461057663
    2. '=' → logprob: -2.5906472206115723
    3. '<|end|>' → logprob: -3.0906472206115723
    4. '+=' → logprob: -3.2156472206115723
    5. ' +=' → logprob: -4.090647220611572
    6. '#' → logprob: -4.965647220611572
    7. ')' → logprob: -5.215647220611572
    8. ' ' → logprob: -6.090647220611572
    9. ' +' → logprob: -8.090646743774414
    10. '<|end|>' → logprob: -8.090646743774414

Token 140: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1994775377388578e-05
    2. ' ' → logprob: -11.375012397766113
    3. '2' → logprob: -15.125012397766113
    4. '   ' → logprob: -15.625012397766113
    5. '```' → logprob: -17.875011444091797
    6. '+' → logprob: -18.375011444091797
    7. '0' → logprob: -18.625011444091797
    8. '  ' → logprob: -18.750011444091797
    9. '(' → logprob: -18.937511444091797
    10. '       ' → logprob: -20.062511444091797

Token 141: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. '2' → logprob: -14.750000953674316
    3. ' ' → logprob: -15.000000953674316
    4. '```' → logprob: -18.0
    5. '   ' → logprob: -18.75
    6. '0' → logprob: -19.0
    7. '3' → logprob: -19.4375
    8. '１' → logprob: -19.5
    9. '``' → logprob: -20.6875
    10. '-' → logprob: -21.0625

Token 142: '
' (ID: 198)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.6304643154144287
    2. 'for' → logprob: -1.0054643154144287
    3. 'if' → logprob: -3.3804643154144287
    4. 'packet' → logprob: -3.3804643154144287
    5. 'answer' → logprob: -5.005464553833008
    6. 'result' → logprob: -5.380464553833008
    7. 'dp' → logprob: -5.380464553833008
    8. 'res' → logprob: -5.880464553833008
    9. 'sorted' → logprob: -6.130464553833008
    10. 'ans' → logprob: -6.255464553833008

Token 143: 'num' (ID: 4571)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.6608508229255676
    2. 'for' → logprob: -0.9108508229255676
    3. 'if' → logprob: -3.410850763320923
    4. 'dp' → logprob: -4.160851001739502
    5. 'packet' → logprob: -4.660851001739502
    6. 'result' → logprob: -5.285851001739502
    7. 'res' → logprob: -5.535851001739502
    8. 'answer' → logprob: -5.785851001739502
    9. 'ans' → logprob: -6.285851001739502
    10. '#' → logprob: -6.660851001739502

Token 144: ' =' (ID: 314)
  Prédit: '_packets'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_packets' → logprob: -0.09698409587144852
    2. 's' → logprob: -3.3469841480255127
    3. 'ber' → logprob: -4.096983909606934
    4. ' =' → logprob: -4.596983909606934
    5. '_packet' → logprob: -5.096983909606934
    6. '_blocks' → logprob: -5.971983909606934
    7. '_' → logprob: -5.971983909606934
    8. '_changes' → logprob: -6.221983909606934
    9. '_diff' → logprob: -6.471983909606934
    10. '_pairs' → logprob: -6.596983909606934

Token 145: ' ' (ID: 220)
  Prédit: 'packet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'packet' → logprob: -0.690602719783783
    2. 'len' → logprob: -1.4406027793884277
    3. '0' → logprob: -1.8156027793884277
    4. 'sum' → logprob: -3.3156027793884277
    5. 'max' → logprob: -3.5656027793884277
    6. 'K' → logprob: -4.065602779388428
    7. 'N' → logprob: -5.315602779388428
    8. '1' → logprob: -5.940602779388428
    9. 'min' → logprob: -6.190602779388428
    10. ' packet' → logprob: -6.190602779388428

Token 146: '2' (ID: 17)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.9250465035438538
    2. 'packet' → logprob: -1.300046443939209
    3. '0' → logprob: -1.550046443939209
    4. 'sum' → logprob: -2.925046443939209
    5. 'max' → logprob: -3.675046443939209
    6. 'K' → logprob: -4.175046443939209
    7. 'min' → logprob: -4.300046443939209
    8. 'N' → logprob: -5.050046443939209
    9. '1' → logprob: -5.925046443939209
    10. '(' → logprob: -8.175046920776367

Token 147: ' *' (ID: 425)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 148: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.3351600766181946
    2. 'packet' → logprob: -1.3351600170135498
    3. '(K' → logprob: -4.710160255432129
    4. '(' → logprob: -5.710160255432129
    5. '(packet' → logprob: -6.335160255432129
    6. 'max' → logprob: -6.335160255432129
    7. 'min' → logprob: -6.460160255432129
    8. 'N' → logprob: -6.960160255432129
    9. 'len' → logprob: -7.335160255432129
    10. ' K' → logprob: -7.335160255432129

Token 149: ' +' (ID: 659)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 150: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0019882326014339924
    2. ' ' → logprob: -6.251988410949707
    3. 'packet' → logprob: -10.251988410949707
    4. '2' → logprob: -11.626988410949707
    5. ' packet' → logprob: -11.751988410949707
    6. '3' → logprob: -13.126988410949707
    7. 'sum' → logprob: -13.501988410949707
    8. 'len' → logprob: -14.376988410949707
    9. '   ' → logprob: -14.501988410949707
    10. '(' → logprob: -14.626988410949707

Token 151: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.723973582556937e-05
    2. ' ' → logprob: -11.625017166137695
    3. '2' → logprob: -12.500017166137695
    4. '3' → logprob: -12.875017166137695
    5. '-' → logprob: -14.250017166137695
    6. 'packet' → logprob: -14.250017166137695
    7. '   ' → logprob: -15.375017166137695
    8. '  ' → logprob: -15.750017166137695
    9. '10' → logprob: -17.187517166137695
    10. '0' → logprob: -17.250017166137695

Token 152: '
' (ID: 198)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.7871257066726685
    2. 'for' → logprob: -1.5371257066726685
    3. '<|end|>' → logprob: -1.7871257066726685
    4. '
' → logprob: -2.787125587463379
    5. 'result' → logprob: -3.912125587463379
    6. ' for' → logprob: -4.037125587463379
    7. 'dp' → logprob: -4.162125587463379
    8. 'total' → logprob: -4.912125587463379
    9. 'packet' → logprob: -5.162125587463379
    10. ' max' → logprob: -5.287125587463379

Token 153: 'if' (ID: 366)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.2791212797164917
    2. 'res' → logprob: -1.9041212797164917
    3. 'ans' → logprob: -2.0291213989257812
    4. 'answer' → logprob: -2.1541213989257812
    5. 'result' → logprob: -2.2791213989257812
    6. 'dp' → logprob: -2.4041213989257812
    7. 'if' → logprob: -2.9041213989257812
    8. 'for' → logprob: -3.2791213989257812
    9. 'total' → logprob: -4.279121398925781
    10. 'sum' → logprob: -5.404121398925781

Token 154: ' packet' (ID: 21133)
  Prédit: ' packet'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' packet' → logprob: -0.43752551078796387
    2. 'packet' → logprob: -1.3125255107879639
    3. ' num' → logprob: -3.187525510787964
    4. 'num' → logprob: -3.187525510787964
    5. ' len' → logprob: -6.437525749206543
    6. 'len' → logprob: -7.562525749206543
    7. ' N' → logprob: -8.312525749206543
    8. ' K' → logprob: -9.187525749206543
    9. 'N' → logprob: -9.562525749206543
    10. '(packet' → logprob: -10.187525749206543

Token 155: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -4.320199877838604e-07
    2. 'len' → logprob: -14.875
    3. '_' → logprob: -17.0
    4. '_LEN' → logprob: -17.25
    5. '[_' → logprob: -17.375
    6. ' _' → logprob: -18.875
    7. '__' → logprob: -19.125
    8. ':' → logprob: -19.375
    9. '<len' → logprob: -19.375
    10. '_l' → logprob: -19.5

Token 156: ' ==' (ID: 951)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.9743506908416748
    2. ' <' → logprob: -1.0993506908416748
    3. ' >=' → logprob: -2.349350690841675
    4. '<' → logprob: -2.724350690841675
    5. '<=' → logprob: -2.724350690841675
    6. ' >' → logprob: -3.599350690841675
    7. '>=' → logprob: -4.099350929260254
    8. '>' → logprob: -4.224350929260254
    9. ' ==' → logprob: -6.349350929260254
    10. ' ' → logprob: -6.724350929260254

Token 157: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3897842764854431
    2. ' ' → logprob: -1.139784336090088
    3. 'num' → logprob: -6.014784336090088
    4. ' num' → logprob: -8.38978385925293
    5. 'len' → logprob: -8.88978385925293
    6. '0' → logprob: -9.76478385925293
    7. ' len' → logprob: -10.38978385925293
    8. 'packet' → logprob: -11.76478385925293
    9. ' packet' → logprob: -12.88978385925293
    10. '  ' → logprob: -13.38978385925293

Token 158: '1' (ID: 16)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.23220627009868622
    2. '1' → logprob: -1.6072062253952026
    3. 'len' → logprob: -5.232206344604492
    4. '0' → logprob: -6.607206344604492
    5. ' num' → logprob: -10.482206344604492
    6. ' ' → logprob: -10.607206344604492
    7. 'packet' → logprob: -10.732206344604492
    8. ' len' → logprob: -13.982206344604492
    9. 'K' → logprob: -14.607206344604492
    10. 'n' → logprob: -15.107206344604492

Token 159: ' or' (ID: 503)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10069561004638672
    2. ':
' → logprob: -2.3506956100463867
    3. '   ' → logprob: -8.725695610046387
    4. ' and' → logprob: -8.725695610046387
    5. ' or' → logprob: -9.350695610046387
    6. ':return' → logprob: -9.975695610046387
    7. 'and' → logprob: -10.850695610046387
    8. ':
' → logprob: -12.475695610046387
    9. 'or' → logprob: -12.600695610046387
    10. ':

' → logprob: -14.100695610046387

Token 160: ' packet' (ID: 21133)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.035818975418806076
    2. 'K' → logprob: -4.035819053649902
    3. 'packet' → logprob: -4.785819053649902
    4. ' num' → logprob: -4.910819053649902
    5. 'N' → logprob: -7.035819053649902
    6. ' K' → logprob: -7.910819053649902
    7. 'len' → logprob: -8.660819053649902
    8. ' packet' → logprob: -8.785819053649902
    9. 'not' → logprob: -9.160819053649902
    10. '2' → logprob: -10.910819053649902

Token 161: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -3.292907877039397e-06
    2. 'len' → logprob: -12.87500286102295
    3. '[_' → logprob: -15.50000286102295
    4. '_LEN' → logprob: -15.75000286102295
    5. '_num' → logprob: -15.87500286102295
    6. '[len' → logprob: -17.000003814697266
    7. '<len' → logprob: -17.125003814697266
    8. '<=' → logprob: -17.625003814697266
    9. 'Len' → logprob: -17.750003814697266
    10. '_' → logprob: -18.125003814697266

Token 162: ' ==' (ID: 951)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.14409738779067993
    2. '<=' → logprob: -2.019097328186035
    3. ' <' → logprob: -6.769097328186035
    4. '<' → logprob: -8.269097328186035
    5. ' ' → logprob: -11.894097328186035
    6. '==' → logprob: -12.769097328186035
    7. ' ==' → logprob: -12.894097328186035
    8. ' >=' → logprob: -14.394097328186035
    9. ' >' → logprob: -14.644097328186035
    10. '```' → logprob: -14.644097328186035

Token 163: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5194121599197388
    2. 'num' → logprob: -1.1444121599197388
    3. ' ' → logprob: -3.019412040710449
    4. '1' → logprob: -3.519412040710449
    5. ' num' → logprob: -4.894412040710449
    6. '2' → logprob: -7.519412040710449
    7. '3' → logprob: -9.01941204071045
    8. 'len' → logprob: -10.01941204071045
    9. '  ' → logprob: -10.51941204071045
    10. '   ' → logprob: -11.01941204071045

Token 164: '2' (ID: 17)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.6737246513366699
    2. '0' → logprob: -0.7987246513366699
    3. '1' → logprob: -3.29872465133667
    4. '2' → logprob: -5.92372465133667
    5. ' ' → logprob: -7.92372465133667
    6. ' num' → logprob: -9.048725128173828
    7. 'len' → logprob: -9.673725128173828
    8. '3' → logprob: -9.798725128173828
    9. 'N' → logprob: -9.798725128173828
    10. 'packet' → logprob: -11.298725128173828

Token 165: ' or' (ID: 503)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12709198892116547
    2. ':
' → logprob: -2.127091884613037
    3. ' or' → logprob: -9.127092361450195
    4. ':return' → logprob: -10.502092361450195
    5. '   ' → logprob: -10.752092361450195
    6. ':
' → logprob: -12.627092361450195
    7. ' and' → logprob: -14.002092361450195
    8. 'or' → logprob: -14.502092361450195
    9. ':

' → logprob: -14.752092361450195
    10. ' :' → logprob: -14.877092361450195

Token 166: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.10515949130058289
    2. ' num' → logprob: -2.6051595211029053
    3. 'packet' → logprob: -3.8551595211029053
    4. ' packet' → logprob: -5.980159282684326
    5. 'K' → logprob: -6.605159282684326
    6. ' K' → logprob: -7.980159282684326
    7. 'N' → logprob: -8.730159759521484
    8. 'not' → logprob: -9.105159759521484
    9. ' not' → logprob: -9.855159759521484
    10. '(num' → logprob: -9.855159759521484

Token 167: ' >=' (ID: 5064)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.7929114699363708
    2. '>' → logprob: -1.1679115295410156
    3. ' >=' → logprob: -1.9179115295410156
    4. '>=' → logprob: -2.4179115295410156
    5. '<=' → logprob: -8.792911529541016
    6. ' <=' → logprob: -9.042911529541016
    7. '==' → logprob: -9.417911529541016
    8. ' ==' → logprob: -11.167911529541016
    9. ' ' → logprob: -11.417911529541016
    10. ' <' → logprob: -11.917911529541016

Token 168: ' packet' (ID: 21133)
  Prédit: 'packet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'packet' → logprob: -0.0016720877029001713
    2. ' packet' → logprob: -6.501672267913818
    3. 'len' → logprob: -8.87667179107666
    4. '   ' → logprob: -10.75167179107666
    5. ' len' → logprob: -12.37667179107666
    6. '	packet' → logprob: -13.12667179107666
    7. '  ' → logprob: -13.62667179107666
    8. ' ' → logprob: -14.37667179107666
    9. '(packet' → logprob: -15.25167179107666
    10. 'pack' → logprob: -15.62667179107666

Token 169: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -7.107425062713446e-06
    2. 'len' → logprob: -11.875006675720215
    3. '_LEN' → logprob: -17.75000762939453
    4. 'Len' → logprob: -18.12500762939453
    5. ' _' → logprob: -18.87500762939453
    6. '_' → logprob: -19.12500762939453
    7. 'length' → logprob: -19.62500762939453
    8. '._' → logprob: -19.75000762939453
    9. '_length' → logprob: -20.50000762939453
    10. '_l' → logprob: -21.00000762939453

Token 170: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.026348605751991272
    2. ':
' → logprob: -3.65134859085083
    3. ':return' → logprob: -10.526349067687988
    4. '   ' → logprob: -11.151349067687988
    5. ' or' → logprob: -13.026349067687988
    6. ' :' → logprob: -13.151349067687988
    7. ':
' → logprob: -13.276349067687988
    8. 'or' → logprob: -14.776349067687988
    9. ':

' → logprob: -15.901349067687988
    10. ' :
' → logprob: -16.026348114013672

Token 171: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05630490183830261
    2. 'print' → logprob: -3.056304931640625
    3. ' print' → logprob: -4.931304931640625
    4. '```' → logprob: -9.181304931640625
    5. '
' → logprob: -9.556304931640625
    6. 'packet' → logprob: -9.931304931640625
    7. '       ' → logprob: -10.181304931640625
    8. ' packet' → logprob: -10.556304931640625
    9. '    
' → logprob: -10.681304931640625
    10. ':
' → logprob: -10.681304931640625

Token 172: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.005004852078855038
    2. ' print' → logprob: -5.8800048828125
    3. '   ' → logprob: -6.1300048828125
    4. '
' → logprob: -11.7550048828125
    5. 'result' → logprob: -13.1300048828125
    6. 'for' → logprob: -13.2550048828125
    7. 'answer' → logprob: -13.3800048828125
    8. '```' → logprob: -13.3800048828125
    9. '    ' → logprob: -14.2550048828125
    10. ' ' → logprob: -14.2550048828125

Token 173: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0146189508959651
    2. '(len' → logprob: -5.264618873596191
    3. '(max' → logprob: -5.639618873596191
    4. '(S' → logprob: -6.139618873596191
    5. '(' → logprob: -6.389618873596191
    6. '(sum' → logprob: -6.514618873596191
    7. 'N' → logprob: -8.639618873596191
    8. 'max' → logprob: -9.389618873596191
    9. 'len' → logprob: -9.764618873596191
    10. '(
' → logprob: -10.139618873596191

Token 174: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.028536492725834e-05
    2. ' )' → logprob: -10.250070571899414
    3. ')
' → logprob: -10.500070571899414
    4. '))' → logprob: -13.500070571899414
    5. '-' → logprob: -13.625070571899414
    6. '`)' → logprob: -13.875070571899414
    7. '+' → logprob: -14.375070571899414
    8. '*' → logprob: -14.500070571899414
    9. ')`' → logprob: -14.625070571899414
    10. '')' → logprob: -14.750070571899414

Token 175: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02240302786231041
    2. 'K' → logprob: -4.147403240203857
    3. ' ' → logprob: -5.772403240203857
    4. '2' → logprob: -6.647403240203857
    5. ' K' → logprob: -6.897403240203857
    6. '0' → logprob: -7.522403240203857
    7. 'packet' → logprob: -8.8974027633667
    8. '(' → logprob: -9.0224027633667
    9. ' (' → logprob: -10.1474027633667
    10. '(K' → logprob: -10.8974027633667

Token 176: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009269709698855877
    2. 'K' → logprob: -5.134269714355469
    3. 'packet' → logprob: -6.259269714355469
    4. '2' → logprob: -7.509269714355469
    5. ' ' → logprob: -8.509269714355469
    6. '(' → logprob: -8.634269714355469
    7. '0' → logprob: -8.759269714355469
    8. 'S' → logprob: -8.759269714355469
    9. '(K' → logprob: -10.259269714355469
    10. '(packet' → logprob: -10.259269714355469

Token 177: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000317231344524771
    2. ')
' → logprob: -8.375317573547363
    3. '+' → logprob: -9.750317573547363
    4. ' )' → logprob: -10.875317573547363
    5. '-' → logprob: -12.500317573547363
    6. '`)' → logprob: -14.000317573547363
    7. '))' → logprob: -14.125317573547363
    8. '```' → logprob: -14.500317573547363
    9. '   ' → logprob: -14.625317573547363
    10. ')`' → logprob: -15.125317573547363

Token 178: 'elif' (ID: 29767)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.0005830573500134051
    2. 'elif' → logprob: -7.875583171844482
    3. ' else' → logprob: -8.875582695007324
    4. '   ' → logprob: -10.000582695007324
    5. ')' → logprob: -11.500582695007324
    6. '```' → logprob: -12.750582695007324
    7. '    
' → logprob: -14.000582695007324
    8. ',' → logprob: -14.375582695007324
    9. 'continue' → logprob: -14.500582695007324
    10. 'exit' → logprob: -15.000582695007324

Token 179: ' num' (ID: 2269)
  Prédit: ' packet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' packet' → logprob: -0.1425468623638153
    2. 'packet' → logprob: -2.1425468921661377
    3. ' num' → logprob: -4.517546653747559
    4. 'num' → logprob: -5.517546653747559
    5. ' ' → logprob: -8.517546653747559
    6. '   ' → logprob: -8.892546653747559
    7. '(packet' → logprob: -9.767546653747559
    8. ' direction' → logprob: -9.892546653747559
    9. ' K' → logprob: -10.642546653747559
    10. '	packet' → logprob: -10.642546653747559

Token 180: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.47673988342285156
    2. ' ==' → logprob: -2.1017398834228516
    3. ' >=' → logprob: -2.4767398834228516
    4. '==' → logprob: -2.6017398834228516
    5. '<' → logprob: -3.7267398834228516
    6. ' <=' → logprob: -4.101739883422852
    7. '>=' → logprob: -4.476739883422852
    8. '+' → logprob: -4.601739883422852
    9. ' *' → logprob: -4.726739883422852
    10. '*' → logprob: -4.726739883422852

Token 181: ' packet' (ID: 21133)
  Prédit: 'packet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'packet' → logprob: -0.02639574371278286
    2. ' packet' → logprob: -3.651395797729492
    3. '   ' → logprob: -9.651395797729492
    4. '	packet' → logprob: -11.026395797729492
    5. ' ' → logprob: -12.526395797729492
    6. '2' → logprob: -13.026395797729492
    7. '(packet' → logprob: -13.026395797729492
    8. '1' → logprob: -13.276395797729492
    9. 'pack' → logprob: -13.401395797729492
    10. '3' → logprob: -14.026395797729492

Token 182: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -6.64708495605737e-05
    2. 'len' → logprob: -9.625066757202148
    3. 'Len' → logprob: -15.125066757202148
    4. '_LEN' → logprob: -16.75006675720215
    5. '_' → logprob: -18.25006675720215
    6. 'length' → logprob: -18.37506675720215
    7. '<len' → logprob: -18.62506675720215
    8. '_l' → logprob: -19.00006675720215
    9. '```' → logprob: -19.00006675720215
    10. '[len' → logprob: -19.50006675720215

Token 183: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12697777152061462
    2. ':
' → logprob: -2.1269776821136475
    3. '   ' → logprob: -11.251977920532227
    4. ':
' → logprob: -11.251977920532227
    5. ' :
' → logprob: -11.876977920532227
    6. ' :' → logprob: -11.876977920532227
    7. ' and' → logprob: -12.876977920532227
    8. ':

' → logprob: -12.876977920532227
    9. '[' → logprob: -13.126977920532227
    10. '=' → logprob: -14.501977920532227

Token 184: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.059906113892793655
    2. 'max' → logprob: -3.059906005859375
    3. ' max' → logprob: -5.684906005859375
    4. ':' → logprob: -5.809906005859375
    5. ':
' → logprob: -6.684906005859375
    6. 'res' → logprob: -7.434906005859375
    7. 'result' → logprob: -7.559906005859375
    8. '```' → logprob: -7.684906005859375
    9. 'sum' → logprob: -7.809906005859375
    10. 'total' → logprob: -8.059906005859375

Token 185: ' rem' (ID: 1662)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.7648186683654785
    2. 'max' → logprob: -1.1398186683654785
    3. 'res' → logprob: -2.7648186683654785
    4. 'answer' → logprob: -2.7648186683654785
    5. 'result' → logprob: -4.3898186683654785
    6. 'mx' → logprob: -4.3898186683654785
    7. 'total' → logprob: -5.1398186683654785
    8. 'sum' → logprob: -5.1398186683654785
    9. 'left' → logprob: -5.5148186683654785
    10. 'l' → logprob: -5.5148186683654785

Token 186: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0885009765625
    2. 'ain' → logprob: -1.0885009765625
    3. 'a' → logprob: -2.2135009765625
    4. 'ains' → logprob: -2.3385009765625
    5. 'aining' → logprob: -3.0885009765625
    6. '=' → logprob: -4.0885009765625
    7. 'sum' → logprob: -4.4635009765625
    8. '_' → logprob: -4.8385009765625
    9. '_sum' → logprob: -5.2135009765625
    10. 'ove' → logprob: -5.4635009765625

Token 187: ' packet' (ID: 21133)
  Prédit: 'packet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'packet' → logprob: -0.5307960510253906
    2. '0' → logprob: -2.4057960510253906
    3. 'N' → logprob: -2.4057960510253906
    4. 'max' → logprob: -2.9057960510253906
    5. 'num' → logprob: -3.0307960510253906
    6. ' packet' → logprob: -3.2807960510253906
    7. 'K' → logprob: -3.7807960510253906
    8. 'sum' → logprob: -4.280796051025391
    9. ' N' → logprob: -4.280796051025391
    10. ' max' → logprob: -4.905796051025391

Token 188: '_len' (ID: 13683)
  Prédit: '[:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.5594558119773865
    2. '.copy' → logprob: -1.5594558715820312
    3. '[num' → logprob: -2.5594558715820312
    4. '[:]' → logprob: -2.6844558715820312
    5. '_len' → logprob: -2.9344558715820312
    6. '[' → logprob: -4.434455871582031
    7. ' =' → logprob: -6.309455871582031
    8. '[len' → logprob: -6.684455871582031
    9. '_num' → logprob: -6.934455871582031
    10. 'num' → logprob: -7.059455871582031

Token 189: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.2071029096841812
    2. '-' → logprob: -1.70710289478302
    3. '   ' → logprob: -5.8321027755737305
    4. ' ' → logprob: -7.0821027755737305
    5. '[' → logprob: -7.8321027755737305
    6. 'for' → logprob: -8.58210277557373
    7. '#' → logprob: -8.58210277557373
    8. ',' → logprob: -9.20710277557373
    9. '-num' → logprob: -9.45710277557373
    10. '    ' → logprob: -9.58210277557373

Token 190: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.020621422678232193
    2. ' num' → logprob: -3.8956215381622314
    3. '2' → logprob: -9.895621299743652
    4. '1' → logprob: -11.395621299743652
    5. '(num' → logprob: -12.020621299743652
    6. ' ' → logprob: -12.645621299743652
    7. '(' → logprob: -12.770621299743652
    8. '   ' → logprob: -13.145621299743652
    9. ' (' → logprob: -13.270621299743652
    10. '	num' → logprob: -14.520621299743652

Token 191: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6919283866882324
    2. '   ' → logprob: -1.9419283866882324
    3. 'sum' → logprob: -1.9419283866882324
    4. 'max' → logprob: -2.3169283866882324
    5. 'total' → logprob: -2.9419283866882324
    6. '    
' → logprob: -4.441928386688232
    7. 'result' → logprob: -4.566928386688232
    8. '+' → logprob: -4.816928386688232
    9. ' max' → logprob: -6.066928386688232
    10. 'count' → logprob: -6.191928386688232

Token 192: '   ' (ID: 271)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.8477194309234619
    2. 'ans' → logprob: -1.847719430923462
    3. 'res' → logprob: -1.972719430923462
    4. 'answer' → logprob: -2.097719430923462
    5. 'result' → logprob: -3.222719430923462
    6. 'sum' → logprob: -3.597719430923462
    7. 'total' → logprob: -4.347719192504883
    8. '
' → logprob: -4.847719192504883
    9. 'dp' → logprob: -4.972719192504883
    10. 'for' → logprob: -5.347719192504883

Token 193: ' print' (ID: 2123)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.919349193572998
    2. 'max' → logprob: -2.044349193572998
    3. 'answer' → logprob: -2.294349193572998
    4. 'res' → logprob: -2.669349193572998
    5. 'sum' → logprob: -3.294349193572998
    6. 'total' → logprob: -3.419349193572998
    7. 'result' → logprob: -3.669349193572998
    8. 'left' → logprob: -3.669349193572998
    9. 'start' → logprob: -3.919349193572998
    10. 'print' (adapté à ' print') → logprob: -4.044349193572998

Token 194: '(N' (ID: 10564)
  Prédit: '(sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sum' → logprob: -0.20667526125907898
    2. '(' → logprob: -2.7066752910614014
    3. '(max' → logprob: -2.8316752910614014
    4. 'sum' → logprob: -3.7066752910614014
    5. '(min' → logprob: -4.081675052642822
    6. '(N' → logprob: -4.456675052642822
    7. 'max' → logprob: -6.456675052642822
    8. '(
' → logprob: -6.456675052642822
    9. '(packet' → logprob: -6.581675052642822
    10. '(len' → logprob: -6.831675052642822

Token 195: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.06219051405787468
    2. ' -' → logprob: -2.812190532684326
    3. ')' → logprob: -9.312190055847168
    4. '   ' → logprob: -9.437190055847168
    5. ' ' → logprob: -10.312190055847168
    6. '-
' → logprob: -12.687190055847168
    7. '  ' → logprob: -12.687190055847168
    8. '	' → logprob: -12.687190055847168
    9. ' ' → logprob: -13.562190055847168
    10. '    ' → logprob: -13.562190055847168

Token 196: ' rem' (ID: 1662)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.14155079424381256
    2. 'rem' → logprob: -2.1415507793426514
    3. ' rem' → logprob: -5.2665510177612305
    4. '2' → logprob: -6.0165510177612305
    5. ' ' → logprob: -6.0165510177612305
    6. 'sum' → logprob: -6.0165510177612305
    7. '(rem' → logprob: -6.7665510177612305
    8. '(' → logprob: -8.39155101776123
    9. 'max' → logprob: -8.51655101776123
    10. '3' → logprob: -9.14155101776123

Token 197: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012762265279889107
    2. '-' → logprob: -4.387762069702148
    3. '-)' → logprob: -9.262762069702148
    4. ' )' → logprob: -9.387762069702148
    5. ' -' → logprob: -9.887762069702148
    6. '+' → logprob: -11.512762069702148
    7. '))' → logprob: -12.637762069702148
    8. ')
' → logprob: -13.512762069702148
    9. '`)' → logprob: -13.762762069702148
    10. '*' → logprob: -13.762762069702148

Token 198: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004227270372211933
    2. ' ' → logprob: -6.004227161407471
    3. '2' → logprob: -6.379227161407471
    4. 'rem' → logprob: -11.379227638244629
    5. 'num' → logprob: -11.504227638244629
    6. 'K' → logprob: -11.879227638244629
    7. 'sum' → logprob: -12.004227638244629
    8. '(' → logprob: -12.254227638244629
    9. '3' → logprob: -12.504227638244629
    10. ' K' → logprob: -12.629227638244629

Token 199: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004178025701548904
    2. '2' → logprob: -8.000417709350586
    3. ' ' → logprob: -9.500417709350586
    4. 'K' → logprob: -13.000417709350586
    5. 'packet' → logprob: -13.750417709350586
    6. 'rem' → logprob: -13.875417709350586
    7. 'sum' → logprob: -13.875417709350586
    8. '3' → logprob: -14.000417709350586
    9. 'num' → logprob: -15.125417709350586
    10. ' K' → logprob: -15.250417709350586

Token 200: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.41866585687967e-06
    2. ')
' → logprob: -11.875008583068848
    3. ' )' → logprob: -14.500008583068848
    4. '   ' → logprob: -15.000008583068848
    5. '`)' → logprob: -15.500008583068848
    6. '')' → logprob: -15.750008583068848
    7. ')`' → logprob: -16.75000762939453
    8. '))' → logprob: -16.75000762939453
    9. '),' → logprob: -17.37500762939453
    10. '")' → logprob: -17.50000762939453


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 198
Tokens correctement prédits (1ère position, stricte): 64
Tokens correctement prédits (1ère position, avec adaptation): 73
Tokens correctement prédits (top 10): 163
Précision stricte (1ère position): 32.32%
Précision adaptée (1ère position): 36.87%
Précision (top 10): 82.32%
================================================================================
