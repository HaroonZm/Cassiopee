================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:42:41
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys  # Importation du module sys pour accéder aux fonctions système, notamment l'entrée standard

input = sys.stdin.readline  # Redéfinition de la fonction input pour une lecture rapide ligne par ligne sur stdin

def dijkstra(start, matrix):
    # Implémentation de l'algorithme de Dijkstra classique en complexité O(V^2)
    # start : sommet de départ (index entier)
    # matrix : matrice d'adjacence représentant les coûts d'arête entre les sommets
    INF = 10 ** 18  # Valeur représentant l'infini, ici utilisée pour initialiser les distances à un grand entier
    n = len(matrix)  # Nombre de sommets (nœuds) dans le graphe, déduit de la taille de la matrice
    used = [False] * n  # Tableau pour garder en mémoire les sommets déjà traités par Dijkstra

    # dist[v] représente la "distance composite" pour atteindre chaque sommet v
    # Ici la "distance" encode deux choses à la fois :
    #   - le nombre de ravitaillements, pondéré fortement pour prioriser les moins nombreux
    #   - la quantité de carburant utilisée
    # Le calcul est : dist[v] = nb_ravitaillements * (10 ** 15) + carburant_utilisé
    dist = [INF] * n  # Initialisation du tableau dist avec 'INF' pour tous les sommets
    dist[start] = 0   # La distance pour atteindre le sommet de départ est de 0

    while True:  # Boucle principale de l'algorithme de Dijkstra
        v = -1  # Variable pour stocker le prochain sommet à traiter (valeur initiale impossible)
        for u in range(n):  # Parcourt tous les sommets du graphe
            # Si 'u' n'est pas encore traité et que sa distance est plus faible que celle de 'v', on met à jour 'v'
            if not used[u] and (v == -1 or dist[u] < dist[v]):
                v = u  # 'v' pointe désormais sur le sommet atteignable au coût minimum non encore traité
        if v == -1:  # Si aucun sommet n'est disponible, sortie de la boucle principale
            break
        used[v] = True  # Marque le sommet 'v' comme traité

        for nxt_v in range(n):  # Pour chaque sommet 'nxt_v', regarde si le chemin via 'v' est améliorant
            tmp = merge(dist[v], matrix[v][nxt_v])  # Calcule le coût composite pour atteindre 'nxt_v' via 'v'
            # Si ce nouveau chemin est meilleur, met à jour la valeur
            dist[nxt_v] = min(dist[nxt_v], tmp)
    return dist  # Retourne la liste finale de distances composites

def merge(d, cost):
    # Fonction pour fusionner le coût courant 'd' et le coût d'un nouveau segment 'cost'
    # Encode la logique de ravitaillement :
    #   - Si la somme carburant dépasse la capacité maximale 'l', il faut ravitailler et ajouter un "palier"
    #   - Sinon, simplement additionner au coût courant

    div_d, mod_d = divmod(d + cost, 10 ** 15)  # div_d = nombre de ravitaillements, mod_d = reste de carburant
    if mod_d > l:  # Si le carburant restant dépasse la capacité maximale autorisée 'l'
        # On doit ravitailler, donc on passe au palier supérieur
        new_d = (div_d + 1) * 10 ** 15 + cost
    else:
        # Pas besoin de ravitailler, on additionne juste les coûts
        new_d = d + cost
    return new_d  # Retourne la nouvelle distance composite

# Lecture des entrées du problème
n, m, l = map(int, input().split())  # n = nombre de sommets, m = nombre d'arêtes, l = capacité maximum sans ravitaillement
info = [list(map(int, input().split())) for i in range(m)]  # Liste des arêtes, chacune sous forme [a, b, cost]
q = int(input())  # Nombre de requêtes
query = [list(map(int, input().split())) for i in range(q)]  # Liste des requêtes : chaque requête est [a, b]

INF = 10 ** 18  # Définition globale de la constante infini pour initialiser les matrices

# Construction de la matrice d'adjacence : matrix[i][j] représente le coût direct de i à j
matrix = [[INF] * n for i in range(n)]  # Initialisation de la matrice avec l'infini partout
for i in range(n):
    matrix[i][i] = 0  # Le coût pour aller d'un sommet à lui-même est 0

# Remplissage de la matrice avec les coûts fournis par les arêtes
for a, b, cost in info:
    a -= 1  # Passage à l'indexation 0 (alors que l'entrée est probablement en indexation 1)
    b -= 1
    if cost > l:
        continue  # On ignore les arêtes dont le coût excède la capacité maximale sans ravitaillement
    matrix[a][b] = cost  # On assigne le coût dans la matrice pour l'arête allant de a à b
    matrix[b][a] = cost  # Le graphe est non orienté : le coût est le même dans l'autre sens

# Préparation d'une matrice de réponses : ans[i][j] contiendra le nombre minimal de ravitaillements de i à j
ans = [[0] * n for i in range(n)]  # Matrice initialisée à 0

for i in range(n):  # Pour chaque sommet de départ possible
    tmp = dijkstra(i, matrix)  # On utilise Dijkstra pour calculer toutes les distances composites depuis ce sommet
    for j in range(n):  # Pour chaque sommet d'arrivée possible
        # On extrait le nombre de ravitaillements uniquement (quotient euclidien par 10**15)
        ans[i][j] = tmp[j] // (10 ** 15)

for a, b in query:  # Pour chaque requête posée
    a -= 1  # On réajuste les indices à partir de 0
    b -= 1
    if ans[a][b] == 1000:  # Convention : si la distance est "impossible" (en pratique, si <= 1000 ravitos c'est possible)
        print(-1)  # On affiche -1 si la route est impossible
    else:
        print(ans[a][b])  # Sinon, on affiche le nombre minimal de ravitaillements nécessaires
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: ' ' (ID: 220)
  → Token d'amorce (pas de prédiction)

Token 3: ' #' (ID: 1069)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.015700336545705795
    2. '\n' → logprob: -4.765700340270996
    3. '\' → logprob: -5.890700340270996
    4. '<|end|>' → logprob: -6.265700340270996
    5. 'newline' → logprob: -7.265700340270996
    6. 'import' → logprob: -8.015700340270996
    7. '```' → logprob: -8.390700340270996
    8. '<|end|>' → logprob: -8.515700340270996
    9. '' → logprob: -8.890700340270996
    10. '.readline' → logprob: -8.890700340270996

Token 4: ' Import' (ID: 19998)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.020103611052036285
    2. '<|end|>' → logprob: -5.020103454589844
    3. '  ' → logprob: -5.145103454589844
    4. 'import' → logprob: -6.270103454589844
    5. '[' → logprob: -6.645103454589844
    6. '<|end|>' → logprob: -7.020103454589844
    7. '.' → logprob: -7.395103454589844
    8. '#' → logprob: -7.395103454589844
    9. '!' → logprob: -7.520103454589844
    10. 'space' → logprob: -7.895103454589844

Token 5: 'ation' (ID: 387)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.029399704188108444
    2. 'ing' → logprob: -4.029399871826172
    3. ' .' → logprob: -4.779399871826172
    4. ' sys' → logprob: -7.279399871826172
    5. '<|end|>' → logprob: -8.029399871826172
    6. '```' → logprob: -8.904399871826172
    7. '_' → logprob: -8.904399871826172
    8. '[' → logprob: -9.154399871826172
    9. '.sys' → logprob: -9.154399871826172
    10. '.readline' → logprob: -9.279399871826172

Token 6: ' du' (ID: 1462)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.18692369759082794
    2. '<|end|>' → logprob: -2.0619237422943115
    3. 'import' → logprob: -4.561923503875732
    4. '<|end|>' → logprob: -5.061923503875732
    5. '\n' → logprob: -5.186923503875732
    6. ' ' → logprob: -5.311923503875732
    7. '
' → logprob: -5.436923503875732
    8. 'newline' → logprob: -6.061923503875732
    9. ',' → logprob: -6.311923503875732
    10. '\' → logprob: -6.311923503875732

Token 7: ' module' (ID: 8827)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.25164011120796204
    2. 'sys' → logprob: -2.0016400814056396
    3. ' module' → logprob: -3.6266400814056396
    4. ' os' → logprob: -3.7516400814056396
    5. 'os' → logprob: -4.626640319824219
    6. ' système' → logprob: -4.751640319824219
    7. ' system' → logprob: -5.126640319824219
    8. 's' → logprob: -5.626640319824219
    9. 'module' → logprob: -5.751640319824219
    10. ' ' → logprob: -6.751640319824219

Token 8: ' sys' (ID: 12228)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3328110873699188
    2. '\n' → logprob: -2.082811117172241
    3. '\' → logprob: -3.082811117172241
    4. 'import' → logprob: -3.332811117172241
    5. '<|end|>' → logprob: -3.582811117172241
    6. '
' → logprob: -4.457810878753662
    7. '```' → logprob: -4.457810878753662
    8. '' → logprob: -5.457810878753662
    9. 'newline' → logprob: -5.582810878753662
    10. ',' → logprob: -5.707810878753662

Token 9: ' pour' (ID: 1930)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2880239486694336
    2. '\n' → logprob: -2.4130239486694336
    3. 'import' → logprob: -3.4130239486694336
    4. '\' → logprob: -3.4130239486694336
    5. '
' → logprob: -3.6630239486694336
    6. '<|end|>' → logprob: -3.9130239486694336
    7. 'newline' → logprob: -4.163023948669434
    8. '

' → logprob: -4.788023948669434
    9. ' ' → logprob: -5.163023948669434
    10. '' → logprob: -5.163023948669434

Token 10: ' accéder' (ID: 120555)
  Prédit: ' gérer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' gérer' → logprob: -0.6397176384925842
    2. ' manip' → logprob: -1.5147175788879395
    3. ' pouvoir' → logprob: -3.0147175788879395
    4. 'l' → logprob: -3.3897175788879395
    5. ' la' → logprob: -3.3897175788879395
    6. ' l' → logprob: -3.7647175788879395
    7. ' permettre' → logprob: -3.7647175788879395
    8. ' récupérer' → logprob: -4.3897175788879395
    9. ' argv' → logprob: -4.7647175788879395
    10. ' manipulation' → logprob: -4.7647175788879395

Token 11: ' aux' (ID: 5850)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.546474277973175
    2. ' aux' → logprob: -1.1714742183685303
    3. ' ' → logprob: -2.7964742183685303
    4. ' au' → logprob: -3.1714742183685303
    5. ' a' → logprob: -5.671474456787109
    6. 'aux' → logprob: -6.421474456787109
    7. '.' → logprob: -6.671474456787109
    8. 'au' → logprob: -7.796474456787109
    9. '  ' → logprob: -8.04647445678711
    10. 'à' → logprob: -8.17147445678711

Token 12: ' fonctions' (ID: 87283)
  Prédit: ' arguments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' arguments' → logprob: -0.332457035779953
    2. 'arguments' → logprob: -1.3324570655822754
    3. '_arguments' → logprob: -5.957457065582275
    4. 'argv' → logprob: -5.957457065582275
    5. 'param' → logprob: -6.582457065582275
    6. ' argv' → logprob: -6.582457065582275
    7. ' paramètres' → logprob: -6.707457065582275
    8. 'argument' → logprob: -6.832457065582275
    9. '_' → logprob: -6.957457065582275
    10. ' ' → logprob: -7.082457065582275

Token 13: ' système' (ID: 30034)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.04524925723671913
    2. 'import' → logprob: -4.0452494621276855
    3. '<|end|>' → logprob: -4.4202494621276855
    4. ',' → logprob: -5.4202494621276855
    5. '.readline' → logprob: -6.4202494621276855
    6. ' .' → logprob: -6.4202494621276855
    7. '<|end|>' → logprob: -6.5452494621276855
    8. '```' → logprob: -6.6702494621276855
    9. ' and' → logprob: -7.7952494621276855
    10. ')' → logprob: -8.170248985290527

Token 14: ',' (ID: 11)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.0035090446472168
    2. '.' → logprob: -1.3785090446472168
    3. '
' → logprob: -1.5035090446472168
    4. 'import' → logprob: -3.003509044647217
    5. '' → logprob: -3.628509044647217
    6. '<|end|>' → logprob: -3.628509044647217
    7. '

' → logprob: -4.003509044647217
    8. '\' → logprob: -4.128509044647217
    9. 'newline' → logprob: -5.003509044647217
    10. ',' → logprob: -5.503509044647217

Token 15: ' notamment' (ID: 31782)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.36381834745407104
    2. ',' → logprob: -1.9888184070587158
    3. ' os' → logprob: -2.988818407058716
    4. '.' → logprob: -3.738818407058716
    5. ' ' → logprob: -3.863818407058716
    6. ' ,' → logprob: -4.113818168640137
    7. ' import' → logprob: -4.363818168640137
    8. '<|end|>' → logprob: -4.488818168640137
    9. ' sys' → logprob: -4.988818168640137
    10. '\n' → logprob: -4.988818168640137

Token 16: ' l' (ID: 305)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.06033152714371681
    2. ' .' → logprob: -4.185331344604492
    3. '.argv' → logprob: -4.310331344604492
    4. '.stdout' → logprob: -4.685331344604492
    5. 'import' → logprob: -5.560331344604492
    6. '.stdin' → logprob: -6.060331344604492
    7. 'sys' → logprob: -6.185331344604492
    8. '.sys' → logprob: -6.435331344604492
    9. ' sys' → logprob: -6.435331344604492
    10. '.exit' → logprob: -6.685331344604492

Token 17: ''entrée' (ID: 115820)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.9278416633605957
    2. ''' → logprob: -1.0528416633605957
    3. '.' → logprob: -2.0528416633605957
    4. 'a' → logprob: -2.9278416633605957
    5. ''import' → logprob: -3.9278416633605957
    6. '_' → logprob: -5.302841663360596
    7. ''entrée' → logprob: -5.302841663360596
    8. ''a' → logprob: -5.427841663360596
    9. 'argv' → logprob: -5.427841663360596
    10. 'es' → logprob: -5.552841663360596

Token 18: ' standard' (ID: 7024)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4186384975910187
    2. '.' → logprob: -1.9186384677886963
    3. 'import' → logprob: -2.0436384677886963
    4. '\n' → logprob: -3.6686384677886963
    5. '\' → logprob: -3.9186384677886963
    6. '#' → logprob: -5.668638706207275
    7. ')' → logprob: -5.918638706207275
    8. 'print' → logprob: -6.418638706207275
    9. '```' → logprob: -6.418638706207275
    10. '' → logprob: -6.668638706207275

Token 19: '

' (ID: 279)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.7439355254173279
    2. 'import' → logprob: -1.3689355850219727
    3. '
' → logprob: -1.9939355850219727
    4. '' → logprob: -2.9939355850219727
    5. ',' → logprob: -3.3689355850219727
    6. '.' → logprob: -3.8689355850219727
    7. ' ' → logprob: -4.743935585021973
    8. '

' → logprob: -5.118935585021973
    9. '\' → logprob: -5.243935585021973
    10. 'newline' → logprob: -6.493935585021973

Token 20: 'input' (ID: 2586)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1179386377334595
    2. '\n' → logprob: -1.3679386377334595
    3. 'import' → logprob: -1.9929386377334595
    4. ',' → logprob: -2.36793851852417
    5. '

' → logprob: -2.61793851852417
    6. '#' → logprob: -2.99293851852417
    7. '' → logprob: -3.36793851852417
    8. '\' → logprob: -4.86793851852417
    9. '.' → logprob: -5.49293851852417
    10. ' ' → logprob: -5.61793851852417

Token 21: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0016722070286050439
    2. '.' → logprob: -6.501672267913818
    3. '()' → logprob: -9.75167179107666
    4. ' (' → logprob: -10.00167179107666
    5. '(.)' → logprob: -10.25167179107666
    6. 's' → logprob: -11.50167179107666
    7. ')' → logprob: -12.62667179107666
    8. '(
' → logprob: -12.75167179107666
    9. '_' → logprob: -13.25167179107666
    10. '('' → logprob: -13.37667179107666

Token 22: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.3959641754627228
    2. 'sys' → logprob: -1.1459641456604004
    3. 'input' → logprob: -5.1459641456604
    4. ' input' → logprob: -5.7709641456604
    5. '(sys' → logprob: -10.270964622497559
    6. '	sys' → logprob: -10.770964622497559
    7. '=sys' → logprob: -11.020964622497559
    8. ' ' → logprob: -11.270964622497559
    9. 'lambda' → logprob: -11.645964622497559
    10. ' lambda' → logprob: -11.645964622497559

Token 23: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.029979227110743523
    2. '.stdin' → logprob: -3.6549792289733887
    3. '.input' → logprob: -6.154979228973389
    4. ' .' → logprob: -6.779979228973389
    5. '.readline' → logprob: -9.02997875213623
    6. '.stdout' → logprob: -9.27997875213623
    7. '.argv' → logprob: -9.40497875213623
    8. '.import' → logprob: -9.90497875213623
    9. '.std' → logprob: -11.40497875213623
    10. '.exit' → logprob: -11.90497875213623

Token 24: '.readline' (ID: 74673)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5561355352401733
    2. '.readline' → logprob: -0.9311355352401733
    3. '.read' → logprob: -3.431135654449463
    4. '.readlines' → logprob: -9.931135177612305
    5. 'read' → logprob: -10.931135177612305
    6. '.Read' → logprob: -11.056135177612305
    7. ' .' → logprob: -11.056135177612305
    8. '.write' → logprob: -12.181135177612305
    9. '```' → logprob: -12.431135177612305
    10. '.

' → logprob: -13.306135177612305

Token 25: ' ' (ID: 220)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.04921796917915344
    2. '(' → logprob: -3.049217939376831
    3. '()
' → logprob: -8.17421817779541
    4. '(
' → logprob: -8.42421817779541
    5. '()\' → logprob: -10.29921817779541
    6. ')' → logprob: -10.54921817779541
    7. '(

' → logprob: -11.04921817779541
    8. '()

' → logprob: -11.42421817779541
    9. ' ()' → logprob: -11.92421817779541
    10. '\n' → logprob: -12.29921817779541

Token 26: ' #' (ID: 1069)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.011902815662324429
    2. '(' → logprob: -4.511902809143066
    3. '()
' → logprob: -7.886902809143066
    4. '(
' → logprob: -9.011902809143066
    5. '()

' → logprob: -9.386902809143066
    6. '
' → logprob: -9.761902809143066
    7. '().' → logprob: -9.886902809143066
    8. ')' → logprob: -10.136902809143066
    9. '(

' → logprob: -10.386902809143066
    10. ' ' → logprob: -10.636902809143066

Token 27: ' Red' (ID: 5952)
  Prédit: ' assign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' assign' → logprob: -0.6956284046173096
    2. 'assign' → logprob: -2.0706284046173096
    3. 'Assign' → logprob: -2.9456284046173096
    4. ' affect' → logprob: -3.1956284046173096
    5. 'aff' → logprob: -3.3206284046173096
    6. 'read' → logprob: -3.4456284046173096
    7. ' read' → logprob: -3.6956284046173096
    8. ' remplacer' → logprob: -3.6956284046173096
    9. 'Lire' → logprob: -4.0706281661987305
    10. 'Ré' → logprob: -4.4456281661987305

Token 28: 'é' (ID: 377)
  Prédit: 'ef'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ef' → logprob: -0.049328044056892395
    2. 'irect' → logprob: -4.299327850341797
    3. 'é' → logprob: -4.424327850341797
    4. 'éf' → logprob: -4.549327850341797
    5. 'irection' → logprob: -5.299327850341797
    6. 'ir' → logprob: -5.424327850341797
    7. 'efined' → logprob: -6.299327850341797
    8. 'e' → logprob: -8.049327850341797
    9. 'if' → logprob: -8.799327850341797
    10. 'eff' → logprob: -10.174327850341797

Token 29: 'fin' (ID: 6994)
  Prédit: 'fin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fin' → logprob: -0.0020828088745474815
    2. 'f' → logprob: -6.752082824707031
    3. 'é' → logprob: -7.877082824707031
    4. 'éf' → logprob: -8.627082824707031
    5. ' finition' → logprob: -9.252082824707031
    6. 'FINITION' → logprob: -9.877082824707031
    7. 'fine' → logprob: -10.002082824707031
    8. 'ef' → logprob: -10.252082824707031
    9. 'fn' → logprob: -11.252082824707031
    10. 'claration' → logprob: -11.377082824707031

Token 30: 'ition' (ID: 868)
  Prédit: 'inition'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inition' → logprob: -0.1657276600599289
    2. 'ition' → logprob: -2.4157276153564453
    3. 'inir' → logprob: -3.1657276153564453
    4. 'é' → logprob: -5.040727615356445
    5. 'ir' → logprob: -5.415727615356445
    6. 'fin' → logprob: -6.165727615356445
    7. 'ef' → logprob: -6.415727615356445
    8. 'if' → logprob: -6.415727615356445
    9. 'init' → logprob: -6.790727615356445
    10. 'i' → logprob: -7.915727615356445

Token 31: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.26776576042175293
    2. ' ' → logprob: -1.767765760421753
    3. '(' → logprob: -3.767765760421753
    4. 'de' → logprob: -4.267765998840332
    5. '()' → logprob: -4.892765998840332
    6. '=' → logprob: -5.517765998840332
    7. ' =' → logprob: -5.892765998840332
    8. '(input' → logprob: -5.892765998840332
    9. ' (' → logprob: -6.267765998840332
    10. ' of' → logprob: -6.267765998840332

Token 32: ' la' (ID: 557)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.12361851334571838
    2. ' input' → logprob: -2.3736186027526855
    3. 'l' → logprob: -4.2486186027526855
    4. ' l' → logprob: -4.8736186027526855
    5. ' la' → logprob: -7.8736186027526855
    6. '(input' → logprob: -8.123618125915527
    7. 'la' → logprob: -8.373618125915527
    8. ' ' → logprob: -8.623618125915527
    9. '=input' → logprob: -10.248618125915527
    10. '()' → logprob: -10.748618125915527

Token 33: ' fonction' (ID: 17610)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.18918313086032867
    2. ' input' → logprob: -2.189183235168457
    3. ' ' → logprob: -3.689183235168457
    4. 'entrée' → logprob: -4.189183235168457
    5. 'fonction' → logprob: -5.314183235168457
    6. ' lecture' → logprob: -5.814183235168457
    7. ' function' → logprob: -5.939183235168457
    8. ' fonction' → logprob: -5.939183235168457
    9. 'lecture' → logprob: -5.939183235168457
    10. 'entr' → logprob: -7.564183235168457

Token 34: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.6103302240371704
    2. ' input' → logprob: -0.8603302240371704
    3. '(input' → logprob: -4.235330104827881
    4. ' ' → logprob: -4.485330104827881
    5. ' d' → logprob: -5.235330104827881
    6. '=input' → logprob: -6.735330104827881
    7. '()' → logprob: -7.735330104827881
    8. '  ' → logprob: -8.735330581665039
    9. ' de' → logprob: -9.110330581665039
    10. ' `' → logprob: -9.235330581665039

Token 35: ' pour' (ID: 1930)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6389089226722717
    2. '()' → logprob: -0.7639089226722717
    3. '(
' → logprob: -5.888908863067627
    4. ')' → logprob: -7.388908863067627
    5. '\n' → logprob: -7.763908863067627
    6. '()
' → logprob: -7.763908863067627
    7. ' ' → logprob: -7.763908863067627
    8. '(

' → logprob: -7.888908863067627
    9. '()

' → logprob: -8.388909339904785
    10. '
' → logprob: -8.388909339904785

Token 36: ' une' (ID: 2463)
  Prédit: 'optim'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'optim' → logprob: -1.0754307508468628
    2. ' lire' → logprob: -1.3254307508468628
    3. ' optimiser' → logprob: -2.3254308700561523
    4. ' améliorer' → logprob: -2.7004308700561523
    5. ' faciliter' → logprob: -2.7004308700561523
    6. ' accél' → logprob: -3.4504308700561523
    7. 'l' → logprob: -3.5754308700561523
    8. 'acc' → logprob: -3.7004308700561523
    9. ' optim' → logprob: -4.575430870056152
    10. ' permettre' → logprob: -4.700430870056152

Token 37: ' lecture' (ID: 31993)
  Prédit: 'lecture'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lecture' → logprob: -0.432187557220459
    2. 'entrée' → logprob: -1.557187557220459
    3. ' lecture' → logprob: -2.057187557220459
    4. ' entrée' → logprob: -5.432187557220459
    5. ' sais' → logprob: -6.307187557220459
    6. 's' → logprob: -6.307187557220459
    7. 'optim' → logprob: -6.432187557220459
    8. 'input' → logprob: -7.682187557220459
    9. 'me' → logprob: -8.057188034057617
    10. 'lect' → logprob: -8.307188034057617

Token 38: ' rapide' (ID: 44887)
  Prédit: ' plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' plus' → logprob: -0.5401919484138489
    2. 'plus' → logprob: -0.9151919484138489
    3. ' optim' → logprob: -4.915192127227783
    4. 'optim' → logprob: -5.415192127227783
    5. ' rapide' → logprob: -5.665192127227783
    6. ' efficace' → logprob: -6.915192127227783
    7. ' optimale' → logprob: -8.540191650390625
    8. 'rap' → logprob: -8.540191650390625
    9. ' ' → logprob: -10.040191650390625
    10. 'Plus' → logprob: -10.540191650390625

Token 39: ' ligne' (ID: 19583)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.42632418870925903
    2. '()' → logprob: -1.4263241291046143
    3. '\n' → logprob: -3.8013241291046143
    4. 'def' → logprob: -4.051324367523193
    5. '
' → logprob: -4.301324367523193
    6. '\' → logprob: -4.426324367523193
    7. '(
' → logprob: -4.676324367523193
    8. ')' → logprob: -4.926324367523193
    9. '

' → logprob: -5.051324367523193
    10. '#' → logprob: -5.051324367523193

Token 40: ' par' (ID: 686)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.06859353184700012
    2. '.' → logprob: -3.3185935020446777
    3. '\n' → logprob: -4.693593502044678
    4. 'break' → logprob: -5.193593502044678
    5. '
' → logprob: -5.943593502044678
    6. ')' → logprob: -6.193593502044678
    7. ' ' → logprob: -6.818593502044678
    8. '  
' → logprob: -7.193593502044678
    9. '<|end|>' → logprob: -7.443593502044678
    10. 'es' → logprob: -7.443593502044678

Token 41: ' ligne' (ID: 19583)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.28768596053123474
    2. 'entrée' → logprob: -2.4126858711242676
    3. 'rstrip' → logprob: -3.4126858711242676
    4. 'faite' → logprob: -4.162685871124268
    5. 'line' → logprob: -4.287685871124268
    6. 'part' → logprob: -4.412685871124268
    7. 'l' → logprob: -4.537685871124268
    8. ' ligne' → logprob: -5.287685871124268
    9. 'r' → logprob: -5.412685871124268
    10. 'rée' → logprob: -5.537685871124268

Token 42: ' sur' (ID: 1512)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4450169503688812
    2. '\n' → logprob: -2.570016860961914
    3. '

' → logprob: -2.570016860961914
    4. '#' → logprob: -2.945016860961914
    5. 'def' → logprob: -2.945016860961914
    6. '\' → logprob: -3.570016860961914
    7. '(' → logprob: -4.195016860961914
    8. '' → logprob: -4.320016860961914
    9. ' ' → logprob: -4.695016860961914
    10. '<|end|>' → logprob: -5.070016860961914

Token 43: ' stdin' (ID: 75143)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -1.6756669282913208
    2. ' sys' → logprob: -1.8006669282913208
    3. ' stdin' → logprob: -2.0506668090820312
    4. ' les' → logprob: -2.1756668090820312
    5. 'stdin' → logprob: -2.8006668090820312
    6. 'l' → logprob: -3.0506668090820312
    7. ' la' → logprob: -3.1756668090820312
    8. 'sys' → logprob: -3.4256668090820312
    9. ' Python' → logprob: -3.4256668090820312
    10. ' le' → logprob: -3.6756668090820312

Token 44: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10543449223041534
    2. '

' → logprob: -2.7304344177246094
    3. '\n' → logprob: -4.730434417724609
    4. '#' → logprob: -5.480434417724609
    5. '<|end|>' → logprob: -5.480434417724609
    6. ' ' → logprob: -5.605434417724609
    7. 'def' → logprob: -5.730434417724609
    8. '' → logprob: -6.480434417724609
    9. 'for' → logprob: -6.605434417724609
    10. '
' → logprob: -6.855434417724609

Token 45: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.13809792697429657
    2. '#' → logprob: -2.7630980014801025
    3. 'for' → logprob: -3.2630980014801025
    4. '
' → logprob: -4.888097763061523
    5. '(' → logprob: -5.513097763061523
    6. 'print' → logprob: -5.888097763061523
    7. 'while' → logprob: -6.638097763061523
    8. ' ' → logprob: -6.888097763061523
    9. '' → logprob: -7.013097763061523
    10. ')' → logprob: -7.138097763061523

Token 46: ' d' (ID: 272)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2857106328010559
    2. ' main' → logprob: -2.785710573196411
    3. ' my' → logprob: -3.285710573196411
    4. ' space' → logprob: -3.660710573196411
    5. ' read' → logprob: -3.785710573196411
    6. ' calculate' → logprob: -4.03571081161499
    7. ' parse' → logprob: -4.03571081161499
    8. ' test' → logprob: -4.28571081161499
    9. ' user' → logprob: -4.78571081161499
    10. ' process' → logprob: -5.03571081161499

Token 47: 'ijkstra' (ID: 124290)
  Prédit: 'ef'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ef' → logprob: -0.011320014484226704
    2. 'e' → logprob: -5.886320114135742
    3. 'ec' → logprob: -5.886320114135742
    4. 'ecode' → logprob: -6.761320114135742
    5. 'éf' → logprob: -7.136320114135742
    6. 'ijkstra' → logprob: -7.511320114135742
    7. 'efe' → logprob: -8.011320114135742
    8. 'efs' → logprob: -8.136320114135742
    9. 'iv' → logprob: -8.261320114135742
    10. ' ef' → logprob: -8.636320114135742

Token 48: '(start' (ID: 20008)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.000746736885048449
    2. '(node' → logprob: -8.125746726989746
    3. ' (' → logprob: -8.375746726989746
    4. '(s' → logprob: -10.250746726989746
    5. '_' → logprob: -10.875746726989746
    6. '(n' → logprob: -11.250746726989746
    7. '(`' → logprob: -11.250746726989746
    8. '(graph' → logprob: -11.250746726989746
    9. '(root' → logprob: -11.750746726989746
    10. '():' → logprob: -11.750746726989746

Token 49: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009612430003471673
    2. ' ,' → logprob: -7.0009613037109375
    3. ',node' → logprob: -10.625961303710938
    4. '):' → logprob: -11.500961303710938
    5. ',start' → logprob: -12.250961303710938
    6. ',n' → logprob: -12.250961303710938
    7. ',p' → logprob: -13.875961303710938
    8. ')' → logprob: -15.000961303710938
    9. ',path' → logprob: -15.000961303710938
    10. ',s' → logprob: -15.125961303710938

Token 50: ' matrix' (ID: 12248)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.03384796902537346
    2. ' graph' → logprob: -3.4088480472564697
    3. 'end' → logprob: -9.53384780883789
    4. 'edges' → logprob: -10.28384780883789
    5. 'Graph' → logprob: -10.78384780883789
    6. 'adj' → logprob: -11.03384780883789
    7. 'graphs' → logprob: -11.15884780883789
    8. ' edges' → logprob: -11.65884780883789
    9. '	graph' → logprob: -11.65884780883789
    10. 'neighbors' → logprob: -12.65884780883789

Token 51: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06308382004499435
    2. '):' → logprob: -2.8130838871002197
    3. ' ,' → logprob: -7.063083648681641
    4. ')' → logprob: -9.18808364868164
    5. ' ):' → logprob: -9.18808364868164
    6. ':' → logprob: -10.68808364868164
    7. '):
' → logprob: -12.31308364868164
    8. ' ' → logprob: -12.56308364868164
    9. ',n' → logprob: -12.81308364868164
    10. '_matrix' → logprob: -12.93808364868164

Token 52: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21070197224617004
    2. ':' → logprob: -1.8357019424438477
    3. 'n' → logprob: -4.710701942443848
    4. 'dist' → logprob: -5.085701942443848
    5. ' distances' → logprob: -5.335701942443848
    6. ',' → logprob: -6.085701942443848
    7. ' :' → logprob: -6.210701942443848
    8. 'distance' → logprob: -6.210701942443848
    9. '	dist' → logprob: -6.960701942443848
    10. '	n' → logprob: -7.335701942443848

Token 53: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26433730125427246
    2. ' n' → logprob: -2.1393373012542725
    3. 'n' → logprob: -2.2643373012542725
    4. 'dist' → logprob: -5.014337539672852
    5. ' dist' → logprob: -6.764337539672852
    6. 'import' → logprob: -7.139337539672852
    7. ' distances' → logprob: -7.264337539672852
    8. 'distance' → logprob: -8.139337539672852
    9. ' ' → logprob: -8.514337539672852
    10. '	n' → logprob: -8.639337539672852

Token 54: ' Impl' (ID: 144563)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.15458589792251587
    2. 'n' → logprob: -2.654585838317871
    3. '   ' → logprob: -2.779585838317871
    4. ' distances' → logprob: -5.404585838317871
    5. ' dist' → logprob: -5.779585838317871
    6. ' import' → logprob: -6.904585838317871
    7. 'dist' → logprob: -7.654585838317871
    8. ' distance' → logprob: -7.779585838317871
    9. '    ' → logprob: -8.029585838317871
    10. 'import' → logprob: -8.029585838317871

Token 55: 'ément' (ID: 17645)
  Prédit: 'ément'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ément' → logprob: -0.00047202190035022795
    2. 'é' → logprob: -7.750472068786621
    3. 'ement' → logprob: -10.125472068786621
    4. 'éments' → logprob: -14.250472068786621
    5. 'ém' → logprob: -15.000472068786621
    6. '   ' → logprob: -16.875471115112305
    7. '```' → logprob: -17.500471115112305
    8. 'entation' → logprob: -17.875471115112305
    9. 'è' → logprob: -18.000471115112305
    10. '#' → logprob: -18.250471115112305

Token 56: 'ation' (ID: 387)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.4066016674041748
    2. 'entation' → logprob: -1.7816016674041748
    3. 'ent' → logprob: -2.781601667404175
    4. 'enter' → logprob: -3.281601667404175
    5. 'e' → logprob: -3.406601667404175
    6. '   ' → logprob: -4.031601905822754
    7. 'ation' → logprob: -4.656601905822754
    8. '#' → logprob: -7.031601905822754
    9. 'ented' → logprob: -7.406601905822754
    10. ' ' → logprob: -7.656601905822754

Token 57: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29547974467277527
    2. ':' → logprob: -2.7954797744750977
    3. ' de' → logprob: -3.0454797744750977
    4. '(' → logprob: -3.0454797744750977
    5. ' d' → logprob: -3.7954797744750977
    6. '  ' → logprob: -4.170479774475098
    7. ' ' → logprob: -4.295479774475098
    8. ' du' → logprob: -4.420479774475098
    9. ' des' → logprob: -4.795479774475098
    10. 'd' → logprob: -5.545479774475098

Token 58: ' l' (ID: 305)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.5449343919754028
    2. ' la' → logprob: -1.9199343919754028
    3. ' l' → logprob: -2.1699342727661133
    4. ' import' → logprob: -2.6699342727661133
    5. ' ' → logprob: -3.7949342727661133
    6. 'l' → logprob: -3.9199342727661133
    7. '   ' → logprob: -4.294934272766113
    8. ' une' → logprob: -4.669934272766113
    9. ' d' → logprob: -5.919934272766113
    10. ' le' → logprob: -5.919934272766113

Token 59: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.010446226224303246
    2. 'a' → logprob: -5.510446071624756
    3. '’' → logprob: -5.510446071624756
    4. ''al' → logprob: -7.260446071624756
    5. 'e' → logprob: -7.385446071624756
    6. 'alg' → logprob: -7.885446071624756
    7. 'al' → logprob: -9.635446548461914
    8. ' '' → logprob: -9.760446548461914
    9. '   ' → logprob: -9.885446548461914
    10. ''''' → logprob: -10.135446548461914

Token 60: 'alg' (ID: 15258)
  Prédit: 'alg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alg' → logprob: -0.06665635108947754
    2. ''' → logprob: -3.3166563510894775
    3. 'algorithm' → logprob: -3.8166563510894775
    4. 'import' → logprob: -5.941656112670898
    5. 'algo' → logprob: -6.066656112670898
    6. ' alg' → logprob: -7.316656112670898
    7. ' algorithm' → logprob: -8.691656112670898
    8. ' алгорит' → logprob: -9.441656112670898
    9. ''al' → logprob: -9.566656112670898
    10. ''import' → logprob: -9.941656112670898

Token 61: 'orith' (ID: 9996)
  Prédit: 'orith'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orith' → logprob: -0.008206968195736408
    2. 'o' → logprob: -5.133206844329834
    3. 'orithm' → logprob: -6.758206844329834
    4. 'or' → logprob: -7.883206844329834
    5. '`' → logprob: -9.133207321166992
    6. 'orit' → logprob: -9.258207321166992
    7. 'orithms' → logprob: -9.383207321166992
    8. '=' → logprob: -9.508207321166992
    9. 'о' → logprob: -10.133207321166992
    10. '```' → logprob: -10.383207321166992

Token 62: 'me' (ID: 1047)
  Prédit: 'me'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'me' → logprob: -0.009769781492650509
    2. 'm' → logprob: -4.634769916534424
    3. 'e' → logprob: -12.134769439697266
    4. 'mes' → logprob: -12.384769439697266
    5. 'mie' → logprob: -14.134769439697266
    6. '```' → logprob: -14.384769439697266
    7. 't' → logprob: -14.634769439697266
    8. 'ème' → logprob: -15.009769439697266
    9. 'м' → logprob: -15.134769439697266
    10. 'ме' → logprob: -15.384769439697266

Token 63: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3833245038986206
    2. 'import' → logprob: -2.50832462310791
    3. ' de' → logprob: -3.13332462310791
    4. '  ' → logprob: -3.25832462310791
    5. '<|end|>' → logprob: -3.25832462310791
    6. ' ' → logprob: -3.38332462310791
    7. '_' → logprob: -3.75832462310791
    8. ' d' → logprob: -4.00832462310791
    9. ')' → logprob: -4.75832462310791
    10. 'de' → logprob: -5.13332462310791

Token 64: ' D' (ID: 415)
  Prédit: ' D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' D' → logprob: -0.41712579131126404
    2. 'D' → logprob: -2.292125701904297
    3. ' plus' → logprob: -2.292125701904297
    4. 'd' → logprob: -3.167125701904297
    5. '```' → logprob: -4.042125701904297
    6. 'l' → logprob: -4.417125701904297
    7. 'ijkstra' → logprob: -4.417125701904297
    8. ' l' → logprob: -4.667125701904297
    9. 'plus' → logprob: -4.792125701904297
    10. ''' → logprob: -4.792125701904297

Token 65: 'ijkstra' (ID: 124290)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.26099616289138794
    2. 'ijkstra' → logprob: -1.6359961032867432
    3. 'ijk' → logprob: -3.885996103286743
    4. 'ij' → logprob: -4.260996341705322
    5. 'ijks' → logprob: -9.760995864868164
    6. '```' → logprob: -9.760995864868164
    7. 'j' → logprob: -10.760995864868164
    8. 'і' → logprob: -10.885995864868164
    9. 'jik' → logprob: -10.885995864868164
    10. 'ik' → logprob: -11.385995864868164

Token 66: ' classique' (ID: 76895)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23072177171707153
    2. ':' → logprob: -2.4807217121124268
    3. ',' → logprob: -3.6057217121124268
    4. '(' → logprob: -3.6057217121124268
    5. '(n' → logprob: -3.7307217121124268
    6. '(distance' → logprob: -4.105721950531006
    7. '(dist' → logprob: -5.105721950531006
    8. 'import' → logprob: -5.230721950531006
    9. 'dist' → logprob: -5.980721950531006
    10. ' (' → logprob: -6.230721950531006

Token 67: ' en' (ID: 469)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.45249488949775696
    2. ':' → logprob: -1.2024948596954346
    3. '   ' → logprob: -3.0774948596954346
    4. ' :' → logprob: -4.327495098114014
    5. ' ' → logprob: -7.077495098114014
    6. ',' → logprob: -7.077495098114014
    7. '(n' → logprob: -7.702495098114014
    8. '(
' → logprob: -8.077494621276855
    9. ' (' → logprob: -8.327494621276855
    10. '():' → logprob: -8.327494621276855

Token 68: ' complex' (ID: 8012)
  Prédit: ' utilisant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' utilisant' → logprob: -0.040049392729997635
    2. ' Python' → logprob: -3.6650493144989014
    3. ' python' → logprob: -5.6650495529174805
    4. ' continu' → logprob: -6.1650495529174805
    5. ' ' → logprob: -6.5400495529174805
    6. ' priorité' → logprob: -7.1650495529174805
    7. ' graph' → logprob: -7.5400495529174805
    8. ' suivant' → logprob: -7.5400495529174805
    9. 'tent' → logprob: -7.7900495529174805
    10. 'python' → logprob: -7.9150495529174805

Token 69: 'ité' (ID: 3761)
  Prédit: 'ité'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ité' → logprob: -0.0001773192489054054
    2. 'ity' → logprob: -9.875177383422852
    3. 'ite' → logprob: -10.000177383422852
    4. 'itié' → logprob: -10.000177383422852
    5. 'ités' → logprob: -11.125177383422852
    6. 'é' → logprob: -11.125177383422852
    7. 'e' → logprob: -13.500177383422852
    8. 'eté' → logprob: -13.875177383422852
    9. 'té' → logprob: -14.125177383422852
    10. 'it' → logprob: -14.500177383422852

Token 70: ' O' (ID: 532)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3383863866329193
    2. 'O' → logprob: -1.5883864164352417
    3. ' O' → logprob: -2.588386297225952
    4. '(n' → logprob: -5.338386535644531
    5. ' (' → logprob: -6.463386535644531
    6. '(O' → logprob: -7.463386535644531
    7. '(log' → logprob: -8.963386535644531
    8. '(
' → logprob: -8.963386535644531
    9. '   ' → logprob: -9.463386535644531
    10. ')' → logprob: -9.838386535644531

Token 71: '(V' (ID: 16949)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0794075727462769
    2. '(V' → logprob: -1.3294075727462769
    3. '((' → logprob: -1.8294075727462769
    4. '(n' → logprob: -2.2044076919555664
    5. '(N' → logprob: -2.5794076919555664
    6. '(E' → logprob: -3.2044076919555664
    7. '(|' → logprob: -5.454407691955566
    8. '(M' → logprob: -6.579407691955566
    9. '(m' → logprob: -6.579407691955566
    10. '(log' → logprob: -7.954407691955566

Token 72: '^' (ID: 61)
  Prédit: '^'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '^' → logprob: -0.6870954632759094
    2. '²' → logprob: -0.8120954632759094
    3. '**' → logprob: -3.4370954036712646
    4. '2' → logprob: -4.062095642089844
    5. ' log' → logprob: -6.437095642089844
    6. 'log' → logprob: -6.687095642089844
    7. '*' → logprob: -7.312095642089844
    8. ' ' → logprob: -9.687095642089844
    9. ' squared' → logprob: -10.187095642089844
    10. ' ^' → logprob: -11.187095642089844

Token 73: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0002957783581223339
    2. ' ' → logprob: -8.250295639038086
    3. '²' → logprob: -10.375295639038086
    4. '3' → logprob: -14.250295639038086
    5. '**' → logprob: -15.000295639038086
    6. '
' → logprob: -15.000295639038086
    7. '```' → logprob: -15.125295639038086
    8. '

' → logprob: -15.250295639038086
    9. '^' → logprob: -15.375295639038086
    10. '​' → logprob: -15.500295639038086

Token 74: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.028041446581482887
    2. ' )' → logprob: -4.028041362762451
    3. '):' → logprob: -4.653041362762451
    4. ' ):' → logprob: -8.52804183959961
    5. '   ' → logprob: -10.15304183959961
    6. ')
' → logprob: -10.40304183959961
    7. ' ' → logprob: -10.77804183959961
    8. '):
' → logprob: -11.90304183959961
    9. ' )
' → logprob: -12.90304183959961
    10. ').' → logprob: -13.77804183959961

Token 75: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02463926188647747
    2. 'n' → logprob: -4.024639129638672
    3. '
' → logprob: -5.274639129638672
    4. '    
' → logprob: -7.649639129638672
    5. ':' → logprob: -8.149639129638672
    6. ' n' → logprob: -8.899639129638672
    7. '	n' → logprob: -9.399639129638672
    8. '   
' → logprob: -9.899639129638672
    9. '(n' → logprob: -10.274639129638672
    10. ',' → logprob: -10.274639129638672

Token 76: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9813397526741028
    2. 'n' → logprob: -1.106339693069458
    3. ' n' → logprob: -1.231339693069458
    4. 'v' → logprob: -7.856339931488037
    5. ' ' → logprob: -7.981339931488037
    6. ' ' → logprob: -7.981339931488037
    7. '    ' → logprob: -8.481339454650879
    8. ' distances' → logprob: -8.481339454650879
    9. '	n' → logprob: -8.606339454650879
    10. '   ' → logprob: -8.981339454650879

Token 77: ' start' (ID: 1604)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.0628023147583008
    2. ' n' → logprob: -1.0628023147583008
    3. '   ' → logprob: -1.1878023147583008
    4. ' V' → logprob: -6.437802314758301
    5. 'V' → logprob: -7.437802314758301
    6. ' distances' → logprob: -7.562802314758301
    7. 'dist' → logprob: -8.1878023147583
    8. 'distance' → logprob: -8.1878023147583
    9. ' dist' → logprob: -8.6878023147583
    10. ' distance' → logprob: -8.6878023147583

Token 78: ' :' (ID: 712)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.655584990978241
    2. ',' → logprob: -1.7805850505828857
    3. '_dist' → logprob: -2.0305850505828857
    4. '_distance' → logprob: -2.7805850505828857
    5. ')' → logprob: -3.2805850505828857
    6. 'dist' → logprob: -4.030584812164307
    7. ':' → logprob: -4.280584812164307
    8. ' ' → logprob: -4.405584812164307
    9. ' =' → logprob: -4.405584812164307
    10. '=' → logprob: -5.655584812164307

Token 79: ' sommet' (ID: 130502)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.06123531237244606
    2. 'int' → logprob: -2.9362354278564453
    3. ' l' → logprob: -6.061235427856445
    4. ' le' → logprob: -6.561235427856445
    5. ' la' → logprob: -7.436235427856445
    6. ' ' → logprob: -7.686235427856445
    7. ' starting' → logprob: -7.936235427856445
    8. ' node' → logprob: -8.686235427856445
    9. 'l' → logprob: -8.686235427856445
    10. '   ' → logprob: -8.936235427856445

Token 80: ' de' (ID: 334)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7841013669967651
    2. '):' → logprob: -1.0341013669967651
    3. ')' → logprob: -1.9091013669967651
    4. ':' → logprob: -4.784101486206055
    5. ' ,' → logprob: -5.159101486206055
    6. ' ' → logprob: -5.284101486206055
    7. '   ' → logprob: -5.409101486206055
    8. ' =' → logprob: -5.784101486206055
    9. '  ' → logprob: -6.034101486206055
    10. '_' → logprob: -6.034101486206055

Token 81: ' départ' (ID: 32693)
  Prédit: ' départ'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' départ' → logprob: -0.32911741733551025
    2. 'dé' → logprob: -1.3291174173355103
    3. 'depart' → logprob: -4.704117298126221
    4. ' ' → logprob: -5.829117298126221
    5. 'd' → logprob: -6.079117298126221
    6. ' depart' → logprob: -7.329117298126221
    7. '  ' → logprob: -8.579117774963379
    8. 'l' → logprob: -8.954117774963379
    9. 'departure' → logprob: -9.079117774963379
    10. ' departure' → logprob: -9.204117774963379

Token 82: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.032370761036872864
    2. ',' → logprob: -3.5323708057403564
    3. ':' → logprob: -7.157370567321777
    4. 'n' → logprob: -7.657370567321777
    5. ' ,' → logprob: -8.532370567321777
    6. '  ' → logprob: -8.532370567321777
    7. ' distances' → logprob: -8.657370567321777
    8. ' n' → logprob: -8.782370567321777
    9. ' ' → logprob: -9.157370567321777
    10. 'distance' → logprob: -9.282370567321777

Token 83: 'index' (ID: 2257)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.8805127143859863
    2. ')' → logprob: -1.2555127143859863
    3. 'int' → logprob: -1.2555127143859863
    4. ' )' → logprob: -5.630512714385986
    5. ':int' → logprob: -5.755512714385986
    6. ',' → logprob: -6.380512714385986
    7. ' ' → logprob: -6.880512714385986
    8. '   ' → logprob: -7.005512714385986
    9. '):' → logprob: -7.255512714385986
    10. 'l' → logprob: -7.380512714385986

Token 84: ' entier' (ID: 80473)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06659244000911713
    2. ' de' → logprob: -4.066592216491699
    3. '):' → logprob: -4.066592216491699
    4. ' du' → logprob: -4.566592216491699
    5. ' ' → logprob: -5.816592216491699
    6. '):
' → logprob: -6.191592216491699
    7. '=int' → logprob: -6.441592216491699
    8. 'de' → logprob: -6.566592216491699
    9. ':int' → logprob: -6.691592216491699
    10. ' )' → logprob: -6.691592216491699

Token 85: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0019847829826176167
    2. ' )' → logprob: -6.376984596252441
    3. '):' → logprob: -8.376984596252441
    4. ',' → logprob: -10.376984596252441
    5. '   ' → logprob: -11.751984596252441
    6. ' ' → logprob: -12.251984596252441
    7. ' ):' → logprob: -12.626984596252441
    8. '):
' → logprob: -13.501984596252441
    9. ' ' → logprob: -13.876984596252441
    10. ')
' → logprob: -14.376984596252441

Token 86: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1464712917804718
    2. 'n' → logprob: -2.1464712619781494
    3. ',' → logprob: -4.7714715003967285
    4. ' n' → logprob: -5.7714715003967285
    5. ' distances' → logprob: -6.3964715003967285
    6. 'distance' → logprob: -6.6464715003967285
    7. ' ' → logprob: -6.8964715003967285
    8. '    
' → logprob: -7.0214715003967285
    9. '   
' → logprob: -7.7714715003967285
    10. 'dist' → logprob: -7.7714715003967285

Token 87: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7027584314346313
    2. 'n' → logprob: -0.8277584314346313
    3. ' n' → logprob: -2.702758312225342
    4. 'v' → logprob: -8.8277587890625
    5. '	n' → logprob: -9.0777587890625
    6. ' distances' → logprob: -9.3277587890625
    7. '    ' → logprob: -9.8277587890625
    8. '    
' → logprob: -9.9527587890625
    9. 'dist' → logprob: -10.0777587890625
    10. 'distance' → logprob: -10.2027587890625

Token 88: ' matrix' (ID: 12248)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.04007458686828613
    2. ' n' → logprob: -4.040074348449707
    3. '   ' → logprob: -4.540074348449707
    4. 'V' → logprob: -5.040074348449707
    5. 'dist' → logprob: -5.790074348449707
    6. 'num' → logprob: -7.665074348449707
    7. ' V' → logprob: -8.040074348449707
    8. 'v' → logprob: -8.415074348449707
    9. 'import' → logprob: -8.540074348449707
    10. 'distance' → logprob: -9.165074348449707

Token 89: ' :' (ID: 712)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.36625218391418457
    2. ' =' → logprob: -1.3662521839141846
    3. ',' → logprob: -4.1162519454956055
    4. ' :' → logprob: -4.6162519454956055
    5. '=' → logprob: -4.7412519454956055
    6. '):' → logprob: -5.1162519454956055
    7. ' ' → logprob: -5.3662519454956055
    8. ')' → logprob: -6.2412519454956055
    9. '_size' → logprob: -6.9912519454956055
    10. '[' → logprob: -7.1162519454956055

Token 90: ' matr' (ID: 25095)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.29427140951156616
    2. ' liste' → logprob: -1.919271469116211
    3. ' list' → logprob: -2.544271469116211
    4. 'list' → logprob: -5.044271469116211
    5. ' adjacency' → logprob: -5.044271469116211
    6. ' ' → logprob: -5.544271469116211
    7. ' une' → logprob: -6.044271469116211
    8. ' le' → logprob: -6.169271469116211
    9. 'liste' → logprob: -6.294271469116211
    10. ' matr' → logprob: -6.669271469116211

Token 91: 'ice' (ID: 603)
  Prédit: 'ice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ice' → logprob: -0.0016411424148827791
    2. 'ix' → logprob: -7.626641273498535
    3. 'ic' → logprob: -7.751641273498535
    4. 'i' → logprob: -8.126641273498535
    5. 'î' → logprob: -8.376641273498535
    6. 'rice' → logprob: -10.126641273498535
    7. '```' → logprob: -10.751641273498535
    8. 'ì' → logprob: -10.876641273498535
    9. 'ï' → logprob: -11.001641273498535
    10. '   ' → logprob: -11.251641273498535

Token 92: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -1.1388341188430786
    2. ' des' → logprob: -1.5138341188430786
    3. 'de' → logprob: -2.138833999633789
    4. 'd' → logprob: -2.263833999633789
    5. ' de' → logprob: -2.513833999633789
    6. '_adj' → logprob: -3.263833999633789
    7. ' adjacency' → logprob: -3.888833999633789
    8. 'adj' → logprob: -3.888833999633789
    9. '_ad' → logprob: -4.138833999633789
    10. 'des' → logprob: -4.138833999633789

Token 93: ''ad' (ID: 36162)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.41039755940437317
    2. ''ad' → logprob: -1.1603975296020508
    3. ' adjacency' → logprob: -4.410397529602051
    4. '’ad' → logprob: -5.785397529602051
    5. 'ad' → logprob: -6.035397529602051
    6. '_ad' → logprob: -6.285397529602051
    7. '_adj' → logprob: -6.410397529602051
    8. ' adj' → logprob: -7.410397529602051
    9. 'a' → logprob: -8.41039752960205
    10. ''' → logprob: -8.41039752960205

Token 94: 'jac' (ID: 77250)
  Prédit: 'jac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jac' → logprob: -0.02332688681781292
    2. 'j' → logprob: -3.773326873779297
    3. 'ja' → logprob: -9.773326873779297
    4. 'Jac' → logprob: -11.523326873779297
    5. '[j' → logprob: -12.773326873779297
    6. 'jec' → logprob: -12.898326873779297
    7. ' jac' → logprob: -13.148326873779297
    8. '"' → logprob: -13.648326873779297
    9. 'jc' → logprob: -13.898326873779297
    10. '```' → logprob: -14.398326873779297

Token 95: 'ence' (ID: 1082)
  Prédit: 'ac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ac' → logprob: -0.3859879970550537
    2. 'ence' → logprob: -1.3859879970550537
    3. 'acency' → logprob: -2.8859879970550537
    4. 'escence' → logprob: -5.635988235473633
    5. 'es' → logprob: -5.885988235473633
    6. 'acité' → logprob: -6.260988235473633
    7. 'ance' → logprob: -7.135988235473633
    8. 'ent' → logprob: -7.385988235473633
    9. '```' → logprob: -7.510988235473633
    10. 'ences' → logprob: -8.260988235473633

Token 96: ' représentant' (ID: 136122)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18650472164154053
    2. ',' → logprob: -1.9365047216415405
    3. '(n' → logprob: -4.81150484085083
    4. ' ,' → logprob: -5.43650484085083
    5. ' (' → logprob: -5.93650484085083
    6. ':' → logprob: -6.06150484085083
    7. '):' → logprob: -6.18650484085083
    8. 'n' → logprob: -6.31150484085083
    9. ' :' → logprob: -6.81150484085083
    10. ',n' → logprob: -7.18650484085083

Token 97: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.24878740310668945
    2. ' la' → logprob: -2.1237874031066895
    3. 'les' → logprob: -2.8737874031066895
    4. ' le' → logprob: -3.3737874031066895
    5. 'le' → logprob: -5.6237874031066895
    6. ' ' → logprob: -6.2487874031066895
    7. ' l' → logprob: -6.3737874031066895
    8. 'la' → logprob: -6.7487874031066895
    9. '   ' → logprob: -7.2487874031066895
    10. 'l' → logprob: -8.248786926269531

Token 98: ' coûts' (ID: 116912)
  Prédit: ' distances'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' distances' → logprob: -0.07496540993452072
    2. ' poids' → logprob: -2.824965476989746
    3. ' graph' → logprob: -5.324965476989746
    4. ' coûts' → logprob: -5.574965476989746
    5. 'dist' → logprob: -6.824965476989746
    6. ' ' → logprob: -7.074965476989746
    7. 'graph' → logprob: -7.574965476989746
    8. ' cout' → logprob: -7.699965476989746
    9. ' chemins' → logprob: -8.324965476989746
    10. 'po' → logprob: -8.324965476989746

Token 99: ' d' (ID: 272)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.040694668889045715
    2. ',' → logprob: -3.7906947135925293
    3. ' ' → logprob: -5.415694713592529
    4. ' des' → logprob: -5.540694713592529
    5. ' ,' → logprob: -5.915694713592529
    6. '  ' → logprob: -6.540694713592529
    7. ' (' → logprob: -7.040694713592529
    8. ' n' → logprob: -7.290694713592529
    9. 'n' → logprob: -7.415694713592529
    10. '(n' → logprob: -7.540694713592529

Token 100: ''ar' (ID: 54307)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'é' → logprob: -1.0617754459381104
    2. 'ar' → logprob: -1.8117754459381104
    3. ''accès' → logprob: -2.0617754459381104
    4. 'es' → logprob: -2.1867754459381104
    5. 'e' → logprob: -2.5617754459381104
    6. 'a' → logprob: -3.0617754459381104
    7. ''' → logprob: -3.8117754459381104
    8. ''entrée' → logprob: -3.9367754459381104
    9. 'adj' → logprob: -5.061775207519531
    10. 'i' → logprob: -5.186775207519531

Token 101: 'ête' (ID: 16808)
  Prédit: 'êtes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êtes' → logprob: -0.7226872444152832
    2. 'c' → logprob: -2.097687244415283
    3. 'ête' → logprob: -2.222687244415283
    4. 'cs' → logprob: -2.222687244415283
    5. 'r' → logprob: -2.347687244415283
    6. 'êt' → logprob: -2.847687244415283
    7. 'e' → logprob: -5.222687244415283
    8. 'ec' → logprob: -5.222687244415283
    9. 'ê' → logprob: -5.847687244415283
    10. 'es' → logprob: -5.972687244415283

Token 102: ' entre' (ID: 3853)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01975642517209053
    2. ',' → logprob: -4.144756317138672
    3. ':' → logprob: -7.019756317138672
    4. 'n' → logprob: -8.019756317138672
    5. '
' → logprob: -8.019756317138672
    6. '):' → logprob: -8.019756317138672
    7. '(n' → logprob: -8.394756317138672
    8. ' ,' → logprob: -8.394756317138672
    9. ' :' → logprob: -8.769756317138672
    10. ',
' → logprob: -8.894756317138672

Token 103: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.19196738302707672
    2. 'les' → logprob: -2.816967487335205
    3. 's' → logprob: -3.191967487335205
    4. ' vertices' → logprob: -3.441967487335205
    5. ' tous' → logprob: -4.066967487335205
    6. ' somm' → logprob: -4.691967487335205
    7. 'vertices' → logprob: -5.316967487335205
    8. ' ' → logprob: -5.941967487335205
    9. 'som' → logprob: -6.191967487335205
    10. ' i' → logprob: -6.816967487335205

Token 104: ' somm' (ID: 44830)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.19272232055664062
    2. ' somm' → logprob: -2.5677223205566406
    3. ' vertices' → logprob: -3.4427223205566406
    4. ' ' → logprob: -4.192722320556641
    5. ' sommet' → logprob: -4.567722320556641
    6. 'vertices' → logprob: -4.817722320556641
    7. ' nodes' → logprob: -4.942722320556641
    8. 'som' → logprob: -5.192722320556641
    9. ' noe' → logprob: -5.192722320556641
    10. ' points' → logprob: -5.317722320556641

Token 105: 'ets' (ID: 1719)
  Prédit: 'ets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ets' → logprob: -0.019453199580311775
    2. 'et' → logprob: -4.019453048706055
    3. 'es' → logprob: -6.894453048706055
    4. 'e' → logprob: -9.144453048706055
    5. 'è' → logprob: -9.644453048706055
    6. 'ètes' → logprob: -10.144453048706055
    7. 'etes' → logprob: -10.644453048706055
    8. 'êts' → logprob: -11.019453048706055
    9. 'ètres' → logprob: -11.769453048706055
    10. '`' → logprob: -12.269453048706055

Token 106: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007448917254805565
    2. 'n' → logprob: -5.507449150085449
    3. '
' → logprob: -6.632449150085449
    4. ',' → logprob: -7.382449150085449
    5. ':' → logprob: -7.757449150085449
    6. '    
' → logprob: -8.50744915008545
    7. ' n' → logprob: -8.75744915008545
    8. '(n' → logprob: -9.00744915008545
    9. '):' → logprob: -9.38244915008545
    10. ')' → logprob: -9.75744915008545

Token 107: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014873485080897808
    2. ':' → logprob: -4.889873504638672
    3. 'n' → logprob: -5.014873504638672
    4. '    
' → logprob: -8.764873504638672
    5. '
' → logprob: -9.389873504638672
    6. ',' → logprob: -9.764873504638672
    7. ' n' → logprob: -9.764873504638672
    8. ':
' → logprob: -10.264873504638672
    9. '	n' → logprob: -10.514873504638672
    10. ' :' → logprob: -10.639873504638672

Token 108: ' INF' (ID: 69196)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6115128397941589
    2. 'n' → logprob: -1.4865128993988037
    3. ' n' → logprob: -1.4865128993988037
    4. ' V' → logprob: -5.986512660980225
    5. 'V' → logprob: -6.361512660980225
    6. 'v' → logprob: -8.236513137817383
    7. ' distances' → logprob: -8.861513137817383
    8. '	n' → logprob: -9.611513137817383
    9. ' ' → logprob: -9.861513137817383
    10. '    
' → logprob: -10.111513137817383

Token 109: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03367440402507782
    2. '=' → logprob: -3.408674478530884
    3. '=int' → logprob: -11.283674240112305
    4. ',' → logprob: -12.658674240112305
    5. ' ' → logprob: -12.783674240112305
    6. ' =
' → logprob: -13.033674240112305
    7. ' ' → logprob: -13.033674240112305
    8. '=float' → logprob: -13.158674240112305
    9. '＝' → logprob: -13.658674240112305
    10. ')' → logprob: -14.033674240112305

Token 110: ' ' (ID: 220)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.2065819948911667
    2. ' float' → logprob: -1.956581950187683
    3. '10' → logprob: -3.2065820693969727
    4. ' ' → logprob: -5.581582069396973
    5. 'int' → logprob: -6.956582069396973
    6. ' int' → logprob: -9.706582069396973
    7. '1' → logprob: -11.831582069396973
    8. '100' → logprob: -11.956582069396973
    9. '	float' → logprob: -12.081582069396973
    10. '   ' → logprob: -13.331582069396973

Token 111: '10' (ID: 702)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.10180661082267761
    2. '10' → logprob: -2.351806640625
    3. 'int' → logprob: -6.476806640625
    4. ' float' → logprob: -10.101806640625
    5. '999' → logprob: -11.601806640625
    6. '100' → logprob: -12.226806640625
    7. 'sys' → logprob: -13.101806640625
    8. '1' → logprob: -13.351806640625
    9. ' ' → logprob: -14.101806640625
    10. '987' → logprob: -15.726806640625

Token 112: ' **' (ID: 6240)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.06528367847204208
    2. '**' → logprob: -2.81528377532959
    3. '7' → logprob: -5.81528377532959
    4. '6' → logprob: -8.56528377532959
    5. '8' → logprob: -10.06528377532959
    6. '000' → logprob: -10.44028377532959
    7. ' **' → logprob: -10.44028377532959
    8. ' ' → logprob: -11.44028377532959
    9. '09' → logprob: -11.44028377532959
    10. '10' → logprob: -11.44028377532959

Token 113: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -9.519893501419574e-05
    2. '10' → logprob: -10.12509536743164
    3. '15' → logprob: -10.25009536743164
    4. '18' → logprob: -11.50009536743164
    5. '12' → logprob: -12.12509536743164
    6. '7' → logprob: -12.50009536743164
    7. ' ' → logprob: -15.87509536743164
    8. '8' → logprob: -16.62509536743164
    9. '16' → logprob: -16.62509536743164
    10. '14' → logprob: -16.75009536743164

Token 114: '18' (ID: 1157)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.0001310719089815393
    2. '15' → logprob: -9.625130653381348
    3. '10' → logprob: -10.375130653381348
    4. '18' → logprob: -10.750130653381348
    5. '7' → logprob: -11.750130653381348
    6. '12' → logprob: -12.500130653381348
    7. '8' → logprob: -15.625130653381348
    8. '16' → logprob: -16.125131607055664
    9. '14' → logprob: -16.250131607055664
    10. '6' → logprob: -16.750131607055664

Token 115: ' ' (ID: 220)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.5580301880836487
    2. 'distance' → logprob: -1.808030128479004
    3. '
' → logprob: -2.308030128479004
    4. ' distances' → logprob: -2.558030128479004
    5. '   ' → logprob: -2.683030128479004
    6. 'Distances' → logprob: -5.308030128479004
    7. '    
' → logprob: -5.808030128479004
    8. '
' → logprob: -6.183030128479004
    9. '	dist' → logprob: -6.683030128479004
    10. '' → logprob: -6.683030128479004

Token 116: ' #' (ID: 1069)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'distance' → logprob: -1.155307650566101
    2. ' distances' → logprob: -1.280307650566101
    3. '
' → logprob: -1.405307650566101
    4. 'dist' → logprob: -2.0303077697753906
    5. 'Distances' → logprob: -4.280307769775391
    6. '   ' → logprob: -5.155307769775391
    7. '    
' → logprob: -6.155307769775391
    8. ' distance' → logprob: -6.655307769775391
    9. '
' → logprob: -6.655307769775391
    10. '' → logprob: -7.155307769775391

Token 117: ' Vale' (ID: 55242)
  Prédit: ' distances'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' distances' → logprob: -0.5155726075172424
    2. 'distance' → logprob: -1.5155725479125977
    3. ' distance' → logprob: -2.1405725479125977
    4. 'dist' → logprob: -3.2655725479125977
    5. ' dist' → logprob: -4.640572547912598
    6. ' ' → logprob: -4.765572547912598
    7. ' n' → logprob: -6.015572547912598
    8. 'n' → logprob: -6.390572547912598
    9. '_distance' → logprob: -7.390572547912598
    10. ' distancia' → logprob: -7.515572547912598

Token 118: 'ur' (ID: 330)
  Prédit: 'ur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ur' → logprob: -0.5622869729995728
    2. 'ry' → logprob: -1.0622869729995728
    3. '   ' → logprob: -3.437286853790283
    4. 'r' → logprob: -3.937286853790283
    5. 'ury' → logprob: -4.187286853790283
    6. 'rité' → logprob: -6.062286853790283
    7. '       ' → logprob: -6.312286853790283
    8. 'u' → logprob: -6.312286853790283
    9. 'ue' → logprob: -6.437286853790283
    10. ' ' → logprob: -6.437286853790283

Token 119: ' représentant' (ID: 136122)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.07454937696456909
    2. ' ' → logprob: -4.324549198150635
    3. '   ' → logprob: -4.449549198150635
    4. ' =' → logprob: -4.574549198150635
    5. '_max' → logprob: -4.949549198150635
    6. '=' → logprob: -5.449549198150635
    7. 'd' → logprob: -5.574549198150635
    8. ' de' → logprob: -5.574549198150635
    9. '_de' → logprob: -5.824549198150635
    10. 'max' → logprob: -6.074549198150635

Token 120: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.044736213982105255
    2. ' une' → logprob: -3.29473614692688
    3. 'l' → logprob: -6.169736385345459
    4. ' ' → logprob: -6.169736385345459
    5. ' un' → logprob: -6.169736385345459
    6. ' ' → logprob: -8.5447359085083
    7. '  ' → logprob: -9.1697359085083
    8. '	l' → logprob: -10.7947359085083
    9. '   ' → logprob: -10.9197359085083
    10. 'une' → logprob: -11.5447359085083

Token 121: ''in' (ID: 17942)
  Prédit: ''in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''in' → logprob: -0.7980856895446777
    2. 'a' → logprob: -0.9230856895446777
    3. 'e' → logprob: -2.5480856895446777
    4. ''' → logprob: -2.7980856895446777
    5. ''a' → logprob: -5.298085689544678
    6. 'in' → logprob: -6.548085689544678
    7. '   ' → logprob: -6.798085689544678
    8. 'inf' → logprob: -7.673085689544678
    9. ' '' → logprob: -8.048086166381836
    10. 'es' → logprob: -8.173086166381836

Token 122: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0010711579816415906
    2. 'float' → logprob: -7.001070976257324
    3. 'fi' → logprob: -10.126070976257324
    4. 'finity' → logprob: -10.251070976257324
    5. 'fo' → logprob: -10.376070976257324
    6. 'ff' → logprob: -11.001070976257324
    7. 'finite' → logprob: -11.626070976257324
    8. 'fty' → logprob: -12.626070976257324
    9. 'fs' → logprob: -12.751070976257324
    10. '```' → logprob: -13.001070976257324

Token 123: 'ini' (ID: 2363)
  Prédit: 'inity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inity' → logprob: -0.2816234827041626
    2. 'ini' → logprob: -1.7816234827041626
    3. 'float' → logprob: -3.656623363494873
    4. 'i' → logprob: -4.156623363494873
    5. ' float' → logprob: -5.156623363494873
    6. '```' → logprob: -5.156623363494873
    7. 'inite' → logprob: -5.281623363494873
    8. '   ' → logprob: -5.656623363494873
    9. 'inf' → logprob: -5.906623363494873
    10. 'init' → logprob: -6.031623363494873

Token 124: ',' (ID: 11)
  Prédit: ' distances'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' distances' → logprob: -0.9063097834587097
    2. 'dist' → logprob: -1.0313098430633545
    3. 'distance' → logprob: -1.7813098430633545
    4. '
' → logprob: -3.1563098430633545
    5. 'Distances' → logprob: -4.781309604644775
    6. '   ' → logprob: -4.906309604644775
    7. ',' → logprob: -6.031309604644775
    8. 'n' → logprob: -6.281309604644775
    9. '_dist' → logprob: -6.531309604644775
    10. ' dist' → logprob: -6.656309604644775

Token 125: ' ici' (ID: 27994)
  Prédit: ' distances'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' distances' → logprob: -0.6795383095741272
    2. '   ' → logprob: -1.6795382499694824
    3. 'dist' → logprob: -2.0545382499694824
    4. 'distance' → logprob: -2.4295382499694824
    5. ' distance' → logprob: -3.3045382499694824
    6. ' dist' → logprob: -3.4295382499694824
    7. ' n' → logprob: -4.929538249969482
    8. ' distante' → logprob: -4.929538249969482
    9. 'n' → logprob: -6.304538249969482
    10. ')' → logprob: -7.179538249969482

Token 126: ' utilisée' (ID: 106548)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.76545649766922
    2. ' un' → logprob: -0.89045649766922
    3. ' ' → logprob: -2.390456438064575
    4. ' a' → logprob: -4.265456676483154
    5. ' l' → logprob: -5.390456676483154
    6. ' pour' → logprob: -6.015456676483154
    7. 'un' → logprob: -6.515456676483154
    8. '  ' → logprob: -7.140456676483154
    9. ' for' → logprob: -7.140456676483154
    10. ' la' → logprob: -7.140456676483154

Token 127: ' pour' (ID: 1930)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5753220915794373
    2. '   ' → logprob: -2.200322151184082
    3. 'for' → logprob: -2.575322151184082
    4. ')' → logprob: -2.950322151184082
    5. ' pour' → logprob: -2.950322151184082
    6. ' ' → logprob: -3.325322151184082
    7. ',' → logprob: -3.325322151184082
    8. ' )' → logprob: -4.950322151184082
    9. ' =' → logprob: -4.950322151184082
    10. ' distances' → logprob: -4.950322151184082

Token 128: ' initial' (ID: 4871)
  Prédit: ' initial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' initial' → logprob: -0.7141635417938232
    2. 'initial' → logprob: -1.0891635417938232
    3. 'l' → logprob: -2.5891635417938232
    4. ' l' → logprob: -2.5891635417938232
    5. ' représ' → logprob: -4.964163780212402
    6. 're' → logprob: -5.964163780212402
    7. ' les' → logprob: -5.964163780212402
    8. 'les' → logprob: -6.089163780212402
    9. ' la' → logprob: -6.339163780212402
    10. 'init' → logprob: -6.589163780212402

Token 129: 'iser' (ID: 7466)
  Prédit: 'iser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iser' → logprob: -0.07034896314144135
    2. 'al' → logprob: -2.8203489780426025
    3. 'izer' → logprob: -5.695348739624023
    4. 'er' → logprob: -6.070348739624023
    5. 'ial' → logprob: -6.695348739624023
    6. 'ser' → logprob: -7.945348739624023
    7. '   ' → logprob: -7.945348739624023
    8. 'ialize' → logprob: -9.570348739624023
    9. 'aiser' → logprob: -9.945348739624023
    10. '```' → logprob: -9.945348739624023

Token 130: ' les' (ID: 1341)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.020155837759375572
    2. ' distances' → logprob: -4.145155906677246
    3. ' dist' → logprob: -5.895155906677246
    4. 'distance' → logprob: -6.770155906677246
    5. 'n' → logprob: -9.395155906677246
    6. '   ' → logprob: -9.520155906677246
    7. ' n' → logprob: -10.645155906677246
    8. 'd' → logprob: -11.395155906677246
    9. '(dist' → logprob: -11.645155906677246
    10. ' distance' → logprob: -12.520155906677246

Token 131: ' distances' (ID: 48294)
  Prédit: ' distances'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' distances' → logprob: -0.4800644516944885
    2. 'dist' → logprob: -0.9800644516944885
    3. ' dist' → logprob: -5.730064392089844
    4. 'distance' → logprob: -5.980064392089844
    5. 'd' → logprob: -9.355064392089844
    6. ' distance' → logprob: -9.480064392089844
    7. 'cost' → logprob: -11.230064392089844
    8. ' d' → logprob: -12.730064392089844
    9. 'Distances' → logprob: -12.730064392089844
    10. '```' → logprob: -13.730064392089844

Token 132: ' à' (ID: 1221)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.800213634967804
    2. '   ' → logprob: -1.3002135753631592
    3. 'dist' → logprob: -1.6752135753631592
    4. 'distance' → logprob: -3.550213575363159
    5. '    
' → logprob: -3.550213575363159
    6. ' distances' → logprob: -4.175213813781738
    7. 'n' → logprob: -5.300213813781738
    8. '   
' → logprob: -5.925213813781738
    9. '  
' → logprob: -5.925213813781738
    10. '_dist' → logprob: -6.925213813781738

Token 133: ' un' (ID: 537)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.5153451561927795
    2. ' float' → logprob: -1.1403450965881348
    3. 'l' → logprob: -3.6403450965881348
    4. ' ' → logprob: -4.015345096588135
    5. '"' → logprob: -4.640345096588135
    6. '10' → logprob: -5.015345096588135
    7. 'inf' → logprob: -5.390345096588135
    8. ' l' → logprob: -5.640345096588135
    9. ' la' → logprob: -6.140345096588135
    10. ''' → logprob: -6.140345096588135

Token 134: ' grand' (ID: 6363)
  Prédit: ' large'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' large' → logprob: -0.9425191283226013
    2. ' ' → logprob: -1.942519187927246
    3. ' very' → logprob: -1.942519187927246
    4. 'large' → logprob: -2.067519187927246
    5. ' space' → logprob: -3.192519187927246
    6. ' espace' → logprob: -3.442519187927246
    7. 'very' → logprob: -3.942519187927246
    8. 'space' → logprob: -4.192519187927246
    9. ' maximum' → logprob: -4.942519187927246
    10. ' "' → logprob: -4.942519187927246

Token 135: ' entier' (ID: 80473)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3160082697868347
    2. ' ' → logprob: -1.4410083293914795
    3. 'space' → logprob: -4.1910080909729
    4. ' espace' → logprob: -4.8160080909729
    5. 'es' → logprob: -5.0660080909729
    6. ' space' → logprob: -6.9410080909729
    7. '  ' → logprob: -7.5660080909729
    8. '_space' → logprob: -7.5660080909729
    9. ''espace' → logprob: -7.8160080909729
    10. ' _' → logprob: -7.8160080909729

Token 136: '
' (ID: 198)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.7868766188621521
    2. '
' → logprob: -0.9118766188621521
    3. '   ' → logprob: -3.036876678466797
    4. ' distances' → logprob: -3.286876678466797
    5. 'distance' → logprob: -3.411876678466797
    6. '    
' → logprob: -5.536876678466797
    7. 'Distances' → logprob: -5.786876678466797
    8. 'n' → logprob: -5.911876678466797
    9. ',' → logprob: -5.911876678466797
    10. '' → logprob: -6.161876678466797

Token 137: '   ' (ID: 271)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.4213902950286865
    2. '   ' → logprob: -2.1713902950286865
    3. 'n' → logprob: -2.4213902950286865
    4. ' distances' → logprob: -2.5463902950286865
    5. 'distance' → logprob: -3.4213902950286865
    6. '
' → logprob: -3.9213902950286865
    7. 'Distances' → logprob: -5.796390533447266
    8. '    
' → logprob: -6.171390533447266
    9. 'd' → logprob: -6.921390533447266
    10. ' dist' → logprob: -7.171390533447266

Token 138: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.6645777225494385
    2. ' n' → logprob: -1.2895777225494385
    3. '   ' → logprob: -1.7895777225494385
    4. ' V' → logprob: -4.164577484130859
    5. 'V' → logprob: -4.414577484130859
    6. 'dist' → logprob: -4.789577484130859
    7. ' distances' → logprob: -5.539577484130859
    8. ' dist' → logprob: -6.664577484130859
    9. 'distance' → logprob: -7.414577484130859
    10. 'v' → logprob: -7.664577484130859

Token 139: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04870625212788582
    2. '=' → logprob: -3.048706293106079
    3. ',' → logprob: -9.2987060546875
    4. ' ' → logprob: -10.9237060546875
    5. '   ' → logprob: -13.0487060546875
    6. '=int' → logprob: -13.1737060546875
    7. ' ' → logprob: -13.2987060546875
    8. '_' → logprob: -13.4237060546875
    9. '  ' → logprob: -14.5487060546875
    10. ' ,' → logprob: -14.9237060546875

Token 140: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.048587825149297714
    2. 'len' → logprob: -3.0485877990722656
    3. '(len' → logprob: -15.173587799072266
    4. '	len' → logprob: -16.298587799072266
    5. ' ' → logprob: -16.798587799072266
    6. '=len' → logprob: -17.673587799072266
    7. ' ' → logprob: -18.173587799072266
    8. '[len' → logprob: -18.798587799072266
    9. '   ' → logprob: -19.923587799072266
    10. '<len' → logprob: -20.298587799072266

Token 141: '(matrix' (ID: 57027)
  Prédit: '(matrix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(matrix' → logprob: -0.0017125436570495367
    2. '(' → logprob: -6.376712322235107
    3. 'matrix' → logprob: -11.751712799072266
    4. '(m' → logprob: -14.126712799072266
    5. ' matrix' → logprob: -14.376712799072266
    6. ' (' → logprob: -14.626712799072266
    7. '	matrix' → logprob: -15.126712799072266
    8. '(
' → logprob: -16.001712799072266
    9. '(Matrix' → logprob: -16.126712799072266
    10. '(mat' → logprob: -16.751712799072266

Token 142: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004634392389561981
    2. ' )' → logprob: -8.000463485717773
    3. ')
' → logprob: -9.125463485717773
    4. '   ' → logprob: -11.125463485717773
    5. ')n' → logprob: -13.125463485717773
    6. 'def' → logprob: -14.250463485717773
    7. ' ' → logprob: -14.625463485717773
    8. ')

' → logprob: -14.875463485717773
    9. ' )
' → logprob: -15.875463485717773
    10. '[' → logprob: -16.000463485717773

Token 143: ' ' (ID: 220)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.6922428607940674
    2. '
' → logprob: -0.8172428607940674
    3. '   ' → logprob: -3.9422428607940674
    4. 'distance' → logprob: -4.317242622375488
    5. '    
' → logprob: -4.442242622375488
    6. ' distances' → logprob: -4.817242622375488
    7. 'Distances' → logprob: -6.817242622375488
    8. '  
' → logprob: -6.817242622375488
    9. ' 
' → logprob: -7.442242622375488
    10. '   
' → logprob: -7.442242622375488

Token 144: ' #' (ID: 1069)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.380023330450058
    2. '
' → logprob: -1.3800233602523804
    3. 'distance' → logprob: -2.880023241043091
    4. ' distances' → logprob: -5.13002347946167
    5. '    
' → logprob: -7.25502347946167
    6. '   ' → logprob: -7.75502347946167
    7. '
' → logprob: -8.130023002624512
    8. 'd' → logprob: -8.130023002624512
    9. ' dist' → logprob: -8.380023002624512
    10. '  
' → logprob: -9.505023002624512

Token 145: ' Nombre' (ID: 70208)
  Prédit: ' distances'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' distances' → logprob: -0.08832143992185593
    2. 'dist' → logprob: -2.9633214473724365
    3. ' dist' → logprob: -4.088321208953857
    4. ' distance' → logprob: -4.838321208953857
    5. 'distance' → logprob: -5.088321208953857
    6. 'Distances' → logprob: -6.713321208953857
    7. 'n' → logprob: -8.588321685791016
    8. 'd' → logprob: -9.088321685791016
    9. '   ' → logprob: -9.338321685791016
    10. ' distancia' → logprob: -9.713321685791016

Token 146: ' de' (ID: 334)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.6079927086830139
    2. '(' → logprob: -1.8579926490783691
    3. '_' → logprob: -2.732992649078369
    4. ' de' → logprob: -2.982992649078369
    5. '_des' → logprob: -2.982992649078369
    6. 'des' → logprob: -3.232992649078369
    7. 's' → logprob: -3.732992649078369
    8. '(s' → logprob: -4.357992649078369
    9. '<|end|>' → logprob: -5.232992649078369
    10. ')' → logprob: -5.357992649078369

Token 147: ' somm' (ID: 44830)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.03859344497323036
    2. '(matrix' → logprob: -3.9135935306549072
    3. ' matrix' → logprob: -4.038593292236328
    4. 'vertices' → logprob: -9.163593292236328
    5. '	matrix' → logprob: -9.663593292236328
    6. ' vertices' → logprob: -10.788593292236328
    7. 'nodes' → logprob: -11.038593292236328
    8. 'graph' → logprob: -11.413593292236328
    9. 's' → logprob: -11.788593292236328
    10. ' ' → logprob: -12.163593292236328

Token 148: 'ets' (ID: 1719)
  Prédit: 'ets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ets' → logprob: -0.0009462343878112733
    2. 'êts' → logprob: -7.500946044921875
    3. 'et' → logprob: -8.875946044921875
    4. 'ètres' → logprob: -9.875946044921875
    5. 'è' → logprob: -9.875946044921875
    6. 'e' → logprob: -10.250946044921875
    7. '```' → logprob: -11.000946044921875
    8. ')' → logprob: -11.500946044921875
    9. 'ents' → logprob: -11.750946044921875
    10. 'es' → logprob: -11.750946044921875

Token 149: ' (' (ID: 350)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.40834689140319824
    2. '
' → logprob: -1.5333468914031982
    3. 'distance' → logprob: -2.9083468914031982
    4. '   ' → logprob: -3.6583468914031982
    5. ' distances' → logprob: -3.7833468914031982
    6. '    
' → logprob: -4.783347129821777
    7. '_dist' → logprob: -6.658347129821777
    8. 'Distances' → logprob: -6.783347129821777
    9. '  
' → logprob: -6.908347129821777
    10. '   
' → logprob: -7.283347129821777

Token 150: 'n' (ID: 77)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.3818930685520172
    2. ')' → logprob: -1.3818930387496948
    3. ' matrix' → logprob: -3.0068931579589844
    4. ' )' → logprob: -4.381893157958984
    5. '(matrix' → logprob: -5.506893157958984
    6. '	matrix' → logprob: -9.006893157958984
    7. ')
' → logprob: -10.131893157958984
    8. ' ' → logprob: -10.381893157958984
    9. 'mat' → logprob: -11.131893157958984
    10. ' ' → logprob: -11.381893157958984

Token 151: 'œ' (ID: 15335)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009923716075718403
    2. ' )' → logprob: -4.634923934936523
    3. ')
' → logprob: -9.509923934936523
    4. '
' → logprob: -11.009923934936523
    5. 'def' → logprob: -11.759923934936523
    6. ' ' → logprob: -11.884923934936523
    7. ' ' → logprob: -11.884923934936523
    8. ')n' → logprob: -12.009923934936523
    9. '[' → logprob: -12.259923934936523
    10. ')

' → logprob: -12.259923934936523

Token 152: 'uds' (ID: 44387)
  Prédit: 'uds'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uds' → logprob: -0.07693696022033691
    2. 'ud' → logprob: -2.951936960220337
    3. 't' → logprob: -4.451936721801758
    4. 'ts' → logprob: -5.701936721801758
    5. 'œ' → logprob: -5.826936721801758
    6. '```' → logprob: -6.701936721801758
    7. 'ds' → logprob: -7.576936721801758
    8. 's' → logprob: -8.076936721801758
    9. ')' → logprob: -8.076936721801758
    10. '   ' → logprob: -8.201936721801758

Token 153: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0042646583169698715
    2. ' )' → logprob: -5.504264831542969
    3. ')
' → logprob: -9.629264831542969
    4. '   ' → logprob: -9.879264831542969
    5. ')n' → logprob: -10.129264831542969
    6. '
' → logprob: -12.004264831542969
    7. 'def' → logprob: -12.629264831542969
    8. 'n' → logprob: -12.879264831542969
    9. ' ' → logprob: -12.879264831542969
    10. ' ' → logprob: -13.254264831542969

Token 154: ' dans' (ID: 2671)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.32490265369415283
    2. '   ' → logprob: -1.9499026536941528
    3. 'distance' → logprob: -2.6999025344848633
    4. '
' → logprob: -3.0749025344848633
    5. ' distances' → logprob: -4.199902534484863
    6. '    
' → logprob: -5.324902534484863
    7. '	dist' → logprob: -7.574902534484863
    8. 'Distances' → logprob: -8.199902534484863
    9. '   
' → logprob: -8.574902534484863
    10. ' dist' → logprob: -9.074902534484863

Token 155: ' le' (ID: 505)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.03188510984182358
    2. ' matrix' → logprob: -3.5318851470947266
    3. '(matrix' → logprob: -6.156885147094727
    4. '	matrix' → logprob: -11.531885147094727
    5. '   ' → logprob: -14.031885147094727
    6. ' the' → logprob: -14.406885147094727
    7. 'the' → logprob: -14.656885147094727
    8. 'mat' → logprob: -14.656885147094727
    9. ' ' → logprob: -15.531885147094727
    10. 'm' → logprob: -15.906885147094727

Token 156: ' grap' (ID: 60955)
  Prédit: ' matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' matrix' → logprob: -0.9533448219299316
    2. ' graph' → logprob: -1.3283448219299316
    3. 'matrix' → logprob: -1.4533448219299316
    4. 'graph' → logprob: -2.2033448219299316
    5. ' grap' → logprob: -5.828344821929932
    6. ' matr' → logprob: -6.953344821929932
    7. 'mat' → logprob: -7.828344821929932
    8. ' ' → logprob: -8.453344345092773
    9. ' ' → logprob: -8.578344345092773
    10. '	graph' → logprob: -8.953344345092773

Token 157: 'he' (ID: 273)
  Prédit: 'aphe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aphe' → logprob: -0.2710246443748474
    2. 'raph' → logprob: -1.7710247039794922
    3. 'rap' → logprob: -3.771024703979492
    4. 'h' → logprob: -4.146024703979492
    5. 'he' → logprob: -4.146024703979492
    6. 'phe' → logprob: -5.521024703979492
    7. '   ' → logprob: -5.771024703979492
    8. '  ' → logprob: -7.646024703979492
    9. 'aph' → logprob: -7.896024703979492
    10. ' ' → logprob: -7.896024703979492

Token 158: ',' (ID: 11)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.6736202239990234
    2. '
' → logprob: -1.1736202239990234
    3. '   ' → logprob: -2.0486202239990234
    4. 'distance' → logprob: -3.9236202239990234
    5. ' distances' → logprob: -4.048620223999023
    6. '    
' → logprob: -4.798620223999023
    7. 'Distances' → logprob: -6.423620223999023
    8. '  
' → logprob: -6.923620223999023
    9. '_dist' → logprob: -7.298620223999023
    10. '   
' → logprob: -7.548620223999023

Token 159: ' dé' (ID: 2393)
  Prédit: ' distances'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' distances' → logprob: -0.40943193435668945
    2. 'dist' → logprob: -1.1594319343566895
    3. ' dist' → logprob: -4.1594319343566895
    4. 'distance' → logprob: -5.5344319343566895
    5. ' distance' → logprob: -6.9094319343566895
    6. 'd' → logprob: -7.7844319343566895
    7. '   ' → logprob: -8.034431457519531
    8. ' d' → logprob: -8.534431457519531
    9. 'Distances' → logprob: -8.659431457519531
    10. '	dist' → logprob: -8.659431457519531

Token 160: 'duit' (ID: 90246)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.017029719427227974
    2. 'fin' → logprob: -4.642029762268066
    3. 'termin' → logprob: -5.392029762268066
    4. 'term' → logprob: -6.892029762268066
    5. 'clar' → logprob: -7.892029762268066
    6. '' → logprob: -8.142029762268066
    7. 'éf' → logprob: -8.642029762268066
    8. 'tect' → logprob: -8.767029762268066
    9. 'te' → logprob: -9.017029762268066
    10. '   ' → logprob: -9.892029762268066

Token 161: ' de' (ID: 334)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5228245258331299
    2. '   ' → logprob: -2.02282452583313
    3. ' de' → logprob: -2.14782452583313
    4. 'from' → logprob: -2.52282452583313
    5. ' from' → logprob: -3.77282452583313
    6. ' des' → logprob: -4.022824287414551
    7. ' du' → logprob: -4.772824287414551
    8. ')' → logprob: -4.897824287414551
    9. ' ' → logprob: -5.897824287414551
    10. 'de' → logprob: -6.147824287414551

Token 162: ' la' (ID: 557)
  Prédit: ' matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' matrix' → logprob: -0.07001501321792603
    2. 'matrix' → logprob: -2.6950149536132812
    3. '(matrix' → logprob: -10.445014953613281
    4. ' la' → logprob: -11.070014953613281
    5. ' ' → logprob: -11.195014953613281
    6. '	matrix' → logprob: -11.195014953613281
    7. ' the' → logprob: -13.070014953613281
    8. ' ' → logprob: -14.445014953613281
    9. ' matriz' → logprob: -14.445014953613281
    10. ' n' → logprob: -14.695014953613281

Token 163: ' taille' (ID: 41644)
  Prédit: ' matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' matrix' → logprob: -0.5348541140556335
    2. 'matrix' → logprob: -0.9098541140556335
    3. ' matr' → logprob: -4.909853935241699
    4. ' ' → logprob: -6.034853935241699
    5. 'mat' → logprob: -7.534853935241699
    6. ' matriz' → logprob: -8.0348539352417
    7. '	matrix' → logprob: -8.1598539352417
    8. '(matrix' → logprob: -8.5348539352417
    9. 'm' → logprob: -8.6598539352417
    10. ')' → logprob: -10.0348539352417

Token 164: ' de' (ID: 334)
  Prédit: '(matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(matrix' → logprob: -0.5739837288856506
    2. '(' → logprob: -0.9489837288856506
    3. '   ' → logprob: -3.823983669281006
    4. ' ' → logprob: -5.073983669281006
    5. ')' → logprob: -5.323983669281006
    6. ' (' → logprob: -5.698983669281006
    7. '(m' → logprob: -5.698983669281006
    8. ' de' → logprob: -6.323983669281006
    9. 'matrix' → logprob: -6.573983669281006
    10. '(
' → logprob: -6.573983669281006

Token 165: ' la' (ID: 557)
  Prédit: ' matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' matrix' → logprob: -0.3133101463317871
    2. 'matrix' → logprob: -1.313310146331787
    3. '(matrix' → logprob: -10.188310623168945
    4. '	matrix' → logprob: -12.063310623168945
    5. ' la' → logprob: -12.938310623168945
    6. ' ' → logprob: -14.063310623168945
    7. ' matriz' → logprob: -14.938310623168945
    8. ' ' → logprob: -15.063310623168945
    9. '.matrix' → logprob: -15.063310623168945
    10. ' the' → logprob: -15.438310623168945

Token 166: ' matr' (ID: 25095)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.07933013141155243
    2. ' matrix' → logprob: -2.5793302059173584
    3. 'mat' → logprob: -8.079330444335938
    4. ' matr' → logprob: -9.954330444335938
    5. ' matriz' → logprob: -10.829330444335938
    6. 'graph' → logprob: -11.079330444335938
    7. '	matrix' → logprob: -11.454330444335938
    8. 'm' → logprob: -12.204330444335938
    9. '(matrix' → logprob: -12.329330444335938
    10. '_matrix' → logprob: -12.454330444335938

Token 167: 'ice' (ID: 603)
  Prédit: 'ice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ice' → logprob: -0.0004610551695805043
    2. 'ix' → logprob: -8.375460624694824
    3. 'rice' → logprob: -9.000460624694824
    4. 'ic' → logprob: -10.125460624694824
    5. '   ' → logprob: -11.500460624694824
    6. ')' → logprob: -11.750460624694824
    7. '[]' → logprob: -12.000460624694824
    8. 'ixe' → logprob: -12.125460624694824
    9. 'rix' → logprob: -12.375460624694824
    10. '[' → logprob: -12.500460624694824

Token 168: '
' (ID: 198)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.3477470874786377
    2. '
' → logprob: -1.8477470874786377
    3. '   ' → logprob: -2.3477470874786377
    4. ' distances' → logprob: -4.347746849060059
    5. 'distance' → logprob: -4.472746849060059
    6. '    
' → logprob: -4.597746849060059
    7. '	dist' → logprob: -6.472746849060059
    8. 'Distances' → logprob: -6.972746849060059
    9. '  
' → logprob: -7.097746849060059
    10. '   
' → logprob: -7.222746849060059

Token 169: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9685269594192505
    2. 'dist' → logprob: -0.9685269594192505
    3. '   ' → logprob: -1.5935269594192505
    4. '    
' → logprob: -4.093526840209961
    5. 'distance' → logprob: -4.718526840209961
    6. ' distances' → logprob: -4.968526840209961
    7. '	dist' → logprob: -6.843526840209961
    8. 'n' → logprob: -7.093526840209961
    9. 'd' → logprob: -7.718526840209961
    10. '
' → logprob: -7.843526840209961

Token 170: ' used' (ID: 2061)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.02732345461845398
    2. ' dist' → logprob: -4.652323246002197
    3. ' distances' → logprob: -5.152323246002197
    4. 'distance' → logprob: -5.152323246002197
    5. '   ' → logprob: -5.277323246002197
    6. '    
' → logprob: -7.652323246002197
    7. '
' → logprob: -9.777323722839355
    8. '	dist' → logprob: -9.777323722839355
    9. ' distance' → logprob: -9.902323722839355
    10. 'd' → logprob: -10.652323722839355

Token 171: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02055368572473526
    2. '=' → logprob: -3.8955535888671875
    3. ' ' → logprob: -12.145553588867188
    4. ')' → logprob: -13.520553588867188
    5. '[' → logprob: -13.770553588867188
    6. ']' → logprob: -13.895553588867188
    7. ',' → logprob: -14.020553588867188
    8. '[]' → logprob: -14.145553588867188
    9. ' =[' → logprob: -14.645553588867188
    10. '=[' → logprob: -15.395553588867188

Token 172: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.3133416175842285
    2. '[' → logprob: -1.3133416175842285
    3. '[n' → logprob: -9.56334114074707
    4. ' ' → logprob: -13.06334114074707
    5. '[int' → logprob: -14.18834114074707
    6. '   ' → logprob: -14.43834114074707
    7. '[class' → logprob: -14.56334114074707
    8. '[node' → logprob: -14.93834114074707
    9. '[m' → logprob: -14.93834114074707
    10. '[name' → logprob: -14.93834114074707

Token 173: 'False' (ID: 8168)
  Prédit: 'False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0004309076175559312
    2. ' False' → logprob: -7.750431060791016
    3. '0' → logprob: -15.750431060791016
    4. '(False' → logprob: -16.750431060791016
    5. 'True' → logprob: -17.625431060791016
    6. ']' → logprob: -18.375431060791016
    7. 'F' → logprob: -19.125431060791016
    8. '=False' → logprob: -20.375431060791016
    9. ')' → logprob: -20.875431060791016
    10. '.False' → logprob: -21.000431060791016

Token 174: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0007743701571598649
    2. ' ]' → logprob: -7.500774383544922
    3. ']*' → logprob: -8.500774383544922
    4. ' for' → logprob: -11.000774383544922
    5. 'for' → logprob: -14.625774383544922
    6. ' ' → logprob: -14.875774383544922
    7. ')' → logprob: -15.250774383544922
    8. ',' → logprob: -15.750774383544922
    9. ']*(' → logprob: -16.125774383544922
    10. '   ' → logprob: -17.250774383544922

Token 175: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4951448440551758
    2. '[' → logprob: -1.8701448440551758
    3. '(n' → logprob: -2.995144844055176
    4. '(' → logprob: -3.370144844055176
    5. ' for' → logprob: -3.495144844055176
    6. ')' → logprob: -3.620144844055176
    7. ' ' → logprob: -3.995144844055176
    8. ' *' → logprob: -3.995144844055176
    9. ' ]' → logprob: -3.995144844055176
    10. '*' → logprob: -4.370144844055176

Token 176: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.386875182390213
    2. ' n' → logprob: -1.1368751525878906
    3. '	n' → logprob: -13.38687515258789
    4. '(n' → logprob: -13.51187515258789
    5. ' ' → logprob: -14.76187515258789
    6. ')n' → logprob: -15.63687515258789
    7. '   ' → logprob: -15.76187515258789
    8. '
' → logprob: -16.01187515258789
    9. '  ' → logprob: -16.13687515258789
    10. ' (' → logprob: -16.26187515258789

Token 177: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.017287401482462883
    2. 'dist' → logprob: -5.142287254333496
    3. 'distance' → logprob: -6.017287254333496
    4. '  
' → logprob: -6.017287254333496
    5. '
' → logprob: -6.142287254333496
    6. '    
' → logprob: -6.517287254333496
    7. ' 
' → logprob: -6.642287254333496
    8. ' distances' → logprob: -7.767287254333496
    9. '   ' → logprob: -8.142287254333496
    10. '   
' → logprob: -8.267287254333496

Token 178: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.22080330550670624
    2. 'dist' → logprob: -2.3458032608032227
    3. 'distance' → logprob: -2.8458032608032227
    4. '   ' → logprob: -4.595803260803223
    5. ' distances' → logprob: -4.595803260803223
    6. '    
' → logprob: -4.720803260803223
    7. '  
' → logprob: -4.845803260803223
    8. '   
' → logprob: -5.845803260803223
    9. ' ' → logprob: -6.845803260803223
    10. '  ' → logprob: -7.345803260803223

Token 179: ' Tableau' (ID: 180833)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.09571409970521927
    2. ' dist' → logprob: -2.4707140922546387
    3. 'distance' → logprob: -5.095714092254639
    4. ' distances' → logprob: -8.095714569091797
    5. ' distance' → logprob: -8.220714569091797
    6. 'd' → logprob: -10.845714569091797
    7. '   ' → logprob: -11.845714569091797
    8. 'dis' → logprob: -11.845714569091797
    9. 'import' → logprob: -12.470714569091797
    10. '	dist' → logprob: -12.720714569091797

Token 180: ' pour' (ID: 1930)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.8936814069747925
    2. '[' → logprob: -1.3936814069747925
    3. ' de' → logprob: -1.6436814069747925
    4. ' d' → logprob: -3.143681526184082
    5. '<|end|>' → logprob: -3.768681526184082
    6. 'd' → logprob: -3.893681526184082
    7. 'des' → logprob: -4.018681526184082
    8. ' of' → logprob: -4.018681526184082
    9. 'de' → logprob: -5.018681526184082
    10. 's' → logprob: -5.143681526184082

Token 181: ' garder' (ID: 63069)
  Prédit: ' mar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' mar' → logprob: -0.2582284212112427
    2. 'dist' → logprob: -2.008228302001953
    3. ' distances' → logprob: -3.258228302001953
    4. 'mar' → logprob: -4.633228302001953
    5. ' mark' → logprob: -5.008228302001953
    6. 'distance' → logprob: -5.258228302001953
    7. ' suivre' → logprob: -5.633228302001953
    8. 'les' → logprob: -5.883228302001953
    9. ' stock' → logprob: -6.008228302001953
    10. ' les' → logprob: -6.008228302001953

Token 182: ' en' (ID: 469)
  Prédit: ' track'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' track' → logprob: -0.7453117370605469
    2. 'track' → logprob: -1.3703117370605469
    3. '```' → logprob: -2.745311737060547
    4. '<|end|>' → logprob: -2.870311737060547
    5. ' ' → logprob: -3.995311737060547
    6. 'trace' → logprob: -4.120311737060547
    7. ' ' → logprob: -4.245311737060547
    8. ' une' → logprob: -4.245311737060547
    9. ' la' → logprob: -4.370311737060547
    10. 'tr' → logprob: -4.620311737060547

Token 183: ' mémoire' (ID: 79071)
  Prédit: 'place'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'place' → logprob: -0.5218586325645447
    2. 'jour' → logprob: -2.2718586921691895
    3. '```' → logprob: -2.3968586921691895
    4. 'é' → logprob: -2.7718586921691895
    5. 'veille' → logprob: -3.6468586921691895
    6. ' ' → logprob: -4.0218586921691895
    7. 'mé' → logprob: -4.7718586921691895
    8. 'journ' → logprob: -4.8968586921691895
    9. 'liste' → logprob: -5.2718586921691895
    10. 'éc' → logprob: -5.3968586921691895

Token 184: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.48440003395080566
    2. ' la' → logprob: -2.2344000339508057
    3. ' distances' → logprob: -2.7344000339508057
    4. ' ' → logprob: -2.8594000339508057
    5. '<|end|>' → logprob: -2.9844000339508057
    6. 's' → logprob: -3.3594000339508057
    7. '  ' → logprob: -4.359399795532227
    8. ' des' → logprob: -4.484399795532227
    9. 'les' → logprob: -4.859399795532227
    10. 'dist' → logprob: -5.234399795532227

Token 185: ' somm' (ID: 44830)
  Prédit: ' distances'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' distances' → logprob: -0.0506790429353714
    2. 'dist' → logprob: -3.0506789684295654
    3. 'distance' → logprob: -6.5506792068481445
    4. ' dist' → logprob: -7.8006792068481445
    5. 'Distances' → logprob: -9.550679206848145
    6. ' distance' → logprob: -9.925679206848145
    7. ' ' → logprob: -10.550679206848145
    8. ' espaces' → logprob: -11.050679206848145
    9. 'd' → logprob: -11.300679206848145
    10. 's' → logprob: -11.675679206848145

Token 186: 'ets' (ID: 1719)
  Prédit: 'ets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ets' → logprob: -0.0008588159107603133
    2. 'et' → logprob: -7.750858783721924
    3. 'êts' → logprob: -8.125859260559082
    4. 'és' → logprob: -9.625859260559082
    5. 'pts' → logprob: -11.375859260559082
    6. 'ts' → logprob: -11.625859260559082
    7. 'ètres' → logprob: -12.125859260559082
    8. 'ет' → logprob: -12.375859260559082
    9. 'ots' → logprob: -12.375859260559082
    10. 'êt' → logprob: -12.375859260559082

Token 187: ' déjà' (ID: 21229)
  Prédit: ' visit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' visit' → logprob: -1.0244426727294922
    2. ' non' → logprob: -1.6494426727294922
    3. ' à' → logprob: -1.7744426727294922
    4. 'visit' → logprob: -3.274442672729492
    5. '   ' → logprob: -3.399442672729492
    6. ',' → logprob: -3.524442672729492
    7. 'non' → logprob: -3.774442672729492
    8. 'vis' → logprob: -4.024442672729492
    9. 'visited' → logprob: -4.274442672729492
    10. '_visit' → logprob: -4.274442672729492

Token 188: ' trait' (ID: 15458)
  Prédit: 'vis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vis' → logprob: -0.3944454491138458
    2. 'trait' → logprob: -1.5194454193115234
    3. 'visit' → logprob: -3.1444454193115234
    4. 'visited' → logprob: -3.2694454193115234
    5. 'util' → logprob: -4.769445419311523
    6. ' trait' → logprob: -5.144445419311523
    7. ' visit' → logprob: -5.769445419311523
    8. ' visited' → logprob: -6.269445419311523
    9. 'processed' → logprob: -7.019445419311523
    10. 'u' → logprob: -7.019445419311523

Token 189: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.001268685911782086
    2. 'é' → logprob: -6.7512688636779785
    3. 'es' → logprob: -10.25126838684082
    4. 'ès' → logprob: -10.25126838684082
    5. '[' → logprob: -11.37626838684082
    6. ']' → logprob: -11.87626838684082
    7. 's' → logprob: -12.62626838684082
    8. 'rés' → logprob: -13.12626838684082
    9. 'ÉS' → logprob: -13.37626838684082
    10. '[]' → logprob: -14.25126838684082

Token 190: ' par' (ID: 686)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.635320782661438
    2. 'dist' → logprob: -1.135320782661438
    3. '   ' → logprob: -2.5103206634521484
    4. 'distance' → logprob: -3.5103206634521484
    5. ' distances' → logprob: -4.260320663452148
    6. '    
' → logprob: -4.385320663452148
    7. '  
' → logprob: -5.385320663452148
    8. 'd' → logprob: -6.635320663452148
    9. '
' → logprob: -6.760320663452148
    10. '   
' → logprob: -7.135320663452148

Token 191: ' D' (ID: 415)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.9922571182250977
    2. ' la' → logprob: -2.1172571182250977
    3. '[' → logprob: -2.7422571182250977
    4. '1' → logprob: -2.7422571182250977
    5. ' d' → logprob: -2.8672571182250977
    6. ' l' → logprob: -2.9922571182250977
    7. 'n' → logprob: -2.9922571182250977
    8. ' n' → logprob: -3.2422571182250977
    9. ' True' → logprob: -3.2422571182250977
    10. ' range' → logprob: -3.2422571182250977

Token 192: 'ijkstra' (ID: 124290)
  Prédit: 'ijkstra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijkstra' → logprob: -0.0003024537581950426
    2. 'ijk' → logprob: -8.6253023147583
    3. 'ij' → logprob: -9.8753023147583
    4. '[i' → logprob: -10.5003023147583
    5. '   ' → logprob: -11.1253023147583
    6. 'i' → logprob: -11.8753023147583
    7. ']' → logprob: -12.1253023147583
    8. '```' → logprob: -12.7503023147583
    9. 'j' → logprob: -13.0003023147583
    10. ')' → logprob: -13.1253023147583

Token 193: '

' (ID: 279)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.23953039944171906
    2. '
' → logprob: -2.239530324935913
    3. '   ' → logprob: -2.614530324935913
    4. ' distances' → logprob: -4.489530563354492
    5. 'distance' → logprob: -4.489530563354492
    6. '    
' → logprob: -5.489530563354492
    7. '  
' → logprob: -5.864530563354492
    8. ' ' → logprob: -7.239530563354492
    9. '   
' → logprob: -7.364530563354492
    10. ',' → logprob: -7.614530563354492

Token 194: '   ' (ID: 271)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.13015201687812805
    2. '   ' → logprob: -2.5051519870758057
    3. 'distance' → logprob: -3.6301519870758057
    4. ' dist' → logprob: -5.130152225494385
    5. ' distances' → logprob: -5.130152225494385
    6. '    
' → logprob: -7.630152225494385
    7. 'd' → logprob: -8.005151748657227
    8. ' distance' → logprob: -8.255151748657227
    9. ',' → logprob: -8.380151748657227
    10. '	dist' → logprob: -8.630151748657227

Token 195: ' #' (ID: 1069)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0112290158867836
    2. 'distance' → logprob: -5.261229038238525
    3. '   ' → logprob: -5.511229038238525
    4. ' dist' → logprob: -6.636229038238525
    5. 'd' → logprob: -7.636229038238525
    6. ' distances' → logprob: -10.636228561401367
    7. 'dis' → logprob: -10.761228561401367
    8. '    
' → logprob: -10.886228561401367
    9. ' distance' → logprob: -11.636228561401367
    10. 'cost' → logprob: -11.636228561401367

Token 196: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.01065725926309824
    2. 'distance' → logprob: -4.88565731048584
    3. 'd' → logprob: -6.38565731048584
    4. ' dist' → logprob: -7.01065731048584
    5. '   ' → logprob: -8.26065731048584
    6. 'cost' → logprob: -10.01065731048584
    7. 'dis' → logprob: -10.13565731048584
    8. 'res' → logprob: -11.13565731048584
    9. 'dp' → logprob: -11.38565731048584
    10. '#' → logprob: -11.51065731048584

Token 197: '[v' (ID: 36561)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04792693629860878
    2. '=' → logprob: -3.297926902770996
    3. 'ances' → logprob: -4.672926902770996
    4. 'ance' → logprob: -8.422926902770996
    5. '   ' → logprob: -8.797926902770996
    6. ' ' → logprob: -9.422926902770996
    7. '[' → logprob: -11.922926902770996
    8. 'a' → logprob: -12.047926902770996
    9. '  ' → logprob: -12.047926902770996
    10. 'ANCES' → logprob: -12.797926902770996

Token 198: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00035333906998857856
    2. ' ]' → logprob: -8.375353813171387
    3. ']=' → logprob: -10.125353813171387
    4. ' =' → logprob: -10.250353813171387
    5. 's' → logprob: -10.750353813171387
    6. 'es' → logprob: -11.625353813171387
    7. '=' → logprob: -12.500353813171387
    8. 'e' → logprob: -12.500353813171387
    9. '[]' → logprob: -13.125353813171387
    10. 'dist' → logprob: -14.000353813171387

Token 199: ' représente' (ID: 88912)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12694448232650757
    2. '=' → logprob: -2.1269445419311523
    3. ' =[' → logprob: -12.251944541931152
    4. '=[' → logprob: -12.376944541931152
    5. ' ' → logprob: -12.876944541931152
    6. ',' → logprob: -13.876944541931152
    7. '[' → logprob: -14.251944541931152
    8. '  ' → logprob: -14.501944541931152
    9. '=[]' → logprob: -14.501944541931152
    10. ':' → logprob: -14.876944541931152

Token 200: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.01489322166889906
    2. 'la' → logprob: -4.764893054962158
    3. ' l' → logprob: -6.014893054962158
    4. ' ' → logprob: -6.889893054962158
    5. ' les' → logprob: -7.014893054962158
    6. ' ' → logprob: -7.764893054962158
    7. '   ' → logprob: -8.264893531799316
    8. 'l' → logprob: -8.764893531799316
    9. 'distance' → logprob: -8.764893531799316
    10. 'les' → logprob: -8.889893531799316

Token 201: ' "' (ID: 392)
  Prédit: ' distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' distance' → logprob: -0.20401981472969055
    2. 'distance' → logprob: -1.7040197849273682
    3. ' plus' → logprob: -6.204020023345947
    4. 'dist' → logprob: -8.454019546508789
    5. 'plus' → logprob: -9.329019546508789
    6. ' dist' → logprob: -9.579019546508789
    7. '_distance' → logprob: -9.829019546508789
    8. ' ' → logprob: -9.954019546508789
    9. '   ' → logprob: -10.454019546508789
    10. ' distances' → logprob: -10.704019546508789

Token 202: 'distance' (ID: 40614)
  Prédit: ' distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' distance' → logprob: -0.5262898206710815
    2. 'distance' → logprob: -1.0262898206710815
    3. ' plus' → logprob: -3.151289939880371
    4. 'dist' → logprob: -5.776289939880371
    5. 'plus' → logprob: -6.276289939880371
    6. ' dist' → logprob: -6.651289939880371
    7. ' ' → logprob: -7.276289939880371
    8. 'd' → logprob: -8.526289939880371
    9. ' meilleure' → logprob: -8.901289939880371
    10. '_distance' → logprob: -8.901289939880371

Token 203: ' composite' (ID: 40773)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.4932623505592346
    2. '_' → logprob: -1.6182622909545898
    3. ' ' → logprob: -2.24326229095459
    4. 's' → logprob: -3.99326229095459
    5. '   ' → logprob: -4.86826229095459
    6. ' minimale' → logprob: -4.99326229095459
    7. '_v' → logprob: -5.11826229095459
    8. '_des' → logprob: -5.24326229095459
    9. '_min' → logprob: -5.49326229095459
    10. '[]' → logprob: -5.61826229095459

Token 204: '"' (ID: 1)
  Prédit: ' minimale'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' minimale' → logprob: -0.04060172662138939
    2. ' minimal' → logprob: -4.41560173034668
    3. ' ' → logprob: -5.16560173034668
    4. ' au' → logprob: -5.54060173034668
    5. ' maximale' → logprob: -5.79060173034668
    6. ' minimum' → logprob: -5.91560173034668
    7. '"' → logprob: -6.16560173034668
    8. '_min' → logprob: -6.29060173034668
    9. ' la' → logprob: -6.54060173034668
    10. ' à' → logprob: -6.79060173034668

Token 205: ' pour' (ID: 1930)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.13111117482185364
    2. '[v' → logprob: -3.2561111450195312
    3. '=' → logprob: -3.3811111450195312
    4. ' ' → logprob: -4.006111145019531
    5. '   ' → logprob: -4.631111145019531
    6. 's' → logprob: -4.881111145019531
    7. '[' → logprob: -5.631111145019531
    8. ',' → logprob: -5.881111145019531
    9. '[]' → logprob: -6.631111145019531
    10. ' entre' → logprob: -6.756111145019531

Token 206: ' atteindre' (ID: 95734)
  Prédit: ' v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.13980922102928162
    2. 'v' → logprob: -3.1398091316223145
    3. ' chaque' → logprob: -3.6398091316223145
    4. ' le' → logprob: -3.7648091316223145
    5. '[v' → logprob: -3.8898091316223145
    6. ' ' → logprob: -4.6398091316223145
    7. 'le' → logprob: -6.6398091316223145
    8. ' each' → logprob: -6.6398091316223145
    9. '   ' → logprob: -7.2648091316223145
    10. ' la' → logprob: -7.7648091316223145

Token 207: ' chaque' (ID: 21194)
  Prédit: ' v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.12694427371025085
    2. ' start' → logprob: -2.6269443035125732
    3. ' le' → logprob: -3.6269443035125732
    4. 'v' → logprob: -4.751944065093994
    5. 'start' → logprob: -5.001944065093994
    6. ' ' → logprob: -6.501944065093994
    7. '[v' → logprob: -6.626944065093994
    8. '[start' → logprob: -7.251944065093994
    9. 'le' → logprob: -7.626944065093994
    10. ' vertex' → logprob: -8.376944541931152

Token 208: ' sommet' (ID: 130502)
  Prédit: ' sommet'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sommet' → logprob: -0.9633973240852356
    2. ' v' → logprob: -1.0883972644805908
    3. '[v' → logprob: -1.4633972644805908
    4. '_v' → logprob: -4.46339750289917
    5. 'v' → logprob: -4.58839750289917
    6. '(v' → logprob: -4.71339750289917
    7. 's' → logprob: -5.08839750289917
    8. '_s' → logprob: -5.83839750289917
    9. ' ' → logprob: -6.21339750289917
    10. '_' → logprob: -6.21339750289917

Token 209: ' v' (ID: 323)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.646638035774231
    2. ' =' → logprob: -1.271638035774231
    3. 's' → logprob: -3.0216379165649414
    4. '   ' → logprob: -3.6466379165649414
    5. ',' → logprob: -3.6466379165649414
    6. ' ' → logprob: -4.021637916564941
    7. '[' → logprob: -4.271637916564941
    8. '(v' → logprob: -4.271637916564941
    9. '=' → logprob: -4.271637916564941
    10. '[]' → logprob: -4.396637916564941

Token 210: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03292342275381088
    2. ' ' → logprob: -3.907923460006714
    3. '=' → logprob: -5.157923221588135
    4. '  ' → logprob: -6.157923221588135
    5. ',' → logprob: -6.657923221588135
    6. '   ' → logprob: -7.407923221588135
    7. 'dist' → logprob: -7.532923221588135
    8. '[:]' → logprob: -7.907923221588135
    9. '[]' → logprob: -8.157923698425293
    10. '[' → logprob: -8.282923698425293

Token 211: '   ' (ID: 271)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005009478889405727
    2. ' ' → logprob: -6.255009651184082
    3. ',' → logprob: -6.505009651184082
    4. '=' → logprob: -7.130009651184082
    5. ' ,' → logprob: -9.005009651184082
    6. '  ' → logprob: -9.130009651184082
    7. 'dist' → logprob: -9.255009651184082
    8. '[]' → logprob: -9.755009651184082
    9. ':' → logprob: -9.755009651184082
    10. 's' → logprob: -10.005009651184082

Token 212: ' #' (ID: 1069)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.017564918845891953
    2. 'dist' → logprob: -4.26756477355957
    3. '=' → logprob: -6.39256477355957
    4. ' ' → logprob: -7.51756477355957
    5. '_dist' → logprob: -7.89256477355957
    6. ' dist' → logprob: -8.39256477355957
    7. ',' → logprob: -8.76756477355957
    8. ':' → logprob: -9.26756477355957
    9. 's' → logprob: -9.89256477355957
    10. ' :' → logprob: -10.01756477355957

Token 213: ' Ici' (ID: 145754)
  Prédit: ' dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.6374971270561218
    2. 'dist' → logprob: -0.7624971270561218
    3. '   ' → logprob: -6.1374969482421875
    4. ' distances' → logprob: -6.5124969482421875
    5. ' ' → logprob: -8.137496948242188
    6. 'distance' → logprob: -8.137496948242188
    7. '	dist' → logprob: -8.387496948242188
    8. '_dist' → logprob: -9.137496948242188
    9. ' distance' → logprob: -9.387496948242188
    10. '"' → logprob: -10.762496948242188

Token 214: ' la' (ID: 557)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9322836399078369
    2. 'dist' → logprob: -1.182283639907837
    3. ' dist' → logprob: -2.307283639907837
    4. ' =' → logprob: -2.682283639907837
    5. ' ,' → logprob: -2.807283639907837
    6. '   ' → logprob: -3.557283639907837
    7. ' ' → logprob: -4.932283401489258
    8. '[]' → logprob: -4.932283401489258
    9. '_dist' → logprob: -5.182283401489258
    10. '[' → logprob: -5.307283401489258

Token 215: ' "' (ID: 392)
  Prédit: ' dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.900766134262085
    2. 'dist' → logprob: -1.650766134262085
    3. ' ' → logprob: -1.900766134262085
    4. '_dist' → logprob: -3.150766134262085
    5. '_' → logprob: -3.400766134262085
    6. ' distance' → logprob: -3.525766134262085
    7. 'distance' → logprob: -3.650766134262085
    8. ' =' → logprob: -3.650766134262085
    9. ' distances' → logprob: -4.025766372680664
    10. ' _' → logprob: -4.400766372680664

Token 216: 'distance' (ID: 40614)
  Prédit: ' "'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' "' → logprob: -0.947262167930603
    2. 'distance' → logprob: -1.322262167930603
    3. 'dist' → logprob: -1.947262167930603
    4. ' ' → logprob: -2.8222622871398926
    5. ' distance' → logprob: -3.1972622871398926
    6. 'd' → logprob: -3.9472622871398926
    7. 'max' → logprob: -4.572262287139893
    8. ' dist' → logprob: -4.697262287139893
    9. ' composite' → logprob: -4.822262287139893
    10. '"' → logprob: -4.822262287139893

Token 217: '"' (ID: 1)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9852165579795837
    2. '_com' → logprob: -1.7352166175842285
    3. 's' → logprob: -1.9852166175842285
    4. ' composite' → logprob: -2.4852166175842285
    5. '[v' → logprob: -2.7352166175842285
    6. '_comp' → logprob: -2.9852166175842285
    7. '[' → logprob: -3.8602166175842285
    8. '_' → logprob: -4.1102166175842285
    9. 'com' → logprob: -4.3602166175842285
    10. ' ' → logprob: -4.7352166175842285

Token 218: ' encode' (ID: 31288)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6319456696510315
    2. ' =' → logprob: -0.8819456696510315
    3. ' est' → logprob: -4.881945610046387
    4. '_com' → logprob: -5.006945610046387
    5. '[]' → logprob: -5.256945610046387
    6. '[' → logprob: -5.256945610046387
    7. ' ' → logprob: -5.381945610046387
    8. '_' → logprob: -5.631945610046387
    9. ' composite' → logprob: -5.756945610046387
    10. '=' → logprob: -6.006945610046387

Token 219: ' deux' (ID: 10301)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.2796192169189453
    2. ' les' → logprob: -1.6546192169189453
    3. ' à' → logprob: -1.7796192169189453
    4. ' un' → logprob: -2.5296192169189453
    5. ' une' → logprob: -2.9046192169189453
    6. ' l' → logprob: -3.4046192169189453
    7. ' le' → logprob: -3.4046192169189453
    8. ' ' → logprob: -3.9046192169189453
    9. ' non' → logprob: -3.9046192169189453
    10. ' toutes' → logprob: -4.279619216918945

Token 220: ' choses' (ID: 36936)
  Prédit: ' valeurs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' valeurs' → logprob: -1.298077940940857
    2. ' informations' → logprob: -1.548077940940857
    3. ' éléments' → logprob: -1.673077940940857
    4. ' critères' → logprob: -2.7980780601501465
    5. ' compos' → logprob: -2.9230780601501465
    6. ' aspects' → logprob: -3.1730780601501465
    7. ' ' → logprob: -3.7980780601501465
    8. 'élé' → logprob: -3.9230780601501465
    9. ' coûts' → logprob: -3.9230780601501465
    10. '_' → logprob: -4.4230780601501465

Token 221: ' à' (ID: 1221)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5364884734153748
    2. ' :' → logprob: -1.1614885330200195
    3. ',' → logprob: -2.7864885330200195
    4. '   ' → logprob: -4.6614885330200195
    5. ' ' → logprob: -4.7864885330200195
    6. ' (' → logprob: -4.9114885330200195
    7. '  ' → logprob: -5.4114885330200195
    8. '<|end|>' → logprob: -5.7864885330200195
    9. ' =' → logprob: -5.9114885330200195
    10. ' ,' → logprob: -7.1614885330200195

Token 222: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.5607211589813232
    2. ' la' → logprob: -0.9357211589813232
    3. ' comparer' → logprob: -5.060721397399902
    4. ' ' → logprob: -5.185721397399902
    5. 'tr' → logprob: -5.560721397399902
    6. 'min' → logprob: -5.810721397399902
    7. 'distance' → logprob: -5.935721397399902
    8. 'tuple' → logprob: -6.560721397399902
    9. 'part' → logprob: -6.685721397399902
    10. 'l' → logprob: -6.685721397399902

Token 223: ' fois' (ID: 14697)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.6222802400588989
    2. 'tuple' → logprob: -1.997280240058899
    3. 'fois' → logprob: -2.7472801208496094
    4. ' fois' → logprob: -3.2472801208496094
    5. 'part' → logprob: -3.4972801208496094
    6. 'com' → logprob: -3.4972801208496094
    7. ' la' → logprob: -3.7472801208496094
    8. 'distance' → logprob: -4.622280120849609
    9. 'contin' → logprob: -4.747280120849609
    10. 'val' → logprob: -5.122280120849609

Token 224: ' :
' (ID: 10039)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.44118714332580566
    2. ':' → logprob: -1.0661871433258057
    3. ',' → logprob: -4.816186904907227
    4. ' (' → logprob: -6.441186904907227
    5. ' ' → logprob: -6.941186904907227
    6. ' ' → logprob: -7.566186904907227
    7. '   ' → logprob: -7.816186904907227
    8. '<|end|>' → logprob: -8.816186904907227
    9. '[' → logprob: -9.066186904907227
    10. 'dist' → logprob: -9.191186904907227

Token 225: '   ' (ID: 271)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8482418656349182
    2. '   ' → logprob: -1.3482418060302734
    3. ' (' → logprob: -2.3482418060302734
    4. ' ' → logprob: -2.7232418060302734
    5. ' [' → logprob: -3.0982418060302734
    6. 'dist' → logprob: -3.8482418060302734
    7. '[v' → logprob: -3.9732418060302734
    8. '  ' → logprob: -4.848241806030273
    9. ' distances' → logprob: -4.848241806030273
    10. ')' → logprob: -5.098241806030273

Token 226: ' #' (ID: 1069)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3762331008911133
    2. ' (' → logprob: -1.3762331008911133
    3. ' [' → logprob: -3.2512331008911133
    4. '(' → logprob: -4.376233100891113
    5. ' ' → logprob: -5.501233100891113
    6. '0' → logprob: -6.251233100891113
    7. '   ' → logprob: -6.376233100891113
    8. ' (
' → logprob: -8.251233100891113
    9. '  ' → logprob: -8.501233100891113
    10. '"' → logprob: -8.751233100891113

Token 227: '  ' (ID: 256)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.3793991804122925
    2. '[' → logprob: -2.379399299621582
    3. ' [' → logprob: -2.879399299621582
    4. '(' → logprob: -3.004399299621582
    5. '   ' → logprob: -3.129399299621582
    6. ' dist' → logprob: -4.004399299621582
    7. 'dist' → logprob: -4.129399299621582
    8. ' distances' → logprob: -4.254399299621582
    9. ' ' → logprob: -4.629399299621582
    10. '0' → logprob: -5.754399299621582

Token 228: ' -' (ID: 533)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -1.427863359451294
    2. '(' → logprob: -2.177863359451294
    3. ' (' → logprob: -2.302863359451294
    4. '   ' → logprob: -2.677863359451294
    5. '0' → logprob: -2.677863359451294
    6. '(dist' → logprob: -2.802863359451294
    7. '(matrix' → logprob: -3.052863359451294
    8. 'matrix' → logprob: -3.177863359451294
    9. 'distance' → logprob: -3.552863359451294
    10. '(sum' → logprob: -3.552863359451294

Token 229: ' le' (ID: 505)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.166832447052002
    2. ' le' → logprob: -1.541832447052002
    3. ' (' → logprob: -1.916832447052002
    4. '(' → logprob: -3.041832447052002
    5. '0' → logprob: -3.166832447052002
    6. 'le' → logprob: -3.666832447052002
    7. ' ' → logprob: -3.916832447052002
    8. 'distance' → logprob: -4.041832447052002
    9. 'la' → logprob: -4.041832447052002
    10. ' l' → logprob: -4.291832447052002

Token 230: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -1.4869112968444824
    2. 'co' → logprob: -1.7369112968444824
    3. ' coût' → logprob: -1.8619112968444824
    4. ' tuple' → logprob: -2.8619112968444824
    5. ' poids' → logprob: -3.1119112968444824
    6. 'nombre' → logprob: -3.2369112968444824
    7. ' premier' → logprob: -3.4869112968444824
    8. 'plus' → logprob: -3.4869112968444824
    9. ' plus' → logprob: -3.9869112968444824
    10. ' cout' → logprob: -3.9869112968444824

Token 231: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.064298391342163
    2. ' d' → logprob: -1.314298391342163
    3. 'd' → logprob: -2.189298391342163
    4. '_d' → logprob: -3.064298391342163
    5. 'de' → logprob: -3.064298391342163
    6. '_de' → logprob: -3.064298391342163
    7. '   ' → logprob: -3.314298391342163
    8. ' ' → logprob: -3.439298391342163
    9. ' des' → logprob: -3.939298391342163
    10. '  ' → logprob: -4.689298629760742

Token 232: ' rav' (ID: 26005)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.7126476168632507
    2. ' ar' → logprob: -1.8376476764678955
    3. 's' → logprob: -2.3376476764678955
    4. ' ' → logprob: -2.5876476764678955
    5. '0' → logprob: -4.150147438049316
    6. ' chemins' → logprob: -4.525147438049316
    7. 'are' → logprob: -4.587647438049316
    8. 'a' → logprob: -4.712647438049316
    9. ' arr' → logprob: -4.837647438049316
    10. ' s' → logprob: -4.900147438049316

Token 233: 'it' (ID: 278)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.1543489694595337
    2. 'el' → logprob: -1.2793489694595337
    3. 'els' → logprob: -1.7793489694595337
    4. 'es' → logprob: -3.029348850250244
    5. 'is' → logprob: -3.279348850250244
    6. 'er' → logprob: -3.529348850250244
    7. ' el' → logprob: -3.654348850250244
    8. 'ers' → logprob: -4.154348850250244
    9. 'et' → logprob: -4.654348850250244
    10. 'aises' → logprob: -4.779348850250244

Token 234: 'ail' (ID: 663)
  Prédit: 'ail'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ail' → logprob: -0.5389630794525146
    2. 'it' → logprob: -1.9139630794525146
    3. 'e' → logprob: -2.2889630794525146
    4. 'el' → logprob: -3.4139630794525146
    5. 'eil' → logprob: -3.5389630794525146
    6. 'o' → logprob: -3.9139630794525146
    7. 'a' → logprob: -4.038963317871094
    8. 'ements' → logprob: -4.163963317871094
    9. 'ais' → logprob: -5.413963317871094
    10. '```' → logprob: -5.413963317871094

Token 235: 'lements' (ID: 11031)
  Prédit: 'lements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lements' → logprob: -0.005421462003141642
    2. 'lement' → logprob: -5.7554216384887695
    3. 'l' → logprob: -6.8804216384887695
    4. 'ements' → logprob: -7.3804216384887695
    5. 'le' → logprob: -8.25542163848877
    6. 'nements' → logprob: -8.75542163848877
    7. 'lem' → logprob: -10.75542163848877
    8. 'lations' → logprob: -11.13042163848877
    9. 'LEMENT' → logprob: -11.25542163848877
    10. 'ments' → logprob: -11.38042163848877

Token 236: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16832877695560455
    2. ' ,' → logprob: -2.2933287620544434
    3. ' (' → logprob: -3.9183287620544434
    4. ',
' → logprob: -4.168328762054443
    5. '<|end|>' → logprob: -5.168328762054443
    6. '[' → logprob: -5.918328762054443
    7. '<|end|>' → logprob: -6.543328762054443
    8. '   ' → logprob: -6.668328762054443
    9. ' ' → logprob: -6.668328762054443
    10. 's' → logprob: -7.043328762054443

Token 237: ' pond' (ID: 42367)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14416147768497467
    2. '0' → logprob: -3.3941614627838135
    3. ' ' → logprob: -3.3941614627838135
    4. '#' → logprob: -3.8941614627838135
    5. '  ' → logprob: -4.144161701202393
    6. '     ' → logprob: -4.644161701202393
    7. ',' → logprob: -5.894161701202393
    8. '    ' → logprob: -6.019161701202393
    9. '
' → logprob: -6.394161701202393
    10. 'dist' → logprob: -6.394161701202393

Token 238: 'éré' (ID: 33338)
  Prédit: 'éré'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'éré' → logprob: -0.10323571413755417
    2. 'é' → logprob: -2.7282357215881348
    3. 'érés' → logprob: -4.728235721588135
    4. '   ' → logprob: -5.478235721588135
    5. '=' → logprob: -5.603235721588135
    6. 'ér' → logprob: -5.728235721588135
    7. 'ération' → logprob: -5.978235721588135
    8. 'er' → logprob: -6.478235721588135
    9. 'érations' → logprob: -6.478235721588135
    10. '	' → logprob: -6.853235721588135

Token 239: ' fortement' (ID: 111297)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.8779334425926208
    2. ',' → logprob: -1.0029335021972656
    3. ' *' → logprob: -2.8779335021972656
    4. '   ' → logprob: -3.0029335021972656
    5. ' par' → logprob: -3.6279335021972656
    6. ' ' → logprob: -3.7529335021972656
    7. ' ,' → logprob: -4.002933502197266
    8. '=' → logprob: -4.502933502197266
    9. '<<' → logprob: -4.877933502197266
    10. '  ' → logprob: -5.752933502197266

Token 240: ' pour' (ID: 1930)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.48350563645362854
    2. ' *' → logprob: -1.4835056066513062
    3. ',' → logprob: -1.9835056066513062
    4. ' ,' → logprob: -5.108505725860596
    5. '   ' → logprob: -5.233505725860596
    6. ',
' → logprob: -6.233505725860596
    7. '[' → logprob: -7.108505725860596
    8. ' ' → logprob: -7.108505725860596
    9. '+' → logprob: -7.358505725860596
    10. ' +' → logprob: -7.608505725860596

Token 241: ' prior' (ID: 6217)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.14887820184230804
    2. ' ' → logprob: -2.5238780975341797
    3. '10' → logprob: -3.7738780975341797
    4. ' pouvoir' → logprob: -4.27387809753418
    5. '1' → logprob: -5.77387809753418
    6. '0' → logprob: -5.89887809753418
    7. ' (' → logprob: -6.02387809753418
    8. ' éviter' → logprob: -6.02387809753418
    9. ' garantir' → logprob: -6.14887809753418
    10. ' permettre' → logprob: -6.89887809753418

Token 242: 'iser' (ID: 7466)
  Prédit: 'érer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'érer' → logprob: -0.3734157979488373
    2. 'ority' → logprob: -2.74841570854187
    3. 'éré' → logprob: -2.99841570854187
    4. 'or' → logprob: -2.99841570854187
    5. 'ité' → logprob: -3.62341570854187
    6. '   ' → logprob: -3.62341570854187
    7. 'ération' → logprob: -3.99841570854187
    8. 'ér' → logprob: -4.873415946960449
    9. 'er' → logprob: -5.123415946960449
    10. 'érés' → logprob: -5.248415946960449

Token 243: ' les' (ID: 1341)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 244: ' moins' (ID: 15924)
  Prédit: ' espaces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' espaces' → logprob: -0.7808068990707397
    2. ' rav' → logprob: -1.5308068990707397
    3. ' )' → logprob: -3.1558070182800293
    4. ' ' → logprob: -3.1558070182800293
    5. ' passages' → logprob: -3.2808070182800293
    6. 'rav' → logprob: -3.6558070182800293
    7. ' spaces' → logprob: -4.030807018280029
    8. 'esp' → logprob: -4.280807018280029
    9. ' "' → logprob: -4.405807018280029
    10. 'spaces' → logprob: -4.530807018280029

Token 245: ' nombreux' (ID: 33323)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.625666856765747
    2. ' d' → logprob: -1.875666856765747
    3. 'd' → logprob: -2.375666856765747
    4. ' nombreux' → logprob: -2.750666856765747
    5. 'de' → logprob: -3.125666856765747
    6. ' =' → logprob: -3.250666856765747
    7. '_' → logprob: -3.250666856765747
    8. ' ' → logprob: -3.375666856765747
    9. ' de' → logprob: -3.500666856765747
    10. ' _' → logprob: -3.625666856765747

Token 246: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22238491475582123
    2. ',' → logprob: -1.7223849296569824
    3. ' (' → logprob: -5.347384929656982
    4. ')' → logprob: -5.847384929656982
    5. ' ' → logprob: -6.097384929656982
    6. ' ,' → logprob: -6.222384929656982
    7. ',
' → logprob: -6.222384929656982
    8. '  ' → logprob: -6.222384929656982
    9. '<|end|>' → logprob: -6.847384929656982
    10. '(' → logprob: -7.472384929656982

Token 247: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23152095079421997
    2. ',' → logprob: -2.106520891189575
    3. 'dist' → logprob: -3.356520891189575
    4. ',
' → logprob: -4.231521129608154
    5. 'import' → logprob: -5.106521129608154
    6. '(' → logprob: -5.231521129608154
    7. ' (' → logprob: -5.356521129608154
    8. ' ' → logprob: -5.856521129608154
    9. ')' → logprob: -5.981521129608154
    10. '
' → logprob: -6.231521129608154

Token 248: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05093023553490639
    2. ' +' → logprob: -3.8009302616119385
    3. 'import' → logprob: -4.925930023193359
    4. ',' → logprob: -5.050930023193359
    5. ' (' → logprob: -5.675930023193359
    6. '+' → logprob: -6.175930023193359
    7. ')' → logprob: -6.675930023193359
    8. ' ' → logprob: -7.050930023193359
    9. '  ' → logprob: -7.050930023193359
    10. '[' → logprob: -7.175930023193359

Token 249: '  ' (ID: 256)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027853991836309433
    2. ' +' → logprob: -5.152853965759277
    3. ' ' → logprob: -5.527853965759277
    4. '  ' → logprob: -5.652853965759277
    5. ',' → logprob: -5.652853965759277
    6. ' (' → logprob: -6.152853965759277
    7. '+' → logprob: -6.777853965759277
    8. 'import' → logprob: -6.777853965759277
    9. '    ' → logprob: -7.277853965759277
    10. '
' → logprob: -7.402853965759277

Token 250: ' -' (ID: 533)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8535892963409424
    2. '   ' → logprob: -1.3535892963409424
    3. '1' → logprob: -2.3535892963409424
    4. '  ' → logprob: -2.8535892963409424
    5. '#' → logprob: -2.9785892963409424
    6. ' ' → logprob: -3.3535892963409424
    7. ')' → logprob: -3.4785892963409424
    8. '0' → logprob: -4.728589057922363
    9. 'dist' → logprob: -4.728589057922363
    10. '    ' → logprob: -5.728589057922363

Token 251: ' la' (ID: 557)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7793803811073303
    2. ' la' → logprob: -1.9043803215026855
    3. ' le' → logprob: -2.2793803215026855
    4. ' ' → logprob: -3.0293803215026855
    5. 'matrix' → logprob: -3.0293803215026855
    6. 'le' → logprob: -3.6543803215026855
    7. ' matrix' → logprob: -3.7793803215026855
    8. 'len' → logprob: -4.0293803215026855
    9. '  ' → logprob: -4.2793803215026855
    10. 'distance' → logprob: -4.2793803215026855

Token 252: ' quantité' (ID: 89219)
  Prédit: ' distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' distance' → logprob: -0.6839914917945862
    2. ' ' → logprob: -1.8089914321899414
    3. ' somme' → logprob: -2.4339914321899414
    4. 'distance' → logprob: -2.9339914321899414
    5. ' nombre' → logprob: -3.3089914321899414
    6. ' moindre' → logprob: -3.5589914321899414
    7. ' plus' → logprob: -3.6839914321899414
    8. ' longueur' → logprob: -4.558991432189941
    9. ' quantité' → logprob: -5.308991432189941
    10. ' "' → logprob: -5.308991432189941

Token 253: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.7196878790855408
    2. ' d' → logprob: -1.3446879386901855
    3. 'de' → logprob: -2.4696879386901855
    4. ' des' → logprob: -2.9696879386901855
    5. 'd' → logprob: -3.3446879386901855
    6. '_' → logprob: -3.7196879386901855
    7. ' ' → logprob: -4.0946879386901855
    8. ' minimale' → logprob: -4.9696879386901855
    9. '  ' → logprob: -5.3446879386901855
    10. 'des' → logprob: -5.5946879386901855

Token 254: ' carbur' (ID: 139558)
  Prédit: ' carbur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' carbur' → logprob: -0.28123602271080017
    2. 'car' → logprob: -1.5312360525131226
    3. ' essence' → logprob: -5.281236171722412
    4. 'distance' → logprob: -5.656236171722412
    5. ' distance' → logprob: -6.093736171722412
    6. 'ess' → logprob: -6.156236171722412
    7. 'temps' → logprob: -6.281236171722412
    8. ' fuel' → logprob: -7.156236171722412
    9. ' ' → logprob: -7.156236171722412
    10. ' rav' → logprob: -7.281236171722412

Token 255: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.023989347741007805
    2. 'e' → logprob: -3.89898943901062
    3. 'ante' → logprob: -6.273989200592041
    4. '   ' → logprob: -6.773989200592041
    5. 'a' → logprob: -9.6489896774292
    6. '#' → logprob: -9.8989896774292
    7. '  ' → logprob: -10.0239896774292
    8. '    ' → logprob: -10.0239896774292
    9. '}' → logprob: -10.5239896774292
    10. '	' → logprob: -10.6489896774292

Token 256: ' utilisée' (ID: 106548)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.900592565536499
    2. ',' → logprob: -1.150592565536499
    3. ' ,' → logprob: -2.525592565536499
    4. '[v' → logprob: -2.900592565536499
    5. ' ' → logprob: -3.025592565536499
    6. '[' → logprob: -4.025592803955078
    7. 's' → logprob: -4.275592803955078
    8. ')' → logprob: -4.525592803955078
    9. 'dist' → logprob: -4.775592803955078
    10. '[]' → logprob: -5.025592803955078

Token 257: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.446649432182312
    2. ',' → logprob: -1.571649432182312
    3. 'dist' → logprob: -3.1966495513916016
    4. ' ' → logprob: -4.071649551391602
    5. ')' → logprob: -4.071649551391602
    6. '[]' → logprob: -4.196649551391602
    7. '[v' → logprob: -4.446649551391602
    8. '[' → logprob: -4.696649551391602
    9. ' ,' → logprob: -4.821649551391602
    10. ' =' → logprob: -5.196649551391602

Token 258: '   ' (ID: 271)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.3016517460346222
    2. '   ' → logprob: -1.4266517162322998
    3. '
' → logprob: -4.551651954650879
    4. ' dist' → logprob: -4.801651954650879
    5. '    
' → logprob: -8.176651954650879
    6. '	dist' → logprob: -8.176651954650879
    7. ' distances' → logprob: -8.301651954650879
    8. 'distance' → logprob: -8.551651954650879
    9. '(dist' → logprob: -9.551651954650879
    10. '_dist' → logprob: -9.551651954650879

Token 259: ' #' (ID: 1069)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.09632943570613861
    2. '   ' → logprob: -2.7213294506073
    3. ' dist' → logprob: -3.7213294506073
    4. '
' → logprob: -6.971329212188721
    5. 'distance' → logprob: -8.346329689025879
    6. '	dist' → logprob: -8.721329689025879
    7. ' distances' → logprob: -9.346329689025879
    8. 'INF' → logprob: -9.471329689025879
    9. ' ' → logprob: -9.721329689025879
    10. '    
' → logprob: -9.721329689025879

Token 260: ' Le' (ID: 2018)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.036774300038814545
    2. ' dist' → logprob: -3.9117743968963623
    3. '   ' → logprob: -4.161774158477783
    4. 'INF' → logprob: -8.536774635314941
    5. 'distance' → logprob: -9.411774635314941
    6. '
' → logprob: -9.786774635314941
    7. 'def' → logprob: -10.286774635314941
    8. '	dist' → logprob: -10.786774635314941
    9. ' ' → logprob: -10.911774635314941
    10. 'DIST' → logprob: -11.474274635314941

Token 261: ' calcul' (ID: 7559)
  Prédit: ' dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.15107901394367218
    2. ' ' → logprob: -2.776078939437866
    3. 'dist' → logprob: -3.776078939437866
    4. ' =' → logprob: -4.526079177856445
    5. 's' → logprob: -4.526079177856445
    6. ' distances' → logprob: -4.776079177856445
    7. ' space' → logprob: -5.151079177856445
    8. ' s' → logprob: -6.026079177856445
    9. '=' → logprob: -6.026079177856445
    10. ' def' → logprob: -6.401079177856445

Token 262: ' est' (ID: 893)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2511519193649292
    2. '=' → logprob: -1.7511519193649292
    3. '   ' → logprob: -3.7511520385742188
    4. ' des' → logprob: -4.751152038574219
    5. 's' → logprob: -5.001152038574219
    6. 'dist' → logprob: -6.001152038574219
    7. ' dist' → logprob: -6.626152038574219
    8. ' de' → logprob: -7.001152038574219
    9. '[' → logprob: -7.001152038574219
    10. '[]' → logprob: -7.626152038574219

Token 263: ' :' (ID: 712)
  Prédit: ' lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.05264151096343994
    2. ' matrix' → logprob: -3.4276413917541504
    3. 'lambda' → logprob: -4.67764139175415
    4. ' ' → logprob: -5.92764139175415
    5. 'matrix' → logprob: -6.17764139175415
    6. ' (' → logprob: -6.80264139175415
    7. ' start' → logprob: -7.30264139175415
    8. '   ' → logprob: -7.55264139175415
    9. '(lambda' → logprob: -7.67764139175415
    10. ' dist' → logprob: -8.427641868591309

Token 264: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.5108619332313538
    2. 'matrix' → logprob: -1.885861873626709
    3. ' dist' → logprob: -2.010861873626709
    4. 'distance' → logprob: -3.260861873626709
    5. ' matrix' → logprob: -3.760861873626709
    6. '   ' → logprob: -4.385861873626709
    7. 'cost' → logprob: -5.010861873626709
    8. '100' → logprob: -5.260861873626709
    9. ' distance' → logprob: -5.510861873626709
    10. 'd' → logprob: -5.635861873626709

Token 265: '[v' (ID: 36561)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01481945812702179
    2. '[start' → logprob: -5.014819622039795
    3. '[v' → logprob: -5.139819622039795
    4. '=' → logprob: -6.389819622039795
    5. '=[' → logprob: -8.014819145202637
    6. '[' → logprob: -9.889819145202637
    7. '   ' → logprob: -10.264819145202637
    8. ' =[' → logprob: -11.014819145202637
    9. '=start' → logprob: -11.014819145202637
    10. ' ' → logprob: -11.264819145202637

Token 266: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.007480498868972063
    2. ' =' → logprob: -5.757480621337891
    3. '[v' → logprob: -6.007480621337891
    4. ' ]' → logprob: -7.382480621337891
    5. '=' → logprob: -7.882480621337891
    6. ']=' → logprob: -7.882480621337891
    7. '[' → logprob: -8.63248062133789
    8. '   ' → logprob: -8.75748062133789
    9. '][' → logprob: -9.63248062133789
    10. ')' → logprob: -10.88248062133789

Token 267: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5267535448074341
    2. '=' → logprob: -0.9017535448074341
    3. '[v' → logprob: -5.6517534255981445
    4. '[' → logprob: -9.901753425598145
    5. '=[' → logprob: -10.901753425598145
    6. '[start' → logprob: -11.776753425598145
    7. '   ' → logprob: -12.026753425598145
    8. '=v' → logprob: -12.151753425598145
    9. ' ' → logprob: -12.276753425598145
    10. '.append' → logprob: -12.651753425598145

Token 268: ' nb' (ID: 28791)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -1.258634328842163
    2. '(' → logprob: -1.633634328842163
    3. '100' → logprob: -2.633634328842163
    4. 'dist' → logprob: -2.758634328842163
    5. 'INF' → logprob: -2.883634328842163
    6. '0' → logprob: -3.133634328842163
    7. 'start' → logprob: -3.383634328842163
    8. 'rav' → logprob: -3.508634328842163
    9. '[' → logprob: -3.633634328842163
    10. 'inf' → logprob: -3.758634328842163

Token 269: '_r' (ID: 3442)
  Prédit: '_r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -0.0026126401498913765
    2. '_re' → logprob: -6.502612590789795
    3. 'rav' → logprob: -7.127612590789795
    4. '_' → logprob: -9.377613067626953
    5. 'r' → logprob: -9.502613067626953
    6. 'R' → logprob: -9.502613067626953
    7. '_ra' → logprob: -11.127613067626953
    8. '_ram' → logprob: -11.627613067626953
    9. '_v' → logprob: -12.127613067626953
    10. '_comb' → logprob: -12.252613067626953

Token 270: 'avit' (ID: 49968)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9553424119949341
    2. '_f' → logprob: -1.330342411994934
    3. '_av' → logprob: -2.4553422927856445
    4. 'avit' → logprob: -2.8303422927856445
    5. 'av' → logprob: -2.9553422927856445
    6. '_ref' → logprob: -2.9553422927856445
    7. '_re' → logprob: -3.7053422927856445
    8. '_et' → logprob: -4.3303422927856445
    9. '_e' → logprob: -4.5803422927856445
    10. 'e' → logprob: -5.0803422927856445

Token 271: 'ail' (ID: 663)
  Prédit: 'ail'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ail' → logprob: -0.0587850920855999
    2. 'ements' → logprob: -4.0587849617004395
    3. 'e' → logprob: -4.4337849617004395
    4. 'ell' → logprob: -4.6837849617004395
    5. 'a' → logprob: -5.6837849617004395
    6. 'el' → logprob: -5.9337849617004395
    7. 'eil' → logprob: -5.9337849617004395
    8. '=' → logprob: -6.3087849617004395
    9. '_re' → logprob: -7.0587849617004395
    10. 'ails' → logprob: -7.3087849617004395

Token 272: 'lements' (ID: 11031)
  Prédit: 'lements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lements' → logprob: -0.01857503317296505
    2. 'ements' → logprob: -4.143575191497803
    3. 'lement' → logprob: -6.643575191497803
    4. 'l' → logprob: -7.143575191497803
    5. 'le' → logprob: -8.893574714660645
    6. '=' → logprob: -9.643574714660645
    7. '_' → logprob: -10.018574714660645
    8. 'ments' → logprob: -10.143574714660645
    9. '   ' → logprob: -11.018574714660645
    10. 'nements' → logprob: -11.393574714660645

Token 273: ' *' (ID: 425)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.3888606131076813
    2. ' *' → logprob: -1.1388605833053589
    3. '*' → logprob: -6.263860702514648
    4. ' ' → logprob: -9.888860702514648
    5. '*v' → logprob: -11.138860702514648
    6. '[' → logprob: -11.388860702514648
    7. '(v' → logprob: -13.388860702514648
    8. '   ' → logprob: -13.638860702514648
    9. '[]' → logprob: -14.138860702514648
    10. 'v' → logprob: -14.763860702514648

Token 274: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1223050132393837
    2. ' (' → logprob: -2.622304916381836
    3. '10' → logprob: -3.622304916381836
    4. '100' → logprob: -4.497304916381836
    5. ' ' → logprob: -5.872304916381836
    6. '(n' → logprob: -6.997304916381836
    7. 'INF' → logprob: -8.622304916381836
    8. '(m' → logprob: -8.872304916381836
    9. '(IN' → logprob: -9.372304916381836
    10. '((' → logprob: -9.372304916381836

Token 275: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.12525910139083862
    2. '(' → logprob: -2.3752591609954834
    3. '100' → logprob: -4.375258922576904
    4. '(n' → logprob: -4.625258922576904
    5. 'INF' → logprob: -8.250259399414062
    6. '1' → logprob: -8.375259399414062
    7. ' (' → logprob: -8.625259399414062
    8. '(int' → logprob: -8.625259399414062
    9. '200' → logprob: -8.625259399414062
    10. '(m' → logprob: -8.750259399414062

Token 276: ' **' (ID: 6240)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -0.08994220942258835
    2. '12' → logprob: -3.464942216873169
    3. '7' → logprob: -3.839942216873169
    4. '10' → logprob: -4.58994197845459
    5. '15' → logprob: -4.71494197845459
    6. '6' → logprob: -5.33994197845459
    7. '8' → logprob: -5.33994197845459
    8. '**' → logprob: -5.96494197845459
    9. '18' → logprob: -7.08994197845459
    10. '13' → logprob: -7.71494197845459

Token 277: ' ' (ID: 220)
  Prédit: '15'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '15' → logprob: -0.8687976002693176
    2. '9' → logprob: -1.2437975406646729
    3. '10' → logprob: -2.243797540664673
    4. '7' → logprob: -2.618797540664673
    5. '12' → logprob: -2.868797540664673
    6. '8' → logprob: -3.993797540664673
    7. '14' → logprob: -4.493797779083252
    8. '13' → logprob: -4.743797779083252
    9. '6' → logprob: -5.118797779083252
    10. '16' → logprob: -5.618797779083252

Token 278: '15' (ID: 1055)
  Prédit: '15'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '15' → logprob: -0.5979917645454407
    2. '9' → logprob: -1.597991704940796
    3. '10' → logprob: -2.472991704940796
    4. '12' → logprob: -2.472991704940796
    5. '14' → logprob: -3.722991704940796
    6. '7' → logprob: -3.847991704940796
    7. '13' → logprob: -4.347991943359375
    8. '11' → logprob: -5.097991943359375
    9. '8' → logprob: -5.222991943359375
    10. '16' → logprob: -5.847991943359375

Token 279: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09897111356258392
    2. ' +' → logprob: -2.723971128463745
    3. ' )' → logprob: -4.223970890045166
    4. '+' → logprob: -4.473970890045166
    5. ')+' → logprob: -6.098970890045166
    6. ' ' → logprob: -8.348971366882324
    7. ' ' → logprob: -9.973971366882324
    8. '   ' → logprob: -11.098971366882324
    9. '+)' → logprob: -11.473971366882324
    10. '
' → logprob: -11.973971366882324

Token 280: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5283710956573486
    2. ' +' → logprob: -0.9033710956573486
    3. '   ' → logprob: -5.2783708572387695
    4. ' ' → logprob: -9.40337085723877
    5. ' ' → logprob: -11.77837085723877
    6. '  ' → logprob: -11.90337085723877
    7. '
' → logprob: -12.02837085723877
    8. ' plus' → logprob: -12.15337085723877
    9. '    ' → logprob: -12.27837085723877
    10. '+
' → logprob: -12.65337085723877

Token 281: ' carbur' (ID: 139558)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.8693262338638306
    2. 'matrix' → logprob: -1.2443262338638306
    3. ' matrix' → logprob: -2.494326114654541
    4. 'fuel' → logprob: -3.119326114654541
    5. 'cost' → logprob: -3.369326114654541
    6. 'dist' → logprob: -3.619326114654541
    7. 'distance' → logprob: -3.744326114654541
    8. ' carbur' → logprob: -3.869326114654541
    9. 'mat' → logprob: -3.994326114654541
    10. ' fuel' → logprob: -4.619326114654541

Token 282: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.02864956669509411
    2. '_' → logprob: -4.40364933013916
    3. ' ant' → logprob: -4.40364933013916
    4. '_ant' → logprob: -6.02864933013916
    5. ' ' → logprob: -8.27864933013916
    6. '   ' → logprob: -8.27864933013916
    7. '__' → logprob: -8.65364933013916
    8. '  ' → logprob: -8.65364933013916
    9. ' fuel' → logprob: -9.02864933013916
    10. '_f' → logprob: -9.27864933013916

Token 283: '_util' (ID: 46866)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3093368113040924
    2. '   ' → logprob: -1.43433678150177
    3. 'dist' → logprob: -4.4343366622924805
    4. ' ' → logprob: -5.5593366622924805
    5. '_dist' → logprob: -5.8093366622924805
    6. '    
' → logprob: -6.1843366622924805
    7. '  
' → logprob: -6.4343366622924805
    8. '_' → logprob: -6.9343366622924805
    9. ',' → logprob: -7.1843366622924805
    10. ' dist' → logprob: -7.6843366622924805

Token 284: 'isé' (ID: 30065)
  Prédit: 'isé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isé' → logprob: -0.1711287796497345
    2. 'isée' → logprob: -2.046128749847412
    3. 'ise' → logprob: -4.046128749847412
    4. 'is' → logprob: -4.796128749847412
    5. 'isés' → logprob: -7.421128749847412
    6. 's' → logprob: -7.921128749847412
    7. '```' → logprob: -8.29612922668457
    8. 'se' → logprob: -8.92112922668457
    9. '   ' → logprob: -9.04612922668457
    10. 'isee' → logprob: -9.42112922668457

Token 285: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17826898396015167
    2. '
' → logprob: -1.9282690286636353
    3. 'dist' → logprob: -4.303268909454346
    4. '    
' → logprob: -6.053268909454346
    5. '
' → logprob: -7.928268909454346
    6. ' dist' → logprob: -8.053269386291504
    7. '  
' → logprob: -8.053269386291504
    8. ' ' → logprob: -8.803269386291504
    9. '   
' → logprob: -8.803269386291504
    10. '	dist' → logprob: -8.928269386291504

Token 286: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04217919334769249
    2. '
' → logprob: -3.5421791076660156
    3. 'dist' → logprob: -4.542179107666016
    4. '    
' → logprob: -6.667179107666016
    5. ' dist' → logprob: -9.167179107666016
    6. '	dist' → logprob: -9.417179107666016
    7. '  
' → logprob: -10.167179107666016
    8. '   
' → logprob: -10.167179107666016
    9. '
' → logprob: -10.417179107666016
    10. '_dist' → logprob: -10.792179107666016

Token 287: ' dist' (ID: 3601)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7785619497299194
    2. 'dist' (adapté à ' dist') → logprob: -0.7785619497299194
    3. '
' → logprob: -2.653562068939209
    4. ' dist' → logprob: -5.028562068939209
    5. '    
' → logprob: -6.028562068939209
    6. '	dist' → logprob: -7.028562068939209
    7. '_dist' → logprob: -7.903562068939209
    8. ' 
' → logprob: -8.15356159210205
    9. '   
' → logprob: -8.40356159210205
    10. '  
' → logprob: -8.65356159210205

Token 288: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1602381318807602
    2. '=' → logprob: -1.9102381467819214
    3. '[' → logprob: -12.285238265991211
    4. ' =[' → logprob: -12.285238265991211
    5. '=[' → logprob: -13.285238265991211
    6. ' ' → logprob: -13.785238265991211
    7. '   ' → logprob: -14.410238265991211
    8. ',' → logprob: -14.910238265991211
    9. '[:]' → logprob: -15.035238265991211
    10. '  ' → logprob: -15.785238265991211

Token 289: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.0391463193809614e-05
    2. ' [' → logprob: -9.875060081481934
    3. '[(' → logprob: -13.625060081481934
    4. '[in' → logprob: -13.750060081481934
    5. '[n' → logprob: -14.375060081481934
    6. '[start' → logprob: -14.375060081481934
    7. '[ind' → logprob: -14.500060081481934
    8. '[min' → logprob: -14.750060081481934
    9. '[input' → logprob: -14.875060081481934
    10. '[array' → logprob: -14.875060081481934

Token 290: 'INF' (ID: 64358)
  Prédit: 'INF'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.1131100058555603
    2. '10' → logprob: -2.238110065460205
    3. '(' → logprob: -8.863109588623047
    4. 'float' → logprob: -9.238109588623047
    5. 'inf' → logprob: -11.238109588623047
    6. 'int' → logprob: -11.613109588623047
    7. '[' → logprob: -11.613109588623047
    8. ' INF' → logprob: -12.113109588623047
    9. 'IN' → logprob: -12.363109588623047
    10. '(IN' → logprob: -13.363109588623047

Token 291: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0009084834600798786
    2. ' ]' → logprob: -7.500908374786377
    3. ']*' → logprob: -8.375908851623535
    4. ' for' → logprob: -9.125908851623535
    5. 'for' → logprob: -11.875908851623535
    6. ',' → logprob: -12.500908851623535
    7. ')' → logprob: -13.125908851623535
    8. ')]' → logprob: -14.125908851623535
    9. '   ' → logprob: -14.625908851623535
    10. ']+' → logprob: -14.750908851623535

Token 292: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6976385712623596
    2. '[:]' → logprob: -1.5726385116577148
    3. ' *' → logprob: -1.9476385116577148
    4. ']' → logprob: -2.822638511657715
    5. ')' → logprob: -3.447638511657715
    6. ' for' → logprob: -3.572638511657715
    7. '[' → logprob: -4.947638511657715
    8. '*[' → logprob: -5.072638511657715
    9. '.copy' → logprob: -5.197638511657715
    10. 'for' → logprob: -5.447638511657715

Token 293: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -9.014684110297821e-06
    2. ' n' → logprob: -11.625008583068848
    3. '(n' → logprob: -17.750009536743164
    4. '	n' → logprob: -18.625009536743164
    5. '   ' → logprob: -19.375009536743164
    6. ')n' → logprob: -20.750009536743164
    7. '
' → logprob: -21.000009536743164
    8. '```' → logprob: -21.375009536743164
    9. 'len' → logprob: -22.125009536743164
    10. '_n' → logprob: -22.125009536743164

Token 294: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08186932653188705
    2. 'dist' → logprob: -2.58186936378479
    3. '
' → logprob: -7.331869125366211
    4. '   ' → logprob: -7.331869125366211
    5. ' dist' → logprob: -7.456869125366211
    6. '    
' → logprob: -7.581869125366211
    7. '  
' → logprob: -8.331869125366211
    8. '	dist' → logprob: -8.456869125366211
    9. ' 
' → logprob: -10.081869125366211
    10. '_dist' → logprob: -11.206869125366211

Token 295: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.019137833267450333
    2. 'dist' → logprob: -4.019137859344482
    3. '
' → logprob: -7.144137859344482
    4. '  
' → logprob: -9.519137382507324
    5. '    
' → logprob: -9.894137382507324
    6. ' dist' → logprob: -11.144137382507324
    7. '	dist' → logprob: -11.144137382507324
    8. '   ' → logprob: -11.269137382507324
    9. ' 
' → logprob: -11.519137382507324
    10. '<|end|>' → logprob: -11.894137382507324

Token 296: ' Initial' (ID: 9209)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.013076347298920155
    2. ' dist' → logprob: -4.388076305389404
    3. 'start' → logprob: -7.638076305389404
    4. ' start' → logprob: -10.013076782226562
    5. 'd' → logprob: -12.013076782226562
    6. '0' → logprob: -12.138076782226562
    7. ' ' → logprob: -12.138076782226562
    8. 'Dist' → logprob: -12.763076782226562
    9. '[start' → logprob: -12.763076782226562
    10. 'def' → logprob: -12.888076782226562

Token 297: 'isation' (ID: 6993)
  Prédit: 'ize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ize' → logprob: -0.059730157256126404
    2. 'iser' → logprob: -4.309730052947998
    3. 'izer' → logprob: -4.434730052947998
    4. 'dist' → logprob: -4.559730052947998
    5. 'er' → logprob: -5.059730052947998
    6. 'is' → logprob: -5.059730052947998
    7. 'ist' → logprob: -5.559730052947998
    8. 'ized' → logprob: -6.559730052947998
    9. 'al' → logprob: -6.809730052947998
    10. 'ise' → logprob: -7.559730052947998

Token 298: ' du' (ID: 1462)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 299: ' tableau' (ID: 67053)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8565619587898254
    2. 'n' → logprob: -1.6065618991851807
    3. 'dist' → logprob: -1.7315618991851807
    4. 'start' → logprob: -2.4815618991851807
    5. ']' → logprob: -3.3565618991851807
    6. ' =' → logprob: -3.3565618991851807
    7. ' n' → logprob: -4.23156213760376
    8. ')' → logprob: -4.48156213760376
    9. ' start' → logprob: -5.23156213760376
    10. ' ]' → logprob: -5.98156213760376

Token 300: ' dist' (ID: 3601)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0021472852677106857
    2. 'dist' → logprob: -7.127147197723389
    3. '[' → logprob: -7.752147197723389
    4. '<|end|>' → logprob: -7.752147197723389
    5. '
' → logprob: -8.002147674560547
    6. '  
' → logprob: -10.252147674560547
    7. '<|end|>' → logprob: -10.877147674560547
    8. '[
' → logprob: -11.502147674560547
    9. ' 
' → logprob: -11.627147674560547
    10. '   ' → logprob: -11.627147674560547

Token 301: ' avec' (ID: 3937)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.23643559217453003
    2. 'dist' → logprob: -1.8614356517791748
    3. '[' → logprob: -3.361435651779175
    4. '<|end|>' → logprob: -4.236435413360596
    5. '<|end|>' → logprob: -6.486435413360596
    6. '  
' → logprob: -6.736435413360596
    7. '   ' → logprob: -7.736435413360596
    8. '	dist' → logprob: -7.736435413360596
    9. ' dist' → logprob: -7.861435413360596
    10. '' → logprob: -7.986435413360596

Token 302: ' '' (ID: 461)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.003251150716096163
    2. ' INF' → logprob: -6.253251075744629
    3. 'dist' → logprob: -6.753251075744629
    4. '[' → logprob: -9.753251075744629
    5. 'inf' → logprob: -9.878251075744629
    6. ' dist' → logprob: -10.878251075744629
    7. '_INF' → logprob: -11.878251075744629
    8. '10' → logprob: -12.628251075744629
    9. '0' → logprob: -12.878251075744629
    10. 'Inf' → logprob: -13.003251075744629

Token 303: 'INF' (ID: 64358)
  Prédit: 'INF'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.003241643775254488
    2. 'dist' → logprob: -6.378241539001465
    3. ' INF' → logprob: -7.253241539001465
    4. 'inf' → logprob: -7.878241539001465
    5. ']' → logprob: -8.503241539001465
    6. ')' → logprob: -9.128241539001465
    7. '10' → logprob: -9.753241539001465
    8. '[' → logprob: -10.503241539001465
    9. '_INF' → logprob: -11.128241539001465
    10. 'Inf' → logprob: -11.628241539001465

Token 304: ''' (ID: 6)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4323248267173767
    2. ']' → logprob: -1.0573248863220215
    3. ')
' → logprob: -6.5573248863220215
    4. ' )' → logprob: -7.3073248863220215
    5. ' ]' → logprob: -7.5573248863220215
    6. ']
' → logprob: -7.9323248863220215
    7. ')
' → logprob: -9.182324409484863
    8. '
' → logprob: -9.307324409484863
    9. '[' → logprob: -9.307324409484863
    10. ' ' → logprob: -9.682324409484863

Token 305: ' pour' (ID: 1930)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14602896571159363
    2. 'dist' → logprob: -2.021028995513916
    3. '  
' → logprob: -7.146028995513916
    4. '
' → logprob: -7.146028995513916
    5. '[' → logprob: -7.646028995513916
    6. ' dist' → logprob: -8.021028518676758
    7. '    
' → logprob: -8.146028518676758
    8. '	dist' → logprob: -8.771028518676758
    9. '' → logprob: -8.896028518676758
    10. '<|end|>' → logprob: -9.521028518676758

Token 306: ' tous' (ID: 10688)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.06617389619350433
    2. ' start' → logprob: -3.566173791885376
    3. 'dist' → logprob: -4.066174030303955
    4. 'n' → logprob: -5.316174030303955
    5. 'i' → logprob: -5.441174030303955
    6. 'inf' → logprob: -6.066174030303955
    7. ')' → logprob: -6.941174030303955
    8. 'INF' → logprob: -7.191174030303955
    9. 's' → logprob: -7.316174030303955
    10. 'v' → logprob: -7.316174030303955

Token 307: ' les' (ID: 1341)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.39348098635673523
    2. 'dist' → logprob: -2.1434810161590576
    3. ' ' → logprob: -3.3934810161590576
    4. '_' → logprob: -3.5184810161590576
    5. '  ' → logprob: -4.0184807777404785
    6. '<|end|>' → logprob: -4.0184807777404785
    7. ']' → logprob: -4.1434807777404785
    8. '
' → logprob: -4.3934807777404785
    9. ')' → logprob: -4.3934807777404785
    10. '_dist' → logprob: -4.5184807777404785

Token 308: ' somm' (ID: 44830)
  Prédit: 'vertices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vertices' → logprob: -0.9960899353027344
    2. 'indices' → logprob: -1.6210899353027344
    3. ' vertices' → logprob: -1.8710899353027344
    4. 'v' → logprob: -2.2460899353027344
    5. ' v' → logprob: -2.6210899353027344
    6. 'tokens' → logprob: -3.9960899353027344
    7. ' indices' → logprob: -4.246089935302734
    8. ' range' → logprob: -4.496089935302734
    9. 'range' → logprob: -4.621089935302734
    10. 'nodes' → logprob: -4.871089935302734

Token 309: 'ets' (ID: 1719)
  Prédit: 'ets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ets' → logprob: -0.0013652353081852198
    2. 'êts' → logprob: -7.6263651847839355
    3. 'et' → logprob: -7.8763651847839355
    4. 'ents' → logprob: -9.376365661621094
    5. '   ' → logprob: -9.751365661621094
    6. 'es' → logprob: -9.751365661621094
    7. 'e' → logprob: -9.876365661621094
    8. ']' → logprob: -10.501365661621094
    9. '```' → logprob: -10.501365661621094
    10. 'ètres' → logprob: -10.626365661621094

Token 310: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.33931469917297363
    2. 'dist' → logprob: -1.3393146991729736
    3. '[' → logprob: -4.3393144607543945
    4. '  
' → logprob: -5.7143144607543945
    5. '   ' → logprob: -5.8393144607543945
    6. '    
' → logprob: -5.9643144607543945
    7. ' dist' → logprob: -6.9643144607543945
    8. '
' → logprob: -7.4643144607543945
    9. '<|end|>' → logprob: -7.7143144607543945
    10. '	dist' → logprob: -7.9643144607543945

Token 311: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.25573623180389404
    2. 'dist' → logprob: -1.505736231803894
    3. '[' → logprob: -6.880736351013184
    4. '  
' → logprob: -7.005736351013184
    5. '    
' → logprob: -7.380736351013184
    6. '   ' → logprob: -7.630736351013184
    7. ' dist' → logprob: -8.505736351013184
    8. '
' → logprob: -8.755736351013184
    9. '	dist' → logprob: -9.380736351013184
    10. '[
' → logprob: -9.505736351013184

Token 312: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.0011732018319889903
    2. ' dist' → logprob: -6.87617301940918
    3. 'start' → logprob: -9.37617301940918
    4. '   ' → logprob: -10.00117301940918
    5. '[' → logprob: -13.25117301940918
    6. '[start' → logprob: -13.25117301940918
    7. ' start' → logprob: -13.50117301940918
    8. '	dist' → logprob: -13.87617301940918
    9. '    
' → logprob: -14.12617301940918
    10. 'for' → logprob: -14.12617301940918

Token 313: '[start' (ID: 62179)
  Prédit: '[start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[start' → logprob: -0.00011021859245374799
    2. '[' → logprob: -9.125110626220703
    3. '[s' → logprob: -14.875110626220703
    4. ' [' → logprob: -15.125110626220703
    5. 'start' → logprob: -15.375110626220703
    6. '[
' → logprob: -16.250110626220703
    7. '[end' → logprob: -16.875110626220703
    8. '[source' → logprob: -16.875110626220703
    9. '[]' → logprob: -17.125110626220703
    10. '```' → logprob: -17.375110626220703

Token 314: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -5.490809417096898e-05
    2. ' ]' → logprob: -9.875055313110352
    3. ']=' → logprob: -12.625055313110352
    4. ')' → logprob: -16.62505531311035
    5. '=' → logprob: -17.12505531311035
    6. '[' → logprob: -17.50005531311035
    7. ']
' → logprob: -19.12505531311035
    8. '`]' → logprob: -19.12505531311035
    9. ' ' → logprob: -19.37505531311035
    10. '']' → logprob: -19.62505531311035

Token 315: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740787148475647
    2. '=' → logprob: -0.9740787148475647
    3. ' ' → logprob: -14.849079132080078
    4. '＝' → logprob: -15.349079132080078
    5. ']' → logprob: -15.599079132080078
    6. ']=' → logprob: -15.849079132080078
    7. ' =)' → logprob: -15.974079132080078
    8. ' ' → logprob: -16.099079132080078
    9. ')' → logprob: -16.224079132080078
    10. '[' → logprob: -16.474079132080078

Token 316: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.226628895296017e-06
    2. ' ' → logprob: -12.125007629394531
    3. '(' → logprob: -14.250007629394531
    4. '10' → logprob: -14.375007629394531
    5. '000' → logprob: -16.25000762939453
    6. '1' → logprob: -16.37500762939453
    7. '100' → logprob: -16.50000762939453
    8. 'int' → logprob: -16.87500762939453
    9. '۰' → logprob: -17.00000762939453
    10. '```' → logprob: -17.68750762939453

Token 317: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.127333340875339e-06
    2. ' ' → logprob: -13.250003814697266
    3. '10' → logprob: -13.875003814697266
    4. '(' → logprob: -14.000003814697266
    5. '1' → logprob: -15.750003814697266
    6. '100' → logprob: -16.375003814697266
    7. '000' → logprob: -16.437503814697266
    8. 'int' → logprob: -17.062503814697266
    9. '۰' → logprob: -17.062503814697266
    10. '-' → logprob: -17.250003814697266

Token 318: '  ' (ID: 256)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.008128228597342968
    2. '   ' → logprob: -5.2581281661987305
    3. '    
' → logprob: -7.0081281661987305
    4. '' → logprob: -7.6331281661987305
    5. '<|end|>' → logprob: -7.8831281661987305
    6. '  
' → logprob: -8.13312816619873
    7. '
' → logprob: -8.25812816619873
    8. '\n' → logprob: -8.63312816619873
    9. ' 
' → logprob: -9.25812816619873
    10. ' for' → logprob: -9.25812816619873

Token 319: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8614660501480103
    2. '
' → logprob: -0.9864660501480103
    3. 'for' → logprob: -1.8614660501480103
    4. '    
' → logprob: -4.361465930938721
    5. 'while' → logprob: -4.486465930938721
    6. ' for' → logprob: -4.861465930938721
    7. '<|end|>' → logprob: -4.861465930938721
    8. '  
' → logprob: -5.986465930938721
    9. '' → logprob: -6.236465930938721
    10. ' while' → logprob: -7.236465930938721

Token 320: ' La' (ID: 3038)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6860414743423462
    2. 'dist' → logprob: -1.4360414743423462
    3. '0' → logprob: -2.3110413551330566
    4. 'return' → logprob: -3.3110413551330566
    5. ' return' → logprob: -3.4360413551330566
    6. ' #' → logprob: -3.4360413551330566
    7. 'def' → logprob: -4.311041355133057
    8. ' dist' → logprob: -4.436041355133057
    9. 'start' → logprob: -4.686041355133057
    10. ' start' → logprob: -5.186041355133057

Token 321: ' distance' (ID: 9324)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.5467552542686462
    2. 'dist' → logprob: -0.9217552542686462
    3. ' distance' → logprob: -4.296755313873291
    4. ' dist' → logprob: -4.921755313873291
    5. '#' → logprob: -6.921755313873291
    6. 'val' → logprob: -8.296754837036133
    7. 'position' → logprob: -8.421754837036133
    8. 'start' → logprob: -8.921754837036133
    9. 'dé' → logprob: -8.921754837036133
    10. 'point' → logprob: -9.296754837036133

Token 322: ' pour' (ID: 1930)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 323: ' atteindre' (ID: 95734)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.03584336116909981
    2. ' le' → logprob: -3.5358433723449707
    3. 'start' → logprob: -5.160843372344971
    4. ' start' → logprob: -9.035842895507812
    5. 'la' → logprob: -9.410842895507812
    6. 'l' → logprob: -9.660842895507812
    7. ' la' → logprob: -11.160842895507812
    8. ' ' → logprob: -11.410842895507812
    9. '[start' → logprob: -11.410842895507812
    10. 'd' → logprob: -11.785842895507812

Token 324: ' le' (ID: 505)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.008639862760901451
    2. ' start' → logprob: -4.758639812469482
    3. 'le' → logprob: -10.88364028930664
    4. ' le' → logprob: -12.75864028930664
    5. '[start' → logprob: -12.75864028930664
    6. '(start' → logprob: -15.13364028930664
    7. '=start' → logprob: -16.13364028930664
    8. 'l' → logprob: -16.13364028930664
    9. ' ' → logprob: -16.25864028930664
    10. '	start' → logprob: -16.63364028930664

Token 325: ' sommet' (ID: 130502)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.00028505371301434934
    2. 'som' → logprob: -8.625285148620605
    3. ' start' → logprob: -9.500285148620605
    4. 'point' → logprob: -11.375285148620605
    5. 'dé' → logprob: -11.375285148620605
    6. 's' → logprob: -12.250285148620605
    7. 'depart' → logprob: -14.375285148620605
    8. '[start' → logprob: -14.500285148620605
    9. ' sommet' → logprob: -14.750285148620605
    10. 'd' → logprob: -14.750285148620605

Token 326: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.0046720504760742
    2. 'de' → logprob: -1.3796720504760742
    3. 'start' → logprob: -1.3796720504760742
    4. ' start' → logprob: -2.129672050476074
    5. '[start' → logprob: -4.504672050476074
    6. '(start' → logprob: -9.129672050476074
    7. 'dé' → logprob: -9.254672050476074
    8. 'depart' → logprob: -9.254672050476074
    9. 'd' → logprob: -9.504672050476074
    10. '[' → logprob: -9.504672050476074

Token 327: ' départ' (ID: 32693)
  Prédit: 'dé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dé' → logprob: -0.007296505384147167
    2. ' départ' → logprob: -5.382296562194824
    3. 'start' → logprob: -6.382296562194824
    4. 'depart' → logprob: -7.257296562194824
    5. 'd' → logprob: -8.257296562194824
    6. ' start' → logprob: -11.382296562194824
    7. 'departure' → logprob: -12.757296562194824
    8. 'part' → logprob: -13.632296562194824
    9. 'ré' → logprob: -15.132296562194824
    10. ' ' → logprob: -15.257296562194824

Token 328: ' est' (ID: 893)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4048473536968231
    2. '<|end|>' → logprob: -1.1548473834991455
    3. '\n' → logprob: -5.529847145080566
    4. '  
' → logprob: -6.029847145080566
    5. '<|end|>' → logprob: -6.029847145080566
    6. '
' → logprob: -6.404847145080566
    7. '    
' → logprob: -6.654847145080566
    8. '   ' → logprob: -6.654847145080566
    9. ' ' → logprob: -6.904847145080566
    10. ' 
' → logprob: -7.279847145080566

Token 329: ' de' (ID: 334)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -5.157039049663581e-05
    2. ' ' → logprob: -9.875051498413086
    3. 'zero' → logprob: -18.375051498413086
    4. 'start' → logprob: -19.125051498413086
    5. 'exact' → logprob: -19.750051498413086
    6. '۰' → logprob: -19.875051498413086
    7. '  ' → logprob: -19.875051498413086
    8. '=' → logprob: -20.000051498413086
    9. ' zéro' → logprob: -20.500051498413086
    10. '000' → logprob: -20.750051498413086

Token 330: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0010329303331673145
    2. ' ' → logprob: -6.876032829284668
    3. ' zéro' → logprob: -16.626033782958984
    4. '1' → logprob: -17.501033782958984
    5. 'zero' → logprob: -17.876033782958984
    6. '  ' → logprob: -18.001033782958984
    7. ' ' → logprob: -18.126033782958984
    8. '=' → logprob: -18.251033782958984
    9. '   ' → logprob: -18.501033782958984
    10. ' zero' → logprob: -18.626033782958984

Token 331: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00013166792632546276
    2. 'start' → logprob: -9.125131607055664
    3. ' ' → logprob: -11.000131607055664
    4. 'dist' → logprob: -12.875131607055664
    5. 'zero' → logprob: -13.750131607055664
    6. 'z' → logprob: -14.000131607055664
    7. 'd' → logprob: -14.750131607055664
    8. 'dé' → logprob: -14.875131607055664
    9. ' start' → logprob: -15.375131607055664
    10. 'depart' → logprob: -16.250131607055664

Token 332: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6243841052055359
    2. '
' → logprob: -0.8743841052055359
    3. 'for' → logprob: -3.4993841648101807
    4. ' for' → logprob: -4.374383926391602
    5. '    
' → logprob: -6.249383926391602
    6. 'while' → logprob: -7.124383926391602
    7. ' while' → logprob: -7.999383926391602
    8. '  
' → logprob: -8.124383926391602
    9. '\n' → logprob: -8.124383926391602
    10. '	for' → logprob: -8.874383926391602

Token 333: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.48983755707740784
    2. '   ' → logprob: -1.1148375272750854
    3. ' for' → logprob: -3.114837646484375
    4. 'n' → logprob: -4.239837646484375
    5. '    
' → logprob: -8.614837646484375
    6. '	for' → logprob: -8.614837646484375
    7. ' n' → logprob: -9.989837646484375
    8. 'while' → logprob: -10.989837646484375
    9. '
' → logprob: -11.114837646484375
    10. '  
' → logprob: -11.364837646484375

Token 334: ' while' (ID: 2049)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0003010233340319246
    2. ' for' → logprob: -8.250301361083984
    3. '   ' → logprob: -10.375301361083984
    4. 'while' (adapté à ' while') → logprob: -11.750301361083984
    5. '	for' → logprob: -15.000301361083984
    6. '
' → logprob: -15.500301361083984
    7. 'n' → logprob: -16.875301361083984
    8. '    
' → logprob: -17.750301361083984
    9. '```' → logprob: -18.250301361083984
    10. ' ' → logprob: -18.375301361083984

Token 335: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.031031111255288124
    2. 'True' → logprob: -3.5310311317443848
    3. ' not' → logprob: -6.781031131744385
    4. ' ' → logprob: -9.906030654907227
    5. 'not' → logprob: -10.531030654907227
    6. '(True' → logprob: -10.906030654907227
    7. ' any' → logprob: -11.281030654907227
    8. '_' → logprob: -11.656030654907227
    9. ' ' → logprob: -12.031030654907227
    10. ' False' → logprob: -12.656030654907227

Token 336: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0015733062755316496
    2. ':
' → logprob: -6.626573085784912
    3. '):' → logprob: -9.37657356262207
    4. ' :' → logprob: -9.50157356262207
    5. '       ' → logprob: -10.00157356262207
    6. '   ' → logprob: -10.25157356262207
    7. '):
' → logprob: -13.25157356262207
    8. ' :
' → logprob: -13.50157356262207
    9. '():' → logprob: -13.62657356262207
    10. ':

' → logprob: -14.62657356262207

Token 337: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06752229481935501
    2. 'u' → logprob: -2.9425222873687744
    3. 'v' → logprob: -5.0675225257873535
    4. ' u' → logprob: -5.8175225257873535
    5. 'min' → logprob: -5.9425225257873535
    6. '	u' → logprob: -8.442522048950195
    7. '    
' → logprob: -9.192522048950195
    8. ' v' → logprob: -9.442522048950195
    9. '    ' → logprob: -9.567522048950195
    10. 'm' → logprob: -9.942522048950195

Token 338: ' #' (ID: 1069)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.502275288105011
    2. '   ' → logprob: -1.2522752285003662
    3. 'v' → logprob: -2.627275228500366
    4. 'min' → logprob: -3.377275228500366
    5. 'm' → logprob: -7.127275466918945
    6. ' u' → logprob: -7.127275466918945
    7. 'pos' → logprob: -7.752275466918945
    8. '	u' → logprob: -9.127275466918945
    9. '    
' → logprob: -9.377275466918945
    10. '       ' → logprob: -10.377275466918945

Token 339: ' Bou' (ID: 33816)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.23811210691928864
    2. 'min' → logprob: -2.238112211227417
    3. 'v' → logprob: -2.488112211227417
    4. ' u' → logprob: -4.488111972808838
    5. '   ' → logprob: -4.613111972808838
    6. ' v' → logprob: -8.488112449645996
    7. ' ' → logprob: -8.613112449645996
    8. 'pos' → logprob: -9.113112449645996
    9. ' min' → logprob: -9.238112449645996
    10. '  ' → logprob: -9.738112449645996

Token 340: 'cle' (ID: 3170)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.8788580894470215
    2. 'cle' → logprob: -1.6288580894470215
    3. '   ' → logprob: -2.2538580894470215
    4. 'r' → logprob: -2.6288580894470215
    5. 'ck' → logprob: -2.8788580894470215
    6. 'k' → logprob: -3.0038580894470215
    7. 'clé' → logprob: -3.3788580894470215
    8. 'e' → logprob: -4.0038580894470215
    9. '       ' → logprob: -4.1288580894470215
    10. '  ' → logprob: -5.2538580894470215

Token 341: ' principale' (ID: 68926)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0054875030182302
    2. '    ' → logprob: -6.380487442016602
    3. ' =' → logprob: -7.255487442016602
    4. ' for' → logprob: -7.630487442016602
    5. ',' → logprob: -8.005487442016602
    6. 'v' → logprob: -8.130487442016602
    7. '    
' → logprob: -8.130487442016602
    8. 'for' → logprob: -8.130487442016602
    9. '  ' → logprob: -8.380487442016602
    10. ':' → logprob: -8.380487442016602

Token 342: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19356709718704224
    2. 'v' → logprob: -1.8185670375823975
    3. ' v' → logprob: -4.943567276000977
    4. '    ' → logprob: -6.068567276000977
    5. 'u' → logprob: -6.318567276000977
    6. '    
' → logprob: -7.193567276000977
    7. ' u' → logprob: -7.443567276000977
    8. '  ' → logprob: -7.693567276000977
    9. 'min' → logprob: -8.693567276000977
    10. '	v' → logprob: -8.693567276000977

Token 343: ' l' (ID: 305)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.20336517691612244
    2. ' True' → logprob: -1.7033652067184448
    3. 'False' → logprob: -6.953365325927734
    4. '1' → logprob: -8.078365325927734
    5. 'range' → logprob: -8.328365325927734
    6. '(True' → logprob: -9.203365325927734
    7. '   ' → logprob: -9.328365325927734
    8. 'not' → logprob: -10.203365325927734
    9. ' ' → logprob: -10.203365325927734
    10. '    ' → logprob: -11.078365325927734

Token 344: ''' (ID: 6)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.11244845390319824
    2. 'a' → logprob: -3.1124484539031982
    3. 'oop' → logprob: -3.4874484539031982
    4. 'e' → logprob: -4.487448692321777
    5. 'ength' → logprob: -5.987448692321777
    6. 'og' → logprob: -5.987448692321777
    7. 'ange' → logprob: -6.237448692321777
    8. 'ook' → logprob: -7.112448692321777
    9. 'ang' → logprob: -7.237448692321777
    10. ''' → logprob: -7.237448692321777

Token 345: 'alg' (ID: 15258)
  Prédit: 'algorithm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'algorithm' → logprob: -0.8393972516059875
    2. 'while' → logprob: -1.7143971920013428
    3. 'alg' → logprob: -1.9643971920013428
    4. 'for' → logprob: -2.3393971920013428
    5. 'algo' → logprob: -2.7143971920013428
    6. ' algorithm' → logprob: -3.2143971920013428
    7. 'd' → logprob: -4.589397430419922
    8. '
' → logprob: -5.214397430419922
    9. 'True' → logprob: -5.339397430419922
    10. 'range' → logprob: -5.839397430419922

Token 346: 'orith' (ID: 9996)
  Prédit: 'orith'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orith' → logprob: -0.0006028342177160084
    2. 'or' → logprob: -8.625602722167969
    3. 'orithm' → logprob: -8.875602722167969
    4. '   ' → logprob: -9.625602722167969
    5. 'o' → logprob: -10.125602722167969
    6. 'ort' → logprob: -10.500602722167969
    7. '       ' → logprob: -10.875602722167969
    8. 'orit' → logprob: -10.875602722167969
    9. 'orie' → logprob: -10.875602722167969
    10. 'ème' → logprob: -11.000602722167969

Token 347: 'me' (ID: 1047)
  Prédit: 'me'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'me' → logprob: -4.370294846012257e-05
    2. 'm' → logprob: -10.125043869018555
    3. 't' → logprob: -12.875043869018555
    4. 'th' → logprob: -15.375043869018555
    5. 'mes' → logprob: -15.500043869018555
    6. 'ме' → logprob: -15.625043869018555
    7. 'м' → logprob: -16.000043869018555
    8. 'ime' → logprob: -17.000043869018555
    9. 'e' → logprob: -17.000043869018555
    10. 'hme' → logprob: -17.000043869018555

Token 348: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12541043758392334
    2. '    
' → logprob: -2.625410556793213
    3. 'v' → logprob: -4.125410556793213
    4. '
' → logprob: -4.625410556793213
    5. '    ' → logprob: -5.125410556793213
    6. '       ' → logprob: -5.375410556793213
    7. '        
' → logprob: -6.500410556793213
    8. ' 
' → logprob: -6.500410556793213
    9. '     
' → logprob: -6.500410556793213
    10. '  
' → logprob: -6.875410556793213

Token 349: ' D' (ID: 415)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.33275216817855835
    2. 'D' → logprob: -1.4577522277832031
    3. ' d' → logprob: -3.457752227783203
    4. ' D' → logprob: -4.082752227783203
    5. 'for' → logprob: -7.832752227783203
    6. 'True' → logprob: -8.207752227783203
    7. 'dist' → logprob: -8.207752227783203
    8. 'range' → logprob: -8.707752227783203
    9. '_d' → logprob: -9.332752227783203
    10. ' True' → logprob: -9.582752227783203

Token 350: 'ijkstra' (ID: 124290)
  Prédit: 'ijkstra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijkstra' → logprob: -0.004075789824128151
    2. 'ij' → logprob: -6.12907600402832
    3. 'ijk' → logprob: -6.50407600402832
    4. 'i' → logprob: -9.12907600402832
    5. '   ' → logprob: -9.25407600402832
    6. 'ijks' → logprob: -10.25407600402832
    7. '```' → logprob: -10.87907600402832
    8. 'ist' → logprob: -10.87907600402832
    9. 'jik' → logprob: -11.12907600402832
    10. 'j' → logprob: -11.25407600402832

Token 351: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08570883423089981
    2. 'v' → logprob: -2.7107088565826416
    3. 'u' → logprob: -4.4607086181640625
    4. ' v' → logprob: -5.9607086181640625
    5. ' u' → logprob: -6.8357086181640625
    6. '    
' → logprob: -8.835708618164062
    7. '	v' → logprob: -9.460708618164062
    8. 'min' → logprob: -9.585708618164062
    9. '    ' → logprob: -10.210708618164062
    10. '	u' → logprob: -10.710708618164062

Token 352: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7354208827018738
    2. 'u' → logprob: -0.9854208827018738
    3. 'v' → logprob: -2.3604209423065186
    4. ' u' → logprob: -3.1104209423065186
    5. ' v' → logprob: -5.4854207038879395
    6. 'min' → logprob: -5.6104207038879395
    7. 'm' → logprob: -8.985421180725098
    8. '	u' → logprob: -8.985421180725098
    9. ' min' → logprob: -9.235421180725098
    10. '    
' → logprob: -9.610421180725098

Token 353: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.39684274792671204
    2. 'u' → logprob: -1.1468427181243896
    3. 'min' → logprob: -5.396842956542969
    4. ' u' → logprob: -5.771842956542969
    5. ' v' → logprob: -6.771842956542969
    6. '   ' → logprob: -7.146842956542969
    7. 'pos' → logprob: -8.771842956542969
    8. 'm' → logprob: -10.646842956542969
    9. '  ' → logprob: -10.646842956542969
    10. ' ' → logprob: -10.771842956542969

Token 354: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3485577702522278
    2. '=' → logprob: -1.223557710647583
    3. '=-' → logprob: -9.598557472229004
    4. '   ' → logprob: -10.723557472229004
    5. ',' → logprob: -11.098557472229004
    6. '=None' → logprob: -12.848557472229004
    7. '=v' → logprob: -13.973557472229004
    8. ' ' → logprob: -14.223557472229004
    9. '=
' → logprob: -14.473557472229004
    10. '    ' → logprob: -14.473557472229004

Token 355: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -3.054500666621607e-06
    2. ' -' → logprob: -12.75000286102295
    3. 'None' → logprob: -16.125003814697266
    4. '-n' → logprob: -17.875003814697266
    5. '-INF' → logprob: -19.875003814697266
    6. '\-' → logprob: -20.500003814697266
    7. '
' → logprob: -20.625003814697266
    8. '-none' → logprob: -20.625003814697266
    9. '   ' → logprob: -20.750003814697266
    10. '0' → logprob: -21.375003814697266

Token 356: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. '   ' → logprob: -18.875
    4. '１' → logprob: -19.25
    5. '

' → logprob: -19.5
    6. '
' → logprob: -19.5
    7. '10' → logprob: -20.125
    8. '-' → logprob: -20.625
    9. '  ' → logprob: -20.875
    10. '2' → logprob: -21.125

Token 357: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4584381878376007
    2. 'for' → logprob: -1.2084381580352783
    3. '<|end|>' → logprob: -3.0834381580352783
    4. ' for' → logprob: -4.208438396453857
    5. '  
' → logprob: -5.833438396453857
    6. '    
' → logprob: -6.833438396453857
    7. ' 
' → logprob: -7.083438396453857
    8. '0' → logprob: -7.208438396453857
    9. '<|end|>' → logprob: -7.208438396453857
    10. '   ' → logprob: -7.333438396453857

Token 358: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.48369473218917847
    2. 'for' → logprob: -1.4836947917938232
    3. '
' → logprob: -3.3586947917938232
    4. ',' → logprob: -3.6086947917938232
    5. 'v' → logprob: -4.108694553375244
    6. 'min' → logprob: -4.108694553375244
    7. '<|end|>' → logprob: -4.233694553375244
    8. '   ' → logprob: -4.483694553375244
    9. ' for' → logprob: -4.733694553375244
    10. '        
' → logprob: -4.858694553375244

Token 359: ' Variable' (ID: 36336)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.17437413334846497
    2. '0' → logprob: -1.9243741035461426
    3. 'for' → logprob: -4.799374103546143
    4. 'v' → logprob: -5.924374103546143
    5. 'dist' → logprob: -6.299374103546143
    6. 'INF' → logprob: -8.0493745803833
    7. '   ' → logprob: -8.1743745803833
    8. 'm' → logprob: -8.7993745803833
    9. 'tmp' → logprob: -9.0493745803833
    10. ' min' → logprob: -9.1743745803833

Token 360: ' pour' (ID: 1930)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2172098159790039
    2. ' for' → logprob: -2.342209815979004
    3. '       ' → logprob: -3.092209815979004
    4. 'v' → logprob: -3.342209815979004
    5. '<|end|>' → logprob: -4.592209815979004
    6. '   ' → logprob: -6.467209815979004
    7. '    ' → logprob: -6.467209815979004
    8. '        ' → logprob: -6.717209815979004
    9. ',' → logprob: -6.967209815979004
    10. ' v' → logprob: -7.217209815979004

Token 361: ' stock' (ID: 6546)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.4834141731262207
    2. 'v' → logprob: -0.9834141731262207
    3. ' -' → logprob: -5.733414173126221
    4. ' v' → logprob: -6.358414173126221
    5. '-v' → logprob: -6.608414173126221
    6. 'i' → logprob: -7.358414173126221
    7. 'None' → logprob: -7.483414173126221
    8. 'min' → logprob: -7.483414173126221
    9. 'range' → logprob: -7.983414173126221
    10. '0' → logprob: -8.233413696289062

Token 362: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.014849414117634296
    2. '   ' → logprob: -5.1398491859436035
    3. 'urer' → logprob: -5.3898491859436035
    4. '=' → logprob: -6.5148491859436035
    5. 'érer' → logprob: -7.1398491859436035
    6. '       ' → logprob: -7.3898491859436035
    7. 'uler' → logprob: -8.139849662780762
    8. ' v' → logprob: -8.389849662780762
    9. 'ier' → logprob: -9.014849662780762
    10. '=None' → logprob: -9.014849662780762

Token 363: ' le' (ID: 505)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5455464124679565
    2. ' -' → logprob: -1.5455464124679565
    3. ' v' → logprob: -2.795546531677246
    4. 'v' → logprob: -2.795546531677246
    5. '   ' → logprob: -2.920546531677246
    6. 'None' → logprob: -4.295546531677246
    7. ' None' → logprob: -4.920546531677246
    8. '    ' → logprob: -5.420546531677246
    9. ' ' → logprob: -6.420546531677246
    10. '       ' → logprob: -6.670546531677246

Token 364: ' prochain' (ID: 52413)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.5477485060691833
    2. 'v' → logprob: -1.4227485656738281
    3. '-' → logprob: -2.422748565673828
    4. '0' → logprob: -3.422748565673828
    5. 'u' → logprob: -3.797748565673828
    6. 'minimum' → logprob: -4.297748565673828
    7. 'None' → logprob: -4.672748565673828
    8. '   ' → logprob: -6.422748565673828
    9. ' -' → logprob: -6.422748565673828
    10. 'dist' → logprob: -6.672748565673828

Token 365: ' sommet' (ID: 130502)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.45157960057258606
    2. 'u' → logprob: -2.0765795707702637
    3. 'min' → logprob: -2.5765795707702637
    4. 'vertex' → logprob: -2.8265795707702637
    5. ' sommet' → logprob: -2.9515795707702637
    6. 'None' → logprob: -4.076579570770264
    7. 'vert' → logprob: -4.826579570770264
    8. 'minimum' → logprob: -5.201579570770264
    9. ' v' → logprob: -5.826579570770264
    10. 'node' → logprob: -5.951579570770264

Token 366: ' à' (ID: 1221)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6009791493415833
    2. 'v' → logprob: -1.6009790897369385
    3. ' v' → logprob: -2.6009790897369385
    4. '    ' → logprob: -3.6009790897369385
    5. ',' → logprob: -3.7259790897369385
    6. '        
' → logprob: -4.350979328155518
    7. ' ' → logprob: -4.350979328155518
    8. '        ' → logprob: -4.475979328155518
    9. '   ' → logprob: -4.475979328155518
    10. '<|end|>' → logprob: -4.600979328155518

Token 367: ' traiter' (ID: 105852)
  Prédit: 'trait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'trait' → logprob: -0.07292117923498154
    2. ' traiter' → logprob: -3.3229212760925293
    3. 'tr' → logprob: -3.9479212760925293
    4. 'tra' → logprob: -5.197921276092529
    5. 'cho' → logprob: -6.072921276092529
    6. 'u' → logprob: -6.697921276092529
    7. ' visiter' → logprob: -7.072921276092529
    8. 'vis' → logprob: -7.447921276092529
    9. 'mettre' → logprob: -7.697921276092529
    10. 'expl' → logprob: -7.947921276092529

Token 368: ' (' (ID: 350)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.31433725357055664
    2. ' 
' → logprob: -2.4393372535705566
    3. '<|end|>' → logprob: -2.5643372535705566
    4. ' for' → logprob: -3.8143372535705566
    5. 'for' → logprob: -3.9393372535705566
    6. '  
' → logprob: -3.9393372535705566
    7. '       ' → logprob: -4.189337253570557
    8. '        
' → logprob: -4.814337253570557
    9. '    
' → logprob: -5.064337253570557
    10. ' ' → logprob: -5.564337253570557

Token 369: 'val' (ID: 1105)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.5774701237678528
    2. '       ' → logprob: -2.077470064163208
    3. ')' → logprob: -2.327470064163208
    4. '   ' → logprob: -2.452470064163208
    5. ' v' → logprob: -2.952470064163208
    6. 'None' → logprob: -4.327470302581787
    7. '    ' → logprob: -4.577470302581787
    8. 'for' → logprob: -4.702470302581787
    9. 'n' → logprob: -5.077470302581787
    10. '
' → logprob: -5.202470302581787

Token 370: 'eur' (ID: 8671)
  Prédit: 'ue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.1514119803905487
    2. 'id' → logprob: -2.401412010192871
    3. 'eur' → logprob: -3.776412010192871
    4. 'u' → logprob: -4.276412010192871
    5. '-' → logprob: -5.526412010192871
    6. 'e' → logprob: -6.026412010192871
    7. '=' → logprob: -6.651412010192871
    8. 'v' → logprob: -6.776412010192871
    9. 'ide' → logprob: -7.026412010192871
    10. ' -' → logprob: -7.526412010192871

Token 371: ' initial' (ID: 4871)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0656837224960327
    2. 'None' → logprob: -1.8156837224960327
    3. ')' → logprob: -1.9406837224960327
    4. '=None' → logprob: -2.4406838417053223
    5. '<|end|>' → logprob: -2.5656838417053223
    6. '   ' → logprob: -2.8156838417053223
    7. '=' → logprob: -3.6906838417053223
    8. ' None' → logprob: -3.8156838417053223
    9. 'v' → logprob: -4.190683841705322
    10. 'for' → logprob: -4.565683841705322

Token 372: 'e' (ID: 68)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.021909819915890694
    2. '=-' → logprob: -5.146909713745117
    3. 'e' → logprob: -5.521909713745117
    4. '=v' → logprob: -5.646909713745117
    5. ' =' → logprob: -6.021909713745117
    6. 'isée' → logprob: -6.146909713745117
    7. '-' → logprob: -6.646909713745117
    8. '=None' → logprob: -7.021909713745117
    9. '   ' → logprob: -7.646909713745117
    10. ' ' → logprob: -8.896909713745117

Token 373: ' impossible' (ID: 19786)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.051447611302137375
    2. ' )' → logprob: -3.301447629928589
    3. '       ' → logprob: -5.55144739151001
    4. '=' → logprob: -6.42644739151001
    5. '<|end|>' → logprob: -6.55144739151001
    6. ',' → logprob: -6.67644739151001
    7. ' ' → logprob: -6.92644739151001
    8. 'v' → logprob: -6.92644739151001
    9. ' v' → logprob: -7.05144739151001
    10. ',v' → logprob: -8.301447868347168

Token 374: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004045275505632162
    2. ' )' → logprob: -5.879045486450195
    3. ')
' → logprob: -7.504045486450195
    4. ',' → logprob: -8.629045486450195
    5. '   ' → logprob: -9.254045486450195
    6. ' ' → logprob: -9.254045486450195
    7. '<|end|>' → logprob: -9.254045486450195
    8. '       ' → logprob: -9.879045486450195
    9. 'v' → logprob: -10.379045486450195
    10. '
' → logprob: -10.504045486450195

Token 375: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4378358721733093
    2. '
' → logprob: -1.562835931777954
    3. ' 
' → logprob: -3.437835931777954
    4. '   ' → logprob: -3.687835931777954
    5. '        
' → logprob: -4.062835693359375
    6. ' for' → logprob: -4.187835693359375
    7. 'for' → logprob: -4.187835693359375
    8. 'v' → logprob: -4.312835693359375
    9. '    
' → logprob: -4.687835693359375
    10. '  
' → logprob: -5.187835693359375

Token 376: ' for' (ID: 395)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.10818009823560715
    2. 'for' (adapté à ' for') → logprob: -2.358180046081543
    3. 'm' → logprob: -6.233180046081543
    4. 'mini' → logprob: -6.233180046081543
    5. 'dist' → logprob: -7.108180046081543
    6. 'mn' → logprob: -7.233180046081543
    7. 'v' → logprob: -7.233180046081543
    8. '_min' → logprob: -8.108180046081543
    9. '   ' → logprob: -8.483180046081543
    10. 'best' → logprob: -8.483180046081543

Token 377: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.0010831828694790602
    2. ' u' → logprob: -7.3760833740234375
    3. 'i' → logprob: -7.7510833740234375
    4. ' ' → logprob: -11.876083374023438
    5. 'nv' → logprob: -12.001083374023438
    6. 'j' → logprob: -12.626083374023438
    7. 'v' → logprob: -13.001083374023438
    8. '```' → logprob: -13.251083374023438
    9. '   ' → logprob: -13.501083374023438
    10. ' i' → logprob: -14.001083374023438

Token 378: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0067363339476287365
    2. 'in' → logprob: -5.0067362785339355
    3. ' ' → logprob: -11.256736755371094
    4. ',' → logprob: -12.756736755371094
    5. 'n' → logprob: -13.006736755371094
    6. 'range' → logprob: -13.756736755371094
    7. '  ' → logprob: -15.131736755371094
    8. '	in' → logprob: -15.506736755371094
    9. '<|end|>' → logprob: -16.006736755371094
    10. 'In' → logprob: -16.131736755371094

Token 379: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.018150413408875465
    2. ' range' → logprob: -4.018150329589844
    3. ' ' → logprob: -15.518150329589844
    4. '	range' → logprob: -16.768150329589844
    5. '(range' → logprob: -16.893150329589844
    6. '   ' → logprob: -17.018150329589844
    7. 'ran' → logprob: -17.143150329589844
    8. 'rang' → logprob: -17.268150329589844
    9. 'r' → logprob: -17.893150329589844
    10. '  ' → logprob: -18.393150329589844

Token 380: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.5759454369544983
    2. 'n' → logprob: -0.8259454369544983
    3. ' n' → logprob: -12.825945854187012
    4. '	n' → logprob: -13.575945854187012
    5. '   ' → logprob: -13.950945854187012
    6. '(' → logprob: -14.075945854187012
    7. '
' → logprob: -15.700945854187012
    8. '(
' → logprob: -15.825945854187012
    9. ' (' → logprob: -17.075944900512695
    10. '(len' → logprob: -17.450944900512695

Token 381: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4744827449321747
    2. '):
' → logprob: -0.9744827747344971
    3. '):
' → logprob: -8.349482536315918
    4. ' ):' → logprob: -9.474482536315918
    5. ')' → logprob: -9.974482536315918
    6. ' ):
' → logprob: -10.599482536315918
    7. '   ' → logprob: -11.349482536315918
    8. '):

' → logprob: -12.349482536315918
    9. '       ' → logprob: -12.849482536315918
    10. ':' → logprob: -13.474482536315918

Token 382: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10265057533979416
    2. ' if' → logprob: -2.9776506423950195
    3. 'if' → logprob: -3.6026506423950195
    4. '<|end|>' → logprob: -4.7276506423950195
    5. '           ' → logprob: -4.8526506423950195
    6. '        
' → logprob: -7.1026506423950195
    7. '	       ' → logprob: -7.4776506423950195
    8. '<|end|>' → logprob: -7.9776506423950195
    9. '   ' → logprob: -8.47765064239502
    10. '0' → logprob: -8.72765064239502

Token 383: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.12301751971244812
    2. ' if' → logprob: -2.6230175495147705
    3. '           ' → logprob: -3.4980175495147705
    4. '       ' → logprob: -4.373017311096191
    5. '   ' → logprob: -8.623017311096191
    6. '<|end|>' → logprob: -10.873017311096191
    7. '            
' → logprob: -10.873017311096191
    8. '               ' → logprob: -11.248017311096191
    9. '	if' → logprob: -11.498017311096191
    10. '        
' → logprob: -11.623017311096191

Token 384: ' Parc' (ID: 68618)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0032260757870972157
    2. ' if' → logprob: -5.753226280212402
    3. '   ' → logprob: -10.628226280212402
    4. '       ' → logprob: -10.753226280212402
    5. '           ' → logprob: -13.253226280212402
    6. '
' → logprob: -14.878226280212402
    7. '	if' → logprob: -15.753226280212402
    8. 'If' → logprob: -16.128225326538086
    9. '```' → logprob: -16.378225326538086
    10. 'not' → logprob: -16.503225326538086

Token 385: 'ourt' (ID: 38600)
  Prédit: 'our'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'our' → logprob: -0.04647177457809448
    2. 'ours' → logprob: -3.2964718341827393
    3. 'ourt' → logprob: -4.92147159576416
    4. 'cour' → logprob: -7.17147159576416
    5. 'u' → logprob: -9.17147159576416
    6. 'court' → logprob: -9.79647159576416
    7. 'ou' → logprob: -10.17147159576416
    8. 'o' → logprob: -10.42147159576416
    9. 'ourse' → logprob: -10.79647159576416
    10. '```' → logprob: -11.17147159576416

Token 386: ' tous' (ID: 10688)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.9556043744087219
    2. '   ' → logprob: -1.2056043148040771
    3. ' n' → logprob: -2.455604314804077
    4. '(n' → logprob: -2.580604314804077
    5. '       ' → logprob: -3.080604314804077
    6. 'range' → logprob: -3.080604314804077
    7. 's' → logprob: -3.705604314804077
    8. ' range' → logprob: -4.580604553222656
    9. 'if' → logprob: -5.080604553222656
    10. ' ' → logprob: -5.830604553222656

Token 387: ' les' (ID: 1341)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -1.098098874092102
    2. 'n' → logprob: -1.973098874092102
    3. ' les' → logprob: -2.2230987548828125
    4. '   ' → logprob: -2.4730987548828125
    5. '(n' → logprob: -2.7230987548828125
    6. ' la' → logprob: -2.8480987548828125
    7. ' le' → logprob: -2.9730987548828125
    8. ' ' → logprob: -3.2230987548828125
    9. ' u' → logprob: -3.7230987548828125
    10. 'le' → logprob: -4.0980987548828125

Token 388: ' somm' (ID: 44830)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.011525800451636314
    2. 'u' → logprob: -4.886525630950928
    3. ' n' → logprob: -5.636525630950928
    4. ' u' → logprob: -9.136526107788086
    5. 'vertices' → logprob: -9.261526107788086
    6. 'v' → logprob: -9.511526107788086
    7. 'range' → logprob: -10.511526107788086
    8. ' range' → logprob: -11.261526107788086
    9. ' vertices' → logprob: -11.511526107788086
    10. '   ' → logprob: -12.011526107788086

Token 389: 'ets' (ID: 1719)
  Prédit: 'ets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ets' → logprob: -0.0008589350618422031
    2. 'et' → logprob: -7.125858783721924
    3. 'ètres' → logprob: -11.625859260559082
    4. 'êts' → logprob: -11.625859260559082
    5. '\xc2' → logprob: -11.875859260559082
    6. '```' → logprob: -12.625859260559082
    7. '{' → logprob: -13.000859260559082
    8. '#' → logprob: -13.125859260559082
    9. 'mets' → logprob: -13.125859260559082
    10. 'ètes' → logprob: -13.250859260559082

Token 390: ' du' (ID: 1462)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16164708137512207
    2. ':' → logprob: -2.036647081375122
    3. '           ' → logprob: -4.786646842956543
    4. ':
' → logprob: -5.411646842956543
    5. ' if' → logprob: -6.036646842956543
    6. '<|end|>' → logprob: -6.786646842956543
    7. '   ' → logprob: -7.661646842956543
    8. ' :' → logprob: -7.911646842956543
    9. '<|end|>' → logprob: -8.286646842956543
    10. '[' → logprob: -8.411646842956543

Token 391: ' grap' (ID: 60955)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0009467111667618155
    2. ' n' → logprob: -7.000946521759033
    3. 'range' → logprob: -10.500946998596191
    4. ' range' → logprob: -13.375946998596191
    5. 'graph' → logprob: -13.750946998596191
    6. '0' → logprob: -13.750946998596191
    7. 'len' → logprob: -14.375946998596191
    8. '   ' → logprob: -14.500946998596191
    9. '```' → logprob: -14.500946998596191
    10. '	n' → logprob: -14.625946998596191

Token 392: 'he' (ID: 273)
  Prédit: 'he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.735727846622467
    2. 'aphe' → logprob: -0.735727846622467
    3. 'phe' → logprob: -3.3607277870178223
    4. 'ph' → logprob: -5.485727787017822
    5. 'h' → logprob: -6.735727787017822
    6. 'rap' → logprob: -6.860727787017822
    7. 'aph' → logprob: -8.61072826385498
    8. 'p' → logprob: -8.86072826385498
    9. 'r' → logprob: -10.48572826385498
    10. 'ap' → logprob: -10.61072826385498

Token 393: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3896389305591583
    2. ':' → logprob: -1.264638900756836
    3. ' if' → logprob: -4.389638900756836
    4. '           ' → logprob: -4.764638900756836
    5. ':
' → logprob: -4.764638900756836
    6. ' :' → logprob: -5.639638900756836
    7. ' :
' → logprob: -6.639638900756836
    8. '        
' → logprob: -6.764638900756836
    9. '<|end|>' → logprob: -7.139638900756836
    10. ',' → logprob: -7.639638900756836

Token 394: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13716964423656464
    2. ' if' → logprob: -2.387169599533081
    3. '           ' → logprob: -3.887169599533081
    4. 'if' → logprob: -4.26216983795166
    5. '        
' → logprob: -7.38716983795166
    6. ' ' → logprob: -8.76216983795166
    7. '   ' → logprob: -9.38716983795166
    8. '0' → logprob: -9.63716983795166
    9. '[' → logprob: -9.63716983795166
    10. '    ' → logprob: -9.88716983795166

Token 395: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.20186857879161835
    2. ' if' → logprob: -1.7018685340881348
    3. '           ' → logprob: -7.826868534088135
    4. '               ' → logprob: -10.576869010925293
    5. '       ' → logprob: -10.576869010925293
    6. 'not' → logprob: -13.201869010925293
    7. '   ' → logprob: -13.326869010925293
    8. '	if' → logprob: -14.201869010925293
    9. ' not' → logprob: -14.826869010925293
    10. '0' → logprob: -15.951869010925293

Token 396: ' Si' (ID: 7832)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.6097115278244019
    2. ' not' → logprob: -1.1097115278244019
    3. 'if' → logprob: -2.3597116470336914
    4. ' if' → logprob: -3.9847116470336914
    5. '(not' → logprob: -4.984711647033691
    6. 'used' → logprob: -5.984711647033691
    7. ' used' → logprob: -6.734711647033691
    8. ' (' → logprob: -6.859711647033691
    9. 'dist' → logprob: -6.984711647033691
    10. ' dist' → logprob: -7.484711647033691

Token 397: ' '' (ID: 461)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.058875009417533875
    2. 'not' → logprob: -2.93387508392334
    3. ' used' → logprob: -6.30887508392334
    4. 'used' → logprob: -6.80887508392334
    5. ' dist' → logprob: -7.43387508392334
    6. '(not' → logprob: -8.43387508392334
    7. 'dist' → logprob: -8.68387508392334
    8. ' (' → logprob: -10.05887508392334
    9. ' ' → logprob: -11.05887508392334
    10. '(dist' → logprob: -11.55887508392334

Token 398: 'u' (ID: 84)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.016573501750826836
    2. ' not' → logprob: -4.516573429107666
    3. '(not' → logprob: -5.266573429107666
    4. 'used' → logprob: -8.391573905944824
    5. '   ' → logprob: -10.016573905944824
    6. 'dist' → logprob: -10.141573905944824
    7. '(dist' → logprob: -11.516573905944824
    8. '(' → logprob: -12.141573905944824
    9. ' (' → logprob: -12.391573905944824
    10. '	not' → logprob: -12.516573905944824

Token 399: ''' (ID: 6)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.5430437922477722
    2. ' >=' → logprob: -2.418043851852417
    3. ')' → logprob: -2.793043851852417
    4. '>=' → logprob: -2.918043851852417
    5. '!=' → logprob: -3.043043851852417
    6. ''' → logprob: -3.418043851852417
    7. '[u' → logprob: -3.418043851852417
    8. 'u' → logprob: -3.668043851852417
    9. ' u' → logprob: -3.793043851852417
    10. 'v' → logprob: -4.918043613433838

Token 400: ' n' (ID: 297)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.5955132842063904
    2. '!=' → logprob: -0.8455132842063904
    3. '>=' → logprob: -5.095513343811035
    4. ' >=' → logprob: -6.095513343811035
    5. '[u' → logprob: -6.220513343811035
    6. ' is' → logprob: -6.845513343811035
    7. '!=-' → logprob: -7.095513343811035
    8. ',' → logprob: -7.220513343811035
    9. 'v' → logprob: -7.220513343811035
    10. '<v' → logprob: -7.470513343811035

Token 401: ''est' (ID: 6616)
  Prédit: 'ot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ot' → logprob: -0.002618466503918171
    2. 'o' → logprob: -6.627618312835693
    3. '[u' → logprob: -8.127618789672852
    4. ''est' → logprob: -8.627618789672852
    5. 'on' → logprob: -8.877618789672852
    6. '[' → logprob: -8.877618789672852
    7. 'u' → logprob: -9.502618789672852
    8. 'not' → logprob: -9.752618789672852
    9. 'pas' → logprob: -10.002618789672852
    10. '[o' → logprob: -10.127618789672852

Token 402: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.06571386754512787
    2. ' pas' → logprob: -2.815713882446289
    3. 'not' → logprob: -5.940713882446289
    4. ' not' → logprob: -7.690713882446289
    5. '_pas' → logprob: -8.190713882446289
    6. 'Pas' → logprob: -8.940713882446289
    7. 'ot' → logprob: -9.440713882446289
    8. 'None' → logprob: -10.190713882446289
    9. 'u' → logprob: -11.065713882446289
    10. '[' → logprob: -11.315713882446289

Token 403: ' encore' (ID: 14043)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.18105725944042206
    2. ' used' → logprob: -1.8060572147369385
    3. ' utilisé' → logprob: -7.056057453155518
    4. '_used' → logprob: -8.80605697631836
    5. 'util' → logprob: -9.18105697631836
    6. 'None' → logprob: -9.55605697631836
    7. ' None' → logprob: -10.43105697631836
    8. '.used' → logprob: -10.80605697631836
    9. 'visited' → logprob: -11.18105697631836
    10. ' utilisés' → logprob: -11.68105697631836

Token 404: ' traité' (ID: 160836)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.001750030554831028
    2. ' used' → logprob: -6.3767499923706055
    3. ' utilisé' → logprob: -10.626749992370605
    4. 'util' → logprob: -11.001749992370605
    5. '_used' → logprob: -12.751749992370605
    6. 'visited' → logprob: -13.126749992370605
    7. 'use' → logprob: -13.626749992370605
    8. '.used' → logprob: -15.376749992370605
    9. 'processed' → logprob: -16.001750946044922
    10. '   ' → logprob: -16.001750946044922

Token 405: ' et' (ID: 859)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.38709041476249695
    2. 'and' → logprob: -1.1370904445648193
    3. ' et' → logprob: -9.137090682983398
    4. 'et' → logprob: -10.262090682983398
    5. ' or' → logprob: -10.762090682983398
    6. '   ' → logprob: -10.887090682983398
    7. ' ' → logprob: -11.262090682983398
    8. 'or' → logprob: -12.012090682983398
    9. ',' → logprob: -12.387090682983398
    10. '       ' → logprob: -12.762090682983398

Token 406: ' que' (ID: 661)
  Prédit: '(not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(not' → logprob: -0.2639857232570648
    2. '(dist' → logprob: -1.7639857530593872
    3. ' (' → logprob: -3.5139856338500977
    4. '(' → logprob: -3.6389856338500977
    5. 'not' → logprob: -6.138985633850098
    6. ' not' → logprob: -6.388985633850098
    7. 'used' → logprob: -8.513985633850098
    8. 'dist' → logprob: -8.513985633850098
    9. '(use' → logprob: -9.763985633850098
    10. '(distance' → logprob: -10.013985633850098

Token 407: ' sa' (ID: 880)
  Prédit: '(dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(dist' → logprob: -0.535101592540741
    2. '(not' → logprob: -1.2851016521453857
    3. 'dist' → logprob: -3.1601016521453857
    4. '(' → logprob: -3.4101016521453857
    5. ' (' → logprob: -3.5351016521453857
    6. ' dist' → logprob: -4.660101413726807
    7. 'used' → logprob: -4.910101413726807
    8. 'not' → logprob: -4.910101413726807
    9. ' not' → logprob: -5.035101413726807
    10. ' used' → logprob: -6.160101413726807

Token 408: ' distance' (ID: 9324)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.08039089292287827
    2. ' dist' → logprob: -2.5803909301757812
    3. 'distance' → logprob: -7.330390930175781
    4. ' not' → logprob: -8.955390930175781
    5. ' used' → logprob: -8.955390930175781
    6. ' <' → logprob: -9.205390930175781
    7. 'd' → logprob: -9.205390930175781
    8. 'used' → logprob: -9.580390930175781
    9. ' distance' → logprob: -9.830390930175781
    10. '_dist' → logprob: -9.955390930175781

Token 409: ' est' (ID: 893)
  Prédit: '[u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.0001649220648687333
    2. '[v' → logprob: -9.000164985656738
    3. 'u' → logprob: -10.875164985656738
    4. '<u' → logprob: -11.375164985656738
    5. '[' → logprob: -12.125164985656738
    6. 'dist' → logprob: -13.125164985656738
    7. '[
' → logprob: -14.750164985656738
    8. '```' → logprob: -14.875164985656738
    9. ' u' → logprob: -15.000164985656738
    10. ' <' → logprob: -15.125164985656738

Token 410: ' plus' (ID: 2932)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.07677436619997025
    2. 'dist' → logprob: -3.5767743587493896
    3. 'inf' → logprob: -4.326774597167969
    4. '<u' → logprob: -4.576774597167969
    5. 'moins' → logprob: -4.826774597167969
    6. ' <' → logprob: -5.076774597167969
    7. '<v' → logprob: -5.451774597167969
    8. ' moins' → logprob: -6.451774597167969
    9. ' inf' → logprob: -7.576774597167969
    10. 'min' → logprob: -8.076774597167969

Token 411: ' faible' (ID: 75786)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.44624629616737366
    2. '<' → logprob: -1.0712462663650513
    3. '<u' → logprob: -4.571246147155762
    4. '<v' → logprob: -6.321246147155762
    5. '<b' → logprob: -6.821246147155762
    6. ' faible' → logprob: -6.946246147155762
    7. 'u' → logprob: -7.946246147155762
    8. '<p' → logprob: -8.071246147155762
    9. 'v' → logprob: -8.071246147155762
    10. 'min' → logprob: -8.321246147155762

Token 412: ' que' (ID: 661)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.03016478195786476
    2. '<' → logprob: -3.7801647186279297
    3. '<u' → logprob: -6.65516471862793
    4. ',' → logprob: -6.78016471862793
    5. ' and' → logprob: -7.03016471862793
    6. '<v' → logprob: -7.40516471862793
    7. '   ' → logprob: -7.65516471862793
    8. ' ' → logprob: -7.65516471862793
    9. 'and' → logprob: -7.90516471862793
    10. ' et' → logprob: -8.40516471862793

Token 413: ' celle' (ID: 31790)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.550157904624939
    2. 'v' → logprob: -1.050157904624939
    3. ' dist' → logprob: -3.3001580238342285
    4. '-' → logprob: -4.0501580238342285
    5. 'INF' → logprob: -4.5501580238342285
    6. ' v' → logprob: -5.5501580238342285
    7. 'inf' → logprob: -6.6751580238342285
    8. ' -' → logprob: -6.9251580238342285
    9. '   ' → logprob: -8.17515754699707
    10. ' INF' → logprob: -8.30015754699707

Token 414: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.2238914966583252
    2. ' v' → logprob: -1.5988914966583252
    3. '<v' → logprob: -1.7238914966583252
    4. '[v' → logprob: -2.348891496658325
    5. 'v' → logprob: -2.723891496658325
    6. ' <' → logprob: -3.098891496658325
    7. '   ' → logprob: -3.598891496658325
    8. ' des' → logprob: -4.223891258239746
    9. ',' → logprob: -4.223891258239746
    10. '<' → logprob: -4.473891258239746

Token 415: ' '' (ID: 461)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0004343645414337516
    2. ' v' → logprob: -7.750434398651123
    3. 'dist' → logprob: -13.000433921813965
    4. '	v' → logprob: -14.250433921813965
    5. '   ' → logprob: -15.750433921813965
    6. '_v' → logprob: -15.875433921813965
    7. 'u' → logprob: -16.25043487548828
    8. ' ' → logprob: -16.37543487548828
    9. ')v' → logprob: -16.75043487548828
    10. '(v' → logprob: -17.12543487548828

Token 416: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.016368646174669266
    2. 'dist' → logprob: -4.266368865966797
    3. ' v' → logprob: -6.641368865966797
    4. 'u' → logprob: -7.516368865966797
    5. 'sys' → logprob: -9.266368865966797
    6. ' dist' → logprob: -9.641368865966797
    7. '(v' → logprob: -10.141368865966797
    8. ' (' → logprob: -10.266368865966797
    9. 'input' → logprob: -10.641368865966797
    10. '
' → logprob: -11.391368865966797

Token 417: '',' (ID: 787)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.03789068013429642
    2. 'or' → logprob: -3.912890672683716
    3. ''' → logprob: -4.412890911102295
    4. ' '' → logprob: -5.787890911102295
    5. 'v' → logprob: -7.662890911102295
    6. ''or' → logprob: -7.662890911102295
    7. ')' → logprob: -7.912890911102295
    8. ']' → logprob: -8.037890434265137
    9. ' ' → logprob: -8.412890434265137
    10. ' v' → logprob: -10.037890434265137

Token 418: ' on' (ID: 402)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -1.0056184530258179
    2. ' if' → logprob: -1.6306184530258179
    3. 'v' → logprob: -2.1306185722351074
    4. ' v' → logprob: -2.2556185722351074
    5. ' u' → logprob: -2.3806185722351074
    6. 'u' → logprob: -3.2556185722351074
    7. 'if' → logprob: -3.3806185722351074
    8. 'or' → logprob: -4.005618572235107
    9. ' (' → logprob: -4.255618572235107
    10. ' and' → logprob: -4.505618572235107

Token 419: ' met' (ID: 1421)
  Prédit: ' v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' v' → logprob: -1.0153809785842896
    2. ' u' → logprob: -1.1403809785842896
    3. 'v' → logprob: -1.6403809785842896
    4. 'u' → logprob: -2.140380859375
    5. ' ' → logprob: -6.140380859375
    6. ' None' → logprob: -6.265380859375
    7. ' ==' → logprob: -7.390380859375
    8. '==' → logprob: -8.140380859375
    9. 'None' → logprob: -8.515380859375
    10. ' -' → logprob: -8.890380859375

Token 420: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.31212785840034485
    2. 'à' → logprob: -1.8121278285980225
    3. 'v' → logprob: -2.8121278285980225
    4. ' v' → logprob: -4.062128067016602
    5. '    ' → logprob: -5.437128067016602
    6. '=v' → logprob: -5.437128067016602
    7. 'u' → logprob: -5.812128067016602
    8. ' ' → logprob: -6.062128067016602
    9. 'space' → logprob: -6.562128067016602
    10. '-à' → logprob: -6.687128067016602

Token 421: ' jour' (ID: 8379)
  Prédit: 'jour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jour' → logprob: -0.004895719699561596
    2. ' jour' → logprob: -5.3798956871032715
    3. '```' → logprob: -9.37989616394043
    4. 'jou' → logprob: -9.62989616394043
    5. 'jours' → logprob: -9.87989616394043
    6. 'u' → logprob: -10.12989616394043
    7. 'j' → logprob: -11.12989616394043
    8. 'Jour' → logprob: -11.75489616394043
    9. 'journ' → logprob: -12.00489616394043
    10. ' ' → logprob: -13.50489616394043

Token 422: ' '' (ID: 461)
  Prédit: ' v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.863990843296051
    2. 'v' → logprob: -1.1139907836914062
    3. 'u' → logprob: -1.9889907836914062
    4. ' u' → logprob: -2.4889907836914062
    5. ' or' → logprob: -4.363990783691406
    6. ' ' → logprob: -5.363990783691406
    7. ' if' → logprob: -6.238990783691406
    8. ' (' → logprob: -6.613990783691406
    9. ' and' → logprob: -6.988990783691406
    10. 'if' → logprob: -6.988990783691406

Token 423: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.05278852954506874
    2. ' v' → logprob: -3.177788496017456
    3. 'u' → logprob: -4.802788734436035
    4. ' u' → logprob: -6.802788734436035
    5. 'dist' → logprob: -8.177788734436035
    6. ' dist' → logprob: -9.677788734436035
    7. ' ' → logprob: -10.427788734436035
    8. '   ' → logprob: -11.302788734436035
    9. ''' → logprob: -12.177788734436035
    10. ')' → logprob: -12.302788734436035

Token 424: ''
' (ID: 2207)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.04158908501267433
    2. ''' → logprob: -3.6665890216827393
    3. 'or' → logprob: -5.041589260101318
    4. ' and' → logprob: -5.541589260101318
    5. ' '' → logprob: -5.666589260101318
    6. ''or' → logprob: -7.541589260101318
    7. '   ' → logprob: -9.04158878326416
    8. 'v' → logprob: -9.29158878326416
    9. '       ' → logprob: -9.54158878326416
    10. ')' → logprob: -9.54158878326416

Token 425: '           ' (ID: 352)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.5194907188415527
    2. ' v' → logprob: -1.3944907188415527
    3. 'v' → logprob: -2.2694907188415527
    4. 'or' → logprob: -3.7694907188415527
    5. ' None' → logprob: -5.019490718841553
    6. 'None' → logprob: -5.144490718841553
    7. ' ' → logprob: -5.269490718841553
    8. '   ' → logprob: -5.394490718841553
    9. ' if' → logprob: -5.894490718841553
    10. ' u' → logprob: -6.394490718841553

Token 426: ' if' (ID: 538)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.6984661221504211
    2. ' v' → logprob: -1.4484660625457764
    3. ' u' → logprob: -1.9484660625457764
    4. 'u' → logprob: -2.4484660625457764
    5. 'None' → logprob: -4.3234663009643555
    6. ' None' → logprob: -4.6984663009643555
    7. ' if' → logprob: -5.3234663009643555
    8. '   ' → logprob: -5.4484663009643555
    9. ' (' → logprob: -5.4484663009643555
    10. 'if' (adapté à ' if') → logprob: -7.0734663009643555

Token 427: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.20377783477306366
    2. 'not' → logprob: -1.70377779006958
    3. ' used' → logprob: -7.07877779006958
    4. 'used' → logprob: -7.32877779006958
    5. '(not' → logprob: -8.203778266906738
    6. ' v' → logprob: -8.578778266906738
    7. ' (' → logprob: -9.203778266906738
    8. ' dist' → logprob: -9.453778266906738
    9. ' u' → logprob: -9.828778266906738
    10. 'v' → logprob: -9.828778266906738

Token 428: ' used' (ID: 2061)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.03804171830415726
    2. ' used' → logprob: -3.288041830062866
    3. '.used' → logprob: -16.538042068481445
    4. ' ' → logprob: -16.788042068481445
    5. '_used' → logprob: -16.788042068481445
    6. '   ' → logprob: -18.163042068481445
    7. 'Used' → logprob: -18.288042068481445
    8. 'use' → logprob: -18.788042068481445
    9. '-used' → logprob: -18.913042068481445
    10. ' ' → logprob: -19.163042068481445

Token 429: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -1.0280383548888494e-06
    2. '[' → logprob: -14.625000953674316
    3. '[v' → logprob: -15.250000953674316
    4. ' [' → logprob: -15.500000953674316
    5. '(u' → logprob: -21.875001907348633
    6. 'u' → logprob: -22.000001907348633
    7. ' ' → logprob: -22.000001907348633
    8. ' u' → logprob: -22.375001907348633
    9. '[i' → logprob: -22.375001907348633
    10. '```' → logprob: -22.750001907348633

Token 430: ']' (ID: 60)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5768516063690186
    2. 'and' → logprob: -1.0768516063690186
    3. ']' → logprob: -2.3268516063690186
    4. ' ]' → logprob: -10.201851844787598
    5. ' ' → logprob: -11.201851844787598
    6. ')' → logprob: -11.701851844787598
    7. ' и' → logprob: -13.701851844787598
    8. '   ' → logprob: -13.826851844787598
    9. '']' → logprob: -14.201851844787598
    10. 'a' → logprob: -14.326851844787598

Token 431: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.20141859352588654
    2. 'and' → logprob: -1.7014186382293701
    3. ' ' → logprob: -12.70141887664795
    4. '   ' → logprob: -13.95141887664795
    5. ' и' → logprob: -14.57641887664795
    6. '    ' → logprob: -15.20141887664795
    7. '	and' → logprob: -15.45141887664795
    8. '  ' → logprob: -15.95141887664795
    9. 'a' → logprob: -16.826417922973633
    10. '       ' → logprob: -16.951417922973633

Token 432: ' (' (ID: 350)
  Prédit: '(dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dist' → logprob: -0.00656663766130805
    2. ' (' → logprob: -5.506566524505615
    3. '(v' → logprob: -6.006566524505615
    4. '(' → logprob: -11.381567001342773
    5. '(distance' → logprob: -12.381567001342773
    6. '   ' → logprob: -12.506567001342773
    7. '(diff' → logprob: -14.006567001342773
    8. '(div' → logprob: -14.381567001342773
    9. ' ' → logprob: -14.881567001342773
    10. '(d' → logprob: -15.006567001342773

Token 433: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.020041337236762047
    2. '(v' → logprob: -4.020041465759277
    3. ' v' → logprob: -6.520041465759277
    4. 'dist' → logprob: -7.895041465759277
    5. '(dist' → logprob: -11.145041465759277
    6. ' (' → logprob: -11.395041465759277
    7. '(' → logprob: -11.645041465759277
    8. '(
' → logprob: -12.770041465759277
    9. ' dist' → logprob: -13.020041465759277
    10. '   ' → logprob: -13.645041465759277

Token 434: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.02297755889594555
    2. '==-' → logprob: -4.272977352142334
    3. ' ==' → logprob: -4.772977352142334
    4. '==
' → logprob: -8.647977828979492
    5. '<' → logprob: -9.272977828979492
    6. '=' → logprob: -10.022977828979492
    7. '[' → logprob: -13.647977828979492
    8. ']==' → logprob: -14.397977828979492
    9. 'is' → logprob: -14.397977828979492
    10. '   ' → logprob: -14.522977828979492

Token 435: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -3.128163257315464e-07
    2. ' -' → logprob: -15.5
    3. '   ' → logprob: -19.375
    4. '−' → logprob: -20.625
    5. '```' → logprob: -21.0
    6. '  ' → logprob: -22.25
    7. ' ' → logprob: -22.75
    8. '           ' → logprob: -23.5
    9. '       ' → logprob: -23.75
    10. '-
' → logprob: -23.875

Token 436: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.054500666621607e-06
    2. ' ' → logprob: -12.75000286102295
    3. '

' → logprob: -16.875003814697266
    4. '
' → logprob: -16.937503814697266
    5. '１' → logprob: -17.625003814697266
    6. ')' → logprob: -18.312503814697266
    7. '१' → logprob: -18.437503814697266
    8. '১' → logprob: -18.687503814697266
    9. '۱' → logprob: -18.750003814697266
    10. '
' → logprob: -18.750003814697266

Token 437: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.251944363117218
    2. 'or' → logprob: -1.5019443035125732
    3. ' ' → logprob: -12.126944541931152
    4. '    ' → logprob: -12.501944541931152
    5. '        ' → logprob: -13.626944541931152
    6. '       ' → logprob: -14.126944541931152
    7. '   ' → logprob: -14.376944541931152
    8. '	or' → logprob: -14.501944541931152
    9. '           ' → logprob: -14.626944541931152
    10. '               ' → logprob: -14.626944541931152

Token 438: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.023249322548508644
    2. ' dist' → logprob: -3.773249387741089
    3. '   ' → logprob: -13.148249626159668
    4. '	dist' → logprob: -13.773249626159668
    5. '           ' → logprob: -15.148249626159668
    6. '               ' → logprob: -15.773249626159668
    7. ' ' → logprob: -15.773249626159668
    8. '       ' → logprob: -16.39824867248535
    9. '(dist' → logprob: -16.89824867248535
    10. '    ' → logprob: -16.89824867248535

Token 439: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -1.981667537620524e-06
    2. 'u' → logprob: -14.000001907348633
    3. '[' → logprob: -14.250001907348633
    4. ' [' → logprob: -15.750001907348633
    5. '[v' → logprob: -16.375001907348633
    6. '
' → logprob: -17.125001907348633
    7. '<u' → logprob: -17.250001907348633
    8. ' u' → logprob: -17.375001907348633
    9. '```' → logprob: -17.500001907348633
    10. '[
' → logprob: -18.125001907348633

Token 440: ']' (ID: 60)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.08532263338565826
    2. ' <' → logprob: -2.710322618484497
    3. '<u' → logprob: -4.960322856903076
    4. '[u' → logprob: -5.710322856903076
    5. ']' → logprob: -5.835322856903076
    6. '<v' → logprob: -7.210322856903076
    7. '[' → logprob: -7.460322856903076
    8. ']<' → logprob: -7.460322856903076
    9. ' ' → logprob: -9.835322380065918
    10. ' u' → logprob: -10.585322380065918

Token 441: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.18006467819213867
    2. ' <' → logprob: -1.8050646781921387
    3. '<u' → logprob: -8.680065155029297
    4. '[' → logprob: -9.305065155029297
    5. '<v' → logprob: -10.930065155029297
    6. '[u' → logprob: -11.430065155029297
    7. ' ' → logprob: -11.430065155029297
    8. 'u' → logprob: -13.305065155029297
    9. ')<' → logprob: -13.305065155029297
    10. ' u' → logprob: -13.430065155029297

Token 442: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.011048289015889168
    2. ' dist' → logprob: -4.511048316955566
    3. '	dist' → logprob: -15.136048316955566
    4. '_dist' → logprob: -15.761048316955566
    5. '.dist' → logprob: -17.26104736328125
    6. '(dist' → logprob: -17.38604736328125
    7. ' ' → logprob: -17.51104736328125
    8. 'Dist' → logprob: -18.26104736328125
    9. '   ' → logprob: -18.38604736328125
    10. 'distance' → logprob: -18.51104736328125

Token 443: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -9.968312951968983e-06
    2. 'v' → logprob: -12.000009536743164
    3. '[u' → logprob: -12.500009536743164
    4. '[' → logprob: -16.375009536743164
    5. ' v' → logprob: -19.625009536743164
    6. '	v' → logprob: -20.375009536743164
    7. ')v' → logprob: -21.000009536743164
    8. '[
' → logprob: -21.125009536743164
    9. ' [' → logprob: -21.250009536743164
    10. '
' → logprob: -22.375009536743164

Token 444: ']):
' (ID: 51989)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0683324784040451
    2. ']):' → logprob: -3.1933324337005615
    3. '):
' → logprob: -4.443332672119141
    4. ')' → logprob: -4.693332672119141
    5. ' ):' → logprob: -6.443332672119141
    6. ']):
' → logprob: -6.693332672119141
    7. '[u' → logprob: -7.193332672119141
    8. '])' → logprob: -9.06833267211914
    9. ')):' → logprob: -9.94333267211914
    10. '>):' → logprob: -10.19333267211914

Token 445: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.1639126539230347
    2. '       ' → logprob: -1.2889126539230347
    3. 'v' → logprob: -1.7889126539230347
    4. '               ' → logprob: -2.038912773132324
    5. '	       ' → logprob: -3.038912773132324
    6. ' v' → logprob: -3.913912773132324
    7. '	v' → logprob: -4.538912773132324
    8. '
' → logprob: -4.788912773132324
    9. '            
' → logprob: -5.413912773132324
    10. '		       ' → logprob: -5.413912773132324

Token 446: ' v' (ID: 323)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.1725480556488037
    2. 'v' (adapté à ' v') → logprob: -2.1725480556488037
    3. ' u' → logprob: -3.1725480556488037
    4. ' v' → logprob: -5.922548294067383
    5. '	u' → logprob: -11.797548294067383
    6. '               ' → logprob: -12.422548294067383
    7. ' 
' → logprob: -12.922548294067383
    8. '                
' → logprob: -12.922548294067383
    9. '	v' → logprob: -13.297548294067383
    10. '                ' → logprob: -14.797548294067383

Token 447: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16354945302009583
    2. '=' → logprob: -1.9135494232177734
    3. '=u' → logprob: -5.788549423217773
    4. '=v' → logprob: -8.288549423217773
    5. '[u' → logprob: -13.288549423217773
    6. ' u' → logprob: -13.538549423217773
    7. 'u' → logprob: -13.788549423217773
    8. ' ' → logprob: -14.788549423217773
    9. '=user' → logprob: -15.288549423217773
    10. ' =
' → logprob: -15.288549423217773

Token 448: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.0067167943343520164
    2. ' u' → logprob: -5.006716728210449
    3. '	u' → logprob: -13.50671672821045
    4. '_u' → logprob: -19.381717681884766
    5. ' ' → logprob: -19.506717681884766
    6. '   ' → logprob: -19.881717681884766
    7. '[u' → logprob: -20.256717681884766
    8. '*u' → logprob: -20.756717681884766
    9. '
' → logprob: -21.381717681884766
    10. 'у' → logprob: -21.631717681884766

Token 449: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 450: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07180223613977432
    2. '
' → logprob: -3.0718021392822266
    3. '        
' → logprob: -4.071802139282227
    4. '<|end|>' → logprob: -6.196802139282227
    5. '		
' → logprob: -6.821802139282227
    6. '  
' → logprob: -7.571802139282227
    7. '        ' → logprob: -8.321802139282227
    8. '    
' → logprob: -8.446802139282227
    9. '	' → logprob: -8.446802139282227
    10. ' 
' → logprob: -8.696802139282227

Token 451: ' '' (ID: 461)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.3647269308567047
    2. ' v' → logprob: -1.8647269010543823
    3. 'u' → logprob: -2.364727020263672
    4. ' u' → logprob: -2.989727020263672
    5. '<|end|>' → logprob: -5.489727020263672
    6. '	v' → logprob: -7.489727020263672
    7. ' ' → logprob: -7.864727020263672
    8. ')v' → logprob: -8.614727020263672
    9. '        ' → logprob: -8.739727020263672
    10. '       ' → logprob: -8.989727020263672

Token 452: 'v' (ID: 85)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.0448947474360466
    2. 'v' → logprob: -3.1698946952819824
    3. ' u' → logprob: -6.294894695281982
    4. ' v' → logprob: -10.29489517211914
    5. ')' → logprob: -12.41989517211914
    6. '	u' → logprob: -12.66989517211914
    7. ')v' → logprob: -13.16989517211914
    8. ' ' → logprob: -13.66989517211914
    9. '[u' → logprob: -14.54489517211914
    10. '=u' → logprob: -14.54489517211914

Token 453: ''' (ID: 6)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3883512020111084
    2. '=' → logprob: -1.1383512020111084
    3. '=v' → logprob: -7.3883514404296875
    4. ')' → logprob: -8.138351440429688
    5. ']' → logprob: -8.638351440429688
    6. '<|end|>' → logprob: -8.888351440429688
    7. ' ' → logprob: -9.013351440429688
    8. '=u' → logprob: -9.263351440429688
    9. ']=' → logprob: -11.638351440429688
    10. '   ' → logprob: -12.763351440429688

Token 454: ' pointe' (ID: 99839)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20514126121997833
    2. ' =' → logprob: -1.705141305923462
    3. '<|end|>' → logprob: -5.705141067504883
    4. ' ' → logprob: -8.580141067504883
    5. '=v' → logprob: -8.830141067504883
    6. '=u' → logprob: -10.580141067504883
    7. ')' → logprob: -11.580141067504883
    8. '<|end|>' → logprob: -11.830141067504883
    9. '=user' → logprob: -12.830141067504883
    10. ']' → logprob: -13.580141067504883

Token 455: ' désormais' (ID: 59708)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3245319128036499
    2. ' =' → logprob: -1.82453191280365
    3. '=u' → logprob: -3.0745320320129395
    4. ' à' → logprob: -4.0745320320129395
    5. '=v' → logprob: -4.3245320320129395
    6. 'v' → logprob: -4.3245320320129395
    7. ' vers' → logprob: -4.6995320320129395
    8. 'u' → logprob: -5.3245320320129395
    9. ' ' → logprob: -5.8245320320129395
    10. 'vers' → logprob: -6.5745320320129395

Token 456: ' sur' (ID: 1512)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.10416866093873978
    2. ' u' → logprob: -2.354168653488159
    3. ' à' → logprob: -6.354168891906738
    4. ' ' → logprob: -7.104168891906738
    5. 'to' → logprob: -8.354168891906738
    6. 'à' → logprob: -8.604168891906738
    7. '=u' → logprob: -8.604168891906738
    8. ' to' → logprob: -8.729168891906738
    9. '<|end|>' → logprob: -8.979168891906738
    10. '[u' → logprob: -9.104168891906738

Token 457: ' le' (ID: 505)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.014164566993713379
    2. ' u' → logprob: -4.264164447784424
    3. '	u' → logprob: -13.764164924621582
    4. ' ' → logprob: -17.514163970947266
    5. '<u' → logprob: -17.514163970947266
    6. ' ' → logprob: -17.639163970947266
    7. '[u' → logprob: -17.764163970947266
    8. '   ' → logprob: -17.764163970947266
    9. '_u' → logprob: -18.764163970947266
    10. '*u' → logprob: -19.764163970947266

Token 458: ' sommet' (ID: 130502)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.0017058902885764837
    2. ' u' → logprob: -6.376706123352051
    3. ' ' → logprob: -14.00170612335205
    4. '	u' → logprob: -14.62670612335205
    5. '_u' → logprob: -15.25170612335205
    6. ' ' → logprob: -15.37670612335205
    7. '[u' → logprob: -15.62670612335205
    8. 'util' → logprob: -15.75170612335205
    9. '_' → logprob: -15.75170612335205
    10. 'ut' → logprob: -15.87670612335205

Token 459: ' atte' (ID: 43312)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.028381360694766045
    2. '<|end|>' → logprob: -4.27838134765625
    3. '[u' → logprob: -5.02838134765625
    4. ' u' → logprob: -5.27838134765625
    5. ' ' → logprob: -7.15338134765625
    6. 'v' → logprob: -7.52838134765625
    7. '(u' → logprob: -8.65338134765625
    8. 's' → logprob: -9.02838134765625
    9. '=u' → logprob: -9.65338134765625
    10. '	u' → logprob: -9.65338134765625

Token 460: 'ign' (ID: 733)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.17604097723960876
    2. 'ign' → logprob: -1.9260410070419312
    3. 'ind' → logprob: -4.426041126251221
    4. 'indre' → logprob: -6.426041126251221
    5. 'inte' → logprob: -6.676041126251221
    6. 'ignant' → logprob: -8.051040649414062
    7. 'in' → logprob: -8.551040649414062
    8. 'indu' → logprob: -9.301040649414062
    9. 'ints' → logprob: -9.301040649414062
    10. 'ignent' → logprob: -10.551040649414062

Token 461: 'able' (ID: 562)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.7845679521560669
    2. 'd' → logprob: -1.784567952156067
    3. 'able' → logprob: -1.784567952156067
    4. 'nt' → logprob: -2.7845678329467773
    5. 'gn' → logprob: -3.1595678329467773
    6. 'n' → logprob: -3.5345678329467773
    7. 'g' → logprob: -4.034567832946777
    8. 'nable' → logprob: -4.034567832946777
    9. 'v' → logprob: -4.534567832946777
    10. 'ble' → logprob: -5.034567832946777

Token 462: ' au' (ID: 2791)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 463: ' coût' (ID: 73109)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.0038599353283643723
    2. ' u' → logprob: -5.628859996795654
    3. 'v' → logprob: -8.503859519958496
    4. '[u' → logprob: -10.378859519958496
    5. '   ' → logprob: -11.628859519958496
    6. ' ' → logprob: -12.628859519958496
    7. ' v' → logprob: -12.628859519958496
    8. '       ' → logprob: -13.253859519958496
    9. '               ' → logprob: -13.753859519958496
    10. '	u' → logprob: -13.878859519958496

Token 464: ' minimum' (ID: 11085)
  Prédit: ' moindre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' moindre' → logprob: -0.26994141936302185
    2. 'u' → logprob: -2.2699413299560547
    3. ' plus' → logprob: -2.5199413299560547
    4. ' u' → logprob: -4.019941329956055
    5. 'plus' → logprob: -4.269941329956055
    6. ' le' → logprob: -4.769941329956055
    7. ' minimal' → logprob: -5.519941329956055
    8. 'moins' → logprob: -6.519941329956055
    9. ' v' → logprob: -6.644941329956055
    10. ' inférieur' → logprob: -6.644941329956055

Token 465: ' non' (ID: 2893)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10198003798723221
    2. '        
' → logprob: -3.476979970932007
    3. '<|end|>' → logprob: -3.476979970932007
    4. '
' → logprob: -4.726980209350586
    5. ' used' → logprob: -5.226980209350586
    6. 'used' → logprob: -5.976980209350586
    7. '   ' → logprob: -5.976980209350586
    8. '    
' → logprob: -5.976980209350586
    9. '		
' → logprob: -6.101980209350586
    10. '  
' → logprob: -6.226980209350586

Token 466: ' encore' (ID: 14043)
  Prédit: ' utilisé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' utilisé' → logprob: -1.0935713052749634
    2. ' traité' → logprob: -1.2185713052749634
    3. 'util' → logprob: -1.8435713052749634
    4. 'trait' → logprob: -2.343571186065674
    5. 'v' → logprob: -3.093571186065674
    6. 'used' → logprob: -3.218571186065674
    7. ' used' → logprob: -5.218571186065674
    8. 'u' → logprob: -5.343571186065674
    9. 'None' → logprob: -5.468571186065674
    10. 'tra' → logprob: -6.218571186065674

Token 467: ' traité' (ID: 160836)
  Prédit: 'trait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'trait' → logprob: -0.2713562250137329
    2. 'util' → logprob: -2.5213561058044434
    3. 'used' → logprob: -2.5213561058044434
    4. ' traité' → logprob: -2.8963561058044434
    5. 'processed' → logprob: -4.646356105804443
    6. 'tra' → logprob: -5.396356105804443
    7. ' utilisé' → logprob: -5.896356105804443
    8. 'visited' → logprob: -6.646356105804443
    9. 'mar' → logprob: -6.771356105804443
    10. 'treated' → logprob: -7.021356105804443

Token 468: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 469: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 470: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5571753978729248
    2. 'if' (adapté à ' if') → logprob: -1.0571753978729248
    3. ' if' → logprob: -2.557175397872925
    4. '   ' → logprob: -6.432175636291504
    5. '        
' → logprob: -8.307175636291504
    6. '	if' → logprob: -8.807175636291504
    7. '
' → logprob: -9.807175636291504
    8. '	' → logprob: -10.182175636291504
    9. ' ' → logprob: -10.307175636291504
    10. '    
' → logprob: -11.057175636291504

Token 471: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.00671809446066618
    2. ' v' → logprob: -5.006718158721924
    3. '	v' → logprob: -13.381717681884766
    4. '(v' → logprob: -14.756717681884766
    5. '   ' → logprob: -15.381717681884766
    6. ' ' → logprob: -15.381717681884766
    7. ' ' → logprob: -16.131717681884766
    8. '  ' → logprob: -16.381717681884766
    9. 'used' → logprob: -17.131717681884766
    10. '$v' → logprob: -17.256717681884766

Token 472: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.7149451375007629
    2. ' ==' → logprob: -0.7149451375007629
    3. '==-' → logprob: -3.839945077896118
    4. '<' → logprob: -10.714944839477539
    5. '=' → logprob: -10.714944839477539
    6. ')==' → logprob: -11.714944839477539
    7. ')' → logprob: -11.964944839477539
    8. '==
' → logprob: -12.464944839477539
    9. ' =' → logprob: -13.839944839477539
    10. ' ' → logprob: -13.964944839477539

Token 473: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.306760805164231e-05
    2. ' -' → logprob: -11.25001335144043
    3. '   ' → logprob: -20.25001335144043
    4. ' ' → logprob: -21.50001335144043
    5. '-v' → logprob: -22.25001335144043
    6. '```' → logprob: -22.25001335144043
    7. '  ' → logprob: -23.12501335144043
    8. '−' → logprob: -23.37501335144043
    9. '\-' → logprob: -24.37501335144043
    10. '-​' → logprob: -24.75001335144043

Token 474: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.625004768371582
    3. '-' → logprob: -14.375004768371582
    4. '```' → logprob: -15.000004768371582
    5. '2' → logprob: -15.687504768371582
    6. ' -' → logprob: -16.5625057220459
    7. '   ' → logprob: -17.3750057220459
    8. '
' → logprob: -17.5000057220459
    9. '`' → logprob: -17.6250057220459
    10. '<|end|>' → logprob: -17.6875057220459

Token 475: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.026771269738674164
    2. '       ' → logprob: -4.151771068572998
    3. ':
' → logprob: -4.651771068572998
    4. '           ' → logprob: -7.026771068572998
    5. '   ' → logprob: -8.526771545410156
    6. ' :' → logprob: -11.026771545410156
    7. '	' → logprob: -12.776771545410156
    8. '               ' → logprob: -12.776771545410156
    9. ':return' → logprob: -12.776771545410156
    10. '	   ' → logprob: -12.901771545410156

Token 476: ' ' (ID: 220)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00031389365904033184
    2. ' break' → logprob: -8.500313758850098
    3. '       ' → logprob: -9.250313758850098
    4. '		' → logprob: -12.250313758850098
    5. 'break' → logprob: -12.375313758850098
    6. '               ' → logprob: -14.000313758850098
    7. '\n' → logprob: -14.250313758850098
    8. '          ' → logprob: -14.250313758850098
    9. '	break' → logprob: -14.500313758850098
    10. '
' → logprob: -14.500313758850098

Token 477: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05303240939974785
    2. '           ' → logprob: -3.053032398223877
    3. 'break' → logprob: -5.803032398223877
    4. ' break' → logprob: -6.803032398223877
    5. '   ' → logprob: -8.303032875061035
    6. '	break' → logprob: -10.678032875061035
    7. '               ' → logprob: -11.178032875061035
    8. '      ' → logprob: -12.803032875061035
    9. '		' → logprob: -12.928032875061035
    10. '	' → logprob: -13.053032875061035

Token 478: ' Si' (ID: 7832)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.069118618965149
    2. '       ' → logprob: -1.194118618965149
    3. 'break' → logprob: -1.569118618965149
    4. ' break' → logprob: -1.944118618965149
    5. '	break' → logprob: -6.569118499755859
    6. '   ' → logprob: -7.694118499755859
    7. '               ' → logprob: -8.06911849975586
    8. ' ' → logprob: -9.81911849975586
    9. '		' → logprob: -10.31911849975586
    10. '_break' → logprob: -10.44411849975586

Token 479: ' aucun' (ID: 41678)
  Prédit: ' v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.5553953051567078
    2. 'v' → logprob: -0.9303953051567078
    3. ' used' → logprob: -3.6803953647613525
    4. 'used' → logprob: -5.055395126342773
    5. ' ' → logprob: -8.930395126342773
    6. ' not' → logprob: -11.430395126342773
    7. '	v' → logprob: -11.680395126342773
    8. '(v' → logprob: -12.805395126342773
    9. ' utilisé' → logprob: -13.305395126342773
    10. '_v' → logprob: -13.430395126342773

Token 480: ' sommet' (ID: 130502)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.5511390566825867
    2. ' v' → logprob: -1.0511391162872314
    3. ' ' → logprob: -4.301138877868652
    4. ' valid' → logprob: -4.801138877868652
    5. 'used' → logprob: -4.926138877868652
    6. ' used' → logprob: -5.176138877868652
    7. 'possible' → logprob: -5.176138877868652
    8. 'u' → logprob: -5.426138877868652
    9. 'not' → logprob: -5.551138877868652
    10. ' not' → logprob: -6.051138877868652

Token 481: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.07157376408576965
    2. ' n' → logprob: -3.4465737342834473
    3. 'à' → logprob: -3.4465737342834473
    4. ' à' → logprob: -5.696573734283447
    5. ' ' → logprob: -7.821573734283447
    6. 'accessible' → logprob: -7.946573734283447
    7. 'rest' → logprob: -8.321574211120605
    8. ' supplémentaire' → logprob: -8.446574211120605
    9. ' disponible' → logprob: -9.571574211120605
    10. ' accessible' → logprob: -9.571574211120605

Token 482: ''est' (ID: 6616)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.1332461833953857
    2. 'n' → logprob: -1.1332461833953857
    3. 'à' → logprob: -1.8832461833953857
    4. ' n' → logprob: -2.7582461833953857
    5. 'est' → logprob: -3.2582461833953857
    6. 'u' → logprob: -3.6332461833953857
    7. ''est' → logprob: -3.8832461833953857
    8. ' trouvé' → logprob: -4.508246421813965
    9. ' a' → logprob: -4.758246421813965
    10. 'v' → logprob: -5.008246421813965

Token 483: ' disponible' (ID: 32165)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.700358510017395
    2. ' trouvé' → logprob: -1.200358510017395
    3. 'tr' → logprob: -2.0753583908081055
    4. ' trouv' → logprob: -3.9503583908081055
    5. 'accessible' → logprob: -4.0753583908081055
    6. 'à' → logprob: -4.3253583908081055
    7. 'v' → logprob: -5.7003583908081055
    8. 'sé' → logprob: -5.7003583908081055
    9. ' plus' → logprob: -5.8253583908081055
    10. ' sélection' → logprob: -6.2003583908081055

Token 484: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.25403398275375366
    2. '       ' → logprob: -1.8790340423583984
    3. '           ' → logprob: -3.1290340423583984
    4. '   ' → logprob: -4.504034042358398
    5. ',' → logprob: -5.254034042358398
    6. ' :' → logprob: -5.879034042358398
    7. ':
' → logprob: -5.879034042358398
    8. '               ' → logprob: -5.879034042358398
    9. ' ' → logprob: -7.379034042358398
    10. '     ' → logprob: -7.379034042358398

Token 485: ' sortie' (ID: 52761)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3714953064918518
    2. '           ' → logprob: -1.246495246887207
    3. ' break' → logprob: -4.121495246887207
    4. 'break' → logprob: -5.496495246887207
    5. '   ' → logprob: -6.496495246887207
    6. '	break' → logprob: -7.496495246887207
    7. '               ' → logprob: -8.871495246887207
    8. ' ' → logprob: -9.621495246887207
    9. ' ' → logprob: -9.871495246887207
    10. '_break' → logprob: -10.621495246887207

Token 486: ' de' (ID: 334)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2618784010410309
    2. '           ' → logprob: -2.136878490447998
    3. '               ' → logprob: -3.636878490447998
    4. ' break' → logprob: -4.136878490447998
    5. 'break' → logprob: -4.261878490447998
    6. '        ' → logprob: -4.636878490447998
    7. '   ' → logprob: -4.886878490447998
    8. '	break' → logprob: -5.011878490447998
    9. ' ' → logprob: -5.136878490447998
    10. '    ' → logprob: -5.386878490447998

Token 487: ' la' (ID: 557)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.24619096517562866
    2. ' la' → logprob: -1.7461910247802734
    3. ' break' → logprob: -3.7461910247802734
    4. 'la' → logprob: -3.9961910247802734
    5. ' ' → logprob: -7.496191024780273
    6. ' the' → logprob: -7.871191024780273
    7. 'l' → logprob: -8.621191024780273
    8. 'b' → logprob: -8.746191024780273
    9. 'the' → logprob: -8.871191024780273
    10. 'while' → logprob: -9.371191024780273

Token 488: ' boucle' (ID: 174211)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.041045647114515305
    2. 'bou' → logprob: -3.291045665740967
    3. 'while' → logprob: -6.041045665740967
    4. 'loop' → logprob: -8.041045188903809
    5. ' boucle' → logprob: -8.791045188903809
    6. 'b' → logprob: -9.291045188903809
    7. 'for' → logprob: -10.416045188903809
    8. ' break' → logprob: -11.791045188903809
    9. '```' → logprob: -12.416045188903809
    10. 'br' → logprob: -13.166045188903809

Token 489: ' principale' (ID: 68926)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10040819644927979
    2. '           ' → logprob: -2.3504080772399902
    3. '               ' → logprob: -9.350408554077148
    4. '   ' → logprob: -10.850408554077148
    5. '\n' → logprob: -10.975408554077148
    6. '
' → logprob: -10.975408554077148
    7. ' break' → logprob: -11.600408554077148
    8. '		' → logprob: -11.725408554077148
    9. '        
' → logprob: -11.725408554077148
    10. '        ' → logprob: -11.975408554077148

Token 490: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.059088531881570816
    2. '           ' → logprob: -2.9340884685516357
    3. ':' → logprob: -5.684088706970215
    4. '               ' → logprob: -8.184088706970215
    5. '\n' → logprob: -8.309088706970215
    6. ':
' → logprob: -9.559088706970215
    7. '   ' → logprob: -9.559088706970215
    8. ' break' → logprob: -10.434088706970215
    9. '	' → logprob: -11.184088706970215
    10. '	break' → logprob: -11.559088706970215

Token 491: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003367469646036625
    2. '           ' → logprob: -5.7533674240112305
    3. '	' → logprob: -9.62836742401123
    4. '               ' → logprob: -10.00336742401123
    5. '   ' → logprob: -10.75336742401123
    6. ' break' → logprob: -11.25336742401123
    7. ' ' → logprob: -11.37836742401123
    8. '        
' → logprob: -11.87836742401123
    9. '		' → logprob: -12.50336742401123
    10. '      ' → logprob: -12.50336742401123

Token 492: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.13701613247394562
    2. '       ' → logprob: -2.1370160579681396
    3. ' break' → logprob: -4.887016296386719
    4. '	break' → logprob: -6.012016296386719
    5. '	' → logprob: -11.012016296386719
    6. '   ' → logprob: -11.137016296386719
    7. '           ' → logprob: -11.887016296386719
    8. '_break' → logprob: -13.262016296386719
    9. '               ' → logprob: -13.762016296386719
    10. '```' → logprob: -14.387016296386719

Token 493: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.39754518866539
    2. '       ' → logprob: -1.8975452184677124
    3. '<|end|>' → logprob: -2.647545099258423
    4. '   ' → logprob: -3.272545099258423
    5. '    
' → logprob: -3.647545099258423
    6. '        
' → logprob: -3.772545099258423
    7. '  
' → logprob: -4.772545337677002
    8. '		
' → logprob: -5.397545337677002
    9. '	' → logprob: -6.397545337677002
    10. '
' → logprob: -7.147545337677002

Token 494: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3748539090156555
    2. '   ' → logprob: -1.6248538494110107
    3. ' used' → logprob: -2.6248538494110107
    4. 'used' → logprob: -3.2498538494110107
    5. '        
' → logprob: -6.37485408782959
    6. '    
' → logprob: -7.24985408782959
    7. '<|end|>' → logprob: -7.74985408782959
    8. '```' → logprob: -8.12485408782959
    9. '
' → logprob: -8.24985408782959
    10. '  
' → logprob: -8.99985408782959

Token 495: ' used' (ID: 2061)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' (adapté à ' used') → logprob: -0.26491937041282654
    2. '   ' → logprob: -1.889919400215149
    3. ' used' → logprob: -2.5149192810058594
    4. '       ' → logprob: -8.01491928100586
    5. '	' → logprob: -8.38991928100586
    6. '```' → logprob: -9.51491928100586
    7. '    
' → logprob: -10.26491928100586
    8. '   ' → logprob: -10.63991928100586
    9. '.used' → logprob: -10.76491928100586
    10. '_used' → logprob: -11.01491928100586

Token 496: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -16.125
    3. ' [' → logprob: -17.125
    4. '[u' → logprob: -17.75
    5. 'v' → logprob: -19.75
    6. '```' → logprob: -20.125
    7. '[t' → logprob: -21.5
    8. '[s' → logprob: -21.875
    9. '	v' → logprob: -22.25
    10. '[V' → logprob: -22.25

Token 497: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -3.531315314830863e-06
    2. ']=' → logprob: -12.625003814697266
    3. ' ]' → logprob: -15.375003814697266
    4. ']
' → logprob: -19.125003814697266
    5. '=' → logprob: -19.625003814697266
    6. '']' → logprob: -20.250003814697266
    7. ' =' → logprob: -20.625003814697266
    8. '   ' → logprob: -21.000003814697266
    9. '[' → logprob: -21.000003814697266
    10. ' ' → logprob: -21.250003814697266

Token 498: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02325083687901497
    2. ' =' → logprob: -3.7732508182525635
    3. '=True' → logprob: -12.148250579833984
    4. ']' → logprob: -16.773250579833984
    5. ' ' → logprob: -17.398250579833984
    6. ']=' → logprob: -17.898250579833984
    7. '[' → logprob: -17.898250579833984
    8. '＝' → logprob: -18.398250579833984
    9. ')' → logprob: -18.523250579833984
    10. '.=' → logprob: -19.148250579833984

Token 499: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0001584850688232109
    2. ' True' → logprob: -8.750158309936523
    3. 'Tr' → logprob: -20.125158309936523
    4. '(True' → logprob: -20.375158309936523
    5. '=True' → logprob: -20.750158309936523
    6. 'T' → logprob: -23.250158309936523
    7. '[' → logprob: -23.375158309936523
    8. '1' → logprob: -23.375158309936523
    9. '.True' → logprob: -23.500158309936523
    10. 'true' → logprob: -23.500158309936523

Token 500: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3874719440937042
    2. '<|end|>' → logprob: -1.3874719142913818
    3. ' 
' → logprob: -4.512472152709961
    4. '  
' → logprob: -4.512472152709961
    5. '   ' → logprob: -4.637472152709961
    6. ' for' → logprob: -4.762472152709961
    7. '       ' → logprob: -5.012472152709961
    8. '    
' → logprob: -5.012472152709961
    9. '<|end|>' → logprob: -5.012472152709961
    10. '\n' → logprob: -5.762472152709961

Token 501: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9084277153015137
    2. '
' → logprob: -1.2834277153015137
    3. 'for' → logprob: -1.2834277153015137
    4. '   ' → logprob: -4.033427715301514
    5. '<|end|>' → logprob: -4.533427715301514
    6. '	for' → logprob: -5.158427715301514
    7. '    
' → logprob: -6.033427715301514
    8. '  
' → logprob: -6.408427715301514
    9. ' 
' → logprob: -6.658427715301514
    10. '       ' → logprob: -7.158427715301514

Token 502: ' Mar' (ID: 3145)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.21160081028938293
    2. ' for' → logprob: -1.7116007804870605
    3. '   ' → logprob: -5.7116007804870605
    4. '
' → logprob: -5.9616007804870605
    5. '    
' → logprob: -6.2116007804870605
    6. '	for' → logprob: -7.0866007804870605
    7. ' 
' → logprob: -7.3366007804870605
    8. ' ' → logprob: -9.461601257324219
    9. '       ' → logprob: -9.461601257324219
    10. '        
' → logprob: -9.461601257324219

Token 503: 'que' (ID: 1126)
  Prédit: 'quer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quer' → logprob: -0.002506578341126442
    2. 'qu' → logprob: -6.127506732940674
    3. 'q' → logprob: -8.502506256103516
    4. 'que' → logprob: -9.627506256103516
    5. '	' → logprob: -10.627506256103516
    6. '#' → logprob: -11.752506256103516
    7. '[' → logprob: -12.877506256103516
    8. '-' → logprob: -12.877506256103516
    9. '=' → logprob: -13.002506256103516
    10. '   ' → logprob: -13.127506256103516

Token 504: ' le' (ID: 505)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.3910042941570282
    2. ' v' → logprob: -1.5160043239593506
    3. '[v' → logprob: -2.2660043239593506
    4. '	v' → logprob: -9.39100456237793
    5. ' True' → logprob: -10.26600456237793
    6. '<|end|>' → logprob: -10.39100456237793
    7. '(v' → logprob: -10.51600456237793
    8. ')v' → logprob: -10.64100456237793
    9. '=v' → logprob: -11.01600456237793
    10. '<v' → logprob: -11.14100456237793

Token 505: ' sommet' (ID: 130502)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.018172185868024826
    2. ' v' → logprob: -4.018172264099121
    3. ' sommet' → logprob: -10.893172264099121
    4. '[v' → logprob: -13.268172264099121
    5. '	v' → logprob: -14.268172264099121
    6. '```' → logprob: -14.393172264099121
    7. 'som' → logprob: -15.768172264099121
    8. 'vertex' → logprob: -16.018171310424805
    9. ' ' → logprob: -16.143171310424805
    10. ' ' → logprob: -16.393171310424805

Token 506: ' '' (ID: 461)
  Prédit: ' v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.6823163032531738
    2. 'v' → logprob: -1.1823163032531738
    3. '[v' → logprob: -1.8073163032531738
    4. ' traité' → logprob: -4.807316303253174
    5. ' ' → logprob: -5.557316303253174
    6. 'trait' → logprob: -6.432316303253174
    7. '<|end|>' → logprob: -6.682316303253174
    8. '	v' → logprob: -6.682316303253174
    9. 'visited' → logprob: -7.057316303253174
    10. ' comme' → logprob: -7.307316303253174

Token 507: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.000718626833986491
    2. ' v' → logprob: -7.250718593597412
    3. '	v' → logprob: -12.12571907043457
    4. '[v' → logprob: -13.12571907043457
    5. ')v' → logprob: -13.87571907043457
    6. '
' → logprob: -16.00071907043457
    7. '(v' → logprob: -16.00071907043457
    8. ' ' → logprob: -17.37571907043457
    9. '$v' → logprob: -18.37571907043457
    10. '=v' → logprob: -18.37571907043457

Token 508: ''' (ID: 6)
  Prédit: ' comme'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' comme' → logprob: -0.7056313753128052
    2. '[v' → logprob: -1.3306313753128052
    3. ')' → logprob: -2.3306312561035156
    4. ' ' → logprob: -3.0806312561035156
    5. 'comme' → logprob: -3.0806312561035156
    6. ']' → logprob: -3.3306312561035156
    7. '[u' → logprob: -6.080631256103516
    8. '[' → logprob: -6.330631256103516
    9. '[]' → logprob: -6.455631256103516
    10. ' as' → logprob: -6.455631256103516

Token 509: ' comme' (ID: 7971)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 510: ' traité' (ID: 160836)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.20182570815086365
    2. ' True' → logprob: -1.701825737953186
    3. 'used' → logprob: -8.951826095581055
    4. 'trait' → logprob: -9.451826095581055
    5. 'processed' → logprob: -9.451826095581055
    6. 'visited' → logprob: -10.076826095581055
    7. ' traité' → logprob: -10.201826095581055
    8. 'treated' → logprob: -10.951826095581055
    9. ' trait' → logprob: -11.701826095581055
    10. 'util' → logprob: -12.451826095581055

Token 511: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 512: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8695575594902039
    2. ' for' → logprob: -0.9945575594902039
    3. '   ' → logprob: -1.7445576190948486
    4. '	for' → logprob: -3.3695576190948486
    5. '       ' → logprob: -6.8695573806762695
    6. '    
' → logprob: -8.24455738067627
    7. '
' → logprob: -8.61955738067627
    8. '```' → logprob: -8.74455738067627
    9. '<|end|>' → logprob: -9.24455738067627
    10. '        
' → logprob: -10.61955738067627

Token 513: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.003401094349101186
    2. ' for' → logprob: -5.753401279449463
    3. '   ' → logprob: -8.503400802612305
    4. '	for' → logprob: -10.878400802612305
    5. '       ' → logprob: -13.503400802612305
    6. '    
' → logprob: -16.503400802612305
    7. '```' → logprob: -16.753400802612305
    8. '  ' → logprob: -17.378400802612305
    9. '
' → logprob: -17.378400802612305
    10. '   ' → logprob: -17.753400802612305

Token 514: ' nxt' (ID: 160200)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.06402652710676193
    2. 'to' → logprob: -2.8140265941619873
    3. 'w' → logprob: -6.689026355743408
    4. ' u' → logprob: -7.814026355743408
    5. ' to' → logprob: -8.689026832580566
    6. 'e' → logprob: -8.939026832580566
    7. 'nv' → logprob: -9.939026832580566
    8. '(u' → logprob: -11.064026832580566
    9. '```' → logprob: -11.689026832580566
    10. 'i' → logprob: -11.939026832580566

Token 515: '_v' (ID: 5390)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0621432401239872
    2. 'in' → logprob: -2.812143325805664
    3. ' ' → logprob: -9.312143325805664
    4. '	in' → logprob: -9.687143325805664
    5. 'v' → logprob: -11.937143325805664
    6. 'n' → logprob: -12.937143325805664
    7. '  ' → logprob: -13.437143325805664
    8. 's' → logprob: -13.812143325805664
    9. '_in' → logprob: -13.812143325805664
    10. '[' → logprob: -13.812143325805664

Token 516: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01816539652645588
    2. 'in' → logprob: -4.018165588378906
    3. ' ' → logprob: -11.768165588378906
    4. ',' → logprob: -12.518165588378906
    5. '	in' → logprob: -13.643165588378906
    6. 'v' → logprob: -14.643165588378906
    7. 'n' → logprob: -14.768165588378906
    8. '   ' → logprob: -14.768165588378906
    9. ',v' → logprob: -14.893165588378906
    10. '```' → logprob: -15.268165588378906

Token 517: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.10020710527896881
    2. ' range' → logprob: -2.3502070903778076
    3. ' ' → logprob: -14.975207328796387
    4. '	range' → logprob: -16.60020637512207
    5. '(range' → logprob: -17.10020637512207
    6. '   ' → logprob: -17.85020637512207
    7. '  ' → logprob: -18.35020637512207
    8. '    ' → logprob: -20.10020637512207
    9. 'r' → logprob: -21.47520637512207
    10. '.range' → logprob: -21.72520637512207

Token 518: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00033784625702537596
    2. 'n' → logprob: -8.000337600708008
    3. ' n' → logprob: -14.125337600708008
    4. '(' → logprob: -14.125337600708008
    5. ' (' → logprob: -14.500337600708008
    6. '(len' → logprob: -14.875337600708008
    7. '   ' → logprob: -17.250337600708008
    8. '	n' → logprob: -18.000337600708008
    9. '(
' → logprob: -18.125337600708008
    10. 'len' → logprob: -18.375337600708008

Token 519: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.05585170537233353
    2. '):
' → logprob: -2.930851697921753
    3. '       ' → logprob: -7.680851936340332
    4. '   ' → logprob: -8.430851936340332
    5. '):
' → logprob: -9.055851936340332
    6. ')' → logprob: -9.430851936340332
    7. ' ):' → logprob: -10.805851936340332
    8. ':' → logprob: -11.055851936340332
    9. '[' → logprob: -11.305851936340332
    10. '):

' → logprob: -11.555851936340332

Token 520: ' ' (ID: 220)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07247423380613327
    2. '<|end|>' → logprob: -3.572474241256714
    3. ' if' → logprob: -4.572474002838135
    4. ' ' → logprob: -4.822474002838135
    5. '       ' → logprob: -5.072474002838135
    6. '	       ' → logprob: -5.697474002838135
    7. ':' → logprob: -6.322474002838135
    8. 'if' → logprob: -6.322474002838135
    9. '            
' → logprob: -6.822474002838135
    10. '   ' → logprob: -6.947474002838135

Token 521: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.19757956266403198
    2. 'if' → logprob: -2.4475796222686768
    3. ' if' → logprob: -2.6975796222686768
    4. '       ' → logprob: -4.072579383850098
    5. ',' → logprob: -5.697579383850098
    6. '	       ' → logprob: -6.697579383850098
    7. '               ' → logprob: -7.947579383850098
    8. '   ' → logprob: -7.947579383850098
    9. '            
' → logprob: -8.197579383850098
    10. 'distance' → logprob: -8.197579383850098

Token 522: ' Pour' (ID: 13931)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.08258324861526489
    2. ' if' → logprob: -2.58258318901062
    3. '       ' → logprob: -6.332583427429199
    4. '   ' → logprob: -6.582583427429199
    5. '           ' → logprob: -8.2075834274292
    6. 'matrix' → logprob: -9.5825834274292
    7. '	if' → logprob: -10.0825834274292
    8. ' ' → logprob: -10.2075834274292
    9. '  ' → logprob: -10.3325834274292
    10. 'dist' → logprob: -10.4575834274292

Token 523: ' chaque' (ID: 21194)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1345563530921936
    2. ' nxt' → logprob: -2.759556293487549
    3. ' n' → logprob: -3.009556293487549
    4. 'range' → logprob: -5.134556293487549
    5. ' range' → logprob: -5.259556293487549
    6. 'v' → logprob: -7.509556293487549
    7. '(n' → logprob: -7.759556293487549
    8. ' ' → logprob: -8.009556770324707
    9. 'next' → logprob: -9.384556770324707
    10. ' v' → logprob: -9.572056770324707

Token 524: ' sommet' (ID: 130502)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7487605810165405
    2. 'adj' → logprob: -1.3737605810165405
    3. ' voisin' → logprob: -2.62376070022583
    4. 'neighbor' → logprob: -2.99876070022583
    5. ' n' → logprob: -2.99876070022583
    6. ' ' → logprob: -3.87376070022583
    7. ' neighbor' → logprob: -4.12376070022583
    8. ' adjacent' → logprob: -4.49876070022583
    9. ' adj' → logprob: -4.49876070022583
    10. ' adjacency' → logprob: -4.99876070022583

Token 525: ' '' (ID: 461)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.4607552289962769
    2. ' in' → logprob: -1.5857552289962769
    3. '(n' → logprob: -1.9607552289962769
    4. '       ' → logprob: -2.0857553482055664
    5. ':' → logprob: -2.7107553482055664
    6. ' n' → logprob: -3.4607553482055664
    7. 'n' → logprob: -3.4607553482055664
    8. ' not' → logprob: -3.8357553482055664
    9. '[n' → logprob: -3.8357553482055664
    10. ' :' → logprob: -4.210755348205566

Token 526: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.000724229437764734
    2. ' n' → logprob: -8.125723838806152
    3. ')' → logprob: -9.000723838806152
    4. 'range' → logprob: -9.125723838806152
    5. 'v' → logprob: -9.750723838806152
    6. '(n' → logprob: -9.875723838806152
    7. ')n' → logprob: -10.500723838806152
    8. ' range' → logprob: -11.000723838806152
    9. '	n' → logprob: -12.000723838806152
    10. '),' → logprob: -12.125723838806152

Token 527: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -0.01453942246735096
    2. 'ext' → logprob: -4.5145392417907715
    3. 'v' → logprob: -7.2645392417907715
    4. 'x' → logprob: -7.3895392417907715
    5. ' nxt' → logprob: -7.3895392417907715
    6. 'n' → logprob: -7.6395392417907715
    7. '   ' → logprob: -7.7645392417907715
    8. ')' → logprob: -8.13953971862793
    9. '```' → logprob: -10.26453971862793
    10. '`' → logprob: -10.51453971862793

Token 528: '_v' (ID: 5390)
  Prédit: '_v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_v' → logprob: -2.975612187583465e-05
    2. '_' → logprob: -11.375029563903809
    3. 'v' → logprob: -11.625029563903809
    4. ')' → logprob: -12.375029563903809
    5. '):' → logprob: -13.750029563903809
    6. '   ' → logprob: -14.250029563903809
    7. '

' → logprob: -14.625029563903809
    8. '
' → logprob: -14.625029563903809
    9. ' ' → logprob: -15.375029563903809
    10. ']' → logprob: -15.500029563903809

Token 529: '',' (ID: 787)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -1.1615310907363892
    2. ':' → logprob: -1.6615310907363892
    3. '       ' → logprob: -1.6615310907363892
    4. '):
' → logprob: -1.9115310907363892
    5. ',' → logprob: -3.1615309715270996
    6. '<|end|>' → logprob: -3.2865309715270996
    7. '   ' → logprob: -3.7865309715270996
    8. ')' → logprob: -4.0365309715271
    9. '           ' → logprob: -4.2865309715271
    10. ' :' → logprob: -5.2865309715271

Token 530: ' regarde' (ID: 115760)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012472921051084995
    2. ' if' → logprob: -4.762473106384277
    3. 'if' → logprob: -6.012473106384277
    4. 'distance' → logprob: -7.762473106384277
    5. '       ' → logprob: -8.637473106384277
    6. '	       ' → logprob: -9.137473106384277
    7. '            
' → logprob: -9.137473106384277
    8. ' distance' → logprob: -9.387473106384277
    9. '   ' → logprob: -9.762473106384277
    10. 'd' → logprob: -9.762473106384277

Token 531: ' si' (ID: 1784)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2873956859111786
    2. 'if' → logprob: -1.787395715713501
    3. '       ' → logprob: -3.412395715713501
    4. '   ' → logprob: -3.662395715713501
    5. ' ' → logprob: -4.662395477294922
    6. '    ' → logprob: -4.912395477294922
    7. '  ' → logprob: -5.787395477294922
    8. '	if' → logprob: -7.787395477294922
    9. '     ' → logprob: -7.912395477294922
    10. ' ' → logprob: -7.912395477294922

Token 532: ' le' (ID: 505)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -1.262209415435791
    2. 'matrix' → logprob: -1.637209415435791
    3. 'dist' → logprob: -1.637209415435791
    4. 'not' → logprob: -1.762209415435791
    5. ' dist' → logprob: -2.637209415435791
    6. ' matrix' → logprob: -2.887209415435791
    7. ' used' → logprob: -4.512209415435791
    8. 'used' → logprob: -4.887209415435791
    9. 'n' → logprob: -5.387209415435791
    10. ' ' → logprob: -6.637209415435791

Token 533: ' chemin' (ID: 45035)
  Prédit: ' dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.5523015856742859
    2. 'dist' → logprob: -1.9273016452789307
    3. ' used' → logprob: -2.4273016452789307
    4. ' not' → logprob: -2.5523016452789307
    5. ' matrix' → logprob: -2.5523016452789307
    6. 'matrix' → logprob: -3.8023016452789307
    7. 'used' → logprob: -5.052301406860352
    8. 'not' → logprob: -5.802301406860352
    9. ' ' → logprob: -7.177301406860352
    10. ' n' → logprob: -7.302301406860352

Token 534: ' via' (ID: 4493)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.25908198952674866
    2. ' from' → logprob: -2.884082078933716
    3. ' ' → logprob: -3.259082078933716
    4. '[' → logprob: -3.509082078933716
    5. ' vers' → logprob: -4.384081840515137
    6. 'from' → logprob: -5.009081840515137
    7. ' v' → logprob: -5.009081840515137
    8. ' reachable' → logprob: -5.009081840515137
    9. '[u' → logprob: -5.009081840515137
    10. '   ' → logprob: -5.134081840515137

Token 535: ' '' (ID: 461)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.16022726893424988
    2. ' v' → logprob: -1.9102272987365723
    3. '	v' → logprob: -12.910226821899414
    4. ' ' → logprob: -14.660226821899414
    5. '   ' → logprob: -16.410226821899414
    6. ')v' → logprob: -17.035226821899414
    7. '[v' → logprob: -17.035226821899414
    8. ' ' → logprob: -17.910226821899414
    9. ',v' → logprob: -18.160226821899414
    10. '```' → logprob: -18.410226821899414

Token 536: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.014164221473038197
    2. ' v' → logprob: -4.264164447784424
    3. '	v' → logprob: -15.264163970947266
    4. ')v' → logprob: -16.014163970947266
    5. ' ' → logprob: -16.389163970947266
    6. '   ' → logprob: -16.639163970947266
    7. '
' → logprob: -16.764163970947266
    8. '[v' → logprob: -17.389163970947266
    9. '_v' → logprob: -17.764163970947266
    10. ',v' → logprob: -18.139163970947266

Token 537: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5819202065467834
    2. ' '' → logprob: -0.8319202065467834
    3. ' peut' → logprob: -6.081920146942139
    4. ' est' → logprob: -6.206920146942139
    5. '   ' → logprob: -7.831920146942139
    6. ' ' → logprob: -8.206920623779297
    7. ' vaut' → logprob: -8.456920623779297
    8. 'est' → logprob: -8.831920623779297
    9. ' ' → logprob: -8.956920623779297
    10. ''est' → logprob: -8.956920623779297

Token 538: ' est' (ID: 893)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.145980715751648
    2. ' can' → logprob: -1.270980715751648
    3. '   ' → logprob: -2.2709808349609375
    4. ' peut' → logprob: -2.7709808349609375
    5. '           ' → logprob: -2.8959808349609375
    6. ' est' → logprob: -3.1459808349609375
    7. ' ' → logprob: -3.6459808349609375
    8. ':' → logprob: -3.6459808349609375
    9. ' :' → logprob: -4.1459808349609375
    10. ' is' → logprob: -4.2709808349609375

Token 539: ' amélior' (ID: 118625)
  Prédit: ' possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' possible' → logprob: -0.972334623336792
    2. 'possible' → logprob: -1.222334623336792
    3. ' meilleur' → logprob: -1.972334623336792
    4. ' ' → logprob: -2.597334623336792
    5. ' avantage' → logprob: -3.847334623336792
    6. ' bénéf' → logprob: -4.097334861755371
    7. ' better' → logprob: -4.222334861755371
    8. ' viable' → logprob: -4.472334861755371
    9. ' beneficial' → logprob: -4.722334861755371
    10. ' mieux' → logprob: -5.222334861755371

Token 540: 'ant' (ID: 493)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.010385589674115181
    2. 'or' → logprob: -4.760385513305664
    3. 'ant' → logprob: -7.635385513305664
    4. 'able' → logprob: -7.760385513305664
    5. 'er' → logprob: -8.760385513305664
    6. '```' → logprob: -8.885385513305664
    7. 'ior' → logprob: -9.135385513305664
    8. 'n' → logprob: -9.385385513305664
    9. 'eur' → logprob: -9.760385513305664
    10. 'e' → logprob: -10.010385513305664

Token 541: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10194635391235352
    2. '<|end|>' → logprob: -3.3519463539123535
    3. '       ' → logprob: -3.6019463539123535
    4. ':
' → logprob: -4.3519463539123535
    5. ' :' → logprob: -4.7269463539123535
    6. '<|end|>' → logprob: -5.8519463539123535
    7. ',' → logprob: -6.1019463539123535
    8. '           ' → logprob: -6.3519463539123535
    9. ' :
' → logprob: -6.4769463539123535
    10. ' if' → logprob: -6.6019463539123535

Token 542: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.013388092629611492
    2. ':' → logprob: -4.638388156890869
    3. '       ' → logprob: -6.638388156890869
    4. ' if' → logprob: -6.888388156890869
    5. ' :' → logprob: -7.763388156890869
    6. ':
' → logprob: -8.263387680053711
    7. ',' → logprob: -8.388387680053711
    8. '	       ' → logprob: -9.013387680053711
    9. '               ' → logprob: -9.388387680053711
    10. '   ' → logprob: -10.638387680053711

Token 543: ' tmp' (ID: 8919)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.29345446825027466
    2. 'cost' → logprob: -2.54345440864563
    3. ' cost' → logprob: -2.54345440864563
    4. ' if' → logprob: -2.66845440864563
    5. 'if' → logprob: -3.91845440864563
    6. '               ' → logprob: -6.293454647064209
    7. 'distance' → logprob: -6.918454647064209
    8. 'val' → logprob: -7.293454647064209
    9. 'weight' → logprob: -7.543454647064209
    10. 'd' → logprob: -7.543454647064209

Token 544: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026434753090143204
    2. '=' → logprob: -3.6514346599578857
    3. '_dist' → logprob: -9.901434898376465
    4. 'dist' → logprob: -10.151434898376465
    5. '_cost' → logprob: -11.901434898376465
    6. '_val' → logprob: -12.026434898376465
    7. 'cost' → logprob: -12.526434898376465
    8. '_' → logprob: -12.651434898376465
    9. '_distance' → logprob: -12.776434898376465
    10. ',' → logprob: -13.151434898376465

Token 545: ' merge' (ID: 20345)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.02327284961938858
    2. ' dist' → logprob: -3.773272752761841
    3. '   ' → logprob: -11.398272514343262
    4. '(dist' → logprob: -11.523272514343262
    5. '	dist' → logprob: -13.898272514343262
    6. '           ' → logprob: -13.898272514343262
    7. '10' → logprob: -14.023272514343262
    8. '       ' → logprob: -14.023272514343262
    9. ' ' → logprob: -14.273272514343262
    10. '0' → logprob: -15.273272514343262

Token 546: '(dist' (ID: 78981)
  Prédit: '(dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dist' → logprob: -0.025779621675610542
    2. 'dist' → logprob: -3.7757797241210938
    3. '(' → logprob: -6.650779724121094
    4. '(
' → logprob: -7.775779724121094
    5. '(v' → logprob: -8.650779724121094
    6. '[' → logprob: -8.900779724121094
    7. ' (' → logprob: -9.525779724121094
    8. ' dist' → logprob: -9.525779724121094
    9. '_dist' → logprob: -9.775779724121094
    10. '(distance' → logprob: -9.900779724121094

Token 547: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -1.8193366486229934e-05
    2. 'v' → logprob: -12.250018119812012
    3. ',v' → logprob: -12.375018119812012
    4. ')' → logprob: -13.125018119812012
    5. ',' → logprob: -13.500018119812012
    6. '[' → logprob: -13.500018119812012
    7. ' [' → logprob: -13.875018119812012
    8. '[n' → logprob: -14.125018119812012
    9. ')[' → logprob: -14.500018119812012
    10. '
' → logprob: -15.250018119812012

Token 548: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.5177760720252991
    2. ',' → logprob: -1.2677760124206543
    3. '[n' → logprob: -2.5177760124206543
    4. ',n' → logprob: -3.3927760124206543
    5. '][' → logprob: -5.142776012420654
    6. ' ,' → logprob: -6.767776012420654
    7. '   ' → logprob: -8.017776489257812
    8. ']' → logprob: -8.267776489257812
    9. '       ' → logprob: -9.142776489257812
    10. '],[' → logprob: -9.267776489257812

Token 549: ' matrix' (ID: 12248)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.008920865133404732
    2. ' matrix' → logprob: -5.383920669555664
    3. 'dist' → logprob: -5.508920669555664
    4. ' dist' → logprob: -9.258920669555664
    5. '   ' → logprob: -9.883920669555664
    6. 'n' → logprob: -10.883920669555664
    7. '
' → logprob: -11.258920669555664
    8. '           ' → logprob: -11.258920669555664
    9. 'input' → logprob: -12.008920669555664
    10. ')' → logprob: -12.008920669555664

Token 550: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.05617508664727211
    2. '[n' → logprob: -2.9311749935150146
    3. '[' → logprob: -7.181175231933594
    4. '][' → logprob: -8.306175231933594
    5. ')[' → logprob: -10.181175231933594
    6. ' [' → logprob: -10.306175231933594
    7. ',' → logprob: -10.431175231933594
    8. ')' → logprob: -10.556175231933594
    9. '[m' → logprob: -10.681175231933594
    10. ']' → logprob: -10.931175231933594

Token 551: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0035860564094036818
    2. '],' → logprob: -6.253586292266846
    3. ']' → logprob: -6.628586292266846
    4. '[n' → logprob: -8.628585815429688
    5. 'n' → logprob: -10.253585815429688
    6. ' ][' → logprob: -10.253585815429688
    7. ',n' → logprob: -11.003585815429688
    8. ',' → logprob: -11.253585815429688
    9. '],[' → logprob: -11.378585815429688
    10. '[v' → logprob: -11.378585815429688

Token 552: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -3.225939872208983e-05
    2. '
' → logprob: -11.625032424926758
    3. '   ' → logprob: -11.750032424926758
    4. ' nxt' → logprob: -11.875032424926758
    5. ']' → logprob: -13.125032424926758
    6. '	n' → logprob: -14.125032424926758
    7. ' ' → logprob: -14.250032424926758
    8. '       ' → logprob: -14.375032424926758
    9. '
' → logprob: -14.750032424926758
    10. '    
' → logprob: -14.875032424926758

Token 553: 'xt' (ID: 711)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.7194104790687561
    2. 'xt' → logprob: -0.8444104790687561
    3. 'x' → logprob: -2.7194104194641113
    4. 'tx' → logprob: -4.344410419464111
    5. 'n' → logprob: -5.969410419464111
    6. 'txt' → logprob: -7.219410419464111
    7. 'v' → logprob: -8.46941089630127
    8. ']' → logprob: -8.59441089630127
    9. '][' → logprob: -8.84441089630127
    10. 's' → logprob: -10.09441089630127

Token 554: '_v' (ID: 5390)
  Prédit: '_v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_v' → logprob: -1.9385402993066236e-05
    2. 'v' → logprob: -11.000019073486328
    3. '_' → logprob: -13.125019073486328
    4. ']' → logprob: -15.375019073486328
    5. '	v' → logprob: -17.000019073486328
    6. '\' → logprob: -17.000019073486328
    7. '```' → logprob: -17.000019073486328
    8. '][' → logprob: -17.375019073486328
    9. '
' → logprob: -17.750019073486328
    10. '_u' → logprob: -17.937519073486328

Token 555: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0025358288548886776
    2. '])' → logprob: -6.877535820007324
    3. ' )' → logprob: -6.877535820007324
    4. ',' → logprob: -8.627535820007324
    5. ')
' → logprob: -8.877535820007324
    6. '+' → logprob: -10.627535820007324
    7. ']' → logprob: -10.752535820007324
    8. '))' → logprob: -10.752535820007324
    9. ')+' → logprob: -11.002535820007324
    10. '`)' → logprob: -11.627535820007324

Token 556: ' ' (ID: 220)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14801838994026184
    2. '<|end|>' → logprob: -2.5230183601379395
    3. ')' → logprob: -3.1480183601379395
    4. ' if' → logprob: -5.0230183601379395
    5. '            
' → logprob: -6.3980183601379395
    6. '<|end|>' → logprob: -6.6480183601379395
    7. '
' → logprob: -6.8980183601379395
    8. ' ' → logprob: -7.0230183601379395
    9. '   ' → logprob: -7.6480183601379395
    10. '               ' → logprob: -7.7730183601379395

Token 557: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02453981339931488
    2. '<|end|>' → logprob: -4.524539947509766
    3. ' if' → logprob: -5.649539947509766
    4. '            
' → logprob: -5.774539947509766
    5. ')' → logprob: -6.024539947509766
    6. '
' → logprob: -7.024539947509766
    7. '		' → logprob: -7.399539947509766
    8. ' ' → logprob: -7.524539947509766
    9. '               ' → logprob: -7.524539947509766
    10. '       ' → logprob: -8.149539947509766

Token 558: ' Cal' (ID: 4453)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.35750439763069153
    2. '<|end|>' → logprob: -1.4825043678283691
    3. ' )' → logprob: -3.357504367828369
    4. ' ' → logprob: -4.732504367828369
    5. 'n' → logprob: -4.982504367828369
    6. 'tmp' → logprob: -5.357504367828369
    7. '
' → logprob: -5.732504367828369
    8. ' tmp' → logprob: -5.857504367828369
    9. 'if' → logprob: -6.232504367828369
    10. ' n' → logprob: -6.732504367828369

Token 559: 'cule' (ID: 45017)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.32952189445495605
    2. 'culate' → logprob: -1.454521894454956
    3. 'cul' → logprob: -4.204522132873535
    4. 'cula' → logprob: -5.204522132873535
    5. 'culated' → logprob: -5.454522132873535
    6. 'l' → logprob: -5.579522132873535
    7. ')' → logprob: -5.829522132873535
    8. 'culation' → logprob: -5.954522132873535
    9. '=' → logprob: -6.204522132873535
    10. ' c' → logprob: -6.204522132873535

Token 560: ' le' (ID: 505)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8040731549263
    2. ' ' → logprob: -2.5540730953216553
    3. ' if' → logprob: -2.8040730953216553
    4. 's' → logprob: -2.9290730953216553
    5. 'if' → logprob: -2.9290730953216553
    6. ' =' → logprob: -3.3040730953216553
    7. ' tmp' → logprob: -3.5540730953216553
    8. 'dist' → logprob: -3.5540730953216553
    9. ' )' → logprob: -3.8040730953216553
    10. 'tmp' → logprob: -3.9290730953216553

Token 561: ' coût' (ID: 73109)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.9768026471138
    2. 'new' → logprob: -1.2268025875091553
    3. 'merged' → logprob: -2.6018025875091553
    4. ' next' → logprob: -3.1018025875091553
    5. 'next' → logprob: -3.2268025875091553
    6. 'cost' → logprob: -3.3518025875091553
    7. ' nouveau' → logprob: -3.4768025875091553
    8. 'tmp' → logprob: -4.101802825927734
    9. ' merged' → logprob: -4.101802825927734
    10. 'combined' → logprob: -4.351802825927734

Token 562: ' composite' (ID: 40773)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6574158072471619
    2. '<|end|>' → logprob: -2.0324158668518066
    3. ' if' → logprob: -2.4074158668518066
    4. ' +' → logprob: -2.5324158668518066
    5. '[v' → logprob: -3.1574158668518066
    6. '[u' → logprob: -3.1574158668518066
    7. '+' → logprob: -4.532415866851807
    8. ' =' → logprob: -4.907415866851807
    9. '[next' → logprob: -4.907415866851807
    10. '<|end|>' → logprob: -5.157415866851807

Token 563: ' pour' (ID: 1930)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 564: ' atteindre' (ID: 95734)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.5334005355834961
    2. 'n' → logprob: -1.033400535583496
    3. ' v' → logprob: -3.783400535583496
    4. 'tmp' → logprob: -3.783400535583496
    5. ' n' → logprob: -5.033400535583496
    6. 'next' → logprob: -6.533400535583496
    7. ' tmp' → logprob: -7.408400535583496
    8. 'merge' → logprob: -7.533400535583496
    9. 'dist' → logprob: -7.658400535583496
    10. ')' → logprob: -7.783400535583496

Token 565: ' '' (ID: 461)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.008068506605923176
    2. ' nxt' → logprob: -5.008068561553955
    3. 'tmp' → logprob: -7.508068561553955
    4. '[n' → logprob: -8.008068084716797
    5. ' n' → logprob: -8.383068084716797
    6. 'next' → logprob: -9.383068084716797
    7. '(n' → logprob: -10.258068084716797
    8. '[next' → logprob: -10.508068084716797
    9. 'v' → logprob: -10.508068084716797
    10. '[tmp' → logprob: -11.258068084716797

Token 566: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0061500235460698605
    2. ' nxt' → logprob: -5.131150245666504
    3. ' n' → logprob: -8.881150245666504
    4. 'next' → logprob: -10.631150245666504
    5. 'v' → logprob: -10.756150245666504
    6. '[n' → logprob: -10.881150245666504
    7. 'tmp' → logprob: -12.381150245666504
    8. '[next' → logprob: -13.006150245666504
    9. ' next' → logprob: -13.131150245666504
    10. '
' → logprob: -13.381150245666504

Token 567: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -0.002991847461089492
    2. 'ext' → logprob: -5.877991676330566
    3. '_' → logprob: -9.252991676330566
    4. 'v' → logprob: -11.002991676330566
    5. ' nxt' → logprob: -11.252991676330566
    6. ' _' → logprob: -11.752991676330566
    7. '`' → logprob: -11.877991676330566
    8. '_v' → logprob: -11.877991676330566
    9. '```' → logprob: -11.877991676330566
    10. '_xt' → logprob: -12.002991676330566

Token 568: '_v' (ID: 5390)
  Prédit: '_v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_v' → logprob: -5.5577775128767826e-06
    2. '_' → logprob: -12.250005722045898
    3. ' _' → logprob: -15.500005722045898
    4. ')' → logprob: -16.0000057220459
    5. ')_' → logprob: -16.1250057220459
    6. '_n' → logprob: -17.0000057220459
    7. '```' → logprob: -17.2500057220459
    8. 'v' → logprob: -17.5000057220459
    9. '

' → logprob: -17.5000057220459
    10. '   ' → logprob: -17.6250057220459

Token 569: ''' (ID: 6)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0070488909259438515
    2. ' )' → logprob: -5.632049083709717
    3. '<|end|>' → logprob: -6.007049083709717
    4. '           ' → logprob: -8.382048606872559
    5. ',' → logprob: -8.757048606872559
    6. '<|end|>' → logprob: -9.382048606872559
    7. ' if' → logprob: -9.757048606872559
    8. ')
' → logprob: -9.882048606872559
    9. '   ' → logprob: -9.882048606872559
    10. '[' → logprob: -10.507048606872559

Token 570: ' via' (ID: 4493)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7208170294761658
    2. '<|end|>' → logprob: -0.7208170294761658
    3. '<|end|>' → logprob: -4.3458170890808105
    4. '           ' → logprob: -5.7208170890808105
    5. ' if' → logprob: -5.9708170890808105
    6. ' ' → logprob: -6.4708170890808105
    7. ' )' → logprob: -6.4708170890808105
    8. '   ' → logprob: -6.7208170890808105
    9. '[' → logprob: -7.4708170890808105
    10. 'if' → logprob: -7.5958170890808105

Token 571: ' '' (ID: 461)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0624074749648571
    2. ' v' → logprob: -2.8124074935913086
    3. '<|end|>' → logprob: -7.937407493591309
    4. 'n' → logprob: -10.187407493591309
    5. ')v' → logprob: -11.937407493591309
    6. ')' → logprob: -12.187407493591309
    7. '`' → logprob: -12.187407493591309
    8. '[v' → logprob: -12.312407493591309
    9. 'tmp' → logprob: -12.437407493591309
    10. ' ' → logprob: -12.562407493591309

Token 572: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.003602094016969204
    2. ' v' → logprob: -5.628602027893066
    3. '	v' → logprob: -14.003602027893066
    4. '_v' → logprob: -15.378602027893066
    5. ' ' → logprob: -15.628602027893066
    6. ')v' → logprob: -15.628602027893066
    7. '[v' → logprob: -15.628602027893066
    8. ')' → logprob: -16.003602981567383
    9. 'n' → logprob: -16.128602981567383
    10. ''' → logprob: -16.628602981567383

Token 573: ''
' (ID: 2207)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005245577194727957
    2. ' )' → logprob: -7.625524520874023
    3. '           ' → logprob: -11.375524520874023
    4. ')
' → logprob: -12.000524520874023
    5. '')' → logprob: -12.625524520874023
    6. '   ' → logprob: -12.625524520874023
    7. ',' → logprob: -13.000524520874023
    8. '[' → logprob: -13.250524520874023
    9. ')n' → logprob: -14.000524520874023
    10. ' ' → logprob: -14.125524520874023

Token 574: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 575: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.457496702671051
    2. 'if' → logprob: -1.4574966430664062
    3. ' if' → logprob: -2.0824966430664062
    4. '               ' → logprob: -5.082496643066406
    5. ')' → logprob: -6.457496643066406
    6. '		' → logprob: -7.457496643066406
    7. '       ' → logprob: -8.207496643066406
    8. '   ' → logprob: -8.582496643066406
    9. ' ' → logprob: -8.957496643066406
    10. '	if' → logprob: -9.207496643066406

Token 576: ' Si' (ID: 7832)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.007870886474847794
    2. '           ' → logprob: -4.882870674133301
    3. ' if' → logprob: -8.2578706741333
    4. 'If' → logprob: -13.5078706741333
    5. '               ' → logprob: -13.7578706741333
    6. '       ' → logprob: -13.8828706741333
    7. '		' → logprob: -14.2578706741333
    8. '	if' → logprob: -14.6328706741333
    9. '          ' → logprob: -15.5078706741333
    10. '<|end|>' → logprob: -15.8828706741333

Token 577: ' ce' (ID: 2357)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.2796081304550171
    2. ' tmp' → logprob: -1.529608130455017
    3. ' dist' → logprob: -4.154608249664307
    4. 'dist' → logprob: -4.529608249664307
    5. '   ' → logprob: -8.529607772827148
    6. ' ' → logprob: -9.029607772827148
    7. '(tmp' → logprob: -9.029607772827148
    8. 'matrix' → logprob: -9.779607772827148
    9. 'not' → logprob: -10.029607772827148
    10. ' matrix' → logprob: -10.154607772827148

Token 578: ' nouveau' (ID: 23184)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.16144077479839325
    2. ' tmp' → logprob: -1.9114407300949097
    3. 'n' → logprob: -7.786440849304199
    4. 'dist' → logprob: -8.5364408493042
    5. ' n' → logprob: -8.7864408493042
    6. ' dist' → logprob: -9.0364408493042
    7. '[tmp' → logprob: -9.0364408493042
    8. '(tmp' → logprob: -9.4114408493042
    9. ' ' → logprob: -10.1614408493042
    10. '	tmp' → logprob: -10.7864408493042

Token 579: ' chemin' (ID: 45035)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.2846511900424957
    2. ' tmp' → logprob: -1.9096511602401733
    3. ' <' → logprob: -4.034651279449463
    4. 'cost' → logprob: -4.034651279449463
    5. '[tmp' → logprob: -4.909651279449463
    6. 'n' → logprob: -4.909651279449463
    7. 'token' → logprob: -5.159651279449463
    8. '(tmp' → logprob: -5.409651279449463
    9. '<' → logprob: -5.534651279449463
    10. ' coût' → logprob: -5.659651279449463

Token 580: ' est' (ID: 893)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[n' → logprob: -1.0455269813537598
    2. '<n' → logprob: -1.5455269813537598
    3. ' <' → logprob: -2.5455269813537598
    4. '[token' → logprob: -2.7955269813537598
    5. '[v' → logprob: -2.7955269813537598
    6. '[' → logprob: -2.9205269813537598
    7. '[tmp' → logprob: -2.9205269813537598
    8. '<|end|>' → logprob: -3.2955269813537598
    9. '<' → logprob: -3.5455269813537598
    10. '[u' → logprob: -4.04552698135376

Token 581: ' meilleur' (ID: 37552)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.16876226663589478
    2. ' <' → logprob: -3.16876220703125
    3. ' inférieur' → logprob: -3.54376220703125
    4. 'not' → logprob: -3.91876220703125
    5. 'tmp' → logprob: -3.91876220703125
    6. ' not' → logprob: -4.29376220703125
    7. '[tmp' → logprob: -5.54376220703125
    8. ' moins' → logprob: -5.54376220703125
    9. ' less' → logprob: -5.66876220703125
    10. ' meilleur' → logprob: -5.66876220703125

Token 582: ',' (ID: 11)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.09027619659900665
    2. 'and' → logprob: -2.4652762413024902
    3. '<|end|>' → logprob: -7.21527624130249
    4. '           ' → logprob: -8.465275764465332
    5. ',' → logprob: -8.590275764465332
    6. ':' → logprob: -9.215275764465332
    7. '<|end|>' → logprob: -10.090275764465332
    8. '               ' → logprob: -11.090275764465332
    9. ' ' → logprob: -12.090275764465332
    10. '            ' → logprob: -12.340275764465332

Token 583: ' met' (ID: 1421)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5286270380020142
    2. '           ' → logprob: -1.6536270380020142
    3. '               ' → logprob: -2.0286269187927246
    4. 'if' → logprob: -2.9036269187927246
    5. '<|end|>' → logprob: -3.6536269187927246
    6. ' and' → logprob: -6.278626918792725
    7. '   ' → logprob: -7.528626918792725
    8. ' ' → logprob: -7.778626918792725
    9. '<|end|>' → logprob: -7.778626918792725
    10. '              ' → logprob: -7.778626918792725

Token 584: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.7311801910400391
    2. 'à' → logprob: -1.356180191040039
    3. 'if' → logprob: -1.981180191040039
    4. '               ' → logprob: -2.356180191040039
    5. '           ' → logprob: -3.981180191040039
    6. 'dist' → logprob: -5.856180191040039
    7. '```' → logprob: -6.231180191040039
    8. '-à' → logprob: -6.356180191040039
    9. 'À' → logprob: -7.231180191040039
    10. ''à' → logprob: -7.231180191040039

Token 585: ' jour' (ID: 8379)
  Prédit: 'jour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jour' → logprob: -0.012728836387395859
    2. ' jour' → logprob: -4.387728691101074
    3. 'jours' → logprob: -9.262728691101074
    4. '```' → logprob: -10.012728691101074
    5. 'dist' → logprob: -10.387728691101074
    6. 'day' → logprob: -10.637728691101074
    7. 'Jour' → logprob: -11.637728691101074
    8. 'jou' → logprob: -12.512728691101074
    9. 'journ' → logprob: -12.512728691101074
    10. 'j' → logprob: -13.387728691101074

Token 586: ' la' (ID: 557)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.07923257350921631
    2. ' dist' → logprob: -2.579232692718506
    3. '           ' → logprob: -8.329232215881348
    4. 'if' → logprob: -9.954232215881348
    5. '(dist' → logprob: -10.579232215881348
    6. '               ' → logprob: -10.704232215881348
    7. '	dist' → logprob: -12.954232215881348
    8. ' if' → logprob: -13.329232215881348
    9. '   ' → logprob: -14.329232215881348
    10. '_dist' → logprob: -14.579232215881348

Token 587: ' valeur' (ID: 41664)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.09186132252216339
    2. ' dist' → logprob: -2.4668612480163574
    3. ' if' → logprob: -7.341861248016357
    4. ' 
' → logprob: -7.466861248016357
    5. '```' → logprob: -7.466861248016357
    6. 'if' → logprob: -7.966861248016357
    7. '_dist' → logprob: -8.966861724853516
    8. '
' → logprob: -9.341861724853516
    9. 'space' → logprob: -9.466861724853516
    10. '[' → logprob: -9.591861724853516

Token 588: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7531516551971436
    2. 'dist' → logprob: -1.2531516551971436
    3. '               ' → logprob: -2.0031516551971436
    4. ' dist' → logprob: -3.1281516551971436
    5. 'if' → logprob: -3.3781516551971436
    6. ' if' → logprob: -3.7531516551971436
    7. '[' → logprob: -5.878151893615723
    8. '(dist' → logprob: -6.003151893615723
    9. '              ' → logprob: -7.878151893615723
    10. '                   ' → logprob: -8.253151893615723

Token 589: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002798698842525482
    2. '<|end|>' → logprob: -6.252798557281494
    3. '		' → logprob: -8.127799034118652
    4. '       ' → logprob: -9.002799034118652
    5. '               ' → logprob: -9.127799034118652
    6. '<|end|>' → logprob: -9.377799034118652
    7. '	       ' → logprob: -9.627799034118652
    8. '[' → logprob: -10.002799034118652
    9. '            
' → logprob: -10.127799034118652
    10. ' if' → logprob: -10.752799034118652

Token 590: ' dist' (ID: 3601)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.17465898394584656
    2. 'if' → logprob: -1.924659013748169
    3. '           ' → logprob: -4.29965877532959
    4. '               ' → logprob: -7.79965877532959
    5. ' 
' → logprob: -9.67465877532959
    6. '            
' → logprob: -9.79965877532959
    7. '   ' → logprob: -10.42465877532959
    8. 'tmp' → logprob: -10.67465877532959
    9. 'dist' (adapté à ' dist') → logprob: -10.67465877532959
    10. ' dist' → logprob: -10.92465877532959

Token 591: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.001194990472868085
    2. '[tmp' → logprob: -6.751194953918457
    3. '[' → logprob: -11.126194953918457
    4. '[next' → logprob: -13.001194953918457
    5. 'n' → logprob: -13.126194953918457
    6. 'tmp' → logprob: -13.501194953918457
    7. ' [' → logprob: -13.626194953918457
    8. 'if' → logprob: -14.501194953918457
    9. '   ' → logprob: -14.501194953918457
    10. '```' → logprob: -14.501194953918457

Token 592: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -0.01869964227080345
    2. '[n' → logprob: -4.643699645996094
    3. '[tmp' → logprob: -5.143699645996094
    4. 'n' → logprob: -6.768699645996094
    5. 'x' → logprob: -7.518699645996094
    6. 'tmp' → logprob: -7.768699645996094
    7. 'ext' → logprob: -7.893699645996094
    8. ']' → logprob: -9.143699645996094
    9. 'v' → logprob: -9.643699645996094
    10. '[' → logprob: -9.768699645996094

Token 593: '_v' (ID: 5390)
  Prédit: '_v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_v' → logprob: -0.00012987985974177718
    2. 'v' → logprob: -10.125129699707031
    3. '_n' → logprob: -10.375129699707031
    4. '[n' → logprob: -10.750129699707031
    5. '][' → logprob: -11.500129699707031
    6. '[v' → logprob: -11.500129699707031
    7. ']' → logprob: -11.875129699707031
    8. '[next' → logprob: -13.000129699707031
    9. '_' → logprob: -14.000129699707031
    10. 'n' → logprob: -14.125129699707031

Token 594: ']' (ID: 60)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.35543131828308105
    2. ']' → logprob: -1.605431318283081
    3. '>' → logprob: -2.355431318283081
    4. ']>' → logprob: -6.23043155670166
    5. ' ]' → logprob: -7.10543155670166
    6. '[' → logprob: -7.85543155670166
    7. '=' → logprob: -9.23043155670166
    8. ' =' → logprob: -9.73043155670166
    9. '   ' → logprob: -10.48043155670166
    10. '           ' → logprob: -11.23043155670166

Token 595: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04533630236983299
    2. '>' → logprob: -3.6703362464904785
    3. ' =' → logprob: -4.0453362464904785
    4. ' >' → logprob: -6.6703362464904785
    5. ',' → logprob: -10.045336723327637
    6. ')' → logprob: -11.045336723327637
    7. '[' → logprob: -11.795336723327637
    8. ']' → logprob: -12.170336723327637
    9. '   ' → logprob: -12.670336723327637
    10. 'if' → logprob: -13.295336723327637

Token 596: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.4544638991355896
    2. 'min' → logprob: -1.7044639587402344
    3. ' tmp' → logprob: -2.3294639587402344
    4. 'tmp' → logprob: -2.4544639587402344
    5. '(tmp' → logprob: -10.704463958740234
    6. '(min' → logprob: -11.829463958740234
    7. '	tmp' → logprob: -11.954463958740234
    8. '	min' → logprob: -11.954463958740234
    9. ' ' → logprob: -12.079463958740234
    10. '[tmp' → logprob: -12.079463958740234

Token 597: '(dist' (ID: 78981)
  Prédit: '(dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dist' → logprob: -2.8087270038668066e-05
    2. '(' → logprob: -10.500027656555176
    3. '(
' → logprob: -15.500027656555176
    4. 'dist' → logprob: -15.875027656555176
    5. '(dis' → logprob: -17.625028610229492
    6. ' (' → logprob: -18.000028610229492
    7. '	dist' → logprob: -18.125028610229492
    8. '(div' → logprob: -18.250028610229492
    9. '(d' → logprob: -18.625028610229492
    10. '(distance' → logprob: -19.250028610229492

Token 598: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.009337270632386208
    2. 'dist' → logprob: -4.759337425231934
    3. '_dist' → logprob: -7.384337425231934
    4. ')' → logprob: -10.259337425231934
    5. '[' → logprob: -11.509337425231934
    6. '	dist' → logprob: -11.634337425231934
    7. 'n' → logprob: -11.759337425231934
    8. ',n' → logprob: -11.884337425231934
    9. ',' → logprob: -11.884337425231934
    10. '   ' → logprob: -12.259337425231934

Token 599: 'xt' (ID: 711)
  Prédit: '_v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_v' → logprob: -0.037776242941617966
    2. 'xt' → logprob: -3.412776231765747
    3. 'v' → logprob: -6.537776470184326
    4. '_n' → logprob: -6.912776470184326
    5. '_t' → logprob: -7.537776470184326
    6. '[n' → logprob: -7.662776470184326
    7. 'ext' → logprob: -8.537775993347168
    8. '[v' → logprob: -8.662775993347168
    9. 'x' → logprob: -9.412775993347168
    10. 'n' → logprob: -9.912775993347168

Token 600: '_v' (ID: 5390)
  Prédit: '_v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_v' → logprob: -7.100059156073257e-05
    2. '[v' → logprob: -10.625070571899414
    3. '[n' → logprob: -10.750070571899414
    4. 'v' → logprob: -11.500070571899414
    5. '_n' → logprob: -11.500070571899414
    6. ']' → logprob: -14.125070571899414
    7. '_' → logprob: -14.375070571899414
    8. '```' → logprob: -14.625070571899414
    9. ')' → logprob: -14.875070571899414
    10. '][' → logprob: -15.125070571899414

Token 601: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0017175428802147508
    2. ',tmp' → logprob: -7.001717567443848
    3. ' ,' → logprob: -7.126717567443848
    4. ',
' → logprob: -13.251717567443848
    5. ',

' → logprob: -14.626717567443848
    6. ' ,
' → logprob: -16.12671661376953
    7. 'tmp' → logprob: -17.50171661376953
    8. ' ,

' → logprob: -17.50171661376953
    9. ',temp' → logprob: -17.75171661376953
    10. '[tmp' → logprob: -18.12671661376953

Token 602: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.16022492945194244
    2. ' tmp' → logprob: -1.9102249145507812
    3. '(tmp' → logprob: -14.785224914550781
    4. '/tmp' → logprob: -16.16022491455078
    5. '	tmp' → logprob: -16.16022491455078
    6. '[tmp' → logprob: -16.78522491455078
    7. '$tmp' → logprob: -17.16022491455078
    8. '_tmp' → logprob: -18.16022491455078
    9. ',tmp' → logprob: -18.16022491455078
    10. '.tmp' → logprob: -18.28522491455078

Token 603: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03860365226864815
    2. '<|end|>' → logprob: -3.2886035442352295
    3. ' )' → logprob: -8.288603782653809
    4. ')
' → logprob: -8.538603782653809
    5. '<|end|>' → logprob: -10.038603782653809
    6. ')return' → logprob: -10.038603782653809
    7. '       ' → logprob: -11.663603782653809
    8. '
' → logprob: -12.538603782653809
    9. '           ' → logprob: -13.163603782653809
    10. '   ' → logprob: -13.538603782653809

Token 604: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 605: ' return' (ID: 622)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 606: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.3132622241973877
    2. 'dist' → logprob: -1.3132622241973877
    3. '	dist' → logprob: -15.188261985778809
    4. '(dist' → logprob: -15.438261985778809
    5. ' ' → logprob: -17.688262939453125
    6. '_dist' → logprob: -17.938262939453125
    7. '[' → logprob: -19.688262939453125
    8. ' ' → logprob: -19.813262939453125
    9. '.dist' → logprob: -20.313262939453125
    10. 'Dist' → logprob: -20.813262939453125

Token 607: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 608: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 609: ' Retour' (ID: 146830)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 610: 'ne' (ID: 611)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 611: ' la' (ID: 557)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0063353031873703
    2. ' dist' → logprob: -5.256335258483887
    3. '<|end|>' → logprob: -6.881335258483887
    4. '	dist' → logprob: -10.256335258483887
    5. '(dist' → logprob: -11.006335258483887
    6. '_dist' → logprob: -11.631335258483887
    7. '\n' → logprob: -12.131335258483887
    8. '```' → logprob: -13.006335258483887
    9. ' ' → logprob: -13.756335258483887
    10. '.dist' → logprob: -14.006335258483887

Token 612: ' liste' (ID: 31719)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 613: ' finale' (ID: 37759)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 614: ' de' (ID: 334)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 615: ' distances' (ID: 48294)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -7.707997428951785e-05
    2. ' distances' → logprob: -10.125077247619629
    3. 'distance' → logprob: -10.375077247619629
    4. 'd' → logprob: -12.875077247619629
    5. ' dist' → logprob: -13.250077247619629
    6. '(dist' → logprob: -14.375077247619629
    7. 'cost' → logprob: -15.250077247619629
    8. 'Distances' → logprob: -16.000076293945312
    9. '	dist' → logprob: -16.500076293945312
    10. '<|end|>' → logprob: -16.625076293945312

Token 616: ' composites' (ID: 152565)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 617: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 618: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 619: ' merge' (ID: 20345)
  Prédit: ' merge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' merge' → logprob: -0.11282741278409958
    2. 'merge' → logprob: -2.2378273010253906
    3. '_merge' → logprob: -13.36282730102539
    4. ' ' → logprob: -13.48782730102539
    5. ' merger' → logprob: -14.86282730102539
    6. ' merges' → logprob: -14.86282730102539
    7. ' parse' → logprob: -15.48782730102539
    8. ' main' → logprob: -16.11282730102539
    9. ' matrix' → logprob: -16.36282730102539
    10. ' marge' → logprob: -16.36282730102539

Token 620: '(d' (ID: 2572)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.5220366716384888
    2. '(dist' → logprob: -1.0220366716384888
    3. '(prev' → logprob: -3.897036552429199
    4. '(old' → logprob: -4.522036552429199
    5. '(' → logprob: -5.397036552429199
    6. '(distance' → logprob: -5.897036552429199
    7. '(d' → logprob: -6.147036552429199
    8. '(current' → logprob: -6.397036552429199
    9. '(left' → logprob: -6.397036552429199
    10. '(cost' → logprob: -7.272036552429199

Token 621: ',' (ID: 11)
  Prédit: 'ist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ist' → logprob: -0.01827051118016243
    2. 'istance' → logprob: -4.893270492553711
    3. '(' → logprob: -5.268270492553711
    4. ',' → logprob: -6.268270492553711
    5. '(a' → logprob: -6.393270492553711
    6. ')' → logprob: -7.268270492553711
    7. '[' → logprob: -8.393270492553711
    8. '(i' → logprob: -9.018270492553711
    9. '(dist' → logprob: -9.143270492553711
    10. '(prev' → logprob: -9.268270492553711

Token 622: ' cost' (ID: 3097)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.44350340962409973
    2. 'w' → logprob: -1.5685033798217773
    3. 'e' → logprob: -3.1935033798217773
    4. 'edge' → logprob: -3.1935033798217773
    5. 'cost' → logprob: -3.4435033798217773
    6. 'b' → logprob: -4.568503379821777
    7. 'f' → logprob: -5.318503379821777
    8. 'd' → logprob: -5.818503379821777
    9. 'p' → logprob: -5.943503379821777
    10. 'm' → logprob: -6.068503379821777

Token 623: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009782299399375916
    2. '):' → logprob: -4.634782314300537
    3. ' ,' → logprob: -11.134781837463379
    4. '):
' → logprob: -12.384781837463379
    5. ',d' → logprob: -12.634781837463379
    6. ':' → logprob: -13.884781837463379
    7. ',c' → logprob: -14.259781837463379
    8. ')' → logprob: -14.384781837463379
    9. '   ' → logprob: -14.634781837463379
    10. ',v' → logprob: -15.259781837463379

Token 624: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14498326182365417
    2. ' :' → logprob: -3.0199832916259766
    3. '   ' → logprob: -3.3949832916259766
    4. ' if' → logprob: -4.394983291625977
    5. '{' → logprob: -4.894983291625977
    6. ':
' → logprob: -5.144983291625977
    7. ' {' → logprob: -5.394983291625977
    8. '[' → logprob: -5.769983291625977
    9. ' ' → logprob: -5.894983291625977
    10. ',' → logprob: -5.894983291625977

Token 625: ' #' (ID: 1069)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -1.207313060760498
    2. ' (' → logprob: -1.332313060760498
    3. ' if' → logprob: -1.707313060760498
    4. 'd' → logprob: -2.707313060760498
    5. ' ' → logprob: -2.707313060760498
    6. '(' → logprob: -3.082313060760498
    7. 'if' → logprob: -3.832313060760498
    8. ':' → logprob: -4.707313060760498
    9. ' :' → logprob: -5.082313060760498
    10. '   ' → logprob: -5.207313060760498

Token 626: ' Fonction' (ID: 189149)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.39380210638046265
    2. ' if' → logprob: -1.5188021659851074
    3. 'rav' → logprob: -3.6438021659851074
    4. 'd' → logprob: -4.018802165985107
    5. 'nb' → logprob: -4.518802165985107
    6. 'a' → logprob: -5.143802165985107
    7. 'r' → logprob: -5.268802165985107
    8. '#' → logprob: -5.268802165985107
    9. 'cost' → logprob: -5.518802165985107
    10. ' d' → logprob: -5.768802165985107

Token 627: ' pour' (ID: 1930)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.10566307604312897
    2. '(' → logprob: -2.3556630611419678
    3. ' (' → logprob: -6.230663299560547
    4. 'def' → logprob: -6.480663299560547
    5. '(
' → logprob: -6.730663299560547
    6. '_' → logprob: -7.855663299560547
    7. '_d' → logprob: -9.855663299560547
    8. '=' → logprob: -10.480663299560547
    9. ' =' → logprob: -10.480663299560547
    10. 'd' → logprob: -10.480663299560547

Token 628: ' fusion' (ID: 48115)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8057413101196289
    2. ' merge' → logprob: -2.180741310119629
    3. ' (' → logprob: -2.430741310119629
    4. ' d' → logprob: -2.930741310119629
    5. '(lambda' → logprob: -3.055741310119629
    6. ' def' → logprob: -3.180741310119629
    7. 'd' → logprob: -3.180741310119629
    8. ' lambda' → logprob: -3.430741310119629
    9. 'merge' → logprob: -3.430741310119629
    10. 'lambda' → logprob: -3.555741310119629

Token 629: 'ner' (ID: 1247)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.127495676279068
    2. ' (' → logprob: -2.252495765686035
    3. '_' → logprob: -4.377495765686035
    4. '(d' → logprob: -7.377495765686035
    5. '(
' → logprob: -7.752495765686035
    6. ' _' → logprob: -8.377495765686035
    7. ' =' → logprob: -8.502495765686035
    8. '   ' → logprob: -8.877495765686035
    9. '=' → logprob: -9.127495765686035
    10. ' (
' → logprob: -9.627495765686035

Token 630: ' le' (ID: 505)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.21907314658164978
    2. 'd' → logprob: -1.8440731763839722
    3. ' (' → logprob: -3.4690730571746826
    4. ' ' → logprob: -5.594073295593262
    5. '(d' → logprob: -5.844073295593262
    6. '(' → logprob: -8.094073295593262
    7. '_d' → logprob: -8.969073295593262
    8. '_' → logprob: -9.094073295593262
    9. ' (
' → logprob: -9.719073295593262
    10. ')' → logprob: -10.094073295593262

Token 631: ' coût' (ID: 73109)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.15981771051883698
    2. 'd' → logprob: -2.659817695617676
    3. ' ' → logprob: -2.784817695617676
    4. '_' → logprob: -5.534817695617676
    5. ' _' → logprob: -5.784817695617676
    6. '_d' → logprob: -6.034817695617676
    7. ' ,' → logprob: -6.284817695617676
    8. ',' → logprob: -6.784817695617676
    9. ' (' → logprob: -6.784817695617676
    10. 'distance' → logprob: -7.659817695617676

Token 632: ' courant' (ID: 74694)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5886930823326111
    2. '(' → logprob: -1.5886931419372559
    3. '(d' → logprob: -1.5886931419372559
    4. ' (' → logprob: -3.838693141937256
    5. ' ,' → logprob: -4.963693141937256
    6. '_' → logprob: -6.713693141937256
    7. '(
' → logprob: -6.963693141937256
    8. '(s' → logprob: -7.338693141937256
    9. 's' → logprob: -7.338693141937256
    10. '   ' → logprob: -7.463693141937256

Token 633: ' '' (ID: 461)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20836398005485535
    2. ' ,' → logprob: -1.8333640098571777
    3. ' ' → logprob: -4.458364009857178
    4. '(' → logprob: -5.333364009857178
    5. '   ' → logprob: -5.583364009857178
    6. ' (' → logprob: -6.208364009857178
    7. ' =' → logprob: -6.583364009857178
    8. ' d' → logprob: -6.583364009857178
    9. '=' → logprob: -7.708364009857178
    10. 'd' → logprob: -8.08336353302002

Token 634: 'd' (ID: 67)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.6938724517822266
    2. 'd' → logprob: -0.9438724517822266
    3. ',' → logprob: -2.3188724517822266
    4. ' ,' → logprob: -4.693872451782227
    5. ')' → logprob: -6.318872451782227
    6. ' ' → logprob: -7.318872451782227
    7. ',d' → logprob: -7.693872451782227
    8. '_d' → logprob: -8.568872451782227
    9. ''' → logprob: -8.818872451782227
    10. ' )' → logprob: -9.318872451782227

Token 635: ''' (ID: 6)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14288194477558136
    2. ' ,' → logprob: -2.0178818702697754
    3. '[' → logprob: -10.267882347106934
    4. ',
' → logprob: -10.392882347106934
    5. ',d' → logprob: -10.392882347106934
    6. '',' → logprob: -10.517882347106934
    7. ''' → logprob: -10.767882347106934
    8. '   ' → logprob: -11.267882347106934
    9. ' ' → logprob: -11.767882347106934
    10. ')' → logprob: -12.017882347106934

Token 636: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1020476371049881
    2. ' ,' → logprob: -2.3520476818084717
    3. ',
' → logprob: -7.727047443389893
    4. '   ' → logprob: -7.977047443389893
    5. ' +' → logprob: -7.977047443389893
    6. ' =' → logprob: -9.47704792022705
    7. ':' → logprob: -9.47704792022705
    8. ' :' → logprob: -9.72704792022705
    9. 'def' → logprob: -9.85204792022705
    10. ' ' → logprob: -10.10204792022705

Token 637: ' le' (ID: 505)
  Prédit: ' cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cost' → logprob: -0.08911438286304474
    2. 'cost' → logprob: -2.4641144275665283
    3. ' coût' → logprob: -10.33911418914795
    4. ' le' → logprob: -10.46411418914795
    5. 'co' → logprob: -10.58911418914795
    6. 'c' → logprob: -10.96411418914795
    7. '(cost' → logprob: -10.96411418914795
    8. ' la' → logprob: -11.21411418914795
    9. ' coste' → logprob: -11.71411418914795
    10. '_cost' → logprob: -11.96411418914795

Token 638: ' coût' (ID: 73109)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.4324086308479309
    2. ' cost' → logprob: -1.0574085712432861
    3. 'co' → logprob: -5.932408809661865
    4. ' co' → logprob: -8.182408332824707
    5. ' coût' → logprob: -8.557408332824707
    6. ' ' → logprob: -8.932408332824707
    7. 'c' → logprob: -8.932408332824707
    8. ' new' → logprob: -9.432408332824707
    9. ' coste' → logprob: -10.057408332824707
    10. ' ' → logprob: -10.869908332824707

Token 639: ' d' (ID: 272)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1911727786064148
    2. ' ,' → logprob: -3.0661728382110596
    3. 'cost' → logprob: -3.3161728382110596
    4. ' du' → logprob: -4.0661725997924805
    5. ' de' → logprob: -4.4411725997924805
    6. 'de' → logprob: -5.0661725997924805
    7. 'd' → logprob: -5.0661725997924805
    8. '_,' → logprob: -5.8161725997924805
    9. ' des' → logprob: -5.8161725997924805
    10. ' cost' → logprob: -5.8161725997924805

Token 640: ''un' (ID: 9788)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.7945305705070496
    2. ''ar' → logprob: -0.7945305705070496
    3. 'arr' → logprob: -3.5445306301116943
    4. ''arrivée' → logprob: -3.9195306301116943
    5. ''arr' → logprob: -4.794530391693115
    6. ' ar' → logprob: -4.919530391693115
    7. ''arrêt' → logprob: -5.294530391693115
    8. '_ar' → logprob: -5.294530391693115
    9. ''une' → logprob: -5.669530391693115
    10. ''un' → logprob: -5.794530391693115

Token 641: ' nouveau' (ID: 23184)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.22821061313152313
    2. 'traj' → logprob: -2.978210687637329
    3. ' trajet' → logprob: -2.978210687637329
    4. ' déplacement' → logprob: -3.728210687637329
    5. 'rav' → logprob: -4.10321044921875
    6. 'arc' → logprob: -4.47821044921875
    7. 'segment' → logprob: -4.85321044921875
    8. 'edge' → logprob: -5.47821044921875
    9. ' ar' → logprob: -5.60321044921875
    10. 'tr' → logprob: -5.72821044921875

Token 642: ' segment' (ID: 14806)
  Prédit: ' trajet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' trajet' → logprob: -0.8664951324462891
    2. '_' → logprob: -1.491495132446289
    3. ')' → logprob: -2.616495132446289
    4. 'traj' → logprob: -2.616495132446289
    5. 'ar' → logprob: -2.741495132446289
    6. ',' → logprob: -4.116495132446289
    7. ' déplacement' → logprob: -4.241495132446289
    8. ' ar' → logprob: -4.241495132446289
    9. ' ,' → logprob: -4.366495132446289
    10. ' )' → logprob: -4.741495132446289

Token 643: ' '' (ID: 461)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5316650867462158
    2. '(d' → logprob: -1.1566650867462158
    3. ' (' → logprob: -3.156665086746216
    4. '(' → logprob: -3.406665086746216
    5. '(cost' → logprob: -4.406664848327637
    6. ' ,' → logprob: -5.656664848327637
    7. 'def' → logprob: -6.906664848327637
    8. '(
' → logprob: -7.406664848327637
    9. ',
' → logprob: -7.531664848327637
    10. '(c' → logprob: -7.656664848327637

Token 644: 'cost' (ID: 33457)
  Prédit: 'cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.3892512321472168
    2. ' cost' → logprob: -1.3892512321472168
    3. ',' → logprob: -4.014251232147217
    4. 'c' → logprob: -4.014251232147217
    5. ')' → logprob: -4.264251232147217
    6. 'co' → logprob: -4.764251232147217
    7. ' )' → logprob: -6.139251232147217
    8. 'segment' → logprob: -6.514251232147217
    9. ' c' → logprob: -6.639251232147217
    10. ' segment' → logprob: -6.764251232147217

Token 645: ''
' (ID: 2207)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01697556860744953
    2. '):
' → logprob: -4.266975402832031
    3. ',' → logprob: -6.141975402832031
    4. ')' → logprob: -7.891975402832031
    5. ' ):' → logprob: -8.516975402832031
    6. ':' → logprob: -10.391975402832031
    7. '   ' → logprob: -10.516975402832031
    8. '):
' → logprob: -11.641975402832031
    9. ' ,' → logprob: -12.766975402832031
    10. '):

' → logprob: -12.891975402832031

Token 646: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0026833757292479277
    2. ':
' → logprob: -6.252683162689209
    3. ' :' → logprob: -7.752683162689209
    4. '(' → logprob: -9.377683639526367
    5. '   ' → logprob: -9.627683639526367
    6. '):' → logprob: -9.877683639526367
    7. '():' → logprob: -10.627683639526367
    8. ',' → logprob: -11.127683639526367
    9. 'if' → logprob: -11.252683639526367
    10. ':return' → logprob: -11.502683639526367

Token 647: ' #' (ID: 1069)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.33949631452560425
    2. ' if' → logprob: -1.714496374130249
    3. ' :' → logprob: -3.089496374130249
    4. 'if' → logprob: -4.08949613571167
    5. '   ' → logprob: -4.33949613571167
    6. ' 
' → logprob: -5.08949613571167
    7. ' ' → logprob: -5.21449613571167
    8. ':
' → logprob: -5.21449613571167
    9. '  
' → logprob: -6.08949613571167
    10. ' :
' → logprob: -6.33949613571167

Token 648: ' Encode' (ID: 117866)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.20933930575847626
    2. 'if' → logprob: -1.9593392610549927
    3. '   ' → logprob: -3.3343393802642822
    4. ' 
' → logprob: -5.084339141845703
    5. '    
' → logprob: -6.459339141845703
    6. '
' → logprob: -6.459339141845703
    7. ' return' → logprob: -7.209339141845703
    8. '  
' → logprob: -8.084339141845703
    9. ')' → logprob: -8.209339141845703
    10. ' ' → logprob: -8.334339141845703

Token 649: ' la' (ID: 557)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.27129504084587097
    2. ' ' → logprob: -2.7712950706481934
    3. ' =' → logprob: -2.7712950706481934
    4. ' if' → logprob: -3.3962950706481934
    5. ' d' → logprob: -3.3962950706481934
    6. '=' → logprob: -5.021295070648193
    7. ' (' → logprob: -5.271295070648193
    8. 'if' → logprob: -5.646295070648193
    9. ')' → logprob: -5.771295070648193
    10. '<|end|>' → logprob: -5.771295070648193

Token 650: ' logique' (ID: 115350)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.2316056787967682
    2. ' d' → logprob: -1.7316056489944458
    3. '+' → logprob: -5.356605529785156
    4. 'distance' → logprob: -5.481605529785156
    5. 'dist' → logprob: -5.606605529785156
    6. ' if' → logprob: -5.731605529785156
    7. ')' → logprob: -6.231605529785156
    8. ' return' → logprob: -6.356605529785156
    9. ' (' → logprob: -6.856605529785156
    10. 'if' → logprob: -6.856605529785156

Token 651: ' de' (ID: 334)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.4852758646011353
    2. ' d' → logprob: -1.7352758646011353
    3. ' =' → logprob: -2.3602757453918457
    4. ' (' → logprob: -2.6102757453918457
    5. ' de' → logprob: -2.9852757453918457
    6. '   ' → logprob: -2.9852757453918457
    7. '(' → logprob: -3.2352757453918457
    8. ' du' → logprob: -3.2352757453918457
    9. 'd' → logprob: -3.3602757453918457
    10. ')' → logprob: -3.3602757453918457

Token 652: ' rav' (ID: 26005)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.412312388420105
    2. ' d' → logprob: -1.787312388420105
    3. 'd' → logprob: -2.0373125076293945
    4. 'cost' → logprob: -2.1623125076293945
    5. 'if' → logprob: -2.5373125076293945
    6. ' if' → logprob: -2.6623125076293945
    7. ' cost' → logprob: -3.0373125076293945
    8. '(cost' → logprob: -3.4123125076293945
    9. ')' → logprob: -3.7873125076293945
    10. '(
' → logprob: -4.2873125076293945

Token 653: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.0007948547718115151
    2. 'ail' → logprob: -8.250794410705566
    3. 'itl' → logprob: -9.250794410705566
    4. 'ailability' → logprob: -9.375794410705566
    5. 'if' → logprob: -9.875794410705566
    6. ' =' → logprob: -10.250794410705566
    7. ' ' → logprob: -10.625794410705566
    8. 'e' → logprob: -10.625794410705566
    9. 'is' → logprob: -10.625794410705566
    10. 'i' → logprob: -11.250794410705566

Token 654: 'ail' (ID: 663)
  Prédit: 'ail'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ail' → logprob: -0.009690219536423683
    2. 'a' → logprob: -4.884690284729004
    3. 'ailability' → logprob: -7.634690284729004
    4. '=' → logprob: -8.134690284729004
    5. '_' → logprob: -8.384690284729004
    6. '```' → logprob: -8.384690284729004
    7. 'aille' → logprob: -8.509690284729004
    8. '_a' → logprob: -9.259690284729004
    9. 'ailleurs' → logprob: -9.384690284729004
    10. ' a' → logprob: -9.759690284729004

Token 655: 'lement' (ID: 1254)
  Prédit: 'lement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lement' → logprob: -0.007433411665260792
    2. 'ement' → logprob: -5.5074334144592285
    3. 'lements' → logprob: -6.1324334144592285
    4. 'l' → logprob: -7.2574334144592285
    5. 'èlement' → logprob: -8.75743293762207
    6. '```' → logprob: -9.63243293762207
    7. 'rement' → logprob: -10.38243293762207
    8. 'ements' → logprob: -10.50743293762207
    9. 'onnement' → logprob: -10.63243293762207
    10. '=' → logprob: -10.63243293762207

Token 656: ' :
' (ID: 10039)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12426450103521347
    2. '(d' → logprob: -3.6242644786834717
    3. ':' → logprob: -3.8742644786834717
    4. ' (' → logprob: -3.9992644786834717
    5. '=' → logprob: -4.624264717102051
    6. ' if' → logprob: -4.749264717102051
    7. ')' → logprob: -4.999264717102051
    8. '(
' → logprob: -5.124264717102051
    9. ',' → logprob: -5.749264717102051
    10. '   ' → logprob: -5.749264717102051

Token 657: '   ' (ID: 271)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -1.557288408279419
    2. ' ' → logprob: -1.807288408279419
    3. '   ' → logprob: -1.807288408279419
    4. 'd' → logprob: -2.182288408279419
    5. ' if' → logprob: -2.432288408279419
    6. ' 
' → logprob: -2.807288408279419
    7. ' (' → logprob: -3.432288408279419
    8. '  
' → logprob: -3.682288408279419
    9. '(' → logprob: -3.932288408279419
    10. ')' → logprob: -4.05728816986084

Token 658: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7034216523170471
    2. ' d' → logprob: -1.7034215927124023
    3. ' ' → logprob: -2.2034215927124023
    4. ')' → logprob: -2.9534215927124023
    5. ' 
' → logprob: -3.4534215927124023
    6. 'd' → logprob: -3.5784215927124023
    7. 'if' → logprob: -3.7034215927124023
    8. ' (' → logprob: -4.453421592712402
    9. '(' → logprob: -4.578421592712402
    10. ''' → logprob: -4.953421592712402

Token 659: '  ' (ID: 256)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6953758001327515
    2. ' if' → logprob: -0.8203758001327515
    3. ' d' → logprob: -3.695375919342041
    4. 'd' → logprob: -3.945375919342041
    5. ')' → logprob: -4.820375919342041
    6. ' (' → logprob: -6.320375919342041
    7. ' ' → logprob: -7.070375919342041
    8. '   ' → logprob: -7.320375919342041
    9. ')
' → logprob: -7.820375919342041
    10. '1' → logprob: -7.945375919342041

Token 660: ' -' (ID: 533)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6131208539009094
    2. 'cost' → logprob: -1.4881207942962646
    3. ' if' → logprob: -2.2381207942962646
    4. '0' → logprob: -2.8631207942962646
    5. ' cost' → logprob: -3.3631207942962646
    6. '(cost' → logprob: -4.613121032714844
    7. 'd' → logprob: -4.863121032714844
    8. '1' → logprob: -4.863121032714844
    9. ' d' → logprob: -6.238121032714844
    10. ')' → logprob: -6.363121032714844

Token 661: ' Si' (ID: 7832)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.41670936346054077
    2. 'if' → logprob: -1.6667094230651855
    3. ' cost' → logprob: -2.4167094230651855
    4. ' if' → logprob: -3.2917094230651855
    5. '(cost' → logprob: -4.0417094230651855
    6. 'd' → logprob: -5.5417094230651855
    7. '0' → logprob: -6.0417094230651855
    8. ' d' → logprob: -7.7917094230651855
    9. ' (' → logprob: -7.9167094230651855
    10. '1' → logprob: -8.791708946228027

Token 662: ' la' (ID: 557)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.32207751274108887
    2. ' cost' → logprob: -1.3220775127410889
    3. '(cost' → logprob: -4.822077751159668
    4. ' (' → logprob: -8.072077751159668
    5. ' d' → logprob: -8.697077751159668
    6. 'd' → logprob: -8.697077751159668
    7. '(' → logprob: -10.822077751159668
    8. ' ' → logprob: -11.759577751159668
    9. '(d' → logprob: -12.072077751159668
    10. '   ' → logprob: -12.572077751159668

Token 663: ' somme' (ID: 64484)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.10034189373254776
    2. ' cost' → logprob: -2.350341796875
    3. '(cost' → logprob: -10.225341796875
    4. 'd' → logprob: -10.350341796875
    5. ' d' → logprob: -10.975341796875
    6. 'distance' → logprob: -12.225341796875
    7. 'co' → logprob: -12.225341796875
    8. '
' → logprob: -12.350341796875
    9. ' ' → logprob: -12.475341796875
    10. '   ' → logprob: -12.600341796875

Token 664: ' carbur' (ID: 139558)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.8224203586578369
    2. ' >=' → logprob: -1.572420358657837
    3. ' >' → logprob: -2.197420358657837
    4. ' ==' → logprob: -2.822420358657837
    5. ' <' → logprob: -3.197420358657837
    6. ' +' → logprob: -3.447420358657837
    7. '<=' → logprob: -3.572420358657837
    8. '>' → logprob: -3.822420358657837
    9. '>=' → logprob: -4.322420120239258
    10. '+' → logprob: -4.572420120239258

Token 665: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.0030417663510888815
    2. ' ant' → logprob: -6.878041744232178
    3. ' =' → logprob: -8.128042221069336
    4. ' +' → logprob: -8.128042221069336
    5. '+' → logprob: -8.378042221069336
    6. '   ' → logprob: -8.503042221069336
    7. 'fuel' → logprob: -8.628042221069336
    8. '=' → logprob: -8.753042221069336
    9. 'age' → logprob: -9.253042221069336
    10. ' fuel' → logprob: -9.503042221069336

Token 666: ' dépasse' (ID: 165701)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -1.0587797164916992
    2. ' >=' → logprob: -1.3087797164916992
    3. ' >' → logprob: -2.183779716491699
    4. ' <=' → logprob: -2.308779716491699
    5. ' <' → logprob: -3.058779716491699
    6. '+' → logprob: -3.308779716491699
    7. '>' → logprob: -3.308779716491699
    8. '>=' → logprob: -3.933779716491699
    9. ' ==' → logprob: -4.683779716491699
    10. '<=' → logprob: -4.933779716491699

Token 667: ' la' (ID: 557)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.585203230381012
    2. '100' → logprob: -1.0852031707763672
    3. '10' → logprob: -3.585203170776367
    4. '20' → logprob: -3.710203170776367
    5. '999' → logprob: -4.085203170776367
    6. '200' → logprob: -4.460203170776367
    7. '500' → logprob: -5.335203170776367
    8. '250' → logprob: -5.335203170776367
    9. '50' → logprob: -5.960203170776367
    10. 'd' → logprob: -6.085203170776367

Token 668: ' capacité' (ID: 62575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07183650881052017
    2. '10' → logprob: -2.946836471557617
    3. '100' → logprob: -5.196836471557617
    4. '1' → logprob: -6.071836471557617
    5. '9' → logprob: -6.071836471557617
    6. ' (' → logprob: -6.196836471557617
    7. '999' → logprob: -6.196836471557617
    8. '0' → logprob: -8.196836471557617
    9. '=' → logprob: -8.196836471557617
    10. ' ' → logprob: -8.321836471557617

Token 669: ' maximale' (ID: 76380)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1094872951507568
    2. ' de' → logprob: -2.109487295150757
    3. '_max' → logprob: -2.609487295150757
    4. ' or' → logprob: -2.734487295150757
    5. 'max' → logprob: -2.734487295150757
    6. ' ,' → logprob: -2.859487295150757
    7. '_capacity' → logprob: -3.734487295150757
    8. ' ' → logprob: -3.859487295150757
    9. ' max' → logprob: -3.984487295150757
    10. '_' → logprob: -3.984487295150757

Token 670: ' '' (ID: 461)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.5528004169464111
    2. ' >=' → logprob: -1.5528004169464111
    3. ')' → logprob: -1.9278004169464111
    4. ' or' → logprob: -2.177800416946411
    5. ' ' → logprob: -2.927800416946411
    6. '>' → logprob: -3.177800416946411
    7. '>=' → logprob: -3.302800416946411
    8. ':' → logprob: -3.427800416946411
    9. ' >' → logprob: -3.927800416946411
    10. '):' → logprob: -3.927800416946411

Token 671: 'l' (ID: 75)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.8999158143997192
    2. ' ' → logprob: -1.1499158143997192
    3. '200' → logprob: -2.5249156951904297
    4. '10' → logprob: -2.6499156951904297
    5. 'C' → logprob: -3.5249156951904297
    6. '250' → logprob: -4.02491569519043
    7. '500' → logprob: -4.27491569519043
    8. '50' → logprob: -4.89991569519043
    9. '20' → logprob: -5.14991569519043
    10. 'L' → logprob: -5.27491569519043

Token 672: '',' (ID: 787)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.19905275106430054
    2. ')' → logprob: -3.3240528106689453
    3. ' >=' → logprob: -3.6990528106689453
    4. ' '' → logprob: -3.8240528106689453
    5. 'e' → logprob: -4.324052810668945
    6. '')' → logprob: -4.574052810668945
    7. ''>' → logprob: -4.824052810668945
    8. ' >' → logprob: -4.949052810668945
    9. ')'' → logprob: -4.949052810668945
    10. '>' → logprob: -4.949052810668945

Token 673: ' il' (ID: 1793)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5743365287780762
    2. ')' → logprob: -1.8243365287780762
    3. ''' → logprob: -2.074336528778076
    4. '\n' → logprob: -2.199336528778076
    5. ''\' → logprob: -2.449336528778076
    6. '   ' → logprob: -2.699336528778076
    7. ' ' → logprob: -3.074336528778076
    8. '"' → logprob: -3.574336528778076
    9. ' \' → logprob: -3.699336528778076
    10. ':' → logprob: -3.949336528778076

Token 674: ' faut' (ID: 17821)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -1.4069257974624634
    2. ' =' → logprob: -1.7819257974624634
    3. ' faut' → logprob: -1.7819257974624634
    4. '=' → logprob: -2.031925678253174
    5. ' +=' → logprob: -2.406925678253174
    6. ')' → logprob: -3.156925678253174
    7. ' faudra' → logprob: -3.156925678253174
    8. '+=' → logprob: -3.531925678253174
    9. 'return' → logprob: -4.156925678253174
    10. '+' → logprob: -4.281925678253174

Token 675: ' rav' (ID: 26005)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.414287805557251
    2. ' ' → logprob: -1.914287805557251
    3. 'cost' → logprob: -2.789287805557251
    4. ' cost' → logprob: -3.039287805557251
    5. ' d' → logprob: -4.164287567138672
    6. '+' → logprob: -4.414287567138672
    7. '10' → logprob: -4.664287567138672
    8. ' add' → logprob: -4.914287567138672
    9. ' ajouter' → logprob: -4.914287567138672
    10. ' +' → logprob: -5.039287567138672

Token 676: 'ita' (ID: 2580)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -1.0829684734344482
    2. 'ita' → logprob: -1.5829684734344482
    3. 'ail' → logprob: -1.8329684734344482
    4. 'a' → logprob: -2.4579684734344482
    5. 'it' → logprob: -2.7079684734344482
    6. 'al' → logprob: -3.5829684734344482
    7. '
' → logprob: -4.082968711853027
    8. '>' → logprob: -4.207968711853027
    9. 'e' → logprob: -4.707968711853027
    10. 'ital' → logprob: -5.082968711853027

Token 677: 'iller' (ID: 8781)
  Prédit: 'iller'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iller' → logprob: -0.21176546812057495
    2. 'll' → logprob: -1.9617655277252197
    3. 'ill' → logprob: -3.8367655277252197
    4. 'ller' → logprob: -3.9617655277252197
    5. 'l' → logprob: -5.086765289306641
    6. 'illir' → logprob: -6.586765289306641
    7. 'il' → logprob: -7.711765289306641
    8. 'ler' → logprob: -8.21176528930664
    9. '\' → logprob: -8.33676528930664
    10. 'illent' → logprob: -8.83676528930664

Token 678: ' et' (ID: 859)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11937975138425827
    2. ':
' → logprob: -3.119379758834839
    3. ' :' → logprob: -3.994379758834839
    4. ',' → logprob: -4.24437952041626
    5. '   ' → logprob: -4.36937952041626
    6. ' :
' → logprob: -5.74437952041626
    7. ' and' → logprob: -5.86937952041626
    8. '(' → logprob: -5.99437952041626
    9. '):' → logprob: -6.11937952041626
    10. '
' → logprob: -6.49437952041626

Token 679: ' ajouter' (ID: 78457)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.1353687047958374
    2. '1' → logprob: -2.135368824005127
    3. 'cost' → logprob: -2.135368824005127
    4. ' cost' → logprob: -2.635368824005127
    5. ' ajouter' → logprob: -3.010368824005127
    6. ' (' → logprob: -3.385368824005127
    7. ' d' → logprob: -3.510368824005127
    8. ' ' → logprob: -3.510368824005127
    9. ' +' → logprob: -3.885368824005127
    10. ' add' → logprob: -3.885368824005127

Token 680: ' un' (ID: 537)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02076096087694168
    2. ' ' → logprob: -4.020761013031006
    3. '10' → logprob: -6.895761013031006
    4. ' (' → logprob: -8.270760536193848
    5. ' l' → logprob: -8.395760536193848
    6. 'cost' → logprob: -8.395760536193848
    7. ' cost' → logprob: -8.645760536193848
    8. '(' → logprob: -8.770760536193848
    9. ' +' → logprob: -8.770760536193848
    10. 'l' → logprob: -9.270760536193848

Token 681: ' "' (ID: 392)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04303595796227455
    2. ' ' → logprob: -4.043035984039307
    3. '10' → logprob: -4.543035984039307
    4. ' +' → logprob: -5.293035984039307
    5. '+' → logprob: -5.418035984039307
    6. 'cost' → logprob: -6.543035984039307
    7. '(' → logprob: -7.918035984039307
    8. '\n' → logprob: -7.918035984039307
    9. ' (' → logprob: -8.168035507202148
    10. '`' → logprob: -8.293035507202148

Token 682: 'pal' (ID: 18413)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.46330493688583374
    2. '+' → logprob: -1.2133049964904785
    3. '1' → logprob: -4.5883049964904785
    4. '10' → logprob: -4.7133049964904785
    5. ' l' → logprob: -4.8383049964904785
    6. ' ' → logprob: -4.9633049964904785
    7. ' "' → logprob: -5.7133049964904785
    8. '*' → logprob: -5.7133049964904785
    9. ' *' → logprob: -5.8383049964904785
    10. ' )' → logprob: -5.9633049964904785

Token 683: 'ier' (ID: 905)
  Prédit: 'ier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ier' → logprob: -0.0036118284333497286
    2. 'e' → logprob: -6.503612041473389
    3. 'tier' → logprob: -8.12861156463623
    4. '```' → logprob: -8.50361156463623
    5. 'et' → logprob: -8.62861156463623
    6. 'l' → logprob: -8.75361156463623
    7. 'let' → logprob: -8.75361156463623
    8. '[' → logprob: -9.37861156463623
    9. 't' → logprob: -9.50361156463623
    10. '}' → logprob: -9.62861156463623

Token 684: '"
' (ID: 1092)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.4691787362098694
    2. ' "' → logprob: -1.3441786766052246
    3. 's' → logprob: -3.3441786766052246
    4. ' _' → logprob: -3.7191786766052246
    5. '_' → logprob: -4.094178676605225
    6. ' de' → logprob: -4.594178676605225
    7. '   ' → logprob: -4.969178676605225
    8. '_"' → logprob: -6.094178676605225
    9. '")' → logprob: -6.219178676605225
    10. ')' → logprob: -6.469178676605225

Token 685: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8536553382873535
    2. ':' → logprob: -1.1036553382873535
    3. ' +' → logprob: -2.7286553382873535
    4. ' :' → logprob: -3.4786553382873535
    5. ',' → logprob: -3.6036553382873535
    6. ' if' → logprob: -3.8536553382873535
    7. ':
' → logprob: -3.9786553382873535
    8. 'def' → logprob: -4.2286553382873535
    9. '):' → logprob: -4.2286553382873535
    10. ' :
' → logprob: -5.1036553382873535

Token 686: ' #' (ID: 1069)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07604911923408508
    2. '):' → logprob: -3.5760490894317627
    3. ' :' → logprob: -3.9510490894317627
    4. ')' → logprob: -4.326049327850342
    5. ',' → logprob: -5.701049327850342
    6. ':
' → logprob: -6.451049327850342
    7. '(' → logprob: -6.451049327850342
    8. '   ' → logprob: -6.701049327850342
    9. '+' → logprob: -6.951049327850342
    10. '):
' → logprob: -7.576049327850342

Token 687: '  ' (ID: 256)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.13268913328647614
    2. ' :' → logprob: -3.0076892375946045
    3. '   ' → logprob: -4.132688999176025
    4. '\n' → logprob: -4.507688999176025
    5. '
' → logprob: -4.757688999176025
    6. '):' → logprob: -5.257688999176025
    7. ':
' → logprob: -5.507688999176025
    8. '(' → logprob: -5.507688999176025
    9. ')' → logprob: -5.882688999176025
    10. ' ' → logprob: -5.882688999176025

Token 688: ' -' (ID: 533)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4983821511268616
    2. ':' → logprob: -1.3733820915222168
    3. ')' → logprob: -3.248382091522217
    4. ' :' → logprob: -3.623382091522217
    5. '):
' → logprob: -3.873382091522217
    6. '
' → logprob: -4.498382091522217
    7. '   ' → logprob: -4.748382091522217
    8. '+' → logprob: -5.248382091522217
    9. '\n' → logprob: -5.623382091522217
    10. 'if' → logprob: -5.748382091522217

Token 689: ' Sinon' (ID: 154924)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.36387643218040466
    2. ' if' → logprob: -1.738876461982727
    3. 'fuel' → logprob: -3.6138763427734375
    4. 'car' → logprob: -3.9888763427734375
    5. 'capacity' → logprob: -3.9888763427734375
    6. 'd' → logprob: -4.3638763427734375
    7. 'cost' → logprob: -4.4888763427734375
    8. 'cap' → logprob: -4.6138763427734375
    9. 'l' → logprob: -4.8638763427734375
    10. 'dist' → logprob: -5.2388763427734375

Token 690: ',' (ID: 11)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.15440969169139862
    2. ' return' → logprob: -3.029409646987915
    3. 'd' → logprob: -3.279409646987915
    4. ' cost' → logprob: -3.904409646987915
    5. ',' → logprob: -4.779409885406494
    6. 'return' → logprob: -5.154409885406494
    7. 'cost' → logprob: -5.154409885406494
    8. '   ' → logprob: -5.279409885406494
    9. ' if' → logprob: -5.654409885406494
    10. ':' → logprob: -6.029409885406494

Token 691: ' simplement' (ID: 45065)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6684215068817139
    2. ' return' → logprob: -0.9184215068817139
    3. 'cost' → logprob: -3.918421506881714
    4. 'd' → logprob: -4.543421745300293
    5. ' d' → logprob: -4.668421745300293
    6. 'car' → logprob: -4.793421745300293
    7. 'dist' → logprob: -4.918421745300293
    8. ' dist' → logprob: -5.043421745300293
    9. ' cost' → logprob: -5.043421745300293
    10. 'fuel' → logprob: -5.043421745300293

Token 692: ' addition' (ID: 5856)
  Prédit: '(cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(cost' → logprob: -1.2135554552078247
    2. 'cost' → logprob: -1.7135554552078247
    3. '(' → logprob: -1.9635554552078247
    4. 'return' → logprob: -2.213555335998535
    5. ' (' → logprob: -2.213555335998535
    6. '(
' → logprob: -2.963555335998535
    7. ' cost' → logprob: -3.213555335998535
    8. ' return' → logprob: -3.588555335998535
    9. 'd' → logprob: -4.088555335998535
    10. ' (
' → logprob: -4.588555335998535

Token 693: 'ner' (ID: 1247)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5050533413887024
    2. 'ner' → logprob: -1.5050532817840576
    3. '=' → logprob: -2.0050532817840576
    4. ' +=' → logprob: -4.130053520202637
    5. '   ' → logprob: -4.255053520202637
    6. 'ne' → logprob: -5.505053520202637
    7. 'n' → logprob: -6.380053520202637
    8. 'er' → logprob: -7.005053520202637
    9. ')' → logprob: -7.380053520202637
    10. ' d' → logprob: -7.880053520202637

Token 694: ' au' (ID: 2791)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5481034517288208
    2. ')' → logprob: -2.2981033325195312
    3. ',' → logprob: -2.5481033325195312
    4. ' +' → logprob: -2.7981033325195312
    5. '   ' → logprob: -3.2981033325195312
    6. '):' → logprob: -3.6731033325195312
    7. ' d' → logprob: -4.048103332519531
    8. '(d' → logprob: -4.173103332519531
    9. '+' → logprob: -4.298103332519531
    10. 'd' → logprob: -4.673103332519531

Token 695: ' coût' (ID: 73109)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6098982095718384
    2. 'cost' → logprob: -1.2348982095718384
    3. ' cost' → logprob: -1.9848982095718384
    4. ' d' → logprob: -4.109898090362549
    5. 'distance' → logprob: -5.109898090362549
    6. 'co' → logprob: -5.984898090362549
    7. ' coût' → logprob: -7.359898090362549
    8. 'dist' → logprob: -7.984898090362549
    9. 'car' → logprob: -8.109898567199707
    10. 'current' → logprob: -8.234898567199707

Token 696: ' courant' (ID: 74694)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08455272763967514
    2. '):' → logprob: -3.709552764892578
    3. '   ' → logprob: -3.834552764892578
    4. ' :' → logprob: -4.459552764892578
    5. ' +' → logprob: -5.459552764892578
    6. 'def' → logprob: -5.834552764892578
    7. ':
' → logprob: -5.834552764892578
    8. ' if' → logprob: -6.209552764892578
    9. ',' → logprob: -6.209552764892578
    10. ')' → logprob: -6.459552764892578

Token 697: '

' (ID: 279)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009956062771379948
    2. ':
' → logprob: -4.884955883026123
    3. '   ' → logprob: -6.384955883026123
    4. ' :' → logprob: -7.634955883026123
    5. '):' → logprob: -10.134956359863281
    6. ' :
' → logprob: -10.509956359863281
    7. ' if' → logprob: -10.884956359863281
    8. '():' → logprob: -11.759956359863281
    9. ':return' → logprob: -11.759956359863281
    10. ',' → logprob: -11.884956359863281

Token 698: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06960435211658478
    2. ' :' → logprob: -3.0696043968200684
    3. ':
' → logprob: -4.944604396820068
    4. '(' → logprob: -5.944604396820068
    5. '):' → logprob: -6.194604396820068
    6. ' :
' → logprob: -6.194604396820068
    7. ',' → logprob: -6.819604396820068
    8. '   ' → logprob: -7.069604396820068
    9. '(
' → logprob: -7.319604396820068
    10. ' (' → logprob: -7.444604396820068

Token 699: ' div' (ID: 4223)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9979138374328613
    2. ' if' → logprob: -1.1229138374328613
    3. '\n' → logprob: -2.1229138374328613
    4. '   ' → logprob: -3.4979138374328613
    5. 'l' → logprob: -3.7479138374328613
    6. ' l' → logprob: -3.7479138374328613
    7. '
' → logprob: -4.122913837432861
    8. 'd' → logprob: -4.247913837432861
    9. ' d' → logprob: -4.622913837432861
    10. ' 
' → logprob: -4.997913837432861

Token 700: '_d' (ID: 1565)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6273731589317322
    2. ' =' → logprob: -1.127373218536377
    3. '=' → logprob: -3.002373218536377
    4. '_' → logprob: -3.252373218536377
    5. '_,' → logprob: -3.627373218536377
    6. 'ision' → logprob: -5.377373218536377
    7. '   ' → logprob: -5.752373218536377
    8. 'isor' → logprob: -5.752373218536377
    9. '_idx' → logprob: -6.377373218536377
    10. '_index' → logprob: -6.377373218536377

Token 701: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.48267555236816406
    2. ',' → logprob: -0.9826755523681641
    3. '=' → logprob: -4.982675552368164
    4. ' ,' → logprob: -6.982675552368164
    5. ',d' → logprob: -7.982675552368164
    6. '   ' → logprob: -9.107675552368164
    7. ',_' → logprob: -9.732675552368164
    8. ' ' → logprob: -10.482675552368164
    9. '_' → logprob: -10.607675552368164
    10. '_,' → logprob: -10.732675552368164

Token 702: ' mod' (ID: 1812)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.7049880623817444
    2. 'mod' → logprob: -1.3299880027770996
    3. 'cost' → logprob: -2.0799880027770996
    4. 'rem' → logprob: -3.2049880027770996
    5. 'rest' → logprob: -3.3299880027770996
    6. 'div' → logprob: -4.4549880027771
    7. ' rem' → logprob: -4.8299880027771
    8. ' d' → logprob: -4.9549880027771
    9. 're' → logprob: -6.0799880027771
    10. ' mod' → logprob: -6.4549880027771

Token 703: '_d' (ID: 1565)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.040019843727350235
    2. ' =' → logprob: -3.2900197505950928
    3. ',' → logprob: -6.540019989013672
    4. 'd' → logprob: -8.040019989013672
    5. '_d' → logprob: -9.040019989013672
    6. '=d' → logprob: -10.790019989013672
    7. '   ' → logprob: -11.790019989013672
    8. ',d' → logprob: -11.790019989013672
    9. 'ulus' → logprob: -11.790019989013672
    10. ' ' → logprob: -11.915019989013672

Token 704: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22575899958610535
    2. '=' → logprob: -1.6007590293884277
    3. ',' → logprob: -7.975759029388428
    4. ' ' → logprob: -13.60075855255127
    5. ' ' → logprob: -14.85075855255127
    6. ' ,' → logprob: -15.10075855255127
    7. ')' → logprob: -15.72575855255127
    8. '   ' → logprob: -15.97575855255127
    9. '=d' → logprob: -16.350759506225586
    10. '  ' → logprob: -16.975759506225586

Token 705: ' div' (ID: 4223)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.406777024269104
    2. 'd' → logprob: -1.531777024269104
    3. ' div' → logprob: -2.2817769050598145
    4. ' d' → logprob: -4.1567769050598145
    5. '   ' → logprob: -8.406777381896973
    6. ' ' → logprob: -9.906777381896973
    7. '  ' → logprob: -12.156777381896973
    8. '	d' → logprob: -12.531777381896973
    9. '(div' → logprob: -12.531777381896973
    10. '	div' → logprob: -13.156777381896973

Token 706: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.03923337161540985
    2. 'dist' → logprob: -3.789233446121216
    3. '(d' → logprob: -4.289233207702637
    4. '(dist' → logprob: -6.164233207702637
    5. 'd' → logprob: -11.289233207702637
    6. '_dist' → logprob: -11.664233207702637
    7. '_mod' → logprob: -12.414233207702637
    8. ' dist' → logprob: -12.539233207702637
    9. '(' → logprob: -12.664233207702637
    10. '(div' → logprob: -13.164233207702637

Token 707: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.018387554213404655
    2. 'd' → logprob: -4.018387317657471
    3. ' (' → logprob: -9.393387794494629
    4. '(' → logprob: -9.393387794494629
    5. ' d' → logprob: -9.643387794494629
    6. '(
' → logprob: -12.768387794494629
    7. '	d' → logprob: -13.768387794494629
    8. ',d' → logprob: -14.518387794494629
    9. ')d' → logprob: -14.893387794494629
    10. '   ' → logprob: -15.018387794494629

Token 708: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006092322990298271
    2. ' ,' → logprob: -5.256092548370361
    3. ')' → logprob: -8.256092071533203
    4. ',
' → logprob: -9.006092071533203
    5. '[' → logprob: -9.631092071533203
    6. '(cost' → logprob: -10.131092071533203
    7. ',

' → logprob: -10.256092071533203
    8. '100' → logprob: -10.256092071533203
    9. 'cost' → logprob: -10.381092071533203
    10. ',l' → logprob: -10.381092071533203

Token 709: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.0004938178462907672
    2. ' cost' → logprob: -7.750494003295898
    3. '(cost' → logprob: -9.750494003295898
    4. '0' → logprob: -13.625494003295898
    5. '100' → logprob: -13.625494003295898
    6. '10' → logprob: -14.500494003295898
    7. '(' → logprob: -14.625494003295898
    8. '1' → logprob: -15.125494003295898
    9. '
' → logprob: -15.125494003295898
    10. '   ' → logprob: -15.375494003295898

Token 710: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04401484876871109
    2. ' ,' → logprob: -3.1690149307250977
    3. '(),' → logprob: -7.169014930725098
    4. '(' → logprob: -9.044014930725098
    5. ',
' → logprob: -10.169014930725098
    6. ')' → logprob: -10.794014930725098
    7. '[' → logprob: -11.794014930725098
    8. '),' → logprob: -12.169014930725098
    9. ' ' → logprob: -12.481514930725098
    10. 'def' → logprob: -12.606514930725098

Token 711: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -3.619311974034645e-05
    2. ' ' → logprob: -10.375036239624023
    3. '(' → logprob: -12.375036239624023
    4. '100' → logprob: -14.375036239624023
    5. 'l' → logprob: -17.250036239624023
    6. '1' → logprob: -17.875036239624023
    7. '
' → logprob: -18.375036239624023
    8. '   ' → logprob: -18.500036239624023
    9. '  ' → logprob: -18.625036239624023
    10. '۱۰' → logprob: -19.000036239624023

Token 712: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -7.588793960167095e-05
    2. '(' → logprob: -9.500076293945312
    3. '100' → logprob: -14.000076293945312
    4. ' ' → logprob: -16.500076293945312
    5. '1' → logprob: -18.250076293945312
    6. 'l' → logprob: -18.500076293945312
    7. ' (' → logprob: -19.500076293945312
    8. '１０' → logprob: -20.375076293945312
    9. '
' → logprob: -20.500076293945312
    10. '(l' → logprob: -21.000076293945312

Token 713: ' **' (ID: 6240)
  Prédit: '15'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '15' → logprob: -0.0009122979827225208
    2. '**' → logprob: -7.000912189483643
    3. '```' → logprob: -14.6259126663208
    4. '16' → logprob: -15.3759126663208
    5. '^' → logprob: -16.750911712646484
    6. ' ' → logprob: -17.625911712646484
    7. '*' → logprob: -17.625911712646484
    8. '015' → logprob: -17.875911712646484
    9. '+' → logprob: -18.000911712646484
    10. ' **' → logprob: -18.625911712646484

Token 714: ' ' (ID: 220)
  Prédit: '15'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '15' → logprob: -1.8624639324116288e-06
    2. '16' → logprob: -14.375001907348633
    3. '```' → logprob: -15.125001907348633
    4. '
' → logprob: -15.375001907348633
    5. '1' → logprob: -15.937501907348633
    6. '5' → logprob: -16.125001907348633
    7. '

' → logprob: -16.750001907348633
    8. '14' → logprob: -17.000001907348633
    9. '6' → logprob: -17.062501907348633
    10. '10' → logprob: -17.125001907348633

Token 715: '15' (ID: 1055)
  Prédit: '15'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '15' → logprob: -2.935296834039036e-06
    2. '16' → logprob: -13.50000286102295
    3. '14' → logprob: -14.87500286102295
    4. '9' → logprob: -15.12500286102295
    5. '10' → logprob: -15.62500286102295
    6. '12' → logprob: -15.93750286102295
    7. '6' → logprob: -16.312503814697266
    8. '5' → logprob: -16.312503814697266
    9. '1' → logprob: -16.625003814697266
    10. '
' → logprob: -16.750003814697266

Token 716: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011411691084504128
    2. ')
' → logprob: -6.87614107131958
    3. '   ' → logprob: -9.251141548156738
    4. ' )' → logprob: -11.751141548156738
    5. ')
' → logprob: -12.626141548156738
    6. ')

' → logprob: -14.626141548156738
    7. '),' → logprob: -16.501140594482422
    8. ')`' → logprob: -16.501140594482422
    9. ' ' → logprob: -16.751140594482422
    10. ',' → logprob: -17.126140594482422

Token 717: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6123865842819214
    2. '
' → logprob: -1.1123865842819214
    3. ' if' → logprob: -2.362386703491211
    4. '    
' → logprob: -4.487386703491211
    5. ' 
' → logprob: -5.112386703491211
    6. 'if' → logprob: -5.487386703491211
    7. '  
' → logprob: -5.862386703491211
    8. '<|end|>' → logprob: -5.862386703491211
    9. '   
' → logprob: -6.362386703491211
    10. '\n' → logprob: -6.487386703491211

Token 718: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016241395846009254
    2. 'if' → logprob: -5.016241550445557
    3. ' if' → logprob: -5.266241550445557
    4. '
' → logprob: -6.141241550445557
    5. '    
' → logprob: -6.266241550445557
    6. ',' → logprob: -9.891241073608398
    7. '	if' → logprob: -10.266241073608398
    8. '<|end|>' → logprob: -10.391241073608398
    9. '   
' → logprob: -10.516241073608398
    10. ')' → logprob: -10.891241073608398

Token 719: ' div' (ID: 4223)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.7515814900398254
    2. 'if' → logprob: -1.0015814304351807
    3. ' if' → logprob: -2.5015814304351807
    4. '(div' → logprob: -3.7515814304351807
    5. '10' → logprob: -4.12658166885376
    6. '(' → logprob: -4.12658166885376
    7. ' div' → logprob: -5.25158166885376
    8. ' (' → logprob: -5.37658166885376
    9. 'If' → logprob: -5.50158166885376
    10. '0' → logprob: -5.62658166885376

Token 720: '_d' (ID: 1565)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.19755128026008606
    2. 'mod' → logprob: -2.1975512504577637
    3. '<|end|>' → logprob: -3.3225512504577637
    4. 'div' → logprob: -4.322551250457764
    5. ' ,' → logprob: -5.697551250457764
    6. '_,' → logprob: -6.072551250457764
    7. 'isible' → logprob: -6.447551250457764
    8. ')' → logprob: -6.572551250457764
    9. 'ision' → logprob: -6.822551250457764
    10. '_d' → logprob: -6.822551250457764

Token 721: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0028315072413533926
    2. '<|end|>' → logprob: -6.37783145904541
    3. ' ,' → logprob: -7.12783145904541
    4. 'div' → logprob: -8.87783145904541
    5. '<|end|>' → logprob: -10.25283145904541
    6. '#' → logprob: -10.50283145904541
    7. '   ' → logprob: -10.75283145904541
    8. '+' → logprob: -11.00283145904541
    9. '=' → logprob: -11.37783145904541
    10. ',
' → logprob: -11.50283145904541

Token 722: ' nombre' (ID: 9733)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.44941696524620056
    2. '(div' → logprob: -1.324416995048523
    3. '(d' → logprob: -2.6994168758392334
    4. ' div' → logprob: -3.8244168758392334
    5. 'd' → logprob: -5.6994171142578125
    6. ' (' → logprob: -5.9494171142578125
    7. '(dist' → logprob: -7.9494171142578125
    8. '((' → logprob: -8.574417114257812
    9. ' d' → logprob: -9.074417114257812
    10. 'dist' → logprob: -9.949417114257812

Token 723: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -1.216697335243225
    2. '_r' → logprob: -1.341697335243225
    3. ' de' → logprob: -1.966697335243225
    4. 'rav' → logprob: -2.2166972160339355
    5. '_de' → logprob: -3.3416972160339355
    6. '_' → logprob: -3.5916972160339355
    7. ',' → logprob: -3.9666972160339355
    8. 'des' → logprob: -4.2166972160339355
    9. '_pal' → logprob: -4.3416972160339355
    10. 'd' → logprob: -4.5916972160339355

Token 724: ' rav' (ID: 26005)
  Prédit: 'pal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pal' → logprob: -0.5696015954017639
    2. 'rav' → logprob: -0.9446015954017639
    3. 'div' → logprob: -3.319601535797119
    4. ' rav' → logprob: -5.944601535797119
    5. ' pal' → logprob: -6.194601535797119
    6. 'ral' → logprob: -6.694601535797119
    7. ' ' → logprob: -7.569601535797119
    8. 'r' → logprob: -7.694601535797119
    9. 'ram' → logprob: -8.694602012634277
    10. 'refu' → logprob: -8.694602012634277

Token 725: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.0004848922253586352
    2. 'itul' → logprob: -9.500484466552734
    3. 'ital' → logprob: -9.875484466552734
    4. 'ita' → logprob: -9.875484466552734
    5. '```' → logprob: -10.000484466552734
    6. 'itl' → logprob: -10.125484466552734
    7. 'ит' → logprob: -10.625484466552734
    8. '>' → logprob: -10.625484466552734
    9. 'itais' → logprob: -11.125484466552734
    10. '**' → logprob: -11.125484466552734

Token 726: 'ail' (ID: 663)
  Prédit: 'ail'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ail' → logprob: -0.0010836597066372633
    2. 'ailleurs' → logprob: -7.501083850860596
    3. 'al' → logprob: -9.001083374023438
    4. 'aux' → logprob: -9.251083374023438
    5. 'aul' → logprob: -9.376083374023438
    6. 'tail' → logprob: -9.876083374023438
    7. 'ails' → logprob: -9.876083374023438
    8. 'aille' → logprob: -10.751083374023438
    9. 'ault' → logprob: -11.376083374023438
    10. 'a' → logprob: -11.501083374023438

Token 727: 'lements' (ID: 11031)
  Prédit: 'lements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lements' → logprob: -0.061709050089120865
    2. 'ements' → logprob: -2.93670916557312
    3. 're' → logprob: -5.436708927154541
    4. 'nements' → logprob: -6.811708927154541
    5. 'ments' → logprob: -7.436708927154541
    6. 'l' → logprob: -7.936708927154541
    7. 'se' → logprob: -9.5617094039917
    8. 'lement' → logprob: -9.6867094039917
    9. 'le' → logprob: -9.9367094039917
    10. 'cements' → logprob: -10.3117094039917

Token 728: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007129086880013347
    2. ' ,' → logprob: -8.000713348388672
    3. 'mod' → logprob: -8.875713348388672
    4. 'car' → logprob: -9.375713348388672
    5. '   ' → logprob: -9.500713348388672
    6. ';' → logprob: -11.000713348388672
    7. 'div' → logprob: -11.125713348388672
    8. 'if' → logprob: -11.625713348388672
    9. ',
' → logprob: -12.000713348388672
    10. ' if' → logprob: -12.125713348388672

Token 729: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.01669449172914028
    2. ' mod' → logprob: -4.14169454574585
    3. 'car' → logprob: -8.641694068908691
    4. 'fuel' → logprob: -9.141694068908691
    5. 'rest' → logprob: -9.516694068908691
    6. '
' → logprob: -10.141694068908691
    7. 'div' → logprob: -10.266694068908691
    8. ' carbur' → logprob: -10.391694068908691
    9. 'rem' → logprob: -10.641694068908691
    10. '   ' → logprob: -10.766694068908691

Token 730: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.06305169314146042
    2. 'd' → logprob: -3.188051700592041
    3. 'cost' → logprob: -4.188051700592041
    4. '_' → logprob: -6.688051700592041
    5. '=' → logprob: -7.313051700592041
    6. '_cost' → logprob: -7.563051700592041
    7. ' =' → logprob: -7.813051700592041
    8. ',' → logprob: -7.938051700592041
    9. 'mod' → logprob: -8.063051223754883
    10. ' cost' → logprob: -9.188051223754883

Token 731: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.40065866708755493
    2. ' =' → logprob: -1.1506586074829102
    3. ',' → logprob: -5.40065860748291
    4. '   ' → logprob: -5.90065860748291
    5. ')' → logprob: -6.02565860748291
    6. '<|end|>' → logprob: -6.52565860748291
    7. ' if' → logprob: -6.90065860748291
    8. 'if' → logprob: -7.77565860748291
    9. '<|end|>' → logprob: -8.40065860748291
    10. '+' → logprob: -8.40065860748291

Token 732: ' reste' (ID: 26769)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.4901295602321625
    2. 'car' → logprob: -1.4901295900344849
    3. ' carbur' → logprob: -3.6151294708251953
    4. '(mod' → logprob: -3.7401294708251953
    5. 's' → logprob: -4.115129470825195
    6. '(car' → logprob: -4.365129470825195
    7. 'val' → logprob: -4.865129470825195
    8. 'co' → logprob: -4.990129470825195
    9. 'cost' → logprob: -5.115129470825195
    10. 'd' → logprob: -5.240129470825195

Token 733: ' de' (ID: 334)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4878474175930023
    2. '<|end|>' → logprob: -1.8628474473953247
    3. '   ' → logprob: -1.9878474473953247
    4. ',' → logprob: -3.362847328186035
    5. ')' → logprob: -3.487847328186035
    6. 'if' → logprob: -4.487847328186035
    7. '<|end|>' → logprob: -4.862847328186035
    8. '    
' → logprob: -5.862847328186035
    9. '
' → logprob: -6.487847328186035
    10. ' ,' → logprob: -7.112847328186035

Token 734: ' carbur' (ID: 139558)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -1.0048370361328125
    2. 'la' → logprob: -1.8798370361328125
    3. ' carbur' → logprob: -1.8798370361328125
    4. 'l' → logprob: -2.0048370361328125
    5. ' la' → logprob: -2.3798370361328125
    6. 'mod' → logprob: -3.3798370361328125
    7. '10' → logprob: -4.0048370361328125
    8. ' (' → logprob: -4.6298370361328125
    9. '(car' → logprob: -5.0048370361328125
    10. ' l' → logprob: -5.6298370361328125

Token 735: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.0009743517730385065
    2. '**' → logprob: -8.875974655151367
    3. 'a' → logprob: -9.000974655151367
    4. '}' → logprob: -9.000974655151367
    5. '   ' → logprob: -9.625974655151367
    6. 'e' → logprob: -9.625974655151367
    7. '*' → logprob: -9.875974655151367
    8. 'nt' → logprob: -10.125974655151367
    9. 't' → logprob: -10.625974655151367
    10. 'tant' → logprob: -10.750974655151367

Token 736: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.041601210832595825
    2. '
' → logprob: -3.5416011810302734
    3. ' if' → logprob: -4.916601181030273
    4. '    
' → logprob: -5.916601181030273
    5. 'if' → logprob: -7.666601181030273
    6. ')' → logprob: -7.916601181030273
    7. ',' → logprob: -8.166601181030273
    8. '
' → logprob: -8.666601181030273
    9. '	if' → logprob: -9.166601181030273
    10. '  
' → logprob: -9.916601181030273

Token 737: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.25503048300743103
    2. '   ' → logprob: -2.380030393600464
    3. ' if' → logprob: -3.005030393600464
    4. '\n' → logprob: -3.630030393600464
    5. '<|end|>' → logprob: -4.255030632019043
    6. '```' → logprob: -4.630030632019043
    7. ' 
' → logprob: -4.880030632019043
    8. '    
' → logprob: -5.255030632019043
    9. '  
' → logprob: -5.255030632019043
    10. ')' → logprob: -5.755030632019043

Token 738: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5832220911979675
    2. ' if' → logprob: -1.2082221508026123
    3. ' 
' → logprob: -3.0832221508026123
    4. 'if' (adapté à ' if') → logprob: -3.7082221508026123
    5. ' ' → logprob: -4.083221912384033
    6. '\n' → logprob: -4.583221912384033
    7. '```' → logprob: -4.833221912384033
    8. '	if' → logprob: -4.958221912384033
    9. '<|end|>' → logprob: -5.083221912384033
    10. '
' → logprob: -5.208221912384033

Token 739: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.026904618367552757
    2. ' mod' → logprob: -3.651904582977295
    3. 'div' → logprob: -7.901904582977295
    4. 'cost' → logprob: -9.276905059814453
    5. '(mod' → logprob: -9.901905059814453
    6. ' div' → logprob: -10.651905059814453
    7. '   ' → logprob: -10.651905059814453
    8. ' cost' → logprob: -11.151905059814453
    9. '	mod' → logprob: -11.276905059814453
    10. ' ' → logprob: -11.776905059814453

Token 740: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -2.5107177862082608e-05
    2. '_' → logprob: -10.875024795532227
    3. 'd' → logprob: -12.125024795532227
    4. '_cost' → logprob: -15.875024795532227
    5. ' _' → logprob: -16.000024795532227
    6. '_c' → logprob: -16.750024795532227
    7. '_
' → logprob: -16.750024795532227
    8. '+' → logprob: -16.875024795532227
    9. '[' → logprob: -16.875024795532227
    10. ')' → logprob: -17.312524795532227

Token 741: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.8276759386062622
    2. ' >' → logprob: -0.9526759386062622
    3. ' +' → logprob: -2.3276758193969727
    4. '+' → logprob: -2.5776758193969727
    5. '<=' → logprob: -6.827675819396973
    6. '==' → logprob: -7.202675819396973
    7. ' <=' → logprob: -7.327675819396973
    8. '>=' → logprob: -7.452675819396973
    9. ' >=' → logprob: -8.452675819396973
    10. '<' → logprob: -8.452675819396973

Token 742: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.007538960315287113
    2. '10' → logprob: -6.007538795471191
    3. 'L' → logprob: -6.257538795471191
    4. '0' → logprob: -6.632538795471191
    5. '100' → logprob: -7.132538795471191
    6. '1' → logprob: -7.757538795471191
    7. ' l' → logprob: -7.882538795471191
    8. '999' → logprob: -11.257538795471191
    9. 'limit' → logprob: -11.257538795471191
    10. 'capacity' → logprob: -11.257538795471191

Token 743: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004847803618758917
    2. ' :' → logprob: -5.379848003387451
    3. ':return' → logprob: -9.254847526550293
    4. '<|end|>' → logprob: -9.879847526550293
    5. ':
' → logprob: -10.504847526550293
    6. ' or' → logprob: -10.629847526550293
    7. ' and' → logprob: -12.254847526550293
    8. '):' → logprob: -12.379847526550293
    9. ' ' → logprob: -12.754847526550293
    10. ':#' → logprob: -13.254847526550293

Token 744: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005889333784580231
    2. 'div' → logprob: -5.880889415740967
    3. ' div' → logprob: -6.755889415740967
    4. '   ' → logprob: -7.130889415740967
    5. '+' → logprob: -7.880889415740967
    6. 'return' → logprob: -8.505888938903809
    7. ' +' → logprob: -8.755888938903809
    8. ' return' → logprob: -9.130888938903809
    9. '        
' → logprob: -10.505888938903809
    10. '<div' → logprob: -10.630888938903809

Token 745: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1359979808330536
    2. 'div' → logprob: -2.135998010635376
    3. '+' → logprob: -5.760997772216797
    4. 'return' → logprob: -5.885997772216797
    5. ' div' → logprob: -6.510997772216797
    6. '   ' → logprob: -7.010997772216797
    7. '	div' → logprob: -8.885997772216797
    8. '
' → logprob: -9.260997772216797
    9. '<div' → logprob: -9.635997772216797
    10. '(div' → logprob: -9.760997772216797

Token 746: ' Si' (ID: 7832)
  Prédit: ' div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' div' → logprob: -0.38538864254951477
    2. 'div' → logprob: -1.2603886127471924
    3. ' return' → logprob: -4.2603888511657715
    4. 'return' → logprob: -4.2603888511657715
    5. '   ' → logprob: -5.6353888511657715
    6. '
' → logprob: -6.2603888511657715
    7. '\n' → logprob: -7.3853888511657715
    8. '       ' → logprob: -7.5103888511657715
    9. '	div' → logprob: -8.635388374328613
    10. '1' → logprob: -8.760388374328613

Token 747: ' le' (ID: 505)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.6703007817268372
    2. 'mod' → logprob: -1.9203007221221924
    3. ' mod' → logprob: -2.5453007221221924
    4. '1' → logprob: -2.5453007221221924
    5. 'cost' → logprob: -3.1703007221221924
    6. 'l' → logprob: -3.4203007221221924
    7. ' ' → logprob: -3.4203007221221924
    8. ' cost' → logprob: -3.4203007221221924
    9. '0' → logprob: -3.7953007221221924
    10. ' True' → logprob: -4.6703009605407715

Token 748: ' carbur' (ID: 139558)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.19248341023921967
    2. ' mod' → logprob: -2.817483425140381
    3. 'cost' → logprob: -2.942483425140381
    4. ' cost' → logprob: -3.192483425140381
    5. 'div' → logprob: -4.567483425140381
    6. ' l' → logprob: -6.067483425140381
    7. 'l' → logprob: -6.192483425140381
    8. 'car' → logprob: -6.192483425140381
    9. ' div' → logprob: -6.692483425140381
    10. ' ' → logprob: -7.567483425140381

Token 749: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -4.024604277219623e-05
    2. '**' → logprob: -12.125040054321289
    3. '}' → logprob: -12.125040054321289
    4. '>' → logprob: -12.500040054321289
    5. '_' → logprob: -12.750040054321289
    6. '   ' → logprob: -12.875040054321289
    7. 'a' → logprob: -13.000040054321289
    8. '*' → logprob: -13.000040054321289
    9. '=' → logprob: -13.500040054321289
    10. '__' → logprob: -13.500040054321289

Token 750: ' restant' (ID: 172358)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.17458800971508026
    2. '>' → logprob: -2.6745879650115967
    3. '+' → logprob: -3.0495879650115967
    4. ' +' → logprob: -3.4245879650115967
    5. ' >=' → logprob: -4.799588203430176
    6. '>=' → logprob: -6.674588203430176
    7. '   ' → logprob: -8.299588203430176
    8. ' exceeds' → logprob: -8.299588203430176
    9. '<|end|>' → logprob: -8.424588203430176
    10. ' dépass' → logprob: -8.549588203430176

Token 751: ' dépasse' (ID: 165701)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.8736506700515747
    2. ' >' → logprob: -0.9986506700515747
    3. ':' → logprob: -2.498650550842285
    4. '+' → logprob: -2.748650550842285
    5. '>' → logprob: -2.998650550842285
    6. ' >=' → logprob: -4.623650550842285
    7. ' :' → logprob: -5.873650550842285
    8. '>=' → logprob: -6.123650550842285
    9. ' ==' → logprob: -6.748650550842285
    10. '==' → logprob: -7.373650550842285

Token 752: ' la' (ID: 557)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.6142892837524414
    2. 'l' → logprob: -0.8642892837524414
    3. '0' → logprob: -3.8642892837524414
    4. ' ' → logprob: -4.114289283752441
    5. '1' → logprob: -8.489289283752441
    6. ' ' → logprob: -10.489289283752441
    7. '10' → logprob: -10.489289283752441
    8. '<|end|>' → logprob: -11.739289283752441
    9. '	l' → logprob: -11.864289283752441
    10. '  ' → logprob: -12.114289283752441

Token 753: ' capacité' (ID: 62575)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0828934907913208
    2. ' l' → logprob: -2.7078933715820312
    3. '0' → logprob: -5.707893371582031
    4. ' ' → logprob: -5.957893371582031
    5. ''' → logprob: -6.207893371582031
    6. '10' → logprob: -6.332893371582031
    7. 'space' → logprob: -6.957893371582031
    8. ' ' → logprob: -8.207893371582031
    9. 'cap' → logprob: -8.332893371582031
    10. '1' → logprob: -8.457893371582031

Token 754: ' maximale' (ID: 76380)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07091014832258224
    2. ' :' → logprob: -3.0709102153778076
    3. ' +' → logprob: -4.9459099769592285
    4. '+' → logprob: -5.0709099769592285
    5. ' or' → logprob: -5.9459099769592285
    6. ' and' → logprob: -6.1959099769592285
    7. '   ' → logprob: -6.4459099769592285
    8. ',' → logprob: -7.4459099769592285
    9. ':
' → logprob: -7.5709099769592285
    10. '+:' → logprob: -7.9459099769592285

Token 755: ' autor' (ID: 13432)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05050519108772278
    2. '   ' → logprob: -3.5505051612854004
    3. ':
' → logprob: -4.6755051612854
    4. ' :' → logprob: -5.3005051612854
    5. '+' → logprob: -6.3005051612854
    6. ' or' → logprob: -6.8005051612854
    7. ',' → logprob: -6.8005051612854
    8. ':return' → logprob: -7.4255051612854
    9. '       ' → logprob: -7.8005051612854
    10. ' and' → logprob: -8.175505638122559

Token 756: 'isée' (ID: 59331)
  Prédit: 'isé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isé' → logprob: -0.3028546869754791
    2. 'isée' → logprob: -1.4278546571731567
    3. 'ité' → logprob: -4.302854537963867
    4. 'ise' → logprob: -5.552854537963867
    5. 'e' → logprob: -7.302854537963867
    6. ')' → logprob: -7.302854537963867
    7. 'ite' → logprob: -7.552854537963867
    8. 'é' → logprob: -7.927854537963867
    9. 'ized' → logprob: -8.427854537963867
    10. 'is' → logprob: -8.552854537963867

Token 757: ' '' (ID: 461)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04756950959563255
    2. ':
' → logprob: -3.422569513320923
    3. '   ' → logprob: -5.047569274902344
    4. ' :' → logprob: -5.797569274902344
    5. '+' → logprob: -6.422569274902344
    6. ':return' → logprob: -7.422569274902344
    7. ',' → logprob: -7.797569274902344
    8. ' :
' → logprob: -8.047569274902344
    9. ' +' → logprob: -8.172569274902344
    10. '       ' → logprob: -8.547569274902344

Token 758: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.04913670942187309
    2. ' l' → logprob: -3.0491366386413574
    3. '0' → logprob: -7.674136638641357
    4. ' ' → logprob: -10.299137115478516
    5. '10' → logprob: -11.424137115478516
    6. ')' → logprob: -11.924137115478516
    7. ' )' → logprob: -12.549137115478516
    8. ' ' → logprob: -12.549137115478516
    9. '1' → logprob: -12.799137115478516
    10. '100' → logprob: -12.924137115478516

Token 759: ''
' (ID: 2207)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.024382999166846275
    2. ':
' → logprob: -4.649383068084717
    3. ' :' → logprob: -5.274383068084717
    4. '):' → logprob: -5.524383068084717
    5. ',' → logprob: -6.149383068084717
    6. ' and' → logprob: -6.649383068084717
    7. '':' → logprob: -7.649383068084717
    8. '   ' → logprob: -7.899383068084717
    9. '):
' → logprob: -8.274382591247559
    10. ')' → logprob: -8.399382591247559

Token 760: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17533716559410095
    2. '+' → logprob: -3.050337076187134
    3. '   ' → logprob: -3.175337076187134
    4. ':' → logprob: -3.300337076187134
    5. ' +' → logprob: -4.550337314605713
    6. '\n' → logprob: -5.300337314605713
    7. ':
' → logprob: -5.300337314605713
    8. ' return' → logprob: -5.550337314605713
    9. '
' → logprob: -6.300337314605713
    10. ' :' → logprob: -6.425337314605713

Token 761: ' #' (ID: 1069)
  Prédit: ' div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' div' → logprob: -0.4784791171550751
    2. 'div' → logprob: -1.1034791469573975
    3. ' return' → logprob: -3.7284791469573975
    4. '+' → logprob: -4.353478908538818
    5. 'return' → logprob: -4.603478908538818
    6. '
' → logprob: -8.228479385375977
    7. '   ' → logprob: -8.353479385375977
    8. ' +' → logprob: -8.353479385375977
    9. '    ' → logprob: -8.603479385375977
    10. '+
' → logprob: -8.978479385375977

Token 762: ' On' (ID: 2160)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.47046908736228943
    2. ' div' → logprob: -1.0954691171646118
    3. 'return' → logprob: -3.8454689979553223
    4. ' return' → logprob: -4.095468997955322
    5. '+' → logprob: -6.595468997955322
    6. '   ' → logprob: -7.470468997955322
    7. '       ' → logprob: -7.595468997955322
    8. '	div' → logprob: -9.59546947479248
    9. '
' → logprob: -9.84546947479248
    10. '    ' → logprob: -9.97046947479248

Token 763: ' doit' (ID: 21822)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.7857227921485901
    2. ' return' → logprob: -1.4107227325439453
    3. 'div' → logprob: -2.1607227325439453
    4. '   ' → logprob: -3.2857227325439453
    5. '=' → logprob: -3.4107227325439453
    6. ' +=' → logprob: -3.5357227325439453
    7. '+' → logprob: -3.6607227325439453
    8. '+=' → logprob: -4.285722732543945
    9. '       ' → logprob: -4.410722732543945
    10. ' =' → logprob: -4.910722732543945

Token 764: ' rav' (ID: 26005)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.4205271899700165
    2. 'return' → logprob: -1.2955272197723389
    3. '(div' → logprob: -3.295527219772339
    4. ' return' → logprob: -4.29552698135376
    5. ' div' → logprob: -4.79552698135376
    6. ' (' → logprob: -5.67052698135376
    7. '(' → logprob: -6.29552698135376
    8. 'add' → logprob: -6.67052698135376
    9. '(
' → logprob: -7.17052698135376
    10. '   ' → logprob: -7.42052698135376

Token 765: 'ita' (ID: 2580)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.7053251266479492
    2. 'ita' → logprob: -0.7053251266479492
    3. 'ital' → logprob: -4.455325126647949
    4. 'itur' → logprob: -9.58032512664795
    5. '>' → logprob: -10.45532512664795
    6. 'itas' → logprob: -10.58032512664795
    7. 'ail' → logprob: -10.58032512664795
    8. '```' → logprob: -10.58032512664795
    9. '_' → logprob: -10.70532512664795
    10. '
' → logprob: -10.70532512664795

Token 766: 'iller' (ID: 8781)
  Prédit: 'iller'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iller' → logprob: -0.04121965542435646
    2. 'ller' → logprob: -3.291219711303711
    3. 'll' → logprob: -6.666219711303711
    4. 'ill' → logprob: -7.041219711303711
    5. 'l' → logprob: -7.291219711303711
    6. 'illir' → logprob: -9.291219711303711
    7. 'iler' → logprob: -9.541219711303711
    8. '\' → logprob: -10.791219711303711
    9. 'il' → logprob: -10.916219711303711
    10. 'i' → logprob: -11.041219711303711

Token 767: ',' (ID: 11)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.5908342599868774
    2. '+' → logprob: -2.090834140777588
    3. ',' → logprob: -2.590834140777588
    4. ' +' → logprob: -2.715834140777588
    5. ' div' → logprob: -2.840834140777588
    6. '   ' → logprob: -3.340834140777588
    7. ' and' → logprob: -3.715834140777588
    8. '
' → logprob: -4.840834140777588
    9. '+
' → logprob: -4.840834140777588
    10. '(div' → logprob: -4.840834140777588

Token 768: ' donc' (ID: 14206)
  Prédit: ' div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' div' → logprob: -0.46349895000457764
    2. 'div' → logprob: -1.3384989500045776
    3. ' return' → logprob: -3.088499069213867
    4. '+' → logprob: -3.338499069213867
    5. 'return' → logprob: -4.838499069213867
    6. '       ' → logprob: -5.088499069213867
    7. '   ' → logprob: -5.713499069213867
    8. ' +' → logprob: -5.963499069213867
    9. '\n' → logprob: -5.963499069213867
    10. '+
' → logprob: -6.838499069213867

Token 769: ' on' (ID: 402)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.6294063329696655
    2. '(div' → logprob: -1.5044063329696655
    3. 'return' → logprob: -1.8794063329696655
    4. ' div' → logprob: -2.879406452178955
    5. ' return' → logprob: -3.754406452178955
    6. ' (' → logprob: -4.754406452178955
    7. '(' → logprob: -6.254406452178955
    8. '       ' → logprob: -7.004406452178955
    9. '   ' → logprob: -7.004406452178955
    10. '(return' → logprob: -9.754405975341797

Token 770: ' passe' (ID: 22210)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.271395742893219
    2. 'div' → logprob: -1.7713956832885742
    3. ' return' → logprob: -3.271395683288574
    4. ' div' → logprob: -4.521395683288574
    5. '+=' → logprob: -4.521395683288574
    6. '+' → logprob: -6.396395683288574
    7. ' +=' → logprob: -6.521395683288574
    8. '       ' → logprob: -6.646395683288574
    9. '(div' → logprob: -7.271395683288574
    10. '   ' → logprob: -7.646395683288574

Token 771: ' au' (ID: 2791)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.14613741636276245
    2. '(div' → logprob: -3.0211374759674072
    3. ' div' → logprob: -3.3961374759674072
    4. ' to' → logprob: -3.7711374759674072
    5. 'to' → logprob: -4.396137237548828
    6. '   ' → logprob: -5.396137237548828
    7. ' ' → logprob: -5.771137237548828
    8. ' (' → logprob: -6.146137237548828
    9. '       ' → logprob: -6.271137237548828
    10. '(' → logprob: -6.271137237548828

Token 772: ' pal' (ID: 5337)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.04337354376912117
    2. '(div' → logprob: -3.7933735847473145
    3. ' div' → logprob: -3.9183735847473145
    4. 'next' → logprob: -11.293373107910156
    5. ' (' → logprob: -11.918373107910156
    6. '	div' → logprob: -12.043373107910156
    7. '(' → logprob: -12.293373107910156
    8. '```' → logprob: -12.543373107910156
    9. '+' → logprob: -12.793373107910156
    10. '1' → logprob: -12.793373107910156

Token 773: 'ier' (ID: 905)
  Prédit: 'ier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ier' → logprob: -0.0008600078872404993
    2. 'tier' → logprob: -7.625860214233398
    3. '```' → logprob: -8.750860214233398
    4. '   ' → logprob: -10.375860214233398
    5. '  ' → logprob: -10.750860214233398
    6. 'l' → logprob: -10.875860214233398
    7. '=' → logprob: -11.250860214233398
    8. '**' → logprob: -11.375860214233398
    9. 'rier' → logprob: -11.500860214233398
    10. '_' → logprob: -11.750860214233398

Token 774: ' supérieur' (ID: 98491)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.43541625142097473
    2. ',' → logprob: -2.0604162216186523
    3. '\n' → logprob: -2.0604162216186523
    4. '   ' → logprob: -2.9354162216186523
    5. '(div' → logprob: -4.935416221618652
    6. '        
' → logprob: -5.310416221618652
    7. '           ' → logprob: -5.435416221618652
    8. 'div' → logprob: -5.560416221618652
    9. ',
' → logprob: -5.810416221618652
    10. ' (' → logprob: -5.935416221618652

Token 775: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9158791899681091
    2. ',' → logprob: -1.415879249572754
    3. '   ' → logprob: -2.290879249572754
    4. '\n' → logprob: -2.665879249572754
    5. '+' → logprob: -3.165879249572754
    6. 'div' → logprob: -3.540879249572754
    7. '
' → logprob: -3.665879249572754
    8. ':' → logprob: -4.165879249572754
    9. ' +' → logprob: -4.415879249572754
    10. '        
' → logprob: -4.665879249572754

Token 776: '       ' (ID: 309)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.8304668664932251
    2. '       ' → logprob: -1.080466866493225
    3. '   ' → logprob: -1.830466866493225
    4. '+' → logprob: -4.4554667472839355
    5. '(' → logprob: -5.0804667472839355
    6. '        
' → logprob: -5.4554667472839355
    7. '(
' → logprob: -5.4554667472839355
    8. '+
' → logprob: -5.5804667472839355
    9. '    
' → logprob: -5.7054667472839355
    10. ',' → logprob: -5.8304667472839355

Token 777: ' new' (ID: 620)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.293725848197937
    2. ' div' → logprob: -1.418725848197937
    3. '\n' → logprob: -4.793725967407227
    4. '(div' → logprob: -6.418725967407227
    5. 'return' → logprob: -7.668725967407227
    6. '+' → logprob: -8.168725967407227
    7. ' return' → logprob: -8.168725967407227
    8. ' (' → logprob: -8.418725967407227
    9. '10' → logprob: -8.543725967407227
    10. '
' → logprob: -8.543725967407227

Token 778: '_d' (ID: 1565)
  Prédit: '_div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_div' → logprob: -0.6418022513389587
    2. '_' → logprob: -1.1418023109436035
    3. '_pal' → logprob: -2.6418023109436035
    4. '_cost' → logprob: -3.1418023109436035
    5. ' _' → logprob: -3.8918023109436035
    6. '_d' → logprob: -5.1418023109436035
    7. 'div' → logprob: -5.2668023109436035
    8. '_dist' → logprob: -6.0168023109436035
    9. '_distance' → logprob: -6.8918023109436035
    10. '_diff' → logprob: -7.3918023109436035

Token 779: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47750967741012573
    2. '=' → logprob: -0.9775096774101257
    3. ',' → logprob: -5.852509498596191
    4. 'div' → logprob: -8.102509498596191
    5. '_div' → logprob: -9.102509498596191
    6. ')' → logprob: -10.852509498596191
    7. ' ,' → logprob: -10.977509498596191
    8. ' +=' → logprob: -11.352509498596191
    9. '   ' → logprob: -11.602509498596191
    10. ' div' → logprob: -11.602509498596191

Token 780: ' (' (ID: 350)
  Prédit: '(div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(div' → logprob: -0.005184782203286886
    2. 'div' → logprob: -6.130184650421143
    3. ' (' → logprob: -6.255184650421143
    4. '((' → logprob: -7.505184650421143
    5. '(' → logprob: -8.2551851272583
    6. '   ' → logprob: -9.2551851272583
    7. '(d' → logprob: -9.8801851272583
    8. '10' → logprob: -9.8801851272583
    9. ' div' → logprob: -11.7551851272583
    10. ' ' → logprob: -11.7551851272583

Token 781: 'div' (ID: 862)
  Prédit: 'div'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -4.978233846486546e-05
    2. ' div' → logprob: -10.625049591064453
    3. '(div' → logprob: -10.750049591064453
    4. '   ' → logprob: -12.625049591064453
    5. '	div' → logprob: -15.125049591064453
    6. '<div' → logprob: -16.125049591064453
    7. '1' → logprob: -16.375049591064453
    8. '  ' → logprob: -16.625049591064453
    9. ' ' → logprob: -17.125049591064453
    10. ')' → logprob: -17.625049591064453

Token 782: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -2.8206473871250637e-05
    2. 'd' → logprob: -10.750028610229492
    3. '+' → logprob: -12.875028610229492
    4. '_' → logprob: -14.125028610229492
    5. 'div' → logprob: -14.625028610229492
    6. '_div' → logprob: -14.875028610229492
    7. ')_' → logprob: -14.875028610229492
    8. ' _' → logprob: -15.250028610229492
    9. '+d' → logprob: -15.312528610229492
    10. ')' → logprob: -15.437528610229492

Token 783: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.47411203384399414
    2. '+' → logprob: -0.9741120338439941
    3. '+
' → logprob: -11.474111557006836
    4. ' +
' → logprob: -11.599111557006836
    5. '   ' → logprob: -12.224111557006836
    6. ',' → logprob: -12.474111557006836
    7. ')' → logprob: -12.974111557006836
    8. ' ' → logprob: -13.474111557006836
    9. '+)' → logprob: -14.849111557006836
    10. ' +=' → logprob: -15.224111557006836

Token 784: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011749001714633778
    2. ' ' → logprob: -9.125117301940918
    3. '   ' → logprob: -12.000117301940918
    4. '+' → logprob: -13.750117301940918
    5. ' +' → logprob: -15.000117301940918
    6. '  ' → logprob: -15.250117301940918
    7. ')' → logprob: -15.250117301940918
    8. '	' → logprob: -15.875117301940918
    9. '    ' → logprob: -16.375118255615234
    10. '       ' → logprob: -16.937618255615234

Token 785: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.9153885558771435e-06
    2. ' ' → logprob: -12.125005722045898
    3. '   ' → logprob: -15.125005722045898
    4. '+' → logprob: -17.1250057220459
    5. ')' → logprob: -17.2500057220459
    6. '  ' → logprob: -17.5000057220459
    7. '```' → logprob: -18.0000057220459
    8. '
' → logprob: -18.5000057220459
    9. '	' → logprob: -19.3750057220459
    10. ' +' → logprob: -19.5625057220459

Token 786: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01547991018742323
    2. ',' → logprob: -4.890480041503906
    3. ' *' → logprob: -5.640480041503906
    4. '*' → logprob: -6.015480041503906
    5. ')*' → logprob: -6.390480041503906
    6. ' )' → logprob: -9.265480041503906
    7. ')*(' → logprob: -10.765480041503906
    8. '```' → logprob: -11.390480041503906
    9. '*(' → logprob: -11.515480041503906
    10. '   ' → logprob: -11.890480041503906

Token 787: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.0557592548429966
    2. '*' → logprob: -2.9307591915130615
    3. '*(' → logprob: -7.305759429931641
    4. ',' → logprob: -8.55575942993164
    5. ' ' → logprob: -12.68075942993164
    6. '0' → logprob: -13.30575942993164
    7. '   ' → logprob: -13.30575942993164
    8. ')' → logprob: -13.30575942993164
    9. '```' → logprob: -13.80575942993164
    10. ' ,' → logprob: -14.68075942993164

Token 788: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.2520318329334259
    2. '(' → logprob: -1.5020318031311035
    3. ' (' → logprob: -9.502032279968262
    4. ' ' → logprob: -10.502032279968262
    5. '100' → logprob: -14.752032279968262
    6. '[' → logprob: -16.252031326293945
    7. '```' → logprob: -16.752031326293945
    8. '   ' → logprob: -17.752031326293945
    9. '(pow' → logprob: -18.627031326293945
    10. '۱۰' → logprob: -18.752031326293945

Token 789: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.023262249305844307
    2. '(' → logprob: -3.7732622623443604
    3. ' ' → logprob: -11.523262023925781
    4. ' (' → logprob: -12.148262023925781
    5. '100' → logprob: -14.273262023925781
    6. '[' → logprob: -14.898262023925781
    7. '```' → logprob: -15.023262023925781
    8. '1' → logprob: -16.39826202392578
    9. '`' → logprob: -16.77326202392578
    10. '{' → logprob: -17.52326202392578

Token 790: ' **' (ID: 6240)
  Prédit: '15'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '15' → logprob: -6.988221684878226e-06
    2. '+' → logprob: -12.375006675720215
    3. ' ' → logprob: -13.875006675720215
    4. '**' → logprob: -14.250006675720215
    5. '^' → logprob: -14.750006675720215
    6. '' → logprob: -15.375006675720215
    7. '```' → logprob: -15.375006675720215
    8. '015' → logprob: -16.25000762939453
    9. '十五' → logprob: -17.62500762939453
    10. '１５' → logprob: -17.87500762939453

Token 791: ' ' (ID: 220)
  Prédit: '15'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '15' → logprob: -2.1008713702030946e-06
    2. '۱۵' → logprob: -14.500001907348633
    3. '015' → logprob: -15.000001907348633
    4. '१५' → logprob: -15.125001907348633
    5. ' ' → logprob: -15.250001907348633
    6. '１５' → logprob: -15.375001907348633
    7. '' → logprob: -15.750001907348633
    8. ' fifteen' → logprob: -16.250001907348633
    9. '১৫' → logprob: -16.500001907348633
    10. '十五' → logprob: -16.875001907348633

Token 792: '15' (ID: 1055)
  Prédit: '15'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '15' → logprob: -1.9361264946837764e-07
    2. '۱۵' → logprob: -17.125
    3. '１５' → logprob: -17.375
    4. '015' → logprob: -17.75
    5. '' → logprob: -17.875
    6. '१५' → logprob: -18.125
    7. ' fifteen' → logprob: -18.625
    8. ' ' → logprob: -19.125
    9. '১৫' → logprob: -19.625
    10. '十五' → logprob: -19.625

Token 793: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.08911242336034775
    2. '+' → logprob: -2.4641125202178955
    3. ' ' → logprob: -9.839112281799316
    4. '<|end|>' → logprob: -10.464112281799316
    5. ',' → logprob: -10.589112281799316
    6. '   ' → logprob: -10.964112281799316
    7. ' +
' → logprob: -10.964112281799316
    8. ')' → logprob: -11.464112281799316
    9. ' plus' → logprob: -12.214112281799316
    10. '       ' → logprob: -12.839112281799316

Token 794: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.11536091566085815
    2. 'mod' → logprob: -2.240360975265503
    3. '(cost' → logprob: -6.490360736846924
    4. '(mod' → logprob: -6.990360736846924
    5. ' cost' → logprob: -9.990361213684082
    6. '   ' → logprob: -10.865361213684082
    7. '(' → logprob: -11.240361213684082
    8. '0' → logprob: -12.490361213684082
    9. ' (' → logprob: -13.240361213684082
    10. ' mod' → logprob: -13.490361213684082

Token 795: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 796: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 797: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14977280795574188
    2. 'else' (adapté à ' else') → logprob: -2.524772882461548
    3. ' else' → logprob: -2.899772882461548
    4. 'return' → logprob: -6.649772644042969
    5. '	else' → logprob: -7.149772644042969
    6. ':return' → logprob: -7.899772644042969
    7. '.' → logprob: -8.149772644042969
    8. ' return' → logprob: -8.274772644042969
    9. '<|end|>' → logprob: -8.399772644042969
    10. ':' → logprob: -8.899772644042969

Token 798: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016831055283546448
    2. ':' → logprob: -5.016830921173096
    3. 'new' → logprob: -5.016830921173096
    4. '   ' → logprob: -6.016830921173096
    5. ' new' → logprob: -7.516830921173096
    6. ':
' → logprob: -8.391831398010254
    7. 'else' → logprob: -8.641831398010254
    8. '=' → logprob: -10.516831398010254
    9. ' else' → logprob: -12.141831398010254
    10. '	new' → logprob: -12.766831398010254

Token 799: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014559618197381496
    2. 'new' → logprob: -4.514559745788574
    3. ' new' → logprob: -5.889559745788574
    4. 'return' → logprob: -7.389559745788574
    5. '   ' → logprob: -9.389559745788574
    6. ' return' → logprob: -10.389559745788574
    7. '```' → logprob: -12.639559745788574
    8. '	new' → logprob: -14.264559745788574
    9. '           ' → logprob: -14.639559745788574
    10. 'else' → logprob: -15.139559745788574

Token 800: ' #' (ID: 1069)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.20878589153289795
    2. ' new' → logprob: -1.708785891532898
    3. 'return' → logprob: -5.5837860107421875
    4. '   ' → logprob: -6.2087860107421875
    5. '       ' → logprob: -7.2087860107421875
    6. ' return' → logprob: -7.3337860107421875
    7. 'd' → logprob: -9.083786010742188
    8. ' d' → logprob: -9.958786010742188
    9. 'mod' → logprob: -12.083786010742188
    10. '	new' → logprob: -12.333786010742188

Token 801: ' Pas' (ID: 18323)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.0731562077999115
    2. ' new' → logprob: -2.9481561183929443
    3. 'return' → logprob: -4.073156356811523
    4. ' return' → logprob: -6.948156356811523
    5. '   ' → logprob: -9.073156356811523
    6. '       ' → logprob: -12.823156356811523
    7. ' ' → logprob: -13.573156356811523
    8. '
' → logprob: -13.698156356811523
    9. 'd' → logprob: -13.948156356811523
    10. '	new' → logprob: -13.948156356811523

Token 802: ' besoin' (ID: 27703)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.4611808955669403
    2. ' =' → logprob: -1.5861809253692627
    3. '=' → logprob: -2.5861809253692627
    4. 'new' → logprob: -3.2111809253692627
    5. ' de' → logprob: -4.086180686950684
    6. ' +=' → logprob: -4.461180686950684
    7. ' d' → logprob: -4.836180686950684
    8. ' ' → logprob: -5.586180686950684
    9. '_new' → logprob: -6.211180686950684
    10. '_' → logprob: -6.461180686950684

Token 803: ' de' (ID: 334)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.21828025579452515
    2. ' =' → logprob: -2.21828031539917
    3. ' new' → logprob: -3.09328031539917
    4. 'new' → logprob: -3.71828031539917
    5. ' d' → logprob: -4.59328031539917
    6. 'return' → logprob: -5.96828031539917
    7. ' de' → logprob: -6.71828031539917
    8. 'd' → logprob: -6.96828031539917
    9. ' +=' → logprob: -7.21828031539917
    10. ' return' → logprob: -7.46828031539917

Token 804: ' rav' (ID: 26005)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' new' → logprob: -1.0920275449752808
    2. 'new' → logprob: -1.0920275449752808
    3. ' ' → logprob: -2.5920276641845703
    4. 'd' → logprob: -2.8420276641845703
    5. 'return' → logprob: -3.0920276641845703
    6. ' d' → logprob: -3.2170276641845703
    7. 'add' → logprob: -3.4670276641845703
    8. ' add' → logprob: -3.8420276641845703
    9. ' return' → logprob: -4.09202766418457
    10. '+' → logprob: -4.71702766418457

Token 805: 'ita' (ID: 2580)
  Prédit: 'ita'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ita' → logprob: -0.000836312014143914
    2. 'it' → logprob: -7.625836372375488
    3. 'ital' → logprob: -8.250836372375488
    4. 'ail' → logprob: -10.250836372375488
    5. 'is' → logprob: -11.125836372375488
    6. 'itas' → logprob: -12.000836372375488
    7. 'a' → logprob: -12.250836372375488
    8. 'itia' → logprob: -12.875836372375488
    9. '_' → logprob: -13.000836372375488
    10. 'iter' → logprob: -13.125836372375488

Token 806: 'iller' (ID: 8781)
  Prédit: 'iller'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iller' → logprob: -0.2234477698802948
    2. 'illir' → logprob: -1.9734477996826172
    3. 'ill' → logprob: -2.848447799682617
    4. 'il' → logprob: -5.973447799682617
    5. 'l' → logprob: -8.348447799682617
    6. 'ellir' → logprob: -8.473447799682617
    7. 'll' → logprob: -9.223447799682617
    8. 'illit' → logprob: -9.348447799682617
    9. 'illery' → logprob: -10.223447799682617
    10. 'i' → logprob: -10.348447799682617

Token 807: ',' (ID: 11)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.49039843678474426
    2. 'new' → logprob: -1.3653984069824219
    3. '   ' → logprob: -2.740398406982422
    4. 'd' → logprob: -3.990398406982422
    5. ' return' → logprob: -4.490398406982422
    6. 'return' → logprob: -4.615398406982422
    7. '=' → logprob: -5.115398406982422
    8. ' =' → logprob: -5.365398406982422
    9. '+' → logprob: -5.490398406982422
    10. ' d' → logprob: -5.990398406982422

Token 808: ' on' (ID: 402)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.15477247536182404
    2. 'new' → logprob: -2.1547725200653076
    3. ' return' → logprob: -3.9047725200653076
    4. 'return' → logprob: -5.0297722816467285
    5. ' d' → logprob: -7.5297722816467285
    6. '   ' → logprob: -9.154772758483887
    7. 'd' → logprob: -9.279772758483887
    8. '       ' → logprob: -11.779772758483887
    9. 'div' → logprob: -11.779772758483887
    10. ' dist' → logprob: -12.029772758483887

Token 809: ' addition' (ID: 5856)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.32062098383903503
    2. ' =' → logprob: -1.3206210136413574
    3. ' +=' → logprob: -6.195621013641357
    4. '+=' → logprob: -6.695621013641357
    5. 'return' → logprob: -7.070621013641357
    6. 'new' → logprob: -7.195621013641357
    7. ' return' → logprob: -7.195621013641357
    8. '+' → logprob: -7.570621013641357
    9. ' new' → logprob: -7.695621013641357
    10. 'd' → logprob: -8.6956205368042

Token 810: 'ne' (ID: 611)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.9478722214698792
    2. ' =' → logprob: -1.0728721618652344
    3. '=' → logprob: -1.4478721618652344
    4. '+=' → logprob: -3.5728721618652344
    5. '+' → logprob: -5.697872161865234
    6. ' +' → logprob: -6.697872161865234
    7. '   ' → logprob: -6.822872161865234
    8. 'ner' → logprob: -7.947872161865234
    9. 'n' → logprob: -8.197872161865234
    10. 'ne' → logprob: -8.572872161865234

Token 811: ' juste' (ID: 31553)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.43451449275016785
    2. 'd' → logprob: -1.0595145225524902
    3. 'div' → logprob: -6.05951452255249
    4. 'mod' → logprob: -6.55951452255249
    5. ' =' → logprob: -7.93451452255249
    6. ' new' → logprob: -8.309514045715332
    7. '<|end|>' → logprob: -8.434514045715332
    8. '=' → logprob: -8.559514045715332
    9. ' return' → logprob: -8.934514045715332
    10. ' mod' → logprob: -8.934514045715332

Token 812: ' les' (ID: 1341)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.7375819683074951
    2. ' new' → logprob: -1.2375819683074951
    3. 'd' → logprob: -1.8625819683074951
    4. ' d' → logprob: -3.112581968307495
    5. 'return' → logprob: -3.987581968307495
    6. ' return' → logprob: -4.612582206726074
    7. 'div' → logprob: -6.112582206726074
    8. '   ' → logprob: -7.612582206726074
    9. 'mod' → logprob: -7.987582206726074
    10. ' div' → logprob: -9.487582206726074

Token 813: ' coûts' (ID: 116912)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.6157079935073853
    2. 'cost' → logprob: -1.9907079935073853
    3. 'mod' → logprob: -2.1157078742980957
    4. 'co' → logprob: -2.4907078742980957
    5. 'div' → logprob: -2.9907078742980957
    6. ' parts' → logprob: -4.240707874298096
    7. ' cost' → logprob: -4.865707874298096
    8. 'val' → logprob: -5.115707874298096
    9. ' coûts' → logprob: -5.115707874298096
    10. ' carbur' → logprob: -5.615707874298096

Token 814: '
' (ID: 198)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6024448871612549
    2. ' =' → logprob: -1.4774448871612549
    3. ' return' → logprob: -1.8524448871612549
    4. 'return' → logprob: -2.977444887161255
    5. '+' → logprob: -5.977444648742676
    6. ' new' → logprob: -5.977444648742676
    7. ' d' → logprob: -6.227444648742676
    8. ' ' → logprob: -6.352444648742676
    9. 'd' → logprob: -6.727444648742676
    10. '   ' → logprob: -6.727444648742676

Token 815: '       ' (ID: 309)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.8482105731964111
    2. ' return' → logprob: -0.9732105731964111
    3. '   ' → logprob: -1.9732105731964111
    4. 'new' → logprob: -3.598210573196411
    5. ' new' → logprob: -3.723210573196411
    6. '	return' → logprob: -6.098210334777832
    7. '       ' → logprob: -6.973210334777832
    8. '	new' → logprob: -9.723210334777832
    9. '```' → logprob: -10.348210334777832
    10. 'd' → logprob: -10.473210334777832

Token 816: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.4407632052898407
    2. 'return' → logprob: -1.315763235092163
    3. 'd' → logprob: -2.815763235092163
    4. ' new' → logprob: -4.065762996673584
    5. ' return' → logprob: -4.815762996673584
    6. '   ' → logprob: -6.815762996673584
    7. ' d' → logprob: -6.940762996673584
    8. 'div' → logprob: -6.940762996673584
    9. '
' → logprob: -12.065763473510742
    10. '       ' → logprob: -12.190763473510742

Token 817: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.007054103072732687
    2. '_' → logprob: -5.007054328918457
    3. ' _' → logprob: -8.132054328918457
    4. 'd' → logprob: -10.882054328918457
    5. '_s' → logprob: -12.132054328918457
    6. ')' → logprob: -12.882054328918457
    7. '   ' → logprob: -13.132054328918457
    8. '=' → logprob: -13.132054328918457
    9. ' =' → logprob: -13.132054328918457
    10. ' ' → logprob: -13.507054328918457

Token 818: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029751067981123924
    2. ' =' → logprob: -3.5297510623931885
    3. '+=' → logprob: -16.02975082397461
    4. ',' → logprob: -16.15475082397461
    5. '=
' → logprob: -16.15475082397461
    6. ' +=' → logprob: -16.27975082397461
    7. ' ' → logprob: -16.40475082397461
    8. ')' → logprob: -17.27975082397461
    9. ' =
' → logprob: -17.65475082397461
    10. '=

' → logprob: -17.65475082397461

Token 819: ' d' (ID: 272)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.15047197043895721
    2. 'd' → logprob: -2.0254719257354736
    3. ' div' → logprob: -5.025472164154053
    4. ' d' → logprob: -7.025472164154053
    5. 'dist' → logprob: -9.275471687316895
    6. '(div' → logprob: -9.525471687316895
    7. '10' → logprob: -9.650471687316895
    8. ' ' → logprob: -10.525471687316895
    9. '(d' → logprob: -11.400471687316895
    10. '	div' → logprob: -11.525471687316895

Token 820: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6933743953704834
    2. ' +' → logprob: -0.6933743953704834
    3. '<|end|>' → logprob: -8.693374633789062
    4. '+
' → logprob: -10.193374633789062
    5. ' +
' → logprob: -10.943374633789062
    6. '<|end|>' → logprob: -13.193374633789062
    7. ' ' → logprob: -15.193374633789062
    8. '+l' → logprob: -15.318374633789062
    9. ' ' → logprob: -15.443374633789062
    10. ' +

' → logprob: -15.693374633789062

Token 821: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.005233882926404476
    2. ' cost' → logprob: -5.2552337646484375
    3. 'co' → logprob: -17.880233764648438
    4. '(cost' → logprob: -18.380233764648438
    5. '_cost' → logprob: -18.755233764648438
    6. 'Cost' → logprob: -19.255233764648438
    7. 'cos' → logprob: -19.880233764648438
    8. 'code' → logprob: -20.005233764648438
    9. ' ' → logprob: -20.005233764648438
    10. '   ' → logprob: -20.880233764648438

Token 822: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.281064510345459
    2. '<|end|>' → logprob: -2.031064510345459
    3. '	return' → logprob: -2.531064510345459
    4. 'return' → logprob: -3.781064510345459
    5. ' return' → logprob: -5.531064510345459
    6. '
' → logprob: -6.031064510345459
    7. '<|end|>' → logprob: -6.406064510345459
    8. ' ' → logprob: -7.156064510345459
    9. '    
' → logprob: -7.781064510345459
    10. '  ' → logprob: -7.906064510345459

Token 823: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04453350976109505
    2. '	return' → logprob: -3.4195334911346436
    3. 'return' → logprob: -5.044533729553223
    4. ' return' → logprob: -6.294533729553223
    5. '<|end|>' → logprob: -6.294533729553223
    6. '
' → logprob: -8.419533729553223
    7. '    
' → logprob: -8.669533729553223
    8. ':return' → logprob: -9.669533729553223
    9. '<|end|>' → logprob: -9.669533729553223
    10. '\t' → logprob: -10.169533729553223

Token 824: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011087081395089626
    2. 'return' (adapté à ' return') → logprob: -4.636086940765381
    3. ' return' → logprob: -7.261086940765381
    4. '	return' → logprob: -7.386086940765381
    5. ':return' → logprob: -12.511087417602539
    6. '<|end|>' → logprob: -13.511087417602539
    7. '   ' → logprob: -14.261087417602539
    8. '.' → logprob: -14.636087417602539
    9. '       ' → logprob: -15.136087417602539
    10. 'eturn' → logprob: -15.136087417602539

Token 825: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.011047814972698689
    2. ' new' → logprob: -4.511047840118408
    3. '	new' → logprob: -18.63604736328125
    4. ' ' → logprob: -19.13604736328125
    5. '_new' → logprob: -19.38604736328125
    6. '(new' → logprob: -19.76104736328125
    7. '新' → logprob: -19.88604736328125
    8. '[new' → logprob: -19.88604736328125
    9. 'n' → logprob: -20.13604736328125
    10. '​' → logprob: -20.26104736328125

Token 826: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.0013971416046842933
    2. '_' → logprob: -7.751397132873535
    3. 'ew' → logprob: -7.876397132873535
    4. 'w' → logprob: -8.001397132873535
    5. 'd' → logprob: -9.251397132873535
    6. 'line' → logprob: -10.376397132873535
    7. '_t' → logprob: -10.376397132873535
    8. '_token' → logprob: -10.376397132873535
    9. '_w' → logprob: -10.751397132873535
    10. 'e' → logprob: -11.126397132873535

Token 827: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 828: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 829: ' Retour' (ID: 146830)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 830: 'ne' (ID: 611)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 831: ' la' (ID: 557)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.5789957642555237
    2. ' new' → logprob: -0.8289957642555237
    3. '<|end|>' → logprob: -5.828995704650879
    4. '_new' → logprob: -10.203995704650879
    5. ')new' → logprob: -10.203995704650879
    6. '<|end|>' → logprob: -11.578995704650879
    7. ')' → logprob: -11.953995704650879
    8. '[new' → logprob: -12.328995704650879
    9. '	new' → logprob: -12.328995704650879
    10. ' ' → logprob: -12.953995704650879

Token 832: ' nouvelle' (ID: 24562)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 833: ' distance' (ID: 9324)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 834: ' composite' (ID: 40773)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 835: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 836: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 837: ' Lecture' (ID: 106534)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.503058671951294
    2. ' l' → logprob: -1.003058671951294
    3. ' ' → logprob: -4.628058433532715
    4. '#' → logprob: -5.503058433532715
    5. ' =' → logprob: -5.628058433532715
    6. '[' → logprob: -5.628058433532715
    7. '   ' → logprob: -6.503058433532715
    8. ' #' → logprob: -6.628058433532715
    9. '=' → logprob: -6.878058433532715
    10. '[l' → logprob: -7.253058433532715

Token 838: ' des' (ID: 731)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.25315776467323303
    2. 'n' → logprob: -2.2531578540802
    3. 'l' → logprob: -3.1281578540802
    4. '(' → logprob: -4.003157615661621
    5. '(n' → logprob: -4.628157615661621
    6. ' =' → logprob: -4.878157615661621
    7. '#' → logprob: -5.128157615661621
    8. ':' → logprob: -5.503157615661621
    9. '()
' → logprob: -5.503157615661621
    10. 'import' → logprob: -5.503157615661621

Token 839: ' entr' (ID: 7072)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.068755030632019
    2. 'input' → logprob: -1.068755030632019
    3. '<|end|>' → logprob: -2.9437551498413086
    4. ' input' → logprob: -3.0687551498413086
    5. 'tokens' → logprob: -3.1937551498413086
    6. 'n' → logprob: -3.1937551498413086
    7. ' l' → logprob: -3.3187551498413086
    8. ' ' → logprob: -4.818755149841309
    9. 'inputs' → logprob: -4.943755149841309
    10. ')' → logprob: -5.068755149841309

Token 840: 'ées' (ID: 5161)
  Prédit: 'ée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -1.074644923210144
    2. 'ées' → logprob: -1.074644923210144
    3. 'rée' → logprob: -1.449644923210144
    4. 'r' → logprob: -2.5746450424194336
    5. 'ree' → logprob: -6.074645042419434
    6. 'rees' → logprob: -6.199645042419434
    7. 'ries' → logprob: -7.699645042419434
    8. 'ees' → logprob: -7.699645042419434
    9. 'rie' → logprob: -8.074645042419434
    10. 'ré' → logprob: -9.074645042419434

Token 841: ' du' (ID: 1462)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6051362752914429
    2. '()' → logprob: -1.4801362752914429
    3. '(' → logprob: -2.4801363945007324
    4. '(n' → logprob: -3.2301363945007324
    5. '=' → logprob: -3.3551363945007324
    6. ' =' → logprob: -3.9801363945007324
    7. 'l' → logprob: -4.480136394500732
    8. ':' → logprob: -4.605136394500732
    9. '#' → logprob: -5.355136394500732
    10. ',' → logprob: -5.355136394500732

Token 842: ' problème' (ID: 35630)
  Prédit: ' code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' code' → logprob: -0.5543451905250549
    2. '```' → logprob: -2.30434513092041
    3. 'code' → logprob: -2.55434513092041
    4. 'input' → logprob: -2.67934513092041
    5. 'sys' → logprob: -3.17934513092041
    6. 'l' → logprob: -3.55434513092041
    7. 'stdin' → logprob: -3.67934513092041
    8. ' sys' → logprob: -4.17934513092041
    9. ' input' → logprob: -4.30434513092041
    10. ' l' → logprob: -4.55434513092041

Token 843: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.10060117393732071
    2. 'l' → logprob: -2.3506011962890625
    3. 'q' → logprob: -8.475601196289062
    4. ' n' → logprob: -10.100601196289062
    5. 't' → logprob: -10.850601196289062
    6. 'N' → logprob: -11.350601196289062
    7. 'line' → logprob: -11.350601196289062
    8. 'data' → logprob: -11.475601196289062
    9. '```' → logprob: -11.600601196289062
    10. 'params' → logprob: -11.850601196289062

Token 844: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3136178255081177
    2. 'l' → logprob: -1.3136178255081177
    3. 'N' → logprob: -8.938617706298828
    4. ' n' → logprob: -8.938617706298828
    5. 'q' → logprob: -10.313617706298828
    6. ' l' → logprob: -10.688617706298828
    7. 'L' → logprob: -11.688617706298828
    8. 'input' → logprob: -11.688617706298828
    9. 'data' → logprob: -12.313617706298828
    10. 'Q' → logprob: -12.688617706298828

Token 845: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13661524653434753
    2. ' =' → logprob: -2.13661527633667
    3. '=' → logprob: -4.88661527633667
    4. ' ,' → logprob: -6.51161527633667
    5. ',l' → logprob: -7.63661527633667
    6. ',n' → logprob: -10.136614799499512
    7. ',k' → logprob: -10.386614799499512
    8. '=int' → logprob: -11.261614799499512
    9. ' ' → logprob: -12.136614799499512
    10. ',s' → logprob: -12.511614799499512

Token 846: ' m' (ID: 284)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.3132728636264801
    2. ' l' → logprob: -1.3132728338241577
    3. ' ' → logprob: -12.313272476196289
    4. '=l' → logprob: -13.563272476196289
    5. ',l' → logprob: -13.688272476196289
    6. 'm' → logprob: -13.688272476196289
    7. '	l' → logprob: -13.938272476196289
    8. ' ' → logprob: -14.688272476196289
    9. ' =' → logprob: -14.813272476196289
    10. '=' → logprob: -14.813272476196289

Token 847: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.42481619119644165
    2. ',' → logprob: -1.2998161315917969
    3. ' =' → logprob: -2.674816131591797
    4. ',l' → logprob: -5.424816131591797
    5. '=l' → logprob: -9.424816131591797
    6. ' ,' → logprob: -10.299816131591797
    7. ',n' → logprob: -10.674816131591797
    8. '=input' → logprob: -10.799816131591797
    9. 'l' → logprob: -11.799816131591797
    10. ',k' → logprob: -11.924816131591797

Token 848: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.01251177117228508
    2. ' l' → logprob: -4.387511730194092
    3. '	l' → logprob: -14.26251220703125
    4. ' ' → logprob: -14.26251220703125
    5. ',l' → logprob: -15.38751220703125
    6. ' =' → logprob: -15.38751220703125
    7. ',' → logprob: -16.51251220703125
    8. '  ' → logprob: -16.63751220703125
    9. '=l' → logprob: -16.63751220703125
    10. '_l' → logprob: -16.88751220703125

Token 849: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10026933997869492
    2. ' =' → logprob: -2.350269317626953
    3. ',' → logprob: -9.975269317626953
    4. '=input' → logprob: -11.225269317626953
    5. '=sys' → logprob: -13.100269317626953
    6. '＝' → logprob: -15.725269317626953
    7. '=line' → logprob: -16.100269317626953
    8. '=int' → logprob: -16.225269317626953
    9. '=list' → logprob: -16.225269317626953
    10. ')' → logprob: -16.350269317626953

Token 850: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.04858794063329697
    2. ' map' → logprob: -3.0485880374908447
    3. '(map' → logprob: -14.798587799072266
    4. '	map' → logprob: -16.298587799072266
    5. '[' → logprob: -16.673587799072266
    6. 'list' → logprob: -16.798587799072266
    7. 'input' → logprob: -18.298587799072266
    8. '.map' → logprob: -18.423587799072266
    9. 'm' → logprob: -19.173587799072266
    10. ' ' → logprob: -19.548587799072266

Token 851: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.16069290041923523
    2. 'int' → logprob: -1.9106929302215576
    3. 'input' → logprob: -7.7856926918029785
    4. '(' → logprob: -10.910693168640137
    5. '(input' → logprob: -11.785693168640137
    6. ',int' → logprob: -11.910693168640137
    7. ' int' → logprob: -12.035693168640137
    8. '<int' → logprob: -12.660693168640137
    9. 'list' → logprob: -12.785693168640137
    10. '=int' → logprob: -12.910693168640137

Token 852: ',' (ID: 11)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.8886666297912598
    2. ',input' → logprob: -1.1386666297912598
    3. '(input' → logprob: -1.6386666297912598
    4. ',' → logprob: -2.7636666297912598
    5. '(' → logprob: -5.88866662979126
    6. 'sys' → logprob: -6.01366662979126
    7. '(sys' → logprob: -6.01366662979126
    8. ')' → logprob: -6.13866662979126
    9. '=input' → logprob: -7.26366662979126
    10. ' input' → logprob: -7.63866662979126

Token 853: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0009144435753114522
    2. ' input' → logprob: -7.000914573669434
    3. 'sys' → logprob: -12.750914573669434
    4. ' sys' → logprob: -16.875913619995117
    5. '=input' → logprob: -19.500913619995117
    6. ',input' → logprob: -20.625913619995117
    7. '(input' → logprob: -21.625913619995117
    8. '	input' → logprob: -21.750913619995117
    9. '_input' → logprob: -22.000913619995117
    10. 'Input' → logprob: -22.250913619995117

Token 854: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -9.913265239447355e-05
    2. '()' → logprob: -9.250099182128906
    3. '())' → logprob: -12.750099182128906
    4. ' ().' → logprob: -16.250099182128906
    5. '(' → logprob: -16.875099182128906
    6. ')' → logprob: -18.875099182128906
    7. '()[' → logprob: -18.875099182128906
    8. '()
' → logprob: -19.125099182128906
    9. '.readline' → logprob: -20.000099182128906
    10. '().__' → logprob: -20.125099182128906

Token 855: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.002172266598790884
    2. 'strip' → logprob: -6.252172470092773
    3. '().' → logprob: -8.502172470092773
    4. 'rstrip' → logprob: -10.252172470092773
    5. ' split' → logprob: -12.752172470092773
    6. 'read' → logprob: -13.752172470092773
    7. '(split' → logprob: -14.627172470092773
    8. ')' → logprob: -15.002172470092773
    9. ').' → logprob: -16.002172470092773
    10. '()' → logprob: -16.127172470092773

Token 856: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.054250944405794144
    2. ')' → logprob: -3.054250955581665
    3. '()' → logprob: -5.179250717163086
    4. '())
' → logprob: -11.804250717163086
    5. '(' → logprob: -12.179250717163086
    6. ' ())' → logprob: -14.054250717163086
    7. ' )' → logprob: -14.929250717163086
    8. '(),' → logprob: -15.054250717163086
    9. '().' → logprob: -15.554250717163086
    10. '('' → logprob: -15.804250717163086

Token 857: ' ' (ID: 220)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.2268807590007782
    2. 'edges' → logprob: -2.1018807888031006
    3. '
' → logprob: -3.9768807888031006
    4. 'matrix' → logprob: -3.9768807888031006
    5. 'dist' → logprob: -4.3518805503845215
    6. 'neighbors' → logprob: -5.4768805503845215
    7. 'distance' → logprob: -5.8518805503845215
    8. '  
' → logprob: -5.8518805503845215
    9. 'adj' → logprob: -5.9768805503845215
    10. 'n' → logprob: -5.9768805503845215

Token 858: ' #' (ID: 1069)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.09425274282693863
    2. 'matrix' → logprob: -2.469252824783325
    3. 'edges' → logprob: -5.844252586364746
    4. 'g' → logprob: -6.594252586364746
    5. 'dist' → logprob: -8.219252586364746
    6. 'adj' → logprob: -8.594252586364746
    7. 'distance' → logprob: -9.094252586364746
    8. '
' → logprob: -9.219252586364746
    9. ' graph' → logprob: -9.344252586364746
    10. 'roads' → logprob: -10.219252586364746

Token 859: ' n' (ID: 297)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.14043812453746796
    2. 'matrix' → logprob: -2.1404380798339844
    3. 'dist' → logprob: -5.265438079833984
    4. 'n' → logprob: -5.765438079833984
    5. 'edges' → logprob: -5.890438079833984
    6. 'g' → logprob: -7.015438079833984
    7. 'adj' → logprob: -7.515438079833984
    8. 'INF' → logprob: -8.515438079833984
    9. 'inf' → logprob: -8.640438079833984
    10. ' graph' → logprob: -8.890438079833984

Token 860: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.013160350732505322
    2. ',m' → logprob: -4.888160228729248
    3. ' ,' → logprob: -6.013160228729248
    4. '<|end|>' → logprob: -6.263160228729248
    5. ',n' → logprob: -7.888160228729248
    6. '=' → logprob: -8.263160705566406
    7. 'm' → logprob: -8.388160705566406
    8. ' =' → logprob: -9.513160705566406
    9. ')' → logprob: -10.013160705566406
    10. ' m' → logprob: -10.388160705566406

Token 861: ' nombre' (ID: 9733)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.3208279609680176
    2. 'n' → logprob: -1.3208279609680176
    3. ' n' → logprob: -5.445827960968018
    4. ' m' → logprob: -6.320827960968018
    5. 'l' → logprob: -7.320827960968018
    6. '<|end|>' → logprob: -7.695827960968018
    7. 'int' → logprob: -8.57082748413086
    8. '...' → logprob: -10.94582748413086
    9. ')' → logprob: -11.32082748413086
    10. '[m' → logprob: -11.57082748413086

Token 862: ' de' (ID: 334)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 863: ' somm' (ID: 44830)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.002818431705236435
    2. 'som' → logprob: -6.752818584442139
    3. 'nodes' → logprob: -7.377818584442139
    4. 'vertices' → logprob: -8.37781810760498
    5. ' somm' → logprob: -8.62781810760498
    6. 'v' → logprob: -8.75281810760498
    7. 'n' → logprob: -8.75281810760498
    8. 'stations' → logprob: -9.00281810760498
    9. 'points' → logprob: -10.12781810760498
    10. 'cities' → logprob: -10.50281810760498

Token 864: 'ets' (ID: 1719)
  Prédit: 'ets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ets' → logprob: -2.0219828002154827e-05
    2. 'et' → logprob: -11.500020027160645
    3. 'êts' → logprob: -11.750020027160645
    4. 'è' → logprob: -14.500020027160645
    5. 'ots' → logprob: -15.125020027160645
    6. 'ètes' → logprob: -15.125020027160645
    7. 'etso' → logprob: -15.875020027160645
    8. 'ètres' → logprob: -16.12502098083496
    9. 'e' → logprob: -16.25002098083496
    10. '#' → logprob: -16.25002098083496

Token 865: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.45990344882011414
    2. '<|end|>' → logprob: -1.0849034786224365
    3. 'm' → logprob: -3.8349034786224365
    4. ',m' → logprob: -5.459903240203857
    5. ' ,' → logprob: -5.584903240203857
    6. ')' → logprob: -8.709903717041016
    7. '<|end|>' → logprob: -8.709903717041016
    8. ' m' → logprob: -8.709903717041016
    9. ',
' → logprob: -8.834903717041016
    10. '
' → logprob: -9.084903717041016

Token 866: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.029754657298326492
    2. ' m' → logprob: -3.529754638671875
    3. ' ' → logprob: -13.654754638671875
    4. '<|end|>' → logprob: -13.779754638671875
    5. '	m' → logprob: -14.779754638671875
    6. ' 
' → logprob: -14.904754638671875
    7. '  ' → logprob: -15.154754638671875
    8. ' ' → logprob: -15.654754638671875
    9. 'n' → logprob: -15.779754638671875
    10. '    ' → logprob: -15.779754638671875

Token 867: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.35643470287323
    2. '=' → logprob: -1.23143470287323
    3. ' =' → logprob: -5.2314348220825195
    4. '<|end|>' → logprob: -6.8564348220825195
    5. ')' → logprob: -7.3564348220825195
    6. ',n' → logprob: -7.6064348220825195
    7. ' ,' → logprob: -9.23143482208252
    8. 'n' → logprob: -10.10643482208252
    9. ',m' → logprob: -10.10643482208252
    10. '=int' → logprob: -10.35643482208252

Token 868: ' nombre' (ID: 9733)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.00783741194754839
    2. 'l' → logprob: -5.132837295532227
    3. ' m' → logprob: -6.382837295532227
    4. 'n' → logprob: -9.382837295532227
    5. '```' → logprob: -10.757837295532227
    6. 'int' → logprob: -10.882837295532227
    7. ' ' → logprob: -11.007837295532227
    8. '...' → logprob: -11.132837295532227
    9. ' l' → logprob: -11.257837295532227
    10. ')' → logprob: -11.507837295532227

Token 869: ' d' (ID: 272)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.6381252408027649
    2. ' de' → logprob: -1.3881251811981201
    3. '=' → logprob: -2.26312518119812
    4. 'des' → logprob: -2.63812518119812
    5. ' des' → logprob: -4.263125419616699
    6. 'd' → logprob: -4.388125419616699
    7. ')' → logprob: -5.638125419616699
    8. ' d' → logprob: -5.763125419616699
    9. '_de' → logprob: -6.513125419616699
    10. ' =' → logprob: -6.638125419616699

Token 870: ''ar' (ID: 54307)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.10039946436882019
    2. ' ar' → logprob: -2.8503994941711426
    3. 'arest' → logprob: -3.6003994941711426
    4. 'are' → logprob: -5.225399494171143
    5. 'aires' → logprob: -6.850399494171143
    6. 'arri' → logprob: -6.975399494171143
    7. 'arr' → logprob: -7.475399494171143
    8. ' ' → logprob: -8.100399017333984
    9. 'edges' → logprob: -8.350399017333984
    10. 'ares' → logprob: -8.350399017333984

Token 871: 'êtes' (ID: 23720)
  Prédit: 'êtes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êtes' → logprob: -0.021136870607733727
    2. 'tes' → logprob: -4.27113676071167
    3. 'cs' → logprob: -5.64613676071167
    4. 'r' → logprob: -6.64613676071167
    5. 'ètes' → logprob: -7.14613676071167
    6. 'etes' → logprob: -7.64613676071167
    7. 're' → logprob: -8.771137237548828
    8. 'rest' → logprob: -9.021137237548828
    9. '�' → logprob: -9.021137237548828
    10. 'res' → logprob: -9.271137237548828

Token 872: ',' (ID: 11)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.3261581361293793
    2. 'edges' → logprob: -1.4511581659317017
    3. 'dist' → logprob: -4.201158046722412
    4. '
' → logprob: -4.576158046722412
    5. 'adj' → logprob: -5.451158046722412
    6. 'matrix' → logprob: -5.701158046722412
    7. ' edges' → logprob: -6.326158046722412
    8. ' graph' → logprob: -6.451158046722412
    9. 'distance' → logprob: -6.701158046722412
    10. 'l' → logprob: -6.826158046722412

Token 873: ' l' (ID: 305)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.17370261251926422
    2. 's' → logprob: -1.923702597618103
    3. 'start' → logprob: -5.548702716827393
    4. 'inf' → logprob: -6.548702716827393
    5. '_' → logprob: -6.923702716827393
    6. 'k' → logprob: -7.048702716827393
    7. 'a' → logprob: -7.298702716827393
    8. 'c' → logprob: -7.423702716827393
    9. 't' → logprob: -7.423702716827393
    10. 'l' → logprob: -7.548702716827393

Token 874: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0008165352046489716
    2. ' =' → logprob: -7.125816345214844
    3. '<|end|>' → logprob: -11.750816345214844
    4. ')' → logprob: -13.375816345214844
    5. '=
' → logprob: -14.500816345214844
    6. '=int' → logprob: -14.500816345214844
    7. ',' → logprob: -15.000816345214844
    8. '#' → logprob: -15.000816345214844
    9. '=l' → logprob: -15.500816345214844
    10. '=

' → logprob: -15.750816345214844

Token 875: ' capacité' (ID: 62575)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.004291253630071878
    2. 'int' → logprob: -5.50429105758667
    3. '10' → logprob: -8.629291534423828
    4. ' l' → logprob: -11.254291534423828
    5. '<|end|>' → logprob: -11.254291534423828
    6. 'max' → logprob: -12.754291534423828
    7. '...' → logprob: -13.629291534423828
    8. 'limit' → logprob: -14.129291534423828
    9. '100' → logprob: -15.004291534423828
    10. 'length' → logprob: -15.129291534423828

Token 876: ' maximum' (ID: 10562)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 877: ' sans' (ID: 9828)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.10089349001646042
    2. 'edges' → logprob: -2.850893497467041
    3. 'matrix' → logprob: -3.475893497467041
    4. 'adj' → logprob: -5.975893497467041
    5. 'g' → logprob: -6.100893497467041
    6. 'roads' → logprob: -6.975893497467041
    7. 'dist' → logprob: -7.975893497467041
    8. ' graph' → logprob: -8.475893020629883
    9. 'road' → logprob: -9.225893020629883
    10. 'G' → logprob: -9.225893020629883

Token 878: ' rav' (ID: 26005)
  Prédit: 'rav'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rav' → logprob: -0.16390427947044373
    2. ' rav' → logprob: -3.1639041900634766
    3. 'car' → logprob: -3.5389041900634766
    4. 're' → logprob: -4.038904190063477
    5. ' recharge' → logprob: -4.288904190063477
    6. ' re' → logprob: -4.538904190063477
    7. 'refu' → logprob: -4.788904190063477
    8. '\n' → logprob: -5.538904190063477
    9. 'ref' → logprob: -5.663904190063477
    10. 'ral' → logprob: -5.913904190063477

Token 879: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.0024107310455292463
    2. 'ita' → logprob: -6.877410888671875
    3. 'ital' → logprob: -7.002410888671875
    4. '
' → logprob: -8.127410888671875
    5. '>' → logprob: -10.502410888671875
    6. 'itag' → logprob: -10.752410888671875
    7. 'itul' → logprob: -11.502410888671875
    8. '```' → logprob: -11.627410888671875
    9. '=' → logprob: -11.752410888671875
    10. '</' → logprob: -11.752410888671875

Token 880: 'ail' (ID: 663)
  Prédit: 'ail'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ail' → logprob: -0.0036221661139279604
    2. 'il' → logprob: -6.628622055053711
    3. 'ill' → logprob: -7.128622055053711
    4. 'illage' → logprob: -7.503622055053711
    5. 'l' → logprob: -7.753622055053711
    6. 'al' → logprob: -8.628622055053711
    7. 'aille' → logprob: -9.128622055053711
    8. 'ement' → logprob: -10.003622055053711
    9. 'ell' → logprob: -10.628622055053711
    10. 'a' → logprob: -10.878622055053711

Token 881: 'lement' (ID: 1254)
  Prédit: 'lement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lement' → logprob: -0.0019908512476831675
    2. 'ement' → logprob: -6.751990795135498
    3. 'l' → logprob: -7.751990795135498
    4. 'issement' → logprob: -8.751991271972656
    5. 'lements' → logprob: -9.126991271972656
    6. 'ment' → logprob: -9.876991271972656
    7. 'le' → logprob: -10.126991271972656
    8. 'lem' → logprob: -12.126991271972656
    9. 'sement' → logprob: -12.251991271972656
    10. '```' → logprob: -12.251991271972656

Token 882: '
' (ID: 198)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.21050289273262024
    2. 'edges' → logprob: -1.9605028629302979
    3. 'dist' → logprob: -3.460502862930298
    4. 'adj' → logprob: -5.335503101348877
    5. 'distance' → logprob: -5.960503101348877
    6. 'u' → logprob: -6.085503101348877
    7. '<|end|>' → logprob: -6.710503101348877
    8. 'g' → logprob: -7.085503101348877
    9. 'a' → logprob: -7.085503101348877
    10. '
' → logprob: -7.710503101348877

Token 883: 'info' (ID: 5789)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.04153510928153992
    2. 'matrix' → logprob: -3.2915351390838623
    3. 'adj' → logprob: -6.416534900665283
    4. 'edges' → logprob: -7.291534900665283
    5. 'dist' → logprob: -7.541534900665283
    6. 'g' → logprob: -7.666534900665283
    7. 'distance' → logprob: -10.041535377502441
    8. 'mat' → logprob: -10.916535377502441
    9. 'G' → logprob: -10.916535377502441
    10. ' graph' → logprob: -11.291535377502441

Token 884: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.30371180176734924
    2. ' =' → logprob: -1.4287117719650269
    3. 'for' → logprob: -4.803711891174316
    4. 's' → logprob: -5.178711891174316
    5. '=[]' → logprob: -6.178711891174316
    6. '=[]
' → logprob: -6.803711891174316
    7. '()' → logprob: -7.303711891174316
    8. '_lines' → logprob: -7.428711891174316
    9. '_nodes' → logprob: -7.428711891174316
    10. '_' → logprob: -8.053711891174316

Token 885: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.08651381731033325
    2. '[n' → logprob: -3.5865137577056885
    3. '[]' → logprob: -4.086513996124268
    4. '[list' → logprob: -4.211513996124268
    5. '[m' → logprob: -4.711513996124268
    6. '[input' → logprob: -5.086513996124268
    7. '[int' → logprob: -5.836513996124268
    8. '[i' → logprob: -7.336513996124268
    9. '[x' → logprob: -7.711513996124268
    10. '[l' → logprob: -7.711513996124268

Token 886: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.20152035355567932
    2. 'tuple' → logprob: -1.701520323753357
    3. '[]' → logprob: -10.076519966125488
    4. 'input' → logprob: -11.076519966125488
    5. ' tuple' → logprob: -11.201519966125488
    6. ' list' → logprob: -11.201519966125488
    7. '
' → logprob: -12.451519966125488
    8. '0' → logprob: -12.576519966125488
    9. ']' → logprob: -12.701519966125488
    10. '(list' → logprob: -12.701519966125488

Token 887: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.008764417842030525
    2. 'map' → logprob: -4.758764266967773
    3. '()' → logprob: -9.133764266967773
    4. '(' → logprob: -10.758764266967773
    5. '()]' → logprob: -12.133764266967773
    6. ']' → logprob: -12.508764266967773
    7. '(
' → logprob: -12.633764266967773
    8. '	map' → logprob: -12.883764266967773
    9. ' map' → logprob: -12.883764266967773
    10. '(int' → logprob: -14.133764266967773

Token 888: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.12745118141174316
    2. 'int' → logprob: -2.127451181411743
    3. 'input' → logprob: -7.877450942993164
    4. '(input' → logprob: -9.752450942993164
    5. ']int' → logprob: -10.502450942993164
    6. '[int' → logprob: -10.752450942993164
    7. '=int' → logprob: -11.627450942993164
    8. ',int' → logprob: -11.752450942993164
    9. ' int' → logprob: -12.002450942993164
    10. '<int' → logprob: -12.502450942993164

Token 889: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.47730037569999695
    2. '(input' → logprob: -1.2273004055023193
    3. ',' → logprob: -2.4773004055023193
    4. 'input' → logprob: -6.10230016708374
    5. '=input' → logprob: -8.727300643920898
    6. '(' → logprob: -10.227300643920898
    7. ' input' → logprob: -10.977300643920898
    8. '[input' → logprob: -11.602300643920898
    9. ' ,' → logprob: -11.852300643920898
    10. ' (' → logprob: -12.602300643920898

Token 890: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.00020354038861114532
    2. ' input' → logprob: -8.500203132629395
    3. '(input' → logprob: -18.87520408630371
    4. '<input' → logprob: -19.87520408630371
    5. '=input' → logprob: -20.00020408630371
    6. 'sys' → logprob: -20.12520408630371
    7. ',input' → logprob: -20.37520408630371
    8. '	input' → logprob: -20.62520408630371
    9. ')' → logprob: -21.12520408630371
    10. ' ' → logprob: -21.75020408630371

Token 891: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.546478935983032e-05
    2. '()' → logprob: -10.750025749206543
    3. '(' → logprob: -13.250025749206543
    4. '.split' → logprob: -14.000025749206543
    5. '()
' → logprob: -15.250025749206543
    6. '.readline' → logprob: -15.375025749206543
    7. ' ().' → logprob: -15.500025749206543
    8. 'input' → logprob: -15.500025749206543
    9. '()[' → logprob: -16.000024795532227
    10. '()))' → logprob: -16.000024795532227

Token 892: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.2127087504486553e-05
    2. 'strip' → logprob: -11.000021934509277
    3. ' split' → logprob: -12.375021934509277
    4. '(split' → logprob: -14.000021934509277
    5. 'rstrip' → logprob: -14.875021934509277
    6. ')' → logprob: -18.000022888183594
    7. '.split' → logprob: -18.500022888183594
    8. 'plit' → logprob: -19.625022888183594
    9. 'spl' → logprob: -19.625022888183594
    10. '_split' → logprob: -19.750022888183594

Token 893: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.08095966279506683
    2. '))' → logprob: -2.5809595584869385
    3. '()' → logprob: -6.205959796905518
    4. '()))
' → logprob: -11.20595932006836
    5. '(' → logprob: -11.58095932006836
    6. ' ' → logprob: -12.33095932006836
    7. ' ))' → logprob: -12.45595932006836
    8. '())' → logprob: -12.45595932006836
    9. '()
' → logprob: -12.70595932006836
    10. '()));' → logprob: -13.20595932006836

Token 894: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.12904201447963715
    2. 'for' → logprob: -2.254041910171509
    3. ' for' → logprob: -4.379042148590088
    4. '(' → logprob: -6.504042148590088
    5. '(n' → logprob: -6.504042148590088
    6. ')' → logprob: -8.25404167175293
    7. '   ' → logprob: -9.50404167175293
    8. '())' → logprob: -9.87904167175293
    9. ' ' → logprob: -10.00404167175293
    10. '()]' → logprob: -10.62904167175293

Token 895: ' i' (ID: 575)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0007451872224919498
    2. '_range' → logprob: -8.125744819641113
    3. ' _' → logprob: -8.375744819641113
    4. '_i' → logprob: -8.750744819641113
    5. '_m' → logprob: -10.250744819641113
    6. '_j' → logprob: -11.500744819641113
    7. ' range' → logprob: -13.125744819641113
    8. '_e' → logprob: -13.250744819641113
    9. '_x' → logprob: -13.500744819641113
    10. '_a' → logprob: -13.750744819641113

Token 896: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6364197134971619
    2. ' in' → logprob: -0.7614197134971619
    3. '(' → logprob: -6.261419773101807
    4. '(in' → logprob: -7.886419773101807
    5. 'range' → logprob: -7.886419773101807
    6. '_' → logprob: -8.136419296264648
    7. '	in' → logprob: -8.136419296264648
    8. '(n' → logprob: -8.511419296264648
    9. '(range' → logprob: -8.761419296264648
    10. '()' → logprob: -10.011419296264648

Token 897: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0009114635176956654
    2. ' range' → logprob: -7.000911235809326
    3. '	range' → logprob: -18.125911712646484
    4. ' ' → logprob: -19.125911712646484
    5. '(range' → logprob: -19.125911712646484
    6. '_range' → logprob: -20.750911712646484
    7. '  ' → logprob: -21.125911712646484
    8. 'rang' → logprob: -21.375911712646484
    9. '0' → logprob: -21.500911712646484
    10. '_' → logprob: -21.625911712646484

Token 898: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.0007985501433722675
    2. 'range' → logprob: -7.37579870223999
    3. '(range' → logprob: -9.000798225402832
    4. ' range' → logprob: -10.125798225402832
    5. 'm' → logprob: -12.375798225402832
    6. '(' → logprob: -12.500798225402832
    7. ' (' → logprob: -15.500798225402832
    8. '(
' → logprob: -15.750798225402832
    9. '(M' → logprob: -16.50079917907715
    10. '	range' → logprob: -17.00079917907715

Token 899: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -9.729906196298543e-06
    2. ' )' → logprob: -13.000009536743164
    3. ')' → logprob: -13.375009536743164
    4. ']' → logprob: -13.500009536743164
    5. ')])' → logprob: -14.000009536743164
    6. '(' → logprob: -14.125009536743164
    7. '])]' → logprob: -14.125009536743164
    8. '())' → logprob: -14.375009536743164
    9. '()]' → logprob: -14.875009536743164
    10. ')]
' → logprob: -15.125009536743164

Token 900: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6758399605751038
    2. 'matrix' → logprob: -0.8008399605751038
    3. 'graph' → logprob: -3.550839900970459
    4. '#' → logprob: -5.425839900970459
    5. 'adj' → logprob: -5.425839900970459
    6. '
' → logprob: -7.300839900970459
    7. '<|end|>' → logprob: -7.550839900970459
    8. '

' → logprob: -7.675839900970459
    9. '```' → logprob: -7.675839900970459
    10. 'distance' → logprob: -7.675839900970459

Token 901: ' #' (ID: 1069)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.628058910369873
    2. '
' → logprob: -1.128058910369873
    3. 'graph' → logprob: -2.128058910369873
    4. 'adj' → logprob: -4.253058910369873
    5. '#' → logprob: -5.628058910369873
    6. '

' → logprob: -6.753058910369873
    7. 'distance' → logprob: -7.003058910369873
    8. '
' → logprob: -7.128058910369873
    9. '  
' → logprob: -7.628058910369873
    10. '```' → logprob: -7.878058910369873

Token 902: ' Liste' (ID: 61030)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.07431943714618683
    2. 'graph' → logprob: -3.699319362640381
    3. '[]' → logprob: -3.824319362640381
    4. 'edges' → logprob: -5.199319362640381
    5. 'adj' → logprob: -5.574319362640381
    6. '[[' → logprob: -5.699319362640381
    7. '[' → logprob: -5.824319362640381
    8. '#' → logprob: -6.449319362640381
    9. 'for' → logprob: -6.574319362640381
    10. 'import' → logprob: -6.949319362640381

Token 903: ' des' (ID: 731)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.13628709316253662
    2. '(n' → logprob: -2.886287212371826
    3. '(
' → logprob: -3.511287212371826
    4. '(range' → logprob: -3.761287212371826
    5. '=' → logprob: -4.261287212371826
    6. ' of' → logprob: -6.886287212371826
    7. ' (' → logprob: -6.886287212371826
    8. 'n' → logprob: -7.761287212371826
    9. '(m' → logprob: -8.011286735534668
    10. ' =' → logprob: -8.386286735534668

Token 904: ' ar' (ID: 646)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5248234868049622
    2. 'edges' → logprob: -1.5248234272003174
    3. '_edges' → logprob: -2.5248234272003174
    4. ' edges' → logprob: -3.6498234272003174
    5. '[m' → logprob: -4.1498236656188965
    6. '_' → logprob: -4.2748236656188965
    7. ' range' → logprob: -4.3998236656188965
    8. '[i' → logprob: -5.5248236656188965
    9. '[' → logprob: -5.5248236656188965
    10. 'ar' → logprob: -5.6498236656188965

Token 905: 'êtes' (ID: 23720)
  Prédit: 'êtes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êtes' → logprob: -0.1351836621761322
    2. 'g' → logprob: -3.135183572769165
    3. 'r' → logprob: -3.510183572769165
    4. 'gs' → logprob: -4.510183811187744
    5. 'e' → logprob: -4.635183811187744
    6. 'cs' → logprob: -5.010183811187744
    7. '=' → logprob: -5.635183811187744
    8. 'es' → logprob: -5.760183811187744
    9. 'êts' → logprob: -6.010183811187744
    10. ']' → logprob: -6.510183811187744

Token 906: ',' (ID: 11)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.8622093200683594
    2. '
' → logprob: -1.1122093200683594
    3. 'graph' → logprob: -1.6122093200683594
    4. '#' → logprob: -4.737209320068359
    5. '<|end|>' → logprob: -4.862209320068359
    6. '  
' → logprob: -5.237209320068359
    7. 'adj' → logprob: -5.362209320068359
    8. 'mat' → logprob: -5.487209320068359
    9. 'dist' → logprob: -5.612209320068359
    10. 'distance' → logprob: -5.737209320068359

Token 907: ' chacune' (ID: 127465)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[[' → logprob: -1.2777506113052368
    2. '[]' → logprob: -1.4027506113052368
    3. '[n' → logprob: -1.5277506113052368
    4. '[' → logprob: -2.0277504920959473
    5. '[
' → logprob: -2.6527504920959473
    6. ' [' → logprob: -4.527750492095947
    7. '[(' → logprob: -4.652750492095947
    8. 'n' → logprob: -4.777750492095947
    9. '
' → logprob: -5.277750492095947
    10. '[]
' → logprob: -5.402750492095947

Token 908: ' sous' (ID: 14487)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.038984835147857666
    2. ' =' → logprob: -3.538984775543213
    3. ')' → logprob: -6.163984775543213
    4. ' en' → logprob: -6.288984775543213
    5. '=[' → logprob: -6.288984775543213
    6. 'en' → logprob: -7.538984775543213
    7. 'à' → logprob: -7.913984775543213
    8. '(range' → logprob: -8.413985252380371
    9. 'for' → logprob: -8.538985252380371
    10. '=[]' → logprob: -8.663985252380371

Token 909: ' forme' (ID: 27450)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5707904100418091
    2. 'form' → logprob: -1.195790410041809
    3. 'forme' → logprob: -3.1957902908325195
    4. ' forme' → logprob: -3.9457902908325195
    5. '[' → logprob: -4.1957902908325195
    6. 'm' → logprob: -4.3207902908325195
    7. 'la' → logprob: -4.6957902908325195
    8. 'l' → logprob: -5.9457902908325195
    9. '[m' → logprob: -5.9457902908325195
    10. 'format' → logprob: -6.3207902908325195

Token 910: ' [' (ID: 723)
  Prédit: '=lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.5365607142448425
    2. '=' → logprob: -1.4115607738494873
    3. '=input' → logprob: -2.5365607738494873
    4. '=[' → logprob: -3.2865607738494873
    5. '=list' → logprob: -3.6615607738494873
    6. '(lambda' → logprob: -4.911560535430908
    7. '=int' → logprob: -5.536560535430908
    8. ' =' → logprob: -5.786560535430908
    9. '(range' → logprob: -6.036560535430908
    10. 'lambda' → logprob: -6.161560535430908

Token 911: 'a' (ID: 64)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.059303123503923416
    2. 'a' → logprob: -3.059303045272827
    3. 'info' → logprob: -5.559303283691406
    4. '0' → logprob: -6.309303283691406
    5. 'x' → logprob: -6.809303283691406
    6. ' u' → logprob: -6.934303283691406
    7. ']' → logprob: -7.309303283691406
    8. 'int' → logprob: -7.434303283691406
    9. 'start' → logprob: -8.559303283691406
    10. 's' → logprob: -8.559303283691406

Token 912: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0866498202085495
    2. '[' → logprob: -3.5866498947143555
    3. '[i' → logprob: -3.9616498947143555
    4. ',b' → logprob: -4.2116498947143555
    5. '-' → logprob: -4.3366498947143555
    6. ' ,' → logprob: -5.4616498947143555
    7. 'a' → logprob: -6.4616498947143555
    8. ' -' → logprob: -6.5866498947143555
    9. 'b' → logprob: -7.4616498947143555
    10. ',a' → logprob: -8.711649894714355

Token 913: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0015159345930442214
    2. ' b' → logprob: -6.501515865325928
    3. '0' → logprob: -12.376516342163086
    4. '1' → logprob: -12.626516342163086
    5. ',b' → logprob: -13.501516342163086
    6. '2' → logprob: -13.876516342163086
    7. 's' → logprob: -14.126516342163086
    8. 'c' → logprob: -14.376516342163086
    9. ',' → logprob: -14.751516342163086
    10. '<|end|>' → logprob: -14.751516342163086

Token 914: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010884242365136743
    2. ' ,' → logprob: -7.001088619232178
    3. ',n' → logprob: -9.87608814239502
    4. ',input' → logprob: -11.00108814239502
    5. ',c' → logprob: -11.12608814239502
    6. ']' → logprob: -11.37608814239502
    7. '<|end|>' → logprob: -11.50108814239502
    8. ',
' → logprob: -11.50108814239502
    9. ',a' → logprob: -11.75108814239502
    10. ',l' → logprob: -11.75108814239502

Token 915: ' cost' (ID: 3097)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0039983768947422504
    2. ' c' → logprob: -5.878998279571533
    3. 'cost' → logprob: -7.003998279571533
    4. '0' → logprob: -9.503998756408691
    5. '2' → logprob: -10.753998756408691
    6. 'w' → logprob: -11.128998756408691
    7. 'd' → logprob: -11.128998756408691
    8. 't' → logprob: -11.253998756408691
    9. '
' → logprob: -11.378998756408691
    10. ' ' → logprob: -11.503998756408691

Token 916: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.11294625699520111
    2. ')]' → logprob: -2.6129462718963623
    3. '])' → logprob: -3.8629462718963623
    4. ' ]' → logprob: -5.237946033477783
    5. ',' → logprob: -5.487946033477783
    6. '])]' → logprob: -7.112946033477783
    7. ')' → logprob: -7.487946033477783
    8. 'for' → logprob: -7.862946033477783
    9. '()]' → logprob: -7.862946033477783
    10. ')])' → logprob: -8.612946510314941

Token 917: 'q' (ID: 80)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.5054029822349548
    2. 'matrix' → logprob: -1.0054030418395996
    3. 'adj' → logprob: -4.0054030418396
    4. '#' → logprob: -5.7554030418396
    5. '
' → logprob: -6.0054030418396
    6. 'dist' → logprob: -6.2554030418396
    7. 'g' → logprob: -6.6304030418396
    8. 'mat' → logprob: -6.8804030418396
    9. 'distance' → logprob: -7.2554030418396
    10. 'edges' → logprob: -7.6304030418396

Token 918: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09210716187953949
    2. '=' → logprob: -2.842107057571411
    3. 'u' → logprob: -3.592107057571411
    4. ',' → logprob: -6.59210729598999
    5. 'ue' → logprob: -7.34210729598999
    6. 'uer' → logprob: -9.717106819152832
    7. 's' → logprob: -11.092106819152832
    8. 'ues' → logprob: -11.842106819152832
    9. 'uries' → logprob: -11.967106819152832
    10. '   ' → logprob: -12.092106819152832

Token 919: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.061969030648469925
    2. ' int' → logprob: -2.811969041824341
    3. '(int' → logprob: -14.686968803405762
    4. '[int' → logprob: -14.686968803405762
    5. '=int' → logprob: -14.686968803405762
    6. ' ' → logprob: -17.061969757080078
    7. '<int' → logprob: -17.061969757080078
    8. '	int' → logprob: -18.186969757080078
    9. ':int' → logprob: -18.686969757080078
    10. '
' → logprob: -19.061969757080078

Token 920: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.00010485442908247933
    2. '(' → logprob: -9.375104904174805
    3. 'input' → logprob: -11.125104904174805
    4. ' (' → logprob: -12.625104904174805
    5. '()' → logprob: -13.875104904174805
    6. '=input' → logprob: -14.250104904174805
    7. '(
' → logprob: -15.000104904174805
    8. ' input' → logprob: -16.250104904174805
    9. ',input' → logprob: -17.125104904174805
    10. '(int' → logprob: -17.750104904174805

Token 921: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.04868274927139282
    2. '()' → logprob: -3.048682689666748
    3. ')' → logprob: -9.923683166503906
    4. '())
' → logprob: -10.548683166503906
    5. ' ())' → logprob: -11.298683166503906
    6. '()
' → logprob: -12.173683166503906
    7. '()]' → logprob: -14.423683166503906
    8. ' ()' → logprob: -14.548683166503906
    9. '().' → logprob: -15.173683166503906
    10. '(' → logprob: -15.298683166503906

Token 922: ' ' (ID: 220)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.08347640931606293
    2. 'dist' → logprob: -2.9584763050079346
    3. 'g' → logprob: -4.583476543426514
    4. 'matrix' → logprob: -5.083476543426514
    5. 'edges' → logprob: -6.208476543426514
    6. 'distance' → logprob: -6.333476543426514
    7. 'adj' → logprob: -6.583476543426514
    8. 'G' → logprob: -7.083476543426514
    9. 'dp' → logprob: -7.083476543426514
    10. '#' → logprob: -7.208476543426514

Token 923: ' #' (ID: 1069)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.015870707109570503
    2. '
' → logprob: -5.515870571136475
    3. 'dist' → logprob: -5.890870571136475
    4. '#' → logprob: -6.265870571136475
    5. 'g' → logprob: -6.390870571136475
    6. 'adj' → logprob: -6.640870571136475
    7. 'edges' → logprob: -6.890870571136475
    8. 'matrix' → logprob: -7.015870571136475
    9. 'roads' → logprob: -7.640870571136475
    10. 'gr' → logprob: -8.265871047973633

Token 924: ' Nombre' (ID: 70208)
  Prédit: 'queries'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queries' → logprob: -0.0469365119934082
    2. 'for' → logprob: -4.171936511993408
    3. ' queries' → logprob: -4.171936511993408
    4. 'query' → logprob: -5.296936511993408
    5. 'questions' → logprob: -5.671936511993408
    6. '_queries' → logprob: -5.671936511993408
    7. '
' → logprob: -6.421936511993408
    8. 'Queries' → logprob: -8.17193603515625
    9. '#' → logprob: -8.29693603515625
    10. ' for' → logprob: -8.92193603515625

Token 925: ' de' (ID: 334)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.11489503085613251
    2. '(' → logprob: -2.6148951053619385
    3. '<|end|>' → logprob: -4.614894866943359
    4. ' of' → logprob: -5.114894866943359
    5. ' des' → logprob: -5.864894866943359
    6. '()\' → logprob: -5.864894866943359
    7. 'des' → logprob: -5.989894866943359
    8. 'of' → logprob: -6.114894866943359
    9. '(
' → logprob: -6.239894866943359
    10. '<|end|>' → logprob: -6.989894866943359

Token 926: ' requ' (ID: 7028)
  Prédit: 'queries'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queries' → logprob: -0.00816783495247364
    2. ' queries' → logprob: -5.883167743682861
    3. '_queries' → logprob: -6.258167743682861
    4. 'query' → logprob: -6.383167743682861
    5. 'questions' → logprob: -6.508167743682861
    6. 'requests' → logprob: -9.63316822052002
    7. 'quests' → logprob: -10.00816822052002
    8. 'int' → logprob: -10.13316822052002
    9. 'Queries' → logprob: -11.13316822052002
    10. 'quer' → logprob: -11.38316822052002

Token 927: 'êtes' (ID: 23720)
  Prédit: 'êtes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êtes' → logprob: -0.00034142236108891666
    2. 'etes' → logprob: -8.000341415405273
    3. 'ètes' → logprob: -13.625341415405273
    4. 'é' → logprob: -14.000341415405273
    5. 'êts' → logprob: -14.375341415405273
    6. '
' → logprob: -14.500341415405273
    7. 'tes' → logprob: -14.500341415405273
    8. 'ê' → logprob: -14.750341415405273
    9. '#' → logprob: -14.750341415405273
    10. 'êt' → logprob: -15.125341415405273

Token 928: '
' (ID: 198)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.30264756083488464
    2. 'matrix' → logprob: -1.677647590637207
    3. '
' → logprob: -2.927647590637207
    4. 'adj' → logprob: -4.802647590637207
    5. '#' → logprob: -5.802647590637207
    6. 'dist' → logprob: -6.052647590637207
    7. 'distance' → logprob: -6.177647590637207
    8. 'g' → logprob: -6.677647590637207
    9. 'mat' → logprob: -6.927647590637207
    10. 'edges' → logprob: -7.302647590637207

Token 929: 'query' (ID: 2975)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.18512693047523499
    2. 'matrix' → logprob: -2.185127019882202
    3. 'dist' → logprob: -3.810127019882202
    4. 'g' → logprob: -4.185126781463623
    5. '#' → logprob: -5.560126781463623
    6. 'adj' → logprob: -5.685126781463623
    7. 'distance' → logprob: -5.810126781463623
    8. 'G' → logprob: -5.935126781463623
    9. 'edges' → logprob: -7.060126781463623
    10. 'mat' → logprob: -7.060126781463623

Token 930: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7873313426971436
    2. '=' → logprob: -1.0373313426971436
    3. ' =' → logprob: -1.6623313426971436
    4. ' s' → logprob: -8.287331581115723
    5. '_' → logprob: -8.537331581115723
    6. '=[]' → logprob: -8.537331581115723
    7. '[]' → logprob: -9.412331581115723
    8. '[' → logprob: -10.912331581115723
    9. '_s' → logprob: -11.162331581115723
    10. 'es' → logprob: -11.412331581115723

Token 931: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.23048144578933716
    2. '[list' → logprob: -1.9804813861846924
    3. '[int' → logprob: -3.2304813861846924
    4. '[input' → logprob: -4.2304816246032715
    5. ' [' → logprob: -5.1054816246032715
    6. '[List' → logprob: -5.2304816246032715
    7. '[q' → logprob: -6.9804816246032715
    8. '[i' → logprob: -7.4804816246032715
    9. '[]' → logprob: -8.730481147766113
    10. '[array' → logprob: -9.230481147766113

Token 932: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0015067668864503503
    2. 'tuple' → logprob: -6.501506805419922
    3. ' list' → logprob: -12.501506805419922
    4. ' tuple' → logprob: -15.001506805419922
    5. '(list' → logprob: -15.251506805419922
    6. '(tuple' → logprob: -16.501506805419922
    7. 'int' → logprob: -20.001506805419922
    8. '=list' → logprob: -20.126506805419922
    9. 'input' → logprob: -20.251506805419922
    10. 'map' → logprob: -21.001506805419922

Token 933: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -6.992775888647884e-05
    2. 'map' → logprob: -9.625069618225098
    3. '(int' → logprob: -12.875069618225098
    4. ' map' → logprob: -14.125069618225098
    5. '(' → logprob: -15.000069618225098
    6. ',map' → logprob: -16.375070571899414
    7. '	map' → logprob: -17.125070571899414
    8. ' (' → logprob: -17.250070571899414
    9. '.map' → logprob: -17.500070571899414
    10. '(input' → logprob: -17.750070571899414

Token 934: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.25212180614471436
    2. 'int' → logprob: -1.5021218061447144
    3. '=int' → logprob: -9.877121925354004
    4. ' int' → logprob: -10.127121925354004
    5. ',int' → logprob: -10.252121925354004
    6. 'input' → logprob: -10.877121925354004
    7. ']int' → logprob: -11.002121925354004
    8. '[int' → logprob: -11.252121925354004
    9. '(input' → logprob: -12.127121925354004
    10. '<int' → logprob: -12.252121925354004

Token 935: ',' (ID: 11)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.7038367390632629
    2. '(input' → logprob: -0.7038367390632629
    3. ',input' → logprob: -4.828836917877197
    4. 'int' → logprob: -6.828836917877197
    5. ',int' → logprob: -7.328836917877197
    6. ',' → logprob: -8.328836441040039
    7. '=input' → logprob: -8.703836441040039
    8. 'input' → logprob: -8.703836441040039
    9. '(' → logprob: -8.828836441040039
    10. ' (' → logprob: -9.203836441040039

Token 936: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.00012976066500414163
    2. ' input' → logprob: -9.000129699707031
    3. 'int' → logprob: -12.000129699707031
    4. '(input' → logprob: -15.875129699707031
    5. '<input' → logprob: -20.50012969970703
    6. ',input' → logprob: -20.62512969970703
    7. ')' → logprob: -21.12512969970703
    8. '=input' → logprob: -21.25012969970703
    9. 'sys' → logprob: -21.50012969970703
    10. '	input' → logprob: -21.62512969970703

Token 937: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00016802136087790132
    2. '()' → logprob: -9.000167846679688
    3. '.split' → logprob: -11.125167846679688
    4. '()[' → logprob: -11.750167846679688
    5. '(int' → logprob: -11.875167846679688
    6. ' ().' → logprob: -12.750167846679688
    7. 'int' → logprob: -13.500167846679688
    8. '=int' → logprob: -13.500167846679688
    9. '()(' → logprob: -13.625167846679688
    10. '=input' → logprob: -13.875167846679688

Token 938: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.320199877838604e-07
    2. '(split' → logprob: -15.25
    3. ' split' → logprob: -15.875
    4. 'strip' → logprob: -18.625
    5. '.split' → logprob: -19.5
    6. 'spl' → logprob: -19.5
    7. 'plit' → logprob: -20.625
    8. 'skip' → logprob: -21.0
    9. '_split' → logprob: -21.125
    10. '().' → logprob: -22.125

Token 939: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.0033611739054322243
    2. '())' → logprob: -5.753361225128174
    3. '))' → logprob: -9.378360748291016
    4. '()' → logprob: -9.378360748291016
    5. '(' → logprob: -12.128360748291016
    6. '()))
' → logprob: -13.253360748291016
    7. '()[' → logprob: -13.628360748291016
    8. '())))' → logprob: -13.753360748291016
    9. '()),' → logprob: -14.003360748291016
    10. '(),' → logprob: -14.378360748291016

Token 940: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.021888474002480507
    2. 'for' → logprob: -4.021888256072998
    3. '(' → logprob: -6.396888256072998
    4. ' for' → logprob: -6.521888256072998
    5. '())' → logprob: -7.771888256072998
    6. ')' → logprob: -9.771888732910156
    7. '()]' → logprob: -10.271888732910156
    8. '(q' → logprob: -10.521888732910156
    9. '(n' → logprob: -11.021888732910156
    10. ' ()' → logprob: -11.146888732910156

Token 941: ' i' (ID: 575)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00389639544300735
    2. 'i' → logprob: -5.878896236419678
    3. ' range' → logprob: -8.003896713256836
    4. ' _' → logprob: -8.253896713256836
    5. 'range' → logprob: -8.503896713256836
    6. ' i' → logprob: -8.878896713256836
    7. '_i' → logprob: -9.003896713256836
    8. '_range' → logprob: -11.628896713256836
    9. '_q' → logprob: -11.753896713256836
    10. ' ' → logprob: -12.378896713256836

Token 942: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.42890051007270813
    2. 'in' → logprob: -1.0539004802703857
    3. 'range' → logprob: -8.803900718688965
    4. 'n' → logprob: -11.428900718688965
    5. '_' → logprob: -12.053900718688965
    6. 'import' → logprob: -12.178900718688965
    7. '
' → logprob: -12.303900718688965
    8. 's' → logprob: -12.428900718688965
    9. ' ' → logprob: -12.553900718688965
    10. '(' → logprob: -12.678900718688965

Token 943: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.014165272004902363
    2. ' range' → logprob: -4.26416540145874
    3. '(range' → logprob: -13.264164924621582
    4. 'in' → logprob: -18.5141658782959
    5. '	range' → logprob: -19.6391658782959
    6. '_range' → logprob: -21.0141658782959
    7. ' ' → logprob: -21.6391658782959
    8. 'q' → logprob: -22.1391658782959
    9. ' in' → logprob: -22.2641658782959
    10. '   ' → logprob: -22.3891658782959

Token 944: '(q' (ID: 21479)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.05659051612019539
    2. ' range' → logprob: -3.0565905570983887
    3. '(q' → logprob: -5.306590557098389
    4. '(range' → logprob: -5.806590557098389
    5. '(' → logprob: -12.55659008026123
    6. 'q' → logprob: -14.43159008026123
    7. 'in' → logprob: -15.43159008026123
    8. ' (' → logprob: -16.181591033935547
    9. '	range' → logprob: -16.181591033935547
    10. '_range' → logprob: -16.806591033935547

Token 945: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.011384843848645687
    2. '()]' → logprob: -4.511384963989258
    3. ']' → logprob: -8.261384963989258
    4. ')' → logprob: -10.386384963989258
    5. '())' → logprob: -10.386384963989258
    6. '()' → logprob: -11.261384963989258
    7. '])]' → logprob: -13.511384963989258
    8. '])' → logprob: -14.386384963989258
    9. ')])' → logprob: -14.511384963989258
    10. ']()' → logprob: -14.511384963989258

Token 946: ' ' (ID: 220)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.08490770310163498
    2. 'graph' → logprob: -3.0849077701568604
    3. 'adj' → logprob: -4.209907531738281
    4. '#' → logprob: -4.584907531738281
    5. 'distance' → logprob: -5.709907531738281
    6. 'dist' → logprob: -5.834907531738281
    7. 'mat' → logprob: -6.959907531738281
    8. '
' → logprob: -6.959907531738281
    9. '```' → logprob: -7.209907531738281
    10. 'for' → logprob: -7.584907531738281

Token 947: ' #' (ID: 1069)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.1206020787358284
    2. 'graph' → logprob: -3.2456021308898926
    3. '#' → logprob: -3.3706021308898926
    4. 'adj' → logprob: -4.120602130889893
    5. '
' → logprob: -4.620602130889893
    6. '```' → logprob: -5.370602130889893
    7. 'dist' → logprob: -5.995602130889893
    8. 'distance' → logprob: -5.995602130889893
    9. 'for' → logprob: -6.995602130889893
    10. 'mat' → logprob: -6.995602130889893

Token 948: ' Liste' (ID: 61030)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.9755319356918335
    2. 'graph' → logprob: -2.350532054901123
    3. 'query' → logprob: -2.600532054901123
    4. 'queries' → logprob: -2.600532054901123
    5. '[' → logprob: -2.850532054901123
    6. 'for' → logprob: -2.975532054901123
    7. 'matrix' → logprob: -3.100532054901123
    8. 'dist' → logprob: -3.225532054901123
    9. '#' → logprob: -3.225532054901123
    10. 'distance' → logprob: -3.850532054901123

Token 949: ' des' (ID: 731)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7354344129562378
    2. 'for' → logprob: -1.1104344129562378
    3. '(
' → logprob: -2.7354345321655273
    4. '=' → logprob: -2.9854345321655273
    5. '(range' → logprob: -3.8604345321655273
    6. '()' → logprob: -4.735434532165527
    7. ' of' → logprob: -4.985434532165527
    8. 'of' → logprob: -5.110434532165527
    9. ' for' → logprob: -5.735434532165527
    10. 'def' → logprob: -5.860434532165527

Token 950: ' requ' (ID: 7028)
  Prédit: 'queries'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queries' → logprob: -0.7319051623344421
    2. 'range' → logprob: -0.9819051623344421
    3. 'query' → logprob: -2.106905221939087
    4. 'ranges' → logprob: -4.981904983520508
    5. ' queries' → logprob: -5.731904983520508
    6. ' range' → logprob: -6.106904983520508
    7. '[' → logprob: -6.481904983520508
    8. '(range' → logprob: -6.731904983520508
    9. '(query' → logprob: -6.731904983520508
    10. '[
' → logprob: -6.981904983520508

Token 951: 'êtes' (ID: 23720)
  Prédit: 'êtes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êtes' → logprob: -0.017743531614542007
    2. 'êts' → logprob: -5.1427435874938965
    3. '[' → logprob: -6.3927435874938965
    4. 'ères' → logprob: -6.3927435874938965
    5. ']' → logprob: -6.5177435874938965
    6. 'ires' → logprob: -6.7677435874938965
    7. 'ètes' → logprob: -6.8927435874938965
    8. 'ières' → logprob: -7.3927435874938965
    9. 'r' → logprob: -7.6427435874938965
    10. 'etes' → logprob: -7.8927435874938965

Token 952: ' :' (ID: 712)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.07756317406892776
    2. '#' → logprob: -3.0775632858276367
    3. 'graph' → logprob: -4.202563285827637
    4. 'adj' → logprob: -4.952563285827637
    5. '
' → logprob: -5.327563285827637
    6. 'distance' → logprob: -7.952563285827637
    7. '```' → logprob: -8.202563285827637
    8. 'import' → logprob: -8.452563285827637
    9. 'mat' → logprob: -8.577563285827637
    10. 'dist' → logprob: -8.702563285827637

Token 953: ' chaque' (ID: 21194)
  Prédit: '[u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[u' → logprob: -1.3715486526489258
    2. 's' → logprob: -1.7465486526489258
    3. 'a' → logprob: -2.121548652648926
    4. '[a' → logprob: -2.246548652648926
    5. 'u' → logprob: -2.496548652648926
    6. '[s' → logprob: -2.746548652648926
    7. '[start' → logprob: -2.746548652648926
    8. 'start' → logprob: -3.496548652648926
    9. '(u' → logprob: -3.996548652648926
    10. '(s' → logprob: -4.121548652648926

Token 954: ' requ' (ID: 7028)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7082104086875916
    2. '[' → logprob: -1.8332104682922363
    3. '[i' → logprob: -2.3332104682922363
    4. '(
' → logprob: -2.8332104682922363
    5. '_' → logprob: -3.0832104682922363
    6. '(i' → logprob: -3.3332104682922363
    7. '=' → logprob: -3.9582104682922363
    8. ')' → logprob: -4.083210468292236
    9. ' (' → logprob: -4.083210468292236
    10. 'a' → logprob: -4.708210468292236

Token 955: 'ête' (ID: 16808)
  Prédit: '[
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[
' → logprob: -0.7882348299026489
    2. '[' → logprob: -1.413234829902649
    3. 'êtes' → logprob: -2.7882347106933594
    4. 'u' → logprob: -2.9132347106933594
    5. 'êts' → logprob: -4.038234710693359
    6. ']' → logprob: -4.288234710693359
    7. '][' → logprob: -4.663234710693359
    8. 'ort' → logprob: -4.788234710693359
    9. '[]' → logprob: -4.913234710693359
    10. 'orts' → logprob: -5.038234710693359

Token 956: ' est' (ID: 893)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.09261585026979446
    2. ' =' → logprob: -2.842615842819214
    3. 's' → logprob: -5.217616081237793
    4. '[' → logprob: -5.217616081237793
    5. '<|end|>' → logprob: -5.467616081237793
    6. ',' → logprob: -5.592616081237793
    7. '=[' → logprob: -5.967616081237793
    8. '=[]' → logprob: -6.342616081237793
    9. 'a' → logprob: -6.967616081237793
    10. '.' → logprob: -7.342616081237793

Token 957: ' [' (ID: 723)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0008166544139385223
    2. 'tuple' → logprob: -7.750816822052002
    3. ' list' → logprob: -8.375816345214844
    4. 'input' → logprob: -10.125816345214844
    5. '[]' → logprob: -10.250816345214844
    6. '[list' → logprob: -10.375816345214844
    7. '(list' → logprob: -10.875816345214844
    8. '[' → logprob: -11.750816345214844
    9. '[input' → logprob: -12.000816345214844
    10. ' tuple' → logprob: -12.250816345214844

Token 958: 'a' (ID: 64)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.7263233065605164
    2. 's' → logprob: -0.8513233065605164
    3. 'x' → logprob: -3.101323366165161
    4. 'a' → logprob: -3.476323366165161
    5. '0' → logprob: -4.976323127746582
    6. 'start' → logprob: -5.851323127746582
    7. 'c' → logprob: -6.726323127746582
    8. ']' → logprob: -7.101323127746582
    9. 'S' → logprob: -8.351323127746582
    10. ' u' → logprob: -8.726323127746582

Token 959: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005781138781458139
    2. ' ,' → logprob: -5.505781173706055
    3. ',b' → logprob: -6.755781173706055
    4. '<|end|>' → logprob: -8.505781173706055
    5. '[' → logprob: -9.130781173706055
    6. ',n' → logprob: -9.755781173706055
    7. ',
' → logprob: -10.380781173706055
    8. ',a' → logprob: -10.505781173706055
    9. 'b' → logprob: -10.630781173706055
    10. 'a' → logprob: -11.880781173706055

Token 960: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.026433128863573074
    2. ' b' → logprob: -3.651433229446411
    3. ',' → logprob: -9.651432991027832
    4. ',b' → logprob: -9.901432991027832
    5. '	b' → logprob: -11.776432991027832
    6. '0' → logprob: -11.901432991027832
    7. ' ,' → logprob: -13.276432991027832
    8. '   ' → logprob: -13.776432991027832
    9. ' ' → logprob: -14.276432991027832
    10. '1' → logprob: -16.27643394470215

Token 961: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0005710251862183213
    2. ')]' → logprob: -8.125571250915527
    3. ' ]' → logprob: -8.875571250915527
    4. ')' → logprob: -9.875571250915527
    5. '()]' → logprob: -10.625571250915527
    6. '])' → logprob: -10.750571250915527
    7. '']' → logprob: -11.625571250915527
    8. '<|end|>' → logprob: -12.000571250915527
    9. '[' → logprob: -12.375571250915527
    10. ']
' → logprob: -13.000571250915527

Token 962: 'INF' (ID: 64358)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.10453112423419952
    2. 'graph' → logprob: -2.6045310497283936
    3. 'adj' → logprob: -3.9795310497283936
    4. '#' → logprob: -5.354531288146973
    5. 'dist' → logprob: -7.354531288146973
    6. 'mat' → logprob: -7.979531288146973
    7. 'for' → logprob: -8.479531288146973
    8. 'distance' → logprob: -8.729531288146973
    9. 'inf' → logprob: -8.979531288146973
    10. 'INF' → logprob: -9.479531288146973

Token 963: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023301614448428154
    2. '=' → logprob: -3.773301601409912
    3. ',' → logprob: -10.39830207824707
    4. ')' → logprob: -11.77330207824707
    5. '
' → logprob: -12.89830207824707
    6. ' =
' → logprob: -13.02330207824707
    7. 'import' → logprob: -13.27330207824707
    8. '  ' → logprob: -13.27330207824707
    9. ' ' → logprob: -13.39830207824707
    10. '<|end|>' → logprob: -13.52330207824707

Token 964: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -2.558399319241289e-05
    2. 'float' → logprob: -11.250025749206543
    3. ' ' → logprob: -11.750025749206543
    4. 'int' → logprob: -13.375025749206543
    5. '1' → logprob: -13.500025749206543
    6. '(' → logprob: -13.750025749206543
    7. 'l' → logprob: -14.875025749206543
    8. 'n' → logprob: -15.750025749206543
    9. '100' → logprob: -16.125024795532227
    10. '2' → logprob: -17.250024795532227

Token 965: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -8.537868779967539e-06
    2. 'float' → logprob: -12.125008583068848
    3. '1' → logprob: -13.375008583068848
    4. '(' → logprob: -14.500008583068848
    5. 'int' → logprob: -14.625008583068848
    6. ' ' → logprob: -15.000008583068848
    7. 'l' → logprob: -15.875008583068848
    8. '100' → logprob: -17.25000762939453
    9. 'n' → logprob: -17.50000762939453
    10. '2' → logprob: -18.50000762939453

Token 966: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.0009153862483799458
    2. ' **' → logprob: -7.00091552734375
    3. '18' → logprob: -13.00091552734375
    4. '^' → logprob: -14.62591552734375
    5. '```' → logprob: -14.87591552734375
    6. '*' → logprob: -15.00091552734375
    7. '15' → logprob: -15.12591552734375
    8. '***' → logprob: -16.37591552734375
    9. '**
' → logprob: -17.37591552734375
    10. '​' → logprob: -17.87591552734375

Token 967: ' ' (ID: 220)
  Prédit: '18'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '18' → logprob: -0.001993227982893586
    2. '15' → logprob: -6.251993179321289
    3. '19' → logprob: -10.501993179321289
    4. '20' → logprob: -10.751993179321289
    5. '16' → logprob: -11.626993179321289
    6. '9' → logprob: -12.376993179321289
    7. '17' → logprob: -13.501993179321289
    8. '10' → logprob: -14.751993179321289
    9. '12' → logprob: -15.501993179321289
    10. '30' → logprob: -16.00199317932129

Token 968: '18' (ID: 1157)
  Prédit: '18'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '18' → logprob: -0.0008629843359813094
    2. '15' → logprob: -7.125863075256348
    3. '20' → logprob: -10.250863075256348
    4. '19' → logprob: -11.375863075256348
    5. '16' → logprob: -11.750863075256348
    6. '17' → logprob: -13.125863075256348
    7. '9' → logprob: -14.375863075256348
    8. '30' → logprob: -14.875863075256348
    9. '21' → logprob: -15.250863075256348
    10. '25' → logprob: -15.375863075256348

Token 969: ' ' (ID: 220)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.5600361227989197
    2. 'graph' → logprob: -1.1850361824035645
    3. 'dist' → logprob: -2.8100361824035645
    4. 'distance' → logprob: -3.8100361824035645
    5. 'adj' → logprob: -4.3100361824035645
    6. 'mat' → logprob: -4.8100361824035645
    7. '#' → logprob: -5.0600361824035645
    8. 'cost' → logprob: -5.6850361824035645
    9. '
' → logprob: -6.1850361824035645
    10. ' matrix' → logprob: -6.6850361824035645

Token 970: ' #' (ID: 1069)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.5749050974845886
    2. 'dist' → logprob: -1.1999051570892334
    3. 'graph' → logprob: -2.4499051570892334
    4. 'distance' → logprob: -4.199904918670654
    5. '#' → logprob: -4.449904918670654
    6. 'cost' → logprob: -4.449904918670654
    7. 'adj' → logprob: -5.574904918670654
    8. 'mat' → logprob: -5.699904918670654
    9. 'dp' → logprob: -6.324904918670654
    10. 'd' → logprob: -7.699904918670654

Token 971: ' Dé' (ID: 27247)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.1911407709121704
    2. 'dist' → logprob: -2.441140651702881
    3. 'graph' → logprob: -2.691140651702881
    4. 'distance' → logprob: -4.566140651702881
    5. 'adj' → logprob: -5.941140651702881
    6. 'cost' → logprob: -6.066140651702881
    7. '#' → logprob: -6.816140651702881
    8. 'mat' → logprob: -7.191140651702881
    9. 'INF' → logprob: -7.566140651702881
    10. 'dp' → logprob: -7.816140651702881

Token 972: 'fin' (ID: 6994)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.046159807592630386
    2. 'st' → logprob: -3.7961597442626953
    3. 'fin' → logprob: -3.9211597442626953
    4. 'dist' → logprob: -7.046159744262695
    5. 'stin' → logprob: -7.546159744262695
    6. 'part' → logprob: -8.046159744262695
    7. '#' → logprob: -8.921159744262695
    8. 'F' → logprob: -9.046159744262695
    9. '```' → logprob: -9.171159744262695
    10. 'but' → logprob: -9.171159744262695

Token 973: 'ition' (ID: 868)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.024171236902475357
    2. 'import' → logprob: -4.774171352386475
    3. 'ini' → logprob: -5.399171352386475
    4. '=' → logprob: -5.649171352386475
    5. 'ition' → logprob: -5.649171352386475
    6. 'inition' → logprob: -6.774171352386475
    7. 'ir' → logprob: -7.774171352386475
    8. 'it' → logprob: -7.899171352386475
    9. 'ni' → logprob: -8.024170875549316
    10. ' =' → logprob: -8.524170875549316

Token 974: ' globale' (ID: 87991)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.9800028800964355
    2. 'for' → logprob: -1.2300028800964355
    3. 'dist' → logprob: -1.4800028800964355
    4. '=' → logprob: -3.8550028800964355
    5. 'matrix' → logprob: -3.9800028800964355
    6. ' =' → logprob: -4.3550028800964355
    7. '[' → logprob: -4.4800028800964355
    8. '#' → logprob: -4.6050028800964355
    9. ' for' → logprob: -4.8550028800964355
    10. 'dp' → logprob: -5.7300028800964355

Token 975: ' de' (ID: 334)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.9131200909614563
    2. 'dist' → logprob: -1.1631200313568115
    3. 'matrix' → logprob: -1.6631200313568115
    4. 'distance' → logprob: -3.2881200313568115
    5. 'adj' → logprob: -3.7881200313568115
    6. '#' → logprob: -4.163120269775391
    7. 'for' → logprob: -5.413120269775391
    8. 'cost' → logprob: -5.538120269775391
    9. 'dp' → logprob: -6.163120269775391
    10. 'import' → logprob: -6.413120269775391

Token 976: ' la' (ID: 557)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.012638548389077187
    2. '10' → logprob: -4.387638568878174
    3. '(' → logprob: -9.762638092041016
    4. 'inf' → logprob: -10.387638092041016
    5. 'IN' → logprob: -11.137638092041016
    6. 'float' → logprob: -12.137638092041016
    7. '```' → logprob: -12.137638092041016
    8. ' INF' → logprob: -12.262638092041016
    9. '(IN' → logprob: -13.137638092041016
    10. '100' → logprob: -13.512638092041016

Token 977: ' constante' (ID: 49652)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.1832495480775833
    2. 'inf' → logprob: -2.8082494735717773
    3. 'n' → logprob: -3.4332494735717773
    4. '10' → logprob: -3.5582494735717773
    5. 'distance' → logprob: -4.308249473571777
    6. 'matrix' → logprob: -4.808249473571777
    7. 'mat' → logprob: -5.308249473571777
    8. 'const' → logprob: -5.683249473571777
    9. '100' → logprob: -5.683249473571777
    10. 'dist' → logprob: -6.433249473571777

Token 978: ' inf' (ID: 5603)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.20826825499534607
    2. 'graph' → logprob: -2.333268165588379
    3. 'adj' → logprob: -3.083268165588379
    4. 'dist' → logprob: -4.708268165588379
    5. '
' → logprob: -4.833268165588379
    6. '#' → logprob: -4.958268165588379
    7. 'distance' → logprob: -5.583268165588379
    8. 'n' → logprob: -5.583268165588379
    9. 'for' → logprob: -5.958268165588379
    10. '```' → logprob: -6.208268165588379

Token 979: 'ini' (ID: 2363)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.24058809876441956
    2. '
' → logprob: -2.3655881881713867
    3. 'n' → logprob: -3.9905881881713867
    4. ' =' → logprob: -4.115588188171387
    5. 'graph' → logprob: -4.115588188171387
    6. 'f' → logprob: -4.115588188171387
    7. '=' → logprob: -4.490588188171387
    8. 'mat' → logprob: -4.740588188171387
    9. 'inity' → logprob: -5.490588188171387
    10. '_matrix' → logprob: -5.615588188171387

Token 980: ' pour' (ID: 1930)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.06220295652747154
    2. 'graph' → logprob: -3.5622029304504395
    3. '
' → logprob: -4.4372029304504395
    4. 'adj' → logprob: -4.9372029304504395
    5. '#' → logprob: -5.5622029304504395
    6. 'distance' → logprob: -5.6872029304504395
    7. 'dist' → logprob: -5.8122029304504395
    8. 'mat' → logprob: -6.9372029304504395
    9. ' matrix' → logprob: -7.3122029304504395
    10. '_matrix' → logprob: -8.687203407287598

Token 981: ' initial' (ID: 4871)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.3859046995639801
    2. 'graph' → logprob: -1.7609046697616577
    3. 'adj' → logprob: -3.3859047889709473
    4. 'dist' → logprob: -3.6359047889709473
    5. '#' → logprob: -3.8859047889709473
    6. 'distance' → logprob: -3.8859047889709473
    7. '_matrix' → logprob: -4.510904788970947
    8. 'cost' → logprob: -5.010904788970947
    9. 'range' → logprob: -5.135904788970947
    10. '_' → logprob: -5.260904788970947

Token 982: 'iser' (ID: 7466)
  Prédit: 'isation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isation' → logprob: -0.2090800553560257
    2. 'n' → logprob: -2.7090799808502197
    3. 'iser' → logprob: -2.7090799808502197
    4. 'ization' → logprob: -3.7090799808502197
    5. 'isé' → logprob: -5.209080219268799
    6. 'al' → logprob: -5.334080219268799
    7. '```' → logprob: -5.459080219268799
    8. '=' → logprob: -5.834080219268799
    9. 'e' → logprob: -6.459080219268799
    10. '#' → logprob: -6.584080219268799

Token 983: ' les' (ID: 1341)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.9595361351966858
    2. 'matrix' → logprob: -1.084536075592041
    3. 'dist' → logprob: -1.334536075592041
    4. 'adj' → logprob: -5.209536075592041
    5. 'distance' → logprob: -5.209536075592041
    6. 'mat' → logprob: -6.084536075592041
    7. 'cost' → logprob: -6.584536075592041
    8. 'dp' → logprob: -8.4595365524292
    9. 'g' → logprob: -8.8345365524292
    10. 'ans' → logprob: -8.9595365524292

Token 984: ' matrices' (ID: 75935)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.6147581934928894
    2. 'graph' → logprob: -0.9897581934928894
    3. 'distance' → logprob: -3.239758253097534
    4. 'matrix' → logprob: -3.489758253097534
    5. 'mat' → logprob: -4.364758014678955
    6. 'cost' → logprob: -6.489758014678955
    7. 'adj' → logprob: -6.739758014678955
    8. 'gr' → logprob: -6.864758014678955
    9. 'dp' → logprob: -7.739758014678955
    10. ' distances' → logprob: -8.989758491516113

Token 985: '

' (ID: 279)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.09563826024532318
    2. 'graph' → logprob: -3.0956382751464844
    3. 'distance' → logprob: -4.470638275146484
    4. 'dist' → logprob: -4.595638275146484
    5. 'adj' → logprob: -4.845638275146484
    6. '#' → logprob: -5.095638275146484
    7. '
' → logprob: -5.095638275146484
    8. 'mat' → logprob: -6.595638275146484
    9. ' matrix' → logprob: -7.095638275146484
    10. '_matrix' → logprob: -7.595638275146484

Token 986: '#' (ID: 2)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.27360039949417114
    2. 'graph' → logprob: -1.7736003398895264
    3. '#' → logprob: -3.3986003398895264
    4. 'adj' → logprob: -4.3986005783081055
    5. 'dist' → logprob: -4.5236005783081055
    6. 'mat' → logprob: -4.8986005783081055
    7. 'cost' → logprob: -5.6486005783081055
    8. 'dp' → logprob: -7.3986005783081055
    9. 'distance' → logprob: -7.8986005783081055
    10. 'G' → logprob: -8.148600578308105

Token 987: ' Construction' (ID: 31452)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.8921032547950745
    2. 'matrix' → logprob: -0.8921032547950745
    3. '#' → logprob: -2.5171031951904297
    4. 'dist' → logprob: -3.0171031951904297
    5. 'cost' → logprob: -4.14210319519043
    6. 'adj' → logprob: -4.26710319519043
    7. 'mat' → logprob: -4.64210319519043
    8. 'g' → logprob: -5.76710319519043
    9. 'dp' → logprob: -6.01710319519043
    10. 'distance' → logprob: -6.26710319519043

Token 988: ' de' (ID: 334)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.484779417514801
    2. 'adj' → logprob: -1.6097793579101562
    3. 'matrix' → logprob: -2.3597793579101562
    4. 'dist' → logprob: -2.9847793579101562
    5. 'distance' → logprob: -3.9847793579101562
    6. 'g' → logprob: -5.734779357910156
    7. 'd' → logprob: -5.984779357910156
    8. '#' → logprob: -6.359779357910156
    9. '(
' → logprob: -6.484779357910156
    10. '(graph' → logprob: -6.484779357910156

Token 989: ' la' (ID: 557)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.04224410280585289
    2. 'matrix' → logprob: -3.4172441959381104
    3. '[' → logprob: -5.292243957519531
    4. '[
' → logprob: -6.792243957519531
    5. ' [[' → logprob: -7.042243957519531
    6. '([[' → logprob: -7.042243957519531
    7. '[m' → logprob: -7.917243957519531
    8. 'adj' → logprob: -8.792243957519531
    9. ' matrix' → logprob: -10.292243957519531
    10. 'dist' → logprob: -10.417243957519531

Token 990: ' matr' (ID: 25095)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.021272704005241394
    2. 'graph' → logprob: -4.771272659301758
    3. 'adj' → logprob: -5.146272659301758
    4. '[[' → logprob: -6.021272659301758
    5. 'dist' → logprob: -6.521272659301758
    6. 'mat' → logprob: -6.646272659301758
    7. 'distance' → logprob: -7.146272659301758
    8. 'cost' → logprob: -7.521272659301758
    9. ' matrix' → logprob: -9.146272659301758
    10. '#' → logprob: -9.771272659301758

Token 991: 'ice' (ID: 603)
  Prédit: 'ice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ice' → logprob: -0.003532486269250512
    2. 'ce' → logprob: -5.878532409667969
    3. 'ix' → logprob: -7.378532409667969
    4. 'ic' → logprob: -10.878532409667969
    5. 'ixe' → logprob: -10.878532409667969
    6. 'rice' → logprob: -11.378532409667969
    7. 'x' → logprob: -11.628532409667969
    8. '[' → logprob: -11.628532409667969
    9. '#' → logprob: -11.878532409667969
    10. 'e' → logprob: -12.503532409667969

Token 992: ' d' (ID: 272)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.8336408734321594
    2. 'adj' → logprob: -0.8336408734321594
    3. 'dist' → logprob: -3.3336408138275146
    4. 'graph' → logprob: -3.3336408138275146
    5. ' =' → logprob: -4.083641052246094
    6. 'cost' → logprob: -4.458641052246094
    7. 'd' → logprob: -4.833641052246094
    8. '[' → logprob: -5.208641052246094
    9. 'mat' → logprob: -5.458641052246094
    10. 'distance' → logprob: -5.708641052246094

Token 993: ''ad' (ID: 36162)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.0007011185516603291
    2. '[[' → logprob: -8.000700950622559
    3. ' adjacency' → logprob: -8.375700950622559
    4. '[' → logprob: -10.375700950622559
    5. ' adj' → logprob: -10.500700950622559
    6. 'dist' → logprob: -10.750700950622559
    7. '_adj' → logprob: -11.000700950622559
    8. 'n' → logprob: -11.375700950622559
    9. 'a' → logprob: -12.250700950622559
    10. 'ad' → logprob: -12.250700950622559

Token 994: 'jac' (ID: 77250)
  Prédit: 'jac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jac' → logprob: -0.00012415809032972902
    2. 'j' → logprob: -9.000123977661133
    3. 'jec' → logprob: -15.500123977661133
    4. 'jc' → logprob: -15.750123977661133
    5. 'Jac' → logprob: -15.750123977661133
    6. ' jac' → logprob: -16.750123977661133
    7. 'adj' → logprob: -17.125123977661133
    8. 'ja' → logprob: -17.125123977661133
    9. 'iac' → logprob: -17.625123977661133
    10. 'yac' → logprob: -17.875123977661133

Token 995: 'ence' (ID: 1082)
  Prédit: 'ence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ence' → logprob: -0.00025978617486543953
    2. 'escence' → logprob: -9.250259399414062
    3. 'cence' → logprob: -10.125259399414062
    4. 'ente' → logprob: -10.750259399414062
    5. 'ences' → logprob: -10.875259399414062
    6. '#' → logprob: -10.875259399414062
    7. 'ance' → logprob: -11.125259399414062
    8. 'es' → logprob: -12.000259399414062
    9. 'ense' → logprob: -12.125259399414062
    10. 'en' → logprob: -12.375259399414062

Token 996: ' :' (ID: 712)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.008175752125680447
    2. 'adj' → logprob: -5.383175849914551
    3. ' matrix' → logprob: -6.633175849914551
    4. 'graph' → logprob: -6.633175849914551
    5. '
' → logprob: -8.50817584991455
    6. 'dist' → logprob: -8.88317584991455
    7. 'distance' → logprob: -9.00817584991455
    8. ' =' → logprob: -9.13317584991455
    9. '_matrix' → logprob: -9.50817584991455
    10. '[
' → logprob: -9.50817584991455

Token 997: ' matrix' (ID: 12248)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.09279784560203552
    2. '[[' → logprob: -2.5927977561950684
    3. '[' → logprob: -5.592797756195068
    4. 'adj' → logprob: -5.717797756195068
    5. ' matrix' → logprob: -6.092797756195068
    6. 'graph' → logprob: -6.342797756195068
    7. ' [[' → logprob: -6.592797756195068
    8. '[
' → logprob: -6.842797756195068
    9. 'mat' → logprob: -8.967798233032227
    10. 'dist' → logprob: -9.967798233032227

Token 998: '[i' (ID: 1768)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3133988678455353
    2. ' =' → logprob: -1.313398838043213
    3. '=
' → logprob: -9.938399314880371
    4. 'matrix' → logprob: -10.063399314880371
    5. '=[[' → logprob: -10.813399314880371
    6. '=[' → logprob: -11.813399314880371
    7. '_matrix' → logprob: -12.688399314880371
    8. ' =
' → logprob: -12.813399314880371
    9. '#' → logprob: -13.063399314880371
    10. '```' → logprob: -13.188399314880371

Token 999: '][' (ID: 2696)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.626851499080658
    2. ' =' → logprob: -0.876851499080658
    3. ']' → logprob: -3.1268515586853027
    4. ']=' → logprob: -5.626851558685303
    5. '][' → logprob: -7.376851558685303
    6. 'n' → logprob: -7.751851558685303
    7. '=
' → logprob: -8.001851081848145
    8. '=[[' → logprob: -8.501851081848145
    9. '=[' → logprob: -8.626851081848145
    10. ' =
' → logprob: -9.626851081848145

Token 1000: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0005028736195527017
    2. 'i' → logprob: -8.500502586364746
    3. ' j' → logprob: -8.875502586364746
    4. ']' → logprob: -9.125502586364746
    5. '][' → logprob: -10.250502586364746
    6. '   ' → logprob: -11.750502586364746
    7. '_j' → logprob: -13.625502586364746
    8. ' ' → logprob: -14.000502586364746
    9. '	j' → logprob: -14.000502586364746
    10. '  ' → logprob: -14.500502586364746

Token 1001: ']' (ID: 60)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.42564383149147034
    2. '=' → logprob: -1.175643801689148
    3. ']' → logprob: -3.3006439208984375
    4. ']=' → logprob: -7.1756439208984375
    5. ' =
' → logprob: -9.175643920898438
    6. '=
' → logprob: -9.675643920898438
    7. '=[' → logprob: -10.300643920898438
    8. '=[[' → logprob: -10.550643920898438
    9. 'for' → logprob: -10.675643920898438
    10. 'import' → logprob: -10.800643920898438

Token 1002: ' représente' (ID: 88912)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2014477401971817
    2. ' =' → logprob: -1.7014477252960205
    3. '=[' → logprob: -11.076447486877441
    4. '=
' → logprob: -11.451447486877441
    5. '=[[' → logprob: -12.201447486877441
    6. ' =
' → logprob: -14.201447486877441
    7. '=[]
' → logprob: -14.326447486877441
    8. ' =[' → logprob: -14.451447486877441
    9. '=[
' → logprob: -15.201447486877441
    10. 'import' → logprob: -15.326447486877441

Token 1003: ' le' (ID: 505)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.0044464971870183945
    2. '[' → logprob: -5.629446506500244
    3. '0' → logprob: -7.629446506500244
    4. ' INF' → logprob: -9.004446029663086
    5. '[
' → logprob: -10.004446029663086
    6. 'inf' → logprob: -10.254446029663086
    7. '   ' → logprob: -10.504446029663086
    8. ' [' → logprob: -10.629446029663086
    9. '[i' → logprob: -11.379446029663086
    10. '
' → logprob: -11.504446029663086

Token 1004: ' coût' (ID: 73109)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.0038938994985073805
    2. '0' → logprob: -6.128893852233887
    3. ' INF' → logprob: -6.628893852233887
    4. 'inf' → logprob: -9.003893852233887
    5. ' ' → logprob: -9.253893852233887
    6. '10' → logprob: -10.253893852233887
    7. '  ' → logprob: -10.878893852233887
    8. 'l' → logprob: -11.253893852233887
    9. '[' → logprob: -11.253893852233887
    10. '   ' → logprob: -11.378893852233887

Token 1005: ' direct' (ID: 2823)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5778803825378418
    2. '=' → logprob: -0.8278803825378418
    3. '[i' → logprob: -7.202880382537842
    4. '=[[' → logprob: -7.827880382537842
    5. '=[' → logprob: -8.202880859375
    6. '   ' → logprob: -9.077880859375
    7. '[' → logprob: -9.577880859375
    8. 'for' → logprob: -9.702880859375
    9. '```' → logprob: -9.702880859375
    10. '=
' → logprob: -9.952880859375

Token 1006: ' de' (ID: 334)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08923017978668213
    2. ' =' → logprob: -2.4642300605773926
    3. 'for' → logprob: -8.96423053741455
    4. '=
' → logprob: -9.46423053741455
    5. '[i' → logprob: -11.08923053741455
    6. '=[' → logprob: -11.08923053741455
    7. '=[[' → logprob: -11.46423053741455
    8. '   ' → logprob: -11.46423053741455
    9. '_' → logprob: -11.71423053741455
    10. ' ' → logprob: -11.96423053741455

Token 1007: ' i' (ID: 575)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.7983131408691406
    2. '0' → logprob: -1.5483131408691406
    3. 'i' → logprob: -2.1733131408691406
    4. 'INF' → logprob: -2.7983131408691406
    5. '[i' → logprob: -3.5483131408691406
    6. 'inf' → logprob: -3.7983131408691406
    7. '(i' → logprob: -3.9233131408691406
    8. 'car' → logprob: -4.423313140869141
    9. '10' → logprob: -4.673313140869141
    10. '(' → logprob: -4.923313140869141

Token 1008: ' à' (ID: 1221)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '][' → logprob: -0.32048022747039795
    2. '[i' → logprob: -1.320480227470398
    3. '[j' → logprob: -5.3204803466796875
    4. '[' → logprob: -7.5704803466796875
    5. 'for' → logprob: -7.6954803466796875
    6. ' ][' → logprob: -8.195480346679688
    7. 'if' → logprob: -8.945480346679688
    8. '=' → logprob: -8.945480346679688
    9. ' [' → logprob: -9.320480346679688
    10. ']' → logprob: -9.320480346679688

Token 1009: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0232953242957592
    2. ' j' → logprob: -3.7732954025268555
    3. 'i' → logprob: -10.148295402526855
    4. ' i' → logprob: -12.773295402526855
    5. '[j' → logprob: -12.898295402526855
    6. ' ' → logprob: -13.148295402526855
    7. ' ' → logprob: -13.898295402526855
    8. '   ' → logprob: -14.023295402526855
    9. '	j' → logprob: -14.523295402526855
    10. '```' → logprob: -15.273295402526855

Token 1010: '
' (ID: 198)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.0018129866803064942
    2. ' =' → logprob: -6.751812934875488
    3. '=' → logprob: -8.126812934875488
    4. ' matrix' → logprob: -8.501812934875488
    5. '
' → logprob: -9.876812934875488
    6. '[[' → logprob: -10.251812934875488
    7. '_matrix' → logprob: -11.501812934875488
    8. '(matrix' → logprob: -11.626812934875488
    9. '```' → logprob: -11.751812934875488
    10. '[
' → logprob: -12.001812934875488

Token 1011: 'matrix' (ID: 37307)
  Prédit: 'matrix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -2.129266067640856e-05
    2. ' matrix' → logprob: -11.125020980834961
    3. '
' → logprob: -12.250020980834961
    4. '```' → logprob: -14.250020980834961
    5. '[
' → logprob: -14.625020980834961
    6. '[[' → logprob: -15.125020980834961
    7. '_matrix' → logprob: -16.37502098083496
    8. '[' → logprob: -16.50002098083496
    9. '   ' → logprob: -16.75002098083496
    10. 'graph' → logprob: -16.87502098083496

Token 1012: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2014264017343521
    2. ' =' → logprob: -1.701426386833191
    3. '=[[' → logprob: -11.57642650604248
    4. '=[' → logprob: -12.82642650604248
    5. '=
' → logprob: -15.20142650604248
    6. ' =[' → logprob: -15.20142650604248
    7. '＝' → logprob: -15.32642650604248
    8. ' ' → logprob: -16.201425552368164
    9. '=[]' → logprob: -17.326425552368164
    10. '[' → logprob: -17.451425552368164

Token 1013: ' [[' (ID: 9237)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -2.2200749754119897e-06
    2. '[' → logprob: -13.750001907348633
    3. ' [[' → logprob: -13.750001907348633
    4. '[
' → logprob: -18.000001907348633
    5. '([[' → logprob: -20.125001907348633
    6. '[['' → logprob: -21.500001907348633
    7. '[]
' → logprob: -22.625001907348633
    8. '[n' → logprob: -22.625001907348633
    9. '[\' → logprob: -23.500001907348633
    10. '   ' → logprob: -23.625001907348633

Token 1014: 'INF' (ID: 64358)
  Prédit: 'INF'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: -8.180258191714529e-06
    2. '0' → logprob: -11.750008583068848
    3. '(' → logprob: -16.25000762939453
    4. ' INF' → logprob: -16.62500762939453
    5. '10' → logprob: -17.37500762939453
    6. '(IN' → logprob: -18.00000762939453
    7. 'inf' → logprob: -18.62500762939453
    8. 'IN' → logprob: -19.25000762939453
    9. '-INF' → logprob: -19.37500762939453
    10. '_INF' → logprob: -19.37500762939453

Token 1015: ']' (ID: 60)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3045267164707184
    2. 'for' → logprob: -1.804526686668396
    3. ' if' → logprob: -2.8045268058776855
    4. 'if' → logprob: -3.3045268058776855
    5. ']' → logprob: -7.4295268058776855
    6. '   ' → logprob: -9.304526329040527
    7. '	for' → logprob: -11.054526329040527
    8. ']*' → logprob: -11.054526329040527
    9. ' ' → logprob: -12.804526329040527
    10. ']*(' → logprob: -13.804526329040527

Token 1016: ' *' (ID: 425)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5161404609680176
    2. 'for' → logprob: -1.0161404609680176
    3. ' if' → logprob: -3.7661404609680176
    4. 'if' → logprob: -4.016140460968018
    5. '	for' → logprob: -11.51613998413086
    6. ' ' → logprob: -11.89113998413086
    7. '   ' → logprob: -11.89113998413086
    8. ']' → logprob: -12.89113998413086
    9. '    ' → logprob: -15.26613998413086
    10. '	if' → logprob: -15.26613998413086

Token 1017: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -5.5577775128767826e-06
    2. ' n' → logprob: -12.125005722045898
    3. '(n' → logprob: -16.7500057220459
    4. '	n' → logprob: -17.5000057220459
    5. '_n' → logprob: -19.3750057220459
    6. '<|end|>' → logprob: -19.7500057220459
    7. 'import' → logprob: -19.7500057220459
    8. '   ' → logprob: -20.3750057220459
    9. ')n' → logprob: -20.8750057220459
    10. '
' → logprob: -20.8750057220459

Token 1018: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12693557143211365
    2. ' for' → logprob: -2.1269354820251465
    3. '   ' → logprob: -12.251935958862305
    4. '	for' → logprob: -13.001935958862305
    5. ']' → logprob: -15.626935958862305
    6. ')' → logprob: -15.626935958862305
    7. ' ' → logprob: -16.376935958862305
    8. 'if' → logprob: -17.626935958862305
    9. '    ' → logprob: -18.126935958862305
    10. '
' → logprob: -18.126935958862305

Token 1019: ' i' (ID: 575)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0033074698876589537
    2. '_range' → logprob: -6.628307342529297
    3. '_i' → logprob: -6.753307342529297
    4. '_j' → logprob: -7.628307342529297
    5. ' _' → logprob: -8.378307342529297
    6. ' range' → logprob: -10.753307342529297
    7. 'range' → logprob: -11.003307342529297
    8. '_in' → logprob: -11.253307342529297
    9. 'i' → logprob: -11.503307342529297
    10. '_n' → logprob: -12.753307342529297

Token 1020: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12699173390865326
    2. 'in' → logprob: -2.1269917488098145
    3. 'n' → logprob: -10.251991271972656
    4. ' ' → logprob: -11.251991271972656
    5. 'range' → logprob: -11.876991271972656
    6. 's' → logprob: -14.001991271972656
    7. '  ' → logprob: -14.126991271972656
    8. ')' → logprob: -14.126991271972656
    9. '	in' → logprob: -14.126991271972656
    10. 'In' → logprob: -14.251991271972656

Token 1021: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0024756586644798517
    2. ' range' → logprob: -6.002475738525391
    3. '	range' → logprob: -19.12747573852539
    4. '_range' → logprob: -19.62747573852539
    5. '(range' → logprob: -20.00247573852539
    6. ' ' → logprob: -20.37747573852539
    7. 'rang' → logprob: -21.12747573852539
    8. '_' → logprob: -22.37747573852539
    9. 'ran' → logprob: -22.50247573852539
    10. 'n' → logprob: -22.75247573852539

Token 1022: '(n' (ID: 2406)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1978037804365158
    2. 'n' → logprob: -2.4478037357330322
    3. '(n' → logprob: -3.0728037357330322
    4. ' range' → logprob: -3.0728037357330322
    5. '(range' → logprob: -7.947803974151611
    6. ' n' → logprob: -10.322803497314453
    7. '	n' → logprob: -12.072803497314453
    8. '	range' → logprob: -12.447803497314453
    9. '_n' → logprob: -12.947803497314453
    10. '[n' → logprob: -13.447803497314453

Token 1023: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.16117924451828003
    2. ']' → logprob: -1.9111793041229248
    3. ')' → logprob: -7.161179065704346
    4. ' ]' → logprob: -9.786179542541504
    5. '])]' → logprob: -10.036179542541504
    6. '])' → logprob: -10.286179542541504
    7. ')],' → logprob: -10.786179542541504
    8. ']]' → logprob: -12.536179542541504
    9. '   ' → logprob: -12.661179542541504
    10. ')])' → logprob: -12.786179542541504

Token 1024: ' ' (ID: 220)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.21836304664611816
    2. '<|end|>' → logprob: -2.218363046646118
    3. ' for' → logprob: -3.093363046646118
    4. '
' → logprob: -3.218363046646118
    5. '  
' → logprob: -7.343362808227539
    6. ' 
' → logprob: -7.968362808227539
    7. '<|end|>' → logprob: -8.218362808227539
    8. ' ' → logprob: -9.093362808227539
    9. '
' → logprob: -9.218362808227539
    10. ')' → logprob: -9.343362808227539

Token 1025: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.007750844582915306
    2. '<|end|>' → logprob: -5.257750988006592
    3. ' for' → logprob: -6.007750988006592
    4. '
' → logprob: -10.632750511169434
    5. 'matrix' → logprob: -11.257750511169434
    6. '	for' → logprob: -12.507750511169434
    7. '<|end|>' → logprob: -12.757750511169434
    8. '```' → logprob: -12.882750511169434
    9. '  
' → logprob: -13.632750511169434
    10. ')' → logprob: -13.757750511169434

Token 1026: ' Initial' (ID: 9209)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.7120533811976202e-05
    2. ' for' → logprob: -11.000017166137695
    3. '	for' → logprob: -16.000017166137695
    4. 'matrix' → logprob: -16.500017166137695
    5. '```' → logprob: -16.750017166137695
    6. '   ' → logprob: -16.875017166137695
    7. 'i' → logprob: -18.125017166137695
    8. '
' → logprob: -18.625017166137695
    9. 'import' → logprob: -19.125017166137695
    10. '0' → logprob: -19.125017166137695

Token 1027: 'isation' (ID: 6993)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6510987877845764
    2. 'for' → logprob: -1.5260987281799316
    3. '(i' → logprob: -3.2760987281799316
    4. '(range' → logprob: -3.2760987281799316
    5. '(n' → logprob: -3.4010987281799316
    6. 'in' → logprob: -3.5260987281799316
    7. 'i' → logprob: -3.5260987281799316
    8. ' in' → logprob: -3.7760987281799316
    9. ' for' → logprob: -4.151098728179932
    10. ' =' → logprob: -4.526098728179932

Token 1028: ' de' (ID: 334)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.014297490939497948
    2. ' for' → logprob: -4.5142974853515625
    3. '<|end|>' → logprob: -5.7642974853515625
    4. ')' → logprob: -10.514297485351562
    5. '
' → logprob: -10.889297485351562
    6. '   ' → logprob: -11.639297485351562
    7. '<|end|>' → logprob: -11.764297485351562
    8. '[i' → logprob: -11.889297485351562
    9. '	for' → logprob: -12.139297485351562
    10. '.' → logprob: -12.264297485351562

Token 1029: ' la' (ID: 557)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.05660278722643852
    2. ' range' → logprob: -3.056602716445923
    3. '_' → logprob: -4.931602954864502
    4. '_range' → logprob: -7.306602954864502
    5. 'matrix' → logprob: -9.931602478027344
    6. '_matrix' → logprob: -10.806602478027344
    7. 'i' → logprob: -11.806602478027344
    8. 'n' → logprob: -11.931602478027344
    9. '	range' → logprob: -12.056602478027344
    10. '(range' → logprob: -12.681602478027344

Token 1030: ' matr' (ID: 25095)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.014167269691824913
    2. ' range' → logprob: -4.264167308807373
    3. '(range' → logprob: -13.514166831970215
    4. 'n' → logprob: -14.514166831970215
    5. '	range' → logprob: -14.639166831970215
    6. 'for' → logprob: -14.764166831970215
    7. '_range' → logprob: -15.014166831970215
    8. 'i' → logprob: -15.014166831970215
    9. '
' → logprob: -15.389166831970215
    10. 'matrix' → logprob: -15.639166831970215

Token 1031: 'ice' (ID: 603)
  Prédit: 'atrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'atrix' → logprob: -0.003838071832433343
    2. 'atrice' → logprob: -5.753838062286377
    3. 'ix' → logprob: -8.003838539123535
    4. 'at' → logprob: -8.878838539123535
    5. 'tr' → logprob: -10.253838539123535
    6. 'matrix' → logprob: -10.378838539123535
    7. '[[' → logprob: -10.628838539123535
    8. '[' → logprob: -10.628838539123535
    9. 'rix' → logprob: -10.878838539123535
    10. 'atriz' → logprob: -11.128838539123535

Token 1032: ' avec' (ID: 3937)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4373050034046173
    2. '<|end|>' → logprob: -1.687304973602295
    3. ' for' → logprob: -2.062304973602295
    4. '[' → logprob: -3.937304973602295
    5. '[i' → logprob: -4.187304973602295
    6. '[n' → logprob: -6.687304973602295
    7. '```' → logprob: -6.687304973602295
    8. '   ' → logprob: -7.187304973602295
    9. '
' → logprob: -7.437304973602295
    10. '<|end|>' → logprob: -7.687304973602295

Token 1033: ' l' (ID: 305)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.06514105200767517
    2. '[' → logprob: -3.065140962600708
    3. 'range' → logprob: -4.315141201019287
    4. ' range' → logprob: -6.565141201019287
    5. ' INF' → logprob: -6.940141201019287
    6. '0' → logprob: -8.565140724182129
    7. '[
' → logprob: -9.190140724182129
    8. '[i' → logprob: -9.315140724182129
    9. ' [' → logprob: -9.690140724182129
    10. '
' → logprob: -10.065140724182129

Token 1034: ''in' (ID: 17942)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.4609399437904358
    2. 'n' → logprob: -1.335939884185791
    3. ' range' → logprob: -2.335939884185791
    4. ' n' → logprob: -5.210939884185791
    5. 'for' → logprob: -6.210939884185791
    6. '[n' → logprob: -6.960939884185791
    7. ' for' → logprob: -7.710939884185791
    8. '   ' → logprob: -8.46094036102295
    9. 'in' → logprob: -9.21094036102295
    10. 'INF' → logprob: -9.46094036102295

Token 1035: 'f' (ID: 69)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.14283151924610138
    2. ' range' → logprob: -2.017831563949585
    3. 'n' → logprob: -9.892831802368164
    4. '(range' → logprob: -10.142831802368164
    5. '_range' → logprob: -10.767831802368164
    6. '   ' → logprob: -11.017831802368164
    7. '	range' → logprob: -11.017831802368164
    8. '=' → logprob: -12.892831802368164
    9. '[' → logprob: -13.142831802368164
    10. '[n' → logprob: -13.392831802368164

Token 1036: 'ini' (ID: 2363)
  Prédit: 'ini'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ini' → logprob: -0.5939396023750305
    2. 'i' → logprob: -1.0939395427703857
    3. 'inie' → logprob: -2.7189395427703857
    4. 'f' → logprob: -3.9689395427703857
    5. 'inity' → logprob: -5.593939781188965
    6. '[i' → logprob: -5.593939781188965
    7. 'fi' → logprob: -5.843939781188965
    8. 'ni' → logprob: -6.093939781188965
    9. 'inite' → logprob: -6.218939781188965
    10. 'n' → logprob: -6.593939781188965

Token 1037: ' partout' (ID: 70478)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2702426016330719
    2. ' for' → logprob: -2.020242691040039
    3. '<|end|>' → logprob: -2.395242691040039
    4. '[' → logprob: -6.145242691040039
    5. '  
' → logprob: -6.395242691040039
    6. '
' → logprob: -6.395242691040039
    7. ')' → logprob: -6.520242691040039
    8. '    
' → logprob: -7.020242691040039
    9. ' ' → logprob: -7.145242691040039
    10. '   ' → logprob: -7.145242691040039

Token 1038: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1990625113248825
    2. ' for' → logprob: -1.949062466621399
    3. '<|end|>' → logprob: -3.3240625858306885
    4. ')' → logprob: -8.19906234741211
    5. '   ' → logprob: -8.19906234741211
    6. '  
' → logprob: -8.19906234741211
    7. '	for' → logprob: -8.57406234741211
    8. '
' → logprob: -8.57406234741211
    9. ' 
' → logprob: -8.69906234741211
    10. '.' → logprob: -8.69906234741211

Token 1039: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0008388153510168195
    2. ' for' → logprob: -7.750838756561279
    3. '   ' → logprob: -8.000839233398438
    4. '```' → logprob: -9.750839233398438
    5. '	for' → logprob: -11.375839233398438
    6. 'matrix' → logprob: -13.000839233398438
    7. '    
' → logprob: -14.875839233398438
    8. '
' → logprob: -15.125839233398438
    9. '``' → logprob: -16.250839233398438
    10. 'import' → logprob: -17.125839233398438

Token 1040: ' i' (ID: 575)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0007802037871442735
    2. 'i' → logprob: -7.37578010559082
    3. '_a' → logprob: -9.50078010559082
    4. ' a' → logprob: -9.62578010559082
    5. '(a' → logprob: -12.62578010559082
    6. 'ai' → logprob: -12.87578010559082
    7. '_i' → logprob: -13.25078010559082
    8. '_' → logprob: -13.87578010559082
    9. '   ' → logprob: -14.37578010559082
    10. 'u' → logprob: -14.50078010559082

Token 1041: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2735190689563751
    2. 'in' → logprob: -1.6485190391540527
    3. ',' → logprob: -3.1485190391540527
    4. 'a' → logprob: -6.273519039154053
    5. ' ,' → logprob: -6.773519039154053
    6. ',a' → logprob: -7.648519039154053
    7. ' ' → logprob: -9.148519515991211
    8. '0' → logprob: -9.648519515991211
    9. ',_' → logprob: -9.648519515991211
    10. 'range' → logprob: -10.273519515991211

Token 1042: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.003604224883019924
    2. ' range' → logprob: -5.628604412078857
    3. 'info' → logprob: -12.5036039352417
    4. 'r' → logprob: -16.003604888916016
    5. 'in' → logprob: -16.003604888916016
    6. '0' → logprob: -16.503604888916016
    7. '_' → logprob: -17.503604888916016
    8. '(range' → logprob: -17.753604888916016
    9. 'rang' → logprob: -17.878604888916016
    10. ' ' → logprob: -17.878604888916016

Token 1043: '(n' (ID: 2406)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.001710997661575675
    2. '(m' → logprob: -6.376710891723633
    3. 'n' → logprob: -12.126710891723633
    4. '(n' → logprob: -13.626710891723633
    5. ' m' → logprob: -13.751710891723633
    6. '	m' → logprob: -14.626710891723633
    7. '   ' → logprob: -15.001710891723633
    8. '(' → logprob: -15.751710891723633
    9. 'len' → logprob: -15.876710891723633
    10. ')m' → logprob: -16.626710891723633

Token 1044: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04328097403049469
    2. '):
' → logprob: -3.168281078338623
    3. ')' → logprob: -9.293280601501465
    4. ':' → logprob: -9.293280601501465
    5. '   ' → logprob: -10.293280601501465
    6. '):
' → logprob: -10.418280601501465
    7. ' ):' → logprob: -12.043280601501465
    8. '):

' → logprob: -12.793280601501465
    9. ']:' → logprob: -12.793280601501465
    10. '<|end|>' → logprob: -13.043280601501465

Token 1045: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09005191922187805
    2. 'matrix' → logprob: -2.5900518894195557
    3. ' matrix' → logprob: -4.590052127838135
    4. '	matrix' → logprob: -6.965052127838135
    5. '_matrix' → logprob: -13.715051651000977
    6. '   ' → logprob: -14.215051651000977
    7. '(matrix' → logprob: -14.590051651000977
    8. '       ' → logprob: -14.840051651000977
    9. '  ' → logprob: -15.215051651000977
    10. ' ' → logprob: -15.340051651000977

Token 1046: ' matrix' (ID: 12248)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matrix' (adapté à ' matrix') → logprob: -0.0008713211864233017
    2. '   ' → logprob: -7.750871181488037
    3. ' matrix' → logprob: -7.750871181488037
    4. '	matrix' → logprob: -11.500871658325195
    5. 'for' → logprob: -17.375871658325195
    6. ' ' → logprob: -17.625871658325195
    7. '  ' → logprob: -18.125871658325195
    8. '_matrix' → logprob: -18.125871658325195
    9. '.matrix' → logprob: -19.250871658325195
    10. '(matrix' → logprob: -19.500871658325195

Token 1047: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.919942486798391e-05
    2. '[' → logprob: -10.750059127807617
    3. '][' → logprob: -11.250059127807617
    4. '[I' → logprob: -12.000059127807617
    5. ' [' → logprob: -12.500059127807617
    6. '[m' → logprob: -12.875059127807617
    7. '   ' → logprob: -13.000059127807617
    8. 'for' → logprob: -13.125059127807617
    9. '[j' → logprob: -13.875059127807617
    10. '[in' → logprob: -14.375059127807617

Token 1048: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.5762397646903992
    2. '][' → logprob: -0.8262397646903992
    3. ')[' → logprob: -8.826239585876465
    4. '[I' → logprob: -9.951239585876465
    5. '[' → logprob: -10.076239585876465
    6. ' ][' → logprob: -10.951239585876465
    7. '[m' → logprob: -11.576239585876465
    8. '   ' → logprob: -11.951239585876465
    9. ']' → logprob: -12.326239585876465
    10. ' [' → logprob: -12.451239585876465

Token 1049: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0009137284359894693
    2. 'n' → logprob: -7.000913619995117
    3. ')' → logprob: -13.500913619995117
    4. ']' → logprob: -15.000913619995117
    5. ' i' → logprob: -15.125913619995117
    6. ')i' → logprob: -16.250913619995117
    7. '])' → logprob: -16.875913619995117
    8. '	i' → logprob: -17.875913619995117
    9. '[i' → logprob: -18.250913619995117
    10. 'for' → logprob: -18.375913619995117

Token 1050: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.724645733833313
    2. ']' → logprob: -1.099645733833313
    3. ']=' → logprob: -1.724645733833313
    4. ' =' → logprob: -5.474645614624023
    5. '<|end|>' → logprob: -10.724645614624023
    6. ' ]' → logprob: -10.974645614624023
    7. '[' → logprob: -11.349645614624023
    8. ')=' → logprob: -11.849645614624023
    9. '0' → logprob: -11.849645614624023
    10. ')' → logprob: -12.224645614624023

Token 1051: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00033546582562848926
    2. ' =' → logprob: -8.000335693359375
    3. '=
' → logprob: -17.000335693359375
    4. '＝' → logprob: -19.375335693359375
    5. '0' → logprob: -19.875335693359375
    6. '.=' → logprob: -19.875335693359375
    7. ']=' → logprob: -20.000335693359375
    8. '=int' → logprob: -20.875335693359375
    9. '=

' → logprob: -21.125335693359375
    10. ')=' → logprob: -21.250335693359375

Token 1052: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -17.0
    3. '۰' → logprob: -21.75
    4. '00' → logprob: -22.5
    5. '000' → logprob: -23.5
    6. '   ' → logprob: -23.5
    7. '０' → logprob: -24.125
    8. '০' → logprob: -24.5
    9. '٠' → logprob: -25.125
    10. '०' → logprob: -25.25

Token 1053: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.0
    3. '000' → logprob: -20.75
    4. '۰' → logprob: -21.0
    5. '00' → logprob: -21.0
    6. '   ' → logprob: -22.25
    7. '０' → logprob: -23.25
    8. '০' → logprob: -23.375
    9. '٠' → logprob: -23.75
    10. '  ' → logprob: -23.8125

Token 1054: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1055: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1056: ' Le' (ID: 2018)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1057: ' coût' (ID: 73109)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1058: ' pour' (ID: 1930)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1059: ' aller' (ID: 18383)
  Prédit: 'aller'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aller' → logprob: -0.2626035213470459
    2. 'se' → logprob: -2.387603521347046
    3. 're' → logprob: -2.762603521347046
    4. ' aller' → logprob: -3.387603521347046
    5. 'i' → logprob: -3.637603521347046
    6. 'atte' → logprob: -5.887603759765625
    7. ' atteindre' → logprob: -6.262603759765625
    8. 'tr' → logprob: -6.512603759765625
    9. 'all' → logprob: -6.512603759765625
    10. ' rejoindre' → logprob: -6.637603759765625

Token 1060: ' d' (ID: 272)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.019419874995946884
    2. 'd' → logprob: -4.2694196701049805
    3. 'à' → logprob: -5.6444196701049805
    4. ' de' → logprob: -7.2694196701049805
    5. 'au' → logprob: -7.3944196701049805
    6. 'du' → logprob: -8.89441967010498
    7. '[i' → logprob: -9.14441967010498
    8. 'jus' → logprob: -9.89441967010498
    9. 'direct' → logprob: -11.01941967010498
    10. 'from' → logprob: -11.14441967010498

Token 1061: ''un' (ID: 9788)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.08707856386899948
    2. ''un' → logprob: -3.21207857131958
    3. '[i' → logprob: -3.58707857131958
    4. 'e' → logprob: -5.21207857131958
    5. 'un' → logprob: -5.46207857131958
    6. ''i' → logprob: -6.21207857131958
    7. '(i' → logprob: -6.21207857131958
    8. 'u' → logprob: -8.337078094482422
    9. ' i' → logprob: -8.462078094482422
    10. '<|end|>' → logprob: -8.462078094482422

Token 1062: ' sommet' (ID: 130502)
  Prédit: 'som'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'som' → logprob: -0.5362296104431152
    2. 'i' → logprob: -1.0362296104431152
    3. ' sommet' → logprob: -2.9112296104431152
    4. ' i' → logprob: -5.536229610443115
    5. 's' → logprob: -7.161229610443115
    6. ' même' → logprob: -8.661230087280273
    7. '[i' → logprob: -8.661230087280273
    8. ' som' → logprob: -8.911230087280273
    9. 'point' → logprob: -9.036230087280273
    10. '```' → logprob: -9.411230087280273

Token 1063: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.4295334815979004
    2. 'à' → logprob: -1.0545334815979004
    3. 'i' → logprob: -7.9295334815979
    4. ' ' → logprob: -8.554533004760742
    5. '[i' → logprob: -9.304533004760742
    6. 'a' → logprob: -9.804533004760742
    7. '’à' → logprob: -10.554533004760742
    8. ''à' → logprob: -10.554533004760742
    9. ' i' → logprob: -11.054533004760742
    10. '   ' → logprob: -11.304533004760742

Token 1064: ' lui' (ID: 10623)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.16184766590595245
    2. 'l' → logprob: -1.911847710609436
    3. 'so' → logprob: -6.9118475914001465
    4. 'un' → logprob: -8.911848068237305
    5. '[i' → logprob: -9.036848068237305
    6. 'it' → logprob: -9.536848068237305
    7. ' lui' → logprob: -9.536848068237305
    8. '(i' → logprob: -9.911848068237305
    9. 'lu' → logprob: -10.286848068237305
    10. ' i' → logprob: -10.536848068237305

Token 1065: '-même' (ID: 41085)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.12499887496232986
    2. '-même' → logprob: -2.2499988079071045
    3. '```' → logprob: -4.499999046325684
    4. 'i' → logprob: -7.624999046325684
    5. '   ' → logprob: -8.499999046325684
    6. '[i' → logprob: -9.499999046325684
    7. '-m' → logprob: -10.249999046325684
    8. '(i' → logprob: -10.624999046325684
    9. 'mem' → logprob: -10.874999046325684
    10. '	m' → logprob: -10.999999046325684

Token 1066: ' est' (ID: 893)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1067: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.723973582556937e-05
    2. ' ' → logprob: -11.125017166137695
    3. '   ' → logprob: -13.000017166137695
    4. '    ' → logprob: -16.375017166137695
    5. '  ' → logprob: -17.000017166137695
    6. '=' → logprob: -17.250017166137695
    7. ' ' → logprob: -18.000017166137695
    8. 's' → logprob: -18.125017166137695
    9. '۰' → logprob: -18.250017166137695
    10. '       ' → logprob: -18.250017166137695

Token 1068: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. '   ' → logprob: -18.75
    4. 'zero' → logprob: -19.375
    5. 'z' → logprob: -19.75
    6. '```' → logprob: -20.125
    7. '...' → logprob: -21.0
    8. '  ' → logprob: -21.375
    9. '۰' → logprob: -22.0
    10. '00' → logprob: -22.0

Token 1069: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.026703838258981705
    2. '<|end|>' → logprob: -3.9017038345336914
    3. ' for' → logprob: -5.151703834533691
    4. '
' → logprob: -9.151703834533691
    5. '```' → logprob: -9.901703834533691
    6. '<|end|>' → logprob: -9.901703834533691
    7. '   ' → logprob: -10.026703834533691
    8. ')' → logprob: -10.651703834533691
    9. ' ' → logprob: -10.901703834533691
    10. '  
' → logprob: -11.276703834533691

Token 1070: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00014323067443910986
    2. ' for' → logprob: -8.875143051147461
    3. '```' → logprob: -12.625143051147461
    4. '
' → logprob: -17.37514305114746
    5. 'a' → logprob: -17.87514305114746
    6. '	for' → logprob: -18.12514305114746
    7. '<|end|>' → logprob: -18.50014305114746
    8. '    
' → logprob: -18.75014305114746
    9. '  
' → logprob: -19.00014305114746
    10. 'if' → logprob: -19.25014305114746

Token 1071: ' Rem' (ID: 6890)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.9361264946837764e-07
    2. '#' → logprob: -16.5
    3. 'from' → logprob: -17.125
    4. ' for' → logprob: -17.25
    5. '
' → logprob: -17.625
    6. '```' → logprob: -18.125
    7. 'def' → logprob: -19.875
    8. '   ' → logprob: -20.125
    9. '    
' → logprob: -20.625
    10. 'For' → logprob: -20.875

Token 1072: 'pl' (ID: 528)
  Prédit: 'pl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pl' → logprob: -0.04876403883099556
    2. 'placer' → logprob: -3.2987639904022217
    3. 'for' → logprob: -5.048764228820801
    4. 'placement' → logprob: -6.423764228820801
    5. 'place' → logprob: -6.798764228820801
    6. 'plit' → logprob: -6.923764228820801
    7. 'p' → logprob: -7.923764228820801
    8. 'er' → logprob: -10.0487642288208
    9. 'onter' → logprob: -10.5487642288208
    10. 'pla' → logprob: -11.1737642288208

Token 1073: 'issage' (ID: 63863)
  Prédit: 'pl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pl' → logprob: -0.002691105706617236
    2. 'p' → logprob: -6.127691268920898
    3. 'plit' → logprob: -8.502691268920898
    4. 'pir' → logprob: -8.627691268920898
    5. 'pler' → logprob: -9.752691268920898
    6. 'plier' → logprob: -10.252691268920898
    7. 'placer' → logprob: -11.877691268920898
    8. 'pli' → logprob: -12.502691268920898
    9. 'plement' → logprob: -12.877691268920898
    10. 'ple' → logprob: -13.002691268920898

Token 1074: ' de' (ID: 334)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0017317025922238827
    2. ' for' → logprob: -6.376731872558594
    3. 'a' → logprob: -10.876731872558594
    4. 'pour' → logprob: -12.876731872558594
    5. '[a' → logprob: -13.001731872558594
    6. ' des' → logprob: -13.251731872558594
    7. 'des' → logprob: -13.751731872558594
    8. '```' → logprob: -14.126731872558594
    9. ' of' → logprob: -14.751731872558594
    10. '
' → logprob: -15.251731872558594

Token 1075: ' la' (ID: 557)
  Prédit: 'info'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'info' → logprob: -0.12251332402229309
    2. 'range' → logprob: -2.9975132942199707
    3. 'for' → logprob: -3.2475132942199707
    4. ' info' → logprob: -4.247513294219971
    5. 'matrix' → logprob: -4.622513294219971
    6. ' range' → logprob: -6.622513294219971
    7. ' for' → logprob: -7.247513294219971
    8. ' matrix' → logprob: -9.247513771057129
    9. '(info' → logprob: -9.622513771057129
    10. '[' → logprob: -10.122513771057129

Token 1076: ' matr' (ID: 25095)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.2948405128554441e-05
    2. ' for' → logprob: -11.37501335144043
    3. '```' → logprob: -14.50001335144043
    4. 'range' → logprob: -14.75001335144043
    5. 'matrix' → logprob: -15.12501335144043
    6. '#' → logprob: -16.00001335144043
    7. 'pour' → logprob: -17.25001335144043
    8. 'edges' → logprob: -17.87501335144043
    9. '
' → logprob: -18.00001335144043
    10. 'import' → logprob: -18.12501335144043

Token 1077: 'ice' (ID: 603)
  Prédit: 'ice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ice' → logprob: -0.03738724812865257
    2. 'tr' → logprob: -4.287387371063232
    3. 'atrice' → logprob: -4.662387371063232
    4. 'atrix' → logprob: -4.912387371063232
    5. 'ix' → logprob: -5.787387371063232
    6. 'rice' → logprob: -6.162387371063232
    7. 'matrix' → logprob: -8.412386894226074
    8. 't' → logprob: -8.537386894226074
    9. 'ce' → logprob: -9.162386894226074
    10. '[' → logprob: -9.537386894226074

Token 1078: ' avec' (ID: 3937)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0011142584262415767
    2. ' for' → logprob: -7.001114368438721
    3. '
' → logprob: -9.751113891601562
    4. '[' → logprob: -10.001113891601562
    5. 'with' → logprob: -10.626113891601562
    6. '[i' → logprob: -10.876113891601562
    7. '[
' → logprob: -11.126113891601562
    8. '[a' → logprob: -11.751113891601562
    9. '```' → logprob: -12.251113891601562
    10. '[line' → logprob: -12.376113891601562

Token 1079: ' les' (ID: 1341)
  Prédit: 'info'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'info' → logprob: -0.43723583221435547
    2. ' info' → logprob: -2.3122358322143555
    3. 'for' → logprob: -2.4372358322143555
    4. 'a' → logprob: -2.9372358322143555
    5. 'range' → logprob: -2.9372358322143555
    6. 'cost' → logprob: -4.0622358322143555
    7. '[' → logprob: -4.6872358322143555
    8. ' range' → logprob: -5.0622358322143555
    9. ' for' → logprob: -5.0622358322143555
    10. '[a' → logprob: -5.0622358322143555

Token 1080: ' coûts' (ID: 116912)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2997967302799225
    2. 'a' → logprob: -1.9247967004776
    3. 'cost' → logprob: -3.2997968196868896
    4. 'info' → logprob: -3.5497968196868896
    5. ' for' → logprob: -3.9247968196868896
    6. 'edges' → logprob: -5.0497965812683105
    7. '0' → logprob: -5.2997965812683105
    8. ' info' → logprob: -6.4247965812683105
    9. 'i' → logprob: -6.5497965812683105
    10. ' edges' → logprob: -6.5497965812683105

Token 1081: ' four' (ID: 4242)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00878143310546875
    2. ' for' → logprob: -4.883781433105469
    3. '
' → logprob: -7.633781433105469
    4. '[' → logprob: -8.633781433105469
    5. '[a' → logprob: -9.008781433105469
    6. '[i' → logprob: -9.383781433105469
    7. 'info' → logprob: -9.383781433105469
    8. 'matrix' → logprob: -10.508781433105469
    9. '(info' → logprob: -10.633781433105469
    10. ':' → logprob: -11.008781433105469

Token 1082: 'nis' (ID: 12113)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.3822110593318939
    2. 'ées' → logprob: -2.5072109699249268
    3. 'for' → logprob: -2.7572109699249268
    4. 'r' → logprob: -2.7572109699249268
    5. 'nées' → logprob: -2.8822109699249268
    6. 'ch' → logprob: -5.132211208343506
    7. 'ières' → logprob: -5.132211208343506
    8. 'ches' → logprob: -5.257211208343506
    9. 'g' → logprob: -5.382211208343506
    10. 'é' → logprob: -5.632211208343506

Token 1083: ' par' (ID: 686)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00019448090461082757
    2. '
' → logprob: -8.875194549560547
    3. ' for' → logprob: -10.250194549560547
    4. '   ' → logprob: -11.625194549560547
    5. 'info' → logprob: -12.250194549560547
    6. 'a' → logprob: -13.125194549560547
    7. '```' → logprob: -13.625194549560547
    8. '  
' → logprob: -14.375194549560547
    9. '    
' → logprob: -15.000194549560547
    10. '
' → logprob: -15.250194549560547

Token 1084: ' les' (ID: 1341)
  Prédit: 'info'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'info' → logprob: -0.0005608965293504298
    2. ' info' → logprob: -7.500560760498047
    3. 'range' → logprob: -11.750560760498047
    4. '(info' → logprob: -17.625560760498047
    5. '	info' → logprob: -18.000560760498047
    6. ' range' → logprob: -18.375560760498047
    7. '   ' → logprob: -19.500560760498047
    8. '[' → logprob: -19.875560760498047
    9. '_info' → logprob: -19.875560760498047
    10. 'input' → logprob: -20.000560760498047

Token 1085: ' ar' (ID: 646)
  Prédit: 'info'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'info' → logprob: -6.253713218029588e-05
    2. ' info' → logprob: -9.750062942504883
    3. 'range' → logprob: -12.500062942504883
    4. '
' → logprob: -15.250062942504883
    5. '_info' → logprob: -16.875062942504883
    6. 'input' → logprob: -17.125062942504883
    7. '	info' → logprob: -18.375062942504883
    8. '(info' → logprob: -18.625062942504883
    9. 'cost' → logprob: -18.875062942504883
    10. 'for' → logprob: -18.875062942504883

Token 1086: 'êtes' (ID: 23720)
  Prédit: 'êtes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êtes' → logprob: -0.0002278542669955641
    2. 'ètes' → logprob: -9.500227928161621
    3. 'r' → logprob: -9.750227928161621
    4. 'cs' → logprob: -10.500227928161621
    5. 'ê' → logprob: -10.750227928161621
    6. 'ées' → logprob: -11.375227928161621
    7. 'e' → logprob: -11.750227928161621
    8. 'ên' → logprob: -12.375227928161621
    9. 'ènes' → logprob: -12.375227928161621
    10. 'etes' → logprob: -12.750227928161621

Token 1087: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -2.451116051815916e-05
    2. ' for' → logprob: -10.625024795532227
    3. 'a' → logprob: -16.000024795532227
    4. '
' → logprob: -17.125024795532227
    5. '```' → logprob: -17.125024795532227
    6. '   ' → logprob: -20.250024795532227
    7. '	for' → logprob: -20.625024795532227
    8. '<|end|>' → logprob: -21.125024795532227
    9. 'i' → logprob: -21.625024795532227
    10. '``' → logprob: -21.750024795532227

Token 1088: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0006333283381536603
    2. 'a' → logprob: -7.500633239746094
    3. ' for' → logprob: -9.500633239746094
    4. '```' → logprob: -12.500633239746094
    5. '
' → logprob: -13.375633239746094
    6. 'i' → logprob: -16.375633239746094
    7. '   ' → logprob: -16.500633239746094
    8. '    
' → logprob: -17.125633239746094
    9. '[a' → logprob: -17.375633239746094
    10. ' a' → logprob: -17.500633239746094

Token 1089: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0002226093056378886
    2. ' a' → logprob: -8.500222206115723
    3. '(a' → logprob: -11.500222206115723
    4. '_a' → logprob: -12.125222206115723
    5. '[a' → logprob: -13.625222206115723
    6. '   ' → logprob: -14.500222206115723
    7. '	a' → logprob: -14.625222206115723
    8. 'ai' → logprob: -15.000222206115723
    9. '```' → logprob: -15.750222206115723
    10. ',a' → logprob: -15.875222206115723

Token 1090: ',' (ID: 11)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.011513113975525
    2. '[a' → logprob: -1.386513113975525
    3. ',' → logprob: -1.886513113975525
    4. 'a' → logprob: -2.1365132331848145
    5. ' -' → logprob: -3.0115132331848145
    6. ',a' → logprob: -3.3865132331848145
    7. '[' → logprob: -3.5115132331848145
    8. ' ,' → logprob: -6.7615132331848145
    9. ' in' → logprob: -7.0115132331848145
    10. ' a' → logprob: -7.5115132331848145

Token 1091: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.01814994215965271
    2. ' b' → logprob: -4.0181498527526855
    3. ',b' → logprob: -21.018150329589844
    4. '	b' → logprob: -22.893150329589844
    5. ',' → logprob: -23.643150329589844
    6. ' ' → logprob: -24.268150329589844
    7. 'c' → logprob: -24.643150329589844
    8. '>b' → logprob: -25.268150329589844
    9. ')b' → logprob: -25.393150329589844
    10. '_b' → logprob: -25.518150329589844

Token 1092: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003683924674987793
    2. ' ,' → logprob: -5.878684043884277
    3. ',a' → logprob: -8.253684043884277
    4. ',b' → logprob: -8.378684043884277
    5. ' in' → logprob: -8.753684043884277
    6. 'a' → logprob: -9.003684043884277
    7. '-' → logprob: -10.253684043884277
    8. 'in' → logprob: -11.128684043884277
    9. ',n' → logprob: -11.378684043884277
    10. ',c' → logprob: -11.878684043884277

Token 1093: ' cost' (ID: 3097)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.20813177525997162
    2. 'cost' → logprob: -1.7081317901611328
    3. ' c' → logprob: -5.208131790161133
    4. ' cost' → logprob: -6.708131790161133
    5. '	c' → logprob: -13.708131790161133
    6. '_cost' → logprob: -14.333131790161133
    7. 'co' → logprob: -15.083131790161133
    8. ')c' → logprob: -16.208131790161133
    9. 'w' → logprob: -16.333131790161133
    10. 'Cost' → logprob: -16.458131790161133

Token 1094: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.17498567700386047
    2. 'in' → logprob: -2.424985647201538
    3. ',' → logprob: -2.674985647201538
    4. ' ,' → logprob: -6.299985885620117
    5. 'a' → logprob: -7.924985885620117
    6. ',in' → logprob: -8.549985885620117
    7. ',a' → logprob: -8.674985885620117
    8. '   ' → logprob: -8.799985885620117
    9. '	in' → logprob: -8.924985885620117
    10. ' ' → logprob: -9.424985885620117

Token 1095: ' info' (ID: 5377)
  Prédit: 'info'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'info' → logprob: -0.00012356207298580557
    2. ' info' → logprob: -9.000123977661133
    3. '(info' → logprob: -16.625123977661133
    4. 'input' → logprob: -17.250123977661133
    5. '[' → logprob: -17.750123977661133
    6. 'in' → logprob: -18.750123977661133
    7. 'range' → logprob: -19.000123977661133
    8. '	info' → logprob: -19.125123977661133
    9. '_info' → logprob: -20.000123977661133
    10. '   ' → logprob: -20.500123977661133

Token 1096: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06844580918550491
    2. ':
' → logprob: -3.193445920944214
    3. '   ' → logprob: -4.068445682525635
    4. '[' → logprob: -5.068445682525635
    5. 'a' → logprob: -7.318445682525635
    6. '[a' → logprob: -7.943445682525635
    7. ',' → logprob: -8.068446159362793
    8. ' :' → logprob: -9.568446159362793
    9. '-' → logprob: -9.568446159362793
    10. ' =' → logprob: -10.693446159362793

Token 1097: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013514300808310509
    2. ' matrix' → logprob: -4.388514518737793
    3. 'matrix' → logprob: -7.263514518737793
    4. '	matrix' → logprob: -8.138514518737793
    5. '```' → logprob: -12.138514518737793
    6. '   ' → logprob: -12.763514518737793
    7. ' if' → logprob: -13.513514518737793
    8. '_matrix' → logprob: -14.263514518737793
    9. '       ' → logprob: -15.388514518737793
    10. '    
' → logprob: -15.388514518737793

Token 1098: ' a' (ID: 261)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.262383371591568
    2. 'a' (adapté à ' a') → logprob: -1.5123833417892456
    3. '   ' → logprob: -5.137383460998535
    4. 'if' → logprob: -5.762383460998535
    5. ' matrix' → logprob: -7.262383460998535
    6. 'cost' → logprob: -7.637383460998535
    7. ' a' → logprob: -8.637383460998535
    8. ' if' → logprob: -11.637383460998535
    9. '	matrix' → logprob: -13.262383460998535
    10. 'Matrix' → logprob: -13.387383460998535

Token 1099: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.5291376113891602
    2. '-=' → logprob: -0.9041376113891602
    3. '-' → logprob: -5.40413761138916
    4. 'a' → logprob: -6.65413761138916
    5. ',' → logprob: -9.02913761138916
    6. ',a' → logprob: -10.77913761138916
    7. '   ' → logprob: -10.77913761138916
    8. ' -' → logprob: -11.15413761138916
    9. '[a' → logprob: -11.52913761138916
    10. '[' → logprob: -11.90413761138916

Token 1100: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. '   ' → logprob: -21.0
    4. '<|end|>' → logprob: -21.0
    5. '```' → logprob: -21.875
    6. '１' → logprob: -22.25
    7. '۱' → logprob: -23.0
    8. '१' → logprob: -23.375
    9. '১' → logprob: -23.625
    10. '=' → logprob: -23.9375

Token 1101: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -16.875
    3. '１' → logprob: -21.75
    4. '   ' → logprob: -22.5
    5. '১' → logprob: -22.875
    6. '```' → logprob: -22.875
    7. '۱' → logprob: -23.0
    8. '१' → logprob: -23.0625
    9. '<|end|>' → logprob: -23.125
    10. 'import' → logprob: -23.1875

Token 1102: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024109801277518272
    2. 'a' → logprob: -4.524109840393066
    3. '<|end|>' → logprob: -5.899109840393066
    4. '    
' → logprob: -6.024109840393066
    5. '
' → logprob: -6.024109840393066
    6. ',' → logprob: -6.774109840393066
    7. '   
' → logprob: -7.024109840393066
    8. ' a' → logprob: -7.149109840393066
    9. 'b' → logprob: -7.649109840393066
    10. '  ' → logprob: -7.774109840393066

Token 1103: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12292950600385666
    2. 'a' → logprob: -3.122929573059082
    3. 'b' → logprob: -3.622929573059082
    4. '
' → logprob: -4.372929573059082
    5. '    
' → logprob: -4.622929573059082
    6. ' and' → logprob: -5.122929573059082
    7. '   
' → logprob: -5.747929573059082
    8. ' 
' → logprob: -6.122929573059082
    9. '<|end|>' → logprob: -6.497929573059082
    10. ',' → logprob: -6.622929573059082

Token 1104: ' Passage' (ID: 152604)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00014001218369230628
    2. 'a' → logprob: -8.875140190124512
    3. ' b' → logprob: -16.000139236450195
    4. '   ' → logprob: -17.375139236450195
    5. 'matrix' → logprob: -19.875139236450195
    6. '#' → logprob: -20.000139236450195
    7. 'cost' → logprob: -20.250139236450195
    8. 'for' → logprob: -20.750139236450195
    9. '	b' → logprob: -20.875139236450195
    10. '```' → logprob: -21.750139236450195

Token 1105: ' à' (ID: 1221)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.1324366331100464
    2. ' -=' → logprob: -1.1324366331100464
    3. '-=' → logprob: -1.7574366331100464
    4. '<|end|>' → logprob: -2.757436752319336
    5. '-' → logprob: -3.132436752319336
    6. '=' → logprob: -4.132436752319336
    7. ' a' → logprob: -4.382436752319336
    8. '   ' → logprob: -4.632436752319336
    9. 'to' → logprob: -4.882436752319336
    10. ' à' → logprob: -5.007436752319336

Token 1106: ' l' (ID: 305)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0621461495757103
    2. 'a' → logprob: -2.8121461868286133
    3. 'zero' → logprob: -9.437146186828613
    4. ' ' → logprob: -9.812146186828613
    5. ' zero' → logprob: -10.937146186828613
    6. ' zéro' → logprob: -11.312146186828613
    7. ' a' → logprob: -12.437146186828613
    8. 'l' → logprob: -12.812146186828613
    9. 'z' → logprob: -13.187146186828613
    10. 'index' → logprob: -13.312146186828613

Token 1107: ''' (ID: 6)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3039950728416443
    2. 'a' → logprob: -1.428995132446289
    3. '0' → logprob: -4.178995132446289
    4. '<|end|>' → logprob: -6.553995132446289
    5. ' -' → logprob: -6.678995132446289
    6. '1' → logprob: -6.678995132446289
    7. '#' → logprob: -7.053995132446289
    8. '=' → logprob: -7.428995132446289
    9. '-a' → logprob: -7.553995132446289
    10. '-python' → logprob: -8.178995132446289

Token 1108: 'index' (ID: 2257)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.17420256882906e-05
    2. 'zero' → logprob: -9.875091552734375
    3. 'index' → logprob: -10.875091552734375
    4. 'z' → logprob: -11.500091552734375
    5. 'a' → logprob: -12.875091552734375
    6. ' zéro' → logprob: -13.500091552734375
    7. '-' → logprob: -13.750091552734375
    8. ' zero' → logprob: -13.875091552734375
    9. 'python' → logprob: -13.875091552734375
    10. ' ' → logprob: -14.125091552734375

Token 1109: 'ation' (ID: 387)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2950293719768524
    2. '-' → logprob: -1.7950294017791748
    3. '0' → logprob: -2.795029401779175
    4. ' a' → logprob: -5.045029163360596
    5. ' ' → logprob: -5.170029163360596
    6. '-=' → logprob: -5.295029163360596
    7. ' -=' → logprob: -5.545029163360596
    8. ' -' → logprob: -6.045029163360596
    9. '<|end|>' → logprob: -6.795029163360596
    10. '=' → logprob: -6.920029163360596

Token 1110: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1111: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4227246940135956
    2. 'a' → logprob: -1.172724723815918
    3. '-' → logprob: -3.547724723815918
    4. ' ' → logprob: -6.047724723815918
    5. 'à' → logprob: -6.922724723815918
    6. ' a' → logprob: -7.297724723815918
    7. '-=' → logprob: -7.422724723815918
    8. ' -' → logprob: -7.672724723815918
    9. '<|end|>' → logprob: -8.047724723815918
    10. ' -=' → logprob: -8.797724723815918

Token 1112: ' (' (ID: 350)
  Prédit: ' -='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.6121466755867004
    2. 'a' → logprob: -1.8621466159820557
    3. '<|end|>' → logprob: -1.9871466159820557
    4. '   ' → logprob: -2.7371466159820557
    5. ',' → logprob: -3.9871466159820557
    6. '-' → logprob: -4.112146854400635
    7. '#' → logprob: -4.612146854400635
    8. ' ' → logprob: -5.112146854400635
    9. '<|end|>' → logprob: -5.112146854400635
    10. ' -' → logprob: -5.362146854400635

Token 1113: 'al' (ID: 280)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00015669701679144055
    2. ' a' → logprob: -9.00015640258789
    3. '<|end|>' → logprob: -11.37515640258789
    4. 'b' → logprob: -11.87515640258789
    5. '#a' → logprob: -12.75015640258789
    6. ')' → logprob: -13.00015640258789
    7. '#' → logprob: -13.25015640258789
    8. '```' → logprob: -13.37515640258789
    9. ')a' → logprob: -13.87515640258789
    10. 'à' → logprob: -14.12515640258789

Token 1114: 'ors' (ID: 914)
  Prédit: 'ors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ors' → logprob: -0.19052977859973907
    2. 'a' → logprob: -1.8155298233032227
    3. 'é' → logprob: -5.690529823303223
    4. 'l' → logprob: -6.440529823303223
    5. 'e' → logprob: -6.565529823303223
    6. '#a' → logprob: -6.690529823303223
    7. 'g' → logprob: -7.440529823303223
    8. 'ternative' → logprob: -7.565529823303223
    9. '#' → logprob: -7.940529823303223
    10. '-' → logprob: -8.190529823303223

Token 1115: ' que' (ID: 661)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.16367244720458984
    2. '=' → logprob: -2.53867244720459
    3. 'a' → logprob: -3.16367244720459
    4. '+=' → logprob: -4.41367244720459
    5. 'à' → logprob: -4.91367244720459
    6. '#' → logprob: -6.03867244720459
    7. '=a' → logprob: -6.03867244720459
    8. '-' → logprob: -6.28867244720459
    9. ' -=' → logprob: -6.41367244720459
    10. ':' → logprob: -8.41367244720459

Token 1116: ' l' (ID: 305)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0007529280846938491
    2. ' a' → logprob: -8.000753402709961
    3. '1' → logprob: -9.000753402709961
    4. 'input' → logprob: -9.375753402709961
    5. '0' → logprob: -9.750753402709961
    6. 'les' → logprob: -10.125753402709961
    7. 'l' → logprob: -10.875753402709961
    8. 'user' → logprob: -11.125753402709961
    9. 'inputs' → logprob: -11.125753402709961
    10. '#' → logprob: -11.750753402709961

Token 1117: ''entrée' (ID: 115820)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.04379979521036148
    2. '=' → logprob: -4.043799877166748
    3. 'user' → logprob: -5.168799877166748
    4. 'b' → logprob: -5.293799877166748
    5. ' a' → logprob: -5.918799877166748
    6. '#' → logprob: -6.043799877166748
    7. ' =' → logprob: -6.418799877166748
    8. '-=' → logprob: -6.418799877166748
    9. 'input' → logprob: -6.543799877166748
    10. ' -=' → logprob: -7.168799877166748

Token 1118: ' est' (ID: 893)
  Prédit: 'est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.49758410453796387
    2. ' est' → logprob: -2.122584104537964
    3. '-' → logprob: -2.622584104537964
    4. 'a' → logprob: -2.997584104537964
    5. ' was' → logprob: -4.497584342956543
    6. 'reste' → logprob: -4.622584342956543
    7. '#' → logprob: -4.747584342956543
    8. ' était' → logprob: -4.872584342956543
    9. '...' → logprob: -4.872584342956543
    10. 'inputs' → logprob: -4.997584342956543

Token 1119: ' probablement' (ID: 87740)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0030563808977603912
    2. ' ' → logprob: -6.003056526184082
    3. 'd' → logprob: -8.378056526184082
    4. 'import' → logprob: -9.128056526184082
    5. ' probablement' → logprob: -10.253056526184082
    6. 'dé' → logprob: -10.503056526184082
    7. 'à' → logprob: -10.753056526184082
    8. 'faite' → logprob: -10.753056526184082
    9. 'index' → logprob: -11.003056526184082
    10. '```' → logprob: -11.003056526184082

Token 1120: ' en' (ID: 469)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.013964975252747536
    2. 'a' → logprob: -4.763965129852295
    3. ' ' → logprob: -6.388965129852295
    4. ' one' → logprob: -7.638965129852295
    5. 'à' → logprob: -8.138964653015137
    6. 'd' → logprob: -8.263964653015137
    7. 'index' → logprob: -8.513964653015137
    8. 'input' → logprob: -8.513964653015137
    9. ' a' → logprob: -8.638964653015137
    10. 'import' → logprob: -8.638964653015137

Token 1121: ' index' (ID: 3472)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001970150275155902
    2. ' ' → logprob: -6.876970291137695
    3. 'a' → logprob: -7.376970291137695
    4. '#' → logprob: -9.876970291137695
    5. 'input' → logprob: -10.251970291137695
    6. '```' → logprob: -10.251970291137695
    7. 'range' → logprob: -10.376970291137695
    8. '0' → logprob: -10.876970291137695
    9. 'code' → logprob: -10.876970291137695
    10. '_code' → logprob: -11.251970291137695

Token 1122: 'ation' (ID: 387)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.517795979976654
    2. '0' → logprob: -1.3927960395812988
    3. 'a' → logprob: -2.267796039581299
    4. '1' → logprob: -3.767796039581299
    5. 'ation' → logprob: -5.017796039581299
    6. ' ' → logprob: -5.517796039581299
    7. 'à' → logprob: -5.642796039581299
    8. 'ing' → logprob: -5.642796039581299
    9. '-à' → logprob: -5.767796039581299
    10. ' -' → logprob: -5.892796039581299

Token 1123: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03566357493400574
    2. ' ' → logprob: -4.285663604736328
    3. '-' → logprob: -4.535663604736328
    4. 'a' → logprob: -4.910663604736328
    5. ' -' → logprob: -6.285663604736328
    6. ' a' → logprob: -8.285663604736328
    7. 'à' → logprob: -8.410663604736328
    8. ' -=' → logprob: -8.535663604736328
    9. ' à' → logprob: -8.535663604736328
    10. '0' → logprob: -8.785663604736328

Token 1124: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006510609295219183
    2. ' ' → logprob: -5.3815107345581055
    3. 'a' → logprob: -6.5065107345581055
    4. '-' → logprob: -8.506510734558105
    5. '0' → logprob: -10.131510734558105
    6. '```' → logprob: -10.506510734558105
    7. 'import' → logprob: -10.631510734558105
    8. 'à' → logprob: -10.756510734558105
    9. 'au' → logprob: -11.256510734558105
    10. 'un' → logprob: -11.381510734558105

Token 1125: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009825152345001698
    2. '   ' → logprob: -5.009825229644775
    3. ')a' → logprob: -6.634825229644775
    4. 'a' → logprob: -6.759825229644775
    5. '<|end|>' → logprob: -8.134824752807617
    6. ' )' → logprob: -8.759824752807617
    7. ')
' → logprob: -9.384824752807617
    8. ',' → logprob: -10.884824752807617
    9. '),' → logprob: -11.509824752807617
    10. ',a' → logprob: -11.884824752807617

Token 1126: '   ' (ID: 271)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.596451997756958
    2. '   ' → logprob: -0.846451997756958
    3. ' matrix' → logprob: -4.096451759338379
    4. 'if' → logprob: -5.846451759338379
    5. ' if' → logprob: -7.471451759338379
    6. '	matrix' → logprob: -8.721451759338379
    7. 'cost' → logprob: -11.096451759338379
    8. '```' → logprob: -11.846451759338379
    9. '
' → logprob: -11.971451759338379
    10. '  ' → logprob: -12.221451759338379

Token 1127: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -4.847109812544659e-05
    2. ' b' → logprob: -10.250048637390137
    3. '   ' → logprob: -11.250048637390137
    4. 'matrix' → logprob: -16.62504768371582
    5. '	b' → logprob: -17.50004768371582
    6. ' matrix' → logprob: -19.00004768371582
    7. 'if' → logprob: -19.87504768371582
    8. '  ' → logprob: -21.00004768371582
    9. '    ' → logprob: -21.12504768371582
    10. ' ' → logprob: -21.12504768371582

Token 1128: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.47425010800361633
    2. '-=' → logprob: -0.974250078201294
    3. '-' → logprob: -9.224249839782715
    4. '   ' → logprob: -9.599249839782715
    5. ' ' → logprob: -12.849249839782715
    6. '=' → logprob: -12.849249839782715
    7. '    ' → logprob: -14.474249839782715
    8. '  ' → logprob: -14.599249839782715
    9. '	' → logprob: -15.599249839782715
    10. ' -' → logprob: -16.22425079345703

Token 1129: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.5491004129871726e-05
    2. ' ' → logprob: -10.000045776367188
    3. '   ' → logprob: -19.750045776367188
    4. '```' → logprob: -20.375045776367188
    5. '2' → logprob: -21.500045776367188
    6. '0' → logprob: -21.875045776367188
    7. '<|end|>' → logprob: -22.000045776367188
    8. '１' → logprob: -22.000045776367188
    9. '-' → logprob: -22.250045776367188
    10. '=' → logprob: -22.625045776367188

Token 1130: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.250000953674316
    3. '```' → logprob: -17.25
    4. '2' → logprob: -18.75
    5. 'b' → logprob: -19.3125
    6. 'a' → logprob: -19.5625
    7. '   ' → logprob: -19.625
    8. '<|end|>' → logprob: -19.8125
    9. '-' → logprob: -19.9375
    10. '１' → logprob: -20.0

Token 1131: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02189045585691929
    2. '
' → logprob: -4.396890640258789
    3. ' matrix' → logprob: -5.396890640258789
    4. 'matrix' → logprob: -6.271890640258789
    5. '    
' → logprob: -6.896890640258789
    6. '	matrix' → logprob: -7.521890640258789
    7. '<|end|>' → logprob: -7.771890640258789
    8. ' 
' → logprob: -8.146890640258789
    9. '  
' → logprob: -8.271890640258789
    10. '   
' → logprob: -8.646890640258789

Token 1132: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2940032482147217
    2. 'matrix' → logprob: -1.5440032482147217
    3. 'if' → logprob: -3.4190032482147217
    4. ' matrix' → logprob: -5.169003486633301
    5. ' if' → logprob: -6.294003486633301
    6. '```' → logprob: -7.044003486633301
    7. '	matrix' → logprob: -10.7940034866333
    8. '``' → logprob: -11.7940034866333
    9. '
' → logprob: -12.0440034866333
    10. 'cost' → logprob: -13.0440034866333

Token 1133: ' if' (ID: 538)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.2017451524734497
    2. 'if' (adapté à ' if') → logprob: -1.7017451524734497
    3. 'cost' → logprob: -8.45174503326416
    4. '   ' → logprob: -9.45174503326416
    5. ' matrix' → logprob: -10.70174503326416
    6. ' if' → logprob: -11.57674503326416
    7. '```' → logprob: -13.45174503326416
    8. 'Matrix' → logprob: -14.07674503326416
    9. 'mat' → logprob: -14.32674503326416
    10. '	matrix' → logprob: -14.57674503326416

Token 1134: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.14923396706581116
    2. 'matrix' → logprob: -2.0242340564727783
    3. ' cost' → logprob: -5.149233818054199
    4. ' matrix' → logprob: -7.274233818054199
    5. '(cost' → logprob: -11.6492338180542
    6. '   ' → logprob: -11.8992338180542
    7. '	matrix' → logprob: -12.4617338180542
    8. ' ' → logprob: -12.5242338180542
    9. 'mat' → logprob: -13.0242338180542
    10. 'Matrix' → logprob: -13.2117338180542

Token 1135: ' >' (ID: 1424)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.8375257849693298
    2. ' <' → logprob: -0.8375257849693298
    3. ' <=' → logprob: -2.4625258445739746
    4. '<=' → logprob: -3.0875258445739746
    5. '[' → logprob: -6.962525844573975
    6. '   ' → logprob: -7.087525844573975
    7. '<m' → logprob: -7.337525844573975
    8. '<|end|>' → logprob: -7.837525844573975
    9. '<n' → logprob: -9.087525367736816
    10. '<size' → logprob: -9.462525367736816

Token 1136: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0011083055287599564
    2. 'matrix' → logprob: -6.876108169555664
    3. '0' → logprob: -9.751108169555664
    4. ' l' → logprob: -11.751108169555664
    5. '100' → logprob: -13.376108169555664
    6. '	l' → logprob: -13.626108169555664
    7. '1' → logprob: -13.876108169555664
    8. '10' → logprob: -14.251108169555664
    9. ' matrix' → logprob: -14.501108169555664
    10. 'm' → logprob: -15.126108169555664

Token 1137: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11236385256052017
    2. ':
' → logprob: -2.487363815307617
    3. '   ' → logprob: -3.862363815307617
    4. '       ' → logprob: -6.487363815307617
    5. 'continue' → logprob: -8.237363815307617
    6. ' continue' → logprob: -8.987363815307617
    7. ' :' → logprob: -9.237363815307617
    8. '):' → logprob: -10.362363815307617
    9. '	continue' → logprob: -10.612363815307617
    10. '):
' → logprob: -10.737363815307617

Token 1138: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03037467785179615
    2. 'continue' → logprob: -3.530374765396118
    3. '       ' → logprob: -7.530374526977539
    4. ' continue' → logprob: -9.655374526977539
    5. '	continue' → logprob: -10.780374526977539
    6. '   ' → logprob: -13.530374526977539
    7. '_continue' → logprob: -14.530374526977539
    8. 'continu' → logprob: -15.655374526977539
    9. '```' → logprob: -15.780374526977539
    10. ' ' → logprob: -15.905374526977539

Token 1139: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.002398720709607005
    2. '   ' → logprob: -6.377398490905762
    3. ' continue' → logprob: -7.877398490905762
    4. 'cost' → logprob: -8.127398490905762
    5. '	continue' → logprob: -11.127398490905762
    6. 'continu' → logprob: -12.752398490905762
    7. '#' → logprob: -13.127398490905762
    8. 'contin' → logprob: -14.252398490905762
    9. 'pass' → logprob: -14.627398490905762
    10. 'Continue' → logprob: -15.002398490905762

Token 1140: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -2.558399319241289e-05
    2. '<|end|>' → logprob: -11.625025749206543
    3. 'matrix' → logprob: -11.750025749206543
    4. '	matrix' → logprob: -12.625025749206543
    5. '```' → logprob: -13.250025749206543
    6. '    
' → logprob: -14.125025749206543
    7. ' matrix' → logprob: -14.250025749206543
    8. '	continue' → logprob: -15.000025749206543
    9. 'continue' → logprob: -15.000025749206543
    10. '       ' → logprob: -15.000025749206543

Token 1141: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.055327799171209335
    2. 'matrix' → logprob: -2.930327892303467
    3. ' matrix' → logprob: -8.680327415466309
    4. '```' → logprob: -9.180327415466309
    5. '	matrix' → logprob: -9.180327415466309
    6. 'continue' → logprob: -10.680327415466309
    7. 'for' → logprob: -11.430327415466309
    8. '    
' → logprob: -11.680327415466309
    9. '  ' → logprob: -12.430327415466309
    10. ')' → logprob: -12.680327415466309

Token 1142: ' On' (ID: 2160)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28531691431999207
    2. 'continue' → logprob: -1.4103169441223145
    3. ' continue' → logprob: -5.9103169441223145
    4. '```' → logprob: -6.9103169441223145
    5. 'matrix' → logprob: -8.285316467285156
    6. 'pass' → logprob: -9.535316467285156
    7. '	continue' → logprob: -10.035316467285156
    8. '...' → logprob: -10.785316467285156
    9. '  ' → logprob: -11.285316467285156
    10. ' ' → logprob: -11.660316467285156

Token 1143: ' ignore' (ID: 17887)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.5886144638061523
    2. '   ' → logprob: -0.8386144638061523
    3. ' continue' → logprob: -4.463614463806152
    4. 'n' → logprob: -8.588614463806152
    5. 'contin' → logprob: -8.588614463806152
    6. 'pass' → logprob: -8.713614463806152
    7. '	continue' → logprob: -8.838614463806152
    8. '```' → logprob: -9.463614463806152
    9. 'skip' → logprob: -9.713614463806152
    10. '       ' → logprob: -10.088614463806152

Token 1144: ' les' (ID: 1341)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.558286190032959
    2. 'continue' → logprob: -1.933286190032959
    3. '<|end|>' → logprob: -1.933286190032959
    4. ' edges' → logprob: -3.558286190032959
    5. 'edges' → logprob: -3.558286190032959
    6. 'a' → logprob: -3.808286190032959
    7. ' continue' → logprob: -4.558286190032959
    8. '  ' → logprob: -4.808286190032959
    9. 'the' → logprob: -5.058286190032959
    10. '...' → logprob: -5.183286190032959

Token 1145: ' ar' (ID: 646)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.009067014791071415
    2. 'arest' → logprob: -5.509067058563232
    3. 'are' → logprob: -5.884067058563232
    4. 'edges' → logprob: -6.509067058563232
    5. 'arri' → logprob: -8.759066581726074
    6. 'aré' → logprob: -8.759066581726074
    7. ' ar' → logprob: -8.884066581726074
    8. '#' → logprob: -10.134066581726074
    9. 'a' → logprob: -10.134066581726074
    10. ' edges' → logprob: -10.759066581726074

Token 1146: 'êtes' (ID: 23720)
  Prédit: 'êtes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êtes' → logprob: -0.0006167700630612671
    2. 'cs' → logprob: -8.000617027282715
    3. 'ètes' → logprob: -8.875617027282715
    4. 'ête' → logprob: -10.500617027282715
    5. 'ê' → logprob: -10.500617027282715
    6. 'etes' → logprob: -10.625617027282715
    7. 'êts' → logprob: -10.750617027282715
    8. 'tes' → logprob: -11.500617027282715
    9. 'c' → logprob: -11.875617027282715
    10. 'r' → logprob: -12.125617027282715

Token 1147: ' dont' (ID: 11562)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008328035473823547
    2. '<|end|>' → logprob: -5.508327960968018
    3. '.' → logprob: -6.383327960968018
    4. '```' → logprob: -7.258327960968018
    5. ' that' → logprob: -8.008328437805176
    6. ' qui' → logprob: -8.258328437805176
    7. ' if' → logprob: -8.633328437805176
    8. '       ' → logprob: -9.008328437805176
    9. ',' → logprob: -9.258328437805176
    10. 'ayant' → logprob: -9.383328437805176

Token 1148: ' le' (ID: 505)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.4467483162879944
    2. 'le' → logprob: -1.1967482566833496
    3. 'co' → logprob: -3.3217482566833496
    4. ' le' → logprob: -4.32174825668335
    5. ' cost' → logprob: -4.94674825668335
    6. 'leur' → logprob: -8.071748733520508
    7. '<|end|>' → logprob: -8.071748733520508
    8. 'c' → logprob: -8.196748733520508
    9. 'the' → logprob: -8.196748733520508
    10. ' coût' → logprob: -9.071748733520508

Token 1149: ' coût' (ID: 73109)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.3172190487384796
    2. 'co' → logprob: -1.3172190189361572
    3. ' cost' → logprob: -5.942219257354736
    4. ' coût' → logprob: -6.817219257354736
    5. 'cout' → logprob: -8.817218780517578
    6. '<|end|>' → logprob: -10.567218780517578
    7. 'c' → logprob: -11.067218780517578
    8. 'token' → logprob: -11.442218780517578
    9. '...' → logprob: -12.192218780517578
    10. 'code' → logprob: -12.442218780517578

Token 1150: ' exc' (ID: 3529)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.20905113220214844
    2. ' >' → logprob: -1.7090511322021484
    3. ' dépasse' → logprob: -6.084051132202148
    4. '<|end|>' → logprob: -6.084051132202148
    5. 'ex' → logprob: -6.709051132202148
    6. ' exceeds' → logprob: -7.709051132202148
    7. 's' → logprob: -7.959051132202148
    8. ' surpass' → logprob: -8.959051132202148
    9. ' dépass' → logprob: -9.084051132202148
    10. '...' → logprob: -9.459051132202148

Token 1151: 'ède' (ID: 48404)
  Prédit: 'ède'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ède' → logprob: -0.0014940340770408511
    2. 'ede' → logprob: -6.87649393081665
    3. 'è' → logprob: -8.501494407653809
    4. 'e' → logprob: -8.626494407653809
    5. 'é' → logprob: -9.876494407653809
    6. '```' → logprob: -12.501494407653809
    7. 'еде' → logprob: -12.876494407653809
    8. '\' → logprob: -13.126494407653809
    9. 'eed' → logprob: -13.376494407653809
    10. '{' → logprob: -13.626494407653809

Token 1152: ' la' (ID: 557)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -3.547789674485102e-05
    2. ' l' → logprob: -10.250035285949707
    3. '	l' → logprob: -17.625036239624023
    4. '_l' → logprob: -18.750036239624023
    5. ' ' → logprob: -18.750036239624023
    6. '```' → logprob: -19.625036239624023
    7. '­l' → logprob: -19.750036239624023
    8. 'la' → logprob: -20.000036239624023
    9. '+l' → logprob: -20.125036239624023
    10. '[l' → logprob: -20.250036239624023

Token 1153: ' capacité' (ID: 62575)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0007274442468769848
    2. 'limit' → logprob: -8.125727653503418
    3. 'cap' → logprob: -8.625727653503418
    4. 'capacity' → logprob: -8.750727653503418
    5. ' l' → logprob: -10.375727653503418
    6. 'maximum' → logprob: -11.125727653503418
    7. 'lim' → logprob: -11.125727653503418
    8. 'capac' → logprob: -12.125727653503418
    9. 'car' → logprob: -12.250727653503418
    10. ' capacity' → logprob: -12.375727653503418

Token 1154: ' maximale' (ID: 76380)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16946540772914886
    2. 'l' → logprob: -2.1694653034210205
    3. ' l' → logprob: -4.5444655418396
    4. 'continue' → logprob: -5.4194655418396
    5. '.' → logprob: -5.5444655418396
    6. ' de' → logprob: -5.6694655418396
    7. ' continue' → logprob: -5.6694655418396
    8. 'max' → logprob: -5.6694655418396
    9. ' maximale' → logprob: -5.6694655418396
    10. '  ' → logprob: -6.6694655418396

Token 1155: ' sans' (ID: 9828)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -3.666993507067673e-05
    2. '<|end|>' → logprob: -11.000036239624023
    3. 'matrix' → logprob: -11.500036239624023
    4. '       ' → logprob: -12.500036239624023
    5. '.' → logprob: -13.250036239624023
    6. ' matrix' → logprob: -13.625036239624023
    7. '```' → logprob: -13.750036239624023
    8. ',' → logprob: -14.750036239624023
    9. '	matrix' → logprob: -14.875036239624023
    10. ')' → logprob: -15.250036239624023

Token 1156: ' rav' (ID: 26005)
  Prédit: 'rav'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rav' → logprob: -0.0004060050705447793
    2. ' rav' → logprob: -8.625406265258789
    3. 'r' → logprob: -9.250406265258789
    4. 'ref' → logprob: -10.500406265258789
    5. 'ral' → logprob: -10.875406265258789
    6. '```' → logprob: -11.375406265258789
    7. 'ran' → logprob: -11.750406265258789
    8. 'raz' → logprob: -12.000406265258789
    9. 'rast' → logprob: -12.000406265258789
    10. 'ra' → logprob: -12.375406265258789

Token 1157: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.254439115524292
    2. 'ita' → logprob: -1.629439115524292
    3. 'ital' → logprob: -4.379439353942871
    4. 'avit' → logprob: -6.004439353942871
    5. ' rav' → logprob: -6.504439353942871
    6. 'import' → logprob: -6.629439353942871
    7. 'ail' → logprob: -6.754439353942871
    8. '>' → logprob: -6.879439353942871
    9. '=' → logprob: -7.254439353942871
    10. 'l' → logprob: -7.379439353942871

Token 1158: 'ail' (ID: 663)
  Prédit: 'ail'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ail' → logprob: -0.002136936644092202
    2. 'l' → logprob: -7.502136707305908
    3. 'it' → logprob: -8.252137184143066
    4. 'a' → logprob: -8.252137184143066
    5. 'aul' → logprob: -8.877137184143066
    6. 'aille' → logprob: -9.127137184143066
    7. 'ailability' → logprob: -9.377137184143066
    8. 'ueil' → logprob: -9.752137184143066
    9. 'uel' → logprob: -9.877137184143066
    10. 'al' → logprob: -9.877137184143066

Token 1159: 'lement' (ID: 1254)
  Prédit: 'lement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lement' → logprob: -1.0536155700683594
    2. 'ent' → logprob: -2.1786155700683594
    3. 'ment' → logprob: -2.3036155700683594
    4. 'er' → logprob: -2.3036155700683594
    5. 'ishment' → logprob: -2.8036155700683594
    6. 'ir' → logprob: -2.9286155700683594
    7. 'ement' → logprob: -2.9286155700683594
    8. 'issement' → logprob: -3.4286155700683594
    9. 'l' → logprob: -3.5536155700683594
    10. 'irement' → logprob: -4.303615570068359

Token 1160: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00022129806166049093
    2. '<|end|>' → logprob: -9.125221252441406
    3. '       ' → logprob: -10.250221252441406
    4. '  ' → logprob: -11.125221252441406
    5. '.' → logprob: -11.375221252441406
    6. '```' → logprob: -11.500221252441406
    7. 'matrix' → logprob: -11.625221252441406
    8. '    
' → logprob: -12.000221252441406
    9. '
' → logprob: -12.375221252441406
    10. ',' → logprob: -12.750221252441406

Token 1161: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018750421702861786
    2. 'matrix' → logprob: -4.018750190734863
    3. ' matrix' → logprob: -7.893750190734863
    4. '```' → logprob: -9.018750190734863
    5. 'if' → logprob: -9.518750190734863
    6. '	matrix' → logprob: -11.268750190734863
    7. ' if' → logprob: -11.643750190734863
    8. '       ' → logprob: -12.643750190734863
    9. 'else' → logprob: -12.768750190734863
    10. '  ' → logprob: -14.018750190734863

Token 1162: ' matrix' (ID: 12248)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matrix' (adapté à ' matrix') → logprob: -0.13239574432373047
    2. '   ' → logprob: -2.1323957443237305
    3. ' matrix' → logprob: -5.2573957443237305
    4. 'if' → logprob: -8.63239574432373
    5. '	matrix' → logprob: -10.50739574432373
    6. '```' → logprob: -11.00739574432373
    7. ' if' → logprob: -11.88239574432373
    8. ' ' → logprob: -12.38239574432373
    9. '
' → logprob: -13.13239574432373
    10. '       ' → logprob: -13.50739574432373

Token 1163: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -6.704273118884885e-07
    2. 'a' → logprob: -14.750000953674316
    3. '   ' → logprob: -16.125
    4. '[' → logprob: -18.375
    5. ' [' → logprob: -18.375
    6. '][' → logprob: -18.375
    7. '[b' → logprob: -18.5
    8. ')[' → logprob: -18.5
    9. '```' → logprob: -18.625
    10. '}[' → logprob: -18.75

Token 1164: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.001858080504462123
    2. '[a' → logprob: -6.376858234405518
    3. ']' → logprob: -10.12685775756836
    4. ' ][' → logprob: -10.12685775756836
    5. '[b' → logprob: -10.37685775756836
    6. 'a' → logprob: -10.87685775756836
    7. '   ' → logprob: -11.00185775756836
    8. '[' → logprob: -13.12685775756836
    9. ' ' → logprob: -13.25185775756836
    10. '```' → logprob: -13.50185775756836

Token 1165: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -5.512236498361744e-07
    2. ' b' → logprob: -14.750000953674316
    3. 'a' → logprob: -15.750000953674316
    4. '][' → logprob: -17.625
    5. '	b' → logprob: -18.375
    6. '[b' → logprob: -18.875
    7. '   ' → logprob: -19.0
    8. ')b' → logprob: -19.625
    9. ']' → logprob: -19.875
    10. ' ' → logprob: -20.625

Token 1166: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05771299824118614
    2. '][' → logprob: -3.557713031768799
    3. ']=' → logprob: -3.807713031768799
    4. '=' → logprob: -5.807713031768799
    5. ' ]' → logprob: -7.182713031768799
    6. '[' → logprob: -7.307713031768799
    7. ' =' → logprob: -7.307713031768799
    8. '   ' → logprob: -8.93271255493164
    9. ' ][' → logprob: -9.80771255493164
    10. '[m' → logprob: -10.43271255493164

Token 1167: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10027287900447845
    2. ' =' → logprob: -2.3502728939056396
    3. '[' → logprob: -10.350273132324219
    4. '   ' → logprob: -11.475273132324219
    5. '[min' → logprob: -11.725273132324219
    6. '[m' → logprob: -12.350273132324219
    7. '=min' → logprob: -12.600273132324219
    8. 'cost' → logprob: -12.600273132324219
    9. '=
' → logprob: -13.600273132324219
    10. ']=' → logprob: -14.725273132324219

Token 1168: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.0005608965293504298
    2. 'min' → logprob: -8.125560760498047
    3. ' cost' → logprob: -8.250560760498047
    4. '   ' → logprob: -13.500560760498047
    5. 'co' → logprob: -13.875560760498047
    6. ' min' → logprob: -14.750560760498047
    7. '(cost' → logprob: -15.375560760498047
    8. '    
' → logprob: -16.000560760498047
    9. '
' → logprob: -16.125560760498047
    10. 'c' → logprob: -16.125560760498047

Token 1169: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.771655115589965e-05
    2. 'matrix' → logprob: -11.625018119812012
    3. ' matrix' → logprob: -12.750018119812012
    4. '<|end|>' → logprob: -12.875018119812012
    5. '	matrix' → logprob: -13.625018119812012
    6. '    
' → logprob: -14.125018119812012
    7. '
' → logprob: -14.250018119812012
    8. '```' → logprob: -15.250018119812012
    9. '       ' → logprob: -15.625018119812012
    10. '  ' → logprob: -16.500017166137695

Token 1170: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -5.3596853831550106e-05
    2. 'matrix' → logprob: -9.875053405761719
    3. ' matrix' → logprob: -13.375053405761719
    4. '	matrix' → logprob: -14.750053405761719
    5. '
' → logprob: -17.12505340576172
    6. '    
' → logprob: -18.00005340576172
    7. '```' → logprob: -18.37505340576172
    8. '       ' → logprob: -18.75005340576172
    9. ',' → logprob: -18.75005340576172
    10. '.matrix' → logprob: -19.12505340576172

Token 1171: ' On' (ID: 2160)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -3.054500666621607e-06
    2. ' matrix' → logprob: -13.00000286102295
    3. '   ' → logprob: -14.12500286102295
    4. '	matrix' → logprob: -17.500003814697266
    5. 'Matrix' → logprob: -20.625003814697266
    6. '.matrix' → logprob: -20.875003814697266
    7. '_matrix' → logprob: -21.500003814697266
    8. 'if' → logprob: -21.750003814697266
    9. '(matrix' → logprob: -22.375003814697266
    10. '#' → logprob: -23.000003814697266

Token 1172: ' ass' (ID: 1680)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.012909021228551865
    2. ' matrix' → logprob: -4.387908935546875
    3. '	matrix' → logprob: -8.012908935546875
    4. '[m' → logprob: -10.262908935546875
    5. '   ' → logprob: -11.012908935546875
    6. '.matrix' → logprob: -12.387908935546875
    7. '<|end|>' → logprob: -12.887908935546875
    8. '(matrix' → logprob: -12.887908935546875
    9. '_matrix' → logprob: -13.012908935546875
    10. 'm' → logprob: -13.637908935546875

Token 1173: 'igne' (ID: 24120)
  Prédit: 'ign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ign' → logprob: -0.0502365417778492
    2. 'igne' → logprob: -3.550236463546753
    3. 'igns' → logprob: -4.925236701965332
    4. 'matrix' → logprob: -5.300236701965332
    5. 'ignment' → logprob: -6.300236701965332
    6. 'igned' → logprob: -6.800236701965332
    7. 'ig' → logprob: -7.050236701965332
    8. 'i' → logprob: -7.300236701965332
    9. 'igning' → logprob: -7.425236701965332
    10. 'ert' → logprob: -7.550236701965332

Token 1174: ' le' (ID: 505)
  Prédit: ' cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cost' → logprob: -0.281183660030365
    2. 'cost' → logprob: -1.4061837196350098
    3. '(cost' → logprob: -11.906183242797852
    4. ' matrix' → logprob: -12.281183242797852
    5. 'matrix' → logprob: -12.406183242797852
    6. '    ' → logprob: -12.906183242797852
    7. ' coste' → logprob: -13.156183242797852
    8. '   ' → logprob: -13.281183242797852
    9. ' kost' → logprob: -13.406183242797852
    10. '
' → logprob: -13.531183242797852

Token 1175: ' coût' (ID: 73109)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.05573693662881851
    2. ' cost' → logprob: -2.930737018585205
    3. 'matrix' → logprob: -7.180737018585205
    4. ' matrix' → logprob: -10.430736541748047
    5. '[' → logprob: -11.930736541748047
    6. 'a' → logprob: -12.305736541748047
    7. 'co' → logprob: -12.555736541748047
    8. '=' → logprob: -12.555736541748047
    9. '   ' → logprob: -12.680736541748047
    10. 'code' → logprob: -12.930736541748047

Token 1176: ' dans' (ID: 2671)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015654563903808594
    2. 'matrix' → logprob: -4.265654563903809
    3. ' matrix' → logprob: -6.640654563903809
    4. '	matrix' → logprob: -9.140654563903809
    5. '<|end|>' → logprob: -10.140654563903809
    6. '
' → logprob: -11.140654563903809
    7. '  ' → logprob: -12.265654563903809
    8. '(matrix' → logprob: -12.765654563903809
    9. ',' → logprob: -12.765654563903809
    10. '_matrix' → logprob: -12.890654563903809

Token 1177: ' la' (ID: 557)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.0006432149093598127
    2. ' matrix' → logprob: -7.375643253326416
    3. 'a' → logprob: -11.500642776489258
    4. '	matrix' → logprob: -12.625642776489258
    5. '[a' → logprob: -14.125642776489258
    6. '<|end|>' → logprob: -14.375642776489258
    7. ' ' → logprob: -14.750642776489258
    8. '[' → logprob: -15.250642776489258
    9. '
' → logprob: -15.875642776489258
    10. '' → logprob: -16.125642776489258

Token 1178: ' matr' (ID: 25095)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.0006809803890064359
    2. ' matrix' → logprob: -8.125680923461914
    3. 'a' → logprob: -8.250680923461914
    4. '[a' → logprob: -9.125680923461914
    5. 'mat' → logprob: -11.625680923461914
    6. 'b' → logprob: -13.500680923461914
    7. 'adj' → logprob: -13.875680923461914
    8. 'graph' → logprob: -14.500680923461914
    9. '```' → logprob: -14.500680923461914
    10. '	matrix' → logprob: -14.625680923461914

Token 1179: 'ice' (ID: 603)
  Prédit: 'atrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'atrix' → logprob: -0.039696116000413895
    2. 'atrice' → logprob: -4.039696216583252
    3. 'rix' → logprob: -4.789696216583252
    4. '[' → logprob: -5.164696216583252
    5. 'tr' → logprob: -5.539696216583252
    6. 'a' → logprob: -7.164696216583252
    7. 'matrix' → logprob: -7.414696216583252
    8. 'rice' → logprob: -7.789696216583252
    9. '[i' → logprob: -8.039695739746094
    10. 'ix' → logprob: -8.039695739746094

Token 1180: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25517216324806213
    2. 'matrix' → logprob: -1.5051721334457397
    3. ' matrix' → logprob: -5.755172252655029
    4. '	matrix' → logprob: -10.255171775817871
    5. '<|end|>' → logprob: -10.755171775817871
    6. '```' → logprob: -11.755171775817871
    7. '
' → logprob: -13.255171775817871
    8. '_matrix' → logprob: -13.380171775817871
    9. '  ' → logprob: -13.630171775817871
    10. '.matrix' → logprob: -14.130171775817871

Token 1181: ' l' (ID: 305)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.011451194994151592
    2. '[a' → logprob: -5.136451244354248
    3. ' a' → logprob: -5.261451244354248
    4. 'matrix' → logprob: -8.26145076751709
    5. 'b' → logprob: -10.13645076751709
    6. ' matrix' → logprob: -11.13645076751709
    7. '[b' → logprob: -13.01145076751709
    8. '	a' → logprob: -13.01145076751709
    9. '   ' → logprob: -13.38645076751709
    10. ' b' → logprob: -14.88645076751709

Token 1182: ''ar' (ID: 54307)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.385488361120224
    2. '[a' → logprob: -1.5104883909225464
    3. 'matrix' → logprob: -3.635488271713257
    4. ' two' → logprob: -4.135488510131836
    5. 'adj' → logprob: -4.635488510131836
    6. '[' → logprob: -4.760488510131836
    7. 'two' → logprob: -4.885488510131836
    8. 'ar' → logprob: -5.260488510131836
    9. ' deux' → logprob: -5.635488510131836
    10. 'e' → logprob: -6.010488510131836

Token 1183: 'ête' (ID: 16808)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.2496596574783325
    2. 'r' → logprob: -1.4996596574783325
    3. 'ête' → logprob: -1.6246596574783325
    4. 'e' → logprob: -2.499659538269043
    5. 'ea' → logprob: -2.624659538269043
    6. 'ete' → logprob: -2.749659538269043
    7. 'ète' → logprob: -3.874659538269043
    8. 'ray' → logprob: -4.374659538269043
    9. 'ec' → logprob: -4.499659538269043
    10. 'cs' → logprob: -5.249659538269043

Token 1184: ' allant' (ID: 122150)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.025403359904885292
    2. '   ' → logprob: -3.7754032611846924
    3. ' matrix' → logprob: -6.1504034996032715
    4. '	matrix' → logprob: -10.775403022766113
    5. '<|end|>' → logprob: -14.775403022766113
    6. '_matrix' → logprob: -14.900403022766113
    7. '```' → logprob: -15.025403022766113
    8. '.matrix' → logprob: -15.275403022766113
    9. '
' → logprob: -15.400403022766113
    10. '(matrix' → logprob: -16.02540397644043

Token 1185: ' de' (ID: 334)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.1325332671403885
    2. 'a' → logprob: -2.382533311843872
    3. ' a' → logprob: -4.257533073425293
    4. ' à' → logprob: -5.007533073425293
    5. 'from' → logprob: -5.757533073425293
    6. ' de' → logprob: -6.007533073425293
    7. '#a' → logprob: -6.507533073425293
    8. '<|end|>' → logprob: -7.257533073425293
    9. 'à' → logprob: -7.382533073425293
    10. '[' → logprob: -7.507533073425293

Token 1186: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00020354038861114532
    2. ' a' → logprob: -8.500203132629395
    3. '[a' → logprob: -16.62520408630371
    4. 'b' → logprob: -17.25020408630371
    5. '	a' → logprob: -17.25020408630371
    6. '#a' → logprob: -18.62520408630371
    7. 'а' → logprob: -20.87520408630371
    8. '   ' → logprob: -21.00020408630371
    9. ')a' → logprob: -21.12520408630371
    10. '_a' → logprob: -21.25020408630371

Token 1187: ' à' (ID: 1221)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.046475984156131744
    2. '[b' → logprob: -4.296475887298584
    3. '   ' → logprob: -5.046475887298584
    4. ' à' → logprob: -5.046475887298584
    5. '[' → logprob: -5.296475887298584
    6. ' a' → logprob: -5.546475887298584
    7. 'a' → logprob: -5.796475887298584
    8. ' to' → logprob: -6.046475887298584
    9. ' ' → logprob: -6.671475887298584
    10. ' [' → logprob: -6.921475887298584

Token 1188: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0015023599844425917
    2. ' b' → logprob: -6.501502513885498
    3. '	b' → logprob: -18.751502990722656
    4. '
' → logprob: -21.126502990722656
    5. ' ' → logprob: -21.626502990722656
    6. '_b' → logprob: -22.001502990722656
    7. 'a' → logprob: -22.001502990722656
    8. 'c' → logprob: -22.501502990722656
    9. '```' → logprob: -22.626502990722656
    10. '[b' → logprob: -23.001502990722656

Token 1189: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10035785287618637
    2. 'matrix' → logprob: -2.3503577709198
    3. ' matrix' → logprob: -8.850358009338379
    4. '	matrix' → logprob: -12.100358009338379
    5. '```' → logprob: -13.100358009338379
    6. '_matrix' → logprob: -16.975357055664062
    7. '       ' → logprob: -17.100357055664062
    8. '.matrix' → logprob: -17.225357055664062
    9. '  ' → logprob: -17.475357055664062
    10. 'Matrix' → logprob: -17.475357055664062

Token 1190: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20180906355381012
    2. 'matrix' → logprob: -1.701809048652649
    3. ' matrix' → logprob: -8.32680892944336
    4. '```' → logprob: -9.07680892944336
    5. '	matrix' → logprob: -10.20180892944336
    6. '
' → logprob: -14.45180892944336
    7. '  ' → logprob: -14.57680892944336
    8. '<|end|>' → logprob: -14.82680892944336
    9. ' ' → logprob: -15.20180892944336
    10. '_matrix' → logprob: -15.32680892944336

Token 1191: ' matrix' (ID: 12248)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matrix' (adapté à ' matrix') → logprob: -0.018181199207901955
    2. '   ' → logprob: -4.018181324005127
    3. ' matrix' → logprob: -10.393180847167969
    4. '	matrix' → logprob: -14.393180847167969
    5. '```' → logprob: -18.14318084716797
    6. '_matrix' → logprob: -18.64318084716797
    7. '  ' → logprob: -19.26818084716797
    8. '.matrix' → logprob: -19.26818084716797
    9. 'Matrix' → logprob: -19.64318084716797
    10. ' ' → logprob: -20.39318084716797

Token 1192: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -2.816093228830141e-06
    2. '[a' → logprob: -13.25000286102295
    3. 'b' → logprob: -14.62500286102295
    4. '[' → logprob: -15.37500286102295
    5. '   ' → logprob: -15.37500286102295
    6. '[c' → logprob: -18.000001907348633
    7. '[m' → logprob: -18.250001907348633
    8. ' [' → logprob: -18.750001907348633
    9. '[B' → logprob: -19.125001907348633
    10. '```' → logprob: -19.125001907348633

Token 1193: '][' (ID: 2696)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.699049174785614
    2. '[b' → logprob: -0.699049174785614
    3. ' [' → logprob: -5.69904899597168
    4. '   ' → logprob: -6.19904899597168
    5. '[' → logprob: -7.82404899597168
    6. '```' → logprob: -9.69904899597168
    7. '][' → logprob: -11.07404899597168
    8. '[c' → logprob: -11.82404899597168
    9. ' ' → logprob: -12.07404899597168
    10. '[
' → logprob: -12.82404899597168

Token 1194: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -4.842555426876061e-06
    2. ' a' → logprob: -12.250004768371582
    3. '   ' → logprob: -18.7500057220459
    4. 'b' → logprob: -19.8750057220459
    5. '	a' → logprob: -20.0000057220459
    6. '[a' → logprob: -20.3750057220459
    7. ' ' → logprob: -20.5000057220459
    8. '```' → logprob: -22.2500057220459
    9. 'а' → logprob: -22.8750057220459
    10. '  ' → logprob: -22.8750057220459

Token 1195: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519313097000122
    2. ' =' → logprob: -1.5019313097000122
    3. ']' → logprob: -13.751931190490723
    4. ']=' → logprob: -14.876931190490723
    5. ')' → logprob: -15.126931190490723
    6. '   ' → logprob: -15.751931190490723
    7. ' ' → logprob: -15.876931190490723
    8. '[' → logprob: -16.12693214416504
    9. '＝' → logprob: -17.00193214416504
    10. ')=' → logprob: -17.87693214416504

Token 1196: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759396553039551
    2. ' =' → logprob: -0.8259396553039551
    3. '[' → logprob: -16.825939178466797
    4. '＝' → logprob: -16.825939178466797
    5. ' ' → logprob: -17.200939178466797
    6. '   ' → logprob: -17.700939178466797
    7. ')' → logprob: -19.075939178466797
    8. '=cut' → logprob: -19.700939178466797
    9. '=end' → logprob: -19.825939178466797
    10. '=int' → logprob: -19.950939178466797

Token 1197: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.02324547804892063
    2. ' cost' → logprob: -3.7732455730438232
    3. '(cost' → logprob: -20.648244857788086
    4. 'Cost' → logprob: -20.898244857788086
    5. '_cost' → logprob: -21.523244857788086
    6. '   ' → logprob: -22.148244857788086
    7. ' kost' → logprob: -22.648244857788086
    8. '.cost' → logprob: -23.148244857788086
    9. 'co' → logprob: -23.398244857788086
    10. 'c' → logprob: -23.398244857788086

Token 1198: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1199: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1200: ' Le' (ID: 2018)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.07328981906175613
    2. ' matrix' → logprob: -2.6982898712158203
    3. '   ' → logprob: -5.82328987121582
    4. 'cost' → logprob: -8.07328987121582
    5. ' cost' → logprob: -9.69828987121582
    6. '	matrix' → logprob: -11.32328987121582
    7. '```' → logprob: -13.44828987121582
    8. ' ' → logprob: -14.57328987121582
    9. 'continue' → logprob: -14.69828987121582
    10. ' matriz' → logprob: -14.94828987121582

Token 1201: ' grap' (ID: 60955)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.3874199092388153
    2. ' matrix' → logprob: -1.1374199390411377
    3. ' ' → logprob: -8.762419700622559
    4. '	matrix' → logprob: -9.012419700622559
    5. ' code' → logprob: -10.137419700622559
    6. 'mat' → logprob: -10.762419700622559
    7. ' ' → logprob: -10.762419700622559
    8. 'cost' → logprob: -10.887419700622559
    9. ' matriz' → logprob: -11.012419700622559
    10. '_matrix' → logprob: -11.262419700622559

Token 1202: 'he' (ID: 273)
  Prédit: 'aphe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aphe' → logprob: -0.021272238343954086
    2. 'phe' → logprob: -4.0212721824646
    3. 'he' → logprob: -7.0212721824646
    4. 'aph' → logprob: -7.5212721824646
    5. 'ph' → logprob: -7.5212721824646
    6. 'a' → logprob: -7.6462721824646
    7. '#' → logprob: -7.8962721824646
    8. 'ap' → logprob: -9.146272659301758
    9. ' ' → logprob: -10.646272659301758
    10. '   ' → logprob: -10.771272659301758

Token 1203: ' est' (ID: 893)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.015029559843242168
    2. '[b' → logprob: -4.515029430389404
    3. ' is' → logprob: -6.515029430389404
    4. '[' → logprob: -6.515029430389404
    5. ' [' → logprob: -8.265029907226562
    6. '   ' → logprob: -8.390029907226562
    7. 'a' → logprob: -8.765029907226562
    8. '[u' → logprob: -9.015029907226562
    9. '=' → logprob: -10.390029907226562
    10. '[v' → logprob: -10.765029907226562

Token 1204: ' non' (ID: 2893)
  Prédit: ' bid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bid' → logprob: -0.6685932874679565
    2. ' und' → logprob: -1.1685932874679565
    3. 'und' → logprob: -2.168593406677246
    4. ' sym' → logprob: -3.668593406677246
    5. '   ' → logprob: -4.043593406677246
    6. ' ' → logprob: -5.418593406677246
    7. ' non' → logprob: -5.918593406677246
    8. ' symmetric' → logprob: -6.168593406677246
    9. 'bid' → logprob: -6.168593406677246
    10. ' matrix' → logprob: -6.668593406677246

Token 1205: ' orient' (ID: 13198)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.4442718029022217
    2. 'orient' → logprob: -1.0692718029022217
    3. ' dirig' → logprob: -4.694272041320801
    4. ' orient' → logprob: -5.569272041320801
    5. '   ' → logprob: -6.944272041320801
    6. 'direct' → logprob: -7.569272041320801
    7. 'dir' → logprob: -7.819272041320801
    8. '_or' → logprob: -8.8192720413208
    9. 'b' → logprob: -9.4442720413208
    10. ' oriented' → logprob: -9.5692720413208

Token 1206: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -3.368984107510187e-05
    2. 'ed' → logprob: -11.000033378601074
    3. 'e' → logprob: -11.875033378601074
    4. 'ée' → logprob: -13.000033378601074
    5. 'ré' → logprob: -13.000033378601074
    6. '```' → logprob: -13.000033378601074
    7. '#' → logprob: -14.000033378601074
    8. '   ' → logprob: -14.875033378601074
    9. 'è' → logprob: -15.125033378601074
    10. 'ent' → logprob: -15.250033378601074

Token 1207: ' :' (ID: 712)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.14358729124069214
    2. ')' → logprob: -3.518587350845337
    3. 'dist' → logprob: -3.643587350845337
    4. '<|end|>' → logprob: -3.768587350845337
    5. ' for' → logprob: -4.268587112426758
    6. '   ' → logprob: -4.643587112426758
    7. '
' → logprob: -4.893587112426758
    8. '#' → logprob: -4.893587112426758
    9. '```' → logprob: -4.893587112426758
    10. 'distance' → logprob: -6.268587112426758

Token 1208: ' le' (ID: 505)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.062030989676713943
    2. ' cost' → logprob: -2.9370310306549072
    3. 'matrix' → logprob: -5.062030792236328
    4. ' matrix' → logprob: -7.187030792236328
    5. '   ' → logprob: -10.437030792236328
    6. 'code' → logprob: -13.312030792236328
    7. '_cost' → logprob: -14.437030792236328
    8. '(cost' → logprob: -14.437030792236328
    9. 'Cost' → logprob: -14.562030792236328
    10. 'co' → logprob: -15.437030792236328

Token 1209: ' coût' (ID: 73109)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.03380729630589485
    2. ' matrix' → logprob: -3.4088072776794434
    3. 'cost' → logprob: -10.033807754516602
    4. 'mat' → logprob: -10.408807754516602
    5. '	matrix' → logprob: -11.158807754516602
    6. '```' → logprob: -11.408807754516602
    7. 'graph' → logprob: -11.533807754516602
    8. 'adj' → logprob: -11.533807754516602
    9. '   ' → logprob: -12.408807754516602
    10. 'a' → logprob: -12.408807754516602

Token 1210: ' est' (ID: 893)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.5701983571052551
    2. '[b' → logprob: -0.9451983571052551
    3. '   ' → logprob: -4.0701985359191895
    4. ' =' → logprob: -4.4451985359191895
    5. '=' → logprob: -5.0701985359191895
    6. 'a' → logprob: -6.4451985359191895
    7. ' [' → logprob: -6.5701985359191895
    8. 'matrix' → logprob: -6.9451985359191895
    9. '[' → logprob: -6.9451985359191895
    10. ' a' → logprob: -7.0701985359191895

Token 1211: ' le' (ID: 505)
  Prédit: ' cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cost' → logprob: -0.1602666825056076
    2. 'cost' → logprob: -1.910266637802124
    3. ' matrix' → logprob: -10.535266876220703
    4. 'matrix' → logprob: -11.910266876220703
    5. '   ' → logprob: -12.285266876220703
    6. ' coste' → logprob: -13.410266876220703
    7. '(cost' → logprob: -13.910266876220703
    8. ' kost' → logprob: -14.535266876220703
    9. '    ' → logprob: -14.535266876220703
    10. '_cost' → logprob: -15.160266876220703

Token 1212: ' même' (ID: 9679)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.006275486201047897
    2. 'same' → logprob: -5.131275653839111
    3. ' même' → logprob: -8.006275177001953
    4. ' m' → logprob: -12.256275177001953
    5. 'even' → logprob: -12.881275177001953
    6. 'matrix' → logprob: -13.631275177001953
    7. ' same' → logprob: -13.881275177001953
    8. 'Même' → logprob: -13.881275177001953
    9. 'mem' → logprob: -14.381275177001953
    10. '<m' → logprob: -14.381275177001953

Token 1213: ' dans' (ID: 2671)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.23119662702083588
    2. '<|end|>' → logprob: -2.356196641921997
    3. ' for' → logprob: -2.856196641921997
    4. '   ' → logprob: -3.731196641921997
    5. '
' → logprob: -4.731196403503418
    6. '```' → logprob: -5.356196403503418
    7. '<|end|>' → logprob: -5.606196403503418
    8. '#' → logprob: -5.731196403503418
    9. ')' → logprob: -5.731196403503418
    10. 'while' → logprob: -6.481196403503418

Token 1214: ' l' (ID: 305)
  Prédit: ' matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' matrix' → logprob: -0.9386357069015503
    2. 'matrix' → logprob: -1.0636357069015503
    3. ' both' → logprob: -2.06363582611084
    4. ' les' → logprob: -2.43863582611084
    5. 'both' → logprob: -3.43863582611084
    6. 'les' → logprob: -5.68863582611084
    7. 'l' → logprob: -5.81363582611084
    8. '   ' → logprob: -5.93863582611084
    9. ' la' → logprob: -6.18863582611084
    10. 'la' → logprob: -6.68863582611084

Token 1215: ''autre' (ID: 52145)
  Prédit: 'sens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sens' → logprob: -0.3352949321269989
    2. ' sens' → logprob: -1.9602949619293213
    3. 'de' → logprob: -2.7102949619293213
    4. 'a' → logprob: -3.2102949619293213
    5. 'both' → logprob: -4.585294723510742
    6. '[a' → logprob: -5.210294723510742
    7. ' deux' → logprob: -5.210294723510742
    8. 's' → logprob: -5.460294723510742
    9. ' both' → logprob: -5.835294723510742
    10. ' two' → logprob: -6.335294723510742

Token 1216: ' sens' (ID: 5050)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.5963294506072998
    2. ' sens' → logprob: -1.2213294506072998
    3. 'sens' → logprob: -2.2213294506073
    4. ' direction' → logprob: -3.0963294506073
    5. 'dire' → logprob: -7.471329689025879
    6. '_direction' → logprob: -10.596329689025879
    7. '  
' → logprob: -11.221329689025879
    8. ' sentido' → logprob: -11.596329689025879
    9. ' 방향' → logprob: -12.346329689025879
    10. '    
' → logprob: -12.346329689025879

Token 1217: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.007816474884748459
    2. ' for' → logprob: -5.632816314697266
    3. 'dist' → logprob: -6.382816314697266
    4. '#' → logprob: -6.757816314697266
    5. '   ' → logprob: -7.507816314697266
    6. 'distance' → logprob: -8.632816314697266
    7. '```' → logprob: -8.632816314697266
    8. 'while' → logprob: -8.882816314697266
    9. ')' → logprob: -9.132816314697266
    10. '<|end|>' → logprob: -9.757816314697266

Token 1218: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.006668128073215485
    2. 'dist' → logprob: -5.6316680908203125
    3. '#' → logprob: -5.8816680908203125
    4. 'def' → logprob: -8.381668090820312
    5. 'distance' → logprob: -11.381668090820312
    6. ' for' → logprob: -11.381668090820312
    7. 'new' → logprob: -12.756668090820312
    8. 'from' → logprob: -12.881668090820312
    9. 'res' → logprob: -13.381668090820312
    10. 'import' → logprob: -13.381668090820312

Token 1219: ' Pré' (ID: 86400)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.038849301636219025
    2. '#' → logprob: -3.538849353790283
    3. 'dist' → logprob: -5.038849353790283
    4. 'def' → logprob: -6.288849353790283
    5. 'd' → logprob: -9.288848876953125
    6. 'from' → logprob: -9.413848876953125
    7. 'new' → logprob: -9.538848876953125
    8. 'cost' → logprob: -9.538848876953125
    9. 'used' → logprob: -9.788848876953125
    10. 'dp' → logprob: -10.038848876953125

Token 1220: 'paration' (ID: 27466)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.3521701693534851
    2. 'd' → logprob: -1.9771702289581299
    3. 'for' → logprob: -2.22717022895813
    4. '#' → logprob: -3.72717022895813
    5. 'processed' → logprob: -4.602169990539551
    6. 'distance' → logprob: -5.352169990539551
    7. 'computed' → logprob: -5.602169990539551
    8. 'c' → logprob: -5.727169990539551
    9. 'def' → logprob: -7.727169990539551
    10. 'decess' → logprob: -7.727169990539551

Token 1221: ' d' (ID: 272)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.05050065368413925
    2. 'for' → logprob: -3.9255006313323975
    3. 'dp' → logprob: -3.9255006313323975
    4. 'cost' → logprob: -5.675500869750977
    5. 'd' → logprob: -6.175500869750977
    6. '#' → logprob: -6.175500869750977
    7. 'distance' → logprob: -7.175500869750977
    8. 'new' → logprob: -7.925500869750977
    9. 'short' → logprob: -8.800500869750977
    10. 'matrix' → logprob: -9.425500869750977

Token 1222: ''une' (ID: 13337)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.15641377866268158
    2. 'dist' → logprob: -2.0314137935638428
    3. ' for' → logprob: -5.406413555145264
    4. 'def' → logprob: -6.406413555145264
    5. 'range' → logprob: -6.406413555145264
    6. 'distance' → logprob: -6.656413555145264
    7. '#' → logprob: -6.656413555145264
    8. ' dist' → logprob: -7.531413555145264
    9. 'all' → logprob: -8.281414031982422
    10. '```' → logprob: -8.281414031982422

Token 1223: ' matr' (ID: 25095)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.5729820132255554
    2. 'for' → logprob: -1.6979820728302002
    3. 'def' → logprob: -2.3229820728302
    4. 'distance' → logprob: -2.8229820728302
    5. 'fuel' → logprob: -3.8229820728302
    6. 'new' → logprob: -4.072981834411621
    7. '#' → logprob: -4.197981834411621
    8. 'queue' → logprob: -4.572981834411621
    9. 'short' → logprob: -5.197981834411621
    10. 'matrix' → logprob: -5.197981834411621

Token 1224: 'ice' (ID: 603)
  Prédit: 'atrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'atrix' → logprob: -0.13077369332313538
    2. 'atrice' → logprob: -2.1307737827301025
    3. 'for' → logprob: -6.880773544311523
    4. 'matrix' → logprob: -7.380773544311523
    5. '#' → logprob: -7.505773544311523
    6. 'tr' → logprob: -7.630773544311523
    7. 'at' → logprob: -7.880773544311523
    8. 'atriz' → logprob: -9.005773544311523
    9. 'rice' → logprob: -9.380773544311523
    10. 'ix' → logprob: -9.505773544311523

Token 1225: ' de' (ID: 334)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.21829885244369507
    2. 'distance' → logprob: -2.46829891204834
    3. 'dp' → logprob: -2.59329891204834
    4. 'for' → logprob: -4.46829891204834
    5. 'd' → logprob: -4.84329891204834
    6. 'cost' → logprob: -5.21829891204834
    7. 'min' → logprob: -5.46829891204834
    8. 'short' → logprob: -5.96829891204834
    9. ' =' → logprob: -6.96829891204834
    10. '=' → logprob: -7.09329891204834

Token 1226: ' réponses' (ID: 88884)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.6610561013221741
    2. 'distance' → logprob: -0.9110561013221741
    3. 'trans' → logprob: -4.286056041717529
    4. 'd' → logprob: -4.411056041717529
    5. ' distances' → logprob: -4.661056041717529
    6. 'reach' → logprob: -4.786056041717529
    7. ' dist' → logprob: -5.161056041717529
    8. 'reachable' → logprob: -5.411056041717529
    9. ' distance' → logprob: -5.911056041717529
    10. 'n' → logprob: -6.036056041717529

Token 1227: ' :' (ID: 712)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.9428459405899048
    2. 'answer' → logprob: -1.3178459405899048
    3. 'dist' → logprob: -1.5678459405899048
    4. 'ans' → logprob: -2.5678458213806152
    5. 'answers' → logprob: -3.8178458213806152
    6. 'res' → logprob: -3.9428458213806152
    7. 'distance' → logprob: -5.567845821380615
    8. 'result' → logprob: -5.942845821380615
    9. 'd' → logprob: -6.192845821380615
    10. 'cost' → logprob: -6.317845821380615

Token 1228: ' ans' (ID: 3345)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'answer' → logprob: -0.9515635967254639
    2. 'dist' → logprob: -1.2015635967254639
    3. 'ans' → logprob: -2.201563596725464
    4. 'dp' → logprob: -2.701563596725464
    5. 'res' → logprob: -2.951563596725464
    6. 'answers' → logprob: -4.201563835144043
    7. 'fuel' → logprob: -4.451563835144043
    8. 'short' → logprob: -4.701563835144043
    9. 'd' → logprob: -4.701563835144043
    10. 'matrix' → logprob: -5.201563835144043

Token 1229: '[i' (ID: 1768)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5234203338623047
    2. '=' → logprob: -0.8984203338623047
    3. '=[[' → logprob: -8.273420333862305
    4. 'ans' → logprob: -11.023420333862305
    5. '=
' → logprob: -11.273420333862305
    6. '=[' → logprob: -12.023420333862305
    7. ' =
' → logprob: -13.648420333862305
    8. '=[]
' → logprob: -13.648420333862305
    9. '
' → logprob: -14.148420333862305
    10. '＝' → logprob: -14.523420333862305

Token 1230: '][' (ID: 2696)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5964034199714661
    2. ' =' → logprob: -0.8464034199714661
    3. ']' → logprob: -4.8464035987854
    4. '=[[' → logprob: -5.3464035987854
    5. '][' → logprob: -5.8464035987854
    6. ']=' → logprob: -6.2214035987854
    7. 'n' → logprob: -6.5964035987854
    8. 'matrix' → logprob: -7.8464035987854
    9. '=[' → logprob: -8.596403121948242
    10. '=
' → logprob: -8.971403121948242

Token 1231: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.06214861571788788
    2. 'n' → logprob: -2.8121485710144043
    3. 'i' → logprob: -9.812149047851562
    4. ' j' → logprob: -10.187149047851562
    5. '=' → logprob: -10.437149047851562
    6. ']' → logprob: -10.812149047851562
    7. '```' → logprob: -11.937149047851562
    8. '   ' → logprob: -12.312149047851562
    9. '_j' → logprob: -12.437149047851562
    10. ' n' → logprob: -12.562149047851562

Token 1232: ']' (ID: 60)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4340670704841614
    2. '=' → logprob: -1.0590670108795166
    3. ']' → logprob: -5.309067249298096
    4. ']=' → logprob: -8.309066772460938
    5. '=[[' → logprob: -8.934066772460938
    6. '=[' → logprob: -11.434066772460938
    7. '=
' → logprob: -12.809066772460938
    8. 'matrix' → logprob: -13.059066772460938
    9. ' =
' → logprob: -13.309066772460938
    10. '][' → logprob: -13.434066772460938

Token 1233: ' cont' (ID: 836)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6932725310325623
    2. ' =' → logprob: -0.6932725310325623
    3. '=[[' → logprob: -9.068272590637207
    4. '=[' → logprob: -11.818272590637207
    5. '=
' → logprob: -13.318272590637207
    6. '=[]
' → logprob: -15.943272590637207
    7. ' =
' → logprob: -16.19327163696289
    8. '=n' → logprob: -16.44327163696289
    9. '=[]' → logprob: -16.44327163696289
    10. '=list' → logprob: -16.81827163696289

Token 1234: 'i' (ID: 72)
  Prédit: '=[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=[[' → logprob: -0.3729380965232849
    2. '=' → logprob: -1.3729381561279297
    3. '[[' → logprob: -3.8729381561279297
    4. '=[' → logprob: -4.49793815612793
    5. 'ains' → logprob: -4.87293815612793
    6. 'matrix' → logprob: -5.12293815612793
    7. 'in' → logprob: -5.24793815612793
    8. ' =' → logprob: -5.49793815612793
    9. 'inue' → logprob: -6.74793815612793
    10. '[][]' → logprob: -7.74793815612793

Token 1235: 'endra' (ID: 32364)
  Prédit: 'ains'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ains' → logprob: -0.5066502094268799
    2. '=[[' → logprob: -1.6316502094268799
    3. '[[' → logprob: -2.25665020942688
    4. '=' → logprob: -3.38165020942688
    5. '=[' → logprob: -3.75665020942688
    6. 'ient' → logprob: -4.631649971008301
    7. '[' → logprob: -4.881649971008301
    8. ' =' → logprob: -5.131649971008301
    9. 'iens' → logprob: -5.631649971008301
    10. 'ues' → logprob: -6.131649971008301

Token 1236: ' le' (ID: 505)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.16536164283752441
    2. '[[' → logprob: -1.9153616428375244
    3. 'INF' → logprob: -5.540361404418945
    4. '[n' → logprob: -7.290361404418945
    5. ' [' → logprob: -8.665361404418945
    6. '[i' → logprob: -8.665361404418945
    7. ' [[' → logprob: -10.290361404418945
    8. '[
' → logprob: -10.540361404418945
    9. '0' → logprob: -10.665361404418945
    10. '[I' → logprob: -11.040361404418945

Token 1237: ' nombre' (ID: 9733)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.23334427177906036
    2. 'INF' → logprob: -1.983344316482544
    3. 'dist' → logprob: -3.733344316482544
    4. 'd' → logprob: -4.233344078063965
    5. '0' → logprob: -4.483344078063965
    6. 'distance' → logprob: -4.608344078063965
    7. '[' → logprob: -5.358344078063965
    8. '[
' → logprob: -5.858344078063965
    9. '[]' → logprob: -7.608344078063965
    10. '[]
' → logprob: -7.733344078063965

Token 1238: ' minimal' (ID: 19957)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8597543835639954
    2. ' =' → logprob: -1.1097543239593506
    3. 'INF' → logprob: -3.2347543239593506
    4. 'd' → logprob: -3.6097543239593506
    5. 'ans' → logprob: -3.8597543239593506
    6. 'dist' → logprob: -3.9847543239593506
    7. 'import' → logprob: -3.9847543239593506
    8. '[i' → logprob: -4.23475456237793
    9. 'of' → logprob: -4.60975456237793
    10. '
' → logprob: -4.60975456237793

Token 1239: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.2826430797576904
    2. '   ' → logprob: -1.9076430797576904
    3. 'de' → logprob: -2.0326430797576904
    4. '=' → logprob: -2.2826430797576904
    5. ' de' → logprob: -2.7826430797576904
    6. '[' → logprob: -3.4076430797576904
    7. ' des' → logprob: -3.7826430797576904
    8. '[i' → logprob: -3.7826430797576904
    9. ' of' → logprob: -4.0326433181762695
    10. 'of' → logprob: -4.2826433181762695

Token 1240: ' rav' (ID: 26005)
  Prédit: 'rav'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rav' → logprob: -0.0974889025092125
    2. 'r' → logprob: -3.2224888801574707
    3. 'tab' → logprob: -5.222488880157471
    4. '[' → logprob: -5.222488880157471
    5. 'pal' → logprob: -5.472488880157471
    6. 'rans' → logprob: -5.597488880157471
    7. ' rav' → logprob: -5.847488880157471
    8. 's' → logprob: -5.972488880157471
    9. ' ' → logprob: -6.097488880157471
    10. 'ral' → logprob: -6.222488880157471

Token 1241: 'it' (ID: 278)
  Prédit: 'avit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'avit' → logprob: -0.5723011493682861
    2. 'av' → logprob: -1.0723011493682861
    3. 'it' → logprob: -3.447301149368286
    4. 'ait' → logprob: -3.947301149368286
    5. 'aits' → logprob: -4.697300910949707
    6. 'itations' → logprob: -5.322300910949707
    7. 'at' → logprob: -5.947300910949707
    8. 'ail' → logprob: -6.197300910949707
    9. 'ivals' → logprob: -6.322300910949707
    10. 'avi' → logprob: -6.447300910949707

Token 1242: 'ail' (ID: 663)
  Prédit: 'ail'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ail' → logprob: -0.005650151986628771
    2. 'ails' → logprob: -5.630650043487549
    3. 'a' → logprob: -7.630650043487549
    4. 'eil' → logprob: -7.755650043487549
    5. '```' → logprob: -8.380650520324707
    6. 'uel' → logprob: -8.880650520324707
    7. 'ements' → logprob: -8.880650520324707
    8. 'ell' → logprob: -9.255650520324707
    9. 'all' → logprob: -9.880650520324707
    10. 'uels' → logprob: -10.130650520324707

Token 1243: 'lements' (ID: 11031)
  Prédit: 'lements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lements' → logprob: -0.06140439212322235
    2. 'l' → logprob: -3.1864044666290283
    3. 'ements' → logprob: -4.811404228210449
    4. 'lement' → logprob: -4.811404228210449
    5. 'ments' → logprob: -7.436404228210449
    6. 'lem' → logprob: -8.31140422821045
    7. 's' → logprob: -8.56140422821045
    8. 'nements' → logprob: -8.56140422821045
    9. 'matrix' → logprob: -8.81140422821045
    10. 'm' → logprob: -9.68640422821045

Token 1244: ' de' (ID: 334)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.39564499258995056
    2. ' =' → logprob: -1.145645022392273
    3. 'ans' → logprob: -4.7706451416015625
    4. '=[[' → logprob: -8.770645141601562
    5. 'for' → logprob: -10.520645141601562
    6. '[[' → logprob: -10.770645141601562
    7. '(ans' → logprob: -11.145645141601562
    8. 'matrix' → logprob: -11.270645141601562
    9. ' ans' → logprob: -11.645645141601562
    10. '=[' → logprob: -12.395645141601562

Token 1245: ' i' (ID: 575)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.3825286626815796
    2. '[i' → logprob: -2.007528781890869
    3. '[' → logprob: -2.257528781890869
    4. '[n' → logprob: -3.382528781890869
    5. 'range' → logprob: -3.507528781890869
    6. 'INF' → logprob: -5.632528781890869
    7. 'n' → logprob: -5.882528781890869
    8. 'ans' → logprob: -6.382528781890869
    9. '0' → logprob: -7.132528781890869
    10. 'dist' → logprob: -7.382528781890869

Token 1246: ' à' (ID: 1221)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '][' → logprob: -0.37074658274650574
    2. 'for' → logprob: -2.120746612548828
    3. '[i' → logprob: -2.995746612548828
    4. '[n' → logprob: -3.620746612548828
    5. 'n' → logprob: -3.870746612548828
    6. 'à' → logprob: -3.995746612548828
    7. '[j' → logprob: -4.245746612548828
    8. 'pour' → logprob: -4.870746612548828
    9. 'to' → logprob: -5.120746612548828
    10. ']' → logprob: -5.370746612548828

Token 1247: ' j' (ID: 441)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.950247585773468
    2. 'j' → logprob: -1.0752475261688232
    3. 'n' → logprob: -1.4502475261688232
    4. ' range' → logprob: -3.9502475261688232
    5. '[j' → logprob: -4.450247764587402
    6. '[n' → logprob: -5.700247764587402
    7. ' j' → logprob: -6.700247764587402
    8. '[' → logprob: -6.825247764587402
    9. ' n' → logprob: -7.700247764587402
    10. '[
' → logprob: -8.575247764587402

Token 1248: '
' (ID: 198)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.000678361626341939
    2. '=' → logprob: -7.625678539276123
    3. ' =' → logprob: -8.750678062438965
    4. ' ans' → logprob: -11.000678062438965
    5. '
' → logprob: -12.125678062438965
    6. '(ans' → logprob: -12.875678062438965
    7. '	ans' → logprob: -13.375678062438965
    8. '=[[' → logprob: -13.375678062438965
    9. '=
' → logprob: -13.875678062438965
    10. '_ans' → logprob: -13.875678062438965

Token 1249: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0003721622342709452
    2. 'dist' → logprob: -8.375371932983398
    3. '[[' → logprob: -9.250371932983398
    4. 'matrix' → logprob: -10.750371932983398
    5. ' =' → logprob: -12.000371932983398
    6. '=' → logprob: -12.375371932983398
    7. ' ans' → logprob: -12.500371932983398
    8. '=[[' → logprob: -13.125371932983398
    9. '```' → logprob: -13.500371932983398
    10. 'answer' → logprob: -13.625371932983398

Token 1250: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20142756402492523
    2. ' =' → logprob: -1.7014275789260864
    3. '=[[' → logprob: -11.201427459716797
    4. '=
' → logprob: -14.826427459716797
    5. '=[' → logprob: -15.451427459716797
    6. '＝' → logprob: -16.951427459716797
    7. '=

' → logprob: -17.326427459716797
    8. '=[]' → logprob: -18.326427459716797
    9. ' ' → logprob: -18.576427459716797
    10. ' =
' → logprob: -19.076427459716797

Token 1251: ' [[' (ID: 9237)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.00044318195432424545
    2. '[d' → logprob: -8.000443458557129
    3. '[' → logprob: -9.250443458557129
    4. ' [[' → logprob: -12.250443458557129
    5. '[n' → logprob: -12.625443458557129
    6. '[]' → logprob: -13.250443458557129
    7. '[]
' → logprob: -13.750443458557129
    8. '[m' → logprob: -14.750443458557129
    9. '[][]' → logprob: -16.625442504882812
    10. '[s' → logprob: -17.000442504882812

Token 1252: '0' (ID: 15)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.003932948689907789
    2. '0' → logprob: -5.753932952880859
    3. '10' → logprob: -7.378932952880859
    4. '-' → logprob: -9.50393295288086
    5. 'float' → logprob: -10.62893295288086
    6. '-INF' → logprob: -11.25393295288086
    7. 'inf' → logprob: -11.62893295288086
    8. 'None' → logprob: -12.87893295288086
    9. ' INF' → logprob: -13.12893295288086
    10. '-inf' → logprob: -13.50393295288086

Token 1253: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4564221501350403
    2. ']*' → logprob: -1.2064220905303955
    3. 'for' → logprob: -3.2064220905303955
    4. 'if' → logprob: -4.206422328948975
    5. ' for' → logprob: -4.706422328948975
    6. ' if' → logprob: -6.081422328948975
    7. '   ' → logprob: -8.831421852111816
    8. 'INF' → logprob: -8.956421852111816
    9. '*' → logprob: -9.956421852111816
    10. ']*(' → logprob: -10.456421852111816

Token 1254: ' *' (ID: 425)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4757990837097168
    2. 'for' → logprob: -0.9757990837097168
    3. 'if' → logprob: -7.100799083709717
    4. ' if' → logprob: -7.475799083709717
    5. ']' → logprob: -8.850799560546875
    6. '	for' → logprob: -9.475799560546875
    7. ']*' → logprob: -9.725799560546875
    8. '   ' → logprob: -10.475799560546875
    9. 'INF' → logprob: -12.225799560546875
    10. ' ' → logprob: -12.475799560546875

Token 1255: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -2.1008713702030946e-06
    2. ' n' → logprob: -13.125001907348633
    3. '	n' → logprob: -19.875001907348633
    4. 'import' → logprob: -20.625001907348633
    5. '   ' → logprob: -20.750001907348633
    6. 'len' → logprob: -21.000001907348633
    7. '_n' → logprob: -21.625001907348633
    8. 'N' → logprob: -21.875001907348633
    9. '(n' → logprob: -22.250001907348633
    10. ' ' → logprob: -22.625001907348633

Token 1256: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.47407999634742737
    2. ' for' → logprob: -0.974079966545105
    3. '   ' → logprob: -13.099080085754395
    4. '	for' → logprob: -14.349080085754395
    5. ']' → logprob: -16.099079132080078
    6. ' ' → logprob: -16.474079132080078
    7. 'n' → logprob: -17.099079132080078
    8. '       ' → logprob: -17.974079132080078
    9. '               ' → logprob: -18.224079132080078
    10. '    ' → logprob: -18.224079132080078

Token 1257: ' i' (ID: 575)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.17252367734909058
    2. 'i' → logprob: -1.9225237369537354
    3. '_i' → logprob: -4.672523498535156
    4. ' i' → logprob: -6.547523498535156
    5. '_j' → logprob: -6.797523498535156
    6. '_range' → logprob: -9.047523498535156
    7. 'range' → logprob: -9.297523498535156
    8. ' _' → logprob: -9.797523498535156
    9. 'j' → logprob: -10.672523498535156
    10. ' range' → logprob: -11.547523498535156

Token 1258: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6931625604629517
    2. ' in' → logprob: -0.6931625604629517
    3. 'n' → logprob: -12.19316291809082
    4. 'range' → logprob: -12.81816291809082
    5. 'i' → logprob: -12.94316291809082
    6. '_' → logprob: -13.81816291809082
    7. '	in' → logprob: -14.06816291809082
    8. ' ' → logprob: -14.19316291809082
    9. '   ' → logprob: -14.69316291809082
    10. 's' → logprob: -15.44316291809082

Token 1259: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.011047814972698689
    2. ' range' → logprob: -4.511047840118408
    3. 'in' → logprob: -18.38604736328125
    4. '(range' → logprob: -18.51104736328125
    5. '	range' → logprob: -19.01104736328125
    6. '_range' → logprob: -19.63604736328125
    7. 'n' → logprob: -19.88604736328125
    8. ' ' → logprob: -20.63604736328125
    9. '   ' → logprob: -22.01104736328125
    10. '_' → logprob: -22.26104736328125

Token 1260: '(n' (ID: 2406)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.07538880407810211
    2. ' range' → logprob: -2.8253889083862305
    3. 'n' → logprob: -4.3253889083862305
    4. '(n' → logprob: -9.32538890838623
    5. ' n' → logprob: -11.57538890838623
    6. '(range' → logprob: -12.32538890838623
    7. '	range' → logprob: -16.575387954711914
    8. '[n' → logprob: -17.575387954711914
    9. '	n' → logprob: -17.700387954711914
    10. '   ' → logprob: -18.325387954711914

Token 1261: ')]' (ID: 15710)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.007721151690930128
    2. ')]' → logprob: -4.882720947265625
    3. ' ]' → logprob: -9.132720947265625
    4. '()]' → logprob: -13.257720947265625
    5. ')' → logprob: -13.507720947265625
    6. ']
' → logprob: -13.757720947265625
    7. '   ' → logprob: -14.007720947265625
    8. ']]' → logprob: -14.757720947265625
    9. '>]' → logprob: -15.007720947265625
    10. 'for' → logprob: -15.257720947265625

Token 1262: ' ' (ID: 220)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.002726298291236162
    2. 'dist' → logprob: -6.127726078033447
    3. '#' → logprob: -8.877726554870605
    4. ' for' → logprob: -8.877726554870605
    5. 'def' → logprob: -9.127726554870605
    6. '
' → logprob: -9.627726554870605
    7. 'distance' → logprob: -10.252726554870605
    8. 'd' → logprob: -10.502726554870605
    9. 'INF' → logprob: -11.377726554870605
    10. 'matrix' → logprob: -12.252726554870605

Token 1263: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00010902655776590109
    2. 'def' → logprob: -9.87510871887207
    3. 'dist' → logprob: -10.12510871887207
    4. ' for' → logprob: -11.62510871887207
    5. '#' → logprob: -12.25010871887207
    6. '
' → logprob: -13.62510871887207
    7. 'distance' → logprob: -13.87510871887207
    8. '```' → logprob: -14.37510871887207
    9. 'import' → logprob: -14.50010871887207
    10. 'd' → logprob: -15.75010871887207

Token 1264: ' Mat' (ID: 9926)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0012034466490149498
    2. 'dist' → logprob: -7.251203536987305
    3. '#' → logprob: -8.376203536987305
    4. 'def' → logprob: -8.501203536987305
    5. 'd' → logprob: -11.126203536987305
    6. 'fuel' → logprob: -11.751203536987305
    7. 'distance' → logprob: -11.876203536987305
    8. 'import' → logprob: -12.126203536987305
    9. 'dp' → logprob: -12.376203536987305
    10. 'cost' → logprob: -12.751203536987305

Token 1265: 'rice' (ID: 44478)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.051141392439603806
    2. 'atrix' → logprob: -3.0511415004730225
    3. ' for' → logprob: -7.051141262054443
    4. 'INF' → logprob: -7.176141262054443
    5. 'in' → logprob: -8.551141738891602
    6. 'inf' → logprob: -8.676141738891602
    7. 'range' → logprob: -9.051141738891602
    8. '   ' → logprob: -9.176141738891602
    9. 'r' → logprob: -9.426141738891602
    10. '#' → logprob: -9.551141738891602

Token 1266: ' initial' (ID: 4871)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1339481621980667
    2. 'in' → logprob: -2.3839480876922607
    3. '=' → logprob: -3.8839480876922607
    4. 'import' → logprob: -4.50894832611084
    5. ' for' → logprob: -7.25894832611084
    6. ' in' → logprob: -7.75894832611084
    7. '#' → logprob: -8.50894832611084
    8. '=
' → logprob: -9.88394832611084
    9. ' =' → logprob: -10.00894832611084
    10. '=sys' → logprob: -10.25894832611084

Token 1267: 'isée' (ID: 59331)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.1425445079803467
    2. '=' → logprob: -1.3925445079803467
    3. 'for' → logprob: -1.3925445079803467
    4. '   ' → logprob: -2.3925445079803467
    5. ' for' → logprob: -3.1425445079803467
    6. '=
' → logprob: -4.642544746398926
    7. '=[' → logprob: -5.267544746398926
    8. ' =
' → logprob: -5.392544746398926
    9. '[' → logprob: -5.642544746398926
    10. '[n' → logprob: -5.642544746398926

Token 1268: ' à' (ID: 1221)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0006778847891837358
    2. ' for' → logprob: -7.500678062438965
    3. '#' → logprob: -9.875678062438965
    4. '
' → logprob: -10.250678062438965
    5. 'import' → logprob: -10.500678062438965
    6. 'dist' → logprob: -13.250678062438965
    7. '```' → logprob: -13.500678062438965
    8. 'in' → logprob: -13.500678062438965
    9. 'def' → logprob: -13.875678062438965
    10. '   ' → logprob: -13.875678062438965

Token 1269: ' ' (ID: 220)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.21356512606143951
    2. 'range' → logprob: -1.7135651111602783
    3. 'n' → logprob: -4.838565349578857
    4. '[' → logprob: -6.088565349578857
    5. ' range' → logprob: -6.713565349578857
    6. '0' → logprob: -8.4635648727417
    7. ' [' → logprob: -8.5885648727417
    8. '[i' → logprob: -8.7135648727417
    9. '[[' → logprob: -10.5885648727417
    10. ' n' → logprob: -10.8385648727417

Token 1270: '0' (ID: 15)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.46368977427482605
    2. '[' → logprob: -1.7136898040771484
    3. '0' → logprob: -1.9636898040771484
    4. '[n' → logprob: -3.7136898040771484
    5. 'n' → logprob: -3.9636898040771484
    6. 'range' → logprob: -5.338689804077148
    7. '[[' → logprob: -7.213689804077148
    8. 'inf' → logprob: -7.713689804077148
    9. 'float' → logprob: -8.713689804077148
    10. '(n' → logprob: -8.963689804077148

Token 1271: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -3.106736039626412e-05
    2. 'dist' → logprob: -10.875031471252441
    3. '#' → logprob: -12.000031471252441
    4. ' for' → logprob: -12.875031471252441
    5. 'def' → logprob: -13.125031471252441
    6. '
' → logprob: -14.125031471252441
    7. '```' → logprob: -15.250031471252441
    8. 'distance' → logprob: -15.500031471252441
    9. '   ' → logprob: -16.875030517578125
    10. 'import' → logprob: -17.125030517578125

Token 1272: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00012856863031629473
    2. '#' → logprob: -9.875128746032715
    3. 'def' → logprob: -9.875128746032715
    4. 'dist' → logprob: -10.625128746032715
    5. 'distance' → logprob: -14.375128746032715
    6. ' for' → logprob: -15.125128746032715
    7. 'import' → logprob: -15.625128746032715
    8. '
' → logprob: -16.1251277923584
    9. 'd' → logprob: -16.2501277923584
    10. 'all' → logprob: -17.1251277923584

Token 1273: ' i' (ID: 575)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.40323886275291443
    2. 'i' → logprob: -1.1532388925552368
    3. 's' → logprob: -4.528238773345947
    4. 'v' → logprob: -5.903238773345947
    5. 'st' → logprob: -6.903238773345947
    6. ' start' → logprob: -7.403238773345947
    7. 'src' → logprob: -7.653238773345947
    8. 'u' → logprob: -7.903238773345947
    9. ' i' → logprob: -9.028239250183105
    10. 'source' → logprob: -9.903239250183105

Token 1274: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12705829739570618
    2. 'in' → logprob: -2.127058267593384
    3. 'n' → logprob: -9.877058029174805
    4. 'range' → logprob: -11.502058029174805
    5. '(n' → logprob: -11.627058029174805
    6. '_in' → logprob: -11.877058029174805
    7. '   ' → logprob: -12.127058029174805
    8. 'import' → logprob: -12.127058029174805
    9. '(' → logprob: -12.252058029174805
    10. '	in' → logprob: -12.377058029174805

Token 1275: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -9.615255839889869e-05
    2. ' range' → logprob: -9.250096321105957
    3. 'n' → logprob: -17.87509536743164
    4. 'in' → logprob: -18.25009536743164
    5. '(range' → logprob: -19.62509536743164
    6. '   ' → logprob: -20.00009536743164
    7. '
' → logprob: -20.25009536743164
    8. 'r' → logprob: -20.25009536743164
    9. 'rang' → logprob: -20.37509536743164
    10. ' ' → logprob: -20.37509536743164

Token 1276: '(n' (ID: 2406)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.023308370262384415
    2. 'n' → logprob: -3.773308277130127
    3. '(n' → logprob: -10.273308753967285
    4. ' range' → logprob: -10.898308753967285
    5. 'in' → logprob: -11.898308753967285
    6. '(range' → logprob: -12.898308753967285
    7. ' n' → logprob: -15.773308753967285
    8. '
' → logprob: -16.52330780029297
    9. '   ' → logprob: -17.77330780029297
    10. '	range' → logprob: -17.89830780029297

Token 1277: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.557681679725647
    2. '):
' → logprob: -1.307681679725647
    3. ':' → logprob: -2.0576815605163574
    4. 'in' → logprob: -4.682681560516357
    5. '   ' → logprob: -5.182681560516357
    6. ')' → logprob: -5.182681560516357
    7. ':
' → logprob: -5.557681560516357
    8. 'n' → logprob: -6.432681560516357
    9. ',' → logprob: -6.932681560516357
    10. ' in' → logprob: -7.557681560516357

Token 1278: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2821716070175171
    2. 'dist' → logprob: -1.407171607017517
    3. ' dist' → logprob: -7.532171726226807
    4. 'd' → logprob: -8.157171249389648
    5. '	dist' → logprob: -9.282171249389648
    6. 'tmp' → logprob: -10.157171249389648
    7. 'temp' → logprob: -10.657171249389648
    8. '       ' → logprob: -12.032171249389648
    9. '   ' → logprob: -12.032171249389648
    10. '_dist' → logprob: -12.282171249389648

Token 1279: ' #' (ID: 1069)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.4008423089981079
    2. '   ' → logprob: -1.150842308998108
    3. 'tmp' → logprob: -5.150842189788818
    4. 'd' → logprob: -5.775842189788818
    5. 'temp' → logprob: -5.775842189788818
    6. 'for' → logprob: -7.525842189788818
    7. ' dist' → logprob: -8.525842666625977
    8. '#' → logprob: -8.650842666625977
    9. '	dist' → logprob: -9.275842666625977
    10. 'distance' → logprob: -9.525842666625977

Token 1280: ' Pour' (ID: 13931)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.00577852688729763
    2. '   ' → logprob: -5.6307783126831055
    3. 'd' → logprob: -6.5057783126831055
    4. 'tmp' → logprob: -8.255778312683105
    5. 'res' → logprob: -8.505778312683105
    6. 'temp' → logprob: -9.505778312683105
    7. ' dist' → logprob: -10.005778312683105
    8. 'raw' → logprob: -10.380778312683105
    9. 'cost' → logprob: -10.755778312683105
    10. 'for' → logprob: -10.880778312683105

Token 1281: ' chaque' (ID: 21194)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00790045689791441
    2. ' range' → logprob: -5.007900238037109
    3. 'i' → logprob: -6.757900238037109
    4. ' i' → logprob: -11.75790023803711
    5. 'in' → logprob: -12.50790023803711
    6. 'n' → logprob: -12.63290023803711
    7. 'r' → logprob: -12.88290023803711
    8. 'j' → logprob: -13.38290023803711
    9. 'v' → logprob: -13.50790023803711
    10. 'rang' → logprob: -14.13290023803711

Token 1282: ' sommet' (ID: 130502)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00036084887688048184
    2. 'v' → logprob: -9.000360488891602
    3. ' j' → logprob: -9.500360488891602
    4. 'start' → logprob: -9.625360488891602
    5. 's' → logprob: -10.000360488891602
    6. 'i' → logprob: -10.125360488891602
    7. '```' → logprob: -12.125360488891602
    8. 'k' → logprob: -13.250360488891602
    9. 'u' → logprob: -14.625360488891602
    10. '_j' → logprob: -14.750360488891602

Token 1283: ' de' (ID: 334)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.6962767243385315
    2. '   ' → logprob: -0.9462767243385315
    3. ':
' → logprob: -2.6962766647338867
    4. ':' → logprob: -3.4462766647338867
    5. 'd' → logprob: -5.571276664733887
    6. 'ans' → logprob: -5.821276664733887
    7. ' dist' → logprob: -5.821276664733887
    8. '
' → logprob: -7.321276664733887
    9. 'for' → logprob: -7.571276664733887
    10. '):
' → logprob: -7.696276664733887

Token 1284: ' départ' (ID: 32693)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0003472633252386004
    2. ' range' → logprob: -8.000347137451172
    3. 'n' → logprob: -11.750347137451172
    4. 'rang' → logprob: -13.250347137451172
    5. '0' → logprob: -13.625347137451172
    6. 'r' → logprob: -15.125347137451172
    7. 's' → logprob: -15.250347137451172
    8. '(range' → logprob: -15.875347137451172
    9. ' ' → logprob: -16.000347137451172
    10. 'i' → logprob: -16.125347137451172

Token 1285: ' possible' (ID: 4149)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021548084914684296
    2. 'dist' → logprob: -3.89654803276062
    3. ' dist' → logprob: -7.646548271179199
    4. '	dist' → logprob: -8.5215482711792
    5. 'd' → logprob: -9.0215482711792
    6. 'tmp' → logprob: -10.0215482711792
    7. ':
' → logprob: -10.6465482711792
    8. '   ' → logprob: -10.8965482711792
    9. 'temp' → logprob: -11.1465482711792
    10. 'for' → logprob: -11.2715482711792

Token 1286: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.032158270478248596
    2. 'dist' → logprob: -3.657158374786377
    3. ':
' → logprob: -5.782158374786377
    4. ' dist' → logprob: -6.657158374786377
    5. ':' → logprob: -7.282158374786377
    6. '):
' → logprob: -7.907158374786377
    7. '	dist' → logprob: -9.282157897949219
    8. '_dist' → logprob: -9.407157897949219
    9. '
' → logprob: -9.532157897949219
    10. '    
' → logprob: -10.532157897949219

Token 1287: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008026049472391605
    2. 'dist' → logprob: -5.258026123046875
    3. ' dist' → logprob: -6.133026123046875
    4. '	dist' → logprob: -8.758026123046875
    5. '   ' → logprob: -8.758026123046875
    6. 'd' → logprob: -8.883026123046875
    7. '    
' → logprob: -10.508026123046875
    8. '```' → logprob: -10.508026123046875
    9. 'tmp' → logprob: -10.758026123046875
    10. '
' → logprob: -11.008026123046875

Token 1288: ' tmp' (ID: 8919)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.01814842037856579
    2. 'd' → logprob: -4.893148422241211
    3. 'tmp' (adapté à ' tmp') → logprob: -5.393148422241211
    4. 'res' → logprob: -6.268148422241211
    5. '   ' → logprob: -6.268148422241211
    6. 'raw' → logprob: -6.768148422241211
    7. 'temp' → logprob: -7.893148422241211
    8. 'cost' → logprob: -8.518148422241211
    9. 'com' → logprob: -8.643148422241211
    10. 'new' → logprob: -9.893148422241211

Token 1289: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6192673444747925
    2. '=' → logprob: -0.8692673444747925
    3. '_dist' → logprob: -3.744267463684082
    4. 'dist' → logprob: -3.994267463684082
    5. 'd' → logprob: -8.744267463684082
    6. '_d' → logprob: -9.244267463684082
    7. '_=' → logprob: -10.994267463684082
    8. '_' → logprob: -11.619267463684082
    9. 'Dist' → logprob: -11.869267463684082
    10. 'ist' → logprob: -11.994267463684082

Token 1290: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -4.68022444692906e-05
    2. ' d' → logprob: -10.000046730041504
    3. 'dist' → logprob: -13.750046730041504
    4. '[d' → logprob: -16.50004768371582
    5. '   ' → logprob: -16.75004768371582
    6. '	d' → logprob: -17.75004768371582
    7. ' ' → logprob: -18.87504768371582
    8. '
' → logprob: -18.87504768371582
    9. '#' → logprob: -19.25004768371582
    10. '  ' → logprob: -19.37504768371582

Token 1291: 'ijkstra' (ID: 124290)
  Prédit: 'ijkstra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijkstra' → logprob: -2.0100624169572257e-05
    2. 'ijk' → logprob: -10.875020027160645
    3. 'ij' → logprob: -13.875020027160645
    4. 'jik' → logprob: -16.87502098083496
    5. 'i' → logprob: -17.00002098083496
    6. 'ijks' → logprob: -17.12502098083496
    7. 'ijkl' → logprob: -17.25002098083496
    8. 'ijkt' → logprob: -18.50002098083496
    9. 'ijs' → logprob: -19.00002098083496
    10. '[i' → logprob: -19.00002098083496

Token 1292: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -1.9361264946837764e-07
    2. ' (' → logprob: -15.875
    3. '(
' → logprob: -17.875
    4. '[i' → logprob: -18.0
    5. '(n' → logprob: -18.25
    6. '(' → logprob: -18.875
    7. '(I' → logprob: -20.375
    8. 'def' → logprob: -20.75
    9. '(ii' → logprob: -20.875
    10. '```' → logprob: -21.0

Token 1293: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003211819101125002
    2. ',m' → logprob: -5.753211975097656
    3. ')' → logprob: -11.253211975097656
    4. 'matrix' → logprob: -12.128211975097656
    5. '   ' → logprob: -12.253211975097656
    6. ' ,' → logprob: -12.753211975097656
    7. '(matrix' → logprob: -13.503211975097656
    8. ',[' → logprob: -13.503211975097656
    9. ',
' → logprob: -13.878211975097656
    10. '[m' → logprob: -14.003211975097656

Token 1294: ' matrix' (ID: 12248)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -5.5577775128767826e-06
    2. ' matrix' → logprob: -12.125005722045898
    3. '   ' → logprob: -17.3750057220459
    4. '	matrix' → logprob: -18.7500057220459
    5. '(matrix' → logprob: -18.8750057220459
    6. ' ' → logprob: -20.1250057220459
    7. '[[' → logprob: -20.2500057220459
    8. 'Matrix' → logprob: -20.3750057220459
    9. 'ans' → logprob: -20.5000057220459
    10. '.matrix' → logprob: -21.1250057220459

Token 1295: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5291805267333984
    2. ')
' → logprob: -0.9041805267333984
    3. '   ' → logprob: -5.154180526733398
    4. 'for' → logprob: -9.029180526733398
    5. ')

' → logprob: -9.654180526733398
    6. ')
' → logprob: -10.404180526733398
    7. 'def' → logprob: -11.654180526733398
    8. ' )
' → logprob: -12.029180526733398
    9. '[i' → logprob: -12.029180526733398
    10. ')[' → logprob: -12.279180526733398

Token 1296: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006722471676766872
    2. 'for' → logprob: -5.381722450256348
    3. ' for' → logprob: -6.756722450256348
    4. '
' → logprob: -7.006722450256348
    5. '    
' → logprob: -11.631722450256348
    6. '	for' → logprob: -11.756722450256348
    7. '<|end|>' → logprob: -12.381722450256348
    8. ')' → logprob: -12.881722450256348
    9. '
' → logprob: -13.506722450256348
    10. '       ' → logprob: -13.631722450256348

Token 1297: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6721912026405334
    2. 'for' → logprob: -0.7971912026405334
    3. ' for' → logprob: -3.2971911430358887
    4. '
' → logprob: -6.922191143035889
    5. 'dist' → logprob: -8.172191619873047
    6. '    
' → logprob: -8.922191619873047
    7. '#' → logprob: -9.172191619873047
    8. '	for' → logprob: -9.547191619873047
    9. 'ans' → logprob: -10.297191619873047
    10. '  
' → logprob: -10.922191619873047

Token 1298: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -2.3557529857498594e-05
    2. '   ' → logprob: -11.37502384185791
    3. ' for' → logprob: -11.62502384185791
    4. '
' → logprob: -13.25002384185791
    5. 'dist' → logprob: -13.62502384185791
    6. '    
' → logprob: -17.250022888183594
    7. '```' → logprob: -17.250022888183594
    8. 'distance' → logprob: -18.125022888183594
    9. '	for' → logprob: -18.250022888183594
    10. 'cost' → logprob: -18.500022888183594

Token 1299: ' utilise' (ID: 70283)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0029843561351299286
    2. ' for' → logprob: -6.252984523773193
    3. '=' → logprob: -7.252984523773193
    4. 'range' → logprob: -9.002984046936035
    5. ')' → logprob: -10.002984046936035
    6. ' =' → logprob: -10.252984046936035
    7. '   ' → logprob: -10.377984046936035
    8. '
' → logprob: -10.502984046936035
    9. 'dist' → logprob: -10.752984046936035
    10. 'in' → logprob: -11.002984046936035

Token 1300: ' D' (ID: 415)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.14377345144748688
    2. 'lambda' → logprob: -2.3937735557556152
    3. '[tmp' → logprob: -4.268773555755615
    4. 'merge' → logprob: -4.893773555755615
    5. '(lambda' → logprob: -5.143773555755615
    6. 'def' → logprob: -5.393773555755615
    7. '(tmp' → logprob: -5.518773555755615
    8. 'd' → logprob: -6.018773555755615
    9. '   ' → logprob: -6.393773555755615
    10. '
' → logprob: -7.268773555755615

Token 1301: 'ijkstra' (ID: 124290)
  Prédit: 'ijkstra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijkstra' → logprob: -0.003259234596043825
    2. 'tmp' → logprob: -6.253259181976318
    3. '(tmp' → logprob: -7.503259181976318
    4. 'ijk' → logprob: -7.628259181976318
    5. '[tmp' → logprob: -8.628259658813477
    6. 'ij' → logprob: -9.753259658813477
    7. '[i' → logprob: -10.753259658813477
    8. 'i' → logprob: -11.253259658813477
    9. '_tmp' → logprob: -12.878259658813477
    10. '$tmp' → logprob: -13.128259658813477

Token 1302: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2234051525592804
    2. 'for' → logprob: -2.473405122756958
    3. ' for' → logprob: -3.098405122756958
    4. '<|end|>' → logprob: -3.473405122756958
    5. '
' → logprob: -3.848405122756958
    6. ')' → logprob: -4.973405361175537
    7. '[i' → logprob: -5.598405361175537
    8. '(' → logprob: -6.473405361175537
    9. '	for' → logprob: -7.348405361175537
    10. '  ' → logprob: -7.348405361175537

Token 1303: ' calcul' (ID: 7559)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.04767102003097534
    2. 'range' → logprob: -3.29767107963562
    3. 'lambda' → logprob: -4.922670841217041
    4. 'for' → logprob: -7.297670841217041
    5. 'merge' → logprob: -7.922670841217041
    6. ')' → logprob: -8.0476713180542
    7. '[tmp' → logprob: -8.4226713180542
    8. 'dist' → logprob: -9.1726713180542
    9. ' tmp' → logprob: -9.1726713180542
    10. '[i' → logprob: -9.2976713180542

Token 1304: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.0005231272662058473
    2. 'ter' → logprob: -9.125523567199707
    3. 'rer' → logprob: -9.375523567199707
    4. 'ate' → logprob: -9.500523567199707
    5. 'r' → logprob: -9.750523567199707
    6. '#' → logprob: -9.750523567199707
    7. 'ler' → logprob: -10.750523567199707
    8. '
' → logprob: -11.500523567199707
    9. 'ating' → logprob: -11.625523567199707
    10. 'l' → logprob: -11.750523567199707

Token 1305: ' toutes' (ID: 17502)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.018569650128483772
    2. '[tmp' → logprob: -4.393569469451904
    3. 'lambda' → logprob: -5.768569469451904
    4. '(tmp' → logprob: -6.768569469451904
    5. 'dist' → logprob: -7.643569469451904
    6. '   ' → logprob: -8.018569946289062
    7. '[i' → logprob: -8.518569946289062
    8. 'range' → logprob: -8.768569946289062
    9. '(lambda' → logprob: -8.893569946289062
    10. '[' → logprob: -9.018569946289062

Token 1306: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.11745917797088623
    2. ' les' → logprob: -3.492459297180176
    3. ')' → logprob: -3.742459297180176
    4. '(tmp' → logprob: -3.992459297180176
    5. 'dist' → logprob: -4.492459297180176
    6. '[tmp' → logprob: -4.742459297180176
    7. '(dist' → logprob: -6.117459297180176
    8. '(' → logprob: -6.492459297180176
    9. '   ' → logprob: -6.492459297180176
    10. 'la' → logprob: -6.492459297180176

Token 1307: ' distances' (ID: 48294)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.19547514617443085
    2. 'range' → logprob: -1.9454751014709473
    3. 'for' → logprob: -4.320475101470947
    4. 'ranges' → logprob: -4.820475101470947
    5. '   ' → logprob: -5.445475101470947
    6. 'j' → logprob: -5.695475101470947
    7. 'v' → logprob: -7.195475101470947
    8. ' distances' → logprob: -7.195475101470947
    9. '[j' → logprob: -7.820475101470947
    10. 'distance' → logprob: -7.820475101470947

Token 1308: ' composites' (ID: 152565)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009352823253720999
    2. '
' → logprob: -8.500935554504395
    3. ' for' → logprob: -8.500935554504395
    4. 'for' → logprob: -8.625935554504395
    5. '(tmp' → logprob: -8.750935554504395
    6. '(' → logprob: -10.000935554504395
    7. '[i' → logprob: -11.000935554504395
    8. 'from' → logprob: -11.250935554504395
    9. 'tmp' → logprob: -11.250935554504395
    10. ' (' → logprob: -11.500935554504395

Token 1309: ' depuis' (ID: 16277)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21599270403385162
    2. 'for' → logprob: -2.3409926891326904
    3. ' for' → logprob: -2.3409926891326904
    4. '<|end|>' → logprob: -6.8409929275512695
    5. ')' → logprob: -8.46599292755127
    6. '
' → logprob: -8.59099292755127
    7. '	for' → logprob: -9.09099292755127
    8. '    
' → logprob: -10.09099292755127
    9. '<|end|>' → logprob: -10.46599292755127
    10. '  ' → logprob: -10.71599292755127

Token 1310: ' ce' (ID: 2357)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -5.180879816180095e-05
    2. ' i' → logprob: -9.875051498413086
    3. 'l' → logprob: -16.125051498413086
    4. '   ' → logprob: -16.625051498413086
    5. ' ' → logprob: -16.875051498413086
    6. '[i' → logprob: -17.250051498413086
    7. 'import' → logprob: -18.375051498413086
    8. '(i' → logprob: -18.625051498413086
    9. '  ' → logprob: -18.750051498413086
    10. 'le' → logprob: -18.750051498413086

Token 1311: ' sommet' (ID: 130502)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2322181910276413
    2. 'som' → logprob: -1.6072181463241577
    3. ' sommet' → logprob: -5.982218265533447
    4. 'token' → logprob: -6.982218265533447
    5. 's' → logprob: -6.982218265533447
    6. 'start' → logprob: -7.232218265533447
    7. 'point' → logprob: -7.232218265533447
    8. '[i' → logprob: -7.982218265533447
    9. '_i' → logprob: -8.607217788696289
    10. '#' → logprob: -9.732217788696289

Token 1312: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05091891065239906
    2. 'for' → logprob: -3.4259188175201416
    3. 'dist' → logprob: -5.175919055938721
    4. ' for' → logprob: -5.300919055938721
    5. '
' → logprob: -6.050919055938721
    6. '#' → logprob: -6.925919055938721
    7. 'ans' → logprob: -7.300919055938721
    8. 'new' → logprob: -7.550919055938721
    9. '    
' → logprob: -8.050918579101562
    10. ')' → logprob: -8.550918579101562

Token 1313: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.029312539845705032
    2. '   ' → logprob: -3.9043126106262207
    3. ' for' → logprob: -5.029312610626221
    4. 'dist' → logprob: -6.529312610626221
    5. 'new' → logprob: -8.404312133789062
    6. 'matrix' → logprob: -9.529312133789062
    7. 'tmp' → logprob: -9.654312133789062
    8. '#' → logprob: -9.654312133789062
    9. 'cost' → logprob: -9.779312133789062
    10. 'graph' → logprob: -9.904312133789062

Token 1314: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.04946238175034523
    2. '   ' → logprob: -3.04946231842041
    3. ' for' → logprob: -7.17446231842041
    4. 'dist' → logprob: -9.42446231842041
    5. '	for' → logprob: -11.67446231842041
    6. 'tmp' → logprob: -12.29946231842041
    7. 'ans' → logprob: -12.92446231842041
    8. 'new' → logprob: -13.54946231842041
    9. '#' → logprob: -13.67446231842041
    10. '```' → logprob: -13.79946231842041

Token 1315: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -2.236549335066229e-05
    2. ' j' → logprob: -10.750021934509277
    3. 'v' → logprob: -14.000021934509277
    4. '_j' → logprob: -18.875022888183594
    5. '```' → logprob: -19.125022888183594
    6. '   ' → logprob: -19.250022888183594
    7. '	j' → logprob: -19.625022888183594
    8. 'k' → logprob: -20.625022888183594
    9. '$j' → logprob: -21.500022888183594
    10. 'x' → logprob: -21.500022888183594

Token 1316: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.3133111894130707
    2. ' in' → logprob: -1.313311219215393
    3. 'range' → logprob: -10.438311576843262
    4. ',' → logprob: -12.813311576843262
    5. '   ' → logprob: -12.813311576843262
    6. 'n' → logprob: -13.188311576843262
    7. ' j' → logprob: -13.313311576843262
    8. ')' → logprob: -13.438311576843262
    9. ' ' → logprob: -13.563311576843262
    10. 'import' → logprob: -13.813311576843262

Token 1317: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -2.15310683415737e-05
    2. ' range' → logprob: -10.750021934509277
    3. '   ' → logprob: -17.87502098083496
    4. '(range' → logprob: -19.37502098083496
    5. ' ' → logprob: -20.25002098083496
    6. 'in' → logprob: -20.37502098083496
    7. '
' → logprob: -20.50002098083496
    8. '	range' → logprob: -20.62502098083496
    9. '```' → logprob: -20.75002098083496
    10. '0' → logprob: -21.00002098083496

Token 1318: '(n' (ID: 2406)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -4.620622712536715e-05
    2. ' range' → logprob: -10.250045776367188
    3. '(range' → logprob: -11.500045776367188
    4. 'n' → logprob: -14.500045776367188
    5. '(n' → logprob: -16.250045776367188
    6. ' ' → logprob: -17.500045776367188
    7. '   ' → logprob: -18.375045776367188
    8. '	range' → logprob: -20.000045776367188
    9. 'in' → logprob: -20.500045776367188
    10. '[n' → logprob: -20.750045776367188

Token 1319: '):' (ID: 3127)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5002907514572144
    2. '   ' → logprob: -1.6252907514572144
    3. '):' → logprob: -2.750290870666504
    4. '       ' → logprob: -3.500290870666504
    5. ',' → logprob: -3.625290870666504
    6. ':' → logprob: -4.375290870666504
    7. ' in' → logprob: -4.375290870666504
    8. ')' → logprob: -4.875290870666504
    9. 'in' → logprob: -5.000290870666504
    10. ']+=' → logprob: -5.250290870666504

Token 1320: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006099192891269922
    2. ' ans' → logprob: -5.881099224090576
    3. 'ans' → logprob: -6.381099224090576
    4. ' if' → logprob: -6.756099224090576
    5. 'if' → logprob: -8.881098747253418
    6. '(ans' → logprob: -9.381098747253418
    7. '           ' → logprob: -9.631098747253418
    8. '   ' → logprob: -9.756098747253418
    9. '	ans' → logprob: -10.256098747253418
    10. '               ' → logprob: -11.506098747253418

Token 1321: ' #' (ID: 1069)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.41702258586883545
    2. 'ans' → logprob: -1.6670225858688354
    3. ' if' → logprob: -2.917022705078125
    4. '       ' → logprob: -3.042022705078125
    5. '	ans' → logprob: -4.042022705078125
    6. '   ' → logprob: -4.167022705078125
    7. 'if' → logprob: -4.667022705078125
    8. '(ans' → logprob: -5.542022705078125
    9. '           ' → logprob: -6.167022705078125
    10. '        
' → logprob: -8.292022705078125

Token 1322: ' Pour' (ID: 13931)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.2858783006668091
    2. 'if' → logprob: -1.910878300666809
    3. 'dist' → logprob: -3.0358781814575195
    4. '   ' → logprob: -3.6608781814575195
    5. 'val' → logprob: -4.2858781814575195
    6. ' ans' → logprob: -5.9108781814575195
    7. ' if' → logprob: -5.9108781814575195
    8. 'd' → logprob: -6.4108781814575195
    9. 'value' → logprob: -6.4108781814575195
    10. '       ' → logprob: -6.7858781814575195

Token 1323: ' chaque' (ID: 21194)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.11290035396814346
    2. ' j' → logprob: -2.2379002571105957
    3. 'range' → logprob: -10.362900733947754
    4. ' in' → logprob: -11.362900733947754
    5. '	j' → logprob: -11.487900733947754
    6. ' range' → logprob: -12.237900733947754
    7. '```' → logprob: -12.612900733947754
    8. 'in' → logprob: -12.737900733947754
    9. '_j' → logprob: -12.862900733947754
    10. '   ' → logprob: -13.112900733947754

Token 1324: ' sommet' (ID: 130502)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.04324352741241455
    2. ' j' → logprob: -3.168243408203125
    3. '	j' → logprob: -9.293243408203125
    4. '_j' → logprob: -9.668243408203125
    5. '[j' → logprob: -10.293243408203125
    6. '```' → logprob: -11.293243408203125
    7. '   ' → logprob: -11.668243408203125
    8. 'in' → logprob: -11.793243408203125
    9. 'range' → logprob: -12.043243408203125
    10. '
' → logprob: -12.043243408203125

Token 1325: ' d' (ID: 272)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.286026120185852
    2. ':' → logprob: -1.411026120185852
    3. '       ' → logprob: -1.786026120185852
    4. '[i' → logprob: -1.786026120185852
    5. ':
' → logprob: -2.4110260009765625
    6. '[' → logprob: -4.1610260009765625
    7. 'in' → logprob: -4.2860260009765625
    8. '(i' → logprob: -4.6610260009765625
    9. ' in' → logprob: -5.2860260009765625
    10. '[j' → logprob: -6.1610260009765625

Token 1326: ''arrivée' (ID: 156076)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0015042672166600823
    2. 'ans' → logprob: -7.501504421234131
    3. ' range' → logprob: -7.626504421234131
    4. 'istance' → logprob: -8.751503944396973
    5. 'ist' → logprob: -9.251503944396973
    6. 'estination' → logprob: -9.751503944396973
    7. 'e' → logprob: -10.126503944396973
    8. 'i' → logprob: -10.626503944396973
    9. '(range' → logprob: -11.001503944396973
    10. '   ' → logprob: -11.251503944396973

Token 1327: ' possible' (ID: 4149)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.38245683908462524
    2. ':
' → logprob: -1.8824567794799805
    3. '       ' → logprob: -2.1324567794799805
    4. '   ' → logprob: -4.1324567794799805
    5. '):
' → logprob: -4.3824567794799805
    6. '<|end|>' → logprob: -4.3824567794799805
    7. '<|end|>' → logprob: -6.8824567794799805
    8. '):' → logprob: -7.1324567794799805
    9. '():
' → logprob: -7.1324567794799805
    10. '[' → logprob: -7.8824567794799805

Token 1328: '
' (ID: 198)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2261010855436325
    2. ':' → logprob: -2.3511011600494385
    3. '       ' → logprob: -2.8511011600494385
    4. '):
' → logprob: -3.1011011600494385
    5. '   ' → logprob: -6.351100921630859
    6. '():
' → logprob: -7.601100921630859
    7. '):' → logprob: -7.601100921630859
    8. '           ' → logprob: -7.851100921630859
    9. '(ans' → logprob: -8.47610092163086
    10. '<|end|>' → logprob: -8.72610092163086

Token 1329: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003521913895383477
    2. ' if' → logprob: -6.128521919250488
    3. '```' → logprob: -7.128521919250488
    4. 'if' → logprob: -8.253521919250488
    5. 'ans' → logprob: -9.878521919250488
    6. '   ' → logprob: -10.003521919250488
    7. '	' → logprob: -10.128521919250488
    8. '           ' → logprob: -10.253521919250488
    9. ' ans' → logprob: -10.253521919250488
    10. '	   ' → logprob: -11.128521919250488

Token 1330: ' #' (ID: 1069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.018475916236639023
    2. 'if' → logprob: -4.2684760093688965
    3. '           ' → logprob: -6.6434760093688965
    4. ' ans' → logprob: -6.7684760093688965
    5. 'dist' → logprob: -7.1434760093688965
    6. '       ' → logprob: -7.6434760093688965
    7. ' if' → logprob: -8.893475532531738
    8. 'val' → logprob: -8.893475532531738
    9. '   ' → logprob: -9.143475532531738
    10. '	ans' → logprob: -10.143475532531738

Token 1331: ' On' (ID: 2160)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.025052549317479134
    2. 'if' → logprob: -3.775052547454834
    3. 'val' → logprob: -6.775052547454834
    4. 'dist' → logprob: -7.775052547454834
    5. '   ' → logprob: -9.775053024291992
    6. ' ans' → logprob: -10.150053024291992
    7. 'cost' → logprob: -10.400053024291992
    8. '       ' → logprob: -10.650053024291992
    9. 'value' → logprob: -11.275053024291992
    10. 'answer' → logprob: -11.525053024291992

Token 1332: ' extrait' (ID: 194006)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5067338347434998
    2. ' if' → logprob: -1.6317338943481445
    3. 'ans' → logprob: -2.2567338943481445
    4. ' ans' → logprob: -3.6317338943481445
    5. '=' → logprob: -3.7567338943481445
    6. '       ' → logprob: -4.3817338943481445
    7. 'dist' → logprob: -4.3817338943481445
    8. '#' → logprob: -5.0067338943481445
    9. ' =' → logprob: -5.3817338943481445
    10. '[' → logprob: -6.2567338943481445

Token 1333: ' le' (ID: 505)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.2223040759563446
    2. ' tmp' → logprob: -1.847304105758667
    3. '(tmp' → logprob: -3.597304105758667
    4. ' ans' → logprob: -5.222303867340088
    5. 'ans' → logprob: -5.347303867340088
    6. '(ans' → logprob: -6.597303867340088
    7. 'dist' → logprob: -7.097303867340088
    8. ' dist' → logprob: -7.347303867340088
    9. ' div' → logprob: -7.722303867340088
    10. '[tmp' → logprob: -7.847303867340088

Token 1334: ' nombre' (ID: 9733)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.0018171477131545544
    2. 'ans' → logprob: -7.001817226409912
    3. '(tmp' → logprob: -7.751817226409912
    4. ' tmp' → logprob: -8.001816749572754
    5. '[tmp' → logprob: -9.376816749572754
    6. 'dist' → logprob: -10.626816749572754
    7. 'div' → logprob: -10.876816749572754
    8. '(ans' → logprob: -12.751816749572754
    9. 'print' → logprob: -12.876816749572754
    10. ' ans' → logprob: -13.126816749572754

Token 1335: ' de' (ID: 334)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.8641060590744019
    2. '       ' → logprob: -1.4891060590744019
    3. '=' → logprob: -1.6141060590744019
    4. '[' → logprob: -2.6141061782836914
    5. 'of' → logprob: -4.364106178283691
    6. ' =' → logprob: -4.614106178283691
    7. '_of' → logprob: -4.989106178283691
    8. '[token' → logprob: -4.989106178283691
    9. '[tmp' → logprob: -5.114106178283691
    10. ' de' → logprob: -5.989106178283691

Token 1336: ' rav' (ID: 26005)
  Prédit: 'rav'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rav' → logprob: -0.12416743487119675
    2. 'ans' → logprob: -2.7491674423217773
    3. 'tmp' → logprob: -4.249167442321777
    4. '(tmp' → logprob: -5.374167442321777
    5. 'rans' → logprob: -5.374167442321777
    6. '(ans' → logprob: -5.499167442321777
    7. 'rev' → logprob: -5.499167442321777
    8. 'r' → logprob: -5.499167442321777
    9. '[tmp' → logprob: -5.749167442321777
    10. ' rav' → logprob: -6.249167442321777

Token 1337: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.012717535719275475
    2. '[' → logprob: -6.0127177238464355
    3. 'fill' → logprob: -6.3877177238464355
    4. 'j' → logprob: -6.6377177238464355
    5. '[j' → logprob: -6.6377177238464355
    6. '=' → logprob: -6.8877177238464355
    7. '>' → logprob: -7.2627177238464355
    8. '```' → logprob: -7.2627177238464355
    9. '[it' → logprob: -7.6377177238464355
    10. '[i' → logprob: -8.137717247009277

Token 1338: 'ail' (ID: 663)
  Prédit: 'ail'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ail' → logprob: -0.06007292494177818
    2. 'ell' → logprob: -3.310072898864746
    3. 'al' → logprob: -4.685072898864746
    4. 'il' → logprob: -5.685072898864746
    5. 'agement' → logprob: -6.185072898864746
    6. 'el' → logprob: -6.310072898864746
    7. 'lements' → logprob: -6.435072898864746
    8. 'ements' → logprob: -7.060072898864746
    9. 'all' → logprob: -7.685072898864746
    10. 'aux' → logprob: -8.060072898864746

Token 1339: 'lements' (ID: 11031)
  Prédit: 'lements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lements' → logprob: -0.0041217380203306675
    2. 'ements' → logprob: -5.879121780395508
    3. 'ell' → logprob: -7.379121780395508
    4. 'issements' → logprob: -8.129121780395508
    5. 'l' → logprob: -8.879121780395508
    6. 'ishments' → logprob: -9.504121780395508
    7. 'isements' → logprob: -10.379121780395508
    8. 'lement' → logprob: -10.504121780395508
    9. 'le' → logprob: -10.504121780395508
    10. 'nements' → logprob: -11.004121780395508

Token 1340: ' uniquement' (ID: 65527)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8243034482002258
    2. '=' → logprob: -1.324303388595581
    3. '[' → logprob: -2.449303388595581
    4. 'from' → logprob: -2.574303388595581
    5. 'ans' → logprob: -3.324303388595581
    6. '       ' → logprob: -3.449303388595581
    7. ' from' → logprob: -3.949303388595581
    8. '(ans' → logprob: -4.69930362701416
    9. ' ans' → logprob: -5.19930362701416
    10. '           ' → logprob: -5.19930362701416

Token 1341: ' (' (ID: 350)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.1819751262664795
    2. ' =' → logprob: -1.1819751262664795
    3. '       ' → logprob: -1.5569751262664795
    4. 'ans' → logprob: -2.8069751262664795
    5. '[' → logprob: -3.0569751262664795
    6. 'from' → logprob: -4.056975364685059
    7. ' ans' → logprob: -4.431975364685059
    8. '(ans' → logprob: -5.306975364685059
    9. '
' → logprob: -5.431975364685059
    10. '           ' → logprob: -5.431975364685059

Token 1342: 'quot' (ID: 17555)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.020021002739667892
    2. ' ans' → logprob: -4.020020961761475
    3. 'tmp' → logprob: -6.395020961761475
    4. '(ans' → logprob: -9.645021438598633
    5. '       ' → logprob: -9.895021438598633
    6. ')' → logprob: -10.895021438598633
    7. '=' → logprob: -11.395021438598633
    8. ' tmp' → logprob: -11.395021438598633
    9. '_ans' → logprob: -11.645021438598633
    10. '[tmp' → logprob: -12.145021438598633

Token 1343: 'ient' (ID: 773)
  Prédit: 'ient'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ient' → logprob: -2.7848862373502925e-05
    2. 'ients' → logprob: -12.000027656555176
    3. 'ent' → logprob: -12.250027656555176
    4. '=' → logprob: -12.250027656555176
    5. '=int' → logprob: -12.500027656555176
    6. 'ienten' → logprob: -13.250027656555176
    7. 'e' → logprob: -13.250027656555176
    8. 'cient' → logprob: -13.750027656555176
    9. 'a' → logprob: -14.000027656555176
    10. 'int' → logprob: -14.500027656555176

Token 1344: ' eu' (ID: 5658)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5479764938354492
    2. ' =' → logprob: -1.1729764938354492
    3. '[j' → logprob: -2.422976493835449
    4. '[tmp' → logprob: -4.547976493835449
    5. ',' → logprob: -5.172976493835449
    6. 'tmp' → logprob: -6.797976493835449
    7. '(tmp' → logprob: -6.922976493835449
    8. '=j' → logprob: -7.047976493835449
    9. 'div' → logprob: -7.297976493835449
    10. '[' → logprob: -7.422976493835449

Token 1345: 'clid' (ID: 156121)
  Prédit: 'clid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'clid' → logprob: -1.4331191778182983
    2. 'clidean' → logprob: -1.8081191778182983
    3. 'cl' → logprob: -1.9331191778182983
    4. 'ro' → logprob: -2.183119297027588
    5. 're' → logprob: -2.308119297027588
    6. '//' → logprob: -2.433119297027588
    7. 'rope' → logprob: -3.058119297027588
    8. 'r' → logprob: -3.558119297027588
    9. 'de' → logprob: -4.308119297027588
    10. '```' → logprob: -4.558119297027588

Token 1346: 'ien' (ID: 847)
  Prédit: 'ienne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ienne' → logprob: -0.3747098445892334
    2. 'ien' → logprob: -1.3747098445892334
    3. '```' → logprob: -4.2497100830078125
    4. 'aire' → logprob: -4.7497100830078125
    5. 'div' → logprob: -5.2497100830078125
    6. 'en' → logprob: -5.2497100830078125
    7. '       ' → logprob: -5.4997100830078125
    8. 'iene' → logprob: -5.4997100830078125
    9. 'iennes' → logprob: -5.6247100830078125
    10. 'enne' → logprob: -5.7497100830078125

Token 1347: ' par' (ID: 686)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9515768885612488
    2. ' =' → logprob: -1.5765769481658936
    3. '=' → logprob: -1.8265769481658936
    4. ')' → logprob: -2.7015769481658936
    5. ',' → logprob: -2.7015769481658936
    6. '[j' → logprob: -3.7015769481658936
    7. ':' → logprob: -4.0765767097473145
    8. '[tmp' → logprob: -4.2015767097473145
    9. '[' → logprob: -4.8265767097473145
    10. ' de' → logprob: -5.3265767097473145

Token 1348: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0007585270795971155
    2. '(' → logprob: -7.375758647918701
    3. ' ' → logprob: -9.000758171081543
    4. '   ' → logprob: -12.500758171081543
    5. '100' → logprob: -13.375758171081543
    6. ' (' → logprob: -13.500758171081543
    7. '```' → logprob: -14.750758171081543
    8. '`' → logprob: -15.000758171081543
    9. '
' → logprob: -15.000758171081543
    10. '=' → logprob: -15.375758171081543

Token 1349: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0015073629328981042
    2. '(' → logprob: -6.50150728225708
    3. ' ' → logprob: -12.501507759094238
    4. '100' → logprob: -14.126507759094238
    5. '
' → logprob: -15.626507759094238
    6. '```' → logprob: -16.001506805419922
    7. '`' → logprob: -16.251506805419922
    8. ' (' → logprob: -16.501506805419922
    9. '=' → logprob: -17.251506805419922
    10. '[' → logprob: -17.376506805419922

Token 1350: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.03837939724326134
    2. '15' → logprob: -3.288379430770874
    3. ' **' → logprob: -8.538379669189453
    4. '```' → logprob: -9.413379669189453
    5. '^' → logprob: -10.288379669189453
    6. '¹' → logprob: -10.913379669189453
    7. ' ' → logprob: -13.663379669189453
    8. ' ' → logprob: -13.663379669189453
    9. '^{' → logprob: -13.663379669189453
    10. '​' → logprob: -13.913379669189453

Token 1351: '15' (ID: 1055)
  Prédit: '15'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '15' → logprob: -1.9361264946837764e-07
    2. '```' → logprob: -16.25
    3. ' ' → logprob: -18.625
    4. '015' → logprob: -19.0
    5. '^' → logprob: -19.375
    6. '' → logprob: -19.5
    7. '`' → logprob: -19.625
    8. '１５' → logprob: -19.875
    9. '۱۵' → logprob: -20.0
    10. '+' → logprob: -20.125

Token 1352: ')
' (ID: 446)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.652557373046875
    2. ')' → logprob: -1.152557373046875
    3. '       ' → logprob: -3.402557373046875
    4. ')]' → logprob: -3.402557373046875
    5. ')
' → logprob: -4.402557373046875
    6. ')],' → logprob: -4.402557373046875
    7. '],' → logprob: -4.527557373046875
    8. '),' → logprob: -4.652557373046875
    9. '])' → logprob: -4.652557373046875
    10. 'dist' → logprob: -4.902557373046875

Token 1353: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20105987787246704
    2. ' ans' → logprob: -2.2010598182678223
    3. 'ans' → logprob: -3.7010598182678223
    4. ' =' → logprob: -4.326059818267822
    5. '           ' → logprob: -4.451059818267822
    6. '=' → logprob: -4.451059818267822
    7. '(ans' → logprob: -5.201059818267822
    8. ')' → logprob: -6.951059818267822
    9. ',' → logprob: -7.201059818267822
    10. ':' → logprob: -7.326059818267822

Token 1354: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.028500353917479515
    2. ' ans' → logprob: -3.6535003185272217
    3. '       ' → logprob: -6.153500556945801
    4. '(ans' → logprob: -10.4035005569458
    5. '           ' → logprob: -11.1535005569458
    6. '   ' → logprob: -11.2785005569458
    7. '	ans' → logprob: -11.5285005569458
    8. '_ans' → logprob: -13.2785005569458
    9. '```' → logprob: -14.9035005569458
    10. 'answer' → logprob: -15.0285005569458

Token 1355: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0041290996596217155
    2. '[j' → logprob: -5.504128932952881
    3. '[' → logprob: -10.504129409790039
    4. '][' → logprob: -11.379129409790039
    5. ')[' → logprob: -12.629129409790039
    6. 'i' → logprob: -13.254129409790039
    7. ' [' → logprob: -13.379129409790039
    8. '
' → logprob: -14.254129409790039
    9. '[I' → logprob: -14.254129409790039
    10. '\[' → logprob: -14.629129409790039

Token 1356: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00866006687283516
    2. '[j' → logprob: -4.758659839630127
    3. ']' → logprob: -10.633660316467285
    4. ')[' → logprob: -12.008660316467285
    5. '[' → logprob: -12.758660316467285
    6. '"][' → logprob: -13.383660316467285
    7. ',j' → logprob: -13.383660316467285
    8. '>[' → logprob: -13.508660316467285
    9. ' ][' → logprob: -13.633660316467285
    10. '[i' → logprob: -13.883660316467285

Token 1357: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.8624639324116288e-06
    2. ' j' → logprob: -13.875001907348633
    3. '[j' → logprob: -14.250001907348633
    4. '	j' → logprob: -16.500001907348633
    5. '][' → logprob: -17.125001907348633
    6. ']' → logprob: -17.750001907348633
    7. ':j' → logprob: -18.125001907348633
    8. ',j' → logprob: -18.375001907348633
    9. '(j' → logprob: -18.500001907348633
    10. '$j' → logprob: -18.750001907348633

Token 1358: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3308536112308502
    2. ']' → logprob: -1.5808535814285278
    3. ' =' → logprob: -2.7058537006378174
    4. ']=' → logprob: -4.705853462219238
    5. ' ]' → logprob: -10.705853462219238
    6. ')' → logprob: -12.955853462219238
    7. '       ' → logprob: -13.205853462219238
    8. '[' → logprob: -13.330853462219238
    9. '           ' → logprob: -13.830853462219238
    10. '   ' → logprob: -13.830853462219238

Token 1359: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.004078758880496025
    2. ' =' → logprob: -5.5040788650512695
    3. '=int' → logprob: -15.12907886505127
    4. '＝' → logprob: -17.754077911376953
    5. '   ' → logprob: -18.379077911376953
    6. '=
' → logprob: -18.379077911376953
    7. '=

' → logprob: -19.129077911376953
    8. '=len' → logprob: -19.504077911376953
    9. '=num' → logprob: -20.129077911376953
    10. '.=' → logprob: -20.254077911376953

Token 1360: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.0013314292300492525
    2. ' tmp' → logprob: -6.751331329345703
    3. '(tmp' → logprob: -8.751331329345703
    4. 'dist' → logprob: -13.626331329345703
    5. 'div' → logprob: -13.751331329345703
    6. '[tmp' → logprob: -15.251331329345703
    7. ' (' → logprob: -15.501331329345703
    8. '	tmp' → logprob: -16.751331329345703
    9. '/tmp' → logprob: -16.876331329345703
    10. '$tmp' → logprob: -16.876331329345703

Token 1361: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -7.584239938296378e-06
    2. '//' → logprob: -12.125007629394531
    3. 'j' → logprob: -14.250007629394531
    4. '[' → logprob: -14.375007629394531
    5. ' //' → logprob: -14.875007629394531
    6. '```' → logprob: -15.625007629394531
    7. '[i' → logprob: -16.12500762939453
    8. '(j' → logprob: -16.75000762939453
    9. '
' → logprob: -17.12500762939453
    10. '#' → logprob: -17.50000762939453

Token 1362: ']' (ID: 60)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.3014880120754242
    2. ' //' → logprob: -1.9264880418777466
    3. ']' → logprob: -2.176487922668457
    4. '#' → logprob: -7.176487922668457
    5. ')' → logprob: -8.551487922668457
    6. ' ' → logprob: -9.676487922668457
    7. ' ' → logprob: -9.801487922668457
    8. '
' → logprob: -10.676487922668457
    9. '//=' → logprob: -10.926487922668457
    10. ')//' → logprob: -11.301487922668457

Token 1363: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.11453842371702194
    2. ' //' → logprob: -2.2395384311676025
    3. '
' → logprob: -6.739538192749023
    4. '//=' → logprob: -8.364538192749023
    5. '#' → logprob: -8.989538192749023
    6. ' ' → logprob: -9.239538192749023
    7. '   ' → logprob: -10.864538192749023
    8. ' ' → logprob: -11.114538192749023
    9. 'div' → logprob: -11.239538192749023
    10. ' 
' → logprob: -11.864538192749023

Token 1364: ' (' (ID: 350)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.07889155298471451
    2. '(' → logprob: -2.5788915157318115
    3. ' ' → logprob: -13.82889175415039
    4. '100' → logprob: -14.57889175415039
    5. ' (' → logprob: -15.07889175415039
    6. '```' → logprob: -19.07889175415039
    7. '۱۰' → logprob: -19.07889175415039
    8. '\(' → logprob: -19.20389175415039
    9. '１０' → logprob: -19.32889175415039
    10. '   ' → logprob: -19.57889175415039

Token 1365: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -3.128163257315464e-07
    2. '(' → logprob: -16.5
    3. '100' → logprob: -16.5
    4. ' ' → logprob: -17.75
    5. '１０' → logprob: -21.5
    6. '۱۰' → logprob: -22.625
    7. '   ' → logprob: -24.5
    8. '​' → logprob: -25.625
    9. '१०' → logprob: -25.875
    10. '1' → logprob: -25.875

Token 1366: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.6931799054145813
    2. '15' → logprob: -0.6931799054145813
    3. '```' → logprob: -10.943180084228516
    4. ' **' → logprob: -11.943180084228516
    5. ' ' → logprob: -12.568180084228516
    6. '^' → logprob: -13.193180084228516
    7. '***' → logprob: -13.193180084228516
    8. '015' → logprob: -14.818180084228516
    9. '*' → logprob: -14.943180084228516
    10. '+' → logprob: -15.068180084228516

Token 1367: ' ' (ID: 220)
  Prédit: '15'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '15' → logprob: 0.0
    2. '015' → logprob: -19.375
    3. ' ' → logprob: -20.5
    4. '１５' → logprob: -20.5
    5. '۱۵' → logprob: -20.625
    6. '```' → logprob: -21.0
    7. '' → logprob: -21.0
    8. '१५' → logprob: -21.375
    9. '十五' → logprob: -21.5
    10. '
' → logprob: -21.875

Token 1368: '15' (ID: 1055)
  Prédit: '15'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '15' → logprob: 0.0
    2. '```' → logprob: -20.375
    3. '１５' → logprob: -20.625
    4. ' ' → logprob: -20.625
    5. '۱۵' → logprob: -20.875
    6. '015' → logprob: -21.0
    7. '18' → logprob: -21.25
    8. '' → logprob: -21.375
    9. '1' → logprob: -21.375
    10. '150' → logprob: -22.0

Token 1369: ')

' (ID: 1029)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1370: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -2.816093228830141e-06
    2. ' for' → logprob: -13.00000286102295
    3. 'import' → logprob: -14.87500286102295
    4. '```' → logprob: -15.87500286102295
    5. 'print' → logprob: -17.500001907348633
    6. '#' → logprob: -18.375001907348633
    7. '	for' → logprob: -19.625001907348633
    8. 'output' → logprob: -19.750001907348633
    9. '
' → logprob: -19.875001907348633
    10. 'while' → logprob: -20.000001907348633

Token 1371: ' a' (ID: 261)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.9837694764137268
    2. '_i' → logprob: -1.233769416809082
    3. '_' → logprob: -1.483769416809082
    4. 'x' → logprob: -3.733769416809082
    5. '_query' → logprob: -4.358769416809082
    6. '_j' → logprob: -4.483769416809082
    7. 'query' → logprob: -4.483769416809082
    8. '_q' → logprob: -4.483769416809082
    9. 'q' → logprob: -4.983769416809082
    10. 'line' → logprob: -5.233769416809082

Token 1372: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005710608791559935
    2. 'in' → logprob: -5.255710601806641
    3. ' in' → logprob: -8.38071060180664
    4. ',b' → logprob: -9.13071060180664
    5. ' ,' → logprob: -9.13071060180664
    6. ',
' → logprob: -11.25571060180664
    7. '_,' → logprob: -13.00571060180664
    8. 'b' → logprob: -13.00571060180664
    9. ',in' → logprob: -13.00571060180664
    10. ',a' → logprob: -13.63071060180664

Token 1373: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.001170225441455841
    2. ' b' → logprob: -6.7511701583862305
    3. '_b' → logprob: -22.376171112060547
    4. ',b' → logprob: -22.501171112060547
    5. '	b' → logprob: -22.501171112060547
    6. ' ' → logprob: -23.251171112060547
    7. ',' → logprob: -24.251171112060547
    8. '   ' → logprob: -24.501171112060547
    9. '
' → logprob: -24.751171112060547
    10. ')b' → logprob: -25.001171112060547

Token 1374: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.4505453109741211
    2. ' in' → logprob: -1.075545310974121
    3. ',' → logprob: -4.075545310974121
    4. ':' → logprob: -6.075545310974121
    5. 'a' → logprob: -7.950545310974121
    6. '_in' → logprob: -8.325545310974121
    7. '   ' → logprob: -8.450545310974121
    8. '(' → logprob: -8.575545310974121
    9. '[' → logprob: -8.575545310974121
    10. 'In' → logprob: -8.575545310974121

Token 1375: ' query' (ID: 5703)
  Prédit: 'query'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'query' → logprob: -0.05127786472439766
    2. ' query' → logprob: -3.0512778759002686
    3. '[' → logprob: -7.1762776374816895
    4. 'input' → logprob: -7.3012776374816895
    5. 'range' → logprob: -7.3012776374816895
    6. 'a' → logprob: -8.301278114318848
    7. 'in' → logprob: -9.801278114318848
    8. '(query' → logprob: -9.801278114318848
    9. '[a' → logprob: -10.176278114318848
    10. ' input' → logprob: -10.551278114318848

Token 1376: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0022314980160444975
    2. ':
' → logprob: -6.252231597900391
    3. ',' → logprob: -8.50223159790039
    4. '   ' → logprob: -11.00223159790039
    5. 'a' → logprob: -11.37723159790039
    6. ',a' → logprob: -11.37723159790039
    7. ' :' → logprob: -11.50223159790039
    8. '[' → logprob: -12.00223159790039
    9. '(a' → logprob: -12.25223159790039
    10. '=' → logprob: -12.37723159790039

Token 1377: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13766901195049286
    2. ' a' → logprob: -2.637669086456299
    3. ' print' → logprob: -3.637669086456299
    4. 'a' → logprob: -4.512669086456299
    5. '<|end|>' → logprob: -4.637669086456299
    6. 'print' → logprob: -6.012669086456299
    7. '```' → logprob: -6.012669086456299
    8. '    
' → logprob: -6.512669086456299
    9. '	a' → logprob: -7.012669086456299
    10. ' 
' → logprob: -7.262669086456299

Token 1378: ' #' (ID: 1069)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3418695032596588
    2. '   ' → logprob: -1.5918694734573364
    3. ' a' → logprob: -2.466869592666626
    4. '```' → logprob: -7.591869354248047
    5. '	a' → logprob: -8.466869354248047
    6. 'b' → logprob: -9.091869354248047
    7. ' if' → logprob: -9.341869354248047
    8. 'if' → logprob: -9.841869354248047
    9. '[' → logprob: -10.716869354248047
    10. ' ' → logprob: -10.716869354248047

Token 1379: ' Pour' (ID: 13931)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.1927376687526703
    2. ' a' → logprob: -1.9427376985549927
    3. '   ' → logprob: -3.442737579345703
    4. 'b' → logprob: -12.567737579345703
    5. 'if' → logprob: -12.817737579345703
    6. '	a' → logprob: -12.942737579345703
    7. ' if' → logprob: -13.192737579345703
    8. '_a' → logprob: -13.442737579345703
    9. ' ' → logprob: -13.817737579345703
    10. '```' → logprob: -14.942737579345703

Token 1380: ' chaque' (ID: 21194)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00398982735350728
    2. ' a' → logprob: -5.7539896965026855
    3. '_a' → logprob: -7.8789896965026855
    4. '_' → logprob: -8.003990173339844
    5. 'b' → logprob: -10.128990173339844
    6. '(a' → logprob: -11.128990173339844
    7. '[a' → logprob: -11.503990173339844
    8. ' ' → logprob: -11.628990173339844
    9. '[' → logprob: -12.253990173339844
    10. ' _' → logprob: -12.503990173339844

Token 1381: ' requ' (ID: 7028)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.007059058174490929
    2. ' a' → logprob: -5.007059097290039
    3. '(a' → logprob: -8.007059097290039
    4. ' (' → logprob: -12.132059097290039
    5. ' in' → logprob: -13.257059097290039
    6. '_a' → logprob: -13.757059097290039
    7. '(' → logprob: -13.882059097290039
    8. '```' → logprob: -14.257059097290039
    9. '	a' → logprob: -15.382059097290039
    10. 'in' → logprob: -15.757059097290039

Token 1382: 'ête' (ID: 16808)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.23136849701404572
    2. ',' → logprob: -1.6063685417175293
    3. ',a' → logprob: -6.106368541717529
    4. 'e' → logprob: -6.981368541717529
    5. ' a' → logprob: -6.981368541717529
    6. 'é' → logprob: -6.981368541717529
    7. '(a' → logprob: -8.856368064880371
    8. 'er' → logprob: -9.231368064880371
    9. '=' → logprob: -9.356368064880371
    10. 'for' → logprob: -9.856368064880371

Token 1383: ' pos' (ID: 1253)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1834038645029068
    2. 'a' → logprob: -2.183403968811035
    3. '<|end|>' → logprob: -4.058403968811035
    4. ':' → logprob: -4.683403968811035
    5. '    
' → logprob: -4.933403968811035
    6. ' a' → logprob: -4.933403968811035
    7. '(a' → logprob: -5.933403968811035
    8. '[a' → logprob: -6.183403968811035
    9. '```' → logprob: -6.558403968811035
    10. '[' → logprob: -6.683403968811035

Token 1384: 'ée' (ID: 2894)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.48668819665908813
    2. '   ' → logprob: -0.9866881966590881
    3. ',' → logprob: -6.111688137054443
    4. ' =' → logprob: -6.236688137054443
    5. '       ' → logprob: -6.236688137054443
    6. 'er' → logprob: -6.361688137054443
    7. '=' → logprob: -6.486688137054443
    8. ' a' → logprob: -6.736688137054443
    9. ' ' → logprob: -7.361688137054443
    10. '  ' → logprob: -8.611688613891602

Token 1385: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04055433347821236
    2. 'a' → logprob: -3.5405542850494385
    3. ' a' → logprob: -5.790554523468018
    4. ':' → logprob: -5.915554523468018
    5. '```' → logprob: -7.290554523468018
    6. '<|end|>' → logprob: -7.290554523468018
    7. '    
' → logprob: -7.415554523468018
    8. 'b' → logprob: -7.790554523468018
    9. '(a' → logprob: -7.915554523468018
    10. ':
' → logprob: -8.29055404663086

Token 1386: '   ' (ID: 271)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5606556534767151
    2. '   ' → logprob: -0.9356556534767151
    3. ' a' → logprob: -3.6856555938720703
    4. 'if' → logprob: -5.56065559387207
    5. 'b' → logprob: -6.68565559387207
    6. '[' → logprob: -7.06065559387207
    7. '```' → logprob: -7.18565559387207
    8. '	a' → logprob: -7.31065559387207
    9. ' if' → logprob: -7.31065559387207
    10. '<|end|>' → logprob: -7.56065559387207

Token 1387: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.0013364320620894432
    2. 'print' → logprob: -6.751336574554443
    3. ' a' → logprob: -8.876336097717285
    4. '   ' → logprob: -11.001336097717285
    5. 'if' → logprob: -12.001336097717285
    6. ' print' → logprob: -12.751336097717285
    7. '```' → logprob: -14.751336097717285
    8. '_a' → logprob: -15.376336097717285
    9. 'b' → logprob: -16.0013370513916
    10. 'result' → logprob: -16.3763370513916

Token 1388: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.10787031799554825
    2. ' -=' → logprob: -2.35787034034729
    3. '-' → logprob: -5.232870101928711
    4. ',' → logprob: -6.357870101928711
    5. '=' → logprob: -8.482870101928711
    6. ',b' → logprob: -8.857870101928711
    7. 'a' → logprob: -9.232870101928711
    8. '   ' → logprob: -9.982870101928711
    9. 'print' → logprob: -11.232870101928711
    10. 'b' → logprob: -11.232870101928711

Token 1389: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '   ' → logprob: -19.625001907348633
    4. '<|end|>' → logprob: -19.750001907348633
    5. '```' → logprob: -20.875001907348633
    6. '１' → logprob: -22.500001907348633
    7. '۱' → logprob: -23.125001907348633
    8. '১' → logprob: -23.250001907348633
    9. '१' → logprob: -23.500001907348633
    10. '  ' → logprob: -23.750001907348633

Token 1390: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.25
    3. '```' → logprob: -20.0
    4. '<|end|>' → logprob: -20.0
    5. 'a' → logprob: -20.25
    6. '   ' → logprob: -20.375
    7. '１' → logprob: -21.0
    8. '১' → logprob: -21.375
    9. '१' → logprob: -21.625
    10. '۱' → logprob: -21.625

Token 1391: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6531591415405273
    2. 'b' → logprob: -1.4031591415405273
    3. ' b' → logprob: -1.5281591415405273
    4. '	b' → logprob: -4.153159141540527
    5. ',b' → logprob: -7.653159141540527
    6. ' ' → logprob: -7.778159141540527
    7. '  ' → logprob: -9.528159141540527
    8. '    ' → logprob: -10.153159141540527
    9. '[b' → logprob: -10.153159141540527
    10. ',' → logprob: -10.528159141540527

Token 1392: ' #' (ID: 1069)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.002827700227499008
    2. '   ' → logprob: -6.0028276443481445
    3. ' b' → logprob: -8.002827644348145
    4. '	b' → logprob: -11.252827644348145
    5. ',b' → logprob: -12.627827644348145
    6. ' ' → logprob: -14.252827644348145
    7. '  ' → logprob: -15.752827644348145
    8. '*b' → logprob: -16.25282859802246
    9. '.b' → logprob: -16.62782859802246
    10. ',' → logprob: -16.75282859802246

Token 1393: ' On' (ID: 2160)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0006712094182148576
    2. ' b' → logprob: -8.00067138671875
    3. '   ' → logprob: -8.00067138671875
    4. '	b' → logprob: -14.50067138671875
    5. ' ' → logprob: -17.25067138671875
    6. '```' → logprob: -17.75067138671875
    7. '  ' → logprob: -18.75067138671875
    8. '    ' → logprob: -19.62567138671875
    9. 'a' → logprob: -19.87567138671875
    10. '[' → logprob: -19.87567138671875

Token 1394: ' ré' (ID: 3146)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0031313709914684296
    2. 'a' → logprob: -6.12813138961792
    3. ' b' → logprob: -7.25313138961792
    4. '   ' → logprob: -8.503130912780762
    5. ',b' → logprob: -10.753130912780762
    6. '	b' → logprob: -12.003130912780762
    7. '[b' → logprob: -12.753130912780762
    8. ' a' → logprob: -14.003130912780762
    9. ' ' → logprob: -14.503130912780762
    10. '  ' → logprob: -14.503130912780762

Token 1395: 'aj' (ID: 1255)
  Prédit: 'du'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'du' → logprob: -0.8399757146835327
    2. 'duit' → logprob: -0.9649757146835327
    3. 'duce' → logprob: -2.4649758338928223
    4. 'a' → logprob: -3.9649758338928223
    5. 'b' → logprob: -4.339975833892822
    6. 'd' → logprob: -4.464975833892822
    7. 'é' → logprob: -4.589975833892822
    8. 'initial' → logprob: -4.964975833892822
    9. 'duction' → logprob: -5.214975833892822
    10. 'aj' → logprob: -5.339975833892822

Token 1396: 'uste' (ID: 23991)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.9763603210449219
    2. 'aj' → logprob: -1.1013603210449219
    3. '   ' → logprob: -2.101360321044922
    4. 'duit' → logprob: -2.726360321044922
    5. 'du' → logprob: -3.226360321044922
    6. 's' → logprob: -4.601360321044922
    7. 'd' → logprob: -4.601360321044922
    8. 'int' → logprob: -4.726360321044922
    9. 'index' → logprob: -5.351360321044922
    10. 'f' → logprob: -5.351360321044922

Token 1397: ' les' (ID: 1341)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.03282502666115761
    2. '   ' → logprob: -3.907824993133545
    3. ' b' → logprob: -4.657824993133545
    4. 'a' → logprob: -6.282824993133545
    5. ',b' → logprob: -8.032825469970703
    6. ',' → logprob: -8.532825469970703
    7. ' ' → logprob: -8.657825469970703
    8. '	b' → logprob: -9.782825469970703
    9. ' ,' → logprob: -10.657825469970703
    10. '```' → logprob: -11.032825469970703

Token 1398: ' indices' (ID: 30378)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.020213313400745392
    2. ' a' → logprob: -4.5202131271362305
    3. '1' → logprob: -5.2702131271362305
    4. 'b' → logprob: -6.3952131271362305
    5. '0' → logprob: -6.7702131271362305
    6. ' ' → logprob: -8.14521312713623
    7. '-' → logprob: -8.27021312713623
    8. ' b' → logprob: -8.89521312713623
    9. '```' → logprob: -9.14521312713623
    10. '[a' → logprob: -9.52021312713623

Token 1399: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17436854541301727
    2. 'b' → logprob: -1.9243685007095337
    3. ' b' → logprob: -4.424368381500244
    4. '	b' → logprob: -6.924368381500244
    5. ',b' → logprob: -7.299368381500244
    6. ',' → logprob: -8.424368858337402
    7. ' ' → logprob: -9.674368858337402
    8. '[b' → logprob: -10.174368858337402
    9. '```' → logprob: -10.549368858337402
    10. '  ' → logprob: -10.924368858337402

Token 1400: ' partir' (ID: 12100)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005152639001607895
    2. ' ' → logprob: -6.005152702331543
    3. 'a' → logprob: -6.005152702331543
    4. '1' → logprob: -9.505152702331543
    5. 'zero' → logprob: -9.880152702331543
    6. '```' → logprob: -10.755152702331543
    7. ' zéro' → logprob: -11.130152702331543
    8. ' zero' → logprob: -11.380152702331543
    9. 'python' → logprob: -11.505152702331543
    10. ' a' → logprob: -12.005152702331543

Token 1401: ' de' (ID: 334)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1128848791122437
    2. 'a' → logprob: -1.7378848791122437
    3. 'de' → logprob: -2.112884998321533
    4. '=' → logprob: -2.487884998321533
    5. 'à' → logprob: -2.487884998321533
    6. 'def' → logprob: -2.612884998321533
    7. '   ' → logprob: -3.112884998321533
    8. ' de' → logprob: -3.987884998321533
    9. '1' → logprob: -4.112884998321533
    10. '(' → logprob: -4.362884998321533

Token 1402: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01664360985159874
    2. '1' → logprob: -4.266643524169922
    3. ' ' → logprob: -6.391643524169922
    4. 'a' → logprob: -7.141643524169922
    5. '```' → logprob: -12.891643524169922
    6. 'zero' → logprob: -13.016643524169922
    7. ' zero' → logprob: -13.891643524169922
    8. ' a' → logprob: -14.016643524169922
    9. '<|end|>' → logprob: -14.266643524169922
    10. ' zéro' → logprob: -14.266643524169922

Token 1403: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03846118971705437
    2. '0' → logprob: -3.413461208343506
    3. 'a' → logprob: -5.413461208343506
    4. ' ' → logprob: -8.163460731506348
    5. '<|end|>' → logprob: -10.413460731506348
    6. '```' → logprob: -10.788460731506348
    7. '#a' → logprob: -12.788460731506348
    8. 'zero' → logprob: -13.538460731506348
    9. 'b' → logprob: -13.788460731506348
    10. '   ' → logprob: -14.413460731506348

Token 1404: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6533178091049194
    2. 'b' → logprob: -0.7783178091049194
    3. ' b' → logprob: -4.153317928314209
    4. '	b' → logprob: -5.653317928314209
    5. ',b' → logprob: -7.278317928314209
    6. '```' → logprob: -8.90331745147705
    7. ' ' → logprob: -9.15331745147705
    8. '[b' → logprob: -9.15331745147705
    9. '  ' → logprob: -9.90331745147705
    10. '<|end|>' → logprob: -10.27831745147705

Token 1405: '   ' (ID: 271)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.6221147775650024
    2. '   ' → logprob: -0.8721147775650024
    3. ' b' → logprob: -3.122114658355713
    4. '	b' → logprob: -6.872114658355713
    5. '```' → logprob: -11.747115135192871
    6. '    ' → logprob: -12.622115135192871
    7. ' if' → logprob: -12.747115135192871
    8. 'if' → logprob: -12.997115135192871
    9. '  ' → logprob: -13.122115135192871
    10. ',b' → logprob: -13.122115135192871

Token 1406: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -5.860340752406046e-05
    2. ' b' → logprob: -9.7500581741333
    3. '   ' → logprob: -15.3750581741333
    4. 'print' → logprob: -16.875059127807617
    5. '	b' → logprob: -18.875059127807617
    6. '```' → logprob: -21.625059127807617
    7. 'a' → logprob: -22.250059127807617
    8. ' print' → logprob: -22.625059127807617
    9. '_b' → logprob: -23.000059127807617
    10. ' ' → logprob: -23.500059127807617

Token 1407: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.10183190554380417
    2. '-=' → logprob: -2.3518319129943848
    3. '-' → logprob: -6.976831912994385
    4. '   ' → logprob: -7.851831912994385
    5. '=' → logprob: -8.351831436157227
    6. ' ' → logprob: -11.351831436157227
    7. '==' → logprob: -11.851831436157227
    8. ' =' → logprob: -11.851831436157227
    9. ' +=' → logprob: -12.226831436157227
    10. ' ' → logprob: -12.226831436157227

Token 1408: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.451116051815916e-05
    2. ' ' → logprob: -10.625024795532227
    3. '0' → logprob: -15.875024795532227
    4. '   ' → logprob: -17.500024795532227
    5. 'b' → logprob: -18.250024795532227
    6. '-' → logprob: -19.500024795532227
    7. '```' → logprob: -19.875024795532227
    8. ' b' → logprob: -20.875024795532227
    9. '<|end|>' → logprob: -21.500024795532227
    10. '=' → logprob: -21.625024795532227

Token 1409: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.0
    3. '0' → logprob: -19.25
    4. '   ' → logprob: -21.25
    5. '```' → logprob: -22.375
    6. '１' → logprob: -22.5
    7. '-' → logprob: -22.625
    8. '۱' → logprob: -23.625
    9. '१' → logprob: -24.0
    10. '১' → logprob: -24.125

Token 1410: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4871000349521637
    2. '   ' → logprob: -0.9871000051498413
    3. 'if' → logprob: -4.987100124359131
    4. ' print' → logprob: -5.237100124359131
    5. ' if' → logprob: -7.487100124359131
    6. '
' → logprob: -9.237099647521973
    7. '```' → logprob: -9.362099647521973
    8. '	print' → logprob: -10.612099647521973
    9. '    
' → logprob: -11.987099647521973
    10. '``' → logprob: -12.987099647521973

Token 1411: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0024882610887289047
    2. '   ' → logprob: -6.127488136291504
    3. 'if' → logprob: -8.252488136291504
    4. ' print' → logprob: -10.627488136291504
    5. '```' → logprob: -11.002488136291504
    6. '	print' → logprob: -14.252488136291504
    7. 'sys' → logprob: -14.877488136291504
    8. '``' → logprob: -15.627488136291504
    9. '
' → logprob: -15.877488136291504
    10. ' if' → logprob: -16.25248908996582

Token 1412: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00891259778290987
    2. 'if' (adapté à ' if') → logprob: -4.758912563323975
    3. 'result' → logprob: -8.383913040161133
    4. 'res' → logprob: -9.758913040161133
    5. '   ' → logprob: -12.133913040161133
    6. ' print' → logprob: -12.508913040161133
    7. 'sys' → logprob: -13.633913040161133
    8. '```' → logprob: -14.508913040161133
    9. ' if' → logprob: -15.383913040161133
    10. 'val' → logprob: -15.383913040161133

Token 1413: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.010585427284240723
    2. 'a' → logprob: -4.635585308074951
    3. ' ans' → logprob: -7.135585308074951
    4. ' a' → logprob: -11.01058578491211
    5. '(ans' → logprob: -11.88558578491211
    6. 'dist' → logprob: -12.01058578491211
    7. 'abs' → logprob: -14.01058578491211
    8. '	ans' → logprob: -14.13558578491211
    9. '   ' → logprob: -14.88558578491211
    10. ' ' → logprob: -15.26058578491211

Token 1414: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -7.896309739408025e-07
    2. 'a' → logprob: -14.750000953674316
    3. '   ' → logprob: -15.875000953674316
    4. '[b' → logprob: -16.375
    5. '[' → logprob: -17.25
    6. '```' → logprob: -18.5
    7. '[i' → logprob: -19.375
    8. '(a' → logprob: -19.75
    9. '[
' → logprob: -19.75
    10. '[[' → logprob: -20.125

Token 1415: '][' (ID: 2696)
  Prédit: '[b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -0.6065412163734436
    2. '][' → logprob: -1.4815411567687988
    3. '[a' → logprob: -1.4815411567687988
    4. '[' → logprob: -9.731541633605957
    5. '   ' → logprob: -10.231541633605957
    6. 'a' → logprob: -10.356541633605957
    7. ']' → logprob: -11.231541633605957
    8. '```' → logprob: -11.356541633605957
    9. 'b' → logprob: -12.106541633605957
    10. '[v' → logprob: -12.231541633605957

Token 1416: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.9361264946837764e-07
    2. ' b' → logprob: -16.375
    3. '[b' → logprob: -19.125
    4. 'a' → logprob: -19.25
    5. '	b' → logprob: -19.875
    6. '
' → logprob: -21.125
    7. ' ' → logprob: -22.25
    8. '   ' → logprob: -22.75
    9. ']' → logprob: -22.875
    10. '<b' → logprob: -23.0

Token 1417: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5812538862228394
    2. '==' → logprob: -0.8312538862228394
    3. '==-' → logprob: -5.331254005432129
    4. '<' → logprob: -8.331254005432129
    5. '>' → logprob: -9.456254005432129
    6. '>=' → logprob: -10.206254005432129
    7. ' <' → logprob: -10.581254005432129
    8. '   ' → logprob: -10.581254005432129
    9. '[' → logprob: -11.206254005432129
    10. '<=' → logprob: -11.831254005432129

Token 1418: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.035456497222185135
    2. ' ==' → logprob: -3.910456418991089
    3. '==-' → logprob: -4.410456657409668
    4. '>=' → logprob: -6.035456657409668
    5. '<' → logprob: -8.910456657409668
    6. '!=' → logprob: -10.160456657409668
    7. '==
' → logprob: -10.660456657409668
    8. '==(' → logprob: -11.410456657409668
    9. '>' → logprob: -11.535456657409668
    10. '   ' → logprob: -11.910456657409668

Token 1419: ' ' (ID: 220)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.21052993834018707
    2. '0' → logprob: -1.7105299234390259
    3. 'INF' → logprob: -5.085529804229736
    4. 'float' → logprob: -6.210529804229736
    5. '10' → logprob: -7.460529804229736
    6. '-inf' → logprob: -9.210530281066895
    7. 'sys' → logprob: -9.710530281066895
    8. ' -' → logprob: -9.710530281066895
    9. 'inf' → logprob: -9.960530281066895
    10. '-INF' → logprob: -10.710530281066895

Token 1420: '100' (ID: 1353)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0012278467183932662
    2. '0' → logprob: -6.876227855682373
    3. '-inf' → logprob: -8.876227378845215
    4. '10' → logprob: -11.001227378845215
    5. 'INF' → logprob: -11.001227378845215
    6. '-INF' → logprob: -11.626227378845215
    7. ' -' → logprob: -11.751227378845215
    8. 'float' → logprob: -12.626227378845215
    9. '-in' → logprob: -14.251227378845215
    10. 'inf' → logprob: -15.001227378845215

Token 1421: '0' (ID: 15)
  Prédit: '000'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.0036566031631082296
    2. ':' → logprob: -6.003656387329102
    3. '00' → logprob: -7.128656387329102
    4. '0' → logprob: -8.753656387329102
    5. '_' → logprob: -9.503656387329102
    6. '001' → logprob: -9.628656387329102
    7. '**' → logprob: -10.628656387329102
    8. '+' → logprob: -10.753656387329102
    9. ' ' → logprob: -11.503656387329102
    10. '   ' → logprob: -12.503656387329102

Token 1422: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.32833361625671387
    2. ':
' → logprob: -1.3283336162567139
    3. '   ' → logprob: -4.453333854675293
    4. 'print' → logprob: -5.953333854675293
    5. '-' → logprob: -8.703333854675293
    6. ' or' → logprob: -9.078333854675293
    7. ' print' → logprob: -9.328333854675293
    8. '       ' → logprob: -9.328333854675293
    9. ':
' → logprob: -9.703333854675293
    10. '0' → logprob: -10.078333854675293

Token 1423: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14318861067295074
    2. 'print' → logprob: -2.268188714981079
    3. '       ' → logprob: -3.518188714981079
    4. ' print' → logprob: -8.5181884765625
    5. '```' → logprob: -10.0181884765625
    6. '	print' → logprob: -11.6431884765625
    7. '           ' → logprob: -14.6431884765625
    8. '   ' → logprob: -14.7681884765625
    9. '	   ' → logprob: -15.2681884765625
    10. 'printf' → logprob: -15.2681884765625

Token 1424: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.16373629868030548
    2. '   ' → logprob: -2.413736343383789
    3. '       ' → logprob: -2.788736343383789
    4. ' print' → logprob: -10.413736343383789
    5. '-' → logprob: -11.788736343383789
    6. '	print' → logprob: -11.913736343383789
    7. '           ' → logprob: -12.413736343383789
    8. '```' → logprob: -13.038736343383789
    9. '     ' → logprob: -14.288736343383789
    10. '-print' → logprob: -14.663736343383789

Token 1425: ' Convention' (ID: 41493)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38779976963996887
    2. 'print' → logprob: -1.1377997398376465
    3. ' print' → logprob: -7.0127997398376465
    4. '       ' → logprob: -11.387800216674805
    5. '```' → logprob: -11.387800216674805
    6. '	print' → logprob: -13.012800216674805
    7. '    ' → logprob: -14.637800216674805
    8. 'printf' → logprob: -14.762800216674805
    9. '
' → logprob: -14.762800216674805
    10. ' ' → logprob: -14.887800216674805

Token 1426: ' :' (ID: 712)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -1.41080641746521
    2. ':' → logprob: -1.53580641746521
    3. '==' → logprob: -1.78580641746521
    4. '       ' → logprob: -2.28580641746521
    5. '   ' → logprob: -2.28580641746521
    6. 'or' → logprob: -2.66080641746521
    7. 'print' → logprob: -2.91080641746521
    8. ' ==' → logprob: -4.160806655883789
    9. 'and' → logprob: -5.285806655883789
    10. '    ' → logprob: -5.535806655883789

Token 1427: ' si' (ID: 1784)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.014658666215837002
    2. '   ' → logprob: -4.264658451080322
    3. ' print' → logprob: -7.639658451080322
    4. '       ' → logprob: -11.76465892791748
    5. '```' → logprob: -12.51465892791748
    6. '	print' → logprob: -13.51465892791748
    7. '#print' → logprob: -15.13965892791748
    8. '#' → logprob: -15.51465892791748
    9. '    ' → logprob: -15.51465892791748
    10. '    
' → logprob: -15.76465892791748

Token 1428: ' la' (ID: 557)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0005703099304810166
    2. ' ans' → logprob: -7.500570297241211
    3. '(ans' → logprob: -11.000570297241211
    4. '	ans' → logprob: -15.125570297241211
    5. 'dist' → logprob: -15.375570297241211
    6. '   ' → logprob: -17.00057029724121
    7. 'answer' → logprob: -17.62557029724121
    8. 'matrix' → logprob: -18.00057029724121
    9. '_ans' → logprob: -18.25057029724121
    10. '```' → logprob: -18.25057029724121

Token 1429: ' distance' (ID: 9324)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -8.2994620242971e-06
    2. ' ans' → logprob: -12.375008583068848
    3. 'dist' → logprob: -13.250008583068848
    4. '(ans' → logprob: -13.500008583068848
    5. 'a' → logprob: -15.000008583068848
    6. '	ans' → logprob: -16.12500762939453
    7. 'answer' → logprob: -16.25000762939453
    8. 'matrix' → logprob: -16.50000762939453
    9. '```' → logprob: -16.75000762939453
    10. '#' → logprob: -17.25000762939453

Token 1430: ' est' (ID: 893)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.500195324420929
    2. 'ans' → logprob: -1.0001952648162842
    3. '>=' → logprob: -4.500195503234863
    4. ' ==' → logprob: -4.875195503234863
    5. ' ans' → logprob: -6.000195503234863
    6. '[a' → logprob: -6.750195503234863
    7. '(ans' → logprob: -7.125195503234863
    8. '[' → logprob: -7.125195503234863
    9. '   ' → logprob: -7.750195503234863
    10. 'a' → logprob: -8.125195503234863

Token 1431: ' "' (ID: 392)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.0015221221838146448
    2. '100' → logprob: -6.626522064208984
    3. '10' → logprob: -9.001522064208984
    4. 'inf' → logprob: -10.251522064208984
    5. '>=' → logprob: -11.126522064208984
    6. ' INF' → logprob: -11.876522064208984
    7. '==' → logprob: -12.001522064208984
    8. '=' → logprob: -12.626522064208984
    9. '   ' → logprob: -13.626522064208984
    10. '999' → logprob: -13.626522064208984

Token 1432: 'im' (ID: 321)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.1900005340576172
    2. '100' → logprob: -1.8150005340576172
    3. '10' → logprob: -5.315000534057617
    4. 'inf' → logprob: -5.940000534057617
    5. '>=' → logprob: -6.815000534057617
    6. '==' → logprob: -6.815000534057617
    7. ' INF' → logprob: -9.190000534057617
    8. ' ' → logprob: -9.315000534057617
    9. 'ans' → logprob: -9.815000534057617
    10. '999' → logprob: -9.940000534057617

Token 1433: 'possible' (ID: 50714)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.7017807960510254
    2. 'possible' → logprob: -0.7017807960510254
    3. 'port' → logprob: -5.326780796051025
    4. 'poss' → logprob: -6.451780796051025
    5. 'f' → logprob: -6.701780796051025
    6. 'pl' → logprob: -8.076780319213867
    7. 'INF' → logprob: -8.201780319213867
    8. 'Possible' → logprob: -9.451780319213867
    9. 'pas' → logprob: -9.701780319213867
    10. 'pos' → logprob: -9.701780319213867

Token 1434: '"' (ID: 1)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6300548911094666
    2. ',' → logprob: -1.3800549507141113
    3. ' or' → logprob: -1.7550549507141113
    4. ':' → logprob: -4.380054950714111
    5. 'or' → logprob: -4.630054950714111
    6. '       ' → logprob: -5.255054950714111
    7. ' ou' → logprob: -5.255054950714111
    8. ' to' → logprob: -6.255054950714111
    9. ' à' → logprob: -6.630054950714111
    10. ' ,' → logprob: -6.880054950714111

Token 1435: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8232725858688354
    2. '   ' → logprob: -1.0732725858688354
    3. ' or' → logprob: -2.448272705078125
    4. ':' → logprob: -2.698272705078125
    5. ',' → logprob: -2.823272705078125
    6. ':
' → logprob: -5.573272705078125
    7. 'print' → logprob: -7.198272705078125
    8. ' print' → logprob: -8.073272705078125
    9. ' and' → logprob: -8.323272705078125
    10. '==' → logprob: -8.698272705078125

Token 1436: 'en' (ID: 262)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.001922802533954382
    2. ' ans' → logprob: -6.876922607421875
    3. 'INF' → logprob: -7.251922607421875
    4. 'inf' → logprob: -9.251922607421875
    5. '100' → logprob: -10.376922607421875
    6. '(ans' → logprob: -10.626922607421875
    7. 'dist' → logprob: -11.501922607421875
    8. '   ' → logprob: -11.626922607421875
    9. ' INF' → logprob: -13.001922607421875
    10. '10' → logprob: -13.126922607421875

Token 1437: ' pratique' (ID: 42780)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.35659879446029663
    2. 'inf' → logprob: -1.8565988540649414
    3. 'fin' → logprob: -3.2315988540649414
    4. '```' → logprob: -3.4815988540649414
    5. 'f' → logprob: -3.7315988540649414
    6. 'fait' → logprob: -4.231598854064941
    7. 'raison' → logprob: -4.606598854064941
    8. 'faite' → logprob: -5.981598854064941
    9. 'range' → logprob: -6.106598854064941
    10. 'core' → logprob: -6.106598854064941

Token 1438: ',' (ID: 11)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.03083648532629013
    2. ' ans' → logprob: -3.655836582183838
    3. 'INF' → logprob: -6.155836582183838
    4. '(ans' → logprob: -6.405836582183838
    5. '   ' → logprob: -8.28083610534668
    6. '==' → logprob: -8.90583610534668
    7. 'dist' → logprob: -9.40583610534668
    8. ' INF' → logprob: -9.90583610534668
    9. 'inf' → logprob: -10.15583610534668
    10. ')' → logprob: -10.65583610534668

Token 1439: ' si' (ID: 1784)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.004802245646715164
    2. ' ans' → logprob: -5.629802227020264
    3. 'INF' → logprob: -6.879802227020264
    4. 'inf' → logprob: -9.379802703857422
    5. '(ans' → logprob: -10.129802703857422
    6. ' INF' → logprob: -11.004802703857422
    7. 'dist' → logprob: -11.379802703857422
    8. '100' → logprob: -11.504802703857422
    9. '   ' → logprob: -12.879802703857422
    10. '10' → logprob: -13.129802703857422

Token 1440: ' <=' (ID: 5017)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -4.8828707804204896e-05
    2. ' ans' → logprob: -10.000048637390137
    3. '(ans' → logprob: -13.000048637390137
    4. 'dist' → logprob: -14.625048637390137
    5. '   ' → logprob: -15.125048637390137
    6. 'matrix' → logprob: -15.625048637390137
    7. '	ans' → logprob: -15.875048637390137
    8. '```' → logprob: -17.375049591064453
    9. 'anst' → logprob: -18.500049591064453
    10. 'a' → logprob: -18.625049591064453

Token 1441: ' ' (ID: 220)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.12208431214094162
    2. 'INF' → logprob: -2.372084379196167
    3. '100' → logprob: -4.497084140777588
    4. '0' → logprob: -6.122084140777588
    5. ' ans' → logprob: -6.247084140777588
    6. '10' → logprob: -6.372084140777588
    7. '999' → logprob: -6.497084140777588
    8. 'inf' → logprob: -7.372084140777588
    9. '   ' → logprob: -7.497084140777588
    10. ' ' → logprob: -7.997084140777588

Token 1442: '100' (ID: 1353)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.4422534704208374
    2. '0' → logprob: -1.6922534704208374
    3. 'ans' → logprob: -2.567253589630127
    4. '100' → logprob: -3.317253589630127
    5. '999' → logprob: -3.567253589630127
    6. 'n' → logprob: -4.692253589630127
    7. 'l' → logprob: -5.067253589630127
    8. '10' → logprob: -5.442253589630127
    9. '1' → logprob: -5.567253589630127
    10. 'm' → logprob: -6.192253589630127

Token 1443: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.21260517835617065
    2. '**' → logprob: -2.7126052379608154
    3. '000' → logprob: -3.3376052379608154
    4. 'ans' → logprob: -3.5876052379608154
    5. '```' → logprob: -4.462604999542236
    6. '7' → logprob: -4.962604999542236
    7. ' ans' → logprob: -5.212604999542236
    8. '==' → logprob: -5.337604999542236
    9. ' ' → logprob: -5.462604999542236
    10. '   ' → logprob: -5.587604999542236

Token 1444: ' rav' (ID: 26005)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6602646708488464
    2. '0' → logprob: -1.5352647304534912
    3. '   ' → logprob: -2.285264730453491
    4. '000' → logprob: -3.410264730453491
    5. ',' → logprob: -3.910264730453491
    6. ')' → logprob: -4.035264492034912
    7. ' or' → logprob: -4.160264492034912
    8. '),' → logprob: -4.285264492034912
    9. '==' → logprob: -4.660264492034912
    10. '):' → logprob: -5.035264492034912

Token 1445: 'itos' (ID: 9361)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1962052285671234
    2. '   ' → logprob: -1.8212052583694458
    3. 'dist' → logprob: -5.696205139160156
    4. ')' → logprob: -6.196205139160156
    5. '000' → logprob: -6.446205139160156
    6. '+' → logprob: -7.071205139160156
    7. ' ' → logprob: -7.071205139160156
    8. '00' → logprob: -7.071205139160156
    9. 'ans' → logprob: -7.196205139160156
    10. 'ist' → logprob: -7.571205139160156

Token 1446: ' c' (ID: 274)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7812483310699463
    2. ' or' → logprob: -1.6562483310699463
    3. '):' → logprob: -2.4062483310699463
    4. '   ' → logprob: -2.6562483310699463
    5. 'or' → logprob: -2.7812483310699463
    6. '),' → logprob: -2.9062483310699463
    7. '0' → logprob: -3.9062483310699463
    8. ',' → logprob: -3.9062483310699463
    9. ')' → logprob: -4.281248092651367
    10. '==' → logprob: -5.031248092651367

Token 1447: ''est' (ID: 6616)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2512010633945465
    2. '0' → logprob: -2.1262011528015137
    3. '==' → logprob: -3.8762011528015137
    4. '000' → logprob: -4.126201152801514
    5. '00' → logprob: -4.251201152801514
    6. ',' → logprob: -4.251201152801514
    7. '):' → logprob: -4.751201152801514
    8. ':
' → logprob: -5.501201152801514
    9. ')' → logprob: -5.501201152801514
    10. '),' → logprob: -6.126201152801514

Token 1448: ' possible' (ID: 4149)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0080859661102295
    2. ':' → logprob: -1.6330859661102295
    3. 'False' → logprob: -1.8830859661102295
    4. '>' → logprob: -2.7580859661102295
    5. ' False' → logprob: -2.8830859661102295
    6. ' ' → logprob: -3.6330859661102295
    7. '.' → logprob: -3.8830859661102295
    8. '>=' → logprob: -3.8830859661102295
    9. ' not' → logprob: -4.258086204528809
    10. '0' → logprob: -4.508086204528809

Token 1449: ')
' (ID: 446)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1811484694480896
    2. '   ' → logprob: -2.6811485290527344
    3. ':
' → logprob: -3.3061485290527344
    4. ' or' → logprob: -4.181148529052734
    5. '0' → logprob: -4.431148529052734
    6. ' and' → logprob: -4.931148529052734
    7. '==' → logprob: -5.556148529052734
    8. ')' → logprob: -6.056148529052734
    9. ',' → logprob: -6.056148529052734
    10. '-' → logprob: -6.056148529052734

Token 1450: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12494952976703644
    2. '       ' → logprob: -2.2499494552612305
    3. 'continue' → logprob: -5.3749494552612305
    4. ':' → logprob: -5.9999494552612305
    5. ':
' → logprob: -6.4999494552612305
    6. 'print' → logprob: -6.6249494552612305
    7. ' continue' → logprob: -6.7499494552612305
    8. ' or' → logprob: -7.6249494552612305
    9. ' print' → logprob: -8.24994945526123
    10. '```' → logprob: -10.12494945526123

Token 1451: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.003631431143730879
    2. '   ' → logprob: -5.628631591796875
    3. ' print' → logprob: -11.128631591796875
    4. '```' → logprob: -11.628631591796875
    5. '       ' → logprob: -12.003631591796875
    6. 'printf' → logprob: -14.628631591796875
    7. '	print' → logprob: -15.003631591796875
    8. '#' → logprob: -15.628631591796875
    9. '#print' → logprob: -16.003631591796875
    10. '
' → logprob: -16.253631591796875

Token 1452: '(-' (ID: 8087)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00016182278341148049
    2. '100' → logprob: -9.500162124633789
    3. ' -' → logprob: -9.750162124633789
    4. '-inf' → logprob: -11.625162124633789
    5. '10' → logprob: -11.750162124633789
    6. '   ' → logprob: -12.000162124633789
    7. '(-' → logprob: -13.625162124633789
    8. '"' → logprob: -13.875162124633789
    9. '\-' → logprob: -14.125162124633789
    10. '-INF' → logprob: -14.375162124633789

Token 1453: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004896456957794726
    2. ' ' → logprob: -7.625489711761475
    3. '   ' → logprob: -13.875489234924316
    4. '100' → logprob: -15.625489234924316
    5. '```' → logprob: -15.875489234924316
    6. '  ' → logprob: -16.125490188598633
    7. '１' → logprob: -16.875490188598633
    8. '       ' → logprob: -17.250490188598633
    9. '2' → logprob: -17.500490188598633
    10. '`' → logprob: -17.750490188598633

Token 1454: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07342850416898727
    2. ')
' → logprob: -2.9484283924102783
    3. '   ' → logprob: -4.073428630828857
    4. 'else' → logprob: -6.698428630828857
    5. ' else' → logprob: -9.8234281539917
    6. ')
' → logprob: -10.5734281539917
    7. 'if' → logprob: -10.6984281539917
    8. ' if' → logprob: -11.9484281539917
    9. '       ' → logprob: -12.8234281539917
    10. '```' → logprob: -12.8234281539917

Token 1455: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27905774116516113
    2. 'else' → logprob: -1.9040577411651611
    3. '<|end|>' → logprob: -2.654057741165161
    4. ' else' → logprob: -3.904057741165161
    5. '       ' → logprob: -6.654057502746582
    6. '<|end|>' → logprob: -7.654057502746582
    7. ')' → logprob: -7.904057502746582
    8. ' or' → logprob: -8.029057502746582
    9. 'elif' → logprob: -8.154057502746582
    10. '	else' → logprob: -8.779057502746582

Token 1456: ' #' (ID: 1069)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.3503667414188385
    2. '   ' → logprob: -1.2253667116165161
    3. ' else' → logprob: -7.225366592407227
    4. 'continue' → logprob: -7.475366592407227
    5. 'elif' → logprob: -8.100366592407227
    6. '       ' → logprob: -8.850366592407227
    7. '<|end|>' → logprob: -9.850366592407227
    8. '```' → logprob: -10.475366592407227
    9. '	else' → logprob: -10.725366592407227
    10. '
' → logprob: -11.225366592407227

Token 1457: ' On' (ID: 2160)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.03976886346936226
    2. '   ' → logprob: -3.789768934249878
    3. 'if' → logprob: -4.914768695831299
    4. 'continue' → logprob: -5.664768695831299
    5. 'print' → logprob: -6.164768695831299
    6. '-' → logprob: -6.289768695831299
    7. ' else' → logprob: -6.789768695831299
    8. 'elif' → logprob: -8.414769172668457
    9. '       ' → logprob: -9.914769172668457
    10. '...' → logprob: -10.039769172668457

Token 1458: ' affiche' (ID: 127479)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.2945736050605774
    2. '   ' → logprob: -2.0445735454559326
    3. ' else' → logprob: -2.5445735454559326
    4. 'continue' → logprob: -3.9195735454559326
    5. ' continue' → logprob: -4.544573783874512
    6. 'print' → logprob: -4.544573783874512
    7. '       ' → logprob: -5.669573783874512
    8. 'elif' → logprob: -7.544573783874512
    9. ' print' → logprob: -8.169573783874512
    10. '  ' → logprob: -8.419573783874512

Token 1459: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0024977754801511765
    2. ' -' → logprob: -6.002497673034668
    3. '100' → logprob: -11.502497673034668
    4. ' ' → logprob: -11.627497673034668
    5. '   ' → logprob: -13.002497673034668
    6. '(-' → logprob: -15.377497673034668
    7. '  ' → logprob: -15.377497673034668
    8. '```' → logprob: -15.627497673034668
    9. '(' → logprob: -16.127498626708984
    10. '    ' → logprob: -17.252498626708984

Token 1460: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '```' → logprob: -17.375003814697266
    4. '   ' → logprob: -19.375003814697266
    5. '(' → logprob: -19.500003814697266
    6. '-' → logprob: -20.250003814697266
    7. '１' → logprob: -20.375003814697266
    8. ' ' → logprob: -20.625003814697266
    9. '`' → logprob: -20.875003814697266
    10. ' -' → logprob: -21.000003814697266

Token 1461: ' si' (ID: 1784)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0011206917697563767
    2. 'else' → logprob: -7.126120567321777
    3. '<|end|>' → logprob: -8.626120567321777
    4. '       ' → logprob: -9.501120567321777
    5. 'continue' → logprob: -11.001120567321777
    6. ')' → logprob: -11.251120567321777
    7. ' else' → logprob: -11.251120567321777
    8. 'elif' → logprob: -11.876120567321777
    9. '.' → logprob: -12.876120567321777
    10. '...' → logprob: -12.876120567321777

Token 1462: ' la' (ID: 557)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.007712985388934612
    2. ' ans' → logprob: -4.8827128410339355
    3. '(ans' → logprob: -9.507713317871094
    4. '   ' → logprob: -10.882713317871094
    5. 'not' → logprob: -13.007713317871094
    6. '	ans' → logprob: -13.257713317871094
    7. '       ' → logprob: -13.632713317871094
    8. 'True' → logprob: -13.882713317871094
    9. '  ' → logprob: -14.007713317871094
    10. 'dist' → logprob: -14.007713317871094

Token 1463: ' route' (ID: 9656)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.00020008347928524017
    2. ' ans' → logprob: -9.125200271606445
    3. 'a' → logprob: -10.250200271606445
    4. 'dist' → logprob: -10.375200271606445
    5. '(ans' → logprob: -11.125200271606445
    6. '#' → logprob: -12.500200271606445
    7. 'distance' → logprob: -13.750200271606445
    8. 'anst' → logprob: -14.000200271606445
    9. 'not' → logprob: -14.375200271606445
    10. 'print' → logprob: -14.625200271606445

Token 1464: ' est' (ID: 893)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4454997479915619
    2. ' ==' → logprob: -1.5704997777938843
    3. 'est' → logprob: -2.6954996585845947
    4. 'n' → logprob: -3.5704996585845947
    5. '   ' → logprob: -3.9454996585845947
    6. ' n' → logprob: -3.9454996585845947
    7. ' est' → logprob: -4.820499897003174
    8. 'in' → logprob: -5.945499897003174
    9. '==-' → logprob: -6.445499897003174
    10. 'a' → logprob: -6.820499897003174

Token 1465: ' impossible' (ID: 19786)
  Prédit: 'inf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.6281473636627197
    2. 'in' → logprob: -1.3781473636627197
    3. ' impossible' → logprob: -2.3781473636627197
    4. 'im' → logprob: -2.3781473636627197
    5. '-' → logprob: -4.253147125244141
    6. 'not' → logprob: -4.628147125244141
    7. 'Impossible' → logprob: -7.003147125244141
    8. '100' → logprob: -7.503147125244141
    9. '   ' → logprob: -7.628147125244141
    10. ' inf' → logprob: -7.753147125244141

Token 1466: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009638655465096235
    2. '<|end|>' → logprob: -7.5009636878967285
    3. 'else' → logprob: -8.875964164733887
    4. ')' → logprob: -9.125964164733887
    5. '       ' → logprob: -9.250964164733887
    6. ' else' → logprob: -11.375964164733887
    7. '```' → logprob: -11.750964164733887
    8. '.' → logprob: -11.875964164733887
    9. '...' → logprob: -11.875964164733887
    10. 'continue' → logprob: -12.000964164733887

Token 1467: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.05228814110159874
    2. '   ' → logprob: -3.052288055419922
    3. ' else' → logprob: -5.677288055419922
    4. 'elif' → logprob: -9.052288055419922
    5. '```' → logprob: -10.177288055419922
    6. '<|end|>' → logprob: -10.302288055419922
    7. 'continue' → logprob: -10.427288055419922
    8. '	else' → logprob: -10.552288055419922
    9. ' ' → logprob: -12.302288055419922
    10. ')' → logprob: -12.552288055419922

Token 1468: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5515894293785095
    2. 'else' (adapté à ' else') → logprob: -1.8015894889831543
    3. '       ' → logprob: -2.3015894889831543
    4. ':' → logprob: -2.6765894889831543
    5. ' else' → logprob: -3.3015894889831543
    6. '==' → logprob: -4.051589488983154
    7. ':
' → logprob: -5.051589488983154
    8. '    ' → logprob: -5.176589488983154
    9. ' ' → logprob: -5.551589488983154
    10. '  ' → logprob: -5.926589488983154

Token 1469: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014727138914167881
    2. ':' → logprob: -4.7647271156311035
    3. ' print' → logprob: -5.7647271156311035
    4. '   ' → logprob: -6.7647271156311035
    5. ':
' → logprob: -7.0147271156311035
    6. 'print' → logprob: -7.1397271156311035
    7. ' :' → logprob: -10.514727592468262
    8. '(print' → logprob: -10.514727592468262
    9. '    ' → logprob: -11.389727592468262
    10. '     ' → logprob: -11.764727592468262

Token 1470: '       ' (ID: 309)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6298552751541138
    2. ' print' → logprob: -1.1298552751541138
    3. '   ' → logprob: -2.629855155944824
    4. '       ' → logprob: -2.629855155944824
    5. '```' → logprob: -9.629855155944824
    6. '	print' → logprob: -12.754855155944824
    7. '           ' → logprob: -13.129855155944824
    8. '    ' → logprob: -13.629855155944824
    9. '     ' → logprob: -14.879855155944824
    10. '``' → logprob: -15.254855155944824

Token 1471: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0004320996522437781
    2. ' print' → logprob: -7.750432014465332
    3. '   ' → logprob: -13.625432014465332
    4. '```' → logprob: -15.625432014465332
    5. '	print' → logprob: -17.37543296813965
    6. '       ' → logprob: -19.75043296813965
    7. ' ' → logprob: -21.00043296813965
    8. '``' → logprob: -21.12543296813965
    9. 'Print' → logprob: -21.87543296813965
    10. '.print' → logprob: -22.12543296813965

Token 1472: '(ans' (ID: 70054)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.3869372010231018
    2. '(ans' → logprob: -1.136937141418457
    3. ' ans' → logprob: -9.636937141418457
    4. '	ans' → logprob: -14.011937141418457
    5. '_ans' → logprob: -17.761938095092773
    6. 'ANS' → logprob: -17.886938095092773
    7. '0' → logprob: -18.511938095092773
    8. 'Ans' → logprob: -18.761938095092773
    9. '   ' → logprob: -18.761938095092773
    10. 'anst' → logprob: -19.011938095092773

Token 1473: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -5.512236498361744e-07
    2. 'a' → logprob: -15.875000953674316
    3. '   ' → logprob: -16.0
    4. '[i' → logprob: -16.125
    5. '[' → logprob: -16.5
    6. ' [' → logprob: -17.25
    7. ')[' → logprob: -17.75
    8. '[u' → logprob: -18.875
    9. '[b' → logprob: -20.0
    10. '[[' → logprob: -20.0

Token 1474: '][' (ID: 2696)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.13665464520454407
    2. '[b' → logprob: -2.2616546154022217
    3. '][' → logprob: -3.7616546154022217
    4. 'a' → logprob: -8.7616548538208
    5. '[' → logprob: -9.2616548538208
    6. 'b' → logprob: -11.0116548538208
    7. ' [' → logprob: -11.3866548538208
    8. '   ' → logprob: -11.5116548538208
    9. ']' → logprob: -12.2616548538208
    10. '(a' → logprob: -13.6366548538208

Token 1475: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -5.080963092041202e-06
    2. '[b' → logprob: -12.750004768371582
    3. 'a' → logprob: -13.250004768371582
    4. '   ' → logprob: -15.875004768371582
    5. ' ' → logprob: -16.5000057220459
    6. ' b' → logprob: -17.1250057220459
    7. '```' → logprob: -17.2500057220459
    8. '
' → logprob: -17.3750057220459
    9. '	b' → logprob: -17.3750057220459
    10. '{' → logprob: -18.6250057220459

Token 1476: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4736459888808895e-05
    2. '<|end|>' → logprob: -12.000014305114746
    3. ' )' → logprob: -12.500014305114746
    4. '())' → logprob: -13.250014305114746
    5. ')
' → logprob: -13.750014305114746
    6. '   ' → logprob: -13.875014305114746
    7. '+' → logprob: -15.625014305114746
    8. '}' → logprob: -15.625014305114746
    9. '```' → logprob: -16.000015258789062
    10. '))' → logprob: -16.250015258789062

Token 1477: ' ' (ID: 220)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.46795323491096497
    2. 'if' → logprob: -1.5929532051086426
    3. ':' → logprob: -2.7179532051086426
    4. '   ' → logprob: -3.4679532051086426
    5. ' ==' → logprob: -3.5929532051086426
    6. '[' → logprob: -4.342953205108643
    7. ' if' → logprob: -4.342953205108643
    8. '       ' → logprob: -5.342953205108643
    9. '=' → logprob: -5.467953205108643
    10. '<|end|>' → logprob: -6.217953205108643

Token 1478: ' #' (ID: 1069)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.10334881395101547
    2. 'if' → logprob: -3.353348731994629
    3. ' ==' → logprob: -4.103348731994629
    4. '<|end|>' → logprob: -4.478348731994629
    5. ' ' → logprob: -5.103348731994629
    6. '   ' → logprob: -5.228348731994629
    7. '10' → logprob: -5.478348731994629
    8. '>=' → logprob: -5.603348731994629
    9. '[' → logprob: -6.228348731994629
    10. ':' → logprob: -6.228348731994629

Token 1479: ' Sinon' (ID: 154924)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -6.392202976712724e-06
    2. ' print' → logprob: -12.000006675720215
    3. '   ' → logprob: -17.1250057220459
    4. 'else' → logprob: -18.1250057220459
    5. 'if' → logprob: -18.6250057220459
    6. 'Print' → logprob: -18.8750057220459
    7. '       ' → logprob: -19.1250057220459
    8. '#' → logprob: -19.2500057220459
    9. '	print' → logprob: -19.5000057220459
    10. '```' → logprob: -20.0000057220459

Token 1480: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.21124958992004395
    2. '<|end|>' → logprob: -1.711249589920044
    3. 'print' → logprob: -5.086249351501465
    4. '   ' → logprob: -6.461249351501465
    5. '()' → logprob: -7.711249351501465
    6. '```' → logprob: -7.836249351501465
    7. '  ' → logprob: -8.086249351501465
    8. '#' → logprob: -8.336249351501465
    9. '       ' → logprob: -9.461249351501465
    10. ' ' → logprob: -9.461249351501465

Token 1481: ' on' (ID: 402)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0009118211455643177
    2. ' print' → logprob: -7.000911712646484
    3. '   ' → logprob: -15.875911712646484
    4. '       ' → logprob: -17.125911712646484
    5. '```' → logprob: -17.375911712646484
    6. '    ' → logprob: -17.625911712646484
    7. '	print' → logprob: -18.625911712646484
    8. '
' → logprob: -18.875911712646484
    9. '.print' → logprob: -19.875911712646484
    10. '(print' → logprob: -20.125911712646484

Token 1482: ' affiche' (ID: 127479)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.008627224713563919
    2. ' print' → logprob: -4.758627414703369
    3. '   ' → logprob: -12.633626937866211
    4. '.print' → logprob: -12.633626937866211
    5. ')' → logprob: -13.258626937866211
    6. '	print' → logprob: -13.758626937866211
    7. '    ' → logprob: -14.383626937866211
    8. '(print' → logprob: -14.758626937866211
    9. '#print' → logprob: -14.883626937866211
    10. 'continue' → logprob: -15.008626937866211

Token 1483: ' le' (ID: 505)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.00021366903092712164
    2. '(ans' → logprob: -8.500213623046875
    3. ' ans' → logprob: -11.500213623046875
    4. '	ans' → logprob: -18.625213623046875
    5. 'anst' → logprob: -20.875213623046875
    6. '(' → logprob: -21.000213623046875
    7. 'ann' → logprob: -21.500213623046875
    8. 'a' → logprob: -21.750213623046875
    9. '_ans' → logprob: -22.000213623046875
    10. '0' → logprob: -22.375213623046875

Token 1484: ' nombre' (ID: 9733)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.03040151484310627
    2. ' ans' → logprob: -3.5304014682769775
    3. '(ans' → logprob: -7.405401706695557
    4. 'answer' → logprob: -11.155401229858398
    5. '	ans' → logprob: -11.280401229858398
    6. 'dist' → logprob: -12.655401229858398
    7. 'print' → logprob: -12.655401229858398
    8. '_ans' → logprob: -13.155401229858398
    9. '<|end|>' → logprob: -13.405401229858398
    10. ' ' → logprob: -14.280401229858398

Token 1485: ' minimal' (ID: 19957)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.20031550526618958
    2. '<|end|>' → logprob: -2.825315475463867
    3. '   ' → logprob: -3.200315475463867
    4. ' de' → logprob: -3.700315475463867
    5. 'of' → logprob: -3.825315475463867
    6. ' ' → logprob: -4.450315475463867
    7. '    ' → logprob: -5.200315475463867
    8. '<|end|>' → logprob: -5.325315475463867
    9. ')' → logprob: -5.700315475463867
    10. '  ' → logprob: -6.200315475463867

Token 1486: ' de' (ID: 334)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.09109938144683838
    2. '<' → logprob: -3.341099262237549
    3. '[' → logprob: -4.216099262237549
    4. '=' → logprob: -4.216099262237549
    5. '<=' → logprob: -4.591099262237549
    6. ' ==' → logprob: -4.841099262237549
    7. '>=' → logprob: -6.716099262237549
    8. 'if' → logprob: -7.591099262237549
    9. '!=' → logprob: -7.716099262237549
    10. '>' → logprob: -8.091099739074707

Token 1487: ' rav' (ID: 26005)
  Prédit: 'rav'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rav' → logprob: -0.0060393619351089
    2. ' rav' → logprob: -5.131039142608643
    3. 'rans' → logprob: -10.3810396194458
    4. 'ra' → logprob: -11.3810396194458
    5. 'refu' → logprob: -11.5060396194458
    6. 'raf' → logprob: -12.1310396194458
    7. 'ram' → logprob: -12.2560396194458
    8. ' ' → logprob: -12.2560396194458
    9. 'raz' → logprob: -12.2560396194458
    10. ' ' → logprob: -12.5060396194458

Token 1488: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.00033832306507974863
    2. 'ita' → logprob: -8.500338554382324
    3. '[it' → logprob: -10.750338554382324
    4. 'itas' → logprob: -11.000338554382324
    5. 'ит' → logprob: -11.000338554382324
    6. '_' → logprob: -11.750338554382324
    7. 'itations' → logprob: -12.000338554382324
    8. 'av' → logprob: -12.000338554382324
    9. 'avit' → logprob: -12.125338554382324
    10. 'its' → logprob: -12.250338554382324

Token 1489: 'ail' (ID: 663)
  Prédit: 'ail'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ail' → logprob: -0.0003382038848940283
    2. 'a' → logprob: -8.750338554382324
    3. 'ailleurs' → logprob: -9.000338554382324
    4. 'ailability' → logprob: -10.875338554382324
    5. 'eil' → logprob: -11.875338554382324
    6. 'al' → logprob: -12.250338554382324
    7. 'aul' → logprob: -12.625338554382324
    8. 'aille' → logprob: -12.625338554382324
    9. 'ailure' → logprob: -12.625338554382324
    10. 'ails' → logprob: -12.750338554382324

Token 1490: 'lements' (ID: 11031)
  Prédit: 'lements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lements' → logprob: -0.0013270224444568157
    2. 'ements' → logprob: -7.001327037811279
    3. 'ments' → logprob: -8.251326560974121
    4. 'lement' → logprob: -9.751326560974121
    5. 'nements' → logprob: -10.501326560974121
    6. 'l' → logprob: -10.876326560974121
    7. 'cements' → logprob: -11.376326560974121
    8. 'lems' → logprob: -11.376326560974121
    9. 'éments' → logprob: -11.876326560974121
    10. 'ishments' → logprob: -12.376326560974121

Token 1491: ' nécessaires' (ID: 74402)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.2911672294139862
    2. ' ==' → logprob: -2.1661672592163086
    3. '=' → logprob: -3.4161672592163086
    4. 'if' → logprob: -3.7911672592163086
    5. '<' → logprob: -3.9161672592163086
    6. '[' → logprob: -4.416167259216309
    7. '   ' → logprob: -4.541167259216309
    8. '>' → logprob: -4.791167259216309
    9. '10' → logprob: -5.041167259216309
    10. ':' → logprob: -5.166167259216309


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1489
Tokens correctement prédits (1ère position, stricte): 331
Tokens correctement prédits (1ère position, avec adaptation): 349
Tokens correctement prédits (top 10): 782
Précision stricte (1ère position): 22.23%
Précision adaptée (1ère position): 23.44%
Précision (top 10): 52.52%
================================================================================
