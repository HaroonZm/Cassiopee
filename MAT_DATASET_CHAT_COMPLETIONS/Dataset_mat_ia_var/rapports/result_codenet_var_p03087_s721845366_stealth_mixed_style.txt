================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:04:55
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n,q = [int(x) for x in input().split()]
s = input()
count = 0
c = []
for k in range(n):
    if k == 0:
        c.append(0)
    else:
        if s[k-1] == 'A':
            if s[k] == 'C':
                count = count + 1
        c.append(count)

for __ in range(q):
    tokens = input().split()
    l = int(tokens[0])
    r = int(tokens[1])
    res = c[r-1] - c[l-1]
    print(res)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ',q' (ID: 86188)
  → Token d'amorce (pas de prédiction)

Token 2: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 3: ' [' (ID: 723)
  Prédit: ' map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.25941744446754456
    2. 'map' → logprob: -1.5094174146652222
    3. ' input' → logprob: -5.634417533874512
    4. 'input' → logprob: -5.759417533874512
    5. ' list' → logprob: -7.759417533874512
    6. 'list' → logprob: -8.884417533874512
    7. ' int' → logprob: -9.759417533874512
    8. 'int' → logprob: -9.884417533874512
    9. '0' → logprob: -10.259417533874512
    10. ' ' → logprob: -11.009417533874512

Token 4: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0001584850688232109
    2. ']int' → logprob: -9.125158309936523
    3. ']' → logprob: -10.500158309936523
    4. '0' → logprob: -11.250158309936523
    5. ' int' → logprob: -13.375158309936523
    6. 'i' → logprob: -13.500158309936523
    7. '*' → logprob: -13.625158309936523
    8. '(int' → logprob: -13.875158309936523
    9. '```' → logprob: -13.875158309936523
    10. '[int' → logprob: -14.125158309936523

Token 5: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.4895412027835846
    2. '(' → logprob: -0.9895411729812622
    3. '(i' → logprob: -4.489541053771973
    4. ']' → logprob: -5.989541053771973
    5. '(input' → logprob: -7.114541053771973
    6. '(s' → logprob: -8.364541053771973
    7. '(_)' → logprob: -8.989541053771973
    8. '()]' → logprob: -9.239541053771973
    9. '(a' → logprob: -9.364541053771973
    10. '(item' → logprob: -9.364541053771973

Token 6: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.32872724533081055
    2. 'for' → logprob: -2.0787272453308105
    3. '(x' → logprob: -2.4537272453308105
    4. '(i' → logprob: -3.2037272453308105
    5. '(' → logprob: -4.4537272453308105
    6. ' for' → logprob: -4.5787272453308105
    7. ']' → logprob: -6.3287272453308105
    8. '(c' → logprob: -6.9537272453308105
    9. '(s' → logprob: -7.2037272453308105
    10. '(a' → logprob: -7.5787272453308105

Token 7: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5753263831138611
    2. ' for' → logprob: -0.9503263831138611
    3. '(' → logprob: -3.450326442718506
    4. '(x' → logprob: -4.575326442718506
    5. ']' → logprob: -5.325326442718506
    6. '(input' → logprob: -7.200326442718506
    7. '(line' → logprob: -7.200326442718506
    8. '(code' → logprob: -7.575326442718506
    9. '(i' → logprob: -7.825326442718506
    10. ')' → logprob: -7.950326442718506

Token 8: ' x' (ID: 1215)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.43062740564346313
    2. 'input' → logprob: -1.0556273460388184
    3. ' in' → logprob: -6.930627346038818
    4. ' user' → logprob: -8.430627822875977
    5. 'in' → logprob: -9.305627822875977
    6. '_' → logprob: -9.430627822875977
    7. '=input' → logprob: -9.430627822875977
    8. ' ' → logprob: -9.555627822875977
    9. ' x' → logprob: -9.680627822875977
    10. 'user' → logprob: -9.805627822875977

Token 9: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10042771697044373
    2. 'in' → logprob: -2.3504276275634766
    3. 'input' → logprob: -9.600427627563477
    4. '.' → logprob: -10.350427627563477
    5. '<|end|>' → logprob: -10.725427627563477
    6. '.readline' → logprob: -10.850427627563477
    7. ' ' → logprob: -11.100427627563477
    8. '<|end|>' → logprob: -11.850427627563477
    9. 's' → logprob: -11.975427627563477
    10. '=input' → logprob: -12.412927627563477

Token 10: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.25193020701408386
    2. ' input' → logprob: -1.5019302368164062
    3. '(input' → logprob: -14.001930236816406
    4. '=input' → logprob: -16.126930236816406
    5. '<input' → logprob: -17.376930236816406
    6. ' ' → logprob: -17.501930236816406
    7. '	input' → logprob: -18.251930236816406
    8. 'raw' → logprob: -18.376930236816406
    9. 'range' → logprob: -18.501930236816406
    10. '```' → logprob: -18.876930236816406

Token 11: '().' (ID: 1454)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.011640927754342556
    2. '()' → logprob: -4.511641025543213
    3. '().' → logprob: -8.011640548706055
    4. ']' → logprob: -9.011640548706055
    5. '()].' → logprob: -10.011640548706055
    6. '()][' → logprob: -10.261640548706055
    7. ']()' → logprob: -10.386640548706055
    8. '(' → logprob: -11.261640548706055
    9. '()],' → logprob: -12.261640548706055
    10. '())' → logprob: -12.511640548706055

Token 12: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0009533828706480563
    2. 'strip' → logprob: -7.000953197479248
    3. 'rstrip' → logprob: -10.125953674316406
    4. ' split' → logprob: -13.375953674316406
    5. '(split' → logprob: -14.875953674316406
    6. 'spl' → logprob: -17.000953674316406
    7. '```' → logprob: -17.875953674316406
    8. 'read' → logprob: -18.000953674316406
    9. 'replace' → logprob: -19.000953674316406
    10. ' strip' → logprob: -19.125953674316406

Token 13: '()]
' (ID: 67155)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.0033711539581418037
    2. ']' → logprob: -5.878371238708496
    3. '(' → logprob: -8.378371238708496
    4. '()' → logprob: -8.753371238708496
    5. ')]' → logprob: -8.878371238708496
    6. '`]' → logprob: -11.378371238708496
    7. ']()' → logprob: -11.628371238708496
    8. '())' → logprob: -11.878371238708496
    9. '()][' → logprob: -12.628371238708496
    10. '()],' → logprob: -12.753371238708496

Token 14: 's' (ID: 82)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0906707048416138
    2. 'for' → logprob: -1.2156707048416138
    3. '\n' → logprob: -2.215670585632324
    4. '#' → logprob: -3.215670585632324
    5. 'n' → logprob: -3.340670585632324
    6. 'a' → logprob: -3.340670585632324
    7. '```' → logprob: -3.465670585632324
    8. ',' → logprob: -3.715670585632324
    9. '[' → logprob: -4.340670585632324
    10. '`' → logprob: -4.590670585632324

Token 15: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6329407691955566
    2. '.' → logprob: -1.2579407691955566
    3. '[' → logprob: -2.0079407691955566
    4. ' =' → logprob: -3.1329407691955566
    5. '[:]' → logprob: -5.757940769195557
    6. '.=' → logprob: -7.382940769195557
    7. '[i' → logprob: -7.632940769195557
    8. 's' → logprob: -8.007940292358398
    9. '[:' → logprob: -8.132940292358398
    10. '[input' → logprob: -8.507940292358398

Token 16: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.11351915448904037
    2. ' input' → logprob: -2.2385191917419434
    3. '""' → logprob: -8.363518714904785
    4. 'list' → logprob: -8.613518714904785
    5. '[input' → logprob: -8.863518714904785
    6. ' list' → logprob: -10.238518714904785
    7. '"' → logprob: -10.488518714904785
    8. '''' → logprob: -11.238518714904785
    9. 'str' → logprob: -11.488518714904785
    10. '<input' → logprob: -11.738518714904785

Token 17: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3873211741447449
    2. '(' → logprob: -1.1373212337493896
    3. '().' → logprob: -8.762321472167969
    4. '.' → logprob: -9.012321472167969
    5. ''' → logprob: -10.637321472167969
    6. ' ()' → logprob: -11.012321472167969
    7. '('' → logprob: -11.137321472167969
    8. '(.)' → logprob: -11.262321472167969
    9. '```' → logprob: -11.262321472167969
    10. '(
' → logprob: -11.387321472167969

Token 18: 'count' (ID: 5420)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5600566864013672
    2. '.' → logprob: -1.6850566864013672
    3. 'a' → logprob: -3.185056686401367
    4. 'q' → logprob: -3.685056686401367
    5. 'r' → logprob: -3.685056686401367
    6. 'd' → logprob: -3.810056686401367
    7. 'result' → logprob: -3.935056686401367
    8. 'c' → logprob: -3.935056686401367
    9. '[' → logprob: -4.060056686401367
    10. 't' → logprob: -4.435056686401367

Token 19: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6696217060089111
    2. '_' → logprob: -0.7946217060089111
    3. '(' → logprob: -3.544621706008911
    4. '[' → logprob: -5.544621467590332
    5. '=' → logprob: -6.169621467590332
    6. '_s' → logprob: -7.794621467590332
    7. ' =' → logprob: -8.169621467590332
    8. '(s' → logprob: -8.294621467590332
    9. '[]' → logprob: -9.294621467590332
    10. '[s' → logprob: -9.669621467590332

Token 20: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.379111111164093
    2. ' ' → logprob: -1.2541110515594482
    3. '[' → logprob: -4.254111289978027
    4. ' [' → logprob: -4.629111289978027
    5. ' {}' → logprob: -6.004111289978027
    6. '{}' → logprob: -6.379111289978027
    7. '{' → logprob: -7.004111289978027
    8. ' {' → logprob: -7.379111289978027
    9. 's' → logprob: -8.129111289978027
    10. '[s' → logprob: -9.254111289978027

Token 21: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2208147794008255
    2. '[' → logprob: -1.970814824104309
    3. '{}' → logprob: -3.3458147048950195
    4. '{' → logprob: -3.8458147048950195
    5. '[s' → logprob: -7.5958147048950195
    6. '[len' → logprob: -7.5958147048950195
    7. 's' → logprob: -7.9708147048950195
    8. 'len' → logprob: -8.09581470489502
    9. '{s' → logprob: -8.47081470489502
    10. '[]' → logprob: -9.34581470489502

Token 22: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4649937152862549
    2. ' for' → logprob: -2.464993715286255
    3. '\' → logprob: -2.714993715286255
    4. ' ' → logprob: -2.714993715286255
    5. '
' → logprob: -3.089993715286255
    6. ' 
' → logprob: -3.964993715286255
    7. '\n' → logprob: -4.089993476867676
    8. '<|end|>' → logprob: -4.089993476867676
    9. '.' → logprob: -4.214993476867676
    10. '[' → logprob: -4.589993476867676

Token 23: 'c' (ID: 66)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11246974766254425
    2. ' for' → logprob: -3.1124696731567383
    3. 'f' → logprob: -3.7374696731567383
    4. ' ' → logprob: -4.612469673156738
    5. '.' → logprob: -4.862469673156738
    6. '\' → logprob: -5.862469673156738
    7. ' 
' → logprob: -5.987469673156738
    8. '
' → logprob: -6.112469673156738
    9. 'i' → logprob: -6.112469673156738
    10. '\n' → logprob: -6.112469673156738

Token 24: ' =' (ID: 314)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.4365263879299164
    2. 'ount' → logprob: -1.3115264177322388
    3. ' =' → logprob: -3.186526298522949
    4. '=' → logprob: -3.311526298522949
    5. 'u' → logprob: -6.186526298522949
    6. 'h' → logprob: -6.436526298522949
    7. 'ounter' → logprob: -7.186526298522949
    8. ' ' → logprob: -7.436526298522949
    9. '_' → logprob: -7.686526298522949
    10. '[' → logprob: -8.56152629852295

Token 25: ' []
' (ID: 8911)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.38205885887146
    2. '{}' → logprob: -1.38205885887146
    3. ' {}' → logprob: -1.50705885887146
    4. '0' → logprob: -1.50705885887146
    5. '{' → logprob: -4.132059097290039
    6. ' [' → logprob: -4.632059097290039
    7. ' {' → logprob: -4.882059097290039
    8. 's' → logprob: -4.882059097290039
    9. ' s' → logprob: -5.757059097290039
    10. ' []' → logprob: -5.882059097290039

Token 26: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04489247873425484
    2. '[' → logprob: -3.6698925495147705
    3. '(' → logprob: -4.669892311096191
    4. 'f' → logprob: -5.919892311096191
    5. ' for' → logprob: -6.044892311096191
    6. 'i' → logprob: -7.169892311096191
    7. 'a' → logprob: -7.419892311096191
    8. ')' → logprob: -7.794892311096191
    9. '.' → logprob: -7.919892311096191
    10. 't' → logprob: -8.169892311096191

Token 27: ' k' (ID: 372)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.04605269432067871
    2. ' ' → logprob: -3.7960526943206787
    3. ' _' → logprob: -3.9210526943206787
    4. 'i' → logprob: -6.296052932739258
    5. '_' → logprob: -7.421052932739258
    6. ' x' → logprob: -8.796052932739258
    7. ' c' → logprob: -10.171052932739258
    8. ' ' → logprob: -10.296052932739258
    9. ' s' → logprob: -10.546052932739258
    10. '  ' → logprob: -11.421052932739258

Token 28: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.021813828498125076
    2. 'in' → logprob: -3.8968138694763184
    3. ' ' → logprob: -6.896813869476318
    4. 'n' → logprob: -8.64681339263916
    5. 's' → logprob: -10.77181339263916
    6. '_' → logprob: -10.89681339263916
    7. '  ' → logprob: -11.27181339263916
    8. ',' → logprob: -11.89681339263916
    9. ' n' → logprob: -12.52181339263916
    10. 'range' → logprob: -12.77181339263916

Token 29: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.15296050906181335
    2. 'range' → logprob: -2.0279605388641357
    3. ' s' → logprob: -4.777960300445557
    4. 's' → logprob: -6.402960300445557
    5. '[' → logprob: -10.652960777282715
    6. ' ' → logprob: -10.902960777282715
    7. '(range' → logprob: -10.965460777282715
    8. ' ra' → logprob: -11.465460777282715
    9. 'r' → logprob: -11.715460777282715
    10. ' r' → logprob: -11.777960777282715

Token 30: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.22631318867206573
    2. '(n' → logprob: -1.7263132333755493
    3. '(len' → logprob: -3.7263131141662598
    4. '(count' → logprob: -8.226313591003418
    5. '(q' → logprob: -8.851313591003418
    6. ' (' → logprob: -9.601313591003418
    7. '(length' → logprob: -11.226313591003418
    8. '(k' → logprob: -12.226313591003418
    9. '(s' → logprob: -12.226313591003418
    10. '(i' → logprob: -13.226313591003418

Token 31: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.031248576939105988
    2. '-' → logprob: -3.7812485694885254
    3. ' ):' → logprob: -5.281248569488525
    4. '):
' → logprob: -6.781248569488525
    5. ' -' → logprob: -7.281248569488525
    6. ')' → logprob: -7.281248569488525
    7. '+' → logprob: -8.531249046325684
    8. ' ' → logprob: -9.156249046325684
    9. ':' → logprob: -10.531249046325684
    10. '):
' → logprob: -11.781249046325684

Token 32: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.127836674451828
    2. ' ' → logprob: -3.0028367042541504
    3. ' c' → logprob: -3.5028367042541504
    4. '    ' → logprob: -3.8778367042541504
    5. 'c' → logprob: -4.75283670425415
    6. ' if' → logprob: -5.12783670425415
    7. ' s' → logprob: -7.37783670425415
    8. 's' → logprob: -7.75283670425415
    9. '  ' → logprob: -8.002836227416992
    10. '```' → logprob: -8.002836227416992

Token 33: ' if' (ID: 538)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.4001520276069641
    2. ' c' → logprob: -1.9001519680023193
    3. 'if' (adapté à ' if') → logprob: -2.4001519680023193
    4. ' if' → logprob: -2.5251519680023193
    5. '   ' → logprob: -5.275152206420898
    6. 'count' → logprob: -6.775152206420898
    7. 's' → logprob: -7.025152206420898
    8. ' ' → logprob: -7.400152206420898
    9. 'for' → logprob: -7.650152206420898
    10. ' for' → logprob: -7.650152206420898

Token 34: ' k' (ID: 372)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.17736469209194183
    2. ' k' → logprob: -2.4273645877838135
    3. 's' → logprob: -2.8023645877838135
    4. 'k' → logprob: -4.302364826202393
    5. ' ' → logprob: -10.052364349365234
    6. '(s' → logprob: -12.802364349365234
    7. '(k' → logprob: -13.177364349365234
    8. '  ' → logprob: -13.677364349365234
    9. '_s' → logprob: -14.552364349365234
    10. '   ' → logprob: -14.552364349365234

Token 35: ' ==' (ID: 951)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.1504562795162201
    2. ' >' → logprob: -2.025456190109253
    3. '+' → logprob: -5.025456428527832
    4. 'and' → logprob: -8.025456428527832
    5. ' <' → logprob: -8.525456428527832
    6. '==' → logprob: -8.650456428527832
    7. '<' → logprob: -9.025456428527832
    8. ' ' → logprob: -9.150456428527832
    9. ' +' → logprob: -9.150456428527832
    10. ' and' → logprob: -10.275456428527832

Token 36: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.14277446269989014
    2. '0' → logprob: -2.0177745819091797
    3. ' n' → logprob: -9.89277458190918
    4. 'n' → logprob: -10.51777458190918
    5. '>' → logprob: -12.64277458190918
    6. 's' → logprob: -12.70527458190918
    7. '1' → logprob: -12.83027458190918
    8. ' (' → logprob: -13.26777458190918
    9. '(n' → logprob: -13.45527458190918
    10. '(' → logprob: -13.83027458190918

Token 37: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0041857217438519
    2. ' ' → logprob: -5.504185676574707
    3. 'n' → logprob: -9.254185676574707
    4. ' n' → logprob: -12.504185676574707
    5. '1' → logprob: -13.129185676574707
    6. '(n' → logprob: -13.379185676574707
    7. 'len' → logprob: -13.629185676574707
    8. '>' → logprob: -14.879185676574707
    9. '<n' → logprob: -15.254185676574707
    10. 'k' → logprob: -15.379185676574707

Token 38: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.48205918073654175
    2. ' or' → logprob: -1.1070592403411865
    3. ' and' → logprob: -3.3570592403411865
    4. 'or' → logprob: -5.107059001922607
    5. ' ' → logprob: -5.607059001922607
    6. ' :' → logprob: -5.982059001922607
    7. '   ' → logprob: -6.232059001922607
    8. 'and' → logprob: -6.732059001922607
    9. ':
' → logprob: -7.607059001922607
    10. '=' → logprob: -8.232059478759766

Token 39: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4190283715724945
    2. '0' → logprob: -2.4190282821655273
    3. ' ' → logprob: -2.6690282821655273
    4. 's' → logprob: -2.7940282821655273
    5. ' or' → logprob: -3.0440282821655273
    6. ':' → logprob: -4.044028282165527
    7. ' and' → logprob: -4.419028282165527
    8. '       ' → logprob: -4.794028282165527
    9. ' s' → logprob: -5.044028282165527
    10. ''' → logprob: -5.419028282165527

Token 40: ' c' (ID: 274)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.23403219878673553
    2. 'c' (adapté à ' c') → logprob: -2.484032154083252
    3. ' c' → logprob: -2.734032154083252
    4. ' ' → logprob: -2.984032154083252
    5. ' count' → logprob: -6.109032154083252
    6. 'count' → logprob: -6.109032154083252
    7. '   ' → logprob: -6.234032154083252
    8. ' continue' → logprob: -6.484032154083252
    9. ' if' → logprob: -8.10903263092041
    10. 'continue' → logprob: -8.35903263092041

Token 41: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0012535653077065945
    2. '.' → logprob: -6.876253604888916
    3. 'append' → logprob: -8.876253128051758
    4. '=' → logprob: -10.876253128051758
    5. ' .' → logprob: -10.876253128051758
    6. '[' → logprob: -11.126253128051758
    7. 'pp' → logprob: -12.251253128051758
    8. '.extend' → logprob: -12.251253128051758
    9. '+' → logprob: -12.376253128051758
    10. ' =' → logprob: -12.876253128051758

Token 42: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0011574854142963886
    2. '0' → logprob: -7.126157283782959
    3. '(s' → logprob: -8.126157760620117
    4. '(c' → logprob: -10.876157760620117
    5. '(False' → logprob: -11.626157760620117
    6. 's' → logprob: -12.251157760620117
    7. ' (' → logprob: -12.251157760620117
    8. '((' → logprob: -12.251157760620117
    9. '(count' → logprob: -12.251157760620117
    10. '(k' → logprob: -13.126157760620117

Token 43: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001963881659321487
    2. ' ' → logprob: -8.62519645690918
    3. '1' → logprob: -12.12519645690918
    4. ')' → logprob: -12.37519645690918
    5. 's' → logprob: -12.50019645690918
    6. '(' → logprob: -14.50019645690918
    7. 'c' → logprob: -14.50019645690918
    8. 'False' → logprob: -14.62519645690918
    9. 'int' → logprob: -14.75019645690918
    10. '   ' → logprob: -15.12519645690918

Token 44: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003962397575378418
    2. ' )' → logprob: -6.128962516784668
    3. '   ' → logprob: -6.503962516784668
    4. ')
' → logprob: -8.378962516784668
    5. 'else' → logprob: -11.128962516784668
    6. ' )
' → logprob: -11.378962516784668
    7. ' else' → logprob: -11.753962516784668
    8. 'elif' → logprob: -12.003962516784668
    9. '))' → logprob: -13.628962516784668
    10. ' elif' → logprob: -13.753962516784668

Token 45: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.043089743703603745
    2. ' else' → logprob: -3.4180896282196045
    3. 'else' → logprob: -5.168089866638184
    4. ' elif' → logprob: -6.293089866638184
    5. 'elif' → logprob: -6.793089866638184
    6. ' ' → logprob: -8.168089866638184
    7. '\n' → logprob: -8.668089866638184
    8. '    
' → logprob: -9.918089866638184
    9. '	elif' → logprob: -9.918089866638184
    10. '	else' → logprob: -10.168089866638184

Token 46: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.4175252318382263
    2. ' elif' → logprob: -2.167525291442871
    3. '   ' → logprob: -2.292525291442871
    4. 'else' (adapté à ' else') → logprob: -2.667525291442871
    5. 'elif' → logprob: -2.917525291442871
    6. ' ' → logprob: -6.792525291442871
    7. '	elif' → logprob: -7.917525291442871
    8. '\n' → logprob: -8.542525291442871
    9. '  ' → logprob: -9.042525291442871
    10. '	else' → logprob: -9.167525291442871

Token 47: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0035206025931984186
    2. ' :' → logprob: -6.503520488739014
    3. '       ' → logprob: -7.003520488739014
    4. '   ' → logprob: -7.628520488739014
    5. ' if' → logprob: -8.253520965576172
    6. ':
' → logprob: -9.128520965576172
    7. '    ' → logprob: -9.753520965576172
    8. ' c' → logprob: -10.253520965576172
    9. '<|end|>' → logprob: -10.378520965576172
    10. ' ' → logprob: -10.628520965576172

Token 48: '       ' (ID: 309)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.4332127869129181
    2. ' c' → logprob: -1.0582127571105957
    3. '    ' → logprob: -6.433212757110596
    4. ' ' → logprob: -6.808212757110596
    5. '       ' → logprob: -6.933212757110596
    6. '   ' → logprob: -8.683213233947754
    7. ' s' → logprob: -8.933213233947754
    8. 's' → logprob: -9.058213233947754
    9. ' if' → logprob: -9.308213233947754
    10. '	c' → logprob: -9.683213233947754

Token 49: ' if' (ID: 538)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.10108485817909241
    2. ' c' → logprob: -2.3510849475860596
    3. ' if' → logprob: -7.3510847091674805
    4. 'if' (adapté à ' if') → logprob: -8.60108470916748
    5. '   ' → logprob: -10.22608470916748
    6. '       ' → logprob: -12.22608470916748
    7. 's' → logprob: -12.97608470916748
    8. ' ' → logprob: -13.22608470916748
    9. '    ' → logprob: -13.85108470916748
    10. '           ' → logprob: -13.97608470916748

Token 50: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0889919251203537
    2. ' s' → logprob: -2.46399188041687
    3. '(s' → logprob: -10.71399211883545
    4. '   ' → logprob: -11.33899211883545
    5. ' ' → logprob: -11.46399211883545
    6. '  ' → logprob: -13.21399211883545
    7. 'abs' → logprob: -13.58899211883545
    8. 'c' → logprob: -14.33899211883545
    9. '	s' → logprob: -14.71399211883545
    10. '    ' → logprob: -14.83899211883545

Token 51: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -5.621933451038785e-05
    2. '[' → logprob: -10.125056266784668
    3. '[i' → logprob: -11.250056266784668
    4. 'k' → logprob: -14.000056266784668
    5. '[s' → logprob: -14.750056266784668
    6. '[int' → logprob: -15.250056266784668
    7. '[e' → logprob: -15.500056266784668
    8. '[a' → logprob: -15.500056266784668
    9. '[c' → logprob: -15.625056266784668
    10. '[j' → logprob: -15.625056266784668

Token 52: '-' (ID: 12)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.062071543186903
    2. ' ==' → logprob: -2.9370715618133545
    3. '!=' → logprob: -5.437071323394775
    4. ']==' → logprob: -7.187071323394775
    5. 's' → logprob: -7.312071323394775
    6. '=' → logprob: -7.562071323394775
    7. ']' → logprob: -7.812071323394775
    8. ' !=' → logprob: -9.437071800231934
    9. '==
' → logprob: -9.562071800231934
    10. 'a' → logprob: -9.562071800231934

Token 53: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.191489642835222e-05
    2. 'k' → logprob: -10.125041961669922
    3. 's' → logprob: -13.750041961669922
    4. ''' → logprob: -14.875041961669922
    5. '0' → logprob: -16.375041961669922
    6. ']' → logprob: -16.625041961669922
    7. ''s' → logprob: -16.625041961669922
    8. ' ' → logprob: -16.875041961669922
    9. 'i' → logprob: -17.750041961669922
    10. ')' → logprob: -17.750041961669922

Token 54: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.30204567313194275
    2. 'a' → logprob: -2.1770455837249756
    3. '=' → logprob: -2.5520455837249756
    4. ' ==' → logprob: -3.0520455837249756
    5. '!=' → logprob: -4.052045822143555
    6. 's' → logprob: -6.427045822143555
    7. 'i' → logprob: -7.927045822143555
    8. ']' → logprob: -7.927045822143555
    9. 'x' → logprob: -8.177045822143555
    10. ' !=' → logprob: -8.177045822143555

Token 55: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.01251812744885683
    2. ' ==' → logprob: -4.512517929077148
    3. '=' → logprob: -7.262517929077148
    4. 's' → logprob: -7.637517929077148
    5. 'a' → logprob: -9.137517929077148
    6. '==
' → logprob: -9.387517929077148
    7. '!=' → logprob: -9.512517929077148
    8. ' ' → logprob: -12.512517929077148
    9. ']==' → logprob: -13.137517929077148
    10. '===' → logprob: -13.137517929077148

Token 56: ' '' (ID: 461)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0066812713630497456
    2. 'a' → logprob: -5.131681442260742
    3. ''s' → logprob: -7.506681442260742
    4. ''a' → logprob: -8.881681442260742
    5. 'I' → logprob: -11.256681442260742
    6. ''' → logprob: -11.256681442260742
    7. ''i' → logprob: -12.006681442260742
    8. '`s' → logprob: -12.131681442260742
    9. 'i' → logprob: -12.381681442260742
    10. ' s' → logprob: -12.631681442260742

Token 57: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0007595999049954116
    2. ''' → logprob: -7.500759601593018
    3. 'a' → logprob: -9.00075912475586
    4. 's' → logprob: -10.75075912475586
    5. ''A' → logprob: -10.75075912475586
    6. 'R' → logprob: -11.25075912475586
    7. ' A' → logprob: -11.37575912475586
    8. 'C' → logprob: -12.25075912475586
    9. 'T' → logprob: -13.12575912475586
    10. '1' → logprob: -13.37575912475586

Token 58: '':
' (ID: 7669)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.004500261973589659
    2. ''C' → logprob: -6.004500389099121
    3. 'C' → logprob: -6.254500389099121
    4. ''A' → logprob: -10.629500389099121
    5. 'A' → logprob: -10.754500389099121
    6. 'B' → logprob: -11.004500389099121
    7. 'G' → logprob: -11.504500389099121
    8. ''N' → logprob: -11.504500389099121
    9. 'a' → logprob: -12.504500389099121
    10. 'N' → logprob: -12.754500389099121

Token 59: '           ' (ID: 352)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.8548199534416199
    2. ' and' → logprob: -1.1048200130462646
    3. 'a' → logprob: -1.4798200130462646
    4. 'A' → logprob: -5.1048197746276855
    5. 's' → logprob: -5.3548197746276855
    6. ' ' → logprob: -6.3548197746276855
    7. ' a' → logprob: -6.7298197746276855
    8. 'n' → logprob: -7.3548197746276855
    9. ''' → logprob: -7.8548197746276855
    10. '   ' → logprob: -8.479820251464844

Token 60: ' if' (ID: 538)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.02430213987827301
    2. ' and' → logprob: -5.399302005767822
    3. 'count' → logprob: -5.399302005767822
    4. '0' → logprob: -5.524302005767822
    5. 'if' (adapté à ' if') → logprob: -6.274302005767822
    6. ' c' → logprob: -6.399302005767822
    7. 'a' → logprob: -6.524302005767822
    8. 's' → logprob: -6.649302005767822
    9. 'and' → logprob: -6.899302005767822
    10. '           ' → logprob: -7.024302005767822

Token 61: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0619756355881691
    2. ' s' → logprob: -2.8119757175445557
    3. ' ' → logprob: -12.436975479125977
    4. 'c' → logprob: -14.436975479125977
    5. '   ' → logprob: -14.436975479125977
    6. '(s' → logprob: -15.061975479125977
    7. ''s' → logprob: -15.436975479125977
    8. '           ' → logprob: -15.499475479125977
    9. 'k' → logprob: -15.686975479125977
    10. '	s' → logprob: -15.749475479125977

Token 62: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -2.45848218582978e-06
    2. '[' → logprob: -13.50000286102295
    3. 'k' → logprob: -14.25000286102295
    4. '[i' → logprob: -16.000001907348633
    5. ''[' → logprob: -16.625001907348633
    6. '[s' → logprob: -16.750001907348633
    7. '[c' → logprob: -17.750001907348633
    8. '[key' → logprob: -17.750001907348633
    9. '```' → logprob: -17.875001907348633
    10. '"[' → logprob: -18.250001907348633

Token 63: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6997982263565063
    2. ' ==' → logprob: -1.1997982263565063
    3. ']' → logprob: -2.699798107147217
    4. '-' → logprob: -3.824798107147217
    5. ']==' → logprob: -3.824798107147217
    6. ''' → logprob: -4.449798107147217
    7. '=' → logprob: -4.574798107147217
    8. '=='' → logprob: -4.699798107147217
    9. '']' → logprob: -4.824798107147217
    10. 'A' → logprob: -4.824798107147217

Token 64: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.04335996136069298
    2. ' ==' → logprob: -3.1683599948883057
    3. '=='' → logprob: -8.168359756469727
    4. '=' → logprob: -9.918359756469727
    5. '!=' → logprob: -11.793359756469727
    6. ''' → logprob: -12.793359756469727
    7. '==
' → logprob: -12.793359756469727
    8. '#' → logprob: -13.293359756469727
    9. '===' → logprob: -13.668359756469727
    10. 'A' → logprob: -13.793359756469727

Token 65: ' '' (ID: 461)
  Prédit: ''C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''C' → logprob: -0.6349327564239502
    2. ''' → logprob: -0.7599327564239502
    3. ''A' → logprob: -6.634932518005371
    4. ''S' → logprob: -7.759932518005371
    5. ''s' → logprob: -8.134932518005371
    6. 'C' → logprob: -9.259932518005371
    7. ''T' → logprob: -9.384932518005371
    8. ' '' → logprob: -9.759932518005371
    9. ''D' → logprob: -11.259932518005371
    10. '"C' → logprob: -11.884932518005371

Token 66: 'C' (ID: 34)
  Prédit: ''C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''C' → logprob: -0.008169373497366905
    2. ''' → logprob: -5.508169174194336
    3. 'C' → logprob: -5.508169174194336
    4. ''A' → logprob: -11.633169174194336
    5. '"C' → logprob: -11.633169174194336
    6. ''T' → logprob: -11.758169174194336
    7. ''t' → logprob: -13.133169174194336
    8. ''b' → logprob: -15.008169174194336
    9. 'c' → logprob: -15.383169174194336
    10. ''N' → logprob: -15.758169174194336

Token 67: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.0273712370544672
    2. ''' → logprob: -3.9023711681365967
    3. '':
' → logprob: -5.402371406555176
    4. ':' → logprob: -6.402371406555176
    5. '':
' → logprob: -8.402371406555176
    6. '1' → logprob: -9.027371406555176
    7. ' ':' → logprob: -9.402371406555176
    8. '):' → logprob: -10.777371406555176
    9. ''):' → logprob: -10.777371406555176
    10. '':

' → logprob: -11.027371406555176

Token 68: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.11420009285211563
    2. ' c' → logprob: -2.4892001152038574
    3. 'c' → logprob: -4.364200115203857
    4. '           ' → logprob: -5.364200115203857
    5. 'count' → logprob: -6.114200115203857
    6. ' ' → logprob: -6.239200115203857
    7. ' count' → logprob: -7.239200115203857
    8. '1' → logprob: -7.489200115203857
    9. ')' → logprob: -7.989200115203857
    10. '              ' → logprob: -8.2391996383667

Token 69: ' count' (ID: 3605)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.006490831263363361
    2. '                   ' → logprob: -5.256490707397461
    3. ' c' → logprob: -7.256490707397461
    4. '               ' → logprob: -7.881490707397461
    5. 'count' (adapté à ' count') → logprob: -8.881490707397461
    6. ' ' → logprob: -11.381490707397461
    7. '           ' → logprob: -11.881490707397461
    8. '1' → logprob: -12.506490707397461
    9. '   ' → logprob: -12.881490707397461
    10. '                       ' → logprob: -13.006490707397461

Token 70: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.20547330379486084
    2. ' +=' → logprob: -1.7054733037948608
    3. '+' → logprob: -5.83047342300415
    4. '=' → logprob: -6.83047342300415
    5. ' =' → logprob: -11.330472946166992
    6. '+='' → logprob: -11.830472946166992
    7. ']+=' → logprob: -12.330472946166992
    8. '+="' → logprob: -12.330472946166992
    9. '+=(' → logprob: -13.205472946166992
    10. '++' → logprob: -13.205472946166992

Token 71: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.011053244583308697
    2. ' count' → logprob: -4.511053085327148
    3. 'c' → logprob: -12.511053085327148
    4. '	count' → logprob: -14.761053085327148
    5. '1' → logprob: -14.886053085327148
    6. ' ' → logprob: -15.011053085327148
    7. '   ' → logprob: -15.011053085327148
    8. ' c' → logprob: -16.38605308532715
    9. '               ' → logprob: -16.51105308532715
    10. 'counts' → logprob: -16.76105308532715

Token 72: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0010332842357456684
    2. ' +' → logprob: -6.876033306121826
    3. '+
' → logprob: -15.251032829284668
    4. '+c' → logprob: -16.501033782958984
    5. '1' → logprob: -17.501033782958984
    6. '()+' → logprob: -17.501033782958984
    7. ' plus' → logprob: -17.626033782958984
    8. ' ' → logprob: -17.626033782958984
    9. '+i' → logprob: -18.001033782958984
    10. '+=' → logprob: -18.001033782958984

Token 73: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.5491004129871726e-05
    2. ' ' → logprob: -10.000045776367188
    3. '   ' → logprob: -17.500045776367188
    4. '  ' → logprob: -19.500045776367188
    5. '۱' → logprob: -20.875045776367188
    6. ' ' → logprob: -21.000045776367188
    7. '2' → logprob: -21.125045776367188
    8. 'count' → logprob: -21.250045776367188
    9. '<|end|>' → logprob: -21.250045776367188
    10. '１' → logprob: -21.562545776367188

Token 74: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '<|end|>' → logprob: -20.500001907348633
    4. '۱' → logprob: -21.000001907348633
    5. 'count' → logprob: -21.375001907348633
    6. '１' → logprob: -21.750001907348633
    7. '```' → logprob: -21.875001907348633
    8. '   ' → logprob: -21.875001907348633
    9. '100' → logprob: -22.250001907348633
    10. '2' → logprob: -22.500001907348633

Token 75: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1199730709195137
    2. 'c' → logprob: -3.3699731826782227
    3. '   ' → logprob: -3.3699731826782227
    4. '           ' → logprob: -3.7449731826782227
    5. '
' → logprob: -4.119973182678223
    6. ' c' → logprob: -5.869973182678223
    7. '```' → logprob: -7.869973182678223
    8. ' ' → logprob: -8.244973182678223
    9. ')' → logprob: -8.619973182678223
    10. ')c' → logprob: -8.869973182678223

Token 76: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3130551278591156
    2. '
' → logprob: -2.0630550384521484
    3. 'c' → logprob: -2.8130550384521484
    4. '   ' → logprob: -3.1880550384521484
    5. '           ' → logprob: -3.4380550384521484
    6. ' c' → logprob: -5.563055038452148
    7. ' ' → logprob: -7.063055038452148
    8. '```' → logprob: -7.063055038452148
    9. '        
' → logprob: -7.688055038452148
    10. '1' → logprob: -7.813055038452148

Token 77: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -0.23341043293476105
    2. '   ' → logprob: -1.8584104776382446
    3. ' c' → logprob: -3.108410358428955
    4. '       ' → logprob: -4.983410358428955
    5. ' ' → logprob: -7.983410358428955
    6. '	c' → logprob: -8.983410835266113
    7. '           ' → logprob: -9.358410835266113
    8. '```' → logprob: -9.733410835266113
    9. '
' → logprob: -10.233410835266113
    10. '  ' → logprob: -10.858410835266113

Token 78: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.009891253896057606
    2. '.' → logprob: -4.634891033172607
    3. ' .' → logprob: -9.259891510009766
    4. '.app' → logprob: -10.884891510009766
    5. 'append' → logprob: -11.384891510009766
    6. '.extend' → logprob: -12.384891510009766
    7. '.Append' → logprob: -12.759891510009766
    8. '.push' → logprob: -14.634891510009766
    9. 'Append' → logprob: -14.884891510009766
    10. '​.' → logprob: -15.134891510009766

Token 79: '(count' (ID: 25892)
  Prédit: '(count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -1.1041145626222715e-05
    2. '(' → logprob: -11.500011444091797
    3. '(c' → logprob: -14.250011444091797
    4. 'count' → logprob: -15.375011444091797
    5. ' (' → logprob: -18.875011444091797
    6. ' count' → logprob: -19.625011444091797
    7. '<count' → logprob: -19.750011444091797
    8. '	count' → logprob: -20.125011444091797
    9. '(cnt' → logprob: -20.375011444091797
    10. '(co' → logprob: -20.375011444091797

Token 80: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. ')
' → logprob: -15.5
    3. ' )' → logprob: -16.25
    4. ')return' → logprob: -17.875
    5. ')c' → logprob: -18.25
    6. '))' → logprob: -18.625
    7. '`)' → logprob: -19.0
    8. ')`' → logprob: -19.125
    9. '')' → logprob: -19.25
    10. '),' → logprob: -19.25

Token 81: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1647191345691681
    2. '<|end|>' → logprob: -2.0397191047668457
    3. ' for' → logprob: -5.289719104766846
    4. '```' → logprob: -5.789719104766846
    5. '\n' → logprob: -5.914719104766846
    6. 'n' → logprob: -6.039719104766846
    7. '.' → logprob: -6.289719104766846
    8. '[' → logprob: -6.664719104766846
    9. '#' → logprob: -6.664719104766846
    10. '\' → logprob: -7.039719104766846

Token 82: ' __' (ID: 2516)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.7064607739448547
    2. '_' → logprob: -0.9564607739448547
    3. ' _' → logprob: -2.58146071434021
    4. 'i' → logprob: -3.08146071434021
    5. '_i' → logprob: -7.456460952758789
    6. ' x' → logprob: -9.331460952758789
    7. 'x' → logprob: -10.706460952758789
    8. ' j' → logprob: -10.706460952758789
    9. ' q' → logprob: -10.831460952758789
    10. ' ' → logprob: -10.831460952758789

Token 83: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3295534551143646
    2. ' _' → logprob: -1.829553484916687
    3. ' i' → logprob: -2.9545533657073975
    4. '_' → logprob: -3.0795533657073975
    5. 'in' → logprob: -4.329553604125977
    6. ' ' → logprob: -4.829553604125977
    7. 'i' → logprob: -7.329553604125977
    8. ' ' → logprob: -9.079553604125977
    9. ' q' → logprob: -9.829553604125977
    10. 'q' → logprob: -10.329553604125977

Token 84: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0009165783412754536
    2. ' range' → logprob: -7.000916481018066
    3. 'r' → logprob: -13.250916481018066
    4. 'q' → logprob: -13.375916481018066
    5. 'in' → logprob: -14.500916481018066
    6. '_' → logprob: -14.750916481018066
    7. '(range' → logprob: -14.875916481018066
    8. 'ran' → logprob: -15.375916481018066
    9. 'rang' → logprob: -15.500916481018066
    10. '	range' → logprob: -16.250917434692383

Token 85: '(q' (ID: 21479)
  Prédit: '(q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -0.0380130298435688
    2. ' q' → logprob: -3.663012981414795
    3. '(' → logprob: -5.163012981414795
    4. ' (' → logprob: -5.413012981414795
    5. 'q' → logprob: -6.538012981414795
    6. ' ' → logprob: -11.663013458251953
    7. '(n' → logprob: -13.038013458251953
    8. '	q' → logprob: -13.038013458251953
    9. '()' → logprob: -14.538013458251953
    10. '  ' → logprob: -15.163013458251953

Token 86: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.030648015439510345
    2. ')' → logprob: -3.7806479930877686
    3. ' ):' → logprob: -5.405648231506348
    4. ',' → logprob: -5.905648231506348
    5. ' )' → logprob: -9.530648231506348
    6. '):
' → logprob: -10.155648231506348
    7. ' ,' → logprob: -11.155648231506348
    8. ':' → logprob: -11.655648231506348
    9. ' ' → logprob: -11.905648231506348
    10. '),' → logprob: -12.030648231506348

Token 87: '   ' (ID: 271)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.5771585702896118
    2. 'l' → logprob: -1.8271585702896118
    3. 'a' → logprob: -2.0771584510803223
    4. ' a' → logprob: -2.4521584510803223
    5. 'x' → logprob: -4.452158451080322
    6. ' i' → logprob: -4.452158451080322
    7. ' x' → logprob: -4.702158451080322
    8. 'i' → logprob: -5.077158451080322
    9. ' start' → logprob: -5.202158451080322
    10. ' s' → logprob: -5.827158451080322

Token 88: ' tokens' (ID: 20290)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.10042276233434677
    2. ' l' → logprob: -2.6004228591918945
    3. 'L' → logprob: -4.4754228591918945
    4. '   ' → logprob: -4.7254228591918945
    5. 'a' → logprob: -7.8504228591918945
    6. ' L' → logprob: -7.8504228591918945
    7. '	l' → logprob: -10.225422859191895
    8. 'i' → logprob: -10.350422859191895
    9. 'li' → logprob: -10.850422859191895
    10. '_l' → logprob: -11.100422859191895

Token 89: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.054884541779756546
    2. ' =' → logprob: -2.929884433746338
    3. '   ' → logprob: -13.804884910583496
    4. '[' → logprob: -15.304884910583496
    5. '=input' → logprob: -15.429884910583496
    6. '＝' → logprob: -15.804884910583496
    7. '=line' → logprob: -15.804884910583496
    8. '  ' → logprob: -16.05488395690918
    9. 's' → logprob: -16.55488395690918
    10. ' ' → logprob: -16.80488395690918

Token 90: ' input' (ID: 3422)
  Prédit: '[input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[input' → logprob: -0.078485406935215
    2. '[' → logprob: -3.0784854888916016
    3. '[int' → logprob: -3.5784854888916016
    4. ' [' → logprob: -6.828485488891602
    5. '[list' → logprob: -8.328485488891602
    6. 'input' → logprob: -9.828485488891602
    7. '[str' → logprob: -9.828485488891602
    8. '[token' → logprob: -10.078485488891602
    9. '[line' → logprob: -10.703485488891602
    10. '[i' → logprob: -12.078485488891602

Token 91: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.07891952991485596
    2. '()' → logprob: -2.5789194107055664
    3. '(' → logprob: -11.703919410705566
    4. ' ()' → logprob: -11.953919410705566
    5. '.' → logprob: -12.578919410705566
    6. ' ().' → logprob: -12.953919410705566
    7. '.split' → logprob: -13.953919410705566
    8. '())' → logprob: -14.328919410705566
    9. '()>' → logprob: -14.453919410705566
    10. '（）' → logprob: -14.578919410705566

Token 92: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.8325677703833207e-05
    2. 'strip' → logprob: -10.500028610229492
    3. ' split' → logprob: -14.250028610229492
    4. 'rstrip' → logprob: -16.500028610229492
    5. 'spl' → logprob: -18.500028610229492
    6. 'plit' → logprob: -18.500028610229492
    7. '(split' → logprob: -18.750028610229492
    8. '.split' → logprob: -20.000028610229492
    9. '_split' → logprob: -20.375028610229492
    10. 'replace' → logprob: -21.500028610229492

Token 93: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00016718693950679153
    2. '(' → logprob: -9.000166893005371
    3. '()]' → logprob: -10.750166893005371
    4. '()
' → logprob: -11.625166893005371
    5. '()[' → logprob: -12.125166893005371
    6. '())' → logprob: -13.000166893005371
    7. '()<' → logprob: -13.875166893005371
    8. '<|end|>' → logprob: -14.625166893005371
    9. '()?' → logprob: -14.750166893005371
    10. '()\' → logprob: -14.750166893005371

Token 94: '   ' (ID: 271)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.025296205654740334
    2. 'L' → logprob: -4.150296211242676
    3. 'a' → logprob: -5.400296211242676
    4. ' l' → logprob: -5.650296211242676
    5. '   ' → logprob: -6.900296211242676
    6. ' L' → logprob: -10.025296211242676
    7. ' ' → logprob: -10.650296211242676
    8. 'i' → logprob: -11.025296211242676
    9. '	l' → logprob: -11.150296211242676
    10. '```' → logprob: -11.150296211242676

Token 95: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' (adapté à ' l') → logprob: -0.009560694918036461
    2. 'L' → logprob: -4.759560585021973
    3. ' l' → logprob: -7.884560585021973
    4. 'a' → logprob: -8.259560585021973
    5. '   ' → logprob: -9.384560585021973
    6. 'left' → logprob: -9.509560585021973
    7. 'from' → logprob: -10.009560585021973
    8. ' ' → logprob: -11.134560585021973
    9. '```' → logprob: -11.259560585021973
    10. 'print' → logprob: -11.509560585021973

Token 96: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0018957947613671422
    2. ' ,' → logprob: -6.376895904541016
    3. ' =' → logprob: -9.376895904541016
    4. '=' → logprob: -10.126895904541016
    5. ',l' → logprob: -10.876895904541016
    6. '<|end|>' → logprob: -11.501895904541016
    7. ',a' → logprob: -12.126895904541016
    8. ',end' → logprob: -12.501895904541016
    9. '-' → logprob: -12.876895904541016
    10. ',user' → logprob: -13.376895904541016

Token 97: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -6.511406809295295e-06
    2. ' int' → logprob: -12.000006675720215
    3. '[int' → logprob: -15.250006675720215
    4. '=int' → logprob: -19.1250057220459
    5. '(int' → logprob: -19.2500057220459
    6. '<int' → logprob: -19.6250057220459
    7. ':int' → logprob: -20.2500057220459
    8. '   ' → logprob: -20.2500057220459
    9. ']int' → logprob: -20.5000057220459
    10. '	int' → logprob: -20.7500057220459

Token 98: '(tokens' (ID: 74272)
  Prédit: '(tokens'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tokens' → logprob: -5.908022285439074e-05
    2. '(' → logprob: -10.375059127807617
    3. 'tokens' → logprob: -10.500059127807617
    4. '(token' → logprob: -15.750059127807617
    5. ' tokens' → logprob: -17.375059127807617
    6. '("("' → logprob: -17.625059127807617
    7. '(
' → logprob: -17.750059127807617
    8. '()' → logprob: -18.375059127807617
    9. '(tasks' → logprob: -18.750059127807617
    10. ' (' → logprob: -19.000059127807617

Token 99: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.02035314030945301
    2. ')' → logprob: -4.270353317260742
    3. '0' → logprob: -5.145353317260742
    4. ')-' → logprob: -9.020353317260742
    5. '(' → logprob: -9.145353317260742
    6. '-' → logprob: -10.520353317260742
    7. '()[' → logprob: -10.645353317260742
    8. '   ' → logprob: -10.895353317260742
    9. ' [' → logprob: -11.395353317260742
    10. '())' → logprob: -12.020353317260742

Token 100: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.875001907348633
    3. '[' → logprob: -14.000001907348633
    4. '1' → logprob: -15.625001907348633
    5. '-' → logprob: -16.500001907348633
    6. '   ' → logprob: -16.750001907348633
    7. '])' → logprob: -16.875001907348633
    8. ')' → logprob: -17.375001907348633
    9. ']' → logprob: -17.750001907348633
    10. '  ' → logprob: -19.500001907348633

Token 101: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006095095886848867
    2. ')
' → logprob: -7.625609397888184
    3. ')-' → logprob: -9.875609397888184
    4. '-' → logprob: -10.000609397888184
    5. ' )' → logprob: -10.750609397888184
    6. '-)' → logprob: -13.250609397888184
    7. ')
' → logprob: -15.125609397888184
    8. '")' → logprob: -15.625609397888184
    9. '   ' → logprob: -15.625609397888184
    10. ' )
' → logprob: -15.875609397888184

Token 102: '   ' (ID: 271)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.18536236882209778
    2. ' r' → logprob: -1.8103623390197754
    3. ',r' → logprob: -5.935362339019775
    4. '   ' → logprob: -6.185362339019775
    5. '	r' → logprob: -8.060362815856934
    6. ' ' → logprob: -8.310362815856934
    7. '<|end|>' → logprob: -8.560362815856934
    8. '    ' → logprob: -9.310362815856934
    9. '_r' → logprob: -11.560362815856934
    10. '  ' → logprob: -11.685362815856934

Token 103: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -4.7159857786027715e-05
    2. ' r' → logprob: -10.250046730041504
    3. '   ' → logprob: -11.375046730041504
    4. '	r' → logprob: -16.00004768371582
    5. ' ' → logprob: -16.62504768371582
    6. '  ' → logprob: -18.50004768371582
    7. '    ' → logprob: -18.87504768371582
    8. '    
' → logprob: -19.00004768371582
    9. '_r' → logprob: -19.50004768371582
    10. 'rstrip' → logprob: -19.87504768371582

Token 104: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931678652763367
    2. ' =' → logprob: -0.6931678652763367
    3. '=int' → logprob: -10.818167686462402
    4. ' ' → logprob: -14.568167686462402
    5. '   ' → logprob: -17.06816864013672
    6. 'int' → logprob: -17.19316864013672
    7. ')' → logprob: -18.31816864013672
    8. '  ' → logprob: -18.31816864013672
    9. '＝' → logprob: -18.94316864013672
    10. '=input' → logprob: -19.31816864013672

Token 105: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.005234121344983578
    2. ' int' → logprob: -5.255234241485596
    3. '[int' → logprob: -15.380233764648438
    4. '<int' → logprob: -16.755233764648438
    5. '=int' → logprob: -17.005233764648438
    6. '(int' → logprob: -17.505233764648438
    7. '   ' → logprob: -17.880233764648438
    8. ':int' → logprob: -18.255233764648438
    9. '	int' → logprob: -19.630233764648438
    10. ']int' → logprob: -20.505233764648438

Token 106: '(tokens' (ID: 74272)
  Prédit: '(tokens'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tokens' → logprob: -7.803360495017841e-05
    2. 'tokens' → logprob: -9.500078201293945
    3. 'okens' → logprob: -13.500078201293945
    4. 'int' → logprob: -14.250078201293945
    5. '(' → logprob: -14.750078201293945
    6. '(token' → logprob: -15.000078201293945
    7. ' tokens' → logprob: -16.000078201293945
    8. '(int' → logprob: -16.500078201293945
    9. 's' → logprob: -17.000078201293945
    10. '(lines' → logprob: -17.125078201293945

Token 107: '[' (ID: 58)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.052832007408142
    2. '[' → logprob: -1.052832007408142
    3. '])' → logprob: -1.802832007408142
    4. '-' → logprob: -2.3028321266174316
    5. ']' → logprob: -3.4278321266174316
    6. 'tokens' → logprob: -6.177832126617432
    7. ')' → logprob: -6.802832126617432
    8. ' -' → logprob: -7.552832126617432
    9. '])-' → logprob: -8.052831649780273
    10. 'Tokens' → logprob: -8.927831649780273

Token 108: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.6100132496794686e-05
    2. '0' → logprob: -9.875056266784668
    3. 'tokens' → logprob: -13.500056266784668
    4. ' ' → logprob: -13.875056266784668
    5. '])' → logprob: -14.000056266784668
    6. 'r' → logprob: -14.500056266784668
    7. ']' → logprob: -14.875056266784668
    8. ')' → logprob: -15.875056266784668
    9. '[' → logprob: -15.875056266784668
    10. ' tokens' → logprob: -16.37505531311035

Token 109: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00017505438881926239
    2. ']' → logprob: -9.125175476074219
    3. ')
' → logprob: -10.125175476074219
    4. '])' → logprob: -11.500175476074219
    5. ')]' → logprob: -11.750175476074219
    6. ' )' → logprob: -13.125175476074219
    7. '   ' → logprob: -13.125175476074219
    8. ')])' → logprob: -13.375175476074219
    9. '<|end|>' → logprob: -14.500175476074219
    10. '）' → logprob: -14.500175476074219

Token 110: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4381377398967743
    2. '   ' → logprob: -1.5631377696990967
    3. '
' → logprob: -1.9381377696990967
    4. ' print' → logprob: -7.063137531280518
    5. '<|end|>' → logprob: -8.563138008117676
    6. '```' → logprob: -9.188138008117676
    7. '	print' → logprob: -9.938138008117676
    8. ' ' → logprob: -10.563138008117676
    9. '       ' → logprob: -10.813138008117676
    10. '  
' → logprob: -11.063138008117676

Token 111: ' res' (ID: 694)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0009256341145373881
    2. ' print' → logprob: -7.750925540924072
    3. '
' → logprob: -8.25092601776123
    4. '   ' → logprob: -8.37592601776123
    5. '```' → logprob: -12.87592601776123
    6. '	print' → logprob: -14.75092601776123
    7. 'answer' → logprob: -15.75092601776123
    8. '``' → logprob: -15.87592601776123
    9. 'result' → logprob: -16.750925064086914
    10. ' ' → logprob: -17.500925064086914

Token 112: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38687410950660706
    2. '=' → logprob: -1.1368740797042847
    3. 's' → logprob: -14.011874198913574
    4. '_' → logprob: -14.886874198913574
    5. ' ' → logprob: -15.011874198913574
    6. '=int' → logprob: -15.011874198913574
    7. ')' → logprob: -15.136874198913574
    8. 'space' → logprob: -15.511874198913574
    9. ' =
' → logprob: -16.011873245239258
    10. ' +=' → logprob: -16.261873245239258

Token 113: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.47410863637924194
    2. ' c' → logprob: -0.9741086363792419
    3. '   ' → logprob: -10.474108695983887
    4. '    ' → logprob: -13.224108695983887
    5. ' ' → logprob: -14.099108695983887
    6. '	c' → logprob: -14.599108695983887
    7. '(c' → logprob: -15.974108695983887
    8. '  ' → logprob: -16.47410774230957
    9. '_c' → logprob: -17.47410774230957
    10. 'str' → logprob: -17.72410774230957

Token 114: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -4.008129963040119e-06
    2. '[' → logprob: -12.750003814697266
    3. 'r' → logprob: -13.875003814697266
    4. '[s' → logprob: -17.250003814697266
    5. '[-' → logprob: -18.625003814697266
    6. '[
' → logprob: -18.625003814697266
    7. ' [' → logprob: -18.750003814697266
    8. '	r' → logprob: -19.000003814697266
    9. '   ' → logprob: -19.250003814697266
    10. '[right' → logprob: -19.750003814697266

Token 115: '-' (ID: 12)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0015284325927495956
    2. '-' → logprob: -7.251528263092041
    3. ']-' → logprob: -7.251528263092041
    4. ' ]' → logprob: -9.3765287399292
    5. ' -' → logprob: -11.0015287399292
    6. '`]' → logprob: -12.7515287399292
    7. '"]' → logprob: -12.8765287399292
    8. '']' → logprob: -13.2515287399292
    9. '   ' → logprob: -15.7515287399292
    10. '()]' → logprob: -16.001527786254883

Token 116: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.5577775128767826e-06
    2. ' ' → logprob: -12.125005722045898
    3. '```' → logprob: -18.1250057220459
    4. '   ' → logprob: -18.6250057220459
    5. ']' → logprob: -19.0000057220459
    6. ')' → logprob: -19.3125057220459
    7. '

' → logprob: -19.3750057220459
    8. '
' → logprob: -19.4375057220459
    9. '１' → logprob: -19.5625057220459
    10. '2' → logprob: -19.6250057220459

Token 117: ']' (ID: 60)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5417742729187012
    2. ' -' → logprob: -0.9167742729187012
    3. ']' → logprob: -4.041774272918701
    4. '-c' → logprob: -7.791774272918701
    5. ')' → logprob: -8.66677474975586
    6. ' ' → logprob: -9.16677474975586
    7. ']-' → logprob: -9.41677474975586
    8. '   ' → logprob: -9.79177474975586
    9. ' ]' → logprob: -10.66677474975586
    10. '    ' → logprob: -11.04177474975586

Token 118: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.12769535183906555
    2. ' -' → logprob: -2.127695322036743
    3. '-
' → logprob: -7.252695560455322
    4. ' -
' → logprob: -11.002695083618164
    5. ' ' → logprob: -11.877695083618164
    6. '```' → logprob: -12.252695083618164
    7. '-c' → logprob: -12.502695083618164
    8. '   ' → logprob: -12.752695083618164
    9. '        ' → logprob: -12.877695083618164
    10. '
' → logprob: -13.002695083618164

Token 119: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0009115827269852161
    2. ' c' → logprob: -7.000911712646484
    3. '	c' → logprob: -17.500911712646484
    4. '<|end|>' → logprob: -18.625911712646484
    5. '   ' → logprob: -19.250911712646484
    6. ')c' → logprob: -19.375911712646484
    7. ' ' → logprob: -20.500911712646484
    8. '_c' → logprob: -20.625911712646484
    9. '```' → logprob: -20.625911712646484
    10. '(c' → logprob: -20.875911712646484

Token 120: '[l' (ID: 38286)
  Prédit: '[l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -3.128163257315464e-07
    2. 'l' → logprob: -15.5
    3. '[' → logprob: -16.5
    4. '[r' → logprob: -17.5
    5. '[c' → logprob: -18.0
    6. '[
' → logprob: -18.0
    7. '   ' → logprob: -18.375
    8. ' [' → logprob: -18.625
    9. '[s' → logprob: -19.25
    10. '[(' → logprob: -20.0

Token 121: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.001991682220250368
    2. '2' → logprob: -6.6269917488098145
    3. '1' → logprob: -8.501991271972656
    4. '[' → logprob: -8.626991271972656
    5. '0' → logprob: -8.876991271972656
    6. '<|end|>' → logprob: -9.876991271972656
    7. '```' → logprob: -10.251991271972656
    8. '   ' → logprob: -11.126991271972656
    9. '{-#' → logprob: -11.876991271972656

Token 122: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.03364615887403488
    2. '1' → logprob: -3.4086461067199707
    3. ' ' → logprob: -14.783646583557129
    4. '   ' → logprob: -16.658645629882812
    5. '```' → logprob: -17.783645629882812
    6. ')' → logprob: -18.658645629882812
    7. '-' → logprob: -19.096145629882812
    8. '  ' → logprob: -20.158645629882812
    9. '۲' → logprob: -20.158645629882812
    10. '}' → logprob: -20.221145629882812

Token 123: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.029807770624756813
    2. ')
' → logprob: -3.5298078060150146
    3. ']' → logprob: -10.654808044433594
    4. '<|end|>' → logprob: -10.654808044433594
    5. '   ' → logprob: -12.529808044433594
    6. ')
' → logprob: -13.279808044433594
    7. '}' → logprob: -14.029808044433594
    8. ']
' → logprob: -14.154808044433594
    9. '```' → logprob: -14.279808044433594
    10. ')

' → logprob: -14.779808044433594

Token 124: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.004294453654438257
    2. '   ' → logprob: -5.504294395446777
    3. ' print' → logprob: -8.504294395446777
    4. '
' → logprob: -12.379294395446777
    5. '	print' → logprob: -12.379294395446777
    6. '<|end|>' → logprob: -12.379294395446777
    7. '  ' → logprob: -15.004294395446777
    8. '(print' → logprob: -15.879294395446777
    9. '```' → logprob: -16.004295349121094
    10. ' ' → logprob: -16.254295349121094

Token 125: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -3.054500666621607e-06
    2. '   ' → logprob: -13.25000286102295
    3. ' print' → logprob: -13.87500286102295
    4. '
' → logprob: -16.000003814697266
    5. '```' → logprob: -16.250003814697266
    6. '	print' → logprob: -16.750003814697266
    7. '#print' → logprob: -20.875003814697266
    8. '``' → logprob: -21.375003814697266
    9. '(print' → logprob: -21.375003814697266
    10. '    
' → logprob: -21.625003814697266

Token 126: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.0003407071635592729
    2. '(' → logprob: -8.000340461730957
    3. 'res' → logprob: -12.250340461730957
    4. ' (' → logprob: -15.375340461730957
    5. '()' → logprob: -15.500340461730957
    6. '(
' → logprob: -17.750341415405273
    7. '(re' → logprob: -18.750341415405273
    8. '(rest' → logprob: -18.750341415405273
    9. '(result' → logprob: -18.875341415405273
    10. '(r' → logprob: -18.875341415405273

Token 127: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ' )' → logprob: -16.625
    3. ')`' → logprob: -16.75
    4. '))' → logprob: -17.5
    5. '')' → logprob: -18.75
    6. ')
' → logprob: -18.75
    7. '`)' → logprob: -18.875
    8. ')}' → logprob: -19.5
    9. '")' → logprob: -20.75
    10. ')**' → logprob: -20.875


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 125
Tokens correctement prédits (1ère position, stricte): 43
Tokens correctement prédits (1ère position, avec adaptation): 47
Tokens correctement prédits (top 10): 104
Précision stricte (1ère position): 34.40%
Précision adaptée (1ère position): 37.60%
Précision (top 10): 83.20%
================================================================================
