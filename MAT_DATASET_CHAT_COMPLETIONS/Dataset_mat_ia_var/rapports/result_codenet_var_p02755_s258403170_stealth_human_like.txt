================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:23:25
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# à la one-again style
import math

def principal():
    # On lit deux entiers, fastoche
    vals = input().split()
    a = int(vals[0])
    b = int(vals[1])
    # Bon, là je fais des multiplications un peu random :/
    mini_a = a * 12.5
    maxi_a = (a + 1) * 12.5 # j'espère que c'est bon comme ça...
    mini_b = 10 * b
    maxi_b = 10 * (b + 1)

    # hmm... je crois qu'il fallait vérifier un truc ici
    if maxi_a <= mini_b:
        print(-1)
        return
    if maxi_b <= mini_a:
        print(-1)
        return
    
    # Enfin, on cherche la réponse cool
    resultat = max(math.ceil(mini_a), mini_b)
    print(resultat)

principal()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' à' (ID: 1221)
  → Token d'amorce (pas de prédiction)

Token 2: ' la' (ID: 557)
  → Token d'amorce (pas de prédiction)

Token 3: ' one' (ID: 1001)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.44976815581321716
    2. 'prem' → logprob: -1.8247681856155396
    3. 'mode' → logprob: -2.07476806640625
    4. 'p' → logprob: -4.44976806640625
    5. ' ' → logprob: -4.44976806640625
    6. 'l' → logprob: -5.44976806640625
    7. 'm' → logprob: -5.57476806640625
    8. ' ```' → logprob: -5.57476806640625
    9. 'la' → logprob: -5.94976806640625
    10. 'page' → logprob: -6.07476806640625

Token 4: '-ag' (ID: 39498)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4516837000846863
    2. '_' → logprob: -1.701683759689331
    3. '-l' → logprob: -2.201683759689331
    4. '-' → logprob: -3.451683759689331
    5. ' ' → logprob: -4.951683521270752
    6. '`' → logprob: -5.076683521270752
    7. 'l' → logprob: -5.076683521270752
    8. '=' → logprob: -5.451683521270752
    9. '_l' → logprob: -5.701683521270752
    10. ' #' → logprob: -6.201683521270752

Token 5: 'ain' (ID: 524)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5482681393623352
    2. 'g' → logprob: -1.0482680797576904
    3. '#' → logprob: -3.5482680797576904
    4. 'in' → logprob: -4.0482683181762695
    5. 'ent' → logprob: -4.9232683181762695
    6. 'n' → logprob: -6.0482683181762695
    7. 'I' → logprob: -6.6732683181762695
    8. 'm' → logprob: -6.7982683181762695
    9. '_g' → logprob: -7.0482683181762695
    10. '```' → logprob: -7.0482683181762695

Token 6: ' style' (ID: 2713)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0225353240966797
    2. '#' → logprob: -1.7725353240966797
    3. 'i' → logprob: -1.8975353240966797
    4. '-' → logprob: -2.1475353240966797
    5. 'g' → logprob: -2.3975353240966797
    6. 'n' → logprob: -3.1475353240966797
    7. ' ' → logprob: -3.6475353240966797
    8. 'in' → logprob: -4.39753532409668
    9. '=' → logprob: -5.27253532409668
    10. 'l' → logprob: -5.39753532409668

Token 7: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.127977967262268
    2. '#' → logprob: -1.252977967262268
    3. '```' → logprob: -1.752977967262268
    4. '_' → logprob: -3.5029778480529785
    5. 'def' → logprob: -3.5029778480529785
    6. '`' → logprob: -3.7529778480529785
    7. ' ' → logprob: -3.8779778480529785
    8. '-' → logprob: -4.1279778480529785
    9. '\n' → logprob: -4.2529778480529785
    10. ''' → logprob: -4.6279778480529785

Token 8: 'import' (ID: 561)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8410398960113525
    2. '```' → logprob: -1.0910398960113525
    3. '#' → logprob: -2.7160398960113525
    4. '_' → logprob: -2.8410398960113525
    5. '`' → logprob: -3.4660398960113525
    6. '-' → logprob: -4.716039657592773
    7. 'def' → logprob: -4.716039657592773
    8. '=' → logprob: -5.091039657592773
    9. ' ' → logprob: -5.091039657592773
    10. '``' → logprob: -5.091039657592773

Token 9: ' math' (ID: 13324)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.22572380304336548
    2. ' ' → logprob: -2.4757237434387207
    3. ' numpy' → logprob: -2.7257237434387207
    4. ' pandas' → logprob: -4.100723743438721
    5. ' sys' → logprob: -4.350723743438721
    6. ' tensorflow' → logprob: -4.725723743438721
    7. ' requests' → logprob: -5.850723743438721
    8. ' re' → logprob: -6.350723743438721
    9. ' random' → logprob: -6.475723743438721
    10. '_' → logprob: -6.475723743438721

Token 10: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0008375041070394218
    2. '\' → logprob: -8.125837326049805
    3. '.
' → logprob: -9.000837326049805
    4. 'def' → logprob: -9.250837326049805
    5. '.

' → logprob: -9.875837326049805
    6. '(' → logprob: -10.000837326049805
    7. 'import' → logprob: -10.125837326049805
    8. '```' → logprob: -10.125837326049805
    9. ',' → logprob: -10.500837326049805
    10. '#' → logprob: -11.250837326049805

Token 11: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1198195368051529
    2. '.' → logprob: -2.7448196411132812
    3. '```' → logprob: -4.994819641113281
    4. 'import' → logprob: -5.369819641113281
    5. '=' → logprob: -5.494819641113281
    6. '*' → logprob: -5.494819641113281
    7. 'pi' → logprob: -5.619819641113281
    8. 'log' → logprob: -5.619819641113281
    9. '#' → logprob: -5.744819641113281
    10. 'e' → logprob: -5.994819641113281

Token 12: ' principal' (ID: 10589)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.15324680507183075
    2. ' calculate' → logprob: -3.2782468795776367
    3. ' area' → logprob: -3.7782468795776367
    4. ' math' → logprob: -3.9032468795776367
    5. ' f' → logprob: -4.528246879577637
    6. ' factorial' → logprob: -4.528246879577637
    7. ' one' → logprob: -5.403246879577637
    8. '_' → logprob: -5.403246879577637
    9. ' factor' → logprob: -5.528246879577637
    10. ' pow' → logprob: -5.653246879577637

Token 13: '():
' (ID: 8595)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2990321218967438
    2. '(' → logprob: -1.9240320920944214
    3. '_amount' → logprob: -2.924032211303711
    4. ' (' → logprob: -3.424032211303711
    5. '_angle' → logprob: -5.049032211303711
    6. '_:' → logprob: -5.549032211303711
    7. '():' → logprob: -6.049032211303711
    8. ':' → logprob: -6.049032211303711
    9. ' ():' → logprob: -6.549032211303711
    10. '):' → logprob: -6.924032211303711

Token 14: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.742436408996582
    2. '   ' → logprob: -0.992436408996582
    3. '    ' → logprob: -1.992436408996582
    4. ' pass' → logprob: -5.242436408996582
    5. ' )' → logprob: -5.742436408996582
    6. '(' → logprob: -6.367436408996582
    7. 'n' → logprob: -7.117436408996582
    8. '  ' → logprob: -7.117436408996582
    9. ' (' → logprob: -7.117436408996582
    10. 'pass' → logprob: -7.742436408996582

Token 15: ' #' (ID: 1069)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5584275722503662
    2. '   ' → logprob: -1.6834275722503662
    3. ' n' → logprob: -2.808427572250366
    4. ' return' → logprob: -3.683427572250366
    5. 'x' → logprob: -3.933427572250366
    6. 'return' → logprob: -4.058427810668945
    7. 'print' → logprob: -4.183427810668945
    8. 'p' → logprob: -4.558427810668945
    9. ' ' → logprob: -4.808427810668945
    10. 's' → logprob: -5.058427810668945

Token 16: ' On' (ID: 2160)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5314860939979553
    2. '    ' → logprob: -2.0314860343933105
    3. ' #' → logprob: -2.6564860343933105
    4. ' ' → logprob: -2.9064860343933105
    5. 'pass' → logprob: -3.4064860343933105
    6. '#' → logprob: -3.6564860343933105
    7. ' pass' → logprob: -3.6564860343933105
    8. 'n' → logprob: -4.1564860343933105
    9. 'x' → logprob: -4.6564860343933105
    10. 's' → logprob: -4.7814860343933105

Token 17: ' lit' (ID: 11980)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30331945419311523
    2. ' =' → logprob: -2.6783194541931152
    3. ' continue' → logprob: -3.1783194541931152
    4. 'e' → logprob: -4.678319454193115
    5. '=' → logprob: -4.803319454193115
    6. '    ' → logprob: -4.928319454193115
    7. ' veut' → logprob: -4.928319454193115
    8. ' the' → logprob: -5.053319454193115
    9. ' revient' → logprob: -5.053319454193115
    10. ' peut' → logprob: -5.303319454193115

Token 18: ' deux' (ID: 10301)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.8934379816055298
    2. ' ' → logprob: -1.0184379816055298
    3. ' l' → logprob: -2.0184378623962402
    4. ' le' → logprob: -3.6434378623962402
    5. ' une' → logprob: -3.8934378623962402
    6. '()' → logprob: -4.39343786239624
    7. ' les' → logprob: -4.64343786239624
    8. 'l' → logprob: -5.14343786239624
    9. '   ' → logprob: -5.26843786239624
    10. 'le' → logprob: -5.64343786239624

Token 19: ' ent' (ID: 1121)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7112990617752075
    2. ' nombres' → logprob: -0.7112990617752075
    3. ' nombre' → logprob: -5.086298942565918
    4. ' ent' → logprob: -5.586298942565918
    5. ' numbers' → logprob: -5.836298942565918
    6. ' valeurs' → logprob: -6.336298942565918
    7. 'nombre' → logprob: -7.461298942565918
    8. ' integers' → logprob: -7.461298942565918
    9. 'n' → logprob: -7.961298942565918
    10. ' a' → logprob: -8.336298942565918

Token 20: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.0028601549565792084
    2. 'ières' → logprob: -6.627860069274902
    3. 'r' → logprob: -7.002860069274902
    4. 'i' → logprob: -7.752860069274902
    5. 'ri' → logprob: -9.252860069274902
    6. 'ier' → logprob: -10.127860069274902
    7. 'ées' → logprob: -11.502860069274902
    8. 'ers' → logprob: -11.877860069274902
    9. 'rees' → logprob: -11.877860069274902
    10. 'ités' → logprob: -12.002860069274902

Token 21: ',' (ID: 11)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.04313472658395767
    2. 's' → logprob: -4.918134689331055
    3. '  ' → logprob: -5.293134689331055
    4. 'n' → logprob: -5.293134689331055
    5. ' ,' → logprob: -5.418134689331055
    6. 'a' → logprob: -5.543134689331055
    7. ' ' → logprob: -5.668134689331055
    8. ',' → logprob: -5.918134689331055
    9. '   ' → logprob: -6.668134689331055
    10. 'u' → logprob: -6.918134689331055

Token 22: ' fast' (ID: 5661)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08157283067703247
    2. '  ' → logprob: -3.7065727710723877
    3. ' ,' → logprob: -4.581573009490967
    4. ' a' → logprob: -4.706573009490967
    5. '   ' → logprob: -5.331573009490967
    6. '    ' → logprob: -5.581573009490967
    7. ' )' → logprob: -5.831573009490967
    8. 's' → logprob: -5.956573009490967
    9. 'x' → logprob: -6.581573009490967
    10. ',' → logprob: -6.581573009490967

Token 23: 'oche' (ID: 13210)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08537933230400085
    2. 'e' → logprob: -3.5853793621063232
    3. ' =' → logprob: -3.8353793621063232
    4. ' input' → logprob: -4.960379123687744
    5. '  ' → logprob: -5.585379123687744
    6. '_' → logprob: -5.835379123687744
    7. 'input' → logprob: -6.085379123687744
    8. ' i' → logprob: -6.335379123687744
    9. 'i' → logprob: -6.335379123687744
    10. ',' → logprob: -6.460379123687744

Token 24: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17741550505161285
    2. ' ' → logprob: -2.427415609359741
    3. '  ' → logprob: -3.802415609359741
    4. 'x' → logprob: -4.177415370941162
    5. ',' → logprob: -4.802415370941162
    6. 'n' → logprob: -5.302415370941162
    7. '    ' → logprob: -5.427415370941162
    8. '    
' → logprob: -5.927415370941162
    9. '...' → logprob: -5.927415370941162
    10. 'a' → logprob: -6.427415370941162

Token 25: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6344583034515381
    2. '   ' → logprob: -1.634458303451538
    3. 'n' → logprob: -1.759458303451538
    4. 'a' → logprob: -3.384458303451538
    5. '    ' → logprob: -4.009458541870117
    6. 'x' → logprob: -4.009458541870117
    7. '  ' → logprob: -4.884458541870117
    8. 'r' → logprob: -5.884458541870117
    9. ',' → logprob: -6.134458541870117
    10. 's' → logprob: -6.384458541870117

Token 26: ' vals' (ID: 58985)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5314058661460876
    2. 'x' → logprob: -1.4064059257507324
    3. ' a' → logprob: -2.6564059257507324
    4. ' x' → logprob: -2.9064059257507324
    5. 'n' → logprob: -3.2814059257507324
    6. ' n' → logprob: -5.906405925750732
    7. '   ' → logprob: -7.156405925750732
    8. ' ' → logprob: -7.656405925750732
    9. 'val' → logprob: -8.906405448913574
    10. 'num' → logprob: -9.156405448913574

Token 27: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2520812153816223
    2. '=' → logprob: -1.5020811557769775
    3. ',' → logprob: -10.002080917358398
    4. '_' → logprob: -10.377080917358398
    5. ' ' → logprob: -10.377080917358398
    6. '   ' → logprob: -11.502080917358398
    7. '[' → logprob: -11.627080917358398
    8. '=[]' → logprob: -12.127080917358398
    9. '=input' → logprob: -12.502080917358398
    10. '[]' → logprob: -13.127080917358398

Token 28: ' input' (ID: 3422)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.466257780790329
    2. ' input' → logprob: -1.2162578105926514
    3. ' [' → logprob: -3.4662578105926514
    4. 'input' → logprob: -3.9662578105926514
    5. ' map' → logprob: -4.591257572174072
    6. 'list' → logprob: -4.591257572174072
    7. '[' → logprob: -5.841257572174072
    8. ' ' → logprob: -6.591257572174072
    9. ' tuple' → logprob: -7.466257572174072
    10. '[input' → logprob: -7.841257572174072

Token 29: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4559962749481201
    2. '()' → logprob: -1.0809962749481201
    3. '().' → logprob: -3.70599627494812
    4. '('' → logprob: -6.455996513366699
    5. '("' → logprob: -7.705996513366699
    6. '("("' → logprob: -8.4559965133667
    7. '("")' → logprob: -9.7059965133667
    8. ' ()' → logprob: -11.5809965133667
    9. '("").' → logprob: -11.9559965133667
    10. '(`' → logprob: -11.9559965133667

Token 30: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.018162349238991737
    2. 'strip' → logprob: -4.018162250518799
    3. 'rstrip' → logprob: -11.768162727355957
    4. 'spl' → logprob: -12.643162727355957
    5. 's' → logprob: -14.018162727355957
    6. ' split' → logprob: -15.018162727355957
    7. 'sp' → logprob: -16.01816177368164
    8. 'replace' → logprob: -16.76816177368164
    9. '(split' → logprob: -17.14316177368164
    10. '```' → logprob: -18.14316177368164

Token 31: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2999804615974426
    2. '('' → logprob: -1.4249804019927979
    3. '()' → logprob: -4.299980640411377
    4. '("("' → logprob: -5.299980640411377
    5. '("' → logprob: -10.049980163574219
    6. '(

' → logprob: -11.674980163574219
    7. '(
' → logprob: -11.799980163574219
    8. '(',' → logprob: -11.924980163574219
    9. ' (' → logprob: -11.924980163574219
    10. '(`' → logprob: -12.174980163574219

Token 32: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.22197359800338745
    2. '[' → logprob: -2.4719736576080322
    3. '   ' → logprob: -2.9719736576080322
    4. 'v' → logprob: -3.7219736576080322
    5. '  ' → logprob: -4.721973419189453
    6. 'n' → logprob: -5.721973419189453
    7. ')' → logprob: -5.721973419189453
    8. '  
' → logprob: -5.846973419189453
    9. '    ' → logprob: -6.346973419189453
    10. ' 
' → logprob: -6.471973419189453

Token 33: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.46495547890663147
    2. 'n' → logprob: -1.964955449104309
    3. 'x' → logprob: -2.2149555683135986
    4. 'p' → logprob: -3.0899555683135986
    5. 'v' → logprob: -3.4649555683135986
    6. ' a' → logprob: -4.2149553298950195
    7. 'i' → logprob: -4.8399553298950195
    8. ' ' → logprob: -5.7149553298950195
    9. ' x' → logprob: -5.7149553298950195
    10. ' p' → logprob: -6.2149553298950195

Token 34: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6372277140617371
    2. ' =' → logprob: -0.8872277140617371
    3. '=' → logprob: -3.512227773666382
    4. ' ' → logprob: -4.387227535247803
    5. '[' → logprob: -5.262227535247803
    6. '_' → logprob: -5.637227535247803
    7. ' ,' → logprob: -6.137227535247803
    8. 'a' → logprob: -6.262227535247803
    9. '=int' → logprob: -6.762227535247803
    10. 's' → logprob: -7.012227535247803

Token 35: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.4740957021713257
    2. 'int' → logprob: -0.9740957021713257
    3. ' ' → logprob: -11.849095344543457
    4. '[int' → logprob: -12.099095344543457
    5. ' float' → logprob: -12.974095344543457
    6. 'float' → logprob: -13.849095344543457
    7. '=int' → logprob: -14.224095344543457
    8. '(int' → logprob: -14.349095344543457
    9. '  ' → logprob: -14.724095344543457
    10. '<int' → logprob: -15.224095344543457

Token 36: '(vals' (ID: 167053)
  Prédit: '(vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(vals' → logprob: -0.062017761170864105
    2. '(' → logprob: -2.8120176792144775
    3. '(val' → logprob: -9.937017440795898
    4. '(values' → logprob: -14.062017440795898
    5. '(
' → logprob: -15.312017440795898
    6. '(vars' → logprob: -15.437017440795898
    7. '(s' → logprob: -15.812017440795898
    8. ' (' → logprob: -15.937017440795898
    9. ' vals' → logprob: -16.8120174407959
    10. '(nums' → logprob: -17.3120174407959

Token 37: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.522638169466518e-05
    2. ' [' → logprob: -11.250024795532227
    3. '0' → logprob: -11.500024795532227
    4. '   ' → logprob: -13.875024795532227
    5. ')' → logprob: -14.500024795532227
    6. ' ' → logprob: -15.000024795532227
    7. '(' → logprob: -16.250024795532227
    8. '\[' → logprob: -16.750024795532227
    9. '1' → logprob: -17.250024795532227
    10. '	' → logprob: -17.875024795532227

Token 38: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.641841820150148e-05
    2. '1' → logprob: -10.87502670288086
    3. ' ' → logprob: -11.87502670288086
    4. '[' → logprob: -16.12502670288086
    5. '-' → logprob: -16.50002670288086
    6. ')' → logprob: -17.00002670288086
    7. '])' → logprob: -17.06252670288086
    8. '   ' → logprob: -17.25002670288086
    9. ']' → logprob: -17.31252670288086
    10. '2' → logprob: -17.68752670288086

Token 39: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0005593468667939305
    2. ')' → logprob: -8.25055980682373
    3. ' ])' → logprob: -8.50055980682373
    4. ']' → logprob: -9.62555980682373
    5. '])
' → logprob: -11.25055980682373
    6. ''])' → logprob: -11.37555980682373
    7. ' )' → logprob: -14.00055980682373
    8. ' ' → logprob: -14.25055980682373
    9. ')])' → logprob: -14.50055980682373
    10. '],' → logprob: -14.62555980682373

Token 40: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.39756283164024353
    2. '<|end|>' → logprob: -1.147562861442566
    3. '<|end|>' → logprob: -6.0225629806518555
    4. ')' → logprob: -6.2725629806518555
    5. '  ' → logprob: -6.3975629806518555
    6. 'a' → logprob: -6.8975629806518555
    7. ' 
' → logprob: -7.2725629806518555
    8. ' ,' → logprob: -7.3975629806518555
    9. ',' → logprob: -7.5225629806518555
    10. ' )' → logprob: -7.6475629806518555

Token 41: ' b' (ID: 287)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.030002709478139877
    2. 'b' (adapté à ' b') → logprob: -4.405002593994141
    3. ' b' → logprob: -4.780002593994141
    4. ',' → logprob: -6.030002593994141
    5. ' ,' → logprob: -6.280002593994141
    6. 'a' → logprob: -6.405002593994141
    7. '  ' → logprob: -6.780002593994141
    8. ' a' → logprob: -7.405002593994141
    9. ')' → logprob: -7.905002593994141
    10. ''' → logprob: -8.40500259399414

Token 42: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004486492834985256
    2. '=' → logprob: -5.504486560821533
    3. ')' → logprob: -8.629486083984375
    4. ' ' → logprob: -8.754486083984375
    5. '<|end|>' → logprob: -10.004486083984375
    6. '<|end|>' → logprob: -11.879486083984375
    7. ' )' → logprob: -12.504486083984375
    8. '  ' → logprob: -12.754486083984375
    9. ' =)' → logprob: -12.879486083984375
    10. ' ' → logprob: -13.004486083984375

Token 43: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.1797521859407425
    2. 'int' → logprob: -1.804752230644226
    3. '(int' → logprob: -13.304752349853516
    4. '=int' → logprob: -13.429752349853516
    5. ' ' → logprob: -13.929752349853516
    6. '<int' → logprob: -14.179752349853516
    7. ' a' → logprob: -14.679752349853516
    8. 'a' → logprob: -14.679752349853516
    9. '[int' → logprob: -14.679752349853516
    10. ' ' → logprob: -14.929752349853516

Token 44: '(vals' (ID: 167053)
  Prédit: '(vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(vals' → logprob: -0.014173151925206184
    2. '(' → logprob: -4.2641730308532715
    3. '(val' → logprob: -11.88917350769043
    4. '(values' → logprob: -14.26417350769043
    5. '(vars' → logprob: -14.26417350769043
    6. ' (' → logprob: -15.01417350769043
    7. '(s' → logprob: -15.26417350769043
    8. '(
' → logprob: -15.26417350769043
    9. '(

' → logprob: -16.38917350769043
    10. ')' → logprob: -16.51417350769043

Token 45: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.07895687222480774
    2. ')' → logprob: -2.5789568424224854
    3. '1' → logprob: -10.578956604003906
    4. '])' → logprob: -11.578956604003906
    5. ' )' → logprob: -11.578956604003906
    6. ' ' → logprob: -12.078956604003906
    7. ']' → logprob: -12.703956604003906
    8. ')[' → logprob: -12.953956604003906
    9. '0' → logprob: -13.203956604003906
    10. '```' → logprob: -13.328956604003906

Token 46: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003216214943677187
    2. '0' → logprob: -5.75321626663208
    3. ' ' → logprob: -10.378215789794922
    4. '])' → logprob: -12.003215789794922
    5. ')' → logprob: -14.128215789794922
    6. '   ' → logprob: -15.878215789794922
    7. '2' → logprob: -16.003215789794922
    8. ']' → logprob: -16.253215789794922
    9. '```' → logprob: -16.878215789794922
    10. '  ' → logprob: -17.003215789794922

Token 47: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ')
' → logprob: -15.125
    3. ' )' → logprob: -17.375
    4. '}' → logprob: -18.625
    5. '))' → logprob: -18.75
    6. ']' → logprob: -18.75
    7. ')a' → logprob: -19.125
    8. ')

' → logprob: -19.375
    9. '),' → logprob: -19.625
    10. '）' → logprob: -20.375

Token 48: '   ' (ID: 271)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.8176810145378113
    2. '   ' → logprob: -2.192681074142456
    3. ')' → logprob: -2.442681074142456
    4. ' 
' → logprob: -2.817681074142456
    5. '\' → logprob: -2.942681074142456
    6. '
' → logprob: -2.942681074142456
    7. '  
' → logprob: -3.067681074142456
    8. '    
' → logprob: -3.067681074142456
    9. '#' → logprob: -3.192681074142456
    10. ' ' → logprob: -4.317680835723877

Token 49: ' #' (ID: 1069)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8976330757141113
    2. '#' (adapté à ' #') → logprob: -1.7726330757141113
    3. 'c' → logprob: -2.0226330757141113
    4. ')' → logprob: -2.2726330757141113
    5. 'if' → logprob: -3.2726330757141113
    6. '+' → logprob: -3.8976330757141113
    7. ',' → logprob: -4.272633075714111
    8. ' 
' → logprob: -4.522633075714111
    9. ' if' → logprob: -4.647633075714111
    10. 'n' → logprob: -4.647633075714111

Token 50: ' Bon' (ID: 12658)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.0476930141448975
    2. 'c' → logprob: -1.9226930141448975
    3. 'if' → logprob: -2.0476930141448975
    4. ' return' → logprob: -2.6726930141448975
    5. ' c' → logprob: -2.9226930141448975
    6. 'return' → logprob: -3.5476930141448975
    7. 'print' → logprob: -3.6726930141448975
    8. 'result' → logprob: -4.172693252563477
    9. 's' → logprob: -4.422693252563477
    10. ' print' → logprob: -4.547693252563477

Token 51: ',' (ID: 11)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.12392017245292664
    2. '<|end|>' → logprob: -3.123920202255249
    3. '   ' → logprob: -3.748920202255249
    4. ',' → logprob: -4.24891996383667
    5. 's' → logprob: -5.24891996383667
    6. ' ,' → logprob: -5.37391996383667
    7. ')' → logprob: -5.62391996383667
    8. '  ' → logprob: -5.62391996383667
    9. 'n' → logprob: -5.99891996383667
    10. '    ' → logprob: -6.37391996383667

Token 52: ' là' (ID: 8052)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.13979242742061615
    2. 'c' → logprob: -2.6397924423217773
    3. ' on' → logprob: -4.639792442321777
    4. ' max' → logprob: -4.764792442321777
    5. ' res' → logprob: -5.139792442321777
    6. ' if' → logprob: -5.389792442321777
    7. ' result' → logprob: -5.764792442321777
    8. ' d' → logprob: -6.139792442321777
    9. ' ' → logprob: -6.264792442321777
    10. ' for' → logprob: -6.264792442321777

Token 53: ' je' (ID: 1264)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2588977813720703
    2. ' c' → logprob: -2.2588977813720703
    3. ' ' → logprob: -3.1338977813720703
    4. ' ,' → logprob: -4.00889778137207
    5. ' if' → logprob: -4.50889778137207
    6. 'c' → logprob: -4.75889778137207
    7. ' on' → logprob: -5.13389778137207
    8. ' je' → logprob: -5.25889778137207
    9. '  ' → logprob: -5.50889778137207
    10. ' a' → logprob: -5.88389778137207

Token 54: ' fais' (ID: 24376)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7010421752929688
    2. ' vais' → logprob: -2.4510421752929688
    3. 'vais' → logprob: -2.4510421752929688
    4. ' peux' → logprob: -3.0760421752929688
    5. ' veux' → logprob: -3.4510421752929688
    6. 'veux' → logprob: -3.5760421752929688
    7. ' pense' → logprob: -3.7010421752929688
    8. ' continue' → logprob: -3.8260421752929688
    9. 'm' → logprob: -3.8260421752929688
    10. 'f' → logprob: -3.9510421752929688

Token 55: ' des' (ID: 731)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.36116617918014526
    2. ' un' → logprob: -2.36116623878479
    3. 'c' → logprob: -3.11116623878479
    4. 's' → logprob: -3.73616623878479
    5. 'un' → logprob: -3.73616623878479
    6. ' c' → logprob: -3.86116623878479
    7. ':' → logprob: -4.361166000366211
    8. ' la' → logprob: -4.611166000366211
    9. ' quelque' → logprob: -4.986166000366211
    10. 'le' → logprob: -5.111166000366211

Token 56: ' multip' (ID: 17524)
  Prédit: ' trucs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' trucs' → logprob: -0.1734200119972229
    2. ' choses' → logprob: -2.923419952392578
    3. ' calcul' → logprob: -3.673419952392578
    4. ' truc' → logprob: -4.423419952392578
    5. 'calcul' → logprob: -4.423419952392578
    6. ' tests' → logprob: -4.798419952392578
    7. ' math' → logprob: -5.173419952392578
    8. ' checks' → logprob: -5.423419952392578
    9. ' ' → logprob: -5.673419952392578
    10. ' calculations' → logprob: -5.985919952392578

Token 57: 'lications' (ID: 17986)
  Prédit: 'lications'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lications' → logprob: -0.023801010102033615
    2. 'lication' → logprob: -3.89880108833313
    3. 'li' → logprob: -6.648800849914551
    4. 'lic' → logprob: -7.148800849914551
    5. 'l' → logprob: -7.398800849914551
    6. 'lica' → logprob: -8.77380084991455
    7. 'les' → logprob: -9.64880084991455
    8. 'ications' → logprob: -9.77380084991455
    9. '*' → logprob: -10.14880084991455
    10. 'lié' → logprob: -10.27380084991455

Token 58: ' un' (ID: 537)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.43913793563842773
    2. ' ' → logprob: -1.1891379356384277
    3. '   ' → logprob: -3.9391379356384277
    4. ' *' → logprob: -4.314137935638428
    5. ',' → logprob: -4.939137935638428
    6. '  ' → logprob: -6.564137935638428
    7. '<|end|>' → logprob: -6.564137935638428
    8. ' ,' → logprob: -6.689137935638428
    9. '    
' → logprob: -6.814137935638428
    10. '    ' → logprob: -7.064137935638428

Token 59: ' peu' (ID: 9235)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.2130526602268219
    2. ' ' → logprob: -2.963052749633789
    3. 't' → logprob: -3.088052749633789
    4. ' *' → logprob: -3.088052749633789
    5. 's' → logprob: -4.338052749633789
    6. '+' → logprob: -5.088052749633789
    7. 'e' → logprob: -5.213052749633789
    8. 'b' → logprob: -6.088052749633789
    9. '   ' → logprob: -6.213052749633789
    10. ',' → logprob: -6.463052749633789

Token 60: ' random' (ID: 7526)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.6726186871528625
    2. ' b' → logprob: -2.1726186275482178
    3. 'à' → logprob: -2.2976186275482178
    4. '```' → logprob: -3.0476186275482178
    5. 'che' → logprob: -3.6726186275482178
    6. 'na' → logprob: -4.297618865966797
    7. 'plus' → logprob: -4.547618865966797
    8. 's' → logprob: -4.672618865966797
    9. 'long' → logprob: -4.672618865966797
    10. 't' → logprob: -4.797618865966797

Token 61: ' :' (ID: 712)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.38335609436035156
    2. '   ' → logprob: -2.0083560943603516
    3. ',' → logprob: -2.8833560943603516
    4. '<|end|>' → logprob: -3.0083560943603516
    5. '*' → logprob: -3.1333560943603516
    6. ' ,' → logprob: -5.133356094360352
    7. '  ' → logprob: -5.133356094360352
    8. 'a' → logprob: -5.383356094360352
    9. '    ' → logprob: -5.633356094360352
    10. ')' → logprob: -5.633356094360352

Token 62: '/
' (ID: 11124)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.19751283526420593
    2. ' c' → logprob: -2.9475128650665283
    3. ' 
' → logprob: -3.0725128650665283
    4. 'c' → logprob: -3.6975128650665283
    5. '  
' → logprob: -4.072512626647949
    6. 'n' → logprob: -5.197512626647949
    7. '   ' → logprob: -5.572512626647949
    8. '    
' → logprob: -5.822512626647949
    9. 's' → logprob: -5.947512626647949
    10. 'result' → logprob: -6.072512626647949

Token 63: '   ' (ID: 271)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.9088764190673828
    2. ' ' → logprob: -1.5338764190673828
    3. ' 
' → logprob: -1.9088764190673828
    4. '  
' → logprob: -2.908876419067383
    5. 'c' → logprob: -3.158876419067383
    6. '    
' → logprob: -3.658876419067383
    7. '   ' → logprob: -3.783876419067383
    8. '\n' → logprob: -4.158876419067383
    9. '   
' → logprob: -4.283876419067383
    10. 'n' → logprob: -4.408876419067383

Token 64: ' mini' (ID: 15065)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.23184406757354736
    2. 'result' → logprob: -2.106843948364258
    3. ' result' → logprob: -4.231843948364258
    4. 'res' → logprob: -4.481843948364258
    5. ' c' → logprob: -4.731843948364258
    6. 'a' → logprob: -4.731843948364258
    7. 'x' → logprob: -4.856843948364258
    8. 'print' → logprob: -5.231843948364258
    9. 'for' → logprob: -5.231843948364258
    10. ' res' → logprob: -5.606843948364258

Token 65: '_a' (ID: 10852)
  Prédit: 'mum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mum' → logprob: -0.5264070630073547
    2. ' =' → logprob: -1.40140700340271
    3. 'm' → logprob: -2.15140700340271
    4. '=' → logprob: -3.40140700340271
    5. '_val' → logprob: -5.026407241821289
    6. '_' → logprob: -5.776407241821289
    7. 'val' → logprob: -7.401407241821289
    8. 'mal' → logprob: -7.526407241821289
    9. '_m' → logprob: -7.651407241821289
    10. 'n' → logprob: -7.901407241821289

Token 66: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16382160782814026
    2. '=' → logprob: -1.9138215780258179
    3. 'x' → logprob: -6.913821697235107
    4. 'n' → logprob: -7.038821697235107
    5. 'l' → logprob: -7.663821697235107
    6. 'm' → logprob: -8.41382122039795
    7. 'nd' → logprob: -8.66382122039795
    8. ',' → logprob: -8.66382122039795
    9. ' ' → logprob: -8.91382122039795
    10. '   ' → logprob: -9.03882122039795

Token 67: ' a' (ID: 261)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.6847192049026489
    2. ' math' → logprob: -1.059719204902649
    3. ' a' → logprob: -2.6847190856933594
    4. ' max' → logprob: -3.0597190856933594
    5. 'min' → logprob: -4.184719085693359
    6. 'a' → logprob: -4.934719085693359
    7. 'math' → logprob: -4.934719085693359
    8. ' int' → logprob: -5.934719085693359
    9. 'max' → logprob: -7.184719085693359
    10. ' ' → logprob: -7.559719085693359

Token 68: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.09088245779275894
    2. '*' → logprob: -3.0908825397491455
    3. ' ' → logprob: -4.090882301330566
    4. '%' → logprob: -4.840882301330566
    5. '+' → logprob: -5.090882301330566
    6. ' %' → logprob: -5.465882301330566
    7. ' +' → logprob: -5.715882301330566
    8. '<|end|>' → logprob: -6.965882301330566
    9. ' //' → logprob: -7.340882301330566
    10. '-' → logprob: -8.090882301330566

Token 69: ' ' (ID: 220)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.0772967338562012
    2. '2' → logprob: -1.5772967338562012
    3. ' math' → logprob: -1.9522967338562012
    4. ' b' → logprob: -2.452296733856201
    5. ' ' → logprob: -2.577296733856201
    6. '0' → logprob: -3.077296733856201
    7. 'a' → logprob: -3.577296733856201
    8. '3' → logprob: -3.702296733856201
    9. ' a' → logprob: -4.202296733856201
    10. 'math' → logprob: -4.327296733856201

Token 70: '12' (ID: 899)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.1086944341659546
    2. '2' → logprob: -1.4836944341659546
    3. 'a' → logprob: -1.9836944341659546
    4. '3' → logprob: -2.608694553375244
    5. '0' → logprob: -2.733694553375244
    6. '1' → logprob: -3.108694553375244
    7. 'math' → logprob: -3.233694553375244
    8. '(' → logprob: -4.608694553375244
    9. '(a' → logprob: -4.608694553375244
    10. '10' → logprob: -4.608694553375244

Token 71: '.' (ID: 13)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7729852199554443
    2. '*' → logprob: -1.5229852199554443
    3. '<|end|>' → logprob: -1.5229852199554443
    4. '+' → logprob: -3.6479852199554443
    5. ' *' → logprob: -4.147985458374023
    6. '0' → logprob: -4.272985458374023
    7. '<|end|>' → logprob: -4.397985458374023
    8. ' ' → logprob: -5.397985458374023
    9. ' +' → logprob: -5.397985458374023
    10. '4' → logprob: -5.522985458374023

Token 72: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.35901591181755066
    2. '3' → logprob: -1.984015941619873
    3. '7' → logprob: -2.984015941619873
    4. '4' → logprob: -3.734015941619873
    5. '0' → logprob: -3.859015941619873
    6. '6' → logprob: -4.234015941619873
    7. '2' → logprob: -4.609015941619873
    8. '1' → logprob: -4.734015941619873
    9. '8' → logprob: -4.734015941619873
    10. '34' → logprob: -4.734015941619873

Token 73: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0812270641326904
    2. '*' → logprob: -1.2062270641326904
    3. '
' → logprob: -2.2062270641326904
    4. '0' → logprob: -2.4562270641326904
    5. '<|end|>' → logprob: -2.8312270641326904
    6. '6' → logprob: -3.7062270641326904
    7. ')' → logprob: -4.0812273025512695
    8. ' *' → logprob: -4.0812273025512695
    9. ' 
' → logprob: -4.9562273025512695
    10. '```' → logprob: -5.4562273025512695

Token 74: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.44733792543411255
    2. '*' → logprob: -1.4473378658294678
    3. '<|end|>' → logprob: -3.0723378658294678
    4. ')' → logprob: -3.8223378658294678
    5. 'b' → logprob: -4.322338104248047
    6. '0' → logprob: -4.697338104248047
    7. '    
' → logprob: -5.197338104248047
    8. '6' → logprob: -5.197338104248047
    9. ' ' → logprob: -5.322338104248047
    10. 'a' → logprob: -5.947338104248047

Token 75: ' maxi' (ID: 111201)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.670481264591217
    2. '*' → logprob: -0.920481264591217
    3. '
' → logprob: -3.2954812049865723
    4. ' ' → logprob: -4.420481204986572
    5. ' b' → logprob: -5.170481204986572
    6. '\n' → logprob: -5.420481204986572
    7. '    
' → logprob: -5.545481204986572
    8. ' *' → logprob: -5.545481204986572
    9. '*b' → logprob: -5.795481204986572
    10. ')' → logprob: -5.920481204986572

Token 76: '_a' (ID: 10852)
  Prédit: '_b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.5855417847633362
    2. '_a' → logprob: -1.0855417251586914
    3. '_' → logprob: -2.3355417251586914
    4. ' =' → logprob: -5.210541725158691
    5. '=' → logprob: -6.085541725158691
    6. 'a' → logprob: -7.710541725158691
    7. ' _' → logprob: -9.085541725158691
    8. 'b' → logprob: -9.335541725158691
    9. '_x' → logprob: -9.835541725158691
    10. ' ' → logprob: -9.960541725158691

Token 77: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06994020938873291
    2. '=' → logprob: -2.6949400901794434
    3. ' ' → logprob: -12.819940567016602
    4. 'a' → logprob: -14.694940567016602
    5. '=a' → logprob: -15.069940567016602
    6. ' ' → logprob: -16.4449405670166
    7. 'b' → logprob: -16.5699405670166
    8. ')' → logprob: -16.9449405670166
    9. '=b' → logprob: -16.9449405670166
    10. ' =
' → logprob: -17.3824405670166

Token 78: ' (' (ID: 350)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.8021026253700256
    2. ' a' → logprob: -1.3021025657653809
    3. 'b' → logprob: -1.9271025657653809
    4. 'a' → logprob: -2.177102565765381
    5. ' math' → logprob: -4.802102565765381
    6. ' ' → logprob: -5.052102565765381
    7. 'math' → logprob: -6.677102565765381
    8. ' max' → logprob: -7.677102565765381
    9. '10' → logprob: -7.927102565765381
    10. '20' → logprob: -8.114603042602539

Token 79: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.10768794268369675
    2. 'b' → logprob: -2.9826879501342773
    3. ' a' → logprob: -3.9826879501342773
    4. '2' → logprob: -4.607687950134277
    5. 'math' → logprob: -4.857687950134277
    6. '1' → logprob: -5.482687950134277
    7. '10' → logprob: -6.357687950134277
    8. ' b' → logprob: -6.607687950134277
    9. ' ' → logprob: -7.232687950134277
    10. '12' → logprob: -7.232687950134277

Token 80: ' +' (ID: 659)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.5791335701942444
    2. ' +' → logprob: -1.3291335105895996
    3. '*' → logprob: -2.3291335105895996
    4. '+' → logprob: -2.9541335105895996
    5. ' **' → logprob: -4.8291335105896
    6. ' -' → logprob: -5.2041335105896
    7. ')' → logprob: -5.4541335105896
    8. ' ' → logprob: -5.7041335105896
    9. '**' → logprob: -6.2041335105896
    10. ' )' → logprob: -7.2041335105896

Token 81: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.284501314163208
    2. '1' → logprob: -1.409501314163208
    3. '2' → logprob: -7.159501075744629
    4. ')' → logprob: -7.534501075744629
    5. '5' → logprob: -8.159501075744629
    6. '10' → logprob: -8.159501075744629
    7. ' b' → logprob: -8.284501075744629
    8. '0' → logprob: -8.534501075744629
    9. '3' → logprob: -8.534501075744629
    10. '7' → logprob: -8.659501075744629

Token 82: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05915358290076256
    2. '2' → logprob: -4.0591535568237305
    3. '0' → logprob: -4.4341535568237305
    4. ' ' → logprob: -4.6841535568237305
    5. '10' → logprob: -5.3091535568237305
    6. '15' → logprob: -6.1841535568237305
    7. '3' → logprob: -6.1841535568237305
    8. '5' → logprob: -6.4341535568237305
    9. '20' → logprob: -6.5591535568237305
    10. '4' → logprob: -6.9341535568237305

Token 83: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00018494461255613714
    2. ' )' → logprob: -9.000185012817383
    3. ')*' → logprob: -10.875185012817383
    4. '0' → logprob: -11.000185012817383
    5. '6' → logprob: -13.000185012817383
    6. '1' → logprob: -13.000185012817383
    7. '`)' → logprob: -13.000185012817383
    8. '3' → logprob: -13.250185012817383
    9. '2' → logprob: -13.375185012817383
    10. '5' → logprob: -13.500185012817383

Token 84: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.038427695631980896
    2. '*' → logprob: -3.7884275913238525
    3. '0' → logprob: -5.163427829742432
    4. ')' → logprob: -5.913427829742432
    5. '<|end|>' → logprob: -5.913427829742432
    6. ' ' → logprob: -6.538427829742432
    7. '7' → logprob: -8.288427352905273
    8. '9' → logprob: -8.288427352905273
    9. '8' → logprob: -8.538427352905273
    10. '5' → logprob: -8.538427352905273

Token 85: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.047566670924425125
    2. '12' → logprob: -3.1725666522979736
    3. '25' → logprob: -6.047566890716553
    4. '20' → logprob: -7.797566890716553
    5. '24' → logprob: -8.047566413879395
    6. '10' → logprob: -8.422566413879395
    7. '16' → logprob: -9.047566413879395
    8. '15' → logprob: -9.047566413879395
    9. ' math' → logprob: -9.172566413879395
    10. '7' → logprob: -9.547566413879395

Token 86: '12' (ID: 899)
  Prédit: '12'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '12' → logprob: -0.031430188566446304
    2. '25' → logprob: -3.781430244445801
    3. ' ' → logprob: -6.281430244445801
    4. '10' → logprob: -7.281430244445801
    5. '15' → logprob: -7.656430244445801
    6. '125' → logprob: -7.781430244445801
    7. '100' → logprob: -7.906430244445801
    8. '20' → logprob: -7.906430244445801
    9. '50' → logprob: -7.906430244445801
    10. '1' → logprob: -7.968930244445801

Token 87: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.004543930757790804
    2. '5' → logprob: -5.504543781280518
    3. 'point' → logprob: -9.504544258117676
    4. ' .' → logprob: -9.754544258117676
    5. '7' → logprob: -9.879544258117676
    6. '.
' → logprob: -10.129544258117676
    7. '0' → logprob: -10.129544258117676
    8. '50' → logprob: -10.254544258117676
    9. '4' → logprob: -10.629544258117676
    10. '\.' → logprob: -11.004544258117676

Token 88: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -4.60414821645827e-06
    2. 'five' → logprob: -13.500004768371582
    3. '53' → logprob: -14.500004768371582
    4. '٥' → logprob: -14.875004768371582
    5. '<|end|>' → logprob: -14.875004768371582
    6. '55' → logprob: -15.375004768371582
    7. ' ' → logprob: -15.562504768371582
    8. '...' → logprob: -15.875004768371582
    9. '```' → logprob: -16.000003814697266
    10. '>' → logprob: -16.062503814697266

Token 89: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.16078446805477142
    2. '   ' → logprob: -2.6607844829559326
    3. ' 
' → logprob: -3.6607844829559326
    4. '<|end|>' → logprob: -4.0357842445373535
    5. '    
' → logprob: -4.2857842445373535
    6. '\n' → logprob: -4.7857842445373535
    7. '  
' → logprob: -5.1607842445373535
    8. '   
' → logprob: -6.0357842445373535
    9. ' ' → logprob: -6.5357842445373535
    10. ')' → logprob: -6.9107842445373535

Token 90: ' j' (ID: 441)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8029984831809998
    2. '<|end|>' → logprob: -1.4279985427856445
    3. '
' → logprob: -2.0529985427856445
    4. ' ' → logprob: -2.1779985427856445
    5. ')' → logprob: -3.8029985427856445
    6. ' 
' → logprob: -4.4279985427856445
    7. '\n' → logprob: -5.0529985427856445
    8. '    
' → logprob: -5.4279985427856445
    9. '<|end|>' → logprob: -5.4279985427856445
    10. '  
' → logprob: -5.6779985427856445

Token 91: ''espère' (ID: 116557)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.04256973788142204
    2. 'ust' → logprob: -3.917569637298584
    3. 'uste' → logprob: -4.667569637298584
    4. 'a' → logprob: -5.792569637298584
    5. 'u' → logprob: -6.167569637298584
    6. '#' → logprob: -6.667569637298584
    7. ''' → logprob: -6.792569637298584
    8. ')' → logprob: -7.292569637298584
    9. '<|end|>' → logprob: -7.292569637298584
    10. 's' → logprob: -8.042570114135742

Token 92: ' que' (ID: 661)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 93: ' c' (ID: 274)
  Prédit: ' ça'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ça' → logprob: -1.0899498462677002
    2. ' ce' → logprob: -1.5899498462677002
    3. ' c' → logprob: -1.8399498462677002
    4. 'c' → logprob: -2.2149498462677
    5. 'ce' → logprob: -3.5899498462677
    6. ' vous' → logprob: -3.8399498462677
    7. ' tu' → logprob: -3.9649498462677
    8. ' cela' → logprob: -4.339949607849121
    9. ' j' → logprob: -4.464949607849121
    10. ' ' → logprob: -4.464949607849121

Token 94: ''est' (ID: 6616)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.26659446954727173
    2. ''' → logprob: -1.641594409942627
    3. 'a' → logprob: -4.141594409942627
    4. ''a' → logprob: -5.016594409942627
    5. ' ' → logprob: -5.641594409942627
    6. ' e' → logprob: -6.016594409942627
    7. ''est' → logprob: -6.016594409942627
    8. ' '' → logprob: -6.016594409942627
    9. ''e' → logprob: -6.016594409942627
    10. ''s' → logprob: -7.641594409942627

Token 95: ' bon' (ID: 4846)
  Prédit: ' correct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' correct' → logprob: -0.9489715099334717
    2. ' pas' → logprob: -2.6989715099334717
    3. ' ce' → logprob: -2.6989715099334717
    4. 'just' → logprob: -3.0739715099334717
    5. ' bien' → logprob: -3.1989715099334717
    6. 'correct' → logprob: -3.1989715099334717
    7. ' la' → logprob: -3.5739715099334717
    8. 'bien' → logprob: -3.5739715099334717
    9. ' juste' → logprob: -3.6989715099334717
    10. ' suff' → logprob: -3.8239715099334717

Token 96: ' comme' (ID: 7971)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 97: ' ça' (ID: 13590)
  Prédit: ' commentaire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' commentaire' → logprob: -0.8227464556694031
    2. ' calcul' → logprob: -2.197746515274048
    3. ' ça' → logprob: -2.197746515274048
    4. 'comment' → logprob: -2.197746515274048
    5. 'ça' → logprob: -2.697746515274048
    6. 'calcul' → logprob: -3.447746515274048
    7. ' comment' → logprob: -3.697746515274048
    8. ' approximation' → logprob: -3.947746515274048
    9. ' code' → logprob: -4.072746276855469
    10. 'code' → logprob: -5.197746276855469

Token 98: '...
' (ID: 4908)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03374125435948372
    2. '
' → logprob: -4.033741474151611
    3. '<|end|>' → logprob: -5.158741474151611
    4. '    
' → logprob: -5.408741474151611
    5. ')' → logprob: -6.158741474151611
    6. '  
' → logprob: -7.533741474151611
    7. ' ' → logprob: -7.783741474151611
    8. '\n' → logprob: -8.158740997314453
    9. '<|end|>' → logprob: -8.283740997314453
    10. 'return' → logprob: -8.283740997314453

Token 99: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05810944363474846
    2. '    
' → logprob: -3.5581095218658447
    3. '
' → logprob: -4.058109283447266
    4. '  
' → logprob: -6.058109283447266
    5. ' return' → logprob: -6.558109283447266
    6. ' 
' → logprob: -6.808109283447266
    7. 'return' → logprob: -6.933109283447266
    8. '   
' → logprob: -6.933109283447266
    9. ' ' → logprob: -7.058109283447266
    10. '\n' → logprob: -7.308109283447266

Token 100: ' mini' (ID: 15065)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5074848532676697
    2. '    
' → logprob: -2.1324849128723145
    3. ' ' → logprob: -2.8824849128723145
    4. '\n' → logprob: -3.0074849128723145
    5. '  
' → logprob: -3.1324849128723145
    6. ' 
' → logprob: -3.7574849128723145
    7. 'return' → logprob: -4.0074849128723145
    8. '
' → logprob: -4.0074849128723145
    9. '   
' → logprob: -4.6324849128723145
    10. 'b' → logprob: -4.8824849128723145

Token 101: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.6717420816421509
    2. '_a' → logprob: -0.7967420816421509
    3. '_' → logprob: -3.2967419624328613
    4. '_val' → logprob: -8.04674243927002
    5. 'a' → logprob: -8.42174243927002
    6. ' _' → logprob: -9.29674243927002
    7. '_s' → logprob: -9.29674243927002
    8. '_max' → logprob: -9.79674243927002
    9. '_space' → logprob: -9.79674243927002
    10. 'b' → logprob: -10.04674243927002

Token 102: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018154505640268326
    2. '=' → logprob: -4.018154621124268
    3. ' ' → logprob: -12.64315414428711
    4. ' *=' → logprob: -14.76815414428711
    5. ')' → logprob: -15.01815414428711
    6. ' *' → logprob: -15.64315414428711
    7. ' ' → logprob: -16.14315414428711
    8. '*' → logprob: -16.14315414428711
    9. ',' → logprob: -16.26815414428711
    10. ' +=' → logprob: -17.64315414428711

Token 103: ' ' (ID: 220)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.23731085658073425
    2. ' b' → logprob: -1.6123108863830566
    3. 'math' → logprob: -5.612310886383057
    4. ' math' → logprob: -5.737310886383057
    5. ' ' → logprob: -6.487310886383057
    6. 'max' → logprob: -7.862310886383057
    7. ' (' → logprob: -7.862310886383057
    8. 'min' → logprob: -7.987310886383057
    9. '10' → logprob: -8.112310409545898
    10. '12' → logprob: -8.237310409545898

Token 104: '10' (ID: 702)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.017719872295856476
    2. ' b' → logprob: -4.267719745635986
    3. 'math' → logprob: -6.767719745635986
    4. '12' → logprob: -7.892719745635986
    5. 'max' → logprob: -8.017720222473145
    6. '(b' → logprob: -8.142720222473145
    7. 'a' → logprob: -8.517720222473145
    8. ' (' → logprob: -8.892720222473145
    9. ' math' → logprob: -9.017720222473145
    10. 'min' → logprob: -9.017720222473145

Token 105: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.15196777880191803
    2. '*' → logprob: -2.026967763900757
    3. '.' → logprob: -5.526968002319336
    4. '0' → logprob: -5.651968002319336
    5. '**' → logprob: -7.026968002319336
    6. ' **' → logprob: -8.151968002319336
    7. ' ' → logprob: -8.401968002319336
    8. '00' → logprob: -9.026968002319336
    9. '5' → logprob: -10.401968002319336
    10. '7' → logprob: -10.776968002319336

Token 106: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.020656337961554527
    2. ' b' → logprob: -4.020656108856201
    3. 'math' → logprob: -7.020656108856201
    4. ' math' → logprob: -8.14565658569336
    5. ' (' → logprob: -8.52065658569336
    6. '(b' → logprob: -8.64565658569336
    7. '12' → logprob: -8.89565658569336
    8. 'a' → logprob: -9.02065658569336
    9. ' ' → logprob: -9.14565658569336
    10. '   ' → logprob: -9.27065658569336

Token 107: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 108: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1775190234184265
    2. '   ' → logprob: -3.0525190830230713
    3. '<|end|>' → logprob: -3.9275190830230713
    4. 'max' → logprob: -4.302518844604492
    5. ' 
' → logprob: -4.302518844604492
    6. '    
' → logprob: -4.552518844604492
    7. '+' → logprob: -4.552518844604492
    8. ')' → logprob: -4.802518844604492
    9. '  
' → logprob: -4.927518844604492
    10. ' ' → logprob: -4.927518844604492

Token 109: ' maxi' (ID: 111201)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.2495160102844238
    2. '+' → logprob: -1.6245160102844238
    3. ' ' → logprob: -1.9995160102844238
    4. '+
' → logprob: -2.374516010284424
    5. '
' → logprob: -2.749516010284424
    6. '0' → logprob: -2.874516010284424
    7. '   ' → logprob: -3.624516010284424
    8. '.' → logprob: -3.874516010284424
    9. ')' → logprob: -4.249516010284424
    10. 'b' → logprob: -4.374516010284424

Token 110: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.0022720585111528635
    2. '_' → logprob: -6.127272129058838
    3. '_a' → logprob: -10.12727165222168
    4. 'b' → logprob: -11.12727165222168
    5. ' _' → logprob: -11.62727165222168
    6. ' =' → logprob: -12.00227165222168
    7. '=' → logprob: -12.12727165222168
    8. '_B' → logprob: -13.50227165222168
    9. '	b' → logprob: -13.75227165222168
    10. ' ' → logprob: -13.87727165222168

Token 111: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05490496754646301
    2. '=' → logprob: -2.9299049377441406
    3. ')' → logprob: -12.05490493774414
    4. ' ' → logprob: -12.30490493774414
    5. ' ==' → logprob: -12.30490493774414
    6. '   ' → logprob: -13.42990493774414
    7. '>' → logprob: -13.92990493774414
    8. '<|end|>' → logprob: -14.30490493774414
    9. ' +=' → logprob: -14.55490493774414
    10. ',' → logprob: -14.67990493774414

Token 112: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.33706897497177124
    2. ' ' → logprob: -1.962069034576416
    3. '(' → logprob: -2.337069034576416
    4. ' (' → logprob: -3.462069034576416
    5. '20' → logprob: -4.712069034576416
    6. '100' → logprob: -6.087069034576416
    7. '11' → logprob: -6.712069034576416
    8. '1' → logprob: -7.087069034576416
    9. 'b' → logprob: -7.462069034576416
    10. '(b' → logprob: -7.837069034576416

Token 113: '10' (ID: 702)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5525893568992615
    2. '10' → logprob: -0.9275893568992615
    3. ' ' → logprob: -4.802589416503906
    4. ' (' → logprob: -4.802589416503906
    5. '((' → logprob: -5.802589416503906
    6. '100' → logprob: -6.177589416503906
    7. 'b' → logprob: -6.552589416503906
    8. '20' → logprob: -7.177589416503906
    9. 'max' → logprob: -7.427589416503906
    10. '(b' → logprob: -7.427589416503906

Token 114: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.4289341866970062
    2. ' *' → logprob: -1.0539342164993286
    3. ' ' → logprob: -9.303934097290039
    4. '```' → logprob: -9.928934097290039
    5. '*(' → logprob: -10.803934097290039
    6. '0' → logprob: -10.803934097290039
    7. '.' → logprob: -11.553934097290039
    8. ' ' → logprob: -11.928934097290039
    9. '**' → logprob: -11.928934097290039
    10. '+' → logprob: -12.053934097290039

Token 115: ' (' (ID: 350)
  Prédit: '(b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.013634715229272842
    2. '(' → logprob: -4.38863468170166
    3. ' (' → logprob: -7.13863468170166
    4. '(max' → logprob: -8.63863468170166
    5. 'b' → logprob: -9.51363468170166
    6. '(a' → logprob: -10.63863468170166
    7. '(int' → logprob: -11.38863468170166
    8. '(s' → logprob: -11.76363468170166
    9. '   ' → logprob: -11.88863468170166
    10. '1' → logprob: -12.51363468170166

Token 116: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00016611411410849541
    2. ' b' → logprob: -9.250165939331055
    3. '(b' → logprob: -9.625165939331055
    4. '   ' → logprob: -13.125165939331055
    5. ' (' → logprob: -13.750165939331055
    6. ')b' → logprob: -15.625165939331055
    7. '(' → logprob: -15.750165939331055
    8. '1' → logprob: -16.000165939331055
    9. '	b' → logprob: -16.250165939331055
    10. ' ' → logprob: -16.250165939331055

Token 117: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.22543364763259888
    2. ' +' → logprob: -1.600433588027954
    3. ')' → logprob: -11.600433349609375
    4. '   ' → logprob: -12.350433349609375
    5. ' plus' → logprob: -13.225433349609375
    6. ' ' → logprob: -13.225433349609375
    7. '+
' → logprob: -13.475433349609375
    8. '+)' → logprob: -14.225433349609375
    9. ' )' → logprob: -14.850433349609375
    10. '1' → logprob: -15.225433349609375

Token 118: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007619756739586592
    2. ' ' → logprob: -4.882619857788086
    3. '   ' → logprob: -11.757619857788086
    4. ')' → logprob: -12.882619857788086
    5. '<|end|>' → logprob: -13.007619857788086
    6. '  ' → logprob: -14.882619857788086
    7. '2' → logprob: -15.382619857788086
    8. '0' → logprob: -15.632619857788086
    9. 'def' → logprob: -16.257619857788086
    10. '<|end|>' → logprob: -16.632619857788086

Token 119: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00038944309926591814
    2. ' ' → logprob: -7.875389575958252
    3. ')' → logprob: -12.250389099121094
    4. '   ' → logprob: -13.000389099121094
    5. '  ' → logprob: -14.250389099121094
    6. '<|end|>' → logprob: -14.250389099121094
    7. '2' → logprob: -15.500389099121094
    8. '0' → logprob: -15.875389099121094
    9. '```' → logprob: -15.875389099121094
    10. '.' → logprob: -16.625389099121094

Token 120: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.88418151892256e-05
    2. ')
' → logprob: -10.125059127807617
    3. ' )' → logprob: -11.000059127807617
    4. '   ' → logprob: -13.875059127807617
    5. '))' → logprob: -15.000059127807617
    6. ')

' → logprob: -15.750059127807617
    7. ')#' → logprob: -15.875059127807617
    8. '<|end|>' → logprob: -16.625059127807617
    9. ')return' → logprob: -16.875059127807617
    10. ')`' → logprob: -17.000059127807617

Token 121: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9014908075332642
    2. '
' → logprob: -1.0264908075332642
    3. '<|end|>' → logprob: -1.5264908075332642
    4. '    
' → logprob: -4.776490688323975
    5. ')' → logprob: -5.401490688323975
    6. '<|end|>' → logprob: -6.651490688323975
    7. '  
' → logprob: -6.776490688323975
    8. '#' → logprob: -7.276490688323975
    9. '\n' → logprob: -7.901490688323975
    10. '```' → logprob: -7.901490688323975

Token 122: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4061475098133087
    2. 'print' → logprob: -2.0311474800109863
    3. 'if' → logprob: -2.4061474800109863
    4. '#' (adapté à ' #') → logprob: -2.9061474800109863
    5. '    
' → logprob: -4.531147480010986
    6. '
' → logprob: -4.656147480010986
    7. ' if' → logprob: -5.156147480010986
    8. 'return' → logprob: -5.281147480010986
    9. 'max' → logprob: -5.531147480010986
    10. '<|end|>' → logprob: -6.031147480010986

Token 123: ' hmm' (ID: 186402)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.0491653680801392
    2. 'print' → logprob: -1.2991653680801392
    3. 'result' → logprob: -2.2991652488708496
    4. ' if' → logprob: -2.4241652488708496
    5. 'return' → logprob: -3.0491652488708496
    6. '#' → logprob: -3.5491652488708496
    7. ' print' → logprob: -4.29916524887085
    8. 'res' → logprob: -4.54916524887085
    9. 'max' → logprob: -4.79916524887085
    10. '   ' → logprob: -5.04916524887085

Token 124: '...' (ID: 1008)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5684152841567993
    2. '
' → logprob: -1.5684152841567993
    3. '<|end|>' → logprob: -2.0684151649475098
    4. ' if' → logprob: -3.4434151649475098
    5. '<|end|>' → logprob: -4.31841516494751
    6. '    
' → logprob: -4.44341516494751
    7. ' ' → logprob: -4.94341516494751
    8. 'print' → logprob: -5.19341516494751
    9. ' #' → logprob: -5.19341516494751
    10. '    ' → logprob: -5.81841516494751

Token 125: ' je' (ID: 1264)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5516222715377808
    2. 'if' → logprob: -2.0516223907470703
    3. ' if' → logprob: -2.1766223907470703
    4. 'print' → logprob: -3.0516223907470703
    5. '#' → logprob: -3.4266223907470703
    6. ' #' → logprob: -3.4266223907470703
    7. '    
' → logprob: -3.6766223907470703
    8. 'result' → logprob: -4.92662239074707
    9. 'max' → logprob: -5.17662239074707
    10. '
' → logprob: -5.17662239074707

Token 126: ' crois' (ID: 65485)
  Prédit: ' vais'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' vais' → logprob: -1.7029426097869873
    2. 'print' → logprob: -2.0779426097869873
    3. ' continue' → logprob: -2.3279426097869873
    4. ' vois' → logprob: -2.5779426097869873
    5. 'if' → logprob: -2.8279426097869873
    6. '   ' → logprob: -2.9529426097869873
    7. '#' → logprob: -2.9529426097869873
    8. ' pense' → logprob: -3.0779426097869873
    9. ' veux' → logprob: -3.0779426097869873
    10. ' print' → logprob: -3.0779426097869873

Token 127: ' qu' (ID: 474)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6738346815109253
    2. ' que' → logprob: -0.9238346815109253
    3. ' qu' → logprob: -2.798834800720215
    4. ' ' → logprob: -4.673834800720215
    5. ' je' → logprob: -5.673834800720215
    6. 'que' → logprob: -5.798834800720215
    7. '  ' → logprob: -6.298834800720215
    8. ' il' → logprob: -6.298834800720215
    9. 'je' → logprob: -6.423834800720215
    10. '    ' → logprob: -6.423834800720215

Token 128: ''il' (ID: 14683)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.5729005336761475
    2. ' mini' → logprob: -1.6979005336761475
    3. ' ' → logprob: -2.0729005336761475
    4. ' a' → logprob: -2.3229005336761475
    5. ' math' → logprob: -2.5729005336761475
    6. ' que' → logprob: -2.8229005336761475
    7. ' len' → logprob: -3.0729005336761475
    8. ' maxi' → logprob: -3.6979005336761475
    9. ' that' → logprob: -3.8229005336761475
    10. 'a' → logprob: -3.9479005336761475

Token 129: ' fallait' (ID: 110338)
  Prédit: ' manque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' manque' → logprob: -0.3725757896900177
    2. ' faut' → logprob: -1.4975757598876953
    3. ' faudrait' → logprob: -3.3725757598876953
    4. 'f' → logprob: -3.7475757598876953
    5. ' va' → logprob: -4.997575759887695
    6. ' a' → logprob: -5.622575759887695
    7. ' faudra' → logprob: -5.622575759887695
    8. ' falt' → logprob: -6.122575759887695
    9. ' y' → logprob: -6.122575759887695
    10. ' f' → logprob: -6.372575759887695

Token 130: ' vérifier' (ID: 93671)
  Prédit: ' calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calcul' → logprob: -0.25446221232414246
    2. 'calcul' → logprob: -3.504462242126465
    3. ' comparer' → logprob: -4.004462242126465
    4. ' faire' → logprob: -4.004462242126465
    5. ' juste' → logprob: -4.379462242126465
    6. ' retourner' → logprob: -4.379462242126465
    7. 'return' → logprob: -4.504462242126465
    8. ' utiliser' → logprob: -4.629462242126465
    9. ' vérifier' → logprob: -4.754462242126465
    10. 'faire' → logprob: -5.004462242126465

Token 131: ' un' (ID: 537)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.16601073741912842
    2. 'if' → logprob: -2.041010856628418
    3. ' si' → logprob: -4.166010856628418
    4. 'not' → logprob: -6.791010856628418
    5. ' not' → logprob: -6.916010856628418
    6. ' ' → logprob: -7.541010856628418
    7. ' les' → logprob: -7.666010856628418
    8. ' que' → logprob: -7.666010856628418
    9. ' (' → logprob: -7.791010856628418
    10. '(' → logprob: -7.916010856628418

Token 132: ' truc' (ID: 58342)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.03968202322721481
    2. ' peu' → logprob: -4.164681911468506
    3. ' e' → logprob: -5.164681911468506
    4. 'pe' → logprob: -5.539681911468506
    5. 'es' → logprob: -6.164681911468506
    6. '```' → logprob: -6.789681911468506
    7. '=' → logprob: -7.602181911468506
    8. 'é' → logprob: -7.664681911468506
    9. 'éc' → logprob: -7.727181911468506
    10. 'égalité' → logprob: -7.789681911468506

Token 133: ' ici' (ID: 27994)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6944530606269836
    2. ' if' → logprob: -1.1944530010223389
    3. ':' → logprob: -2.569453001022339
    4. ',' → logprob: -3.319453001022339
    5. 'if' → logprob: -3.694453001022339
    6. '.' → logprob: -3.944453001022339
    7. '...' → logprob: -4.444453239440918
    8. ' ' → logprob: -5.069453239440918
    9. ' :' → logprob: -5.069453239440918
    10. '<|end|>' → logprob: -5.319453239440918

Token 134: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09062314033508301
    2. ' if' → logprob: -2.715623140335083
    3. 'if' → logprob: -4.090622901916504
    4. '
' → logprob: -6.215622901916504
    5. '<|end|>' → logprob: -7.340622901916504
    6. '    
' → logprob: -7.840622901916504
    7. ',' → logprob: -9.215622901916504
    8. '  ' → logprob: -9.340622901916504
    9. ' ' → logprob: -9.590622901916504
    10. '  
' → logprob: -9.715622901916504

Token 135: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02187611162662506
    2. ' if' → logprob: -4.271876335144043
    3. 'if' → logprob: -5.771876335144043
    4. '
' → logprob: -5.771876335144043
    5. '    
' → logprob: -7.021876335144043
    6. '<|end|>' → logprob: -7.896876335144043
    7. '    ' → logprob: -10.146876335144043
    8. '  ' → logprob: -10.896876335144043
    9. '  
' → logprob: -10.896876335144043
    10. ' 
' → logprob: -11.021876335144043

Token 136: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5381854772567749
    2. 'if' (adapté à ' if') → logprob: -0.9131854772567749
    3. '   ' → logprob: -5.2881855964660645
    4. ' return' → logprob: -5.6631855964660645
    5. 'return' → logprob: -5.9131855964660645
    6. ' for' → logprob: -7.5381855964660645
    7. 'result' → logprob: -8.038185119628906
    8. 'for' → logprob: -8.288185119628906
    9. ' i' → logprob: -8.413185119628906
    10. ' a' → logprob: -8.663185119628906

Token 137: ' maxi' (ID: 111201)
  Prédit: ' mini'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mini' → logprob: -0.1244945153594017
    2. ' maxi' → logprob: -2.4994945526123047
    3. ' a' → logprob: -4.624494552612305
    4. 'mini' → logprob: -4.749494552612305
    5. ' (' → logprob: -5.374494552612305
    6. ' max' → logprob: -5.499494552612305
    7. ' abs' → logprob: -6.124494552612305
    8. ' ' → logprob: -6.124494552612305
    9. ' b' → logprob: -7.374494552612305
    10. ' min' → logprob: -7.874494552612305

Token 138: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.001550929038785398
    2. '_b' → logprob: -6.501551151275635
    3. 'a' → logprob: -10.251550674438477
    4. '_' → logprob: -11.376550674438477
    5. ' _' → logprob: -14.751550674438477
    6. '```' → logprob: -15.814050674438477
    7. '­a' → logprob: -16.251550674438477
    8. '_i' → logprob: -16.439050674438477
    9. '_m' → logprob: -16.439050674438477
    10. '_ai' → logprob: -16.564050674438477

Token 139: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.9146778583526611
    2. '>' → logprob: -1.1646778583526611
    3. '<' → logprob: -2.164677858352661
    4. '>=' → logprob: -2.414677858352661
    5. ' <=' → logprob: -3.414677858352661
    6. ' >' → logprob: -3.664677858352661
    7. ' <' → logprob: -4.414677619934082
    8. ' >=' → logprob: -4.914677619934082
    9. '==' → logprob: -5.414677619934082
    10. ' ==' → logprob: -8.289677619934082

Token 140: ' mini' (ID: 15065)
  Prédit: 'mini'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mini' → logprob: -0.261446475982666
    2. ' mini' → logprob: -1.636446475982666
    3. ' maxi' → logprob: -3.511446475982666
    4. 'max' → logprob: -5.511446475982666
    5. ' ' → logprob: -7.761446475982666
    6. ' max' → logprob: -7.886446475982666
    7. 'min' → logprob: -8.011445999145508
    8. '10' → logprob: -9.261445999145508
    9. '20' → logprob: -10.136445999145508
    10. '100' → logprob: -10.261445999145508

Token 141: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -5.741137283621356e-05
    2. '_' → logprob: -10.750057220458984
    3. '_a' → logprob: -10.875057220458984
    4. 'b' → logprob: -11.125057220458984
    5. ' _' → logprob: -13.625057220458984
    6. 'a' → logprob: -14.875057220458984
    7. '_B' → logprob: -15.500057220458984
    8. '__' → logprob: -16.375057220458984
    9. '"_' → logprob: -16.625057220458984
    10. ' ' → logprob: -16.875057220458984

Token 142: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0050348639488220215
    2. ':
' → logprob: -5.755034923553467
    3. ' :' → logprob: -6.380034923553467
    4. ' or' → logprob: -9.255034446716309
    5. ':return' → logprob: -10.630034446716309
    6. ' :
' → logprob: -10.880034446716309
    7. ' and' → logprob: -11.380034446716309
    8. '   ' → logprob: -12.880034446716309
    9. '.' → logprob: -13.005034446716309
    10. '):' → logprob: -13.505034446716309

Token 143: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5777761936187744
    2. '   ' → logprob: -1.3277761936187744
    3. ':
' → logprob: -2.3277761936187744
    4. '       ' → logprob: -3.3277761936187744
    5. '
' → logprob: -3.8277761936187744
    6. 'print' → logprob: -4.202775955200195
    7. ' print' → logprob: -6.702775955200195
    8. ')' → logprob: -7.827775955200195
    9. '.' → logprob: -8.202775955200195
    10. '    
' → logprob: -8.577775955200195

Token 144: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.35194024443626404
    2. ' print' → logprob: -1.4769402742385864
    3. '   ' → logprob: -3.726940155029297
    4. '       ' → logprob: -3.851940155029297
    5. 'return' → logprob: -4.351940155029297
    6. ' return' → logprob: -5.101940155029297
    7. '
' → logprob: -5.851940155029297
    8. '    ' → logprob: -8.664440155029297
    9. '
' → logprob: -8.789440155029297
    10. ' ' → logprob: -8.789440155029297

Token 145: '(-' (ID: 8087)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0720909833908081
    2. '(' → logprob: -2.9470911026000977
    3. '("<' → logprob: -4.572091102600098
    4. '('' → logprob: -5.947091102600098
    5. '(min' → logprob: -6.947091102600098
    6. '(max' → logprob: -7.322091102600098
    7. '(":' → logprob: -7.572091102600098
    8. '(">' → logprob: -7.947091102600098
    9. '(a' → logprob: -8.322091102600098
    10. '(-' → logprob: -8.322091102600098

Token 146: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00026658078422769904
    2. '2' → logprob: -8.500267028808594
    3. ' ' → logprob: -10.625267028808594
    4. '100' → logprob: -11.625267028808594
    5. '10' → logprob: -12.437767028808594
    6. 'math' → logprob: -12.625267028808594
    7. '-' → logprob: -13.250267028808594
    8. '3' → logprob: -13.375267028808594
    9. '11' → logprob: -13.500267028808594
    10. '5' → logprob: -13.687767028808594

Token 147: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03374447673559189
    2. ')
' → logprob: -3.4087445735931396
    3. ' )' → logprob: -9.783744812011719
    4. ')
' → logprob: -11.033744812011719
    5. '   ' → logprob: -12.533744812011719
    6. ' )
' → logprob: -12.533744812011719
    7. ')

' → logprob: -12.658744812011719
    8. ',' → logprob: -12.908744812011719
    9. ' ' → logprob: -13.658744812011719
    10. ')`
' → logprob: -13.658744812011719

Token 148: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15507665276527405
    2. '<|end|>' → logprob: -2.905076742172241
    3. ')' → logprob: -3.280076742172241
    4. 'else' → logprob: -4.280076503753662
    5. 'elif' → logprob: -4.405076503753662
    6. ' else' → logprob: -4.530076503753662
    7. ':' → logprob: -5.905076503753662
    8. ' elif' → logprob: -6.155076503753662
    9. '
' → logprob: -6.280076503753662
    10. '<|end|>' → logprob: -6.280076503753662

Token 149: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7017019987106323
    2. '       ' → logprob: -0.7017019987106323
    3. 'return' (adapté à ' return') → logprob: -5.326702117919922
    4. ' return' → logprob: -5.951702117919922
    5. ' ' → logprob: -8.201702117919922
    6. '<|end|>' → logprob: -8.701702117919922
    7. ')' → logprob: -8.951702117919922
    8. '
' → logprob: -9.451702117919922
    9. '  ' → logprob: -9.701702117919922
    10. 'else' → logprob: -9.951702117919922

Token 150: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.031294677406549454
    2. ')' → logprob: -4.906294822692871
    3. '<|end|>' → logprob: -5.156294822692871
    4. 'if' → logprob: -5.656294822692871
    5. '0' → logprob: -5.781294822692871
    6. '    
' → logprob: -6.406294822692871
    7. 'elif' → logprob: -6.781294822692871
    8. 'print' → logprob: -7.031294822692871
    9. 'max' → logprob: -7.031294822692871
    10. '       ' → logprob: -7.031294822692871

Token 151: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15628165006637573
    2. '<|end|>' → logprob: -2.7812817096710205
    3. ' ' → logprob: -3.6562817096710205
    4. '    
' → logprob: -4.406281471252441
    5. '\n' → logprob: -4.531281471252441
    6. ')' → logprob: -4.656281471252441
    7. '  
' → logprob: -5.031281471252441
    8. '  ' → logprob: -6.031281471252441
    9. '    ' → logprob: -6.406281471252441
    10. ' 
' → logprob: -6.531281471252441

Token 152: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6874315142631531
    2. ' ' → logprob: -1.5624315738677979
    3. 'if' (adapté à ' if') → logprob: -3.187431573867798
    4. ')' → logprob: -3.187431573867798
    5. '\n' → logprob: -3.562431573867798
    6. 'elif' → logprob: -3.562431573867798
    7. '(' → logprob: -3.687431573867798
    8. '<|end|>' → logprob: -4.062431335449219
    9. ' if' → logprob: -4.187431335449219
    10. '    
' → logprob: -4.562431335449219

Token 153: ' maxi' (ID: 111201)
  Prédit: ' mini'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mini' → logprob: -0.9344526529312134
    2. 'mini' → logprob: -0.9344526529312134
    3. ' maxi' → logprob: -1.8094526529312134
    4. 'max' → logprob: -3.559452533721924
    5. ' max' → logprob: -4.184452533721924
    6. 'min' → logprob: -6.184452533721924
    7. ' ' → logprob: -6.559452533721924
    8. ' a' → logprob: -7.309452533721924
    9. '   ' → logprob: -7.746952533721924
    10. ' min' → logprob: -7.934452533721924

Token 154: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.14276692271232605
    2. '_a' → logprob: -2.0177669525146484
    3. '_' → logprob: -10.392766952514648
    4. 'a' → logprob: -10.392766952514648
    5. 'b' → logprob: -11.267766952514648
    6. '```' → logprob: -12.517766952514648
    7. ' _' → logprob: -13.517766952514648
    8. '   ' → logprob: -13.955266952514648
    9. 'A' → logprob: -14.330266952514648
    10. '	b' → logprob: -14.392766952514648

Token 155: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.28147822618484497
    2. '<=' → logprob: -1.4064781665802002
    3. ' <' → logprob: -8.531477928161621
    4. '<' → logprob: -9.281477928161621
    5. ' ' → logprob: -11.531477928161621
    6. '>' → logprob: -11.656477928161621
    7. ' >=' → logprob: -12.281477928161621
    8. '>=' → logprob: -12.406477928161621
    9. ' >' → logprob: -12.406477928161621
    10. '   ' → logprob: -13.656477928161621

Token 156: ' mini' (ID: 15065)
  Prédit: 'mini'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mini' → logprob: -0.28133437037467957
    2. ' mini' → logprob: -1.406334400177002
    3. 'min' → logprob: -9.031333923339844
    4. '   ' → logprob: -10.031333923339844
    5. ' ' → logprob: -11.781333923339844
    6. ' min' → logprob: -12.156333923339844
    7. '  ' → logprob: -13.406333923339844
    8. '       ' → logprob: -14.031333923339844
    9. '0' → logprob: -14.531333923339844
    10. ' мини' → logprob: -14.656333923339844

Token 157: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.0008087906171567738
    2. 'a' → logprob: -7.1258087158203125
    3. '_b' → logprob: -12.750808715820312
    4. '_' → logprob: -13.750808715820312
    5. '­a' → logprob: -16.625808715820312
    6. 'max' → logprob: -16.750808715820312
    7. 'A' → logprob: -17.125808715820312
    8. ' a' → logprob: -17.250808715820312
    9. '	a' → logprob: -17.500808715820312
    10. '   ' → logprob: -17.750808715820312

Token 158: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011288318783044815
    2. ':
' → logprob: -4.511288166046143
    3. '       ' → logprob: -8.5112886428833
    4. '   ' → logprob: -10.8862886428833
    5. ' :' → logprob: -11.2612886428833
    6. ':

' → logprob: -13.6362886428833
    7. '):' → logprob: -13.7612886428833
    8. ' :
' → logprob: -13.7612886428833
    9. ':
' → logprob: -14.2612886428833
    10. ':return' → logprob: -14.2612886428833

Token 159: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005347840022295713
    2. '   ' → logprob: -6.005347728729248
    3. ':' → logprob: -6.380347728729248
    4. 'print' → logprob: -7.005347728729248
    5. ':
' → logprob: -8.880348205566406
    6. ' print' → logprob: -9.880348205566406
    7. '0' → logprob: -11.255348205566406
    8. '1' → logprob: -11.380348205566406
    9. '.' → logprob: -11.380348205566406
    10. '-' → logprob: -11.630348205566406

Token 160: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.6132392883300781
    2. '       ' → logprob: -1.1132392883300781
    3. '-' → logprob: -2.363239288330078
    4. '   ' → logprob: -3.363239288330078
    5. ' print' → logprob: -7.613239288330078
    6. ' -' → logprob: -8.238239288330078
    7. '1' → logprob: -8.488239288330078
    8. '-print' → logprob: -9.238239288330078
    9. '0' → logprob: -10.738239288330078
    10. '  ' → logprob: -11.113239288330078

Token 161: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.0005122834118083119
    2. '(' → logprob: -7.62551212310791
    3. '-' → logprob: -11.00051212310791
    4. ' (-' → logprob: -12.25051212310791
    5. '   ' → logprob: -13.87551212310791
    6. '(
' → logprob: -14.37551212310791
    7. '1' → logprob: -15.00051212310791
    8. '0' → logprob: -15.12551212310791
    9. ' -' → logprob: -16.000513076782227
    10. ' (' → logprob: -16.125513076782227

Token 162: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00042507401667535305
    2. '-' → logprob: -8.500425338745117
    3. '2' → logprob: -8.500425338745117
    4. ' ' → logprob: -11.750425338745117
    5. ' -' → logprob: -12.375425338745117
    6. '   ' → logprob: -13.875425338745117
    7. '```' → logprob: -14.312925338745117
    8. '  ' → logprob: -14.375425338745117
    9. '0' → logprob: -14.375425338745117
    10. '3' → logprob: -14.750425338745117

Token 163: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20552125573158264
    2. ')
' → logprob: -1.7055212259292603
    3. '       ' → logprob: -5.580521106719971
    4. '   ' → logprob: -8.080521583557129
    5. ')
' → logprob: -11.830521583557129
    6. ')return' → logprob: -11.955521583557129
    7. ' )' → logprob: -13.080521583557129
    8. ' )
' → logprob: -13.705521583557129
    9. '<|end|>' → logprob: -14.080521583557129
    10. '```' → logprob: -15.455521583557129

Token 164: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0036152780521661043
    2. '   ' → logprob: -5.628615379333496
    3. 'return' → logprob: -11.253615379333496
    4. '<|end|>' → logprob: -13.628615379333496
    5. ' return' → logprob: -15.003615379333496
    6. '           ' → logprob: -15.628615379333496
    7. '	return' → logprob: -16.00361442565918
    8. '	' → logprob: -16.37861442565918
    9. ' ' → logprob: -16.50361442565918
    10. ')' → logprob: -16.75361442565918

Token 165: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.36261287331581116
    2. '       ' → logprob: -1.3626128435134888
    3. '   ' → logprob: -3.1126129627227783
    4. ' return' → logprob: -5.612612724304199
    5. '	return' → logprob: -11.8626127243042
    6. '
' → logprob: -12.9876127243042
    7. ' ' → logprob: -12.9876127243042
    8. 'def' → logprob: -13.4876127243042
    9. '  ' → logprob: -14.1126127243042
    10. '     ' → logprob: -14.1126127243042

Token 166: '
    
' (ID: 15698)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6538622975349426
    2. '
' → logprob: -1.9038622379302979
    3. '    
' → logprob: -2.028862237930298
    4. '\n' → logprob: -2.153862237930298
    5. '\' → logprob: -3.653862237930298
    6. '  
' → logprob: -4.153862476348877
    7. '#' → logprob: -4.528862476348877
    8. '(' → logprob: -4.903862476348877
    9. ' 
' → logprob: -4.903862476348877
    10. '<|end|>' → logprob: -5.903862476348877

Token 167: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.19819475710391998
    2. 'if' → logprob: -2.448194742202759
    3. 'result' → logprob: -3.698194742202759
    4. 'inter' → logprob: -4.073194980621338
    5. '#' → logprob: -4.198194980621338
    6. 'over' → logprob: -4.573194980621338
    7. 'intersection' → logprob: -4.823194980621338
    8. 'for' → logprob: -5.823194980621338
    9. '   ' → logprob: -6.198194980621338
    10. 'res' → logprob: -6.323194980621338

Token 168: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.563631534576416
    2. 'print' → logprob: -1.563631534576416
    3. 'inter' → logprob: -1.563631534576416
    4. 'over' → logprob: -2.438631534576416
    5. 'result' → logprob: -2.563631534576416
    6. 'intersection' → logprob: -3.188631534576416
    7. '#' (adapté à ' #') → logprob: -3.438631534576416
    8. 'res' → logprob: -3.563631534576416
    9. 'mini' → logprob: -3.813631534576416
    10. 'start' → logprob: -4.563631534576416

Token 169: ' Enfin' (ID: 85274)
  Prédit: 'inter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inter' → logprob: -1.2330865859985352
    2. '#' → logprob: -2.108086585998535
    3. 'over' → logprob: -2.108086585998535
    4. 'if' → logprob: -2.358086585998535
    5. 'print' → logprob: -2.858086585998535
    6. 'result' → logprob: -2.858086585998535
    7. 'intersection' → logprob: -3.233086585998535
    8. 'diff' → logprob: -3.608086585998535
    9. 'mini' → logprob: -3.733086585998535
    10. 'from' → logprob: -3.858086585998535

Token 170: ',' (ID: 11)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5864324569702148
    2. '   ' → logprob: -1.7114324569702148
    3. 'inter' → logprob: -2.961432456970215
    4. ' print' → logprob: -3.086432456970215
    5. 'if' → logprob: -3.461432456970215
    6. 'result' → logprob: -3.586432456970215
    7. 'intersection' → logprob: -4.211432456970215
    8. 'diff' → logprob: -4.336432456970215
    9. 'over' → logprob: -4.336432456970215
    10. 'interval' → logprob: -5.086432456970215

Token 171: ' on' (ID: 402)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.4849761724472046
    2. '#' → logprob: -1.9849761724472046
    3. 'inter' → logprob: -2.359976291656494
    4. ' print' → logprob: -2.359976291656494
    5. ' #' → logprob: -3.234976291656494
    6. 'mini' → logprob: -3.484976291656494
    7. 'x' → logprob: -3.609976291656494
    8. 'result' → logprob: -3.609976291656494
    9. ' if' → logprob: -3.734976291656494
    10. 'if' → logprob: -3.734976291656494

Token 172: ' cherche' (ID: 52345)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -1.1979087591171265
    2. 'print' → logprob: -1.8229087591171265
    3. '   ' → logprob: -2.447908878326416
    4. ' calc' → logprob: -2.822908878326416
    5. ' continue' → logprob: -2.947908878326416
    6. ' va' → logprob: -3.072908878326416
    7. '#' → logprob: -3.322908878326416
    8. ' return' → logprob: -3.572908878326416
    9. ' peut' → logprob: -3.822908878326416
    10. 'def' → logprob: -3.822908878326416

Token 173: ' la' (ID: 557)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.8751967549324036
    2. ' l' → logprob: -2.000196695327759
    3. ' la' → logprob: -2.125196695327759
    4. '   ' → logprob: -2.250196695327759
    5. 'le' → logprob: -3.500196695327759
    6. '#' → logprob: -3.500196695327759
    7. 'max' → logprob: -3.875196695327759
    8. 'x' → logprob: -4.125196933746338
    9. 'inter' → logprob: -4.375196933746338
    10. 'min' → logprob: -4.375196933746338

Token 174: ' réponse' (ID: 50332)
  Prédit: 'intersection'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'intersection' → logprob: -1.2515738010406494
    2. ' intersection' → logprob: -1.8765738010406494
    3. ' valeur' → logprob: -2.0015738010406494
    4. ' plus' → logprob: -2.2515738010406494
    5. 'val' → logprob: -3.0015738010406494
    6. 'inter' → logprob: -3.5015738010406494
    7. 'plus' → logprob: -3.5015738010406494
    8. ' inter' → logprob: -4.00157356262207
    9. ' distance' → logprob: -4.25157356262207
    10. 'max' → logprob: -4.37657356262207

Token 175: ' cool' (ID: 8157)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.091090127825737
    2. '
' → logprob: -4.091090202331543
    3. ' for' → logprob: -4.216090202331543
    4. 'result' → logprob: -4.841090202331543
    5. '    
' → logprob: -5.216090202331543
    6. ' max' → logprob: -5.841090202331543
    7. ' #' → logprob: -5.841090202331543
    8. ' result' → logprob: -5.841090202331543
    9. ' x' → logprob: -5.966090202331543
    10. 'a' → logprob: -6.091090202331543

Token 176: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.136771559715271
    2. 'x' → logprob: -2.3867716789245605
    3. '#' → logprob: -2.5117716789245605
    4. ' for' → logprob: -3.3867716789245605
    5. 'space' → logprob: -3.3867716789245605
    6. ':' → logprob: -3.6367716789245605
    7. 'max' → logprob: -3.6367716789245605
    8. 'a' → logprob: -3.8867716789245605
    9. ' #' → logprob: -3.8867716789245605
    10. 'i' → logprob: -4.0117716789245605

Token 177: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04275330901145935
    2. 'min' → logprob: -5.167753219604492
    3. ' for' → logprob: -5.542753219604492
    4. 'result' → logprob: -6.042753219604492
    5. ' while' → logprob: -6.042753219604492
    6. 'start' → logprob: -6.042753219604492
    7. 'x' → logprob: -6.167753219604492
    8. 'while' → logprob: -6.417753219604492
    9. ' if' → logprob: -6.542753219604492
    10. 'max' → logprob: -6.542753219604492

Token 178: ' resultat' (ID: 67404)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.8803989291191101
    2. 'inter' → logprob: -2.505398988723755
    3. 'result' → logprob: -2.505398988723755
    4. 'res' → logprob: -3.130398988723755
    5. 'start' → logprob: -3.130398988723755
    6. 'low' → logprob: -3.255398988723755
    7. 'mini' → logprob: -3.255398988723755
    8. 'if' → logprob: -3.380398988723755
    9. ' print' → logprob: -3.505398988723755
    10. 'x' → logprob: -3.505398988723755

Token 179: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08522061258554459
    2. '=' → logprob: -2.5852205753326416
    3. '_' → logprob: -5.210220813751221
    4. ' ' → logprob: -8.210220336914062
    5. '_min' → logprob: -8.460220336914062
    6. 's' → logprob: -9.335220336914062
    7. '_a' → logprob: -9.960220336914062
    8. '_space' → logprob: -10.085220336914062
    9. '   ' → logprob: -10.210220336914062
    10. ':' → logprob: -10.835220336914062

Token 180: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.052550118416547775
    2. ' max' → logprob: -3.3025500774383545
    3. '(max' → logprob: -4.677550315856934
    4. 'min' → logprob: -5.552550315856934
    5. '(min' → logprob: -7.677550315856934
    6. 'math' → logprob: -7.927550315856934
    7. ' min' → logprob: -9.177550315856934
    8. '[max' → logprob: -9.177550315856934
    9. 'round' → logprob: -10.177550315856934
    10. ' math' → logprob: -10.552550315856934

Token 181: '(math' (ID: 86464)
  Prédit: '(min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.00023393364972434938
    2. '(max' → logprob: -9.00023365020752
    3. '(' → logprob: -9.37523365020752
    4. 'mini' → logprob: -11.25023365020752
    5. '(mi' → logprob: -12.00023365020752
    6. '(int' → logprob: -12.50023365020752
    7. '((' → logprob: -13.75023365020752
    8. ' (' → logprob: -14.12523365020752
    9. '(round' → logprob: -15.50023365020752
    10. '([' → logprob: -16.125234603881836

Token 182: '.ceil' (ID: 60295)
  Prédit: '.ceil'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ceil' → logprob: -0.1537563055753708
    2. '.floor' → logprob: -2.5287563800811768
    3. '.min' → logprob: -3.1537563800811768
    4. '.' → logprob: -4.403756141662598
    5. '(min' → logprob: -5.778756141662598
    6. '(' → logprob: -6.403756141662598
    7. '.f' → logprob: -7.153756141662598
    8. '.sqrt' → logprob: -7.528756141662598
    9. ' .' → logprob: -8.278756141662598
    10. '.m' → logprob: -8.653756141662598

Token 183: '(min' (ID: 26035)
  Prédit: '(min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.006083203479647636
    2. '(max' → logprob: -5.131083011627197
    3. '(' → logprob: -9.631083488464355
    4. 'mini' → logprob: -10.506083488464355
    5. ' (' → logprob: -10.756083488464355
    6. '((' → logprob: -11.131083488464355
    7. '(mi' → logprob: -11.256083488464355
    8. ')' → logprob: -12.506083488464355
    9. ' mini' → logprob: -12.756083488464355
    10. '   ' → logprob: -13.256083488464355

Token 184: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00024500858853571117
    2. 'a' → logprob: -9.500245094299316
    3. '_i' → logprob: -9.500245094299316
    4. '(i' → logprob: -10.250245094299316
    5. '(min' → logprob: -11.000245094299316
    6. 'o' → logprob: -11.625245094299316
    7. '_a' → logprob: -11.625245094299316
    8. '(max' → logprob: -11.750245094299316
    9. '((' → logprob: -12.750245094299316
    10. '(a' → logprob: -12.875245094299316

Token 185: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.03730388358235359
    2. '_b' → logprob: -3.412303924560547
    3. 'a' → logprob: -5.662303924560547
    4. 'b' → logprob: -9.412303924560547
    5. 'max' → logprob: -9.412303924560547
    6. '(a' → logprob: -12.162303924560547
    7. '(max' → logprob: -12.537303924560547
    8. '   ' → logprob: -14.287303924560547
    9. '_' → logprob: -14.412303924560547
    10. '(' → logprob: -14.662303924560547

Token 186: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.696077823638916
    2. '),' → logprob: -0.696077823638916
    3. ' ,' → logprob: -6.321077823638916
    4. ')' → logprob: -8.321077346801758
    5. '   ' → logprob: -8.321077346801758
    6. ' ),' → logprob: -8.571077346801758
    7. ' /' → logprob: -9.196077346801758
    8. '/' → logprob: -9.321077346801758
    9. ' -' → logprob: -9.696077346801758
    10. ',min' → logprob: -10.196077346801758

Token 187: ' mini' (ID: 15065)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.2521410882472992
    2. ' math' → logprob: -1.5021411180496216
    3. 'min' → logprob: -10.377140998840332
    4. '    ' → logprob: -10.627140998840332
    5. 'int' → logprob: -10.877140998840332
    6. ' int' → logprob: -11.377140998840332
    7. '           ' → logprob: -11.502140998840332
    8. '          ' → logprob: -11.502140998840332
    9. 'mini' → logprob: -11.502140998840332
    10. '            ' → logprob: -11.627140998840332

Token 188: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -1.676292231422849e-05
    2. '_a' → logprob: -11.625017166137695
    3. 'b' → logprob: -12.375017166137695
    4. '_' → logprob: -13.000017166137695
    5. '   ' → logprob: -15.000017166137695
    6. ' _' → logprob: -15.125017166137695
    7. 'a' → logprob: -15.875017166137695
    8. '	b' → logprob: -16.125017166137695
    9. ' ' → logprob: -16.125017166137695
    10. '  ' → logprob: -16.250017166137695

Token 189: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00015514736878685653
    2. ' )' → logprob: -9.500155448913574
    3. ')
' → logprob: -9.625155448913574
    4. '   ' → logprob: -11.375155448913574
    5. ',' → logprob: -14.375155448913574
    6. ' ' → logprob: -14.500155448913574
    7. '))' → logprob: -14.750155448913574
    8. '),' → logprob: -15.625155448913574
    9. '  ' → logprob: -16.375154495239258
    10. ')+' → logprob: -16.625154495239258

Token 190: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.846750020980835
    2. '
' → logprob: -1.096750020980835
    3. '   ' → logprob: -1.846750020980835
    4. 'print' → logprob: -3.346750020980835
    5. ')
' → logprob: -4.096750259399414
    6. '<|end|>' → logprob: -4.846750259399414
    7. '    
' → logprob: -5.221750259399414
    8. ' 
' → logprob: -5.471750259399414
    9. '.' → logprob: -6.471750259399414
    10. ' ' → logprob: -6.971750259399414

Token 191: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.716477632522583
    2. '   ' → logprob: -1.216477632522583
    3. ')' → logprob: -1.591477632522583
    4. 'result' → logprob: -5.716477394104004
    5. ' print' → logprob: -5.841477394104004
    6. ',' → logprob: -6.216477394104004
    7. ')
' → logprob: -6.841477394104004
    8. ' if' → logprob: -7.341477394104004
    9. 'if' → logprob: -7.966477394104004
    10. '
' → logprob: -8.591477394104004

Token 192: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.06208240985870361
    2. '(' → logprob: -2.812082290649414
    3. 'result' → logprob: -9.687082290649414
    4. '(int' → logprob: -10.437082290649414
    5. '(max' → logprob: -11.312082290649414
    6. '('' → logprob: -13.062082290649414
    7. '(
' → logprob: -13.312082290649414
    8. ' (' → logprob: -13.312082290649414
    9. '(round' → logprob: -14.062082290649414
    10. '("("' → logprob: -14.187082290649414

Token 193: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.1272132396697998
    2. ')' → logprob: -2.1272132396698
    3. '))' → logprob: -8.377213478088379
    4. 'a' → logprob: -10.502213478088379
    5. '_at' → logprob: -11.502213478088379
    6. 't' → logprob: -12.877213478088379
    7. 'result' → logprob: -13.002213478088379
    8. ' )' → logprob: -13.252213478088379
    9. ' at' → logprob: -13.377213478088379
    10. 'ation' → logprob: -13.877213478088379

Token 194: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1517960956552997e-05
    2. ' )' → logprob: -11.500011444091797
    3. ')
' → logprob: -14.500011444091797
    4. '()' → logprob: -15.500011444091797
    5. '())' → logprob: -16.000011444091797
    6. '))' → logprob: -16.125011444091797
    7. '+' → logprob: -16.375011444091797
    8. '}' → logprob: -16.500011444091797
    9. '```' → logprob: -16.625011444091797
    10. '   ' → logprob: -16.875011444091797

Token 195: 'principal' (ID: 112800)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47634357213974
    2. '<|end|>' → logprob: -1.1013436317443848
    3. '(' → logprob: -4.101343631744385
    4. '()' → logprob: -4.226343631744385
    5. '
' → logprob: -4.726343631744385
    6. '\n' → logprob: -6.101343631744385
    7. '<|end|>' → logprob: -6.976343631744385
    8. '[' → logprob: -7.476343631744385
    9. '```' → logprob: -7.476343631744385
    10. '#' → logprob: -7.601343631744385

Token 196: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0001979378139367327
    2. '(' → logprob: -9.250198364257812
    3. '()
' → logprob: -9.250198364257812
    4. ' ()' → logprob: -13.750198364257812
    5. '()

' → logprob: -13.750198364257812
    6. '();' → logprob: -13.875198364257812
    7. '()`' → logprob: -14.000198364257812
    8. '()\' → logprob: -14.875198364257812
    9. '(
' → logprob: -15.250198364257812
    10. '()<' → logprob: -15.375198364257812


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 194
Tokens correctement prédits (1ère position, stricte): 59
Tokens correctement prédits (1ère position, avec adaptation): 64
Tokens correctement prédits (top 10): 121
Précision stricte (1ère position): 30.41%
Précision adaptée (1ère position): 32.99%
Précision (top 10): 62.37%
================================================================================
