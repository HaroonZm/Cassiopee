================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:19:32
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from itertools import accumulate

def parse_input():
    n = int(input())
    rev = [[0] * n, [0] * n]
    for i in range(n * 2):
        c, a = input().split()
        a = int(a) - 1
        rev[int(c == 'B')][a] = i
    return n, rev

def create_acc_row(n2):
    return [0] * n2

def update_row(row, index):
    row[index] += 1
    return row

def accumulate_row(row):
    return list(accumulate(row))

def reverse_list(l):
    return list(reversed(l))

def process_x_entry(row, x, n2):
    index = n2 - x - 1
    row = update_row(row, index)
    acc_row = reverse_list(accumulate_row(row))
    return row, acc_row

def existence_right_single(n, rev_c):
    n2 = n * 2
    acc = []
    row = create_acc_row(n2)
    acc.append(list(row))
    for x in rev_c:
        row, acc_row = process_x_entry(row, x, n2)
        acc.append(acc_row)
    return acc

def existence_right_all(n, rev):
    return [existence_right_single(n, rev_c) for rev_c in rev]

def get_initial_dp(cost1, rev1):
    acc_values = (c[y] for y, c in zip(rev1, cost1))
    dp = [0] + list(accumulate(acc_values))
    return dp

def zip_rev_cost(rev0, cost0):
    for x, cw0, cw1 in zip(rev0, cost0, cost0[1:]):
        yield x, cw0, cw1

def zip_rev_cost_b(rev1, cost1):
    for b, (y, cb0, cb1) in enumerate(zip(rev1, cost1, cost1[1:])):
        yield b, y, cb0, cb1

def compute_ndp(n, dp, x, cw0, cw1, rev1, cost1):
    ndp = [0] * (n + 1)
    cw0x = cw0[x]
    ndp[0] = prev = dp[0] + cw0x
    for b, y, cb0, cb1 in zip_rev_cost_b(rev1, cost1):
        val1 = dp[b + 1] + cw0x + cb1[x]
        val2 = prev + cw1[y] + cb0[y]
        ndp[b + 1] = prev = min(val1, val2)
    return ndp

def full_dp(n, rev, cost):
    dp = get_initial_dp(cost[1], rev[1])
    for x, cw0, cw1 in zip_rev_cost(rev[0], cost[0]):
        dp = compute_ndp(n, dp, x, cw0, cw1, rev[1], cost[1])
    return dp[n]

def solve(n, rev):
    cost = existence_right_all(n, rev)
    return full_dp(n, rev, cost)

def main():
    n, rev = parse_input()
    result = solve(n, rev)
    print(result)

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' itertools' (ID: 103178)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' accumulate' (ID: 74226)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'com' → logprob: -1.1646274328231812
    2. 'product' → logprob: -1.4146274328231812
    3. 'per' → logprob: -1.7896274328231812
    4. 'count' → logprob: -2.0396275520324707
    5. 'cycle' → logprob: -2.6646275520324707
    6. 'group' → logprob: -3.2896275520324707
    7. 'chain' → logprob: -3.4146275520324707
    8. 'acc' → logprob: -6.039627552032471
    9. 'is' → logprob: -6.539627552032471
    10. 'zip' → logprob: -6.914627552032471

Token 4: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0001669485354796052
    2. '(
' → logprob: -9.250166893005371
    3. '.' → logprob: -10.375166893005371
    4. ',' → logprob: -11.125166893005371
    5. '\(' → logprob: -11.750166893005371
    6. '()' → logprob: -12.375166893005371
    7. ' (' → logprob: -12.625166893005371
    8. '```' → logprob: -13.500166893005371
    9. '(

' → logprob: -13.625166893005371
    10. '('' → logprob: -14.000166893005371

Token 5: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0009220616775564849
    2. '(
' → logprob: -7.125922203063965
    3. ',' → logprob: -10.250922203063965
    4. 'def' → logprob: -10.750922203063965
    5. '.' → logprob: -10.875922203063965
    6. '()' → logprob: -11.875922203063965
    7. 'import' → logprob: -12.125922203063965
    8. '\(' → logprob: -12.500922203063965
    9. '(

' → logprob: -12.500922203063965
    10. '```' → logprob: -12.625922203063965

Token 6: ' parse' (ID: 8420)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.005837437696754932
    2. ' accumulate' → logprob: -5.380837440490723
    3. ' calculate' → logprob: -8.005837440490723
    4. ' space' → logprob: -8.380837440490723
    5. ' sum' → logprob: -8.880837440490723
    6. ' accumulated' → logprob: -9.755837440490723
    7. ' cumulative' → logprob: -10.005837440490723
    8. ' add' → logprob: -10.005837440490723
    9. ' compute' → logprob: -10.255837440490723
    10. ' accumulator' → logprob: -10.255837440490723

Token 7: '_input' (ID: 12507)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5124170780181885
    2. '(' → logprob: -1.1374170780181885
    3. '_line' → logprob: -2.7624170780181885
    4. '_token' → logprob: -5.762416839599609
    5. ' (' → logprob: -6.012416839599609
    6. '_string' → logprob: -6.512416839599609
    7. '_name' → logprob: -7.262416839599609
    8. '_input' → logprob: -7.512416839599609
    9. '(parse' → logprob: -7.637416839599609
    10. '_par' → logprob: -7.887416839599609

Token 8: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0021433625370264053
    2. '_' → logprob: -6.627143383026123
    3. '(_' → logprob: -8.752142906188965
    4. '(line' → logprob: -9.502142906188965
    5. '_line' → logprob: -9.627142906188965
    6. '(_:' → logprob: -9.627142906188965
    7. '():' → logprob: -9.877142906188965
    8. '(input' → logprob: -10.002142906188965
    9. '("("' → logprob: -10.252142906188965
    10. '(user' → logprob: -10.377142906188965

Token 9: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03943542763590813
    2. ' return' → logprob: -4.664435386657715
    3. '    ' → logprob: -5.039435386657715
    4. '```' → logprob: -5.039435386657715
    5. '    
' → logprob: -5.539435386657715
    6. '(' → logprob: -5.914435386657715
    7. 'return' → logprob: -6.289435386657715
    8. ' ' → logprob: -6.539435386657715
    9. ''' → logprob: -6.664435386657715
    10. '<|end|>' → logprob: -6.914435386657715

Token 10: ' n' (ID: 297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.553253710269928
    2. 'input' → logprob: -2.053253650665283
    3. 'return' → logprob: -2.178253650665283
    4. ' line' → logprob: -2.678253650665283
    5. ' return' → logprob: -3.678253650665283
    6. ' input' → logprob: -3.928253650665283
    7. 'data' → logprob: -3.928253650665283
    8. 'line' → logprob: -4.303253650665283
    9. 'user' → logprob: -4.553253650665283
    10. '    ' → logprob: -5.178253650665283

Token 11: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05921998620033264
    2. ' ' → logprob: -3.1842200756073
    3. '=' → logprob: -4.309219837188721
    4. ',' → logprob: -6.684219837188721
    5. '  ' → logprob: -7.309219837188721
    6. ' ,' → logprob: -7.559219837188721
    7. ')' → logprob: -9.809220314025879
    8. ' )' → logprob: -10.059220314025879
    9. '   ' → logprob: -10.309220314025879
    10. '=int' → logprob: -10.809220314025879

Token 12: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.0036904551088809967
    2. 'int' → logprob: -5.628690242767334
    3. ' ' → logprob: -9.503690719604492
    4. ' len' → logprob: -11.628690719604492
    5. ' input' → logprob: -12.753690719604492
    6. '=int' → logprob: -13.753690719604492
    7. ' map' → logprob: -13.878690719604492
    8. '	int' → logprob: -14.878690719604492
    9. 'len' → logprob: -14.878690719604492
    10. '<int' → logprob: -15.003690719604492

Token 13: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.4741794764995575
    2. '(' → logprob: -0.9741795063018799
    3. 'input' → logprob: -9.3491792678833
    4. ' (' → logprob: -12.2241792678833
    5. '('' → logprob: -12.9741792678833
    6. ' input' → logprob: -12.9741792678833
    7. '()' → logprob: -13.2241792678833
    8. '(
' → logprob: -13.7241792678833
    9. '("' → logprob: -14.4741792678833
    10. '(in' → logprob: -14.8491792678833

Token 14: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.3331702947616577
    2. '()' → logprob: -1.3331702947616577
    3. '(' → logprob: -4.458170413970947
    4. '('' → logprob: -5.458170413970947
    5. '()))' → logprob: -6.083170413970947
    6. ')' → logprob: -6.833170413970947
    7. '().' → logprob: -8.708169937133789
    8. '("' → logprob: -9.583169937133789
    9. '(()' → logprob: -9.958169937133789
    10. '(""))' → logprob: -10.083169937133789

Token 15: '   ' (ID: 271)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.33938583731651306
    2. '\' → logprob: -2.714385747909546
    3. '
' → logprob: -2.964385747909546
    4. '   ' → logprob: -3.214385747909546
    5. ' 
' → logprob: -3.464385747909546
    6. '    
' → logprob: -3.964385747909546
    7. '<|end|>' → logprob: -4.089385986328125
    8. '  
' → logprob: -4.339385986328125
    9. ')' → logprob: -4.464385986328125
    10. ' ' → logprob: -4.964385986328125

Token 16: ' rev' (ID: 10808)
  Prédit: ' arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' arr' → logprob: -0.7227910161018372
    2. 'arr' → logprob: -1.0977909564971924
    3. ' numbers' → logprob: -3.0977909564971924
    4. 'a' → logprob: -3.4727909564971924
    5. ' data' → logprob: -3.7227909564971924
    6. 'data' → logprob: -3.8477909564971924
    7. ' a' → logprob: -3.9727909564971924
    8. 'numbers' → logprob: -4.8477911949157715
    9. ' lst' → logprob: -4.9727911949157715
    10. '   ' → logprob: -5.4727911949157715

Token 17: ' =' (ID: 314)
  Prédit: 'erse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'erse' → logprob: -0.5571388006210327
    2. 'ers' → logprob: -1.4321388006210327
    3. 'iew' → logprob: -1.8071388006210327
    4. '_' → logprob: -4.557138919830322
    5. 'e' → logprob: -5.807138919830322
    6. 'er' → logprob: -6.432138919830322
    7. '_rev' → logprob: -6.432138919830322
    8. 's' → logprob: -6.682138919830322
    9. '_e' → logprob: -7.182138919830322
    10. ' =' → logprob: -7.432138919830322

Token 18: ' [[' (ID: 9237)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.6403477191925049
    2. ' list' → logprob: -1.5153477191925049
    3. ' [' → logprob: -1.8903477191925049
    4. 'list' → logprob: -3.140347719192505
    5. '[]' → logprob: -3.390347719192505
    6. ' reversed' → logprob: -5.015347480773926
    7. '[' → logprob: -5.140347480773926
    8. ' ' → logprob: -6.265347480773926
    9. 'rev' → logprob: -6.265347480773926
    10. '[::-' → logprob: -6.265347480773926

Token 19: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6040523052215576
    2. 'int' → logprob: -0.9790523052215576
    3. 'False' → logprob: -3.2290523052215576
    4. ']' → logprob: -4.354052543640137
    5. '*' → logprob: -4.354052543640137
    6. 'list' → logprob: -4.854052543640137
    7. '[]' → logprob: -6.979052543640137
    8. 'n' → logprob: -7.854052543640137
    9. '1' → logprob: -7.854052543640137
    10. ']*' → logprob: -7.854052543640137

Token 20: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.22408248484134674
    2. ']*' → logprob: -2.4740824699401855
    3. ' for' → logprob: -2.5990824699401855
    4. ',' → logprob: -3.2240824699401855
    5. ']*(' → logprob: -6.7240824699401855
    6. 'for' → logprob: -7.5990824699401855
    7. ' ]' → logprob: -7.8490824699401855
    8. ']]' → logprob: -8.849082946777344
    9. '	for' → logprob: -10.474082946777344
    10. ']int' → logprob: -10.474082946777344

Token 21: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.12616804242134094
    2. ' for' → logprob: -2.5011680126190186
    3. ']*' → logprob: -3.5011680126190186
    4. ',' → logprob: -5.376168251037598
    5. 'for' → logprob: -6.876168251037598
    6. ' ]' → logprob: -7.751168251037598
    7. ']*(' → logprob: -9.001168251037598
    8. ')' → logprob: -9.751168251037598
    9. ']]' → logprob: -10.251168251037598
    10. '0' → logprob: -10.626168251037598

Token 22: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.10610625892877579
    2. '(n' → logprob: -2.6061062812805176
    3. '(' → logprob: -4.481106281280518
    4. ' n' → logprob: -4.731106281280518
    5. ' (' → logprob: -6.106106281280518
    6. 'i' → logprob: -6.731106281280518
    7. '(i' → logprob: -6.981106281280518
    8. 'm' → logprob: -7.606106281280518
    9. '10' → logprob: -8.35610580444336
    10. '   ' → logprob: -8.35610580444336

Token 23: ',' (ID: 11)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1828221082687378
    2. 'for' → logprob: -1.8078221082687378
    3. ')' → logprob: -6.432822227478027
    4. ']' → logprob: -7.432822227478027
    5. '   ' → logprob: -7.557822227478027
    6. ',' → logprob: -9.432822227478027
    7. '	for' → logprob: -9.682822227478027
    8. ' ' → logprob: -9.932822227478027
    9. '<|end|>' → logprob: -9.932822227478027
    10. ')]' → logprob: -10.182822227478027

Token 24: ' [' (ID: 723)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8314800262451172
    2. ' [' → logprob: -0.8314800262451172
    3. '[' → logprob: -2.331480026245117
    4. ' ' → logprob: -3.831480026245117
    5. '[n' → logprob: -5.956480026245117
    6. '    ' → logprob: -6.331480026245117
    7. '   ' → logprob: -6.456480026245117
    8. ' n' → logprob: -6.581480026245117
    9. 'n' → logprob: -7.206480026245117
    10. ' []' → logprob: -7.331480026245117

Token 25: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0020045305136591196
    2. '1' → logprob: -7.002004623413086
    3. 'n' → logprob: -7.127004623413086
    4. ']' → logprob: -8.627004623413086
    5. ' ' → logprob: -9.502004623413086
    6. ' n' → logprob: -11.377004623413086
    7. ')' → logprob: -12.252004623413086
    8. '   ' → logprob: -12.752004623413086
    9. 'int' → logprob: -13.127004623413086
    10. ' ]' → logprob: -13.252004623413086

Token 26: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.000260382192209363
    2. ']*' → logprob: -8.750260353088379
    3. ' ]' → logprob: -9.375260353088379
    4. ')' → logprob: -12.125260353088379
    5. '])' → logprob: -13.250260353088379
    6. ']]' → logprob: -13.625260353088379
    7. ' for' → logprob: -13.750260353088379
    8. '0' → logprob: -13.750260353088379
    9. ']*(' → logprob: -13.750260353088379
    10. ',' → logprob: -13.875260353088379

Token 27: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.011477946303784847
    2. ']*' → logprob: -5.136477947235107
    3. ' for' → logprob: -6.511477947235107
    4. ' ]' → logprob: -6.511477947235107
    5. ' *' → logprob: -7.136477947235107
    6. ')' → logprob: -7.261477947235107
    7. 'for' → logprob: -8.38647747039795
    8. ',' → logprob: -8.63647747039795
    9. '   ' → logprob: -8.88647747039795
    10. ')]' → logprob: -9.38647747039795

Token 28: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0010708003537729383
    2. '(n' → logprob: -7.751070976257324
    3. '2' → logprob: -8.126070976257324
    4. '(' → logprob: -8.751070976257324
    5. ' n' → logprob: -9.126070976257324
    6. '   ' → logprob: -10.126070976257324
    7. ' (' → logprob: -11.251070976257324
    8. '1' → logprob: -11.376070976257324
    9. ')n' → logprob: -13.001070976257324
    10. ' ' → logprob: -13.126070976257324

Token 29: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0035998327657580376
    2. ')]' → logprob: -6.003599643707275
    3. ' ]' → logprob: -7.003599643707275
    4. '()]' → logprob: -9.503600120544434
    5. ']]' → logprob: -10.128600120544434
    6. '`]' → logprob: -10.628600120544434
    7. '   ' → logprob: -11.128600120544434
    8. ',' → logprob: -11.253600120544434
    9. '])]' → logprob: -11.503600120544434
    10. '])' → logprob: -11.628600120544434

Token 30: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1683119535446167
    2. '<|end|>' → logprob: -2.0433120727539062
    3. '
' → logprob: -5.043312072753906
    4. '    
' → logprob: -5.168312072753906
    5. ')' → logprob: -5.418312072753906
    6. '<|end|>' → logprob: -5.793312072753906
    7. ' ' → logprob: -6.168312072753906
    8. '[' → logprob: -7.543312072753906
    9. 'def' → logprob: -8.043312072753906
    10. 'newline' → logprob: -8.168312072753906

Token 31: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05207258090376854
    2. ' for' → logprob: -3.927072525024414
    3. 'for' (adapté à ' for') → logprob: -4.177072525024414
    4. '    
' → logprob: -5.427072525024414
    5. '
' → logprob: -5.552072525024414
    6. 'rev' → logprob: -5.802072525024414
    7. ' ' → logprob: -7.302072525024414
    8. ' 
' → logprob: -7.302072525024414
    9. 'n' → logprob: -7.427072525024414
    10. ' rev' → logprob: -8.302072525024414

Token 32: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.09861677885055542
    2. ' _' → logprob: -2.7236168384552
    3. ' ' → logprob: -3.8486168384552
    4. '_' → logprob: -5.098616600036621
    5. 'i' → logprob: -7.098616600036621
    6. ' range' → logprob: -11.598616600036621
    7. ' ' → logprob: -11.848616600036621
    8. ' j' → logprob: -11.973616600036621
    9. '_i' → logprob: -12.348616600036621
    10. '  ' → logprob: -13.598616600036621

Token 33: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005950959865003824
    2. 'in' → logprob: -5.130950927734375
    3. ' ' → logprob: -11.130950927734375
    4. '  ' → logprob: -13.005950927734375
    5. ',' → logprob: -13.380950927734375
    6. '<|end|>' → logprob: -14.130950927734375
    7. '	in' → logprob: -14.380950927734375
    8. 'n' → logprob: -14.630950927734375
    9. '_' → logprob: -14.880950927734375
    10. ' ,' → logprob: -14.880950927734375

Token 34: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.10020969063043594
    2. 'range' → logprob: -2.3502097129821777
    3. '	range' → logprob: -13.10020923614502
    4. '(range' → logprob: -14.97520923614502
    5. ' ' → logprob: -15.22520923614502
    6. '  ' → logprob: -16.350210189819336
    7. ' xrange' → logprob: -16.600210189819336
    8. 'rang' → logprob: -16.850210189819336
    9. 'r' → logprob: -17.225210189819336
    10. '   ' → logprob: -17.350210189819336

Token 35: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.06996655464172363
    2. '(' → logprob: -2.6949665546417236
    3. ' (' → logprob: -10.694966316223145
    4. 'n' → logprob: -12.319966316223145
    5. ' n' → logprob: -13.444966316223145
    6. '(len' → logprob: -15.069966316223145
    7. '1' → logprob: -15.319966316223145
    8. '(
' → logprob: -15.444966316223145
    9. '   ' → logprob: -15.569966316223145
    10. '	n' → logprob: -15.694966316223145

Token 36: ' *' (ID: 425)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0008370272698812187
    2. '):
' → logprob: -7.8758368492126465
    3. ' ):' → logprob: -8.375837326049805
    4. ')' → logprob: -8.750837326049805
    5. '-' → logprob: -10.000837326049805
    6. ':' → logprob: -11.500837326049805
    7. '   ' → logprob: -13.125837326049805
    8. '+' → logprob: -13.375837326049805
    9. '():' → logprob: -13.375837326049805
    10. ',' → logprob: -13.625837326049805

Token 37: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4292462170124054
    2. '2' → logprob: -1.054246187210083
    3. ' n' → logprob: -7.804246425628662
    4. '3' → logprob: -10.554245948791504
    5. ')' → logprob: -10.679245948791504
    6. ' i' → logprob: -10.804245948791504
    7. '  ' → logprob: -11.054245948791504
    8. '1' → logprob: -11.179245948791504
    9. 'n' → logprob: -11.554245948791504
    10. ' )' → logprob: -12.179245948791504

Token 38: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.004435339942574501
    2. 'n' → logprob: -5.7544355392456055
    3. '3' → logprob: -7.2544355392456055
    4. '1' → logprob: -8.379435539245605
    5. 'i' → logprob: -8.379435539245605
    6. '4' → logprob: -10.129435539245605
    7. ' ' → logprob: -11.379435539245605
    8. '5' → logprob: -12.379435539245605
    9. ')' → logprob: -12.379435539245605
    10. '(' → logprob: -12.379435539245605

Token 39: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003526075044646859
    2. ' ):' → logprob: -6.128526210784912
    3. '):
' → logprob: -6.878526210784912
    4. ':' → logprob: -8.378525733947754
    5. ')' → logprob: -10.003525733947754
    6. '   ' → logprob: -11.878525733947754
    7. ',' → logprob: -12.503525733947754
    8. ' :' → logprob: -12.503525733947754
    9. '):
' → logprob: -12.503525733947754
    10. '-' → logprob: -12.503525733947754

Token 40: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6282128691673279
    2. '    ' → logprob: -1.5032129287719727
    3. ' ' → logprob: -1.8782129287719727
    4. '   ' → logprob: -3.0032129287719727
    5. '<|end|>' → logprob: -3.5032129287719727
    6. '        ' → logprob: -5.378212928771973
    7. '     ' → logprob: -6.753212928771973
    8. '<|end|>' → logprob: -6.878212928771973
    9. '  ' → logprob: -7.253212928771973
    10. '     
' → logprob: -7.753212928771973

Token 41: ' c' (ID: 274)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.1473160684108734
    2. '   ' → logprob: -3.3973159790039062
    3. ' arr' → logprob: -3.8973159790039062
    4. ' x' → logprob: -4.022315979003906
    5. 'line' → logprob: -4.272315979003906
    6. ' s' → logprob: -4.647315979003906
    7. ' tokens' → logprob: -5.272315979003906
    8. ' parts' → logprob: -5.522315979003906
    9. ' row' → logprob: -5.647315979003906
    10. 'x' → logprob: -5.647315979003906

Token 42: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009916398674249649
    2. '=' → logprob: -4.759916305541992
    3. ' ' → logprob: -7.634916305541992
    4. ',' → logprob: -7.884916305541992
    5. '   ' → logprob: -9.259916305541992
    6. '=input' → logprob: -9.259916305541992
    7. '  ' → logprob: -9.634916305541992
    8. 's' → logprob: -10.009916305541992
    9. 'h' → logprob: -10.259916305541992
    10. 'har' → logprob: -10.509916305541992

Token 43: ' a' (ID: 261)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4071057140827179
    2. '_' → logprob: -2.0321056842803955
    3. 'v' → logprob: -2.6571056842803955
    4. 's' → logprob: -3.6571056842803955
    5. 'x' → logprob: -4.157105922698975
    6. ' s' → logprob: -4.407105922698975
    7. 'a' → logprob: -4.532105922698975
    8. ' =' → logprob: -4.532105922698975
    9. '"' → logprob: -5.032105922698975
    10. 'd' → logprob: -5.157105922698975

Token 44: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10275178402662277
    2. '=' → logprob: -2.4777517318725586
    3. ',' → logprob: -4.352751731872559
    4. ' ' → logprob: -8.352751731872559
    5. 'r' → logprob: -8.477751731872559
    6. 'rray' → logprob: -9.227751731872559
    7. 's' → logprob: -9.727751731872559
    8. 'b' → logprob: -10.227751731872559
    9. 'pp' → logprob: -10.352751731872559
    10. 'i' → logprob: -10.727751731872559

Token 45: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.07018239796161652
    2. 'input' → logprob: -2.6951823234558105
    3. ' map' → logprob: -8.445182800292969
    4. 'map' → logprob: -11.195182800292969
    5. ' ' → logprob: -11.445182800292969
    6. '=input' → logprob: -12.820182800292969
    7. '(input' → logprob: -13.320182800292969
    8. '	input' → logprob: -13.945182800292969
    9. '[input' → logprob: -14.445182800292969
    10. ',input' → logprob: -15.570182800292969

Token 46: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.014410880394279957
    2. '()' → logprob: -4.264410972595215
    3. '(' → logprob: -9.264410972595215
    4. '=' → logprob: -10.514410972595215
    5. '()
' → logprob: -10.764410972595215
    6. ')' → logprob: -11.014410972595215
    7. '   ' → logprob: -11.139410972595215
    8. 'split' → logprob: -11.264410972595215
    9. '.split' → logprob: -12.014410972595215
    10. ' =' → logprob: -12.139410972595215

Token 47: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -3.893480243277736e-05
    2. 'strip' → logprob: -10.500039100646973
    3. ' split' → logprob: -12.000039100646973
    4. 'spl' → logprob: -12.500039100646973
    5. 'rstrip' → logprob: -13.875039100646973
    6. 'rs' → logprob: -15.250039100646973
    7. 'sp' → logprob: -16.000038146972656
    8. '(split' → logprob: -16.875038146972656
    9. 's' → logprob: -17.750038146972656
    10. '```' → logprob: -18.375038146972656

Token 48: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.02247483655810356
    2. '(' → logprob: -4.147474765777588
    3. '('' → logprob: -5.647474765777588
    4. ')' → logprob: -7.272474765777588
    5. '   ' → logprob: -7.647474765777588
    6. ',' → logprob: -7.897474765777588
    7. '[' → logprob: -7.897474765777588
    8. '(',' → logprob: -8.397475242614746
    9. '    ' → logprob: -8.772475242614746
    10. '()
' → logprob: -8.772475242614746

Token 49: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 50: ' a' (ID: 261)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 51: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6363914608955383
    2. ' =' → logprob: -0.7613914608955383
    3. '=int' → logprob: -5.636391639709473
    4. '<|end|>' → logprob: -8.886391639709473
    5. ')' → logprob: -10.761391639709473
    6. ' ' → logprob: -11.136391639709473
    7. 'int' → logprob: -11.761391639709473
    8. '=
' → logprob: -11.886391639709473
    9. ',' → logprob: -12.011391639709473
    10. '<|end|>' → logprob: -12.261391639709473

Token 52: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.008616461418569088
    2. ' int' → logprob: -4.7586164474487305
    3. '[int' → logprob: -13.75861644744873
    4. '<int' → logprob: -15.00861644744873
    5. '1' → logprob: -15.13361644744873
    6. '=int' → logprob: -15.75861644744873
    7. ']int' → logprob: -17.008617401123047
    8. ':int' → logprob: -17.383617401123047
    9. '0' → logprob: -18.258617401123047
    10. '(int' → logprob: -18.383617401123047

Token 53: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.00015872348740231246
    2. '(' → logprob: -8.750158309936523
    3. '()' → logprob: -16.125158309936523
    4. '(A' → logprob: -17.375158309936523
    5. '(
' → logprob: -17.500158309936523
    6. '(ai' → logprob: -17.500158309936523
    7. 'a' → logprob: -18.250158309936523
    8. '(an' → logprob: -18.875158309936523
    9. ' (' → logprob: -19.500158309936523
    10. '(acc' → logprob: -19.875158309936523

Token 54: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00048632267862558365
    2. ')
' → logprob: -7.750486373901367
    3. ' )' → logprob: -10.125486373901367
    4. '[' → logprob: -13.000486373901367
    5. ')`' → logprob: -13.250486373901367
    6. ')

' → logprob: -13.625486373901367
    7. ' ' → logprob: -13.750486373901367
    8. '   ' → logprob: -13.750486373901367
    9. ')
' → logprob: -13.875486373901367
    10. '<|end|>' → logprob: -13.875486373901367

Token 55: ' -' (ID: 533)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.46798428893089294
    2. '<|end|>' → logprob: -1.3429843187332153
    3. '   ' → logprob: -3.467984199523926
    4. '\n' → logprob: -3.592984199523926
    5. ' 
' → logprob: -4.342984199523926
    6. '    
' → logprob: -4.467984199523926
    7. ' ' → logprob: -5.342984199523926
    8. '  
' → logprob: -5.342984199523926
    9. '<|end|>' → logprob: -5.967984199523926
    10. ')' → logprob: -5.967984199523926

Token 56: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001929228543303907
    2. ' ' → logprob: -6.25192928314209
    3. '<|end|>' → logprob: -15.37692928314209
    4. '   ' → logprob: -16.564428329467773
    5. '2' → logprob: -16.751928329467773
    6. '0' → logprob: -16.939428329467773
    7. '```' → logprob: -17.251928329467773
    8. '=' → logprob: -17.751928329467773
    9. '...' → logprob: -17.814428329467773
    10. '  ' → logprob: -17.939428329467773

Token 57: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3306015716807451e-05
    2. ' ' → logprob: -11.25001335144043
    3. '2' → logprob: -16.25001335144043
    4. '0' → logprob: -16.37501335144043
    5. '4' → logprob: -19.25001335144043
    6. '100' → logprob: -19.37501335144043
    7. '6' → logprob: -19.50001335144043
    8. '```' → logprob: -19.62501335144043
    9. '   ' → logprob: -19.87501335144043
    10. 'a' → logprob: -19.87501335144043

Token 58: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6005249619483948
    2. '<|end|>' → logprob: -0.8505249619483948
    3. '\n' → logprob: -4.72552490234375
    4. '   ' → logprob: -5.47552490234375
    5. '<|end|>' → logprob: -5.47552490234375
    6. '    
' → logprob: -6.22552490234375
    7. ' 
' → logprob: -6.60052490234375
    8. '       ' → logprob: -7.22552490234375
    9. ' ' → logprob: -7.72552490234375
    10. 'newline' → logprob: -7.97552490234375

Token 59: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 60: ' rev' (ID: 10808)
  Prédit: 'rev'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rev' (adapté à ' rev') → logprob: -0.7282480597496033
    2. '
' → logprob: -1.853248119354248
    3. ' 
' → logprob: -2.353248119354248
    4. '<|end|>' → logprob: -2.353248119354248
    5. ' rev' → logprob: -2.978248119354248
    6. '   ' → logprob: -3.603248119354248
    7. '    
' → logprob: -4.103248119354248
    8. ' ' → logprob: -4.353248119354248
    9. '\n' → logprob: -4.353248119354248
    10. '```' → logprob: -4.853248119354248

Token 61: '[int' (ID: 40124)
  Prédit: '[c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.02177964523434639
    2. '[a' → logprob: -4.146779537200928
    3. '[' → logprob: -5.271779537200928
    4. '[i' → logprob: -7.771779537200928
    5. '[int' → logprob: -10.396780014038086
    6. 'c' → logprob: -11.396780014038086
    7. '[
' → logprob: -11.771780014038086
    8. '```' → logprob: -11.771780014038086
    9. '[s' → logprob: -11.896780014038086
    10. '[]' → logprob: -11.896780014038086

Token 62: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.001535693067125976
    2. '(' → logprob: -6.501535892486572
    3. ')(' → logprob: -11.501535415649414
    4. ' (' → logprob: -12.001535415649414
    5. '(a' → logprob: -13.001535415649414
    6. '(i' → logprob: -13.126535415649414
    7. ' ' → logprob: -13.501535415649414
    8. ')c' → logprob: -13.501535415649414
    9. '((' → logprob: -13.626535415649414
    10. ')' → logprob: -13.751535415649414

Token 63: ' ==' (ID: 951)
  Prédit: ')]['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')][' → logprob: -0.09236567467451096
    2. '[' → logprob: -3.4673657417297363
    3. ')]' → logprob: -3.4673657417297363
    4. ')' → logprob: -4.092365741729736
    5. ')])' → logprob: -5.967365741729736
    6. '][' → logprob: -5.967365741729736
    7. ')[' → logprob: -7.342365741729736
    8. '[c' → logprob: -7.342365741729736
    9. '-' → logprob: -7.842365741729736
    10. ']' → logprob: -7.967365741729736

Token 64: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.2939150035381317
    2. '"B' → logprob: -2.418915033340454
    3. ''A' → logprob: -3.043915033340454
    4. ''S' → logprob: -3.668915033340454
    5. '"' → logprob: -4.043914794921875
    6. ''H' → logprob: -4.668914794921875
    7. ''O' → logprob: -4.668914794921875
    8. '"S' → logprob: -4.918914794921875
    9. ''D' → logprob: -4.918914794921875
    10. ''I' → logprob: -4.918914794921875

Token 65: 'B' (ID: 33)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.066138744354248
    2. 'B' → logprob: -2.066138744354248
    3. 'R' → logprob: -2.066138744354248
    4. '2' → logprob: -2.191138744354248
    5. 'A' → logprob: -2.316138744354248
    6. '0' → logprob: -3.191138744354248
    7. 'S' → logprob: -3.441138744354248
    8. '')' → logprob: -3.691138744354248
    9. ''' → logprob: -3.816138744354248
    10. 'T' → logprob: -4.691138744354248

Token 66: '')' (ID: 1542)
  Prédit: ')]['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')][' → logprob: -0.36995723843574524
    2. '')]' → logprob: -1.6199572086334229
    3. '')' → logprob: -2.494957208633423
    4. ')]' → logprob: -3.744957208633423
    5. ')' → logprob: -5.744957447052002
    6. ']' → logprob: -6.994957447052002
    7. '')[' → logprob: -7.619957447052002
    8. '][' → logprob: -8.619956970214844
    9. ''' → logprob: -9.869956970214844
    10. '')]
' → logprob: -9.994956970214844

Token 67: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0011380735086277127
    2. ']' → logprob: -7.376138210296631
    3. ' ][' → logprob: -7.626138210296631
    4. ' ' → logprob: -12.251137733459473
    5. '()][' → logprob: -12.501137733459473
    6. ''][' → logprob: -12.626137733459473
    7. ']][' → logprob: -13.001137733459473
    8. '"][' → logprob: -13.126137733459473
    9. ')][' → logprob: -13.126137733459473
    10. '[' → logprob: -14.001137733459473

Token 68: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.001704579102806747
    2. ' a' → logprob: -6.376704692840576
    3. ']' → logprob: -14.126704216003418
    4. 'i' → logprob: -14.251704216003418
    5. ' ' → logprob: -14.376704216003418
    6. '>a' → logprob: -16.501705169677734
    7. '	a' → logprob: -17.001705169677734
    8. '   ' → logprob: -17.126705169677734
    9. ')a' → logprob: -17.501705169677734
    10. '_a' → logprob: -17.876705169677734

Token 69: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002226860262453556
    2. ']+=' → logprob: -6.502226829528809
    3. ' ]' → logprob: -7.252226829528809
    4. ' +=' → logprob: -12.627226829528809
    5. ']=' → logprob: -12.752226829528809
    6. ']+' → logprob: -12.752226829528809
    7. '+=' → logprob: -13.502226829528809
    8. '+' → logprob: -13.627226829528809
    9. '`]' → logprob: -13.877226829528809
    10. ')' → logprob: -14.127226829528809

Token 70: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.22051066160202026
    2. '=' → logprob: -2.720510721206665
    3. '+=' → logprob: -2.720510721206665
    4. ' =' → logprob: -2.720510721206665
    5. ']+=' → logprob: -8.970510482788086
    6. ' ^=' → logprob: -9.345510482788086
    7. ' ' → logprob: -9.970510482788086
    8. '+' → logprob: -10.095510482788086
    9. ' |=' → logprob: -10.595510482788086
    10. ' +' → logprob: -10.720510482788086

Token 71: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.039177656173706055
    2. '1' → logprob: -3.289177656173706
    3. ' i' → logprob: -6.914177894592285
    4. ' ' → logprob: -9.914177894592285
    5. '   ' → logprob: -10.164177894592285
    6. '(i' → logprob: -11.539177894592285
    7. '	i' → logprob: -11.789177894592285
    8. 'True' → logprob: -11.914177894592285
    9. '0' → logprob: -12.539177894592285
    10. 'n' → logprob: -12.664177894592285

Token 72: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6368898153305054
    2. '\n' → logprob: -1.1368898153305054
    3. '<|end|>' → logprob: -2.011889934539795
    4. ')' → logprob: -5.636889934539795
    5. '   ' → logprob: -5.761889934539795
    6. '  
' → logprob: -6.511889934539795
    7. '```' → logprob: -6.761889934539795
    8. '<|end|>' → logprob: -6.761889934539795
    9. ' 
' → logprob: -7.011889934539795
    10. ' ' → logprob: -7.136889934539795

Token 73: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.35516318678855896
    2. '\n' → logprob: -2.105163097381592
    3. '   ' → logprob: -2.605163097381592
    4. '<|end|>' → logprob: -2.730163097381592
    5. ' ' → logprob: -4.605163097381592
    6. '  
' → logprob: -4.855163097381592
    7. '    
' → logprob: -5.230163097381592
    8. ')' → logprob: -5.355163097381592
    9. ' 
' → logprob: -5.855163097381592
    10. '\' → logprob: -6.230163097381592

Token 74: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18001788854599
    2. ')' → logprob: -3.1800179481506348
    3. ' return' → logprob: -3.5550179481506348
    4. 'return' (adapté à ' return') → logprob: -3.5550179481506348
    5. '    
' → logprob: -3.8050179481506348
    6. '
' → logprob: -4.180017948150635
    7. ' ' → logprob: -4.555017948150635
    8. '  
' → logprob: -5.680017948150635
    9. ' 
' → logprob: -6.555017948150635
    10. 'n' → logprob: -6.680017948150635

Token 75: ' n' (ID: 297)
  Prédit: 'rev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rev' → logprob: -0.4594933092594147
    2. ' rev' → logprob: -1.5844932794570923
    3. ' n' → logprob: -2.459493398666382
    4. 'n' → logprob: -2.584493398666382
    5. '   ' → logprob: -7.459493160247803
    6. ' (' → logprob: -7.834493160247803
    7. '(n' → logprob: -8.084493637084961
    8. '[n' → logprob: -8.084493637084961
    9. ' ' → logprob: -8.334493637084961
    10. '  ' → logprob: -9.271993637084961

Token 76: ',' (ID: 11)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5756999850273132
    2. '<|end|>' → logprob: -1.200700044631958
    3. '\n' → logprob: -2.825700044631958
    4. '
' → logprob: -3.825700044631958
    5. '   ' → logprob: -4.200699806213379
    6. '<|end|>' → logprob: -4.325699806213379
    7. '```' → logprob: -4.575699806213379
    8. ' n' → logprob: -5.575699806213379
    9. 'def' → logprob: -5.950699806213379
    10. '(n' → logprob: -6.325699806213379

Token 77: ' rev' (ID: 10808)
  Prédit: ' rev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rev' → logprob: -0.523140013217926
    2. 'rev' → logprob: -0.898140013217926
    3. 're' → logprob: -12.023139953613281
    4. '_rev' → logprob: -12.648139953613281
    5. ' tuple' → logprob: -13.273139953613281
    6. '.rev' → logprob: -13.273139953613281
    7. 'tuple' → logprob: -14.023139953613281
    8. 'Rev' → logprob: -14.648139953613281
    9. ' ' → logprob: -14.648139953613281
    10. '```' → logprob: -15.023139953613281

Token 78: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 79: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3161223530769348
    2. '
' → logprob: -1.94112229347229
    3. 'n' → logprob: -2.69112229347229
    4. '```' → logprob: -4.066122531890869
    5. '

' → logprob: -4.066122531890869
    6. '<|end|>' → logprob: -4.566122531890869
    7. '\n' → logprob: -5.066122531890869
    8. '\' → logprob: -6.316122531890869
    9. 'd' → logprob: -6.566122531890869
    10. '#' → logprob: -6.566122531890869

Token 80: ' create' (ID: 2501)
  Prédit: ' parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' parse' → logprob: -0.4192256033420563
    2. ' main' → logprob: -2.1692256927490234
    3. ' solve' → logprob: -2.1692256927490234
    4. ' accumulate' → logprob: -2.9192256927490234
    5. ' process' → logprob: -3.5442256927490234
    6. ' calculate' → logprob: -4.544225692749023
    7. ' prefix' → logprob: -5.419225692749023
    8. ' max' → logprob: -6.169225692749023
    9. ' analyze' → logprob: -6.544225692749023
    10. ' ' → logprob: -6.794225692749023

Token 81: '_acc' (ID: 35551)
  Prédit: '_prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prefix' → logprob: -1.2689589262008667
    2. '_array' → logprob: -1.3939589262008667
    3. '_acc' → logprob: -2.0189590454101562
    4. '_segment' → logprob: -2.7689590454101562
    5. '_' → logprob: -2.8939590454101562
    6. '_dp' → logprob: -3.7689590454101562
    7. '_list' → logprob: -4.018959045410156
    8. '_stack' → logprob: -4.143959045410156
    9. '_sequence' → logprob: -4.393959045410156
    10. '_result' → logprob: -4.518959045410156

Token 82: '_row' (ID: 19157)
  Prédit: 'umulate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'umulate' → logprob: -0.06720255315303802
    2. 'um' → logprob: -2.817202568054199
    3. 'umulative' → logprob: -6.317202568054199
    4. 'umulator' → logprob: -6.317202568054199
    5. 'umul' → logprob: -7.067202568054199
    6. '()' → logprob: -8.3172025680542
    7. 'def' → logprob: -8.6922025680542
    8. '():' → logprob: -9.1922025680542
    9. 'uml' → logprob: -10.0672025680542
    10. '   ' → logprob: -10.0672025680542

Token 83: '(n' (ID: 2406)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.7093853950500488
    2. '(' → logprob: -1.2093853950500488
    3. '(n' → logprob: -1.7093853950500488
    4. '(row' → logprob: -4.959385395050049
    5. '(s' → logprob: -5.084385395050049
    6. ' ():' → logprob: -5.334385395050049
    7. '(size' → logprob: -5.584385395050049
    8. 's' → logprob: -6.209385395050049
    9. '()' → logprob: -6.834385395050049
    10. '(line' → logprob: -7.709385395050049

Token 84: '2' (ID: 17)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3155798614025116
    2. ',' → logprob: -1.315579891204834
    3. '):
' → logprob: -6.690579891204834
    4. ')' → logprob: -7.690579891204834
    5. ' ):' → logprob: -8.690579414367676
    6. '):
' → logprob: -9.065579414367676
    7. ' ,' → logprob: -9.190579414367676
    8. ':' → logprob: -9.690579414367676
    9. ',n' → logprob: -10.065579414367676
    10. '   ' → logprob: -10.690579414367676

Token 85: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.14759555459022522
    2. '):
' → logprob: -2.1475956439971924
    3. '):
' → logprob: -4.647595405578613
    4. ',' → logprob: -5.022595405578613
    5. ')' → logprob: -7.022595405578613
    6. ' ):' → logprob: -7.397595405578613
    7. '):

' → logprob: -7.397595405578613
    8. '*' → logprob: -7.772595405578613
    9. 'x' → logprob: -8.647595405578613
    10. 'u' → logprob: -8.897595405578613

Token 86: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005682637915015221
    2. ' return' → logprob: -6.255682468414307
    3. '[' → logprob: -7.255682468414307
    4. 'acc' → logprob: -7.505682468414307
    5. 'return' → logprob: -7.755682468414307
    6. '    ' → logprob: -7.880682468414307
    7. '	return' → logprob: -8.505682945251465
    8. '[]' → logprob: -8.505682945251465
    9. 'n' → logprob: -8.630682945251465
    10. '    
' → logprob: -8.755682945251465

Token 87: ' return' (ID: 622)
  Prédit: ' acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' acc' → logprob: -1.1377010345458984
    2. '   ' → logprob: -1.3877010345458984
    3. ' return' → logprob: -1.5127010345458984
    4. ' row' → logprob: -2.3877010345458984
    5. 'return' (adapté à ' return') → logprob: -3.3877010345458984
    6. ' res' → logprob: -3.3877010345458984
    7. 'acc' → logprob: -3.6377010345458984
    8. ' arr' → logprob: -5.012701034545898
    9. 'row' → logprob: -5.637701034545898
    10. 'arr' → logprob: -5.887701034545898

Token 88: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.11573919653892517
    2. ' [' → logprob: -2.365739107131958
    3. '[n' → logprob: -4.240739345550537
    4. '[next' → logprob: -8.365738868713379
    5. '[list' → logprob: -8.740738868713379
    6. '[[' → logprob: -8.990738868713379
    7. '[it' → logprob: -9.615738868713379
    8. 'acc' → logprob: -9.740738868713379
    9. 'list' → logprob: -9.865738868713379
    10. ' ' → logprob: -10.115738868713379

Token 89: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0022850260138511658
    2. ' ' → logprob: -7.502285003662109
    3. '(' → logprob: -7.627285003662109
    4. '[' → logprob: -7.877285003662109
    5. '(n' → logprob: -8.62728500366211
    6. '[n' → logprob: -8.62728500366211
    7. 'n' → logprob: -8.87728500366211
    8. '-' → logprob: -8.87728500366211
    9. ' [' → logprob: -10.12728500366211
    10. ' (' → logprob: -10.12728500366211

Token 90: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0019225641153752804
    2. ']*' → logprob: -6.876922607421875
    3. ']*(' → logprob: -7.126922607421875
    4. ' for' → logprob: -10.501922607421875
    5. ',' → logprob: -10.626922607421875
    6. ' ]' → logprob: -11.251922607421875
    7. ']+' → logprob: -11.376922607421875
    8. 'for' → logprob: -12.751922607421875
    9. '])' → logprob: -13.751922607421875
    10. ']int' → logprob: -14.126922607421875

Token 91: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.8977429866790771
    2. ' *' → logprob: -0.8977429866790771
    3. ',' → logprob: -2.147742986679077
    4. '0' → logprob: -3.397742986679077
    5. '[' → logprob: -4.647743225097656
    6. ']' → logprob: -5.022743225097656
    7. '<|end|>' → logprob: -5.647743225097656
    8. '*(' → logprob: -6.272743225097656
    9. '+' → logprob: -6.272743225097656
    10. '*[' → logprob: -6.397743225097656

Token 92: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2975046634674072
    2. '(n' → logprob: -1.4225046634674072
    3. '(' → logprob: -4.297504425048828
    4. ' n' → logprob: -7.047504425048828
    5. 'len' → logprob: -7.422504425048828
    6. ' (' → logprob: -7.672504425048828
    7. '(len' → logprob: -8.297504425048828
    8. '2' → logprob: -8.547504425048828
    9. '   ' → logprob: -9.422504425048828
    10. '0' → logprob: -10.422504425048828

Token 93: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.07764513790607452
    2. 'n' → logprob: -3.7026450634002686
    3. '[' → logprob: -3.9526450634002686
    4. '<|end|>' → logprob: -4.202645301818848
    5. ' ' → logprob: -6.077645301818848
    6. '*' → logprob: -6.077645301818848
    7. ']' → logprob: -6.327645301818848
    8. '_' → logprob: -6.452645301818848
    9. '[n' → logprob: -6.577645301818848
    10. ')' → logprob: -6.952645301818848

Token 94: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.128769874572754
    2. 'def' → logprob: -1.253769874572754
    3. '<|end|>' → logprob: -1.253769874572754
    4. '

' → logprob: -2.503769874572754
    5. '+' → logprob: -4.628769874572754
    6. '<|end|>' → logprob: -5.003769874572754
    7. '[' → logprob: -6.128769874572754
    8. '```' → logprob: -6.253769874572754
    9. 'n' → logprob: -7.628769874572754
    10. '
' → logprob: -8.003769874572754

Token 95: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 96: ' update' (ID: 4027)
  Prédit: ' create'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' create' → logprob: -0.08622319251298904
    2. '_acc' → logprob: -3.2112231254577637
    3. ' accumulate' → logprob: -4.461223125457764
    4. ' parse' → logprob: -4.836223125457764
    5. '_create' → logprob: -4.961223125457764
    6. ' _' → logprob: -5.461223125457764
    7. '_' → logprob: -5.586223125457764
    8. 'create' → logprob: -6.336223125457764
    9. ' ' → logprob: -6.711223125457764
    10. ' def' → logprob: -6.961223125457764

Token 97: '_row' (ID: 19157)
  Prédit: '_acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_acc' → logprob: -0.20249927043914795
    2. '_' → logprob: -2.2024993896484375
    3. '_row' → logprob: -3.3274993896484375
    4. '(' → logprob: -3.7024993896484375
    5. '_line' → logprob: -6.2024993896484375
    6. 'acc' → logprob: -6.5774993896484375
    7. '_counts' → logprob: -6.5774993896484375
    8. '(acc' → logprob: -6.7024993896484375
    9. '_count' → logprob: -7.2024993896484375
    10. '```' → logprob: -7.2024993896484375

Token 98: '(row' (ID: 15945)
  Prédit: '(row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(row' → logprob: -0.05008971691131592
    2. '(' → logprob: -3.3000898361206055
    3. '(n' → logprob: -4.6750898361206055
    4. '(line' → logprob: -7.0500898361206055
    5. '(rows' → logprob: -7.0500898361206055
    6. '(acc' → logprob: -8.300089836120605
    7. 'def' → logprob: -9.175089836120605
    8. '_row' → logprob: -9.300089836120605
    9. '(prev' → logprob: -9.675089836120605
    10. ' (' → logprob: -9.800089836120605

Token 99: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009246804984286427
    2. ' ,' → logprob: -7.125924587249756
    3. ',i' → logprob: -9.750925064086914
    4. ',index' → logprob: -10.625925064086914
    5. '   ' → logprob: -11.125925064086914
    6. ',n' → logprob: -11.750925064086914
    7. '):' → logprob: -12.625925064086914
    8. ',row' → logprob: -12.625925064086914
    9. ',int' → logprob: -14.000925064086914
    10. ',value' → logprob: -14.375925064086914

Token 100: ' index' (ID: 3472)
  Prédit: ' idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.8176907300949097
    2. ' i' → logprob: -1.4426907300949097
    3. ' pos' → logprob: -2.567690849304199
    4. ' val' → logprob: -2.942690849304199
    5. ' index' → logprob: -3.067690849304199
    6. 'i' → logprob: -3.317690849304199
    7. 'idx' → logprob: -3.567690849304199
    8. ' value' → logprob: -4.067690849304199
    9. 'pos' → logprob: -4.442690849304199
    10. ' x' → logprob: -4.567690849304199

Token 101: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13646267354488373
    2. '):' → logprob: -2.136462688446045
    3. '):
' → logprob: -4.761462688446045
    4. '   ' → logprob: -7.886462688446045
    5. ' ,' → logprob: -8.136462211608887
    6. '):
' → logprob: -9.511462211608887
    7. '+' → logprob: -10.261462211608887
    8. ')' → logprob: -10.261462211608887
    9. ':' → logprob: -11.136462211608887
    10. ',index' → logprob: -11.261462211608887

Token 102: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001933397026732564
    2. ' row' → logprob: -7.126933574676514
    3. '[row' → logprob: -8.626933097839355
    4. '    ' → logprob: -8.751933097839355
    5. '<|end|>' → logprob: -9.251933097839355
    6. '[index' → logprob: -9.501933097839355
    7. ' =' → logprob: -9.501933097839355
    8. ')' → logprob: -9.626933097839355
    9. '[' → logprob: -9.751933097839355
    10. 'row' → logprob: -9.751933097839355

Token 103: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' (adapté à ' row') → logprob: -0.6980418562889099
    2. ' row' → logprob: -0.6980418562889099
    3. '   ' → logprob: -5.573041915893555
    4. ' for' → logprob: -7.448041915893555
    5. 'for' → logprob: -7.698041915893555
    6. 'if' → logprob: -11.573041915893555
    7. ' ' → logprob: -11.573041915893555
    8. ' if' → logprob: -11.698041915893555
    9. '	row' → logprob: -12.198041915893555
    10. '[row' → logprob: -12.448041915893555

Token 104: '[index' (ID: 11815)
  Prédit: '[index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[index' → logprob: -5.5027299822540954e-05
    2. '[' → logprob: -9.875055313110352
    3. 'index' → logprob: -13.875055313110352
    4. '[in' → logprob: -14.500055313110352
    5. '[min' → logprob: -15.375055313110352
    6. '=' → logprob: -15.375055313110352
    7. '=index' → logprob: -15.375055313110352
    8. '[Index' → logprob: -15.500055313110352
    9. '```' → logprob: -15.625055313110352
    10. ' =' → logprob: -15.750055313110352

Token 105: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -6.313314952421933e-05
    2. ' ]' → logprob: -10.375062942504883
    3. ']+=' → logprob: -10.500062942504883
    4. '   ' → logprob: -13.000062942504883
    5. '+' → logprob: -14.375062942504883
    6. ')' → logprob: -14.875062942504883
    7. ']=' → logprob: -15.375062942504883
    8. '[' → logprob: -15.750062942504883
    9. '`]' → logprob: -15.875062942504883
    10. '']' → logprob: -16.125062942504883

Token 106: ' +=' (ID: 2757)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5126563906669617
    2. '+=' → logprob: -1.0126564502716064
    3. ' +=' → logprob: -3.3876564502716064
    4. ' =' → logprob: -5.512656211853027
    5. ']+=' → logprob: -11.137656211853027
    6. ' ' → logprob: -13.387656211853027
    7. ' |=' → logprob: -13.512656211853027
    8. ' ^=' → logprob: -14.137656211853027
    9. '+' → logprob: -14.262656211853027
    10. '   ' → logprob: -14.512656211853027

Token 107: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.9292415749514475e-05
    2. ' ' → logprob: -10.375039100646973
    3. '   ' → logprob: -11.750039100646973
    4. '  ' → logprob: -17.00004005432129
    5. '```' → logprob: -17.12504005432129
    6. '2' → logprob: -17.50004005432129
    7. '+' → logprob: -18.37504005432129
    8. '100' → logprob: -19.25004005432129
    9. '<|end|>' → logprob: -19.25004005432129
    10. '0' → logprob: -19.68754005432129

Token 108: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.537868779967539e-06
    2. ' ' → logprob: -11.750008583068848
    3. '   ' → logprob: -14.500008583068848
    4. '```' → logprob: -16.62500762939453
    5. '2' → logprob: -17.62500762939453
    6. '  ' → logprob: -18.25000762939453
    7. '<|end|>' → logprob: -18.75000762939453
    8. '+' → logprob: -19.37500762939453
    9. '`' → logprob: -19.75000762939453
    10. '100' → logprob: -19.87500762939453

Token 109: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.46866926550865173
    2. '<|end|>' → logprob: -1.2186692953109741
    3. 'def' → logprob: -3.4686691761016846
    4. '
' → logprob: -4.218669414520264
    5. '    
' → logprob: -4.843669414520264
    6. ')' → logprob: -5.093669414520264
    7. ' ' → logprob: -5.343669414520264
    8. '<|end|>' → logprob: -5.718669414520264
    9. '\' → logprob: -5.968669414520264
    10. '\n' → logprob: -6.218669414520264

Token 110: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6121954917907715
    2. '<|end|>' → logprob: -1.4871954917907715
    3. '   ' → logprob: -2.1121954917907715
    4. 'def' → logprob: -2.8621954917907715
    5. '    
' → logprob: -4.1121954917907715
    6. ')' → logprob: -4.6121954917907715
    7. '\n' → logprob: -4.6121954917907715
    8. '\' → logprob: -5.9871954917907715
    9. ' 
' → logprob: -6.1121954917907715
    10. ' ' → logprob: -6.2371954917907715

Token 111: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20058153569698334
    2. '<|end|>' → logprob: -2.7005815505981445
    3. 'return' (adapté à ' return') → logprob: -3.0755815505981445
    4. ' ' → logprob: -3.4505815505981445
    5. 'def' → logprob: -4.2005815505981445
    6. ')' → logprob: -4.9505815505981445
    7. ' return' → logprob: -5.2005815505981445
    8. '
' → logprob: -6.3255815505981445
    9. '    ' → logprob: -6.7005815505981445
    10. '  ' → logprob: -7.0755815505981445

Token 112: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.7612813711166382
    2. '<|end|>' → logprob: -1.0112813711166382
    3. ' ' → logprob: -2.3862814903259277
    4. ' row' → logprob: -3.1362814903259277
    5. ' None' → logprob: -4.636281490325928
    6. '(row' → logprob: -4.761281490325928
    7. '[row' → logprob: -4.886281490325928
    8. 'None' → logprob: -5.636281490325928
    9. '\n' → logprob: -6.886281490325928
    10. '<|end|>' → logprob: -7.011281490325928

Token 113: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.02730095200240612
    2. '<|end|>' → logprob: -3.7773008346557617
    3. '
' → logprob: -6.027300834655762
    4. '```' → logprob: -7.027300834655762
    5. '<|end|>' → logprob: -8.277300834655762
    6. ')' → logprob: -8.777300834655762
    7. '[' → logprob: -9.027300834655762
    8. '

' → logprob: -9.777300834655762
    9. ' def' → logprob: -10.527300834655762
    10. '\' → logprob: -10.777300834655762

Token 114: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.15097559988498688
    2. '<|end|>' → logprob: -2.1509757041931152
    3. '
' → logprob: -4.775975704193115
    4. ')' → logprob: -5.150975704193115
    5. '```' → logprob: -5.650975704193115
    6. '<|end|>' → logprob: -6.525975704193115
    7. ' def' → logprob: -7.025975704193115
    8. '[' → logprob: -7.150975704193115
    9. '#' → logprob: -7.150975704193115
    10. '\' → logprob: -7.275975704193115

Token 115: ' accumulate' (ID: 74226)
  Prédit: ' accumulate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' accumulate' → logprob: -0.6324626803398132
    2. ' main' → logprob: -1.382462739944458
    3. ' create' → logprob: -3.507462739944458
    4. 'acc' → logprob: -3.632462739944458
    5. ' prefix' → logprob: -3.632462739944458
    6. ' merge' → logprob: -3.632462739944458
    7. ' combine' → logprob: -3.882462739944458
    8. ' count' → logprob: -4.257462501525879
    9. ' calculate' → logprob: -4.632462501525879
    10. ' compute' → logprob: -5.007462501525879

Token 116: '_row' (ID: 19157)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8408012986183167
    2. '_' → logprob: -1.3408012390136719
    3. '(_' → logprob: -2.340801239013672
    4. '(row' → logprob: -2.590801239013672
    5. 'def' → logprob: -3.465801239013672
    6. '<|end|>' → logprob: -3.465801239013672
    7. '```' → logprob: -4.465801239013672
    8. '<|end|>' → logprob: -4.590801239013672
    9. '_row' → logprob: -4.715801239013672
    10. '('_' → logprob: -5.340801239013672

Token 117: '(row' (ID: 15945)
  Prédit: '(row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(row' → logprob: -0.0007547161658294499
    2. '(' → logprob: -7.2507548332214355
    3. ' (' → logprob: -10.500754356384277
    4. '(rows' → logprob: -11.375754356384277
    5. '(line' → logprob: -12.250754356384277
    6. '(column' → logprob: -15.500754356384277
    7. '(Row' → logprob: -15.625754356384277
    8. '(arr' → logprob: -16.125755310058594
    9. '(acc' → logprob: -17.250755310058594
    10. '(lst' → logprob: -17.250755310058594

Token 118: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00673491507768631
    2. '):
' → logprob: -5.131734848022461
    3. ')' → logprob: -7.256734848022461
    4. ',' → logprob: -9.881734848022461
    5. ' ):' → logprob: -10.256734848022461
    6. '):
' → logprob: -11.631734848022461
    7. '   ' → logprob: -13.256734848022461
    8. '):

' → logprob: -14.381734848022461
    9. ':' → logprob: -14.756734848022461
    10. ' ' → logprob: -14.881734848022461

Token 119: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15172596275806427
    2. ' return' → logprob: -2.276726007461548
    3. 'return' → logprob: -3.276726007461548
    4. ' list' → logprob: -8.151725769042969
    5. 'list' → logprob: -9.901725769042969
    6. 'acc' → logprob: -11.151725769042969
    7. '
' → logprob: -11.401725769042969
    8. ' for' → logprob: -11.901725769042969
    9. ' ' → logprob: -11.901725769042969
    10. 'def' → logprob: -12.276725769042969

Token 120: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.08721906691789627
    2. ' return' → logprob: -2.712218999862671
    3. 'list' → logprob: -4.21221923828125
    4. ' list' → logprob: -6.21221923828125
    5. '   ' → logprob: -8.71221923828125
    6. 'acc' → logprob: -9.21221923828125
    7. 'from' → logprob: -10.58721923828125
    8. ' ' → logprob: -12.08721923828125
    9. 'import' → logprob: -12.33721923828125
    10. '
' → logprob: -12.83721923828125

Token 121: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.005375102628022432
    2. ' list' → logprob: -5.255374908447266
    3. 'acc' → logprob: -8.880374908447266
    4. '(list' → logprob: -14.005374908447266
    5. '[list' → logprob: -14.880374908447266
    6. ' accumulate' → logprob: -15.005374908447266
    7. '[' → logprob: -15.130374908447266
    8. '	list' → logprob: -15.880374908447266
    9. 'ac' → logprob: -16.630374908447266
    10. '   ' → logprob: -17.005374908447266

Token 122: '(acc' (ID: 82668)
  Prédit: '(acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(acc' → logprob: -8.363617962459102e-05
    2. '(ac' → logprob: -9.625083923339844
    3. 'acc' → logprob: -11.375083923339844
    4. '(' → logprob: -12.375083923339844
    5. '(it' → logprob: -14.500083923339844
    6. '	acc' → logprob: -14.750083923339844
    7. '.acc' → logprob: -15.500083923339844
    8. '(t' → logprob: -15.750083923339844
    9. '_acc' → logprob: -16.000083923339844
    10. '(iter' → logprob: -16.625083923339844

Token 123: 'umulate' (ID: 134636)
  Prédit: 'umulate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umulate' → logprob: -2.927930654550437e-05
    2. 'um' → logprob: -10.750029563903809
    3. 'om' → logprob: -12.375029563903809
    4. 'umul' → logprob: -13.750029563903809
    5. 'ulate' → logprob: -14.375029563903809
    6. 'umulative' → logprob: -14.500029563903809
    7. 'eler' → logprob: -15.000029563903809
    8. 'umal' → logprob: -15.250029563903809
    9. 'umm' → logprob: -16.000028610229492
    10. 'cum' → logprob: -16.000028610229492

Token 124: '(row' (ID: 15945)
  Prédit: '(row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(row' → logprob: -8.97155623533763e-05
    2. '(' → logprob: -9.375089645385742
    3. ')' → logprob: -13.000089645385742
    4. ',row' → logprob: -13.375089645385742
    5. ')(' → logprob: -14.625089645385742
    6. ' (' → logprob: -15.750089645385742
    7. '(rows' → logprob: -15.875089645385742
    8. '(line' → logprob: -16.000089645385742
    9. 'row' → logprob: -16.375089645385742
    10. '(column' → logprob: -17.000089645385742

Token 125: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0005725711234845221
    2. '(row' → logprob: -7.875572681427002
    3. ',row' → logprob: -9.625572204589844
    4. '(' → logprob: -10.125572204589844
    5. ',' → logprob: -10.250572204589844
    6. '()))' → logprob: -10.875572204589844
    7. ' ))' → logprob: -10.875572204589844
    8. '))
' → logprob: -11.875572204589844
    9. ')' → logprob: -13.375572204589844
    10. ')))' → logprob: -13.500572204589844

Token 126: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01448067557066679
    2. '<|end|>' → logprob: -4.5144805908203125
    3. '
' → logprob: -6.0144805908203125
    4. '```' → logprob: -7.8894805908203125
    5. '<|end|>' → logprob: -8.264480590820312
    6. 'n' → logprob: -9.514480590820312
    7. ')' → logprob: -9.514480590820312
    8. '[' → logprob: -9.889480590820312
    9. '#' → logprob: -10.264480590820312
    10. '

' → logprob: -10.514480590820312

Token 127: ' reverse' (ID: 18199)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.7283567190170288
    2. 'main' → logprob: -0.7283567190170288
    3. 'parse' → logprob: -4.228356838226318
    4. ' parse' → logprob: -5.353356838226318
    5. 'process' → logprob: -5.478356838226318
    6. ' solve' → logprob: -5.978356838226318
    7. 'solve' → logprob: -5.978356838226318
    8. ' process' → logprob: -6.228356838226318
    9. 'merge' → logprob: -6.978356838226318
    10. 'combine' → logprob: -7.103356838226318

Token 128: '_list' (ID: 4162)
  Prédit: '_row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -0.04744378477334976
    2. '_' → logprob: -3.6724438667297363
    3. '(row' → logprob: -5.047443866729736
    4. '_line' → logprob: -5.297443866729736
    5. '_rows' → logprob: -5.922443866729736
    6. '(' → logprob: -6.922443866729736
    7. '_string' → logprob: -6.922443866729736
    8. '(_' → logprob: -7.172443866729736
    9. '_array' → logprob: -7.547443866729736
    10. '_list' → logprob: -7.672443866729736

Token 129: '(l' (ID: 4179)
  Prédit: '(lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lst' → logprob: -0.0810827910900116
    2. '(' → logprob: -2.956082820892334
    3. '(list' → logprob: -4.831082820892334
    4. '(l' → logprob: -5.081082820892334
    5. '(reverse' → logprob: -5.956082820892334
    6. '(ls' → logprob: -5.956082820892334
    7. '(s' → logprob: -6.706082820892334
    8. '(row' → logprob: -7.081082820892334
    9. '(line' → logprob: -7.081082820892334
    10. ' (' → logprob: -7.206082820892334

Token 130: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5988113284111023
    2. 'st' → logprob: -1.348811388015747
    3. '):
' → logprob: -1.973811388015747
    4. 'ist' → logprob: -2.973811388015747
    5. ')' → logprob: -7.223811149597168
    6. '):

' → logprob: -9.223811149597168
    7. '):
' → logprob: -10.348811149597168
    8. 't' → logprob: -10.723811149597168
    9. 'lst' → logprob: -10.973811149597168
    10. ':' → logprob: -11.473811149597168

Token 131: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6042470335960388
    2. '   ' → logprob: -0.8542470335960388
    3. ' return' → logprob: -3.6042470932006836
    4. 'l' → logprob: -7.354247093200684
    5. '[::-' → logprob: -11.104247093200684
    6. '```' → logprob: -11.104247093200684
    7. '	return' → logprob: -11.354247093200684
    8. ' l' → logprob: -11.729247093200684
    9. '[:]' → logprob: -12.354247093200684
    10. '    
' → logprob: -12.604247093200684

Token 132: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.06313049048185349
    2. 'l' → logprob: -2.8131303787231445
    3. ' return' → logprob: -6.8131303787231445
    4. 'list' → logprob: -9.938130378723145
    5. ' l' → logprob: -11.563130378723145
    6. '   ' → logprob: -13.063130378723145
    7. '```' → logprob: -13.563130378723145
    8. 're' → logprob: -14.813130378723145
    9. '[::-' → logprob: -14.813130378723145
    10. '	return' → logprob: -14.938130378723145

Token 133: ' list' (ID: 1562)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.05115373805165291
    2. ' l' → logprob: -3.0511536598205566
    3. 'list' → logprob: -6.051153659820557
    4. ' list' → logprob: -8.551154136657715
    5. '[::-' → logprob: -12.051154136657715
    6. '[l' → logprob: -12.426154136657715
    7. '[' → logprob: -12.926154136657715
    8. '	l' → logprob: -13.801154136657715
    9. 're' → logprob: -14.801154136657715
    10. 'lst' → logprob: -15.426154136657715

Token 134: '(re' (ID: 8178)
  Prédit: '(re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(re' → logprob: -0.00700046680867672
    2. '(l' → logprob: -5.00700044631958
    3. 're' → logprob: -8.507000923156738
    4. '[::-' → logprob: -9.882000923156738
    5. '(reverse' → logprob: -10.882000923156738
    6. 'l' → logprob: -11.632000923156738
    7. '(' → logprob: -13.132000923156738
    8. 'reverse' → logprob: -13.757000923156738
    9. ' reversed' → logprob: -14.507000923156738
    10. '```' → logprob: -15.257000923156738

Token 135: 'versed' (ID: 76479)
  Prédit: 'versed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'versed' → logprob: -0.00043233807082287967
    2. 'verse' → logprob: -7.75043249130249
    3. 'ver' → logprob: -13.875432014465332
    4. 'vers' → logprob: -15.625432014465332
    5. 'v' → logprob: -15.750432014465332
    6. 've' → logprob: -16.12543296813965
    7. 'verted' → logprob: -16.37543296813965
    8. 'verd' → logprob: -16.37543296813965
    9. 'ves' → logprob: -16.62543296813965
    10. 're' → logprob: -17.37543296813965

Token 136: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -6.635164754698053e-05
    2. '(' → logprob: -9.625066757202148
    3. '(s' → logprob: -16.50006675720215
    4. '(list' → logprob: -16.62506675720215
    5. ' (' → logprob: -17.00006675720215
    6. ')' → logprob: -17.62506675720215
    7. ')(' → logprob: -18.25006675720215
    8. 'l' → logprob: -18.37506675720215
    9. '(lst' → logprob: -18.62506675720215
    10. '(
' → logprob: -18.87506675720215

Token 137: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.001035787514410913
    2. ')' → logprob: -6.876035690307617
    3. '()))' → logprob: -13.376035690307617
    4. ')))' → logprob: -14.001035690307617
    5. '))
' → logprob: -15.501035690307617
    6. ' ))' → logprob: -16.626035690307617
    7. '])' → logprob: -17.126035690307617
    8. ')}' → logprob: -17.376035690307617
    9. '),' → logprob: -17.376035690307617
    10. '[' → logprob: -17.501035690307617

Token 138: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0004509301797952503
    2. 'class' → logprob: -8.25045108795166
    3. '#' → logprob: -9.50045108795166
    4. 'n' → logprob: -10.12545108795166
    5. 'from' → logprob: -11.12545108795166
    6. 'for' → logprob: -11.37545108795166
    7. '```' → logprob: -11.87545108795166
    8. 'import' → logprob: -12.00045108795166
    9. ')' → logprob: -12.25045108795166
    10. 'if' → logprob: -12.37545108795166

Token 139: ' process' (ID: 2273)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.5807623267173767
    2. ' main' → logprob: -0.8307623267173767
    3. 'solve' → logprob: -7.0807623863220215
    4. 'process' → logprob: -7.2057623863220215
    5. ' solve' → logprob: -7.7057623863220215
    6. 'merge' → logprob: -7.9557623863220215
    7. 'combine' → logprob: -8.205761909484863
    8. 'calculate' → logprob: -8.205761909484863
    9. 'parse' → logprob: -8.330761909484863
    10. ' process' → logprob: -8.580761909484863

Token 140: '_x' (ID: 7054)
  Prédit: '_input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.3002210855484009
    2. '(n' → logprob: -2.5502209663391113
    3. '_' → logprob: -2.6752209663391113
    4. '(' → logprob: -2.6752209663391113
    5. '_data' → logprob: -4.800220966339111
    6. '_inputs' → logprob: -4.800220966339111
    7. '_list' → logprob: -5.300220966339111
    8. '_(' → logprob: -5.675220966339111
    9. '_row' → logprob: -6.050220966339111
    10. '(input' → logprob: -6.300220966339111

Token 141: '_entry' (ID: 20857)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.9121207594871521
    2. '(n' → logprob: -1.1621208190917969
    3. '()' → logprob: -2.537120819091797
    4. '(' → logprob: -2.662120819091797
    5. 'or' → logprob: -3.787120819091797
    6. '_' → logprob: -3.912120819091797
    7. 's' → logprob: -4.037120819091797
    8. '(x' → logprob: -4.787120819091797
    9. 'y' → logprob: -5.037120819091797
    10. 'def' → logprob: -5.412120819091797

Token 142: '(row' (ID: 15945)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.27109917998313904
    2. '(row' → logprob: -2.021099090576172
    3. '(' → logprob: -3.021099090576172
    4. '(n' → logprob: -3.646099090576172
    5. '(entry' → logprob: -4.771099090576172
    6. '(s' → logprob: -4.896099090576172
    7. '(line' → logprob: -5.646099090576172
    8. '(a' → logprob: -5.771099090576172
    9. '(l' → logprob: -7.021099090576172
    10. '(i' → logprob: -7.146099090576172

Token 143: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003532198315951973
    2. ' ,' → logprob: -8.87535285949707
    3. '[' → logprob: -9.87535285949707
    4. '   ' → logprob: -10.00035285949707
    5. ',index' → logprob: -10.25035285949707
    6. ',row' → logprob: -10.37535285949707
    7. 's' → logprob: -11.37535285949707
    8. ',x' → logprob: -12.00035285949707
    9. ',n' → logprob: -12.25035285949707
    10. '[],' → logprob: -12.37535285949707

Token 144: ' x' (ID: 1215)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -1.6874340772628784
    2. 'x' → logprob: -1.8124340772628784
    3. 'idx' → logprob: -2.437434196472168
    4. 'acc' → logprob: -2.562434196472168
    5. 'rev' → logprob: -2.687434196472168
    6. 'i' → logprob: -2.687434196472168
    7. ' index' → logprob: -2.812434196472168
    8. ' idx' → logprob: -3.062434196472168
    9. 'entry' → logprob: -3.562434196472168
    10. ' x' → logprob: -3.687434196472168

Token 145: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.36805641651153564
    2. '):' → logprob: -1.2430564165115356
    3. '[' → logprob: -5.118056297302246
    4. '_,' → logprob: -6.118056297302246
    5. '_index' → logprob: -6.118056297302246
    6. '_idx' → logprob: -6.368056297302246
    7. ',index' → logprob: -6.993056297302246
    8. 'index' → logprob: -7.118056297302246
    9. '_' → logprob: -7.243056297302246
    10. ')' → logprob: -7.493056297302246

Token 146: ' n' (ID: 297)
  Prédit: ' rev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rev' → logprob: -1.8035128116607666
    2. 'rev' → logprob: -2.3035128116607666
    3. ' y' → logprob: -2.5535128116607666
    4. ' acc' → logprob: -2.8035128116607666
    5. 'y' → logprob: -3.0535128116607666
    6. ' idx' → logprob: -3.1785128116607666
    7. ' n' → logprob: -3.3035128116607666
    8. ' index' → logprob: -3.4285128116607666
    9. 'i' → logprob: -3.4285128116607666
    10. ' i' → logprob: -3.4285128116607666

Token 147: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.3043493926525116
    2. '):' → logprob: -1.429349422454834
    3. ',' → logprob: -4.929349422454834
    4. '-' → logprob: -5.179349422454834
    5. '_' → logprob: -5.179349422454834
    6. ')' → logprob: -6.929349422454834
    7. 'x' → logprob: -7.179349422454834
    8. '*' → logprob: -7.929349422454834
    9. '):
' → logprob: -8.179348945617676
    10. '//' → logprob: -8.304348945617676

Token 148: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03328843042254448
    2. ',' → logprob: -3.5332884788513184
    3. '):
' → logprob: -5.783288478851318
    4. ')' → logprob: -7.908288478851318
    5. ' ):' → logprob: -10.15828800201416
    6. '-' → logprob: -11.28328800201416
    7. ':' → logprob: -12.15828800201416
    8. '):
' → logprob: -12.15828800201416
    9. '):

' → logprob: -12.28328800201416
    10. '   ' → logprob: -13.03328800201416

Token 149: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35802748799324036
    2. ' if' → logprob: -1.233027458190918
    3. 'if' → logprob: -4.858027458190918
    4. ' return' → logprob: -7.108027458190918
    5. ' for' → logprob: -8.233027458190918
    6. '    
' → logprob: -8.358027458190918
    7. ' 
' → logprob: -8.983027458190918
    8. '    ' → logprob: -8.983027458190918
    9. ' ' → logprob: -10.233027458190918
    10. '[' → logprob: -10.858027458190918

Token 150: ' index' (ID: 3472)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2194998413324356
    2. ' if' → logprob: -2.0944998264312744
    3. '   ' → logprob: -3.5944998264312744
    4. 'row' → logprob: -3.9694998264312744
    5. 'for' → logprob: -4.3445000648498535
    6. ' row' → logprob: -5.2195000648498535
    7. ' for' → logprob: -5.7195000648498535
    8. 'result' → logprob: -6.9695000648498535
    9. 'return' → logprob: -7.0945000648498535
    10. ' res' → logprob: -7.0945000648498535

Token 151: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20173998177051544
    2. '=' → logprob: -1.701740026473999
    3. ',' → logprob: -8.951740264892578
    4. '+' → logprob: -9.826740264892578
    5. '   ' → logprob: -10.201740264892578
    6. ' ' → logprob: -10.576740264892578
    7. ')' → logprob: -10.826740264892578
    8. ' +' → logprob: -11.326740264892578
    9. '=row' → logprob: -11.451740264892578
    10. ' +=' → logprob: -12.076740264892578

Token 152: ' n' (ID: 297)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.10078001022338867
    2. 'row' → logprob: -3.2257800102233887
    3. ' x' → logprob: -3.2257800102233887
    4. 'n' → logprob: -5.225780010223389
    5. '(x' → logprob: -5.600780010223389
    6. 'len' → logprob: -5.975780010223389
    7. '0' → logprob: -6.975780010223389
    8. 'acc' → logprob: -7.475780010223389
    9. ' row' → logprob: -7.600780010223389
    10. ' n' → logprob: -7.725780010223389

Token 153: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.001239156350493431
    2. 'x' → logprob: -7.12623929977417
    3. '-' → logprob: -8.876238822937012
    4. ' ' → logprob: -9.501238822937012
    5. '[' → logprob: -10.126238822937012
    6. '<|end|>' → logprob: -10.501238822937012
    7. '<|end|>' → logprob: -10.626238822937012
    8. 'index' → logprob: -11.251238822937012
    9. '*' → logprob: -11.376238822937012
    10. '_' → logprob: -11.626238822937012

Token 154: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6338975429534912
    2. ' -' → logprob: -0.7588975429534912
    3. ' ' → logprob: -7.63389778137207
    4. 'x' → logprob: -8.50889778137207
    5. '[' → logprob: -9.00889778137207
    6. 'def' → logprob: -9.25889778137207
    7. ' x' → logprob: -9.88389778137207
    8. '1' → logprob: -10.13389778137207
    9. '   ' → logprob: -10.25889778137207
    10. '//' → logprob: -10.50889778137207

Token 155: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.435049831867218
    2. '1' → logprob: -1.0600497722625732
    3. ' x' → logprob: -5.310050010681152
    4. ' ' → logprob: -7.185050010681152
    5. 'row' → logprob: -8.060050010681152
    6. '   ' → logprob: -9.560050010681152
    7. 'len' → logprob: -9.810050010681152
    8. '2' → logprob: -9.810050010681152
    9. '(x' → logprob: -10.060050010681152
    10. '(' → logprob: -10.810050010681152

Token 156: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.08119677752256393
    2. ' -' → logprob: -2.5811967849731445
    3. '<|end|>' → logprob: -6.2061967849731445
    4. '<|end|>' → logprob: -9.331196784973145
    5. ')' → logprob: -9.706196784973145
    6. '[' → logprob: -10.081196784973145
    7. ' ' → logprob: -10.206196784973145
    8. '1' → logprob: -10.706196784973145
    9. ']' → logprob: -11.831196784973145
    10. 'def' → logprob: -11.831196784973145

Token 157: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008662028703838587
    2. '2' → logprob: -7.750866413116455
    3. ' ' → logprob: -7.750866413116455
    4. '   ' → logprob: -12.375865936279297
    5. '  ' → logprob: -15.625865936279297
    6. '<|end|>' → logprob: -16.063365936279297
    7. '...' → logprob: -16.188365936279297
    8. '
' → logprob: -16.250865936279297
    9. '[' → logprob: -16.313365936279297
    10. 'def' → logprob: -16.938365936279297

Token 158: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00019221604452468455
    2. '2' → logprob: -9.000192642211914
    3. ' ' → logprob: -9.625192642211914
    4. '   ' → logprob: -13.250192642211914
    5. '  ' → logprob: -16.062692642211914
    6. '
' → logprob: -16.250192642211914
    7. '...' → logprob: -16.375192642211914
    8. '```' → logprob: -16.375192642211914
    9. '[' → logprob: -16.937692642211914
    10. '       ' → logprob: -17.250192642211914

Token 159: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 160: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2639334201812744
    2. '<|end|>' → logprob: -2.0139334201812744
    3. ')' → logprob: -2.5139334201812744
    4. '
' → logprob: -5.263933181762695
    5. ' ' → logprob: -5.638933181762695
    6. ']' → logprob: -6.513933181762695
    7. '    
' → logprob: -7.138933181762695
    8. ' if' → logprob: -7.263933181762695
    9. '<|end|>' → logprob: -7.263933181762695
    10. '[row' → logprob: -7.388933181762695

Token 161: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' (adapté à ' row') → logprob: -0.23954634368419647
    2. 'return' → logprob: -1.989546298980713
    3. 'if' → logprob: -3.114546298980713
    4. '   ' → logprob: -4.114546298980713
    5. ' row' → logprob: -4.614546298980713
    6. ' return' → logprob: -5.739546298980713
    7. ' if' → logprob: -6.739546298980713
    8. 'for' → logprob: -8.489546775817871
    9. 'count' → logprob: -8.614546775817871
    10. 'value' → logprob: -8.739546775817871

Token 162: ' =' (ID: 314)
  Prédit: '[index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[index' → logprob: -0.00010485442908247933
    2. '[' → logprob: -10.125104904174805
    3. ' =' → logprob: -10.750104904174805
    4. '=' → logprob: -10.875104904174805
    5. 'index' → logprob: -11.250104904174805
    6. '=index' → logprob: -12.500104904174805
    7. ',' → logprob: -13.500104904174805
    8. ',index' → logprob: -13.625104904174805
    9. '[ind' → logprob: -13.750104904174805
    10. '[Index' → logprob: -13.750104904174805

Token 163: ' update' (ID: 4027)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'update' → logprob: -0.0017437237547710538
    2. ' update' → logprob: -6.376743793487549
    3. 'reverse' → logprob: -10.50174331665039
    4. 'row' → logprob: -11.25174331665039
    5. '	update' → logprob: -15.12674331665039
    6. '[' → logprob: -15.37674331665039
    7. 'list' → logprob: -16.00174331665039
    8. ' reverse' → logprob: -16.50174331665039
    9. 'index' → logprob: -16.62674331665039
    10. 'increment' → logprob: -16.87674331665039

Token 164: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -0.00091217877343297
    2. '(row' → logprob: -7.500912189483643
    3. '_' → logprob: -8.125911712646484
    4. 'row' → logprob: -9.750911712646484
    5. '(' → logprob: -13.625911712646484
    6. '_token' → logprob: -13.875911712646484
    7. ' row' → logprob: -14.375911712646484
    8. '[row' → logprob: -14.375911712646484
    9. '_line' → logprob: -15.125911712646484
    10. ' _' → logprob: -15.125911712646484

Token 165: '(row' (ID: 15945)
  Prédit: '(row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(row' → logprob: -0.000158842682139948
    2. '(' → logprob: -8.75015926361084
    3. '(line' → logprob: -16.500158309936523
    4. '(
' → logprob: -16.500158309936523
    5. '(rows' → logprob: -17.375158309936523
    6. ',row' → logprob: -17.750158309936523
    7. '(column' → logprob: -18.750158309936523
    8. '=row' → logprob: -19.000158309936523
    9. ' row' → logprob: -19.125158309936523
    10. ' (' → logprob: -19.625158309936523

Token 166: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0017269416712224483
    2. ',index' → logprob: -6.376727104187012
    3. ' ,' → logprob: -11.376727104187012
    4. 'index' → logprob: -11.376727104187012
    5. '(index' → logprob: -14.251727104187012
    6. ' index' → logprob: -14.251727104187012
    7. '[index' → logprob: -14.876727104187012
    8. ',row' → logprob: -16.626726150512695
    9. '=index' → logprob: -16.626726150512695
    10. '#index' → logprob: -17.501726150512695

Token 167: ' index' (ID: 3472)
  Prédit: ' index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' index' → logprob: -0.10020806640386581
    2. 'index' → logprob: -2.350208044052124
    3. '(index' → logprob: -14.850208282470703
    4. ' ' → logprob: -14.975208282470703
    5. ')' → logprob: -15.475208282470703
    6. '[index' → logprob: -15.475208282470703
    7. '	index' → logprob: -15.725208282470703
    8. 'x' → logprob: -16.600208282470703
    9. '#index' → logprob: -16.975208282470703
    10. '=index' → logprob: -17.225208282470703

Token 168: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00043674863991327584
    2. ')
' → logprob: -7.750436782836914
    3. ' )' → logprob: -12.750436782836914
    4. '   ' → logprob: -13.000436782836914
    5. ')return' → logprob: -14.375436782836914
    6. ')

' → logprob: -15.500436782836914
    7. ' ' → logprob: -16.875436782836914
    8. ')
' → logprob: -17.500436782836914
    9. ')#' → logprob: -17.875436782836914
    10. ' )
' → logprob: -18.000436782836914

Token 169: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 170: ' acc' (ID: 1259)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.29147136211395264
    2. ' return' → logprob: -1.4164713621139526
    3. '   ' → logprob: -4.916471481323242
    4. '<|end|>' → logprob: -6.041471481323242
    5. 'x' → logprob: -8.416471481323242
    6. 'def' → logprob: -9.041471481323242
    7. '	return' → logprob: -9.916471481323242
    8. 'row' → logprob: -10.541471481323242
    9. 'n' → logprob: -10.791471481323242
    10. ' x' → logprob: -10.916471481323242

Token 171: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -0.33497723937034607
    2. 'um' → logprob: -2.084977149963379
    3. 'row' → logprob: -2.834977149963379
    4. 'ulated' → logprob: -3.459977149963379
    5. 'umulator' → logprob: -3.959977149963379
    6. '=' → logprob: -3.959977149963379
    7. 'umulate' → logprob: -4.084977149963379
    8. 'umul' → logprob: -4.959977149963379
    9. 'uated' → logprob: -5.959977149963379
    10. ' =' → logprob: -5.959977149963379

Token 172: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10075435042381287
    2. '=' → logprob: -2.3507542610168457
    3. ',' → logprob: -7.975754261016846
    4. ')' → logprob: -9.600754737854004
    5. '   ' → logprob: -10.100754737854004
    6. '[:]' → logprob: -10.600754737854004
    7. 's' → logprob: -11.475754737854004
    8. '=row' → logprob: -11.475754737854004
    9. '  ' → logprob: -11.725754737854004
    10. '(' → logprob: -11.975754737854004

Token 173: ' reverse' (ID: 18199)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.38691821694374084
    2. ' accumulate' → logprob: -1.1369181871414185
    3. 'ac' → logprob: -11.136918067932129
    4. ' acc' → logprob: -11.511918067932129
    5. ' ' → logprob: -11.886918067932129
    6. '	acc' → logprob: -12.011918067932129
    7. '   ' → logprob: -13.011918067932129
    8. ' accum' → logprob: -13.136918067932129
    9. '(acc' → logprob: -13.511918067932129
    10. '  ' → logprob: -14.511918067932129

Token 174: '_list' (ID: 4162)
  Prédit: 'umulate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umulate' → logprob: -0.024984871968626976
    2. '_list' → logprob: -4.149984836578369
    3. 'ulate' → logprob: -5.024984836578369
    4. 'um' → logprob: -7.149984836578369
    5. 'uate' → logprob: -7.649984836578369
    6. 'ate' → logprob: -8.649985313415527
    7. 'ute' → logprob: -8.774985313415527
    8. '_row' → logprob: -9.149985313415527
    9. 'culate' → logprob: -9.149985313415527
    10. 'utate' → logprob: -9.274985313415527

Token 175: '(acc' (ID: 82668)
  Prédit: '(acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(acc' → logprob: -0.0016587553545832634
    2. '(row' → logprob: -6.501658916473389
    3. 'acc' → logprob: -9.37665843963623
    4. '(update' → logprob: -10.12665843963623
    5. 'row' → logprob: -11.12665843963623
    6. '(' → logprob: -11.62665843963623
    7. '(ac' → logprob: -11.87665843963623
    8. ' (' → logprob: -15.25165843963623
    9. '(reverse' → logprob: -15.37665843963623
    10. '((' → logprob: -16.126659393310547

Token 176: 'umulate' (ID: 134636)
  Prédit: 'umulate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umulate' → logprob: -0.0004985823179595172
    2. 'ulate' → logprob: -8.25049877166748
    3. '_row' → logprob: -8.87549877166748
    4. 'um' → logprob: -9.37549877166748
    5. 'umul' → logprob: -12.12549877166748
    6. 'om' → logprob: -13.12549877166748
    7. 'ul' → logprob: -13.87549877166748
    8. 'row' → logprob: -14.12549877166748
    9. '[' → logprob: -14.25049877166748
    10. '
' → logprob: -14.75049877166748

Token 177: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -0.14964532852172852
    2. '(row' → logprob: -2.0246453285217285
    3. 'row' → logprob: -5.3996453285217285
    4. '(acc' → logprob: -6.2746453285217285
    5. '(' → logprob: -8.64964485168457
    6. '(_' → logprob: -8.89964485168457
    7. '(update' → logprob: -9.39964485168457
    8. 'acc' → logprob: -10.27464485168457
    9. '_list' → logprob: -11.27464485168457
    10. ' row' → logprob: -11.27464485168457

Token 178: '(row' (ID: 15945)
  Prédit: '(row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(row' → logprob: -8.061054359131958e-06
    2. '(' → logprob: -12.375007629394531
    3. 'row' → logprob: -13.250007629394531
    4. ' (' → logprob: -13.625007629394531
    5. ' row' → logprob: -15.125007629394531
    6. ')' → logprob: -15.375007629394531
    7. ',row' → logprob: -15.750007629394531
    8. ')(' → logprob: -17.12500762939453
    9. '(
' → logprob: -17.25000762939453
    10. '(rows' → logprob: -17.62500762939453

Token 179: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.1603696495294571
    2. ')' → logprob: -1.910369634628296
    3. ')))' → logprob: -8.910369873046875
    4. '),' → logprob: -12.785369873046875
    5. '))
' → logprob: -12.785369873046875
    6. ')
' → logprob: -13.035369873046875
    7. '))))' → logprob: -14.285369873046875
    8. '   ' → logprob: -14.535369873046875
    9. ' ))' → logprob: -14.535369873046875
    10. ' )' → logprob: -15.785369873046875

Token 180: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.028640413656830788
    2. '<|end|>' → logprob: -3.6536405086517334
    3. ' return' → logprob: -6.778640270233154
    4. '    ' → logprob: -7.903640270233154
    5. ')' → logprob: -8.028640747070312
    6. '	return' → logprob: -8.903640747070312
    7. '<|end|>' → logprob: -9.278640747070312
    8. 'return' → logprob: -9.528640747070312
    9. ' ' → logprob: -9.903640747070312
    10. '       ' → logprob: -10.903640747070312

Token 181: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16732840240001678
    2. ' return' → logprob: -1.9173283576965332
    3. 'return' (adapté à ' return') → logprob: -5.167328357696533
    4. '<|end|>' → logprob: -7.042328357696533
    5. '	return' → logprob: -8.542328834533691
    6. ',' → logprob: -9.917328834533691
    7. ')' → logprob: -10.042328834533691
    8. ' ' → logprob: -10.042328834533691
    9. '    ' → logprob: -10.167328834533691
    10. ' acc' → logprob: -10.542328834533691

Token 182: ' row' (ID: 5225)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.14504265785217285
    2. ' acc' → logprob: -2.020042657852173
    3. 'row' → logprob: -6.145042419433594
    4. '(acc' → logprob: -9.520042419433594
    5. ' row' → logprob: -9.645042419433594
    6. 'index' → logprob: -10.145042419433594
    7. 'x' → logprob: -10.770042419433594
    8. 'ac' → logprob: -12.145042419433594
    9. '   ' → logprob: -12.520042419433594
    10. ' x' → logprob: -12.770042419433594

Token 183: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 184: ' acc' (ID: 1259)
  Prédit: ' acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' acc' → logprob: -0.47408199310302734
    2. 'acc' → logprob: -0.9740819931030273
    3. 'index' → logprob: -13.349081993103027
    4. '(acc' → logprob: -13.974081993103027
    5. 'x' → logprob: -14.099081993103027
    6. ' ' → logprob: -14.849081993103027
    7. '	acc' → logprob: -15.099081993103027
    8. 'ac' → logprob: -15.349081993103027
    9. '[' → logprob: -15.474081993103027
    10. 'row' → logprob: -15.974081993103027

Token 185: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -1.3663626305060461e-05
    2. 'row' → logprob: -11.25001335144043
    3. '_rows' → logprob: -15.62501335144043
    4. 'Row' → logprob: -15.87501335144043
    5. '_ROW' → logprob: -16.25001335144043
    6. '_Row' → logprob: -16.50001335144043
    7. '<Row' → logprob: -17.50001335144043
    8. '-row' → logprob: -17.62501335144043
    9. '$row' → logprob: -17.62501335144043
    10. 'r' → logprob: -18.37501335144043

Token 186: '

' (ID: 279)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1171962022781372
    2. '<|end|>' → logprob: -1.6171962022781372
    3. ':' → logprob: -2.2421960830688477
    4. 'def' → logprob: -2.3671960830688477
    5. ',' → logprob: -2.4921960830688477
    6. '[' → logprob: -2.7421960830688477
    7. 'n' → logprob: -3.2421960830688477
    8. '
' → logprob: -4.117196083068848
    9. ' ' → logprob: -4.367196083068848
    10. '#' → logprob: -4.617196083068848

Token 187: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.974653422832489
    2. '[' → logprob: -1.8496534824371338
    3. ')' → logprob: -2.099653482437134
    4. ':' → logprob: -2.599653482437134
    5. 'n' → logprob: -2.849653482437134
    6. '#' → logprob: -2.974653482437134
    7. 'x' → logprob: -3.474653482437134
    8. ',' → logprob: -3.599653482437134
    9. ' ' → logprob: -3.974653482437134
    10. '<|end|>' → logprob: -4.349653244018555

Token 188: ' existence' (ID: 24140)
  Prédit: ' process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' process' → logprob: -0.9031632542610168
    2. 'process' → logprob: -1.153163194656372
    3. ' main' → logprob: -1.653163194656372
    4. 'main' → logprob: -2.778163194656372
    5. ' solve' → logprob: -5.278163433074951
    6. 'solve' → logprob: -6.028163433074951
    7. 'combine' → logprob: -6.278163433074951
    8. 'parse' → logprob: -6.403163433074951
    9. 'merge' → logprob: -6.528163433074951
    10. ' accumulate' → logprob: -6.528163433074951

Token 189: '_right' (ID: 24402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20483505725860596
    2. '_' → logprob: -2.0798349380493164
    3. '(x' → logprob: -3.9548349380493164
    4. '_check' → logprob: -4.704834938049316
    5. '(_' → logprob: -4.829834938049316
    6. '_(' → logprob: -4.954834938049316
    7. '_of' → logprob: -5.454834938049316
    8. '(row' → logprob: -5.704834938049316
    9. ' (' → logprob: -6.954834938049316
    10. '_at' → logprob: -7.204834938049316

Token 190: '_single' (ID: 46053)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.19668534398078918
    2. '(row' → logprob: -2.446685314178467
    3. '(x' → logprob: -3.071685314178467
    4. '():' → logprob: -4.071685314178467
    5. '(_' → logprob: -4.821685314178467
    6. '(n' → logprob: -5.696685314178467
    7. '(line' → logprob: -5.946685314178467
    8. '_' → logprob: -6.196685314178467
    9. '(s' → logprob: -6.571685314178467
    10. '_right' → logprob: -6.821685314178467

Token 191: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9857267737388611
    2. '(x' → logprob: -0.9857267737388611
    3. '():' → logprob: -2.610726833343506
    4. '(n' → logprob: -3.485726833343506
    5. '(i' → logprob: -3.610726833343506
    6. '(row' → logprob: -3.985726833343506
    7. '(index' → logprob: -4.360726833343506
    8. '_x' → logprob: -4.735726833343506
    9. '(_' → logprob: -5.110726833343506
    10. '_' → logprob: -5.360726833343506

Token 192: ',' (ID: 11)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5336560606956482
    2. ',' → logprob: -1.408656120300293
    3. '):' → logprob: -1.908656120300293
    4. '):
' → logprob: -4.408656120300293
    5. ' ,' → logprob: -6.158656120300293
    6. ')' → logprob: -6.158656120300293
    7. 'def' → logprob: -7.533656120300293
    8. 'x' → logprob: -7.783656120300293
    9. ' ):' → logprob: -8.158656120300293
    10. '):

' → logprob: -8.283656120300293

Token 193: ' rev' (ID: 10808)
  Prédit: 'rev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rev' → logprob: -0.34058767557144165
    2. 'x' → logprob: -2.715587615966797
    3. ' rev' → logprob: -2.965587615966797
    4. 'row' → logprob: -3.465587615966797
    5. 'i' → logprob: -3.590587615966797
    6. 'k' → logprob: -4.340587615966797
    7. ' x' → logprob: -4.465587615966797
    8. 'm' → logprob: -4.840587615966797
    9. 'l' → logprob: -4.903087615966797
    10. 'n' → logprob: -5.090587615966797

Token 194: '_c' (ID: 1303)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.36349138617515564
    2. '[' → logprob: -1.613491415977478
    3. ',' → logprob: -2.3634912967681885
    4. '):
' → logprob: -5.238491535186768
    5. ')' → logprob: -5.613491535186768
    6. '):

' → logprob: -7.863491535186768
    7. 's' → logprob: -7.863491535186768
    8. '[]):' → logprob: -8.73849105834961
    9. '2' → logprob: -8.86349105834961
    10. '(' → logprob: -8.98849105834961

Token 195: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0540587455034256
    2. ',' → logprob: -4.05405855178833
    3. '[' → logprob: -4.05405855178833
    4. '):
' → logprob: -4.55405855178833
    5. 'h' → logprob: -5.80405855178833
    6. ')' → logprob: -7.55405855178833
    7. 'ont' → logprob: -7.67905855178833
    8. 'ount' → logprob: -7.80405855178833
    9. 'olor' → logprob: -7.92905855178833
    10. '):
' → logprob: -8.179059028625488

Token 196: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0053472439758479595
    2. 'def' → logprob: -6.00534725189209
    3. ':' → logprob: -6.88034725189209
    4. ' for' → logprob: -7.75534725189209
    5. 'n' → logprob: -8.13034725189209
    6. '):
' → logprob: -8.75534725189209
    7. ':
' → logprob: -9.25534725189209
    8. ' def' → logprob: -9.25534725189209
    9. '(n' → logprob: -9.38034725189209
    10. ' n' → logprob: -9.38034725189209

Token 197: ' n' (ID: 297)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -1.061567783355713
    2. '   ' → logprob: -1.936567783355713
    3. ' row' → logprob: -2.311567783355713
    4. 'res' → logprob: -2.436567783355713
    5. 'right' → logprob: -2.686567783355713
    6. ' res' → logprob: -2.686567783355713
    7. 'n' (adapté à ' n') → logprob: -3.561567783355713
    8. 'def' → logprob: -4.061567783355713
    9. ' n' → logprob: -4.311567783355713
    10. 'result' → logprob: -4.436567783355713

Token 198: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.624435305595398
    2. '*' → logprob: -1.499435305595398
    3. ',' → logprob: -2.1244354248046875
    4. ' *' → logprob: -2.3744354248046875
    5. 'def' → logprob: -4.3744354248046875
    6. ' ' → logprob: -5.8744354248046875
    7. ')' → logprob: -5.8744354248046875
    8. ' =' → logprob: -6.2494354248046875
    9. 'x' → logprob: -6.4994354248046875
    10. '_' → logprob: -7.1244354248046875

Token 199: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6327403783798218
    2. '=' → logprob: -0.7577403783798218
    3. ',' → logprob: -9.257740020751953
    4. '*' → logprob: -10.632740020751953
    5. '=n' → logprob: -12.507740020751953
    6. ' *=' → logprob: -12.757740020751953
    7. '*=' → logprob: -12.757740020751953
    8. ')' → logprob: -12.757740020751953
    9. 'n' → logprob: -13.132740020751953
    10. ' *' → logprob: -13.507740020751953

Token 200: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.10921679437160492
    2. '2' → logprob: -2.3592166900634766
    3. ' n' → logprob: -4.859216690063477
    4. ' ' → logprob: -6.859216690063477
    5. 'len' → logprob: -9.234216690063477
    6. '   ' → logprob: -10.109216690063477
    7. ' len' → logprob: -12.359216690063477
    8. '  ' → logprob: -12.609216690063477
    9. '	n' → logprob: -12.609216690063477
    10. '(n' → logprob: -13.234216690063477

Token 201: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.38698992133140564
    2. ' *' → logprob: -1.136989951133728
    3. 'def' → logprob: -9.76198959350586
    4. '2' → logprob: -9.88698959350586
    5. ' ' → logprob: -12.13698959350586
    6. '   ' → logprob: -13.51198959350586
    7. '[' → logprob: -14.26198959350586
    8. ' def' → logprob: -14.26198959350586
    9. '**' → logprob: -14.38698959350586
    10. '0' → logprob: -15.01198959350586

Token 202: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0025085974484682083
    2. ' ' → logprob: -6.002508640289307
    3. 'n' → logprob: -11.127508163452148
    4. '3' → logprob: -12.252508163452148
    5. '4' → logprob: -12.252508163452148
    6. '   ' → logprob: -12.877508163452148
    7. '  ' → logprob: -13.252508163452148
    8. ' n' → logprob: -13.752508163452148
    9. '1' → logprob: -14.065008163452148
    10. '(' → logprob: -15.190008163452148

Token 203: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.620622712536715e-05
    2. ' ' → logprob: -10.125045776367188
    3. '3' → logprob: -13.125045776367188
    4. '4' → logprob: -13.375045776367188
    5. 'n' → logprob: -13.875045776367188
    6. '1' → logprob: -14.312545776367188
    7. '  ' → logprob: -15.812545776367188
    8. '22' → logprob: -15.937545776367188
    9. '   ' → logprob: -15.937545776367188
    10. '(' → logprob: -16.375045776367188

Token 204: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0039230952970683575
    2. ' 
' → logprob: -6.878922939300537
    3. '    
' → logprob: -7.128922939300537
    4. '   ' → logprob: -7.253922939300537
    5. '
' → logprob: -7.503922939300537
    6. '  
' → logprob: -8.253923416137695
    7. ',' → logprob: -8.878923416137695
    8. 'def' → logprob: -9.128923416137695
    9. '   
' → logprob: -9.503923416137695
    10. '<|end|>' → logprob: -9.503923416137695

Token 205: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05943478271365166
    2. 'row' → logprob: -3.3094348907470703
    3. 'r' → logprob: -5.93443489074707
    4. 'right' → logprob: -6.05943489074707
    5. 'rev' → logprob: -6.43443489074707
    6. 'acc' → logprob: -6.68443489074707
    7. ' row' → logprob: -6.68443489074707
    8. 'for' → logprob: -6.68443489074707
    9. 'c' → logprob: -6.80943489074707
    10. 'dp' → logprob: -6.93443489074707

Token 206: ' acc' (ID: 1259)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.09124194085597992
    2. 'rev' → logprob: -4.591241836547852
    3. 'acc' (adapté à ' acc') → logprob: -4.716241836547852
    4. 'right' → logprob: -4.966241836547852
    5. 'r' → logprob: -5.341241836547852
    6. 'left' → logprob: -5.716241836547852
    7. 'l' → logprob: -5.841241836547852
    8. 'cnt' → logprob: -5.841241836547852
    9. 'exist' → logprob: -5.966241836547852
    10. 'res' → logprob: -5.966241836547852

Token 207: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.028454303741455
    2. ' =' → logprob: -1.028454303741455
    3. '_row' → logprob: -1.778454303741455
    4. 'um' → logprob: -3.653454303741455
    5. 'row' → logprob: -3.653454303741455
    6. '_rows' → logprob: -4.278454303741455
    7. '_r' → logprob: -4.403454303741455
    8. '_c' → logprob: -4.403454303741455
    9. 'umulator' → logprob: -5.403454303741455
    10. 'rows' → logprob: -5.403454303741455

Token 208: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5742747187614441
    2. ' [' → logprob: -1.8242747783660889
    3. 'create' → logprob: -1.9492747783660889
    4. ' create' → logprob: -2.199274778366089
    5. '[[' → logprob: -4.07427453994751
    6. ' [[' → logprob: -5.44927453994751
    7. '[n' → logprob: -8.324275016784668
    8. '[]' → logprob: -8.824275016784668
    9. '   ' → logprob: -8.949275016784668
    10. ' ' → logprob: -9.074275016784668

Token 209: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05285433307290077
    2. ' row' → logprob: -3.927854299545288
    3. 'row' → logprob: -4.052854537963867
    4. ' for' → logprob: -4.802854537963867
    5. 'for' → logprob: -5.927854537963867
    6. ' acc' → logprob: -6.927854537963867
    7. 'acc' → logprob: -7.552854537963867
    8. ' current' → logprob: -8.052854537963867
    9. 'current' → logprob: -8.427854537963867
    10. '[' → logprob: -8.552854537963867

Token 210: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' (adapté à ' row') → logprob: -0.03419006988406181
    2. 'for' → logprob: -3.7841901779174805
    3. 'acc' → logprob: -5.2841901779174805
    4. ' row' → logprob: -6.9091901779174805
    5. 'rev' → logprob: -7.0341901779174805
    6. '   ' → logprob: -7.5341901779174805
    7. 'left' → logprob: -7.5341901779174805
    8. 'count' → logprob: -7.9091901779174805
    9. 'curr' → logprob: -8.28419017791748
    10. 'current' → logprob: -8.28419017791748

Token 211: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05044897645711899
    2. '=' → logprob: -3.0504488945007324
    3. ',' → logprob: -6.300448894500732
    4. '[' → logprob: -11.80044937133789
    5. ' ,' → logprob: -12.17544937133789
    6. '=[]' → logprob: -12.92544937133789
    7. ')' → logprob: -13.42544937133789
    8. '<|end|>' → logprob: -13.80044937133789
    9. 's' → logprob: -14.17544937133789
    10. '_' → logprob: -14.30044937133789

Token 212: ' create' (ID: 2501)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.12867921590805054
    2. 'create' → logprob: -2.3786792755126953
    3. ' [' → logprob: -4.003679275512695
    4. ' create' → logprob: -4.628679275512695
    5. '[n' → logprob: -10.503679275512695
    6. ' ' → logprob: -11.503679275512695
    7. '   ' → logprob: -12.003679275512695
    8. '.create' → logprob: -12.628679275512695
    9. '[]' → logprob: -13.753679275512695
    10. '(create' → logprob: -13.878679275512695

Token 213: '_acc' (ID: 35551)
  Prédit: '_acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_acc' → logprob: -0.00020783171930816025
    2. '_row' → logprob: -8.750207901000977
    3. 'acc' → logprob: -10.125207901000977
    4. '_' → logprob: -13.000207901000977
    5. '_code' → logprob: -13.125207901000977
    6. 'row' → logprob: -13.125207901000977
    7. '[' → logprob: -14.500207901000977
    8. ' acc' → logprob: -14.750207901000977
    9. '_ac' → logprob: -14.750207901000977
    10. '(acc' → logprob: -15.375207901000977

Token 214: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -0.0002715873415581882
    2. 'row' → logprob: -8.375271797180176
    3. '_' → logprob: -11.000271797180176
    4. '[' → logprob: -11.500271797180176
    5. '_list' → logprob: -12.875271797180176
    6. '(row' → logprob: -13.750271797180176
    7. ' _' → logprob: -13.875271797180176
    8. '_Row' → logprob: -13.875271797180176
    9. '   ' → logprob: -14.000271797180176
    10. '[_' → logprob: -14.125271797180176

Token 215: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -2.5776860184123507e-06
    2. '(' → logprob: -13.00000286102295
    3. ' (' → logprob: -16.500001907348633
    4. 'n' → logprob: -16.625001907348633
    5. '```' → logprob: -18.750001907348633
    6. '<n' → logprob: -19.500001907348633
    7. '(
' → logprob: -19.500001907348633
    8. '   ' → logprob: -20.000001907348633
    9. ')(' → logprob: -20.125001907348633
    10. 'def' → logprob: -20.375001907348633

Token 216: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9743012671824545e-05
    2. '*' → logprob: -11.000020027160645
    3. ')' → logprob: -13.000020027160645
    4. 'n' → logprob: -15.000020027160645
    5. '۲' → logprob: -16.250019073486328
    6. ' *' → logprob: -16.750019073486328
    7. ' ' → logprob: -16.875019073486328
    8. '[' → logprob: -17.125019073486328
    9. '₂' → logprob: -17.375019073486328
    10. '```' → logprob: -17.625019073486328

Token 217: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006271334132179618
    2. ')
' → logprob: -7.375627040863037
    3. ')

' → logprob: -15.250627517700195
    4. ' )' → logprob: -15.750627517700195
    5. ')
' → logprob: -16.375627517700195
    6. '   ' → logprob: -17.125627517700195
    7. '))' → logprob: -18.625627517700195
    8. '),' → logprob: -18.750627517700195
    9. ')`' → logprob: -18.875627517700195
    10. ' ' → logprob: -19.625627517700195

Token 218: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.538423478603363
    2. ' for' → logprob: -0.913423478603363
    3. 'for' → logprob: -4.413423538208008
    4. '<|end|>' → logprob: -6.163423538208008
    5. '	for' → logprob: -7.913423538208008
    6. ' i' → logprob: -9.163423538208008
    7. '    
' → logprob: -9.538423538208008
    8. '
' → logprob: -9.913423538208008
    9. ')' → logprob: -10.038423538208008
    10. ' ' → logprob: -10.163423538208008

Token 219: ' acc' (ID: 1259)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.012187845073640347
    2. 'res' → logprob: -6.262187957763672
    3. 'right' → logprob: -6.387187957763672
    4. 'result' → logprob: -6.387187957763672
    5. ' for' → logprob: -6.512187957763672
    6. 'i' → logprob: -7.762187957763672
    7. 'x' → logprob: -7.762187957763672
    8. 'ans' → logprob: -7.887187957763672
    9. 'results' → logprob: -7.887187957763672
    10. 'r' → logprob: -8.262187957763672

Token 220: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.18144379556179047
    2. ',' → logprob: -2.431443691253662
    3. '.' → logprob: -3.181443691253662
    4. '=' → logprob: -3.431443691253662
    5. ' =' → logprob: -6.431443691253662
    6. 'append' → logprob: -6.681443691253662
    7. ')' → logprob: -8.05644416809082
    8. '_append' → logprob: -8.43144416809082
    9. '<|end|>' → logprob: -8.55644416809082
    10. '=[]' → logprob: -9.18144416809082

Token 221: '(list' (ID: 13116)
  Prédit: '(row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(row' → logprob: -0.0013911888236179948
    2. '(acc' → logprob: -7.126391410827637
    3. '(' → logprob: -7.876391410827637
    4. '(reverse' → logprob: -9.376391410827637
    5. '(process' → logprob: -9.501391410827637
    6. '(update' → logprob: -10.876391410827637
    7. '([]' → logprob: -12.126391410827637
    8. '(create' → logprob: -12.376391410827637
    9. '([' → logprob: -12.501391410827637
    10. 'row' → logprob: -12.626391410827637

Token 222: '(row' (ID: 15945)
  Prédit: '(row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(row' → logprob: -0.14725197851657867
    2. '(acc' → logprob: -2.022252082824707
    3. 'row' → logprob: -6.647252082824707
    4. 'acc' → logprob: -6.772252082824707
    5. '(re' → logprob: -7.022252082824707
    6. '(range' → logprob: -7.897252082824707
    7. '(reverse' → logprob: -7.897252082824707
    8. '(' → logprob: -8.772252082824707
    9. '(update' → logprob: -8.897252082824707
    10. ')' → logprob: -10.147252082824707

Token 223: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05011646822094917
    2. '))' → logprob: -3.050116539001465
    3. ')
' → logprob: -6.550116539001465
    4. '))
' → logprob: -9.300116539001465
    5. ' )' → logprob: -12.925116539001465
    6. ')

' → logprob: -13.550116539001465
    7. ')))' → logprob: -13.925116539001465
    8. ')
' → logprob: -14.425116539001465
    9. '))

' → logprob: -15.175116539001465
    10. '())' → logprob: -15.425116539001465

Token 224: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7011538147926331
    2. 'for' → logprob: -1.3261537551879883
    3. ' for' → logprob: -1.4511537551879883
    4. '	for' → logprob: -5.576153755187988
    5. '
' → logprob: -8.326153755187988
    6. 'i' → logprob: -9.951153755187988
    7. '\t' → logprob: -11.326153755187988
    8. 'n' → logprob: -11.326153755187988
    9. '```' → logprob: -11.451153755187988
    10. '    
' → logprob: -11.701153755187988

Token 225: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0016848169034346938
    2. ' for' → logprob: -6.626684665679932
    3. '   ' → logprob: -8.00168514251709
    4. 'i' → logprob: -10.87668514251709
    5. '	for' → logprob: -12.75168514251709
    6. '
' → logprob: -13.62668514251709
    7. '```' → logprob: -14.25168514251709
    8. ' i' → logprob: -16.501684188842773
    9. '    
' → logprob: -16.751684188842773
    10. 'x' → logprob: -16.876684188842773

Token 226: ' x' (ID: 1215)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.4972028136253357
    2. 'i' → logprob: -0.9972028136253357
    3. ' x' → logprob: -4.4972028732299805
    4. 'x' → logprob: -4.7472028732299805
    5. ' c' → logprob: -6.9972028732299805
    6. 'c' → logprob: -7.4972028732299805
    7. '_' → logprob: -8.62220287322998
    8. '(i' → logprob: -8.87220287322998
    9. ' ' → logprob: -8.99720287322998
    10. 'rev' → logprob: -8.99720287322998

Token 227: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.018168438225984573
    2. 'in' → logprob: -4.0181684494018555
    3. ' ' → logprob: -11.143168449401855
    4. ',' → logprob: -14.393168449401855
    5. '	in' → logprob: -14.518168449401855
    6. '_' → logprob: -15.018168449401855
    7. 'n' → logprob: -15.018168449401855
    8. 'import' → logprob: -15.143168449401855
    9. 'In' → logprob: -15.393168449401855
    10. ')' → logprob: -15.518168449401855

Token 228: ' rev' (ID: 10808)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.6326257586479187
    2. 'range' → logprob: -0.7576257586479187
    3. ' ' → logprob: -11.757625579833984
    4. '(range' → logprob: -12.382625579833984
    5. '	range' → logprob: -12.757625579833984
    6. 'n' → logprob: -12.882625579833984
    7. '   ' → logprob: -13.007625579833984
    8. '  ' → logprob: -13.507625579833984
    9. '[' → logprob: -14.132625579833984
    10. 'r' → logprob: -14.570125579833984

Token 229: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.008691861294209957
    2. '[' → logprob: -4.758691787719727
    3. 'c' → logprob: -10.633691787719727
    4. '[_' → logprob: -12.258691787719727
    5. '_b' → logprob: -12.508691787719727
    6. '[i' → logprob: -12.883691787719727
    7. ')' → logprob: -12.883691787719727
    8. '[[' → logprob: -13.071191787719727
    9. '[int' → logprob: -13.133691787719727
    10. '   ' → logprob: -13.258691787719727

Token 230: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004647165071219206
    2. ':
' → logprob: -6.129647254943848
    3. ' :' → logprob: -6.629647254943848
    4. '):' → logprob: -7.004647254943848
    5. '[' → logprob: -9.004647254943848
    6. ')' → logprob: -10.754647254943848
    7. '):
' → logprob: -11.129647254943848
    8. '   ' → logprob: -11.379647254943848
    9. ' in' → logprob: -11.504647254943848
    10. '<|end|>' → logprob: -12.254647254943848

Token 231: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6022130250930786
    2. '   ' → logprob: -0.9772130250930786
    3. ' row' → logprob: -2.602212905883789
    4. 'row' → logprob: -6.852212905883789
    5. '	row' → logprob: -8.602212905883789
    6. '    ' → logprob: -8.977212905883789
    7. ' if' → logprob: -9.352212905883789
    8. ' update' → logprob: -9.477212905883789
    9. '```' → logprob: -9.852212905883789
    10. ',' → logprob: -10.102212905883789

Token 232: ' row' (ID: 5225)
  Prédit: ' row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.3186473250389099
    2. 'row' (adapté à ' row') → logprob: -1.3186473846435547
    3. '   ' → logprob: -5.568647384643555
    4. '       ' → logprob: -6.568647384643555
    5. ',' → logprob: -10.068647384643555
    6. ',row' → logprob: -10.068647384643555
    7. '	row' → logprob: -10.193647384643555
    8. ' ' → logprob: -11.568647384643555
    9. '[row' → logprob: -12.318647384643555
    10. '           ' → logprob: -12.443647384643555

Token 233: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.21052703261375427
    2. '=' → logprob: -1.7105270624160767
    3. ' =' → logprob: -4.710526943206787
    4. ',row' → logprob: -10.960527420043945
    5. '=row' → logprob: -11.085527420043945
    6. ' ,' → logprob: -11.210527420043945
    7. ',index' → logprob: -11.335527420043945
    8. '=index' → logprob: -12.460527420043945
    9. ',x' → logprob: -13.585527420043945
    10. '[' → logprob: -13.710527420043945

Token 234: ' acc' (ID: 1259)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.6449081301689148
    2. ' acc' → logprob: -0.7699081301689148
    3. 'row' → logprob: -6.0199079513549805
    4. 'x' → logprob: -6.2699079513549805
    5. ' row' → logprob: -6.2699079513549805
    6. '_acc' → logprob: -6.7699079513549805
    7. ' =' → logprob: -6.7699079513549805
    8. ' x' → logprob: -6.8949079513549805
    9. ' process' → logprob: -7.2699079513549805
    10. 'process' → logprob: -7.7699079513549805

Token 235: '_row' (ID: 19157)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.5296579599380493
    2. '=' → logprob: -1.7796579599380493
    3. ' =' → logprob: -2.0296578407287598
    4. ',' → logprob: -2.2796578407287598
    5. '_row' → logprob: -5.52965784072876
    6. '.' → logprob: -6.90465784072876
    7. '_' → logprob: -7.15465784072876
    8. '   ' → logprob: -7.52965784072876
    9. '[row' → logprob: -8.154658317565918
    10. '=row' → logprob: -8.154658317565918

Token 236: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868732452392578
    2. ' =' → logprob: -1.1368732452392578
    3. ',' → logprob: -13.136873245239258
    4. ' ' → logprob: -16.386873245239258
    5. ')' → logprob: -17.386873245239258
    6. '=
' → logprob: -17.636873245239258
    7. '=row' → logprob: -17.636873245239258
    8. ' =)' → logprob: -18.011873245239258
    9. ' =
' → logprob: -18.136873245239258
    10. ')=' → logprob: -18.511873245239258

Token 237: ' process' (ID: 2273)
  Prédit: ' process'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' process' → logprob: -0.062020789831876755
    2. 'process' → logprob: -2.812020778656006
    3. ' update' → logprob: -10.062021255493164
    4. 'update' → logprob: -11.687021255493164
    5. '	process' → logprob: -13.562021255493164
    6. '(process' → logprob: -15.687021255493164
    7. ' proces' → logprob: -15.937021255493164
    8. ' reverse' → logprob: -16.062021255493164
    9. '.process' → logprob: -16.187021255493164
    10. '_process' → logprob: -16.687021255493164

Token 238: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.00030042731668800116
    2. 'x' → logprob: -8.125300407409668
    3. '_row' → logprob: -13.375300407409668
    4. 'row' → logprob: -13.750300407409668
    5. '_' → logprob: -14.625300407409668
    6. '_c' → logprob: -15.000300407409668
    7. '(row' → logprob: -15.500300407409668
    8. '```' → logprob: -15.500300407409668
    9. '(x' → logprob: -15.875300407409668
    10. ' ' → logprob: -16.375301361083984

Token 239: '_entry' (ID: 20857)
  Prédit: '_entry'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_entry' → logprob: -0.004659861326217651
    2. 'entry' → logprob: -5.379659652709961
    3. '(entry' → logprob: -11.254659652709961
    4. '_row' → logprob: -11.629659652709961
    5. ' entry' → logprob: -11.754659652709961
    6. 'x' → logprob: -12.504659652709961
    7. 'row' → logprob: -13.254659652709961
    8. 'Entry' → logprob: -13.504659652709961
    9. '_ENTRY' → logprob: -14.629659652709961
    10. '
' → logprob: -14.754659652709961

Token 240: '(row' (ID: 15945)
  Prédit: '(row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(row' → logprob: -3.128163257315464e-07
    2. '(' → logprob: -15.75
    3. 'row' → logprob: -17.125
    4. '(line' → logprob: -18.125
    5. ' row' → logprob: -18.375
    6. ' (' → logprob: -18.875
    7. '=row' → logprob: -19.5
    8. '[row' → logprob: -20.375
    9. '(
' → logprob: -20.625
    10. '(rows' → logprob: -20.625

Token 241: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004473540757317096
    2. ',x' → logprob: -8.250447273254395
    3. ' ,' → logprob: -8.625447273254395
    4. 'x' → logprob: -13.375447273254395
    5. '[' → logprob: -13.875447273254395
    6. ',
' → logprob: -14.000447273254395
    7. ')' → logprob: -14.125447273254395
    8. ' ' → logprob: -14.625447273254395
    9. 's' → logprob: -14.750447273254395
    10. ' x' → logprob: -15.125447273254395

Token 242: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.1128304973244667
    2. ' x' → logprob: -2.237830400466919
    3. '
' → logprob: -13.48783016204834
    4. '	x' → logprob: -13.61283016204834
    5. ' ' → logprob: -13.73783016204834
    6. '   ' → logprob: -13.86283016204834
    7. 'rev' → logprob: -13.86283016204834
    8. '       ' → logprob: -14.86283016204834
    9. ')x' → logprob: -14.86283016204834
    10. '(x' → logprob: -15.23783016204834

Token 243: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001959678716957569
    2. ',n' → logprob: -6.251959800720215
    3. ' ,' → logprob: -10.501959800720215
    4. ')' → logprob: -13.751959800720215
    5. '   ' → logprob: -13.751959800720215
    6. 'n' → logprob: -14.751959800720215
    7. ',
' → logprob: -15.501959800720215
    8. '[' → logprob: -15.876959800720215
    9. '=' → logprob: -16.2519588470459
    10. ',len' → logprob: -16.2519588470459

Token 244: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.04858759790658951
    2. ' n' → logprob: -3.0485875606536865
    3. '	n' → logprob: -15.798587799072266
    4. ' ' → logprob: -16.798587799072266
    5. ')n' → logprob: -17.048587799072266
    6. '   ' → logprob: -17.173587799072266
    7. '
' → logprob: -17.423587799072266
    8. ')' → logprob: -17.923587799072266
    9. '  ' → logprob: -18.923587799072266
    10. '```' → logprob: -19.423587799072266

Token 245: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.2729995988775045e-06
    2. ')' → logprob: -12.375006675720215
    3. ' ' → logprob: -13.750006675720215
    4. '   ' → logprob: -14.375006675720215
    5. '```' → logprob: -16.1250057220459
    6. '*' → logprob: -17.1250057220459
    7. ',' → logprob: -17.6250057220459
    8. '
' → logprob: -17.6250057220459
    9. '₂' → logprob: -17.7500057220459
    10. ')
' → logprob: -17.7500057220459

Token 246: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.2525348961353302
    2. ')' → logprob: -1.5025348663330078
    3. '       ' → logprob: -7.627534866333008
    4. ')
' → logprob: -9.502534866333008
    5. '   ' → logprob: -10.127534866333008
    6. ' )
' → logprob: -13.127534866333008
    7. ')

' → logprob: -13.877534866333008
    8. ' ' → logprob: -14.627534866333008
    9. ' )' → logprob: -15.502534866333008
    10. ')`
' → logprob: -16.002534866333008

Token 247: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015320050297304988
    2. '   ' → logprob: -6.501532077789307
    3. 'acc' → logprob: -11.626531600952148
    4. ' acc' → logprob: -12.376531600952148
    5. ' ' → logprob: -12.501531600952148
    6. '<|end|>' → logprob: -12.751531600952148
    7. 'import' → logprob: -13.376531600952148
    8. '```' → logprob: -13.501531600952148
    9. 'def' → logprob: -13.876531600952148
    10. '      ' → logprob: -14.001531600952148

Token 248: ' acc' (ID: 1259)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' (adapté à ' acc') → logprob: -0.09810788929462433
    2. ' acc' → logprob: -2.7231078147888184
    3. '   ' → logprob: -3.5981078147888184
    4. '       ' → logprob: -7.973107814788818
    5. '	acc' → logprob: -10.473108291625977
    6. ' ' → logprob: -10.848108291625977
    7. '  ' → logprob: -12.473108291625977
    8. '
' → logprob: -13.098108291625977
    9. 'ac' → logprob: -13.598108291625977
    10. '(acc' → logprob: -13.723108291625977

Token 249: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.006751255132257938
    2. '.' → logprob: -5.00675106048584
    3. '.app' → logprob: -10.50675106048584
    4. '.extend' → logprob: -12.25675106048584
    5. ' .' → logprob: -13.50675106048584
    6. '       ' → logprob: -14.13175106048584
    7. '.ap' → logprob: -14.50675106048584
    8. 'append' → logprob: -14.88175106048584
    9. '_append' → logprob: -15.50675106048584
    10. '   ' → logprob: -15.75675106048584

Token 250: '(acc' (ID: 82668)
  Prédit: '(acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(acc' → logprob: -0.00023858259373810142
    2. 'acc' → logprob: -8.875238418579102
    3. '(list' → logprob: -9.250238418579102
    4. '(' → logprob: -13.250238418579102
    5. '(ac' → logprob: -14.750238418579102
    6. ' acc' → logprob: -16.0002384185791
    7. 'list' → logprob: -16.0002384185791
    8. '	acc' → logprob: -16.5002384185791
    9. '((' → logprob: -17.0002384185791
    10. '(arr' → logprob: -17.3752384185791

Token 251: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -0.00038145645521581173
    2. 'row' → logprob: -7.8753814697265625
    3. '-row' → logprob: -15.125381469726562
    4. '[row' → logprob: -15.125381469726562
    5. ' row' → logprob: -15.500381469726562
    6. '	row' → logprob: -15.625381469726562
    7. 'Row' → logprob: -15.750381469726562
    8. ')' → logprob: -16.500381469726562
    9. '_ROW' → logprob: -16.500381469726562
    10. '<Row' → logprob: -16.500381469726562

Token 252: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.542423165636137e-05
    2. ')
' → logprob: -9.375085830688477
    3. '   ' → logprob: -15.000085830688477
    4. ' )' → logprob: -15.750085830688477
    5. ')return' → logprob: -16.500085830688477
    6. ')
' → logprob: -17.625085830688477
    7. ')

' → logprob: -17.750085830688477
    8. '),' → logprob: -18.250085830688477
    9. '<|end|>' → logprob: -18.875085830688477
    10. '))' → logprob: -19.250085830688477

Token 253: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00030424181022681296
    2. '<|end|>' → logprob: -8.500304222106934
    3. ' return' → logprob: -10.125304222106934
    4. 'return' → logprob: -10.125304222106934
    5. 'def' → logprob: -11.250304222106934
    6. ')' → logprob: -13.125304222106934
    7. '<|end|>' → logprob: -13.750304222106934
    8. '	return' → logprob: -14.500304222106934
    9. ' for' → logprob: -14.500304222106934
    10. '```' → logprob: -14.625304222106934

Token 254: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010132139548659325
    2. 'return' (adapté à ' return') → logprob: -4.760132312774658
    3. ' return' → logprob: -6.510132312774658
    4. '	return' → logprob: -11.3851318359375
    5. 'def' → logprob: -11.7601318359375
    6. 'for' → logprob: -13.1351318359375
    7. '<|end|>' → logprob: -13.1351318359375
    8. ' for' → logprob: -13.2601318359375
    9. '```' → logprob: -13.7601318359375
    10. '       ' → logprob: -13.7601318359375

Token 255: ' acc' (ID: 1259)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.029872432351112366
    2. ' acc' → logprob: -3.529872417449951
    3. '[' → logprob: -10.15487289428711
    4. 'len' → logprob: -10.77987289428711
    5. '(acc' → logprob: -10.90487289428711
    6. '   ' → logprob: -11.02987289428711
    7. 'True' → logprob: -11.90487289428711
    8. 'ac' → logprob: -12.77987289428711
    9. 'set' → logprob: -13.02987289428711
    10. 'n' → logprob: -13.02987289428711

Token 256: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.033028848469257355
    2. '<|end|>' → logprob: -4.033029079437256
    3. '[' → logprob: -4.658029079437256
    4. '[
' → logprob: -6.658029079437256
    5. ')' → logprob: -6.908029079437256
    6. ',' → logprob: -7.033029079437256
    7. '<|end|>' → logprob: -7.783029079437256
    8. '```' → logprob: -8.158028602600098
    9. '.' → logprob: -8.533028602600098
    10. ':' → logprob: -8.658028602600098

Token 257: 'def' (ID: 1314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5689296126365662
    2. 'def' → logprob: -1.318929672241211
    3. ')' → logprob: -2.443929672241211
    4. '#' → logprob: -3.568929672241211
    5. '<|end|>' → logprob: -3.568929672241211
    6. 'n' → logprob: -4.943929672241211
    7. ']' → logprob: -5.443929672241211
    8. '(' → logprob: -5.693929672241211
    9. '[
' → logprob: -6.193929672241211
    10. '```' → logprob: -6.443929672241211

Token 258: ' existence' (ID: 24140)
  Prédit: 'exist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exist' → logprob: -0.2417406290769577
    2. ' existence' → logprob: -1.6167405843734741
    3. 'main' → logprob: -4.991740703582764
    4. ' main' → logprob: -5.866740703582764
    5. 'reverse' → logprob: -6.741740703582764
    6. 'combine' → logprob: -6.741740703582764
    7. 'color' → logprob: -7.366740703582764
    8. 'exists' → logprob: -7.741740703582764
    9. 'merge' → logprob: -8.616740226745605
    10. 'rev' → logprob: -8.616740226745605

Token 259: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -0.14711512625217438
    2. '_left' → logprob: -2.0221152305603027
    3. '_single' → logprob: -5.897115230560303
    4. '_' → logprob: -7.522115230560303
    5. '_double' → logprob: -9.147114753723145
    6. '(n' → logprob: -9.272114753723145
    7. '_two' → logprob: -9.647114753723145
    8. '_n' → logprob: -9.897114753723145
    9. '(' → logprob: -9.897114753723145
    10. '_c' → logprob: -10.022114753723145

Token 260: '_all' (ID: 13305)
  Prédit: '_single'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_single' → logprob: -0.023787042126059532
    2. '(n' → logprob: -4.148787021636963
    3. '(' → logprob: -5.648787021636963
    4. '_' → logprob: -6.398787021636963
    5. '_(' → logprob: -6.898787021636963
    6. '(_' → logprob: -6.898787021636963
    7. 'single' → logprob: -9.273787498474121
    8. '_s' → logprob: -9.898787498474121
    9. '():' → logprob: -10.148787498474121
    10. 'def' → logprob: -10.398787498474121

Token 261: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00015133652777876705
    2. '(' → logprob: -9.250151634216309
    3. ' (' → logprob: -9.875151634216309
    4. '():' → logprob: -13.125151634216309
    5. '(
' → logprob: -14.875151634216309
    6. '():
' → logprob: -14.875151634216309
    7. '(def' → logprob: -15.500151634216309
    8. 'def' → logprob: -15.625151634216309
    9. '(N' → logprob: -16.000150680541992
    10. '(num' → logprob: -16.375150680541992

Token 262: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014239625306800008
    2. ' ,' → logprob: -9.875142097473145
    3. '):' → logprob: -10.625142097473145
    4. ',c' → logprob: -10.750142097473145
    5. ',
' → logprob: -10.875142097473145
    6. ',n' → logprob: -11.125142097473145
    7. '_,' → logprob: -13.250142097473145
    8. 'def' → logprob: -13.250142097473145
    9. '):
' → logprob: -13.625142097473145
    10. 'c' → logprob: -14.000142097473145

Token 263: ' rev' (ID: 10808)
  Prédit: 'rev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rev' → logprob: -0.4755840301513672
    2. ' rev' → logprob: -0.9755840301513672
    3. '   ' → logprob: -8.350584030151367
    4. '):
' → logprob: -8.475584030151367
    5. 'n' → logprob: -8.725584030151367
    6. ')' → logprob: -8.975584030151367
    7. ' acc' → logprob: -8.975584030151367
    8. '):' → logprob: -9.100584030151367
    9. ' n' → logprob: -9.225584030151367
    10. 'acc' → logprob: -9.475584030151367

Token 264: '):
' (ID: 1883)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -9.019237768370658e-05
    2. '_' → logprob: -9.750090599060059
    3. ' _' → logprob: -11.875090599060059
    4. '):
' → logprob: -12.375090599060059
    5. 'c' → logprob: -12.500090599060059
    6. '_a' → logprob: -12.750090599060059
    7. ',' → logprob: -12.750090599060059
    8. '   ' → logprob: -13.000090599060059
    9. ')_' → logprob: -13.125090599060059
    10. '):' → logprob: -13.250090599060059

Token 265: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0601072832942009
    2. ':' → logprob: -3.0601072311401367
    3. ':
' → logprob: -5.185107231140137
    4. '(n' → logprob: -5.685107231140137
    5. '[' → logprob: -7.060107231140137
    6. '):
' → logprob: -7.810107231140137
    7. 'def' → logprob: -7.935107231140137
    8. '[n' → logprob: -8.435107231140137
    9. ',' → logprob: -8.935107231140137
    10. 'n' → logprob: -9.435107231140137

Token 266: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06266145408153534
    2. 'return' (adapté à ' return') → logprob: -3.4376614093780518
    3. 'acc' → logprob: -4.437661647796631
    4. 'rev' → logprob: -5.062661647796631
    5. 'def' → logprob: -5.812661647796631
    6. 'c' → logprob: -5.937661647796631
    7. 'right' → logprob: -6.812661647796631
    8. ' return' → logprob: -6.937661647796631
    9. 'r' → logprob: -7.187661647796631
    10. 'res' → logprob: -8.062661170959473

Token 267: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.05572802945971489
    2. ' [' → logprob: -3.430727958679199
    3. '[
' → logprob: -4.555727958679199
    4. 'exist' → logprob: -5.180727958679199
    5. '[[' → logprob: -6.305727958679199
    6. '[list' → logprob: -6.805727958679199
    7. '[n' → logprob: -8.0557279586792
    8. '(ex' → logprob: -8.3057279586792
    9. ' existence' → logprob: -8.4307279586792
    10. '[int' → logprob: -8.4307279586792

Token 268: 'exist' (ID: 45380)
  Prédit: 'exist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exist' → logprob: -0.00023238400171976537
    2. ' existence' → logprob: -8.375232696533203
    3. '[' → logprob: -14.250232696533203
    4. 'exists' → logprob: -14.375232696533203
    5. '   ' → logprob: -15.750232696533203
    6. 'absence' → logprob: -16.125232696533203
    7. 'presence' → logprob: -16.250232696533203
    8. ' ' → logprob: -17.250232696533203
    9. 'existing' → logprob: -17.250232696533203
    10. '  ' → logprob: -17.500232696533203

Token 269: 'ence' (ID: 1082)
  Prédit: 'ence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ence' → logprob: -1.1279553291387856e-05
    2. 'istence' → logprob: -12.125011444091797
    3. 'exist' → logprob: -12.500011444091797
    4. 'ience' → logprob: -13.875011444091797
    5. 'n' → logprob: -15.625011444091797
    6. '   ' → logprob: -16.000011444091797
    7. '[' → logprob: -16.000011444091797
    8. 'ENCE' → logprob: -16.000011444091797
    9. 'rence' → logprob: -16.250011444091797
    10. 'ex' → logprob: -16.250011444091797

Token 270: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -1.7432603272027336e-06
    2. 'right' → logprob: -13.375001907348633
    3. 'r' → logprob: -17.375001907348633
    4. 's' → logprob: -17.500001907348633
    5. '_left' → logprob: -17.625001907348633
    6. ')_' → logprob: -18.375001907348633
    7. '_RIGHT' → logprob: -18.625001907348633
    8. '_Right' → logprob: -18.625001907348633
    9. '_r' → logprob: -19.000001907348633
    10. 'Right' → logprob: -19.125001907348633

Token 271: '_single' (ID: 46053)
  Prédit: '_single'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_single' → logprob: -0.00483380351215601
    2. '(n' → logprob: -6.004833698272705
    3. '_all' → logprob: -6.629833698272705
    4. 'single' → logprob: -6.879833698272705
    5. 'all' → logprob: -13.004834175109863
    6. 'Single' → logprob: -13.754834175109863
    7. '
' → logprob: -13.879834175109863
    8. 's' → logprob: -14.254834175109863
    9. ' single' → logprob: -14.754834175109863
    10. '_right' → logprob: -15.129834175109863

Token 272: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.306760805164231e-05
    2. ' (' → logprob: -11.37501335144043
    3. '(' → logprob: -13.87501335144043
    4. '](' → logprob: -15.00001335144043
    5. ']' → logprob: -16.12501335144043
    6. '
' → logprob: -16.25001335144043
    7. '   ' → logprob: -17.25001335144043
    8. '(
' → logprob: -17.75001335144043
    9. '```' → logprob: -18.25001335144043
    10. ' ' → logprob: -18.50001335144043

Token 273: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00030281138606369495
    2. ' ,' → logprob: -8.375303268432617
    3. 'rev' → logprob: -10.750303268432617
    4. '   ' → logprob: -11.000303268432617
    5. ',
' → logprob: -11.125303268432617
    6. ',r' → logprob: -12.250303268432617
    7. ',c' → logprob: -12.750303268432617
    8. ',re' → logprob: -13.125303268432617
    9. ' rev' → logprob: -13.250303268432617
    10. '  ' → logprob: -13.875303268432617

Token 274: ' rev' (ID: 10808)
  Prédit: 'rev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rev' → logprob: -0.012397211976349354
    2. 'r' → logprob: -5.012397289276123
    3. 'c' → logprob: -5.887397289276123
    4. 'row' → logprob: -6.762397289276123
    5. 'color' → logprob: -7.512397289276123
    6. 'x' → logprob: -8.137396812438965
    7. ' rev' → logprob: -8.262396812438965
    8. 'line' → logprob: -8.637396812438965
    9. 'rc' → logprob: -8.762396812438965
    10. 'col' → logprob: -10.137396812438965

Token 275: '_c' (ID: 1303)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6050823330879211
    2. '[c' → logprob: -1.2300822734832764
    3. '[i' → logprob: -2.3550822734832764
    4. '_c' → logprob: -2.7300822734832764
    5. 'c' → logprob: -6.9800825119018555
    6. '[_' → logprob: -7.9800825119018555
    7. '_i' → logprob: -9.230082511901855
    8. 'i' → logprob: -9.855082511901855
    9. '[idx' → logprob: -10.605082511901855
    10. '0' → logprob: -10.980082511901855

Token 276: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011915886716451496
    2. 'c' → logprob: -9.62511920928955
    3. '_c' → logprob: -10.12511920928955
    4. '[c' → logprob: -12.00011920928955
    5. '[' → logprob: -12.50011920928955
    6. '[i' → logprob: -13.00011920928955
    7. ' )' → logprob: -15.37511920928955
    8. ')
' → logprob: -15.75011920928955
    9. ' ' → logprob: -15.87511920928955
    10. '   ' → logprob: -16.250118255615234

Token 277: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2130139172077179
    2. 'for' → logprob: -1.7130138874053955
    3. '   ' → logprob: -4.588014125823975
    4. ')' → logprob: -6.713014125823975
    5. '    ' → logprob: -10.088013648986816
    6. '       ' → logprob: -10.213013648986816
    7. ' ' → logprob: -10.213013648986816
    8. '  ' → logprob: -11.213013648986816
    9. '	for' → logprob: -11.963013648986816
    10. '      ' → logprob: -13.338013648986816

Token 278: ' rev' (ID: 10808)
  Prédit: 'rev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rev' → logprob: -0.10020969063043594
    2. ' rev' → logprob: -2.3502097129821777
    3. ' ' → logprob: -13.35020923614502
    4. '   ' → logprob: -14.60020923614502
    5. '_rev' → logprob: -14.72520923614502
    6. '  ' → logprob: -15.35020923614502
    7. '.rev' → logprob: -15.97520923614502
    8. '
' → logprob: -17.100210189819336
    9. 'c' → logprob: -17.475210189819336
    10. ' ' → logprob: -18.225210189819336

Token 279: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -3.2020991056924686e-05
    2. ' in' → logprob: -10.625032424926758
    3. '_' → logprob: -12.500032424926758
    4. 'c' → logprob: -13.125032424926758
    5. '[' → logprob: -13.750032424926758
    6. ')' → logprob: -15.625032424926758
    7. ' _' → logprob: -15.750032424926758
    8. ']' → logprob: -16.000032424926758
    9. '__' → logprob: -16.000032424926758
    10. 'in' → logprob: -16.625032424926758

Token 280: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07889639586210251
    2. 'in' → logprob: -2.5788962841033936
    3. ' ' → logprob: -13.203896522521973
    4. ')' → logprob: -13.328896522521973
    5. '	in' → logprob: -13.453896522521973
    6. 'import' → logprob: -14.078896522521973
    7. '[' → logprob: -15.453896522521973
    8. '[in' → logprob: -15.828896522521973
    9. 'inx' → logprob: -16.453895568847656
    10. '   ' → logprob: -16.453895568847656

Token 281: ' rev' (ID: 10808)
  Prédit: 'rev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rev' → logprob: -0.00383689790032804
    2. ' rev' → logprob: -5.6288371086120605
    3. 'range' → logprob: -8.628836631774902
    4. ' range' → logprob: -10.378836631774902
    5. '[' → logprob: -10.753836631774902
    6. ' ' → logprob: -13.878836631774902
    7. 'reverse' → logprob: -14.003836631774902
    8. '[[' → logprob: -14.253836631774902
    9. '   ' → logprob: -14.628836631774902
    10. '(' → logprob: -14.628836631774902

Token 282: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.008680401369929314
    2. ')]' → logprob: -4.75868034362793
    3. '()]' → logprob: -10.50868034362793
    4. ')' → logprob: -10.63368034362793
    5. ' ]' → logprob: -11.75868034362793
    6. '])' → logprob: -12.25868034362793
    7. '`]' → logprob: -14.38368034362793
    8. '])]' → logprob: -14.63368034362793
    9. ']
' → logprob: -15.13368034362793
    10. '>]' → logprob: -16.13368034362793

Token 283: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.15137940645217896
    2. '<|end|>' → logprob: -2.026379346847534
    3. '[' → logprob: -5.901379585266113
    4. '<|end|>' → logprob: -6.026379585266113
    5. '
' → logprob: -6.276379585266113
    6. '```' → logprob: -7.151379585266113
    7. '#' → logprob: -8.026379585266113
    8. '[
' → logprob: -8.401379585266113
    9. ')' → logprob: -9.276379585266113
    10. '

' → logprob: -9.901379585266113

Token 284: ' get' (ID: 717)
  Prédit: ' existence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' existence' → logprob: -1.0687237977981567
    2. 'exist' → logprob: -1.0687237977981567
    3. ' main' → logprob: -1.6937237977981567
    4. 'main' → logprob: -3.068723678588867
    5. 'combine' → logprob: -4.568723678588867
    6. 'reverse' → logprob: -4.943723678588867
    7. ' reverse' → logprob: -5.068723678588867
    8. 'count' → logprob: -5.318723678588867
    9. 'parse' → logprob: -5.443723678588867
    10. ' combine' → logprob: -5.568723678588867

Token 285: '_initial' (ID: 45740)
  Prédit: '_max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_max' → logprob: -1.732072353363037
    2. '_right' → logprob: -2.107072353363037
    3. '_rev' → logprob: -2.232072353363037
    4. '_n' → logprob: -3.107072353363037
    5. '_possible' → logprob: -3.357072353363037
    6. '_indices' → logprob: -3.482072353363037
    7. '_next' → logprob: -3.482072353363037
    8. '_count' → logprob: -3.732072353363037
    9. '_acc' → logprob: -3.732072353363037
    10. '_' → logprob: -3.857072353363037

Token 286: '_dp' (ID: 133252)
  Prédit: '_state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.806765079498291
    2. '_positions' → logprob: -1.931765079498291
    3. '_counts' → logprob: -2.806765079498291
    4. '_acc' → logprob: -2.931765079498291
    5. '_indices' → logprob: -3.056765079498291
    6. '_' → logprob: -3.431765079498291
    7. '_count' → logprob: -3.681765079498291
    8. '_position' → logprob: -3.681765079498291
    9. '_values' → logprob: -3.806765079498291
    10. '_ranges' → logprob: -4.181765079498291

Token 287: '(cost' (ID: 133554)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.06884048879146576
    2. '(n' → logprob: -2.818840503692627
    3. '():
' → logprob: -5.068840503692627
    4. '(' → logprob: -8.068840026855469
    5. ' ():' → logprob: -9.318840026855469
    6. '(size' → logprob: -9.693840026855469
    7. 'def' → logprob: -10.068840026855469
    8. '()' → logprob: -11.068840026855469
    9. '()(' → logprob: -11.068840026855469
    10. '():

' → logprob: -12.443840026855469

Token 288: '1' (ID: 16)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.028369193896651268
    2. '):
' → logprob: -4.403369426727295
    3. ',' → logprob: -4.528369426727295
    4. 's' → logprob: -6.153369426727295
    5. '_n' → logprob: -7.028369426727295
    6. ')' → logprob: -7.028369426727295
    7. ' ):' → logprob: -8.153368949890137
    8. '1' → logprob: -9.528368949890137
    9. '(n' → logprob: -9.528368949890137
    10. '_size' → logprob: -9.653368949890137

Token 289: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7071539759635925
    2. '):' → logprob: -0.7071539759635925
    3. '1' → logprob: -5.707153797149658
    4. 's' → logprob: -5.832153797149658
    5. '):
' → logprob: -6.207153797149658
    6. ')' → logprob: -6.457153797149658
    7. ',n' → logprob: -6.457153797149658
    8. ' ):' → logprob: -7.457153797149658
    9. ' ,' → logprob: -7.832153797149658
    10. '_n' → logprob: -7.957153797149658

Token 290: ' rev' (ID: 10808)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.3147228956222534
    2. ' cost' → logprob: -1.3147228956222534
    3. 'n' → logprob: -8.314723014831543
    4. 'dp' → logprob: -8.439723014831543
    5. ')' → logprob: -8.814723014831543
    6. '   ' → logprob: -9.064723014831543
    7. 'exist' → logprob: -9.439723014831543
    8. ' n' → logprob: -9.564723014831543
    9. ' dp' → logprob: -9.689723014831543
    10. 'rev' → logprob: -9.814723014831543

Token 291: '1' (ID: 16)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.09522995352745056
    2. '):' → logprob: -2.5952298641204834
    3. '_cost' → logprob: -5.2202301025390625
    4. ',' → logprob: -5.3452301025390625
    5. '):
' → logprob: -6.0952301025390625
    6. ')' → logprob: -7.0952301025390625
    7. ')]' → logprob: -7.5952301025390625
    8. '1' → logprob: -7.5952301025390625
    9. '_' → logprob: -8.220230102539062
    10. 'c' → logprob: -8.345230102539062

Token 292: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.040822964161634445
    2. '):' → logprob: -3.290822982788086
    3. '):
' → logprob: -6.665822982788086
    4. '1' → logprob: -7.540822982788086
    5. ')' → logprob: -8.290822982788086
    6. ' ,' → logprob: -8.290822982788086
    7. '_,' → logprob: -9.665822982788086
    8. ',
' → logprob: -9.665822982788086
    9. 's' → logprob: -10.165822982788086
    10. '_c' → logprob: -10.290822982788086

Token 293: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003746167290955782
    2. ' n' → logprob: -5.878746032714844
    3. 'n' → logprob: -7.628746032714844
    4. 'def' → logprob: -8.878746032714844
    5. ' dp' → logprob: -8.878746032714844
    6. ' def' → logprob: -9.628746032714844
    7. 'dp' → logprob: -9.753746032714844
    8. '(n' → logprob: -11.253746032714844
    9. '```' → logprob: -11.628746032714844
    10. '):
' → logprob: -12.753746032714844

Token 294: ' acc' (ID: 1259)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5863843560218811
    2. 'dp' → logprob: -1.2113842964172363
    3. ' n' → logprob: -2.5863842964172363
    4. '   ' → logprob: -3.2113842964172363
    5. 'return' → logprob: -4.461384296417236
    6. ' dp' → logprob: -4.461384296417236
    7. ' return' → logprob: -5.961384296417236
    8. 'import' → logprob: -6.086384296417236
    9. 'cost' → logprob: -7.586384296417236
    10. 'def' → logprob: -7.586384296417236

Token 295: '_values' (ID: 20393)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10120261460542679
    2. '1' → logprob: -3.1012027263641357
    3. '_cost' → logprob: -3.1012027263641357
    4. 'um' → logprob: -6.101202487945557
    5. '=' → logprob: -6.101202487945557
    6. '_row' → logprob: -7.226202487945557
    7. 'umulate' → logprob: -8.351202964782715
    8. '_val' → logprob: -8.976202964782715
    9. '   ' → logprob: -9.851202964782715
    10. '_c' → logprob: -9.851202964782715

Token 296: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01850213296711445
    2. '=' → logprob: -4.018502235412598
    3. ',' → logprob: -8.643502235412598
    4. '   ' → logprob: -9.393502235412598
    5. '[' → logprob: -10.143502235412598
    6. '=[]' → logprob: -11.518502235412598
    7. '=[' → logprob: -12.018502235412598
    8. 's' → logprob: -12.018502235412598
    9. ' =[' → logprob: -12.143502235412598
    10. '1' → logprob: -12.518502235412598

Token 297: ' (' (ID: 350)
  Prédit: 'exist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'exist' → logprob: -0.31391170620918274
    2. '[' → logprob: -2.3139116764068604
    3. 'acc' → logprob: -2.3139116764068604
    4. ' existence' → logprob: -3.4389116764068604
    5. 'reverse' → logprob: -4.0639119148254395
    6. ' [' → logprob: -5.4389119148254395
    7. ' accumulate' → logprob: -5.5639119148254395
    8. 'list' → logprob: -5.8139119148254395
    9. ' reverse' → logprob: -6.0639119148254395
    10. 'cost' → logprob: -6.9389119148254395

Token 298: 'c' (ID: 66)
  Prédit: 'exist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'exist' → logprob: -0.4303637444972992
    2. 'cost' → logprob: -1.6803637742996216
    3. 'acc' → logprob: -2.680363655090332
    4. '[' → logprob: -3.805363655090332
    5. 'max' → logprob: -4.680363655090332
    6. 'rev' → logprob: -4.805363655090332
    7. 'reverse' → logprob: -4.805363655090332
    8. '0' → logprob: -5.055363655090332
    9. '(cost' → logprob: -5.055363655090332
    10. 'sum' → logprob: -5.305363655090332

Token 299: '[y' (ID: 34551)
  Prédit: 'ost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ost' → logprob: -0.060353413224220276
    2. '[' → logprob: -3.5603535175323486
    3. '1' → logprob: -4.5603532791137695
    4. ' for' → logprob: -5.3103532791137695
    5. ' :=' → logprob: -5.9353532791137695
    6. ',' → logprob: -6.0603532791137695
    7. ':=' → logprob: -6.3103532791137695
    8. 'ount' → logprob: -6.3103532791137695
    9. '[i' → logprob: -7.1853532791137695
    10. 'os' → logprob: -7.5603532791137695

Token 300: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.12019655853509903
    2. '[y' → logprob: -2.995196580886841
    3. '][' → logprob: -4.245196342468262
    4. '],' → logprob: -4.370196342468262
    5. ' for' → logprob: -4.620196342468262
    6. '[' → logprob: -4.870196342468262
    7. ']+' → logprob: -4.995196342468262
    8. 'y' → logprob: -5.870196342468262
    9. ' +' → logprob: -6.370196342468262
    10. '+' → logprob: -6.370196342468262

Token 301: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1531192660331726
    2. ' +' → logprob: -2.9031193256378174
    3. '[' → logprob: -3.6531193256378174
    4. 'for' → logprob: -3.9031193256378174
    5. '[y' → logprob: -4.028119087219238
    6. '+' → logprob: -4.153119087219238
    7. '  ' → logprob: -6.403119087219238
    8. ' ' → logprob: -6.653119087219238
    9. '   ' → logprob: -6.903119087219238
    10. ')' → logprob: -7.028119087219238

Token 302: ' y' (ID: 342)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.039948582649231
    2. ' c' → logprob: -1.164948582649231
    3. ' y' → logprob: -1.414948582649231
    4. 'y' → logprob: -2.4149484634399414
    5. ' range' → logprob: -7.289948463439941
    6. ' (' → logprob: -8.039948463439941
    7. '(' → logprob: -8.289948463439941
    8. ' ' → logprob: -8.539948463439941
    9. '(c' → logprob: -8.664948463439941
    10. 'range' → logprob: -8.664948463439941

Token 303: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03638262301683426
    2. 'in' → logprob: -3.4113826751708984
    3. ',' → logprob: -6.786382675170898
    4. ' y' → logprob: -7.286382675170898
    5. 'y' → logprob: -7.661382675170898
    6. ',y' → logprob: -8.411382675170898
    7. ' ' → logprob: -9.036382675170898
    8. ' ,' → logprob: -9.911382675170898
    9. '<|end|>' → logprob: -10.536382675170898
    10. '[' → logprob: -11.911382675170898

Token 304: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.023848509415984154
    2. ' c' → logprob: -3.773848533630371
    3. 'y' → logprob: -8.273848533630371
    4. '(c' → logprob: -9.148848533630371
    5. ' in' → logprob: -9.273848533630371
    6. ' y' → logprob: -10.023848533630371
    7. 'x' → logprob: -10.523848533630371
    8. '_c' → logprob: -11.273848533630371
    9. ' (' → logprob: -11.398848533630371
    10. 'v' → logprob: -11.648848533630371

Token 305: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08895266801118851
    2. 'in' → logprob: -2.4639527797698975
    3. ',' → logprob: -12.088953018188477
    4. ')' → logprob: -13.463953018188477
    5. 'n' → logprob: -13.463953018188477
    6. ' ' → logprob: -13.588953018188477
    7. '
' → logprob: -14.463953018188477
    8. '  ' → logprob: -14.838953018188477
    9. '1' → logprob: -15.088953018188477
    10. 'ine' → logprob: -15.213953018188477

Token 306: ' zip' (ID: 16216)
  Prédit: ' enumerate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enumerate' → logprob: -0.5843349099159241
    2. 'enumer' → logprob: -0.9593349099159241
    3. ' zip' → logprob: -3.4593348503112793
    4. 'zip' → logprob: -3.5843348503112793
    5. '[(' → logprob: -9.709335327148438
    6. '(zip' → logprob: -9.959335327148438
    7. 'rev' → logprob: -10.209335327148438
    8. '[' → logprob: -11.834335327148438
    9. '((' → logprob: -11.959335327148438
    10. '```' → logprob: -13.084335327148438

Token 307: '(re' (ID: 8178)
  Prédit: 'rev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rev' → logprob: -1.1064417362213135
    2. '(cost' → logprob: -1.2314417362213135
    3. '[' → logprob: -1.6064417362213135
    4. 'cost' → logprob: -2.7314417362213135
    5. ' cost' → logprob: -3.1064417362213135
    6. ' [' → logprob: -3.7314417362213135
    7. ' (' → logprob: -3.9814417362213135
    8. '[c' → logprob: -4.606441497802734
    9. ' rev' → logprob: -4.606441497802734
    10. '(re' → logprob: -5.981441497802734

Token 308: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.003196131670847535
    2. '[' → logprob: -6.5031962394714355
    3. '(cost' → logprob: -7.6281962394714355
    4. 'cost' → logprob: -7.8781962394714355
    5. '(' → logprob: -8.378195762634277
    6. '[v' → logprob: -9.128195762634277
    7. 'q' → logprob: -9.503195762634277
    8. '(v' → logprob: -9.628195762634277
    9. 'vc' → logprob: -9.753195762634277
    10. 'c' → logprob: -10.253195762634277

Token 309: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1984429806470871
    2. '[' → logprob: -1.9484429359436035
    3. ',' → logprob: -3.3234429359436035
    4. ',[' → logprob: -8.073443412780762
    5. 's' → logprob: -8.448443412780762
    6. 'cost' → logprob: -8.823443412780762
    7. ')' → logprob: -9.073443412780762
    8. 'ost' → logprob: -9.198443412780762
    9. ' ,' → logprob: -9.573443412780762
    10. '(' → logprob: -9.823443412780762

Token 310: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04319969192147255
    2. ',c' → logprob: -3.9181997776031494
    3. '[' → logprob: -4.41819953918457
    4. ' ,' → logprob: -5.29319953918457
    5. '(cost' → logprob: -6.66819953918457
    6. 'cost' → logprob: -6.79319953918457
    7. '   ' → logprob: -7.04319953918457
    8. ')' → logprob: -7.79319953918457
    9. '[::-' → logprob: -7.91819953918457
    10. ' in' → logprob: -7.91819953918457

Token 311: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.023248855024576187
    2. ' cost' → logprob: -3.7732489109039307
    3. 'exist' → logprob: -13.523248672485352
    4. '(cost' → logprob: -13.898248672485352
    5. '[' → logprob: -14.898248672485352
    6. 'acc' → logprob: -14.898248672485352
    7. '   ' → logprob: -15.148248672485352
    8. ')' → logprob: -16.27324867248535
    9. 'rev' → logprob: -17.52324867248535
    10. ' ' → logprob: -17.52324867248535

Token 312: '1' (ID: 16)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0827265977859497
    2. '1' → logprob: -1.4577265977859497
    3. '))' → logprob: -1.5827265977859497
    4. '[' → logprob: -2.08272647857666
    5. 's' → logprob: -2.33272647857666
    6. ')]' → logprob: -7.45772647857666
    7. 'es' → logprob: -7.70772647857666
    8. ')[' → logprob: -9.45772647857666
    9. '])' → logprob: -9.58272647857666
    10. ')])' → logprob: -9.58272647857666

Token 313: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.22562934458255768
    2. ')' → logprob: -1.6006293296813965
    3. ' ))' → logprob: -9.600629806518555
    4. ' )' → logprob: -10.100629806518555
    5. '))
' → logprob: -10.600629806518555
    6. '())' → logprob: -10.725629806518555
    7. '[' → logprob: -10.975629806518555
    8. '])' → logprob: -11.350629806518555
    9. ')))' → logprob: -11.475629806518555
    10. '()))' → logprob: -11.850629806518555

Token 314: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6371317505836487
    2. ')' → logprob: -0.7621317505836487
    3. ')
' → logprob: -6.262131690979004
    4. 'for' → logprob: -7.512131690979004
    5. ' for' → logprob: -8.012131690979004
    6. '
' → logprob: -8.137131690979004
    7. 'next' → logprob: -8.387131690979004
    8. 'def' → logprob: -8.512131690979004
    9. ',' → logprob: -8.887131690979004
    10. '<|end|>' → logprob: -8.887131690979004

Token 315: ' dp' (ID: 21546)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.23228426277637482
    2. '   ' → logprob: -1.6072843074798584
    3. ' return' → logprob: -5.732284069061279
    4. 'result' → logprob: -6.982284069061279
    5. 'initial' → logprob: -6.982284069061279
    6. 'acc' → logprob: -7.982284069061279
    7. 'max' → logprob: -8.107284545898438
    8. 'sum' → logprob: -8.232284545898438
    9. 'ans' → logprob: -9.107284545898438
    10. 'res' → logprob: -9.107284545898438

Token 316: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06203187629580498
    2. '=' → logprob: -2.8120319843292236
    3. '   ' → logprob: -10.687031745910645
    4. '=[' → logprob: -11.062031745910645
    5. '_values' → logprob: -12.187031745910645
    6. ' =[' → logprob: -12.312031745910645
    7. '[' → logprob: -12.437031745910645
    8. ',' → logprob: -12.937031745910645
    9. ' ' → logprob: -13.187031745910645
    10. 'max' → logprob: -13.687031745910645

Token 317: ' [' (ID: 723)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.4004764556884766
    2. '[min' → logprob: -1.6504764556884766
    3. 'min' → logprob: -1.7754764556884766
    4. '[' → logprob: -2.1504764556884766
    5. 'sum' → logprob: -2.4004764556884766
    6. '[max' → logprob: -2.6504764556884766
    7. ' min' → logprob: -3.5254764556884766
    8. ' [' → logprob: -3.9004764556884766
    9. ' max' → logprob: -4.150476455688477
    10. 'list' → logprob: -4.650476455688477

Token 318: '0' (ID: 15)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.8544411063194275
    2. '0' → logprob: -1.1044411659240723
    3. 'min' → logprob: -1.9794411659240723
    4. 'sum' → logprob: -2.7294411659240723
    5. 'next' → logprob: -3.9794411659240723
    6. 'float' → logprob: -4.979441165924072
    7. 'acc' → logprob: -5.354441165924072
    8. '(' → logprob: -5.854441165924072
    9. '-' → logprob: -6.479441165924072
    10. 'x' → logprob: -6.979441165924072

Token 319: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02636254020035267
    2. ',' → logprob: -4.151362419128418
    3. ' ]' → logprob: -5.401362419128418
    4. ' for' → logprob: -5.776362419128418
    5. ']+' → logprob: -7.276362419128418
    6. ' +' → logprob: -7.401362419128418
    7. ' if' → logprob: -7.776362419128418
    8. 'for' → logprob: -8.651362419128418
    9. ')' → logprob: -8.901362419128418
    10. '   ' → logprob: -9.026362419128418

Token 320: ' +' (ID: 659)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.33102017641067505
    2. ',' → logprob: -2.5810201168060303
    3. ' for' → logprob: -2.8310201168060303
    4. 'for' → logprob: -2.9560201168060303
    5. ' +' → logprob: -3.2060201168060303
    6. '   ' → logprob: -3.9560201168060303
    7. ' *' → logprob: -4.706020355224609
    8. '
' → logprob: -4.956020355224609
    9. '+' → logprob: -5.456020355224609
    10. ']+' → logprob: -5.706020355224609

Token 321: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.7426441311836243
    2. '[list' → logprob: -0.7426441311836243
    3. '[' → logprob: -3.1176440715789795
    4. ' list' → logprob: -6.367644309997559
    5. ' [' → logprob: -6.992644309997559
    6. '[-' → logprob: -7.867644309997559
    7. '[min' → logprob: -8.742644309997559
    8. '[max' → logprob: -8.867644309997559
    9. 'sorted' → logprob: -8.992644309997559
    10. '[c' → logprob: -9.867644309997559

Token 322: '(acc' (ID: 82668)
  Prédit: '(acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(acc' → logprob: -4.167648876318708e-05
    2. 'acc' → logprob: -11.000041961669922
    3. '(' → logprob: -11.500041961669922
    4. '(map' → logprob: -11.625041961669922
    5. '(it' → logprob: -13.125041961669922
    6. '(
' → logprob: -13.250041961669922
    7. '(ac' → logprob: -14.500041961669922
    8. '((' → logprob: -14.750041961669922
    9. '(max' → logprob: -15.250041961669922
    10. '(c' → logprob: -15.625041961669922

Token 323: 'umulate' (ID: 134636)
  Prédit: 'umulate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umulate' → logprob: -0.00011594036914175376
    2. 'um' → logprob: -9.375116348266602
    3. 'ulate' → logprob: -10.875116348266602
    4. '(c' → logprob: -12.625116348266602
    5. 'umul' → logprob: -13.000116348266602
    6. '(acc' → logprob: -13.000116348266602
    7. '_values' → logprob: -13.250116348266602
    8. 'om' → logprob: -14.250116348266602
    9. 'cum' → logprob: -14.875116348266602
    10. 'umulative' → logprob: -15.000116348266602

Token 324: '(acc' (ID: 82668)
  Prédit: '(acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(acc' → logprob: -1.1279553291387856e-05
    2. 'acc' → logprob: -11.500011444091797
    3. ' (' → logprob: -14.375011444091797
    4. '(' → logprob: -14.875011444091797
    5. '	acc' → logprob: -16.500011444091797
    6. '(ac' → logprob: -16.750011444091797
    7. '(
' → logprob: -17.125011444091797
    8. '((' → logprob: -17.250011444091797
    9. '   ' → logprob: -18.125011444091797
    10. ' acc' → logprob: -18.250011444091797

Token 325: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -1.4617256056226324e-05
    2. 'values' → logprob: -11.375014305114746
    3. 'al' → logprob: -13.375014305114746
    4. 'ues' → logprob: -14.500014305114746
    5. 'ul' → logprob: -15.250014305114746
    6. '_VALUES' → logprob: -15.625014305114746
    7. 'Values' → logprob: -16.375015258789062
    8. 'um' → logprob: -16.500015258789062
    9. 'ue' → logprob: -16.500015258789062
    10. '(acc' → logprob: -16.625015258789062

Token 326: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0004080315411556512
    2. '))
' → logprob: -8.250408172607422
    3. '()))' → logprob: -9.250408172607422
    4. ',' → logprob: -10.625408172607422
    5. '(' → logprob: -11.625408172607422
    6. ' ))' → logprob: -12.000408172607422
    7. ')))' → logprob: -12.500408172607422
    8. ')' → logprob: -13.375408172607422
    9. '()' → logprob: -13.375408172607422
    10. ' ' → logprob: -13.625408172607422

Token 327: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.028261534869670868
    2. '
' → logprob: -4.028261661529541
    3. ')' → logprob: -5.028261661529541
    4. 'return' → logprob: -6.153261661529541
    5. ' return' → logprob: -7.278261661529541
    6. '[' → logprob: -8.653261184692383
    7. '<|end|>' → logprob: -8.653261184692383
    8. ')
' → logprob: -9.403261184692383
    9. '    
' → logprob: -9.403261184692383
    10. ' ' → logprob: -9.903261184692383

Token 328: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14368806779384613
    2. 'return' (adapté à ' return') → logprob: -2.8936879634857178
    3. '
' → logprob: -3.3936879634857178
    4. ' return' → logprob: -3.5186879634857178
    5. '<|end|>' → logprob: -4.518688201904297
    6. '	return' → logprob: -6.768688201904297
    7. '    
' → logprob: -7.018688201904297
    8. ')' → logprob: -7.268688201904297
    9. '[' → logprob: -7.643688201904297
    10. ' ' → logprob: -8.018688201904297

Token 329: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.018151935189962387
    2. ' dp' → logprob: -4.018151760101318
    3. '[' → logprob: -13.393152236938477
    4. '(dp' → logprob: -15.143152236938477
    5. ' [' → logprob: -15.768152236938477
    6. '	dp' → logprob: -16.518152236938477
    7. '   ' → logprob: -17.018152236938477
    8. '_dp' → logprob: -17.893152236938477
    9. ' ' → logprob: -18.768152236938477
    10. 'list' → logprob: -19.143152236938477

Token 330: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00010306637705070898
    2. '<|end|>' → logprob: -9.875102996826172
    3. 'from' → logprob: -11.125102996826172
    4. '#' → logprob: -11.500102996826172
    5. '
' → logprob: -11.750102996826172
    6. 'for' → logprob: -12.125102996826172
    7. '[' → logprob: -12.750102996826172
    8. ')' → logprob: -13.125102996826172
    9. '```' → logprob: -13.250102996826172
    10. '<|end|>' → logprob: -13.625102996826172

Token 331: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.09076511859893799
    2. '<|end|>' → logprob: -2.4657649993896484
    3. '[' → logprob: -6.965764999389648
    4. '<|end|>' → logprob: -7.840764999389648
    5. '
' → logprob: -8.590764999389648
    6. '```' → logprob: -9.715764999389648
    7. ')' → logprob: -9.715764999389648
    8. '#' → logprob: -9.840764999389648
    9. '[
' → logprob: -10.340764999389648
    10. ' def' → logprob: -10.590764999389648

Token 332: ' zip' (ID: 16216)
  Prédit: ' get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' get' → logprob: -1.2818453311920166
    2. ' update' → logprob: -2.2818453311920166
    3. ' solve' → logprob: -2.2818453311920166
    4. ' process' → logprob: -2.4068453311920166
    5. ' existence' → logprob: -2.4068453311920166
    6. ' dp' → logprob: -3.0318453311920166
    7. 'get' → logprob: -3.5318453311920166
    8. 'exist' → logprob: -3.7818453311920166
    9. ' calculate' → logprob: -3.9068453311920166
    10. ' parse' → logprob: -4.0318450927734375

Token 333: '_rev' (ID: 99394)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05491432547569275
    2. '_' → logprob: -3.1799142360687256
    3. '(*' → logprob: -4.804914474487305
    4. 'def' → logprob: -7.179914474487305
    5. '_with' → logprob: -7.679914474487305
    6. '_long' → logprob: -7.804914474487305
    7. ' (' → logprob: -8.054914474487305
    8. '(zip' → logprob: -8.304914474487305
    9. '_(' → logprob: -8.804914474487305
    10. '(_' → logprob: -9.054914474487305

Token 334: '_cost' (ID: 36820)
  Prédit: '(*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.7777562141418457
    2. '(re' → logprob: -0.9027562141418457
    3. '(' → logprob: -3.1527562141418457
    4. '_rev' → logprob: -3.5277562141418457
    5. '(n' → logprob: -3.9027562141418457
    6. '(list' → logprob: -4.402756214141846
    7. '(zip' → logprob: -5.277756214141846
    8. '(_' → logprob: -5.527756214141846
    9. '_c' → logprob: -5.777756214141846
    10. '(l' → logprob: -6.152756214141846

Token 335: '(re' (ID: 8178)
  Prédit: '(re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(re' → logprob: -0.005243122112005949
    2. '(n' → logprob: -5.630243301391602
    3. '(' → logprob: -6.505243301391602
    4. '():' → logprob: -10.380243301391602
    5. '_rev' → logprob: -10.630243301391602
    6. '(def' → logprob: -11.005243301391602
    7. '(reverse' → logprob: -11.130243301391602
    8. 'rev' → logprob: -11.505243301391602
    9. ' (' → logprob: -11.880243301391602
    10. '(zip' → logprob: -12.005243301391602

Token 336: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -3.6550729419104755e-05
    2. ' v' → logprob: -11.250036239624023
    3. 'verse' → logprob: -12.375036239624023
    4. 'vs' → logprob: -13.062536239624023
    5. '_v' → logprob: -13.062536239624023
    6. '(v' → logprob: -13.250036239624023
    7. '(' → logprob: -13.812536239624023
    8. '```' → logprob: -13.875036239624023
    9. '
' → logprob: -14.250036239624023
    10. 'V' → logprob: -14.437536239624023

Token 337: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.38949111104011536
    2. ',' → logprob: -1.139491081237793
    3. '_,' → logprob: -6.889491081237793
    4. ',c' → logprob: -7.889491081237793
    5. ',
' → logprob: -8.139491081237793
    6. ',_' → logprob: -8.889491081237793
    7. '):
' → logprob: -9.014491081237793
    8. ' ,' → logprob: -9.139491081237793
    9. '_c' → logprob: -9.264491081237793
    10. ',r' → logprob: -9.389491081237793

Token 338: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002434699417790398
    2. ' ,' → logprob: -8.750243186950684
    3. ',
' → logprob: -10.125243186950684
    4. '0' → logprob: -10.625243186950684
    5. ',re' → logprob: -11.750243186950684
    6. '1' → logprob: -12.625243186950684
    7. ',

' → logprob: -13.500243186950684
    8. ',c' → logprob: -13.500243186950684
    9. '   ' → logprob: -14.125243186950684
    10. ',r' → logprob: -14.750243186950684

Token 339: ' cost' (ID: 3097)
  Prédit: 'rev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rev' → logprob: -0.06530065089464188
    2. 'cost' → logprob: -2.815300703048706
    3. ' cost' → logprob: -6.190300464630127
    4. ' rev' → logprob: -6.940300464630127
    5. '_rev' → logprob: -8.940300941467285
    6. '<|end|>' → logprob: -9.815300941467285
    7. 'def' → logprob: -10.315300941467285
    8. ')' → logprob: -10.815300941467285
    9. '_cost' → logprob: -11.065300941467285
    10. '.rev' → logprob: -11.690300941467285

Token 340: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0012648787815123796
    2. ',' → logprob: -6.876265048980713
    3. '1' → logprob: -8.751264572143555
    4. '_' → logprob: -10.626264572143555
    5. '):' → logprob: -11.376264572143555
    6. ')' → logprob: -11.751264572143555
    7. ' ' → logprob: -11.876264572143555
    8. ' ,' → logprob: -12.376264572143555
    9. '_,' → logprob: -12.376264572143555
    10. '),' → logprob: -12.501264572143555

Token 341: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004146780353039503
    2. '):
' → logprob: -5.754146575927734
    3. '):' → logprob: -7.004146575927734
    4. '   ' → logprob: -10.754146575927734
    5. ',
' → logprob: -10.754146575927734
    6. ' ,' → logprob: -12.004146575927734
    7. '0' → logprob: -12.129146575927734
    8. ')' → logprob: -13.004146575927734
    9. '):
' → logprob: -13.629146575927734
    10. '):

' → logprob: -14.629146575927734

Token 342: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04544372111558914
    2. 'return' → logprob: -3.5454437732696533
    3. ' return' → logprob: -4.170443534851074
    4. 'zip' → logprob: -9.420443534851074
    5. 'def' → logprob: -10.920443534851074
    6. '	return' → logprob: -11.295443534851074
    7. ' zip' → logprob: -12.170443534851074
    8. '```' → logprob: -12.920443534851074
    9. '(zip' → logprob: -13.045443534851074
    10. '    
' → logprob: -13.420443534851074

Token 343: ' for' (ID: 395)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0005773392622359097
    2. 'zip' → logprob: -7.750577449798584
    3. ' return' → logprob: -9.375576972961426
    4. '[(' → logprob: -10.750576972961426
    5. 'for' (adapté à ' for') → logprob: -11.000576972961426
    6. 'list' → logprob: -11.375576972961426
    7. '   ' → logprob: -11.625576972961426
    8. 'yield' → logprob: -13.750576972961426
    9. 'def' → logprob: -14.000576972961426
    10. '
' → logprob: -14.875576972961426

Token 344: ' x' (ID: 1215)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.6878513097763062
    2. 'c' → logprob: -1.9378513097763062
    3. 'x' → logprob: -2.1878514289855957
    4. 'y' → logprob: -2.3128514289855957
    5. ' c' → logprob: -2.4378514289855957
    6. ' y' → logprob: -2.4378514289855957
    7. ' r' → logprob: -2.4378514289855957
    8. 'rev' → logprob: -2.4378514289855957
    9. ' x' → logprob: -3.4378514289855957
    10. 'i' → logprob: -3.5628514289855957

Token 345: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06197138875722885
    2. '0' → logprob: -2.936971426010132
    3. ',y' → logprob: -5.061971187591553
    4. ' in' → logprob: -8.061971664428711
    5. ' ,' → logprob: -8.936971664428711
    6. 'y' → logprob: -9.561971664428711
    7. ',c' → logprob: -9.811971664428711
    8. '1' → logprob: -10.436971664428711
    9. ',x' → logprob: -10.811971664428711
    10. '_,' → logprob: -11.061971664428711

Token 346: ' cw' (ID: 72592)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.665363073348999
    2. 'y' → logprob: -1.165363073348999
    3. ' y' → logprob: -2.415363073348999
    4. ' c' → logprob: -2.540363073348999
    5. 'cost' → logprob: -5.915363311767578
    6. ' cost' → logprob: -8.102863311767578
    7. 'x' → logprob: -8.165363311767578
    8. 'cs' → logprob: -8.352863311767578
    9. 'v' → logprob: -8.477863311767578
    10. 'z' → logprob: -8.540363311767578

Token 347: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0024752616882324
    2. ' in' → logprob: -1.3774752616882324
    3. ',' → logprob: -1.5024752616882324
    4. 'in' → logprob: -1.8774752616882324
    5. '1' → logprob: -5.502475261688232
    6. '_' → logprob: -8.25247573852539
    7. 'x' → logprob: -8.50247573852539
    8. 's' → logprob: -9.00247573852539
    9. ' ' → logprob: -9.00247573852539
    10. '_in' → logprob: -9.62747573852539

Token 348: ',' (ID: 11)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5075953602790833
    2. ' in' → logprob: -1.1325953006744385
    3. '0' → logprob: -2.7575953006744385
    4. ',' → logprob: -4.632595539093018
    5. '1' → logprob: -6.507595539093018
    6. 'n' → logprob: -8.25759506225586
    7. 'x' → logprob: -8.50759506225586
    8. '_' → logprob: -8.63259506225586
    9. 's' → logprob: -8.75759506225586
    10. ' ' → logprob: -9.13259506225586

Token 349: ' cw' (ID: 72592)
  Prédit: 'cw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cw' → logprob: -0.3512558937072754
    2. 'c' → logprob: -2.9762558937072754
    3. ' cw' → logprob: -2.9762558937072754
    4. 'cy' → logprob: -3.4762558937072754
    5. 'cx' → logprob: -3.7262558937072754
    6. 'cc' → logprob: -3.8512558937072754
    7. 'w' → logprob: -3.8512558937072754
    8. 'y' → logprob: -3.9762558937072754
    9. 'cz' → logprob: -4.101255893707275
    10. 'rev' → logprob: -5.101255893707275

Token 350: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.20582599937915802
    2. '1' → logprob: -2.0808260440826416
    3. 'in' → logprob: -3.4558260440826416
    4. ' in' → logprob: -3.8308260440826416
    5. ',' → logprob: -5.2058258056640625
    6. 'x' → logprob: -7.5808258056640625
    7. 'w' → logprob: -7.8308258056640625
    8. 'n' → logprob: -7.8308258056640625
    9. '_' → logprob: -8.455825805664062
    10. 'o' → logprob: -8.955825805664062

Token 351: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016147566959261894
    2. 'in' → logprob: -4.391147613525391
    3. ',' → logprob: -5.641147613525391
    4. '0' → logprob: -10.14114761352539
    5. ' ' → logprob: -11.64114761352539
    6. 'x' → logprob: -11.89114761352539
    7. 's' → logprob: -12.14114761352539
    8. '   ' → logprob: -12.39114761352539
    9. '1' → logprob: -12.39114761352539
    10. 'n' → logprob: -12.76614761352539

Token 352: ' zip' (ID: 16216)
  Prédit: 'zip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zip' → logprob: -0.0040785204619169235
    2. ' zip' → logprob: -5.504078388214111
    3. '(zip' → logprob: -16.754077911376953
    4. ' ' → logprob: -17.379077911376953
    5. '   ' → logprob: -18.254077911376953
    6. '
' → logprob: -18.629077911376953
    7. '  ' → logprob: -18.754077911376953
    8. '.zip' → logprob: -19.004077911376953
    9. 'enumer' → logprob: -19.504077911376953
    10. '_zip' → logprob: -19.629077911376953

Token 353: '(re' (ID: 8178)
  Prédit: '(re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(re' → logprob: -7.696077227592468e-05
    2. '(range' → logprob: -10.375077247619629
    3. '(' → logprob: -10.625077247619629
    4. '(*' → logprob: -11.375077247619629
    5. '_rev' → logprob: -12.750077247619629
    6. 'rev' → logprob: -13.000077247619629
    7. '(reverse' → logprob: -13.250077247619629
    8. ' (' → logprob: -13.750077247619629
    9. '(
' → logprob: -14.000077247619629
    10. '(zip' → logprob: -15.375077247619629

Token 354: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.00013250234769657254
    2. 'rev' → logprob: -10.00013256072998
    3. '0' → logprob: -10.37513256072998
    4. '_rev' → logprob: -10.62513256072998
    5. '(v' → logprob: -11.75013256072998
    6. '_v' → logprob: -12.25013256072998
    7. 'ev' → logprob: -12.37513256072998
    8. '(re' → logprob: -13.00013256072998
    9. 'f' → logprob: -13.12513256072998
    10. 'vs' → logprob: -13.75013256072998

Token 355: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008642347529530525
    2. '(' → logprob: -5.758642196655273
    3. 'rev' → logprob: -6.133642196655273
    4. '(re' → logprob: -6.383642196655273
    5. '[' → logprob: -6.633642196655273
    6. '_rev' → logprob: -9.258642196655273
    7. ',' → logprob: -11.008642196655273
    8. 'cost' → logprob: -11.196142196655273
    9. ' ' → logprob: -11.321142196655273
    10. '_' → logprob: -11.321142196655273

Token 356: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0028035787399858236
    2. '[' → logprob: -6.002803802490234
    3. ' ,' → logprob: -8.502803802490234
    4. '   ' → logprob: -9.627803802490234
    5. ',c' → logprob: -10.752803802490234
    6. '0' → logprob: -11.377803802490234
    7. '  ' → logprob: -12.877803802490234
    8. '(' → logprob: -12.877803802490234
    9. ')' → logprob: -13.002803802490234
    10. '[::-' → logprob: -13.002803802490234

Token 357: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.06406935304403305
    2. ' cost' → logprob: -2.8140692710876465
    3. 'rev' → logprob: -6.1890692710876465
    4. ' rev' → logprob: -11.689069747924805
    5. 're' → logprob: -11.814069747924805
    6. '   ' → logprob: -12.064069747924805
    7. '[' → logprob: -12.314069747924805
    8. '(cost' → logprob: -12.689069747924805
    9. ' ' → logprob: -12.814069747924805
    10. 'range' → logprob: -12.939069747924805

Token 358: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01521390862762928
    2. ',' → logprob: -4.890213966369629
    3. '[' → logprob: -4.890213966369629
    4. ' ,' → logprob: -10.265213966369629
    5. ' ' → logprob: -11.765213966369629
    6. 's' → logprob: -12.640213966369629
    7. ')' → logprob: -13.577713966369629
    8. '   ' → logprob: -13.577713966369629
    9. ',
' → logprob: -13.827713966369629
    10. '
' → logprob: -13.827713966369629

Token 359: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011517668142914772
    2. '):' → logprob: -4.886517524719238
    3. '[' → logprob: -6.511517524719238
    4. '):
' → logprob: -6.886517524719238
    5. '   ' → logprob: -7.761517524719238
    6. ' ,' → logprob: -7.886517524719238
    7. ',x' → logprob: -8.636517524719238
    8. '[::-' → logprob: -9.011517524719238
    9. '0' → logprob: -9.761517524719238
    10. '       ' → logprob: -10.136517524719238

Token 360: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.030029436573386192
    2. ' cost' → logprob: -3.530029535293579
    3. 'rev' → logprob: -8.280029296875
    4. 'zip' → logprob: -11.780029296875
    5. '   ' → logprob: -12.155029296875
    6. ')' → logprob: -12.405029296875
    7. 're' → logprob: -12.655029296875
    8. '(cost' → logprob: -13.780029296875
    9. ' ' → logprob: -14.280029296875
    10. '_cost' → logprob: -14.780029296875

Token 361: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0011877299984917045
    2. '0' → logprob: -6.751187801361084
    3. '[' → logprob: -12.501187324523926
    4. '):' → logprob: -12.501187324523926
    5. ' ' → logprob: -12.751187324523926
    6. '):
' → logprob: -12.751187324523926
    7. ')' → logprob: -13.001187324523926
    8. '-' → logprob: -14.751187324523926
    9. '_' → logprob: -15.001187324523926
    10. ',' → logprob: -15.876187324523926

Token 362: '[' (ID: 58)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.12709377706050873
    2. '):
' → logprob: -2.12709379196167
    3. '0' → logprob: -9.252093315124512
    4. '):
' → logprob: -10.377093315124512
    5. '[' → logprob: -10.627093315124512
    6. ' ):' → logprob: -12.877093315124512
    7. ':' → logprob: -13.377093315124512
    8. '[::-' → logprob: -13.377093315124512
    9. '1' → logprob: -13.502093315124512
    10. '   ' → logprob: -13.627093315124512

Token 363: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.058368783444166183
    2. '1' → logprob: -3.183368682861328
    3. ']):' → logprob: -4.683368682861328
    4. '-' → logprob: -5.933368682861328
    5. '):' → logprob: -6.558368682861328
    6. ' ' → logprob: -7.058368682861328
    7. ']):
' → logprob: -8.308368682861328
    8. '])' → logprob: -9.058368682861328
    9. ':' → logprob: -9.058368682861328
    10. '[' → logprob: -9.183368682861328

Token 364: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.016156483441591263
    2. ']):' → logprob: -4.6411566734313965
    3. ':]' → logprob: -5.2661566734313965
    4. ']:' → logprob: -7.2661566734313965
    5. '):' → logprob: -8.266156196594238
    6. ':],' → logprob: -8.516156196594238
    7. ']' → logprob: -10.891156196594238
    8. ',' → logprob: -11.141156196594238
    9. '],' → logprob: -12.141156196594238
    10. '-' → logprob: -12.391156196594238

Token 365: ']):
' (ID: 51989)
  Prédit: ']):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):' → logprob: -0.007458376698195934
    2. ']' → logprob: -5.382458209991455
    3. ']):
' → logprob: -6.882458209991455
    4. ' ]' → logprob: -6.882458209991455
    5. '],' → logprob: -7.507458209991455
    6. ',' → logprob: -9.632458686828613
    7. ']:' → logprob: -9.632458686828613
    8. '])' → logprob: -10.257458686828613
    9. '1' → logprob: -10.382458686828613
    10. ' ' → logprob: -11.882458686828613

Token 366: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4377939999103546
    2. ':' → logprob: -1.4377939701080322
    3. '   ' → logprob: -2.4377939701080322
    4. ':
' → logprob: -4.562794208526611
    5. ',' → logprob: -4.687794208526611
    6. '):
' → logprob: -5.312794208526611
    7. '):' → logprob: -6.437794208526611
    8. '        
' → logprob: -7.312794208526611
    9. '    ' → logprob: -7.562794208526611
    10. '
' → logprob: -7.687794208526611

Token 367: ' yield' (ID: 14376)
  Prédit: 'yield'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yield' (adapté à ' yield') → logprob: -0.8065159916877747
    2. '       ' → logprob: -1.3065159320831299
    3. ' yield' → logprob: -1.3065159320831299
    4. '   ' → logprob: -5.181516170501709
    5. '	yield' → logprob: -5.181516170501709
    6. 'if' → logprob: -8.18151569366455
    7. '
' → logprob: -8.68151569366455
    8. '        
' → logprob: -9.55651569366455
    9. 'y' → logprob: -9.55651569366455
    10. '           ' → logprob: -9.55651569366455

Token 368: ' x' (ID: 1215)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.5415460467338562
    2. 'x' → logprob: -1.041546106338501
    3. '[x' → logprob: -4.166545867919922
    4. 'sum' → logprob: -4.541545867919922
    5. 'zip' → logprob: -4.791545867919922
    6. '(sum' → logprob: -5.541545867919922
    7. '(zip' → logprob: -5.666545867919922
    8. '([' → logprob: -5.666545867919922
    9. '(c' → logprob: -5.791545867919922
    10. '[(' → logprob: -5.916545867919922

Token 369: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005071875639259815
    2. '<|end|>' → logprob: -6.005071640014648
    3. '[' → logprob: -6.505071640014648
    4. ' ,' → logprob: -7.880071640014648
    5. '<|end|>' → logprob: -8.255071640014648
    6. ',
' → logprob: -8.880071640014648
    7. ',x' → logprob: -9.630071640014648
    8. ',y' → logprob: -10.380071640014648
    9. ',index' → logprob: -10.505071640014648
    10. ',n' → logprob: -10.505071640014648

Token 370: ' cw' (ID: 72592)
  Prédit: 'cw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cw' → logprob: -0.048315245658159256
    2. '[c' → logprob: -3.1733152866363525
    3. ' cw' → logprob: -6.173315048217773
    4. '[x' → logprob: -7.173315048217773
    5. '[' → logprob: -7.673315048217773
    6. ' [' → logprob: -8.048315048217773
    7. '[
' → logprob: -8.173315048217773
    8. 'c' → logprob: -8.298315048217773
    9. '[min' → logprob: -8.673315048217773
    10. 'list' → logprob: -8.798315048217773

Token 371: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11540286988019943
    2. '1' → logprob: -2.240402936935425
    3. 'w' → logprob: -5.990402698516846
    4. '_' → logprob: -10.990403175354004
    5. ',' → logprob: -11.240403175354004
    6. '[' → logprob: -11.740403175354004
    7. '01' → logprob: -11.740403175354004
    8. '   ' → logprob: -11.990403175354004
    9. ' ' → logprob: -12.240403175354004
    10. 'x' → logprob: -12.990403175354004

Token 372: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005753391422331333
    2. ' ,' → logprob: -5.630753517150879
    3. '[' → logprob: -7.255753517150879
    4. '<|end|>' → logprob: -7.630753517150879
    5. '0' → logprob: -8.130753517150879
    6. '1' → logprob: -8.630753517150879
    7. '_,' → logprob: -8.755753517150879
    8. ',
' → logprob: -9.755753517150879
    9. ',x' → logprob: -9.755753517150879
    10. '
' → logprob: -10.630753517150879

Token 373: ' cw' (ID: 72592)
  Prédit: 'cw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cw' → logprob: -0.0031790214125066996
    2. ' cw' → logprob: -5.75317907333374
    3. '   ' → logprob: -14.253178596496582
    4. ' ' → logprob: -15.003178596496582
    5. 'c' → logprob: -16.0031795501709
    6. 'cow' → logprob: -16.8781795501709
    7. 'cwd' → logprob: -17.1281795501709
    8. 'w' → logprob: -17.2531795501709
    9. '  ' → logprob: -17.3781795501709
    10. '
' → logprob: -17.5031795501709

Token 374: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012166214582975954
    2. 'w' → logprob: -9.6251220703125
    3. '0' → logprob: -10.2501220703125
    4. '[' → logprob: -11.0001220703125
    5. ' ' → logprob: -13.2501220703125
    6. '<|end|>' → logprob: -14.0001220703125
    7. '   ' → logprob: -14.8751220703125
    8. 'x' → logprob: -16.2501220703125
    9. '<|end|>' → logprob: -16.5001220703125
    10. '...' → logprob: -16.7501220703125

Token 375: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4780391454696655
    2. '<|end|>' → logprob: -1.1030391454696655
    3. ':' → logprob: -3.478039264678955
    4. ',' → logprob: -4.853039264678955
    5. '<|end|>' → logprob: -5.853039264678955
    6. '
' → logprob: -6.228039264678955
    7. ')' → logprob: -6.728039264678955
    8. '[' → logprob: -7.103039264678955
    9. ':
' → logprob: -7.478039264678955
    10. '   ' → logprob: -8.228038787841797

Token 376: 'def' (ID: 1314)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3200724422931671
    2. 'def' → logprob: -1.3200724124908447
    3. '<|end|>' → logprob: -6.070072650909424
    4. ':def' → logprob: -6.445072650909424
    5. ',' → logprob: -7.070072650909424
    6. ':
' → logprob: -7.320072650909424
    7. '[' → logprob: -7.820072650909424
    8. '```' → logprob: -8.695072174072266
    9. '
' → logprob: -8.945072174072266
    10. '.' → logprob: -8.945072174072266

Token 377: ' zip' (ID: 16216)
  Prédit: 'exist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'exist' → logprob: -0.42024537920951843
    2. ' existence' → logprob: -3.295245409011841
    3. 'zip' → logprob: -3.295245409011841
    4. 'process' → logprob: -3.420245409011841
    5. 'combine' → logprob: -3.545245409011841
    6. 'dp' → logprob: -3.920245409011841
    7. 'update' → logprob: -4.295245170593262
    8. 'merge' → logprob: -4.420245170593262
    9. 'calculate' → logprob: -4.545245170593262
    10. ' process' → logprob: -4.670245170593262

Token 378: '_rev' (ID: 99394)
  Prédit: '_rev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rev' → logprob: -0.07191184163093567
    2. '_' → logprob: -3.3219118118286133
    3. '(' → logprob: -3.5719118118286133
    4. '_(' → logprob: -5.571911811828613
    5. '(_' → logprob: -7.321911811828613
    6. '_re' → logprob: -8.571911811828613
    7. '_reverse' → logprob: -9.321911811828613
    8. '('_' → logprob: -9.696911811828613
    9. '_REV' → logprob: -9.821911811828613
    10. 'rev' → logprob: -9.946911811828613

Token 379: '_cost' (ID: 36820)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6083380579948425
    2. '_cost' → logprob: -0.9833380579948425
    3. '(cost' → logprob: -3.1083381175994873
    4. '(' → logprob: -3.8583381175994873
    5. 'cost' → logprob: -4.983337879180908
    6. '(n' → logprob: -5.983337879180908
    7. '_rev' → logprob: -6.608337879180908
    8. '_' → logprob: -7.233337879180908
    9. '_c' → logprob: -7.233337879180908
    10. '(re' → logprob: -7.483337879180908

Token 380: '_b' (ID: 1535)
  Prédit: '(re'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(re' → logprob: -0.0020641377195715904
    2. '0' → logprob: -6.877064228057861
    3. '(' → logprob: -7.377064228057861
    4. '_rev' → logprob: -9.002063751220703
    5. '(reverse' → logprob: -9.252063751220703
    6. '(n' → logprob: -9.252063751220703
    7. '1' → logprob: -10.877063751220703
    8. '2' → logprob: -10.877063751220703
    9. ' (' → logprob: -11.752063751220703
    10. '_reverse' → logprob: -12.127063751220703

Token 381: '(re' (ID: 8178)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1228884905576706
    2. '(re' → logprob: -2.8728885650634766
    3. '(' → logprob: -3.3728885650634766
    4. '_rev' → logprob: -4.872888565063477
    5. 'oth' → logprob: -5.497888565063477
    6. 'y' → logprob: -6.372888565063477
    7. 'etween' → logprob: -6.497888565063477
    8. 'rev' → logprob: -6.622888565063477
    9. 'atch' → logprob: -6.747888565063477
    10. '_' → logprob: -6.747888565063477

Token 382: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.07193934917449951
    2. '0' → logprob: -2.696939468383789
    3. 'rev' → logprob: -6.571939468383789
    4. 'ev' → logprob: -8.446939468383789
    5. '_rev' → logprob: -9.446939468383789
    6. '(' → logprob: -9.759439468383789
    7. ' rev' → logprob: -9.759439468383789
    8. 'vs' → logprob: -10.384439468383789
    9. '```' → logprob: -11.071939468383789
    10. ' v' → logprob: -11.134439468383789

Token 383: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009478387422859669
    2. ',' → logprob: -4.759478569030762
    3. 'rev' → logprob: -7.884478569030762
    4. '(' → logprob: -9.009478569030762
    5. '[' → logprob: -9.634478569030762
    6. 'b' → logprob: -9.884478569030762
    7. '_rev' → logprob: -10.009478569030762
    8. '1' → logprob: -10.009478569030762
    9. '   ' → logprob: -10.634478569030762
    10. ',b' → logprob: -10.759478569030762

Token 384: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010306637705070898
    2. ' ,' → logprob: -9.875102996826172
    3. 'def' → logprob: -11.000102996826172
    4. ',b' → logprob: -11.500102996826172
    5. '[' → logprob: -12.000102996826172
    6. '):
' → logprob: -12.250102996826172
    7. '):' → logprob: -12.625102996826172
    8. ')' → logprob: -13.375102996826172
    9. ',c' → logprob: -13.875102996826172
    10. '0' → logprob: -14.000102996826172

Token 385: ' cost' (ID: 3097)
  Prédit: ' cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cost' → logprob: -0.6461447477340698
    2. 'cost' → logprob: -0.8961447477340698
    3. 'rev' → logprob: -2.7711448669433594
    4. ' rev' → logprob: -5.521144866943359
    5. '   ' → logprob: -8.02114486694336
    6. ',' → logprob: -9.14614486694336
    7. 'def' → logprob: -9.39614486694336
    8. '    ' → logprob: -9.52114486694336
    9. '_cost' → logprob: -9.52114486694336
    10. ' ' → logprob: -9.77114486694336

Token 386: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002813909435644746
    2. ',' → logprob: -6.002813816070557
    3. '0' → logprob: -8.627814292907715
    4. '):
' → logprob: -9.877814292907715
    5. 'def' → logprob: -10.127814292907715
    6. '):' → logprob: -11.127814292907715
    7. '   ' → logprob: -11.127814292907715
    8. ')' → logprob: -11.502814292907715
    9. '[' → logprob: -11.627814292907715
    10. ' ' → logprob: -11.752814292907715

Token 387: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02856685221195221
    2. '):
' → logprob: -4.153566837310791
    3. '):' → logprob: -4.403566837310791
    4. '   ' → logprob: -9.65356731414795
    5. ' ,' → logprob: -10.15356731414795
    6. ',re' → logprob: -10.15356731414795
    7. '):
' → logprob: -10.90356731414795
    8. ')' → logprob: -10.90356731414795
    9. ',b' → logprob: -11.77856731414795
    10. 'rev' → logprob: -11.90356731414795

Token 388: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01626204140484333
    2. '   ' → logprob: -4.516262054443359
    3. 'for' → logprob: -5.766262054443359
    4. ' def' → logprob: -6.766262054443359
    5. ' for' → logprob: -7.016262054443359
    6. '```' → logprob: -10.89126205444336
    7. '
' → logprob: -14.76626205444336
    8. 'from' → logprob: -14.89126205444336
    9. ' ' → logprob: -15.14126205444336
    10. ')' → logprob: -16.39126205444336

Token 389: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.002703112317249179
    2. '   ' → logprob: -6.1277031898498535
    3. 'def' → logprob: -8.002702713012695
    4. ' for' → logprob: -8.752702713012695
    5. 'return' → logprob: -10.877702713012695
    6. 'from' → logprob: -12.127702713012695
    7. '
' → logprob: -14.877702713012695
    8. 'zip' → logprob: -15.502702713012695
    9. '	for' → logprob: -16.127702713012695
    10. 'import' → logprob: -16.502702713012695

Token 390: ' b' (ID: 287)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.09370169043540955
    2. ' x' → logprob: -2.4687016010284424
    3. 'y' → logprob: -6.7187018394470215
    4. 'rev' → logprob: -6.9687018394470215
    5. ' y' → logprob: -7.4687018394470215
    6. 'i' → logprob: -7.7187018394470215
    7. 'b' → logprob: -7.9687018394470215
    8. '(x' → logprob: -8.093701362609863
    9. 'c' → logprob: -8.718701362609863
    10. ' i' → logprob: -9.218701362609863

Token 391: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.298656165599823
    2. '0' → logprob: -2.2986562252044678
    3. '_w' → logprob: -3.1736562252044678
    4. 'x' → logprob: -3.4236562252044678
    5. '_x' → logprob: -3.9236562252044678
    6. 'w' → logprob: -3.9236562252044678
    7. '_rev' → logprob: -4.548655986785889
    8. '1' → logprob: -4.673655986785889
    9. '_idx' → logprob: -5.423655986785889
    10. '_' → logprob: -5.423655986785889

Token 392: ' (' (ID: 350)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.2269672304391861
    2. 'cw' → logprob: -2.1019673347473145
    3. 'x' → logprob: -3.6019673347473145
    4. ' c' → logprob: -4.1019673347473145
    5. ' cw' → logprob: -4.7269673347473145
    6. '(c' → logprob: -4.7269673347473145
    7. 'b' → logprob: -5.6019673347473145
    8. 'bw' → logprob: -5.7269673347473145
    9. '(x' → logprob: -5.9769673347473145
    10. 'rev' → logprob: -6.1019673347473145

Token 393: 'y' (ID: 88)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.16476067900657654
    2. 'rev' → logprob: -2.5397605895996094
    3. 'y' → logprob: -3.6647605895996094
    4. 'cw' → logprob: -3.9147605895996094
    5. 'b' → logprob: -4.039760589599609
    6. 'c' → logprob: -5.414760589599609
    7. '(x' → logprob: -6.539760589599609
    8. 'w' → logprob: -7.289760589599609
    9. 'bw' → logprob: -7.664760589599609
    10. 'a' → logprob: -7.664760589599609

Token 394: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010600050911307335
    2. ')' → logprob: -5.5106000900268555
    3. '),' → logprob: -5.7606000900268555
    4. 'b' → logprob: -6.8856000900268555
    5. ',b' → logprob: -7.5106000900268555
    6. ' ,' → logprob: -7.8856000900268555
    7. 'rev' → logprob: -7.8856000900268555
    8. '[' → logprob: -8.635600090026855
    9. '1' → logprob: -8.760600090026855
    10. '0' → logprob: -8.760600090026855

Token 395: ' cb' (ID: 17799)
  Prédit: 'cw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cw' → logprob: -0.29557937383651733
    2. ' cw' → logprob: -1.420579433441162
    3. 'c' → logprob: -4.545579433441162
    4. ' c' → logprob: -6.295579433441162
    5. ' ' → logprob: -8.420578956604004
    6. 'x' → logprob: -8.545578956604004
    7. 'cost' → logprob: -8.545578956604004
    8. 'bw' → logprob: -8.795578956604004
    9. 'b' → logprob: -9.045578956604004
    10. 'cb' → logprob: -9.295578956604004

Token 396: '0' (ID: 15)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.1738097369670868
    2. ')' → logprob: -1.9238097667694092
    3. ',' → logprob: -4.79880952835083
    4. '0' → logprob: -5.29880952835083
    5. '),(' → logprob: -9.173810005187988
    6. '1' → logprob: -9.423810005187988
    7. 'w' → logprob: -10.673810005187988
    8. 'b' → logprob: -10.673810005187988
    9. '[' → logprob: -12.048810005187988
    10. '_' → logprob: -12.673810005187988

Token 397: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1640128493309021
    2. '),' → logprob: -1.9140129089355469
    3. ')' → logprob: -5.789012908935547
    4. ' ,' → logprob: -7.664012908935547
    5. 'b' → logprob: -9.664012908935547
    6. ' ),' → logprob: -9.914012908935547
    7. '   ' → logprob: -10.414012908935547
    8. ',c' → logprob: -10.539012908935547
    9. '),(' → logprob: -10.789012908935547
    10. '0' → logprob: -11.789012908935547

Token 398: ' cb' (ID: 17799)
  Prédit: 'cb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cb' → logprob: -0.0007204149151220918
    2. ' cb' → logprob: -7.375720500946045
    3. 'b' → logprob: -10.500720024108887
    4. 'cw' → logprob: -10.750720024108887
    5. '	cb' → logprob: -10.750720024108887
    6. 'y' → logprob: -11.125720024108887
    7. '(cb' → logprob: -13.250720024108887
    8. ' ' → logprob: -13.375720024108887
    9. '_cb' → logprob: -13.500720024108887
    10. ' y' → logprob: -14.000720024108887

Token 399: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013004729989916086
    2. '0' → logprob: -7.00130033493042
    3. ')' → logprob: -8.626300811767578
    4. ',' → logprob: -8.876300811767578
    5. '   ' → logprob: -10.251300811767578
    6. '),' → logprob: -10.751300811767578
    7. '[' → logprob: -12.251300811767578
    8. ' ' → logprob: -12.501300811767578
    9. '  ' → logprob: -14.376300811767578
    10. '_' → logprob: -14.751300811767578

Token 400: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002631238894537091
    2. 'in' → logprob: -9.125263214111328
    3. ' )' → logprob: -9.125263214111328
    4. '),' → logprob: -10.750263214111328
    5. ' in' → logprob: -11.000263214111328
    6. 'b' → logprob: -13.250263214111328
    7. '   ' → logprob: -13.500263214111328
    8. ',' → logprob: -13.875263214111328
    9. '  ' → logprob: -13.875263214111328
    10. ' ' → logprob: -14.375263214111328

Token 401: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03373156860470772
    2. 'in' → logprob: -3.408731460571289
    3. ')' → logprob: -9.783731460571289
    4. ',' → logprob: -10.783731460571289
    5. 'b' → logprob: -13.408731460571289
    6. ' ' → logprob: -13.533731460571289
    7. '   ' → logprob: -14.408731460571289
    8. '1' → logprob: -14.408731460571289
    9. '_in' → logprob: -14.408731460571289
    10. 's' → logprob: -14.533731460571289

Token 402: ' enumerate' (ID: 29671)
  Prédit: ' zip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' zip' → logprob: -0.8374163508415222
    2. ' enumerate' → logprob: -1.212416410446167
    3. 'zip' → logprob: -1.837416410446167
    4. 'enumer' → logprob: -2.212416410446167
    5. 'in' → logprob: -8.087416648864746
    6. 'b' → logprob: -8.462416648864746
    7. '   ' → logprob: -9.462416648864746
    8. ' in' → logprob: -9.462416648864746
    9. ',' → logprob: -9.962416648864746
    10. '
' → logprob: -10.087416648864746

Token 403: '(zip' (ID: 87520)
  Prédit: 'zip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zip' → logprob: -0.38941675424575806
    2. '(zip' → logprob: -1.1394166946411133
    3. ' zip' → logprob: -6.014416694641113
    4. 'rev' → logprob: -9.389416694641113
    5. 'enumer' → logprob: -12.139416694641113
    6. '(' → logprob: -12.639416694641113
    7. '(re' → logprob: -12.639416694641113
    8. 're' → logprob: -13.264416694641113
    9. 'reverse' → logprob: -14.264416694641113
    10. '
' → logprob: -14.889416694641113

Token 404: '(re' (ID: 8178)
  Prédit: '(re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(re' → logprob: -0.03009686805307865
    2. 'rev' → logprob: -3.5300967693328857
    3. '_rev' → logprob: -8.905097007751465
    4. ' (' → logprob: -9.780097007751465
    5. ' rev' → logprob: -10.405097007751465
    6. '(zip' → logprob: -10.655097007751465
    7. '(' → logprob: -10.905097007751465
    8. '(
' → logprob: -11.030097007751465
    9. '.rev' → logprob: -11.155097007751465
    10. '   ' → logprob: -11.280097007751465

Token 405: 'v' (ID: 85)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07045672833919525
    2. 'v' → logprob: -2.6954567432403564
    3. 'ev' → logprob: -8.820456504821777
    4. '_rev' → logprob: -8.945456504821777
    5. 'rev' → logprob: -9.320456504821777
    6. '(' → logprob: -10.195456504821777
    7. '[' → logprob: -10.945456504821777
    8. '(v' → logprob: -11.195456504821777
    9. '
' → logprob: -11.570456504821777
    10. '_v' → logprob: -11.695456504821777

Token 406: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00024084746837615967
    2. '0' → logprob: -8.75024127960205
    3. '[' → logprob: -9.75024127960205
    4. '(' → logprob: -11.87524127960205
    5. ')' → logprob: -12.37524127960205
    6. ' ' → logprob: -12.93774127960205
    7. '
' → logprob: -13.75024127960205
    8. ',' → logprob: -13.75024127960205
    9. 'b' → logprob: -14.06274127960205
    10. '   ' → logprob: -14.06274127960205

Token 407: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000953502138145268
    2. '   ' → logprob: -7.375953674316406
    3. '[' → logprob: -8.750953674316406
    4. ' ,' → logprob: -9.750953674316406
    5. ',b' → logprob: -10.625953674316406
    6. '  ' → logprob: -11.000953674316406
    7. '(re' → logprob: -11.250953674316406
    8. ',re' → logprob: -11.625953674316406
    9. '       ' → logprob: -11.875953674316406
    10. '[b' → logprob: -12.000953674316406

Token 408: ' cost' (ID: 3097)
  Prédit: ' cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cost' → logprob: -0.4145417809486389
    2. ' zip' → logprob: -1.5395417213439941
    3. 'cost' → logprob: -2.414541721343994
    4. 'zip' → logprob: -3.789541721343994
    5. 'rev' → logprob: -5.289541721343994
    6. ' rev' → logprob: -5.789541721343994
    7. '(cost' → logprob: -7.539541721343994
    8. '[(' → logprob: -7.664541721343994
    9. '    ' → logprob: -7.789541721343994
    10. ' [(' → logprob: -7.977041721343994

Token 409: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0492795966565609
    2. ',' → logprob: -3.6742796897888184
    3. '0' → logprob: -4.049279689788818
    4. ' ' → logprob: -6.174279689788818
    5. '[' → logprob: -6.299279689788818
    6. 'b' → logprob: -7.549279689788818
    7. '[b' → logprob: -8.92427921295166
    8. 'cost' → logprob: -9.17427921295166
    9. ',b' → logprob: -9.36177921295166
    10. '   ' → logprob: -9.61177921295166

Token 410: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009274671785533428
    2. ' ,' → logprob: -5.634274482727051
    3. '[' → logprob: -5.759274482727051
    4. '   ' → logprob: -6.634274482727051
    5. ',b' → logprob: -7.634274482727051
    6. '[:-' → logprob: -8.25927448272705
    7. '  ' → logprob: -9.25927448272705
    8. '    ' → logprob: -9.50927448272705
    9. ')):
' → logprob: -10.25927448272705
    10. ')):' → logprob: -10.50927448272705

Token 411: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.02329520508646965
    2. ' cost' → logprob: -3.7732951641082764
    3. '   ' → logprob: -10.773295402526855
    4. '    ' → logprob: -11.148295402526855
    5. '  ' → logprob: -12.648295402526855
    6. ' ' → logprob: -12.648295402526855
    7. '     ' → logprob: -12.898295402526855
    8. '      ' → logprob: -13.523295402526855
    9. '(cost' → logprob: -14.023295402526855
    10. '       ' → logprob: -14.648295402526855

Token 412: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004768191836774349
    2. '[' → logprob: -5.379768371582031
    3. ' ' → logprob: -9.504768371582031
    4. '(' → logprob: -10.504768371582031
    5. '0' → logprob: -10.629768371582031
    6. '[:-' → logprob: -12.004768371582031
    7. ')[' → logprob: -13.379768371582031
    8. '=' → logprob: -13.442268371582031
    9. ' [' → logprob: -13.442268371582031
    10. '   ' → logprob: -13.629768371582031

Token 413: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00118546886369586
    2. '[:-' → logprob: -6.876185417175293
    3. '[b' → logprob: -9.251185417175293
    4. ')):' → logprob: -10.876185417175293
    5. 'b' → logprob: -11.001185417175293
    6. '1' → logprob: -11.876185417175293
    7. '):' → logprob: -12.501185417175293
    8. '[:' → logprob: -12.501185417175293
    9. '   ' → logprob: -13.001185417175293
    10. ')):
' → logprob: -14.126185417175293

Token 414: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.204720582696609e-05
    2. '2' → logprob: -10.000052452087402
    3. ' ' → logprob: -12.500052452087402
    4. '   ' → logprob: -13.750052452087402
    5. '[' → logprob: -13.875052452087402
    6. '```' → logprob: -15.250052452087402
    7. 'b' → logprob: -15.875052452087402
    8. '
' → logprob: -16.000051498413086
    9. 'from' → logprob: -16.500051498413086
    10. '  ' → logprob: -16.687551498413086

Token 415: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10340556502342224
    2. ']):' → logprob: -2.478405475616455
    3. '):' → logprob: -4.353405475616455
    4. ')):' → logprob: -7.228405475616455
    5. ']:' → logprob: -7.978405475616455
    6. ':]' → logprob: -8.603405952453613
    7. '[' → logprob: -8.853405952453613
    8. ']))' → logprob: -9.853405952453613
    9. ']):
' → logprob: -11.728405952453613
    10. '():' → logprob: -11.978405952453613

Token 416: '])):
' (ID: 145266)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.0672621950507164
    2. ')):
' → logprob: -2.8172621726989746
    3. '):' → logprob: -5.942262172698975
    4. '))' → logprob: -6.442262172698975
    5. ')):
' → logprob: -7.067262172698975
    6. ')' → logprob: -9.567262649536133
    7. '):
' → logprob: -9.817262649536133
    8. '()))' → logprob: -10.942262649536133
    9. '),' → logprob: -11.067262649536133
    10. '   ' → logprob: -11.067262649536133

Token 417: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5627047419548035
    2. '   ' → logprob: -0.9377047419548035
    3. '):
' → logprob: -3.5627048015594482
    4. '):' → logprob: -5.687704563140869
    5. ' for' → logprob: -6.062704563140869
    6. ':' → logprob: -6.687704563140869
    7. '():
' → logprob: -6.812704563140869
    8. ')' → logprob: -6.937704563140869
    9. ':
' → logprob: -7.812704563140869
    10. 'def' → logprob: -8.687705039978027

Token 418: ' yield' (ID: 14376)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5330213904380798
    2. ' yield' → logprob: -1.0330214500427246
    3. '   ' → logprob: -3.0330214500427246
    4. 'yield' (adapté à ' yield') → logprob: -4.783021450042725
    5. ' if' → logprob: -8.283020973205566
    6. '	yield' → logprob: -8.408020973205566
    7. ' for' → logprob: -9.408020973205566
    8. '    ' → logprob: -10.158020973205566
    9. ' ' → logprob: -10.908020973205566
    10. 'Yield' → logprob: -11.283020973205566

Token 419: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.061972059309482574
    2. ' b' → logprob: -2.811972141265869
    3. '   ' → logprob: -13.186971664428711
    4. '	b' → logprob: -13.936971664428711
    5. '(b' → logprob: -14.436971664428711
    6. ' (' → logprob: -14.936971664428711
    7. ' ' → logprob: -14.936971664428711
    8. 'y' → logprob: -15.686971664428711
    9. ' y' → logprob: -15.686971664428711
    10. '    ' → logprob: -16.31197166442871

Token 420: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001852243090979755
    2. ',y' → logprob: -6.751852035522461
    3. 'b' → logprob: -8.251852035522461
    4. ' ,' → logprob: -8.501852035522461
    5. ',b' → logprob: -8.751852035522461
    6. 'y' → logprob: -10.626852035522461
    7. ' y' → logprob: -11.251852035522461
    8. ' b' → logprob: -12.001852035522461
    9. '(y' → logprob: -12.376852035522461
    10. ' (' → logprob: -13.251852035522461

Token 421: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.3897007703781128
    2. 'y' → logprob: -1.1397007703781128
    3. '(y' → logprob: -6.389700889587402
    4. ' (' → logprob: -6.889700889587402
    5. 'b' → logprob: -9.389700889587402
    6. '(' → logprob: -11.139700889587402
    7. ' b' → logprob: -11.639700889587402
    8. 'x' → logprob: -11.764700889587402
    9. ' ' → logprob: -12.014700889587402
    10. ' x' → logprob: -13.389700889587402

Token 422: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003497666330076754
    2. ' ,' → logprob: -8.625349998474121
    3. '<|end|>' → logprob: -9.000349998474121
    4. '       ' → logprob: -10.625349998474121
    5. ',b' → logprob: -12.125349998474121
    6. ',
' → logprob: -12.250349998474121
    7. '```' → logprob: -13.000349998474121
    8. ')' → logprob: -13.250349998474121
    9. '   ' → logprob: -13.375349998474121
    10. ' ' → logprob: -13.750349998474121

Token 423: ' cb' (ID: 17799)
  Prédit: 'cb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cb' → logprob: -0.018151817843317986
    2. ' cb' → logprob: -4.018151760101318
    3. ' ' → logprob: -14.268152236938477
    4. '	cb' → logprob: -14.643152236938477
    5. 'b' → logprob: -15.393152236938477
    6. '(cb' → logprob: -15.518152236938477
    7. '   ' → logprob: -15.768152236938477
    8. '  ' → logprob: -16.643152236938477
    9. '_cb' → logprob: -16.893152236938477
    10. 'c' → logprob: -17.643152236938477

Token 424: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.157039049663581e-05
    2. '1' → logprob: -9.875051498413086
    3. ' ' → logprob: -17.875051498413086
    4. '01' → logprob: -18.375051498413086
    5. '_' → logprob: -18.500051498413086
    6. '[' → logprob: -19.000051498413086
    7. ',' → logprob: -19.375051498413086
    8. '   ' → logprob: -19.500051498413086
    9. '9' → logprob: -19.875051498413086
    10. '۰' → logprob: -20.250051498413086

Token 425: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0021466929465532303
    2. '<|end|>' → logprob: -7.1271467208862305
    3. '       ' → logprob: -7.3771467208862305
    4. 'def' → logprob: -8.62714672088623
    5. ' ,' → logprob: -8.87714672088623
    6. '   ' → logprob: -9.12714672088623
    7. ',
' → logprob: -9.12714672088623
    8. ')' → logprob: -9.37714672088623
    9. '[' → logprob: -10.87714672088623
    10. '_,' → logprob: -11.00214672088623

Token 426: ' cb' (ID: 17799)
  Prédit: 'cb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cb' → logprob: -0.6931478977203369
    2. ' cb' → logprob: -0.6931478977203369
    3. '	cb' → logprob: -14.693147659301758
    4. '(cb' → logprob: -16.318147659301758
    5. '_cb' → logprob: -16.443147659301758
    6. '.cb' → logprob: -17.318147659301758
    7. 'cbc' → logprob: -19.443147659301758
    8. ' ' → logprob: -19.693147659301758
    9. ' CB' → logprob: -20.193147659301758
    10. 'CB' → logprob: -20.443147659301758

Token 427: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. '0' → logprob: -16.5
    3. ' ' → logprob: -17.0
    4. '_' → logprob: -18.75
    5. '۱' → logprob: -19.0
    6. 'cb' → logprob: -19.5
    7. '   ' → logprob: -20.0
    8. '```' → logprob: -20.0
    9. '11' → logprob: -20.5625
    10. '' → logprob: -21.0625

Token 428: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05973060056567192
    2. '<|end|>' → logprob: -2.9347305297851562
    3. ':' → logprob: -5.559730529785156
    4. ')' → logprob: -8.059730529785156
    5. '
' → logprob: -8.684730529785156
    6. ' def' → logprob: -9.059730529785156
    7. ',' → logprob: -9.184730529785156
    8. '<|end|>' → logprob: -9.809730529785156
    9. '[' → logprob: -10.059730529785156
    10. ':def' → logprob: -10.059730529785156

Token 429: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1766025573015213
    2. ':' → logprob: -2.676602602005005
    3. '<|end|>' → logprob: -3.051602602005005
    4. ')' → logprob: -3.676602602005005
    5. '[' → logprob: -4.551602363586426
    6. ',' → logprob: -6.551602363586426
    7. '```' → logprob: -6.801602363586426
    8. 'n' → logprob: -6.926602363586426
    9. 'b' → logprob: -7.051602363586426
    10. '\' → logprob: -7.176602363586426

Token 430: ' compute' (ID: 23864)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -1.9048969745635986
    2. ' existence' → logprob: -2.0298969745635986
    3. 'dp' → logprob: -2.1548969745635986
    4. 'exist' → logprob: -2.2798969745635986
    5. ' update' → logprob: -2.7798969745635986
    6. ' main' → logprob: -2.9048969745635986
    7. ' process' → logprob: -3.0298969745635986
    8. ' solve' → logprob: -3.4048969745635986
    9. ' calculate' → logprob: -3.4048969745635986
    10. 'calculate' → logprob: -3.5298969745635986

Token 431: '_nd' (ID: 104814)
  Prédit: '_dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_dp' → logprob: -0.04067360237240791
    2. '_max' → logprob: -5.165673732757568
    3. 'def' → logprob: -5.415673732757568
    4. '_cost' → logprob: -5.540673732757568
    5. 'dp' → logprob: -5.665673732757568
    6. '_all' → logprob: -5.915673732757568
    7. '(' → logprob: -5.915673732757568
    8. '_diff' → logprob: -5.915673732757568
    9. '(n' → logprob: -6.040673732757568
    10. '_result' → logprob: -6.290673732757568

Token 432: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.6917220950126648
    2. '_' → logprob: -1.3167221546173096
    3. '(' → logprob: -2.0667221546173096
    4. '_p' → logprob: -3.1917221546173096
    5. '_array' → logprob: -4.4417219161987305
    6. '[' → logprob: -5.0667219161987305
    7. '_count' → logprob: -5.4417219161987305
    8. 'array' → logprob: -5.6917219161987305
    9. '_point' → logprob: -5.8167219161987305
    10. '()' → logprob: -5.8167219161987305

Token 433: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.3767940402030945
    2. '(dp' → logprob: -1.3767940998077393
    3. '(' → logprob: -3.1267940998077393
    4. '(cost' → logprob: -4.37679386138916
    5. '(def' → logprob: -5.87679386138916
    6. '():' → logprob: -7.00179386138916
    7. ' (' → logprob: -8.00179386138916
    8. '(nd' → logprob: -8.87679386138916
    9. '(d' → logprob: -9.37679386138916
    10. 'def' → logprob: -9.37679386138916

Token 434: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00035155098885297775
    2. '):' → logprob: -8.625351905822754
    3. ' ,' → logprob: -9.750351905822754
    4. ',
' → logprob: -10.250351905822754
    5. ',n' → logprob: -10.250351905822754
    6. '0' → logprob: -11.500351905822754
    7. '2' → logprob: -11.875351905822754
    8. '1' → logprob: -12.125351905822754
    9. '):
' → logprob: -12.500351905822754
    10. ',c' → logprob: -12.625351905822754

Token 435: ' dp' (ID: 21546)
  Prédit: 'rev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rev' → logprob: -0.14943930506706238
    2. 'cost' → logprob: -2.8994393348693848
    3. ' rev' → logprob: -3.3994393348693848
    4. 'dp' → logprob: -3.7744393348693848
    5. ' cost' → logprob: -4.399439334869385
    6. ' dp' → logprob: -5.274439334869385
    7. 'n' → logprob: -5.899439334869385
    8. 'exist' → logprob: -6.274439334869385
    9. 'nd' → logprob: -6.774439334869385
    10. ' n' → logprob: -7.149439334869385

Token 436: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.697387966094539e-05
    2. '1' → logprob: -10.500086784362793
    3. '0' → logprob: -10.750086784362793
    4. ',n' → logprob: -11.375086784362793
    5. '):' → logprob: -12.250086784362793
    6. 'def' → logprob: -12.250086784362793
    7. '_,' → logprob: -12.250086784362793
    8. ' ,' → logprob: -12.750086784362793
    9. '[' → logprob: -13.000086784362793
    10. ',
' → logprob: -13.625086784362793

Token 437: ' x' (ID: 1215)
  Prédit: 'rev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rev' → logprob: -0.031929221004247665
    2. 'cost' → logprob: -3.9069292545318604
    3. ' rev' → logprob: -5.031929016113281
    4. 'exist' → logprob: -6.156929016113281
    5. ' cost' → logprob: -6.531929016113281
    6. 'acc' → logprob: -7.906929016113281
    7. 'n' → logprob: -8.406929016113281
    8. ' acc' → logprob: -9.156929016113281
    9. 'nd' → logprob: -9.156929016113281
    10. 'dp' → logprob: -9.531929016113281

Token 438: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08364912122488022
    2. '0' → logprob: -2.708649158477783
    3. 's' → logprob: -4.833649158477783
    4. '1' → logprob: -6.833649158477783
    5. '_,' → logprob: -6.833649158477783
    6. '_rev' → logprob: -7.208649158477783
    7. 'rev' → logprob: -7.458649158477783
    8. '):' → logprob: -7.708649158477783
    9. ',y' → logprob: -8.583648681640625
    10. '_' → logprob: -8.958648681640625

Token 439: ' cw' (ID: 72592)
  Prédit: 'rev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rev' → logprob: -0.4018419086933136
    2. ' rev' → logprob: -2.276841878890991
    3. 'cost' → logprob: -2.526841878890991
    4. 'y' → logprob: -3.526841878890991
    5. 'cw' → logprob: -3.526841878890991
    6. ' cost' → logprob: -3.776841878890991
    7. ' cw' → logprob: -4.02684211730957
    8. ' y' → logprob: -4.27684211730957
    9. 'c' → logprob: -4.40184211730957
    10. ' acc' → logprob: -5.77684211730957

Token 440: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.018278121948242188
    2. ',' → logprob: -4.018278121948242
    3. '):' → logprob: -9.643278121948242
    4. ')' → logprob: -10.893278121948242
    5. '   ' → logprob: -12.018278121948242
    6. ' ,' → logprob: -12.018278121948242
    7. '1' → logprob: -12.143278121948242
    8. '[' → logprob: -12.393278121948242
    9. ' ' → logprob: -12.643278121948242
    10. 'x' → logprob: -12.768278121948242

Token 441: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004155377100687474
    2. ' ,' → logprob: -8.250415802001953
    3. '0' → logprob: -9.125415802001953
    4. ',
' → logprob: -11.125415802001953
    5. '):' → logprob: -11.375415802001953
    6. '1' → logprob: -12.625415802001953
    7. '   ' → logprob: -12.750415802001953
    8. ',n' → logprob: -13.375415802001953
    9. ',c' → logprob: -13.375415802001953
    10. ')' → logprob: -13.875415802001953

Token 442: ' cw' (ID: 72592)
  Prédit: 'cw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cw' → logprob: -0.01604997180402279
    2. ' cw' → logprob: -4.141049861907959
    3. '   ' → logprob: -12.016050338745117
    4. ' ' → logprob: -12.891050338745117
    5. 'cb' → logprob: -13.016050338745117
    6. 'c' → logprob: -13.391050338745117
    7. '  ' → logprob: -13.516050338745117
    8. 'cwd' → logprob: -13.641050338745117
    9. '    ' → logprob: -15.641050338745117
    10. '	c' → logprob: -15.766050338745117

Token 443: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.012911251746118069
    2. ',' → logprob: -4.512911319732666
    3. '1' → logprob: -6.387911319732666
    4. ')' → logprob: -9.762910842895508
    5. '_' → logprob: -10.387910842895508
    6. '   ' → logprob: -10.387910842895508
    7. ' ' → logprob: -11.012910842895508
    8. ' ,' → logprob: -11.512910842895508
    9. '=' → logprob: -12.262910842895508
    10. '[' → logprob: -12.387910842895508

Token 444: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07903982698917389
    2. '):' → logprob: -2.5790398120880127
    3. '):
' → logprob: -9.579039573669434
    4. '   ' → logprob: -9.704039573669434
    5. ':' → logprob: -12.079039573669434
    6. ',b' → logprob: -12.954039573669434
    7. ' ,' → logprob: -13.329039573669434
    8. ',n' → logprob: -13.454039573669434
    9. ',y' → logprob: -13.454039573669434
    10. ',x' → logprob: -13.454039573669434

Token 445: ' rev' (ID: 10808)
  Prédit: 'rev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rev' → logprob: -0.5234897136688232
    2. 'y' → logprob: -2.0234897136688232
    3. 'cost' → logprob: -3.0234897136688232
    4. ' rev' → logprob: -3.1484897136688232
    5. ' y' → logprob: -3.2734897136688232
    6. 'cw' → logprob: -3.7734897136688232
    7. 'cb' → logprob: -3.7734897136688232
    8. 'acc' → logprob: -3.8984897136688232
    9. 'row' → logprob: -4.148489952087402
    10. 'c' → logprob: -4.523489952087402

Token 446: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05656539276242256
    2. '_c' → logprob: -3.056565284729004
    3. ',' → logprob: -5.806565284729004
    4. '[' → logprob: -5.931565284729004
    5. '):' → logprob: -6.806565284729004
    6. '1' → logprob: -7.931565284729004
    7. 'c' → logprob: -8.431565284729004
    8. ')' → logprob: -8.806565284729004
    9. '_' → logprob: -9.306565284729004
    10. '):
' → logprob: -9.556565284729004

Token 447: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00027337539358995855
    2. '):' → logprob: -9.000273704528809
    3. ',y' → logprob: -9.500273704528809
    4. ',b' → logprob: -10.375273704528809
    5. '):
' → logprob: -11.375273704528809
    6. '   ' → logprob: -11.500273704528809
    7. ' ,' → logprob: -12.250273704528809
    8. ',x' → logprob: -12.375273704528809
    9. ',
' → logprob: -12.625273704528809
    10. ',n' → logprob: -12.750273704528809

Token 448: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.2509371340274811
    2. 'cb' → logprob: -2.3759372234344482
    3. ' cost' → logprob: -3.0009372234344482
    4. 'y' → logprob: -3.8759372234344482
    5. 'acc' → logprob: -4.250936985015869
    6. 'c' → logprob: -4.625936985015869
    7. ' y' → logprob: -4.875936985015869
    8. ' cb' → logprob: -5.250936985015869
    9. 'row' → logprob: -5.500936985015869
    10. 'rev' → logprob: -6.000936985015869

Token 449: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006112108938395977
    2. ',' → logprob: -5.256112098693848
    3. '[' → logprob: -7.631112098693848
    4. ')' → logprob: -9.006112098693848
    5. '):' → logprob: -9.131112098693848
    6. '1' → logprob: -9.506112098693848
    7. 'def' → logprob: -10.131112098693848
    8. '   ' → logprob: -11.506112098693848
    9. '):
' → logprob: -11.631112098693848
    10. '),' → logprob: -11.756112098693848

Token 450: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5767025351524353
    2. '):' → logprob: -0.8267025351524353
    3. '):
' → logprob: -7.70170259475708
    4. '   ' → logprob: -8.201702117919922
    5. ')' → logprob: -11.451702117919922
    6. ',n' → logprob: -12.576702117919922
    7. '):
' → logprob: -12.701702117919922
    8. ':' → logprob: -12.701702117919922
    9. ' ):' → logprob: -12.826702117919922
    10. ',x' → logprob: -13.076702117919922

Token 451: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007607816252857447
    2. ',' → logprob: -6.382607936859131
    3. ':' → logprob: -6.507607936859131
    4. '    ' → logprob: -7.007607936859131
    5. '[' → logprob: -7.632607936859131
    6. ' if' → logprob: -7.882607936859131
    7. '<|end|>' → logprob: -8.007607460021973
    8. ' 
' → logprob: -8.132607460021973
    9. '    
' → logprob: -8.257607460021973
    10. '(' → logprob: -8.382607460021973

Token 452: ' nd' (ID: 5914)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32484447956085205
    2. 'if' → logprob: -2.0748443603515625
    3. ' if' → logprob: -3.4498443603515625
    4. 'nd' (adapté à ' nd') → logprob: -3.8248443603515625
    5. 'i' → logprob: -4.3248443603515625
    6. 'dp' → logprob: -4.3248443603515625
    7. 'for' → logprob: -4.5748443603515625
    8. 'new' → logprob: -4.5748443603515625
    9. 'n' → logprob: -4.6998443603515625
    10. ' new' → logprob: -4.9498443603515625

Token 453: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.3663626305060461e-05
    2. '_p' → logprob: -12.00001335144043
    3. '[' → logprob: -13.12501335144043
    4. ' =' → logprob: -13.62501335144043
    5. '=' → logprob: -13.75001335144043
    6. '   ' → logprob: -13.87501335144043
    7. '_' → logprob: -14.50001335144043
    8. '[p' → logprob: -14.62501335144043
    9. ',' → logprob: -15.50001335144043
    10. '```' → logprob: -15.50001335144043

Token 454: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03367947041988373
    2. '=' → logprob: -3.408679485321045
    3. '[' → logprob: -11.908679008483887
    4. ' =[' → logprob: -12.033679008483887
    5. '=[' → logprob: -12.283679008483887
    6. ',' → logprob: -12.408679008483887
    7. ' ' → logprob: -12.658679008483887
    8. '   ' → logprob: -12.783679008483887
    9. '=[]' → logprob: -13.033679008483887
    10. '_' → logprob: -13.908679008483887

Token 455: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.015245956368744373
    2. '[]' → logprob: -4.5152459144592285
    3. '[n' → logprob: -5.7652459144592285
    4. '[]
' → logprob: -7.8902459144592285
    5. ' [' → logprob: -8.015246391296387
    6. '[-' → logprob: -8.640246391296387
    7. '[x' → logprob: -9.640246391296387
    8. '[c' → logprob: -10.265246391296387
    9. '[max' → logprob: -11.390246391296387
    10. '[len' → logprob: -11.515246391296387

Token 456: '0' (ID: 15)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.11240541189908981
    2. '0' → logprob: -2.487405300140381
    3. '-' → logprob: -4.487405300140381
    4. 'max' → logprob: -4.987405300140381
    5. '10' → logprob: -6.487405300140381
    6. 'dp' → logprob: -7.487405300140381
    7. 'None' → logprob: -7.487405300140381
    8. '-(' → logprob: -7.862405300140381
    9. '(float' → logprob: -8.112405776977539
    10. '-f' → logprob: -8.237405776977539

Token 457: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0011761783389374614
    2. ']*(' → logprob: -7.001176357269287
    3. ']*' → logprob: -8.751175880432129
    4. ',' → logprob: -10.501175880432129
    5. ']+' → logprob: -11.126175880432129
    6. 'for' → logprob: -11.251175880432129
    7. '   ' → logprob: -11.501175880432129
    8. '0' → logprob: -11.751175880432129
    9. ' ]' → logprob: -12.501175880432129
    10. ' for' → logprob: -12.501175880432129

Token 458: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04876483604311943
    2. ' *' → logprob: -4.548764705657959
    3. ' for' → logprob: -4.548764705657959
    4. ']*' → logprob: -4.923764705657959
    5. '   ' → logprob: -5.048764705657959
    6. 'for' → logprob: -5.173764705657959
    7. '(n' → logprob: -5.673764705657959
    8. ']*(' → logprob: -6.673764705657959
    9. ',' → logprob: -6.798764705657959
    10. 'n' → logprob: -8.673765182495117

Token 459: ' (' (ID: 350)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.14846262335777283
    2. '(n' → logprob: -2.0234625339508057
    3. 'len' → logprob: -5.773462772369385
    4. '(' → logprob: -6.273462772369385
    5. '((' → logprob: -7.398462772369385
    6. ' (' → logprob: -9.273462295532227
    7. 'n' → logprob: -10.773462295532227
    8. '2' → logprob: -11.273462295532227
    9. '(max' → logprob: -12.023462295532227
    10. '3' → logprob: -13.148462295532227

Token 460: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6458166241645813
    2. 'len' → logprob: -0.7708166241645813
    3. '2' → logprob: -4.770816802978516
    4. '(n' → logprob: -6.270816802978516
    5. '(len' → logprob: -6.270816802978516
    6. '(' → logprob: -7.770816802978516
    7. ' n' → logprob: -8.395816802978516
    8. ' len' → logprob: -9.020816802978516
    9. '   ' → logprob: -10.645816802978516
    10. '4' → logprob: -10.770816802978516

Token 461: ' +' (ID: 659)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.08589844405651093
    2. ' *' → logprob: -2.7108983993530273
    3. '2' → logprob: -4.210898399353027
    4. '+' → logprob: -7.460898399353027
    5. '   ' → logprob: -8.835898399353027
    6. ' +' → logprob: -9.335898399353027
    7. ')' → logprob: -10.085898399353027
    8. '0' → logprob: -10.210898399353027
    9. '*n' → logprob: -10.460898399353027
    10. ' ' → logprob: -10.835898399353027

Token 462: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0016307900659739971
    2. ' ' → logprob: -6.501630783081055
    3. '2' → logprob: -9.001630783081055
    4. 'n' → logprob: -13.001630783081055
    5. '   ' → logprob: -13.376630783081055
    6. '3' → logprob: -14.501630783081055
    7. ' n' → logprob: -15.501630783081055
    8. '  ' → logprob: -15.626630783081055
    9. '4' → logprob: -15.751630783081055
    10. '7' → logprob: -16.626630783081055

Token 463: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001101991510950029
    2. '2' → logprob: -7.001101970672607
    3. ' ' → logprob: -8.626102447509766
    4. '3' → logprob: -12.251102447509766
    5. 'n' → logprob: -12.501102447509766
    6. '   ' → logprob: -13.501102447509766
    7. '4' → logprob: -14.751102447509766
    8. '  ' → logprob: -15.376102447509766
    9. '5' → logprob: -16.001102447509766
    10. '7' → logprob: -16.563602447509766

Token 464: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010605561546981335
    2. ')
' → logprob: -6.876060485839844
    3. '   ' → logprob: -11.001060485839844
    4. ' )' → logprob: -12.126060485839844
    5. ')
' → logprob: -12.751060485839844
    6. '<|end|>' → logprob: -14.001060485839844
    7. ')

' → logprob: -14.876060485839844
    8. ' ' → logprob: -15.126060485839844
    9. '+' → logprob: -15.251060485839844
    10. ')n' → logprob: -16.001060485839844

Token 465: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.13530872762203217
    2. ' for' → logprob: -2.3853087425231934
    3. '   ' → logprob: -3.3853087425231934
    4. '<|end|>' → logprob: -8.135308265686035
    5. '```' → logprob: -8.885308265686035
    6. '	for' → logprob: -9.135308265686035
    7. 'def' → logprob: -9.885308265686035
    8. 'i' → logprob: -11.510308265686035
    9. '       ' → logprob: -12.385308265686035
    10. 'ind' → logprob: -12.885308265686035

Token 466: ' cw' (ID: 72592)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.008544125594198704
    2. ' for' → logprob: -4.883543968200684
    3. '   ' → logprob: -7.008543968200684
    4. 'i' → logprob: -10.758543968200684
    5. '	for' → logprob: -12.133543968200684
    6. 'def' → logprob: -13.008543968200684
    7. '```' → logprob: -13.133543968200684
    8. '       ' → logprob: -14.508543968200684
    9. 'n' → logprob: -15.258543968200684
    10. '_' → logprob: -15.258543968200684

Token 467: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0031840058509260416
    2. '1' → logprob: -6.128183841705322
    3. '=' → logprob: -7.878183841705322
    4. ' =' → logprob: -8.37818431854248
    5. '_' → logprob: -8.75318431854248
    6. ',' → logprob: -9.87818431854248
    7. ' ' → logprob: -9.87818431854248
    8. '[' → logprob: -10.62818431854248
    9. 'i' → logprob: -10.75318431854248
    10. 's' → logprob: -11.37818431854248

Token 468: 'x' (ID: 87)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6989105343818665
    2. '_' → logprob: -1.8239104747772217
    3. ' =' → logprob: -2.3239104747772217
    4. '=' → logprob: -2.4489104747772217
    5. '0' → logprob: -3.1989104747772217
    6. '_idx' → logprob: -3.8239104747772217
    7. '[' → logprob: -4.073910713195801
    8. '_i' → logprob: -4.698910713195801
    9. 'for' → logprob: -4.948910713195801
    10. '_,' → logprob: -5.073910713195801

Token 469: ' =' (ID: 314)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.41959014534950256
    2. ' =' → logprob: -1.7945901155471802
    3. '=' → logprob: -2.7945902347564697
    4. '_x' → logprob: -3.0445902347564697
    5. ',' → logprob: -3.5445902347564697
    6. '[x' → logprob: -3.9195902347564697
    7. 'w' → logprob: -5.919589996337891
    8. '   ' → logprob: -6.419589996337891
    9. '_' → logprob: -6.544589996337891
    10. ' ' → logprob: -6.544589996337891

Token 470: ' cw' (ID: 72592)
  Prédit: 'cw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cw' → logprob: -0.07107192277908325
    2. ' cw' → logprob: -2.8210718631744385
    3. '[c' → logprob: -5.321072101593018
    4. 'c' → logprob: -7.446072101593018
    5. 'cost' → logprob: -7.446072101593018
    6. '0' → logprob: -7.571072101593018
    7. '   ' → logprob: -8.07107162475586
    8. 'len' → logprob: -8.19607162475586
    9. ' ' → logprob: -8.44607162475586
    10. '[' → logprob: -8.44607162475586

Token 471: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000548387470189482
    2. '[' → logprob: -8.000548362731934
    3. 'x' → logprob: -9.250548362731934
    4. ' ' → logprob: -9.500548362731934
    5. '1' → logprob: -11.125548362731934
    6. '[x' → logprob: -11.375548362731934
    7. '   ' → logprob: -12.250548362731934
    8. '[c' → logprob: -13.250548362731934
    9. '_' → logprob: -13.625548362731934
    10. ' [' → logprob: -13.875548362731934

Token 472: '[x' (ID: 17295)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.082405686378479
    2. '[x' → logprob: -1.457405686378479
    3. ' +' → logprob: -1.457405686378479
    4. '[' → logprob: -1.957405686378479
    5. '[n' → logprob: -4.4574055671691895
    6. '   ' → logprob: -4.9574055671691895
    7. '+x' → logprob: -4.9574055671691895
    8. '[c' → logprob: -5.4574055671691895
    9. '*' → logprob: -5.7074055671691895
    10. ' *' → logprob: -5.8324055671691895

Token 473: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006747108418494463
    2. ']
' → logprob: -6.006747245788574
    3. '-' → logprob: -6.381747245788574
    4. ' ]' → logprob: -6.506747245788574
    5. '+' → logprob: -7.881747245788574
    6. ' -' → logprob: -8.506747245788574
    7. ']+' → logprob: -8.631747245788574
    8. '[' → logprob: -9.131747245788574
    9. '   ' → logprob: -9.381747245788574
    10. '[x' → logprob: -10.131747245788574

Token 474: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3568480312824249
    2. ' for' → logprob: -1.3568480014801025
    3. 'for' → logprob: -3.3568480014801025
    4. '<|end|>' → logprob: -6.231848239898682
    5. '+' → logprob: -6.356848239898682
    6. ')' → logprob: -6.856848239898682
    7. ' +' → logprob: -7.606848239898682
    8. '[' → logprob: -7.981848239898682
    9. ',' → logprob: -8.106847763061523
    10. '
' → logprob: -8.231847763061523

Token 475: ' nd' (ID: 5914)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.005724355578422546
    2. ' for' → logprob: -5.3807244300842285
    3. 'cw' → logprob: -7.2557244300842285
    4. '   ' → logprob: -8.13072395324707
    5. '```' → logprob: -9.50572395324707
    6. 'nd' (adapté à ' nd') → logprob: -11.50572395324707
    7. 'prev' → logprob: -12.63072395324707
    8. ' cw' → logprob: -12.63072395324707
    9. 'c' → logprob: -12.75572395324707
    10. 'cost' → logprob: -13.13072395324707

Token 476: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -2.7848862373502925e-05
    2. '[' → logprob: -11.250027656555176
    3. '[p' → logprob: -12.750027656555176
    4. '```' → logprob: -12.750027656555176
    5. 'P' → logprob: -13.125027656555176
    6. '_p' → logprob: -13.750027656555176
    7. '   ' → logprob: -13.750027656555176
    8. 'x' → logprob: -14.625027656555176
    9. ' p' → logprob: -14.750027656555176
    10. '
' → logprob: -14.875027656555176

Token 477: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.021764714270830154
    2. ' =' → logprob: -4.271764755249023
    3. '[x' → logprob: -5.146764755249023
    4. '=' → logprob: -6.521764755249023
    5. '[:]' → logprob: -8.771764755249023
    6. 'x' → logprob: -10.771764755249023
    7. ' [' → logprob: -11.021764755249023
    8. '[n' → logprob: -11.271764755249023
    9. '0' → logprob: -11.396764755249023
    10. '[-' → logprob: -11.646764755249023

Token 478: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05057636275887489
    2. 'x' → logprob: -3.0505764484405518
    3. ' ' → logprob: -6.925576210021973
    4. 'n' → logprob: -8.175576210021973
    5. ' x' → logprob: -8.800576210021973
    6. '1' → logprob: -9.050576210021973
    7. ']' → logprob: -9.050576210021973
    8. '   ' → logprob: -9.738076210021973
    9. '-' → logprob: -9.925576210021973
    10. '[' → logprob: -10.113076210021973

Token 479: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0008101018611341715
    2. ' ]' → logprob: -7.750810146331787
    3. ']=' → logprob: -8.250809669494629
    4. ' =' → logprob: -9.500809669494629
    5. ')' → logprob: -11.375809669494629
    6. '   ' → logprob: -11.500809669494629
    7. '=' → logprob: -11.500809669494629
    8. ']+=' → logprob: -12.500809669494629
    9. ':' → logprob: -14.000809669494629
    10. ':]' → logprob: -14.000809669494629

Token 480: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.252029150724411
    2. ' =' → logprob: -1.5020291805267334
    3. ' +=' → logprob: -10.002029418945312
    4. '+=' → logprob: -10.002029418945312
    5. '   ' → logprob: -12.752029418945312
    6. ',' → logprob: -13.502029418945312
    7. '=int' → logprob: -13.752029418945312
    8. ' ' → logprob: -14.502029418945312
    9. '=True' → logprob: -14.877029418945312
    10. '=c' → logprob: -14.877029418945312

Token 481: ' prev' (ID: 10258)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.14447568356990814
    2. '0' → logprob: -2.1444756984710693
    3. 'cw' → logprob: -5.01947546005249
    4. 'max' → logprob: -5.39447546005249
    5. 'cost' → logprob: -5.89447546005249
    6. 'min' → logprob: -7.14447546005249
    7. 'float' → logprob: -7.26947546005249
    8. ' dp' → logprob: -7.64447546005249
    9. '-' → logprob: -8.269475936889648
    10. ' ' → logprob: -8.519475936889648

Token 482: ' =' (ID: 314)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5380297899246216
    2. '_dp' → logprob: -0.9130297899246216
    3. '[' → logprob: -4.538029670715332
    4. '(dp' → logprob: -6.413029670715332
    5. ' dp' → logprob: -7.163029670715332
    6. '0' → logprob: -7.663029670715332
    7. '	dp' → logprob: -8.163029670715332
    8. ')' → logprob: -9.413029670715332
    9. 'd' → logprob: -9.663029670715332
    10. '+' → logprob: -9.913029670715332

Token 483: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6061602830886841
    2. '0' → logprob: -0.8561602830886841
    3. 'cost' → logprob: -4.7311601638793945
    4. 'cw' → logprob: -4.7311601638793945
    5. 'float' → logprob: -5.6061601638793945
    6. ' dp' → logprob: -5.7311601638793945
    7. ' ' → logprob: -6.4811601638793945
    8. '-' → logprob: -6.8561601638793945
    9. ' cw' → logprob: -7.6061601638793945
    10. 'max' → logprob: -7.6061601638793945

Token 484: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.002858843421563506
    2. '0' → logprob: -5.877858638763428
    3. ' ' → logprob: -11.252859115600586
    4. ' [' → logprob: -12.252859115600586
    5. '<|end|>' → logprob: -12.252859115600586
    6. '   ' → logprob: -12.377859115600586
    7. 'x' → logprob: -12.377859115600586
    8. '(' → logprob: -12.502859115600586
    9. 'def' → logprob: -12.627859115600586
    10. '[
' → logprob: -13.252859115600586

Token 485: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11429687589406967
    2. '[' → logprob: -2.2392969131469727
    3. ' ' → logprob: -6.614296913146973
    4. ' [' → logprob: -9.864296913146973
    5. '   ' → logprob: -10.989296913146973
    6. ']' → logprob: -11.614296913146973
    7. 'x' → logprob: -12.051796913146973
    8. '1' → logprob: -12.301796913146973
    9. '  ' → logprob: -12.364296913146973
    10. '
' → logprob: -12.489296913146973

Token 486: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.012504822574555874
    2. '<|end|>' → logprob: -4.887505054473877
    3. '+' → logprob: -6.262505054473877
    4. ' +' → logprob: -6.637505054473877
    5. ' ]' → logprob: -7.012505054473877
    6. ')' → logprob: -8.262504577636719
    7. '<|end|>' → logprob: -8.387504577636719
    8. ']+' → logprob: -8.887504577636719
    9. ']
' → logprob: -9.762504577636719
    10. '   ' → logprob: -10.637504577636719

Token 487: ' +' (ID: 659)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 488: ' cw' (ID: 72592)
  Prédit: 'cw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cw' → logprob: -0.14058531820774078
    2. 'cb' → logprob: -3.015585422515869
    3. 'rev' → logprob: -3.515585422515869
    4. 'cost' → logprob: -4.015585422515869
    5. ' cw' → logprob: -4.015585422515869
    6. '(cost' → logprob: -6.140585422515869
    7. '(c' → logprob: -6.140585422515869
    8. '(' → logprob: -6.265585422515869
    9. '0' → logprob: -6.390585422515869
    10. '1' → logprob: -6.515585422515869

Token 489: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12729038298130035
    2. '1' → logprob: -2.1272904872894287
    3. 'x' → logprob: -8.002290725708008
    4. '[' → logprob: -12.064790725708008
    5. ' ' → logprob: -12.189790725708008
    6. '[x' → logprob: -12.689790725708008
    7. '(x' → logprob: -13.502290725708008
    8. ' x' → logprob: -13.564790725708008
    9. 'b' → logprob: -13.564790725708008
    10. '<x' → logprob: -14.189790725708008

Token 490: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.2443910837173462
    2. '1' → logprob: -1.6193910837173462
    3. '0' → logprob: -4.244390964508057
    4. '[x' → logprob: -5.994390964508057
    5. '[' → logprob: -6.369390964508057
    6. ' ' → logprob: -9.869391441345215
    7. '```' → logprob: -10.494391441345215
    8. 'n' → logprob: -10.681891441345215
    9. '(x' → logprob: -10.806891441345215
    10. 'w' → logprob: -10.869391441345215

Token 491: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 492: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7965271472930908
    2. '<|end|>' → logprob: -1.4215271472930908
    3. 'for' → logprob: -1.7965271472930908
    4. '```' → logprob: -3.046527147293091
    5. '   ' → logprob: -3.296527147293091
    6. '	for' → logprob: -3.421527147293091
    7. ')' → logprob: -5.046526908874512
    8. '[' → logprob: -5.171526908874512
    9. '\n' → logprob: -5.921526908874512
    10. '\t' → logprob: -6.046526908874512

Token 493: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.10776221752166748
    2. '   ' → logprob: -2.857762336730957
    3. ' for' → logprob: -3.107762336730957
    4. '```' → logprob: -9.982762336730957
    5. '	for' → logprob: -11.357762336730957
    6. '``' → logprob: -14.732762336730957
    7. ' ' → logprob: -14.732762336730957
    8. '1' → logprob: -14.732762336730957
    9. 'from' → logprob: -14.857762336730957
    10. 'i' → logprob: -14.982762336730957

Token 494: ' b' (ID: 287)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.06843534111976624
    2. 'y' → logprob: -3.4434354305267334
    3. 'j' → logprob: -3.6934354305267334
    4. 'k' → logprob: -6.068435192108154
    5. ' i' → logprob: -6.193435192108154
    6. 'x' → logprob: -6.693435192108154
    7. 'a' → logprob: -6.818435192108154
    8. 'z' → logprob: -7.568435192108154
    9. 'b' → logprob: -7.693435192108154
    10. ' y' → logprob: -8.443435668945312

Token 495: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009853598661720753
    2. 'in' → logprob: -4.634853363037109
    3. ' ' → logprob: -10.13485336303711
    4. ',' → logprob: -11.25985336303711
    5. '1' → logprob: -11.25985336303711
    6. 'x' → logprob: -12.00985336303711
    7. '	in' → logprob: -12.00985336303711
    8. '_' → logprob: -12.25985336303711
    9. 'b' → logprob: -12.63485336303711
    10. 'i' → logprob: -13.50985336303711

Token 496: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.14460308849811554
    2. ' (' → logprob: -3.0196030139923096
    3. 'y' → logprob: -3.1446030139923096
    4. '(y' → logprob: -3.8946030139923096
    5. ' b' → logprob: -5.269603252410889
    6. ' i' → logprob: -5.769603252410889
    7. '(b' → logprob: -6.519603252410889
    8. '(i' → logprob: -6.769603252410889
    9. ' ' → logprob: -7.019603252410889
    10. '(' → logprob: -7.144603252410889

Token 497: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5241498351097107
    2. ' in' → logprob: -1.1491498947143555
    3. 'in' → logprob: -2.3991498947143555
    4. ' ,' → logprob: -9.024149894714355
    5. ',y' → logprob: -10.274149894714355
    6. ')' → logprob: -10.899149894714355
    7. ',b' → logprob: -11.024149894714355
    8. ',n' → logprob: -11.649149894714355
    9. ',c' → logprob: -11.774149894714355
    10. ' ' → logprob: -11.899149894714355

Token 498: ' cb' (ID: 17799)
  Prédit: 'cb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cb' → logprob: -0.1428714096546173
    2. ' cb' → logprob: -2.017871379852295
    3. 'cw' → logprob: -9.892871856689453
    4. ' ' → logprob: -10.142871856689453
    5. ' cw' → logprob: -10.517871856689453
    6. '	cb' → logprob: -10.642871856689453
    7. 'b' → logprob: -11.142871856689453
    8. '_cb' → logprob: -11.392871856689453
    9. '(cb' → logprob: -12.017871856689453
    10. 'x' → logprob: -12.267871856689453

Token 499: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.012654677033424377
    2. ',' → logprob: -4.387654781341553
    3. '1' → logprob: -9.637654304504395
    4. ',b' → logprob: -10.512654304504395
    5. ' ,' → logprob: -10.887654304504395
    6. ' ' → logprob: -11.262654304504395
    7. 'b' → logprob: -12.012654304504395
    8. 'x' → logprob: -13.012654304504395
    9. '_,' → logprob: -13.262654304504395
    10. '_' → logprob: -13.387654304504395

Token 500: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.963691804325208e-05
    2. ' ,' → logprob: -10.625029563903809
    3. '_,' → logprob: -13.625029563903809
    4. '1' → logprob: -13.625029563903809
    5. 'cb' → logprob: -14.125029563903809
    6. '0' → logprob: -14.375029563903809
    7. ',c' → logprob: -14.875029563903809
    8. 'in' → logprob: -15.500029563903809
    9. ' in' → logprob: -15.500029563903809
    10. 'b' → logprob: -15.625029563903809

Token 501: ' cb' (ID: 17799)
  Prédit: 'cb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cb' → logprob: -0.0028129592537879944
    2. ' cb' → logprob: -5.87781286239624
    3. '	cb' → logprob: -12.627813339233398
    4. '(cb' → logprob: -13.377813339233398
    5. '_cb' → logprob: -13.877813339233398
    6. ' ' → logprob: -14.377813339233398
    7. '  ' → logprob: -14.752813339233398
    8. '   ' → logprob: -15.377813339233398
    9. ',' → logprob: -15.502813339233398
    10. '.cb' → logprob: -15.627813339233398

Token 502: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003697581822052598
    2. '0' → logprob: -5.628697395324707
    3. ',' → logprob: -9.628697395324707
    4. '[' → logprob: -12.378697395324707
    5. 'b' → logprob: -12.378697395324707
    6. 'y' → logprob: -12.503697395324707
    7. 'cb' → logprob: -12.753697395324707
    8. '   ' → logprob: -12.878697395324707
    9. 'x' → logprob: -13.378697395324707
    10. '=' → logprob: -13.378697395324707

Token 503: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.011271105147898197
    2. 'in' → logprob: -4.511270999908447
    3. ',' → logprob: -9.011271476745605
    4. ')' → logprob: -9.511271476745605
    5. ' ' → logprob: -11.261271476745605
    6. '   ' → logprob: -12.761271476745605
    7. ' ,' → logprob: -13.011271476745605
    8. '	in' → logprob: -13.011271476745605
    9. '<|end|>' → logprob: -13.261271476745605
    10. '  ' → logprob: -14.261271476745605

Token 504: ' zip' (ID: 16216)
  Prédit: ' zip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' zip' → logprob: -0.6356141567230225
    2. 'zip' → logprob: -0.7606141567230225
    3. 'enumer' → logprob: -6.385614395141602
    4. ' enumerate' → logprob: -6.760614395141602
    5. 'b' → logprob: -9.135614395141602
    6. '(zip' → logprob: -10.260614395141602
    7. '.zip' → logprob: -11.510614395141602
    8. '_zip' → logprob: -12.760614395141602
    9. ' ' → logprob: -13.135614395141602
    10. 'range' → logprob: -13.760614395141602

Token 505: '_rev' (ID: 99394)
  Prédit: '_rev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rev' → logprob: -0.00011474833445390686
    2. '(re' → logprob: -9.500114440917969
    3. 'rev' → logprob: -10.250114440917969
    4. '(range' → logprob: -12.625114440917969
    5. 'b' → logprob: -15.000114440917969
    6. '(' → logprob: -15.500114440917969
    7. '.rev' → logprob: -15.500114440917969
    8. '(zip' → logprob: -16.25011444091797
    9. '_REV' → logprob: -16.37511444091797
    10. 's' → logprob: -17.00011444091797

Token 506: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -1.4855663721391466e-05
    2. 'cost' → logprob: -11.375015258789062
    3. '_b' → logprob: -12.750015258789062
    4. 'b' → logprob: -15.375015258789062
    5. '(cost' → logprob: -16.250015258789062
    6. '_rev' → logprob: -17.500015258789062
    7. '1' → logprob: -17.875015258789062
    8. 'Cost' → logprob: -18.000015258789062
    9. ' cost' → logprob: -18.000015258789062
    10. '_COST' → logprob: -18.625015258789062

Token 507: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.007615152280777693
    2. 'b' → logprob: -5.382615089416504
    3. '(re' → logprob: -5.882615089416504
    4. '(n' → logprob: -9.382615089416504
    5. '1' → logprob: -9.507615089416504
    6. 'B' → logprob: -11.382615089416504
    7. '(b' → logprob: -12.007615089416504
    8. '_rev' → logprob: -12.007615089416504
    9. '(' → logprob: -12.132615089416504
    10. 'rev' → logprob: -12.257615089416504

Token 508: '(re' (ID: 8178)
  Prédit: '(re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(re' → logprob: -1.4855663721391466e-05
    2. ' (' → logprob: -11.625015258789062
    3. 'rev' → logprob: -12.500015258789062
    4. '   ' → logprob: -14.000015258789062
    5. '(reverse' → logprob: -15.000015258789062
    6. '_rev' → logprob: -15.250015258789062
    7. '(' → logprob: -15.625015258789062
    8. '.rev' → logprob: -15.625015258789062
    9. '(
' → logprob: -15.750015258789062
    10. '```' → logprob: -16.375015258789062

Token 509: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.318681188422488e-05
    2. '1' → logprob: -11.62501335144043
    3. 'p' → logprob: -14.06251335144043
    4. '(' → logprob: -14.12501335144043
    5. ' v' → logprob: -14.62501335144043
    6. '(v' → logprob: -15.31251335144043
    7. '[' → logprob: -15.81251335144043
    8. 'f' → logprob: -15.87501335144043
    9. '
' → logprob: -15.87501335144043
    10. 'q' → logprob: -16.06251335144043

Token 510: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.392202976712724e-06
    2. '(n' → logprob: -13.000006675720215
    3. '(' → logprob: -13.125006675720215
    4. ')' → logprob: -14.000006675720215
    5. '[' → logprob: -15.000006675720215
    6. ' ' → logprob: -15.375006675720215
    7. '   ' → logprob: -15.500006675720215
    8. 'def' → logprob: -16.0000057220459
    9. '```' → logprob: -16.0000057220459
    10. ' (' → logprob: -17.0000057220459

Token 511: ',' (ID: 11)
  Prédit: '(re'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(re' → logprob: -0.05843333154916763
    2. '(n' → logprob: -4.058433532714844
    3. ',' → logprob: -4.808433532714844
    4. ' (' → logprob: -5.058433532714844
    5. '):' → logprob: -5.308433532714844
    6. '       ' → logprob: -5.308433532714844
    7. '   ' → logprob: -5.558433532714844
    8. ')' → logprob: -5.933433532714844
    9. '[' → logprob: -5.933433532714844
    10. '):
' → logprob: -6.058433532714844

Token 512: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.2519527077674866
    2. ' cost' → logprob: -1.5019526481628418
    3. '(cost' → logprob: -11.626953125
    4. '   ' → logprob: -12.251953125
    5. ' ' → logprob: -12.376953125
    6. '  ' → logprob: -13.126953125
    7. '    ' → logprob: -13.626953125
    8. '      ' → logprob: -14.876953125
    9. 'cb' → logprob: -15.126953125
    10. '     ' → logprob: -15.126953125

Token 513: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.100059156073257e-05
    2. '[' → logprob: -9.625070571899414
    3. 'cost' → logprob: -13.125070571899414
    4. ')' → logprob: -13.750070571899414
    5. '_cost' → logprob: -15.375070571899414
    6. '```' → logprob: -15.375070571899414
    7. '_' → logprob: -15.875070571899414
    8. '0' → logprob: -16.125070571899414
    9. '[b' → logprob: -16.125070571899414
    10. ' ' → logprob: -16.625070571899414

Token 514: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3872684836387634
    2. '):
' → logprob: -1.1372685432434082
    3. '):
' → logprob: -8.13726806640625
    4. '       ' → logprob: -9.88726806640625
    5. '   ' → logprob: -10.26226806640625
    6. '()):
' → logprob: -11.88726806640625
    7. '[' → logprob: -12.76226806640625
    8. ')' → logprob: -12.76226806640625
    9. '():
' → logprob: -13.26226806640625
    10. '():' → logprob: -13.51226806640625

Token 515: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0018260732758790255
    2. ':' → logprob: -6.501826286315918
    3. '<|end|>' → logprob: -9.376826286315918
    4. '        
' → logprob: -10.126826286315918
    5. '):
' → logprob: -10.126826286315918
    6. ',' → logprob: -10.251826286315918
    7. '   ' → logprob: -10.501826286315918
    8. '```' → logprob: -10.751826286315918
    9. '):' → logprob: -11.251826286315918
    10. ':
' → logprob: -11.376826286315918

Token 516: ' val' (ID: 1459)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -1.2144486904144287
    2. 'if' → logprob: -1.8394486904144287
    3. 'cur' → logprob: -1.8394486904144287
    4. 'val' (adapté à ' val') → logprob: -2.0894486904144287
    5. 'curr' → logprob: -2.8394486904144287
    6. '       ' → logprob: -3.2144486904144287
    7. 'v' → logprob: -3.2144486904144287
    8. 'prev' → logprob: -3.5894486904144287
    9. ' nd' → logprob: -4.339448928833008
    10. '   ' → logprob: -4.339448928833008

Token 517: '1' (ID: 16)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.037309277802705765
    2. '=' → logprob: -3.412309169769287
    3. '   ' → logprob: -5.787309169769287
    4. '[' → logprob: -9.412309646606445
    5. '=b' → logprob: -9.412309646606445
    6. 's' → logprob: -9.662309646606445
    7. '       ' → logprob: -9.662309646606445
    8. '    ' → logprob: -9.912309646606445
    9. 'b' → logprob: -10.037309646606445
    10. '_' → logprob: -10.537309646606445

Token 518: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02058696746826172
    2. '=' → logprob: -3.8955869674682617
    3. '   ' → logprob: -10.645586967468262
    4. ',' → logprob: -11.895586967468262
    5. '    ' → logprob: -12.395586967468262
    6. ' ' → logprob: -12.520586967468262
    7. '1' → logprob: -12.770586967468262
    8. '0' → logprob: -14.395586967468262
    9. '  ' → logprob: -14.895586967468262
    10. ',val' → logprob: -14.895586967468262

Token 519: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.7458522319793701
    2. 'prev' → logprob: -1.2458522319793701
    3. 'nd' → logprob: -2.12085223197937
    4. 'max' → logprob: -2.62085223197937
    5. 'cb' → logprob: -4.495852470397949
    6. ' dp' → logprob: -4.620852470397949
    7. ' nd' → logprob: -4.620852470397949
    8. ' prev' → logprob: -5.120852470397949
    9. ' max' → logprob: -5.370852470397949
    10. ' ' → logprob: -7.370852470397949

Token 520: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -0.14047002792358398
    2. '[y' → logprob: -2.140470027923584
    3. 'b' → logprob: -4.390470027923584
    4. 'y' → logprob: -7.515470027923584
    5. '[x' → logprob: -8.640470504760742
    6. '[' → logprob: -9.265470504760742
    7. '   ' → logprob: -9.390470504760742
    8. '    ' → logprob: -10.890470504760742
    9. ' [' → logprob: -10.890470504760742
    10. ' ' → logprob: -11.265470504760742

Token 521: ' +' (ID: 659)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04567265138030052
    2. '+' → logprob: -3.295672655105591
    3. ']+' → logprob: -5.170672416687012
    4. '   ' → logprob: -6.670672416687012
    5. ' +' → logprob: -8.545672416687012
    6. '       ' → logprob: -8.920672416687012
    7. ']
' → logprob: -9.295672416687012
    8. ' ]' → logprob: -9.420672416687012
    9. ' ' → logprob: -9.670672416687012
    10. '+b' → logprob: -11.170672416687012

Token 522: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.44574936106801e-05
    2. '0' → logprob: -10.12507438659668
    3. ' ' → logprob: -10.75007438659668
    4. '   ' → logprob: -12.50007438659668
    5. 'y' → logprob: -12.62507438659668
    6. '2' → logprob: -13.25007438659668
    7. '+' → logprob: -13.62507438659668
    8. 'x' → logprob: -14.50007438659668
    9. ' y' → logprob: -14.56257438659668
    10. ']' → logprob: -14.68757438659668

Token 523: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004071971052326262
    2. ']' → logprob: -8.625407218933105
    3. 'y' → logprob: -9.000407218933105
    4. '0' → logprob: -9.875407218933105
    5. ']+' → logprob: -11.125407218933105
    6. '+' → logprob: -11.500407218933105
    7. ' ' → logprob: -11.625407218933105
    8. 'x' → logprob: -11.750407218933105
    9. '   ' → logprob: -12.125407218933105
    10. '])' → logprob: -14.250407218933105

Token 524: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.9518421292304993
    2. ' +' → logprob: -1.0768420696258545
    3. ']' → logprob: -1.3268420696258545
    4. ']+' → logprob: -4.951842308044434
    5. ')' → logprob: -7.826842308044434
    6. '   ' → logprob: -8.576842308044434
    7. ' ]' → logprob: -9.951842308044434
    8. '-' → logprob: -10.326842308044434
    9. '       ' → logprob: -10.576842308044434
    10. ' ' → logprob: -10.701842308044434

Token 525: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.22561763226985931
    2. '+' → logprob: -1.6006176471710205
    3. ' -' → logprob: -9.350617408752441
    4. '+c' → logprob: -10.850617408752441
    5. ' if' → logprob: -10.975617408752441
    6. '-' → logprob: -11.100617408752441
    7. 'if' → logprob: -11.350617408752441
    8. '   ' → logprob: -11.600617408752441
    9. '[' → logprob: -11.725617408752441
    10. ',' → logprob: -12.225617408752441

Token 526: ' cw' (ID: 72592)
  Prédit: 'cb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cb' → logprob: -0.3690122365951538
    2. 'cw' → logprob: -1.2440122365951538
    3. ' cw' → logprob: -5.494012355804443
    4. ' cb' → logprob: -5.494012355804443
    5. 'max' → logprob: -5.619012355804443
    6. '(cb' → logprob: -5.744012355804443
    7. ' ' → logprob: -6.619012355804443
    8. '   ' → logprob: -7.244012355804443
    9. '(' → logprob: -7.369012355804443
    10. '(c' → logprob: -7.994012355804443

Token 527: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.18375557661056519
    2. '1' → logprob: -1.80875563621521
    3. 'x' → logprob: -5.558755397796631
    4. '[x' → logprob: -9.058755874633789
    5. '(x' → logprob: -12.058755874633789
    6. ' x' → logprob: -13.058755874633789
    7. 'b' → logprob: -13.121255874633789
    8. 'y' → logprob: -13.183755874633789
    9. '<x' → logprob: -13.183755874633789
    10. '_x' → logprob: -13.871255874633789

Token 528: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00046212802408263087
    2. 'y' → logprob: -8.500462532043457
    3. '[x' → logprob: -8.500462532043457
    4. '[y' → logprob: -10.625462532043457
    5. '1' → logprob: -11.250462532043457
    6. 'b' → logprob: -12.000462532043457
    7. '[' → logprob: -12.625462532043457
    8. '[b' → logprob: -13.500462532043457
    9. ' x' → logprob: -13.625462532043457
    10. '(x' → logprob: -14.000462532043457

Token 529: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.31035593152046204
    2. '+' → logprob: -1.4353559017181396
    3. '       ' → logprob: -4.060356140136719
    4. ' if' → logprob: -5.560356140136719
    5. ' -' → logprob: -5.810356140136719
    6. '
' → logprob: -5.810356140136719
    7. '   ' → logprob: -7.435356140136719
    8. '-' → logprob: -8.435356140136719
    9. '<|end|>' → logprob: -8.435356140136719
    10. 'if' → logprob: -8.560356140136719

Token 530: ' cb' (ID: 17799)
  Prédit: 'cb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cb' → logprob: -0.025660764425992966
    2. ' cb' → logprob: -3.775660753250122
    3. '(cb' → logprob: -6.775660991668701
    4. 'max' → logprob: -8.275660514831543
    5. 'cw' → logprob: -8.525660514831543
    6. '(' → logprob: -9.150660514831543
    7. ' (' → logprob: -9.150660514831543
    8. ' ' → logprob: -9.400660514831543
    9. '   ' → logprob: -9.650660514831543
    10. 'cost' → logprob: -10.025660514831543

Token 531: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.20156830549240112
    2. '0' → logprob: -1.701568365097046
    3. '[b' → logprob: -10.514068603515625
    4. '[' → logprob: -10.576568603515625
    5. 'b' → logprob: -10.576568603515625
    6. '[x' → logprob: -10.826568603515625
    7. 'x' → logprob: -10.951568603515625
    8. '
' → logprob: -11.514068603515625
    9. '```' → logprob: -12.514068603515625
    10. '
' → logprob: -12.764068603515625

Token 532: '[x' (ID: 17295)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 533: ']
' (ID: 1592)
  Prédit: '-val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-val' → logprob: -0.8525717854499817
    2. ']' → logprob: -1.227571725845337
    3. '-' → logprob: -1.977571725845337
    4. ' -' → logprob: -2.102571725845337
    5. ']
' → logprob: -4.602571964263916
    6. '
' → logprob: -5.602571964263916
    7. 'val' → logprob: -6.602571964263916
    8. '+' → logprob: -6.602571964263916
    9. '       ' → logprob: -6.852571964263916
    10. ')' → logprob: -7.227571964263916

Token 534: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 535: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.37462303042411804
    2. 'val' (adapté à ' val') → logprob: -1.7496230602264404
    3. ' if' → logprob: -2.3746230602264404
    4. '       ' → logprob: -3.3746230602264404
    5. 'if' → logprob: -4.874622821807861
    6. ' nd' → logprob: -6.999622821807861
    7. 'nd' → logprob: -7.499622821807861
    8. ')' → logprob: -7.999622821807861
    9. ',val' → logprob: -8.12462329864502
    10. '[val' → logprob: -8.12462329864502

Token 536: '2' (ID: 17)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.18419907987117767
    2. '2' → logprob: -1.8091990947723389
    3. ' =' → logprob: -5.55919885635376
    4. '=' → logprob: -8.434199333190918
    5. 'b' → logprob: -9.434199333190918
    6. '1' → logprob: -9.809199333190918
    7. '=b' → logprob: -9.934199333190918
    8. '_' → logprob: -10.059199333190918
    9. ' ' → logprob: -10.059199333190918
    10. '   ' → logprob: -10.434199333190918

Token 537: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0052386182360351086
    2. '=' → logprob: -5.2552385330200195
    3. ' ' → logprob: -13.13023853302002
    4. '   ' → logprob: -13.75523853302002
    5. ' =
' → logprob: -14.25523853302002
    6. ')' → logprob: -15.00523853302002
    7. ',' → logprob: -15.50523853302002
    8. '  ' → logprob: -16.380239486694336
    9. ']' → logprob: -16.630239486694336
    10. ':' → logprob: -16.817739486694336

Token 538: ' prev' (ID: 10258)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.22879743576049805
    2. ' prev' → logprob: -1.978797435760498
    3. 'nd' → logprob: -3.478797435760498
    4. ' nd' → logprob: -4.103797435760498
    5. 'dp' → logprob: -4.478797435760498
    6. ' dp' → logprob: -5.603797435760498
    7. 'cb' → logprob: -6.353797435760498
    8. '   ' → logprob: -7.603797435760498
    9. ' cb' → logprob: -7.603797435760498
    10. ' ' → logprob: -7.728797435760498

Token 539: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.03435548022389412
    2. '+' → logprob: -3.659355401992798
    3. ' if' → logprob: -5.659355640411377
    4. '       ' → logprob: -6.409355640411377
    5. '   ' → logprob: -7.034355640411377
    6. ',' → logprob: -7.284355640411377
    7. ')' → logprob: -8.284355163574219
    8. '<|end|>' → logprob: -8.534355163574219
    9. '
' → logprob: -8.784355163574219
    10. ' -' → logprob: -8.909355163574219

Token 540: ' cw' (ID: 72592)
  Prédit: 'cb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cb' → logprob: -0.041997700929641724
    2. ' cb' → logprob: -3.9169976711273193
    3. 'cw' → logprob: -4.541997909545898
    4. 'cost' → logprob: -5.666997909545898
    5. '(cb' → logprob: -5.666997909545898
    6. ' cw' → logprob: -6.791997909545898
    7. '(' → logprob: -7.291997909545898
    8. ' ' → logprob: -8.166997909545898
    9. '1' → logprob: -8.291997909545898
    10. 'abs' → logprob: -8.416997909545898

Token 541: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03805491328239441
    2. '1' → logprob: -3.288054943084717
    3. '[' → logprob: -13.163054466247559
    4. ' ' → logprob: -13.350554466247559
    5. 'b' → logprob: -13.413054466247559
    6. '[x' → logprob: -13.850554466247559
    7. 'x' → logprob: -13.975554466247559
    8. '01' → logprob: -14.038054466247559
    9. '   ' → logprob: -14.038054466247559
    10. '_' → logprob: -14.850554466247559

Token 542: '[y' (ID: 34551)
  Prédit: '[x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.27483102679252625
    2. '[y' → logprob: -1.5248310565948486
    3. 'x' → logprob: -4.2748308181762695
    4. '[b' → logprob: -5.2748308181762695
    5. '1' → logprob: -6.1498308181762695
    6. 'y' → logprob: -7.5248308181762695
    7. '[' → logprob: -8.27483081817627
    8. 'b' → logprob: -8.39983081817627
    9. '[c' → logprob: -8.52483081817627
    10. ' [' → logprob: -9.52483081817627

Token 543: ']' (ID: 60)
  Prédit: '[x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.011294436641037464
    2. '[y' → logprob: -5.261294364929199
    3. ')' → logprob: -5.386294364929199
    4. '[' → logprob: -6.636294364929199
    5. '[b' → logprob: -9.7612943649292
    6. '   ' → logprob: -10.3862943649292
    7. ' [' → logprob: -11.0112943649292
    8. ' )' → logprob: -11.2612943649292
    9. '       ' → logprob: -12.1362943649292
    10. ']' → logprob: -12.5112943649292

Token 544: ' +' (ID: 659)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03007165528833866
    2. ' if' → logprob: -4.15507173538208
    3. '<|end|>' → logprob: -5.28007173538208
    4. '       ' → logprob: -5.40507173538208
    5. ' 
' → logprob: -6.28007173538208
    6. 'if' → logprob: -7.65507173538208
    7. '[' → logprob: -8.155071258544922
    8. '
' → logprob: -8.155071258544922
    9. '  
' → logprob: -8.280071258544922
    10. ')' → logprob: -8.405071258544922

Token 545: ' cb' (ID: 17799)
  Prédit: 'cb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cb' → logprob: -0.6267794370651245
    2. 'cw' → logprob: -1.1267794370651245
    3. '(cb' → logprob: -3.001779556274414
    4. '1' → logprob: -4.251779556274414
    5. '(c' → logprob: -4.251779556274414
    6. '0' → logprob: -4.876779556274414
    7. 'val' → logprob: -5.001779556274414
    8. 'cost' → logprob: -5.001779556274414
    9. '(' → logprob: -5.126779556274414
    10. ' cw' → logprob: -5.251779556274414

Token 546: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05148192122578621
    2. '1' → logprob: -3.1764819622039795
    3. '[x' → logprob: -5.0514817237854
    4. 'b' → logprob: -6.8014817237854
    5. '[b' → logprob: -7.5514817237854
    6. 'x' → logprob: -8.676482200622559
    7. '[y' → logprob: -9.301482200622559
    8. '[' → logprob: -9.926482200622559
    9. ' ' → logprob: -10.801482200622559
    10. '   ' → logprob: -11.238982200622559

Token 547: '[y' (ID: 34551)
  Prédit: '[x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.5703747272491455
    2. '[b' → logprob: -0.9453747272491455
    3. '[y' → logprob: -3.1953747272491455
    4. '[' → logprob: -6.195374488830566
    5. '1' → logprob: -6.695374488830566
    6. 'b' → logprob: -7.445374488830566
    7. '[n' → logprob: -7.570374488830566
    8. 'x' → logprob: -7.945374488830566
    9. '```' → logprob: -9.445374488830566
    10. '   ' → logprob: -9.695374488830566

Token 548: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.33129099011421204
    2. '   ' → logprob: -2.3312909603118896
    3. ')' → logprob: -2.5812909603118896
    4. '[x' → logprob: -3.0812909603118896
    5. ' -' → logprob: -4.081291198730469
    6. '-' → logprob: -4.206291198730469
    7. ' ]' → logprob: -4.331291198730469
    8. ']
' → logprob: -5.331291198730469
    9. '<|end|>' → logprob: -5.831291198730469
    10. '       ' → logprob: -6.206291198730469

Token 549: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7776128053665161
    2. '
' → logprob: -1.0276128053665161
    3. ' if' → logprob: -2.0276126861572266
    4. '<|end|>' → logprob: -3.2776126861572266
    5. '        
' → logprob: -5.902612686157227
    6. '   ' → logprob: -6.277612686157227
    7. '[' → logprob: -6.277612686157227
    8. '```' → logprob: -6.402612686157227
    9. '  
' → logprob: -6.902612686157227
    10. ' 
' → logprob: -7.652612686157227

Token 550: ' nd' (ID: 5914)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' (adapté à ' nd') → logprob: -0.9282631278038025
    2. ' nd' → logprob: -0.9282631278038025
    3. '       ' → logprob: -1.6782631874084473
    4. ' if' → logprob: -4.053263187408447
    5. 'if' → logprob: -5.678263187408447
    6. '   ' → logprob: -6.428263187408447
    7. '_nd' → logprob: -8.428262710571289
    8. '(nd' → logprob: -9.303262710571289
    9. 'prev' → logprob: -10.428262710571289
    10. '```' → logprob: -11.053262710571289

Token 551: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.0280383548888494e-06
    2. '[' → logprob: -14.500000953674316
    3. '[p' → logprob: -14.875000953674316
    4. '   ' → logprob: -16.375001907348633
    5. '[
' → logprob: -17.250001907348633
    6. '
' → logprob: -17.375001907348633
    7. 'P' → logprob: -17.750001907348633
    8. ']' → logprob: -17.875001907348633
    9. '       ' → logprob: -17.875001907348633
    10. '_p' → logprob: -18.000001907348633

Token 552: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -4.191489642835222e-05
    2. '[' → logprob: -10.750041961669922
    3. 'b' → logprob: -10.875041961669922
    4. ' [' → logprob: -15.125041961669922
    5. '.append' → logprob: -15.125041961669922
    6. '[a' → logprob: -16.000041961669922
    7. '=b' → logprob: -16.125041961669922
    8. '[min' → logprob: -16.125041961669922
    9. '	b' → logprob: -16.375041961669922
    10. '[
' → logprob: -16.875041961669922

Token 553: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.08916617184877396
    2. ' +' → logprob: -2.4641661643981934
    3. ']' → logprob: -8.464166641235352
    4. '+]' → logprob: -11.839166641235352
    5. '   ' → logprob: -13.089166641235352
    6. ']+' → logprob: -13.464166641235352
    7. '1' → logprob: -14.089166641235352
    8. '<|end|>' → logprob: -14.214166641235352
    9. '++]' → logprob: -14.464166641235352
    10. ']+=' → logprob: -14.464166641235352

Token 554: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -13.37500286102295
    3. '   ' → logprob: -14.50000286102295
    4. '2' → logprob: -14.62500286102295
    5. '0' → logprob: -15.37500286102295
    6. '```' → logprob: -16.125003814697266
    7. '           ' → logprob: -17.875003814697266
    8. '
' → logprob: -18.437503814697266
    9. '       ' → logprob: -18.687503814697266
    10. '`' → logprob: -18.750003814697266

Token 555: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -13.875000953674316
    3. '   ' → logprob: -15.250000953674316
    4. '```' → logprob: -16.000001907348633
    5. '0' → logprob: -17.500001907348633
    6. '2' → logprob: -17.875001907348633
    7. '`' → logprob: -18.500001907348633
    8. '           ' → logprob: -18.812501907348633
    9. '<|end|>' → logprob: -18.875001907348633
    10. '+' → logprob: -19.187501907348633

Token 556: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5067471861839294
    2. ' =' → logprob: -1.0067472457885742
    3. ']' → logprob: -3.506747245788574
    4. ')' → logprob: -6.631747245788574
    5. ']=' → logprob: -8.006747245788574
    6. '=max' → logprob: -8.006747245788574
    7. ' ]' → logprob: -9.756747245788574
    8. '   ' → logprob: -10.381747245788574
    9. 'max' → logprob: -11.006747245788574
    10. ',' → logprob: -11.381747245788574

Token 557: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4743545949459076
    2. ' =' → logprob: -0.97435462474823
    3. '=max' → logprob: -8.22435474395752
    4. 'max' → logprob: -11.97435474395752
    5. ' max' → logprob: -13.47435474395752
    6. '   ' → logprob: -13.84935474395752
    7. '=min' → logprob: -14.47435474395752
    8. ')' → logprob: -16.474353790283203
    9. ' ' → logprob: -16.724353790283203
    10. ',' → logprob: -17.349353790283203

Token 558: ' prev' (ID: 10258)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.6197575330734253
    2. 'min' → logprob: -0.8697575330734253
    3. ' max' → logprob: -3.869757652282715
    4. ' min' → logprob: -3.869757652282715
    5. 'val' → logprob: -6.869757652282715
    6. '   ' → logprob: -10.369757652282715
    7. '	min' → logprob: -10.619757652282715
    8. '	max' → logprob: -10.869757652282715
    9. ' val' → logprob: -10.994757652282715
    10. ' ' → logprob: -12.994757652282715

Token 559: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2833184003829956
    2. '=' → logprob: -1.4083184003829956
    3. ' if' → logprob: -7.033318519592285
    4. '=max' → logprob: -7.658318519592285
    5. 'if' → logprob: -8.033318519592285
    6. ',' → logprob: -8.283318519592285
    7. 'max' → logprob: -9.408318519592285
    8. 'val' → logprob: -10.283318519592285
    9. ' +' → logprob: -10.658318519592285
    10. ' ' → logprob: -11.033318519592285

Token 560: ' min' (ID: 1349)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.21144375205039978
    2. 'min' → logprob: -1.9614437818527222
    3. ' max' → logprob: -3.2114436626434326
    4. ' min' → logprob: -4.836443901062012
    5. 'val' → logprob: -6.461443901062012
    6. '   ' → logprob: -9.461443901062012
    7. ' val' → logprob: -10.586443901062012
    8. '	max' → logprob: -11.211443901062012
    9. '	min' → logprob: -12.211443901062012
    10. ' ' → logprob: -12.586443901062012

Token 561: '(val' (ID: 17391)
  Prédit: '(val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(val' → logprob: -3.054500666621607e-06
    2. '(' → logprob: -12.75000286102295
    3. 'val' → logprob: -16.625003814697266
    4. '(
' → logprob: -17.375003814697266
    5. '[val' → logprob: -17.875003814697266
    6. ',val' → logprob: -18.750003814697266
    7. ' (' → logprob: -18.750003814697266
    8. '(min' → logprob: -18.750003814697266
    9. ' val' → logprob: -19.750003814697266
    10. '((' → logprob: -19.875003814697266

Token 562: '1' (ID: 16)
  Prédit: '(val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(val' → logprob: -0.48830121755599976
    2. '(' → logprob: -0.9883012175559998
    3. '(
' → logprob: -4.9883012771606445
    4. '1' → logprob: -5.6133012771606445
    5. ' (' → logprob: -5.7383012771606445
    6. 'val' → logprob: -9.363301277160645
    7. '(

' → logprob: -9.738301277160645
    8. ' val' → logprob: -9.863301277160645
    9. '[val' → logprob: -10.113301277160645
    10. '2' → logprob: -10.363301277160645

Token 563: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005050878971815109
    2. ',val' → logprob: -5.3800506591796875
    3. ' ,' → logprob: -7.7550506591796875
    4. 'val' → logprob: -14.505050659179688
    5. ',
' → logprob: -14.755050659179688
    6. ' val' → logprob: -15.005050659179688
    7. '[val' → logprob: -15.755050659179688
    8. '(val' → logprob: -15.755050659179688
    9. '   ' → logprob: -16.005050659179688
    10. ',value' → logprob: -16.380050659179688

Token 564: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.029752805829048157
    2. ' val' → logprob: -3.529752731323242
    3. '           ' → logprob: -14.279752731323242
    4. '	val' → logprob: -14.654752731323242
    5. '   ' → logprob: -15.029752731323242
    6. '       ' → logprob: -15.654752731323242
    7. '(val' → logprob: -15.654752731323242
    8. '[val' → logprob: -15.904752731323242
    9. '    ' → logprob: -16.154752731323242
    10. ' ' → logprob: -16.529752731323242

Token 565: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.3676733690081164e-05
    2. '[val' → logprob: -11.25002384185791
    3. 'val' → logprob: -13.00002384185791
    4. '[b' → logprob: -13.12502384185791
    5. ')' → logprob: -13.25002384185791
    6. '+' → logprob: -13.37502384185791
    7. '   ' → logprob: -13.75002384185791
    8. ' ' → logprob: -14.37502384185791
    9. '[' → logprob: -15.00002384185791
    10. ' +' → logprob: -15.25002384185791

Token 566: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011272187111899257
    2. ')
' → logprob: -9.125112533569336
    3. '   ' → logprob: -13.125112533569336
    4. ' )' → logprob: -13.750112533569336
    5. '       ' → logprob: -14.250112533569336
    6. ')return' → logprob: -17.375112533569336
    7. '),' → logprob: -18.250112533569336
    8. ')
' → logprob: -18.250112533569336
    9. '<|end|>' → logprob: -18.500112533569336
    10. ')

' → logprob: -18.500112533569336

Token 567: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.650650680065155
    2. '<|end|>' → logprob: -0.900650680065155
    3. ')' → logprob: -3.5256507396698
    4. '	return' → logprob: -3.6506507396698
    5. '```' → logprob: -5.650650501251221
    6. ' return' → logprob: -6.025650501251221
    7. ':return' → logprob: -6.150650501251221
    8. ' ' → logprob: -6.900650501251221
    9. '	' → logprob: -7.025650501251221
    10. 'return' → logprob: -7.025650501251221

Token 568: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18322603404521942
    2. '<|end|>' → logprob: -2.1832261085510254
    3. ')' → logprob: -3.6832261085510254
    4. '	return' → logprob: -4.058226108551025
    5. '```' → logprob: -5.933226108551025
    6. ':return' → logprob: -6.433226108551025
    7. ' return' → logprob: -6.433226108551025
    8. 'return' (adapté à ' return') → logprob: -6.808226108551025
    9. '       ' → logprob: -6.933226108551025
    10. '[' → logprob: -7.308226108551025

Token 569: ' nd' (ID: 5914)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.02324768900871277
    2. ' nd' → logprob: -3.773247718811035
    3. '(nd' → logprob: -13.898247718811035
    4. '_nd' → logprob: -14.898247718811035
    5. 'n' → logprob: -15.773247718811035
    6. '   ' → logprob: -16.14824676513672
    7. 'nds' → logprob: -16.52324676513672
    8. 'ng' → logprob: -16.64824676513672
    9. 'ndl' → logprob: -16.64824676513672
    10. '[' → logprob: -16.77324676513672

Token 570: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -4.320199877838604e-07
    2. '[p' → logprob: -15.875
    3. 'п' → logprob: -16.875
    4. '```' → logprob: -16.875
    5. '<p' → logprob: -17.0
    6. '[' → logprob: -17.375
    7. '_p' → logprob: -17.5
    8. 'dp' → logprob: -17.625
    9. '	p' → logprob: -17.75
    10. 'پ' → logprob: -18.125

Token 571: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 572: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 573: ' full' (ID: 3149)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -1.868611216545105
    2. 'dp' → logprob: -1.868611216545105
    3. ' dp' → logprob: -2.3686113357543945
    4. ' update' → logprob: -2.3686113357543945
    5. 'compute' → logprob: -2.4936113357543945
    6. ' solve' → logprob: -2.6186113357543945
    7. ' compute' → logprob: -2.7436113357543945
    8. 'update' → logprob: -3.2436113357543945
    9. 'process' → logprob: -3.3686113357543945
    10. 'main' → logprob: -3.3686113357543945

Token 574: '_dp' (ID: 133252)
  Prédit: '_process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_process' → logprob: -0.8084392547607422
    2. '_dp' → logprob: -1.4334392547607422
    3. '_match' → logprob: -1.8084392547607422
    4. '_d' → logprob: -2.933439254760742
    5. '_compute' → logprob: -3.433439254760742
    6. '_merge' → logprob: -4.433439254760742
    7. '_code' → logprob: -4.808439254760742
    8. '_' → logprob: -5.058439254760742
    9. '_search' → logprob: -5.433439254760742
    10. '_def' → logprob: -5.558439254760742

Token 575: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.01027350127696991
    2. '(' → logprob: -4.635273456573486
    3. 'def' → logprob: -8.885273933410645
    4. '_(' → logprob: -8.885273933410645
    5. ' (' → logprob: -9.885273933410645
    6. '_step' → logprob: -10.260273933410645
    7. '_loop' → logprob: -10.885273933410645
    8. '_' → logprob: -10.885273933410645
    9. '_update' → logprob: -11.010273933410645
    10. '_full' → logprob: -11.135273933410645

Token 576: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005566088366322219
    2. '):' → logprob: -8.375556945800781
    3. ',n' → logprob: -8.500556945800781
    4. 'def' → logprob: -10.000556945800781
    5. '(n' → logprob: -10.500556945800781
    6. '):
' → logprob: -11.125556945800781
    7. ',
' → logprob: -11.500556945800781
    8. ' ,' → logprob: -12.375556945800781
    9. ',p' → logprob: -12.875556945800781
    10. '   ' → logprob: -13.375556945800781

Token 577: ' rev' (ID: 10808)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6672019958496094
    2. 'cost' → logprob: -0.9172019958496094
    3. 'rev' → logprob: -2.9172019958496094
    4. ' dp' → logprob: -4.042201995849609
    5. ' cost' → logprob: -4.292201995849609
    6. ' rev' → logprob: -7.292201995849609
    7. 'n' → logprob: -7.667201995849609
    8. ' n' → logprob: -8.91720199584961
    9. 'exist' → logprob: -9.41720199584961
    10. ')' → logprob: -9.54220199584961

Token 578: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05597942695021629
    2. '0' → logprob: -3.0559794902801514
    3. '):
' → logprob: -5.430979251861572
    4. '):' → logprob: -6.680979251861572
    5. ',
' → logprob: -7.180979251861572
    6. '1' → logprob: -7.430979251861572
    7. '   ' → logprob: -8.80597972869873
    8. ' ,' → logprob: -9.93097972869873
    9. 'def' → logprob: -10.30597972869873
    10. '):
' → logprob: -10.43097972869873

Token 579: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.02104511484503746
    2. ' cost' → logprob: -3.896045207977295
    3. 'dp' → logprob: -7.896045207977295
    4. '   ' → logprob: -10.146044731140137
    5. 'rev' → logprob: -10.646044731140137
    6. ' dp' → logprob: -10.771044731140137
    7. 'exist' → logprob: -11.396044731140137
    8. ' ' → logprob: -11.646044731140137
    9. ')' → logprob: -12.771044731140137
    10. '    ' → logprob: -13.021044731140137

Token 580: '):
' (ID: 1883)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.778691828250885
    2. '):
' → logprob: -1.2786917686462402
    3. '):' → logprob: -1.5286917686462402
    4. ',' → logprob: -3.2786917686462402
    5. '1' → logprob: -5.02869176864624
    6. ')' → logprob: -7.40369176864624
    7. '):
' → logprob: -7.77869176864624
    8. '   ' → logprob: -8.403692245483398
    9. '):

' → logprob: -9.028692245483398
    10. 'def' → logprob: -9.403692245483398

Token 581: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022856971248984337
    2. ':' → logprob: -4.272857189178467
    3. '):
' → logprob: -5.647857189178467
    4. ':
' → logprob: -6.397857189178467
    5. '):' → logprob: -6.397857189178467
    6. '(dp' → logprob: -7.772857189178467
    7. 'n' → logprob: -8.272856712341309
    8. 'def' → logprob: -8.522856712341309
    9. 'dp' → logprob: -8.647856712341309
    10. '(n' → logprob: -8.772856712341309

Token 582: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.016319042071700096
    2. '   ' → logprob: -4.141319274902344
    3. ' dp' → logprob: -9.016319274902344
    4. 'def' → logprob: -9.641319274902344
    5. 'n' → logprob: -9.891319274902344
    6. '
' → logprob: -10.516319274902344
    7. 'cost' → logprob: -11.141319274902344
    8. '	dp' → logprob: -12.766319274902344
    9. '    
' → logprob: -14.391319274902344
    10. '```' → logprob: -14.516319274902344

Token 583: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3870919644832611
    2. '=' → logprob: -1.1370919942855835
    3. '=[' → logprob: -8.887091636657715
    4. '   ' → logprob: -9.887091636657715
    5. '[' → logprob: -11.012091636657715
    6. ' =[' → logprob: -12.512091636657715
    7. '=[]' → logprob: -12.762091636657715
    8. ' ' → logprob: -13.262091636657715
    9. '=n' → logprob: -13.637091636657715
    10. ',' → logprob: -13.762091636657715

Token 584: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.03646261990070343
    2. '[' → logprob: -3.5364625453948975
    3. '[get' → logprob: -5.411462783813477
    4. ' get' → logprob: -6.286462783813477
    5. 'cost' → logprob: -8.411462783813477
    6. ' [' → logprob: -9.286462783813477
    7. '   ' → logprob: -10.786462783813477
    8. '(get' → logprob: -11.786462783813477
    9. '[n' → logprob: -12.411462783813477
    10. 'list' → logprob: -13.036462783813477

Token 585: '_initial' (ID: 45740)
  Prédit: '_initial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_initial' → logprob: -6.349075556499884e-05
    2. 'initial' → logprob: -10.5000638961792
    3. 'cost' → logprob: -11.0000638961792
    4. '_cost' → logprob: -11.1250638961792
    5. '(cost' → logprob: -12.6250638961792
    6. 'Initial' → logprob: -15.0000638961792
    7. '_existing' → logprob: -15.7500638961792
    8. '_INITIAL' → logprob: -16.250062942504883
    9. '```' → logprob: -16.625062942504883
    10. '_init' → logprob: -16.625062942504883

Token 586: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -0.027144916355609894
    2. 'dp' → logprob: -3.6521449089050293
    3. '(cost' → logprob: -7.527144908905029
    4. '(dp' → logprob: -9.277145385742188
    5. 'cost' → logprob: -9.277145385742188
    6. '_cost' → logprob: -9.402145385742188
    7. 'DP' → logprob: -11.027145385742188
    8. '(' → logprob: -11.902145385742188
    9. '```' → logprob: -12.902145385742188
    10. '   ' → logprob: -13.277145385742188

Token 587: '(cost' (ID: 133554)
  Prédit: '(cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cost' → logprob: -1.9385402993066236e-05
    2. 'cost' → logprob: -10.875019073486328
    3. ' cost' → logprob: -16.125019073486328
    4. '(' → logprob: -16.125019073486328
    5. '   ' → logprob: -17.250019073486328
    6. '```' → logprob: -17.375019073486328
    7. '
' → logprob: -17.625019073486328
    8. '(
' → logprob: -18.750019073486328
    9. ' (' → logprob: -18.750019073486328
    10. '((' → logprob: -19.125019073486328

Token 588: '[' (ID: 58)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3876602053642273
    2. '[' → logprob: -1.137660264968872
    3. '0' → logprob: -7.762660026550293
    4. ' ,' → logprob: -9.012660026550293
    5. '1' → logprob: -9.762660026550293
    6. '   ' → logprob: -9.887660026550293
    7. ',[' → logprob: -10.012660026550293
    8. ',
' → logprob: -10.637660026550293
    9. '(' → logprob: -11.012660026550293
    10. ')' → logprob: -11.137660026550293

Token 589: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0036190778482705355
    2. '1' → logprob: -5.628619194030762
    3. '   ' → logprob: -11.878619194030762
    4. '```' → logprob: -12.378619194030762
    5. '[' → logprob: -13.128619194030762
    6. ' ' → logprob: -13.378619194030762
    7. '
' → logprob: -13.628619194030762
    8. ',' → logprob: -13.753619194030762
    9. '-' → logprob: -14.628619194030762
    10. '(' → logprob: -15.378619194030762

Token 590: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.07158264517784119
    2. ',' → logprob: -2.696582555770874
    3. '[' → logprob: -6.696582794189453
    4. '][' → logprob: -8.821582794189453
    5. '),' → logprob: -9.571582794189453
    6. '],[' → logprob: -9.946582794189453
    7. 'def' → logprob: -10.321582794189453
    8. '   ' → logprob: -10.446582794189453
    9. '],
' → logprob: -11.196582794189453
    10. '1' → logprob: -11.196582794189453

Token 591: ' rev' (ID: 10808)
  Prédit: 'rev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rev' → logprob: -0.00018506382184568793
    2. ' rev' → logprob: -8.625185012817383
    3. '   ' → logprob: -12.500185012817383
    4. '  ' → logprob: -14.375185012817383
    5. '     ' → logprob: -14.750185012817383
    6. '    ' → logprob: -15.000185012817383
    7. '      ' → logprob: -15.625185012817383
    8. '       ' → logprob: -16.375185012817383
    9. ' ' → logprob: -16.375185012817383
    10. 'rep' → logprob: -17.250185012817383

Token 592: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00016384923947043717
    2. '1' → logprob: -8.875164031982422
    3. ')' → logprob: -11.125164031982422
    4. '   ' → logprob: -11.875164031982422
    5. 'def' → logprob: -14.250164031982422
    6. ' [' → logprob: -14.375164031982422
    7. '0' → logprob: -14.875164031982422
    8. '(' → logprob: -15.625164031982422
    9. '```' → logprob: -15.625164031982422
    10. ')
' → logprob: -16.000164031982422

Token 593: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5761252045631409
    2. '1' → logprob: -0.8261252045631409
    3. '[' → logprob: -8.826125144958496
    4. ' ' → logprob: -10.701125144958496
    5. '   ' → logprob: -11.326125144958496
    6. '```' → logprob: -13.076125144958496
    7. ']' → logprob: -14.451125144958496
    8. ')' → logprob: -14.701125144958496
    9. '(' → logprob: -14.826125144958496
    10. '  ' → logprob: -15.826125144958496

Token 594: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003653645282611251
    2. '])' → logprob: -5.628653526306152
    3. ')
' → logprob: -10.378653526306152
    4. '))' → logprob: -11.878653526306152
    5. ')]' → logprob: -12.628653526306152
    6. ')])' → logprob: -12.753653526306152
    7. ' )' → logprob: -13.253653526306152
    8. '[' → logprob: -13.503653526306152
    9. '})' → logprob: -13.753653526306152
    10. '   ' → logprob: -13.753653526306152

Token 595: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0014124969020485878
    2. 'for' → logprob: -6.751412391662598
    3. ' for' → logprob: -9.001412391662598
    4. '
' → logprob: -9.376412391662598
    5. '<|end|>' → logprob: -11.376412391662598
    6. '```' → logprob: -11.501412391662598
    7. 'def' → logprob: -12.001412391662598
    8. 'n' → logprob: -13.001412391662598
    9. ')' → logprob: -13.626412391662598
    10. '    
' → logprob: -13.751412391662598

Token 596: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -6.034592388459714e-06
    2. '   ' → logprob: -12.500005722045898
    3. ' for' → logprob: -13.375005722045898
    4. 'n' → logprob: -15.125005722045898
    5. '
' → logprob: -15.625005722045898
    6. 'rev' → logprob: -15.875005722045898
    7. '```' → logprob: -15.875005722045898
    8. 'from' → logprob: -17.6250057220459
    9. 'cost' → logprob: -17.6250057220459
    10. 'dp' → logprob: -18.6250057220459

Token 597: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.07171158492565155
    2. ' x' → logprob: -2.821711540222168
    3. 'i' → logprob: -4.821711540222168
    4. ' i' → logprob: -6.696711540222168
    5. '(x' → logprob: -9.321711540222168
    6. 'n' → logprob: -9.821711540222168
    7. 'c' → logprob: -10.321711540222168
    8. '_x' → logprob: -10.821711540222168
    9. 'cw' → logprob: -10.821711540222168
    10. 'b' → logprob: -10.946711540222168

Token 598: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.061993569135665894
    2. 'in' → logprob: -2.8119935989379883
    3. ',' → logprob: -11.436993598937988
    4. ')' → logprob: -11.561993598937988
    5. '	in' → logprob: -14.186993598937988
    6. '_in' → logprob: -14.436993598937988
    7. ' ' → logprob: -14.436993598937988
    8. 'n' → logprob: -14.561993598937988
    9. '```' → logprob: -14.686993598937988
    10. '   ' → logprob: -14.936993598937988

Token 599: ' cw' (ID: 72592)
  Prédit: 'cw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cw' → logprob: -0.17985208332538605
    2. ' cw' → logprob: -1.8048521280288696
    3. 'c' → logprob: -10.554852485656738
    4. '   ' → logprob: -10.804852485656738
    5. ',' → logprob: -11.054852485656738
    6. '(c' → logprob: -11.679852485656738
    7. ' ' → logprob: -12.179852485656738
    8. ',c' → logprob: -12.304852485656738
    9. '    ' → logprob: -12.679852485656738
    10. 'cwd' → logprob: -12.804852485656738

Token 600: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.888114098226652e-05
    2. ',' → logprob: -9.500088691711426
    3. '[' → logprob: -11.375088691711426
    4. '1' → logprob: -14.125088691711426
    5. '=' → logprob: -14.250088691711426
    6. 'def' → logprob: -14.500088691711426
    7. '   ' → logprob: -14.750088691711426
    8. ' ' → logprob: -16.500089645385742
    9. ' ,' → logprob: -17.125089645385742
    10. '_,' → logprob: -17.250089645385742

Token 601: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003135360311716795
    2. '0' → logprob: -8.750313758850098
    3. ' ,' → logprob: -9.125313758850098
    4. ',c' → logprob: -10.000313758850098
    5. ' in' → logprob: -15.500313758850098
    6. 'in' → logprob: -15.625313758850098
    7. ',
' → logprob: -16.12531280517578
    8. '_,' → logprob: -16.87531280517578
    9. ',current' → logprob: -17.12531280517578
    10. '  ' → logprob: -17.37531280517578

Token 602: ' cw' (ID: 72592)
  Prédit: 'cw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cw' → logprob: -0.01815052703022957
    2. ' cw' → logprob: -4.018150329589844
    3. '   ' → logprob: -15.518150329589844
    4. 'c' → logprob: -15.768150329589844
    5. ' ' → logprob: -15.893150329589844
    6. 'cwd' → logprob: -16.018150329589844
    7. '  ' → logprob: -17.768150329589844
    8. 'cow' → logprob: -18.018150329589844
    9. '	c' → logprob: -18.393150329589844
    10. '    ' → logprob: -18.393150329589844

Token 603: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5213274309644476e-05
    2. '[' → logprob: -11.375015258789062
    3. ' in' → logprob: -12.875015258789062
    4. ' ' → logprob: -14.500015258789062
    5. ',' → logprob: -15.000015258789062
    6. 'in' → logprob: -15.500015258789062
    7. '   ' → logprob: -17.000015258789062
    8. '```' → logprob: -17.000015258789062
    9. '(' → logprob: -17.250015258789062
    10. ' [' → logprob: -17.625015258789062

Token 604: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12695825099945068
    2. 'in' → logprob: -2.1269583702087402
    3. ',' → logprob: -10.501957893371582
    4. ')' → logprob: -14.251957893371582
    5. '   ' → logprob: -14.626957893371582
    6. '```' → logprob: -15.001957893371582
    7. ' ' → logprob: -15.251957893371582
    8. '	in' → logprob: -15.376957893371582
    9. '  ' → logprob: -15.501957893371582
    10. 'n' → logprob: -15.626957893371582

Token 605: ' zip' (ID: 16216)
  Prédit: ' zip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' zip' → logprob: -0.42873015999794006
    2. 'zip' → logprob: -1.0537301301956177
    3. '(zip' → logprob: -10.553730010986328
    4. '.zip' → logprob: -14.178730010986328
    5. '   ' → logprob: -14.303730010986328
    6. 'enumer' → logprob: -14.553730010986328
    7. ' enumerate' → logprob: -14.678730010986328
    8. ' ' → logprob: -15.053730010986328
    9. '```' → logprob: -15.053730010986328
    10. '_zip' → logprob: -16.303730010986328

Token 606: '_rev' (ID: 99394)
  Prédit: '(re'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(re' → logprob: -2.3557529857498594e-05
    2. 'rev' → logprob: -11.37502384185791
    3. '(' → logprob: -12.00002384185791
    4. '_rev' → logprob: -12.75002384185791
    5. ' (' → logprob: -14.00002384185791
    6. '(range' → logprob: -14.87502384185791
    7. '0' → logprob: -15.00002384185791
    8. '(full' → logprob: -15.37502384185791
    9. '(rep' → logprob: -15.37502384185791
    10. '(cost' → logprob: -15.50002384185791

Token 607: '_cost' (ID: 36820)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7131747007369995
    2. '0' → logprob: -0.8381747007369995
    3. '(' → logprob: -2.588174819946289
    4. 'cost' → logprob: -6.338174819946289
    5. '(cost' → logprob: -7.713174819946289
    6. '(n' → logprob: -11.338174819946289
    7. '_cost' → logprob: -12.088174819946289
    8. '   ' → logprob: -12.213174819946289
    9. 'def' → logprob: -12.963174819946289
    10. ' (' → logprob: -12.963174819946289

Token 608: '(re' (ID: 8178)
  Prédit: '(re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(re' → logprob: -1.282920129597187e-05
    2. '   ' → logprob: -12.000012397766113
    3. '(' → logprob: -12.750012397766113
    4. 'rev' → logprob: -13.500012397766113
    5. ' (' → logprob: -13.500012397766113
    6. '```' → logprob: -14.750012397766113
    7. ',' → logprob: -15.875012397766113
    8. '(
' → logprob: -16.12501335144043
    9. '.rev' → logprob: -16.50001335144043
    10. '(reverse' → logprob: -16.62501335144043

Token 609: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0007966428529471159
    2. '[' → logprob: -7.625796794891357
    3. '0' → logprob: -8.1257963180542
    4. '(' → logprob: -11.8757963180542
    5. 'f' → logprob: -13.6257963180542
    6. ' v' → logprob: -13.7507963180542
    7. '1' → logprob: -14.0007963180542
    8. 'p' → logprob: -14.3757963180542
    9. '[v' → logprob: -14.5007963180542
    10. 'vs' → logprob: -15.5007963180542

Token 610: '[' (ID: 58)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.38719549775123596
    2. '[' → logprob: -1.1371954679489136
    3. ',' → logprob: -8.387195587158203
    4. '   ' → logprob: -9.887195587158203
    5. ')' → logprob: -11.262195587158203
    6. ' ' → logprob: -11.762195587158203
    7. '(' → logprob: -11.762195587158203
    8. '```' → logprob: -12.137195587158203
    9. ')[' → logprob: -12.887195587158203
    10. '1' → logprob: -12.887195587158203

Token 611: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.4034345187828876e-05
    2. '[' → logprob: -11.00002384185791
    3. ' ' → logprob: -12.62502384185791
    4. '   ' → logprob: -13.25002384185791
    5. '1' → logprob: -14.37502384185791
    6. '```' → logprob: -14.37502384185791
    7. '(' → logprob: -15.12502384185791
    8. 'def' → logprob: -15.18752384185791
    9. '۰' → logprob: -16.687524795532227
    10. '  ' → logprob: -17.375024795532227

Token 612: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010020548506872728
    2. ' ,' → logprob: -9.375100135803223
    3. '   ' → logprob: -11.875100135803223
    4. '[' → logprob: -12.500100135803223
    5. '),' → logprob: -13.125100135803223
    6. '],' → logprob: -14.375100135803223
    7. ',
' → logprob: -14.750100135803223
    8. ')' → logprob: -14.750100135803223
    9. '```' → logprob: -15.125100135803223
    10. '  ' → logprob: -15.625100135803223

Token 613: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.1269291490316391
    2. ' cost' → logprob: -2.1269290447235107
    3. '(cost' → logprob: -14.25192928314209
    4. '   ' → logprob: -15.00192928314209
    5. '    ' → logprob: -16.501928329467773
    6. ' ' → logprob: -17.376928329467773
    7. '  ' → logprob: -18.126928329467773
    8. '_cost' → logprob: -18.251928329467773
    9. 'c' → logprob: -18.376928329467773
    10. '        ' → logprob: -18.626928329467773

Token 614: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.024461064487695694
    2. '0' → logprob: -3.774461030960083
    3. ',' → logprob: -7.149461269378662
    4. '   ' → logprob: -7.774461269378662
    5. ' [' → logprob: -13.024460792541504
    6. ' ,' → logprob: -13.399460792541504
    7. ' ' → logprob: -13.649460792541504
    8. ')' → logprob: -13.649460792541504
    9. '  ' → logprob: -14.399460792541504
    10. '```' → logprob: -14.524460792541504

Token 615: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.575563020305708e-05
    2. '   ' → logprob: -10.375065803527832
    3. '1' → logprob: -10.750065803527832
    4. ' ' → logprob: -11.375065803527832
    5. '       ' → logprob: -14.750065803527832
    6. '    ' → logprob: -15.375065803527832
    7. '[' → logprob: -15.375065803527832
    8. '  ' → logprob: -15.500065803527832
    9. ',' → logprob: -15.875065803527832
    10. '           ' → logprob: -16.375064849853516

Token 616: ']):
' (ID: 51989)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002365659223869443
    2. '):' → logprob: -6.877365589141846
    3. '   ' → logprob: -7.252365589141846
    4. ' ,' → logprob: -8.377366065979004
    5. '[' → logprob: -8.627366065979004
    6. ']):' → logprob: -9.377366065979004
    7. ',c' → logprob: -9.752366065979004
    8. '  ' → logprob: -11.002366065979004
    9. '):
' → logprob: -11.002366065979004
    10. ',x' → logprob: -12.377366065979004

Token 617: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002428098116070032
    2. ':' → logprob: -6.62742805480957
    3. ':
' → logprob: -7.50242805480957
    4. '
' → logprob: -8.12742805480957
    5. 'dp' → logprob: -9.12742805480957
    6. '(dp' → logprob: -10.50242805480957
    7. '):
' → logprob: -10.75242805480957
    8. ' dp' → logprob: -10.87742805480957
    9. '   ' → logprob: -11.00242805480957
    10. ',' → logprob: -11.00242805480957

Token 618: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.12992581725120544
    2. '       ' → logprob: -2.1299257278442383
    3. ' dp' → logprob: -5.879925727844238
    4. '   ' → logprob: -8.754925727844238
    5. '	dp' → logprob: -10.254925727844238
    6. '_dp' → logprob: -12.629925727844238
    7. '(dp' → logprob: -13.504925727844238
    8. '           ' → logprob: -15.254925727844238
    9. '```' → logprob: -16.129926681518555
    10. '.dp' → logprob: -16.504926681518555

Token 619: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004620472434908152
    2. '=' → logprob: -5.379620552062988
    3. '   ' → logprob: -15.754620552062988
    4. 'new' → logprob: -17.379619598388672
    5. ' ' → logprob: -17.504619598388672
    6. '[' → logprob: -18.129619598388672
    7. '	' → logprob: -18.629619598388672
    8. ' new' → logprob: -19.129619598388672
    9. ',' → logprob: -19.254619598388672
    10. '_new' → logprob: -19.254619598388672

Token 620: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.1269291490316391
    2. ' compute' → logprob: -2.1269290447235107
    3. '   ' → logprob: -14.37692928314209
    4. '.compute' → logprob: -15.62692928314209
    5. '[' → logprob: -16.501928329467773
    6. ' ' → logprob: -16.626928329467773
    7. 'computer' → logprob: -16.751928329467773
    8. '_compute' → logprob: -16.876928329467773
    9. '`' → logprob: -18.501928329467773
    10. ' ' → logprob: -18.501928329467773

Token 621: '_nd' (ID: 104814)
  Prédit: '_nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nd' → logprob: -0.00034177995985373855
    2. '_dp' → logprob: -8.000341415405273
    3. 'nd' → logprob: -13.250341415405273
    4. '_n' → logprob: -13.750341415405273
    5. '```' → logprob: -14.250341415405273
    6. '_' → logprob: -14.500341415405273
    7. '(nd' → logprob: -14.750341415405273
    8. '_np' → logprob: -14.750341415405273
    9. '
' → logprob: -15.500341415405273
    10. ' nd' → logprob: -15.750341415405273

Token 622: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -7.896309739408025e-07
    2. 'dp' → logprob: -14.875000953674316
    3. '_p' → logprob: -15.375000953674316
    4. 'P' → logprob: -16.625
    5. '_dp' → logprob: -18.375
    6. 'n' → logprob: -18.5
    7. '(p' → logprob: -18.5
    8. '```' → logprob: -18.625
    9. 'п' → logprob: -18.75
    10. '(n' → logprob: -18.875

Token 623: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -9.372294698550832e-06
    2. '(' → logprob: -12.375009536743164
    3. 'n' → logprob: -12.625009536743164
    4. ' (' → logprob: -14.125009536743164
    5. '(len' → logprob: -14.875009536743164
    6. '(
' → logprob: -15.125009536743164
    7. ' n' → logprob: -15.750009536743164
    8. '```' → logprob: -16.250009536743164
    9. '	n' → logprob: -17.000009536743164
    10. '<n' → logprob: -17.125009536743164

Token 624: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014175502583384514
    2. ',x' → logprob: -4.2641754150390625
    3. ' ,' → logprob: -12.514175415039062
    4. '(x' → logprob: -12.889175415039062
    5. ' x' → logprob: -13.139175415039062
    6. 'x' → logprob: -13.764175415039062
    7. '```' → logprob: -14.514175415039062
    8. '   ' → logprob: -14.514175415039062
    9. ')' → logprob: -14.639175415039062
    10. ',n' → logprob: -15.264175415039062

Token 625: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -4.084206375409849e-05
    2. ' dp' → logprob: -10.125041007995605
    3. '	dp' → logprob: -14.875041007995605
    4. '(dp' → logprob: -15.875041007995605
    5. 'x' → logprob: -16.25004005432129
    6. '_dp' → logprob: -16.50004005432129
    7. 'd' → logprob: -17.37504005432129
    8. '
' → logprob: -18.75004005432129
    9. '.dp' → logprob: -18.87504005432129
    10. 'dpi' → logprob: -19.50004005432129

Token 626: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.044728007167577744
    2. ',x' → logprob: -3.6697280406951904
    3. 'x' → logprob: -4.044727802276611
    4. ' x' → logprob: -7.669727802276611
    5. ' ,' → logprob: -8.54472827911377
    6. '(x' → logprob: -9.66972827911377
    7. '   ' → logprob: -11.66972827911377
    8. '```' → logprob: -12.04472827911377
    9. '       ' → logprob: -13.29472827911377
    10. '(' → logprob: -14.16972827911377

Token 627: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00033546582562848926
    2. ' x' → logprob: -8.000335693359375
    3. '	x' → logprob: -20.000335693359375
    4. '   ' → logprob: -20.875335693359375
    5. ')x' → logprob: -21.125335693359375
    6. '(x' → logprob: -22.000335693359375
    7. '       ' → logprob: -22.125335693359375
    8. '$x' → logprob: -22.375335693359375
    9. '{x' → logprob: -22.875335693359375
    10. '```' → logprob: -23.000335693359375

Token 628: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007382771000266075
    2. ' ,' → logprob: -7.375738143920898
    3. ',c' → logprob: -9.125738143920898
    4. '   ' → logprob: -13.875738143920898
    5. ',w' → logprob: -14.500738143920898
    6. '+,' → logprob: -15.250738143920898
    7. '  ' → logprob: -15.625738143920898
    8. '+' → logprob: -15.875738143920898
    9. '       ' → logprob: -16.2507381439209
    10. ',
' → logprob: -16.2507381439209

Token 629: ' cw' (ID: 72592)
  Prédit: 'cw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cw' → logprob: -0.0010491237044334412
    2. ' cw' → logprob: -6.876049041748047
    3. 'cwd' → logprob: -11.501049041748047
    4. 'cow' → logprob: -12.876049041748047
    5. 'c' → logprob: -13.126049041748047
    6. '   ' → logprob: -13.626049041748047
    7. ' ' → logprob: -15.626049041748047
    8. 'crow' → logprob: -15.751049041748047
    9. '	c' → logprob: -16.126049041748047
    10. '       ' → logprob: -17.501049041748047

Token 630: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.981667537620524e-06
    2. '[' → logprob: -14.250001907348633
    3. '1' → logprob: -14.625001907348633
    4. ' ' → logprob: -15.000001907348633
    5. ',' → logprob: -15.750001907348633
    6. '   ' → logprob: -16.000001907348633
    7. '_' → logprob: -16.375001907348633
    8. '```' → logprob: -16.750001907348633
    9. '۰' → logprob: -17.437501907348633
    10. '       ' → logprob: -17.437501907348633

Token 631: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0018800891702994704
    2. ',c' → logprob: -6.751880168914795
    3. ' ,' → logprob: -7.251880168914795
    4. ' cw' → logprob: -15.126879692077637
    5. 'cw' → logprob: -15.501879692077637
    6. '   ' → logprob: -15.876879692077637
    7. '```' → logprob: -16.376880645751953
    8. ',
' → logprob: -16.751880645751953
    9. ',C' → logprob: -17.251880645751953
    10. ' cost' → logprob: -17.626880645751953

Token 632: ' cw' (ID: 72592)
  Prédit: 'cw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cw' → logprob: -0.002189160557463765
    2. ' cw' → logprob: -6.1271891593933105
    3. 'cwd' → logprob: -13.502189636230469
    4. 'cow' → logprob: -13.627189636230469
    5. '   ' → logprob: -14.627189636230469
    6. ' ' → logprob: -14.752189636230469
    7. 'c' → logprob: -15.127189636230469
    8. 'crow' → logprob: -16.50218963623047
    9. '  ' → logprob: -16.87718963623047
    10. '
' → logprob: -17.12718963623047

Token 633: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8074162653647363e-05
    2. ',' → logprob: -11.875018119812012
    3. '[' → logprob: -11.875018119812012
    4. '0' → logprob: -13.125018119812012
    5. ' ' → logprob: -14.000018119812012
    6. '   ' → logprob: -14.500018119812012
    7. '```' → logprob: -15.875018119812012
    8. '       ' → logprob: -16.000017166137695
    9. ')' → logprob: -16.375017166137695
    10. 'w' → logprob: -17.187517166137695

Token 634: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005586316110566258
    2. ' ,' → logprob: -7.500558853149414
    3. '   ' → logprob: -12.750558853149414
    4. '       ' → logprob: -14.250558853149414
    5. ',
' → logprob: -14.375558853149414
    6. ',re' → logprob: -14.750558853149414
    7. ')' → logprob: -15.000558853149414
    8. '[' → logprob: -15.125558853149414
    9. '  ' → logprob: -15.750558853149414
    10. '    ' → logprob: -16.875558853149414

Token 635: ' rev' (ID: 10808)
  Prédit: 'rev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rev' → logprob: -0.011049704626202583
    2. ' rev' → logprob: -4.511049747467041
    3. '   ' → logprob: -13.761049270629883
    4. '.rev' → logprob: -15.136049270629883
    5. '_rev' → logprob: -16.261049270629883
    6. '       ' → logprob: -16.261049270629883
    7. 'rep' → logprob: -16.511049270629883
    8. ' ' → logprob: -16.886049270629883
    9. '  ' → logprob: -17.011049270629883
    10. '
' → logprob: -17.261049270629883

Token 636: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0024801772087812424
    2. '1' → logprob: -6.0024800300598145
    3. '```' → logprob: -13.502480506896973
    4. '   ' → logprob: -13.877480506896973
    5. ')' → logprob: -14.252480506896973
    6. 'def' → logprob: -14.877480506896973
    7. ' [' → logprob: -15.002480506896973
    8. ',' → logprob: -15.377480506896973
    9. ')[' → logprob: -15.877480506896973
    10. ' ' → logprob: -16.002479553222656

Token 637: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.27099974633893e-05
    2. '[' → logprob: -11.375012397766113
    3. ' ' → logprob: -14.250012397766113
    4. '   ' → logprob: -14.750012397766113
    5. '```' → logprob: -16.00001335144043
    6. '0' → logprob: -16.25001335144043
    7. '
' → logprob: -18.00001335144043
    8. '(' → logprob: -19.06251335144043
    9. '       ' → logprob: -19.25001335144043
    10. '  ' → logprob: -19.31251335144043

Token 638: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -6.265633419388905e-05
    2. ' ,' → logprob: -10.125062942504883
    3. ')' → logprob: -11.500062942504883
    4. '   ' → logprob: -12.375062942504883
    5. ',c' → logprob: -13.250062942504883
    6. ',
' → logprob: -13.250062942504883
    7. '  ' → logprob: -13.625062942504883
    8. '[' → logprob: -13.875062942504883
    9. ',n' → logprob: -14.250062942504883
    10. ',)' → logprob: -14.250062942504883

Token 639: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.0015023599844425917
    2. ' cost' → logprob: -6.501502513885498
    3. '   ' → logprob: -19.876502990722656
    4. '(cost' → logprob: -21.126502990722656
    5. 'Cost' → logprob: -21.626502990722656
    6. ' ' → logprob: -21.626502990722656
    7. 'c' → logprob: -22.001502990722656
    8. '_cost' → logprob: -22.126502990722656
    9. '
' → logprob: -22.251502990722656
    10. '  ' → logprob: -22.376502990722656

Token 640: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.008747179061174393
    2. '1' → logprob: -4.758747100830078
    3. ')' → logprob: -9.008747100830078
    4. ',' → logprob: -12.133747100830078
    5. '   ' → logprob: -13.508747100830078
    6. '```' → logprob: -13.633747100830078
    7. ')[' → logprob: -14.508747100830078
    8. 'def' → logprob: -14.633747100830078
    9. ' [' → logprob: -15.258747100830078
    10. '       ' → logprob: -15.508747100830078

Token 641: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7432603272027336e-06
    2. ' ' → logprob: -13.875001907348633
    3. '[' → logprob: -14.750001907348633
    4. '   ' → logprob: -15.000001907348633
    5. '```' → logprob: -16.375001907348633
    6. '１' → logprob: -18.750001907348633
    7. '
' → logprob: -18.937501907348633
    8. ')' → logprob: -18.937501907348633
    9. '(' → logprob: -19.000001907348633
    10. '       ' → logprob: -19.250001907348633

Token 642: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5451681974809617e-05
    2. ')
' → logprob: -11.250015258789062
    3. '   ' → logprob: -13.625015258789062
    4. ' )' → logprob: -14.000015258789062
    5. ')return' → logprob: -16.250015258789062
    6. ')

' → logprob: -16.500015258789062
    7. '       ' → logprob: -17.750015258789062
    8. ')#' → logprob: -17.875015258789062
    9. ')`' → logprob: -18.000015258789062
    10. ')\
' → logprob: -18.625015258789062

Token 643: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007292322698049247
    2. 'return' → logprob: -7.500729084014893
    3. ' return' → logprob: -9.25072956085205
    4. '
' → logprob: -10.62572956085205
    5. '<|end|>' → logprob: -10.87572956085205
    6. '    
' → logprob: -11.50072956085205
    7. ',' → logprob: -12.00072956085205
    8. '       ' → logprob: -12.12572956085205
    9. '[' → logprob: -12.37572956085205
    10. ')' → logprob: -12.50072956085205

Token 644: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3199770450592041
    2. 'return' (adapté à ' return') → logprob: -1.319977045059204
    3. ' return' → logprob: -5.069976806640625
    4. '	return' → logprob: -8.069976806640625
    5. '<|end|>' → logprob: -9.694976806640625
    6. ':return' → logprob: -11.069976806640625
    7. '       ' → logprob: -12.444976806640625
    8. ' ' → logprob: -12.569976806640625
    9. '    
' → logprob: -12.944976806640625
    10. '
' → logprob: -13.194976806640625

Token 645: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -7.493430894101039e-05
    2. ' dp' → logprob: -9.500075340270996
    3. '(dp' → logprob: -18.87507438659668
    4. '   ' → logprob: -19.12507438659668
    5. '	dp' → logprob: -19.37507438659668
    6. 'df' → logprob: -20.12507438659668
    7. 'dc' → logprob: -20.87507438659668
    8. '[' → logprob: -20.87507438659668
    9. 'dt' → logprob: -21.37507438659668
    10. '_dp' → logprob: -22.00007438659668

Token 646: '[n' (ID: 15433)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 647: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08086545020341873
    2. ']' → logprob: -3.0808653831481934
    3. '])' → logprob: -3.4558653831481934
    4. ')]' → logprob: -8.830865859985352
    5. ')])' → logprob: -11.455865859985352
    6. '])]' → logprob: -11.580865859985352
    7. '}' → logprob: -12.080865859985352
    8. '})' → logprob: -12.080865859985352
    9. ' )' → logprob: -12.205865859985352
    10. ')
' → logprob: -12.205865859985352

Token 648: 'def' (ID: 1314)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.21642082929611206
    2. '<|end|>' → logprob: -1.8414208889007568
    3. 'def' → logprob: -4.591420650482178
    4. '
' → logprob: -4.716420650482178
    5. 'n' → logprob: -5.091420650482178
    6. '```' → logprob: -5.341420650482178
    7. '[' → logprob: -6.466420650482178
    8. 'if' → logprob: -6.716420650482178
    9. '%' → logprob: -6.841420650482178
    10. '<|end|>' → logprob: -7.341420650482178

Token 649: ' solve' (ID: 17722)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.38593894243240356
    2. 'main' → logprob: -1.2609388828277588
    3. '__' → logprob: -3.510938882827759
    4. ' __' → logprob: -5.635939121246338
    5. ' full' → logprob: -6.635939121246338
    6. ' solve' → logprob: -7.760939121246338
    7. 'solve' → logprob: -7.885939121246338
    8. 'full' → logprob: -8.26093864440918
    9. 'parse' → logprob: -8.51093864440918
    10. ' parse' → logprob: -9.01093864440918

Token 650: '(n' (ID: 2406)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0057672616094350815
    2. '(n' → logprob: -5.880767345428467
    3. '():
' → logprob: -5.880767345428467
    4. '(' → logprob: -9.380766868591309
    5. ' ():' → logprob: -10.130766868591309
    6. '(input' → logprob: -11.755766868591309
    7. '()(' → logprob: -11.880766868591309
    8. '()' → logprob: -11.880766868591309
    9. 'def' → logprob: -12.505766868591309
    10. '():

' → logprob: -13.255766868591309

Token 651: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0014678422594442964
    2. '):' → logprob: -6.626467704772949
    3. '):
' → logprob: -9.50146770477295
    4. ',n' → logprob: -10.37646770477295
    5. '   ' → logprob: -11.25146770477295
    6. ',
' → logprob: -11.25146770477295
    7. 'def' → logprob: -13.37646770477295
    8. ' ,' → logprob: -13.50146770477295
    9. '```' → logprob: -13.75146770477295
    10. '(n' → logprob: -14.25146770477295

Token 652: ' rev' (ID: 10808)
  Prédit: 'rev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rev' → logprob: -0.0005841302336193621
    2. 'cost' → logprob: -7.500584125518799
    3. ' rev' → logprob: -11.250584602355957
    4. 'full' → logprob: -12.500584602355957
    5. 'n' → logprob: -12.875584602355957
    6. '   ' → logprob: -13.125584602355957
    7. '
' → logprob: -13.625584602355957
    8. ')' → logprob: -13.875584602355957
    9. '_rev' → logprob: -13.875584602355957
    10. 'dp' → logprob: -14.250584602355957

Token 653: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014612370170652866
    2. '):' → logprob: -5.014612197875977
    3. '[' → logprob: -5.639612197875977
    4. '0' → logprob: -6.264612197875977
    5. '):
' → logprob: -6.764612197875977
    6. ',
' → logprob: -7.014612197875977
    7. ')' → logprob: -9.014612197875977
    8. '   ' → logprob: -9.764612197875977
    9. '):

' → logprob: -10.139612197875977
    10. '1' → logprob: -10.389612197875977

Token 654: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005688794772140682
    2. 'def' → logprob: -7.625568866729736
    3. '```' → logprob: -10.000569343566895
    4. 'cost' → logprob: -11.625569343566895
    5. ' cost' → logprob: -11.625569343566895
    6. '<|end|>' → logprob: -12.250569343566895
    7. ' def' → logprob: -12.500569343566895
    8. ')' → logprob: -13.500569343566895
    9. ',' → logprob: -13.500569343566895
    10. '[' → logprob: -14.000569343566895

Token 655: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' (adapté à ' cost') → logprob: -0.006627147551625967
    2. '   ' → logprob: -5.256627082824707
    3. 'def' → logprob: -7.381627082824707
    4. ' cost' → logprob: -7.881627082824707
    5. 'n' → logprob: -8.381627082824707
    6. '#' → logprob: -9.631627082824707
    7. 'rev' → logprob: -10.006627082824707
    8. 'acc' → logprob: -11.381627082824707
    9. 'if' → logprob: -11.506627082824707
    10. 'from' → logprob: -12.256627082824707

Token 656: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1286201924085617
    2. '=' → logprob: -2.128620147705078
    3. '0' → logprob: -6.753620147705078
    4. '[' → logprob: -8.878620147705078
    5. '=[' → logprob: -9.003620147705078
    6. '=[]' → logprob: -9.253620147705078
    7. ',' → logprob: -10.128620147705078
    8. ' =[' → logprob: -10.503620147705078
    9. '   ' → logprob: -10.628620147705078
    10. 'def' → logprob: -11.253620147705078

Token 657: ' existence' (ID: 24140)
  Prédit: 'exist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exist' → logprob: -0.0010342379100620747
    2. '[' → logprob: -7.126034259796143
    3. '[[' → logprob: -9.001033782958984
    4. '[
' → logprob: -9.876033782958984
    5. '[]
' → logprob: -10.501033782958984
    6. ' existence' → logprob: -11.001033782958984
    7. '[e' → logprob: -13.626033782958984
    8. '[list' → logprob: -13.626033782958984
    9. 'exists' → logprob: -13.751033782958984
    10. '[]' → logprob: -14.001033782958984

Token 658: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -2.975612187583465e-05
    2. '_all' → logprob: -11.250029563903809
    3. 'right' → logprob: -11.625029563903809
    4. '=' → logprob: -12.375029563903809
    5. ' =' → logprob: -13.625029563903809
    6. '```' → logprob: -14.250029563903809
    7. '_left' → logprob: -14.375029563903809
    8. 'def' → logprob: -15.625029563903809
    9. '   ' → logprob: -16.000030517578125
    10. 'Right' → logprob: -16.125030517578125

Token 659: '_all' (ID: 13305)
  Prédit: '_all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_all' → logprob: -0.002487903693690896
    2. 'all' → logprob: -6.002488136291504
    3. '(n' → logprob: -12.127488136291504
    4. '=' → logprob: -12.127488136291504
    5. ' =' → logprob: -14.627488136291504
    6. 'All' → logprob: -15.252488136291504
    7. '
' → logprob: -15.627488136291504
    8. '   ' → logprob: -15.752488136291504
    9. 'def' → logprob: -15.877488136291504
    10. '(all' → logprob: -16.752487182617188

Token 660: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -6.630610641877865e-06
    2. '```' → logprob: -12.375006675720215
    3. ' (' → logprob: -13.875006675720215
    4. '(' → logprob: -14.375006675720215
    5. 'def' → logprob: -15.375006675720215
    6. '<|end|>' → logprob: -16.1250057220459
    7. '=n' → logprob: -16.3750057220459
    8. '=' → logprob: -16.7500057220459
    9. '
' → logprob: -16.7500057220459
    10. 'n' → logprob: -16.8750057220459

Token 661: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05602585896849632
    2. ',n' → logprob: -3.181025743484497
    3. '(n' → logprob: -4.431025981903076
    4. ')' → logprob: -7.431025981903076
    5. ' ,' → logprob: -8.806025505065918
    6. '(' → logprob: -9.806025505065918
    7. ',
' → logprob: -9.931025505065918
    8. 'n' → logprob: -9.931025505065918
    9. '=' → logprob: -10.181025505065918
    10. '```' → logprob: -10.931025505065918

Token 662: ' rev' (ID: 10808)
  Prédit: 'rev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rev' → logprob: -4.723352049040841e-06
    2. ' rev' → logprob: -12.375004768371582
    3. '   ' → logprob: -15.625004768371582
    4. '[' → logprob: -16.375003814697266
    5. '[[' → logprob: -16.750003814697266
    6. '[
' → logprob: -18.125003814697266
    7. ')' → logprob: -18.375003814697266
    8. 'reverse' → logprob: -18.375003814697266
    9. ' ' → logprob: -18.500003814697266
    10. 'rep' → logprob: -18.625003814697266

Token 663: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.043301861733198166
    2. ')
' → logprob: -3.168301820755005
    3. '   ' → logprob: -8.168301582336426
    4. '(' → logprob: -12.668301582336426
    5. ',' → logprob: -12.793301582336426
    6. ' ' → logprob: -12.918301582336426
    7. 'def' → logprob: -13.168301582336426
    8. '(n' → logprob: -13.293301582336426
    9. '[' → logprob: -13.418301582336426
    10. ')

' → logprob: -13.668301582336426

Token 664: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0019229217432439327
    2. '
' → logprob: -6.876923084259033
    3. 'return' → logprob: -7.626923084259033
    4. '```' → logprob: -8.876922607421875
    5. ' return' → logprob: -9.126922607421875
    6. '    
' → logprob: -9.876922607421875
    7. '<|end|>' → logprob: -10.126922607421875
    8. 'def' → logprob: -10.626922607421875
    9. '[' → logprob: -11.501922607421875
    10. ',' → logprob: -12.001922607421875

Token 665: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.11742622405290604
    2. 'result' → logprob: -2.3674261569976807
    3. 'res' → logprob: -4.11742639541626
    4. 'dp' → logprob: -8.117425918579102
    5. ' return' → logprob: -8.742425918579102
    6. 'answer' → logprob: -9.117425918579102
    7. '   ' → logprob: -9.367425918579102
    8. 'ans' → logprob: -9.492425918579102
    9. '```' → logprob: -10.117425918579102
    10. 'ret' → logprob: -11.867425918579102

Token 666: ' full' (ID: 3149)
  Prédit: 'full'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'full' → logprob: -0.029750952497124672
    2. ' full' → logprob: -3.5297510623931885
    3. '(full' → logprob: -14.52975082397461
    4. '	full' → logprob: -18.15475082397461
    5. 'Full' → logprob: -18.77975082397461
    6. 'ful' → logprob: -19.52975082397461
    7. 'fully' → logprob: -20.02975082397461
    8. '_full' → logprob: -20.65475082397461
    9. 'int' → logprob: -21.02975082397461
    10. 'max' → logprob: -21.52975082397461

Token 667: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -1.8908587662735954e-05
    2. '_cost' → logprob: -11.125019073486328
    3. '_DP' → logprob: -13.625019073486328
    4. '(_' → logprob: -14.875019073486328
    5. '(dp' → logprob: -14.875019073486328
    6. '```' → logprob: -14.875019073486328
    7. '_df' → logprob: -15.125019073486328
    8. '_dc' → logprob: -15.500019073486328
    9. 'DP' → logprob: -15.625019073486328
    10. '_d' → logprob: -15.750019073486328

Token 668: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.026325728744268417
    2. '(' → logprob: -3.6513257026672363
    3. ' (' → logprob: -11.401326179504395
    4. '(
' → logprob: -11.776326179504395
    5. '```' → logprob: -12.651326179504395
    6. '(full' → logprob: -14.526326179504395
    7. '(size' → logprob: -14.901326179504395
    8. '((' → logprob: -14.901326179504395
    9. '(

' → logprob: -15.526326179504395
    10. '\(' → logprob: -15.526326179504395

Token 669: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0564331205387134e-05
    2. ' ,' → logprob: -11.75001049041748
    3. ',
' → logprob: -13.25001049041748
    4. ',re' → logprob: -14.75001049041748
    5. '   ' → logprob: -15.50001049041748
    6. '(' → logprob: -15.87501049041748
    7. '
' → logprob: -16.250011444091797
    8. ',n' → logprob: -17.250011444091797
    9. '```' → logprob: -17.250011444091797
    10. ')' → logprob: -17.875011444091797

Token 670: ' rev' (ID: 10808)
  Prédit: 'rev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rev' → logprob: -0.0008246336947195232
    2. 'cost' → logprob: -7.375824451446533
    3. ' rev' → logprob: -8.625824928283691
    4. ' cost' → logprob: -11.000824928283691
    5. '   ' → logprob: -14.000824928283691
    6. '
' → logprob: -15.125824928283691
    7. '    ' → logprob: -15.250824928283691
    8. '     ' → logprob: -15.500824928283691
    9. ' ' → logprob: -16.875823974609375
    10. '  ' → logprob: -16.875823974609375

Token 671: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.575563020305708e-05
    2. ')' → logprob: -9.875065803527832
    3. ',
' → logprob: -11.750065803527832
    4. '[' → logprob: -13.000065803527832
    5. ' ,' → logprob: -13.125065803527832
    6. ',c' → logprob: -13.875065803527832
    7. '),' → logprob: -15.375065803527832
    8. '   ' → logprob: -15.500065803527832
    9. '(cost' → logprob: -15.750065803527832
    10. ',)' → logprob: -16.000064849853516

Token 672: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.006715370807796717
    2. ' cost' → logprob: -5.006715297698975
    3. '(cost' → logprob: -17.256715774536133
    4. ')' → logprob: -18.006715774536133
    5. '   ' → logprob: -18.381715774536133
    6. '
' → logprob: -19.256715774536133
    7. 'Cost' → logprob: -19.256715774536133
    8. '_cost' → logprob: -19.381715774536133
    9. ' ' → logprob: -20.131715774536133
    10. 'c' → logprob: -20.756715774536133

Token 673: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.4849443838757e-06
    2. ')
' → logprob: -13.500004768371582
    3. '())' → logprob: -13.625004768371582
    4. '))' → logprob: -14.250004768371582
    5. '[' → logprob: -14.625004768371582
    6. ' )' → logprob: -15.000004768371582
    7. '   ' → logprob: -16.750003814697266
    8. '[])' → logprob: -16.750003814697266
    9. ')return' → logprob: -17.125003814697266
    10. ')n' → logprob: -17.375003814697266

Token 674: 'def' (ID: 1314)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4852227568626404
    2. 'def' → logprob: -1.6102228164672852
    3. '```' → logprob: -2.360222816467285
    4. '#' → logprob: -3.235222816467285
    5. 'if' → logprob: -3.860222816467285
    6. 'print' → logprob: -3.985222816467285
    7. 'for' → logprob: -5.610222816467285
    8. '
' → logprob: -6.485222816467285
    9. 'while' → logprob: -6.610222816467285
    10. 'data' → logprob: -6.735222816467285

Token 675: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.0015387886669486761
    2. 'main' → logprob: -6.6265387535095215
    3. ' parse' → logprob: -8.62653923034668
    4. ' solve' → logprob: -11.25153923034668
    5. ' run' → logprob: -11.87653923034668
    6. ' __' → logprob: -11.87653923034668
    7. ' input' → logprob: -13.12653923034668
    8. '__' → logprob: -13.50153923034668
    9. ' test' → logprob: -13.62653923034668
    10. '_main' → logprob: -14.25153923034668

Token 676: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.07896315306425095
    2. '():
' → logprob: -2.578963041305542
    3. '()' → logprob: -10.078963279724121
    4. '():
' → logprob: -11.078963279724121
    5. '(' → logprob: -12.203963279724121
    6. '_' → logprob: -12.328963279724121
    7. '():

' → logprob: -12.953963279724121
    8. ' ():' → logprob: -13.078963279724121
    9. 'def' → logprob: -14.703963279724121
    10. '()>' → logprob: -15.328963279724121

Token 677: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06274496763944626
    2. '
' → logprob: -3.6877448558807373
    3. 'n' → logprob: -4.062745094299316
    4. '```' → logprob: -4.437745094299316
    5. 'def' → logprob: -5.562745094299316
    6. '(n' → logprob: -7.062745094299316
    7. ' n' → logprob: -7.187745094299316
    8. '    
' → logprob: -7.812745094299316
    9. '()' → logprob: -8.437745094299316
    10. '	n' → logprob: -8.687745094299316

Token 678: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.032387956976890564
    2. '   ' → logprob: -3.5323879718780518
    3. ' n' → logprob: -6.032387733459473
    4. '```' → logprob: -8.407387733459473
    5. '	n' → logprob: -12.282387733459473
    6. '``' → logprob: -13.532387733459473
    7. '
' → logprob: -13.532387733459473
    8. '    
' → logprob: -13.657387733459473
    9. 'if' → logprob: -13.907387733459473
    10. 'def' → logprob: -14.157387733459473

Token 679: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06359449774026871
    2. '=' → logprob: -2.8135945796966553
    3. ',' → logprob: -6.438594341278076
    4. '=int' → logprob: -11.563594818115234
    5. '   ' → logprob: -11.938594818115234
    6. ' =
' → logprob: -13.063594818115234
    7. ' ,' → logprob: -13.063594818115234
    8. ' ' → logprob: -13.188594818115234
    9. ')' → logprob: -13.313594818115234
    10. '  ' → logprob: -14.063594818115234

Token 680: ' rev' (ID: 10808)
  Prédit: 'rev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rev' → logprob: -0.0019286326132714748
    2. ' rev' → logprob: -6.251928806304932
    3. '_rev' → logprob: -16.751928329467773
    4. '.rev' → logprob: -19.126928329467773
    5. 'rep' → logprob: -19.501928329467773
    6. '   ' → logprob: -20.251928329467773
    7. 're' → logprob: -20.626928329467773
    8. '```' → logprob: -21.251928329467773
    9. ' ' → logprob: -21.376928329467773
    10. '
' → logprob: -21.376928329467773

Token 681: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6327582001686096
    2. ' =' → logprob: -0.7577582001686096
    3. ',' → logprob: -9.632758140563965
    4. '   ' → logprob: -10.007758140563965
    5. ')' → logprob: -10.257758140563965
    6. '<|end|>' → logprob: -12.007758140563965
    7. ')=' → logprob: -13.257758140563965
    8. '_' → logprob: -14.132758140563965
    9. ' ' → logprob: -14.132758140563965
    10. '    ' → logprob: -14.382758140563965

Token 682: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.0011703446507453918
    2. ' parse' → logprob: -6.7511701583862305
    3. '   ' → logprob: -16.501171112060547
    4. '	parse' → logprob: -18.751171112060547
    5. '=parse' → logprob: -19.501171112060547
    6. '(parse' → logprob: -20.251171112060547
    7. '_parse' → logprob: -22.251171112060547
    8. ' ' → logprob: -22.376171112060547
    9. '.parse' → logprob: -22.626171112060547
    10. '
' → logprob: -23.251171112060547

Token 683: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -9.088346359931165e-07
    2. 'input' → logprob: -14.125000953674316
    3. '_inputs' → logprob: -17.125
    4. 'Input' → logprob: -17.875
    5. '_INPUT' → logprob: -18.0
    6. '(input' → logprob: -18.375
    7. '_Input' → logprob: -18.875
    8. '_' → logprob: -19.0
    9. '_in' → logprob: -19.125
    10. '_output' → logprob: -19.25

Token 684: '()
' (ID: 1234)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7559970021247864
    2. '()
' → logprob: -0.7559970021247864
    3. '()' → logprob: -3.3809969425201416
    4. '   ' → logprob: -3.6309969425201416
    5. '    
' → logprob: -8.630996704101562
    6. '(n' → logprob: -10.255996704101562
    7. 'def' → logprob: -10.255996704101562
    8. '```' → logprob: -10.255996704101562
    9. '  
' → logprob: -10.505996704101562
    10. 'n' → logprob: -10.880996704101562

Token 685: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004019160754978657
    2. 'print' → logprob: -5.879019260406494
    3. 'result' → logprob: -7.129019260406494
    4. '```' → logprob: -8.129018783569336
    5. '    
' → logprob: -10.504018783569336
    6. ' result' → logprob: -10.629018783569336
    7. ' print' → logprob: -10.629018783569336
    8. '<|end|>' → logprob: -11.379018783569336
    9. '``' → logprob: -12.129018783569336
    10. 'answer' → logprob: -12.129018783569336

Token 686: ' result' (ID: 1534)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.038224514573812485
    2. 'result' (adapté à ' result') → logprob: -3.288224458694458
    3. 'res' → logprob: -9.038224220275879
    4. ' print' → logprob: -10.288224220275879
    5. 'answer' → logprob: -11.288224220275879
    6. 'ans' → logprob: -11.538224220275879
    7. ' result' → logprob: -12.288224220275879
    8. '   ' → logprob: -12.663224220275879
    9. '    
' → logprob: -16.663225173950195
    10. '
' → logprob: -16.663225173950195

Token 687: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012511883862316608
    2. '=' → logprob: -4.387511730194092
    3. '   ' → logprob: -13.38751220703125
    4. ' ' → logprob: -15.63751220703125
    5. ',' → logprob: -15.88751220703125
    6. '  ' → logprob: -15.88751220703125
    7. ' =
' → logprob: -16.38751220703125
    8. '.' → logprob: -16.88751220703125
    9. '```' → logprob: -17.01251220703125
    10. ' ' → logprob: -17.38751220703125

Token 688: ' solve' (ID: 17722)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.002475777640938759
    2. ' solve' → logprob: -6.002475738525391
    3. '   ' → logprob: -16.25247573852539
    4. '.solve' → logprob: -19.50247573852539
    5. ' ' → logprob: -20.37747573852539
    6. 'save' → logprob: -21.75247573852539
    7. 'sol' → logprob: -21.87747573852539
    8. '  ' → logprob: -22.25247573852539
    9. 'resolve' → logprob: -22.50247573852539
    10. '(s' → logprob: -22.62747573852539

Token 689: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.4974866644479334e-05
    2. '(' → logprob: -11.375015258789062
    3. ' (' → logprob: -12.750015258789062
    4. '(
' → logprob: -14.875015258789062
    5. 'n' → logprob: -16.500015258789062
    6. '```' → logprob: -16.750015258789062
    7. '   ' → logprob: -18.250015258789062
    8. ' n' → logprob: -18.500015258789062
    9. '\(' → logprob: -19.000015258789062
    10. '<n' → logprob: -19.250015258789062

Token 690: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.5928495486150496e-05
    2. ',n' → logprob: -11.250016212463379
    3. ' ,' → logprob: -13.250016212463379
    4. ',
' → logprob: -14.250016212463379
    5. '(n' → logprob: -15.750016212463379
    6. ')' → logprob: -15.875016212463379
    7. 'n' → logprob: -16.250015258789062
    8. '‌,' → logprob: -17.625015258789062
    9. ',re' → logprob: -18.250015258789062
    10. '```' → logprob: -18.250015258789062

Token 691: ' rev' (ID: 10808)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.16125360131263733
    2. 'rev' → logprob: -1.911253571510315
    3. ' n' → logprob: -6.911253452301025
    4. ' rev' → logprob: -10.411253929138184
    5. '(n' → logprob: -13.786253929138184
    6. '   ' → logprob: -14.911253929138184
    7. '```' → logprob: -15.161253929138184
    8. '
' → logprob: -15.286253929138184
    9. '	n' → logprob: -15.786253929138184
    10. ')' → logprob: -16.036252975463867

Token 692: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.2877616882324219
    2. '   ' → logprob: -2.412761688232422
    3. '(n' → logprob: -2.412761688232422
    4. ')' → logprob: -2.662761688232422
    5. ',' → logprob: -7.662761688232422
    6. '(' → logprob: -7.912761688232422
    7. '())
' → logprob: -8.537761688232422
    8. '()
' → logprob: -10.162761688232422
    9. '()' → logprob: -10.537761688232422
    10. ' ' → logprob: -11.412761688232422

Token 693: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0067234220914542675
    2. 'print' → logprob: -5.006723403930664
    3. ' print' → logprob: -12.631723403930664
    4. '```' → logprob: -12.756723403930664
    5. '	print' → logprob: -13.631723403930664
    6. '    
' → logprob: -14.631723403930664
    7. '
' → logprob: -15.756723403930664
    8. '<|end|>' → logprob: -16.256723403930664
    9. '       ' → logprob: -17.381723403930664
    10. '(print' → logprob: -17.506723403930664

Token 694: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -5.9153885558771435e-06
    2. '   ' → logprob: -12.250005722045898
    3. ' print' → logprob: -13.750005722045898
    4. '```' → logprob: -18.2500057220459
    5. '	print' → logprob: -18.5000057220459
    6. '
' → logprob: -19.7500057220459
    7. '#print' → logprob: -21.1250057220459
    8. '_print' → logprob: -22.2500057220459
    9. '.print' → logprob: -23.1250057220459
    10. '``' → logprob: -23.3750057220459

Token 695: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -1.0325924449716695e-05
    2. '(' → logprob: -11.50001049041748
    3. 'result' → logprob: -16.500009536743164
    4. '()' → logprob: -17.875009536743164
    5. ' (' → logprob: -18.625009536743164
    6. '(results' → logprob: -19.625009536743164
    7. '=result' → logprob: -20.125009536743164
    8. '(
' → logprob: -20.375009536743164
    9. '(res' → logprob: -20.625009536743164
    10. '(resultado' → logprob: -20.875009536743164

Token 696: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.981667537620524e-06
    2. '())' → logprob: -14.250001907348633
    3. '()' → logprob: -14.750001907348633
    4. ')
' → logprob: -14.875001907348633
    5. '   ' → logprob: -15.750001907348633
    6. ')`' → logprob: -16.000001907348633
    7. '`)' → logprob: -16.500001907348633
    8. ' )' → logprob: -16.875001907348633
    9. '')' → logprob: -17.625001907348633
    10. '))' → logprob: -18.000001907348633

Token 697: 'main' (ID: 7731)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.27699556946754456
    2. 'main' → logprob: -1.5269955396652222
    3. '(main' → logprob: -4.901995658874512
    4. '```' → logprob: -4.901995658874512
    5. '
' → logprob: -5.526995658874512
    6. '<|end|>' → logprob: -6.026995658874512
    7. ' main' → logprob: -7.026995658874512
    8. '#' → logprob: -7.276995658874512
    9. ' if' → logprob: -7.526995658874512
    10. '\n' → logprob: -7.651995658874512

Token 698: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 696
Tokens correctement prédits (1ère position, stricte): 314
Tokens correctement prédits (1ère position, avec adaptation): 333
Tokens correctement prédits (top 10): 592
Précision stricte (1ère position): 45.11%
Précision adaptée (1ère position): 47.84%
Précision (top 10): 85.06%
================================================================================
