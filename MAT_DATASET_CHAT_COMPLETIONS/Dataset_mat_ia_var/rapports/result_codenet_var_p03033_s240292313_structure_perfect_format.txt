================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:59:58
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import bisect
from heapq import heappop, heappush, heapify
from itertools import chain

input = sys.stdin.readline
sys.setrecursionlimit(10**9)

N, Q = map(int, input().split())
STX = [list(map(int, input().split())) for _ in range(N)]
D = [int(input()) for _ in range(Q)]

inf = 10**15
TEMP = [[(s - x, True, x), (t - x, False, x)] for s, t, x in STX] + [[(-inf, True, inf), (inf, False, inf)]]
PFX = sorted(list(chain(*TEMP)))

addq = [inf]
delq = [inf + 1]
D.append(inf)
iterD = iter(D)

d = next(iterD)
for p, f, x in PFX:
    while d < p:
        ans = addq[0] if addq[0] != inf else -1
        print(ans)
        d = next(iterD)
        if d == inf:
            exit()
    if f:
        heappush(addq, x)
    else:
        heappush(delq, x)
    while addq[0] == delq[0]:
        heappop(addq)
        heappop(delq)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6975938677787781
    2. '\n' → logprob: -0.8225938677787781
    3. '<|end|>' → logprob: -3.572593927383423
    4. '\' → logprob: -4.322593688964844
    5. 'newline' → logprob: -5.072593688964844
    6. 'import' → logprob: -5.322593688964844
    7. '<|end|>' → logprob: -5.947593688964844
    8. '```' → logprob: -6.572593688964844
    9. '' → logprob: -6.697593688964844
    10. '
' → logprob: -6.947593688964844

Token 4: ' bis' (ID: 7204)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.00023321842309087515
    2. 'os' → logprob: -8.37523365020752
    3. ' math' → logprob: -13.87523365020752
    4. ' re' → logprob: -14.37523365020752
    5. '"os' → logprob: -14.87523365020752
    6. ' json' → logprob: -15.12523365020752
    7. '_os' → logprob: -15.87523365020752
    8. '	os' → logprob: -16.375232696533203
    9. ' ' → logprob: -16.750232696533203
    10. ' ' → logprob: -17.000232696533203

Token 5: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -2.1008713702030946e-06
    2. 'e' → logprob: -14.375001907348633
    3. 'ec' → logprob: -14.375001907348633
    4. 'ected' → logprob: -14.875001907348633
    5. 't' → logprob: -15.250001907348633
    6. 'ection' → logprob: -16.125001907348633
    7. '```' → logprob: -16.875001907348633
    8. 'ectl' → logprob: -17.000001907348633
    9. 'ector' → logprob: -17.250001907348633
    10. 'truct' → logprob: -17.625001907348633

Token 6: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.24299927055835724
    2. '<|end|>' → logprob: -3.117999315261841
    3. '
' → logprob: -3.367999315261841
    4. '\n' → logprob: -3.492999315261841
    5. '\' → logprob: -3.742999315261841
    6. '' → logprob: -3.867999315261841
    7. '

' → logprob: -3.992999315261841
    8. 'import' → logprob: -4.117999076843262
    9. 'newline' → logprob: -4.867999076843262
    10. '```' → logprob: -5.367999076843262

Token 7: 'from' (ID: 2845)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.9687907099723816
    2. '

' → logprob: -1.4687907695770264
    3. '
' → logprob: -2.5937907695770264
    4. '' → logprob: -2.8437907695770264
    5. 'import' → logprob: -2.8437907695770264
    6. '```' → logprob: -3.4687907695770264
    7. '\n' → logprob: -3.8437907695770264
    8. ' ' → logprob: -3.9687907695770264
    9. '<|end|>' → logprob: -4.218790531158447
    10. '\' → logprob: -4.218790531158447

Token 8: ' heap' (ID: 37237)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.15378861129283905
    2. ' math' → logprob: -2.2787885665893555
    3. 'collections' → logprob: -4.0287885665893555
    4. ' itertools' → logprob: -4.1537885665893555
    5. ' heap' → logprob: -5.4037885665893555
    6. ' typing' → logprob: -7.2787885665893555
    7. 'math' → logprob: -7.4037885665893555
    8. ' threading' → logprob: -8.278788566589355
    9. 'heap' → logprob: -8.403788566589355
    10. ' operator' → logprob: -8.778788566589355

Token 9: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.2664456789934775e-06
    2. 'import' → logprob: -14.375000953674316
    3. 'queue' → logprob: -14.875000953674316
    4. ' import' → logprob: -16.000001907348633
    5. ' queue' → logprob: -16.250001907348633
    6. 'i' → logprob: -17.500001907348633
    7. ' ' → logprob: -18.125001907348633
    8. 'n' → logprob: -18.750001907348633
    9. '.' → logprob: -19.000001907348633
    10. 'space' → logprob: -19.125001907348633

Token 10: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.004645026754587889
    2. 'import' → logprob: -5.379644870758057
    3. ' ' → logprob: -10.754645347595215
    4. '	import' → logprob: -13.379645347595215
    5. '.' → logprob: -14.629645347595215
    6. '_import' → logprob: -14.879645347595215
    7. ' im' → logprob: -15.379645347595215
    8. '<|end|>' → logprob: -15.504645347595215
    9. ' impor' → logprob: -15.879645347595215
    10. '.import' → logprob: -16.3796443939209

Token 11: ' he' (ID: 501)
  Prédit: ' he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' he' → logprob: -0.5809963345527649
    2. 'he' → logprob: -0.8309963345527649
    3. 'heap' → logprob: -5.955996513366699
    4. 'merge' → logprob: -7.205996513366699
    5. ' n' → logprob: -7.330996513366699
    6. 'nl' → logprob: -7.705996513366699
    7. 'n' → logprob: -8.4559965133667
    8. ' merge' → logprob: -8.8309965133667
    9. ' heap' → logprob: -8.9559965133667
    10. ' ' → logprob: -9.9559965133667

Token 12: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.06237544119358063
    2. 'ap' → logprob: -2.812375545501709
    3. 'a' → logprob: -7.812375545501709
    4. 'aq' → logprob: -13.43737506866455
    5. 'ап' → logprob: -14.93737506866455
    6. 'q' → logprob: -15.68737506866455
    7. 'appen' → logprob: -16.062376022338867
    8. 'apl' → logprob: -16.062376022338867
    9. '[' → logprob: -16.187376022338867
    10. 'appa' → logprob: -16.312376022338867

Token 13: 'op' (ID: 467)
  Prédit: 'ush'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.006730765104293823
    2. 'op' → logprob: -5.006730556488037
    3. 'us' → logprob: -11.756731033325195
    4. 'o' → logprob: -12.381731033325195
    5. 'u' → logprob: -12.631731033325195
    6. 'ut' → logprob: -17.131731033325195
    7. '```' → logprob: -17.631731033325195
    8. 'opleft' → logprob: -17.631731033325195
    9. 'osh' → logprob: -17.756731033325195
    10. '[' → logprob: -18.131731033325195

Token 14: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2862653434276581
    2. 'import' → logprob: -1.6612653732299805
    3. 'he' → logprob: -3.0362653732299805
    4. ' ' → logprob: -5.2862653732299805
    5. 'from' → logprob: -5.5362653732299805
    6. ' ,' → logprob: -8.16126537322998
    7. ' and' → logprob: -8.28626537322998
    8. '(' → logprob: -8.66126537322998
    9. '```' → logprob: -8.66126537322998
    10. '<|end|>' → logprob: -8.66126537322998

Token 15: ' he' (ID: 501)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.05253903940320015
    2. ' he' → logprob: -3.052539110183716
    3. 'heap' → logprob: -5.552538871765137
    4. ' heap' → logprob: -9.677538871765137
    5. 'hep' → logprob: -13.802538871765137
    6. '```' → logprob: -14.052538871765137
    7. 'hea' → logprob: -15.177538871765137
    8. 'hev' → logprob: -15.427538871765137
    9. ' heaps' → logprob: -15.677538871765137
    10. 'heme' → logprob: -15.927538871765137

Token 16: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.00043162284418940544
    2. 'ap' → logprob: -7.750431537628174
    3. 'a' → logprob: -14.250432014465332
    4. 'appen' → logprob: -16.500431060791016
    5. 'appa' → logprob: -17.125431060791016
    6. 'apput' → logprob: -17.125431060791016
    7. 'append' → logprob: -17.625431060791016
    8. ' app' → logprob: -17.875431060791016
    9. 'appt' → logprob: -18.000431060791016
    10. 'APP' → logprob: -18.250431060791016

Token 17: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -1.8624639324116288e-06
    2. 'us' → logprob: -14.000001907348633
    3. 'u' → logprob: -14.750001907348633
    4. 'op' → logprob: -15.000001907348633
    5. 'sh' → logprob: -16.375001907348633
    6. 'p' → logprob: -16.750001907348633
    7. 'push' → logprob: -17.250001907348633
    8. 'USH' → logprob: -17.750001907348633
    9. 'ut' → logprob: -17.875001907348633
    10. '```' → logprob: -18.000001907348633

Token 18: ',' (ID: 11)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.763729453086853
    2. '
' → logprob: -1.138729453086853
    3. '\' → logprob: -2.3887295722961426
    4. '

' → logprob: -3.3887295722961426
    5. 'def' → logprob: -3.3887295722961426
    6. '' → logprob: -3.7637295722961426
    7. '(' → logprob: -4.763729572296143
    8. '(
' → logprob: -5.638729572296143
    9. '```' → logprob: -5.638729572296143
    10. '
' → logprob: -5.763729572296143

Token 19: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.22159714996814728
    2. 'he' → logprob: -1.7215971946716309
    3. ' heap' → logprob: -4.346597194671631
    4. ' he' → logprob: -4.971597194671631
    5. 'merge' → logprob: -9.721596717834473
    6. '.heap' → logprob: -11.221596717834473
    7. 'deque' → logprob: -11.971596717834473
    8. '(heap' → logprob: -12.596596717834473
    9. 'n' → logprob: -12.846596717834473
    10. 'nl' → logprob: -12.846596717834473

Token 20: 'ify' (ID: 1985)
  Prédit: 'ify'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ify' → logprob: -0.09513436257839203
    2. 'q' → logprob: -2.8451342582702637
    3. 'replace' → logprob: -3.5951342582702637
    4. 's' → logprob: -6.720134258270264
    5. 'push' → logprob: -7.345134258270264
    6. 'queue' → logprob: -7.595134258270264
    7. 'empty' → logprob: -8.095134735107422
    8. '[' → logprob: -8.220134735107422
    9. 'sort' → logprob: -8.220134735107422
    10. ')' → logprob: -8.595134735107422

Token 21: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.39363595843315125
    2. '

' → logprob: -1.7686359882354736
    3. '\n' → logprob: -2.7686359882354736
    4. '' → logprob: -3.2686359882354736
    5. '\' → logprob: -3.6436359882354736
    6. 'def' → logprob: -4.7686357498168945
    7. '```' → logprob: -5.0186357498168945
    8. '
' → logprob: -5.7686357498168945
    9. '`' → logprob: -6.3936357498168945
    10. 'd' → logprob: -6.6436357498168945

Token 22: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7914256453514099
    2. '

' → logprob: -1.7914257049560547
    3. 'def' → logprob: -2.0414257049560547
    4. '' → logprob: -2.5414257049560547
    5. '\' → logprob: -2.6664257049560547
    6. '```' → logprob: -3.6664257049560547
    7. '\n' → logprob: -3.7914257049560547
    8. 'd' → logprob: -3.7914257049560547
    9. '`' → logprob: -4.416425704956055
    10. '#' → logprob: -5.166425704956055

Token 23: ' itertools' (ID: 103178)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -1.0100762844085693
    2. ' math' → logprob: -1.2600762844085693
    3. ' itertools' → logprob: -1.5100762844085693
    4. 'collections' → logprob: -2.2600762844085693
    5. 'math' → logprob: -3.6350762844085693
    6. ' functools' → logprob: -8.510076522827148
    7. '_math' → logprob: -9.135076522827148
    8. ' operator' → logprob: -9.760076522827148
    9. ' threading' → logprob: -10.135076522827148
    10. ' typing' → logprob: -10.135076522827148

Token 24: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.029755927622318268
    2. 'import' → logprob: -3.6547558307647705
    3. '.' → logprob: -5.77975606918335
    4. '	import' → logprob: -9.029755592346191
    5. ' ' → logprob: -9.404755592346191
    6. '.import' → logprob: -9.779755592346191
    7. '.im' → logprob: -10.154755592346191
    8. ' .' → logprob: -10.279755592346191
    9. '<|end|>' → logprob: -12.029755592346191
    10. ' im' → logprob: -12.779755592346191

Token 25: ' chain' (ID: 13464)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.5215619206428528
    2. 'acc' → logprob: -2.396561861038208
    3. ' group' → logprob: -2.646561861038208
    4. ' accumulate' → logprob: -2.771561861038208
    5. 'group' → logprob: -3.146561861038208
    6. ' count' → logprob: -3.271561861038208
    7. 'com' → logprob: -3.771561861038208
    8. 'is' → logprob: -3.896561861038208
    9. ' is' → logprob: -4.396562099456787
    10. ' permutations' → logprob: -4.521562099456787

Token 26: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9234848022460938
    2. '

' → logprob: -1.0484848022460938
    3. ',' → logprob: -2.1734848022460938
    4. '\n' → logprob: -3.2984848022460938
    5. 'import' → logprob: -3.2984848022460938
    6. 'def' → logprob: -4.423484802246094
    7. ',
' → logprob: -4.673484802246094
    8. '```' → logprob: -4.673484802246094
    9. '' → logprob: -5.173484802246094
    10. '.' → logprob: -5.923484802246094

Token 27: 'input' (ID: 2586)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.03130750358104706
    2. 'def' → logprob: -4.406307697296143
    3. '_' → logprob: -5.406307697296143
    4. 'class' → logprob: -5.781307697296143
    5. '\' → logprob: -5.906307697296143
    6. '#' → logprob: -6.781307697296143
    7. 'c' → logprob: -6.781307697296143
    8. 'a' → logprob: -7.031307697296143
    9. '```' → logprob: -7.281307697296143
    10. 'n' → logprob: -7.406307697296143

Token 28: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004786699544638395
    2. '.' → logprob: -5.879786491394043
    3. '=' → logprob: -7.504786491394043
    4. ')' → logprob: -7.754786491394043
    5. '<|end|>' → logprob: -7.879786491394043
    6. '()' → logprob: -8.004786491394043
    7. ' =' → logprob: -10.129786491394043
    8. '_' → logprob: -10.754786491394043
    9. '(.)' → logprob: -10.754786491394043
    10. ' (' → logprob: -10.879786491394043

Token 29: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.17001576721668243
    2. ' sys' → logprob: -1.920015811920166
    3. 'input' → logprob: -4.670015811920166
    4. ' input' → logprob: -8.295015335083008
    5. 'lambda' → logprob: -9.170015335083008
    6. ' lambda' → logprob: -11.795015335083008
    7. '	sys' → logprob: -11.920015335083008
    8. '=sys' → logprob: -13.795015335083008
    9. '```' → logprob: -14.170015335083008
    10. '(sys' → logprob: -14.545015335083008

Token 30: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.01232185773551464
    2. '.' → logprob: -4.637321949005127
    3. '.stdout' → logprob: -6.512321949005127
    4. '.argv' → logprob: -8.012321472167969
    5. '.readline' → logprob: -8.012321472167969
    6. '.version' → logprob: -8.887321472167969
    7. '.std' → logprob: -9.262321472167969
    8. '.input' → logprob: -10.012321472167969
    9. ' .' → logprob: -10.387321472167969
    10. '.path' → logprob: -10.887321472167969

Token 31: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0011620076838880777
    2. '.read' → logprob: -7.001162052154541
    3. 'read' → logprob: -8.376161575317383
    4. '.readlines' → logprob: -11.876161575317383
    5. '.' → logprob: -12.126161575317383
    6. 'buffer' → logprob: -13.001161575317383
    7. ' readline' → logprob: -13.001161575317383
    8. '_read' → logprob: -13.251161575317383
    9. '.buffer' → logprob: -14.376161575317383
    10. '.Read' → logprob: -15.376161575317383

Token 32: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7778921127319336
    2. 'def' → logprob: -1.1528921127319336
    3. '

' → logprob: -2.2778921127319336
    4. '(' → logprob: -2.4028921127319336
    5. '(
' → logprob: -5.027892112731934
    6. '()' → logprob: -5.027892112731934
    7. '\n' → logprob: -5.277892112731934
    8. '\' → logprob: -6.402892112731934
    9. '()

' → logprob: -6.527892112731934
    10. '#' → logprob: -6.527892112731934

Token 33: 'sys' (ID: 17324)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.092747762799263
    2. '
' → logprob: -3.092747688293457
    3. '

' → logprob: -3.717747688293457
    4. 'class' → logprob: -5.217747688293457
    5. '\n' → logprob: -5.467747688293457
    6. '```' → logprob: -5.717747688293457
    7. 'n' → logprob: -6.217747688293457
    8. '\' → logprob: -6.592747688293457
    9. '' → logprob: -8.342747688293457
    10. 'd' → logprob: -8.342747688293457

Token 34: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2916180491447449
    2. '.exit' → logprob: -1.9166181087493896
    3. '.stdout' → logprob: -3.0416181087493896
    4. '.stdin' → logprob: -3.1666181087493896
    5. '.argv' → logprob: -4.7916178703308105
    6. '.path' → logprob: -5.5416178703308105
    7. '.stderr' → logprob: -6.0416178703308105
    8. '.version' → logprob: -8.041618347167969
    9. '.setdefault' → logprob: -8.041618347167969
    10. '.write' → logprob: -8.666618347167969

Token 35: 'rec' (ID: 9285)
  Prédit: 'rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.001377137377858162
    2. '_rec' → logprob: -6.626377105712891
    3. ' recursion' → logprob: -10.75137710571289
    4. 're' → logprob: -11.62637710571289
    5. 'limit' → logprob: -11.87637710571289
    6. 'ursion' → logprob: -12.75137710571289
    7. 'execution' → logprob: -13.12637710571289
    8. '_limit' → logprob: -13.50137710571289
    9. '_int' → logprob: -13.87637710571289
    10. 'rl' → logprob: -14.37637710571289

Token 36: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.0001005630983854644
    2. 'urs' → logprob: -9.750100135803223
    3. 'ursive' → logprob: -10.500100135803223
    4. 'ur' → logprob: -11.875100135803223
    5. 'limit' → logprob: -12.500100135803223
    6. 'ursor' → logprob: -13.750100135803223
    7. 'urst' → logprob: -13.750100135803223
    8. 'usr' → logprob: -14.375100135803223
    9. 'urse' → logprob: -14.750100135803223
    10. 'urf' → logprob: -15.125100135803223

Token 37: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.008619893342256546
    2. '_limit' → logprob: -4.758619785308838
    3. 'lim' → logprob: -13.008620262145996
    4. 'depth' → logprob: -13.383620262145996
    5. '_depth' → logprob: -14.258620262145996
    6. 'Limit' → logprob: -14.883620262145996
    7. '-limit' → logprob: -15.383620262145996
    8. '_LIMIT' → logprob: -16.00861930847168
    9. ' limit' → logprob: -16.63361930847168
    10. '(limit' → logprob: -16.75861930847168

Token 38: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.8624639324116288e-06
    2. '40' → logprob: -14.250001907348633
    3. '((' → logprob: -14.750001907348633
    4. ' (' → logprob: -14.875001907348633
    5. '(
' → logprob: -15.500001907348633
    6. '()' → logprob: -16.000001907348633
    7. '400' → logprob: -16.750001907348633
    8. '100' → logprob: -17.500001907348633
    9. ' ' → logprob: -17.625001907348633
    10. '50' → logprob: -17.875001907348633

Token 39: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.018168320879340172
    2. '100' → logprob: -4.0181684494018555
    3. ' ' → logprob: -11.518168449401855
    4. '300' → logprob: -12.643168449401855
    5. '200' → logprob: -12.893168449401855
    6. '500' → logprob: -14.018168449401855
    7. '400' → logprob: -14.268168449401855
    8. '1' → logprob: -14.893168449401855
    9. '999' → logprob: -15.018168449401855
    10. '250' → logprob: -15.268168449401855

Token 40: '**' (ID: 410)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0875895768404007
    2. '8' → logprob: -3.0875895023345947
    3. '**' → logprob: -3.5875895023345947
    4. '07' → logprob: -4.712589740753174
    5. '9' → logprob: -7.587589740753174
    6. '0' → logprob: -8.087589263916016
    7. '6' → logprob: -8.087589263916016
    8. '00' → logprob: -8.087589263916016
    9. '08' → logprob: -9.462589263916016
    10. '007' → logprob: -10.087589263916016

Token 41: '9' (ID: 24)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.018350226804614067
    2. '9' → logprob: -4.018350124359131
    3. '8' → logprob: -8.518350601196289
    4. '**' → logprob: -14.643350601196289
    5. '6' → logprob: -16.39335060119629
    6. '```' → logprob: -17.14335060119629
    7. '+' → logprob: -19.64335060119629
    8. '``' → logprob: -19.76835060119629
    9. '

' → logprob: -20.64335060119629
    10. '​' → logprob: -20.76835060119629

Token 42: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.941850526549388e-06
    2. ' )' → logprob: -12.250007629394531
    3. ')
' → logprob: -12.750007629394531
    4. ')

' → logprob: -16.62500762939453
    5. '))' → logprob: -16.87500762939453
    6. '
' → logprob: -17.50000762939453
    7. '```' → logprob: -17.75000762939453
    8. '}' → logprob: -17.87500762939453
    9. '),' → logprob: -18.12500762939453
    10. ')
' → logprob: -18.37500762939453

Token 43: 'N' (ID: 45)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5626828670501709
    2. 'class' → logprob: -1.812682867050171
    3. 'd' → logprob: -2.562682867050171
    4. '
' → logprob: -2.562682867050171
    5. '

' → logprob: -3.437682867050171
    6. '\' → logprob: -3.562682867050171
    7. 'n' → logprob: -3.562682867050171
    8. '#' → logprob: -4.68768310546875
    9. 'N' → logprob: -5.43768310546875
    10. '```' → logprob: -6.31268310546875

Token 44: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.41701456904411316
    2. '=' → logprob: -1.9170145988464355
    3. ' ' → logprob: -2.0420145988464355
    4. ',' → logprob: -2.7920145988464355
    5. ' ,' → logprob: -6.2920145988464355
    6. '<|end|>' → logprob: -7.9170145988464355
    7. ')' → logprob: -8.542014122009277
    8. '.' → logprob: -8.792014122009277
    9. '  ' → logprob: -9.417014122009277
    10. ' )' → logprob: -10.542014122009277

Token 45: ' Q' (ID: 1486)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'K' → logprob: -1.2832530736923218
    2. 'M' → logprob: -1.2832530736923218
    3. ' K' → logprob: -1.4082530736923218
    4. ' M' → logprob: -1.6582530736923218
    5. ' ' → logprob: -5.283253192901611
    6. 'Q' → logprob: -6.158253192901611
    7. '=' → logprob: -6.783253192901611
    8. ' =' → logprob: -7.908253192901611
    9. 'space' → logprob: -8.033252716064453
    10. 'int' → logprob: -8.033252716064453

Token 46: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2019999921321869
    2. '=' → logprob: -1.7020000219345093
    3. ',' → logprob: -7.452000141143799
    4. ' ,' → logprob: -12.82699966430664
    5. ' ' → logprob: -13.45199966430664
    6. '=input' → logprob: -13.70199966430664
    7. '=int' → logprob: -15.82699966430664
    8. '<|end|>' → logprob: -15.82699966430664
    9. ' =
' → logprob: -16.07699966430664
    10. ' =",' → logprob: -16.20199966430664

Token 47: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.008629930205643177
    2. 'map' → logprob: -4.75862979888916
    3. ' ' → logprob: -11.63362979888916
    4. ' input' → logprob: -12.25862979888916
    5. ' int' → logprob: -14.38362979888916
    6. 'input' → logprob: -14.75862979888916
    7. '	map' → logprob: -15.13362979888916
    8. 'int' → logprob: -15.25862979888916
    9. ' list' → logprob: -16.008630752563477
    10. ' mapa' → logprob: -16.258630752563477

Token 48: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.12885916233062744
    2. '(' → logprob: -2.128859043121338
    3. '(input' → logprob: -6.503859043121338
    4. '(lambda' → logprob: -8.128859519958496
    5. '(str' → logprob: -9.878859519958496
    6. '(tuple' → logprob: -10.253859519958496
    7. '(list' → logprob: -11.503859519958496
    8. 'int' → logprob: -12.003859519958496
    9. '(
' → logprob: -12.128859519958496
    10. '<|end|>' → logprob: -12.253859519958496

Token 49: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03160044550895691
    2. '(int' → logprob: -4.406600475311279
    3. '(input' → logprob: -4.906600475311279
    4. ',' → logprob: -4.906600475311279
    5. ')' → logprob: -6.781600475311279
    6. '(sys' → logprob: -6.906600475311279
    7. '(str' → logprob: -7.781600475311279
    8. '(lambda' → logprob: -8.156599998474121
    9. '```' → logprob: -8.406599998474121
    10. 'input' → logprob: -9.156599998474121

Token 50: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.20238924026489258
    2. 'input' → logprob: -1.7023892402648926
    3. ' sys' → logprob: -7.077389240264893
    4. 'sys' → logprob: -8.952388763427734
    5. '(input' → logprob: -14.452388763427734
    6. ' ' → logprob: -14.577388763427734
    7. ')' → logprob: -14.702388763427734
    8. ',input' → logprob: -15.577388763427734
    9. '=input' → logprob: -15.702388763427734
    10. ' )' → logprob: -16.202388763427734

Token 51: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.5280035734176636
    2. '())' → logprob: -1.5280035734176636
    3. '()' → logprob: -1.6530035734176636
    4. ')' → logprob: -6.903003692626953
    5. '(' → logprob: -8.278003692626953
    6. '('' → logprob: -8.778003692626953
    7. '()))' → logprob: -9.278003692626953
    8. '());' → logprob: -9.528003692626953
    9. '();)' → logprob: -10.153003692626953
    10. '()]' → logprob: -10.528003692626953

Token 52: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.2525286078453064
    2. 'strip' → logprob: -1.5025286674499512
    3. 'rstrip' → logprob: -7.502528667449951
    4. 'read' → logprob: -10.002528190612793
    5. ' split' → logprob: -13.752528190612793
    6. ')' → logprob: -14.502528190612793
    7. ' strip' → logprob: -15.002528190612793
    8. '()' → logprob: -16.25252914428711
    9. 'plit' → logprob: -16.37752914428711
    10. 'str' → logprob: -16.62752914428711

Token 53: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.771655115589965e-05
    2. '()' → logprob: -12.000018119812012
    3. '))' → logprob: -12.000018119812012
    4. '())' → logprob: -12.750018119812012
    5. '(' → logprob: -13.500018119812012
    6. '),' → logprob: -15.000018119812012
    7. ')`' → logprob: -15.375018119812012
    8. ' )' → logprob: -16.000017166137695
    9. ')
' → logprob: -16.000017166137695
    10. '`)' → logprob: -16.625017166137695

Token 54: 'ST' (ID: 1117)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' 
' → logprob: -1.055763840675354
    2. 'data' → logprob: -1.680763840675354
    3. 'a' → logprob: -1.930763840675354
    4. '
' → logprob: -2.9307637214660645
    5. 'A' → logprob: -3.0557637214660645
    6. '  
' → logprob: -3.9307637214660645
    7. 's' → logprob: -3.9307637214660645
    8. 'graph' → logprob: -3.9307637214660645
    9. ')' → logprob: -4.4307637214660645
    10. ' A' → logprob: -4.5557637214660645

Token 55: 'X' (ID: 55)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5347477197647095
    2. ' =' → logprob: -1.0347477197647095
    3. 'A' → logprob: -3.65974760055542
    4. 'arts' → logprob: -4.03474760055542
    5. '=[]' → logprob: -5.53474760055542
    6. 's' → logprob: -6.15974760055542
    7. '_list' → logprob: -6.53474760055542
    8. '[]' → logprob: -6.90974760055542
    9. '=[' → logprob: -7.03474760055542
    10. '=[]
' → logprob: -7.65974760055542

Token 56: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4113217294216156
    2. ' =' → logprob: -1.161321759223938
    3. '=[]' → logprob: -4.411321640014648
    4. '[]' → logprob: -5.161321640014648
    5. 'A' → logprob: -6.411321640014648
    6. 'P' → logprob: -6.536321640014648
    7. 'X' → logprob: -7.161321640014648
    8. 'L' → logprob: -7.911321640014648
    9. '=[]
' → logprob: -8.161321640014648
    10. 'V' → logprob: -8.661321640014648

Token 57: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.31297022104263306
    2. '[list' → logprob: -1.5629701614379883
    3. '[]' → logprob: -3.5629701614379883
    4. '[int' → logprob: -3.8129701614379883
    5. '[array' → logprob: -6.312970161437988
    6. '[ch' → logprob: -6.812970161437988
    7. '[str' → logprob: -6.937970161437988
    8. '[input' → logprob: -7.187970161437988
    9. '[line' → logprob: -7.312970161437988
    10. '[i' → logprob: -7.312970161437988

Token 58: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.05157680809497833
    2. 'tuple' → logprob: -3.051576852798462
    3. ']' → logprob: -6.551576614379883
    4. '[]' → logprob: -7.176576614379883
    5. 'map' → logprob: -7.551576614379883
    6. ' list' → logprob: -9.926576614379883
    7. '(tuple' → logprob: -9.926576614379883
    8. ' tuple' → logprob: -10.176576614379883
    9. '(list' → logprob: -10.426576614379883
    10. '[' → logprob: -10.676576614379883

Token 59: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0003445216570980847
    2. 'map' → logprob: -8.375344276428223
    3. '(' → logprob: -9.375344276428223
    4. '(input' → logprob: -10.875344276428223
    5. '()' → logprob: -11.750344276428223
    6. ']' → logprob: -14.375344276428223
    7. '(int' → logprob: -15.250344276428223
    8. '	map' → logprob: -15.375344276428223
    9. '(range' → logprob: -15.500344276428223
    10. ',map' → logprob: -15.500344276428223

Token 60: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0003323665587231517
    2. 'int' → logprob: -8.750332832336426
    3. '(' → logprob: -9.125332832336426
    4. ',int' → logprob: -10.500332832336426
    5. ']int' → logprob: -11.125332832336426
    6. '[int' → logprob: -11.750332832336426
    7. '<|end|>' → logprob: -12.125332832336426
    8. '<int' → logprob: -12.875332832336426
    9. ')' → logprob: -13.000332832336426
    10. '=int' → logprob: -13.250332832336426

Token 61: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.03232517093420029
    2. ',' → logprob: -3.532325267791748
    3. '(input' → logprob: -6.157325267791748
    4. 'input' → logprob: -8.40732479095459
    5. '(' → logprob: -9.28232479095459
    6. ',int' → logprob: -9.28232479095459
    7. ',(' → logprob: -10.78232479095459
    8. ' ,' → logprob: -11.65732479095459
    9. 'import' → logprob: -13.28232479095459
    10. '<input' → logprob: -13.28232479095459

Token 62: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.31328436732292175
    2. ' input' → logprob: -1.3132843971252441
    3. ')' → logprob: -11.938283920288086
    4. '(input' → logprob: -12.063283920288086
    5. '	input' → logprob: -12.938283920288086
    6. ' ' → logprob: -13.063283920288086
    7. ',input' → logprob: -13.313283920288086
    8. '=input' → logprob: -13.688283920288086
    9. '<input' → logprob: -14.188283920288086
    10. '[input' → logprob: -14.438283920288086

Token 63: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.9385402993066236e-05
    2. '()' → logprob: -11.250019073486328
    3. ')' → logprob: -12.500019073486328
    4. '.readline' → logprob: -13.750019073486328
    5. '))' → logprob: -14.625019073486328
    6. '.' → logprob: -14.875019073486328
    7. '(' → logprob: -15.250019073486328
    8. ' ().' → logprob: -15.750019073486328
    9. '()))' → logprob: -15.875019073486328
    10. '.split' → logprob: -16.375019073486328

Token 64: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -5.676981345459353e-06
    2. 'strip' → logprob: -12.625005722045898
    3. 'rstrip' → logprob: -13.250005722045898
    4. '(split' → logprob: -15.125005722045898
    5. ' split' → logprob: -15.875005722045898
    6. 'read' → logprob: -16.3750057220459
    7. 'spl' → logprob: -17.0000057220459
    8. '.split' → logprob: -20.6250057220459
    9. 's' → logprob: -21.2500057220459
    10. 'plit' → logprob: -21.6250057220459

Token 65: '()))' (ID: 16829)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.04426189884543419
    2. '()))' → logprob: -3.169261932373047
    3. ')' → logprob: -7.169261932373047
    4. '()' → logprob: -7.919261932373047
    5. ' ))' → logprob: -10.419261932373047
    6. '())' → logprob: -10.669261932373047
    7. ')))' → logprob: -11.294261932373047
    8. '),' → logprob: -11.294261932373047
    9. '(' → logprob: -11.294261932373047
    10. ' ' → logprob: -11.544261932373047

Token 66: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3705594837665558
    2. '(' → logprob: -2.1205594539642334
    3. '(input' → logprob: -2.4955594539642334
    4. ')' → logprob: -2.8705594539642334
    5. 'for' → logprob: -3.1205594539642334
    6. '()]' → logprob: -5.7455596923828125
    7. ' for' → logprob: -7.1205596923828125
    8. '())' → logprob: -7.3705596923828125
    9. ')]' → logprob: -7.6205596923828125
    10. ']' → logprob: -7.7455596923828125

Token 67: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.991218090057373
    2. 'range' → logprob: -1.116218090057373
    3. '_' → logprob: -1.241218090057373
    4. '(range' → logprob: -5.116218090057373
    5. '_range' → logprob: -5.241218090057373
    6. '(' → logprob: -7.741218090057373
    7. ' in' → logprob: -8.116218566894531
    8. '	range' → logprob: -8.491218566894531
    9. ' _' → logprob: -10.366218566894531
    10. 'in' → logprob: -10.866218566894531

Token 68: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.4737466275691986
    2. 'in' → logprob: -1.098746657371521
    3. ' in' → logprob: -3.2237465381622314
    4. ' range' → logprob: -5.4737467765808105
    5. ' ' → logprob: -11.223746299743652
    6. '(range' → logprob: -11.973746299743652
    7. '   ' → logprob: -12.723746299743652
    8. '_' → logprob: -12.723746299743652
    9. 'ange' → logprob: -12.723746299743652
    10. '  ' → logprob: -12.723746299743652

Token 69: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0011706985533237457
    2. ' range' → logprob: -6.751170635223389
    3. '(range' → logprob: -15.501171112060547
    4. '	range' → logprob: -15.751171112060547
    5. '[' → logprob: -16.626171112060547
    6. ' ' → logprob: -17.376171112060547
    7. 'r' → logprob: -18.126171112060547
    8. '   ' → logprob: -18.251171112060547
    9. '
' → logprob: -18.251171112060547
    10. '  ' → logprob: -18.376171112060547

Token 70: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0001855406299000606
    2. '(' → logprob: -8.6251859664917
    3. 'N' → logprob: -12.3751859664917
    4. '(
' → logprob: -14.1251859664917
    5. '(n' → logprob: -14.7501859664917
    6. ' (' → logprob: -14.7501859664917
    7. '(Q' → logprob: -16.625185012817383
    8. ' N' → logprob: -17.000185012817383
    9. '	N' → logprob: -17.625185012817383
    10. '(int' → logprob: -18.000185012817383

Token 71: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0006940854946151376
    2. ']' → logprob: -7.375694274902344
    3. ')' → logprob: -9.625694274902344
    4. ')],' → logprob: -14.500694274902344
    5. '])' → logprob: -15.250694274902344
    6. '])]' → logprob: -15.250694274902344
    7. ')])' → logprob: -15.875694274902344
    8. ')]
' → logprob: -15.875694274902344
    9. '}]' → logprob: -16.500694274902344
    10. '')]' → logprob: -16.625694274902344

Token 72: 'D' (ID: 35)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1463668793439865
    2. 'ST' → logprob: -2.896366834640503
    3. 'sorted' → logprob: -4.271367073059082
    4. 'S' → logprob: -4.646367073059082
    5. 'queries' → logprob: -4.646367073059082
    6. 's' → logprob: -4.896367073059082
    7. '[' → logprob: -5.396367073059082
    8. 'st' → logprob: -5.521367073059082
    9. '
' → logprob: -5.771367073059082
    10. 'query' → logprob: -5.896367073059082

Token 73: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12263723462820053
    2. '=' → logprob: -3.1226372718811035
    3. 'P' → logprob: -3.2476372718811035
    4. '=[]' → logprob: -3.8726372718811035
    5. ',' → logprob: -5.7476372718811035
    6. 'PQ' → logprob: -6.6226372718811035
    7. 'p' → logprob: -6.7476372718811035
    8. ' =[' → logprob: -7.1226372718811035
    9. 'ef' → logprob: -7.2476372718811035
    10. ' ' → logprob: -7.2476372718811035

Token 74: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2958272397518158
    2. '[]' → logprob: -2.0458271503448486
    3. ' [' → logprob: -2.2958271503448486
    4. '{}' → logprob: -4.420827388763428
    5. '[int' → logprob: -5.545827388763428
    6. ' []' → logprob: -5.670827388763428
    7. '[len' → logprob: -6.045827388763428
    8. '[max' → logprob: -6.420827388763428
    9. ' {}' → logprob: -7.170827388763428
    10. '{' → logprob: -8.04582691192627

Token 75: 'int' (ID: 491)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3573339879512787
    2. 'float' → logprob: -2.2323338985443115
    3. '[]' → logprob: -2.8573338985443115
    4. 'int' → logprob: -2.8573338985443115
    5. '10' → logprob: -3.1073338985443115
    6. '-' → logprob: -4.232334136962891
    7. 'list' → logprob: -5.607334136962891
    8. '[' → logprob: -5.857334136962891
    9. ']' → logprob: -5.857334136962891
    10. '[]
' → logprob: -6.232334136962891

Token 76: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.023830464109778404
    2. '(' → logprob: -4.273830413818359
    3. '(x' → logprob: -4.898830413818359
    4. '()' → logprob: -6.898830413818359
    5. 'input' → logprob: -8.27383041381836
    6. '(i' → logprob: -8.27383041381836
    7. ']' → logprob: -8.39883041381836
    8. '(
' → logprob: -8.64883041381836
    9. '()]' → logprob: -8.64883041381836
    10. '(

' → logprob: -11.64883041381836

Token 77: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.001901863026432693
    2. '()' → logprob: -6.376901626586914
    3. ')' → logprob: -8.876901626586914
    4. '())
' → logprob: -10.751901626586914
    5. '()]' → logprob: -11.001901626586914
    6. '().' → logprob: -11.251901626586914
    7. '()
' → logprob: -12.751901626586914
    8. ')]' → logprob: -13.126901626586914
    9. '(' → logprob: -13.251901626586914
    10. ' ())' → logprob: -13.751901626586914

Token 78: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.045095786452293396
    2. ')' → logprob: -3.170095682144165
    3. 'for' → logprob: -6.295095920562744
    4. ' for' → logprob: -8.795095443725586
    5. '())' → logprob: -10.545095443725586
    6. ']' → logprob: -11.170095443725586
    7. ')]' → logprob: -11.170095443725586
    8. '()]' → logprob: -11.295095443725586
    9. '0' → logprob: -12.045095443725586
    10. ' ' → logprob: -12.170095443725586

Token 79: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5874435305595398
    2. '_' → logprob: -0.8374435305595398
    3. ' in' → logprob: -4.9624433517456055
    4. 'range' → logprob: -6.0874433517456055
    5. ' _' → logprob: -6.2124433517456055
    6. '_range' → logprob: -8.837443351745605
    7. '(range' → logprob: -11.087443351745605
    8. ' ' → logprob: -12.712443351745605
    9. '	range' → logprob: -13.587443351745605
    10. 'in' → logprob: -14.212443351745605

Token 80: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1689639538526535
    2. 'in' → logprob: -2.54396390914917
    3. ' range' → logprob: -2.79396390914917
    4. ' in' → logprob: -4.16896390914917
    5. '(range' → logprob: -9.043964385986328
    6. ' ' → logprob: -10.168964385986328
    7. 'ran' → logprob: -10.793964385986328
    8. '	range' → logprob: -10.918964385986328
    9. 'ange' → logprob: -11.293964385986328
    10. '_range' → logprob: -11.418964385986328

Token 81: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.38687798380851746
    2. 'range' → logprob: -1.1368780136108398
    3. ' ran' → logprob: -12.26187801361084
    4. ' ' → logprob: -14.13687801361084
    5. '	range' → logprob: -14.76187801361084
    6. ' ra' → logprob: -15.26187801361084
    7. 'ran' → logprob: -15.38687801361084
    8. '(range' → logprob: -15.76187801361084
    9. 'r' → logprob: -15.88687801361084
    10. 'ra' → logprob: -15.88687801361084

Token 82: '(Q' (ID: 14437)
  Prédit: '(Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Q' → logprob: -0.13500691950321198
    2. '(range' → logprob: -2.635006904602051
    3. ' range' → logprob: -3.135006904602051
    4. 'range' → logprob: -4.510006904602051
    5. '(' → logprob: -9.63500690460205
    6. '(R' → logprob: -12.76000690460205
    7. 'Range' → logprob: -13.51000690460205
    8. 'Q' → logprob: -14.13500690460205
    9. '	range' → logprob: -14.38500690460205
    10. '(r' → logprob: -14.38500690460205

Token 83: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.018776508048176765
    2. ']' → logprob: -4.0187764167785645
    3. ')' → logprob: -7.3937764167785645
    4. '])' → logprob: -12.018776893615723
    5. '])]' → logprob: -12.768776893615723
    6. ']
' → logprob: -14.393776893615723
    7. ')]
' → logprob: -14.643776893615723
    8. ' ]' → logprob: -14.643776893615723
    9. ')])' → logprob: -15.393776893615723
    10. '')]' → logprob: -15.768776893615723

Token 84: 'inf' (ID: 22226)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4584416151046753
    2. '#' → logprob: -1.4584416151046753
    3. 'ST' → logprob: -3.458441734313965
    4. 's' → logprob: -4.083441734313965
    5. '' → logprob: -4.083441734313965
    6. 'S' → logprob: -4.458441734313965
    7. 'sorted' → logprob: -4.583441734313965
    8. '
' → logprob: -5.083441734313965
    9. 'st' → logprob: -5.083441734313965
    10. '

' → logprob: -5.333441734313965

Token 85: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07355798035860062
    2. ' =' → logprob: -2.6985580921173096
    3. ' ' → logprob: -6.5735578536987305
    4. '_' → logprob: -6.5735578536987305
    5. '<|end|>' → logprob: -8.57355785369873
    6. '1' → logprob: -9.07355785369873
    7. 'o' → logprob: -9.32355785369873
    8. '(' → logprob: -9.82355785369873
    9. ',' → logprob: -10.07355785369873
    10. '' → logprob: -10.32355785369873

Token 86: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.2872822880744934
    2. ' ' → logprob: -1.4122822284698486
    3. ' float' → logprob: -5.912282466888428
    4. 'float' → logprob: -6.162282466888428
    5. '1' → logprob: -6.662282466888428
    6. ' ' → logprob: -12.03728199005127
    7. 'int' → logprob: -12.28728199005127
    8. '2' → logprob: -13.03728199005127
    9. '100' → logprob: -13.41228199005127
    10. ' int' → logprob: -13.53728199005127

Token 87: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0037886735517531633
    2. 'float' → logprob: -5.753788471221924
    3. '1' → logprob: -7.503788471221924
    4. ' ' → logprob: -10.253788948059082
    5. 'int' → logprob: -12.253788948059082
    6. '100' → logprob: -12.503788948059082
    7. ' float' → logprob: -12.503788948059082
    8. '2' → logprob: -12.628788948059082
    9. '3' → logprob: -13.003788948059082
    10. '9' → logprob: -13.253788948059082

Token 88: '**' (ID: 410)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.28880828619003296
    2. '18' → logprob: -1.5388083457946777
    3. '10' → logprob: -3.5388083457946777
    4. '15' → logprob: -5.913808345794678
    5. '12' → logprob: -6.163808345794678
    6. '**' → logprob: -6.538808345794678
    7. '19' → logprob: -8.66380786895752
    8. '16' → logprob: -8.78880786895752
    9. '14' → logprob: -9.16380786895752
    10. '11' → logprob: -9.41380786895752

Token 89: '15' (ID: 1055)
  Prédit: '15'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '15' → logprob: -0.12642599642276764
    2. '18' → logprob: -2.2514259815216064
    3. '10' → logprob: -5.3764262199401855
    4. '16' → logprob: -5.3764262199401855
    5. '9' → logprob: -6.0014262199401855
    6. '12' → logprob: -7.6264262199401855
    7. '17' → logprob: -7.6264262199401855
    8. '14' → logprob: -7.7514262199401855
    9. '19' → logprob: -9.001425743103027
    10. '13' → logprob: -9.251425743103027

Token 90: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.22896970808506012
    2. ' 
' → logprob: -2.4789698123931885
    3. '' → logprob: -2.7289698123931885
    4. '#' → logprob: -4.478969573974609
    5. 'dist' → logprob: -4.853969573974609
    6. 's' → logprob: -5.103969573974609
    7. '<|end|>' → logprob: -5.353969573974609
    8. 'dp' → logprob: -6.228969573974609
    9. '
' → logprob: -6.228969573974609
    10. 'max' → logprob: -6.478969573974609

Token 91: 'TEMP' (ID: 161363)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6359230279922485
    2. 'dist' → logprob: -1.7609230279922485
    3. 'graph' → logprob: -2.885922908782959
    4. 'd' → logprob: -3.010922908782959
    5. 'tree' → logprob: -3.885922908782959
    6. 'class' → logprob: -4.510922908782959
    7. 'parent' → logprob: -4.760922908782959
    8. 'S' → logprob: -4.885922908782959
    9. 'seg' → logprob: -4.885922908782959
    10. 'distance' → logprob: -5.135922908782959

Token 92: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6432868242263794
    2. ' =' → logprob: -1.3932868242263794
    3. 'O' → logprob: -1.7682868242263794
    4. '=[]' → logprob: -4.26828670501709
    5. 'S' → logprob: -4.89328670501709
    6. 'L' → logprob: -5.01828670501709
    7. '=[]
' → logprob: -5.51828670501709
    8. 'ER' → logprob: -5.64328670501709
    9. '_' → logprob: -5.76828670501709
    10. 'o' → logprob: -5.89328670501709

Token 93: ' [[' (ID: 9237)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.9724480509757996
    2. ' [' → logprob: -1.4724481105804443
    3. '[' → logprob: -1.5974481105804443
    4. ' []' → logprob: -1.8474481105804443
    5. ' [[]' → logprob: -3.9724481105804443
    6. ' {}' → logprob: -5.972447872161865
    7. ' [-' → logprob: -6.597447872161865
    8. ' [[' → logprob: -6.597447872161865
    9. '[[' → logprob: -6.847447872161865
    10. '[-' → logprob: -6.972447872161865

Token 94: '(' (ID: 7)
  Prédit: 'inf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.03309400752186775
    2. '-inf' → logprob: -3.6580939292907715
    3. '0' → logprob: -5.7830939292907715
    4. '-' → logprob: -6.7830939292907715
    5. '-in' → logprob: -7.2830939292907715
    6. ']' → logprob: -7.5330939292907715
    7. ' inf' → logprob: -8.15809440612793
    8. '(' → logprob: -8.53309440612793
    9. '[' → logprob: -8.65809440612793
    10. '[]' → logprob: -9.53309440612793

Token 95: 's' (ID: 82)
  Prédit: 'inf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.11936092376708984
    2. '-inf' → logprob: -2.24436092376709
    3. '-' → logprob: -5.86936092376709
    4. '0' → logprob: -6.49436092376709
    5. '-in' → logprob: -6.86936092376709
    6. ' inf' → logprob: -7.86936092376709
    7. ' -' → logprob: -8.49436092376709
    8. '-i' → logprob: -9.24436092376709
    9. ')' → logprob: -9.49436092376709
    10. '(-' → logprob: -9.61936092376709

Token 96: ' -' (ID: 533)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5465630292892456
    2. '-' → logprob: -1.2965630292892456
    3. ' -' → logprob: -2.671563148498535
    4. '+' → logprob: -3.546563148498535
    5. '-x' → logprob: -4.296563148498535
    6. '-t' → logprob: -4.546563148498535
    7. ',x' → logprob: -6.046563148498535
    8. '+x' → logprob: -6.296563148498535
    9. '-i' → logprob: -6.421563148498535
    10. ',t' → logprob: -6.421563148498535

Token 97: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.18770121037960052
    2. '1' → logprob: -2.5627012252807617
    3. 't' → logprob: -2.5627012252807617
    4. ' x' → logprob: -5.187701225280762
    5. 'inf' → logprob: -5.187701225280762
    6. 'X' → logprob: -7.312701225280762
    7. 'd' → logprob: -7.312701225280762
    8. ' t' → logprob: -7.437701225280762
    9. '0' → logprob: -7.437701225280762
    10. ' ' → logprob: -7.687701225280762

Token 98: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20149092376232147
    2. ')' → logprob: -2.076490879058838
    3. ' ,' → logprob: -3.076490879058838
    4. '),' → logprob: -6.076490879058838
    5. ' +' → logprob: -6.576490879058838
    6. ')%' → logprob: -6.576490879058838
    7. '+' → logprob: -6.701490879058838
    8. ' -' → logprob: -6.826490879058838
    9. ' )' → logprob: -6.951490879058838
    10. ')**' → logprob: -7.826490879058838

Token 99: ' True' (ID: 6432)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.9442690014839172
    2. 'inf' → logprob: -1.3192689418792725
    3. ' t' → logprob: -2.3192689418792725
    4. 's' → logprob: -2.5692689418792725
    5. ' s' → logprob: -3.1942689418792725
    6. '0' → logprob: -3.3192689418792725
    7. ' inf' → logprob: -3.4442689418792725
    8. ')' → logprob: -4.694269180297852
    9. 'd' → logprob: -4.694269180297852
    10. 'x' → logprob: -4.819269180297852

Token 100: ',' (ID: 11)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.6425127387046814
    2. ')' → logprob: -0.7675127387046814
    3. ')]' → logprob: -5.017512798309326
    4. '),(' → logprob: -6.392512798309326
    5. ',' → logprob: -7.392512798309326
    6. ')],' → logprob: -8.267512321472168
    7. '),
' → logprob: -8.517512321472168
    8. ' ),' → logprob: -9.017512321472168
    9. ')])' → logprob: -9.392512321472168
    10. ' )' → logprob: -9.517512321472168

Token 101: ' x' (ID: 1215)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5836220979690552
    2. ' i' → logprob: -1.4586220979690552
    3. 's' → logprob: -2.5836219787597656
    4. ' s' → logprob: -3.4586219787597656
    5. 'n' → logprob: -3.7086219787597656
    6. 't' → logprob: -4.083621978759766
    7. '0' → logprob: -4.208621978759766
    8. ' t' → logprob: -4.833621978759766
    9. ' n' → logprob: -4.958621978759766
    10. '-' → logprob: -5.208621978759766

Token 102: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.8210119009017944
    2. ')' → logprob: -0.9460119009017944
    3. ')]' → logprob: -2.071012020111084
    4. ',' → logprob: -3.196012020111084
    5. ' )' → logprob: -6.571012020111084
    6. ' ),' → logprob: -6.946012020111084
    7. '),
' → logprob: -7.071012020111084
    8. '),(' → logprob: -7.571012020111084
    9. ' ,' → logprob: -8.446011543273926
    10. ' ' → logprob: -8.696011543273926

Token 103: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.6043225526809692
    2. '(s' → logprob: -0.9793225526809692
    3. '(t' → logprob: -2.6043224334716797
    4. '(' → logprob: -6.47932243347168
    5. '(x' → logprob: -7.72932243347168
    6. '(T' → logprob: -8.10432243347168
    7. '(n' → logprob: -8.10432243347168
    8. ' ' → logprob: -8.35432243347168
    9. '  ' → logprob: -8.85432243347168
    10. '(True' → logprob: -8.97932243347168

Token 104: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.21978962421417236
    2. 's' → logprob: -1.7197896242141724
    3. 'e' → logprob: -4.969789505004883
    4. 'x' → logprob: -5.469789505004883
    5. ' t' → logprob: -5.969789505004883
    6. ' s' → logprob: -7.219789505004883
    7. 'd' → logprob: -7.969789505004883
    8. '0' → logprob: -7.969789505004883
    9. '-t' → logprob: -7.969789505004883
    10. '(t' → logprob: -8.157289505004883

Token 105: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.4375937879085541
    2. '-' → logprob: -1.8125938177108765
    3. '+' → logprob: -2.562593698501587
    4. ' +' → logprob: -2.812593698501587
    5. ',' → logprob: -2.937593698501587
    6. ' ,' → logprob: -7.437593936920166
    7. ' ' → logprob: -8.687593460083008
    8. '-x' → logprob: -10.375093460083008
    9. 's' → logprob: -10.625093460083008
    10. '+,' → logprob: -10.875093460083008

Token 106: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3142045736312866
    2. ' x' → logprob: -1.3142045736312866
    3. '-x' → logprob: -7.439204692840576
    4. '-' → logprob: -9.064204216003418
    5. ' -' → logprob: -9.064204216003418
    6. '0' → logprob: -10.814204216003418
    7. '1' → logprob: -11.064204216003418
    8. 't' → logprob: -11.189204216003418
    9. '(' → logprob: -11.439204216003418
    10. ' t' → logprob: -11.689204216003418

Token 107: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013182159746065736
    2. ' ,' → logprob: -6.751317977905273
    3. '+' → logprob: -9.501317977905273
    4. ' +' → logprob: -10.001317977905273
    5. '-' → logprob: -12.001317977905273
    6. ')' → logprob: -12.126317977905273
    7. '),' → logprob: -12.501317977905273
    8. ' -' → logprob: -12.751317977905273
    9. ' ' → logprob: -13.126317977905273
    10. '+,' → logprob: -13.251317977905273

Token 108: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.25199800729751587
    2. ' False' → logprob: -1.501997947692871
    3. ' True' → logprob: -10.126997947692871
    4. 'True' → logprob: -10.626997947692871
    5. '(False' → logprob: -12.626997947692871
    6. '=False' → logprob: -14.376997947692871
    7. '.False' → logprob: -14.876997947692871
    8. 'F' → logprob: -15.501997947692871
    9. 'Fal' → logprob: -16.501998901367188
    10. ' ' → logprob: -16.501998901367188

Token 109: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00015085970517247915
    2. ' ,' → logprob: -8.875150680541992
    3. ',x' → logprob: -11.750150680541992
    4. ')]' → logprob: -13.750150680541992
    5. ')' → logprob: -14.125150680541992
    6. ' ' → logprob: -15.125150680541992
    7. '),' → logprob: -15.875150680541992
    8. ',
' → logprob: -16.000150680541992
    9. ' x' → logprob: -16.125150680541992
    10. 'x' → logprob: -16.250150680541992

Token 110: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.08895157277584076
    2. ' x' → logprob: -2.463951587677002
    3. ' ' → logprob: -12.338951110839844
    4. 'y' → logprob: -13.213951110839844
    5. ' y' → logprob: -13.338951110839844
    6. 't' → logprob: -13.838951110839844
    7. ' t' → logprob: -14.213951110839844
    8. '0' → logprob: -14.463951110839844
    9. ')x' → logprob: -14.963951110839844
    10. 's' → logprob: -15.151451110839844

Token 111: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.21413621306419373
    2. ')' → logprob: -1.7141362428665161
    3. '),' → logprob: -4.964136123657227
    4. ' )' → logprob: -5.214136123657227
    5. ' ' → logprob: -9.339136123657227
    6. ' ),' → logprob: -10.464136123657227
    7. ')
' → logprob: -10.714136123657227
    8. ']' → logprob: -10.839136123657227
    9. '))' → logprob: -11.089136123657227
    10. ')])' → logprob: -11.589136123657227

Token 112: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.07899840176105499
    2. 'for' → logprob: -2.578998327255249
    3. '	for' → logprob: -9.828998565673828
    4. ' ' → logprob: -9.953998565673828
    5. '   ' → logprob: -12.078998565673828
    6. ']' → logprob: -14.578998565673828
    7. '  ' → logprob: -14.703998565673828
    8. '    ' → logprob: -15.453998565673828
    9. '
' → logprob: -15.828998565673828
    10. ' ' → logprob: -16.453998565673828

Token 113: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.06095518916845322
    2. ' s' → logprob: -3.060955286026001
    3. '(s' → logprob: -4.435955047607422
    4. ' (' → logprob: -7.810955047607422
    5. ',' → logprob: -11.810955047607422
    6. '	s' → logprob: -11.998455047607422
    7. ' ' → logprob: -12.310955047607422
    8. ' ' → logprob: -12.623455047607422
    9. '(' → logprob: -12.998455047607422
    10. '((' → logprob: -13.185955047607422

Token 114: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.042468637228012085
    2. ',t' → logprob: -3.292468547821045
    3. ',x' → logprob: -5.542468547821045
    4. 't' → logprob: -8.292469024658203
    5. ' ,' → logprob: -9.292469024658203
    6. ',_' → logprob: -10.042469024658203
    7. ' in' → logprob: -10.667469024658203
    8. ',i' → logprob: -10.792469024658203
    9. ' t' → logprob: -11.667469024658203
    10. 'x' → logprob: -11.792469024658203

Token 115: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.38687199354171753
    2. ' t' → logprob: -1.1368720531463623
    3. ' ' → logprob: -14.886872291564941
    4. '`t' → logprob: -15.511872291564941
    5. ',t' → logprob: -16.011871337890625
    6. ',' → logprob: -16.261871337890625
    7. 'T' → logprob: -16.386871337890625
    8. 'x' → logprob: -16.761871337890625
    9. '(t' → logprob: -17.136871337890625
    10. '  ' → logprob: -18.011871337890625

Token 116: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11340676993131638
    2. ',x' → logprob: -2.2384066581726074
    3. 'x' → logprob: -7.488406658172607
    4. '<|end|>' → logprob: -11.613407135009766
    5. ',_' → logprob: -12.863407135009766
    6. ' ,' → logprob: -12.988407135009766
    7. ',...' → logprob: -12.988407135009766
    8. ',user' → logprob: -13.488407135009766
    9. '...' → logprob: -13.738407135009766
    10. ',t' → logprob: -14.113407135009766

Token 117: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0024756586644798517
    2. ' x' → logprob: -6.002475738525391
    3. ' ' → logprob: -16.87747573852539
    4. '	x' → logprob: -17.25247573852539
    5. 'X' → logprob: -18.37747573852539
    6. '   ' → logprob: -18.50247573852539
    7. '_x' → logprob: -18.62747573852539
    8. 'y' → logprob: -19.25247573852539
    9. '_' → logprob: -20.25247573852539
    10. 'v' → logprob: -20.50247573852539

Token 118: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07893374562263489
    2. 'in' → logprob: -2.5789337158203125
    3. 's' → logprob: -10.953933715820312
    4. ')' → logprob: -11.578933715820312
    5. ']' → logprob: -11.578933715820312
    6. 'ST' → logprob: -12.828933715820312
    7. ' ' → logprob: -13.328933715820312
    8. ',' → logprob: -13.453933715820312
    9. 'In' → logprob: -14.828933715820312
    10. 'I' → logprob: -15.453933715820312

Token 119: ' ST' (ID: 6433)
  Prédit: 'ST'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ST' → logprob: -0.014164448715746403
    2. ' ST' → logprob: -4.264164447784424
    3. 'S' → logprob: -14.639164924621582
    4. '	ST' → logprob: -15.139164924621582
    5. '(ST' → logprob: -15.889164924621582
    6. 'STS' → logprob: -16.389163970947266
    7. '_ST' → logprob: -16.889163970947266
    8. ' S' → logprob: -19.264163970947266
    9. 'st' → logprob: -19.514163970947266
    10. '.ST' → logprob: -19.764163970947266

Token 120: 'X' (ID: 55)
  Prédit: 'X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -3.128163257315464e-07
    2. ']' → logprob: -16.0
    3. ')' → logprob: -16.375
    4. ' X' → logprob: -16.875
    5. 'C' → logprob: -17.875
    6. '])' → logprob: -18.0
    7. 'P' → logprob: -18.125
    8. ')]' → logprob: -18.125
    9. ',' → logprob: -18.25
    10. 'T' → logprob: -18.375

Token 121: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00022403974435292184
    2. ')]' → logprob: -8.625224113464355
    3. ' ]' → logprob: -10.125224113464355
    4. ']
' → logprob: -13.250224113464355
    5. ')' → logprob: -13.500224113464355
    6. '])' → logprob: -14.500224113464355
    7. '],' → logprob: -15.875224113464355
    8. ']}' → logprob: -16.25022315979004
    9. '}]' → logprob: -16.37522315979004
    10. '`]' → logprob: -16.62522315979004

Token 122: ' +' (ID: 659)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.11227009445428848
    2. '
' → logprob: -2.4872701168060303
    3. ')' → logprob: -4.612269878387451
    4. '[' → logprob: -6.362269878387451
    5. ']
' → logprob: -6.612269878387451
    6. ']+' → logprob: -6.612269878387451
    7. '<|end|>' → logprob: -6.862269878387451
    8. '\n' → logprob: -6.987269878387451
    9. '[
' → logprob: -7.112269878387451
    10. '+' → logprob: -7.237269878387451

Token 123: ' [[' (ID: 9237)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.42571982741355896
    2. '[' → logprob: -2.175719738006592
    3. '[list' → logprob: -2.175719738006592
    4. ' list' → logprob: -3.050719738006592
    5. ' [' → logprob: -3.925719738006592
    6. '[(' → logprob: -4.300719738006592
    7. '[[' → logprob: -4.550719738006592
    8. '[]' → logprob: -4.550719738006592
    9. 'chain' → logprob: -5.050719738006592
    10. '[T' → logprob: -6.300719738006592

Token 124: '(-' (ID: 8087)
  Prédit: '(in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(in' → logprob: -0.014868793077766895
    2. '(' → logprob: -4.51486873626709
    3. '(-' → logprob: -6.76486873626709
    4. '((' → logprob: -7.51486873626709
    5. ']' → logprob: -7.63986873626709
    6. '(d' → logprob: -8.13986873626709
    7. ' (' → logprob: -8.63986873626709
    8. '(i' → logprob: -8.88986873626709
    9. '(t' → logprob: -9.01486873626709
    10. '[(' → logprob: -9.13986873626709

Token 125: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.011520967818796635
    2. '1' → logprob: -4.886520862579346
    3. 'x' → logprob: -6.011520862579346
    4. 'd' → logprob: -7.261520862579346
    5. '10' → logprob: -8.511521339416504
    6. ' inf' → logprob: -9.011521339416504
    7. 'D' → logprob: -9.511521339416504
    8. '100' → logprob: -10.136521339416504
    9. ')' → logprob: -10.136521339416504
    10. '-inf' → logprob: -10.136521339416504

Token 126: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003332299180328846
    2. ' ,' → logprob: -5.753332138061523
    3. '<|end|>' → logprob: -9.253332138061523
    4. ')' → logprob: -10.628332138061523
    5. ',
' → logprob: -11.878332138061523
    6. '<|end|>' → logprob: -12.128332138061523
    7. 's' → logprob: -13.003332138061523
    8. ')]' → logprob: -13.128332138061523
    9. '),' → logprob: -13.253332138061523
    10. '‌,' → logprob: -13.378332138061523

Token 127: ' True' (ID: 6432)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.7553269267082214
    2. 'True' → logprob: -1.2553269863128662
    3. ' True' → logprob: -1.8803269863128662
    4. ' False' → logprob: -2.380326986312866
    5. '(False' → logprob: -10.255327224731445
    6. '(True' → logprob: -10.255327224731445
    7. 'None' → logprob: -12.255327224731445
    8. ',' → logprob: -12.505327224731445
    9. '=True' → logprob: -12.880327224731445
    10. '.False' → logprob: -12.880327224731445

Token 128: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015836624661460519
    2. '<|end|>' → logprob: -6.751583576202393
    3. ' ,' → logprob: -8.00158405303955
    4. ')' → logprob: -10.25158405303955
    5. '),' → logprob: -11.75158405303955
    6. ',
' → logprob: -11.87658405303955
    7. ')]' → logprob: -11.87658405303955
    8. '<|end|>' → logprob: -12.12658405303955
    9. ' ' → logprob: -13.00158405303955
    10. ',None' → logprob: -13.37658405303955

Token 129: ' inf' (ID: 5603)
  Prédit: '-inf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-inf' → logprob: -0.8321651816368103
    2. '0' → logprob: -1.707165241241455
    3. '-' → logprob: -1.957165241241455
    4. ' -' → logprob: -2.082165241241455
    5. ' ' → logprob: -2.957165241241455
    6. 'inf' → logprob: -3.457165241241455
    7. '-in' → logprob: -4.707165241241455
    8. ' inf' → logprob: -4.832165241241455
    9. ' None' → logprob: -4.832165241241455
    10. 'None' → logprob: -5.207165241241455

Token 130: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.29100194573402405
    2. ')' → logprob: -1.5410019159317017
    3. ')]' → logprob: -3.666002035140991
    4. ')],' → logprob: -4.791001796722412
    5. '),(' → logprob: -6.291001796722412
    6. ' ),' → logprob: -6.916001796722412
    7. ' )' → logprob: -7.166001796722412
    8. '),
' → logprob: -7.416001796722412
    9. ')])' → logprob: -9.04100227355957
    10. ')
' → logprob: -10.66600227355957

Token 131: ' (' (ID: 350)
  Prédit: '(in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(in' → logprob: -0.10963951051235199
    2. ' (' → logprob: -2.3596394062042236
    3. '(' → logprob: -5.484639644622803
    4. '(-' → logprob: -5.609639644622803
    5. ' (-' → logprob: -8.109639167785645
    6. '(+' → logprob: -8.359639167785645
    7. '(None' → logprob: -8.359639167785645
    8. ' ' → logprob: -8.734639167785645
    9. ')]' → logprob: -8.859639167785645
    10. ')' → logprob: -8.984639167785645

Token 132: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.025755107402801514
    2. ' inf' → logprob: -3.7757551670074463
    3. '-inf' → logprob: -6.150754928588867
    4. '0' → logprob: -9.150754928588867
    5. '-' → logprob: -9.400754928588867
    6. ' -' → logprob: -9.775754928588867
    7. '.inf' → logprob: -10.838254928588867
    8. '10' → logprob: -11.025754928588867
    9. ' ' → logprob: -11.275754928588867
    10. '+' → logprob: -11.400754928588867

Token 133: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016873658751137555
    2. ' ,' → logprob: -9.125168800354004
    3. '<|end|>' → logprob: -9.750168800354004
    4. '<|end|>' → logprob: -14.500168800354004
    5. '‌,' → logprob: -15.000168800354004
    6. ')' → logprob: -15.875168800354004
    7. ',
' → logprob: -15.875168800354004
    8. 'f' → logprob: -16.625167846679688
    9. ',None' → logprob: -16.625167846679688
    10. 'import' → logprob: -17.250167846679688

Token 134: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.17762652039527893
    2. 'True' → logprob: -2.677626609802246
    3. ' False' → logprob: -2.677626609802246
    4. ' True' → logprob: -3.677626609802246
    5. '(False' → logprob: -12.177626609802246
    6. '(True' → logprob: -13.302626609802246
    7. '=False' → logprob: -13.802626609802246
    8. '=True' → logprob: -14.427626609802246
    9. '.False' → logprob: -14.802626609802246
    10. '<|end|>' → logprob: -14.802626609802246

Token 135: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001246348983841017
    2. ' ,' → logprob: -9.50012493133545
    3. '<|end|>' → logprob: -10.00012493133545
    4. ',
' → logprob: -12.75012493133545
    5. '<|end|>' → logprob: -15.37512493133545
    6. ',None' → logprob: -15.50012493133545
    7. '‌,' → logprob: -15.62512493133545
    8. ',int' → logprob: -15.75012493133545
    9. ',\
' → logprob: -16.250123977661133
    10. ')' → logprob: -16.375123977661133

Token 136: ' inf' (ID: 5603)
  Prédit: 'inf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.252289742231369
    2. ' inf' → logprob: -1.5022897720336914
    3. '-inf' → logprob: -8.002289772033691
    4. '_inf' → logprob: -11.752289772033691
    5. '.inf' → logprob: -11.877289772033691
    6. ' -' → logprob: -13.127289772033691
    7. ' ' → logprob: -13.689789772033691
    8. 'INF' → logprob: -14.314789772033691
    9. ' infusion' → logprob: -14.502289772033691
    10. ' ' → logprob: -14.564789772033691

Token 137: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.03420400619506836
    2. ')' → logprob: -3.4092040061950684
    3. ' )' → logprob: -7.659204006195068
    4. ')]
' → logprob: -10.409204483032227
    5. ')])' → logprob: -11.159204483032227
    6. '])]' → logprob: -11.159204483032227
    7. '),' → logprob: -11.909204483032227
    8. ']' → logprob: -12.034204483032227
    9. '))' → logprob: -12.159204483032227
    10. ')
' → logprob: -12.909204483032227

Token 138: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00035262384335510433
    2. ' ]' → logprob: -8.50035285949707
    3. ']
' → logprob: -9.00035285949707
    4. ']

' → logprob: -10.87535285949707
    5. '])' → logprob: -12.37535285949707
    6. ')]' → logprob: -14.37535285949707
    7. ']
' → logprob: -15.12535285949707
    8. '[]' → logprob: -15.37535285949707
    9. ']]' → logprob: -15.37535285949707
    10. '],' → logprob: -15.37535285949707

Token 139: 'P' (ID: 47)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -1.0576781034469604
    2. ')' → logprob: -1.8076781034469604
    3. '[' → logprob: -1.9326781034469604
    4. 'chain' → logprob: -2.30767822265625
    5. '[]' → logprob: -3.18267822265625
    6. '[
' → logprob: -3.43267822265625
    7. '<|end|>' → logprob: -3.68267822265625
    8. '#' → logprob: -4.18267822265625
    9. '
' → logprob: -4.30767822265625
    10. 'heap' → logprob: -4.55767822265625

Token 140: 'FX' (ID: 26420)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.330746591091156
    2. '=' → logprob: -1.8307466506958008
    3. 'REFIX' → logprob: -3.080746650695801
    4. 'O' → logprob: -3.955746650695801
    5. 'OP' → logprob: -4.830746650695801
    6. 'S' → logprob: -4.955746650695801
    7. 'L' → logprob: -4.955746650695801
    8. 'OOL' → logprob: -5.080746650695801
    9. 'A' → logprob: -6.205746650695801
    10. 'E' → logprob: -6.330746650695801

Token 141: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7312634587287903
    2. ' =' → logprob: -0.7312634587287903
    3. '_' → logprob: -3.3562633991241455
    4. ' ' → logprob: -7.731263637542725
    5. 'S' → logprob: -7.856263637542725
    6. 'M' → logprob: -7.981263637542725
    7. '_sum' → logprob: -8.356263160705566
    8. 'sum' → logprob: -8.481263160705566
    9. '=[]' → logprob: -8.606263160705566
    10. '_=' → logprob: -9.106263160705566

Token 142: ' sorted' (ID: 20099)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.4258221685886383
    2. '[' → logprob: -1.675822138786316
    3. ' list' → logprob: -2.5508222579956055
    4. 'list' → logprob: -3.4258222579956055
    5. '[list' → logprob: -4.3008222579956055
    6. '[len' → logprob: -4.8008222579956055
    7. '[]' → logprob: -4.9258222579956055
    8. ' []' → logprob: -5.3008222579956055
    9. ' [[]' → logprob: -5.6758222579956055
    10. ' chain' → logprob: -6.5508222579956055

Token 143: '(list' (ID: 13116)
  Prédit: '(chain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(chain' → logprob: -0.02264733612537384
    2. '(list' → logprob: -4.397647380828857
    3. '(' → logprob: -4.897647380828857
    4. '(T' → logprob: -6.397647380828857
    5. '(sum' → logprob: -7.522647380828857
    6. '((' → logprob: -8.6476469039917
    7. '([' → logprob: -9.2726469039917
    8. '(CH' → logprob: -9.6476469039917
    9. '(ch' → logprob: -10.3976469039917
    10. 'chain' → logprob: -10.5226469039917

Token 144: '(chain' (ID: 124348)
  Prédit: '(chain'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(chain' → logprob: -0.0005928283790126443
    2. '(' → logprob: -7.8755927085876465
    3. '(set' → logprob: -9.125593185424805
    4. 'chain' → logprob: -9.250593185424805
    5. '({' → logprob: -12.500593185424805
    6. '((' → logprob: -13.750593185424805
    7. '(
' → logprob: -14.500593185424805
    8. '(ch' → logprob: -14.875593185424805
    9. '.chain' → logprob: -14.875593185424805
    10. '(sum' → logprob: -15.750593185424805

Token 145: '(*' (ID: 9000)
  Prédit: '.from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.from' → logprob: -0.0789923444390297
    2. '(*' → logprob: -2.5789923667907715
    3. 'from' → logprob: -9.328991889953613
    4. ' from' → logprob: -12.078991889953613
    5. '.' → logprob: -12.703991889953613
    6. '(' → logprob: -13.203991889953613
    7. '(*(' → logprob: -14.203991889953613
    8. ' (*' → logprob: -14.328991889953613
    9. ' ' → logprob: -14.953991889953613
    10. '*' → logprob: -14.953991889953613

Token 146: 'TEMP' (ID: 161363)
  Prédit: 'TEMP'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'TEMP' → logprob: -0.00075125927105546
    2. ' TEMP' → logprob: -7.250751495361328
    3. 'TMP' → logprob: -11.000751495361328
    4. '(T' → logprob: -11.750751495361328
    5. 'ST' → logprob: -11.875751495361328
    6. '
' → logprob: -13.000751495361328
    7. 'TEM' → logprob: -13.125751495361328
    8. 'temp' → logprob: -13.375751495361328
    9. 'T' → logprob: -13.500751495361328
    10. '(' → logprob: -14.125751495361328

Token 147: ')))

' (ID: 46526)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.062241483479738235
    2. ')))' → logprob: -2.812241554260254
    3. ' ))' → logprob: -8.562241554260254
    4. '))
' → logprob: -10.187241554260254
    5. ')' → logprob: -11.437241554260254
    6. '),' → logprob: -11.562241554260254
    7. '))))' → logprob: -12.187241554260254
    8. ',' → logprob: -12.312241554260254
    9. ']))' → logprob: -12.437241554260254
    10. ')))
' → logprob: -12.687241554260254

Token 148: 'add' (ID: 964)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1802021712064743
    2. ')' → logprob: -2.6802022457122803
    3. '_' → logprob: -3.4302022457122803
    4. ',' → logprob: -4.055202007293701
    5. ' ' → logprob: -4.055202007293701
    6. '(' → logprob: -5.180202007293701
    7. '.' → logprob: -5.305202007293701
    8. '
' → logprob: -5.680202007293701
    9. ']' → logprob: -5.930202007293701
    10. '[
' → logprob: -5.930202007293701

Token 149: 'q' (ID: 80)
  Prédit: 'ed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.31775662302970886
    2. '_' → logprob: -1.6927566528320312
    3. '_idx' → logprob: -3.0677566528320312
    4. ' =' → logprob: -4.567756652832031
    5. 'ing' → logprob: -5.067756652832031
    6. '=' → logprob: -5.317756652832031
    7. '_index' → logprob: -5.317756652832031
    8. 'itional' → logprob: -5.942756652832031
    9. '_pos' → logprob: -6.192756652832031
    10. 's' → logprob: -6.192756652832031

Token 150: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7939321398735046
    2. 'u' → logprob: -1.1689321994781494
    3. '=' → logprob: -1.6689321994781494
    4. ',' → logprob: -3.9189321994781494
    5. 'ue' → logprob: -4.04393196105957
    6. 's' → logprob: -5.16893196105957
    7. 'ues' → logprob: -5.66893196105957
    8. ' ' → logprob: -7.41893196105957
    9. '=[]' → logprob: -7.66893196105957
    10. '1' → logprob: -8.41893196105957

Token 151: ' [' (ID: 723)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.00010413920972496271
    2. '[]
' → logprob: -9.625103950500488
    3. ' []' → logprob: -10.875103950500488
    4. '[],' → logprob: -11.750103950500488
    5. '[' → logprob: -12.000103950500488
    6. '[]}' → logprob: -12.875103950500488
    7. '[]

' → logprob: -14.125103950500488
    8. '[]>' → logprob: -14.375103950500488
    9. '[])' → logprob: -15.000103950500488
    10. '0' → logprob: -15.000103950500488

Token 152: 'inf' (ID: 22226)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6563811898231506
    2. '[]' → logprob: -1.4063811302185059
    3. '0' → logprob: -1.9063811302185059
    4. '()]' → logprob: -3.281381130218506
    5. '(' → logprob: -3.531381130218506
    6. 'inf' → logprob: -4.531381130218506
    7. '[' → logprob: -6.281381130218506
    8. '()' → logprob: -6.656381130218506
    9. 'False' → logprob: -7.031381130218506
    10. '[],' → logprob: -7.281381130218506

Token 153: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0022116350010037422
    2. ',' → logprob: -6.252211570739746
    3. ' ]' → logprob: -8.627211570739746
    4. ')]' → logprob: -10.377211570739746
    5. ']*' → logprob: -10.502211570739746
    6. ' for' → logprob: -11.002211570739746
    7. ')' → logprob: -11.752211570739746
    8. '()]' → logprob: -12.127211570739746
    9. 'for' → logprob: -13.002211570739746
    10. ']int' → logprob: -13.377211570739746

Token 154: 'del' (ID: 9145)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.9544932246208191
    2. 'max' → logprob: -2.454493284225464
    3. 'idx' → logprob: -3.079493284225464
    4. ')' → logprob: -3.079493284225464
    5. 'for' → logprob: -3.079493284225464
    6. '[]' → logprob: -3.329493284225464
    7. '[' → logprob: -3.329493284225464
    8. '+' → logprob: -3.454493284225464
    9. 'he' → logprob: -3.579493284225464
    10. '0' → logprob: -3.579493284225464

Token 155: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -6.587483221665025e-05
    2. '_q' → logprob: -10.500065803527832
    3. 's' → logprob: -10.750065803527832
    4. 'Q' → logprob: -12.000065803527832
    5. '_' → logprob: -13.250065803527832
    6. '_queue' → logprob: -13.875065803527832
    7. 'queue' → logprob: -14.000065803527832
    8. '=' → logprob: -14.125065803527832
    9. '=[]' → logprob: -14.250065803527832
    10. ']' → logprob: -14.500065803527832

Token 156: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.054891765117645264
    2. '=' → logprob: -2.92989182472229
    3. ' =[' → logprob: -12.429891586303711
    4. '=[]' → logprob: -12.804891586303711
    5. '[' → logprob: -13.804891586303711
    6. ' ' → logprob: -14.429891586303711
    7. '=[' → logprob: -15.179891586303711
    8. ',' → logprob: -15.179891586303711
    9. ']' → logprob: -15.804891586303711
    10. ' =
' → logprob: -16.05489158630371

Token 157: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.003373773070052266
    2. ' [' → logprob: -6.503373622894287
    3. '[]' → logprob: -6.753373622894287
    4. '[in' → logprob: -7.378373622894287
    5. '[ind' → logprob: -10.628374099731445
    6. ' []' → logprob: -11.003374099731445
    7. '[-' → logprob: -11.128374099731445
    8. '[int' → logprob: -12.503374099731445
    9. '[arr' → logprob: -12.628374099731445
    10. 'inf' → logprob: -13.128374099731445

Token 158: 'inf' (ID: 22226)
  Prédit: '-inf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-inf' → logprob: -0.4758913218975067
    2. 'inf' → logprob: -0.9758913516998291
    3. ' -' → logprob: -7.47589111328125
    4. '-' → logprob: -7.97589111328125
    5. ' inf' → logprob: -7.97589111328125
    6. '0' → logprob: -8.10089111328125
    7. ')' → logprob: -9.72589111328125
    8. ']' → logprob: -10.53839111328125
    9. '.inf' → logprob: -11.03839111328125
    10. '_inf' → logprob: -11.03839111328125

Token 159: ' +' (ID: 659)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00022654302301816642
    2. ',' → logprob: -9.125226974487305
    3. ' ]' → logprob: -9.625226974487305
    4. ']
' → logprob: -10.125226974487305
    5. ')' → logprob: -11.875226974487305
    6. ']

' → logprob: -13.750226974487305
    7. '<|end|>' → logprob: -13.875226974487305
    8. ')]' → logprob: -14.250226974487305
    9. ',
' → logprob: -14.875226974487305
    10. '']' → logprob: -15.250226974487305

Token 160: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007108182646334171
    2. ' ' → logprob: -5.132108211517334
    3. 'inf' → logprob: -7.632108211517334
    4. '0' → logprob: -7.882108211517334
    5. '10' → logprob: -9.007107734680176
    6. ']' → logprob: -9.507107734680176
    7. '100' → logprob: -10.382107734680176
    8. '2' → logprob: -10.757107734680176
    9. '5' → logprob: -11.507107734680176
    10. ' inf' → logprob: -11.507107734680176

Token 161: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014968497678637505
    2. 'inf' → logprob: -4.764968395233154
    3. '10' → logprob: -5.389968395233154
    4. ' ' → logprob: -7.514968395233154
    5. '100' → logprob: -7.889968395233154
    6. '2' → logprob: -8.264968872070312
    7. '5' → logprob: -8.389968872070312
    8. '0' → logprob: -8.764968872070312
    9. '3' → logprob: -10.014968872070312
    10. '-' → logprob: -10.514968872070312

Token 162: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0004251931968610734
    2. ' ]' → logprob: -8.000425338745117
    3. ']
' → logprob: -9.500425338745117
    4. ',' → logprob: -11.375425338745117
    5. ')' → logprob: -14.000425338745117
    6. ']

' → logprob: -14.125425338745117
    7. '<|end|>' → logprob: -15.125425338745117
    8. '}' → logprob: -15.625425338745117
    9. '0' → logprob: -15.875425338745117
    10. ' ' → logprob: -15.875425338745117

Token 163: 'D' (ID: 35)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2656166553497314
    2. '(' → logprob: -1.7656166553497314
    3. '[' → logprob: -2.1406166553497314
    4. ' ' → logprob: -2.3906166553497314
    5. ',' → logprob: -2.5156166553497314
    6. '<|end|>' → logprob: -2.8906166553497314
    7. ']' → logprob: -3.1406166553497314
    8. 'idx' → logprob: -3.6406166553497314
    9. '+' → logprob: -3.7656166553497314
    10. ' 
' → logprob: -4.265616416931152

Token 164: '.append' (ID: 3709)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.33639979362487793
    2. '.sort' → logprob: -2.086399793624878
    3. '.append' → logprob: -3.336399793624878
    4. '[' → logprob: -3.336399793624878
    5. ' ' → logprob: -4.211400032043457
    6. ' =' → logprob: -4.461400032043457
    7. '_' → logprob: -4.461400032043457
    8. '<|end|>' → logprob: -4.586400032043457
    9. ',' → logprob: -4.711400032043457
    10. '=' → logprob: -4.836400032043457

Token 165: '(in' (ID: 9573)
  Prédit: '(in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(in' → logprob: -0.02381882630288601
    2. '(' → logprob: -3.7738187313079834
    3. 'inf' → logprob: -8.023818969726562
    4. '(-' → logprob: -8.898818969726562
    5. '(
' → logprob: -10.148818969726562
    6. '(D' → logprob: -10.898818969726562
    7. '(float' → logprob: -11.773818969726562
    8. '(i' → logprob: -11.773818969726562
    9. '(d' → logprob: -11.898818969726562
    10. '0' → logprob: -11.898818969726562

Token 166: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -8.172891830326989e-05
    2. ' f' → logprob: -10.250082015991211
    3. 'ф' → logprob: -10.875082015991211
    4. '[f' → logprob: -11.875082015991211
    5. '	f' → logprob: -11.875082015991211
    6. '[' → logprob: -12.750082015991211
    7. ''f' → logprob: -13.125082015991211
    8. '(f' → logprob: -13.625082015991211
    9. '```' → logprob: -14.125082015991211
    10. '_f' → logprob: -14.125082015991211

Token 167: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.615255839889869e-05
    2. ')
' → logprob: -9.875096321105957
    3. ' )' → logprob: -10.250096321105957
    4. '+' → logprob: -13.250096321105957
    5. '))' → logprob: -13.625096321105957
    6. '
' → logprob: -13.625096321105957
    7. '-' → logprob: -13.875096321105957
    8. ')

' → logprob: -13.875096321105957
    9. ')`' → logprob: -13.875096321105957
    10. ')
' → logprob: -14.750096321105957

Token 168: 'iter' (ID: 2340)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.5295919179916382
    2. 'idx' → logprob: -1.6545919179916382
    3. 'ans' → logprob: -1.7795919179916382
    4. 'res' → logprob: -1.7795919179916382
    5. 'pos' → logprob: -3.0295920372009277
    6. 'heap' → logprob: -3.2795920372009277
    7. 'dp' → logprob: -3.9045920372009277
    8. 'prev' → logprob: -4.154592037200928
    9. 'i' → logprob: -4.279592037200928
    10. 'cur' → logprob: -4.404592037200928

Token 169: 'D' (ID: 35)
  Prédit: 'ator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ator' → logprob: -0.25954121351242065
    2. '_idx' → logprob: -2.2595412731170654
    3. '_' → logprob: -3.0095412731170654
    4. ' =' → logprob: -3.2595412731170654
    5. 'er' → logprob: -4.634541034698486
    6. 's' → logprob: -5.384541034698486
    7. 'D' → logprob: -5.384541034698486
    8. '_d' → logprob: -5.634541034698486
    9. 'or' → logprob: -5.634541034698486
    10. '=' → logprob: -6.634541034698486

Token 170: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12265253067016602
    2. '=' → logprob: -2.247652530670166
    3. 'ator' → logprob: -5.122652530670166
    4. 'er' → logprob: -6.247652530670166
    5. '_' → logprob: -6.497652530670166
    6. 's' → logprob: -8.997652053833008
    7. ' ' → logprob: -9.247652053833008
    8. '(' → logprob: -10.122652053833008
    9. '()' → logprob: -10.372652053833008
    10. ',' → logprob: -10.872652053833008

Token 171: ' iter' (ID: 10621)
  Prédit: 'iter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iter' → logprob: -0.390259325504303
    2. '0' → logprob: -1.7652592658996582
    3. ' iter' → logprob: -1.8902592658996582
    4. ' ' → logprob: -7.265259265899658
    5. '(iter' → logprob: -8.765259742736816
    6. '1' → logprob: -10.765259742736816
    7. '2' → logprob: -11.640259742736816
    8. '10' → logprob: -11.640259742736816
    9. '```' → logprob: -11.640259742736816
    10. '	iter' → logprob: -11.765259742736816

Token 172: '(D' (ID: 9908)
  Prédit: '(D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(D' → logprob: -0.0005572011577896774
    2. '(' → logprob: -7.5005574226379395
    3. '(
' → logprob: -12.625556945800781
    4. 'D' → logprob: -14.250556945800781
    5. '(d' → logprob: -16.00055694580078
    6. '(DE' → logprob: -16.37555694580078
    7. '(Dense' → logprob: -17.25055694580078
    8. '(B' → logprob: -17.62555694580078
    9. '(Q' → logprob: -17.75055694580078
    10. '(E' → logprob: -18.37555694580078

Token 173: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.6100132496794686e-05
    2. ' )' → logprob: -10.125056266784668
    3. ')
' → logprob: -11.375056266784668
    4. '(' → logprob: -13.375056266784668
    5. '))' → logprob: -14.125056266784668
    6. ')

' → logprob: -14.625056266784668
    7. ' ' → logprob: -15.125056266784668
    8. '()' → logprob: -15.250056266784668
    9. ',' → logprob: -15.375056266784668
    10. '())' → logprob: -15.625056266784668

Token 174: 'd' (ID: 67)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.8796491622924805
    2. 'ans' → logprob: -1.6296491622924805
    3. 'd' → logprob: -2.3796491622924805
    4. 'now' → logprob: -2.7546491622924805
    5. 'x' → logprob: -3.0046491622924805
    6. 'res' → logprob: -3.0046491622924805
    7. 'for' → logprob: -3.7546491622924805
    8. 'curr' → logprob: -3.7546491622924805
    9. 'p' → logprob: -4.6296491622924805
    10. 'a' → logprob: -4.7546491622924805

Token 175: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5656525492668152
    2. '=' → logprob: -0.9406525492668152
    3. 'ist' → logprob: -4.315652370452881
    4. '_' → logprob: -4.565652370452881
    5. ' ' → logprob: -5.315652370452881
    6. 'istance' → logprob: -5.690652370452881
    7. '_val' → logprob: -6.565652370452881
    8. 'e' → logprob: -6.690652370452881
    9. 'd' → logprob: -6.815652370452881
    10. '_now' → logprob: -7.190652370452881

Token 176: ' next' (ID: 2613)
  Prédit: ' next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.39065954089164734
    2. 'next' → logprob: -1.1406595706939697
    3. '0' → logprob: -5.640659332275391
    4. ' ' → logprob: -9.64065933227539
    5. ' nex' → logprob: -9.76565933227539
    6. '-next' → logprob: -10.39065933227539
    7. ' -' → logprob: -11.01565933227539
    8. '(next' → logprob: -11.14065933227539
    9. '1' → logprob: -11.64065933227539
    10. ' nxt' → logprob: -11.76565933227539

Token 177: '(iter' (ID: 61014)
  Prédit: '(iter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(iter' → logprob: -1.5048530030981055e-06
    2. '(' → logprob: -13.500001907348633
    3. '(iterator' → logprob: -17.250001907348633
    4. 'iter' → logprob: -17.750001907348633
    5. '(it' → logprob: -18.125001907348633
    6. ' (' → logprob: -19.500001907348633
    7. '(
' → logprob: -19.500001907348633
    8. ' iter' → logprob: -19.875001907348633
    9. '(i' → logprob: -20.125001907348633
    10. '(inter' → logprob: -20.500001907348633

Token 178: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -1.9361264946837764e-07
    2. 'd' → logprob: -16.125
    3. ')' → logprob: -16.875
    4. ' D' → logprob: -18.625
    5. '
' → logprob: -21.125
    6. '(' → logprob: -21.5
    7. '(iter' → logprob: -21.5
    8. '(D' → logprob: -21.625
    9. 'iter' → logprob: -21.625
    10. 'Д' → logprob: -21.75

Token 179: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.045823566731997e-05
    2. ' )' → logprob: -10.875020027160645
    3. ')
' → logprob: -13.625020027160645
    4. '()' → logprob: -16.62502098083496
    5. ')d' → logprob: -16.87502098083496
    6. '))' → logprob: -17.12502098083496
    7. ')

' → logprob: -17.12502098083496
    8. '())' → logprob: -17.75002098083496
    9. ')`' → logprob: -17.75002098083496
    10. ' ' → logprob: -18.00002098083496

Token 180: 'for' (ID: 1938)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.9052700400352478
    2. 'p' → logprob: -1.6552700996398926
    3. 'idx' → logprob: -2.0302700996398926
    4. 'd' → logprob: -2.9052700996398926
    5. 'pos' → logprob: -3.0302700996398926
    6. 'for' → logprob: -3.0302700996398926
    7. 'while' → logprob: -3.5302700996398926
    8. ' for' → logprob: -4.905270099639893
    9. 'x' → logprob: -4.905270099639893
    10. 'c' → logprob: -5.030270099639893

Token 181: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.835907220840454
    2. ' p' → logprob: -1.960907220840454
    3. 'i' → logprob: -2.335907220840454
    4. ' i' → logprob: -2.585907220840454
    5. 's' → logprob: -2.960907220840454
    6. ' s' → logprob: -3.085907220840454
    7. ' dist' → logprob: -3.335907220840454
    8. '_' → logprob: -3.585907220840454
    9. 'x' → logprob: -4.085906982421875
    10. ' val' → logprob: -4.085906982421875

Token 182: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6370646953582764
    2. ' in' → logprob: -0.7620646953582764
    3. ' ,' → logprob: -6.2620649337768555
    4. 'in' → logprob: -7.6370649337768555
    5. 'refix' → logprob: -7.7620649337768555
    6. ' ' → logprob: -8.137064933776855
    7. ',_' → logprob: -8.137064933776855
    8. 'x' → logprob: -8.637064933776855
    9. '_' → logprob: -9.262064933776855
    10. 'oint' → logprob: -9.512064933776855

Token 183: ' f' (ID: 285)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -1.6779133081436157
    2. 'flag' → logprob: -1.8029133081436157
    3. 'f' → logprob: -2.177913188934326
    4. 'tf' → logprob: -2.552913188934326
    5. 'b' → logprob: -2.802913188934326
    6. 't' → logprob: -3.052913188934326
    7. 'fl' → logprob: -3.177913188934326
    8. 'has' → logprob: -3.177913188934326
    9. ' is' → logprob: -3.552913188934326
    10. 'exist' → logprob: -4.052913188934326

Token 184: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014752520248293877
    2. ' in' → logprob: -4.264752388000488
    3. 't' → logprob: -9.014752388000488
    4. 'in' → logprob: -9.389752388000488
    5. 'rom' → logprob: -9.514752388000488
    6. ',_' → logprob: -9.764752388000488
    7. ' ,' → logprob: -10.389752388000488
    8. 'ilter' → logprob: -10.764752388000488
    9. 'irst' → logprob: -11.389752388000488
    10. '_' → logprob: -11.389752388000488

Token 185: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.036450549960136414
    2. 'v' → logprob: -4.036450386047363
    3. '_x' → logprob: -5.536450386047363
    4. 'c' → logprob: -5.786450386047363
    5. 'a' → logprob: -6.286450386047363
    6. 'k' → logprob: -6.661450386047363
    7. '_' → logprob: -6.911450386047363
    8. 'z' → logprob: -6.911450386047363
    9. 'y' → logprob: -7.161450386047363
    10. ' x' → logprob: -7.286450386047363

Token 186: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08896443992853165
    2. 'in' → logprob: -2.4639644622802734
    3. ',' → logprob: -11.838964462280273
    4. '	in' → logprob: -11.838964462280273
    5. ' ' → logprob: -12.588964462280273
    6. 's' → logprob: -12.963964462280273
    7. 'n' → logprob: -13.463964462280273
    8. '_in' → logprob: -13.963964462280273
    9. ' ' → logprob: -15.088964462280273
    10. 'p' → logprob: -15.213964462280273

Token 187: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.06197250634431839
    2. ' P' → logprob: -2.8119726181030273
    3. ' ' → logprob: -13.436972618103027
    4. '[P' → logprob: -14.436972618103027
    5. '	P' → logprob: -14.686972618103027
    6. 'p' → logprob: -14.749472618103027
    7. '(P' → logprob: -14.936972618103027
    8. '\P' → logprob: -15.624472618103027
    9. 'enumer' → logprob: -15.811972618103027
    10. '<P' → logprob: -16.06197166442871

Token 188: 'FX' (ID: 26420)
  Prédit: 'FX'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'FX' → logprob: -0.00014561474381480366
    2. 'X' → logprob: -9.62514591217041
    3. 'F' → logprob: -10.00014591217041
    4. 'fx' → logprob: -10.50014591217041
    5. ' FX' → logprob: -13.00014591217041
    6. 'Fx' → logprob: -13.50014591217041
    7. 'FXML' → logprob: -14.87514591217041
    8. ')' → logprob: -15.12514591217041
    9. ' ' → logprob: -15.25014591217041
    10. 'FY' → logprob: -15.25014591217041

Token 189: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00014251544780563563
    2. ' :' → logprob: -9.750142097473145
    3. ':
' → logprob: -10.125142097473145
    4. ',' → logprob: -10.125142097473145
    5. ',:' → logprob: -13.375142097473145
    6. '):' → logprob: -13.875142097473145
    7. ':**' → logprob: -15.000142097473145
    8. '>:' → logprob: -15.250142097473145
    9. ':return' → logprob: -16.25014305114746
    10. ':

' → logprob: -16.37514305114746

Token 190: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24694545567035675
    2. ' if' → logprob: -1.8719455003738403
    3. '<|end|>' → logprob: -3.496945381164551
    4. '	if' → logprob: -3.871945381164551
    5. ' ' → logprob: -5.496945381164551
    6. ' while' → logprob: -5.746945381164551
    7. '	while' → logprob: -6.246945381164551
    8. ',' → logprob: -6.871945381164551
    9. '<|end|>' → logprob: -7.246945381164551
    10. '    
' → logprob: -7.746945381164551

Token 191: ' while' (ID: 2049)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5618366003036499
    2. '   ' → logprob: -1.43683660030365
    3. 'if' → logprob: -1.81183660030365
    4. ' while' → logprob: -3.9368367195129395
    5. 'while' (adapté à ' while') → logprob: -5.4368367195129395
    6. '    ' → logprob: -5.9368367195129395
    7. '
' → logprob: -7.3118367195129395
    8. ' ' → logprob: -7.4368367195129395
    9. '	if' → logprob: -7.8118367195129395
    10. '    
' → logprob: -8.811836242675781

Token 192: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.25568169355392456
    2. ' d' → logprob: -1.5056817531585693
    3. 'p' → logprob: -6.25568151473999
    4. ' p' → logprob: -6.38068151473999
    5. ' ' → logprob: -10.130681991577148
    6. ' add' → logprob: -10.505681991577148
    7. '   ' → logprob: -10.505681991577148
    8. 'add' → logprob: -11.255681991577148
    9. '	d' → logprob: -12.130681991577148
    10. '  ' → logprob: -12.505681991577148

Token 193: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.6822972297668457
    2. '<' → logprob: -1.1822972297668457
    3. ' <=' → logprob: -2.1822972297668457
    4. '<=' → logprob: -2.6822972297668457
    5. '<p' → logprob: -5.057297229766846
    6. ' ' → logprob: -9.432296752929688
    7. ' !=' → logprob: -9.557296752929688
    8. '!=' → logprob: -9.807296752929688
    9. ' is' → logprob: -10.057296752929688
    10. ' p' → logprob: -10.307296752929688

Token 194: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.47482556104660034
    2. ' p' → logprob: -0.9748255610466003
    3. '=' → logprob: -7.974825382232666
    4. ' ' → logprob: -8.474825859069824
    5. '=p' → logprob: -8.974825859069824
    6. '	p' → logprob: -10.849825859069824
    7. 'f' → logprob: -11.724825859069824
    8. ' =' → logprob: -11.724825859069824
    9. ' f' → logprob: -12.224825859069824
    10. '(p' → logprob: -12.912325859069824

Token 195: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.15267892181873322
    2. ':
' → logprob: -2.027678966522217
    3. ' and' → logprob: -4.777678966522217
    4. 'and' → logprob: -6.777678966522217
    5. '   ' → logprob: -8.027678489685059
    6. '       ' → logprob: -11.402678489685059
    7. ':
' → logprob: -11.402678489685059
    8. ' or' → logprob: -11.902678489685059
    9. '):
' → logprob: -12.277678489685059
    10. ' :' → logprob: -12.402678489685059

Token 196: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.031356025487184525
    2. '       ' → logprob: -3.5313560962677
    3. ' if' → logprob: -7.156355857849121
    4. '
' → logprob: -8.031355857849121
    5. 'd' → logprob: -8.656355857849121
    6. 'if' → logprob: -9.156355857849121
    7. ' d' → logprob: -9.156355857849121
    8. '   ' → logprob: -11.031355857849121
    9. '    
' → logprob: -11.156355857849121
    10. '    ' → logprob: -11.406355857849121

Token 197: ' ans' (ID: 3345)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.556908369064331
    2. 'print' → logprob: -1.181908369064331
    3. 'if' → logprob: -3.431908369064331
    4. ' if' → logprob: -4.05690860748291
    5. 'add' → logprob: -4.18190860748291
    6. 'he' → logprob: -4.68190860748291
    7. '       ' → logprob: -4.80690860748291
    8. 'pass' → logprob: -4.93190860748291
    9. ' add' → logprob: -5.05690860748291
    10. ' print' → logprob: -5.18190860748291

Token 198: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18373335897922516
    2. '=' → logprob: -1.808733344078064
    3. ' ' → logprob: -5.9337334632873535
    4. ',' → logprob: -7.5587334632873535
    5. 'x' → logprob: -8.683732986450195
    6. '_idx' → logprob: -9.933732986450195
    7. 'u' → logprob: -10.058732986450195
    8. 'd' → logprob: -10.183732986450195
    9. '_' → logprob: -10.183732986450195
    10. 'print' → logprob: -10.308732986450195

Token 199: ' add' (ID: 1147)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.678408145904541
    2. 'add' → logprob: -1.428408145904541
    3. 'min' → logprob: -2.553408145904541
    4. 'd' → logprob: -3.053408145904541
    5. 'del' → logprob: -3.428408145904541
    6. '-' → logprob: -3.553408145904541
    7. 'he' → logprob: -3.803408145904541
    8. 'inf' → logprob: -4.553408145904541
    9. '0' → logprob: -4.803408145904541
    10. 'heap' → logprob: -5.428408145904541

Token 200: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -7.822646693966817e-06
    2. ' -' → logprob: -13.250007629394531
    3. '
' → logprob: -14.250007629394531
    4. 'd' → logprob: -14.500007629394531
    5. ' q' → logprob: -14.500007629394531
    6. '-q' → logprob: -14.500007629394531
    7. ' =' → logprob: -14.625007629394531
    8. '   ' → logprob: -14.750007629394531
    9. 'p' → logprob: -14.750007629394531
    10. 'x' → logprob: -14.875007629394531

Token 201: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.25252825021743774
    2. '[-' → logprob: -1.502528190612793
    3. ' and' → logprob: -8.502528190612793
    4. '0' → logprob: -8.627528190612793
    5. '-' → logprob: -10.002528190612793
    6. '
' → logprob: -10.252528190612793
    7. ' [' → logprob: -10.752528190612793
    8. '[
' → logprob: -10.877528190612793
    9. 'and' → logprob: -11.127528190612793
    10. ' [-' → logprob: -11.377528190612793

Token 202: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008859428577125072
    2. '-' → logprob: -4.758859634399414
    3. ' ' → logprob: -9.008859634399414
    4. ' -' → logprob: -9.758859634399414
    5. '
' → logprob: -10.133859634399414
    6. ':' → logprob: -11.508859634399414
    7. '::-' → logprob: -13.008859634399414
    8. '   ' → logprob: -13.133859634399414
    9. '-
' → logprob: -13.696359634399414
    10. '1' → logprob: -13.946359634399414

Token 203: ']' (ID: 60)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.42677122354507446
    2. ']' → logprob: -2.5517711639404297
    3. '
' → logprob: -2.6767711639404297
    4. '+' → logprob: -2.6767711639404297
    5. ' +' → logprob: -3.0517711639404297
    6. 'if' → logprob: -3.3017711639404297
    7. '<|end|>' → logprob: -3.9267711639404297
    8. ' -' → logprob: -4.05177116394043
    9. '-' → logprob: -5.17677116394043
    10. ')' → logprob: -6.30177116394043

Token 204: ' if' (ID: 538)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7601171135902405
    2. '-' → logprob: -1.0101170539855957
    3. ' -' → logprob: -2.3851170539855957
    4. '+' → logprob: -3.6351170539855957
    5. ' if' → logprob: -3.8851170539855957
    6. 'print' → logprob: -4.760117053985596
    7. '   ' → logprob: -5.010117053985596
    8. 'if' → logprob: -5.635117053985596
    9. '       ' → logprob: -5.635117053985596
    10. ' +' → logprob: -6.385117053985596

Token 205: ' add' (ID: 1147)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.5547372102737427
    2. ' add' → logprob: -1.1797372102737427
    3. 'del' → logprob: -3.054737091064453
    4. 'd' → logprob: -3.554737091064453
    5. ' d' → logprob: -4.179737091064453
    6. ' del' → logprob: -4.304737091064453
    7. 'len' → logprob: -4.804737091064453
    8. ' len' → logprob: -5.929737091064453
    9. 'inf' → logprob: -7.054737091064453
    10. ' p' → logprob: -7.429737091064453

Token 206: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.010897843167185783
    2. 'd' → logprob: -4.635897636413574
    3. 'add' → logprob: -7.510897636413574
    4. 'p' → logprob: -7.885897636413574
    5. ' ' → logprob: -10.135897636413574
    6. '(add' → logprob: -10.385897636413574
    7. '   ' → logprob: -10.510897636413574
    8. 'dd' → logprob: -11.510897636413574
    9. 'x' → logprob: -11.510897636413574
    10. '
' → logprob: -11.635897636413574

Token 207: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.46829307079315186
    2. '<' → logprob: -1.4682930707931519
    3. ' <' → logprob: -2.3432931900024414
    4. ' else' → logprob: -3.8432931900024414
    5. 'else' → logprob: -4.343293190002441
    6. ' ' → logprob: -5.718293190002441
    7. ' and' → logprob: -6.093293190002441
    8. '!=' → logprob: -6.093293190002441
    9. '<=' → logprob: -6.843293190002441
    10. '<len' → logprob: -7.093293190002441

Token 208: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006699973251670599
    2. ']' → logprob: -5.131700038909912
    3. ' else' → logprob: -7.881700038909912
    4. ' and' → logprob: -9.006699562072754
    5. ']>' → logprob: -9.506699562072754
    6. 'else' → logprob: -10.131699562072754
    7. ' ' → logprob: -10.131699562072754
    8. '[' → logprob: -10.256699562072754
    9. '
' → logprob: -11.256699562072754
    10. '<|end|>' → logprob: -11.256699562072754

Token 209: ']' (ID: 60)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.6758805513381958
    2. '!=' → logprob: -1.5508805513381958
    3. ' <' → logprob: -1.8008805513381958
    4. ' !=' → logprob: -2.9258804321289062
    5. '<=' → logprob: -3.1758804321289062
    6. '==' → logprob: -5.175880432128906
    7. 'else' → logprob: -5.800880432128906
    8. ' <=' → logprob: -5.925880432128906
    9. ' else' → logprob: -6.800880432128906
    10. ' ==' → logprob: -6.925880432128906

Token 210: ' !=' (ID: 1666)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.7545284032821655
    2. ' <' → logprob: -1.3795284032821655
    3. '<=' → logprob: -1.6295284032821655
    4. ' <=' → logprob: -3.629528522491455
    5. '!=' → logprob: -3.754528522491455
    6. ' !=' → logprob: -4.504528522491455
    7. '==' → logprob: -5.254528522491455
    8. '>' → logprob: -5.504528522491455
    9. 'else' → logprob: -5.879528522491455
    10. '>=' → logprob: -5.879528522491455

Token 211: ' inf' (ID: 5603)
  Prédit: 'inf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.0047815958969295025
    2. 'del' → logprob: -5.504781723022461
    3. ' inf' → logprob: -7.504781723022461
    4. 'd' → logprob: -9.254781723022461
    5. ' ' → logprob: -11.254781723022461
    6. '10' → logprob: -11.629781723022461
    7. ' del' → logprob: -11.754781723022461
    8. '
' → logprob: -12.129781723022461
    9. '-inf' → logprob: -12.254781723022461
    10. 'sys' → logprob: -12.504781723022461

Token 212: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.20143447816371918
    2. ' else' → logprob: -1.7014344930648804
    3. 'and' → logprob: -11.201434135437012
    4. ' and' → logprob: -12.076434135437012
    5. '+' → logprob: -14.326434135437012
    6. ' ' → logprob: -14.576434135437012
    7. '
' → logprob: -15.451434135437012
    8. '-' → logprob: -15.576434135437012
    9. '	else' → logprob: -15.826434135437012
    10. 'e' → logprob: -17.451435089111328

Token 213: ' -' (ID: 533)
  Prédit: '-inf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-inf' → logprob: -0.013294934295117855
    2. '-' → logprob: -5.013294696807861
    3. 'inf' → logprob: -5.638294696807861
    4. '-del' → logprob: -6.388294696807861
    5. '-d' → logprob: -7.638294696807861
    6. ' -' → logprob: -7.638294696807861
    7. 'del' → logprob: -10.13829517364502
    8. '-in' → logprob: -10.26329517364502
    9. '-p' → logprob: -10.26329517364502
    10. '-n' → logprob: -10.51329517364502

Token 214: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. 'inf' → logprob: -13.250001907348633
    3. '10' → logprob: -17.000001907348633
    4. '2' → logprob: -17.000001907348633
    5. ' ' → logprob: -17.500001907348633
    6. '１' → logprob: -19.500001907348633
    7. '100' → logprob: -19.625001907348633
    8. '0' → logprob: -20.125001907348633
    9. '11' → logprob: -20.187501907348633
    10. '
' → logprob: -20.562501907348633

Token 215: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.049822885543107986
    2. 'print' → logprob: -3.4248228073120117
    3. '
' → logprob: -4.174822807312012
    4. '        
' → logprob: -8.049822807312012
    5. ' print' → logprob: -9.049822807312012
    6. '
' → logprob: -9.799822807312012
    7. '\' → logprob: -10.049822807312012
    8. '   ' → logprob: -10.174822807312012
    9. ',' → logprob: -10.674822807312012
    10. '           ' → logprob: -11.549822807312012

Token 216: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.626505434513092
    2. 'print' → logprob: -1.2515053749084473
    3. '
' → logprob: -1.8765053749084473
    4. '        
' → logprob: -4.126505374908447
    5. 'd' → logprob: -5.126505374908447
    6. '
' → logprob: -7.251505374908447
    7. '\' → logprob: -7.376505374908447
    8. '' → logprob: -8.001505851745605
    9. '    
' → logprob: -8.126505851745605
    10. '   ' → logprob: -8.126505851745605

Token 217: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.002470305422320962
    2. 'd' → logprob: -6.62747049331665
    3. '       ' → logprob: -7.62747049331665
    4. '
' → logprob: -7.87747049331665
    5. ' print' → logprob: -8.752470016479492
    6. 'break' → logprob: -9.502470016479492
    7. 'yield' → logprob: -11.252470016479492
    8. ' d' → logprob: -11.502470016479492
    9. '        
' → logprob: -12.002470016479492
    10. '   ' → logprob: -12.127470016479492

Token 218: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -1.759734732331708e-05
    2. 'ans' → logprob: -11.000017166137695
    3. '(' → logprob: -14.125017166137695
    4. '(
' → logprob: -17.250017166137695
    5. '(answer' → logprob: -17.750017166137695
    6. '(abs' → logprob: -18.000017166137695
    7. '(an' → logprob: -19.500017166137695
    8. '	ans' → logprob: -19.625017166137695
    9. ' ans' → logprob: -19.750017166137695
    10. '(a' → logprob: -20.125017166137695

Token 219: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.002936221659183502
    2. ')' → logprob: -5.877936363220215
    3. '       ' → logprob: -9.002936363220215
    4. ')
' → logprob: -12.377936363220215
    5. ' )
' → logprob: -12.877936363220215
    6. '   ' → logprob: -14.877936363220215
    7. ')d' → logprob: -15.002936363220215
    8. '
' → logprob: -15.377936363220215
    9. ')

' → logprob: -15.752936363220215
    10. '	' → logprob: -16.0029354095459

Token 220: '       ' (ID: 309)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.07009848952293396
    2. '       ' → logprob: -2.820098400115967
    3. ' d' → logprob: -5.570098400115967
    4. '	' → logprob: -6.320098400115967
    5. '   ' → logprob: -7.195098400115967
    6. '	d' → logprob: -7.320098400115967
    7. '        
' → logprob: -7.695098400115967
    8. '		
' → logprob: -8.945098876953125
    9. '
' → logprob: -9.070098876953125
    10. '    
' → logprob: -9.195098876953125

Token 221: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -4.842555426876061e-06
    2. ' d' → logprob: -13.125004768371582
    3. '   ' → logprob: -13.250004768371582
    4. '       ' → logprob: -14.375004768371582
    5. 'try' → logprob: -14.625004768371582
    6. '
' → logprob: -17.0000057220459
    7. '    
' → logprob: -18.6250057220459
    8. '           ' → logprob: -19.3750057220459
    9. '        
' → logprob: -19.7500057220459
    10. ' 
' → logprob: -20.7500057220459

Token 222: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.006715370807796717
    2. ' =' → logprob: -5.006715297698975
    3. ' ' → logprob: -16.756715774536133
    4. '=

' → logprob: -17.506715774536133
    5. ',' → logprob: -17.881715774536133
    6. '=
' → logprob: -18.131715774536133
    7. '+=' → logprob: -18.756715774536133
    8. '.=' → logprob: -18.881715774536133
    9. '＝' → logprob: -19.006715774536133
    10. '_=' → logprob: -19.256715774536133

Token 223: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.03804171830415726
    2. ' next' → logprob: -3.288041830062866
    3. '	next' → logprob: -16.163042068481445
    4. '(next' → logprob: -17.038042068481445
    5. '[next' → logprob: -17.163042068481445
    6. '   ' → logprob: -17.663042068481445
    7. 'n' → logprob: -18.788042068481445
    8. '
' → logprob: -18.913042068481445
    9. '.next' → logprob: -19.163042068481445
    10. ' nex' → logprob: -19.163042068481445

Token 224: '(iter' (ID: 61014)
  Prédit: '(iter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(iter' → logprob: -7.896309739408025e-07
    2. 'iter' → logprob: -14.250000953674316
    3. '(iterator' → logprob: -16.75
    4. '(it' → logprob: -18.75
    5. ' iter' → logprob: -19.0
    6. '(inter' → logprob: -19.375
    7. '	iter' → logprob: -19.625
    8. '(' → logprob: -20.125
    9. '_iter' → logprob: -21.25
    10. 'Iter' → logprob: -21.25

Token 225: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -1.8312570318812504e-05
    2. 'd' → logprob: -11.000018119812012
    3. 'iter' → logprob: -13.375018119812012
    4. ')' → logprob: -19.000019073486328
    5. '(iter' → logprob: -19.000019073486328
    6. '   ' → logprob: -19.125019073486328
    7. ' D' → logprob: -19.125019073486328
    8. 'Iter' → logprob: -19.375019073486328
    9. ' iter' → logprob: -19.750019073486328
    10. '_D' → logprob: -20.250019073486328

Token 226: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0016004408244043589
    2. '   ' → logprob: -6.75160026550293
    3. ')
' → logprob: -8.00160026550293
    4. ' )' → logprob: -9.62660026550293
    5. '       ' → logprob: -10.75160026550293
    6. ',' → logprob: -13.25160026550293
    7. ' ' → logprob: -13.50160026550293
    8. ')d' → logprob: -14.12660026550293
    9. '
' → logprob: -14.62660026550293
    10. '    
' → logprob: -14.87660026550293

Token 227: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03803391382098198
    2. 'if' → logprob: -4.038033962249756
    3. ' if' → logprob: -4.288033962249756
    4. '    
' → logprob: -5.663033962249756
    5. ' 
' → logprob: -7.163033962249756
    6. '    ' → logprob: -7.663033962249756
    7. '	if' → logprob: -8.288033485412598
    8. '```' → logprob: -8.663033485412598
    9. ' ' → logprob: -8.913033485412598
    10. '
' → logprob: -8.913033485412598

Token 228: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.3305615186691284
    2. ' if' → logprob: -1.4555615186691284
    3. '   ' → logprob: -3.080561637878418
    4. '    ' → logprob: -7.455561637878418
    5. '    
' → logprob: -7.580561637878418
    6. '
' → logprob: -8.080561637878418
    7. '	if' → logprob: -8.455561637878418
    8. ' ' → logprob: -8.580561637878418
    9. '       ' → logprob: -8.830561637878418
    10. '        
' → logprob: -9.580561637878418

Token 229: ' d' (ID: 272)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.13739223778247833
    2. 'd' → logprob: -2.637392282485962
    3. 'not' → logprob: -4.512392044067383
    4. 'p' → logprob: -4.637392044067383
    5. ' f' → logprob: -4.637392044067383
    6. 'x' → logprob: -4.762392044067383
    7. 'add' → logprob: -4.887392044067383
    8. ' d' → logprob: -5.762392044067383
    9. 'del' → logprob: -5.887392044067383
    10. ' not' → logprob: -6.137392044067383

Token 230: ' ==' (ID: 951)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -1.1218475103378296
    2. ' ==' → logprob: -1.2468475103378296
    3. ' >=' → logprob: -2.246847629547119
    4. '==' → logprob: -2.496847629547119
    5. '>' → logprob: -2.621847629547119
    6. ' <=' → logprob: -2.871847629547119
    7. '>=' → logprob: -3.621847629547119
    8. '<=' → logprob: -3.746847629547119
    9. ' <' → logprob: -4.996847629547119
    10. ' in' → logprob: -5.121847629547119

Token 231: ' inf' (ID: 5603)
  Prédit: 'inf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.00043972869752906263
    2. 'p' → logprob: -7.750439643859863
    3. ' inf' → logprob: -11.875439643859863
    4. '-inf' → logprob: -15.125439643859863
    5. ' p' → logprob: -15.375439643859863
    6. ' ' → logprob: -15.500439643859863
    7. ' ' → logprob: -15.875439643859863
    8. 'INF' → logprob: -15.875439643859863
    9. '_inf' → logprob: -15.875439643859863
    10. '   ' → logprob: -16.00044059753418

Token 232: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3497180640697479
    2. ':
' → logprob: -1.2247180938720703
    3. '   ' → logprob: -7.59971809387207
    4. '       ' → logprob: -7.84971809387207
    5. '           ' → logprob: -8.09971809387207
    6. ' and' → logprob: -11.09971809387207
    7. ':
' → logprob: -11.22471809387207
    8. ',' → logprob: -11.59971809387207
    9. ' :' → logprob: -11.59971809387207
    10. ' :
' → logprob: -11.97471809387207

Token 233: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8465448021888733
    2. '           ' → logprob: -1.0965447425842285
    3. 'break' → logprob: -1.5965447425842285
    4. ' break' → logprob: -3.8465447425842285
    5. '   ' → logprob: -4.8465447425842285
    6. '	break' → logprob: -5.3465447425842285
    7. '	   ' → logprob: -8.596545219421387
    8. '               ' → logprob: -9.971545219421387
    9. '```' → logprob: -9.971545219421387
    10. '     ' → logprob: -10.346545219421387

Token 234: ' exit' (ID: 10654)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.0002258277963846922
    2. ' break' → logprob: -8.500226020812988
    3. '	break' → logprob: -11.875226020812988
    4. 'exit' (adapté à ' exit') → logprob: -11.875226020812988
    5. '           ' → logprob: -12.375226020812988
    6. '   ' → logprob: -13.750226020812988
    7. '       ' → logprob: -13.875226020812988
    8. '
' → logprob: -14.000226020812988
    9. 'sys' → logprob: -14.375226020812988
    10. 'return' → logprob: -14.500226020812988

Token 235: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6931759119033813
    2. '()' → logprob: -0.6931759119033813
    3. '()
' → logprob: -10.81817626953125
    4. '(
' → logprob: -12.44317626953125
    5. '0' → logprob: -12.81817626953125
    6. '()]' → logprob: -15.06817626953125
    7. '()\' → logprob: -15.19317626953125
    8. '(

' → logprob: -15.31817626953125
    9. '()`' → logprob: -15.31817626953125
    10. '()<' → logprob: -15.69317626953125

Token 236: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20265531539916992
    2. 'if' → logprob: -2.57765531539917
    3. ' if' → logprob: -2.70265531539917
    4. ' 
' → logprob: -4.70265531539917
    5. '_' → logprob: -4.82765531539917
    6. '    
' → logprob: -4.82765531539917
    7. '<|end|>' → logprob: -5.20265531539917
    8. ' ' → logprob: -6.20265531539917
    9. '
' → logprob: -6.57765531539917
    10. '    ' → logprob: -6.95265531539917

Token 237: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44198188185691833
    2. 'if' (adapté à ' if') → logprob: -1.0669819116592407
    3. ' if' → logprob: -4.816981792449951
    4. '	if' → logprob: -5.316981792449951
    5. '    
' → logprob: -9.81698226928711
    6. 'i' → logprob: -11.06698226928711
    7. '   ' → logprob: -11.06698226928711
    8. '\t' → logprob: -11.31698226928711
    9. '[' → logprob: -11.44198226928711
    10. '    ' → logprob: -11.56698226928711

Token 238: ' f' (ID: 285)
  Prédit: ' f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.3869548439979553
    2. 'f' → logprob: -1.1369547843933105
    3. ' ' → logprob: -10.011955261230469
    4. 'x' → logprob: -11.511955261230469
    5. ' x' → logprob: -11.636955261230469
    6. ' not' → logprob: -12.136955261230469
    7. '   ' → logprob: -12.761955261230469
    8. ' ' → logprob: -13.011955261230469
    9. '  ' → logprob: -13.261955261230469
    10. '	f' → logprob: -13.386955261230469

Token 239: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0011028258595615625
    2. ':
' → logprob: -7.376102924346924
    3. '==' → logprob: -8.126102447509766
    4. ' :' → logprob: -8.876102447509766
    5. '[' → logprob: -11.001102447509766
    6. ' ==' → logprob: -11.251102447509766
    7. ' is' → logprob: -13.001102447509766
    8. ' ' → logprob: -13.251102447509766
    9. '   ' → logprob: -13.251102447509766
    10. ' and' → logprob: -14.001102447509766

Token 240: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5774083137512207
    2. ' he' → logprob: -1.2024083137512207
    3. 'he' → logprob: -2.0774083137512207
    4. '   ' → logprob: -4.952408313751221
    5. ' bis' → logprob: -5.327408313751221
    6. 'bis' → logprob: -7.577408313751221
    7. '```' → logprob: -8.827407836914062
    8. ' if' → logprob: -9.202407836914062
    9. '.he' → logprob: -10.327407836914062
    10. ' heap' → logprob: -10.327407836914062

Token 241: ' he' (ID: 501)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' (adapté à ' he') → logprob: -0.0002892258344218135
    2. ' he' → logprob: -8.250288963317871
    3. '   ' → logprob: -10.875288963317871
    4. 'heap' → logprob: -12.250288963317871
    5. 'import' → logprob: -13.250288963317871
    6. 'if' → logprob: -13.250288963317871
    7. 'bis' → logprob: -15.375288963317871
    8. '```' → logprob: -15.625288963317871
    9. ' ' → logprob: -16.125289916992188
    10. 'h' → logprob: -17.000289916992188

Token 242: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -1.6240566083070007e-06
    2. 'ap' → logprob: -13.500001907348633
    3. ' app' → logprob: -17.000001907348633
    4. 'a' → logprob: -17.875001907348633
    5. '```' → logprob: -18.625001907348633
    6. 'add' → logprob: -20.000001907348633
    7. 'pp' → logprob: -20.125001907348633
    8. 'he' → logprob: -20.500001907348633
    9. '	app' → logprob: -20.625001907348633
    10. '   ' → logprob: -20.625001907348633

Token 243: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.0015042672166600823
    2. 'push' → logprob: -6.501504421234131
    3. 'app' → logprob: -14.126503944396973
    4. '```' → logprob: -14.251503944396973
    5. 'sh' → logprob: -15.501503944396973
    6. 'u' → logprob: -16.00150489807129
    7. 'pp' → logprob: -16.75150489807129
    8. 'up' → logprob: -17.00150489807129
    9. 'us' → logprob: -17.25150489807129
    10. 'Push' → logprob: -17.62650489807129

Token 244: '(add' (ID: 40159)
  Prédit: '(add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(add' → logprob: -1.0280383548888494e-06
    2. 'add' → logprob: -14.000000953674316
    3. '(' → logprob: -15.875000953674316
    4. '(ad' → logprob: -19.250001907348633
    5. ')add' → logprob: -19.375001907348633
    6. '(del' → logprob: -20.000001907348633
    7. '(
' → logprob: -20.375001907348633
    8. ' (' → logprob: -20.375001907348633
    9. ' add' → logprob: -20.875001907348633
    10. ':add' → logprob: -21.625001907348633

Token 245: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.4021237802808173e-05
    2. 'add' → logprob: -11.375014305114746
    3. ')' → logprob: -13.750014305114746
    4. '(add' → logprob: -13.875014305114746
    5. '```' → logprob: -15.500014305114746
    6. 'Q' → logprob: -17.12501335144043
    7. '
' → logprob: -17.50001335144043
    8. 'd' → logprob: -17.50001335144043
    9. ')add' → logprob: -17.62501335144043
    10. '_q' → logprob: -17.62501335144043

Token 246: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11583060771226883
    2. ',x' → logprob: -2.240830659866333
    3. '(x' → logprob: -5.990830421447754
    4. ' ,' → logprob: -7.865830421447754
    5. ' x' → logprob: -10.115830421447754
    6. 'x' → logprob: -10.240830421447754
    7. '(' → logprob: -10.865830421447754
    8. ')' → logprob: -11.990830421447754
    9. ',(' → logprob: -11.990830421447754
    10. ',
' → logprob: -12.865830421447754

Token 247: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0067156096920371056
    2. ' x' → logprob: -5.006715774536133
    3. '-x' → logprob: -15.506715774536133
    4. '-' → logprob: -17.506715774536133
    5. '   ' → logprob: -17.631715774536133
    6. '	x' → logprob: -18.006715774536133
    7. ' ' → logprob: -18.506715774536133
    8. ' -' → logprob: -19.006715774536133
    9. ')x' → logprob: -19.756715774536133
    10. '(x' → logprob: -20.506715774536133

Token 248: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004622018430382013
    2. ')
' → logprob: -5.379621982574463
    3. ' )' → logprob: -13.879622459411621
    4. '   ' → logprob: -15.379622459411621
    5. ')

' → logprob: -15.379622459411621
    6. ')
' → logprob: -15.754622459411621
    7. ')#' → logprob: -16.754621505737305
    8. ')return' → logprob: -17.254621505737305
    9. ' )
' → logprob: -17.379621505737305
    10. '),' → logprob: -18.254621505737305

Token 249: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.027340034022927284
    2. ' else' → logprob: -4.527339935302734
    3. '   ' → logprob: -5.027339935302734
    4. '<|end|>' → logprob: -5.152339935302734
    5. 'elif' → logprob: -5.652339935302734
    6. ')' → logprob: -9.152339935302734
    7. '	else' → logprob: -9.902339935302734
    8. '_' → logprob: -10.402339935302734
    9. '<|end|>' → logprob: -11.277339935302734
    10. '```' → logprob: -11.277339935302734

Token 250: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.00380721059627831
    2. ' else' → logprob: -5.628807067871094
    3. 'elif' → logprob: -8.503807067871094
    4. '   ' → logprob: -12.503807067871094
    5. ' elif' → logprob: -14.628807067871094
    6. '	else' → logprob: -15.753807067871094
    7. '```' → logprob: -17.378807067871094
    8. 'he' → logprob: -17.628807067871094
    9. 'els' → logprob: -17.753807067871094
    10. ')' → logprob: -17.878807067871094

Token 251: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07815339416265488
    2. ':' → logprob: -3.578153371810913
    3. '   ' → logprob: -3.703153371810913
    4. ':
' → logprob: -3.828153371810913
    5. ' he' → logprob: -7.578153610229492
    6. 'he' → logprob: -10.078153610229492
    7. '):
' → logprob: -10.203153610229492
    8. '           ' → logprob: -10.453153610229492
    9. '
' → logprob: -10.703153610229492
    10. '```' → logprob: -10.828153610229492

Token 252: '       ' (ID: 309)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.03542300686240196
    2. ' he' → logprob: -3.4104230403900146
    3. '   ' → logprob: -6.4104228019714355
    4. 'heap' → logprob: -9.285423278808594
    5. 'if' → logprob: -11.910423278808594
    6. ' heap' → logprob: -12.410423278808594
    7. ' if' → logprob: -12.410423278808594
    8. 'while' → logprob: -12.535423278808594
    9. 'del' → logprob: -12.660423278808594
    10. ' while' → logprob: -12.660423278808594

Token 253: ' he' (ID: 501)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' (adapté à ' he') → logprob: -0.0005841302336193621
    2. 'del' → logprob: -7.625584125518799
    3. 'heap' → logprob: -10.250584602355957
    4. 'add' → logprob: -10.750584602355957
    5. 'bis' → logprob: -10.875584602355957
    6. 'while' → logprob: -11.500584602355957
    7. 'if' → logprob: -12.000584602355957
    8. 'd' → logprob: -14.250584602355957
    9. ' he' → logprob: -14.250584602355957
    10. '   ' → logprob: -14.500584602355957

Token 254: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -6.659005157416686e-05
    2. 'ap' → logprob: -9.625066757202148
    3. '```' → logprob: -15.125066757202148
    4. 'push' → logprob: -16.75006675720215
    5. 'a' → logprob: -17.00006675720215
    6. '``' → logprob: -18.00006675720215
    7. 'append' → logprob: -18.50006675720215
    8. '
' → logprob: -18.62506675720215
    9. ' app' → logprob: -18.75006675720215
    10. '   ' → logprob: -18.75006675720215

Token 255: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.12693923711776733
    2. 'op' → logprob: -2.126939296722412
    3. 'push' → logprob: -11.876938819885254
    4. 'pop' → logprob: -13.126938819885254
    5. '   ' → logprob: -14.751938819885254
    6. 'sh' → logprob: -14.751938819885254
    7. 'opp' → logprob: -15.251938819885254
    8. '
' → logprob: -15.376938819885254
    9. '```' → logprob: -15.501938819885254
    10. '

' → logprob: -15.751938819885254

Token 256: '(del' (ID: 95689)
  Prédit: '(del'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(del' → logprob: -0.023247109726071358
    2. 'del' → logprob: -3.773247003555298
    3. '	del' → logprob: -13.898246765136719
    4. ' del' → logprob: -14.398246765136719
    5. '```' → logprob: -17.14824676513672
    6. 'add' → logprob: -17.27324676513672
    7. '(' → logprob: -17.39824676513672
    8. '
' → logprob: -17.64824676513672
    9. '(add' → logprob: -17.77324676513672
    10. '.del' → logprob: -17.77324676513672

Token 257: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.8908587662735954e-05
    2. 'del' → logprob: -11.000019073486328
    3. '(del' → logprob: -13.750019073486328
    4. 'add' → logprob: -14.625019073486328
    5. 'd' → logprob: -15.500019073486328
    6. '```' → logprob: -15.625019073486328
    7. ' del' → logprob: -16.125019073486328
    8. ' q' → logprob: -16.500019073486328
    9. 'qu' → logprob: -17.000019073486328
    10. ' ' → logprob: -17.625019073486328

Token 258: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00023131117632146925
    2. ',x' → logprob: -8.375231742858887
    3. ' ,' → logprob: -14.375231742858887
    4. ',
' → logprob: -16.37523078918457
    5. '(x' → logprob: -16.87523078918457
    6. 'x' → logprob: -17.25023078918457
    7. ')' → logprob: -17.37523078918457
    8. '(' → logprob: -18.12523078918457
    9. ',p' → logprob: -19.12523078918457
    10. 's' → logprob: -19.25023078918457

Token 259: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.004078401252627373
    2. ' x' → logprob: -5.504078388214111
    3. '-x' → logprob: -18.379077911376953
    4. '	x' → logprob: -19.129077911376953
    5. ')x' → logprob: -19.504077911376953
    6. '(x' → logprob: -20.254077911376953
    7. ' ' → logprob: -20.504077911376953
    8. '-' → logprob: -20.504077911376953
    9. ' -' → logprob: -21.004077911376953
    10. ',x' → logprob: -21.504077911376953

Token 260: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009207503753714263
    2. ')
' → logprob: -7.12592077255249
    3. '<|end|>' → logprob: -10.000920295715332
    4. ' )' → logprob: -10.250920295715332
    5. '   ' → logprob: -10.500920295715332
    6. ')#' → logprob: -13.875920295715332
    7. ')return' → logprob: -13.875920295715332
    8. '[' → logprob: -14.000920295715332
    9. '
' → logprob: -14.125920295715332
    10. ')

' → logprob: -14.375920295715332

Token 261: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20262475311756134
    2. ' if' → logprob: -2.827624797821045
    3. '<|end|>' → logprob: -2.952624797821045
    4. ' while' → logprob: -3.452624797821045
    5. 'if' → logprob: -3.952624797821045
    6. ' ' → logprob: -5.077624797821045
    7. 'while' → logprob: -5.202624797821045
    8. ')' → logprob: -6.577624797821045
    9. '    ' → logprob: -6.952624797821045
    10. ' 
' → logprob: -7.077624797821045

Token 262: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.05361875891685486
    2. ' while' → logprob: -3.5536186695098877
    3. 'if' → logprob: -3.9286186695098877
    4. '   ' → logprob: -5.678618907928467
    5. ' if' → logprob: -8.803618431091309
    6. '#' → logprob: -8.803618431091309
    7. '	while' → logprob: -8.928618431091309
    8. '<|end|>' → logprob: -10.303618431091309
    9. ' ' → logprob: -12.178618431091309
    10. '    
' → logprob: -12.178618431091309

Token 263: ' add' (ID: 1147)
  Prédit: 'del'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'del' → logprob: -0.585975706577301
    2. 'add' → logprob: -0.835975706577301
    3. ' add' → logprob: -4.960975646972656
    4. ' del' → logprob: -5.835975646972656
    5. '(del' → logprob: -10.835975646972656
    6. '(add' → logprob: -11.585975646972656
    7. ' ' → logprob: -11.960975646972656
    8. 'True' → logprob: -12.085975646972656
    9. 'delete' → logprob: -12.585975646972656
    10. 'len' → logprob: -12.710975646972656

Token 264: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -2.816093228830141e-06
    2. 'del' → logprob: -13.37500286102295
    3. 'add' → logprob: -13.87500286102295
    4. '
' → logprob: -16.875001907348633
    5. '```' → logprob: -17.125001907348633
    6. 'd' → logprob: -17.375001907348633
    7. '[' → logprob: -17.500001907348633
    8. '

' → logprob: -17.500001907348633
    9. '(add' → logprob: -17.500001907348633
    10. '(del' → logprob: -17.750001907348633

Token 265: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.0629870858974755e-05
    2. ' and' → logprob: -10.00006103515625
    3. 'and' → logprob: -11.12506103515625
    4. ' ' → logprob: -15.62506103515625
    5. '[
' → logprob: -16.12506103515625
    6. '```' → logprob: -16.87506103515625
    7. '0' → logprob: -17.50006103515625
    8. '   ' → logprob: -17.87506103515625
    9. '1' → logprob: -17.87506103515625
    10. '
' → logprob: -18.00006103515625

Token 266: '0' (ID: 15)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00018244501552544534
    2. ' and' → logprob: -9.000182151794434
    3. 'and' → logprob: -9.875182151794434
    4. '0' → logprob: -12.375182151794434
    5. '1' → logprob: -13.250182151794434
    6. ' ' → logprob: -13.875182151794434
    7. '   ' → logprob: -15.250182151794434
    8. '```' → logprob: -15.625182151794434
    9. '
' → logprob: -16.12518310546875
    10. '>' → logprob: -16.87518310546875

Token 267: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.22701910138130188
    2. ' ==' → logprob: -1.6020190715789795
    3. '=' → logprob: -7.352019309997559
    4. ']==' → logprob: -7.352019309997559
    5. ')==' → logprob: -8.602019309997559
    6. ')' → logprob: -10.227019309997559
    7. ']' → logprob: -10.352019309997559
    8. '==
' → logprob: -10.352019309997559
    9. '===' → logprob: -10.852019309997559
    10. ' =' → logprob: -12.477019309997559

Token 268: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.004049194511026144
    2. ' ==' → logprob: -5.629049301147461
    3. '=' → logprob: -7.879049301147461
    4. '>=' → logprob: -10.254049301147461
    5. '===' → logprob: -11.379049301147461
    6. '==
' → logprob: -11.629049301147461
    7. ']==' → logprob: -12.254049301147461
    8. '>' → logprob: -12.754049301147461
    9. 'in' → logprob: -12.754049301147461
    10. ')==' → logprob: -12.754049301147461

Token 269: ' del' (ID: 1083)
  Prédit: 'del'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'del' → logprob: -2.935296834039036e-06
    2. ' del' → logprob: -12.75000286102295
    3. '   ' → logprob: -21.625003814697266
    4. '	del' → logprob: -22.250003814697266
    5. 'delete' → logprob: -22.375003814697266
    6. ' ' → logprob: -23.250003814697266
    7. '
' → logprob: -23.375003814697266
    8. '  ' → logprob: -23.375003814697266
    9. 'de' → logprob: -23.625003814697266
    10. '(del' → logprob: -24.625003814697266

Token 270: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.00018852073117159307
    2. 'del' → logprob: -8.625188827514648
    3. ' del' → logprob: -12.250188827514648
    4. 'el' → logprob: -13.750188827514648
    5. 'd' → logprob: -14.250188827514648
    6. ' q' → logprob: -15.000188827514648
    7. '
' → logprob: -15.125188827514648
    8. 'u' → logprob: -15.375188827514648
    9. 'qu' → logprob: -15.500188827514648
    10. 'uq' → logprob: -15.750188827514648

Token 271: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.771655115589965e-05
    2. '0' → logprob: -11.250018119812012
    3. '   ' → logprob: -12.500018119812012
    4. ' [' → logprob: -14.500018119812012
    5. ' ' → logprob: -15.500018119812012
    6. '[
' → logprob: -16.625017166137695
    7. '```' → logprob: -17.000017166137695
    8. '	' → logprob: -17.125017166137695
    9. 'q' → logprob: -17.375017166137695
    10. '  ' → logprob: -18.250017166137695

Token 272: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006558468448929489
    2. '[' → logprob: -7.375655651092529
    3. ' ' → logprob: -10.625656127929688
    4. '   ' → logprob: -12.250656127929688
    5. '```' → logprob: -15.875656127929688
    6. '  ' → logprob: -16.375656127929688
    7. '
' → logprob: -16.875656127929688
    8. '    ' → logprob: -17.625656127929688
    9. '۰' → logprob: -17.750656127929688
    10. '	' → logprob: -17.750656127929688

Token 273: ']:
' (ID: 22152)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.019262611865997314
    2. ':' → logprob: -4.769262790679932
    3. '):' → logprob: -5.144262790679932
    4. ':
' → logprob: -5.644262790679932
    5. ']:
' → logprob: -6.894262790679932
    6. '   ' → logprob: -9.769262313842773
    7. '):
' → logprob: -10.019262313842773
    8. ']:' → logprob: -10.769262313842773
    9. '():
' → logprob: -10.769262313842773
    10. ')' → logprob: -10.894262313842773

Token 274: '       ' (ID: 309)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.5963230133056641
    2. ' he' → logprob: -1.096323013305664
    3. '   ' → logprob: -2.846323013305664
    4. '       ' → logprob: -3.096323013305664
    5. '```' → logprob: -5.346323013305664
    6. '
' → logprob: -5.721323013305664
    7. '.he' → logprob: -6.721323013305664
    8. '        
' → logprob: -7.221323013305664
    9. '    
' → logprob: -7.846323013305664
    10. '/he' → logprob: -8.346323013305664

Token 275: ' he' (ID: 501)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' (adapté à ' he') → logprob: -2.999452772201039e-05
    2. ' he' → logprob: -10.500029563903809
    3. '   ' → logprob: -13.750029563903809
    4. 'heap' → logprob: -14.125029563903809
    5. '       ' → logprob: -15.500029563903809
    6. '_he' → logprob: -15.750029563903809
    7. 'heme' → logprob: -16.625030517578125
    8. '```' → logprob: -16.750030517578125
    9. '' → logprob: -17.125030517578125
    10. '
' → logprob: -17.375030517578125

Token 276: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -4.008129963040119e-06
    2. 'ap' → logprob: -12.750003814697266
    3. 'he' → logprob: -14.750003814697266
    4. 'pp' → logprob: -15.125003814697266
    5. 'p' → logprob: -16.000003814697266
    6. '   ' → logprob: -16.625003814697266
    7. '```' → logprob: -16.875003814697266
    8. ' ' → logprob: -17.625003814697266
    9. ' app' → logprob: -17.875003814697266
    10. 'pop' → logprob: -18.000003814697266

Token 277: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -4.320199877838604e-07
    2. 'pop' → logprob: -15.75
    3. 'o' → logprob: -16.125
    4. 'ush' → logprob: -16.75
    5. 'opp' → logprob: -17.625
    6. 'оп' → logprob: -18.0
    7. 'p' → logprob: -18.25
    8. '
' → logprob: -18.75
    9. '   ' → logprob: -19.125
    10. 'opleft' → logprob: -19.25

Token 278: '(add' (ID: 40159)
  Prédit: '(add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(add' → logprob: -0.011052774265408516
    2. 'add' → logprob: -4.51105260848999
    3. '(del' → logprob: -12.511053085327148
    4. ' add' → logprob: -14.261053085327148
    5. 'del' → logprob: -15.011053085327148
    6. ')add' → logprob: -15.886053085327148
    7. '```' → logprob: -16.38605308532715
    8. '(' → logprob: -16.63605308532715
    9. '   ' → logprob: -17.51105308532715
    10. '(delete' → logprob: -17.63605308532715

Token 279: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -3.054500666621607e-06
    2. 'del' → logprob: -13.00000286102295
    3. '```' → logprob: -15.25000286102295
    4. 'qu' → logprob: -16.000003814697266
    5. '   ' → logprob: -16.750003814697266
    6. 'p' → logprob: -17.000003814697266
    7. 'add' → logprob: -17.375003814697266
    8. '
' → logprob: -17.625003814697266
    9. '(del' → logprob: -17.750003814697266
    10. 'qx' → logprob: -17.750003814697266

Token 280: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5759642124176025
    2. ')' → logprob: -0.8259642124176025
    3. ')
' → logprob: -10.950963973999023
    4. ')

' → logprob: -11.950963973999023
    5. '   ' → logprob: -15.450963973999023
    6. '       ' → logprob: -15.950963973999023
    7. ' )
' → logprob: -16.200963973999023
    8. '),' → logprob: -16.325963973999023
    9. ')add' → logprob: -16.450963973999023
    10. ')#' → logprob: -16.825963973999023

Token 281: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018505048006772995
    2. ' he' → logprob: -4.518505096435547
    3. 'he' → logprob: -5.518505096435547
    4. '<|end|>' → logprob: -6.643505096435547
    5. '   ' → logprob: -6.893505096435547
    6. ',' → logprob: -7.268505096435547
    7. '[' → logprob: -9.143505096435547
    8. ' and' → logprob: -9.643505096435547
    9. '	' → logprob: -10.393505096435547
    10. ' ' → logprob: -10.643505096435547

Token 282: ' he' (ID: 501)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' (adapté à ' he') → logprob: -1.981667537620524e-06
    2. 'heap' → logprob: -13.750001907348633
    3. ' he' → logprob: -14.000001907348633
    4. '   ' → logprob: -18.625001907348633
    5. 'hev' → logprob: -23.125001907348633
    6. 'heme' → logprob: -23.500001907348633
    7. '.he' → logprob: -23.875001907348633
    8. '```' → logprob: -23.875001907348633
    9. 'ho' → logprob: -24.125001907348633
    10. '  ' → logprob: -24.500001907348633

Token 283: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.00017743845819495618
    2. 'op' → logprob: -9.500177383422852
    3. 'pp' → logprob: -10.000177383422852
    4. 'pop' → logprob: -10.000177383422852
    5. 'ap' → logprob: -11.625177383422852
    6. '   ' → logprob: -13.750177383422852
    7. 'p' → logprob: -14.500177383422852
    8. 'opp' → logprob: -14.625177383422852
    9. '  ' → logprob: -15.625177383422852
    10. '```' → logprob: -15.750177383422852

Token 284: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -1.4140441635390744e-05
    2. 'ush' → logprob: -11.250014305114746
    3. 'pop' → logprob: -14.125014305114746
    4. 'оп' → logprob: -16.50001335144043
    5. 'p' → logprob: -16.62501335144043
    6. 'opp' → logprob: -17.00001335144043
    7. 'o' → logprob: -17.25001335144043
    8. 'app' → logprob: -17.62501335144043
    9. '```' → logprob: -17.62501335144043
    10. 'ap' → logprob: -17.87501335144043

Token 285: '(del' (ID: 95689)
  Prédit: '(del'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(del' → logprob: -0.00020389800192788243
    2. 'del' → logprob: -8.500204086303711
    3. '(de' → logprob: -15.625204086303711
    4. ' del' → logprob: -16.25020408630371
    5. '	del' → logprob: -16.37520408630371
    6. '(delete' → logprob: -17.75020408630371
    7. '(def' → logprob: -18.62520408630371
    8. '(d' → logprob: -18.87520408630371
    9. '.del' → logprob: -19.37520408630371
    10. '_del' → logprob: -19.87520408630371

Token 286: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -3.953082341467962e-05
    2. 'l' → logprob: -10.750039100646973
    3. '```' → logprob: -12.000039100646973
    4. 'f' → logprob: -13.000039100646973
    5. 'del' → logprob: -13.000039100646973
    6. 'el' → logprob: -13.375039100646973
    7. 'sq' → logprob: -14.250039100646973
    8. ')' → logprob: -14.375039100646973
    9. 'qu' → logprob: -14.625039100646973
    10. '	q' → logprob: -14.875039100646973

Token 287: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0564331205387134e-05
    2. ')
' → logprob: -11.62501049041748
    3. '   ' → logprob: -14.25001049041748
    4. '<|end|>' → logprob: -14.50001049041748
    5. ' )' → logprob: -16.000011444091797
    6. ')x' → logprob: -16.750011444091797
    7. '))' → logprob: -16.875011444091797
    8. '[' → logprob: -17.125011444091797
    9. '),' → logprob: -17.375011444091797
    10. ')return' → logprob: -17.500011444091797


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 285
Tokens correctement prédits (1ère position, stricte): 124
Tokens correctement prédits (1ère position, avec adaptation): 133
Tokens correctement prédits (top 10): 245
Précision stricte (1ère position): 43.51%
Précision adaptée (1ère position): 46.67%
Précision (top 10): 85.96%
================================================================================
