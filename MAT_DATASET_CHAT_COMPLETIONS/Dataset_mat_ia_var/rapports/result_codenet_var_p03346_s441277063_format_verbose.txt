================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:18:32
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import bisect
import heapq
import math
import random
import sys

from collections import Counter, defaultdict
from decimal import Decimal, ROUND_CEILING, ROUND_HALF_UP
from functools import lru_cache, reduce
from itertools import combinations, combinations_with_replacement, product


def read_single_integer():
    return int(input())


def read_multiple_integers():
    return list(map(int, input().split()))


def read_single_float():
    return float(input())


def read_multiple_floats():
    return list(map(float, input().split()))


def read_single_string():
    return input()


def read_multiple_strings():
    return list(map(str, input().split()))


def measure_time(executed_function):
    import time

    def wrapper(*function_args, **function_kwargs):
        start_time = time.time()
        result = executed_function(*function_args, **function_kwargs)
        end_time = time.time()

        print(end_time - start_time, 'sec', file=sys.stderr)
        return result

    return wrapper


@measure_time
def solve_minimum_removals_for_sorted_subsequence(array_size, permutation_sequence):
    position_by_value = [-1] * array_size

    for original_index, value in enumerate(permutation_sequence):
        position_by_value[value - 1] = original_index

    previous_position = -1
    max_increasing_sequence_length = 0
    current_increasing_sequence_length = 0

    for current_position in position_by_value:
        if current_position > previous_position:
            current_increasing_sequence_length += 1
        else:
            current_increasing_sequence_length = 1

        max_increasing_sequence_length = max(max_increasing_sequence_length, current_increasing_sequence_length)
        previous_position = current_position

    minimum_removals = array_size - max_increasing_sequence_length
    return minimum_removals


def main():
    number_of_elements = read_single_integer()
    permutation_list = [read_single_integer() for _ in range(number_of_elements)]

    print(solve_minimum_removals_for_sorted_subsequence(number_of_elements, permutation_list))


if __name__ == '__main__':
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' bis' (ID: 7204)
  → Token d'amorce (pas de prédiction)

Token 2: 'ect' (ID: 534)
  → Token d'amorce (pas de prédiction)

Token 3: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0002955399686470628
    2. '(' → logprob: -8.625295639038086
    3. '.b' → logprob: -10.500295639038086
    4. '\' → logprob: -11.125295639038086
    5. '\n' → logprob: -11.375295639038086
    6. '.\' → logprob: -11.875295639038086
    7. '

' → logprob: -12.000295639038086
    8. '
' → logprob: -12.125295639038086
    9. '.
' → logprob: -12.250295639038086
    10. '```' → logprob: -12.375295639038086

Token 4: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00028529210248962045
    2. '(' → logprob: -8.750285148620605
    3. '.

' → logprob: -10.750285148620605
    4. '.
' → logprob: -10.750285148620605
    5. '

' → logprob: -11.375285148620605
    6. '.b' → logprob: -11.625285148620605
    7. '\' → logprob: -11.625285148620605
    8. ',' → logprob: -11.750285148620605
    9. '' → logprob: -11.875285148620605
    10. '\n' → logprob: -12.000285148620605

Token 5: ' heap' (ID: 37237)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.18434125185012817
    2. ' math' → logprob: -1.9343411922454834
    3. 'sys' → logprob: -4.9343414306640625
    4. ' heap' → logprob: -5.0593414306640625
    5. ' collections' → logprob: -5.0593414306640625
    6. 'math' → logprob: -6.9343414306640625
    7. 'collections' → logprob: -7.0593414306640625
    8. ' itertools' → logprob: -7.0593414306640625
    9. ' os' → logprob: -7.4343414306640625
    10. 'heap' → logprob: -7.6843414306640625

Token 6: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.7954958821064793e-05
    2. 'queue' → logprob: -11.125018119812012
    3. 'ify' → logprob: -14.375018119812012
    4. '#' → logprob: -14.625018119812012
    5. 'i' → logprob: -14.750018119812012
    6. ' queue' → logprob: -15.000018119812012
    7. '```' → logprob: -15.125018119812012
    8. 't' → logprob: -15.375018119812012
    9. 'u' → logprob: -15.375018119812012
    10. '<|end|>' → logprob: -16.125017166137695

Token 7: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.028217267245054245
    2. '\' → logprob: -4.653217315673828
    3. '\n' → logprob: -5.278217315673828
    4. '
' → logprob: -5.528217315673828
    5. 'import' → logprob: -6.278217315673828
    6. '(' → logprob: -6.528217315673828
    7. '#' → logprob: -6.778217315673828
    8. ',' → logprob: -7.028217315673828
    9. '<|end|>' → logprob: -7.153217315673828
    10. '

' → logprob: -7.653217315673828

Token 8: 'import' (ID: 561)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\' → logprob: -1.448566198348999
    2. '
' → logprob: -1.573566198348999
    3. '.' → logprob: -1.823566198348999
    4. '\n' → logprob: -1.823566198348999
    5. 'def' → logprob: -2.323566198348999
    6. '

' → logprob: -3.448566198348999
    7. '```' → logprob: -3.573566198348999
    8. '#' → logprob: -3.698566198348999
    9. '[' → logprob: -4.323566436767578
    10. '' → logprob: -4.823566436767578

Token 9: ' math' (ID: 13324)
  Prédit: ' math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.27235856652259827
    2. ' itertools' → logprob: -1.8973585367202759
    3. ' collections' → logprob: -2.7723586559295654
    4. ' sys' → logprob: -4.147358417510986
    5. 'math' → logprob: -5.272358417510986
    6. 'collections' → logprob: -5.772358417510986
    7. ' os' → logprob: -6.897358417510986
    8. ' threading' → logprob: -8.022358894348145
    9. ' random' → logprob: -8.022358894348145
    10. ' time' → logprob: -10.147358894348145

Token 10: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7077916264533997
    2. '

' → logprob: -1.7077915668487549
    3. '
' → logprob: -2.082791566848755
    4. 'def' → logprob: -3.082791566848755
    5. '\' → logprob: -3.207791566848755
    6. 'import' → logprob: -3.582791566848755
    7. ',' → logprob: -3.832791566848755
    8. '```' → logprob: -4.332791805267334
    9. '' → logprob: -4.457791805267334
    10. '\n' → logprob: -4.582791805267334

Token 11: 'import' (ID: 561)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -0.7411006689071655
    2. 'def' → logprob: -1.3661006689071655
    3. 'import' → logprob: -3.116100788116455
    4. '

' → logprob: -3.116100788116455
    5. '.' → logprob: -3.241100788116455
    6. '\n' → logprob: -3.241100788116455
    7. '```' → logprob: -3.616100788116455
    8. '
' → logprob: -3.991100788116455
    9. ',' → logprob: -4.116100788116455
    10. '#' → logprob: -4.741100788116455

Token 12: ' random' (ID: 7526)
  Prédit: 'random'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'random' → logprob: -0.7397271394729614
    2. ' random' → logprob: -1.6147271394729614
    3. 'collections' → logprob: -1.9897271394729614
    4. ' sys' → logprob: -2.614727020263672
    5. ' collections' → logprob: -2.739727020263672
    6. 'sys' → logprob: -3.739727020263672
    7. ' itertools' → logprob: -4.239727020263672
    8. 'operator' → logprob: -5.739727020263672
    9. ' operator' → logprob: -5.989727020263672
    10. ' os' → logprob: -6.364727020263672

Token 13: '
' (ID: 198)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -0.93739253282547
    2. '\n' → logprob: -1.4373924732208252
    3. '
' → logprob: -2.187392473220825
    4. 'import' → logprob: -2.687392473220825
    5. '```' → logprob: -2.937392473220825
    6. '#' → logprob: -3.437392473220825
    7. '

' → logprob: -3.562392473220825
    8. '<|end|>' → logprob: -3.937392473220825
    9. ',' → logprob: -4.187392711639404
    10. '' → logprob: -4.687392711639404

Token 14: 'import' (ID: 561)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -1.4198578596115112
    2. '
' → logprob: -1.9198578596115112
    3. 'def' → logprob: -2.044857978820801
    4. '#' → logprob: -2.294857978820801
    5. 'import' → logprob: -2.294857978820801
    6. '

' → logprob: -2.419857978820801
    7. '\n' → logprob: -3.044857978820801
    8. '```' → logprob: -3.544857978820801
    9. ',' → logprob: -3.794857978820801
    10. 'from' → logprob: -3.794857978820801

Token 15: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -1.3229665756225586
    2. 're' → logprob: -1.4479665756225586
    3. 'time' → logprob: -2.0729665756225586
    4. ' sys' → logprob: -2.0729665756225586
    5. 'string' → logprob: -2.5729665756225586
    6. ' re' → logprob: -2.8229665756225586
    7. 'statistics' → logprob: -3.3229665756225586
    8. 'collections' → logprob: -3.4479665756225586
    9. ' time' → logprob: -4.322966575622559
    10. ' statistics' → logprob: -4.447966575622559

Token 16: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.49410098791122437
    2. '\n' → logprob: -1.7441010475158691
    3. '

' → logprob: -2.494101047515869
    4. 'import' → logprob: -3.119101047515869
    5. '#' → logprob: -3.494101047515869
    6. '\' → logprob: -3.869101047515869
    7. '```' → logprob: -4.119101047515869
    8. '<|end|>' → logprob: -5.119101047515869
    9. '' → logprob: -5.369101047515869
    10. '.' → logprob: -6.119101047515869

Token 17: 'from' (ID: 2845)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5407134890556335
    2. 'class' → logprob: -1.9157135486602783
    3. '
' → logprob: -2.2907135486602783
    4. '#' → logprob: -2.5407135486602783
    5. '\' → logprob: -3.9157135486602783
    6. 'from' → logprob: -4.165713310241699
    7. 'import' → logprob: -4.415713310241699
    8. '```' → logprob: -4.415713310241699
    9. 'd' → logprob: -4.540713310241699
    10. '\n' → logprob: -4.915713310241699

Token 18: ' collections' (ID: 22690)
  Prédit: ' collections'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.02922814153134823
    2. ' typing' → logprob: -4.279228210449219
    3. ' ' → logprob: -5.029228210449219
    4. ' itertools' → logprob: -5.654228210449219
    5. 'collections' → logprob: -5.654228210449219
    6. ' math' → logprob: -7.654228210449219
    7. '_' → logprob: -8.529228210449219
    8. ' enum' → logprob: -9.029228210449219
    9. ' import' → logprob: -9.029228210449219
    10. ' functools' → logprob: -9.279228210449219

Token 19: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.38815778493881226
    2. ' import' → logprob: -1.138157844543457
    3. '<|end|>' → logprob: -7.263157844543457
    4. '.' → logprob: -7.888157844543457
    5. ' ' → logprob: -9.638157844543457
    6. '	import' → logprob: -9.763157844543457
    7. 'from' → logprob: -10.513157844543457
    8. '```' → logprob: -11.138157844543457
    9. ' ' → logprob: -12.013157844543457
    10. '.import' → logprob: -12.138157844543457

Token 20: ' Counter' (ID: 32251)
  Prédit: ' defaultdict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.20583394169807434
    2. ' deque' → logprob: -1.705833911895752
    3. 'deque' → logprob: -6.080833911895752
    4. ' abc' → logprob: -6.205833911895752
    5. ' collections' → logprob: -10.08083438873291
    6. ' named' → logprob: -10.45583438873291
    7. ' import' → logprob: -11.70583438873291
    8. ' Counter' → logprob: -11.95583438873291
    9. ' itertools' → logprob: -12.08083438873291
    10. ' ' → logprob: -12.58083438873291

Token 21: ',' (ID: 11)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.7364217042922974
    2. ',' → logprob: -1.4864217042922974
    3. '

' → logprob: -2.111421585083008
    4. '
' → logprob: -2.361421585083008
    5. 'from' → logprob: -3.611421585083008
    6. '\n' → logprob: -3.986421585083008
    7. 'def' → logprob: -4.861421585083008
    8. '```' → logprob: -4.986421585083008
    9. '<|end|>' → logprob: -5.236421585083008
    10. ',

' → logprob: -5.986421585083008

Token 22: ' defaultdict' (ID: 107098)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.6519056558609009
    2. ' defaultdict' → logprob: -0.9019056558609009
    3. 'default' → logprob: -2.7769055366516113
    4. ' deque' → logprob: -4.526905536651611
    5. 'named' → logprob: -9.40190601348877
    6. ' itertools' → logprob: -11.77690601348877
    7. ' named' → logprob: -11.90190601348877
    8. ' default' → logprob: -13.27690601348877
    9. 'de' → logprob: -13.40190601348877
    10. 'Ordered' → logprob: -13.65190601348877

Token 23: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9519814848899841
    2. '

' → logprob: -1.201981544494629
    3. 'import' → logprob: -1.451981544494629
    4. ',' → logprob: -3.201981544494629
    5. 'from' → logprob: -3.951981544494629
    6. '<|end|>' → logprob: -5.201981544494629
    7. '\n' → logprob: -5.951981544494629
    8. '```' → logprob: -6.201981544494629
    9. 'class' → logprob: -6.701981544494629
    10. '<|end|>' → logprob: -6.701981544494629

Token 24: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6645524501800537
    2. '

' → logprob: -1.1645524501800537
    3. 'import' → logprob: -1.9145524501800537
    4. 'from' → logprob: -4.664552688598633
    5. 'class' → logprob: -5.539552688598633
    6. '\n' → logprob: -5.664552688598633
    7. ',' → logprob: -5.914552688598633
    8. 'def' → logprob: -6.289552688598633
    9. '```' → logprob: -7.164552688598633
    10. '


' → logprob: -7.539552688598633

Token 25: ' decimal' (ID: 26964)
  Prédit: ' itertools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.14710195362567902
    2. ' typing' → logprob: -2.147101879119873
    3. 'typing' → logprob: -5.022101879119873
    4. ' operator' → logprob: -5.272101879119873
    5. ' functools' → logprob: -5.272101879119873
    6. 'it' → logprob: -6.897101879119873
    7. 'operator' → logprob: -7.022101879119873
    8. ' heap' → logprob: -8.147102355957031
    9. ' ' → logprob: -8.522102355957031
    10. 'io' → logprob: -9.022102355957031

Token 26: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.02802915871143341
    2. ' ' → logprob: -4.278028964996338
    3. '<|end|>' → logprob: -4.778028964996338
    4. 'import' → logprob: -5.278028964996338
    5. '	import' → logprob: -9.403029441833496
    6. '<|end|>' → logprob: -9.778029441833496
    7. '.' → logprob: -9.903029441833496
    8. '```' → logprob: -10.528029441833496
    9. ' ```' → logprob: -11.278029441833496
    10. '_import' → logprob: -12.153029441833496

Token 27: ' Decimal' (ID: 56874)
  Prédit: ' Decimal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Decimal' → logprob: -0.020977413281798363
    2. 'Decimal' → logprob: -3.89597749710083
    3. ' ' → logprob: -8.145977020263672
    4. '.Decimal' → logprob: -9.520977020263672
    5. '```' → logprob: -10.270977020263672
    6. 'decimal' → logprob: -11.520977020263672
    7. ' decimal' → logprob: -11.520977020263672
    8. ' defaultdict' → logprob: -12.520977020263672
    9. ' ' → logprob: -12.895977020263672
    10. '	' → logprob: -13.145977020263672

Token 28: ',' (ID: 11)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.49979206919670105
    2. '
' → logprob: -1.8747920989990234
    3. ',' → logprob: -2.1247920989990234
    4. '<|end|>' → logprob: -2.7497920989990234
    5. 'import' → logprob: -3.4997920989990234
    6. 'from' → logprob: -5.124792098999023
    7. '<|end|>' → logprob: -5.124792098999023
    8. '```' → logprob: -5.624792098999023
    9. ',

' → logprob: -5.999792098999023
    10. ' 

' → logprob: -6.124792098999023

Token 29: ' ROUND' (ID: 168858)
  Prédit: ' get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.3667903542518616
    2. 'get' → logprob: -1.3667902946472168
    3. 'ROUND' → logprob: -4.241790294647217
    4. ' ROUND' → logprob: -4.366790294647217
    5. ' local' → logprob: -4.991790294647217
    6. '```' → logprob: -5.616790294647217
    7. 'Fraction' → logprob: -5.866790294647217
    8. ' Division' → logprob: -6.116790294647217
    9. 'Context' → logprob: -6.241790294647217
    10. ' Decimal' → logprob: -6.366790294647217

Token 30: '_C' (ID: 1720)
  Prédit: '_HALF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_HALF' → logprob: -0.008119829930365086
    2. '_DOWN' → logprob: -4.883120059967041
    3. '_C' → logprob: -8.008119583129883
    4. '_UP' → logprob: -9.633119583129883
    5. '_F' → logprob: -9.633119583129883
    6. 'DOWN' → logprob: -10.508119583129883
    7. 'Half' → logprob: -12.258119583129883
    8. 'F' → logprob: -12.508119583129883
    9. 'HAL' → logprob: -12.633119583129883
    10. 'ING' → logprob: -12.633119583129883

Token 31: 'E' (ID: 36)
  Prédit: 'E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.00012833021173719317
    2. 'EL' → logprob: -9.875128746032715
    3. 'EP' → logprob: -10.375128746032715
    4. 'EAN' → logprob: -11.125128746032715
    5. 'EPT' → logprob: -11.375128746032715
    6. 'HAL' → logprob: -12.500128746032715
    7. '_HALF' → logprob: -13.000128746032715
    8. 'ORN' → logprob: -13.125128746032715
    9. 'EAR' → logprob: -13.125128746032715
    10. 'Е' → logprob: -13.500128746032715

Token 32: 'ILING' (ID: 63201)
  Prédit: 'IL'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IL' → logprob: -0.00021772195759695023
    2. 'ILING' → logprob: -8.50021743774414
    3. 'L' → logprob: -11.50021743774414
    4. 'LING' → logprob: -13.12521743774414
    5. 'I' → logprob: -13.25021743774414
    6. '1' → logprob: -16.75021743774414
    7. 'ILED' → logprob: -17.25021743774414
    8. 'ILE' → logprob: -17.62521743774414
    9. 'Il' → logprob: -17.62521743774414
    10. 'İ' → logprob: -18.12521743774414

Token 33: ',' (ID: 11)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.12366433441638947
    2. '
' → logprob: -2.248664379119873
    3. 'class' → logprob: -5.373664379119873
    4. '
' → logprob: -6.748664379119873
    5. '


' → logprob: -6.748664379119873
    6. 'def' → logprob: -7.123664379119873
    7. 'import' → logprob: -7.123664379119873
    8. '' → logprob: -7.873664379119873
    9. '



' → logprob: -7.998664379119873
    10. '#' → logprob: -8.498663902282715

Token 34: ' ROUND' (ID: 168858)
  Prédit: 'ROUND'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ROUND' → logprob: -0.07443386316299438
    2. ' ROUND' → logprob: -2.6994338035583496
    3. 'get' → logprob: -6.32443380355835
    4. ' get' → logprob: -6.57443380355835
    5. 'Decimal' → logprob: -7.69943380355835
    6. ' local' → logprob: -8.449434280395508
    7. 'local' → logprob: -9.199434280395508
    8. 'Local' → logprob: -9.199434280395508
    9. ' Decimal' → logprob: -9.449434280395508
    10. ' ' → logprob: -9.824434280395508

Token 35: '_HALF' (ID: 175765)
  Prédit: '_DOWN'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_DOWN' → logprob: -0.13448591530323029
    2. '_HALF' → logprob: -2.509485960006714
    3. '_F' → logprob: -3.259485960006714
    4. '_UP' → logprob: -5.634485721588135
    5. 'DOWN' → logprob: -6.509485721588135
    6. 'F' → logprob: -7.009485721588135
    7. '_' → logprob: -9.759486198425293
    8. 'ING' → logprob: -9.759486198425293
    9. '_C' → logprob: -12.009486198425293
    10. '	F' → logprob: -12.009486198425293

Token 36: '_UP' (ID: 29902)
  Prédit: '_UP'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_UP' → logprob: -0.04209313541650772
    2. 'UP' → logprob: -3.54209303855896
    3. '_E' → logprob: -4.667093276977539
    4. 'EV' → logprob: -6.292093276977539
    5. '_DOWN' → logprob: -7.042093276977539
    6. 'DOWN' → logprob: -9.042093276977539
    7. 'Even' → logprob: -11.917093276977539
    8. ' UP' → logprob: -12.167093276977539
    9. 'E' → logprob: -12.792093276977539
    10. '_A' → logprob: -13.167093276977539

Token 37: '
' (ID: 198)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.3571508526802063
    2. '
' → logprob: -1.6071507930755615
    3. 'from' → logprob: -3.3571507930755615
    4. 'import' → logprob: -3.4821507930755615
    5. 'class' → logprob: -4.232151031494141
    6. ',' → logprob: -4.857151031494141
    7. '```' → logprob: -5.982151031494141
    8. 'def' → logprob: -6.607151031494141
    9. '
' → logprob: -6.607151031494141
    10. '\n' → logprob: -6.982151031494141

Token 38: 'from' (ID: 2845)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.911958634853363
    2. 'def' → logprob: -1.5369586944580078
    3. 'import' → logprob: -2.036958694458008
    4. 'from' → logprob: -2.286958694458008
    5. '

' → logprob: -3.161958694458008
    6. '#' → logprob: -3.286958694458008
    7. '
' → logprob: -3.286958694458008
    8. '\' → logprob: -4.661958694458008
    9. '\n' → logprob: -4.661958694458008
    10. '```' → logprob: -5.661958694458008

Token 39: ' functools' (ID: 142636)
  Prédit: ' fractions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fractions' → logprob: -0.3308843672275543
    2. 'fra' → logprob: -1.455884337425232
    3. ' functools' → logprob: -3.3308844566345215
    4. ' itertools' → logprob: -4.9558844566345215
    5. ' typing' → logprob: -5.7058844566345215
    6. ' statistics' → logprob: -7.9558844566345215
    7. 'datetime' → logprob: -8.330883979797363
    8. ' operator' → logprob: -8.580883979797363
    9. ' threading' → logprob: -8.580883979797363
    10. ' datetime' → logprob: -8.580883979797363

Token 40: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.14373092353343964
    2. 'import' → logprob: -2.018730878829956
    3. '_import' → logprob: -7.643731117248535
    4. ' ' → logprob: -8.143731117248535
    5. '<|end|>' → logprob: -8.643731117248535
    6. '_' → logprob: -9.768731117248535
    7. '	import' → logprob: -10.643731117248535
    8. '<|end|>' → logprob: -11.643731117248535
    9. ' _' → logprob: -13.268731117248535
    10. '_IMPORT' → logprob: -13.268731117248535

Token 41: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.052220363169908524
    2. 'l' → logprob: -3.177220344543457
    3. ' wraps' → logprob: -6.302220344543457
    4. ' reduce' → logprob: -6.427220344543457
    5. 'reduce' → logprob: -6.427220344543457
    6. ' partial' → logprob: -6.552220344543457
    7. ' cmp' → logprob: -6.927220344543457
    8. 'cmp' → logprob: -7.052220344543457
    9. 'partial' → logprob: -7.677220344543457
    10. 'wrap' → logprob: -8.427220344543457

Token 42: 'ru' (ID: 1942)
  Prédit: 'ru'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ru' → logprob: -2.4153549020411447e-05
    2. 'r' → logprob: -10.87502384185791
    3. 'ruz' → logprob: -13.37502384185791
    4. 'u' → logprob: -14.00002384185791
    5. 'RU' → logprob: -14.50002384185791
    6. 'a' → logprob: -14.50002384185791
    7. 'z' → logprob: -14.87502384185791
    8. 'fu' → logprob: -15.00002384185791
    9. '_ru' → logprob: -15.00002384185791
    10. '```' → logprob: -16.125024795532227

Token 43: '_cache' (ID: 27045)
  Prédit: '_cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: -0.051014404743909836
    2. 'cache' → logprob: -3.5510144233703613
    3. 'c' → logprob: -4.176014423370361
    4. '_c' → logprob: -5.301014423370361
    5. '```' → logprob: -8.926013946533203
    6. '_' → logprob: -9.051013946533203
    7. 'ru' → logprob: -9.551013946533203
    8. 'e' → logprob: -9.926013946533203
    9. 'u' → logprob: -9.926013946533203
    10. '_cached' → logprob: -10.176013946533203

Token 44: ',' (ID: 11)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.7170267105102539
    2. 'from' → logprob: -1.217026710510254
    3. '
' → logprob: -2.092026710510254
    4. ',' → logprob: -3.592026710510254
    5. '<|end|>' → logprob: -3.967026710510254
    6. '\n' → logprob: -4.092026710510254
    7. '

' → logprob: -4.217026710510254
    8. 'def' → logprob: -5.342026710510254
    9. '' → logprob: -6.592026710510254
    10. ',
' → logprob: -6.717026710510254

Token 45: ' reduce' (ID: 10389)
  Prédit: ' wraps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' wraps' → logprob: -0.5853834748268127
    2. 'reduce' → logprob: -2.210383415222168
    3. ' reduce' → logprob: -2.335383415222168
    4. 'wrap' → logprob: -2.460383415222168
    5. ' partial' → logprob: -2.460383415222168
    6. 'partial' → logprob: -2.835383415222168
    7. ' cmp' → logprob: -6.085383415222168
    8. 'cmp' → logprob: -6.210383415222168
    9. ' total' → logprob: -6.710383415222168
    10. 'total' → logprob: -7.335383415222168

Token 46: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6106787919998169
    2. 'from' → logprob: -1.235678791999817
    3. 'import' → logprob: -2.3606786727905273
    4. ',' → logprob: -3.7356786727905273
    5. '

' → logprob: -3.9856786727905273
    6. '<|end|>' → logprob: -4.985678672790527
    7. ',
' → logprob: -5.110678672790527
    8. ' 
' → logprob: -5.610678672790527
    9. '\n' → logprob: -5.985678672790527
    10. '' → logprob: -6.360678672790527

Token 47: 'from' (ID: 2845)
  Prédit: 'from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.6062355637550354
    2. '
' → logprob: -1.6062355041503906
    3. 'import' → logprob: -1.8562355041503906
    4. '

' → logprob: -3.1062355041503906
    5. 'def' → logprob: -4.106235504150391
    6. ',' → logprob: -4.356235504150391
    7. '\n' → logprob: -5.231235504150391
    8. ',
' → logprob: -5.856235504150391
    9. 'class' → logprob: -6.106235504150391
    10. ' 

' → logprob: -6.356235504150391

Token 48: ' itertools' (ID: 103178)
  Prédit: ' itertools'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.6796182990074158
    2. ' operator' → logprob: -0.8046182990074158
    3. 'operator' → logprob: -3.1796183586120605
    4. ' typing' → logprob: -6.5546183586120605
    5. ' math' → logprob: -7.0546183586120605
    6. ' ' → logprob: -7.3046183586120605
    7. 'it' → logprob: -7.9296183586120605
    8. '_operator' → logprob: -8.679617881774902
    9. ' io' → logprob: -8.804617881774902
    10. 'math' → logprob: -8.929617881774902

Token 49: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.09083501249551773
    2. 'import' → logprob: -2.4658350944519043
    3. '.' → logprob: -6.590835094451904
    4. ' ' → logprob: -7.840835094451904
    5. ' .' → logprob: -9.340834617614746
    6. '.import' → logprob: -11.215834617614746
    7. '	import' → logprob: -11.465834617614746
    8. '.im' → logprob: -12.590834617614746
    9. '_import' → logprob: -12.840834617614746
    10. ' im' → logprob: -13.215834617614746

Token 50: ' combinations' (ID: 43835)
  Prédit: ' accumulate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' accumulate' → logprob: -0.17343445122241974
    2. ' combinations' → logprob: -3.1734344959259033
    3. ' group' → logprob: -3.4234344959259033
    4. ' chain' → logprob: -3.6734344959259033
    5. ' permutations' → logprob: -3.6734344959259033
    6. ' product' → logprob: -3.7984344959259033
    7. 'com' → logprob: -5.423434257507324
    8. ' ' → logprob: -5.923434257507324
    9. 'acc' → logprob: -6.423434257507324
    10. ' cycle' → logprob: -6.423434257507324

Token 51: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012605957686901093
    2. ',
' → logprob: -4.887606143951416
    3. 'from' → logprob: -5.762606143951416
    4. 'import' → logprob: -6.637606143951416
    5. '<|end|>' → logprob: -8.137605667114258
    6. ' ,' → logprob: -9.387605667114258
    7. ',

' → logprob: -10.512605667114258
    8. '\n' → logprob: -11.012605667114258
    9. ' from' → logprob: -11.137605667114258
    10. ',\
' → logprob: -11.512605667114258

Token 52: ' combinations' (ID: 43835)
  Prédit: 'per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.7252910137176514
    2. ' permutations' → logprob: -1.1002910137176514
    3. 'com' → logprob: -2.7252910137176514
    4. 'product' → logprob: -2.9752910137176514
    5. 'group' → logprob: -3.6002910137176514
    6. 'count' → logprob: -4.7252912521362305
    7. ' product' → logprob: -4.9752912521362305
    8. 'cycle' → logprob: -4.9752912521362305
    9. 'chain' → logprob: -5.6002912521362305
    10. ' group' → logprob: -5.6002912521362305

Token 53: '_with' (ID: 14161)
  Prédit: '_with'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_with' → logprob: -0.006230940576642752
    2. 'with' → logprob: -5.13123083114624
    3. 'With' → logprob: -8.256231307983398
    4. '_without' → logprob: -11.006231307983398
    5. 'import' → logprob: -11.881231307983398
    6. '_WITH' → logprob: -12.256231307983398
    7. '-with' → logprob: -13.131231307983398
    8. '_per' → logprob: -13.506231307983398
    9. '_' → logprob: -13.631231307983398
    10. 'wise' → logprob: -13.881231307983398

Token 54: '_re' (ID: 3067)
  Prédit: 'replacement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'replacement' → logprob: -0.008475573733448982
    2. ' replacement' → logprob: -5.2584757804870605
    3. '_re' → logprob: -5.7584757804870605
    4. 're' → logprob: -10.008475303649902
    5. 'replace' → logprob: -11.133475303649902
    6. ' Replacement' → logprob: -12.133475303649902
    7. 'rep' → logprob: -12.258475303649902
    8. 'Replacement' → logprob: -12.383475303649902
    9. ' replacements' → logprob: -12.508475303649902
    10. 'r' → logprob: -13.633475303649902

Token 55: 'placement' (ID: 17947)
  Prédit: 'placement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'placement' → logprob: -0.004098823759704828
    2. 'place' → logprob: -6.254098892211914
    3. 'peat' → logprob: -6.504098892211914
    4. 'placements' → logprob: -8.004098892211914
    5. 'p' → logprob: -9.254098892211914
    6. 'plac' → logprob: -9.379098892211914
    7. 'pl' → logprob: -9.379098892211914
    8. 'pe' → logprob: -10.754098892211914
    9. 'm' → logprob: -11.129098892211914
    10. '...' → logprob: -12.379098892211914

Token 56: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01620856299996376
    2. ',
' → logprob: -4.266208648681641
    3. 'from' → logprob: -7.141208648681641
    4. 'import' → logprob: -7.266208648681641
    5. ' ,' → logprob: -8.39120864868164
    6. '<|end|>' → logprob: -8.64120864868164
    7. ',\
' → logprob: -10.89120864868164
    8. ',n' → logprob: -11.14120864868164
    9. ' from' → logprob: -11.14120864868164
    10. '
' → logprob: -11.26620864868164

Token 57: ' product' (ID: 1888)
  Prédit: 'product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'product' → logprob: -1.3241603374481201
    2. ' permutations' → logprob: -1.4491603374481201
    3. 'per' → logprob: -1.8241603374481201
    4. 'cycle' → logprob: -2.44916033744812
    5. 'count' → logprob: -2.57416033744812
    6. 'group' → logprob: -2.69916033744812
    7. ' product' → logprob: -3.19916033744812
    8. 'chain' → logprob: -3.94916033744812
    9. ' group' → logprob: -4.324160575866699
    10. ' cycle' → logprob: -4.574160575866699

Token 58: '


' (ID: 2499)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0180191770195961
    2. ',
' → logprob: -4.518019199371338
    3. '<|end|>' → logprob: -5.768019199371338
    4. '
' → logprob: -6.518019199371338
    5. 'import' → logprob: -7.143019199371338
    6. 'from' → logprob: -7.143019199371338
    7. '\n' → logprob: -8.14301872253418
    8. ' ,' → logprob: -9.26801872253418
    9. '<|end|>' → logprob: -10.01801872253418
    10. ',n' → logprob: -10.14301872253418

Token 59: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.14896222949028015
    2. 'from' → logprob: -3.1489622592926025
    3. 'import' → logprob: -3.5239622592926025
    4. 'class' → logprob: -3.7739622592926025
    5. 'd' → logprob: -4.523962020874023
    6. '#' → logprob: -5.148962020874023
    7. '\' → logprob: -5.398962020874023
    8. '
' → logprob: -5.523962020874023
    9. ',' → logprob: -5.648962020874023
    10. '_' → logprob: -5.898962020874023

Token 60: ' read' (ID: 1729)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.25379884243011475
    2. '_' → logprob: -1.7537988424301147
    3. ' main' → logprob: -3.6287989616394043
    4. ' _' → logprob: -4.003798961639404
    5. ' solve' → logprob: -6.503798961639404
    6. ' space' → logprob: -7.253798961639404
    7. ' my' → logprob: -7.878798961639404
    8. ' a' → logprob: -8.378798484802246
    9. '_main' → logprob: -8.503798484802246
    10. '_factor' → logprob: -8.503798484802246

Token 61: '_single' (ID: 46053)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7995114326477051
    2. '_line' → logprob: -1.049511432647705
    3. '(' → logprob: -1.924511432647705
    4. '()' → logprob: -3.549511432647705
    5. '_input' → logprob: -4.299511432647705
    6. '():' → logprob: -5.049511432647705
    7. '_token' → logprob: -6.424511432647705
    8. 'line' → logprob: -7.049511432647705
    9. '_lines' → logprob: -7.924511432647705
    10. '_user' → logprob: -8.174510955810547

Token 62: '_integer' (ID: 82911)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.013968738727271557
    2. '_word' → logprob: -5.0139689445495605
    3. '_int' → logprob: -5.5139689445495605
    4. 'line' → logprob: -6.6389689445495605
    5. '_token' → logprob: -7.5139689445495605
    6. 'ton' → logprob: -7.6389689445495605
    7. '_integer' → logprob: -8.013968467712402
    8. 'int' → logprob: -8.513968467712402
    9. '_item' → logprob: -9.638968467712402
    10. '_' → logprob: -9.763968467712402

Token 63: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.09069207310676575
    2. '(' → logprob: -2.5906920433044434
    3. '()' → logprob: -4.465692043304443
    4. ' ():' → logprob: -9.465692520141602
    5. '():
' → logprob: -9.840692520141602
    6. ' ()' → logprob: -11.090692520141602
    7. '(prompt' → logprob: -11.340692520141602
    8. '(
' → logprob: -12.340692520141602
    9. '(()' → logprob: -12.340692520141602
    10. ' (' → logprob: -12.340692520141602

Token 64: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0165670495480299
    2. ':' → logprob: -5.141567230224609
    3. '():
' → logprob: -5.141567230224609
    4. '()' → logprob: -6.266567230224609
    5. '(' → logprob: -6.641567230224609
    6. ':
' → logprob: -7.516567230224609
    7. '   ' → logprob: -7.891567230224609
    8. ' ():' → logprob: -7.891567230224609
    9. ':return' → logprob: -9.76656723022461
    10. '(
' → logprob: -9.89156723022461

Token 65: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5662945508956909
    2. ' return' → logprob: -1.191294550895691
    3. '   ' → logprob: -2.0662946701049805
    4. 'n' → logprob: -7.0662946701049805
    5. 'int' → logprob: -8.06629467010498
    6. 'input' → logprob: -8.44129467010498
    7. ' n' → logprob: -9.31629467010498
    8. 's' → logprob: -9.44129467010498
    9. '    
' → logprob: -9.81629467010498
    10. 'line' → logprob: -10.06629467010498

Token 66: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.00046975704026408494
    2. 'int' → logprob: -7.87546968460083
    3. ' ' → logprob: -9.500470161437988
    4. ' in' → logprob: -11.750470161437988
    5. '(int' → logprob: -12.750470161437988
    6. ' map' → logprob: -13.625470161437988
    7. ' ' → logprob: -13.875470161437988
    8. ' i' → logprob: -14.875470161437988
    9. '	int' → logprob: -15.250470161437988
    10. '   ' → logprob: -15.375470161437988

Token 67: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03163117170333862
    2. '(input' → logprob: -3.5316312313079834
    3. '(sys' → logprob: -6.281630992889404
    4. '(
' → logprob: -12.156631469726562
    5. 'input' → logprob: -13.656631469726562
    6. '(

' → logprob: -14.656631469726562
    7. ' (' → logprob: -15.031631469726562
    8. '(open' → logprob: -15.156631469726562
    9. '(stdin' → logprob: -15.156631469726562
    10. '(in' → logprob: -15.531631469726562

Token 68: '())


' (ID: 131583)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.00868749525398016
    2. '()' → logprob: -4.758687496185303
    3. '().' → logprob: -10.258687019348145
    4. '(' → logprob: -10.883687019348145
    5. '()))' → logprob: -11.758687019348145
    6. ' ())' → logprob: -12.258687019348145
    7. '())
' → logprob: -13.258687019348145
    8. '(()' → logprob: -13.758687019348145
    9. '()]' → logprob: -14.008687019348145
    10. '();)' → logprob: -14.258687019348145

Token 69: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.28723084926605225
    2. '

' → logprob: -1.7872308492660522
    3. '
' → logprob: -2.537230968475342
    4. '\n' → logprob: -7.412230968475342
    5. ' def' → logprob: -7.537230968475342
    6. '_' → logprob: -8.037230491638184
    7. '```' → logprob: -8.162230491638184
    8. '


' → logprob: -8.412230491638184
    9. '()

' → logprob: -8.537230491638184
    10. '()' → logprob: -8.662230491638184

Token 70: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.20154732465744019
    2. 'read' → logprob: -1.701547384262085
    3. ' main' → logprob: -9.576547622680664
    4. '_read' → logprob: -10.951547622680664
    5. 'main' → logprob: -11.201547622680664
    6. '	read' → logprob: -11.451547622680664
    7. '_' → logprob: -12.576547622680664
    8. ' readline' → logprob: -12.826547622680664
    9. ' write' → logprob: -13.201547622680664
    10. 'r' → logprob: -13.201547622680664

Token 71: '_multiple' (ID: 111487)
  Prédit: '_single'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_single' → logprob: -0.01269175298511982
    2. '_line' → logprob: -5.262691974639893
    3. '_' → logprob: -5.387691974639893
    4. '_list' → logprob: -6.762691974639893
    5. '()' → logprob: -7.762691974639893
    6. '_multiple' → logprob: -7.762691974639893
    7. '_integer' → logprob: -8.137691497802734
    8. '_array' → logprob: -8.762691497802734
    9. '_int' → logprob: -9.637691497802734
    10. '_tuple' → logprob: -10.137691497802734

Token 72: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -0.0016192420152947307
    2. '_integer' → logprob: -6.876619338989258
    3. '_numbers' → logprob: -8.376619338989258
    4. '_' → logprob: -8.501619338989258
    5. '_tokens' → logprob: -10.126619338989258
    6. '_values' → logprob: -10.876619338989258
    7. '_parent' → logprob: -11.376619338989258
    8. 's' → logprob: -11.501619338989258
    9. '_arguments' → logprob: -11.751619338989258
    10. '_parameters' → logprob: -12.126619338989258

Token 73: 'te' (ID: 411)
  Prédit: 'te'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'te' → logprob: -0.0030671951826661825
    2. 'teger' → logprob: -5.8780670166015625
    3. 't' → logprob: -8.378067016601562
    4. 'teg' → logprob: -11.003067016601562
    5. 'put' → logprob: -11.753067016601562
    6. 'TEGER' → logprob: -12.503067016601562
    7. '_te' → logprob: -13.753067016601562
    8. 'tegr' → logprob: -14.253067016601562
    9. 'ts' → logprob: -14.378067016601562
    10. 'e' → logprob: -14.628067016601562

Token 74: 'gers' (ID: 13027)
  Prédit: 'gers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gers' → logprob: -0.0009221808286383748
    2. 'ger' → logprob: -7.000922203063965
    3. 'g' → logprob: -11.500922203063965
    4. 'gr' → logprob: -15.125922203063965
    5. '```' → logprob: -17.00092124938965
    6. 't' → logprob: -17.00092124938965
    7. 'get' → logprob: -17.37592124938965
    8. 'gars' → logprob: -17.50092124938965
    9. '_' → logprob: -17.62592124938965
    10. 'ers' → logprob: -18.50092124938965

Token 75: '():
' (ID: 8595)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3907397985458374
    2. '():' → logprob: -1.6407397985458374
    3. '(' → logprob: -2.515739917755127
    4. '().' → logprob: -3.140739917755127
    5. '():
' → logprob: -6.515739917755127
    6. '()[' → logprob: -6.515739917755127
    7. ' ()' → logprob: -7.765739917755127
    8. '())' → logprob: -8.265739440917969
    9. '()>' → logprob: -8.640739440917969
    10. '()">' → logprob: -8.890739440917969

Token 76: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.043056510388851166
    2. '():
' → logprob: -3.1680564880371094
    3. '()' → logprob: -10.41805648803711
    4. '(' → logprob: -11.29305648803711
    5. ' ():' → logprob: -12.16805648803711
    6. ':' → logprob: -12.79305648803711
    7. '():

' → logprob: -12.79305648803711
    8. '):' → logprob: -13.29305648803711
    9. '():
' → logprob: -14.16805648803711
    10. 's' → logprob: -15.29305648803711

Token 77: ' return' (ID: 622)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.7341486215591431
    2. ' list' → logprob: -0.9841486215591431
    3. 'map' → logprob: -2.8591485023498535
    4. ' map' → logprob: -2.9841485023498535
    5. 'return' (adapté à ' return') → logprob: -4.2341485023498535
    6. '():' → logprob: -4.3591485023498535
    7. ' return' → logprob: -5.3591485023498535
    8. '():
' → logprob: -6.6091485023498535
    9. '   ' → logprob: -6.7341485023498535
    10. ':list' → logprob: -6.8591485023498535

Token 78: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.10114531219005585
    2. 'list' → logprob: -2.3511452674865723
    3. ' map' → logprob: -7.726145267486572
    4. '[list' → logprob: -8.72614574432373
    5. 'map' → logprob: -8.85114574432373
    6. '[' → logprob: -8.97614574432373
    7. ' [' → logprob: -10.10114574432373
    8. ' ' → logprob: -11.22614574432373
    9. '	list' → logprob: -12.60114574432373
    10. '(list' → logprob: -13.60114574432373

Token 79: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -9.639096970204264e-05
    2. '(' → logprob: -9.250096321105957
    3. '(int' → logprob: -15.625096321105957
    4. '	map' → logprob: -17.625097274780273
    5. ' map' → logprob: -17.750097274780273
    6. '(eval' → logprob: -18.000097274780273
    7. 'map' → logprob: -18.500097274780273
    8. '(input' → logprob: -18.750097274780273
    9. '(m' → logprob: -18.875097274780273
    10. ',map' → logprob: -19.500097274780273

Token 80: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0036267966497689486
    2. '(' → logprob: -5.628626823425293
    3. 'int' → logprob: -11.628626823425293
    4. '(
' → logprob: -11.878626823425293
    5. '<int' → logprob: -12.628626823425293
    6. ',int' → logprob: -13.128626823425293
    7. ')' → logprob: -13.628626823425293
    8. '=int' → logprob: -13.753626823425293
    9. '(input' → logprob: -13.878626823425293
    10. '[int' → logprob: -14.253626823425293

Token 81: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5769621729850769
    2. ',input' → logprob: -0.8269621729850769
    3. '(input' → logprob: -7.076961994171143
    4. 'input' → logprob: -8.9519624710083
    5. ' ,' → logprob: -10.2019624710083
    6. '(' → logprob: -11.9519624710083
    7. ' input' → logprob: -13.7019624710083
    8. '<input' → logprob: -14.4519624710083
    9. '，' → logprob: -14.5769624710083
    10. '	input' → logprob: -14.7019624710083

Token 82: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.31327173113822937
    2. ' input' → logprob: -1.3132717609405518
    3. '(input' → logprob: -12.188271522521973
    4. ',input' → logprob: -13.438271522521973
    5. '	input' → logprob: -13.938271522521973
    6. 'sys' → logprob: -14.188271522521973
    7. ' sys' → logprob: -14.313271522521973
    8. '=input' → logprob: -14.813271522521973
    9. ' ' → logprob: -14.938271522521973
    10. ')' → logprob: -15.688271522521973

Token 83: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.7385154428193346e-05
    2. '()' → logprob: -10.25003719329834
    3. '.split' → logprob: -14.37503719329834
    4. ')' → logprob: -14.75003719329834
    5. ' ().' → logprob: -14.75003719329834
    6. '))' → logprob: -15.87503719329834
    7. '(' → logprob: -16.250038146972656
    8. '.' → logprob: -16.250038146972656
    9. 'split' → logprob: -16.500038146972656
    10. '()))' → logprob: -16.500038146972656

Token 84: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.023254794999957085
    2. 'strip' → logprob: -3.773254871368408
    3. 'rstrip' → logprob: -11.64825439453125
    4. ' split' → logprob: -15.39825439453125
    5. 'spl' → logprob: -16.27325439453125
    6. 's' → logprob: -16.39825439453125
    7. ')' → logprob: -16.52325439453125
    8. '(split' → logprob: -16.77325439453125
    9. 'read' → logprob: -17.02325439453125
    10. ' strip' → logprob: -18.02325439453125

Token 85: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.04189664125442505
    2. '()' → logprob: -3.4168965816497803
    3. '))' → logprob: -4.916896820068359
    4. '(' → logprob: -7.791896820068359
    5. '())' → logprob: -7.916896820068359
    6. '()))
' → logprob: -9.16689682006836
    7. '()));' → logprob: -12.79189682006836
    8. ')' → logprob: -13.16689682006836
    9. '())))' → logprob: -13.16689682006836
    10. '()))

' → logprob: -13.54189682006836

Token 86: '


' (ID: 2499)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3468622863292694
    2. '

' → logprob: -1.8468623161315918
    3. 'def' → logprob: -2.096862316131592
    4. '


' → logprob: -5.221862316131592
    5. '#' → logprob: -6.221862316131592
    6. '<|end|>' → logprob: -6.721862316131592
    7. ' def' → logprob: -6.971862316131592
    8. '\' → logprob: -7.346862316131592
    9. '\n' → logprob: -7.471862316131592
    10. '```' → logprob: -7.721862316131592

Token 87: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6162808537483215
    2. 'def' → logprob: -0.8662808537483215
    3. '

' → logprob: -3.3662807941436768
    4. 'd' → logprob: -5.616281032562256
    5. '\' → logprob: -7.241281032562256
    6. '


' → logprob: -8.491280555725098
    7. '
' → logprob: -8.616280555725098
    8. '#' → logprob: -9.116280555725098
    9. '\n' → logprob: -10.241280555725098
    10. '```' → logprob: -10.491280555725098

Token 88: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.023599959909915924
    2. 'read' → logprob: -4.148600101470947
    3. ' main' → logprob: -6.523600101470947
    4. ' binary' → logprob: -6.648600101470947
    5. '_read' → logprob: -6.898600101470947
    6. '_' → logprob: -6.898600101470947
    7. 'binary' → logprob: -7.773600101470947
    8. ' readline' → logprob: -7.898600101470947
    9. ' is' → logprob: -8.273599624633789
    10. ' ' → logprob: -8.523599624633789

Token 89: '_single' (ID: 46053)
  Prédit: '_single'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_single' → logprob: -0.06333673000335693
    2. '_line' → logprob: -3.4383368492126465
    3. '_multiple' → logprob: -4.3133368492126465
    4. '_' → logprob: -4.3133368492126465
    5. '_string' → logprob: -6.3133368492126465
    6. 'line' → logprob: -9.563336372375488
    7. '_a' → logprob: -9.563336372375488
    8. '_list' → logprob: -9.688336372375488
    9. '_str' → logprob: -9.938336372375488
    10. '__' → logprob: -10.313336372375488

Token 90: '_float' (ID: 44505)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.1176438331604004
    2. '_line' → logprob: -1.3676438331604004
    3. '_string' → logprob: -1.4926438331604004
    4. '_integer' → logprob: -1.7426438331604004
    5. '_word' → logprob: -5.8676438331604
    6. '_input' → logprob: -5.9926438331604
    7. '_character' → logprob: -5.9926438331604
    8. '_token' → logprob: -5.9926438331604
    9. '_float' → logprob: -6.8676438331604
    10. '()' → logprob: -6.9926438331604

Token 91: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0014561859425157309
    2. '()' → logprob: -7.126456260681152
    3. '():
' → logprob: -7.376456260681152
    4. '):' → logprob: -12.001456260681152
    5. ' ():' → logprob: -12.126456260681152
    6. '()>' → logprob: -12.751456260681152
    7. '()">' → logprob: -13.126456260681152
    8. '():
' → logprob: -13.251456260681152
    9. '())' → logprob: -13.751456260681152
    10. '():

' → logprob: -13.751456260681152

Token 92: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.10358206182718277
    2. '():
' → logprob: -2.7285821437835693
    3. '()' → logprob: -3.4785821437835693
    4. '):' → logprob: -7.22858190536499
    5. ':' → logprob: -7.85358190536499
    6. '()
' → logprob: -8.228582382202148
    7. '   ' → logprob: -8.478582382202148
    8. '(' → logprob: -8.603582382202148
    9. ' ():' → logprob: -8.978582382202148
    10. ')' → logprob: -9.103582382202148

Token 93: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.024873018264770508
    2. 'float' → logprob: -4.024872779846191
    3. ' return' → logprob: -5.024872779846191
    4. ' float' → logprob: -9.149872779846191
    5. 'eturn' → logprob: -11.149872779846191
    6. 'def' → logprob: -13.149872779846191
    7. '   ' → logprob: -13.524872779846191
    8. 'ret' → logprob: -13.524872779846191
    9. '
' → logprob: -14.024872779846191
    10. ' ' → logprob: -14.649872779846191

Token 94: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.20141898095607758
    2. ' float' → logprob: -1.7014189958572388
    3. '(float' → logprob: -13.32641887664795
    4. 'flo' → logprob: -13.70141887664795
    5. 'f' → logprob: -14.20141887664795
    6. 'loat' → logprob: -14.32641887664795
    7. '=float' → logprob: -14.32641887664795
    8. '	float' → logprob: -14.82641887664795
    9. 'fl' → logprob: -15.45141887664795
    10. ',float' → logprob: -15.95141887664795

Token 95: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.07893077284097672
    2. '(' → logprob: -2.5789308547973633
    3. ' (' → logprob: -10.328930854797363
    4. '(
' → logprob: -12.578930854797363
    5. '()' → logprob: -13.453930854797363
    6. '(in' → logprob: -13.953930854797363
    7. '(

' → logprob: -14.703930854797363
    8. '(inp' → logprob: -14.703930854797363
    9. '(s' → logprob: -15.078930854797363
    10. 'input' → logprob: -15.203930854797363

Token 96: '())


' (ID: 131583)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.002437496790662408
    2. '()))' → logprob: -6.627437591552734
    3. '()' → logprob: -7.127437591552734
    4. ')' → logprob: -8.252437591552734
    5. ' ())' → logprob: -10.627437591552734
    6. '))' → logprob: -11.502437591552734
    7. '())
' → logprob: -11.627437591552734
    8. '(' → logprob: -12.752437591552734
    9. '()
' → logprob: -15.252437591552734
    10. '().' → logprob: -15.252437591552734

Token 97: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.003533201524987817
    2. '
' → logprob: -5.753533363342285
    3. '<|end|>' → logprob: -9.128533363342285
    4. '\' → logprob: -9.503533363342285
    5. '#' → logprob: -9.878533363342285
    6. ' def' → logprob: -10.378533363342285
    7. '

' → logprob: -10.503533363342285
    8. ')' → logprob: -11.503533363342285
    9. '


' → logprob: -11.628533363342285
    10. '\n' → logprob: -11.628533363342285

Token 98: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.012761792168021202
    2. 'read' → logprob: -4.38776159286499
    3. ' write' → logprob: -9.137762069702148
    4. ' ' → logprob: -9.887762069702148
    5. '_' → logprob: -10.637762069702148
    6. '_read' → logprob: -10.637762069702148
    7. 'write' → logprob: -11.262762069702148
    8. '	read' → logprob: -12.387762069702148
    9. ' reads' → logprob: -12.512762069702148
    10. ' _' → logprob: -12.887762069702148

Token 99: '_multiple' (ID: 111487)
  Prédit: '_multiple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_multiple' → logprob: -0.006970516871660948
    2. '_single' → logprob: -5.006970405578613
    3. '_' → logprob: -8.506970405578613
    4. '_multi' → logprob: -11.256970405578613
    5. '_mult' → logprob: -11.381970405578613
    6. '_more' → logprob: -11.506970405578613
    7. '_line' → logprob: -12.506970405578613
    8. '_many' → logprob: -13.006970405578613
    9. '_double' → logprob: -13.006970405578613
    10. '_m' → logprob: -13.506970405578613

Token 100: '_f' (ID: 1337)
  Prédit: '_f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -0.6447771787643433
    2. '_float' → logprob: -0.7697771787643433
    3. '_s' → logprob: -5.394777297973633
    4. '_' → logprob: -6.394777297973633
    5. '_in' → logprob: -6.894777297973633
    6. '_tokens' → logprob: -7.269777297973633
    7. 's' → logprob: -8.019777297973633
    8. '_strings' → logprob: -8.269777297973633
    9. '```' → logprob: -8.394777297973633
    10. '_sn' → logprob: -8.394777297973633

Token 101: 'lo' (ID: 746)
  Prédit: 'lo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lo' → logprob: -0.023470943793654442
    2. 'loat' → logprob: -3.773470878601074
    3. 'loating' → logprob: -8.523470878601074
    4. 'loa' → logprob: -11.773470878601074
    5. '_lo' → logprob: -11.898470878601074
    6. '_in' → logprob: -12.898470878601074
    7. 'inte' → logprob: -13.023470878601074
    8. '```' → logprob: -13.648470878601074
    9. 'l' → logprob: -14.023470878601074
    10. 'loot' → logprob: -14.148470878601074

Token 102: 'ats' (ID: 1838)
  Prédit: 'ats'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ats' → logprob: -0.0012673746095970273
    2. '```' → logprob: -7.876267433166504
    3. 'lo' → logprob: -8.126267433166504
    4. 'at' → logprob: -8.251267433166504
    5. 'atures' → logprob: -9.626267433166504
    6. 'a' → logprob: -10.251267433166504
    7. 'o' → logprob: -10.376267433166504
    8. '   ' → logprob: -10.876267433166504
    9. 'atso' → logprob: -11.001267433166504
    10. '(' → logprob: -11.126267433166504

Token 103: '():
' (ID: 8595)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0003951648832298815
    2. '(' → logprob: -8.250394821166992
    3. ' ()' → logprob: -10.375394821166992
    4. '()>' → logprob: -10.750394821166992
    5. '():' → logprob: -11.000394821166992
    6. '()]' → logprob: -11.625394821166992
    7. '().' → logprob: -11.750394821166992
    8. '()<' → logprob: -11.875394821166992
    9. '()">' → logprob: -12.000394821166992
    10. '())' → logprob: -12.250394821166992

Token 104: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.019371232017874718
    2. '():
' → logprob: -4.269371032714844
    3. '()' → logprob: -5.269371032714844
    4. '):' → logprob: -10.644371032714844
    5. ' ():' → logprob: -11.894371032714844
    6. '(' → logprob: -12.769371032714844
    7. '   ' → logprob: -12.894371032714844
    8. 'return' → logprob: -13.019371032714844
    9. '()
' → logprob: -13.394371032714844
    10. '():
' → logprob: -13.519371032714844

Token 105: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.12990519404411316
    2. ' return' → logprob: -2.1299052238464355
    3. ')' → logprob: -5.8799052238464355
    4. ')
' → logprob: -10.254904747009277
    5. '   ' → logprob: -10.629904747009277
    6. '
' → logprob: -10.629904747009277
    7. ')return' → logprob: -10.754904747009277
    8. '):
' → logprob: -11.129904747009277
    9. ':return' → logprob: -11.254904747009277
    10. 'list' → logprob: -11.379904747009277

Token 106: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.1002107709646225
    2. ' list' → logprob: -2.350210666656494
    3. 'map' → logprob: -13.600211143493652
    4. '[' → logprob: -13.975211143493652
    5. 'float' → logprob: -13.975211143493652
    6. '[list' → logprob: -14.725211143493652
    7. '	list' → logprob: -15.975211143493652
    8. '(list' → logprob: -15.975211143493652
    9. ' [' → logprob: -16.350210189819336
    10. 'li' → logprob: -16.600210189819336

Token 107: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.4757479727268219
    2. '(' → logprob: -0.9757479429244995
    3. '(float' → logprob: -6.475748062133789
    4. '(
' → logprob: -9.850748062133789
    5. '(m' → logprob: -10.600748062133789
    6. '(

' → logprob: -10.975748062133789
    7. ' (' → logprob: -11.475748062133789
    8. '(f' → logprob: -12.100748062133789
    9. '(math' → logprob: -12.600748062133789
    10. '(input' → logprob: -13.350748062133789

Token 108: '(float' (ID: 17830)
  Prédit: '(float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(float' → logprob: -0.011074943467974663
    2. '(' → logprob: -4.511075019836426
    3. 'float' → logprob: -11.511075019836426
    4. '(lambda' → logprob: -11.886075019836426
    5. '<float' → logprob: -12.761075019836426
    6. '(
' → logprob: -12.886075019836426
    7. '(f' → logprob: -13.386075019836426
    8. '(str' → logprob: -14.011075019836426
    9. ',float' → logprob: -14.511075019836426
    10. ' float' → logprob: -14.761075019836426

Token 109: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002448893792461604
    2. ',input' → logprob: -8.375245094299316
    3. ' ,' → logprob: -12.000245094299316
    4. '(input' → logprob: -12.250245094299316
    5. '(' → logprob: -13.000245094299316
    6. 'input' → logprob: -14.125245094299316
    7. '(),' → logprob: -15.500245094299316
    8. ' (' → logprob: -17.125244140625
    9. '),' → logprob: -17.250244140625
    10. '`,' → logprob: -17.375244140625

Token 110: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.06198493763804436
    2. ' input' → logprob: -2.8119850158691406
    3. '(input' → logprob: -11.06198501586914
    4. ')' → logprob: -14.56198501586914
    5. ',input' → logprob: -15.18698501586914
    6. ' ' → logprob: -15.31198501586914
    7. '=input' → logprob: -15.43698501586914
    8. '	input' → logprob: -16.06198501586914
    9. '<input' → logprob: -16.18698501586914
    10. '
' → logprob: -17.06198501586914

Token 111: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0001769616355886683
    2. '()' → logprob: -9.375177383422852
    3. '.' → logprob: -9.500177383422852
    4. ' ().' → logprob: -11.250177383422852
    5. '(' → logprob: -13.375177383422852
    6. ' .' → logprob: -14.000177383422852
    7. '()
' → logprob: -14.125177383422852
    8. '
' → logprob: -15.500177383422852
    9. '   ' → logprob: -15.500177383422852
    10. ' ' → logprob: -15.625177383422852

Token 112: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.9981420336989686e-05
    2. 'strip' → logprob: -11.000020027160645
    3. ' split' → logprob: -13.375020027160645
    4. ')' → logprob: -14.250020027160645
    5. '(split' → logprob: -14.500020027160645
    6. 'rstrip' → logprob: -15.750020027160645
    7. 'spl' → logprob: -15.875020027160645
    8. '.split' → logprob: -16.000019073486328
    9. 'read' → logprob: -16.125019073486328
    10. 'plit' → logprob: -17.250019073486328

Token 113: '()))' (ID: 16829)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.6950638294219971
    2. '()))' → logprob: -0.6950638294219971
    3. '()' → logprob: -6.445063591003418
    4. '()))
' → logprob: -8.695063591003418
    5. '())' → logprob: -9.320063591003418
    6. ')' → logprob: -10.695063591003418
    7. '))
' → logprob: -11.070063591003418
    8. '(' → logprob: -11.320063591003418
    9. ' ))' → logprob: -11.320063591003418
    10. '()))

' → logprob: -13.195063591003418

Token 114: '


' (ID: 2499)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.515985369682312
    2. '
' → logprob: -1.015985369682312
    3. 'def' → logprob: -3.6409854888916016
    4. '


' → logprob: -4.265985488891602
    5. '<|end|>' → logprob: -7.765985488891602
    6. '
' → logprob: -8.890985488891602
    7. '```' → logprob: -10.015985488891602
    8. '\' → logprob: -10.015985488891602
    9. '#' → logprob: -10.640985488891602
    10. '\n' → logprob: -10.890985488891602

Token 115: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0009307525469921529
    2. 'class' → logprob: -7.0009307861328125
    3. '
' → logprob: -11.375930786132812
    4. '

' → logprob: -13.000930786132812
    5. '#' → logprob: -13.500930786132812
    6. '\' → logprob: -13.750930786132812
    7. 'from' → logprob: -14.125930786132812
    8. '@dat' → logprob: -14.125930786132812
    9. 'de' → logprob: -15.000930786132812
    10. 'data' → logprob: -15.375930786132812

Token 116: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.5899655818939209
    2. ' main' → logprob: -1.089965581893921
    3. ' solve' → logprob: -3.589965581893921
    4. 'read' → logprob: -3.964965581893921
    5. ' is' → logprob: -4.9649658203125
    6. ' gcd' → logprob: -5.0899658203125
    7. ' binary' → logprob: -5.2149658203125
    8. ' calculate' → logprob: -5.3399658203125
    9. ' find' → logprob: -5.4649658203125
    10. ' count' → logprob: -5.4649658203125

Token 117: '_single' (ID: 46053)
  Prédit: '_single'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_single' → logprob: -0.034818634390830994
    2. '_multiple' → logprob: -3.534818649291992
    3. '_line' → logprob: -5.534818649291992
    4. '_' → logprob: -7.159818649291992
    5. '_string' → logprob: -8.534818649291992
    6. '_input' → logprob: -10.784818649291992
    7. '_more' → logprob: -11.284818649291992
    8. '_double' → logprob: -11.409818649291992
    9. '_integer' → logprob: -11.534818649291992
    10. '__' → logprob: -11.784818649291992

Token 118: '_string' (ID: 8609)
  Prédit: '_string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -0.06473050266504288
    2. '_line' → logprob: -2.814730405807495
    3. '_word' → logprob: -7.189730644226074
    4. '_' → logprob: -7.689730644226074
    5. '_float' → logprob: -7.689730644226074
    6. '_integer' → logprob: -8.189730644226074
    7. '_character' → logprob: -8.689730644226074
    8. '_token' → logprob: -8.689730644226074
    9. '_text' → logprob: -9.439730644226074
    10. '_str' → logprob: -9.564730644226074

Token 119: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0001398929744027555
    2. '():
' → logprob: -9.375140190124512
    3. '()' → logprob: -10.125140190124512
    4. ' ():' → logprob: -11.125140190124512
    5. '():
' → logprob: -15.625140190124512
    6. ':' → logprob: -17.375139236450195
    7. '():

' → logprob: -17.625139236450195
    8. '()>' → logprob: -18.125139236450195
    9. '(' → logprob: -18.125139236450195
    10. '):' → logprob: -18.375139236450195

Token 120: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47730913758277893
    2. '()' → logprob: -1.2273091077804565
    3. '():' → logprob: -3.102309226989746
    4. '():
' → logprob: -3.977309226989746
    5. 'return' → logprob: -4.477309226989746
    6. ' return' → logprob: -4.727309226989746
    7. '()
' → logprob: -7.227309226989746
    8. '(' → logprob: -7.727309226989746
    9. ':return' → logprob: -8.102309226989746
    10. ':' → logprob: -8.227309226989746

Token 121: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.023258056491613388
    2. ' return' → logprob: -3.7732579708099365
    3. '   ' → logprob: -11.398258209228516
    4. 'input' → logprob: -13.648258209228516
    5. '	return' → logprob: -15.273258209228516
    6. '
' → logprob: -17.523258209228516
    7. ' ' → logprob: -18.398258209228516
    8. ' input' → logprob: -18.398258209228516
    9. 'eturn' → logprob: -18.648258209228516
    10. 'ret' → logprob: -19.023258209228516

Token 122: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.6931498050689697
    2. ' input' → logprob: -0.6931498050689697
    3. ' ' → logprob: -13.56814956665039
    4. 'str' → logprob: -14.81814956665039
    5. '(input' → logprob: -15.06814956665039
    6. '	input' → logprob: -15.56814956665039
    7. '=input' → logprob: -15.69314956665039
    8. ' str' → logprob: -15.81814956665039
    9. '   ' → logprob: -15.94314956665039
    10. '<input' → logprob: -16.81814956665039

Token 123: '()


' (ID: 29771)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0012648787815123796
    2. '().' → logprob: -6.751265048980713
    3. '()
' → logprob: -10.376264572143555
    4. '(' → logprob: -10.876264572143555
    5. '())' → logprob: -11.126264572143555
    6. ' ()' → logprob: -11.251264572143555
    7. '()]' → logprob: -12.501264572143555
    8. '()`' → logprob: -12.626264572143555
    9. '()

' → logprob: -13.626264572143555
    10. '`()' → logprob: -13.751264572143555

Token 124: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00905260443687439
    2. '
' → logprob: -4.759052753448486
    3. '

' → logprob: -8.384052276611328
    4. '


' → logprob: -9.134052276611328
    5. '<|end|>' → logprob: -10.009052276611328
    6. 'class' → logprob: -11.134052276611328
    7. '```' → logprob: -11.384052276611328
    8. '#' → logprob: -11.384052276611328
    9. '\' → logprob: -11.759052276611328
    10. ' def' → logprob: -12.634052276611328

Token 125: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.008820666931569576
    2. 'read' → logprob: -5.008820533752441
    3. '_read' → logprob: -6.383820533752441
    4. '_' → logprob: -8.133820533752441
    5. '	read' → logprob: -10.133820533752441
    6. ' ' → logprob: -10.883820533752441
    7. ' readline' → logprob: -11.383820533752441
    8. ' main' → logprob: -11.508820533752441
    9. 's' → logprob: -12.196320533752441
    10. ' write' → logprob: -12.196320533752441

Token 126: '_multiple' (ID: 111487)
  Prédit: '_multiple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_multiple' → logprob: -0.07989069819450378
    2. '_single' → logprob: -2.579890727996826
    3. '_' → logprob: -7.204890727996826
    4. '_multi' → logprob: -9.704890251159668
    5. '_line' → logprob: -9.829890251159668
    6. '_mult' → logprob: -9.954890251159668
    7. '_more' → logprob: -10.454890251159668
    8. '__' → logprob: -11.204890251159668
    9. '_many' → logprob: -11.704890251159668
    10. '_string' → logprob: -11.829890251159668

Token 127: '_strings' (ID: 87251)
  Prédit: '_strings'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_strings' → logprob: -0.00024192029377445579
    2. '_string' → logprob: -8.875242233276367
    3. '_' → logprob: -9.750242233276367
    4. '_s' → logprob: -10.875242233276367
    5. 's' → logprob: -11.125242233276367
    6. '_str' → logprob: -13.000242233276367
    7. '_words' → logprob: -13.000242233276367
    8. '_tokens' → logprob: -13.500242233276367
    9. '_lines' → logprob: -14.750242233276367
    10. 'strings' → logprob: -14.875242233276367

Token 128: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.002392421243712306
    2. '():
' → logprob: -6.127392292022705
    3. '()' → logprob: -9.127392768859863
    4. ' ():' → logprob: -9.252392768859863
    5. '():

' → logprob: -14.002392768859863
    6. '(' → logprob: -14.502392768859863
    7. '():
' → logprob: -14.877392768859863
    8. ' ()' → logprob: -15.127392768859863
    9. '(
' → logprob: -15.752392768859863
    10. '().' → logprob: -16.002391815185547

Token 129: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.10096859931945801
    2. '():
' → logprob: -2.350968599319458
    3. '()' → logprob: -7.350968360900879
    4. ' ():' → logprob: -10.100968360900879
    5. '):' → logprob: -10.850968360900879
    6. '(' → logprob: -11.225968360900879
    7. '().' → logprob: -11.475968360900879
    8. '   ' → logprob: -11.600968360900879
    9. '():
' → logprob: -11.600968360900879
    10. ':' → logprob: -12.100968360900879

Token 130: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.008911178447306156
    2. ' return' → logprob: -4.8839111328125
    3. '()' → logprob: -6.7589111328125
    4. '():' → logprob: -10.0089111328125
    5. 'list' → logprob: -10.2589111328125
    6. '()
' → logprob: -11.0089111328125
    7. ')' → logprob: -11.6339111328125
    8. '().' → logprob: -11.6339111328125
    9. '   ' → logprob: -12.0089111328125
    10. 'split' → logprob: -12.2589111328125

Token 131: ' list' (ID: 1562)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.003892234293743968
    2. 'list' → logprob: -5.753892421722412
    3. ' input' → logprob: -7.253892421722412
    4. ' list' → logprob: -12.503891944885254
    5. '[input' → logprob: -12.753891944885254
    6. '(input' → logprob: -15.378891944885254
    7. '=input' → logprob: -17.50389289855957
    8. '   ' → logprob: -17.50389289855957
    9. ' ' → logprob: -18.12889289855957
    10. 's' → logprob: -18.62889289855957

Token 132: '(map' (ID: 16946)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.20527498424053192
    2. '(map' → logprob: -1.7052749395370483
    3. '(' → logprob: -5.580275058746338
    4. '(str' → logprob: -10.45527458190918
    5. '(split' → logprob: -10.95527458190918
    6. 'map' → logprob: -11.20527458190918
    7. '()' → logprob: -11.95527458190918
    8. '(s' → logprob: -12.45527458190918
    9. ' (' → logprob: -12.70527458190918
    10. 'input' → logprob: -12.95527458190918

Token 133: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -6.408677290892228e-05
    2. 'str' → logprob: -10.5000638961792
    3. '(input' → logprob: -10.6250638961792
    4. '(' → logprob: -11.3750638961792
    5. '=str' → logprob: -15.6250638961792
    6. 'input' → logprob: -16.250064849853516
    7. ' str' → logprob: -16.250064849853516
    8. '	str' → logprob: -16.625064849853516
    9. '(lambda' → logprob: -17.000064849853516
    10. '[str' → logprob: -17.375064849853516

Token 134: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002189160557463765
    2. ',input' → logprob: -6.1271891593933105
    3. ' ,' → logprob: -12.627189636230469
    4. '(input' → logprob: -15.252189636230469
    5. 'input' → logprob: -15.502189636230469
    6. '(),' → logprob: -15.877189636230469
    7. ',int' → logprob: -17.00218963623047
    8. ',
' → logprob: -17.62718963623047
    9. ' input' → logprob: -18.12718963623047
    10. '(' → logprob: -18.12718963623047

Token 135: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.16106508672237396
    2. ' input' → logprob: -1.9110651016235352
    3. ',input' → logprob: -7.161065101623535
    4. ',' → logprob: -9.911065101623535
    5. '(input' → logprob: -12.036065101623535
    6. '	input' → logprob: -13.411065101623535
    7. '=input' → logprob: -13.411065101623535
    8. '   ' → logprob: -13.536065101623535
    9. '
' → logprob: -13.661065101623535
    10. ')' → logprob: -13.911065101623535

Token 136: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -9.088346359931165e-07
    2. '()' → logprob: -14.250000953674316
    3. '.' → logprob: -15.875000953674316
    4. ' ().' → logprob: -16.625
    5. '(' → logprob: -16.875
    6. ',' → logprob: -18.75
    7. '()
' → logprob: -19.25
    8. '   ' → logprob: -19.375
    9. ' .' → logprob: -19.75
    10. ')' → logprob: -20.25

Token 137: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.060365608893335e-05
    2. 'strip' → logprob: -10.875041007995605
    3. ' split' → logprob: -10.875041007995605
    4. ')' → logprob: -13.250041007995605
    5. '().' → logprob: -14.250041007995605
    6. 'spl' → logprob: -16.12504005432129
    7. 'rstrip' → logprob: -16.37504005432129
    8. '(split' → logprob: -16.75004005432129
    9. '.split' → logprob: -16.75004005432129
    10. ').' → logprob: -18.12504005432129

Token 138: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.10305917263031006
    2. '))' → logprob: -2.3530592918395996
    3. '()' → logprob: -5.9780592918396
    4. '()))
' → logprob: -8.603058815002441
    5. '())' → logprob: -9.103058815002441
    6. '(' → logprob: -11.853058815002441
    7. '()));' → logprob: -12.478058815002441
    8. ')' → logprob: -13.103058815002441
    9. '))
' → logprob: -13.353058815002441
    10. ' ))' → logprob: -13.478058815002441

Token 139: '


' (ID: 2499)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.47173410654067993
    2. '
' → logprob: -1.0967340469360352
    3. '


' → logprob: -4.096734046936035
    4. '<|end|>' → logprob: -4.346734046936035
    5. 'def' → logprob: -4.471734046936035
    6. '```' → logprob: -8.346734046936035
    7. '\n' → logprob: -8.471734046936035
    8. '#' → logprob: -8.721734046936035
    9. '



' → logprob: -9.346734046936035
    10. '<|end|>' → logprob: -9.471734046936035

Token 140: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0036560073494911194
    2. 'class' → logprob: -5.753655910491943
    3. 'd' → logprob: -8.503656387329102
    4. '
' → logprob: -9.003656387329102
    5. '#' → logprob: -9.378656387329102
    6. 'de' → logprob: -11.253656387329102
    7. '\' → logprob: -11.253656387329102
    8. '@' → logprob: -11.378656387329102
    9. '@dat' → logprob: -12.003656387329102
    10. 'from' → logprob: -12.253656387329102

Token 141: ' measure' (ID: 9714)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.5049433708190918
    2. ' read' → logprob: -1.1299433708190918
    3. 'main' → logprob: -3.754943370819092
    4. 'read' → logprob: -4.004943370819092
    5. ' solve' → logprob: -4.629943370819092
    6. ' is' → logprob: -5.504943370819092
    7. ' binary' → logprob: -6.004943370819092
    8. ' readline' → logprob: -6.379943370819092
    9. ' factorial' → logprob: -6.504943370819092
    10. 'solve' → logprob: -6.754943370819092

Token 142: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.1319323182106018
    2. '_' → logprob: -2.631932258605957
    3. '_length' → logprob: -4.006932258605957
    4. '_distance' → logprob: -4.381932258605957
    5. '_space' → logprob: -5.881932258605957
    6. '(' → logprob: -6.131932258605957
    7. '_entropy' → logprob: -6.256932258605957
    8. '_depth' → logprob: -6.506932258605957
    9. '_execution' → logprob: -6.631932258605957
    10. '_string' → logprob: -6.881932258605957

Token 143: '(ex' (ID: 9292)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4381401538848877
    2. '():' → logprob: -1.0631401538848877
    3. '_' → logprob: -5.188139915466309
    4. '()' → logprob: -6.313139915466309
    5. '(_' → logprob: -8.438139915466309
    6. '(func' → logprob: -8.688139915466309
    7. ' ():' → logprob: -8.813139915466309
    8. '():
' → logprob: -9.063139915466309
    9. '(
' → logprob: -9.313139915466309
    10. 's' → logprob: -9.563139915466309

Token 144: 'ecut' (ID: 5163)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0829273983836174
    2. 'ecution' → logprob: -2.8329274654388428
    3. 'cute' → logprob: -4.582927227020264
    4. 'ecute' → logprob: -5.457927227020264
    5. 'ec' → logprob: -5.457927227020264
    6. ' ec' → logprob: -7.457927227020264
    7. 'ecutor' → logprob: -7.832927227020264
    8. 'e' → logprob: -8.457927703857422
    9. 'cut' → logprob: -8.457927703857422
    10. 'ecut' → logprob: -8.832927703857422

Token 145: 'ed' (ID: 295)
  Prédit: 'ution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ution' → logprob: -0.5631248950958252
    2. 'ute' → logprob: -0.9381248950958252
    3. 'utor' → logprob: -3.688124895095825
    4. 'ime' → logprob: -4.938124656677246
    5. 'e' → logprob: -6.188124656677246
    6. 'ion' → logprob: -6.688124656677246
    7. 'ut' → logprob: -7.063124656677246
    8. 'ure' → logprob: -7.438124656677246
    9. 'utable' → logprob: -7.438124656677246
    10. '_time' → logprob: -7.813124656677246

Token 146: '_function' (ID: 21094)
  Prédit: '_func'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_func' → logprob: -0.5597314834594727
    2. '_function' → logprob: -1.5597314834594727
    3. '):' → logprob: -1.9347314834594727
    4. '_' → logprob: -2.9347314834594727
    5. '_time' → logprob: -4.559731483459473
    6. '_code' → logprob: -5.684731483459473
    7. '_fn' → logprob: -6.184731483459473
    8. '(func' → logprob: -7.184731483459473
    9. 'func' → logprob: -7.434731483459473
    10. '_command' → logprob: -7.684731483459473

Token 147: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.09132223576307297
    2. ',' → logprob: -2.466322183609009
    3. '):
' → logprob: -6.341322422027588
    4. ')' → logprob: -7.716322422027588
    5. ':' → logprob: -9.96632194519043
    6. ' ):' → logprob: -10.84132194519043
    7. '():' → logprob: -11.34132194519043
    8. '_func' → logprob: -11.46632194519043
    9. '(func' → logprob: -11.46632194519043
    10. '(' → logprob: -11.59132194519043

Token 148: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.17656917870044708
    2. ':' → logprob: -2.3015692234039307
    3. '   ' → logprob: -3.3015692234039307
    4. '():' → logprob: -4.051568984985352
    5. '(
' → logprob: -5.801568984985352
    6. '):' → logprob: -6.926568984985352
    7. 'def' → logprob: -7.051568984985352
    8. ' :' → logprob: -7.426568984985352
    9. ':
' → logprob: -8.051568984985352
    10. ',' → logprob: -8.051568984985352

Token 149: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' (adapté à ' import') → logprob: -0.5901373624801636
    2. 'def' → logprob: -1.8401373624801636
    3. '   ' → logprob: -2.090137481689453
    4. ' import' → logprob: -2.340137481689453
    5. ' def' → logprob: -2.715137481689453
    6. ' start' → logprob: -8.215137481689453
    7. 'from' → logprob: -9.090137481689453
    8. 'start' → logprob: -9.340137481689453
    9. ' ' → logprob: -9.840137481689453
    10. '    ' → logprob: -10.090137481689453

Token 150: ' time' (ID: 1058)
  Prédit: ' time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' time' → logprob: -0.038045283406972885
    2. 'time' → logprob: -3.2880451679229736
    3. '	time' → logprob: -12.538044929504395
    4. '"time' → logprob: -15.788044929504395
    5. '_time' → logprob: -16.28804588317871
    6. ' datetime' → logprob: -16.78804588317871
    7. '.time' → logprob: -17.66304588317871
    8. '=time' → logprob: -18.03804588317871
    9. ' ' → logprob: -18.28804588317871
    10. 'datetime' → logprob: -18.66304588317871

Token 151: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5187950730323792
    2. '   ' → logprob: -1.1437950134277344
    3. '    
' → logprob: -3.3937950134277344
    4. 'def' → logprob: -3.6437950134277344
    5. ' def' → logprob: -4.893795013427734
    6. '	def' → logprob: -5.643795013427734
    7. ':
' → logprob: -6.018795013427734
    8. ':' → logprob: -6.018795013427734
    9. '	
' → logprob: -6.268795013427734
    10. ',' → logprob: -6.768795013427734

Token 152: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013455375097692013
    2. '
' → logprob: -4.763455390930176
    3. 'def' → logprob: -6.388455390930176
    4. '    
' → logprob: -6.513455390930176
    5. ' def' → logprob: -7.138455390930176
    6. '(' → logprob: -8.513455390930176
    7. '()' → logprob: -8.763455390930176
    8. ',' → logprob: -9.263455390930176
    9. ':' → logprob: -9.513455390930176
    10. '    ' → logprob: -10.138455390930176

Token 153: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.2548738121986389
    2. 'start' → logprob: -1.5048737525939941
    3. '   ' → logprob: -6.004873752593994
    4. ' start' → logprob: -8.379874229431152
    5. ' def' → logprob: -8.504874229431152
    6. 'import' → logprob: -10.379874229431152
    7. ' ' → logprob: -12.629874229431152
    8. '	start' → logprob: -13.504874229431152
    9. '	def' → logprob: -13.504874229431152
    10. '
' → logprob: -14.004874229431152

Token 154: ' wrapper' (ID: 26504)
  Prédit: ' wrapper'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' wrapper' → logprob: -0.00043257648940198123
    2. 'wrapper' → logprob: -8.000432968139648
    3. ' wrapped' → logprob: -9.750432968139648
    4. '_wrapper' → logprob: -10.625432968139648
    5. ' decorator' → logprob: -12.250432968139648
    6. ' decorated' → logprob: -12.500432968139648
    7. ' inner' → logprob: -12.750432968139648
    8. ' timed' → logprob: -13.250432968139648
    9. ' _' → logprob: -14.625432968139648
    10. 'Wrapper' → logprob: -15.500432968139648

Token 155: '(*' (ID: 9000)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12758173048496246
    2. '(*' → logprob: -2.252581834793091
    3. '(func' → logprob: -4.877581596374512
    4. '(
' → logprob: -5.877581596374512
    5. '():' → logprob: -5.877581596374512
    6. '(function' → logprob: -7.502581596374512
    7. '(fn' → logprob: -8.127581596374512
    8. '(ex' → logprob: -8.377581596374512
    9. '()' → logprob: -8.752581596374512
    10. '(f' → logprob: -9.752581596374512

Token 156: 'function' (ID: 2706)
  Prédit: 'args'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'args' → logprob: -1.8624639324116288e-06
    2. 'arguments' → logprob: -14.375001907348633
    3. '	args' → logprob: -14.500001907348633
    4. ' args' → logprob: -15.125001907348633
    5. '   ' → logprob: -15.875001907348633
    6. 'argv' → logprob: -16.125001907348633
    7. 'argc' → logprob: -16.750001907348633
    8. 'execut' → logprob: -17.500001907348633
    9. '_args' → logprob: -17.750001907348633
    10. 'params' → logprob: -17.750001907348633

Token 157: '_args' (ID: 18810)
  Prédit: '_args'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_args' → logprob: -0.17722490429878235
    2. 's' → logprob: -2.80222487449646
    3. '_name' → logprob: -3.17722487449646
    4. '_' → logprob: -3.17722487449646
    5. '_arguments' → logprob: -4.177225112915039
    6. '_parameters' → logprob: -7.802225112915039
    7. '_kwargs' → logprob: -7.802225112915039
    8. '):' → logprob: -7.802225112915039
    9. 'args' → logprob: -7.927225112915039
    10. '_names' → logprob: -8.177225112915039

Token 158: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4369497299194336
    2. '):' → logprob: -1.0619497299194336
    3. '):
' → logprob: -4.811949729919434
    4. ')' → logprob: -10.561949729919434
    5. '   ' → logprob: -10.811949729919434
    6. ',
' → logprob: -11.311949729919434
    7. '):
' → logprob: -11.686949729919434
    8. ' ' → logprob: -11.811949729919434
    9. ' ,' → logprob: -12.811949729919434
    10. ':' → logprob: -13.561949729919434

Token 159: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.002820920431986451
    2. ' **' → logprob: -5.87782096862793
    3. '**)' → logprob: -12.00282096862793
    4. '   ' → logprob: -12.50282096862793
    5. '***' → logprob: -13.25282096862793
    6. ')' → logprob: -13.62782096862793
    7. '*' → logprob: -13.87782096862793
    8. 'function' → logprob: -14.87782096862793
    9. '**
' → logprob: -15.00282096862793
    10. ' ' → logprob: -15.00282096862793

Token 160: 'function' (ID: 2706)
  Prédit: 'function'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'function' → logprob: -0.2538936138153076
    2. 'kwargs' → logprob: -1.5038936138153076
    3. 'args' → logprob: -6.253893852233887
    4. 'func' → logprob: -10.753893852233887
    5. '
' → logprob: -12.253893852233887
    6. ' kwargs' → logprob: -12.878893852233887
    7. ' function' → logprob: -13.003893852233887
    8. '_kwargs' → logprob: -13.378893852233887
    9. 'wrapper' → logprob: -13.378893852233887
    10. 'params' → logprob: -13.753893852233887

Token 161: '_kwargs' (ID: 81504)
  Prédit: '_kwargs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_kwargs' → logprob: -0.12718920409679413
    2. '_args' → logprob: -2.1271891593933105
    3. 'kwargs' → logprob: -8.877189636230469
    4. '_params' → logprob: -10.002189636230469
    5. '_arguments' → logprob: -10.877189636230469
    6. '_' → logprob: -11.002189636230469
    7. 'args' → logprob: -11.377189636230469
    8. '):' → logprob: -11.502189636230469
    9. '_kw' → logprob: -12.002189636230469
    10. '_name' → logprob: -12.752189636230469

Token 162: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00043376852408982813
    2. ')' → logprob: -8.000433921813965
    3. '):
' → logprob: -9.250433921813965
    4. ' ):' → logprob: -14.375433921813965
    5. '   ' → logprob: -14.500433921813965
    6. ':' → logprob: -14.875433921813965
    7. '):
' → logprob: -15.125433921813965
    8. '**' → logprob: -15.875433921813965
    9. ' ' → logprob: -16.25043296813965
    10. '):

' → logprob: -16.75043296813965

Token 163: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009496103040874004
    2. '
' → logprob: -5.384496212005615
    3. ':' → logprob: -5.509496212005615
    4. '   ' → logprob: -8.759495735168457
    5. ':
' → logprob: -9.009495735168457
    6. '        
' → logprob: -9.509495735168457
    7. '' → logprob: -9.509495735168457
    8. '\n' → logprob: -9.884495735168457
    9. '    
' → logprob: -10.134495735168457
    10. 'import' → logprob: -10.259495735168457

Token 164: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' (adapté à ' start') → logprob: -0.008503829129040241
    2. ' start' → logprob: -5.0085039138793945
    3. '       ' → logprob: -6.3835039138793945
    4. 'import' → logprob: -9.508503913879395
    5. '   ' → logprob: -11.008503913879395
    6. '	start' → logprob: -12.883503913879395
    7. '_start' → logprob: -13.008503913879395
    8. '
' → logprob: -15.383503913879395
    9. '           ' → logprob: -15.383503913879395
    10. 'st' → logprob: -15.633503913879395

Token 165: '_time' (ID: 6425)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8010159730911255
    2. '=' → logprob: -1.1760159730911255
    3. '_time' → logprob: -2.051015853881836
    4. ' =' → logprob: -2.176015853881836
    5. '_=' → logprob: -8.551015853881836
    6. '=time' → logprob: -8.801015853881836
    7. 'time' → logprob: -9.051015853881836
    8. '=_' → logprob: -10.551015853881836
    9. '_timer' → logprob: -11.926015853881836
    10. '_t' → logprob: -12.176015853881836

Token 166: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.474091500043869
    2. ' =' → logprob: -0.9740915298461914
    3. '=time' → logprob: -11.224091529846191
    4. ',' → logprob: -15.474091529846191
    5. ' ' → logprob: -15.724091529846191
    6. '_' → logprob: -15.849091529846191
    7. ' =
' → logprob: -15.974091529846191
    8. '_time' → logprob: -16.224090576171875
    9. '   ' → logprob: -16.349090576171875
    10. 'time' → logprob: -16.474090576171875

Token 167: ' time' (ID: 1058)
  Prédit: ' time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' time' → logprob: -0.6931474208831787
    2. 'time' → logprob: -0.6931474208831787
    3. '	time' → logprob: -15.568147659301758
    4. ' ' → logprob: -17.068147659301758
    5. '   ' → logprob: -17.068147659301758
    6. 'tim' → logprob: -18.068147659301758
    7. 'ti' → logprob: -18.568147659301758
    8. ' tiem' → logprob: -18.943147659301758
    9. '=time' → logprob: -19.193147659301758
    10. 't' → logprob: -19.318147659301758

Token 168: '.time' (ID: 11486)
  Prédit: '.time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.time' → logprob: -0.4755018651485443
    2. '.per' → logprob: -1.2255018949508667
    3. '.' → logprob: -2.475501775741577
    4. '.mon' → logprob: -7.725502014160156
    5. '.process' → logprob: -8.475502014160156
    6. '.now' → logprob: -10.975502014160156
    7. '()' → logprob: -11.225502014160156
    8. ' .' → logprob: -11.725502014160156
    9. '.performance' → logprob: -13.725502014160156
    10. '.clock' → logprob: -13.725502014160156

Token 169: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.04636742174625397
    2. '()
' → logprob: -3.1713674068450928
    3. '       ' → logprob: -5.796367645263672
    4. ')' → logprob: -8.546367645263672
    5. '<|end|>' → logprob: -9.796367645263672
    6. '
' → logprob: -10.296367645263672
    7. '<|end|>' → logprob: -11.171367645263672
    8. '   ' → logprob: -12.296367645263672
    9. ')
' → logprob: -12.671367645263672
    10. '(' → logprob: -12.796367645263672

Token 170: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16838721930980682
    2. '
' → logprob: -1.9183871746063232
    3. '<|end|>' → logprob: -5.793387413024902
    4. '        
' → logprob: -6.043387413024902
    5. ')' → logprob: -7.043387413024902
    6. '    
' → logprob: -7.293387413024902
    7. '  
' → logprob: -8.168387413024902
    8. '<|end|>' → logprob: -8.418387413024902
    9. '   ' → logprob: -8.543387413024902
    10. ' 
' → logprob: -9.168387413024902

Token 171: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.16051504015922546
    2. ' result' → logprob: -1.9105150699615479
    3. '       ' → logprob: -8.160514831542969
    4. 'results' → logprob: -13.160514831542969
    5. 'output' → logprob: -13.785514831542969
    6. '_result' → logprob: -14.285514831542969
    7. 'response' → logprob: -14.660514831542969
    8. ' results' → logprob: -14.910514831542969
    9. 'res' → logprob: -15.285514831542969
    10. '	result' → logprob: -15.785514831542969

Token 172: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16022463142871857
    2. '=' → logprob: -1.9102246761322021
    3. ' ' → logprob: -14.910224914550781
    4. ' =
' → logprob: -15.785224914550781
    5. ',' → logprob: -18.28522491455078
    6. '	' → logprob: -18.41022491455078
    7. '＝' → logprob: -18.91022491455078
    8. '=
' → logprob: -19.16022491455078
    9. '  ' → logprob: -19.78522491455078
    10. ' =)' → logprob: -19.78522491455078

Token 173: ' executed' (ID: 30830)
  Prédit: ' executed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' executed' → logprob: -0.0031975586898624897
    2. 'execut' → logprob: -5.75319766998291
    3. ' executable' → logprob: -11.87819766998291
    4. ' function' → logprob: -12.00319766998291
    5. ' ' → logprob: -13.12819766998291
    6. 'function' → logprob: -13.50319766998291
    7. 'ex' → logprob: -13.87819766998291
    8. '	ex' → logprob: -14.25319766998291
    9. ' ' → logprob: -15.00319766998291
    10. '   ' → logprob: -15.00319766998291

Token 174: '_function' (ID: 21094)
  Prédit: '_function'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_function' → logprob: -4.842555426876061e-06
    2. '_' → logprob: -12.375004768371582
    3. 'function' → logprob: -15.125004768371582
    4. '_f' → logprob: -15.750004768371582
    5. ' _' → logprob: -16.7500057220459
    6. '_func' → logprob: -17.0000057220459
    7. '```' → logprob: -17.6250057220459
    8. '_method' → logprob: -18.1250057220459
    9. '_fun' → logprob: -18.3750057220459
    10. '_FUNCTION' → logprob: -18.5000057220459

Token 175: '(*' (ID: 9000)
  Prédit: '(*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.02325386554002762
    2. '(' → logprob: -3.773253917694092
    3. '(
' → logprob: -12.023253440856934
    4. '(*)' → logprob: -13.023253440856934
    5. ' (*' → logprob: -16.52325439453125
    6. '(

' → logprob: -17.27325439453125
    7. '()' → logprob: -17.52325439453125
    8. '(**' → logprob: -17.64825439453125
    9. ' (' → logprob: -18.27325439453125
    10. '((*' → logprob: -18.52325439453125

Token 176: 'function' (ID: 2706)
  Prédit: 'function'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'function' → logprob: -0.0001242772996192798
    2. ' function' → logprob: -9.000123977661133
    3. '
' → logprob: -15.000123977661133
    4. '   ' → logprob: -15.875123977661133
    5. 'unction' → logprob: -16.000123977661133
    6. '	function' → logprob: -16.375123977661133
    7. 'args' → logprob: -16.500123977661133
    8. ' ' → logprob: -16.750123977661133
    9. '_function' → logprob: -16.750123977661133
    10. '  ' → logprob: -18.375123977661133

Token 177: '_args' (ID: 18810)
  Prédit: '_args'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_args' → logprob: -0.00978170707821846
    2. 'args' → logprob: -4.634781837463379
    3. 'function' → logprob: -11.134781837463379
    4. '$args' → logprob: -13.634781837463379
    5. 's' → logprob: -13.759781837463379
    6. '*' → logprob: -13.759781837463379
    7. '
' → logprob: -13.884781837463379
    8. '   ' → logprob: -13.884781837463379
    9. 'Args' → logprob: -14.134781837463379
    10. 'a' → logprob: -14.384781837463379

Token 178: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.0100624169572257e-05
    2. ' ,' → logprob: -11.000020027160645
    3. ',
' → logprob: -12.625020027160645
    4. '   ' → logprob: -18.75002098083496
    5. ')' → logprob: -19.00002098083496
    6. '‌,' → logprob: -19.12502098083496
    7. '**,' → logprob: -19.12502098083496
    8. ',

' → logprob: -19.25002098083496
    9. ' ' → logprob: -19.87502098083496
    10. ',*' → logprob: -20.00002098083496

Token 179: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.005234594456851482
    2. ' **' → logprob: -5.255234718322754
    3. '*' → logprob: -14.755234718322754
    4. '
' → logprob: -15.255234718322754
    5. ' ' → logprob: -16.255233764648438
    6. '**)' → logprob: -16.880233764648438
    7. '**
' → logprob: -17.130233764648438
    8. ' ' → logprob: -17.255233764648438
    9. '```' → logprob: -18.255233764648438
    10. ' **)' → logprob: -18.630233764648438

Token 180: 'function' (ID: 2706)
  Prédit: 'function'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'function' → logprob: -7.612634362885728e-05
    2. ' function' → logprob: -9.500076293945312
    3. '
' → logprob: -15.125076293945312
    4. ' ' → logprob: -15.500076293945312
    5. 'func' → logprob: -15.750076293945312
    6. 'fun' → logprob: -16.250076293945312
    7. '   ' → logprob: -16.375076293945312
    8. ')' → logprob: -16.875076293945312
    9. 'kwargs' → logprob: -16.875076293945312
    10. '**' → logprob: -17.125076293945312

Token 181: '_kwargs' (ID: 81504)
  Prédit: '_kwargs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_kwargs' → logprob: -0.02913273312151432
    2. 'kwargs' → logprob: -3.654132843017578
    3. '_args' → logprob: -6.279132843017578
    4. 'args' → logprob: -7.279132843017578
    5. ')' → logprob: -8.529132843017578
    6. ')_' → logprob: -11.029132843017578
    7. '_' → logprob: -11.529132843017578
    8. '_)' → logprob: -12.029132843017578
    9. '_kw' → logprob: -12.154132843017578
    10. '_keywords' → logprob: -12.404132843017578

Token 182: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47482213377952576
    2. ')
' → logprob: -1.2248221635818481
    3. '       ' → logprob: -2.4748220443725586
    4. ')
' → logprob: -11.849822044372559
    5. '   ' → logprob: -12.724822044372559
    6. '
' → logprob: -13.099822044372559
    7. ')return' → logprob: -13.599822044372559
    8. ')

' → logprob: -13.849822044372559
    9. ' )
' → logprob: -14.224822044372559
    10. ' )' → logprob: -14.724822044372559

Token 183: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006078583188354969
    2. '
' → logprob: -5.131078720092773
    3. '        
' → logprob: -8.881078720092773
    4. '    
' → logprob: -13.006078720092773
    5. '<|end|>' → logprob: -13.131078720092773
    6. '
' → logprob: -13.631078720092773
    7. ' return' → logprob: -13.756078720092773
    8. 'return' → logprob: -14.131078720092773
    9. '' → logprob: -14.256078720092773
    10. '   ' → logprob: -14.381078720092773

Token 184: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' (adapté à ' end') → logprob: -0.4941394031047821
    2. ' end' → logprob: -0.9941394329071045
    3. '       ' → logprob: -3.9941394329071045
    4. 'print' → logprob: -7.369139194488525
    5. '
' → logprob: -7.494139194488525
    6. '   ' → logprob: -9.494139671325684
    7. '        
' → logprob: -9.744139671325684
    8. 'elapsed' → logprob: -9.869139671325684
    9. ' print' → logprob: -10.744139671325684
    10. '	end' → logprob: -11.494139671325684

Token 185: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.009910259395837784
    2. '_' → logprob: -4.6349101066589355
    3. ' _' → logprob: -9.009910583496094
    4. '_t' → logprob: -11.384910583496094
    5. '_tim' → logprob: -12.509910583496094
    6. '_timer' → logprob: -12.759910583496094
    7. '_Time' → logprob: -13.009910583496094
    8. '_times' → logprob: -13.134910583496094
    9. '_TIME' → logprob: -13.384910583496094
    10. 'time' → logprob: -13.634910583496094

Token 186: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2014242559671402
    2. '=' → logprob: -1.701424241065979
    3. ' -' → logprob: -13.076424598693848
    4. '_' → logprob: -13.076424598693848
    5. ' ' → logprob: -13.201424598693848
    6. '   ' → logprob: -13.451424598693848
    7. '-' → logprob: -13.826424598693848
    8. ')' → logprob: -14.201424598693848
    9. '=time' → logprob: -14.576424598693848
    10. '_time' → logprob: -15.076424598693848

Token 187: ' time' (ID: 1058)
  Prédit: ' time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' time' → logprob: -0.38709041476249695
    2. 'time' → logprob: -1.1370904445648193
    3. 'start' → logprob: -9.012090682983398
    4. ' start' → logprob: -10.012090682983398
    5. ' end' → logprob: -10.637090682983398
    6. 'end' → logprob: -11.012090682983398
    7. 'Time' → logprob: -13.137090682983398
    8. '	time' → logprob: -13.137090682983398
    9. '(time' → logprob: -13.762090682983398
    10. '_time' → logprob: -13.762090682983398

Token 188: '.time' (ID: 11486)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.02518124133348465
    2. '_' → logprob: -4.400181293487549
    3. '       ' → logprob: -4.525181293487549
    4. 'time' → logprob: -7.775181293487549
    5. '()' → logprob: -8.02518081665039
    6. '.time' → logprob: -8.02518081665039
    7. 's' → logprob: -9.15018081665039
    8. '()
' → logprob: -9.65018081665039
    9. '_TIME' → logprob: -9.77518081665039
    10. '-time' → logprob: -9.90018081665039

Token 189: '()

' (ID: 5874)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006657234393060207
    2. '
' → logprob: -5.256657123565674
    3. '<|end|>' → logprob: -7.506657123565674
    4. ',' → logprob: -8.381657600402832
    5. ')' → logprob: -8.631657600402832
    6. '        
' → logprob: -8.756657600402832
    7. '()' → logprob: -9.506657600402832
    8. '<|end|>' → logprob: -10.256657600402832
    9. ')
' → logprob: -10.381657600402832
    10. 'return' → logprob: -10.506657600402832

Token 190: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017286106012761593
    2. '
' → logprob: -6.376728534698486
    3. '        
' → logprob: -11.501729011535645
    4. ' return' → logprob: -12.376729011535645
    5. 'return' → logprob: -12.501729011535645
    6. '
' → logprob: -12.626729011535645
    7. '<|end|>' → logprob: -13.126729011535645
    8. '' → logprob: -14.251729011535645
    9. '   ' → logprob: -14.376729011535645
    10. '    
' → logprob: -15.001729011535645

Token 191: ' print' (ID: 2123)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23468045890331268
    2. 'print' (adapté à ' print') → logprob: -2.109680414199829
    3. ' print' → logprob: -2.609680414199829
    4. '
' → logprob: -4.359680652618408
    5. ' return' → logprob: -7.859680652618408
    6. '        
' → logprob: -7.859680652618408
    7. 'return' → logprob: -8.10968017578125
    8. '    
' → logprob: -8.73468017578125
    9. '   ' → logprob: -8.85968017578125
    10. '
' → logprob: -10.48468017578125

Token 192: '(end' (ID: 29409)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.018504813313484192
    2. '(' → logprob: -4.018504619598389
    3. '("' → logprob: -8.143505096435547
    4. '('' → logprob: -10.393505096435547
    5. '(
' → logprob: -10.893505096435547
    6. '()' → logprob: -11.393505096435547
    7. '((' → logprob: -13.018505096435547
    8. '(F' → logprob: -14.768505096435547
    9. '("("' → logprob: -14.768505096435547
    10. '(

' → logprob: -14.893505096435547

Token 193: '_time' (ID: 6425)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4405680000782013
    2. '_time' → logprob: -1.565567970275879
    3. ')' → logprob: -2.690567970275879
    4. '=' → logprob: -3.440567970275879
    5. 'time' → logprob: -4.315567970275879
    6. 'space' → logprob: -4.815567970275879
    7. 'ed' → logprob: -5.315567970275879
    8. 'f' → logprob: -5.565567970275879
    9. '"' → logprob: -6.065567970275879
    10. '(' → logprob: -6.440567970275879

Token 194: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.04864402860403061
    2. '-' → logprob: -3.0486440658569336
    3. '-start' → logprob: -10.048644065856934
    4. ' ' → logprob: -11.673644065856934
    5. ',' → logprob: -13.298644065856934
    6. ')' → logprob: -13.423644065856934
    7. '   ' → logprob: -14.298644065856934
    8. ' ' → logprob: -14.798644065856934
    9. ' ,' → logprob: -15.548644065856934
    10. '-ex' → logprob: -15.673644065856934

Token 195: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.06196858361363411
    2. ' start' → logprob: -2.8119685649871826
    3. '	start' → logprob: -14.311968803405762
    4. ' ' → logprob: -15.936968803405762
    5. 'star' → logprob: -16.311967849731445
    6. '       ' → logprob: -16.811967849731445
    7. '   ' → logprob: -17.061967849731445
    8. '_start' → logprob: -17.561967849731445
    9. '=start' → logprob: -17.561967849731445
    10. ' ' → logprob: -18.061967849731445

Token 196: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -4.36574100604048e-06
    2. ')_' → logprob: -13.250004768371582
    3. '_' → logprob: -13.750004768371582
    4. '_token' → logprob: -14.250004768371582
    5. '_line' → logprob: -15.875004768371582
    6. '_times' → logprob: -16.125003814697266
    7. '_t' → logprob: -16.625003814697266
    8. '_code' → logprob: -16.750003814697266
    9. '_start' → logprob: -16.750003814697266
    10. ')' → logprob: -16.875003814697266

Token 197: ',' (ID: 11)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.25220444798469543
    2. ')' → logprob: -1.502204418182373
    3. ',' → logprob: -8.877204895019531
    4. '       ' → logprob: -9.502204895019531
    5. '   ' → logprob: -10.627204895019531
    6. ')

' → logprob: -11.127204895019531
    7. ')
' → logprob: -12.002204895019531
    8. ' )
' → logprob: -12.002204895019531
    9. ')return' → logprob: -12.502204895019531
    10. '
' → logprob: -13.377204895019531

Token 198: ' '' (ID: 461)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.2425728589296341
    2. 'file' → logprob: -1.7425729036331177
    3. ''' → logprob: -4.242572784423828
    4. 'return' → logprob: -4.617572784423828
    5. ')' → logprob: -4.992572784423828
    6. ' ' → logprob: -5.742572784423828
    7. '   ' → logprob: -6.117572784423828
    8. ')
' → logprob: -6.742572784423828
    9. 'flush' → logprob: -7.117572784423828
    10. ' file' → logprob: -7.867572784423828

Token 199: 'sec' (ID: 13711)
  Prédit: 'seconds'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seconds' → logprob: -0.09875902533531189
    2. 's' → logprob: -2.7237589359283447
    3. ' seconds' → logprob: -3.7237589359283447
    4. '秒' → logprob: -5.723759174346924
    5. 'sec' → logprob: -7.973759174346924
    6. 'second' → logprob: -8.598758697509766
    7. ')' → logprob: -8.848758697509766
    8. '')' → logprob: -8.973758697509766
    9. ' s' → logprob: -9.598758697509766
    10. ''' → logprob: -10.598758697509766

Token 200: '',' (ID: 787)
  Prédit: 'onds'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'onds' → logprob: -0.3446604609489441
    2. '')' → logprob: -1.4696605205535889
    3. 's' → logprob: -3.219660520553589
    4. '')
' → logprob: -3.969660520553589
    5. ')' → logprob: -6.21966028213501
    6. 'ond' → logprob: -8.469660758972168
    7. 'conds' → logprob: -8.844660758972168
    8. '')

' → logprob: -9.844660758972168
    9. '')
' → logprob: -9.844660758972168
    10. 'ons' → logprob: -10.094660758972168

Token 201: ' file' (ID: 1974)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7233742475509644
    2. ')
' → logprob: -1.7233742475509644
    3. ' file' → logprob: -1.9733742475509644
    4. 'file' → logprob: -2.473374366760254
    5. ')' → logprob: -2.723374366760254
    6. '   ' → logprob: -3.598374366760254
    7. ' flush' → logprob: -4.973374366760254
    8. ' )
' → logprob: -5.723374366760254
    9. 'flush' → logprob: -5.848374366760254
    10. 'sep' → logprob: -6.848374366760254

Token 202: '=sys' (ID: 149200)
  Prédit: '=sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=sys' → logprob: -0.0040801819413900375
    2. '=' → logprob: -5.504080295562744
    3. ')' → logprob: -14.629079818725586
    4. '=subprocess' → logprob: -14.629079818725586
    5. ' =' → logprob: -14.754079818725586
    6. 'sys' → logprob: -16.129079818725586
    7. '=file' → logprob: -16.254079818725586
    8. ')=' → logprob: -16.504079818725586
    9. '=
' → logprob: -16.629079818725586
    10. '=

' → logprob: -16.754079818725586

Token 203: '.stderr' (ID: 87058)
  Prédit: '.stderr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stderr' → logprob: -0.011150158941745758
    2. '.stdout' → logprob: -4.511150360107422
    3. '.' → logprob: -9.761150360107422
    4. 'stderr' → logprob: -10.386150360107422
    5. '.stdin' → logprob: -12.011150360107422
    6. ')' → logprob: -12.386150360107422
    7. '(stderr' → logprob: -13.636150360107422
    8. '.std' → logprob: -13.886150360107422
    9. '.argv' → logprob: -15.011150360107422
    10. '.
' → logprob: -15.386150360107422

Token 204: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.16077584028244019
    2. ')' → logprob: -1.910775899887085
    3. '       ' → logprob: -8.035776138305664
    4. ')
' → logprob: -9.035776138305664
    5. ')

' → logprob: -9.785776138305664
    6. '   ' → logprob: -9.910776138305664
    7. ')`
' → logprob: -13.660776138305664
    8. ' )
' → logprob: -14.035776138305664
    9. ')return' → logprob: -16.035776138305664
    10. ' )' → logprob: -16.035776138305664

Token 205: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.38703805208206177
    2. '
' → logprob: -1.137037992477417
    3. '        
' → logprob: -9.887038230895996
    4. '
' → logprob: -10.137038230895996
    5. 'return' → logprob: -10.262038230895996
    6. '<|end|>' → logprob: -11.137038230895996
    7. '    
' → logprob: -12.137038230895996
    8. ' return' → logprob: -12.512038230895996
    9. '  
' → logprob: -12.637038230895996
    10. '   ' → logprob: -12.637038230895996

Token 206: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008745640516281128
    2. 'return' (adapté à ' return') → logprob: -4.7587456703186035
    3. '   ' → logprob: -9.383745193481445
    4. ' return' → logprob: -10.133745193481445
    5. '
' → logprob: -12.133745193481445
    6. '	return' → logprob: -13.883745193481445
    7. '	' → logprob: -15.008745193481445
    8. '     ' → logprob: -15.383745193481445
    9. ' ' → logprob: -16.008745193481445
    10. '      ' → logprob: -16.008745193481445

Token 207: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.4740775227546692
    2. ' result' → logprob: -0.9740775227546692
    3. '(result' → logprob: -14.724077224731445
    4. '	result' → logprob: -16.974077224731445
    5. '[result' → logprob: -17.474077224731445
    6. '=result' → logprob: -18.099077224731445
    7. ' ' → logprob: -18.849077224731445
    8. ',result' → logprob: -19.099077224731445
    9. '$result' → logprob: -19.099077224731445
    10. ' ' → logprob: -19.849077224731445

Token 208: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5765257477760315
    2. '
' → logprob: -0.8265257477760315
    3. '    
' → logprob: -7.951525688171387
    4. '

' → logprob: -8.826525688171387
    5. '
' → logprob: -9.826525688171387
    6. '<|end|>' → logprob: -10.826525688171387
    7. 'return' → logprob: -12.576525688171387
    8. '  
' → logprob: -13.451525688171387
    9. '	return' → logprob: -13.576525688171387
    10. ' return' → logprob: -13.701525688171387

Token 209: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0434345081448555
    2. '
' → logprob: -3.1684346199035645
    3. '    
' → logprob: -7.7934346199035645
    4. 'return' → logprob: -12.293434143066406
    5. '       ' → logprob: -12.668434143066406
    6. '<|end|>' → logprob: -13.043434143066406
    7. '

' → logprob: -13.168434143066406
    8. '	return' → logprob: -13.168434143066406
    9. '        
' → logprob: -13.418434143066406
    10. '
' → logprob: -13.543434143066406

Token 210: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5766651034355164
    2. '   ' → logprob: -0.8266651034355164
    3. ' return' → logprob: -7.326664924621582
    4. ' ' → logprob: -10.326664924621582
    5. '
' → logprob: -10.951664924621582
    6. '  ' → logprob: -12.076664924621582
    7. '	return' → logprob: -12.201664924621582
    8. '    
' → logprob: -12.826664924621582
    9. 'wrap' → logprob: -14.076664924621582
    10. '@return' → logprob: -14.326664924621582

Token 211: ' wrapper' (ID: 26504)
  Prédit: 'wrapper'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wrapper' → logprob: -0.0019418458687141538
    2. ' wrapper' → logprob: -6.251941680908203
    3. 'wrap' → logprob: -11.376941680908203
    4. '(wrapper' → logprob: -13.501941680908203
    5. '_wrapper' → logprob: -15.626941680908203
    6. 'wrapped' → logprob: -16.251941680908203
    7. '.wrapper' → logprob: -16.501941680908203
    8. 'wr' → logprob: -16.626941680908203
    9. 'w' → logprob: -18.626941680908203
    10. '-wrapper' → logprob: -18.876941680908203

Token 212: '


' (ID: 2499)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -1.1028141975402832
    2. '
' → logprob: -1.2278141975402832
    3. 'def' → logprob: -1.4778141975402832
    4. '<|end|>' → logprob: -2.227814197540283
    5. '

' → logprob: -3.602814197540283
    6. '\n' → logprob: -5.477814197540283
    7. '#' → logprob: -6.727814197540283
    8. '<|end|>' → logprob: -6.977814197540283
    9. '@
' → logprob: -7.477814197540283
    10. '@return' → logprob: -7.602814197540283

Token 213: '@' (ID: 31)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.15264321863651276
    2. '@' → logprob: -2.0276432037353516
    3. 'class' → logprob: -4.652643203735352
    4. '@class' → logprob: -8.902643203735352
    5. '@dat' → logprob: -10.027643203735352
    6. 'de' → logprob: -10.277643203735352
    7. 'from' → logprob: -10.402643203735352
    8. '#' → logprob: -10.402643203735352
    9. 'd' → logprob: -10.652643203735352
    10. '@n' → logprob: -11.277643203735352

Token 214: 'measure' (ID: 72434)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.006731949746608734
    2. 'measure' → logprob: -5.006731986999512
    3. 'dat' → logprob: -11.381731986999512
    4. 'staticmethod' → logprob: -12.506731986999512
    5. 'read' → logprob: -14.131731986999512
    6. ' l' → logprob: -16.131731033325195
    7. 'wrap' → logprob: -16.381731033325195
    8. 'tim' → logprob: -16.506731033325195
    9. 'measurement' → logprob: -16.756731033325195
    10. '@' → logprob: -16.881731033325195

Token 215: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -3.4121114822482923e-06
    2. '_t' → logprob: -13.375003814697266
    3. 'def' → logprob: -14.250003814697266
    4. 'time' → logprob: -14.875003814697266
    5. '_timer' → logprob: -14.875003814697266
    6. '_tim' → logprob: -15.375003814697266
    7. '_times' → logprob: -17.250003814697266
    8. '_timeout' → logprob: -17.750003814697266
    9. '_execution' → logprob: -17.875003814697266
    10. '_runtime' → logprob: -18.750003814697266

Token 216: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03753181919455528
    2. '
' → logprob: -3.662531852722168
    3. '()
' → logprob: -4.662531852722168
    4. '()' → logprob: -6.537531852722168
    5. '(def' → logprob: -8.412531852722168
    6. '(' → logprob: -10.662531852722168
    7. '(
' → logprob: -11.162531852722168
    8. '\' → logprob: -12.162531852722168
    9. ' def' → logprob: -12.787531852722168
    10. '  
' → logprob: -13.537531852722168

Token 217: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: 0.0
    2. ' def' → logprob: -19.125
    3. '
' → logprob: -19.75
    4. 'de' → logprob: -20.625
    5. 'async' → logprob: -21.25
    6. 'class' → logprob: -22.125
    7. '-def' → logprob: -22.625
    8. '#' → logprob: -23.0
    9. '	def' → logprob: -23.25
    10. 'ndef' → logprob: -23.5

Token 218: ' solve' (ID: 17722)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.36844733357429504
    2. 'main' → logprob: -1.6184473037719727
    3. ' solve' → logprob: -2.9934473037719727
    4. 'solve' → logprob: -2.9934473037719727
    5. 'calculate' → logprob: -5.993447303771973
    6. 'example' → logprob: -6.368447303771973
    7. ' example' → logprob: -6.743447303771973
    8. ' calculate' → logprob: -6.993447303771973
    9. 'process' → logprob: -7.118447303771973
    10. 'some' → logprob: -7.243447303771973

Token 219: '_min' (ID: 15950)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -4.084206375409849e-05
    2. ' ():' → logprob: -10.375041007995605
    3. '():
' → logprob: -11.625041007995605
    4. '(' → logprob: -14.750041007995605
    5. '()' → logprob: -15.125041007995605
    6. '(*' → logprob: -18.50004005432129
    7. '(":' → logprob: -18.62504005432129
    8. '(:' → logprob: -19.00004005432129
    9. '):' → logprob: -19.00004005432129
    10. ':' → logprob: -19.25004005432129

Token 220: 'imum' (ID: 4556)
  Prédit: 'imum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imum' → logprob: -0.13141736388206482
    2. 'imize' → logprob: -3.6314172744750977
    3. '():' → logprob: -3.7564172744750977
    4. '_path' → logprob: -4.006417274475098
    5. 'imal' → logprob: -4.256417274475098
    6. '_cost' → logprob: -4.881417274475098
    7. '_sum' → logprob: -5.256417274475098
    8. '_cut' → logprob: -5.256417274475098
    9. '():
' → logprob: -5.756417274475098
    10. 'max' → logprob: -6.006417274475098

Token 221: '_rem' (ID: 42194)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.4812004566192627
    2. '_cost' → logprob: -2.2312004566192627
    3. '_path' → logprob: -2.8562004566192627
    4. '_difference' → logprob: -3.1062004566192627
    5. '_distance' → logprob: -3.2312004566192627
    6. '_cut' → logprob: -3.7312004566192627
    7. '_number' → logprob: -3.9812004566192627
    8. '_' → logprob: -4.356200218200684
    9. '_subset' → logprob: -4.731200218200684
    10. '_elements' → logprob: -5.106200218200684

Token 222: 'ov' (ID: 569)
  Prédit: 'ov'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ov' → logprob: -0.2725019156932831
    2. 'ove' → logprob: -1.8975019454956055
    3. 'oval' → logprob: -2.8975019454956055
    4. 'aining' → logprob: -3.7725019454956055
    5. 'ain' → logprob: -5.7725019454956055
    6. 'a' → logprob: -5.7725019454956055
    7. 'oved' → logprob: -6.2725019454956055
    8. 'oving' → logprob: -7.6475019454956055
    9. 'oves' → logprob: -7.7725019454956055
    10. 'ovable' → logprob: -8.147501945495605

Token 223: 'als' (ID: 1288)
  Prédit: 'ov'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ov' → logprob: -0.09146900475025177
    2. 'oval' → logprob: -3.2164690494537354
    3. 'als' → logprob: -3.2164690494537354
    4. 'al' → logprob: -5.216468811035156
    5. 'ove' → logprob: -6.716468811035156
    6. 'e' → logprob: -9.341468811035156
    7. 'o' → logprob: -9.716468811035156
    8. 'val' → logprob: -9.716468811035156
    9. 'oves' → logprob: -9.716468811035156
    10. 'ova' → logprob: -10.466468811035156

Token 224: '_for' (ID: 11903)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00999441184103489
    2. '(n' → logprob: -6.3849945068359375
    3. '(array' → logprob: -6.3849945068359375
    4. '(nums' → logprob: -6.6349945068359375
    5. '(arr' → logprob: -6.8849945068359375
    6. '(s' → logprob: -7.1349945068359375
    7. '(' → logprob: -7.2599945068359375
    8. '(a' → logprob: -7.5099945068359375
    9. '(numbers' → logprob: -7.8849945068359375
    10. ' ():' → logprob: -8.009994506835938

Token 225: '_sorted' (ID: 104993)
  Prédit: '_unique'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_unique' → logprob: -0.6096668243408203
    2. '_in' → logprob: -2.1096668243408203
    3. '_equal' → logprob: -2.8596668243408203
    4. '_bal' → logprob: -3.1096668243408203
    5. '_pal' → logprob: -3.4846668243408203
    6. '_str' → logprob: -3.6096668243408203
    7. '_dist' → logprob: -3.6096668243408203
    8. '_div' → logprob: -3.7346668243408203
    9. '_non' → logprob: -3.8596668243408203
    10. '_al' → logprob: -4.10966682434082

Token 226: '_sub' (ID: 11572)
  Prédit: '_array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_array' → logprob: -0.025361405685544014
    2. '_sequence' → logprob: -4.40036153793335
    3. '_list' → logprob: -5.02536153793335
    4. '():' → logprob: -5.15036153793335
    5. '()' → logprob: -9.025361061096191
    6. '_sub' → logprob: -9.400361061096191
    7. '_arrays' → logprob: -9.400361061096191
    8. '_arr' → logprob: -10.025361061096191
    9. 'array' → logprob: -10.400361061096191
    10. '_' → logprob: -12.025361061096191

Token 227: 'sequence' (ID: 47173)
  Prédit: 'sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -0.006645748391747475
    2. 'quence' → logprob: -5.256645679473877
    3. 'e' → logprob: -6.881645679473877
    4. 'array' → logprob: -8.381646156311035
    5. '
' → logprob: -10.131646156311035
    6. '```' → logprob: -10.631646156311035
    7. '[' → logprob: -10.881646156311035
    8. '``' → logprob: -11.631646156311035
    9. 'se' → logprob: -11.881646156311035
    10. '`' → logprob: -12.131646156311035

Token 228: '(array' (ID: 13176)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0019317318219691515
    2. '(array' → logprob: -7.251931667327881
    3. '(arr' → logprob: -7.876931667327881
    4. '():
' → logprob: -8.376932144165039
    5. '(' → logprob: -8.876932144165039
    6. ' ():' → logprob: -9.126932144165039
    7. '(nums' → logprob: -9.626932144165039
    8. '(a' → logprob: -9.751932144165039
    9. '(lst' → logprob: -10.001932144165039
    10. '(s' → logprob: -10.126932144165039

Token 229: '_size' (ID: 5044)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0006690711015835404
    2. ':' → logprob: -8.375669479370117
    3. '):
' → logprob: -8.500669479370117
    4. ',' → logprob: -8.500669479370117
    5. ' ):' → logprob: -11.125669479370117
    6. ')' → logprob: -12.000669479370117
    7. '[]):' → logprob: -13.000669479370117
    8. '):
' → logprob: -13.125669479370117
    9. ']:' → logprob: -13.750669479370117
    10. ':list' → logprob: -14.000669479370117

Token 230: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.337155355140567e-05
    2. ',array' → logprob: -10.625062942504883
    3. '):' → logprob: -10.875062942504883
    4. ' ,' → logprob: -11.250062942504883
    5. ',
' → logprob: -12.375062942504883
    6. ':' → logprob: -13.750062942504883
    7. ',a' → logprob: -15.250062942504883
    8. ',n' → logprob: -15.750062942504883
    9. ',int' → logprob: -16.000062942504883
    10. ',
' → logprob: -16.000062942504883

Token 231: ' permutation' (ID: 135200)
  Prédit: 'array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'array' → logprob: -0.175355464220047
    2. ' array' → logprob: -2.1753554344177246
    3. 'sequence' → logprob: -3.3003554344177246
    4. ' sequence' → logprob: -5.300355434417725
    5. 'arr' → logprob: -5.550355434417725
    6. 'numbers' → logprob: -7.425355434417725
    7. '   ' → logprob: -8.300355911254883
    8. ' arr' → logprob: -9.300355911254883
    9. 'values' → logprob: -9.425355911254883
    10. ' numbers' → logprob: -9.550355911254883

Token 232: '_sequence' (ID: 55606)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.013357268646359444
    2. '):
' → logprob: -4.513357162475586
    3. ',' → logprob: -6.263357162475586
    4. ' ):' → logprob: -8.888357162475586
    5. ')):' → logprob: -9.263357162475586
    6. '):
' → logprob: -10.013357162475586
    7. ')' → logprob: -10.263357162475586
    8. '_list' → logprob: -10.888357162475586
    9. '[]):' → logprob: -11.013357162475586
    10. ':' → logprob: -11.513357162475586

Token 233: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.08043181896209717
    2. ',' → logprob: -2.5804319381713867
    3. '):
' → logprob: -6.580431938171387
    4. ' ):' → logprob: -10.080431938171387
    5. ')' → logprob: -10.205431938171387
    6. ':' → logprob: -10.455431938171387
    7. '):
' → logprob: -11.330431938171387
    8. '   ' → logprob: -11.830431938171387
    9. ' ,' → logprob: -12.080431938171387
    10. '[]):' → logprob: -12.455431938171387

Token 234: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004770091734826565
    2. ':
' → logprob: -5.504770278930664
    3. '   ' → logprob: -7.629770278930664
    4. '):' → logprob: -9.129770278930664
    5. '():' → logprob: -10.754770278930664
    6. ',' → logprob: -10.879770278930664
    7. ':list' → logprob: -10.879770278930664
    8. ':return' → logprob: -11.254770278930664
    9. ' :' → logprob: -11.379770278930664
    10. '):
' → logprob: -12.504770278930664

Token 235: ' position' (ID: 4010)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.4877685010433197
    2. '   ' → logprob: -1.237768530845642
    3. ' dp' → logprob: -2.6127684116363525
    4. ' n' → logprob: -4.862768650054932
    5. 'n' → logprob: -4.862768650054932
    6. '#' → logprob: -6.737768650054932
    7. '
' → logprob: -7.362768650054932
    8. 'def' → logprob: -7.487768650054932
    9. 'sorted' → logprob: -7.487768650054932
    10. ' if' → logprob: -7.987768650054932

Token 236: '_by' (ID: 8214)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.01768461801111698
    2. '_map' → logprob: -4.642684459686279
    3. ' =' → logprob: -5.392684459686279
    4. '=' → logprob: -6.142684459686279
    5. '_' → logprob: -7.017684459686279
    6. '_s' → logprob: -8.642684936523438
    7. '_in' → logprob: -9.767684936523438
    8. '_mapping' → logprob: -11.142684936523438
    9. '_of' → logprob: -11.267684936523438
    10. '_indices' → logprob: -12.142684936523438

Token 237: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.9719071984291077
    2. ' =' → logprob: -1.096907138824463
    3. 'value' → logprob: -2.721907138824463
    4. '=' → logprob: -2.971907138824463
    5. '_element' → logprob: -2.971907138824463
    6. '_' → logprob: -3.596907138824463
    7. 'element' → logprob: -3.721907138824463
    8. '_val' → logprob: -3.721907138824463
    9. '_per' → logprob: -5.346907138824463
    10. '_number' → logprob: -5.346907138824463

Token 238: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868733048439026
    2. ' =' → logprob: -1.1368732452392578
    3. 's' → logprob: -14.386873245239258
    4. '[' → logprob: -14.386873245239258
    5. '={}' → logprob: -14.511873245239258
    6. ',' → logprob: -15.511873245239258
    7. '=[]' → logprob: -16.261873245239258
    8. '=[' → logprob: -16.886873245239258
    9. '   ' → logprob: -16.886873245239258
    10. ')' → logprob: -17.136873245239258

Token 239: ' [-' (ID: 20191)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.09128133207559586
    2. '{' → logprob: -2.5912814140319824
    3. '{}' → logprob: -4.591281414031982
    4. ' [' → logprob: -6.591281414031982
    5. 'dict' → logprob: -7.966281414031982
    6. '[-' → logprob: -8.216280937194824
    7. '[array' → logprob: -9.716280937194824
    8. '[p' → logprob: -10.591280937194824
    9. '[len' → logprob: -10.591280937194824
    10. ' {' → logprob: -11.091280937194824

Token 240: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '-' → logprob: -17.625
    3. 'math' → logprob: -18.125
    4. '2' → logprob: -18.375
    5. ' ' → logprob: -18.625
    6. '(' → logprob: -19.5
    7. '100' → logprob: -19.5
    8. '
' → logprob: -19.625
    9. '10' → logprob: -19.875
    10. 'float' → logprob: -20.0

Token 241: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.003731426317244768
    2. ' for' → logprob: -5.7537312507629395
    3. 'for' → logprob: -7.7537312507629395
    4. ']*' → logprob: -9.628731727600098
    5. ']*(' → logprob: -9.878731727600098
    6. ' ]' → logprob: -12.378731727600098
    7. ')' → logprob: -13.628731727600098
    8. '   ' → logprob: -15.003731727600098
    9. ',' → logprob: -15.128731727600098
    10. '	for' → logprob: -15.253731727600098

Token 242: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3285544812679291
    2. ' for' → logprob: -1.8285545110702515
    3. 'for' → logprob: -2.578554391860962
    4. '*' → logprob: -3.703554391860962
    5. ')' → logprob: -4.828554630279541
    6. ']*' → logprob: -5.328554630279541
    7. ' *' → logprob: -5.578554630279541
    8. ']*(' → logprob: -7.078554630279541
    9. '   ' → logprob: -7.703554630279541
    10. ',' → logprob: -8.203554153442383

Token 243: ' array' (ID: 2644)
  Prédit: '(array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(array' → logprob: -0.003048415994271636
    2. 'array' → logprob: -6.003048419952393
    3. '(len' → logprob: -7.878048419952393
    4. ' (' → logprob: -9.378047943115234
    5. '(' → logprob: -10.503047943115234
    6. '[array' → logprob: -10.628047943115234
    7. '(arr' → logprob: -10.753047943115234
    8. '(per' → logprob: -11.128047943115234
    9. 'len' → logprob: -12.003047943115234
    10. '(max' → logprob: -12.128047943115234

Token 244: '_size' (ID: 5044)
  Prédit: '_size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_size' → logprob: -2.935296834039036e-06
    2. '_' → logprob: -13.12500286102295
    3. '   ' → logprob: -15.00000286102295
    4. 'size' → logprob: -15.50000286102295
    5. '_SIZE' → logprob: -16.125003814697266
    6. '_s' → logprob: -16.875003814697266
    7. ' ' → logprob: -16.875003814697266
    8. '  ' → logprob: -17.625003814697266
    9. '_
' → logprob: -17.875003814697266
    10. '```' → logprob: -18.250003814697266

Token 245: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.53288733959198
    2. '   ' → logprob: -0.90788733959198
    3. 'position' → logprob: -5.0328874588012695
    4. 'for' → logprob: -6.9078874588012695
    5. 'positions' → logprob: -7.2828874588012695
    6. '    
' → logprob: -7.5328874588012695
    7. ' for' → logprob: -7.5328874588012695
    8. 'indices' → logprob: -9.28288745880127
    9. 'current' → logprob: -10.15788745880127
    10. 'def' → logprob: -10.28288745880127

Token 246: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.150157168507576
    2. 'for' → logprob: -2.5251572132110596
    3. ' for' → logprob: -3.4001572132110596
    4. '
' → logprob: -3.7751572132110596
    5. '<|end|>' → logprob: -6.4001569747924805
    6. ')' → logprob: -7.2751569747924805
    7. '	for' → logprob: -8.40015697479248
    8. '    
' → logprob: -8.77515697479248
    9. ' ' → logprob: -9.27515697479248
    10. ',' → logprob: -9.90015697479248

Token 247: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00010914575977949426
    2. ' for' → logprob: -9.25010871887207
    3. '   ' → logprob: -11.87510871887207
    4. 'current' → logprob: -12.37510871887207
    5. 'last' → logprob: -14.50010871887207
    6. 'previous' → logprob: -14.87510871887207
    7. 'prev' → logprob: -15.00010871887207
    8. '
' → logprob: -15.12510871887207
    9. 'fo' → logprob: -16.12510871887207
    10. 'position' → logprob: -16.37510871887207

Token 248: ' original' (ID: 4756)
  Prédit: ' index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' index' → logprob: -0.43601205945014954
    2. ' i' → logprob: -1.3110120296478271
    3. 'index' → logprob: -3.561012029647827
    4. 'i' → logprob: -3.936012029647827
    5. ' value' → logprob: -3.936012029647827
    6. ' idx' → logprob: -4.811012268066406
    7. ' current' → logprob: -5.186012268066406
    8. 'value' → logprob: -6.186012268066406
    9. 'idx' → logprob: -7.936012268066406
    10. 'current' → logprob: -9.186012268066406

Token 249: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.17001034319400787
    2. '_value' → logprob: -2.0450103282928467
    3. '_position' → logprob: -4.545010566711426
    4. ',' → logprob: -5.045010566711426
    5. 'index' → logprob: -5.045010566711426
    6. 'value' → logprob: -6.545010566711426
    7. '_,' → logprob: -6.920010566711426
    8. '_pos' → logprob: -8.420010566711426
    9. '_idx' → logprob: -8.920010566711426
    10. 'position' → logprob: -9.045010566711426

Token 250: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07477185130119324
    2. ' in' → logprob: -2.8247718811035156
    3. 'in' → logprob: -4.449771881103516
    4. ' ,' → logprob: -7.074771881103516
    5. ',value' → logprob: -9.449771881103516
    6. ',in' → logprob: -9.449771881103516
    7. ' ' → logprob: -11.449771881103516
    8. ',
' → logprob: -12.574771881103516
    9. ',i' → logprob: -12.699771881103516
    10. 'i' → logprob: -13.199771881103516

Token 251: ' value' (ID: 1432)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.2827607989311218
    2. ' value' → logprob: -1.4077608585357666
    3. 'element' → logprob: -8.157760620117188
    4. 'number' → logprob: -8.282760620117188
    5. 'original' → logprob: -8.532760620117188
    6. ' element' → logprob: -8.657760620117188
    7. ' original' → logprob: -9.157760620117188
    8. 'per' → logprob: -9.407760620117188
    9. 'val' → logprob: -9.657760620117188
    10. 'v' → logprob: -9.657760620117188

Token 252: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.14312776923179626
    2. 'in' → logprob: -2.018127679824829
    3. ',' → logprob: -7.768127918243408
    4. ' ' → logprob: -11.64312744140625
    5. '   ' → logprob: -12.76812744140625
    6. '_in' → logprob: -13.01812744140625
    7. '	in' → logprob: -13.14312744140625
    8. 's' → logprob: -13.26812744140625
    9. ' i' → logprob: -13.76812744140625
    10. 'n' → logprob: -13.76812744140625

Token 253: ' enumerate' (ID: 29671)
  Prédit: ' enumerate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enumerate' → logprob: -0.003177952254191041
    2. 'enumer' → logprob: -5.753178119659424
    3. '(en' → logprob: -16.128177642822266
    4. ' enumer' → logprob: -16.628177642822266
    5. ' enumeration' → logprob: -17.128177642822266
    6. ' en' → logprob: -17.378177642822266
    7. '.enumer' → logprob: -17.503177642822266
    8. 'Enumer' → logprob: -17.878177642822266
    9. ' enum' → logprob: -17.878177642822266
    10. ' range' → logprob: -19.003177642822266

Token 254: '(per' (ID: 96497)
  Prédit: '(per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(per' → logprob: -0.00034988581319339573
    2. 'per' → logprob: -8.250349998474121
    3. '(' → logprob: -9.500349998474121
    4. '(p' → logprob: -12.375349998474121
    5. ' permutation' → logprob: -12.500349998474121
    6. ' (' → logprob: -13.500349998474121
    7. '(permission' → logprob: -13.625349998474121
    8. '	per' → logprob: -13.750349998474121
    9. 'perm' → logprob: -14.875349998474121
    10. ')' → logprob: -15.000349998474121

Token 255: 'mutation' (ID: 92896)
  Prédit: 'mutation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mutation' → logprob: -0.281305193901062
    2. 'utation' → logprob: -1.406305193901062
    3. 't' → logprob: -10.531305313110352
    4. '```' → logprob: -10.781305313110352
    5. 'm' → logprob: -11.031305313110352
    6. '[' → logprob: -11.281305313110352
    7. 'ut' → logprob: -11.406305313110352
    8. 'r' → logprob: -11.656305313110352
    9. 'um' → logprob: -12.031305313110352
    10. '1' → logprob: -12.281305313110352

Token 256: '_sequence' (ID: 55606)
  Prédit: '_sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sequence' → logprob: -9.13388703338569e-06
    2. 'sequence' → logprob: -11.875009536743164
    3. '_' → logprob: -14.500009536743164
    4. ')' → logprob: -14.750009536743164
    5. '   ' → logprob: -15.375009536743164
    6. '):' → logprob: -15.625009536743164
    7. '):
' → logprob: -15.750009536743164
    8. '_size' → logprob: -16.000009536743164
    9. '_array' → logprob: -16.000009536743164
    10. ' sequence' → logprob: -16.000009536743164

Token 257: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1270722597837448
    2. '):
' → logprob: -2.127072334289551
    3. ':' → logprob: -9.25207233428955
    4. '):
' → logprob: -10.87707233428955
    5. ' ):' → logprob: -11.50207233428955
    6. '   ' → logprob: -11.62707233428955
    7. ')' → logprob: -12.37707233428955
    8. ':
' → logprob: -13.25207233428955
    9. ' ):
' → logprob: -13.37707233428955
    10. '):

' → logprob: -14.50207233428955

Token 258: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.029314156621694565
    2. ':' → logprob: -3.9043140411376953
    3. ':
' → logprob: -5.654314041137695
    4. '):
' → logprob: -5.904314041137695
    5. '):' → logprob: -7.279314041137695
    6. '   ' → logprob: -7.404314041137695
    7. ',' → logprob: -7.404314041137695
    8. ' position' → logprob: -8.904314041137695
    9. '[position' → logprob: -9.029314041137695
    10. 'position' → logprob: -9.154314041137695

Token 259: ' position' (ID: 4010)
  Prédit: ' position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' position' → logprob: -0.21522918343544006
    2. 'position' (adapté à ' position') → logprob: -1.7152291536331177
    3. '   ' → logprob: -4.465229034423828
    4. '       ' → logprob: -6.215229034423828
    5. '	position' → logprob: -8.840229034423828
    6. '    ' → logprob: -11.215229034423828
    7. ' ' → logprob: -11.465229034423828
    8. ' positions' → logprob: -11.590229034423828
    9. '[position' → logprob: -11.590229034423828
    10. 'pos' → logprob: -12.215229034423828

Token 260: '_by' (ID: 8214)
  Prédit: '_by'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_by' → logprob: -2.4868770196917467e-05
    2. '_b' → logprob: -10.750024795532227
    3. '_' → logprob: -13.875024795532227
    4. '=_' → logprob: -14.375024795532227
    5. '=' → logprob: -14.625024795532227
    6. ' =' → logprob: -15.250024795532227
    7. '[_' → logprob: -15.750024795532227
    8. ' _' → logprob: -15.875024795532227
    9. '_=' → logprob: -16.000024795532227
    10. 'By' → logprob: -16.000024795532227

Token 261: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.20145826041698456
    2. 'value' → logprob: -1.701458215713501
    3. ' value' → logprob: -10.701457977294922
    4. '_' → logprob: -11.076457977294922
    5. '[value' → logprob: -13.826457977294922
    6. 'position' → logprob: -14.076457977294922
    7. '"value' → logprob: -14.076457977294922
    8. 'valu' → logprob: -14.201457977294922
    9. 'alue' → logprob: -14.451457977294922
    10. ''value' → logprob: -14.576457977294922

Token 262: '[value' (ID: 96564)
  Prédit: '[value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[value' → logprob: -0.0007529280846938491
    2. '[' → logprob: -7.250752925872803
    3. '[val' → logprob: -10.375753402709961
    4. ' [' → logprob: -12.375753402709961
    5. '[v' → logprob: -13.625753402709961
    6. '[
' → logprob: -13.750753402709961
    7. '[position' → logprob: -14.125753402709961
    8. '[int' → logprob: -14.500753402709961
    9. '   ' → logprob: -14.625753402709961
    10. '=value' → logprob: -14.750753402709961

Token 263: ' -' (ID: 533)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00047142591211013496
    2. ']=' → logprob: -8.125471115112305
    3. ' ]' → logprob: -9.000471115112305
    4. '=' → logprob: -10.000471115112305
    5. ' =' → logprob: -12.750471115112305
    6. ')' → logprob: -13.000471115112305
    7. ']
' → logprob: -14.750471115112305
    8. ' ' → logprob: -15.375471115112305
    9. '
' → logprob: -15.625471115112305
    10. '[' → logprob: -16.125471115112305

Token 264: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00015920029545668513
    2. ' ' → logprob: -8.75015926361084
    3. '<|end|>' → logprob: -14.37515926361084
    4. '=' → logprob: -16.375158309936523
    5. ')' → logprob: -18.125158309936523
    6. '```' → logprob: -18.187658309936523
    7. ',' → logprob: -18.187658309936523
    8. '   ' → logprob: -18.187658309936523
    9. '
' → logprob: -18.750158309936523
    10. '0' → logprob: -19.000158309936523

Token 265: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4617256056226324e-05
    2. ' ' → logprob: -11.500014305114746
    3. '<|end|>' → logprob: -12.375014305114746
    4. '<|end|>' → logprob: -16.875015258789062
    5. '=' → logprob: -17.250015258789062
    6. ',' → logprob: -17.375015258789062
    7. '   ' → logprob: -17.812515258789062
    8. '```' → logprob: -18.062515258789062
    9. '...' → logprob: -18.437515258789062
    10. 'def' → logprob: -18.437515258789062

Token 266: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31361910700798035
    2. ']' → logprob: -2.0636191368103027
    3. ' =' → logprob: -2.0636191368103027
    4. ']=' → logprob: -4.438619136810303
    5. ')' → logprob: -5.813619136810303
    6. ')=' → logprob: -8.063618659973145
    7. ' ]' → logprob: -10.188618659973145
    8. 's' → logprob: -11.063618659973145
    9. ' ' → logprob: -11.188618659973145
    10. '<|end|>' → logprob: -11.813618659973145

Token 267: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04858805239200592
    2. ' =' → logprob: -3.0485880374908447
    3. '=index' → logprob: -15.673587799072266
    4. '=end' → logprob: -16.298587799072266
    5. '=int' → logprob: -16.923587799072266
    6. '=user' → logprob: -16.923587799072266
    7. '=i' → logprob: -17.048587799072266
    8. ')=' → logprob: -17.173587799072266
    9. ',' → logprob: -17.298587799072266
    10. ')' → logprob: -17.548587799072266

Token 268: ' original' (ID: 4756)
  Prédit: 'original'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'original' → logprob: -0.001170225441455841
    2. ' original' → logprob: -6.7511701583862305
    3. '(original' → logprob: -17.126171112060547
    4. ' ' → logprob: -18.001171112060547
    5. 'origin' → logprob: -19.251171112060547
    6. 'or' → logprob: -19.251171112060547
    7. '   ' → logprob: -19.376171112060547
    8. '.original' → logprob: -19.751171112060547
    9. '
' → logprob: -20.001171112060547
    10. 'orig' → logprob: -20.626171112060547

Token 269: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -3.650518920039758e-06
    2. '_' → logprob: -13.250003814697266
    3. 'index' → logprob: -13.250003814697266
    4. 'Index' → logprob: -18.000003814697266
    5. '_
' → logprob: -19.750003814697266
    6. ' index' → logprob: -19.875003814697266
    7. '_token' → logprob: -20.000003814697266
    8. '
' → logprob: -20.125003814697266
    9. '_INDEX' → logprob: -20.250003814697266
    10. '_indexes' → logprob: -20.375003814697266

Token 270: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4114115834236145
    2. '
' → logprob: -1.4114115238189697
    3. '    
' → logprob: -2.4114115238189697
    4. '

' → logprob: -6.536411762237549
    5. '
    
' → logprob: -7.411411762237549
    6. '        
' → logprob: -8.16141128540039
    7. 'sequence' → logprob: -8.28641128540039
    8. '   
' → logprob: -8.91141128540039
    9. 'dp' → logprob: -9.28641128540039
    10. ')' → logprob: -9.41141128540039

Token 271: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07276179641485214
    2. '
' → logprob: -2.9477617740631104
    3. '    
' → logprob: -4.3227620124816895
    4. 'dp' → logprob: -6.1977620124816895
    5. 'lis' → logprob: -7.1977620124816895
    6. 'def' → logprob: -8.322761535644531
    7. 'length' → logprob: -8.447761535644531
    8. ')' → logprob: -8.572761535644531
    9. 'sequence' → logprob: -8.697761535644531
    10. ' lis' → logprob: -9.322761535644531

Token 272: ' previous' (ID: 5880)
  Prédit: 'lis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lis' → logprob: -0.2468636929988861
    2. 'dp' → logprob: -1.8718637228012085
    3. 'in' → logprob: -3.746863603591919
    4. 'long' → logprob: -4.371863842010498
    5. 'sorted' → logprob: -4.621863842010498
    6. 'tails' → logprob: -4.871863842010498
    7. 'sub' → logprob: -5.246863842010498
    8. '#' → logprob: -6.496863842010498
    9. 'tail' → logprob: -6.871863842010498
    10. 'def' → logprob: -7.246863842010498

Token 273: '_position' (ID: 23739)
  Prédit: '_index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.10227172076702118
    2. '_position' → logprob: -2.727271795272827
    3. '_positions' → logprob: -4.977271556854248
    4. '_long' → logprob: -5.227271556854248
    5. '_indices' → logprob: -5.352271556854248
    6. '_l' → logprob: -5.727271556854248
    7. '_value' → logprob: -5.852271556854248
    8. '_pos' → logprob: -6.102271556854248
    9. '_' → logprob: -6.227271556854248
    10. '_length' → logprob: -7.102271556854248

Token 274: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04866627976298332
    2. '=' → logprob: -3.04866623878479
    3. ',' → logprob: -9.798666000366211
    4. '=-' → logprob: -11.298666000366211
    5. 's' → logprob: -12.298666000366211
    6. ' ' → logprob: -12.923666000366211
    7. '<|end|>' → logprob: -13.423666000366211
    8. '_' → logprob: -15.173666000366211
    9. '_index' → logprob: -15.298666000366211
    10. '   ' → logprob: -15.548666000366211

Token 275: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0002910102193709463
    2. ' -' → logprob: -8.375290870666504
    3. '-array' → logprob: -10.000290870666504
    4. '-position' → logprob: -11.625290870666504
    5. '-in' → logprob: -14.000290870666504
    6. '-m' → logprob: -14.000290870666504
    7. '-l' → logprob: -14.750290870666504
    8. '-n' → logprob: -14.750290870666504
    9. '-arr' → logprob: -14.750290870666504
    10. '-p' → logprob: -15.000290870666504

Token 276: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.676292231422849e-05
    2. 'math' → logprob: -11.250017166137695
    3. 'float' → logprob: -13.875017166137695
    4. '2' → logprob: -14.250017166137695
    5. '```' → logprob: -14.875017166137695
    6. '-' → logprob: -14.875017166137695
    7. '
' → logprob: -15.250017166137695
    8. 'sys' → logprob: -15.250017166137695
    9. '10' → logprob: -15.625017166137695
    10. '999' → logprob: -16.000017166137695

Token 277: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03006090596318245
    2. '   ' → logprob: -3.5300610065460205
    3. '    
' → logprob: -8.780060768127441
    4. '
' → logprob: -10.405060768127441
    5. 'for' → logprob: -11.155060768127441
    6. ',' → logprob: -11.155060768127441
    7. 'result' → logprob: -11.405060768127441
    8. 'count' → logprob: -11.530060768127441
    9. '<|end|>' → logprob: -11.655060768127441
    10. ' 
' → logprob: -11.780060768127441

Token 278: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0015364045975729823
    2. '
' → logprob: -7.0015363693237305
    3. ' for' → logprob: -8.00153636932373
    4. 'for' → logprob: -9.75153636932373
    5. ' longest' → logprob: -9.87653636932373
    6. ' length' → logprob: -10.00153636932373
    7. '    
' → logprob: -10.12653636932373
    8. ',' → logprob: -10.50153636932373
    9. ' and' → logprob: -10.75153636932373
    10. 'length' → logprob: -11.50153636932373

Token 279: ' max' (ID: 2999)
  Prédit: 'lis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lis' → logprob: -0.7044224143028259
    2. 'long' → logprob: -0.9544224143028259
    3. 'length' → logprob: -3.4544224739074707
    4. 'max' (adapté à ' max') → logprob: -3.9544224739074707
    5. 'count' → logprob: -3.9544224739074707
    6. 'rem' → logprob: -4.579422473907471
    7. 'dp' → logprob: -4.704422473907471
    8. 'in' → logprob: -4.704422473907471
    9. 'current' → logprob: -5.079422473907471
    10. 'valid' → logprob: -5.454422473907471

Token 280: '_in' (ID: 2267)
  Prédit: '_length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.0858493223786354
    2. '_l' → logprob: -2.5858492851257324
    3. '_in' → logprob: -6.085849285125732
    4. '_len' → logprob: -6.460849285125732
    5. '_chain' → logprob: -7.085849285125732
    6. '_sub' → logprob: -7.460849285125732
    7. '_' → logprob: -7.835849285125732
    8. '_long' → logprob: -8.08584976196289
    9. '_sequence' → logprob: -8.21084976196289
    10. 'length' → logprob: -9.08584976196289

Token 281: 'creasing' (ID: 57252)
  Prédit: 'creasing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'creasing' → logprob: -0.014478212222456932
    2. 'c' → logprob: -4.8894782066345215
    3. 'crease' → logprob: -5.1394782066345215
    4. 'crement' → logprob: -7.3894782066345215
    5. '
' → logprob: -9.63947868347168
    6. '_' → logprob: -10.01447868347168
    7. 'cluded' → logprob: -10.13947868347168
    8. 'cre' → logprob: -10.26447868347168
    9. 'clude' → logprob: -10.38947868347168
    10. '_length' → logprob: -10.76447868347168

Token 282: '_sequence' (ID: 55606)
  Prédit: '_sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sub' → logprob: -0.10467241704463959
    2. '_length' → logprob: -2.604672431945801
    3. '_sequence' → logprob: -3.979672431945801
    4. '_' → logprob: -5.104672431945801
    5. '_seq' → logprob: -8.9796724319458
    6. ' subse' → logprob: -9.1046724319458
    7. '_count' → logprob: -9.3546724319458
    8. 'sub' → logprob: -9.3546724319458
    9. '_index' → logprob: -9.4796724319458
    10. '_subset' → logprob: -9.8546724319458

Token 283: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.00857887789607048
    2. '_' → logprob: -5.258578777313232
    3. ' =' → logprob: -6.383578777313232
    4. '_len' → logprob: -6.633578777313232
    5. '=' → logprob: -8.13357925415039
    6. 'length' → logprob: -11.63357925415039
    7. ' ' → logprob: -11.63357925415039
    8. '_size' → logprob: -12.38357925415039
    9. ' length' → logprob: -12.38357925415039
    10. 'Length' → logprob: -12.38357925415039

Token 284: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029765412211418152
    2. '=' → logprob: -3.5297653675079346
    3. ' ' → logprob: -11.279765129089355
    4. ',' → logprob: -13.279765129089355
    5. ' =
' → logprob: -15.154765129089355
    6. '_' → logprob: -16.029766082763672
    7. '   ' → logprob: -16.654766082763672
    8. 's' → logprob: -16.654766082763672
    9. ' ' → logprob: -16.904766082763672
    10. '  ' → logprob: -17.154766082763672

Token 285: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.016320567578077316
    2. ' ' → logprob: -4.266320705413818
    3. '1' → logprob: -6.141320705413818
    4. '   ' → logprob: -13.64132022857666
    5. '  ' → logprob: -15.01632022857666
    6. ' ' → logprob: -15.20382022857666
    7. '-' → logprob: -15.76632022857666
    8. '=' → logprob: -16.141321182250977
    9. '۰' → logprob: -16.141321182250977
    10. ' -' → logprob: -16.703821182250977

Token 286: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001733855315251276
    2. '1' → logprob: -8.750173568725586
    3. ' ' → logprob: -11.125173568725586
    4. '   ' → logprob: -17.437673568725586
    5. '۰' → logprob: -17.625173568725586
    6. '```' → logprob: -17.687673568725586
    7. '-' → logprob: -18.562673568725586
    8. '  ' → logprob: -18.937673568725586
    9. '
' → logprob: -19.125173568725586
    10. '=' → logprob: -19.500173568725586

Token 287: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08076098561286926
    2. ' for' → logprob: -2.705760955810547
    3. 'for' → logprob: -4.830760955810547
    4. '
' → logprob: -6.205760955810547
    5. 'current' → logprob: -8.205760955810547
    6. '    
' → logprob: -8.580760955810547
    7. ' current' → logprob: -8.955760955810547
    8. '	for' → logprob: -10.205760955810547
    9. ',' → logprob: -10.705760955810547
    10. '  ' → logprob: -10.955760955810547

Token 288: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.410053551197052
    2. ' for' → logprob: -1.4100534915924072
    3. 'for' → logprob: -2.4100534915924072
    4. 'current' → logprob: -7.285053730010986
    5. ' current' → logprob: -7.660053730010986
    6. '
' → logprob: -7.785053730010986
    7. '	for' → logprob: -8.535053253173828
    8. ' ' → logprob: -8.660053253173828
    9. '    
' → logprob: -9.035053253173828
    10. '  ' → logprob: -9.035053253173828

Token 289: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' (adapté à ' current') → logprob: -0.28544551134109497
    2. 'for' → logprob: -1.4104454517364502
    3. 'temp' → logprob: -6.660445690155029
    4. 'dp' → logprob: -6.910445690155029
    5. 'count' → logprob: -7.785445690155029
    6. 'length' → logprob: -8.160445213317871
    7. 'curr' → logprob: -8.660445213317871
    8. 'long' → logprob: -8.785445213317871
    9. '   ' → logprob: -9.035445213317871
    10. 'counter' → logprob: -9.035445213317871

Token 290: '_in' (ID: 2267)
  Prédit: '_length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.329873651266098
    2. '_sequence' → logprob: -1.8298736810684204
    3. '_position' → logprob: -2.204873561859131
    4. '_' → logprob: -5.329873561859131
    5. '_count' → logprob: -6.079873561859131
    6. '_in' → logprob: -6.954873561859131
    7. '_index' → logprob: -7.079873561859131
    8. '_max' → logprob: -7.579873561859131
    9. '_pos' → logprob: -8.079874038696289
    10. '_increment' → logprob: -8.329874038696289

Token 291: 'creasing' (ID: 57252)
  Prédit: 'creasing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'creasing' → logprob: -0.0009728021104820073
    2. 'crease' → logprob: -8.000972747802734
    3. 'c' → logprob: -8.375972747802734
    4. 'crement' → logprob: -9.375972747802734
    5. 'dex' → logprob: -9.500972747802734
    6. '   ' → logprob: -9.500972747802734
    7. '_' → logprob: -10.375972747802734
    8. '
' → logprob: -11.125972747802734
    9. 'cre' → logprob: -11.125972747802734
    10. 'creased' → logprob: -11.375972747802734

Token 292: '_sequence' (ID: 55606)
  Prédit: '_sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sequence' → logprob: -0.010108540765941143
    2. '_length' → logprob: -4.635108470916748
    3. 'sequence' → logprob: -8.135108947753906
    4. '_' → logprob: -10.885108947753906
    5. '_position' → logprob: -11.135108947753906
    6. '_sequences' → logprob: -11.885108947753906
    7. '_count' → logprob: -12.635108947753906
    8. ' sequence' → logprob: -12.760108947753906
    9. '_list' → logprob: -12.885108947753906
    10. '_seq' → logprob: -13.385108947753906

Token 293: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.0035296366550028324
    2. '_' → logprob: -5.8785295486450195
    3. ' =' → logprob: -8.37852954864502
    4. '=' → logprob: -8.62852954864502
    5. 'length' → logprob: -9.12852954864502
    6. '_l' → logprob: -9.12852954864502
    7. '_len' → logprob: -10.37852954864502
    8. ' _' → logprob: -11.12852954864502
    9. '_lengths' → logprob: -11.25352954864502
    10. '_count' → logprob: -11.50352954864502

Token 294: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132631182670593
    2. '=' → logprob: -1.313263177871704
    3. ' ' → logprob: -13.688262939453125
    4. ' =
' → logprob: -16.813262939453125
    5. '   ' → logprob: -16.813262939453125
    6. ',' → logprob: -17.438262939453125
    7. ' +=' → logprob: -17.813262939453125
    8. '  ' → logprob: -17.938262939453125
    9. ' ' → logprob: -18.438262939453125
    10. '=
' → logprob: -18.813262939453125

Token 295: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005275380332022905
    2. ' ' → logprob: -5.880275249481201
    3. '1' → logprob: -6.005275249481201
    4. '   ' → logprob: -15.06777572631836
    5. '۰' → logprob: -15.19277572631836
    6. '<|end|>' → logprob: -15.75527572631836
    7. '  ' → logprob: -15.81777572631836
    8. '=' → logprob: -15.88027572631836
    9. '[' → logprob: -16.56777572631836
    10. '```' → logprob: -16.69277572631836

Token 296: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004917914047837257
    2. '1' → logprob: -7.625491619110107
    3. ' ' → logprob: -12.625492095947266
    4. '۰' → logprob: -15.000492095947266
    5. '   ' → logprob: -16.875492095947266
    6. '```' → logprob: -17.250492095947266
    7. '
' → logprob: -17.375492095947266
    8. '０' → logprob: -17.437992095947266
    9. '[' → logprob: -17.687992095947266
    10. '০' → logprob: -18.250492095947266

Token 297: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45808717608451843
    2. 'for' → logprob: -1.5830872058868408
    3. ' for' → logprob: -1.8330872058868408
    4. '
' → logprob: -6.708086967468262
    5. '    
' → logprob: -7.208086967468262
    6. '<|end|>' → logprob: -8.833086967468262
    7. '	for' → logprob: -9.583086967468262
    8. '  
' → logprob: -10.583086967468262
    9. '  ' → logprob: -11.083086967468262
    10. '   
' → logprob: -11.208086967468262

Token 298: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.048615410923957825
    2. '   ' → logprob: -3.0486154556274414
    3. ' for' → logprob: -10.548615455627441
    4. '    
' → logprob: -13.923615455627441
    5. '	for' → logprob: -14.298615455627441
    6. 'last' → logprob: -16.673614501953125
    7. '
' → logprob: -16.923614501953125
    8. 'previous' → logprob: -17.298614501953125
    9. 'prev' → logprob: -17.673614501953125
    10. 'fo' → logprob: -17.923614501953125

Token 299: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -5.438573680294212e-06
    2. '   ' → logprob: -12.250005722045898
    3. ' for' → logprob: -15.250005722045898
    4. 'previous' → logprob: -16.0000057220459
    5. 'last' → logprob: -16.1250057220459
    6. 'prev' → logprob: -16.2500057220459
    7. 'fo' → logprob: -17.2500057220459
    8. 'f' → logprob: -17.3750057220459
    9. '
' → logprob: -18.0000057220459
    10. '    
' → logprob: -18.5000057220459

Token 300: ' current' (ID: 2208)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.2626599371433258
    2. 'position' → logprob: -2.012660026550293
    3. 'pos' → logprob: -3.012660026550293
    4. 'i' → logprob: -3.262660026550293
    5. 'current' → logprob: -5.387660026550293
    6. 'index' → logprob: -5.512660026550293
    7. ' value' → logprob: -8.137660026550293
    8. 'idx' → logprob: -8.137660026550293
    9. 'val' → logprob: -8.637660026550293
    10. 'expected' → logprob: -9.137660026550293

Token 301: '_position' (ID: 23739)
  Prédit: '_position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_position' → logprob: -0.12914761900901794
    2. '_index' → logprob: -3.379147529602051
    3. '_value' → logprob: -3.629147529602051
    4. 'in' → logprob: -3.629147529602051
    5. 'position' → logprob: -4.629147529602051
    6. ' in' → logprob: -4.629147529602051
    7. '_pos' → logprob: -4.629147529602051
    8. '_' → logprob: -6.254147529602051
    9. '_in' → logprob: -7.004147529602051
    10. 'value' → logprob: -7.504147529602051

Token 302: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.31348058581352234
    2. 'in' → logprob: -1.3134806156158447
    3. ' ' → logprob: -9.438480377197266
    4. ',' → logprob: -9.813480377197266
    5. '   ' → logprob: -10.188480377197266
    6. '	in' → logprob: -11.063480377197266
    7. 'import' → logprob: -12.438480377197266
    8. 'In' → logprob: -12.438480377197266
    9. '_in' → logprob: -12.438480377197266
    10. '  ' → logprob: -12.688480377197266

Token 303: ' position' (ID: 4010)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.0705118402838707
    2. 'range' → logprob: -3.070511817932129
    3. ' position' → logprob: -3.945511817932129
    4. ' range' → logprob: -6.195511817932129
    5. 'sorted' → logprob: -9.195511817932129
    6. '   ' → logprob: -9.570511817932129
    7. 'pos' → logprob: -10.070511817932129
    8. ' ' → logprob: -10.320511817932129
    9. '	position' → logprob: -11.570511817932129
    10. '[position' → logprob: -11.695511817932129

Token 304: '_by' (ID: 8214)
  Prédit: '_by'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_by' → logprob: -6.825890159234405e-05
    2. '_of' → logprob: -10.750068664550781
    3. '_position' → logprob: -11.125068664550781
    4. 'By' → logprob: -11.625068664550781
    5. 's' → logprob: -12.000068664550781
    6. '_in' → logprob: -12.750068664550781
    7. 'by' → logprob: -12.750068664550781
    8. '(position' → logprob: -12.875068664550781
    9. 'position' → logprob: -13.625068664550781
    10. '   ' → logprob: -14.000068664550781

Token 305: '_value' (ID: 6734)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.15815599262714386
    2. 'range' → logprob: -2.283155918121338
    3. 'value' → logprob: -3.158155918121338
    4. '_value' → logprob: -6.783155918121338
    5. '_position' → logprob: -8.283156394958496
    6. ' position' → logprob: -8.658156394958496
    7. 'enumer' → logprob: -9.158156394958496
    8. ' range' → logprob: -10.033156394958496
    9. '(position' → logprob: -11.158156394958496
    10. '...' → logprob: -11.408156394958496

Token 306: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009899521246552467
    2. ':
' → logprob: -4.634899616241455
    3. ' :' → logprob: -9.134899139404297
    4. ' in' → logprob: -10.884899139404297
    5. '=' → logprob: -12.509899139404297
    6. ':

' → logprob: -12.759899139404297
    7. 'in' → logprob: -13.009899139404297
    8. ' :
' → logprob: -13.009899139404297
    9. '   ' → logprob: -13.259899139404297
    10. ',' → logprob: -14.259899139404297

Token 307: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012139255413785577
    2. ' if' → logprob: -6.751214027404785
    3. 'if' → logprob: -10.876214027404785
    4. '   ' → logprob: -11.501214027404785
    5. '    ' → logprob: -12.501214027404785
    6. ',' → logprob: -12.626214027404785
    7. '        
' → logprob: -13.126214027404785
    8. '<|end|>' → logprob: -13.751214027404785
    9. '      ' → logprob: -14.001214027404785
    10. '    ' → logprob: -14.501214027404785

Token 308: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.031669288873672485
    2. ' if' → logprob: -3.7816693782806396
    3. '       ' → logprob: -4.7816691398620605
    4. '   ' → logprob: -12.281669616699219
    5. ' ' → logprob: -13.656669616699219
    6. '	if' → logprob: -15.406669616699219
    7. '           ' → logprob: -16.65666961669922
    8. 'If' → logprob: -16.78166961669922
    9. '```' → logprob: -16.78166961669922
    10. 'i' → logprob: -17.65666961669922

Token 309: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.31326642632484436
    2. 'current' → logprob: -1.313266396522522
    3. ' ' → logprob: -13.68826675415039
    4. ' previous' → logprob: -14.06326675415039
    5. '   ' → logprob: -14.43826675415039
    6. '       ' → logprob: -14.81326675415039
    7. '           ' → logprob: -14.93826675415039
    8. '(current' → logprob: -15.06326675415039
    9. '	current' → logprob: -15.06326675415039
    10. 'previous' → logprob: -15.18826675415039

Token 310: '_position' (ID: 23739)
  Prédit: '_position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_position' → logprob: -0.00023798657639417797
    2. '_' → logprob: -8.500238418579102
    3. ' _' → logprob: -10.750238418579102
    4. 'position' → logprob: -12.125238418579102
    5. '_pos' → logprob: -12.375238418579102
    6. '_positions' → logprob: -14.000238418579102
    7. '   ' → logprob: -14.125238418579102
    8. ' ' → logprob: -14.500238418579102
    9. '_POSITION' → logprob: -15.500238418579102
    10. '_
' → logprob: -15.750238418579102

Token 311: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.38698697090148926
    2. ' >' → logprob: -1.1369869709014893
    3. ' ' → logprob: -9.26198673248291
    4. '   ' → logprob: -11.88698673248291
    5. '==' → logprob: -12.88698673248291
    6. '>
' → logprob: -13.38698673248291
    7. ' ' → logprob: -13.38698673248291
    8. ' >
' → logprob: -13.63698673248291
    9. ' ==' → logprob: -13.63698673248291
    10. '_' → logprob: -14.01198673248291

Token 312: ' previous' (ID: 5880)
  Prédit: 'previous'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'previous' → logprob: -0.00015979631280060858
    2. ' previous' → logprob: -8.750160217285156
    3. '(previous' → logprob: -13.875160217285156
    4. ' ' → logprob: -16.375160217285156
    5. '.previous' → logprob: -16.375160217285156
    6. '
' → logprob: -17.000160217285156
    7. '_previous' → logprob: -17.000160217285156
    8. '   ' → logprob: -17.750160217285156
    9. 'prev' → logprob: -17.875160217285156
    10. '`' → logprob: -18.875160217285156

Token 313: '_position' (ID: 23739)
  Prédit: '_position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_position' → logprob: -5.3358446166384965e-05
    2. '_' → logprob: -10.000053405761719
    3. 'position' → logprob: -12.000053405761719
    4. '_pos' → logprob: -13.750053405761719
    5. ' _' → logprob: -15.750053405761719
    6. '_POSITION' → logprob: -16.00005340576172
    7. '_Position' → logprob: -16.75005340576172
    8. ':' → logprob: -16.87505340576172
    9. '_positions' → logprob: -17.00005340576172
    10. ' position' → logprob: -17.37505340576172

Token 314: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.21335123479366302
    2. ':
' → logprob: -1.7133512496948242
    3. ' and' → logprob: -4.713351249694824
    4. '           ' → logprob: -6.463351249694824
    5. '       ' → logprob: -6.838351249694824
    6. 'and' → logprob: -9.838351249694824
    7. ':

' → logprob: -10.463351249694824
    8. '):
' → logprob: -10.588351249694824
    9. ' :' → logprob: -10.588351249694824
    10. '<|end|>' → logprob: -10.588351249694824

Token 315: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010394792072474957
    2. 'current' → logprob: -5.01039457321167
    3. ' current' → logprob: -5.63539457321167
    4. '       ' → logprob: -9.635395050048828
    5. ':
' → logprob: -11.885395050048828
    6. '```' → logprob: -12.010395050048828
    7. '
' → logprob: -12.510395050048828
    8. ',current' → logprob: -12.635395050048828
    9. '   ' → logprob: -12.760395050048828
    10. ',' → logprob: -13.260395050048828

Token 316: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' (adapté à ' current') → logprob: -0.2137334942817688
    2. ' current' → logprob: -1.963733434677124
    3. '           ' → logprob: -2.963733434677124
    4. '       ' → logprob: -8.088733673095703
    5. '               ' → logprob: -9.463733673095703
    6. '   ' → logprob: -9.588733673095703
    7. '	current' → logprob: -11.213733673095703
    8. ' ' → logprob: -13.213733673095703
    9. '_current' → logprob: -13.213733673095703
    10. '
' → logprob: -13.463733673095703

Token 317: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -3.8889261304575484e-06
    2. '_' → logprob: -13.625003814697266
    3. '_position' → logprob: -14.000003814697266
    4. ' _' → logprob: -14.750003814697266
    5. '_increment' → logprob: -15.000003814697266
    6. '_current' → logprob: -15.625003814697266
    7. '_positions' → logprob: -15.875003814697266
    8. 'Increasing' → logprob: -16.500003814697266
    9. '_length' → logprob: -16.625003814697266
    10. '_s' → logprob: -17.000003814697266

Token 318: 'creasing' (ID: 57252)
  Prédit: 'creasing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'creasing' → logprob: -0.001728848903439939
    2. 'in' → logprob: -7.0017290115356445
    3. 'current' → logprob: -7.8767290115356445
    4. 'cre' → logprob: -9.251729011535645
    5. '_in' → logprob: -9.751729011535645
    6. '_cre' → logprob: -10.126729011535645
    7. 'sequence' → logprob: -10.376729011535645
    8. '```' → logprob: -10.376729011535645
    9. 'creating' → logprob: -10.751729011535645
    10. '   ' → logprob: -11.126729011535645

Token 319: '_sequence' (ID: 55606)
  Prédit: '_sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sequence' → logprob: -0.004080062732100487
    2. 'sequence' → logprob: -5.504080295562744
    3. ' sequence' → logprob: -14.129079818725586
    4. 'Sequence' → logprob: -14.754079818725586
    5. '_' → logprob: -16.004079818725586
    6. 'sequ' → logprob: -16.254079818725586
    7. '_length' → logprob: -16.754079818725586
    8. '
' → logprob: -16.879079818725586
    9. '_sequences' → logprob: -17.504079818725586
    10. 'current' → logprob: -17.504079818725586

Token 320: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.0003559615579433739
    2. '+=' → logprob: -8.25035572052002
    3. 'length' → logprob: -10.37535572052002
    4. ' +=' → logprob: -10.87535572052002
    5. '_' → logprob: -11.12535572052002
    6. '_l' → logprob: -11.37535572052002
    7. '=' → logprob: -12.25035572052002
    8. '+' → logprob: -12.75035572052002
    9. '   ' → logprob: -13.12535572052002
    10. '
' → logprob: -13.37535572052002

Token 321: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.575957715511322
    2. '+=' → logprob: -0.825957715511322
    3. '=' → logprob: -11.325957298278809
    4. '   ' → logprob: -12.700957298278809
    5. ']+=' → logprob: -13.450957298278809
    6. ' =' → logprob: -14.325957298278809
    7. ' ' → logprob: -15.075957298278809
    8. '           ' → logprob: -15.700957298278809
    9. '       ' → logprob: -15.950957298278809
    10. '    ' → logprob: -15.950957298278809

Token 322: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00029613598599098623
    2. ' ' → logprob: -8.125296592712402
    3. '```' → logprob: -17.000295639038086
    4. '   ' → logprob: -17.125295639038086
    5. '<|end|>' → logprob: -17.500295639038086
    6. '
' → logprob: -18.125295639038086
    7. ' ' → logprob: -19.250295639038086
    8. '0' → logprob: -19.625295639038086
    9. '۱' → logprob: -19.687795639038086
    10. '  ' → logprob: -20.000295639038086

Token 323: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. '```' → logprob: -19.37500762939453
    4. '   ' → logprob: -19.50000762939453
    5. '<|end|>' → logprob: -19.87500762939453
    6. '
' → logprob: -19.87500762939453
    7. 'current' → logprob: -20.87500762939453
    8. '0' → logprob: -22.06250762939453
    9. '۱' → logprob: -22.12500762939453
    10. '=' → logprob: -22.12500762939453

Token 324: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7578595280647278
    2. '           ' → logprob: -1.132859468460083
    3. '
' → logprob: -2.257859468460083
    4. ' previous' → logprob: -2.382859468460083
    5. 'previous' → logprob: -4.632859706878662
    6. ' else' → logprob: -7.132859706878662
    7. 'else' → logprob: -7.507859706878662
    8. '_previous' → logprob: -7.507859706878662
    9. '.previous' → logprob: -9.007859230041504
    10. '(previous' → logprob: -9.132859230041504

Token 325: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.27985984086990356
    2. '           ' → logprob: -1.6548597812652588
    3. 'previous' → logprob: -3.279859781265259
    4. ' previous' → logprob: -4.779860019683838
    5. 'else' → logprob: -5.404860019683838
    6. '
' → logprob: -6.654860019683838
    7. 'current' → logprob: -8.02985954284668
    8. ' else' → logprob: -8.02985954284668
    9. '_previous' → logprob: -9.15485954284668
    10. '   ' → logprob: -9.52985954284668

Token 326: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.4788273274898529
    2. '       ' → logprob: -1.3538273572921753
    3. ' else' → logprob: -2.1038272380828857
    4. '<|end|>' → logprob: -9.728827476501465
    5. '   ' → logprob: -10.103827476501465
    6. '	else' → logprob: -10.228827476501465
    7. '           ' → logprob: -10.853827476501465
    8. 'previous' → logprob: -11.103827476501465
    9. 'elif' → logprob: -11.103827476501465
    10. '_else' → logprob: -11.228827476501465

Token 327: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6223047375679016
    2. 'current' → logprob: -1.4973046779632568
    3. ':
' → logprob: -1.7473046779632568
    4. '       ' → logprob: -3.622304677963257
    5. ' current' → logprob: -3.997304677963257
    6. ':' → logprob: -3.997304677963257
    7. '_current' → logprob: -7.122304916381836
    8. ',' → logprob: -7.997304916381836
    9. 'Current' → logprob: -9.122304916381836
    10. '   ' → logprob: -9.372304916381836

Token 328: '           ' (ID: 352)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.4252585172653198
    2. '       ' → logprob: -1.4252585172653198
    3. '           ' → logprob: -2.5502586364746094
    4. ' current' → logprob: -3.9252586364746094
    5. 'max' → logprob: -4.925258636474609
    6. '   ' → logprob: -7.925258636474609
    7. '
' → logprob: -8.30025863647461
    8. ' max' → logprob: -8.55025863647461
    9. '```' → logprob: -10.92525863647461
    10. '{
' → logprob: -11.05025863647461

Token 329: ' current' (ID: 2208)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.06082328408956528
    2. 'current' (adapté à ' current') → logprob: -3.1858232021331787
    3. ' max' → logprob: -4.185823440551758
    4. '           ' → logprob: -6.935823440551758
    5. ' current' → logprob: -7.310823440551758
    6. 'if' → logprob: -7.685823440551758
    7. '       ' → logprob: -8.685823440551758
    8. '   ' → logprob: -9.560823440551758
    9. ' if' → logprob: -10.185823440551758
    10. 'previous' → logprob: -10.435823440551758

Token 330: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -4.60414821645827e-06
    2. '_position' → logprob: -13.250004768371582
    3. 'in' → logprob: -13.750004768371582
    4. '_' → logprob: -13.750004768371582
    5. 'Increasing' → logprob: -16.125003814697266
    6. '_positions' → logprob: -16.750003814697266
    7. '_increment' → logprob: -16.750003814697266
    8. '
' → logprob: -16.750003814697266
    9. '_current' → logprob: -16.875003814697266
    10. '_i' → logprob: -17.250003814697266

Token 331: 'creasing' (ID: 57252)
  Prédit: 'creasing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'creasing' → logprob: -0.0007587654399685562
    2. 'in' → logprob: -8.12575912475586
    3. '_in' → logprob: -8.37575912475586
    4. 'cre' → logprob: -9.12575912475586
    5. 're' → logprob: -9.75075912475586
    6. '_cre' → logprob: -11.00075912475586
    7. 'c' → logprob: -11.75075912475586
    8. '_re' → logprob: -12.00075912475586
    9. '_' → logprob: -12.25075912475586
    10. '```' → logprob: -12.25075912475586

Token 332: '_sequence' (ID: 55606)
  Prédit: '_sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sequence' → logprob: -0.006741304416209459
    2. 'sequence' → logprob: -5.006741523742676
    3. '_length' → logprob: -10.631741523742676
    4. ' sequence' → logprob: -14.006741523742676
    5. 'Sequence' → logprob: -14.506741523742676
    6. 'length' → logprob: -15.131741523742676
    7. '_sequences' → logprob: -15.631741523742676
    8. 'sequ' → logprob: -17.75674057006836
    9. 'seq' → logprob: -18.00674057006836
    10. '_position' → logprob: -18.25674057006836

Token 333: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.00022642381372861564
    2. 'length' → logprob: -8.500226020812988
    3. '=' → logprob: -11.125226020812988
    4. 'ength' → logprob: -11.875226020812988
    5. ' =' → logprob: -14.625226020812988
    6. '_lengths' → logprob: -15.375226020812988
    7. '_l' → logprob: -15.500226020812988
    8. 'Length' → logprob: -16.125226974487305
    9. '_LENGTH' → logprob: -16.375226974487305
    10. '_' → logprob: -17.125226974487305

Token 334: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07888989895582199
    2. ' =' → logprob: -2.578889846801758
    3. ' ' → logprob: -17.078889846801758
    4. '           ' → logprob: -17.328889846801758
    5. '   ' → logprob: -17.828889846801758
    6. '       ' → logprob: -17.828889846801758
    7. '=
' → logprob: -18.078889846801758
    8. ',' → logprob: -18.453889846801758
    9. '=max' → logprob: -18.578889846801758
    10. '=int' → logprob: -18.828889846801758

Token 335: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.4391956685576588e-05
    2. ' ' → logprob: -10.625024795532227
    3. '   ' → logprob: -16.750024795532227
    4. '0' → logprob: -18.625024795532227
    5. '       ' → logprob: -20.625024795532227
    6. '<|end|>' → logprob: -20.875024795532227
    7. '```' → logprob: -20.875024795532227
    8. '  ' → logprob: -21.250024795532227
    9. '
' → logprob: -22.187524795532227
    10. '۱' → logprob: -22.437524795532227

Token 336: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.531315314830863e-06
    2. ' ' → logprob: -12.625003814697266
    3. '0' → logprob: -15.750003814697266
    4. 'current' → logprob: -18.625003814697266
    5. '   ' → logprob: -18.750003814697266
    6. '```' → logprob: -20.187503814697266
    7. 'max' → logprob: -21.062503814697266
    8. '' → logprob: -21.187503814697266
    9. '۱' → logprob: -21.500003814697266
    10. 'reset' → logprob: -21.562503814697266

Token 337: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0030018275137990713
    2. 'previous' → logprob: -6.378001689910889
    3. '
' → logprob: -7.003001689910889
    4. ' previous' → logprob: -8.003002166748047
    5. '   ' → logprob: -10.503002166748047
    6. '_previous' → logprob: -12.128002166748047
    7. '           ' → logprob: -12.378002166748047
    8. '.previous' → logprob: -12.503002166748047
    9. '(previous' → logprob: -12.628002166748047
    10. '        
' → logprob: -12.878002166748047

Token 338: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0050592985935509205
    2. 'previous' → logprob: -5.630059242248535
    3. ' previous' → logprob: -6.630059242248535
    4. '   ' → logprob: -9.130059242248535
    5. '
' → logprob: -11.130059242248535
    6. '           ' → logprob: -12.255059242248535
    7. 'prev' → logprob: -12.880059242248535
    8. '_previous' → logprob: -12.880059242248535
    9. '.previous' → logprob: -13.380059242248535
    10. '<|end|>' → logprob: -13.755059242248535

Token 339: ' max' (ID: 2999)
  Prédit: 'previous'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'previous' → logprob: -0.03842517361044884
    2. '       ' → logprob: -3.2884252071380615
    3. ' previous' → logprob: -8.03842544555664
    4. '   ' → logprob: -10.03842544555664
    5. 'if' → logprob: -11.53842544555664
    6. 'prev' → logprob: -12.78842544555664
    7. '           ' → logprob: -12.78842544555664
    8. '
' → logprob: -14.41342544555664
    9. '.previous' → logprob: -14.78842544555664
    10. '     ' → logprob: -15.78842544555664

Token 340: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -4.668304245569743e-05
    2. '_' → logprob: -10.000046730041504
    3. '_previous' → logprob: -14.875046730041504
    4. 'In' → logprob: -15.625046730041504
    5. '_current' → logprob: -15.750046730041504
    6. 'in' → logprob: -16.000045776367188
    7. '_possible' → logprob: -16.875045776367188
    8. '_max' → logprob: -17.125045776367188
    9. '_for' → logprob: -17.375045776367188
    10. '_user' → logprob: -17.625045776367188

Token 341: 'creasing' (ID: 57252)
  Prédit: 'creasing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'creasing' → logprob: -0.054910045117139816
    2. '_in' → logprob: -3.0549099445343018
    3. 'in' → logprob: -5.179910182952881
    4. 'asing' → logprob: -9.054909706115723
    5. '```' → logprob: -9.429909706115723
    6. '_re' → logprob: -9.554909706115723
    7. 're' → logprob: -9.554909706115723
    8. 'sequence' → logprob: -9.929909706115723
    9. 'max' → logprob: -10.179909706115723
    10. 'cre' → logprob: -10.304909706115723

Token 342: '_sequence' (ID: 55606)
  Prédit: '_sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sequence' → logprob: -0.004082674626260996
    2. 'sequence' → logprob: -5.504082679748535
    3. ' sequence' → logprob: -13.254082679748535
    4. '_sequences' → logprob: -13.504082679748535
    5. 'Sequence' → logprob: -14.004082679748535
    6. '_' → logprob: -16.12908172607422
    7. '_SEQUENCE' → logprob: -17.12908172607422
    8. 'sequ' → logprob: -17.75408172607422
    9. '_seq' → logprob: -18.12908172607422
    10. '_s' → logprob: -18.37908172607422

Token 343: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -3.6312321753939614e-05
    2. 'length' → logprob: -10.250036239624023
    3. 'ength' → logprob: -14.125036239624023
    4. 'Length' → logprob: -16.125036239624023
    5. '       ' → logprob: -17.750036239624023
    6. '_LENGTH' → logprob: -18.000036239624023
    7. '   ' → logprob: -18.625036239624023
    8. ' length' → logprob: -19.625036239624023
    9. '```' → logprob: -19.625036239624023
    10. '=' → logprob: -19.875036239624023

Token 344: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1603332906961441
    2. ' =' → logprob: -1.910333275794983
    3. '=max' → logprob: -9.160333633422852
    4. 'max' → logprob: -12.535333633422852
    5. ' max' → logprob: -15.285333633422852
    6. ',max' → logprob: -16.66033363342285
    7. '   ' → logprob: -16.78533363342285
    8. ',' → logprob: -17.03533363342285
    9. ' ' → logprob: -17.53533363342285
    10. '=
' → logprob: -18.28533363342285

Token 345: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.16023123264312744
    2. 'max' → logprob: -1.9102312326431274
    3. '	max' → logprob: -12.535231590270996
    4. '(max' → logprob: -13.785231590270996
    5. '       ' → logprob: -14.160231590270996
    6. ' current' → logprob: -14.535231590270996
    7. '           ' → logprob: -15.535231590270996
    8. '   ' → logprob: -15.660231590270996
    9. '_max' → logprob: -15.785231590270996
    10. '[max' → logprob: -15.910231590270996

Token 346: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.0015304554253816605
    2. '(' → logprob: -6.501530647277832
    3. 'max' → logprob: -10.626530647277832
    4. '(
' → logprob: -12.626530647277832
    5. '(current' → logprob: -15.251530647277832
    6. ' max' → logprob: -16.251529693603516
    7. '(previous' → logprob: -16.876529693603516
    8. '=max' → logprob: -17.126529693603516
    9. '	max' → logprob: -17.376529693603516
    10. '[max' → logprob: -17.626529693603516

Token 347: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -2.7491250875755213e-05
    2. 'max' → logprob: -11.250027656555176
    3. '(max' → logprob: -11.625027656555176
    4. '_max' → logprob: -13.000027656555176
    5. 'in' → logprob: -13.625027656555176
    6. '_current' → logprob: -14.625027656555176
    7. '(current' → logprob: -14.750027656555176
    8. 'current' → logprob: -15.000027656555176
    9. '(' → logprob: -15.500027656555176
    10. 'In' → logprob: -15.875027656555176

Token 348: 'creasing' (ID: 57252)
  Prédit: 'creasing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'creasing' → logprob: -0.024735448881983757
    2. '_in' → logprob: -4.149735450744629
    3. 'in' → logprob: -5.024735450744629
    4. 'cre' → logprob: -7.649735450744629
    5. 'asing' → logprob: -7.899735450744629
    6. '```' → logprob: -8.024735450744629
    7. 'current' → logprob: -8.774735450744629
    8. 'max' → logprob: -8.774735450744629
    9. 're' → logprob: -9.149735450744629
    10. 'Increasing' → logprob: -9.524735450744629

Token 349: '_sequence' (ID: 55606)
  Prédit: '_sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sequence' → logprob: -0.001873666769824922
    2. 'sequence' → logprob: -6.37687349319458
    3. 'current' → logprob: -8.751873970031738
    4. 'max' → logprob: -11.876873970031738
    5. 'Sequence' → logprob: -12.751873970031738
    6. '_sequences' → logprob: -14.126873970031738
    7. '_' → logprob: -15.001873970031738
    8. '
' → logprob: -15.251873970031738
    9. ' sequence' → logprob: -15.376873970031738
    10. '   ' → logprob: -15.501873970031738

Token 350: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.0004396095173433423
    2. 'length' → logprob: -7.750439643859863
    3. 'max' → logprob: -12.000439643859863
    4. 'Length' → logprob: -13.375439643859863
    5. 'current' → logprob: -14.250439643859863
    6. 'ength' → logprob: -15.500439643859863
    7. '_LENGTH' → logprob: -16.750438690185547
    8. '_l' → logprob: -17.000438690185547
    9. '_len' → logprob: -17.000438690185547
    10. '   ' → logprob: -17.250438690185547

Token 351: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06242001801729202
    2. ',current' → logprob: -2.812420129776001
    3. 'current' → logprob: -7.812419891357422
    4. ',
' → logprob: -10.562419891357422
    5. ' ,' → logprob: -11.312419891357422
    6. ' current' → logprob: -11.687419891357422
    7. ',c' → logprob: -15.187419891357422
    8. '(current' → logprob: -15.687419891357422
    9. '[current' → logprob: -15.812419891357422
    10. '   ' → logprob: -15.937419891357422

Token 352: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.061967797577381134
    2. ' current' → logprob: -2.8119678497314453
    3. '	current' → logprob: -16.811967849731445
    4. '$current' → logprob: -17.186967849731445
    5. '           ' → logprob: -17.686967849731445
    6. '   ' → logprob: -17.936967849731445
    7. '_current' → logprob: -18.311967849731445
    8. '(current' → logprob: -18.561967849731445
    9. '[current' → logprob: -19.061967849731445
    10. '.current' → logprob: -19.311967849731445

Token 353: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -4.961759259458631e-06
    2. '_' → logprob: -13.375004768371582
    3. 'in' → logprob: -13.875004768371582
    4. '_current' → logprob: -14.375004768371582
    5. '_position' → logprob: -14.625004768371582
    6. 'Increasing' → logprob: -15.125004768371582
    7. '_sequence' → logprob: -15.625004768371582
    8. '```' → logprob: -15.875004768371582
    9. '_i' → logprob: -16.0000057220459
    10. '
' → logprob: -16.7500057220459

Token 354: 'creasing' (ID: 57252)
  Prédit: 'creasing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'creasing' → logprob: -0.0008298786706291139
    2. 'in' → logprob: -7.750829696655273
    3. '_in' → logprob: -8.000829696655273
    4. '_sequence' → logprob: -11.250829696655273
    5. 'Increasing' → logprob: -11.625829696655273
    6. 'cre' → logprob: -11.625829696655273
    7. 'sequence' → logprob: -12.125829696655273
    8. '_cre' → logprob: -12.125829696655273
    9. '_' → logprob: -12.375829696655273
    10. '```' → logprob: -12.625829696655273

Token 355: '_sequence' (ID: 55606)
  Prédit: '_sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sequence' → logprob: -0.12693051993846893
    2. 'sequence' → logprob: -2.1269304752349854
    3. 'Sequence' → logprob: -14.126930236816406
    4. ' sequence' → logprob: -14.251930236816406
    5. '_length' → logprob: -15.376930236816406
    6. 'sequ' → logprob: -15.626930236816406
    7. 'seq' → logprob: -16.001930236816406
    8. '
' → logprob: -16.626930236816406
    9. 'length' → logprob: -16.751930236816406
    10. 'quence' → logprob: -16.876930236816406

Token 356: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.0003386806638445705
    2. 'length' → logprob: -8.000338554382324
    3. 'ength' → logprob: -12.875338554382324
    4. 'Length' → logprob: -14.750338554382324
    5. '_l' → logprob: -17.25033950805664
    6. '_len' → logprob: -17.50033950805664
    7. '_lengths' → logprob: -17.50033950805664
    8. '_LENGTH' → logprob: -17.75033950805664
    9. '   ' → logprob: -17.87533950805664
    10. ')' → logprob: -17.87533950805664

Token 357: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0037492483388632536
    2. '
' → logprob: -7.128749370574951
    3. ' previous' → logprob: -7.128749370574951
    4. 'previous' → logprob: -7.253749370574951
    5. ')
' → logprob: -7.503749370574951
    6. ')' → logprob: -7.753749370574951
    7. ',' → logprob: -8.253748893737793
    8. '   ' → logprob: -8.878748893737793
    9. '<|end|>' → logprob: -11.253748893737793
    10. '        
' → logprob: -11.753748893737793

Token 358: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5609169602394104
    2. 'previous' → logprob: -1.3109169006347656
    3. '   ' → logprob: -2.3109169006347656
    4. ' previous' → logprob: -2.8109169006347656
    5. '
' → logprob: -8.435916900634766
    6. '_previous' → logprob: -9.185916900634766
    7. '(previous' → logprob: -10.060916900634766
    8. 'prev' → logprob: -10.935916900634766
    9. '.previous' → logprob: -11.310916900634766
    10. '        
' → logprob: -12.185916900634766

Token 359: ' previous' (ID: 5880)
  Prédit: 'previous'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'previous' (adapté à ' previous') → logprob: -0.397205650806427
    2. '       ' → logprob: -1.6472055912017822
    3. ' previous' → logprob: -2.0222055912017822
    4. '   ' → logprob: -5.897205829620361
    5. 'prev' → logprob: -10.397205352783203
    6. ' ' → logprob: -10.897205352783203
    7. '.previous' → logprob: -11.397205352783203
    8. '
' → logprob: -11.772205352783203
    9. '_previous' → logprob: -11.772205352783203
    10. '(previous' → logprob: -11.897205352783203

Token 360: '_position' (ID: 23739)
  Prédit: '_position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_position' → logprob: -2.248469718324486e-05
    2. '_' → logprob: -10.875022888183594
    3. '_pos' → logprob: -12.875022888183594
    4. '_positions' → logprob: -14.250022888183594
    5. ' _' → logprob: -16.250022888183594
    6. '_previous' → logprob: -16.875022888183594
    7. '_Position' → logprob: -17.125022888183594
    8. '_POSITION' → logprob: -17.625022888183594
    9. 'position' → logprob: -17.875022888183594
    10. '=' → logprob: -18.750022888183594

Token 361: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00317783304490149
    2. ' =' → logprob: -5.753177642822266
    3. '=current' → logprob: -16.628177642822266
    4. ',' → logprob: -19.753177642822266
    5. '=user' → logprob: -19.753177642822266
    6. '＝' → logprob: -19.878177642822266
    7. '=}' → logprob: -19.878177642822266
    8. '=
' → logprob: -19.878177642822266
    9. ' ' → logprob: -20.628177642822266
    10. '=

' → logprob: -20.753177642822266

Token 362: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.023245595395565033
    2. ' current' → logprob: -3.7732455730438232
    3. '$current' → logprob: -16.148244857788086
    4. '	current' → logprob: -16.898244857788086
    5. '_current' → logprob: -18.148244857788086
    6. '[current' → logprob: -19.523244857788086
    7. 'c' → logprob: -19.648244857788086
    8. 'Current' → logprob: -20.273244857788086
    9. 'cur' → logprob: -20.398244857788086
    10. '=current' → logprob: -20.523244857788086

Token 363: '_position' (ID: 23739)
  Prédit: '_position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_position' → logprob: -5.200166469876422e-06
    2. '_' → logprob: -12.375004768371582
    3. '_pos' → logprob: -14.250004768371582
    4. ' _' → logprob: -15.375004768371582
    5. 'position' → logprob: -16.8750057220459
    6. '_positions' → logprob: -18.1250057220459
    7. '_POSITION' → logprob: -18.1250057220459
    8. '_Position' → logprob: -18.8750057220459
    9. '_current' → logprob: -19.2500057220459
    10. 'Position' → logprob: -19.7500057220459

Token 364: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06151055172085762
    2. '
' → logprob: -2.9365105628967285
    3. 'return' → logprob: -5.4365105628967285
    4. '    
' → logprob: -6.4365105628967285
    5. ' return' → logprob: -7.4365105628967285
    6. '  
' → logprob: -10.81151008605957
    7. ' 
' → logprob: -11.31151008605957
    8. '

' → logprob: -12.18651008605957
    9. '        
' → logprob: -12.43651008605957
    10. '@return' → logprob: -12.43651008605957

Token 365: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03498925268650055
    2. 'return' → logprob: -3.659989356994629
    3. ' return' → logprob: -5.034989356994629
    4. '
' → logprob: -6.409989356994629
    5. '    
' → logprob: -7.659989356994629
    6. ' 
' → logprob: -12.034989356994629
    7. '@return' → logprob: -12.159989356994629
    8. '  
' → logprob: -12.659989356994629
    9. '```' → logprob: -12.659989356994629
    10. '-' → logprob: -13.159989356994629

Token 366: ' minimum' (ID: 11085)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.013807565905153751
    2. '   ' → logprob: -4.513807773590088
    3. ' return' → logprob: -6.013807773590088
    4. 'print' → logprob: -8.13880729675293
    5. 'result' → logprob: -12.01380729675293
    6. '
' → logprob: -12.13880729675293
    7. 'remaining' → logprob: -12.26380729675293
    8. '    
' → logprob: -13.13880729675293
    9. ' print' → logprob: -15.26380729675293
    10. 'rem' → logprob: -15.76380729675293

Token 367: '_rem' (ID: 42194)
  Prédit: '_rem'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rem' → logprob: -0.0016002024058252573
    2. '_remove' → logprob: -7.00160026550293
    3. '_removed' → logprob: -7.62660026550293
    4. '_' → logprob: -8.62660026550293
    5. '_remaining' → logprob: -11.75160026550293
    6. 'rem' → logprob: -12.50160026550293
    7. '_required' → logprob: -13.12660026550293
    8. '_de' → logprob: -13.75160026550293
    9. '_to' → logprob: -13.87660026550293
    10. '_re' → logprob: -14.12660026550293

Token 368: 'ov' (ID: 569)
  Prédit: 'ov'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ov' → logprob: -4.930552313453518e-05
    2. 'oval' → logprob: -10.375049591064453
    3. '_' → logprob: -11.500049591064453
    4. '```' → logprob: -12.750049591064453
    5. '
' → logprob: -13.500049591064453
    6. 'o' → logprob: -14.375049591064453
    7. 'ove' → logprob: -14.500049591064453
    8. '   ' → logprob: -14.625049591064453
    9. 'oved' → logprob: -14.750049591064453
    10. 'ovable' → logprob: -15.375049591064453

Token 369: 'als' (ID: 1288)
  Prédit: 'als'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'als' → logprob: -0.00015788905147928745
    2. 'ov' → logprob: -9.250158309936523
    3. 'al' → logprob: -10.250158309936523
    4. '   ' → logprob: -11.750158309936523
    5. '```' → logprob: -12.250158309936523
    6. '
' → logprob: -12.625158309936523
    7. '_' → logprob: -13.875158309936523
    8. 'e' → logprob: -14.000158309936523
    9. '[' → logprob: -14.000158309936523
    10. '=' → logprob: -14.000158309936523

Token 370: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10020915418863297
    2. '=' → logprob: -2.3502092361450195
    3. '_' → logprob: -13.47520923614502
    4. '   ' → logprob: -14.85020923614502
    5. '＝' → logprob: -15.35020923614502
    6. ' =
' → logprob: -15.85020923614502
    7. ' ' → logprob: -16.100208282470703
    8. 's' → logprob: -16.600208282470703
    9. '_=' → logprob: -16.600208282470703
    10. '	' → logprob: -16.850208282470703

Token 371: ' array' (ID: 2644)
  Prédit: ' array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' array' → logprob: -0.1602320373058319
    2. 'array' → logprob: -1.9102320671081543
    3. '   ' → logprob: -12.035231590270996
    4. '
' → logprob: -14.410231590270996
    5. ' ' → logprob: -14.910231590270996
    6. '	array' → logprob: -15.410231590270996
    7. '_array' → logprob: -15.410231590270996
    8. '[array' → logprob: -15.410231590270996
    9. '(array' → logprob: -16.535232543945312
    10. ' 
' → logprob: -16.910232543945312

Token 372: '_size' (ID: 5044)
  Prédit: '_size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_size' → logprob: -1.0280383548888494e-06
    2. '_' → logprob: -14.625000953674316
    3. 'size' → logprob: -15.125000953674316
    4. '   ' → logprob: -16.125001907348633
    5. '_SIZE' → logprob: -16.750001907348633
    6. '_length' → logprob: -17.750001907348633
    7. ' size' → logprob: -17.875001907348633
    8. '_s' → logprob: -18.250001907348633
    9. '```' → logprob: -18.500001907348633
    10. '.size' → logprob: -19.125001907348633

Token 373: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.014164921827614307
    2. '-' → logprob: -4.264164924621582
    3. ' ' → logprob: -14.764164924621582
    4. ' -
' → logprob: -14.889164924621582
    5. '-max' → logprob: -15.389164924621582
    6. '   ' → logprob: -15.639164924621582
    7. '-
' → logprob: -16.514163970947266
    8. ' ' → logprob: -16.764163970947266
    9. '
' → logprob: -17.389163970947266
    10. 'max' → logprob: -17.889163970947266

Token 374: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0009114635176956654
    2. ' max' → logprob: -7.000911235809326
    3. '	max' → logprob: -23.375911712646484
    4. 'min' → logprob: -23.875911712646484
    5. '_max' → logprob: -23.875911712646484
    6. '(max' → logprob: -24.250911712646484
    7. ' ' → logprob: -25.500911712646484
    8. '   ' → logprob: -26.125911712646484
    9. 'maximum' → logprob: -26.125911712646484
    10. '[max' → logprob: -26.500911712646484

Token 375: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -1.9361264946837764e-07
    2. 'in' → logprob: -16.125
    3. 'In' → logprob: -19.125
    4. '_' → logprob: -19.625
    5. '_rem' → logprob: -20.5
    6. '(' → logprob: -21.0
    7. '_i' → logprob: -21.125
    8. 'max' → logprob: -21.75
    9. '_current' → logprob: -21.75
    10. '_is' → logprob: -21.875

Token 376: 'creasing' (ID: 57252)
  Prédit: 'creasing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'creasing' → logprob: -0.013973911292850971
    2. 'in' → logprob: -4.513973712921143
    3. '_in' → logprob: -5.888973712921143
    4. 're' → logprob: -9.2639741897583
    5. 'cre' → logprob: -11.1389741897583
    6. 'rem' → logprob: -11.3889741897583
    7. '_re' → logprob: -11.5139741897583
    8. '```' → logprob: -12.1389741897583
    9. 'Increasing' → logprob: -12.5139741897583
    10. '_' → logprob: -13.7639741897583

Token 377: '_sequence' (ID: 55606)
  Prédit: '_sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sequence' → logprob: -0.1269339919090271
    2. 'sequence' → logprob: -2.126934051513672
    3. '_sub' → logprob: -12.876934051513672
    4. ' sequence' → logprob: -13.501934051513672
    5. '_sequences' → logprob: -14.126934051513672
    6. 'sequ' → logprob: -14.251934051513672
    7. 'sub' → logprob: -14.751934051513672
    8. 'seq' → logprob: -16.501934051513672
    9. '_in' → logprob: -16.501934051513672
    10. 'Sequence' → logprob: -17.251934051513672

Token 378: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.00019054718723054975
    2. 'length' → logprob: -8.750190734863281
    3. 'ength' → logprob: -10.625190734863281
    4. 'th' → logprob: -13.000190734863281
    5. '_' → logprob: -13.250190734863281
    6. '   ' → logprob: -13.500190734863281
    7. '_l' → logprob: -14.500190734863281
    8. 'n' → logprob: -14.500190734863281
    9. '_lengths' → logprob: -15.250190734863281
    10. 'Length' → logprob: -15.875190734863281

Token 379: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25434333086013794
    2. '
' → logprob: -1.5043432712554932
    3. 'return' → logprob: -6.129343509674072
    4. ' return' → logprob: -8.879343032836914
    5. '    
' → logprob: -9.754343032836914
    6. '	return' → logprob: -11.004343032836914
    7. '
' → logprob: -11.629343032836914
    8. '<|end|>' → logprob: -13.004343032836914
    9. '\n' → logprob: -13.129343032836914
    10. ':return' → logprob: -13.629343032836914

Token 380: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001087470562197268
    2. 'return' → logprob: -7.001087665557861
    3. '
' → logprob: -9.126087188720703
    4. ' return' → logprob: -10.376087188720703
    5. '	return' → logprob: -10.376087188720703
    6. '    
' → logprob: -12.501087188720703
    7. ':return' → logprob: -15.251087188720703
    8. '<|end|>' → logprob: -15.751087188720703
    9. '@return' → logprob: -15.876087188720703
    10. '```' → logprob: -16.501087188720703

Token 381: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6933629512786865
    2. 'return' (adapté à ' return') → logprob: -0.6933629512786865
    3. ' return' → logprob: -8.943363189697266
    4. '	return' → logprob: -9.818363189697266
    5. '
' → logprob: -10.568363189697266
    6. 'print' → logprob: -12.568363189697266
    7. '    
' → logprob: -13.818363189697266
    8. '       ' → logprob: -15.818363189697266
    9. '```' → logprob: -16.568363189697266
    10. ':return' → logprob: -16.693363189697266

Token 382: ' minimum' (ID: 11085)
  Prédit: 'minimum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'minimum' → logprob: -0.1269284337759018
    2. ' minimum' → logprob: -2.1269283294677734
    3. 'min' → logprob: -15.001928329467773
    4. 'minimal' → logprob: -17.501928329467773
    5. '.minimum' → logprob: -17.501928329467773
    6. '
' → logprob: -19.001928329467773
    7. '   ' → logprob: -19.001928329467773
    8. ' minimal' → logprob: -19.126928329467773
    9. 'Minimum' → logprob: -19.751928329467773
    10. ' mínimo' → logprob: -20.876928329467773

Token 383: '_rem' (ID: 42194)
  Prédit: '_rem'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rem' → logprob: -6.24179228907451e-05
    2. 'rem' → logprob: -9.875061988830566
    3. '_' → logprob: -11.500061988830566
    4. 'Rem' → logprob: -15.875061988830566
    5. '_re' → logprob: -16.000062942504883
    6. '_Rem' → logprob: -16.125062942504883
    7. '_min' → logprob: -16.375062942504883
    8. '_removed' → logprob: -16.500062942504883
    9. ' remov' → logprob: -16.750062942504883
    10. '_remove' → logprob: -17.000062942504883

Token 384: 'ov' (ID: 569)
  Prédit: 'ov'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ov' → logprob: -8.41866585687967e-06
    2. 'oval' → logprob: -12.875008583068848
    3. 'ivals' → logprob: -13.125008583068848
    4. '_' → logprob: -14.000008583068848
    5. '```' → logprob: -14.125008583068848
    6. 'o' → logprob: -14.375008583068848
    7. 'ов' → logprob: -14.500008583068848
    8. '
' → logprob: -15.125008583068848
    9. '   ' → logprob: -16.00000762939453
    10. 'ovs' → logprob: -16.62500762939453

Token 385: 'als' (ID: 1288)
  Prédit: 'als'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'als' → logprob: -4.008129963040119e-06
    2. 'al' → logprob: -12.500003814697266
    3. 'a' → logprob: -15.125003814697266
    4. '
' → logprob: -19.250003814697266
    5. 's' → logprob: -19.250003814697266
    6. '"' → logprob: -19.625003814697266
    7. '[' → logprob: -19.625003814697266
    8. ' als' → logprob: -20.000003814697266
    9. 'ais' → logprob: -20.625003814697266
    10. 'as' → logprob: -21.000003814697266

Token 386: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 387: 'def' (ID: 1314)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.008932205848395824
    2. 'def' → logprob: -4.758932113647461
    3. '#' → logprob: -9.008932113647461
    4. 'n' → logprob: -9.383932113647461
    5. ' if' → logprob: -10.008932113647461
    6. 'array' → logprob: -10.383932113647461
    7. '@' → logprob: -11.133932113647461
    8. '```' → logprob: -11.258932113647461
    9. '
' → logprob: -13.633932113647461
    10. 'for' → logprob: -13.758932113647461

Token 388: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.001492961309850216
    2. ' solve' → logprob: -6.751492977142334
    3. ' read' → logprob: -9.001492500305176
    4. ' test' → logprob: -9.876492500305176
    5. 'main' → logprob: -10.376492500305176
    6. ' calculate' → logprob: -10.626492500305176
    7. ' find' → logprob: -11.126492500305176
    8. ' process' → logprob: -11.251492500305176
    9. ' run' → logprob: -11.626492500305176
    10. ' longest' → logprob: -11.876492500305176

Token 389: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -3.5358694731257856e-05
    2. '():
' → logprob: -10.375035285949707
    3. ' ():' → logprob: -12.500035285949707
    4. '()' → logprob: -15.125035285949707
    5. '():
' → logprob: -16.000036239624023
    6. '_' → logprob: -17.000036239624023
    7. '(' → logprob: -18.375036239624023
    8. '():

' → logprob: -18.875036239624023
    9. '(":' → logprob: -19.375036239624023
    10. '()>' → logprob: -19.500036239624023

Token 390: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00120475422590971
    2. 'array' → logprob: -6.751204967498779
    3. ' array' → logprob: -10.501204490661621
    4. '_array' → logprob: -13.126204490661621
    5. '(array' → logprob: -13.751204490661621
    6. 'import' → logprob: -14.251204490661621
    7. '```' → logprob: -14.376204490661621
    8. '
' → logprob: -14.501204490661621
    9. '[array' → logprob: -14.626204490661621
    10. '	array' → logprob: -15.001204490661621

Token 391: ' number' (ID: 2086)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7862188220024109
    2. 't' → logprob: -1.4112188816070557
    3. ' t' → logprob: -1.6612188816070557
    4. 'array' → logprob: -3.2862188816070557
    5. ' array' → logprob: -3.5362188816070557
    6. 'n' → logprob: -3.9112188816070557
    7. ' n' → logprob: -3.9112188816070557
    8. ' test' → logprob: -6.536218643188477
    9. 'test' → logprob: -6.911218643188477
    10. ' T' → logprob: -7.661218643188477

Token 392: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -0.041393864899873734
    2. ' =' → logprob: -3.416393756866455
    3. '_' → logprob: -5.291393756866455
    4. '=' → logprob: -6.416393756866455
    5. '   ' → logprob: -7.791393756866455
    6. 'of' → logprob: -8.166394233703613
    7. '=int' → logprob: -9.791394233703613
    8. '_to' → logprob: -9.916394233703613
    9. '_=' → logprob: -10.166394233703613
    10. 's' → logprob: -10.416394233703613

Token 393: '_elements' (ID: 53344)
  Prédit: '_test'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_test' → logprob: -0.7671719789505005
    2. 'test' → logprob: -1.0171719789505005
    3. '_tests' → logprob: -1.8921719789505005
    4. '_cases' → logprob: -4.267171859741211
    5. 'tests' → logprob: -5.267171859741211
    6. '_elements' → logprob: -6.517171859741211
    7. ' test' → logprob: -6.892171859741211
    8. 'cases' → logprob: -7.142171859741211
    9. '_queries' → logprob: -8.642171859741211
    10. 'arrays' → logprob: -8.767171859741211

Token 394: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04858975484967232
    2. '=' → logprob: -3.0485897064208984
    3. ',' → logprob: -13.548589706420898
    4. '=int' → logprob: -14.673589706420898
    5. ' ' → logprob: -15.173589706420898
    6. '   ' → logprob: -15.548589706420898
    7. '_' → logprob: -16.7985897064209
    8. ' =
' → logprob: -17.4235897064209
    9. ' ' → logprob: -17.5485897064209
    10. '  ' → logprob: -17.7985897064209

Token 395: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.20156030356884003
    2. ' read' → logprob: -1.7015602588653564
    3. 'int' → logprob: -8.951560020446777
    4. ' int' → logprob: -10.951560020446777
    5. '	read' → logprob: -17.076560974121094
    6. '   ' → logprob: -20.701560974121094
    7. '(read' → logprob: -20.701560974121094
    8. '.read' → logprob: -21.076560974121094
    9. '_read' → logprob: -21.826560974121094
    10. 'Read' → logprob: -22.326560974121094

Token 396: '_single' (ID: 46053)
  Prédit: '_single'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_single' → logprob: -0.0001266613689949736
    2. '_multiple' → logprob: -9.000126838684082
    3. 'single' → logprob: -12.750126838684082
    4. '_SINGLE' → logprob: -16.375125885009766
    5. 'Single' → logprob: -16.500125885009766
    6. '_integer' → logprob: -17.250125885009766
    7. '()' → logprob: -18.500125885009766
    8. '(' → logprob: -18.875125885009766
    9. '_' → logprob: -18.875125885009766
    10. 'multiple' → logprob: -19.125125885009766

Token 397: '_integer' (ID: 82911)
  Prédit: '_integer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_integer' → logprob: -3.03521392197581e-05
    2. 'integer' → logprob: -10.500030517578125
    3. '_' → logprob: -14.125030517578125
    4. 'Integer' → logprob: -14.500030517578125
    5. '_line' → logprob: -14.500030517578125
    6. '_string' → logprob: -15.250030517578125
    7. '_INTEGER' → logprob: -15.375030517578125
    8. '_int' → logprob: -15.625030517578125
    9. '_in' → logprob: -15.750030517578125
    10. ' integer' → logprob: -16.000030517578125

Token 398: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4168674051761627
    2. '   ' → logprob: -1.1668673753738403
    3. '()
' → logprob: -3.79186749458313
    4. ')' → logprob: -5.791867256164551
    5. '
' → logprob: -6.416867256164551
    6. '<|end|>' → logprob: -7.291867256164551
    7. '(' → logprob: -7.416867256164551
    8. ' ' → logprob: -8.91686725616455
    9. '    
' → logprob: -8.91686725616455
    10. 'def' → logprob: -9.29186725616455

Token 399: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014538599178195
    2. 'per' → logprob: -4.514538764953613
    3. 'array' → logprob: -5.764538764953613
    4. 'sequence' → logprob: -8.639538764953613
    5. '
' → logprob: -9.514538764953613
    6. '	per' → logprob: -10.014538764953613
    7. 'input' → logprob: -10.639538764953613
    8. ' array' → logprob: -11.889538764953613
    9. '    
' → logprob: -12.639538764953613
    10. '	array' → logprob: -13.139538764953613

Token 400: ' permutation' (ID: 135200)
  Prédit: 'per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.31645122170448303
    2. 'sequence' → logprob: -1.5664511919021606
    3. '   ' → logprob: -3.06645131111145
    4. 'array' → logprob: -4.566451072692871
    5. ' permutation' → logprob: -6.066451072692871
    6. 'input' → logprob: -6.441451072692871
    7. ' sequence' → logprob: -7.566451072692871
    8. 'elements' → logprob: -7.566451072692871
    9. 'perm' → logprob: -8.316451072692871
    10. 'arr' → logprob: -8.566451072692871

Token 401: '_list' (ID: 4162)
  Prédit: '_sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sequence' → logprob: -3.35706390615087e-05
    2. '_' → logprob: -10.750033378601074
    3. ' =' → logprob: -11.750033378601074
    4. '=' → logprob: -12.500033378601074
    5. '_sequences' → logprob: -16.00003433227539
    6. '_array' → logprob: -16.00003433227539
    7. '_seq' → logprob: -16.25003433227539
    8. '_=' → logprob: -17.12503433227539
    9. '_list' → logprob: -17.37503433227539
    10. '=_' → logprob: -17.50003433227539

Token 402: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023245595395565033
    2. '=' → logprob: -3.7732455730438232
    3. ',' → logprob: -16.273244857788086
    4. '(' → logprob: -18.023244857788086
    5. ' ' → logprob: -18.023244857788086
    6. ' ' → logprob: -18.523244857788086
    7. '   ' → logprob: -18.648244857788086
    8. ' =
' → logprob: -18.898244857788086
    9. '＝' → logprob: -19.148244857788086
    10. ')' → logprob: -19.398244857788086

Token 403: ' [' (ID: 723)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.011048170737922192
    2. ' read' → logprob: -4.511048316955566
    3. '   ' → logprob: -15.636048316955566
    4. '	read' → logprob: -16.26104736328125
    5. '
' → logprob: -17.63604736328125
    6. '  ' → logprob: -18.13604736328125
    7. ' ' → logprob: -18.26104736328125
    8. '(read' → logprob: -19.51104736328125
    9. 'list' → logprob: -20.26104736328125
    10. '    ' → logprob: -20.63604736328125

Token 404: 'read' (ID: 1293)
  Prédit: 'read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.00866976473480463
    2. 'int' → logprob: -4.758669853210449
    3. ' read' → logprob: -9.88366985321045
    4. '
' → logprob: -13.25866985321045
    5. '*' → logprob: -13.38366985321045
    6. ']' → logprob: -15.50866985321045
    7. '  ' → logprob: -15.63366985321045
    8. ' int' → logprob: -15.88366985321045
    9. '	read' → logprob: -15.88366985321045
    10. '   ' → logprob: -16.133668899536133

Token 405: '_single' (ID: 46053)
  Prédit: '_single'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_single' → logprob: -0.001375710591673851
    2. '_multiple' → logprob: -6.751375675201416
    3. 'single' → logprob: -8.501376152038574
    4. 'Single' → logprob: -13.751376152038574
    5. 'multiple' → logprob: -14.376376152038574
    6. 'int' → logprob: -14.751376152038574
    7. '
' → logprob: -16.501375198364258
    8. '_SINGLE' → logprob: -16.876375198364258
    9. ' single' → logprob: -17.001375198364258
    10. '_' → logprob: -17.876375198364258

Token 406: '_integer' (ID: 82911)
  Prédit: '_integer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_integer' → logprob: -0.00012928384239785373
    2. '_string' → logprob: -9.000129699707031
    3. 'integer' → logprob: -12.500129699707031
    4. '_multiple' → logprob: -14.250129699707031
    5. '_line' → logprob: -14.500129699707031
    6. '_int' → logprob: -15.375129699707031
    7. '_in' → logprob: -15.500129699707031
    8. '_float' → logprob: -16.00012969970703
    9. '_' → logprob: -16.12512969970703
    10. 'Integer' → logprob: -16.37512969970703

Token 407: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -3.4121114822482923e-06
    2. '()]' → logprob: -12.875003814697266
    3. '()
' → logprob: -14.125003814697266
    4. ' ()' → logprob: -17.125003814697266
    5. '()]
' → logprob: -18.750003814697266
    6. 'for' → logprob: -18.875003814697266
    7. '()"' → logprob: -19.375003814697266
    8. ' for' → logprob: -19.750003814697266
    9. '(),' → logprob: -19.750003814697266
    10. '()`' → logprob: -20.000003814697266

Token 408: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0004583135014399886
    2. 'for' → logprob: -8.125458717346191
    3. ' for' → logprob: -9.000458717346191
    4. '()]' → logprob: -10.250458717346191
    5. '()
' → logprob: -13.375458717346191
    6. ' ()' → logprob: -13.750458717346191
    7. '   ' → logprob: -14.750458717346191
    8. '())' → logprob: -15.625458717346191
    9. ')' → logprob: -15.875458717346191
    10. ']' → logprob: -16.500457763671875

Token 409: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00018280261429026723
    2. ' _' → logprob: -8.62518310546875
    3. ' in' → logprob: -13.37518310546875
    4. '_range' → logprob: -14.25018310546875
    5. '_in' → logprob: -14.25018310546875
    6. ' range' → logprob: -15.50018310546875
    7. '_i' → logprob: -16.50018310546875
    8. ' ' → logprob: -16.75018310546875
    9. 'range' → logprob: -17.25018310546875
    10. 'in' → logprob: -17.37518310546875

Token 410: ' in' (ID: 306)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.47556936740875244
    2. 'range' → logprob: -1.2255693674087524
    3. ' in' → logprob: -2.475569248199463
    4. 'in' → logprob: -7.725569248199463
    5. ' ' → logprob: -8.850569725036621
    6. '  ' → logprob: -9.100569725036621
    7. '	range' → logprob: -10.475569725036621
    8. '_' → logprob: -11.225569725036621
    9. ']' → logprob: -11.475569725036621
    10. '   ' → logprob: -12.225569725036621

Token 411: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0019288709154352546
    2. ' range' → logprob: -6.251928806304932
    3. '   ' → logprob: -16.501928329467773
    4. ' ' → logprob: -16.626928329467773
    5. '  ' → logprob: -16.876928329467773
    6. '	range' → logprob: -17.376928329467773
    7. '(range' → logprob: -18.001928329467773
    8. 'rang' → logprob: -18.376928329467773
    9. '    ' → logprob: -18.626928329467773
    10. 'ran' → logprob: -19.501928329467773

Token 412: '(number' (ID: 32955)
  Prédit: '(number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(number' → logprob: -9.007317567011341e-05
    2. 'number' → logprob: -9.500089645385742
    3. '(' → logprob: -11.125089645385742
    4. ' number' → logprob: -15.125089645385742
    5. ' (' → logprob: -16.125089645385742
    6. '(n' → logprob: -18.000089645385742
    7. '	number' → logprob: -18.000089645385742
    8. '(
' → logprob: -18.250089645385742
    9. '   ' → logprob: -20.250089645385742
    10. '(num' → logprob: -20.625089645385742

Token 413: '_of' (ID: 8023)
  Prédit: '(number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(number' → logprob: -0.023103032261133194
    2. '_of' → logprob: -5.0231032371521
    3. 'number' → logprob: -5.2731032371521
    4. 's' → logprob: -5.2731032371521
    5. '   ' → logprob: -6.0231032371521
    6. '(' → logprob: -6.6481032371521
    7. '_' → logprob: -7.3981032371521
    8. 'of' → logprob: -7.7731032371521
    9. ')' → logprob: -8.023102760314941
    10. '_number' → logprob: -8.398102760314941

Token 414: '_elements' (ID: 53344)
  Prédit: 'number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'number' → logprob: -0.001710401731543243
    2. ' number' → logprob: -6.376710414886475
    3. '   ' → logprob: -12.626709938049316
    4. '(number' → logprob: -12.626709938049316
    5. '[number' → logprob: -14.251709938049316
    6. '	number' → logprob: -15.001709938049316
    7. ' ' → logprob: -15.626709938049316
    8. '
' → logprob: -15.626709938049316
    9. 'array' → logprob: -15.751709938049316
    10. '_number' → logprob: -16.251710891723633

Token 415: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.06690713763237
    2. ']' → logprob: -2.8169071674346924
    3. ')' → logprob: -5.316906929016113
    4. '()]' → logprob: -11.691906929016113
    5. ']
' → logprob: -12.566906929016113
    6. ')]
' → logprob: -12.941906929016113
    7. '])' → logprob: -13.566906929016113
    8. '   ' → logprob: -13.691906929016113
    9. ' ]' → logprob: -14.066906929016113
    10. ')])' → logprob: -15.066906929016113

Token 416: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02171199955046177
    2. '
' → logprob: -4.271711826324463
    3. 'result' → logprob: -5.271711826324463
    4. 'minimum' → logprob: -6.521711826324463
    5. ' result' → logprob: -7.646711826324463
    6. '    
' → logprob: -8.021712303161621
    7. ' minimum' → logprob: -9.646712303161621
    8. 'min' → logprob: -11.646712303161621
    9. '	result' → logprob: -11.771712303161621
    10. 'answer' → logprob: -12.146712303161621

Token 417: ' print' (ID: 2123)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.04093911498785019
    2. 'minimum' → logprob: -3.5409390926361084
    3. 'print' (adapté à ' print') → logprob: -4.7909393310546875
    4. '   ' → logprob: -6.7909393310546875
    5. 'answer' → logprob: -6.9159393310546875
    6. ' result' → logprob: -7.7909393310546875
    7. 'rem' → logprob: -9.040939331054688
    8. 'min' → logprob: -9.665939331054688
    9. 'removed' → logprob: -10.040939331054688
    10. ' minimum' → logprob: -10.790939331054688

Token 418: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.00017529279284644872
    2. '(' → logprob: -8.750175476074219
    3. '(
' → logprob: -11.000175476074219
    4. 'solve' → logprob: -16.87517547607422
    5. '(solution' → logprob: -17.12517547607422
    6. '(sol' → logprob: -18.50017547607422
    7. '(resolve' → logprob: -19.50017547607422
    8. '(

' → logprob: -19.50017547607422
    9. '()' → logprob: -19.75017547607422
    10. ' solve' → logprob: -19.87517547607422

Token 419: 'olve' (ID: 11460)
  Prédit: 'olve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'olve' → logprob: -1.9361264946837764e-07
    2. 'ove' → logprob: -15.625
    3. 'OLVE' → logprob: -18.0
    4. 'solve' → logprob: -18.5
    5. 'olver' → logprob: -19.25
    6. 'erve' → logprob: -19.5
    7. '_' → logprob: -19.75
    8. '(' → logprob: -19.875
    9. 'ol' → logprob: -20.0
    10. 'ave' → logprob: -21.125

Token 420: '_min' (ID: 15950)
  Prédit: '_min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -1.0280383548888494e-06
    2. '_' → logprob: -14.000000953674316
    3. '_max' → logprob: -17.000001907348633
    4. '_m' → logprob: -17.250001907348633
    5. 'min' → logprob: -18.125001907348633
    6. '_MIN' → logprob: -18.125001907348633
    7. 'minimum' → logprob: -18.250001907348633
    8. '
' → logprob: -18.375001907348633
    9. '(min' → logprob: -18.750001907348633
    10. '_
' → logprob: -19.250001907348633

Token 421: 'imum' (ID: 4556)
  Prédit: 'imum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imum' → logprob: -1.0683535037969705e-05
    2. 'um' → logprob: -12.25001049041748
    3. '_' → logprob: -12.87501049041748
    4. 'im' → logprob: -14.12501049041748
    5. 'inum' → logprob: -14.12501049041748
    6. 'ium' → logprob: -14.62501049041748
    7. 'IMUM' → logprob: -14.75001049041748
    8. '__' → logprob: -15.25001049041748
    9. '_number' → logprob: -15.37501049041748
    10. '```' → logprob: -15.50001049041748

Token 422: '_rem' (ID: 42194)
  Prédit: '_rem'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rem' → logprob: -0.00012797261297237128
    2. '_min' → logprob: -9.000127792358398
    3. 'rem' → logprob: -12.500127792358398
    4. '_' → logprob: -15.375127792358398
    5. '_remove' → logprob: -15.500127792358398
    6. '_rest' → logprob: -16.0001277923584
    7. '_re' → logprob: -17.0001277923584
    8. '_res' → logprob: -17.0001277923584
    9. '```' → logprob: -17.0001277923584
    10. '_mod' → logprob: -17.1251277923584

Token 423: 'ov' (ID: 569)
  Prédit: 'ov'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ov' → logprob: -2.534558552724775e-05
    2. 'o' → logprob: -12.125025749206543
    3. '_' → logprob: -12.250025749206543
    4. '```' → logprob: -12.625025749206543
    5. 'oval' → logprob: -13.250025749206543
    6. '
' → logprob: -13.375025749206543
    7. 'ivals' → logprob: -13.500025749206543
    8. 'als' → logprob: -13.625025749206543
    9. '   ' → logprob: -14.000025749206543
    10. 'ova' → logprob: -14.125025749206543

Token 424: 'als' (ID: 1288)
  Prédit: 'als'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'als' → logprob: -1.3856492842023727e-06
    2. 'al' → logprob: -13.750000953674316
    3. 'a' → logprob: -16.250001907348633
    4. '_' → logprob: -17.375001907348633
    5. '
' → logprob: -17.875001907348633
    6. '[' → logprob: -18.375001907348633
    7. 'ov' → logprob: -18.500001907348633
    8. '##' → logprob: -18.500001907348633
    9. 'vals' → logprob: -18.625001907348633
    10. '   ' → logprob: -18.875001907348633

Token 425: '_for' (ID: 11903)
  Prédit: '_for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_for' → logprob: -5.080963092041202e-06
    2. 'for' → logprob: -12.250004768371582
    3. '_' → logprob: -15.750004768371582
    4. ')' → logprob: -16.6250057220459
    5. '
' → logprob: -18.2500057220459
    6. '_to' → logprob: -19.0000057220459
    7. '_FOR' → logprob: -19.0000057220459
    8. '```' → logprob: -19.0000057220459
    9. ')_' → logprob: -19.2500057220459
    10. ' for' → logprob: -19.5000057220459

Token 426: '_sorted' (ID: 104993)
  Prédit: '_sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sorted' → logprob: -5.5577775128767826e-06
    2. 'sorted' → logprob: -12.125005722045898
    3. '(sorted' → logprob: -18.2500057220459
    4. 's' → logprob: -18.7500057220459
    5. '_saved' → logprob: -19.5000057220459
    6. '_s' → logprob: -19.7500057220459
    7. '_min' → logprob: -19.8750057220459
    8. '_sort' → logprob: -20.2500057220459
    9. '_' → logprob: -20.8750057220459
    10. 'Sorted' → logprob: -21.2500057220459

Token 427: '_sub' (ID: 11572)
  Prédit: '_sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sub' → logprob: -0.38079357147216797
    2. '_for' → logprob: -1.255793571472168
    3. '_' → logprob: -4.505793571472168
    4. '_min' → logprob: -4.505793571472168
    5. '_sequence' → logprob: -5.380793571472168
    6. '_per' → logprob: -6.505793571472168
    7. '_sequences' → logprob: -7.380793571472168
    8. 'array' → logprob: -7.505793571472168
    9. '(sequence' → logprob: -7.755793571472168
    10. '_array' → logprob: -7.755793571472168

Token 428: 'sequence' (ID: 47173)
  Prédit: 'sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -0.010081388056278229
    2. 'se' → logprob: -5.2600812911987305
    3. 'quence' → logprob: -5.7600812911987305
    4. 'quences' → logprob: -6.5100812911987305
    5. '(sequence' → logprob: -9.26008129119873
    6. '_sequence' → logprob: -9.63508129119873
    7. 'seq' → logprob: -11.13508129119873
    8. '.sequence' → logprob: -12.01008129119873
    9. '```' → logprob: -12.51008129119873
    10. 'sequ' → logprob: -12.63508129119873

Token 429: '(number' (ID: 32955)
  Prédit: '(number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(number' → logprob: -0.00034714414505288005
    2. '(' → logprob: -8.625347137451172
    3. '(len' → logprob: -9.250347137451172
    4. '(per' → logprob: -10.000347137451172
    5. '(n' → logprob: -11.125347137451172
    6. '(
' → logprob: -11.625347137451172
    7. ' (' → logprob: -14.125347137451172
    8. ')' → logprob: -14.750347137451172
    9. '(numbers' → logprob: -15.000347137451172
    10. '(num' → logprob: -15.250347137451172

Token 430: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -4.320199877838604e-07
    2. '(number' → logprob: -15.625
    3. 'of' → logprob: -17.0
    4. '   ' → logprob: -18.0
    5. '(' → logprob: -19.125
    6. '_' → logprob: -19.25
    7. '(_' → logprob: -19.375
    8. ' of' → logprob: -19.5
    9. '=' → logprob: -19.5
    10. '__' → logprob: -19.625

Token 431: '_elements' (ID: 53344)
  Prédit: '_elements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_elements' → logprob: -0.00975833274424076
    2. 'elements' → logprob: -4.634758472442627
    3. 'ele' → logprob: -14.384757995605469
    4. 'Elements' → logprob: -14.509757995605469
    5. ' elements' → logprob: -15.009757995605469
    6. '
' → logprob: -15.509757995605469
    7. 'el' → logprob: -15.509757995605469
    8. 'element' → logprob: -15.634757995605469
    9. '_ELEMENTS' → logprob: -15.634757995605469
    10. '```' → logprob: -15.884757995605469

Token 432: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0087516784551553e-05
    2. ',
' → logprob: -11.62501049041748
    3. '(per' → logprob: -14.12501049041748
    4. '   ' → logprob: -15.37501049041748
    5. ' ,' → logprob: -15.87501049041748
    6. ',p' → logprob: -17.000009536743164
    7. 'per' → logprob: -17.500009536743164
    8. ',

' → logprob: -18.625009536743164
    9. '
' → logprob: -18.750009536743164
    10. ',\
' → logprob: -19.500009536743164

Token 433: ' permutation' (ID: 135200)
  Prédit: 'per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.033775825053453445
    2. ' permutation' → logprob: -3.408775806427002
    3. 'perm' → logprob: -9.03377628326416
    4. ' perm' → logprob: -12.65877628326416
    5. '(per' → logprob: -12.90877628326416
    6. '   ' → logprob: -13.53377628326416
    7. '	per' → logprob: -13.65877628326416
    8. 'Permutation' → logprob: -14.15877628326416
    9. ' ' → logprob: -15.28377628326416
    10. ' permutations' → logprob: -15.40877628326416

Token 434: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -1.9361264946837764e-07
    2. '_sequence' → logprob: -16.5
    3. '_' → logprob: -18.125
    4. '
' → logprob: -18.25
    5. ')' → logprob: -18.25
    6. 'list' → logprob: -18.5
    7. 's' → logprob: -19.125
    8. 'List' → logprob: -19.125
    9. '_
' → logprob: -19.375
    10. '_lists' → logprob: -19.75

Token 435: '))


' (ID: 49252)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4740792512893677
    2. '))' → logprob: -0.9740792512893677
    3. '))
' → logprob: -14.099079132080078
    4. ')))' → logprob: -14.349079132080078
    5. ' )' → logprob: -15.224079132080078
    6. '())' → logprob: -15.474079132080078
    7. ')
' → logprob: -15.599079132080078
    8. ' ))' → logprob: -16.224079132080078
    9. '])' → logprob: -16.349079132080078
    10. '   ' → logprob: -17.349079132080078

Token 436: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -2.093505099765025e-05
    2. '
' → logprob: -11.000020980834961
    3. ' if' → logprob: -12.500020980834961
    4. '```' → logprob: -15.500020980834961
    5. '<|end|>' → logprob: -16.62502098083496
    6. '

' → logprob: -17.37502098083496
    7. '\n' → logprob: -17.62502098083496
    8. '#' → logprob: -17.87502098083496
    9. '    
' → logprob: -18.50002098083496
    10. '\' → logprob: -18.75002098083496

Token 437: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.04909403622150421
    2. '__' → logprob: -3.0490939617156982
    3. '_name' → logprob: -7.674094200134277
    4. '_' → logprob: -10.549094200134277
    5. 'name' → logprob: -11.299094200134277
    6. '___' → logprob: -13.424094200134277
    7. ' _' → logprob: -13.924094200134277
    8. ' ___' → logprob: -15.424094200134277
    9. ' ' → logprob: -15.674094200134277
    10. ' ' → logprob: -16.42409324645996

Token 438: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.007931203581392765
    2. ' __' → logprob: -5.132931232452393
    3. ' ==' → logprob: -6.632931232452393
    4. '.__' → logprob: -8.007930755615234
    5. '==' → logprob: -8.882930755615234
    6. '_' → logprob: -9.757930755615234
    7. '__.__' → logprob: -9.757930755615234
    8. '__.' → logprob: -10.632930755615234
    9. '.' → logprob: -11.132930755615234
    10. '___' → logprob: -11.257930755615234

Token 439: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -2.534558552724775e-05
    2. '__.__' → logprob: -11.125025749206543
    3. '==' → logprob: -11.875025749206543
    4. ' ==' → logprob: -13.250025749206543
    5. '__.' → logprob: -13.875025749206543
    6. '=="' → logprob: -15.125025749206543
    7. '___' → logprob: -15.625025749206543
    8. '__('' → logprob: -16.750024795532227
    9. '__["' → logprob: -16.875024795532227
    10. '____' → logprob: -17.000024795532227

Token 440: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.43041130900382996
    2. '__' → logprob: -1.3054113388061523
    3. ' ==' → logprob: -2.5554113388061523
    4. '=="' → logprob: -7.180411338806152
    5. '=' → logprob: -9.180411338806152
    6. '=='' → logprob: -9.805411338806152
    7. '==
' → logprob: -9.930411338806152
    8. '_' → logprob: -10.055411338806152
    9. '===' → logprob: -11.555411338806152
    10. '___' → logprob: -11.930411338806152

Token 441: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.029848720878362656
    2. ''' → logprob: -3.52984881401062
    3. ' "__' → logprob: -9.2798490524292
    4. '__' → logprob: -12.5298490524292
    5. ' '__' → logprob: -13.6548490524292
    6. '"user' → logprob: -16.779848098754883
    7. '("__' → logprob: -16.779848098754883
    8. '"_' → logprob: -17.154848098754883
    9. '"name' → logprob: -17.279848098754883
    10. ''"' → logprob: -17.654848098754883

Token 442: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0005774584715254605
    2. 'name' → logprob: -7.500577449798584
    3. '__' → logprob: -10.750577926635742
    4. '_main' → logprob: -12.750577926635742
    5. ' main' → logprob: -16.500577926635742
    6. '_MAIN' → logprob: -17.500577926635742
    7. 'ma' → logprob: -18.625577926635742
    8. 'm' → logprob: -18.750577926635742
    9. '```' → logprob: -19.375577926635742
    10. '_name' → logprob: -19.875577926635742

Token 443: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.06199794262647629
    2. '__' → logprob: -2.811997890472412
    3. '__:' → logprob: -11.31199836730957
    4. '_' → logprob: -11.56199836730957
    5. '__":
' → logprob: -11.81199836730957
    6. '':' → logprob: -14.81199836730957
    7. '__.' → logprob: -14.93699836730957
    8. '('__' → logprob: -15.31199836730957
    9. '___' → logprob: -15.68699836730957
    10. '_main' → logprob: -17.68699836730957

Token 444: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.006309254094958305
    2. '   ' → logprob: -5.7563090324401855
    3. ' main' → logprob: -6.2563090324401855
    4. '	main' → logprob: -6.7563090324401855
    5. '__' → logprob: -10.256309509277344
    6. '_main' → logprob: -11.631309509277344
    7. ' ' → logprob: -14.881309509277344
    8. '    
' → logprob: -15.756309509277344
    9. '
' → logprob: -16.631309509277344
    10. '  ' → logprob: -17.006309509277344

Token 445: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -1.9361264946837764e-07
    2. ' main' → logprob: -15.75
    3. '	main' → logprob: -20.25
    4. '   ' → logprob: -22.5
    5. '_main' → logprob: -23.0
    6. '.main' → logprob: -24.5
    7. 'import' → logprob: -25.125
    8. '(main' → logprob: -25.375
    9. 'Main' → logprob: -26.75
    10. '__' → logprob: -26.75

Token 446: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 444
Tokens correctement prédits (1ère position, stricte): 226
Tokens correctement prédits (1ère position, avec adaptation): 245
Tokens correctement prédits (top 10): 393
Précision stricte (1ère position): 50.90%
Précision adaptée (1ère position): 55.18%
Précision (top 10): 88.51%
================================================================================
