================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:00:50
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from decimal import Decimal, getcontext

def expected_value(n: int, k: int) -> float:
    getcontext().prec = 15
    total = Decimal(0)
    power_of_two = [1 << i for i in range(31)]
    for i in range(1, n + 1):
        # Binary search for minimal t such that i * t >= k with t = 2**m
        left, right = 0, 30
        while left < right:
            mid = (left + right) // 2
            if i * power_of_two[mid] >= k:
                right = mid
            else:
                left = mid + 1
        total += Decimal(1) / Decimal(power_of_two[left])
    return float(total / Decimal(n))

n, k = map(int, input().split())
print(expected_value(n, k))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' decimal' (ID: 26964)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' Decimal' (ID: 56874)
  Prédit: ' Decimal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Decimal' → logprob: -0.16029754281044006
    2. 'Decimal' → logprob: -1.9102975130081177
    3. 'decimal' → logprob: -10.285297393798828
    4. '.Decimal' → logprob: -11.035297393798828
    5. ' decimal' → logprob: -11.285297393798828
    6. '`' → logprob: -12.660297393798828
    7. '```' → logprob: -13.035297393798828
    8. ' ' → logprob: -13.035297393798828
    9. ' ' → logprob: -14.035297393798828
    10. ' Dec' → logprob: -14.035297393798828

Token 4: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.14895708858966827
    2. '.' → logprob: -2.0239570140838623
    3. '```' → logprob: -6.773957252502441
    4. '(
' → logprob: -7.023957252502441
    5. ',' → logprob: -7.148957252502441
    6. 'a' → logprob: -7.273957252502441
    7. 'd' → logprob: -7.898957252502441
    8. '#' → logprob: -7.898957252502441
    9. '\(' → logprob: -8.023957252502441
    10. '`' → logprob: -8.148957252502441

Token 5: ' get' (ID: 717)
  Prédit: ' get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.1405634582042694
    2. 'get' → logprob: -2.515563488006592
    3. ' Invalid' → logprob: -3.890563488006592
    4. ' ROUND' → logprob: -3.890563488006592
    5. 'ROUND' → logprob: -5.140563488006592
    6. 'Invalid' → logprob: -6.015563488006592
    7. ' local' → logprob: -7.140563488006592
    8. 'Context' → logprob: -9.015563011169434
    9. 'local' → logprob: -9.265563011169434
    10. ' Context' → logprob: -9.890563011169434

Token 6: 'context' (ID: 3822)
  Prédit: 'context'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'context' → logprob: -0.051908135414123535
    2. '_context' → logprob: -3.051908016204834
    3. '_' → logprob: -6.051908016204834
    4. '_con' → logprob: -8.301908493041992
    5. '_c' → logprob: -8.426908493041992
    6. '_decimal' → logprob: -8.801908493041992
    7. '_current' → logprob: -9.051908493041992
    8. '_cont' → logprob: -9.551908493041992
    9. '```' → logprob: -10.801908493041992
    10. '_ctx' → logprob: -10.926908493041992

Token 7: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5389253497123718
    2. '.' → logprob: -0.9139253497123718
    3. '\' → logprob: -5.6639251708984375
    4. '\n' → logprob: -5.7889251708984375
    5. '
' → logprob: -6.1639251708984375
    6. '```' → logprob: -6.4139251708984375
    7. '(
' → logprob: -6.9139251708984375
    8. 'newline' → logprob: -7.0389251708984375
    9. '.get' → logprob: -7.5389251708984375
    10. 'get' → logprob: -7.7889251708984375

Token 8: 'def' (ID: 1314)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.9588246941566467
    2. '\' → logprob: -1.583824634552002
    3. '\n' → logprob: -1.833824634552002
    4. '(' → logprob: -2.458824634552002
    5. '.' → logprob: -2.458824634552002
    6. '
' → logprob: -3.208824634552002
    7. '' → logprob: -4.583824634552002
    8. '(get' → logprob: -5.208824634552002
    9. '`' → logprob: -5.708824634552002
    10. '```' → logprob: -5.708824634552002

Token 9: ' expected' (ID: 5930)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0005753128207288682
    2. ' calculate' → logprob: -8.500575065612793
    3. ' space' → logprob: -8.500575065612793
    4. ' my' → logprob: -9.375575065612793
    5. ' ' → logprob: -12.000575065612793
    6. ' ```' → logprob: -12.000575065612793
    7. ' )' → logprob: -12.125575065612793
    8. ' convert' → logprob: -12.125575065612793
    9. ' a' → logprob: -12.500575065612793
    10. ' add' → logprob: -12.625575065612793

Token 10: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.6259769201278687
    2. '_' → logprob: -1.0009769201278687
    3. ' ' → logprob: -3.625977039337158
    4. ' _' → logprob: -3.750977039337158
    5. '_price' → logprob: -4.625977039337158
    6. '_return' → logprob: -5.000977039337158
    7. '_space' → logprob: -5.625977039337158
    8. '_loss' → logprob: -5.625977039337158
    9. '_amount' → logprob: -5.750977039337158
    10. '_purchase' → logprob: -5.875977039337158

Token 11: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00038932388997636735
    2. '_' → logprob: -9.125389099121094
    3. ' (' → logprob: -10.000389099121094
    4. '(object' → logprob: -10.875389099121094
    5. '<|end|>' → logprob: -10.875389099121094
    6. '(token' → logprob: -11.125389099121094
    7. '(user' → logprob: -11.125389099121094
    8. '(expected' → logprob: -11.250389099121094
    9. '<|end|>' → logprob: -11.375389099121094
    10. '```' → logprob: -11.625389099121094

Token 12: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4020388126373291
    2. ')' → logprob: -1.777038812637329
    3. ',' → logprob: -1.902038812637329
    4. ':' → logprob: -4.40203857421875
    5. ' ):' → logprob: -10.15203857421875
    6. ' ,' → logprob: -10.27703857421875
    7. '_' → logprob: -10.40203857421875
    8. 's' → logprob: -10.52703857421875
    9. '=' → logprob: -10.52703857421875
    10. '):
' → logprob: -10.77703857421875

Token 13: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.021128227934241295
    2. 'int' → logprob: -3.8961281776428223
    3. ' ' → logprob: -8.02112865447998
    4. ' n' → logprob: -8.77112865447998
    5. ' )' → logprob: -10.02112865447998
    6. ' Decimal' → logprob: -10.77112865447998
    7. ')' → logprob: -11.39612865447998
    8. 'n' → logprob: -12.14612865447998
    9. ' number' → logprob: -12.39612865447998
    10. ' str' → logprob: -13.02112865447998

Token 14: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.023373709991574287
    2. ')' → logprob: -3.773373603820801
    3. '):' → logprob: -9.2733736038208
    4. ' ,' → logprob: -11.0233736038208
    5. ',
' → logprob: -12.3983736038208
    6. ')->' → logprob: -12.7733736038208
    7. '<|end|>' → logprob: -12.7733736038208
    8. ':' → logprob: -13.0233736038208
    9. '```' → logprob: -14.0233736038208
    10. ' )' → logprob: -14.5233736038208

Token 15: ' k' (ID: 372)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.1928836554288864
    2. ' x' → logprob: -2.8178837299346924
    3. 'p' → logprob: -3.3178837299346924
    4. ' k' → logprob: -4.567883491516113
    5. ' values' → logprob: -4.942883491516113
    6. ' m' → logprob: -4.942883491516113
    7. ' decimals' → logprob: -5.192883491516113
    8. ' )' → logprob: -5.442883491516113
    9. ' probabilities' → logprob: -5.442883491516113
    10. ')' → logprob: -5.567883491516113

Token 16: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01791086606681347
    2. ')' → logprob: -4.517910957336426
    3. '):' → logprob: -5.642910957336426
    4. '=' → logprob: -6.267910957336426
    5. ',' → logprob: -6.642910957336426
    6. ':int' → logprob: -9.892910957336426
    7. ' )' → logprob: -11.267910957336426
    8. ' :' → logprob: -11.392910957336426
    9. ' ):' → logprob: -12.142910957336426
    10. ' =' → logprob: -12.267910957336426

Token 17: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.4741101562976837
    2. 'int' → logprob: -0.9741101264953613
    3. ' ' → logprob: -11.22411060333252
    4. ' Decimal' → logprob: -11.72411060333252
    5. ')' → logprob: -12.59911060333252
    6. 'Decimal' → logprob: -13.09911060333252
    7. '=int' → logprob: -13.22411060333252
    8. ':int' → logprob: -13.72411060333252
    9. '[int' → logprob: -13.72411060333252
    10. '<int' → logprob: -14.84911060333252

Token 18: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20970647037029266
    2. '):' → logprob: -1.709706425666809
    3. ',' → logprob: -4.8347063064575195
    4. ')->' → logprob: -9.20970630645752
    5. ':' → logprob: -9.95970630645752
    6. '   ' → logprob: -10.33470630645752
    7. '):
' → logprob: -10.83470630645752
    8. '*' → logprob: -10.95970630645752
    9. '`)' → logprob: -11.33470630645752
    10. ')>' → logprob: -11.33470630645752

Token 19: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002148238942027092
    2. '):' → logprob: -6.502148151397705
    3. '():' → logprob: -7.752148151397705
    4. ':return' → logprob: -9.752148628234863
    5. ':**' → logprob: -10.502148628234863
    6. '':' → logprob: -10.502148628234863
    7. '<|end|>' → logprob: -11.252148628234863
    8. '(:' → logprob: -11.627148628234863
    9. '`:' → logprob: -11.627148628234863
    10. ':def' → logprob: -11.752148628234863

Token 20: ' float' (ID: 4428)
  Prédit: ' Decimal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Decimal' → logprob: -0.007026865612715483
    2. 'Decimal' → logprob: -5.257026672363281
    3. ' float' → logprob: -6.507026672363281
    4. ' int' → logprob: -9.007026672363281
    5. ' ' → logprob: -9.882026672363281
    6. ' None' → logprob: -10.007026672363281
    7. ' decimal' → logprob: -10.507026672363281
    8. 'float' → logprob: -11.257026672363281
    9. ' Dec' → logprob: -12.257026672363281
    10. ' "' → logprob: -12.257026672363281

Token 21: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0001375089050270617
    2. '):' → logprob: -9.750137329101562
    3. '():' → logprob: -10.000137329101562
    4. ':return' → logprob: -10.875137329101562
    5. ':**' → logprob: -12.375137329101562
    6. '':' → logprob: -12.875137329101562
    7. '   ' → logprob: -13.375137329101562
    8. ' :' → logprob: -13.500137329101562
    9. '```' → logprob: -14.375137329101562
    10. ':
' → logprob: -14.625137329101562

Token 22: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13761021196842194
    2. '    ' → logprob: -3.2626101970672607
    3. ':' → logprob: -3.6376101970672607
    4. '    
' → logprob: -3.8876101970672607
    5. '\' → logprob: -4.26261043548584
    6. '```' → logprob: -4.51261043548584
    7. '     
' → logprob: -5.51261043548584
    8. '\n' → logprob: -6.01261043548584
    9. ' 
' → logprob: -6.38761043548584
    10. '' → logprob: -6.51261043548584

Token 23: ' get' (ID: 717)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9189132452011108
    2. '```' → logprob: -1.5439132452011108
    3. '`' → logprob: -2.1689133644104004
    4. '    ' → logprob: -2.5439133644104004
    5. '\' → logprob: -2.6689133644104004
    6. ' 
' → logprob: -3.2939133644104004
    7. ' get' → logprob: -3.7939133644104004
    8. ' ' → logprob: -4.0439133644104
    9. 'get' (adapté à ' get') → logprob: -4.7939133644104
    10. '     
' → logprob: -4.9189133644104

Token 24: 'context' (ID: 3822)
  Prédit: 'context'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'context' → logprob: -0.0002346488763578236
    2. '_context' → logprob: -8.375234603881836
    3. '(context' → logprob: -13.500234603881836
    4. '<context' → logprob: -13.625234603881836
    5. '"context' → logprob: -14.250234603881836
    6. 'ctx' → logprob: -15.625234603881836
    7. ' context' → logprob: -15.625234603881836
    8. '	context' → logprob: -15.875234603881836
    9. 'Context' → logprob: -16.625234603881836
    10. '.context' → logprob: -16.625234603881836

Token 25: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.004180140793323517
    2. '.' → logprob: -6.129179954528809
    3. '()' → logprob: -6.629179954528809
    4. '(' → logprob: -7.379179954528809
    5. ').' → logprob: -11.254179954528809
    6. '(.)' → logprob: -12.129179954528809
    7. '('.')' → logprob: -12.254179954528809
    8. ' ().' → logprob: -12.254179954528809
    9. ' .' → logprob: -12.754179954528809
    10. '('').' → logprob: -12.879179954528809

Token 26: 'prec' (ID: 21393)
  Prédit: 'prec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prec' → logprob: -1.9361264946837764e-07
    2. 'precision' → logprob: -15.625
    3. 'round' → logprob: -18.25
    4. '```' → logprob: -18.875
    5. '_prec' → logprob: -19.125
    6. ' prec' → logprob: -19.75
    7. 'Prec' → logprob: -20.5
    8. 'pre' → logprob: -20.875
    9. '.prec' → logprob: -20.875
    10. 'pow' → logprob: -22.375

Token 27: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.010008691810071468
    2. ' =' → logprob: -4.635008811950684
    3. 'ision' → logprob: -8.385008811950684
    4. '+=' → logprob: -11.510008811950684
    5. ' ' → logprob: -12.635008811950684
    6. '.=' → logprob: -13.260008811950684
    7. '=

' → logprob: -13.635008811950684
    8. ' +=' → logprob: -13.885008811950684
    9. 'is' → logprob: -14.135008811950684
    10. 'ession' → logprob: -14.385008811950684

Token 28: ' ' (ID: 220)
  Prédit: '28'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '28' → logprob: -0.709481954574585
    2. '50' → logprob: -0.834481954574585
    3. '30' → logprob: -3.334481954574585
    4. '10' → logprob: -3.959481954574585
    5. '20' → logprob: -4.459482192993164
    6. '100' → logprob: -5.334482192993164
    7. '15' → logprob: -6.834482192993164
    8. '12' → logprob: -7.459482192993164
    9. ' ' → logprob: -7.459482192993164
    10. '40' → logprob: -8.334482192993164

Token 29: '15' (ID: 1055)
  Prédit: '50'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '50' → logprob: -0.32871848344802856
    2. '28' → logprob: -1.4537184238433838
    3. '30' → logprob: -3.953718423843384
    4. '20' → logprob: -4.578718662261963
    5. '10' → logprob: -4.828718662261963
    6. '100' → logprob: -4.953718662261963
    7. '15' → logprob: -6.953718662261963
    8. '12' → logprob: -7.953718662261963
    9. '40' → logprob: -8.078718185424805
    10. '6' → logprob: -9.578718185424805

Token 30: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3929561376571655
    2. '\n' → logprob: -2.142956256866455
    3. '
' → logprob: -2.267956256866455
    4. '\' → logprob: -2.892956256866455
    5. '    
' → logprob: -3.392956256866455
    6. '' → logprob: -6.267956256866455
    7. 'n' → logprob: -6.267956256866455
    8. '```' → logprob: -6.517956256866455
    9. '\r' → logprob: -6.642956256866455
    10. 'newline' → logprob: -6.767956256866455

Token 31: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31277143955230713
    2. '
' → logprob: -2.3127713203430176
    3. '    
' → logprob: -2.6877713203430176
    4. '\n' → logprob: -3.1877713203430176
    5. '\' → logprob: -3.4377713203430176
    6. ' 
' → logprob: -4.812771320343018
    7. '```' → logprob: -4.937771320343018
    8. 'n' → logprob: -5.812771320343018
    9. '   
' → logprob: -6.187771320343018
    10. '     
' → logprob: -6.312771320343018

Token 32: ' total' (ID: 3609)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.6428244709968567
    2. 'total' (adapté à ' total') → logprob: -1.642824411392212
    3. ' total' → logprob: -2.017824411392212
    4. ' result' → logprob: -2.142824411392212
    5. 'value' → logprob: -4.642824649810791
    6. 'prob' → logprob: -5.142824649810791
    7. 'expected' → logprob: -5.267824649810791
    8. ' value' → logprob: -6.517824649810791
    9. 'sum' → logprob: -6.517824649810791
    10. 'p' → logprob: -7.017824649810791

Token 33: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3461340367794037
    2. '_' → logprob: -1.596134066581726
    3. '_value' → logprob: -2.9711339473724365
    4. '_sum' → logprob: -3.8461339473724365
    5. '=' → logprob: -5.221134185791016
    6. '_amount' → logprob: -5.721134185791016
    7. '_probability' → logprob: -5.846134185791016
    8. ' _' → logprob: -6.221134185791016
    9. ' +=' → logprob: -6.971134185791016
    10. '_prob' → logprob: -7.346134185791016

Token 34: ' Decimal' (ID: 56874)
  Prédit: ' Decimal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Decimal' → logprob: -0.07892405241727829
    2. 'Decimal' → logprob: -2.5789239406585693
    3. ' ' → logprob: -10.828924179077148
    4. '0' → logprob: -12.203924179077148
    5. '   ' → logprob: -12.703924179077148
    6. ' ' → logprob: -13.453924179077148
    7. ' sum' → logprob: -14.078924179077148
    8. ' decimal' → logprob: -14.203924179077148
    9. '.Decimal' → logprob: -14.328924179077148
    10. ' Dec' → logprob: -14.578924179077148

Token 35: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07020717859268188
    2. '('' → logprob: -2.695207118988037
    3. '()' → logprob: -9.070207595825195
    4. '(k' → logprob: -9.945207595825195
    5. '(n' → logprob: -10.070207595825195
    6. '('(' → logprob: -10.695207595825195
    7. '0' → logprob: -11.070207595825195
    8. '("("' → logprob: -11.320207595825195
    9. ''(' → logprob: -12.320207595825195
    10. '((' → logprob: -12.820207595825195

Token 36: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6959976553916931
    2. 'k' → logprob: -0.8209976553916931
    3. 'n' → logprob: -3.320997714996338
    4. '1' → logprob: -3.945997714996338
    5. ''' → logprob: -6.070997714996338
    6. ''n' → logprob: -6.445997714996338
    7. ')' → logprob: -7.570997714996338
    8. '2' → logprob: -7.820997714996338
    9. '10' → logprob: -7.945997714996338
    10. '(' → logprob: -8.32099723815918

Token 37: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.751746746478602e-05
    2. ')
' → logprob: -10.00004768371582
    3. ' )' → logprob: -13.87504768371582
    4. ')

' → logprob: -14.87504768371582
    5. ')
' → logprob: -15.75004768371582
    6. '),' → logprob: -15.87504768371582
    7. '   ' → logprob: -16.62504768371582
    8. ');' → logprob: -17.00004768371582
    9. '}' → logprob: -17.12504768371582
    10. '))' → logprob: -17.25004768371582

Token 38: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010709501802921295
    2. ' ' → logprob: -5.635709285736084
    3. '    
' → logprob: -6.510709285736084
    4. '    ' → logprob: -7.135709285736084
    5. '<|end|>' → logprob: -7.260709285736084
    6. '
' → logprob: -7.385709285736084
    7. '  ' → logprob: -7.510709285736084
    8. ' for' → logprob: -7.510709285736084
    9. '   
' → logprob: -7.510709285736084
    10. ' 
' → logprob: -7.760709285736084

Token 39: ' power' (ID: 3470)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5060258507728577
    2. 'for' → logprob: -1.006025791168213
    3. ' ' → logprob: -4.381025791168213
    4. '\n' → logprob: -5.256025791168213
    5. ' \' → logprob: -5.756025791168213
    6. '\' → logprob: -5.756025791168213
    7. ' 
' → logprob: -5.881025791168213
    8. '   ' → logprob: -6.006025791168213
    9. 'n' → logprob: -7.256025791168213
    10. '   
' → logprob: -8.006026268005371

Token 40: '_of' (ID: 8023)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06074240058660507
    2. ' =' → logprob: -3.3107423782348633
    3. '=' → logprob: -4.310742378234863
    4. 's' → logprob: -5.435742378234863
    5. '   ' → logprob: -6.560742378234863
    6. ')' → logprob: -6.810742378234863
    7. ' ' → logprob: -7.310742378234863
    8. '    ' → logprob: -8.060742378234863
    9. '_' → logprob: -8.185742378234863
    10. '  ' → logprob: -8.310742378234863

Token 41: '_two' (ID: 54305)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.4378071129322052
    2. 'k' → logprob: -1.3128070831298828
    3. '_two' → logprob: -3.437807083129883
    4. 'two' → logprob: -3.562807083129883
    5. '10' → logprob: -5.062807083129883
    6. 'n' → logprob: -5.687807083129883
    7. 'Two' → logprob: -5.937807083129883
    8. '_k' → logprob: -6.187807083129883
    9. 'Decimal' → logprob: -6.312807083129883
    10. '(' → logprob: -6.687807083129883

Token 42: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12726594507694244
    2. '=' → logprob: -2.1272659301757812
    3. 's' → logprob: -8.877265930175781
    4. ' ' → logprob: -9.002265930175781
    5. '**' → logprob: -10.127265930175781
    6. '  ' → logprob: -11.002265930175781
    7. '   ' → logprob: -12.627265930175781
    8. '^' → logprob: -12.752265930175781
    9. ')' → logprob: -13.252265930175781
    10. ' ' → logprob: -13.377265930175781

Token 43: ' [' (ID: 723)
  Prédit: 'Decimal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Decimal' → logprob: -0.5445775985717773
    2. ' Decimal' → logprob: -0.9195775985717773
    3. '1' → logprob: -3.9195775985717773
    4. ' ' → logprob: -7.419577598571777
    5. '2' → logprob: -7.794577598571777
    6. '   ' → logprob: -8.044577598571777
    7. '  ' → logprob: -11.794577598571777
    8. '.Decimal' → logprob: -12.294577598571777
    9. 'Dec' → logprob: -12.419577598571777
    10. 'Decimals' → logprob: -12.482077598571777

Token 44: '1' (ID: 16)
  Prédit: 'Decimal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Decimal' → logprob: -0.0006992113194428384
    2. '1' → logprob: -7.500699043273926
    3. ' Decimal' → logprob: -9.000699043273926
    4. '   ' → logprob: -10.875699043273926
    5. 'Dec' → logprob: -14.125699043273926
    6. '2' → logprob: -14.375699043273926
    7. 'Decimals' → logprob: -14.375699043273926
    8. '0' → logprob: -15.000699043273926
    9. '.Decimal' → logprob: -15.125699043273926
    10. ']' → logprob: -15.125699043273926

Token 45: ' <<' (ID: 2256)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006161278113722801
    2. ',' → logprob: -5.131161212921143
    3. ')' → logprob: -10.1311616897583
    4. ']
' → logprob: -10.1311616897583
    5. '0' → logprob: -10.6311616897583
    6. ']

' → logprob: -10.8811616897583
    7. 'Decimal' → logprob: -11.0061616897583
    8. '```' → logprob: -11.3811616897583
    9. ' ]' → logprob: -11.5061616897583
    10. '2' → logprob: -11.6311616897583

Token 46: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.04281304404139519
    2. '0' → logprob: -3.2928130626678467
    3. ' i' → logprob: -5.542812824249268
    4. '1' → logprob: -8.292813301086426
    5. 'x' → logprob: -8.792813301086426
    6. 'j' → logprob: -8.792813301086426
    7. ' ' → logprob: -9.417813301086426
    8. '(i' → logprob: -10.042813301086426
    9. 'm' → logprob: -10.167813301086426
    10. '(' → logprob: -10.542813301086426

Token 47: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.0015078396536409855
    2. 'for' → logprob: -6.626507759094238
    3. ' ' → logprob: -8.626507759094238
    4. ')' → logprob: -13.876507759094238
    5. '	for' → logprob: -13.876507759094238
    6. ']' → logprob: -14.501507759094238
    7. '<|end|>' → logprob: -16.251508712768555
    8. ' ]' → logprob: -16.376508712768555
    9. '   ' → logprob: -17.126508712768555
    10. '  ' → logprob: -17.126508712768555

Token 48: ' i' (ID: 575)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0034809205681085587
    2. ' i' → logprob: -6.378480911254883
    3. 'range' → logprob: -6.378480911254883
    4. ' ' → logprob: -9.753480911254883
    5. '	range' → logprob: -11.378480911254883
    6. 'i' → logprob: -12.628480911254883
    7. ' xrange' → logprob: -13.253480911254883
    8. '<|end|>' → logprob: -13.378480911254883
    9. '_range' → logprob: -13.753480911254883
    10. '<|end|>' → logprob: -14.128480911254883

Token 49: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0032303521875292063
    2. 'in' → logprob: -5.753230571746826
    3. 'range' → logprob: -10.253230094909668
    4. ' range' → logprob: -11.503230094909668
    5. ' ' → logprob: -12.253230094909668
    6. '<|end|>' → logprob: -13.628230094909668
    7. '<|end|>' → logprob: -14.628230094909668
    8. 'n' → logprob: -15.253230094909668
    9. 's' → logprob: -16.128231048583984
    10. '  ' → logprob: -16.878231048583984

Token 50: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.16023093461990356
    2. ' range' → logprob: -1.9102308750152588
    3. '   ' → logprob: -12.91023063659668
    4. '	range' → logprob: -13.16023063659668
    5. ' ' → logprob: -13.53523063659668
    6. '(range' → logprob: -14.16023063659668
    7. '  ' → logprob: -15.91023063659668
    8. ' xrange' → logprob: -17.03523063659668
    9. '```' → logprob: -17.91023063659668
    10. '.range' → logprob: -18.03523063659668

Token 51: '(' (ID: 7)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.19234149158000946
    2. '(n' → logprob: -1.8173414468765259
    3. '(' → logprob: -4.692341327667236
    4. 'k' → logprob: -5.817341327667236
    5. ' (' → logprob: -8.192341804504395
    6. ' k' → logprob: -10.067341804504395
    7. 'n' → logprob: -10.067341804504395
    8. '   ' → logprob: -12.567341804504395
    9. ' n' → logprob: -12.692341804504395
    10. ')' → logprob: -13.317341804504395

Token 52: '31' (ID: 2911)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.008355825208127499
    2. ' k' → logprob: -5.383355617523193
    3. 'n' → logprob: -5.633355617523193
    4. ' n' → logprob: -8.883356094360352
    5. '   ' → logprob: -12.383356094360352
    6. '(k' → logprob: -12.383356094360352
    7. '(n' → logprob: -13.883356094360352
    8. 'nk' → logprob: -14.633356094360352
    9. '(' → logprob: -14.758356094360352
    10. ' ' → logprob: -14.883356094360352

Token 53: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00022821188031230122
    2. ']' → logprob: -9.250227928161621
    3. ')' → logprob: -10.000227928161621
    4. ' )' → logprob: -10.125227928161621
    5. '   ' → logprob: -10.500227928161621
    6. ' ]' → logprob: -12.625227928161621
    7. ')])' → logprob: -12.625227928161621
    8. '])]' → logprob: -12.625227928161621
    9. ' ' → logprob: -13.250227928161621
    10. '')]' → logprob: -13.500227928161621

Token 54: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01982981711626053
    2. ' for' → logprob: -4.644829750061035
    3. '    
' → logprob: -5.894829750061035
    4. '<|end|>' → logprob: -5.894829750061035
    5. ' ' → logprob: -6.269829750061035
    6. 'for' → logprob: -7.144829750061035
    7. '    ' → logprob: -7.894829750061035
    8. '
' → logprob: -8.394829750061035
    9. ')' → logprob: -8.394829750061035
    10. '  
' → logprob: -8.894829750061035

Token 55: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2934238016605377
    2. ' for' → logprob: -1.6684237718582153
    3. 'for' (adapté à ' for') → logprob: -2.793423891067505
    4. ' ' → logprob: -6.168423652648926
    5. '    
' → logprob: -7.543423652648926
    6. '
' → logprob: -7.668423652648926
    7. '    ' → logprob: -8.043423652648926
    8. '  ' → logprob: -8.168423652648926
    9. '<|end|>' → logprob: -8.168423652648926
    10. '\n' → logprob: -9.293423652648926

Token 56: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0015667574480175972
    2. ' ' → logprob: -7.0015668869018555
    3. ' _' → logprob: -7.7515668869018555
    4. '_' → logprob: -9.251566886901855
    5. ' range' → logprob: -9.751566886901855
    6. ' n' → logprob: -10.251566886901855
    7. 'i' → logprob: -10.626566886901855
    8. ' ' → logprob: -13.126566886901855
    9. '_i' → logprob: -13.126566886901855
    10. ' space' → logprob: -13.626566886901855

Token 57: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007708839140832424
    2. 'in' → logprob: -4.88270902633667
    3. ' ' → logprob: -9.257708549499512
    4. '<|end|>' → logprob: -13.257708549499512
    5. '  ' → logprob: -13.382708549499512
    6. ',' → logprob: -14.507708549499512
    7. '0' → logprob: -14.882708549499512
    8. 'range' → logprob: -14.882708549499512
    9. '	in' → logprob: -15.007708549499512
    10. '1' → logprob: -15.132708549499512

Token 58: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.00408801669254899
    2. 'range' → logprob: -5.504087924957275
    3. ' ' → logprob: -12.129088401794434
    4. '(range' → logprob: -12.754088401794434
    5. '	range' → logprob: -14.254088401794434
    6. '(' → logprob: -16.004087448120117
    7. '   ' → logprob: -16.129087448120117
    8. ' n' → logprob: -16.129087448120117
    9. ' ' → logprob: -16.754087448120117
    10. '  ' → logprob: -17.129087448120117

Token 59: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4644068479537964
    2. '(n' → logprob: -1.4644068479537964
    3. '(k' → logprob: -1.9644068479537964
    4. ' (' → logprob: -10.714406967163086
    5. '(i' → logprob: -11.339406967163086
    6. ' k' → logprob: -13.589406967163086
    7. ' ' → logprob: -13.839406967163086
    8. '((' → logprob: -14.589406967163086
    9. '1' → logprob: -14.964406967163086
    10. ' n' → logprob: -15.964406967163086

Token 60: '1' (ID: 16)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.20747099816799164
    2. '1' → logprob: -2.0824708938598633
    3. 'n' → logprob: -2.8324708938598633
    4. '(k' → logprob: -6.457470893859863
    5. '(' → logprob: -6.832470893859863
    6. '(n' → logprob: -7.332470893859863
    7. '0' → logprob: -7.957470893859863
    8. '31' → logprob: -9.707470893859863
    9. ')' → logprob: -10.207470893859863
    10. 'min' → logprob: -10.707470893859863

Token 61: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011280892416834831
    2. ' ,' → logprob: -4.5112810134887695
    3. ',n' → logprob: -8.38628101348877
    4. ' ' → logprob: -13.01128101348877
    5. ',k' → logprob: -13.88628101348877
    6. '   ' → logprob: -14.76128101348877
    7. ',i' → logprob: -14.88628101348877
    8. '，' → logprob: -15.63628101348877
    9. '‌,' → logprob: -15.63628101348877
    10. ',len' → logprob: -15.88628101348877

Token 62: ' n' (ID: 297)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.8514586091041565
    2. ' k' → logprob: -0.9764586091041565
    3. ' n' → logprob: -1.9764585494995117
    4. 'n' → logprob: -2.8514585494995117
    5. ' min' → logprob: -8.976458549499512
    6. 'min' → logprob: -10.351458549499512
    7. '31' → logprob: -10.601458549499512
    8. ' ' → logprob: -10.726458549499512
    9. '32' → logprob: -11.726458549499512
    10. '30' → logprob: -12.101458549499512

Token 63: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2014772593975067
    2. ' +' → logprob: -1.701477289199829
    3. '):' → logprob: -9.82647705078125
    4. '   ' → logprob: -12.57647705078125
    5. '):
' → logprob: -13.07647705078125
    6. '1' → logprob: -13.82647705078125
    7. ',' → logprob: -14.07647705078125
    8. ' ' → logprob: -14.45147705078125
    9. ' +
' → logprob: -15.32647705078125
    10. ')' → logprob: -15.45147705078125

Token 64: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014165159314870834
    2. ' ' → logprob: -4.264164924621582
    3. '2' → logprob: -14.389164924621582
    4. '```' → logprob: -15.014164924621582
    5. '   ' → logprob: -15.264164924621582
    6. ')' → logprob: -16.2641658782959
    7. ' ' → logprob: -16.8266658782959
    8. '

' → logprob: -17.2641658782959
    9. '  ' → logprob: -17.2641658782959
    10. '۱' → logprob: -17.3266658782959

Token 65: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.5716304410016164e-05
    2. ' ' → logprob: -10.250035285949707
    3. '2' → logprob: -16.000036239624023
    4. '   ' → logprob: -16.500036239624023
    5. '```' → logprob: -16.937536239624023
    6. ')' → logprob: -17.125036239624023
    7. '１' → logprob: -18.187536239624023
    8. '۱' → logprob: -18.500036239624023
    9. '  ' → logprob: -18.812536239624023
    10. '१' → logprob: -19.062536239624023

Token 66: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.023643048480153084
    2. ':' → logprob: -3.7736430168151855
    3. ' ):' → logprob: -8.148643493652344
    4. ')' → logprob: -9.398643493652344
    5. ' :' → logprob: -11.773643493652344
    6. ',' → logprob: -11.898643493652344
    7. '):
' → logprob: -12.398643493652344
    8. '   ' → logprob: -13.523643493652344
    9. ':)' → logprob: -13.648643493652344
    10. ']:' → logprob: -13.898643493652344

Token 67: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13954061269760132
    2. ' ' → logprob: -2.764540672302246
    3. '<|end|>' → logprob: -3.264540672302246
    4. '    ' → logprob: -4.514540672302246
    5. '   ' → logprob: -4.639540672302246
    6. ' 
' → logprob: -6.014540672302246
    7. '        
' → logprob: -6.514540672302246
    8. '        ' → logprob: -7.139540672302246
    9. '<|end|>' → logprob: -7.639540672302246
    10. '     ' → logprob: -7.639540672302246

Token 68: ' #' (ID: 1069)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6103042364120483
    2. ' total' → logprob: -1.3603042364120483
    3. '       ' → logprob: -2.485304355621338
    4. '    ' → logprob: -3.110304355621338
    5. 'total' → logprob: -3.485304355621338
    6. ' for' → logprob: -4.360304355621338
    7. '   ' → logprob: -4.985304355621338
    8. ')' → logprob: -5.485304355621338
    9. ' power' → logprob: -5.610304355621338
    10. ' 
' → logprob: -5.985304355621338

Token 69: ' Binary' (ID: 32672)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' total' → logprob: -1.0823326110839844
    2. ' for' → logprob: -1.3323326110839844
    3. 'prob' → logprob: -2.0823326110839844
    4. ' probability' → logprob: -2.8323326110839844
    5. 'total' → logprob: -3.3323326110839844
    6. ' power' → logprob: -3.3323326110839844
    7. 'for' → logprob: -3.9573326110839844
    8. 'factor' → logprob: -4.082332611083984
    9. ' prob' → logprob: -4.332332611083984
    10. ' term' → logprob: -4.457332611083984

Token 70: ' search' (ID: 3684)
  Prédit: '_value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_value' → logprob: -1.8397985696792603
    2. '_prob' → logprob: -2.0897984504699707
    3. '_repr' → logprob: -2.5897984504699707
    4. '_rep' → logprob: -2.7147984504699707
    5. '_weight' → logprob: -2.7147984504699707
    6. 'prob' → logprob: -2.7147984504699707
    7. '_probability' → logprob: -2.7147984504699707
    8. '_count' → logprob: -3.3397984504699707
    9. '_power' → logprob: -3.7147984504699707
    10. '_sum' → logprob: -3.7147984504699707

Token 71: ' for' (ID: 395)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 72: ' minimal' (ID: 19957)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.8922547101974487
    2. ' the' → logprob: -2.3922548294067383
    3. ' low' → logprob: -2.3922548294067383
    4. ' mid' → logprob: -2.3922548294067383
    5. ' k' → logprob: -2.5172548294067383
    6. 'j' → logprob: -2.6422548294067383
    7. 'mid' → logprob: -3.0172548294067383
    8. 'k' → logprob: -3.5172548294067383
    9. ' left' → logprob: -3.5172548294067383
    10. 'm' → logprob: -4.267254829406738

Token 73: ' t' (ID: 260)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.566618800163269
    2. ' mid' → logprob: -1.441618800163269
    3. ' m' → logprob: -2.4416189193725586
    4. 'mid' → logprob: -3.0666189193725586
    5. 'j' → logprob: -4.066618919372559
    6. ' midpoint' → logprob: -4.316618919372559
    7. 'm' → logprob: -4.941618919372559
    8. ' x' → logprob: -5.066618919372559
    9. ' ' → logprob: -5.441618919372559
    10. '<|end|>' → logprob: -5.691618919372559

Token 74: ' such' (ID: 2238)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 75: ' that' (ID: 484)
  Prédit: ' that'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' that' → logprob: -0.3193957209587097
    2. 'that' → logprob: -1.3193957805633545
    3. '<|end|>' → logprob: -5.694395542144775
    4. 't' → logprob: -7.069395542144775
    5. '_that' → logprob: -7.444395542144775
    6. '       ' → logprob: -7.569395542144775
    7. 'hat' → logprob: -8.694396018981934
    8. '<|end|>' → logprob: -9.444396018981934
    9. ' t' → logprob: -9.569396018981934
    10. '        ' → logprob: -9.819396018981934

Token 76: ' i' (ID: 575)
  Prédit: ' power'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' power' → logprob: -0.11445794999599457
    2. 'power' → logprob: -3.239457845687866
    3. '(power' → logprob: -3.364457845687866
    4. ' (' → logprob: -3.864457845687866
    5. ' k' → logprob: -5.864458084106445
    6. '(' → logprob: -5.989458084106445
    7. ' t' → logprob: -6.239458084106445
    8. ' pow' → logprob: -6.489458084106445
    9. ' ' → logprob: -7.114458084106445
    10. 'pow' → logprob: -7.114458084106445

Token 77: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.117650605738163
    2. '*' → logprob: -2.2426505088806152
    3. '*t' → logprob: -6.742650508880615
    4. ' <=' → logprob: -6.867650508880615
    5. '**' → logprob: -7.367650508880615
    6. '*i' → logprob: -7.617650508880615
    7. ' ' → logprob: -8.117650985717773
    8. ' **' → logprob: -8.742650985717773
    9. '<=' → logprob: -8.867650985717773
    10. '*p' → logprob: -8.867650985717773

Token 78: ' t' (ID: 260)
  Prédit: ' power'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' power' → logprob: -0.22151346504688263
    2. 'power' → logprob: -1.7215135097503662
    3. ' ' → logprob: -5.096513271331787
    4. ' t' → logprob: -5.721513271331787
    5. 'pow' → logprob: -6.096513271331787
    6. ' (' → logprob: -6.221513271331787
    7. '2' → logprob: -6.346513271331787
    8. '(power' → logprob: -6.471513271331787
    9. 't' → logprob: -6.846513271331787
    10. '(' → logprob: -7.346513271331787

Token 79: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.11434482038021088
    2. '>=' → logprob: -2.239344835281372
    3. ' >' → logprob: -7.739344596862793
    4. '*' → logprob: -8.489344596862793
    5. ' ' → logprob: -8.489344596862793
    6. '>' → logprob: -8.739344596862793
    7. '**' → logprob: -9.239344596862793
    8. ' *' → logprob: -9.364344596862793
    9. ' <=' → logprob: -9.364344596862793
    10. ')>=' → logprob: -9.989344596862793

Token 80: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.2015574723482132
    2. ' k' → logprob: -1.7015575170516968
    3. ' n' → logprob: -9.826557159423828
    4. 'n' → logprob: -9.826557159423828
    5. ' (' → logprob: -11.701557159423828
    6. '1' → logprob: -12.201557159423828
    7. ' ' → logprob: -12.201557159423828
    8. '(' → logprob: -12.451557159423828
    9. '2' → logprob: -12.701557159423828
    10. '(k' → logprob: -12.826557159423828

Token 81: ' with' (ID: 483)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16361969709396362
    2. '       ' → logprob: -2.6636197566986084
    3. '   ' → logprob: -2.7886197566986084
    4. '<|end|>' → logprob: -4.413619518280029
    5. ' ' → logprob: -5.788619518280029
    6. ' :' → logprob: -7.163619518280029
    7. ')' → logprob: -7.413619518280029
    8. '  ' → logprob: -7.788619518280029
    9. '<|end|>' → logprob: -7.913619518280029
    10. '    ' → logprob: -7.913619518280029

Token 82: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -1.2988395690917969
    2. ' i' → logprob: -1.6738395690917969
    3. 't' → logprob: -1.7988395690917969
    4. 'out' → logprob: -2.048839569091797
    5. 'in' → logprob: -2.173839569091797
    6. 'i' → logprob: -2.548839569091797
    7. ' ' → logprob: -5.173839569091797
    8. ' (' → logprob: -5.673839569091797
    9. ' the' → logprob: -5.798839569091797
    10. '    ' → logprob: -5.798839569091797

Token 83: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7152879238128662
    2. '=' → logprob: -0.8402879238128662
    3. '<|end|>' → logprob: -3.465287923812866
    4. '>=' → logprob: -3.590287923812866
    5. ' >=' → logprob: -4.715288162231445
    6. ':' → logprob: -5.840288162231445
    7. '<|end|>' → logprob: -5.840288162231445
    8. '*' → logprob: -6.090288162231445
    9. ' *' → logprob: -6.840288162231445
    10. ')' → logprob: -7.840288162231445

Token 84: ' ' (ID: 220)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.13597196340560913
    2. ' power' → logprob: -2.885972023010254
    3. '(power' → logprob: -2.885972023010254
    4. 'power' → logprob: -5.010972023010254
    5. '(' → logprob: -5.885972023010254
    6. '(k' → logprob: -6.260972023010254
    7. ' ' → logprob: -6.385972023010254
    8. '(n' → logprob: -7.635972023010254
    9. '0' → logprob: -7.885972023010254
    10. '(i' → logprob: -8.010972023010254

Token 85: '2' (ID: 17)
  Prédit: '(power'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(power' → logprob: -0.44050073623657227
    2. ' (' → logprob: -1.5655007362365723
    3. '(k' → logprob: -2.5655007362365723
    4. '(' → logprob: -3.4405007362365723
    5. 'power' → logprob: -3.9405007362365723
    6. '(i' → logprob: -5.190500736236572
    7. '0' → logprob: -5.440500736236572
    8. '1' → logprob: -6.190500736236572
    9. '(n' → logprob: -6.565500736236572
    10. 'k' → logprob: -6.690500736236572

Token 86: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.4482029378414154
    2. ' **' → logprob: -1.0732029676437378
    3. '<|end|>' → logprob: -4.573203086853027
    4. ')' → logprob: -5.323203086853027
    5. '```' → logprob: -7.198203086853027
    6. ' ' → logprob: -7.198203086853027
    7. '<|end|>' → logprob: -7.698203086853027
    8. ' -' → logprob: -8.198203086853027
    9. ',' → logprob: -8.823203086853027
    10. ']' → logprob: -8.948203086853027

Token 87: 'm' (ID: 76)
  Prédit: 'power'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'power' → logprob: -1.014267086982727
    2. '(' → logprob: -1.514267086982727
    3. '0' → logprob: -1.889267086982727
    4. 't' → logprob: -2.0142669677734375
    5. '(power' → logprob: -2.7642669677734375
    6. 'i' → logprob: -3.7642669677734375
    7. 'x' → logprob: -5.5142669677734375
    8. '[' → logprob: -5.5142669677734375
    9. 'pow' → logprob: -5.5142669677734375
    10. '-' → logprob: -5.7642669677734375

Token 88: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.17250491678714752
    2. '       ' → logprob: -2.4225049018859863
    3. '   ' → logprob: -2.9225049018859863
    4. '<|end|>' → logprob: -4.797504901885986
    5. ' ' → logprob: -5.797504901885986
    6. '    ' → logprob: -6.547504901885986
    7. ' :' → logprob: -7.047504901885986
    8. '  ' → logprob: -7.547504901885986
    9. '<|end|>' → logprob: -7.922504901885986
    10. '        ' → logprob: -8.422505378723145

Token 89: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5540850758552551
    2. ':' → logprob: -1.0540850162506104
    3. '   ' → logprob: -2.9290850162506104
    4. '<|end|>' → logprob: -4.0540852546691895
    5. '):' → logprob: -6.1790852546691895
    6. ')' → logprob: -7.0540852546691895
    7. ',' → logprob: -7.0540852546691895
    8. '<|end|>' → logprob: -7.3040852546691895
    9. ' ' → logprob: -7.6790852546691895
    10. '    ' → logprob: -8.429084777832031

Token 90: ' left' (ID: 3561)
  Prédit: ' t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.9937142133712769
    2. ' low' → logprob: -1.2437142133712769
    3. ' left' → logprob: -2.3687143325805664
    4. 't' → logprob: -2.7437143325805664
    5. '   ' → logprob: -3.1187143325805664
    6. '    ' → logprob: -3.4937143325805664
    7. ' for' → logprob: -3.6187143325805664
    8. 'low' → logprob: -3.7437143325805664
    9. ' lo' → logprob: -4.118714332580566
    10. ' if' → logprob: -4.368714332580566

Token 91: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13127946853637695
    2. ' =' → logprob: -2.506279468536377
    3. '=' → logprob: -3.256279468536377
    4. '<|end|>' → logprob: -5.881279468536377
    5. ' ' → logprob: -10.006278991699219
    6. '<|end|>' → logprob: -10.131278991699219
    7. ' ,' → logprob: -10.256278991699219
    8. '   ' → logprob: -13.256278991699219
    9. '```' → logprob: -13.256278991699219
    10. ',
' → logprob: -13.631278991699219

Token 92: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.16022889316082
    2. ' right' → logprob: -1.9102288484573364
    3. '	right' → logprob: -13.535228729248047
    4. ',right' → logprob: -13.910228729248047
    5. '```' → logprob: -14.160228729248047
    6. '[right' → logprob: -14.160228729248047
    7. '=' → logprob: -15.160228729248047
    8. ':right' → logprob: -15.160228729248047
    9. ' ' → logprob: -16.035228729248047
    10. '<|end|>' → logprob: -16.410228729248047

Token 93: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005248818546533585
    2. '=' → logprob: -5.2552490234375
    3. ',' → logprob: -11.6302490234375
    4. ' ' → logprob: -12.3802490234375
    5. '<|end|>' → logprob: -13.6302490234375
    6. '   ' → logprob: -15.1302490234375
    7. '  ' → logprob: -16.1302490234375
    8. ':' → logprob: -16.5052490234375
    9. '    ' → logprob: -16.5052490234375
    10. ')' → logprob: -17.0052490234375

Token 94: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6933544874191284
    2. ' ' → logprob: -0.6933544874191284
    3. '1' → logprob: -9.068354606628418
    4. '30' → logprob: -10.318354606628418
    5. '31' → logprob: -10.818354606628418
    6. '32' → logprob: -11.818354606628418
    7. '20' → logprob: -11.818354606628418
    8. '16' → logprob: -12.193354606628418
    9. '19' → logprob: -12.943354606628418
    10. '  ' → logprob: -13.505854606628418

Token 95: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.949026571121067e-05
    2. ' ' → logprob: -9.750099182128906
    3. '31' → logprob: -10.750099182128906
    4. '30' → logprob: -11.500099182128906
    5. '1' → logprob: -11.750099182128906
    6. '16' → logprob: -14.500099182128906
    7. '32' → logprob: -15.750099182128906
    8. '   ' → logprob: -15.750099182128906
    9. '20' → logprob: -16.000099182128906
    10. '(' → logprob: -16.000099182128906

Token 96: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006353077478706837
    2. ' ,' → logprob: -5.50635290145874
    3. '<|end|>' → logprob: -7.00635290145874
    4. ',
' → logprob: -7.75635290145874
    5. ' ' → logprob: -8.006353378295898
    6. '   ' → logprob: -8.506353378295898
    7. '       ' → logprob: -8.506353378295898
    8. '30' → logprob: -9.756353378295898
    9. '31' → logprob: -10.131353378295898
    10. '
' → logprob: -11.381353378295898

Token 97: ' ' (ID: 220)
  Prédit: '30'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '30' → logprob: -0.0015873430529609323
    2. '31' → logprob: -6.626587390899658
    3. ' ' → logprob: -8.2515869140625
    4. '20' → logprob: -15.3765869140625
    5. '   ' → logprob: -15.6265869140625
    6. '29' → logprob: -16.8765869140625
    7. '３０' → logprob: -17.5015869140625
    8. ' thirty' → logprob: -17.7515869140625
    9. '۳۰' → logprob: -17.8765869140625
    10. '300' → logprob: -18.5015869140625

Token 98: '30' (ID: 1130)
  Prédit: '30'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '30' → logprob: -0.008775881491601467
    2. '31' → logprob: -4.75877571105957
    3. ' ' → logprob: -8.75877571105957
    4. '20' → logprob: -12.75877571105957
    5. '15' → logprob: -15.00877571105957
    6. '29' → logprob: -15.25877571105957
    7. '300' → logprob: -16.25877571105957
    8. '25' → logprob: -16.25877571105957
    9. '10' → logprob: -16.38377571105957
    10. '   ' → logprob: -16.38377571105957

Token 99: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8433026671409607
    2. '<|end|>' → logprob: -0.8433026671409607
    3. '       ' → logprob: -2.3433027267456055
    4. '   ' → logprob: -3.7183027267456055
    5. '<|end|>' → logprob: -4.2183027267456055
    6. ' ' → logprob: -6.7183027267456055
    7. '    
' → logprob: -7.7183027267456055
    8. ' while' → logprob: -7.7183027267456055
    9. '  
' → logprob: -7.7183027267456055
    10. '    ' → logprob: -8.218302726745605

Token 100: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 101: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.25180259346961975
    2. '       ' → logprob: -1.7518025636672974
    3. 'while' (adapté à ' while') → logprob: -3.876802682876587
    4. '   ' → logprob: -4.376802444458008
    5. '<|end|>' → logprob: -4.751802444458008
    6. '
' → logprob: -5.501802444458008
    7. '	while' → logprob: -6.251802444458008
    8. ' ' → logprob: -7.251802444458008
    9. '<|end|>' → logprob: -8.626802444458008
    10. '  ' → logprob: -9.501802444458008

Token 102: ' left' (ID: 3561)
  Prédit: ' left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.06200108304619789
    2. 'left' → logprob: -2.8120009899139404
    3. ' lef' → logprob: -10.68700122833252
    4. '	left' → logprob: -12.18700122833252
    5. ' ' → logprob: -12.68700122833252
    6. '(left' → logprob: -13.93700122833252
    7. '_left' → logprob: -14.43700122833252
    8. '[left' → logprob: -14.68700122833252
    9. ' right' → logprob: -15.56200122833252
    10. ' not' → logprob: -15.68700122833252

Token 103: ' <' (ID: 464)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.16083694994449615
    2. '<=' → logprob: -1.910836935043335
    3. ' <' → logprob: -7.785837173461914
    4. '<' → logprob: -9.160837173461914
    5. '<|end|>' → logprob: -9.535837173461914
    6. ' ≤' → logprob: -12.160837173461914
    7. ')<=' → logprob: -12.535837173461914
    8. ']<=' → logprob: -12.785837173461914
    9. ' <=",' → logprob: -13.285837173461914
    10. ' ' → logprob: -13.535837173461914

Token 104: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.0019287518225610256
    2. ' right' → logprob: -6.251928806304932
    3. '=' → logprob: -16.001928329467773
    4. '	right' → logprob: -18.751928329467773
    5. ' ' → logprob: -19.751928329467773
    6. '[right' → logprob: -19.876928329467773
    7. ':right' → logprob: -19.876928329467773
    8. 'Right' → logprob: -20.751928329467773
    9. 'rightness' → logprob: -20.751928329467773
    10. '(right' → logprob: -21.001928329467773

Token 105: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1784835159778595
    2. ':
' → logprob: -2.303483486175537
    3. '<|end|>' → logprob: -3.053483486175537
    4. '<|end|>' → logprob: -4.678483486175537
    5. ' and' → logprob: -5.803483486175537
    6. '       ' → logprob: -6.053483486175537
    7. '   ' → logprob: -7.928483486175537
    8. ' ' → logprob: -8.303483963012695
    9. '
' → logprob: -8.428483963012695
    10. '):
' → logprob: -8.678483963012695

Token 106: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3428349792957306
    2. '           ' → logprob: -1.5928349494934082
    3. '<|end|>' → logprob: -2.967834949493408
    4. '   ' → logprob: -4.842834949493408
    5. '<|end|>' → logprob: -5.217834949493408
    6. '
' → logprob: -5.717834949493408
    7. ' ' → logprob: -5.717834949493408
    8. '        
' → logprob: -5.842834949493408
    9. '  
' → logprob: -6.217834949493408
    10. '1' → logprob: -6.342834949493408

Token 107: ' mid' (ID: 6959)
  Prédit: ' mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mid' → logprob: -0.6717455983161926
    2. 'mid' (adapté à ' mid') → logprob: -1.0467455387115479
    3. '           ' → logprob: -2.171745538711548
    4. ' ' → logprob: -5.421745777130127
    5. '       ' → logprob: -5.671745777130127
    6. '               ' → logprob: -5.796745777130127
    7. ' middle' → logprob: -5.921745777130127
    8. 'middle' → logprob: -6.296745777130127
    9. 'm' → logprob: -6.921745777130127
    10. '[mid' → logprob: -7.046745777130127

Token 108: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.017420848831534386
    2. '<|end|>' → logprob: -4.517420768737793
    3. '=' → logprob: -5.142420768737793
    4. ' ' → logprob: -8.642420768737793
    5. '<|end|>' → logprob: -8.767420768737793
    6. ')' → logprob: -8.767420768737793
    7. ',' → logprob: -12.267420768737793
    8. '=int' → logprob: -12.767420768737793
    9. ' =)' → logprob: -13.017420768737793
    10. ' =
' → logprob: -14.017420768737793

Token 109: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.20142921805381775
    2. '(left' → logprob: -1.7014292478561401
    3. '(right' → logprob: -11.70142936706543
    4. '(mid' → logprob: -12.32642936706543
    5. ' ' → logprob: -13.20142936706543
    6. '[left' → logprob: -14.57642936706543
    7. ' left' → logprob: -14.95142936706543
    8. '(lhs' → logprob: -15.70142936706543
    9. 'left' → logprob: -15.82642936706543
    10. '(line' → logprob: -16.57642936706543

Token 110: 'left' (ID: 4530)
  Prédit: 'left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -4.5491004129871726e-05
    2. ' left' → logprob: -10.000045776367188
    3. 'right' → logprob: -17.500045776367188
    4. '	left' → logprob: -17.875045776367188
    5. '(left' → logprob: -18.500045776367188
    6. '[left' → logprob: -19.125045776367188
    7. ')' → logprob: -20.625045776367188
    8. '_left' → logprob: -20.625045776367188
    9. ':left' → logprob: -20.750045776367188
    10. ' ' → logprob: -20.875045776367188

Token 111: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.01816480979323387
    2. '+' → logprob: -4.01816463470459
    3. '<|end|>' → logprob: -11.26816463470459
    4. ' ' → logprob: -13.64316463470459
    5. ' +
' → logprob: -14.64316463470459
    6. '<|end|>' → logprob: -15.39316463470459
    7. '+s' → logprob: -17.393165588378906
    8. ')' → logprob: -17.643165588378906
    9. '+x' → logprob: -17.643165588378906
    10. ' plus' → logprob: -17.643165588378906

Token 112: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.008614926598966122
    2. ' right' → logprob: -4.758615016937256
    3. '	right' → logprob: -15.383614540100098
    4. '[right' → logprob: -15.633614540100098
    5. '(right' → logprob: -16.758615493774414
    6. '   ' → logprob: -18.383615493774414
    7. ':right' → logprob: -18.633615493774414
    8. ' ' → logprob: -18.883615493774414
    9. '.right' → logprob: -19.133615493774414
    10. ')' → logprob: -19.508615493774414

Token 113: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.7755875129951164e-05
    2. ')//' → logprob: -10.37504768371582
    3. ' )' → logprob: -11.37504768371582
    4. ')>>' → logprob: -12.25004768371582
    5. '+' → logprob: -16.12504768371582
    6. ' +' → logprob: -17.00004768371582
    7. ')
' → logprob: -17.50004768371582
    8. '0' → logprob: -17.75004768371582
    9. '1' → logprob: -18.00004768371582
    10. '）' → logprob: -18.37504768371582

Token 114: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.0041927252896130085
    2. '//' → logprob: -5.87919282913208
    3. ' >>' → logprob: -7.00419282913208
    4. '>>' → logprob: -8.504192352294922
    5. ' ' → logprob: -8.879192352294922
    6. ')' → logprob: -9.129192352294922
    7. ' ' → logprob: -11.879192352294922
    8. ')//' → logprob: -12.504192352294922
    9. '1' → logprob: -12.879192352294922
    10. '2' → logprob: -13.004192352294922

Token 115: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0031777136027812958
    2. ' ' → logprob: -5.753177642822266
    3. '۲' → logprob: -18.628177642822266
    4. '```' → logprob: -18.628177642822266
    5. '   ' → logprob: -19.003177642822266
    6. '<|end|>' → logprob: -19.253177642822266
    7. '  ' → logprob: -19.690677642822266
    8. '=' → logprob: -19.753177642822266
    9. '२' → logprob: -19.940677642822266
    10. '>' → logprob: -20.690677642822266

Token 116: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. '۲' → logprob: -17.87500762939453
    4. '1' → logprob: -18.37500762939453
    5. '२' → logprob: -19.18750762939453
    6. '3' → logprob: -19.37500762939453
    7. '২' → logprob: -19.75000762939453
    8. '٢' → logprob: -20.25000762939453
    9. '=' → logprob: -20.43750762939453
    10. '２' → logprob: -20.43750762939453

Token 117: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 118: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04102058336138725
    2. '<|end|>' → logprob: -4.041020393371582
    3. '       ' → logprob: -5.541020393371582
    4. ' 
' → logprob: -5.666020393371582
    5. ' if' → logprob: -5.916020393371582
    6. '  
' → logprob: -5.916020393371582
    7. '            
' → logprob: -5.916020393371582
    8. '
' → logprob: -6.041020393371582
    9. ' ' → logprob: -6.041020393371582
    10. '<|end|>' → logprob: -7.291020393371582

Token 119: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6419210433959961
    2. '           ' → logprob: -0.7669210433959961
    3. 'if' (adapté à ' if') → logprob: -5.516921043395996
    4. '
' → logprob: -6.141921043395996
    5. '       ' → logprob: -6.266921043395996
    6. ' ' → logprob: -8.016921043395996
    7. '   ' → logprob: -8.141921043395996
    8. ' 
' → logprob: -8.766921043395996
    9. '            
' → logprob: -9.141921043395996
    10. '  
' → logprob: -9.891921043395996

Token 120: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4346971809864044
    2. ' i' → logprob: -1.059697151184082
    3. '   ' → logprob: -5.809697151184082
    4. 'power' → logprob: -6.309697151184082
    5. ' power' → logprob: -7.434697151184082
    6. ' ' → logprob: -8.934697151184082
    7. ' (' → logprob: -8.934697151184082
    8. '(' → logprob: -9.684697151184082
    9. '(i' → logprob: -9.809697151184082
    10. '  ' → logprob: -10.309697151184082

Token 121: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.07890256494283676
    2. '*' → logprob: -2.57890248298645
    3. ' ' → logprob: -11.578902244567871
    4. ' ' → logprob: -13.953902244567871
    5. '
' → logprob: -14.328902244567871
    6. '   ' → logprob: -14.453902244567871
    7. '**' → logprob: -14.453902244567871
    8. ' **' → logprob: -15.578902244567871
    9. '*object' → logprob: -15.578902244567871
    10. '```' → logprob: -16.078903198242188

Token 122: ' power' (ID: 3470)
  Prédit: 'power'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'power' → logprob: -0.11289428919553757
    2. ' power' → logprob: -2.237894296646118
    3. '(power' → logprob: -9.862894058227539
    4. 'pow' → logprob: -11.112894058227539
    5. ' ' → logprob: -13.487894058227539
    6. ' (' → logprob: -14.112894058227539
    7. '_power' → logprob: -14.362894058227539
    8. '(' → logprob: -14.362894058227539
    9. '2' → logprob: -14.737894058227539
    10. 'powers' → logprob: -15.112894058227539

Token 123: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: 0.0
    2. 'of' → logprob: -17.5
    3. '[' → logprob: -17.75
    4. '_' → logprob: -18.125
    5. ' of' → logprob: -18.75
    6. '[_' → logprob: -19.0
    7. 's' → logprob: -19.5
    8. '_OF' → logprob: -19.5
    9. ' _' → logprob: -19.75
    10. 'Of' → logprob: -20.125

Token 124: '_two' (ID: 54305)
  Prédit: '_two'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_two' → logprob: -0.07889463007450104
    2. 'two' → logprob: -2.57889461517334
    3. ' two' → logprob: -13.32889461517334
    4. 't' → logprob: -13.82889461517334
    5. 'Two' → logprob: -14.20389461517334
    6. '_TWO' → logprob: -14.70389461517334
    7. '_tw' → logprob: -14.95389461517334
    8. '-two' → logprob: -15.32889461517334
    9. 'tw' → logprob: -15.95389461517334
    10. '_t' → logprob: -16.078895568847656

Token 125: '[mid' (ID: 82578)
  Prédit: '[mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[mid' → logprob: -1.7432603272027336e-06
    2. 'mid' → logprob: -13.750001907348633
    3. '[m' → logprob: -14.875001907348633
    4. ' [' → logprob: -16.125001907348633
    5. '[' → logprob: -16.250001907348633
    6. '(mid' → logprob: -18.000001907348633
    7. '][' → logprob: -18.125001907348633
    8. '[min' → logprob: -18.750001907348633
    9. ')[' → logprob: -19.000001907348633
    10. '[
' → logprob: -19.375001907348633

Token 126: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1437913179397583
    2. ']>=' → logprob: -2.1437911987304688
    3. '>=' → logprob: -4.393791198730469
    4. '<' → logprob: -6.518791198730469
    5. ' >=' → logprob: -6.643791198730469
    6. ']<' → logprob: -6.893791198730469
    7. ' <' → logprob: -7.893791198730469
    8. '[' → logprob: -9.893791198730469
    9. ')>=' → logprob: -10.143791198730469
    10. ' ]' → logprob: -10.268791198730469

Token 127: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.4835241436958313
    2. ' >=' → logprob: -1.7335240840911865
    3. '<' → logprob: -2.1085240840911865
    4. ' <' → logprob: -2.4835240840911865
    5. ']>=' → logprob: -7.358524322509766
    6. ' ' → logprob: -7.608524322509766
    7. ')>=' → logprob: -8.233524322509766
    8. ')' → logprob: -8.858524322509766
    9. '<int' → logprob: -9.108524322509766
    10. '<n' → logprob: -9.233524322509766

Token 128: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.4740772247314453
    2. ' k' → logprob: -0.9740772247314453
    3. '	k' → logprob: -16.224077224731445
    4. ' ' → logprob: -17.474077224731445
    5. '{k' → logprob: -17.474077224731445
    6. ' ' → logprob: -17.849077224731445
    7. '   ' → logprob: -18.349077224731445
    8. ' к' → logprob: -18.349077224731445
    9. '    ' → logprob: -18.349077224731445
    10. ',k' → logprob: -19.349077224731445

Token 129: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.016240809112787247
    2. ':
' → logprob: -4.14124059677124
    3. '):' → logprob: -9.141241073608398
    4. '):
' → logprob: -9.766241073608398
    5. ')' → logprob: -10.891241073608398
    6. '<|end|>' → logprob: -11.891241073608398
    7. ' :' → logprob: -12.266241073608398
    8. '       ' → logprob: -12.891241073608398
    9. ':

' → logprob: -13.141241073608398
    10. ':
' → logprob: -13.391241073608398

Token 130: '               ' (ID: 506)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.8121724724769592
    2. ' right' → logprob: -1.1871724128723145
    3. '               ' → logprob: -1.5621724128723145
    4. '           ' → logprob: -3.3121724128723145
    5. '[right' → logprob: -6.4371724128723145
    6. '
' → logprob: -7.4371724128723145
    7. ':right' → logprob: -7.6871724128723145
    8. ')' → logprob: -8.062172889709473
    9. '            
' → logprob: -8.187172889709473
    10. '                
' → logprob: -8.187172889709473

Token 131: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' (adapté à ' right') → logprob: -0.0619712732732296
    2. ' right' → logprob: -2.8119711875915527
    3. '	right' → logprob: -13.561971664428711
    4. '
' → logprob: -14.186971664428711
    5. '               ' → logprob: -14.436971664428711
    6. '[right' → logprob: -14.686971664428711
    7. '.right' → logprob: -15.311971664428711
    8. '           ' → logprob: -15.936971664428711
    9. '_right' → logprob: -16.06197166442871
    10. ':right' → logprob: -16.43697166442871

Token 132: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0021866646129637957
    2. '=' → logprob: -6.1271867752075195
    3. ' ' → logprob: -14.12718677520752
    4. '<|end|>' → logprob: -14.37718677520752
    5. ')' → logprob: -16.502185821533203
    6. ' =
' → logprob: -17.127185821533203
    7. ',' → logprob: -17.377185821533203
    8. '    ' → logprob: -17.752185821533203
    9. '=line' → logprob: -18.127185821533203
    10. '=end' → logprob: -18.752185821533203

Token 133: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.0031777136027812958
    2. ' mid' → logprob: -5.753177642822266
    3. '[mid' → logprob: -18.753177642822266
    4. '(mid' → logprob: -19.753177642822266
    5. '_mid' → logprob: -21.253177642822266
    6. ' midpoint' → logprob: -22.003177642822266
    7. 'm' → logprob: -22.503177642822266
    8. 'middle' → logprob: -22.503177642822266
    9. ' ' → logprob: -23.128177642822266
    10. 'midd' → logprob: -23.378177642822266

Token 134: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09411701560020447
    2. ' else' → logprob: -2.9691169261932373
    3. 'else' → logprob: -3.4691169261932373
    4. '
' → logprob: -5.219117164611816
    5. '<|end|>' → logprob: -7.594117164611816
    6. '       ' → logprob: -7.969117164611816
    7. ' 
' → logprob: -8.094117164611816
    8. '    
' → logprob: -8.594117164611816
    9. '  
' → logprob: -8.594117164611816
    10. '            
' → logprob: -8.719117164611816

Token 135: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.026192881166934967
    2. 'else' → logprob: -4.026192665100098
    3. ' else' → logprob: -5.026192665100098
    4. '
' → logprob: -6.651192665100098
    5. '            
' → logprob: -10.151192665100098
    6. '    
' → logprob: -10.276192665100098
    7. '       ' → logprob: -10.776192665100098
    8. '```' → logprob: -10.776192665100098
    9. '  
' → logprob: -11.651192665100098
    10. ' 
' → logprob: -11.776192665100098

Token 136: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.202610045671463
    2. ' else' → logprob: -2.0776100158691406
    3. '       ' → logprob: -3.2026100158691406
    4. '           ' → logprob: -4.077610015869141
    5. '	else' → logprob: -7.827610015869141
    6. '   ' → logprob: -9.20261001586914
    7. '```' → logprob: -10.70261001586914
    8. '	       ' → logprob: -11.07761001586914
    9. '	' → logprob: -11.95261001586914
    10. '               ' → logprob: -11.95261001586914

Token 137: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.009528226219117641
    2. ':' → logprob: -4.884528160095215
    3. ' left' → logprob: -7.259528160095215
    4. ':left' → logprob: -7.759528160095215
    5. ':
' → logprob: -8.259528160095215
    6. 'left' → logprob: -8.634528160095215
    7. ',' → logprob: -9.759528160095215
    8. ' :' → logprob: -9.884528160095215
    9. '	           ' → logprob: -10.134528160095215
    10. '              ' → logprob: -10.384528160095215

Token 138: '               ' (ID: 506)
  Prédit: ' left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.33284106850624084
    2. 'left' → logprob: -1.3328410387039185
    3. '               ' → logprob: -3.957841157913208
    4. '	left' → logprob: -8.832840919494629
    5. '[left' → logprob: -10.207840919494629
    6. '           ' → logprob: -10.457840919494629
    7. '   ' → logprob: -10.582840919494629
    8. '       ' → logprob: -10.707840919494629
    9. ':left' → logprob: -11.957840919494629
    10. '                   ' → logprob: -12.332840919494629

Token 139: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' (adapté à ' left') → logprob: -0.02325153350830078
    2. ' left' → logprob: -3.773251533508301
    3. '	left' → logprob: -12.8982515335083
    4. '               ' → logprob: -13.2732515335083
    5. ':left' → logprob: -14.1482515335083
    6. '[left' → logprob: -14.1482515335083
    7. '.left' → logprob: -15.5232515335083
    8. ',left' → logprob: -16.023250579833984
    9. '                   ' → logprob: -16.398250579833984
    10. '           ' → logprob: -17.148250579833984

Token 140: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868713676929474
    2. '=' → logprob: -1.136871337890625
    3. ' +=' → logprob: -15.511871337890625
    4. ' ' → logprob: -16.011871337890625
    5. '+=' → logprob: -16.136871337890625
    6. '＝' → logprob: -18.386871337890625
    7. '<|end|>' → logprob: -18.761871337890625
    8. ')' → logprob: -19.136871337890625
    9. 'mid' → logprob: -19.886871337890625
    10. '+' → logprob: -19.886871337890625

Token 141: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.04858986660838127
    2. ' mid' → logprob: -3.0485899448394775
    3. '[mid' → logprob: -13.548589706420898
    4. '(mid' → logprob: -14.298589706420898
    5. ' ' → logprob: -15.673589706420898
    6. ' midpoint' → logprob: -15.923589706420898
    7. 'left' → logprob: -16.7985897064209
    8. '_mid' → logprob: -16.7985897064209
    9. 'right' → logprob: -17.2985897064209
    10. 'middle' → logprob: -17.4235897064209

Token 142: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.01144495140761137
    2. ' +' → logprob: -4.761445045471191
    3. '<|end|>' → logprob: -6.261445045471191
    4. '+
' → logprob: -8.261445045471191
    5. '1' → logprob: -8.511445045471191
    6. '+=' → logprob: -9.261445045471191
    7. 'else' → logprob: -9.386445045471191
    8. '<|end|>' → logprob: -9.386445045471191
    9. ' +=' → logprob: -10.261445045471191
    10. ')' → logprob: -10.386445045471191

Token 143: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.848420551046729e-05
    2. ' ' → logprob: -9.7500581741333
    3. '```' → logprob: -16.250059127807617
    4. '<|end|>' → logprob: -17.625059127807617
    5. '   ' → logprob: -18.750059127807617
    6. '
' → logprob: -19.250059127807617
    7. '0' → logprob: -19.500059127807617
    8. 'def' → logprob: -20.312559127807617
    9. '۱' → logprob: -20.687559127807617
    10. '=' → logprob: -20.687559127807617

Token 144: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.061054359131958e-06
    2. ' ' → logprob: -11.750007629394531
    3. '```' → logprob: -16.50000762939453
    4. '0' → logprob: -18.87500762939453
    5. '<|end|>' → logprob: -18.87500762939453
    6. '   ' → logprob: -19.12500762939453
    7. '۱' → logprob: -19.75000762939453
    8. '
' → logprob: -19.93750762939453
    9. '  ' → logprob: -20.43750762939453
    10. '１' → logprob: -20.56250762939453

Token 145: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001526525360532105
    2. '
' → logprob: -6.751526355743408
    3. '        
' → logprob: -8.626526832580566
    4. ')' → logprob: -9.751526832580566
    5. '   ' → logprob: -10.126526832580566
    6. '<|end|>' → logprob: -11.126526832580566
    7. '           ' → logprob: -11.751526832580566
    8. '
' → logprob: -12.126526832580566
    9. 't' → logprob: -12.126526832580566
    10. '  
' → logprob: -12.251526832580566

Token 146: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012208210537210107
    2. '
' → logprob: -7.376220703125
    3. '        
' → logprob: -8.126220703125
    4. '   ' → logprob: -9.251220703125
    5. ')' → logprob: -10.126220703125
    6. '```' → logprob: -10.751220703125
    7. '    
' → logprob: -10.876220703125
    8. '  
' → logprob: -10.876220703125
    9. '<|end|>' → logprob: -11.126220703125
    10. '           ' → logprob: -11.251220703125

Token 147: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.9720451831817627
    2. 't' → logprob: -1.3470451831817627
    3. ' t' → logprob: -1.7220451831817627
    4. 'total' (adapté à ' total') → logprob: -1.9720451831817627
    5. '   ' → logprob: -3.5970451831817627
    6. '       ' → logprob: -4.222044944763184
    7. ' value' → logprob: -7.597044944763184
    8. '
' → logprob: -8.847044944763184
    9. 'result' → logprob: -9.097044944763184
    10. 'm' → logprob: -9.097044944763184

Token 148: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.1011386439204216
    2. '+=' → logprob: -2.3511385917663574
    3. ')' → logprob: -7.601138591766357
    4. '+' → logprob: -8.851139068603516
    5. ']+=' → logprob: -8.976139068603516
    6. '<|end|>' → logprob: -9.476139068603516
    7. '```' → logprob: -10.976139068603516
    8. '   ' → logprob: -11.351139068603516
    9. '+=(' → logprob: -11.351139068603516
    10. '    ' → logprob: -11.976139068603516

Token 149: ' Decimal' (ID: 56874)
  Prédit: 'Decimal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Decimal' → logprob: -0.0027514996472746134
    2. ' Decimal' → logprob: -6.377751350402832
    3. 'power' → logprob: -7.627751350402832
    4. '(' → logprob: -8.127751350402832
    5. 'i' → logprob: -8.627751350402832
    6. '1' → logprob: -9.877751350402832
    7. ' power' → logprob: -11.502751350402832
    8. '(i' → logprob: -12.127751350402832
    9. 'decimal' → logprob: -12.752751350402832
    10. '(power' → logprob: -12.752751350402832

Token 150: '(' (ID: 7)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.04823607951402664
    2. '(power' → logprob: -3.173236131668091
    3. '(' → logprob: -5.548235893249512
    4. '((' → logprob: -7.298235893249512
    5. '(k' → logprob: -7.798235893249512
    6. '(left' → logprob: -9.173235893249512
    7. 'i' → logprob: -9.548235893249512
    8. '(pow' → logprob: -10.673235893249512
    9. 'power' → logprob: -11.298235893249512
    10. '(n' → logprob: -11.298235893249512

Token 151: '1' (ID: 16)
  Prédit: 'power'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'power' → logprob: -0.2821529805660248
    2. 'i' → logprob: -1.9071530103683472
    3. '1' → logprob: -3.1571528911590576
    4. 'left' → logprob: -3.4071528911590576
    5. '(power' → logprob: -4.657153129577637
    6. '(i' → logprob: -5.282153129577637
    7. '(' → logprob: -5.407153129577637
    8. '2' → logprob: -6.532153129577637
    9. ' power' → logprob: -8.032153129577637
    10. '(left' → logprob: -8.157153129577637

Token 152: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005803157109767199
    2. '   ' → logprob: -9.125580787658691
    3. '/' → logprob: -9.375580787658691
    4. '       ' → logprob: -9.500580787658691
    5. '<<' → logprob: -9.500580787658691
    6. ')/' → logprob: -9.500580787658691
    7. ')/(' → logprob: -10.125580787658691
    8. ' /' → logprob: -10.375580787658691
    9. ',' → logprob: -10.500580787658691
    10. '-' → logprob: -10.750580787658691

Token 153: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.00486358068883419
    2. ')' → logprob: -5.629863739013672
    3. ' /' → logprob: -6.754863739013672
    4. '/(' → logprob: -11.254863739013672
    5. '   ' → logprob: -11.379863739013672
    6. '       ' → logprob: -11.504863739013672
    7. '-' → logprob: -11.504863739013672
    8. ')/' → logprob: -11.504863739013672
    9. '*' → logprob: -11.629863739013672
    10. '/
' → logprob: -11.879863739013672

Token 154: ' Decimal' (ID: 56874)
  Prédit: 'power'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'power' → logprob: -0.018658572807908058
    2. '(' → logprob: -4.643658638000488
    3. '(power' → logprob: -5.268658638000488
    4. 'Decimal' → logprob: -5.893658638000488
    5. ' power' → logprob: -7.268658638000488
    6. '(i' → logprob: -9.268658638000488
    7. '2' → logprob: -9.893658638000488
    8. '(n' → logprob: -10.393658638000488
    9. 'i' → logprob: -10.643658638000488
    10. 'n' → logprob: -11.018658638000488

Token 155: '(power' (ID: 168790)
  Prédit: '(power'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(power' → logprob: -0.004197594244033098
    2. '(' → logprob: -5.629197597503662
    3. '(i' → logprob: -7.629197597503662
    4. 'power' → logprob: -10.129197120666504
    5. '(pow' → logprob: -10.504197120666504
    6. '(n' → logprob: -10.629197120666504
    7. '((' → logprob: -11.629197120666504
    8. '(k' → logprob: -12.254197120666504
    9. '2' → logprob: -13.129197120666504
    10. ' power' → logprob: -13.629197120666504

Token 156: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -5.5577775128767826e-06
    2. 'of' → logprob: -12.250005722045898
    3. 'Of' → logprob: -15.000005722045898
    4. '[' → logprob: -16.0000057220459
    5. ' of' → logprob: -16.0000057220459
    6. '2' → logprob: -17.1250057220459
    7. '_OF' → logprob: -17.7500057220459
    8. '```' → logprob: -17.8750057220459
    9. '   ' → logprob: -18.5000057220459
    10. 's' → logprob: -18.6250057220459

Token 157: '_two' (ID: 54305)
  Prédit: 'two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'two' → logprob: -0.030301813036203384
    2. '_two' → logprob: -3.530301809310913
    3. 'left' → logprob: -8.030302047729492
    4. ' two' → logprob: -9.280302047729492
    5. 'Two' → logprob: -9.280302047729492
    6. 'right' → logprob: -10.780302047729492
    7. '[left' → logprob: -11.530302047729492
    8. '2' → logprob: -12.655302047729492
    9. 't' → logprob: -13.530302047729492
    10. '-two' → logprob: -14.155302047729492

Token 158: '[left' (ID: 98859)
  Prédit: '[left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[left' → logprob: -0.004125419072806835
    2. '[right' → logprob: -5.504125595092773
    3. 'left' → logprob: -10.004125595092773
    4. 'right' → logprob: -14.129125595092773
    5. '[' → logprob: -14.379125595092773
    6. ')' → logprob: -15.129125595092773
    7. '(left' → logprob: -17.129125595092773
    8. ')[' → logprob: -17.254125595092773
    9. ' left' → logprob: -18.504125595092773
    10. ',left' → logprob: -18.504125595092773

Token 159: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.6952477097511292
    2. '[left' → logprob: -0.6952477097511292
    3. ']' → logprob: -7.320247650146484
    4. '[' → logprob: -7.695247650146484
    5. '[right' → logprob: -7.695247650146484
    6. ')' → logprob: -8.445247650146484
    7. '])
' → logprob: -9.445247650146484
    8. 'left' → logprob: -10.320247650146484
    9. '][' → logprob: -10.570247650146484
    10. '(left' → logprob: -10.695247650146484

Token 160: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.593716025352478
    2. '   ' → logprob: -0.968716025352478
    3. '    
' → logprob: -3.2187161445617676
    4. 'return' → logprob: -3.9687161445617676
    5. '  
' → logprob: -5.718716144561768
    6. ' return' → logprob: -5.843716144561768
    7. '   
' → logprob: -6.843716144561768
    8. '+' → logprob: -7.468716144561768
    9. ' 
' → logprob: -7.968716144561768
    10. '
' → logprob: -8.09371566772461

Token 161: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5839874148368835
    2. '   ' → logprob: -0.8339874148368835
    3. ' return' → logprob: -4.833987236022949
    4. '    
' → logprob: -10.45898723602295
    5. '	return' → logprob: -11.58398723602295
    6. '
' → logprob: -11.58398723602295
    7. ' ' → logprob: -12.70898723602295
    8. '```' → logprob: -12.83398723602295
    9. '<|end|>' → logprob: -13.20898723602295
    10. '  ' → logprob: -13.45898723602295

Token 162: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.02976079285144806
    2. ' float' → logprob: -3.5297608375549316
    3. 'total' → logprob: -11.529760360717773
    4. ' total' → logprob: -15.154760360717773
    5. '(float' → logprob: -15.279760360717773
    6. '   ' → logprob: -17.404760360717773
    7. 'flo' → logprob: -18.529760360717773
    8. '	float' → logprob: -18.904760360717773
    9. 'Float' → logprob: -19.154760360717773
    10. 'round' → logprob: -19.279760360717773

Token 163: '(total' (ID: 39744)
  Prédit: '(total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(total' → logprob: -1.0445127372804563e-05
    2. '(' → logprob: -11.50001049041748
    3. 'total' → logprob: -15.25001049041748
    4. '(t' → logprob: -17.250009536743164
    5. ' (' → logprob: -17.500009536743164
    6. '(
' → logprob: -18.250009536743164
    7. '((' → logprob: -19.500009536743164
    8. '(round' → logprob: -19.625009536743164
    9. '(decimal' → logprob: -19.625009536743164
    10. '(expected' → logprob: -20.250009536743164

Token 164: ' /' (ID: 820)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06414470821619034
    2. '<|end|>' → logprob: -2.9391446113586426
    3. '(' → logprob: -5.564144611358643
    4. '()' → logprob: -6.189144611358643
    5. '*' → logprob: -6.814144611358643
    6. '+' → logprob: -7.314144611358643
    7. '```' → logprob: -7.814144611358643
    8. '
' → logprob: -7.939144611358643
    9. '())' → logprob: -8.1891450881958
    10. '<|end|>' → logprob: -8.6891450881958

Token 165: ' Decimal' (ID: 56874)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.31447330117225647
    2. 'Decimal' → logprob: -1.314473271369934
    3. ' Decimal' → logprob: -7.3144731521606445
    4. ' n' → logprob: -7.5644731521606445
    5. '(n' → logprob: -11.564473152160645
    6. '(' → logprob: -12.189473152160645
    7. 'decimal' → logprob: -12.564473152160645
    8. ' ' → logprob: -12.689473152160645
    9. '   ' → logprob: -13.564473152160645
    10. '	n' → logprob: -14.439473152160645

Token 166: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -3.1424973713001236e-05
    2. 'n' → logprob: -10.500031471252441
    3. '(' → logprob: -12.500031471252441
    4. ')n' → logprob: -17.625030517578125
    5. ' n' → logprob: -17.875030517578125
    6. ' (' → logprob: -18.875030517578125
    7. '[n' → logprob: -20.000030517578125
    8. ',n' → logprob: -20.125030517578125
    9. '<n' → logprob: -20.125030517578125
    10. '   ' → logprob: -20.250030517578125

Token 167: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4740838408470154
    2. '))' → logprob: -0.9740838408470154
    3. ')))' → logprob: -12.22408390045166
    4. ')
' → logprob: -13.97408390045166
    5. '))
' → logprob: -14.22408390045166
    6. ' )' → logprob: -16.224082946777344
    7. ')`' → logprob: -16.349082946777344
    8. ')}' → logprob: -16.974082946777344
    9. '})' → logprob: -17.224082946777344
    10. '])' → logprob: -17.474082946777344

Token 168: 'n' (ID: 77)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 169: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.034677475690841675
    2. '=' → logprob: -4.284677505493164
    3. ')' → logprob: -4.409677505493164
    4. ' =' → logprob: -5.284677505493164
    5. '<|end|>' → logprob: -6.659677505493164
    6. ' ,' → logprob: -7.284677505493164
    7. ',n' → logprob: -8.659677505493164
    8. ',k' → logprob: -8.784677505493164
    9. ' ' → logprob: -9.034677505493164
    10. ':' → logprob: -9.284677505493164

Token 170: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.5759479999542236
    2. 'k' → logprob: -0.8259479999542236
    3. ' ' → logprob: -12.200947761535645
    4. '=' → logprob: -13.950947761535645
    5. ' =' → logprob: -13.950947761535645
    6. '=k' → logprob: -14.075947761535645
    7. ' ' → logprob: -15.450947761535645
    8. ' 
' → logprob: -15.575947761535645
    9. '	k' → logprob: -16.07594871520996
    10. '  ' → logprob: -16.07594871520996

Token 171: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04859691113233566
    2. ' =' → logprob: -3.0485968589782715
    3. ',' → logprob: -12.17359733581543
    4. '=input' → logprob: -13.67359733581543
    5. ')' → logprob: -13.92359733581543
    6. '<|end|>' → logprob: -14.29859733581543
    7. '=
' → logprob: -14.42359733581543
    8. '=int' → logprob: -15.04859733581543
    9. '.' → logprob: -16.29859733581543
    10. ' ' → logprob: -16.54859733581543

Token 172: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.08284642547369003
    2. ' map' → logprob: -3.3328464031219482
    3. '10' → logprob: -3.4578464031219482
    4. '5' → logprob: -5.207846641540527
    5. ' ' → logprob: -5.457846641540527
    6. '20' → logprob: -7.082846641540527
    7. '25' → logprob: -7.582846641540527
    8. '100' → logprob: -7.957846641540527
    9. '15' → logprob: -8.457846641540527
    10. '50' → logprob: -8.832846641540527

Token 173: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.1312045305967331
    2. '(input' → logprob: -2.381204605102539
    3. '(' → logprob: -3.506204605102539
    4. '(str' → logprob: -7.756204605102539
    5. '<int' → logprob: -11.381204605102539
    6. '(list' → logprob: -11.506204605102539
    7. 'input' → logprob: -11.506204605102539
    8. '(
' → logprob: -11.756204605102539
    9. '(map' → logprob: -11.756204605102539
    10. '(in' → logprob: -12.131204605102539

Token 174: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.20774520933628082
    2. 'input' → logprob: -1.7077451944351196
    3. ',input' → logprob: -5.45774507522583
    4. '(' → logprob: -6.95774507522583
    5. ')' → logprob: -7.58274507522583
    6. '=input' → logprob: -8.207745552062988
    7. ' input' → logprob: -8.582745552062988
    8. ',' → logprob: -9.832745552062988
    9. '())' → logprob: -10.707745552062988
    10. '[input' → logprob: -11.082745552062988

Token 175: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -9.615255839889869e-05
    2. ' input' → logprob: -9.250096321105957
    3. '(input' → logprob: -18.87509536743164
    4. '=input' → logprob: -19.87509536743164
    5. '   ' → logprob: -20.12509536743164
    6. '	input' → logprob: -21.37509536743164
    7. ',input' → logprob: -21.50009536743164
    8. '<input' → logprob: -21.62509536743164
    9. '_input' → logprob: -23.00009536743164
    10. ')' → logprob: -23.12509536743164

Token 176: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -6.64708495605737e-05
    2. '()' → logprob: -9.625066757202148
    3. ' ().' → logprob: -16.00006675720215
    4. '(' → logprob: -16.25006675720215
    5. '())' → logprob: -16.37506675720215
    6. '("' → logprob: -17.75006675720215
    7. '()).' → logprob: -18.37506675720215
    8. '("").' → logprob: -18.62506675720215
    9. '().'' → logprob: -19.00006675720215
    10. '());' → logprob: -19.00006675720215

Token 177: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00033593899570405483
    2. 'strip' → logprob: -8.000335693359375
    3. ' split' → logprob: -15.375335693359375
    4. 'rstrip' → logprob: -15.500335693359375
    5. '(split' → logprob: -16.125335693359375
    6. '().' → logprob: -19.000335693359375
    7. 'spl' → logprob: -19.250335693359375
    8. '.split' → logprob: -20.625335693359375
    9. '```' → logprob: -20.875335693359375
    10. 'read' → logprob: -20.875335693359375

Token 178: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.002462218049913645
    2. '()' → logprob: -6.752462387084961
    3. ')' → logprob: -7.252462387084961
    4. '()))' → logprob: -7.502462387084961
    5. '))' → logprob: -11.252462387084961
    6. '(' → logprob: -11.377462387084961
    7. '().' → logprob: -13.252462387084961
    8. '())
' → logprob: -13.877462387084961
    9. ' ())' → logprob: -13.877462387084961
    10. '('' → logprob: -14.252462387084961

Token 179: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.5048530030981055e-06
    2. 'result' → logprob: -13.875001907348633
    3. ' print' → logprob: -14.625001907348633
    4. '```' → logprob: -19.250001907348633
    5. '
' → logprob: -20.500001907348633
    6. 'value' → logprob: -20.625001907348633
    7. '#print' → logprob: -21.250001907348633
    8. '<|end|>' → logprob: -22.250001907348633
    9. 'answer' → logprob: -22.375001907348633
    10. '	print' → logprob: -22.500001907348633

Token 180: '(expected' (ID: 26332)
  Prédit: '(expected'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(expected' → logprob: -0.01437303889542818
    2. '(' → logprob: -4.264372825622559
    3. '(f' → logprob: -8.639372825622559
    4. '(round' → logprob: -11.764372825622559
    5. '(Expected' → logprob: -11.764372825622559
    6. '(expect' → logprob: -12.139372825622559
    7. '(
' → logprob: -12.389372825622559
    8. '((' → logprob: -13.139372825622559
    9. 'expected' → logprob: -13.264372825622559
    10. '(exp' → logprob: -14.139372825622559

Token 181: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -3.173704271830502e-06
    2. '_val' → logprob: -13.25000286102295
    3. '_' → logprob: -14.12500286102295
    4. '_values' → logprob: -15.12500286102295
    5. '_token' → logprob: -15.75000286102295
    6. ' _' → logprob: -16.625003814697266
    7. ')_' → logprob: -17.125003814697266
    8. ')' → logprob: -17.125003814697266
    9. '_Value' → logprob: -17.500003814697266
    10. '_VALUE' → logprob: -17.625003814697266

Token 182: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.000770436367020011
    2. '(' → logprob: -7.250770568847656
    3. ' (' → logprob: -10.000770568847656
    4. ')(' → logprob: -11.625770568847656
    5. ')' → logprob: -12.250770568847656
    6. '(
' → logprob: -13.875770568847656
    7. '((' → logprob: -15.125770568847656
    8. '```' → logprob: -16.875770568847656
    9. ')n' → logprob: -17.125770568847656
    10. '(k' → logprob: -17.375770568847656

Token 183: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014619771391153336
    2. ',n' → logprob: -4.639619827270508
    3. '(n' → logprob: -5.389619827270508
    4. ' ,' → logprob: -8.514619827270508
    5. '(' → logprob: -9.639619827270508
    6. ',k' → logprob: -11.014619827270508
    7. 'n' → logprob: -12.889619827270508
    8. ',
' → logprob: -13.264619827270508
    9. ')' → logprob: -13.889619827270508
    10. ' ' → logprob: -15.014619827270508

Token 184: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.011047814972698689
    2. ' k' → logprob: -4.511047840118408
    3. ' ' → logprob: -17.26104736328125
    4. '	k' → logprob: -18.38604736328125
    5. ')' → logprob: -19.13604736328125
    6. '   ' → logprob: -19.13604736328125
    7. ' ' → logprob: -20.01104736328125
    8. ',k' → logprob: -20.13604736328125
    9. '```' → logprob: -20.26104736328125
    10. '{k' → logprob: -20.51104736328125

Token 185: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.023267146199941635
    2. ')' → logprob: -3.7732670307159424
    3. '()))' → logprob: -11.398266792297363
    4. '())' → logprob: -11.773266792297363
    5. '))
' → logprob: -13.773266792297363
    6. '()' → logprob: -13.898266792297363
    7. ')))' → logprob: -14.398266792297363
    8. ')
' → logprob: -16.77326774597168
    9. ' ))' → logprob: -17.02326774597168
    10. '(' → logprob: -17.39826774597168


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 183
Tokens correctement prédits (1ère position, stricte): 84
Tokens correctement prédits (1ère position, avec adaptation): 88
Tokens correctement prédits (top 10): 154
Précision stricte (1ère position): 45.90%
Précision adaptée (1ère position): 48.09%
Précision (top 10): 84.15%
================================================================================
