================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:45:56
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
read_input = sys.stdin.readline

def process_sequence():
    sequence_length = int(read_input())
    base_values = list(map(int, read_input().split()))
    computed_values = [0] * sequence_length
    computed_values[0] = base_values[0]

    for idx in range(sequence_length - 1):
        computed_values[idx] = min(computed_values[idx], base_values[idx])
        computed_values[idx + 1] = base_values[idx]

    print(sum(computed_values))

process_sequence()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'read' (ID: 1293)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5435490608215332
    2. '.' → logprob: -1.0435490608215332
    3. '<|end|>' → logprob: -3.918549060821533
    4. '\' → logprob: -4.043549060821533
    5. 'import' → logprob: -4.418549060821533
    6. 'newline' → logprob: -5.293549060821533
    7. '' → logprob: -6.043549060821533
    8. '\r' → logprob: -6.168549060821533
    9. '
' → logprob: -6.293549060821533
    10. '<|end|>' → logprob: -6.418549060821533

Token 4: '_input' (ID: 12507)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03597019985318184
    2. 'line' → logprob: -3.5359702110290527
    3. '()' → logprob: -5.910970211029053
    4. '.' → logprob: -6.785970211029053
    5. 'er' → logprob: -7.660970211029053
    6. '(
' → logprob: -7.785970211029053
    7. 'ing' → logprob: -8.410969734191895
    8. ')' → logprob: -8.910969734191895
    9. '_line' → logprob: -8.910969734191895
    10. ' (' → logprob: -9.035969734191895

Token 5: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.000781634240411222
    2. '('' → logprob: -7.875781536102295
    3. '(
' → logprob: -8.875782012939453
    4. '()' → logprob: -9.000782012939453
    5. 's' → logprob: -10.875782012939453
    6. ' (' → logprob: -10.875782012939453
    7. ')' → logprob: -11.125782012939453
    8. '("("' → logprob: -11.375782012939453
    9. '_' → logprob: -11.500782012939453
    10. '(

' → logprob: -11.625782012939453

Token 6: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.12717284262180328
    2. 'sys' → logprob: -2.1271729469299316
    3. 'input' → logprob: -9.627172470092773
    4. '(sys' → logprob: -9.627172470092773
    5. ' input' → logprob: -9.877172470092773
    6. ' lambda' → logprob: -10.752172470092773
    7. ' ' → logprob: -11.252172470092773
    8. '	sys' → logprob: -11.252172470092773
    9. '=sys' → logprob: -12.002172470092773
    10. 'lambda' → logprob: -12.002172470092773

Token 7: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.004554611165076494
    2. '.stdin' → logprob: -5.629554748535156
    3. '.readline' → logprob: -7.379554748535156
    4. '.read' → logprob: -9.254554748535156
    5. '.argv' → logprob: -9.754554748535156
    6. ' .' → logprob: -9.879554748535156
    7. '.stdout' → logprob: -10.254554748535156
    8. '.​' → logprob: -10.629554748535156
    9. '.import' → logprob: -10.754554748535156
    10. '.`' → logprob: -11.879554748535156

Token 8: '.readline' (ID: 74673)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.14648261666297913
    2. '.readline' → logprob: -2.3964827060699463
    3. '.read' → logprob: -3.1464827060699463
    4. '[' → logprob: -6.396482467651367
    5. '.Read' → logprob: -8.271482467651367
    6. ' .' → logprob: -9.521482467651367
    7. '.readlines' → logprob: -10.146482467651367
    8. '[
' → logprob: -10.396482467651367
    9. '```' → logprob: -10.521482467651367
    10. '[:]' → logprob: -10.771482467651367

Token 9: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.013638240285217762
    2. '(' → logprob: -4.388638019561768
    3. '(
' → logprob: -7.638638019561768
    4. '()
' → logprob: -7.763638019561768
    5. '().' → logprob: -9.388638496398926
    6. '()\' → logprob: -10.513638496398926
    7. '```' → logprob: -10.638638496398926
    8. ')' → logprob: -11.138638496398926
    9. '()

' → logprob: -11.138638496398926
    10. '()(' → logprob: -11.513638496398926

Token 10: 'def' (ID: 1314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.07927574217319489
    2. '(' → logprob: -2.5792758464813232
    3. '(
' → logprob: -9.204276084899902
    4. '().' → logprob: -9.204276084899902
    5. '()
' → logprob: -9.704276084899902
    6. ')' → logprob: -9.829276084899902
    7. '#' → logprob: -11.454276084899902
    8. 'def' → logprob: -11.829276084899902
    9. '()

' → logprob: -11.829276084899902
    10. ',' → logprob: -11.954276084899902

Token 11: ' process' (ID: 2273)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.008160975761711597
    2. ' process' → logprob: -5.7581610679626465
    3. '_' → logprob: -6.0081610679626465
    4. ' space' → logprob: -7.3831610679626465
    5. ' calculate' → logprob: -8.133160591125488
    6. ' main' → logprob: -8.383160591125488
    7. ' ' → logprob: -8.633160591125488
    8. ' read' → logprob: -8.883160591125488
    9. ' my' → logprob: -9.008160591125488
    10. ' _' → logprob: -9.258160591125488

Token 12: '_sequence' (ID: 55606)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4646189510822296
    2. '_input' → logprob: -1.3396189212799072
    3. '_' → logprob: -2.8396189212799072
    4. '_data' → logprob: -3.8396189212799072
    5. '_line' → logprob: -4.714619159698486
    6. '(input' → logprob: -5.089619159698486
    7. '(data' → logprob: -5.214619159698486
    8. '(line' → logprob: -6.214619159698486
    9. '(process' → logprob: -6.964619159698486
    10. '_user' → logprob: -7.214619159698486

Token 13: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0063518923707306385
    2. '():' → logprob: -5.381351947784424
    3. '(sequence' → logprob: -7.381351947784424
    4. '_' → logprob: -8.381351470947266
    5. '_sequence' → logprob: -9.006351470947266
    6. '(line' → logprob: -9.256351470947266
    7. '(:' → logprob: -9.631351470947266
    8. '(token' → logprob: -9.631351470947266
    9. '(data' → logprob: -9.881351470947266
    10. '(seq' → logprob: -9.881351470947266

Token 14: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40348413586616516
    2. '    ' → logprob: -1.4034841060638428
    3. ' ' → logprob: -2.7784841060638428
    4. '(' → logprob: -4.278484344482422
    5. '\' → logprob: -6.528484344482422
    6. '    
' → logprob: -6.778484344482422
    7. ' 
' → logprob: -6.903484344482422
    8. ' (' → logprob: -6.903484344482422
    9. '     
' → logprob: -7.028484344482422
    10. '[' → logprob: -7.153484344482422

Token 15: ' sequence' (ID: 16281)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10606551915407181
    2. 'n' → logprob: -3.481065511703491
    3. '    ' → logprob: -3.606065511703491
    4. ' ' → logprob: -4.98106575012207
    5. 'input' → logprob: -5.48106575012207
    6. '       ' → logprob: -5.73106575012207
    7. ' line' → logprob: -5.73106575012207
    8. 'data' → logprob: -5.73106575012207
    9. '\' → logprob: -6.23106575012207
    10. 'a' → logprob: -6.35606575012207

Token 16: '_length' (ID: 11514)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.624491274356842
    2. '[' → logprob: -1.6244912147521973
    3. '.append' → logprob: -2.1244912147521973
    4. '[:]' → logprob: -2.6244912147521973
    5. '.' → logprob: -3.3744912147521973
    6. '=' → logprob: -4.249491214752197
    7. '_' → logprob: -4.874491214752197
    8. '.pop' → logprob: -5.624491214752197
    9. '_length' → logprob: -6.124491214752197
    10. '.extend' → logprob: -6.874491214752197

Token 17: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04443226009607315
    2. '=' → logprob: -3.1694321632385254
    3. '   ' → logprob: -8.044432640075684
    4. ' ' → logprob: -8.169432640075684
    5. ')' → logprob: -8.419432640075684
    6. '  ' → logprob: -9.044432640075684
    7. ',' → logprob: -9.294432640075684
    8. '    ' → logprob: -9.544432640075684
    9. ' ==' → logprob: -9.919432640075684
    10. '<|end|>' → logprob: -10.169432640075684

Token 18: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.16837027668952942
    2. ' read' → logprob: -2.168370246887207
    3. 'int' → logprob: -3.418370246887207
    4. 'read' → logprob: -5.793370246887207
    5. ' len' → logprob: -5.793370246887207
    6. ' ' → logprob: -7.168370246887207
    7. '10' → logprob: -8.043370246887207
    8. '0' → logprob: -8.418370246887207
    9. 'len' → logprob: -8.793370246887207
    10. '5' → logprob: -8.793370246887207

Token 19: '(read' (ID: 45738)
  Prédit: '(read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(read' → logprob: -0.16073472797870636
    2. '(' → logprob: -1.91073477268219
    3. '(input' → logprob: -8.160735130310059
    4. ' (' → logprob: -8.910735130310059
    5. 'read' → logprob: -9.785735130310059
    6. '()' → logprob: -11.285735130310059
    7. ' read' → logprob: -11.785735130310059
    8. '(
' → logprob: -12.660735130310059
    9. ' ' → logprob: -12.785735130310059
    10. '(space' → logprob: -13.660735130310059

Token 20: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.00023607931507285684
    2. '_' → logprob: -8.500236511230469
    3. ')' → logprob: -10.875236511230469
    4. '_token' → logprob: -12.500236511230469
    5. '(' → logprob: -13.625236511230469
    6. '_output' → logprob: -13.875236511230469
    7. ' _' → logprob: -13.875236511230469
    8. ' )' → logprob: -13.875236511230469
    9. '(input' → logprob: -14.000236511230469
    10. '_line' → logprob: -14.125236511230469

Token 21: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.005619685165584087
    2. '()' → logprob: -5.255619525909424
    3. '().' → logprob: -8.005620002746582
    4. ' ())' → logprob: -10.130620002746582
    5. '())
' → logprob: -12.130620002746582
    6. ')' → logprob: -12.880620002746582
    7. '()))' → logprob: -13.505620002746582
    8. '())

' → logprob: -14.005620002746582
    9. '(' → logprob: -14.130620002746582
    10. '();)' → logprob: -14.755620002746582

Token 22: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02676118165254593
    2. '\n' → logprob: -4.651761054992676
    3. '<|end|>' → logprob: -5.151761054992676
    4. '    
' → logprob: -5.901761054992676
    5. '
' → logprob: -6.151761054992676
    6. ' ' → logprob: -6.651761054992676
    7. ' 
' → logprob: -6.776761054992676
    8. '    ' → logprob: -6.901761054992676
    9. ')' → logprob: -7.151761054992676
    10. '  ' → logprob: -7.901761054992676

Token 23: ' base' (ID: 3611)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016239643096923828
    2. 'sequence' → logprob: -5.391239643096924
    3. ' sequence' → logprob: -5.766239643096924
    4. '    
' → logprob: -6.016239643096924
    5. '\n' → logprob: -6.766239643096924
    6. 'data' → logprob: -7.141239643096924
    7. ')' → logprob: -7.391239643096924
    8. ' 
' → logprob: -7.516239643096924
    9. '
' → logprob: -8.016239166259766
    10. 'result' → logprob: -8.141239166259766

Token 24: '_values' (ID: 20393)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.45845112204551697
    2. '_sequence' → logprob: -1.3334511518478394
    3. 's' → logprob: -2.95845103263855
    4. ' =' → logprob: -3.08345103263855
    5. '=' → logprob: -5.833451271057129
    6. '_seq' → logprob: -7.208451271057129
    7. '_count' → logprob: -7.583451271057129
    8. '_s' → logprob: -7.958451271057129
    9. '_pairs' → logprob: -8.083451271057129
    10. ' _' → logprob: -8.333451271057129

Token 25: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0016107931733131409
    2. '=' → logprob: -6.50161075592041
    3. ' ' → logprob: -9.37661075592041
    4. '[' → logprob: -11.12661075592041
    5. '   ' → logprob: -12.87661075592041
    6. '  ' → logprob: -13.00161075592041
    7. '_' → logprob: -13.25161075592041
    8. ' =[' → logprob: -13.75161075592041
    9. '[:]' → logprob: -14.50161075592041
    10. '[]' → logprob: -15.12661075592041

Token 26: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.5705298185348511
    2. ' [' → logprob: -1.695529818534851
    3. ' []' → logprob: -1.820529818534851
    4. 'list' → logprob: -2.9455299377441406
    5. '[]' → logprob: -3.6955299377441406
    6. '[' → logprob: -4.945529937744141
    7. '[list' → logprob: -5.695529937744141
    8. ' ' → logprob: -7.820529937744141
    9. '[input' → logprob: -8.57052993774414
    10. '[int' → logprob: -8.57052993774414

Token 27: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.03419352322816849
    2. '(' → logprob: -3.409193515777588
    3. '(read' → logprob: -8.159193992614746
    4. '(int' → logprob: -8.784193992614746
    5. '(range' → logprob: -9.784193992614746
    6. '()' → logprob: -10.409193992614746
    7. 'map' → logprob: -12.284193992614746
    8. '_map' → logprob: -12.409193992614746
    9. '(eval' → logprob: -12.409193992614746
    10. '(
' → logprob: -12.784193992614746

Token 28: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0017979926196858287
    2. '(' → logprob: -6.376798152923584
    3. '(lambda' → logprob: -10.001797676086426
    4. 'int' → logprob: -10.751797676086426
    5. '(str' → logprob: -11.001797676086426
    6. ' (' → logprob: -12.126797676086426
    7. '(
' → logprob: -13.126797676086426
    8. '(float' → logprob: -13.751797676086426
    9. '<int' → logprob: -13.876797676086426
    10. '(eval' → logprob: -13.876797676086426

Token 29: ',' (ID: 11)
  Prédit: '(read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(read' → logprob: -0.000283265660982579
    2. '(' → logprob: -8.625283241271973
    3. 'read' → logprob: -10.000283241271973
    4. ')' → logprob: -10.625283241271973
    5. ' read' → logprob: -11.250283241271973
    6. ' (' → logprob: -11.875283241271973
    7. ',' → logprob: -12.125283241271973
    8. '))' → logprob: -12.875283241271973
    9. '<|end|>' → logprob: -13.125283241271973
    10. '),' → logprob: -14.000283241271973

Token 30: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.04301094636321068
    2. 'read' → logprob: -3.168010950088501
    3. '(read' → logprob: -11.793010711669922
    4. '	read' → logprob: -12.668010711669922
    5. ' ' → logprob: -14.793010711669922
    6. ' readline' → logprob: -15.043010711669922
    7. '.read' → logprob: -16.293010711669922
    8. '  ' → logprob: -16.418010711669922
    9. ' ' → logprob: -16.918010711669922
    10. ' reads' → logprob: -17.168010711669922

Token 31: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.0009663687669672072
    2. '_' → logprob: -7.125966548919678
    3. 'input' → logprob: -9.75096607208252
    4. '_token' → logprob: -10.25096607208252
    5. '_read' → logprob: -11.25096607208252
    6. '(input' → logprob: -11.37596607208252
    7. '_user' → logprob: -11.62596607208252
    8. '_tokens' → logprob: -12.12596607208252
    9. '_line' → logprob: -12.62596607208252
    10. '_reader' → logprob: -12.87596607208252

Token 32: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0034829434007406235
    2. '()' → logprob: -5.753482818603516
    3. '()))' → logprob: -8.378482818603516
    4. '())' → logprob: -10.253482818603516
    5. '())))' → logprob: -10.378482818603516
    6. '()));' → logprob: -12.753482818603516
    7. '()[' → logprob: -14.003482818603516
    8. '()-' → logprob: -14.003482818603516
    9. '().'' → logprob: -14.503482818603516
    10. '()
' → logprob: -14.628482818603516

Token 33: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.5782389044761658
    2. 'strip' → logprob: -0.8282389044761658
    3. 'rstrip' → logprob: -6.0782389640808105
    4. ' split' → logprob: -13.578238487243652
    5. 'read' → logprob: -13.828238487243652
    6. ')' → logprob: -14.078238487243652
    7. ' strip' → logprob: -14.078238487243652
    8. '(split' → logprob: -14.578238487243652
    9. '().' → logprob: -16.07823944091797
    10. '(strip' → logprob: -16.45323944091797

Token 34: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.07425370067358017
    2. '())' → logprob: -3.074253797531128
    3. '()' → logprob: -4.449253559112549
    4. '))' → logprob: -4.699253559112549
    5. '(' → logprob: -5.699253559112549
    6. ')' → logprob: -6.824253559112549
    7. '())))' → logprob: -10.199254035949707
    8. '('' → logprob: -10.449254035949707
    9. '()))
' → logprob: -10.824254035949707
    10. '()));' → logprob: -11.824254035949707

Token 35: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30678969621658325
    2. '
' → logprob: -1.5567896366119385
    3. '    
' → logprob: -3.4317896366119385
    4. '\n' → logprob: -4.931789875030518
    5. '\' → logprob: -5.806789875030518
    6. ')' → logprob: -5.931789875030518
    7. '<|end|>' → logprob: -6.806789875030518
    8. ' 
' → logprob: -7.056789875030518
    9. '[' → logprob: -7.056789875030518
    10. '```' → logprob: -7.181789875030518

Token 36: ' computed' (ID: 46716)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29489749670028687
    2. 'result' → logprob: -2.4198975563049316
    3. ' result' → logprob: -3.5448975563049316
    4. '    
' → logprob: -3.6698975563049316
    5. 'max' → logprob: -4.169897556304932
    6. 'dp' → logprob: -4.169897556304932
    7. ' max' → logprob: -4.419897556304932
    8. '
' → logprob: -4.919897556304932
    9. ' prefix' → logprob: -5.419897556304932
    10. 'd' → logprob: -5.419897556304932

Token 37: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -0.43159937858581543
    2. '_' → logprob: -1.0565993785858154
    3. '_value' → logprob: -6.8065996170043945
    4. '_sum' → logprob: -7.5565996170043945
    5. '_results' → logprob: -8.306599617004395
    6. '_val' → logprob: -8.931599617004395
    7. '_vals' → logprob: -9.056599617004395
    8. '_s' → logprob: -9.181599617004395
    9. '_scores' → logprob: -9.556599617004395
    10. '_array' → logprob: -9.931599617004395

Token 38: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0040895589627325535
    2. '=' → logprob: -5.50408935546875
    3. '=[]' → logprob: -12.00408935546875
    4. '[' → logprob: -13.50408935546875
    5. '_' → logprob: -14.00408935546875
    6. '[:]' → logprob: -14.25408935546875
    7. ' =[' → logprob: -14.50408935546875
    8. '[]' → logprob: -14.87908935546875
    9. ' ' → logprob: -15.12908935546875
    10. '  ' → logprob: -15.50408935546875

Token 39: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.40691524744033813
    2. '[' → logprob: -1.7819151878356934
    3. ' []' → logprob: -2.1569151878356934
    4. '[]' → logprob: -3.5319151878356934
    5. ' base' → logprob: -3.9069151878356934
    6. 'base' → logprob: -8.031915664672852
    7. ' ' → logprob: -8.281915664672852
    8. '[:]' → logprob: -8.531915664672852
    9. ' list' → logprob: -10.656915664672852
    10. '[b' → logprob: -10.906915664672852

Token 40: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.021036362275481224
    2. 'base' → logprob: -4.646036148071289
    3. ' ' → logprob: -5.396036148071289
    4. ' base' → logprob: -5.396036148071289
    5. '1' → logprob: -6.521036148071289
    6. '   ' → logprob: -9.021036148071289
    7. 'x' → logprob: -9.396036148071289
    8. '-' → logprob: -9.396036148071289
    9. ' x' → logprob: -9.771036148071289
    10. 'b' → logprob: -9.896036148071289

Token 41: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.031411707401275635
    2. ' ]' → logprob: -3.531411647796631
    3. ',' → logprob: -6.906411647796631
    4. ' for' → logprob: -8.031412124633789
    5. ']*' → logprob: -8.531412124633789
    6. ')' → logprob: -9.656412124633789
    7. ')]' → logprob: -10.031412124633789
    8. 'for' → logprob: -11.531412124633789
    9. ' ' → logprob: -12.031412124633789
    10. '()]' → logprob: -12.781412124633789

Token 42: ' *' (ID: 425)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9800177812576294
    2. ' ]' → logprob: -1.4800177812576294
    3. ' for' → logprob: -2.60501766204834
    4. ',' → logprob: -2.73001766204834
    5. '[' → logprob: -2.85501766204834
    6. '
' → logprob: -3.23001766204834
    7. ']' → logprob: -3.48001766204834
    8. ' *' → logprob: -3.73001766204834
    9. 'for' → logprob: -3.98001766204834
    10. '*' → logprob: -3.98001766204834

Token 43: ' sequence' (ID: 16281)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -0.04924146458506584
    2. ' sequence' → logprob: -3.049241542816162
    3. '(sequence' → logprob: -7.674241542816162
    4. '(' → logprob: -8.924241065979004
    5. ' (' → logprob: -10.424241065979004
    6. '   ' → logprob: -11.549241065979004
    7. 'len' → logprob: -12.549241065979004
    8. ' ' → logprob: -12.674241065979004
    9. '(len' → logprob: -13.549241065979004
    10. ' len' → logprob: -13.549241065979004

Token 44: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -6.337155355140567e-05
    2. '_' → logprob: -9.875062942504883
    3. '_l' → logprob: -11.500062942504883
    4. '_len' → logprob: -13.875062942504883
    5. '_le' → logprob: -15.500062942504883
    6. '_lengths' → logprob: -16.000062942504883
    7. 'length' → logprob: -16.125062942504883
    8. '_size' → logprob: -16.625062942504883
    9. '_LENGTH' → logprob: -16.750062942504883
    10. 'Length' → logprob: -17.500062942504883

Token 45: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5434605479240417
    2. '   ' → logprob: -0.9184605479240417
    3. '    
' → logprob: -4.918460369110107
    4. ' for' → logprob: -5.168460369110107
    5. 'for' → logprob: -5.918460369110107
    6. '\n' → logprob: -6.418460369110107
    7. '' → logprob: -7.668460369110107
    8. ' 
' → logprob: -7.793460369110107
    9. '	for' → logprob: -8.043460845947266
    10. '  
' → logprob: -8.168460845947266

Token 46: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12964293360710144
    2. '
' → logprob: -2.629642963409424
    3. ' for' → logprob: -3.379642963409424
    4. ' ' → logprob: -5.879642963409424
    5. 'for' → logprob: -5.879642963409424
    6. '    
' → logprob: -5.879642963409424
    7. '<|end|>' → logprob: -6.004642963409424
    8. ' 
' → logprob: -6.504642963409424
    9. ' computed' → logprob: -7.129642963409424
    10. '  
' → logprob: -7.629642963409424

Token 47: ' computed' (ID: 46716)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8120282888412476
    2. '
' → logprob: -1.0620282888412476
    3. ' for' → logprob: -2.062028408050537
    4. 'for' → logprob: -3.562028408050537
    5. '    
' → logprob: -4.312028408050537
    6. '\n' → logprob: -4.562028408050537
    7. ' 
' → logprob: -4.562028408050537
    8. 'computed' (adapté à ' computed') → logprob: -4.937028408050537
    9. ' computed' → logprob: -4.937028408050537
    10. ' ' → logprob: -6.312028408050537

Token 48: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -5.621933451038785e-05
    2. '_' → logprob: -9.875056266784668
    3. '_vals' → logprob: -12.875056266784668
    4. '_VALUES' → logprob: -14.375056266784668
    5. ' _' → logprob: -14.750056266784668
    6. '```' → logprob: -15.250056266784668
    7. '_value' → logprob: -15.625056266784668
    8. '[' → logprob: -15.875056266784668
    9. '_val' → logprob: -16.12505531311035
    10. 'Values' → logprob: -16.25005531311035

Token 49: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0003978992172051221
    2. '[:]' → logprob: -8.375397682189941
    3. ' =' → logprob: -9.750397682189941
    4. '<|end|>' → logprob: -10.250397682189941
    5. '=' → logprob: -11.125397682189941
    6. '[-' → logprob: -11.250397682189941
    7. '   ' → logprob: -11.500397682189941
    8. '[]' → logprob: -12.250397682189941
    9. ' ' → logprob: -12.500397682189941
    10. '[...]' → logprob: -12.500397682189941

Token 50: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00863324198871851
    2. ' ' → logprob: -4.758633136749268
    3. ']' → logprob: -11.258633613586426
    4. ')' → logprob: -13.383633613586426
    5. '1' → logprob: -13.508633613586426
    6. ' ]' → logprob: -14.508633613586426
    7. '[' → logprob: -14.696133613586426
    8. '   ' → logprob: -14.758633613586426
    9. '-' → logprob: -15.133633613586426
    10. '  ' → logprob: -15.883633613586426

Token 51: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.10187487304210663
    2. ' ]' → logprob: -2.351874828338623
    3. ' =' → logprob: -6.851874828338623
    4. '=' → logprob: -7.976874828338623
    5. ']=' → logprob: -8.476875305175781
    6. ')' → logprob: -10.351875305175781
    7. ' ' → logprob: -11.226875305175781
    8. '+' → logprob: -13.101875305175781
    9. ' )' → logprob: -13.351875305175781
    10. ')]' → logprob: -13.476875305175781

Token 52: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1269298940896988
    2. '=' → logprob: -2.126929998397827
    3. ' ' → logprob: -14.126930236816406
    4. ' +=' → logprob: -14.626930236816406
    5. ',' → logprob: -15.251930236816406
    6. '<|end|>' → logprob: -16.001930236816406
    7. '=int' → logprob: -16.501930236816406
    8. '=user' → logprob: -17.251930236816406
    9. '+=' → logprob: -17.251930236816406
    10. '[' → logprob: -17.501930236816406

Token 53: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.11486198008060455
    2. ' base' → logprob: -2.2398619651794434
    3. '0' → logprob: -6.614861965179443
    4. '1' → logprob: -8.239862442016602
    5. ' ' → logprob: -8.614862442016602
    6. '   ' → logprob: -8.989862442016602
    7. '(base' → logprob: -10.739862442016602
    8. '2' → logprob: -10.864862442016602
    9. 'max' → logprob: -11.114862442016602
    10. '10' → logprob: -11.989862442016602

Token 54: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -2.8921695047756657e-05
    2. '_' → logprob: -10.750028610229492
    3. '_value' → logprob: -12.250028610229492
    4. ' _' → logprob: -13.375028610229492
    5. '_val' → logprob: -14.125028610229492
    6. '_vals' → logprob: -15.500028610229492
    7. 'values' → logprob: -16.750028610229492
    8. '_v' → logprob: -17.750028610229492
    9. '_va' → logprob: -17.750028610229492
    10. '_VALUES' → logprob: -17.750028610229492

Token 55: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00011951648048125207
    2. ' [' → logprob: -9.12511920928955
    3. '[-' → logprob: -12.25011920928955
    4. '0' → logprob: -13.12511920928955
    5. ' ' → logprob: -13.25011920928955
    6. '```' → logprob: -14.62511920928955
    7. '[
' → logprob: -15.00011920928955
    8. '-' → logprob: -15.75011920928955
    9. '1' → logprob: -16.000120162963867
    10. '   ' → logprob: -16.062620162963867

Token 56: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.875008583068848
    3. '1' → logprob: -13.500008583068848
    4. '[' → logprob: -15.500008583068848
    5. '2' → logprob: -15.625008583068848
    6. ']' → logprob: -15.875008583068848
    7. '3' → logprob: -17.250009536743164
    8. '-' → logprob: -17.250009536743164
    9. '۰' → logprob: -18.250009536743164
    10. '   ' → logprob: -18.312509536743164

Token 57: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5182932019233704
    2. ']' → logprob: -1.8932931423187256
    3. '+' → logprob: -2.0182931423187256
    4. ' +' → logprob: -2.5182931423187256
    5. '<|end|>' → logprob: -3.7682931423187256
    6. ' )' → logprob: -5.518293380737305
    7. ' ]' → logprob: -5.768293380737305
    8. '<|end|>' → logprob: -5.893293380737305
    9. ' *' → logprob: -6.143293380737305
    10. '*' → logprob: -6.393293380737305

Token 58: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13179336488246918
    2. ' for' → logprob: -2.631793260574341
    3. '
' → logprob: -3.506793260574341
    4. 'for' → logprob: -4.38179349899292
    5. '<|end|>' → logprob: -5.00679349899292
    6. '    
' → logprob: -7.25679349899292
    7. '\n' → logprob: -7.88179349899292
    8. '	for' → logprob: -7.88179349899292
    9. ' 
' → logprob: -8.006793022155762
    10. ' ' → logprob: -8.881793022155762

Token 59: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.31006360054016113
    2. ' for' → logprob: -1.4350636005401611
    3. '   ' → logprob: -3.560063600540161
    4. '
' → logprob: -10.310063362121582
    5. '	for' → logprob: -11.310063362121582
    6. '```' → logprob: -11.685063362121582
    7. ' ' → logprob: -12.310063362121582
    8. '    
' → logprob: -13.185063362121582
    9. ' 
' → logprob: -14.310063362121582
    10. '``' → logprob: -15.060063362121582

Token 60: ' idx' (ID: 14016)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.018196536228060722
    2. ' ' → logprob: -4.0181965827941895
    3. ' _' → logprob: -10.893196105957031
    4. ' index' → logprob: -10.893196105957031
    5. 'i' → logprob: -12.393196105957031
    6. ' idx' → logprob: -13.018196105957031
    7. ' I' → logprob: -13.768196105957031
    8. ' in' → logprob: -14.143196105957031
    9. '_' → logprob: -14.893196105957031
    10. ' range' → logprob: -15.018196105957031

Token 61: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.000944576517213136
    2. ' ' → logprob: -7.2509446144104
    3. 'in' → logprob: -8.375944137573242
    4. '1' → logprob: -13.500944137573242
    5. ',' → logprob: -14.250944137573242
    6. '	in' → logprob: -14.625944137573242
    7. ' ,' → logprob: -14.875944137573242
    8. '```' → logprob: -15.000944137573242
    9. ' i' → logprob: -15.125944137573242
    10. '+' → logprob: -16.000944137573242

Token 62: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0003357006062287837
    2. 'range' → logprob: -8.000335693359375
    3. ' ' → logprob: -15.750335693359375
    4. '	range' → logprob: -16.625335693359375
    5. ' xrange' → logprob: -18.250335693359375
    6. '(range' → logprob: -19.000335693359375
    7. '   ' → logprob: -19.375335693359375
    8. '  ' → logprob: -20.250335693359375
    9. ' ' → logprob: -21.375335693359375
    10. '_range' → logprob: -22.250335693359375

Token 63: '(sequence' (ID: 129991)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -7.822646693966817e-06
    2. ' (' → logprob: -12.250007629394531
    3. '1' → logprob: -12.750007629394531
    4. ' ' → logprob: -16.87500762939453
    5. '   ' → logprob: -18.12500762939453
    6. '(
' → logprob: -19.25000762939453
    7. '2' → logprob: -19.25000762939453
    8. '[' → logprob: -19.25000762939453
    9. '(len' → logprob: -19.75000762939453
    10. ',' → logprob: -20.62500762939453

Token 64: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.0003919463779311627
    2. '_' → logprob: -8.000391960144043
    3. '_l' → logprob: -10.125391960144043
    4. 'Length' → logprob: -12.250391960144043
    5. '   ' → logprob: -12.250391960144043
    6. ' _' → logprob: -13.500391960144043
    7. '_LENGTH' → logprob: -13.750391960144043
    8. '-' → logprob: -14.125391960144043
    9. '_lengths' → logprob: -14.250391960144043
    10. 'ength' → logprob: -14.875391960144043

Token 65: ' -' (ID: 533)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.007964082062244415
    2. ' ):' → logprob: -5.257964134216309
    3. '):
' → logprob: -6.382964134216309
    4. '   ' → logprob: -8.132964134216309
    5. '-' → logprob: -8.382964134216309
    6. ' -' → logprob: -8.507964134216309
    7. ')' → logprob: -9.132964134216309
    8. '>' → logprob: -9.507964134216309
    9. ' >' → logprob: -9.757964134216309
    10. ' ' → logprob: -11.132964134216309

Token 66: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1002068892121315
    2. ' ' → logprob: -2.3502068519592285
    3. '   ' → logprob: -16.10020637512207
    4. '```' → logprob: -16.72520637512207
    5. '2' → logprob: -16.97520637512207
    6. '  ' → logprob: -17.91270637512207
    7. '<|end|>' → logprob: -17.97520637512207
    8. '    ' → logprob: -17.97520637512207
    9. ',' → logprob: -18.10020637512207
    10. ')' → logprob: -18.10020637512207

Token 67: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7848862373502925e-05
    2. ' ' → logprob: -10.500027656555176
    3. '2' → logprob: -16.250028610229492
    4. '   ' → logprob: -16.875028610229492
    5. '```' → logprob: -17.625028610229492
    6. ')' → logprob: -18.687528610229492
    7. '  ' → logprob: -19.062528610229492
    8. '۱' → logprob: -19.250028610229492
    9. '１' → logprob: -19.437528610229492
    10. '4' → logprob: -19.562528610229492

Token 68: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.021980492398142815
    2. '):
' → logprob: -3.8969805240631104
    3. ' ):' → logprob: -6.771980285644531
    4. '):
' → logprob: -8.771980285644531
    5. ':' → logprob: -9.396980285644531
    6. ' ):
' → logprob: -10.521980285644531
    7. ')' → logprob: -10.771980285644531
    8. '   ' → logprob: -13.021980285644531
    9. ',' → logprob: -13.521980285644531
    10. ']:' → logprob: -14.521980285644531

Token 69: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23400768637657166
    2. '   ' → logprob: -1.609007716178894
    3. '    
' → logprob: -6.234007835388184
    4. '
' → logprob: -6.484007835388184
    5. '        
' → logprob: -6.734007835388184
    6. '    ' → logprob: -7.109007835388184
    7. '<|end|>' → logprob: -7.234007835388184
    8. ' 
' → logprob: -7.609007835388184
    9. ' ' → logprob: -7.859007835388184
    10. ',' → logprob: -7.984007835388184

Token 70: ' computed' (ID: 46716)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.6983747482299805
    2. '     
' → logprob: -1.9483747482299805
    3. '   ' → logprob: -2.3233747482299805
    4. '    ' → logprob: -2.4483747482299805
    5. ' computed' → logprob: -2.5733747482299805
    6. '    
' → logprob: -3.1983747482299805
    7. '
' → logprob: -3.8233747482299805
    8. '       ' → logprob: -4.1983747482299805
    9. ' ' → logprob: -4.6983747482299805
    10. 'computed' (adapté à ' computed') → logprob: -5.5733747482299805

Token 71: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -6.2729995988775045e-06
    2. '_' → logprob: -12.500006675720215
    3. '_vals' → logprob: -14.250006675720215
    4. '_value' → logprob: -14.625006675720215
    5. 's' → logprob: -14.875006675720215
    6. '_VALUES' → logprob: -15.375006675720215
    7. 'values' → logprob: -16.1250057220459
    8. ' _' → logprob: -16.1250057220459
    9. '_val' → logprob: -16.3750057220459
    10. ')_' → logprob: -16.3750057220459

Token 72: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.12714554369449615
    2. '[' → logprob: -2.127145528793335
    3. ' [' → logprob: -8.627145767211914
    4. '[index' → logprob: -11.752145767211914
    5. '[i' → logprob: -12.502145767211914
    6. '[id' → logprob: -12.627145767211914
    7. '[...]' → logprob: -13.252145767211914
    8. ' ' → logprob: -13.377145767211914
    9. '[next' → logprob: -13.377145767211914
    10. '\[' → logprob: -13.502145767211914

Token 73: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4373696744441986
    2. ' +' → logprob: -1.562369704246521
    3. ']' → logprob: -1.937369704246521
    4. ' ]' → logprob: -8.187369346618652
    5. ']+' → logprob: -8.812369346618652
    6. '+]' → logprob: -10.062369346618652
    7. '   ' → logprob: -10.187369346618652
    8. ' ' → logprob: -11.187369346618652
    9. '++]' → logprob: -12.437369346618652
    10. ']+=' → logprob: -13.062369346618652

Token 74: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.1274478435516357
    2. ' +=' → logprob: -1.2524478435516357
    3. '=' → logprob: -1.3774478435516357
    4. '+=' → logprob: -2.5024478435516357
    5. '+' → logprob: -3.1274478435516357
    6. ' ^=' → logprob: -5.127448081970215
    7. ' ' → logprob: -6.252448081970215
    8. ' |=' → logprob: -6.627448081970215
    9. ',' → logprob: -6.877448081970215
    10. '^' → logprob: -7.252448081970215

Token 75: ' min' (ID: 1349)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.7874294519424438
    2. ' base' → logprob: -1.1624294519424438
    3. 'max' → logprob: -1.6624294519424438
    4. 'base' → logprob: -3.9124293327331543
    5. ' computed' → logprob: -4.537429332733154
    6. 'computed' → logprob: -5.037429332733154
    7. ' ' → logprob: -6.162429332733154
    8. ' min' → logprob: -6.912429332733154
    9. 'min' → logprob: -7.412429332733154
    10. ' (' → logprob: -7.787429332733154

Token 76: '(com' (ID: 27868)
  Prédit: '(com'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(com' → logprob: -0.06029202416539192
    2. '(' → logprob: -2.9352920055389404
    3. '(base' → logprob: -5.3102922439575195
    4. '(
' → logprob: -8.68529224395752
    5. ' (' → logprob: -8.93529224395752
    6. 'computed' → logprob: -9.56029224395752
    7. '([' → logprob: -10.31029224395752
    8. '(

' → logprob: -11.43529224395752
    9. '((' → logprob: -11.93529224395752
    10. '(min' → logprob: -12.18529224395752

Token 77: 'puted' (ID: 46320)
  Prédit: 'puted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'puted' → logprob: -0.00018804390856530517
    2. 'put' → logprob: -9.125187873840332
    3. '(' → logprob: -9.875187873840332
    4. '[' → logprob: -11.875187873840332
    5. 'uted' → logprob: -11.875187873840332
    6. 'puter' → logprob: -12.125187873840332
    7. 'pute' → logprob: -12.375187873840332
    8. '([' → logprob: -13.875187873840332
    9. '_put' → logprob: -14.500187873840332
    10. 'pt' → logprob: -15.125187873840332

Token 78: '_values' (ID: 20393)
  Prédit: 'ed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.005551881622523069
    2. '_values' → logprob: -5.380551815032959
    3. 'puted' → logprob: -7.380551815032959
    4. 'uted' → logprob: -9.130552291870117
    5. '_ed' → logprob: -10.505552291870117
    6. '[' → logprob: -11.005552291870117
    7. '_' → logprob: -11.005552291870117
    8. 'ent' → logprob: -11.255552291870117
    9. 'put' → logprob: -11.380552291870117
    10. ' ed' → logprob: -11.755552291870117

Token 79: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.00029112942866049707
    2. '[' → logprob: -9.375290870666504
    3. ')' → logprob: -9.750290870666504
    4. ' [' → logprob: -10.000290870666504
    5. ' idx' → logprob: -11.000290870666504
    6. '(idx' → logprob: -11.250290870666504
    7. ')[' → logprob: -11.375290870666504
    8. '   ' → logprob: -11.500290870666504
    9. ' ' → logprob: -11.750290870666504
    10. 'idx' → logprob: -12.187790870666504

Token 80: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7494135499000549
    2. '],' → logprob: -0.7494135499000549
    3. '+' → logprob: -3.37441349029541
    4. ' +' → logprob: -4.87441349029541
    5. ']+' → logprob: -4.99941349029541
    6. '[idx' → logprob: -5.74941349029541
    7. ' ],' → logprob: -7.12441349029541
    8. '   ' → logprob: -7.37441349029541
    9. ' ]' → logprob: -7.87441349029541
    10. ' ' → logprob: -8.24941349029541

Token 81: ' base' (ID: 3611)
  Prédit: ' computed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' computed' → logprob: -0.42618322372436523
    2. ' base' → logprob: -1.5511832237243652
    3. 'computed' → logprob: -2.0511832237243652
    4. 'base' → logprob: -5.426183223724365
    5. ' ' → logprob: -6.926183223724365
    6. '    ' → logprob: -8.551183700561523
    7. '   ' → logprob: -8.738683700561523
    8. ' calculated' → logprob: -8.863683700561523
    9. ')' → logprob: -9.301183700561523
    10. ' ' → logprob: -10.238683700561523

Token 82: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -1.1756367712223437e-05
    2. 'values' → logprob: -11.875011444091797
    3. 'e' → logprob: -14.000011444091797
    4. '_VALUES' → logprob: -14.000011444091797
    5. 'ed' → logprob: -14.500011444091797
    6. '_value' → logprob: -15.000011444091797
    7. 's' → logprob: -15.125011444091797
    8. '_' → logprob: -15.375011444091797
    9. 'Values' → logprob: -15.625011444091797
    10. '   ' → logprob: -15.750011444091797

Token 83: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.004715041723102331
    2. '[' → logprob: -6.1297149658203125
    3. ' [' → logprob: -6.5047149658203125
    4. ' idx' → logprob: -7.6297149658203125
    5. '_values' → logprob: -8.754714965820312
    6. 'idx' → logprob: -9.379714965820312
    7. '   ' → logprob: -10.129714965820312
    8. ')' → logprob: -10.254714965820312
    9. '_[' → logprob: -10.254714965820312
    10. ')[' → logprob: -10.817214965820312

Token 84: '])
' (ID: 5169)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2033877670764923
    2. ' +' → logprob: -1.95338773727417
    3. ']' → logprob: -3.57838773727417
    4. '])' → logprob: -4.45338773727417
    5. ')' → logprob: -6.70338773727417
    6. '   ' → logprob: -7.57838773727417
    7. ']+' → logprob: -8.078388214111328
    8. '])
' → logprob: -8.578388214111328
    9. ' ]' → logprob: -8.828388214111328
    10. ' ' → logprob: -9.703388214111328

Token 85: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4996053874492645
    2. '
' → logprob: -1.874605417251587
    3. '    
' → logprob: -2.624605417251587
    4. '+' → logprob: -2.874605417251587
    5. '    ' → logprob: -3.624605417251587
    6. '       ' → logprob: -3.624605417251587
    7. ' 
' → logprob: -4.124605178833008
    8. ' +' → logprob: -4.499605178833008
    9. '<|end|>' → logprob: -4.749605178833008
    10. ' ' → logprob: -5.124605178833008

Token 86: ' computed' (ID: 46716)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16352778673171997
    2. '   ' → logprob: -2.663527727127075
    3. 'computed' (adapté à ' computed') → logprob: -3.163527727127075
    4. ' computed' → logprob: -3.288527727127075
    5. ' if' → logprob: -7.538527965545654
    6. ' ' → logprob: -8.788527488708496
    7. 'if' → logprob: -9.163527488708496
    8. ' for' → logprob: -9.163527488708496
    9. '           ' → logprob: -9.288527488708496
    10. '    ' → logprob: -9.538527488708496

Token 87: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -4.787507714354433e-05
    2. '_' → logprob: -10.25004768371582
    3. '_vals' → logprob: -12.62504768371582
    4. '_VALUES' → logprob: -12.75004768371582
    5. 'Values' → logprob: -13.12504768371582
    6. '_val' → logprob: -13.62504768371582
    7. '```' → logprob: -14.12504768371582
    8. '_value' → logprob: -14.50004768371582
    9. '_s' → logprob: -14.75004768371582
    10. '[_' → logprob: -15.12504768371582

Token 88: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.5235022902488708
    2. '[' → logprob: -0.8985022902488708
    3. ' [' → logprob: -9.023502349853516
    4. '	' → logprob: -10.023502349853516
    5. '```' → logprob: -10.023502349853516
    6. '[++' → logprob: -10.148502349853516
    7. '[
' → logprob: -10.523502349853516
    8. '[next' → logprob: -11.398502349853516
    9. '[index' → logprob: -11.773502349853516
    10. '[i' → logprob: -11.898502349853516

Token 89: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3169253468513489
    2. ' +' → logprob: -1.316925287246704
    3. ']' → logprob: -5.691925525665283
    4. ' ]' → logprob: -9.441925048828125
    5. ' ' → logprob: -9.566925048828125
    6. ']+' → logprob: -9.816925048828125
    7. '+]' → logprob: -10.691925048828125
    8. '	' → logprob: -11.066925048828125
    9. '1' → logprob: -11.566925048828125
    10. '   ' → logprob: -11.691925048828125

Token 90: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06209361553192139
    2. ' ' → logprob: -2.812093734741211
    3. ')' → logprob: -9.687093734741211
    4. '```' → logprob: -10.687093734741211
    5. '<|end|>' → logprob: -11.187093734741211
    6. '  ' → logprob: -12.312093734741211
    7. ' ' → logprob: -12.562093734741211
    8. '_' → logprob: -12.937093734741211
    9. ' )' → logprob: -12.937093734741211
    10. '[' → logprob: -13.187093734741211

Token 91: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.5649528298527e-05
    2. ' ' → logprob: -9.500075340270996
    3. ')' → logprob: -15.000075340270996
    4. '```' → logprob: -15.625075340270996
    5. '0' → logprob: -16.437576293945312
    6. ']' → logprob: -16.750076293945312
    7. '   ' → logprob: -17.000076293945312
    8. '  ' → logprob: -17.500076293945312
    9. '
' → logprob: -17.625076293945312
    10. '+' → logprob: -17.937576293945312

Token 92: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5198429226875305
    2. ' )' → logprob: -1.2698428630828857
    3. ' ' → logprob: -3.1448428630828857
    4. ']' → logprob: -3.6448428630828857
    5. ' ]' → logprob: -3.7698428630828857
    6. ' =' → logprob: -4.019843101501465
    7. '+' → logprob: -5.644843101501465
    8. '=' → logprob: -6.019843101501465
    9. ' +' → logprob: -6.019843101501465
    10. '   ' → logprob: -6.644843101501465

Token 93: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02006739005446434
    2. ' +=' → logprob: -4.27006721496582
    3. '=' → logprob: -5.39506721496582
    4. ' +' → logprob: -7.39506721496582
    5. '+' → logprob: -8.02006721496582
    6. ' ' → logprob: -8.27006721496582
    7. '+=' → logprob: -9.02006721496582
    8. '	' → logprob: -12.14506721496582
    9. ' -=' → logprob: -12.52006721496582
    10. ' ' → logprob: -12.77006721496582

Token 94: ' base' (ID: 3611)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.04667919874191284
    2. ' max' → logprob: -3.4216792583465576
    3. ' computed' → logprob: -4.9216790199279785
    4. 'min' → logprob: -5.6716790199279785
    5. ' ' → logprob: -6.6716790199279785
    6. ' m' → logprob: -8.171679496765137
    7. 'max' → logprob: -8.421679496765137
    8. ' base' → logprob: -9.171679496765137
    9. 'computed' → logprob: -9.171679496765137
    10. '	min' → logprob: -9.921679496765137

Token 95: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -0.0002112886286340654
    2. '_' → logprob: -8.625211715698242
    3. ' _' → logprob: -11.500211715698242
    4. '_value' → logprob: -12.125211715698242
    5. 'values' → logprob: -12.500211715698242
    6. '_v' → logprob: -12.625211715698242
    7. '_val' → logprob: -12.750211715698242
    8. '_vals' → logprob: -12.875211715698242
    9. 'Values' → logprob: -14.000211715698242
    10. '_VALUES' → logprob: -14.125211715698242

Token 96: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.9933779835700989
    2. '_values' → logprob: -1.118377923965454
    3. '[' → logprob: -1.243377923965454
    4. '_' → logprob: -4.993378162384033
    5. '```' → logprob: -6.493378162384033
    6. '[_' → logprob: -6.618378162384033
    7. ' [' → logprob: -6.868378162384033
    8. '_[' → logprob: -6.868378162384033
    9. '+' → logprob: -8.118377685546875
    10. '[next' → logprob: -8.243377685546875

Token 97: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8366166949272156
    2. '+' → logprob: -0.8366166949272156
    3. ' +' → logprob: -3.0866167545318604
    4. '[idx' → logprob: -3.0866167545318604
    5. ' )' → logprob: -4.586616516113281
    6. ')+' → logprob: -4.711616516113281
    7. ']' → logprob: -5.086616516113281
    8. '   ' → logprob: -5.336616516113281
    9. '[' → logprob: -5.711616516113281
    10. ' ' → logprob: -6.461616516113281

Token 98: '   ' (ID: 271)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6897693872451782
    2. '[' → logprob: -1.3147693872451782
    3. '+' → logprob: -1.8147693872451782
    4. '[idx' → logprob: -2.8147692680358887
    5. ')' → logprob: -6.189769268035889
    6. '[
' → logprob: -7.189769268035889
    7. '   ' → logprob: -7.314769268035889
    8. ' ' → logprob: -7.439769268035889
    9. '```' → logprob: -7.939769268035889
    10. ']' → logprob: -8.064769744873047

Token 99: ' print' (ID: 2123)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.098649263381958
    2. '[idx' → logprob: -1.723649263381958
    3. '[' → logprob: -1.848649263381958
    4. '<|end|>' → logprob: -2.098649263381958
    5. ' ' → logprob: -2.473649263381958
    6. '   ' → logprob: -2.848649263381958
    7. '_' → logprob: -3.973649263381958
    8. ' +' → logprob: -4.598649024963379
    9. '<|end|>' → logprob: -4.723649024963379
    10. ')' → logprob: -4.848649024963379

Token 100: '(sum' (ID: 45528)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0023509073071181774
    2. '(com' → logprob: -6.627350807189941
    3. '('' → logprob: -7.252350807189941
    4. '("("' → logprob: -8.252350807189941
    5. '_' → logprob: -11.252350807189941
    6. '(
' → logprob: -11.752350807189941
    7. '()' → logprob: -11.877350807189941
    8. '(`' → logprob: -12.127350807189941
    9. 'computed' → logprob: -12.877350807189941
    10. '('_' → logprob: -13.002350807189941

Token 101: '(com' (ID: 27868)
  Prédit: '(com'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(com' → logprob: -0.575993001461029
    2. '(' → logprob: -0.825993001461029
    3. '(
' → logprob: -10.450992584228516
    4. '(

' → logprob: -11.825992584228516
    5. '()' → logprob: -12.200992584228516
    6. '(cal' → logprob: -12.575992584228516
    7. '(co' → logprob: -12.700992584228516
    8. '(`' → logprob: -13.700992584228516
    9. ')' → logprob: -13.700992584228516
    10. ' (' → logprob: -14.075992584228516

Token 102: 'puted' (ID: 46320)
  Prédit: 'puted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'puted' → logprob: -5.955703818472102e-05
    2. 'uted' → logprob: -10.125059127807617
    3. 'put' → logprob: -11.125059127807617
    4. '```' → logprob: -13.000059127807617
    5. 'pute' → logprob: -14.125059127807617
    6. '_put' → logprob: -14.375059127807617
    7. 'puter' → logprob: -15.875059127807617
    8. '   ' → logprob: -16.250059127807617
    9. '``' → logprob: -16.500059127807617
    10. '>' → logprob: -16.500059127807617

Token 103: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -0.00020795092859771103
    2. '_' → logprob: -8.500207901000977
    3. '_val' → logprob: -13.625207901000977
    4. 'ed' → logprob: -14.000207901000977
    5. '_value' → logprob: -14.625207901000977
    6. 'values' → logprob: -14.750207901000977
    7. '_vals' → logprob: -14.875207901000977
    8. ')_' → logprob: -15.375207901000977
    9. '_v' → logprob: -15.500207901000977
    10. ')' → logprob: -16.000207901000977

Token 104: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25195446610450745
    2. '))' → logprob: -1.501954436302185
    3. ')))' → logprob: -11.751954078674316
    4. ')
' → logprob: -12.251954078674316
    5. ' )' → logprob: -12.751954078674316
    6. ')`' → logprob: -13.251954078674316
    7. '))
' → logprob: -13.501954078674316
    8. '])' → logprob: -13.626954078674316
    9. '   ' → logprob: -14.376954078674316
    10. '())' → logprob: -14.501954078674316

Token 105: 'process' (ID: 9139)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.32110193371772766
    2. ')' → logprob: -1.5711019039154053
    3. '+' → logprob: -3.8211019039154053
    4. ' ' → logprob: -3.8211019039154053
    5. '[idx' → logprob: -5.196102142333984
    6. '   ' → logprob: -5.321102142333984
    7. '<|end|>' → logprob: -5.446102142333984
    8. '_' → logprob: -6.446102142333984
    9. '
' → logprob: -6.946102142333984
    10. '.' → logprob: -6.946102142333984

Token 106: '_sequence' (ID: 55606)
  Prédit: '_sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sequence' → logprob: -0.023298701271414757
    2. '_' → logprob: -3.773298740386963
    3. '_seq' → logprob: -10.523298263549805
    4. '_sequences' → logprob: -11.898298263549805
    5. '_process' → logprob: -12.023298263549805
    6. '_SEQUENCE' → logprob: -13.398298263549805
    7. '_s' → logprob: -13.648298263549805
    8. '(' → logprob: -13.648298263549805
    9. '(_' → logprob: -14.148298263549805
    10. ' _' → logprob: -14.148298263549805

Token 107: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0004740447038784623
    2. '(' → logprob: -7.875473976135254
    3. '()
' → logprob: -10.250473976135254
    4. '().' → logprob: -11.750473976135254
    5. ' ()' → logprob: -11.875473976135254
    6. '();' → logprob: -12.125473976135254
    7. '())' → logprob: -12.125473976135254
    8. '()<' → logprob: -12.125473976135254
    9. '()">' → logprob: -12.250473976135254
    10. '()>' → logprob: -12.625473976135254


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 105
Tokens correctement prédits (1ère position, stricte): 57
Tokens correctement prédits (1ère position, avec adaptation): 58
Tokens correctement prédits (top 10): 88
Précision stricte (1ère position): 54.29%
Précision adaptée (1ère position): 55.24%
Précision (top 10): 83.81%
================================================================================
