================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:09:38
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Demande à l'utilisateur de saisir un entier par le biais d'une entrée standard
# La fonction input() recueille une ligne saisie par l'utilisateur sous forme de chaîne de caractères.
# int() convertit cette chaîne en un entier. La valeur obtenue sera stockée dans la variable L.
L = int(input())

# Déclare une liste vide qui contiendra des tuples représentant les arêtes d'un graphe.
# Chaque élément ajouté à 'edges' sera une arête décrite par trois entiers (départ, arrivée, poids).
edges = []

# Initialise deux variables, p2 et N, à la valeur 1.
# p2 servira à conserver une puissance de 2 (initialement 2^0).
# N va indiquer le nombre actuel de sommets (noeuds) dans le graphe, en partant de 1.
p2 = 1
N = 1

# La chaîne de commentaire suivante décrit, dans une autre langue (japonais),
# qu'à chaque étape pour chaque puissance de 2, des arêtes multiples sont construites.
""" 2べきのとき多重辺
   0     0     0     0  ...
1 === 2 === 3 === 4 === 5 ...
   1     2     4     8  ...
"""

# Cette boucle ajoutera des arêtes correspondant aux puissances de 2 <= L.
# La boucle while continue tant que p2 * 2 (soit la prochaine puissance de 2) est inférieur ou égal à L.
while L >= p2 * 2:
    # Incrémente N de 1 à chaque itération, ce qui correspond à ajouter un nouveau sommet au graphe.
    N += 1
    # Multiplie p2 par 2 pour obtenir la prochaine puissance de 2.
    p2 *= 2
    # Ajoute une arête (N - 1, N, 0) : reliant le nœud précédent (N-1) au nœud courant (N) avec un poids 0.
    edges.append((N - 1, N, 0))
    # Ajoute également une arête (N - 1, N, 2**(N-2)), c'est-à-dire une arête parallèle avec un poids équivalent à la puissance de 2 correspondante.
    # 2**(N-2) : car N a été incrémenté, pour correspondre à la bonne puissance de 2 on utilise N-2 (exemple : pour N=2, poids=1 ; pour N=3, poids=2, etc.).
    edges.append((N - 1, N, 2 ** (N - 2)))

# Une fois la boucle terminée, p2 contient la plus grande puissance de 2 telle que p2 <= L.
# 'rest' est la quantité qu'il reste à atteindre pour L, soit L - p2.
rest = L - p2
# On crée une variable temporaire 'tmp' initialisée à p2.
# Elle permettra de calculer les poids pour construire le reste du chemin.
tmp = p2

# Cette boucle for parcourt les puissances de 2 de N vers 0, c'est-à-dire du sommet N jusqu'au sommet 0 inclus.
# range(N, -1, -1) produit les valeurs N, N-1, ..., 0 (en décrémentant de 1 à chaque étape).
for i in range(N, -1, -1):
    # (rest >> i) & 1 permet de vérifier si le i-ème bit de la variable resta est à 1.
    # Cela correspond à savoir si la puissance de 2^i doit être incluse pour atteindre la somme L.
    if (rest >> i) & 1:
        # Si ce bit est présent (égal à 1), on ajoute une arête du sommet i+1 vers N avec un poids égal à la valeur de 'tmp'.
        # Cela correspond à exploiter la route du sommet correspondant à la puissance de 2^i pour faire la somme vers L.
        edges.append((i + 1, N, tmp))
        # Ajoute la puissance de 2^i à tmp pour les prochaines arêtes éventuelles.
        tmp += 2 ** i

# Détermine le nombre total d'arêtes créées en prenant la longueur de la liste d'arêtes.
M = len(edges)

# Les contraintes sont telles que le nombre de sommets N doit être inférieur ou égal à 20 et le nombre d'arêtes M inférieur ou égal à 60 (selon le commentaire original).
# Ici, rien n'empêche cela mais une assertion aurait pu être utilisée pour vérifier.

# Affiche le nombre total de sommets N suivi du nombre total d'arêtes M sur une même ligne, séparés par un espace.
print(N, M)

# Pour chaque arête stockée dans la liste edges :
for edge in edges:
    # Décompacte le tuple 'edge' et affiche ses trois composantes sur une même ligne, séparées par des espaces.
    # L'étoile (*) permet d'étendre le tuple pour que chaque valeur soit un argument individuel pour print(), produisant ainsi 'départ arrivée poids'.
    print(*edge)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Dem' (ID: 9458)
  → Token d'amorce (pas de prédiction)

Token 2: 'ande' (ID: 4102)
  → Token d'amorce (pas de prédiction)

Token 3: ' à' (ID: 1221)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7934136390686035
    2. ':' → logprob: -1.5434136390686035
    3. 's' → logprob: -1.6684136390686035
    4. ' de' → logprob: -2.7934136390686035
    5. ' ' → logprob: -3.1684136390686035
    6. '=' → logprob: -4.7934136390686035
    7. ' =' → logprob: -4.7934136390686035
    8. ' :' → logprob: -4.9184136390686035
    9. '.' → logprob: -5.2934136390686035
    10. ' d' → logprob: -5.7934136390686035

Token 4: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.16772253811359406
    2. ' l' → logprob: -1.9177225828170776
    3. ' ' → logprob: -5.667722702026367
    4. ' user' → logprob: -6.667722702026367
    5. 'user' → logprob: -7.167722702026367
    6. ''' → logprob: -7.917722702026367
    7. 'u' → logprob: -8.167722702026367
    8. '_' → logprob: -8.417722702026367
    9. ' ' → logprob: -8.917722702026367
    10. ' utilisateur' → logprob: -8.917722702026367

Token 5: ''utilisateur' (ID: 140803)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.6070993542671204
    2. ''utilisateur' → logprob: -1.2320992946624756
    3. ''' → logprob: -2.1070992946624756
    4. 'util' → logprob: -3.6070992946624756
    5. 'a' → logprob: -4.732099533081055
    6. ' utilisateur' → logprob: -6.232099533081055
    7. '’utilisateur' → logprob: -6.982099533081055
    8. '_' → logprob: -7.107099533081055
    9. ''util' → logprob: -7.732099533081055
    10. ''user' → logprob: -8.482099533081055

Token 6: ' de' (ID: 334)
  Prédit: 'nom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nom' → logprob: -0.17538928985595703
    2. 'name' → logprob: -2.675389289855957
    3. 'n' → logprob: -3.425389289855957
    4. 's' → logprob: -4.300389289855957
    5. ' nom' → logprob: -4.800389289855957
    6. 'user' → logprob: -4.925389289855957
    7. ' =' → logprob: -5.925389289855957
    8. 'prenom' → logprob: -6.050389289855957
    9. 'input' → logprob: -6.175389289855957
    10. 'print' → logprob: -6.300389289855957

Token 7: ' saisir' (ID: 152120)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.028796790167689323
    2. 'entr' → logprob: -4.153796672821045
    3. ' saisir' → logprob: -5.153796672821045
    4. '```' → logprob: -6.028796672821045
    5. 'r' → logprob: -6.153796672821045
    6. 'sa' → logprob: -7.903796672821045
    7. 'don' → logprob: -8.153797149658203
    8. 'entrée' → logprob: -8.403797149658203
    9. '#' → logprob: -8.403797149658203
    10. ' entrer' → logprob: -8.653797149658203

Token 8: ' un' (ID: 537)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.028100790455937386
    2. ' un' → logprob: -4.403100967407227
    3. ' une' → logprob: -5.528100967407227
    4. ''' → logprob: -5.778100967407227
    5. '_' → logprob: -6.153100967407227
    6. 's' → logprob: -6.403100967407227
    7. ' ' → logprob: -7.028100967407227
    8. ' :' → logprob: -7.153100967407227
    9. 'u' → logprob: -7.528100967407227
    10. ' u' → logprob: -7.653100967407227

Token 9: ' entier' (ID: 80473)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9304329752922058
    2. ' espace' → logprob: -1.1804330348968506
    3. 'e' → logprob: -2.5554330348968506
    4. 'a' → logprob: -3.5554330348968506
    5. 'nombre' → logprob: -3.5554330348968506
    6. ' nombre' → logprob: -3.6804330348968506
    7. 'é' → logprob: -4.0554327964782715
    8. '_' → logprob: -4.1804327964782715
    9. ' nom' → logprob: -4.3054327964782715
    10. 'nom' → logprob: -4.4304327964782715

Token 10: ' par' (ID: 686)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.03961040452122688
    2. 'x' → logprob: -4.164610385894775
    3. 'i' → logprob: -4.414610385894775
    4. 'e' → logprob: -5.664610385894775
    5. 'ent' → logprob: -5.914610385894775
    6. 'nombre' → logprob: -7.289610385894775
    7. '_' → logprob: -7.414610385894775
    8. 's' → logprob: -7.664610385894775
    9. '```' → logprob: -7.664610385894775
    10. '\' → logprob: -7.789610385894775

Token 11: ' le' (ID: 505)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5579261183738708
    2. 'ce' → logprob: -2.5579261779785156
    3. 't' → logprob: -3.1829261779785156
    4. ' input' → logprob: -3.5579261779785156
    5. 'a' → logprob: -3.6829261779785156
    6. ' ligne' → logprob: -3.6829261779785156
    7. 'entrée' → logprob: -3.6829261779785156
    8. '```' → logprob: -3.8079261779785156
    9. '  ' → logprob: -4.057926177978516
    10. '   ' → logprob: -4.057926177978516

Token 12: ' biais' (ID: 116490)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.35224756598472595
    2. 'input' → logprob: -1.8522475957870483
    3. 'n' → logprob: -3.477247476577759
    4. 't' → logprob: -4.102247714996338
    5. 'b' → logprob: -4.477247714996338
    6. 'print' → logprob: -4.852247714996338
    7. 'code' → logprob: -5.102247714996338
    8. 'next' → logprob: -5.352247714996338
    9. 'return' → logprob: -5.602247714996338
    10. ' input' → logprob: -5.602247714996338

Token 13: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.07504481077194214
    2. ' ' → logprob: -2.825044870376587
    3. ' de' → logprob: -4.575044631958008
    4. 'd' → logprob: -6.075044631958008
    5. 's' → logprob: -9.325044631958008
    6. '_' → logprob: -9.825044631958008
    7. ' du' → logprob: -10.075044631958008
    8. 'de' → logprob: -10.450044631958008
    9. 'space' → logprob: -11.075044631958008
    10. ' ,' → logprob: -11.325044631958008

Token 14: ''une' (ID: 13337)
  Prédit: ''une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''une' → logprob: -0.6295747756958008
    2. ''un' → logprob: -1.3795747756958008
    3. 'e' → logprob: -2.379574775695801
    4. ''' → logprob: -2.754574775695801
    5. 'u' → logprob: -3.629574775695801
    6. 'une' → logprob: -4.629574775695801
    7. '`' → logprob: -4.629574775695801
    8. 'input' → logprob: -5.379574775695801
    9. 'un' → logprob: -6.129574775695801
    10. '```' → logprob: -6.629574775695801

Token 15: ' entrée' (ID: 95590)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.6747645735740662
    2. 'input' → logprob: -1.049764633178711
    3. ' ' → logprob: -2.049764633178711
    4. '=input' → logprob: -4.674764633178711
    5. 's' → logprob: -7.299764633178711
    6. 'entrée' → logprob: -7.424764633178711
    7. '  ' → logprob: -8.674764633178711
    8. 'print' → logprob: -9.049764633178711
    9. 'message' → logprob: -9.174764633178711
    10. 'space' → logprob: -9.299764633178711

Token 16: ' standard' (ID: 7024)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4465278387069702
    2. '_' → logprob: -1.6965278387069702
    3. 'i' → logprob: -2.9465279579162598
    4. 'x' → logprob: -3.6965279579162598
    5. 'e' → logprob: -3.6965279579162598
    6. '```' → logprob: -4.44652795791626
    7. '`' → logprob: -4.57152795791626
    8. 'input' → logprob: -4.82152795791626
    9. 'u' → logprob: -5.07152795791626
    10. 's' → logprob: -5.19652795791626

Token 17: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.05952845886349678
    2. '\' → logprob: -4.184528350830078
    3. 'e' → logprob: -4.559528350830078
    4. 'i' → logprob: -4.684528350830078
    5. '\n' → logprob: -4.809528350830078
    6. '#' → logprob: -5.184528350830078
    7. 'x' → logprob: -6.059528350830078
    8. '`' → logprob: -6.684528350830078
    9. 'ent' → logprob: -6.684528350830078
    10. '```' → logprob: -7.059528350830078

Token 18: '#' (ID: 2)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.020192168653011322
    2. '\' → logprob: -5.6451921463012695
    3. 'ent' → logprob: -5.7701921463012695
    4. 'e' → logprob: -5.8951921463012695
    5. 'nombre' → logprob: -6.0201921463012695
    6. '\n' → logprob: -6.1451921463012695
    7. 'x' → logprob: -6.5201921463012695
    8. '```' → logprob: -6.7701921463012695
    9. 'i' → logprob: -7.2701921463012695
    10. '#' → logprob: -7.7701921463012695

Token 19: ' La' (ID: 3038)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.16585461795330048
    2. 'ent' → logprob: -2.2908546924591064
    3. 'nombre' → logprob: -3.5408546924591064
    4. 'x' → logprob: -4.415854454040527
    5. 'user' → logprob: -5.915854454040527
    6. 'input' → logprob: -7.040854454040527
    7. 'number' → logprob: -7.040854454040527
    8. 'e' → logprob: -7.165854454040527
    9. ' entier' → logprob: -7.290854454040527
    10. 'num' → logprob: -7.415854454040527

Token 20: ' fonction' (ID: 17610)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8767948746681213
    2. 'val' → logprob: -1.5017948150634766
    3. 's' → logprob: -1.6267948150634766
    4. 'ent' → logprob: -3.0017948150634766
    5. 'nombre' → logprob: -3.6267948150634766
    6. '#' → logprob: -4.001794815063477
    7. ' ' → logprob: -4.251794815063477
    8. ' valeur' → logprob: -4.376794815063477
    9. 'value' → logprob: -5.251794815063477
    10. 'v' → logprob: -5.251794815063477

Token 21: ' input' (ID: 3422)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8362323641777039
    2. 'input' → logprob: -0.9612323641777039
    3. ' input' → logprob: -1.7112324237823486
    4. ' def' → logprob: -6.2112321853637695
    5. 's' → logprob: -6.8362321853637695
    6. 'int' → logprob: -8.71123218536377
    7. 'd' → logprob: -9.08623218536377
    8. ' ' → logprob: -9.83623218536377
    9. '=input' → logprob: -10.33623218536377
    10. 'n' → logprob: -10.46123218536377

Token 22: '()' (ID: 416)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003872974484693259
    2. ' (' → logprob: -9.250387191772461
    3. '('' → logprob: -9.500387191772461
    4. '()' → logprob: -9.625387191772461
    5. ' ' → logprob: -10.875387191772461
    6. '"' → logprob: -10.875387191772461
    7. '(
' → logprob: -10.875387191772461
    8. 's' → logprob: -11.000387191772461
    9. '("' → logprob: -11.000387191772461
    10. ''' → logprob: -11.250387191772461

Token 23: ' recue' (ID: 134861)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0057179625146090984
    2. 's' → logprob: -6.505717754364014
    3. ' ' → logprob: -6.880717754364014
    4. '(
' → logprob: -7.505717754364014
    5. ')' → logprob: -7.755717754364014
    6. '()' → logprob: -7.880717754364014
    7. '#' → logprob: -7.880717754364014
    8. ' (' → logprob: -7.880717754364014
    9. ',' → logprob: -8.255718231201172
    10. '.' → logprob: -9.005718231201172

Token 24: 'ille' (ID: 3301)
  Prédit: 'ille'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ille' → logprob: -0.08979640901088715
    2. 'illit' → logprob: -3.464796304702759
    3. 't' → logprob: -3.714796304702759
    4. 'ill' → logprob: -5.089796543121338
    5. 'nt' → logprob: -5.089796543121338
    6. 'p' → logprob: -5.589796543121338
    7. 'll' → logprob: -5.839796543121338
    8. '#' → logprob: -5.964796543121338
    9. 'l' → logprob: -6.214796543121338
    10. 'lt' → logprob: -6.464796543121338

Token 25: ' une' (ID: 2463)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.4006587564945221
    2. ' ' → logprob: -2.0256588459014893
    3. ' la' → logprob: -2.4006588459014893
    4. ' une' → logprob: -2.9006588459014893
    5. ' un' → logprob: -3.7756588459014893
    6. 'l' → logprob: -4.90065860748291
    7. ' des' → logprob: -5.27565860748291
    8. ' toujours' → logprob: -5.52565860748291
    9. 's' → logprob: -6.02565860748291
    10. ' les' → logprob: -6.52565860748291

Token 26: ' ligne' (ID: 19583)
  Prédit: ' chaîne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.268123060464859
    2. 'chaine' → logprob: -2.018123149871826
    3. 'cha' → logprob: -2.768123149871826
    4. 'entrée' → logprob: -4.018123149871826
    5. ' chaine' → logprob: -4.893123149871826
    6. 's' → logprob: -5.018123149871826
    7. ' valeur' → logprob: -5.643123149871826
    8. 'str' → logprob: -7.143123149871826
    9. 'val' → logprob: -7.143123149871826
    10. 'ent' → logprob: -7.768123149871826

Token 27: ' sais' (ID: 30010)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.20819856226444244
    2. ' ' → logprob: -2.4581985473632812
    3. 's' → logprob: -3.2081985473632812
    4. '#' → logprob: -4.333198547363281
    5. ',' → logprob: -4.708198547363281
    6. '.' → logprob: -4.833198547363281
    7. 'n' → logprob: -5.333198547363281
    8. ')' → logprob: -5.583198547363281
    9. ' _' → logprob: -5.958198547363281
    10. ' )' → logprob: -6.083198547363281

Token 28: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.009479453787207603
    2. 'i' → logprob: -5.134479522705078
    3. 'rie' → logprob: -6.134479522705078
    4. 'e' → logprob: -7.009479522705078
    5. 'r' → logprob: -8.509479522705078
    6. '#' → logprob: -9.134479522705078
    7. ' ie' → logprob: -10.634479522705078
    8. 'nie' → logprob: -10.634479522705078
    9. 'sie' → logprob: -10.634479522705078
    10. '```' → logprob: -10.884479522705078

Token 29: ' par' (ID: 686)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.045880913734436
    2. 'ent' → logprob: -2.2958807945251465
    3. ',' → logprob: -2.4208807945251465
    4. 'u' → logprob: -2.5458807945251465
    5. 'user' → logprob: -2.5458807945251465
    6. '#' → logprob: -2.6708807945251465
    7. ' ' → logprob: -3.1708807945251465
    8. 'x' → logprob: -3.5458807945251465
    9. 's' → logprob: -3.6708807945251465
    10. '.' → logprob: -3.7958807945251465

Token 30: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.011822475120425224
    2. ' l' → logprob: -4.511822700500488
    3. '	l' → logprob: -7.386822700500488
    4. 'util' → logprob: -10.136822700500488
    5. ' ' → logprob: -10.511822700500488
    6. 'le' → logprob: -11.136822700500488
    7. ' ' → logprob: -11.511822700500488
    8. 'user' → logprob: -11.636822700500488
    9. 'la' → logprob: -11.886822700500488
    10. 'lot' → logprob: -12.386822700500488

Token 31: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.010984626598656178
    2. ''' → logprob: -5.010984420776367
    3. 'u' → logprob: -6.510984420776367
    4. ''util' → logprob: -6.760984420776367
    5. ''u' → logprob: -6.885984420776367
    6. '’utilisateur' → logprob: -8.760984420776367
    7. ''user' → logprob: -9.010984420776367
    8. ''us' → logprob: -9.385984420776367
    9. 'util' → logprob: -9.885984420776367
    10. ''#' → logprob: -10.260984420776367

Token 32: ' sous' (ID: 14487)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.13707569241523743
    2. '#' → logprob: -2.637075662612915
    3. 'x' → logprob: -4.262075901031494
    4. 'e' → logprob: -4.387075901031494
    5. 'ent' → logprob: -4.762075901031494
    6. '
' → logprob: -5.262075901031494
    7. 'i' → logprob: -5.762075901031494
    8. '\' → logprob: -6.012075901031494
    9. '' → logprob: -6.512075901031494
    10. 'nombre' → logprob: -6.637075901031494

Token 33: ' forme' (ID: 27450)
  Prédit: ' forme'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' forme' → logprob: -0.012506827712059021
    2. 'forme' → logprob: -4.76250696182251
    3. 'chaine' → logprob: -6.13750696182251
    4. ' la' → logprob: -7.51250696182251
    5. 'form' → logprob: -7.76250696182251
    6. ' form' → logprob: -8.137506484985352
    7. 'forma' → logprob: -8.887506484985352
    8. 'la' → logprob: -9.137506484985352
    9. ' ' → logprob: -10.012506484985352
    10. 'ent' → logprob: -10.387506484985352

Token 34: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.025231221690773964
    2. 'd' → logprob: -4.02523136138916
    3. ' de' → logprob: -5.15023136138916
    4. 'de' → logprob: -6.77523136138916
    5. 's' → logprob: -9.40023136138916
    6. ''d' → logprob: -12.65023136138916
    7. 'e' → logprob: -13.15023136138916
    8. 'chaine' → logprob: -13.15023136138916
    9. 'string' → logprob: -13.27523136138916
    10. '#' → logprob: -13.27523136138916

Token 35: ' chaîne' (ID: 89288)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.3414059579372406
    2. ' chaîne' → logprob: -1.841405987739563
    3. 'cha' → logprob: -2.0914058685302734
    4. ' chaine' → logprob: -5.716405868530273
    5. 'texte' → logprob: -6.091405868530273
    6. 'string' → logprob: -7.216405868530273
    7. 'str' → logprob: -7.966405868530273
    8. 's' → logprob: -8.591405868530273
    9. 'une' → logprob: -9.466405868530273
    10. 'chain' → logprob: -9.841405868530273

Token 36: ' de' (ID: 334)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.20274916291236877
    2. '#' → logprob: -2.577749252319336
    3. 'x' → logprob: -3.452749252319336
    4. 'e' → logprob: -3.452749252319336
    5. 'ent' → logprob: -4.202749252319336
    6. 'i' → logprob: -4.952749252319336
    7. 'v' → logprob: -5.702749252319336
    8. '\' → logprob: -5.827749252319336
    9. '_' → logprob: -6.202749252319336
    10. 'nombre' → logprob: -6.202749252319336

Token 37: ' caractères' (ID: 183106)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.02410595677793026
    2. ' caractères' → logprob: -3.774106025695801
    3. 'texte' → logprob: -7.149106025695801
    4. ' caracteres' → logprob: -10.3991060256958
    5. ' caract' → logprob: -10.7741060256958
    6. ' caractère' → logprob: -11.7741060256958
    7. '#' → logprob: -12.5241060256958
    8. 'char' → logprob: -12.7741060256958
    9. 'chars' → logprob: -13.5241060256958
    10. 'code' → logprob: -14.1491060256958

Token 38: '.
' (ID: 558)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1773751676082611
    2. 'e' → logprob: -2.427375078201294
    3. '#' → logprob: -3.052375078201294
    4. 'i' → logprob: -4.552375316619873
    5. 'x' → logprob: -4.927375316619873
    6. 'u' → logprob: -6.302375316619873
    7. 'v' → logprob: -6.552375316619873
    8. 'ent' → logprob: -6.552375316619873
    9. '\' → logprob: -7.427375316619873
    10. '' → logprob: -7.552375316619873

Token 39: '#' (ID: 2)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.015571125783026218
    2. '#' → logprob: -5.390571117401123
    3. 'x' → logprob: -5.390571117401123
    4. 'e' → logprob: -6.265571117401123
    5. 'i' → logprob: -6.265571117401123
    6. 'ent' → logprob: -7.390571117401123
    7. '\' → logprob: -7.765571117401123
    8. 'u' → logprob: -8.015571594238281
    9. 'nombre' → logprob: -8.140571594238281
    10. 'a' → logprob: -8.515571594238281

Token 40: ' int' (ID: 677)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.036789584904909134
    2. 'x' → logprob: -4.161789417266846
    3. 'ent' → logprob: -5.161789417266846
    4. '#' → logprob: -5.286789417266846
    5. 'e' → logprob: -5.786789417266846
    6. 'i' → logprob: -6.161789417266846
    7. 'u' → logprob: -6.536789417266846
    8. 'nombre' → logprob: -6.786789417266846
    9. 'a' → logprob: -7.411789417266846
    10. 'v' → logprob: -8.161789894104004

Token 41: '()' (ID: 416)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.76628842484206e-05
    2. '()' → logprob: -10.375067710876465
    3. '(
' → logprob: -10.625067710876465
    4. '('' → logprob: -12.875067710876465
    5. '(input' → logprob: -13.125067710876465
    6. '(

' → logprob: -13.625067710876465
    7. ' (' → logprob: -14.000067710876465
    8. '(...)' → logprob: -14.125067710876465
    9. ')' → logprob: -14.375067710876465
    10. '(convert' → logprob: -14.625067710876465

Token 42: ' convert' (ID: 8452)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00012439649435691535
    2. '(
' → logprob: -9.875123977661133
    3. ')' → logprob: -10.625123977661133
    4. '()' → logprob: -10.750123977661133
    5. '#' → logprob: -12.000123977661133
    6. ' (' → logprob: -12.250123977661133
    7. '(int' → logprob: -13.125123977661133
    8. 'def' → logprob: -13.125123977661133
    9. 's' → logprob: -13.375123977661133
    10. '('' → logprob: -13.500123977661133

Token 43: 'it' (ID: 278)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.3562036454677582
    2. '(' → logprob: -1.2312036752700806
    3. '()' → logprob: -6.106203556060791
    4. 'er' → logprob: -6.356203556060791
    5. 'i' → logprob: -6.606203556060791
    6. 'ise' → logprob: -6.981203556060791
    7. '(e' → logprob: -7.731203556060791
    8. 'é' → logprob: -8.35620403289795
    9. 'ert' → logprob: -8.85620403289795
    10. 'it' → logprob: -9.48120403289795

Token 44: ' cette' (ID: 7696)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.19877468049526215
    2. ' la' → logprob: -1.9487746953964233
    3. ' ' → logprob: -4.573774814605713
    4. 'l' → logprob: -4.698774814605713
    5. ' (' → logprob: -5.198774814605713
    6. ' l' → logprob: -5.698774814605713
    7. '()' → logprob: -5.698774814605713
    8. 'la' → logprob: -6.323774814605713
    9. 's' → logprob: -7.323774814605713
    10. ' une' → logprob: -7.948774814605713

Token 45: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.010201993398368359
    2. ' chaine' → logprob: -5.010201930999756
    3. ' espace' → logprob: -7.010201930999756
    4. 'chaine' → logprob: -7.135201930999756
    5. ' string' → logprob: -7.635201930999756
    6. ' ' → logprob: -7.635201930999756
    7. ' valeur' → logprob: -8.010202407836914
    8. 's' → logprob: -9.260202407836914
    9. ' space' → logprob: -9.385202407836914
    10. ' ligne' → logprob: -9.760202407836914

Token 46: ' en' (ID: 469)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0039018383249640465
    2. 's' → logprob: -6.628901958465576
    3. '()' → logprob: -7.253901958465576
    4. ')' → logprob: -7.503901958465576
    5. '(
' → logprob: -8.378901481628418
    6. ' (' → logprob: -8.378901481628418
    7. '#' → logprob: -8.503901481628418
    8. '('' → logprob: -9.628901481628418
    9. ',' → logprob: -9.878901481628418
    10. '```' → logprob: -9.878901481628418

Token 47: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.03929319605231285
    2. ' entier' → logprob: -3.7892932891845703
    3. ' ' → logprob: -4.41429328918457
    4. 'un' → logprob: -6.28929328918457
    5. 'ent' → logprob: -7.28929328918457
    6. ' int' → logprob: -8.03929328918457
    7. ' une' → logprob: -8.03929328918457
    8. ' nombre' → logprob: -8.78929328918457
    9. ' ent' → logprob: -9.53929328918457
    10. ' espace' → logprob: -9.66429328918457

Token 48: ' entier' (ID: 80473)
  Prédit: ' entier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' entier' → logprob: -0.11098084598779678
    2. ' nombre' → logprob: -2.610980749130249
    3. ' ' → logprob: -4.235980987548828
    4. 'ent' → logprob: -4.735980987548828
    5. ' espace' → logprob: -5.360980987548828
    6. ' ent' → logprob: -6.860980987548828
    7. 'nombre' → logprob: -7.360980987548828
    8. ' int' → logprob: -7.610980987548828
    9. 'e' → logprob: -7.610980987548828
    10. ' integer' → logprob: -8.235980987548828

Token 49: '.' (ID: 13)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.08868630975484848
    2. 'x' → logprob: -2.713686227798462
    3. '#' → logprob: -4.713686466217041
    4. 'e' → logprob: -5.838686466217041
    5. 'u' → logprob: -6.338686466217041
    6. 'nombre' → logprob: -6.588686466217041
    7. 'ent' → logprob: -6.838686466217041
    8. 'a' → logprob: -7.588686466217041
    9. 'i' → logprob: -7.588686466217041
    10. 'v' → logprob: -8.088685989379883

Token 50: ' La' (ID: 3038)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.10183437913656235
    2. 'x' → logprob: -2.476834297180176
    3. 'nombre' → logprob: -5.101834297180176
    4. 'ent' → logprob: -5.976834297180176
    5. '#' → logprob: -6.351834297180176
    6. 'a' → logprob: -7.101834297180176
    7. '```' → logprob: -7.976834297180176
    8. 'e' → logprob: -7.976834297180176
    9. 'u' → logprob: -8.101834297180176
    10. 'i' → logprob: -9.101834297180176

Token 51: ' valeur' (ID: 41664)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0518015623092651
    2. ' nombre' → logprob: -1.8018015623092651
    3. ' valeur' → logprob: -1.9268015623092651
    4. 'n' → logprob: -2.9268016815185547
    5. ' entier' → logprob: -3.0518016815185547
    6. 'nombre' → logprob: -3.3018016815185547
    7. 's' → logprob: -3.4268016815185547
    8. ' #' → logprob: -3.8018016815185547
    9. 'val' → logprob: -4.051801681518555
    10. ' n' → logprob: -4.176801681518555

Token 52: ' obten' (ID: 28150)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07871394604444504
    2. '_' → logprob: -2.828713893890381
    3. 's' → logprob: -4.953713893890381
    4. ' =' → logprob: -5.953713893890381
    5. ')' → logprob: -6.703713893890381
    6. '=' → logprob: -6.953713893890381
    7. 'n' → logprob: -7.078713893890381
    8. ' )' → logprob: -7.203713893890381
    9. 'r' → logprob: -7.578713893890381
    10. 'ent' → logprob: -8.453714370727539

Token 53: 'ue' (ID: 466)
  Prédit: 'ient'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ient' → logprob: -0.49641507863998413
    2. 'ue' → logprob: -0.9964150786399841
    3. 'e' → logprob: -4.371415138244629
    4. 'ent' → logprob: -5.121415138244629
    5. 'u' → logprob: -5.996415138244629
    6. 'enue' → logprob: -7.871415138244629
    7. 't' → logprob: -9.371415138244629
    8. 'en' → logprob: -9.371415138244629
    9. 'iennent' → logprob: -9.621415138244629
    10. 'ie' → logprob: -9.621415138244629

Token 54: ' sera' (ID: 15511)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.019671453163027763
    2. ' est' → logprob: -5.144671440124512
    3. 's' → logprob: -5.394671440124512
    4. ' a' → logprob: -6.144671440124512
    5. '_' → logprob: -6.644671440124512
    6. ' =' → logprob: -7.269671440124512
    7. ' ,' → logprob: -7.519671440124512
    8. ',' → logprob: -7.519671440124512
    9. ' n' → logprob: -7.644671440124512
    10. ' )' → logprob: -7.894671440124512

Token 55: ' stock' (ID: 6546)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07918708771467209
    2. ' stock' → logprob: -3.4541871547698975
    3. ' affect' → logprob: -4.579186916351318
    4. ' assign' → logprob: -5.079186916351318
    5. '=' → logprob: -5.454186916351318
    6. ',' → logprob: -5.829186916351318
    7. ')' → logprob: -5.829186916351318
    8. ' =' → logprob: -5.954186916351318
    9. ' utilisée' → logprob: -6.204186916351318
    10. ' assigned' → logprob: -6.454186916351318

Token 56: 'ée' (ID: 2894)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.16035176813602448
    2. 'ée' → logprob: -1.9103517532348633
    3. ' é' → logprob: -9.910351753234863
    4. 'e' → logprob: -10.160351753234863
    5. ' ' → logprob: -11.160351753234863
    6. 'ê' → logprob: -12.660351753234863
    7. '�' → logprob: -12.660351753234863
    8. 'ė' → logprob: -12.910351753234863
    9. 'u' → logprob: -13.035351753234863
    10. '_' → logprob: -13.285351753234863

Token 57: ' dans' (ID: 2671)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6432275772094727
    2. ' ' → logprob: -0.8932275772094727
    3. 's' → logprob: -3.7682275772094727
    4. 'n' → logprob: -4.268227577209473
    5. 'a' → logprob: -4.768227577209473
    6. 'u' → logprob: -5.393227577209473
    7. ',' → logprob: -6.518227577209473
    8. 'x' → logprob: -6.768227577209473
    9. ' _' → logprob: -6.768227577209473
    10. 'v' → logprob: -6.893227577209473

Token 58: ' la' (ID: 557)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.024381717666983604
    2. ' l' → logprob: -4.649381637573242
    3. ' la' → logprob: -5.524381637573242
    4. ' variable' → logprob: -6.024381637573242
    5. ' a' → logprob: -6.524381637573242
    6. ' n' → logprob: -6.774381637573242
    7. '  ' → logprob: -7.024381637573242
    8. 'l' → logprob: -7.149381637573242
    9. ' une' → logprob: -7.399381637573242
    10. 'n' → logprob: -8.024381637573242

Token 59: ' variable' (ID: 11076)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.596138060092926
    2. ' variable' → logprob: -0.971138060092926
    3. 'variable' → logprob: -3.4711380004882812
    4. ' nombre' → logprob: -3.7211380004882812
    5. 'nombre' → logprob: -5.221138000488281
    6. ' entier' → logprob: -5.846138000488281
    7. ' a' → logprob: -6.971138000488281
    8. 'n' → logprob: -6.971138000488281
    9. 'v' → logprob: -7.346138000488281
    10. 'a' → logprob: -7.596138000488281

Token 60: ' L' (ID: 451)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8350570201873779
    2. 'nombre' → logprob: -1.335057020187378
    3. 'x' → logprob: -2.335057020187378
    4. 'a' → logprob: -3.085057020187378
    5. ' ' → logprob: -3.335057020187378
    6. ' nombre' → logprob: -3.585057020187378
    7. ' n' → logprob: -3.710057020187378
    8. 'ent' → logprob: -4.460057258605957
    9. ' entier' → logprob: -4.835057258605957
    10. 'user' → logprob: -4.835057258605957

Token 61: '.
' (ID: 558)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -8.2994620242971e-06
    2. '#' → logprob: -13.125008583068848
    3. 'l' → logprob: -13.375008583068848
    4. ' L' → logprob: -13.375008583068848
    5. '```' → logprob: -13.625008583068848
    6. 'n' → logprob: -14.250008583068848
    7. ' 
' → logprob: -15.625008583068848
    8. ' ' → logprob: -15.875008583068848
    9. ',' → logprob: -16.25000762939453
    10. '_' → logprob: -16.50000762939453

Token 62: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -3.650518920039758e-06
    2. '```' → logprob: -13.000003814697266
    3. '#' → logprob: -14.375003814697266
    4. ' L' → logprob: -15.125003814697266
    5. 'l' → logprob: -15.625003814697266
    6. '`' → logprob: -16.500003814697266
    7. 'n' → logprob: -16.625003814697266
    8. ''''' → logprob: -17.250003814697266
    9. 'I' → logprob: -17.500003814697266
    10. 'x' → logprob: -17.500003814697266

Token 63: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.35038813948631287
    2. '=' → logprob: -1.2253881692886353
    3. 's' → logprob: -7.850388050079346
    4. ',' → logprob: -7.850388050079346
    5. ' ' → logprob: -7.975388050079346
    6. 'i' → logprob: -8.225388526916504
    7. '.' → logprob: -8.850388526916504
    8. '_' → logprob: -9.225388526916504
    9. ')' → logprob: -9.725388526916504
    10. 'e' → logprob: -10.350388526916504

Token 64: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.20145143568515778
    2. 'int' → logprob: -1.7014514207839966
    3. ' input' → logprob: -10.701451301574707
    4. 'input' → logprob: -11.326451301574707
    5. ' ' → logprob: -13.701451301574707
    6. ' ' → logprob: -13.951451301574707
    7. '=int' → logprob: -14.826451301574707
    8. '[int' → logprob: -14.826451301574707
    9. '<int' → logprob: -15.451451301574707
    10. '```' → logprob: -15.451451301574707

Token 65: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.3133661150932312
    2. '(' → logprob: -1.313366174697876
    3. '('' → logprob: -9.938365936279297
    4. 'input' → logprob: -10.438365936279297
    5. '()' → logprob: -11.438365936279297
    6. ' (' → logprob: -12.438365936279297
    7. '(user' → logprob: -12.938365936279297
    8. '(int' → logprob: -12.938365936279297
    9. '(in' → logprob: -13.438365936279297
    10. '((' → logprob: -14.313365936279297

Token 66: '())

' (ID: 27654)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.37953677773475647
    2. '()' → logprob: -1.629536747932434
    3. '('' → logprob: -2.7545368671417236
    4. '())' → logprob: -3.3795368671417236
    5. '("("' → logprob: -4.3795366287231445
    6. '("' → logprob: -5.0045366287231445
    7. '(""))' → logprob: -6.5045366287231445
    8. '("")' → logprob: -7.1295366287231445
    9. '(">' → logprob: -8.879536628723145
    10. ')' → logprob: -9.254536628723145

Token 67: '#' (ID: 2)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8078653216362
    2. '*' → logprob: -1.8078653812408447
    3. ')' → logprob: -2.0578653812408447
    4. ' ' → logprob: -2.1828653812408447
    5. '(' → logprob: -2.5578653812408447
    6. '[' → logprob: -3.6828653812408447
    7. '#' → logprob: -4.557865142822266
    8. '.' → logprob: -4.807865142822266
    9. ':' → logprob: -4.932865142822266
    10. ''' → logprob: -5.182865142822266

Token 68: ' Dé' (ID: 27247)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2024836540222168
    2. 'if' → logprob: -1.2024836540222168
    3. ' if' → logprob: -1.2024836540222168
    4. 'i' → logprob: -3.077483654022217
    5. '#' → logprob: -4.202483654022217
    6. ''' → logprob: -4.702483654022217
    7. '_' → logprob: -5.077483654022217
    8. ' for' → logprob: -5.952483654022217
    9. ' i' → logprob: -5.952483654022217
    10. 'for' → logprob: -6.077483654022217

Token 69: 'clare' (ID: 44660)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.6551032662391663
    2. 'fin' → logprob: -1.7801032066345215
    3. '#' → logprob: -2.0301032066345215
    4. 'fi' → logprob: -2.2801032066345215
    5. 'print' → logprob: -3.0301032066345215
    6. '#print' → logprob: -4.6551032066345215
    7. 'p' → logprob: -6.1551032066345215
    8. 'termin' → logprob: -6.1551032066345215
    9. 'term' → logprob: -6.2801032066345215
    10. 'pri' → logprob: -6.4051032066345215

Token 70: ' une' (ID: 2463)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.056428734213113785
    2. ' ' → logprob: -3.8064286708831787
    3. '('' → logprob: -4.056428909301758
    4. ' (' → logprob: -4.931428909301758
    5. '("' → logprob: -6.056428909301758
    6. 'a' → logprob: -6.681428909301758
    7. ')' → logprob: -6.931428909301758
    8. '_' → logprob: -7.181428909301758
    9. 'u' → logprob: -7.931428909301758
    10. 'e' → logprob: -8.056428909301758

Token 71: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.4846808910369873
    2. ' variable' → logprob: -2.1096808910369873
    3. 'liste' → logprob: -2.1096808910369873
    4. 'variable' → logprob: -3.1096808910369873
    5. 'space' → logprob: -4.984681129455566
    6. '_' → logprob: -4.984681129455566
    7. 'fonction' → logprob: -4.984681129455566
    8. 's' → logprob: -5.109681129455566
    9. ' condition' → logprob: -5.109681129455566
    10. ' valeur' → logprob: -5.359681129455566

Token 72: ' vide' (ID: 21835)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4261425733566284
    2. '[' → logprob: -1.5511425733566284
    3. 's' → logprob: -3.051142692565918
    4. 'l' → logprob: -4.176142692565918
    5. ' []' → logprob: -4.551142692565918
    6. ' =' → logprob: -4.801142692565918
    7. '[]' → logprob: -4.801142692565918
    8. ' L' → logprob: -5.176142692565918
    9. 'space' → logprob: -5.301142692565918
    10. '_' → logprob: -5.301142692565918

Token 73: ' qui' (ID: 2780)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.26338130235671997
    2. ' L' → logprob: -2.263381242752075
    3. ' ' → logprob: -2.888381242752075
    4. 'l' → logprob: -3.763381242752075
    5. 's' → logprob: -3.763381242752075
    6. '[' → logprob: -5.263381481170654
    7. 'liste' → logprob: -5.388381481170654
    8. 'lst' → logprob: -6.138381481170654
    9. ',' → logprob: -6.263381481170654
    10. '```' → logprob: -6.513381481170654

Token 74: ' cont' (ID: 836)
  Prédit: ' cont'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cont' → logprob: -0.5828588008880615
    2. 'cont' → logprob: -1.5828588008880615
    3. ' accueill' → logprob: -2.7078588008880615
    4. '_cont' → logprob: -3.3328588008880615
    5. ' va' → logprob: -3.4578588008880615
    6. 's' → logprob: -3.7078588008880615
    7. ' stock' → logprob: -4.082859039306641
    8. 'stock' → logprob: -5.082859039306641
    9. ' contient' → logprob: -5.082859039306641
    10. 'conten' → logprob: -5.082859039306641

Token 75: 'i' (ID: 72)
  Prédit: 'ient'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ient' → logprob: -0.29844823479652405
    2. 'i' → logprob: -1.5484482049942017
    3. 'iend' → logprob: -3.298448324203491
    4. 'endra' → logprob: -5.298448085784912
    5. 'ent' → logprob: -6.673448085784912
    6. 'ien' → logprob: -7.548448085784912
    7. 'iennent' → logprob: -8.17344856262207
    8. 'endrá' → logprob: -8.54844856262207
    9. 'iera' → logprob: -8.67344856262207
    10. 'e' → logprob: -9.04844856262207

Token 76: 'endra' (ID: 32364)
  Prédit: 'nt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nt' → logprob: -0.7768301367759705
    2. 'nent' → logprob: -1.7768301963806152
    3. 'n' → logprob: -2.2768301963806152
    4. 'nera' → logprob: -2.5268301963806152
    5. 'endra' → logprob: -2.9018301963806152
    6. 'ent' → logprob: -2.9018301963806152
    7. 'nd' → logprob: -3.1518301963806152
    8. 't' → logprob: -4.151830196380615
    9. 'nte' → logprob: -4.651830196380615
    10. 'nts' → logprob: -6.901830196380615

Token 77: ' des' (ID: 731)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.12946510314941406
    2. '_' → logprob: -2.879465103149414
    3. ' []' → logprob: -3.379465103149414
    4. '[]' → logprob: -4.879465103149414
    5. ' des' → logprob: -5.504465103149414
    6. ' les' → logprob: -5.754465103149414
    7. '[' → logprob: -6.004465103149414
    8. 's' → logprob: -6.129465103149414
    9. ' la' → logprob: -6.504465103149414
    10. ' ‌' → logprob: -6.629465103149414

Token 78: ' tuples' (ID: 112464)
  Prédit: ' nombres'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nombres' → logprob: -0.07024462521076202
    2. ' valeurs' → logprob: -3.320244550704956
    3. ' éléments' → logprob: -4.695244789123535
    4. '_' → logprob: -5.320244789123535
    5. ' ent' → logprob: -5.570244789123535
    6. ' ' → logprob: -6.320244789123535
    7. ' nombre' → logprob: -6.320244789123535
    8. 'élé' → logprob: -6.445244789123535
    9. ' notes' → logprob: -6.820244789123535
    10. 's' → logprob: -6.945244789123535

Token 79: ' représentant' (ID: 136122)
  Prédit: ' tuples'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' tuples' → logprob: -1.378326654434204
    2. 'result' → logprob: -1.628326654434204
    3. 'pairs' → logprob: -2.128326654434204
    4. 's' → logprob: -2.253326654434204
    5. '(' → logprob: -3.128326654434204
    6. 'elements' → logprob: -3.128326654434204
    7. 'results' → logprob: -4.003326416015625
    8. 'points' → logprob: -4.128326416015625
    9. 'trip' → logprob: -4.253326416015625
    10. '()' → logprob: -4.253326416015625

Token 80: ' les' (ID: 1341)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.11835240572690964
    2. ' les' → logprob: -2.4933524131774902
    3. ' (' → logprob: -4.49335241317749
    4. 'des' → logprob: -4.86835241317749
    5. ' la' → logprob: -5.36835241317749
    6. ' le' → logprob: -6.11835241317749
    7. '(' → logprob: -6.49335241317749
    8. ' l' → logprob: -7.24335241317749
    9. 'les' → logprob: -7.99335241317749
    10. 's' → logprob: -8.493351936340332

Token 81: ' ar' (ID: 646)
  Prédit: ' points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' points' → logprob: -1.305379867553711
    2. ' coordonnées' → logprob: -2.055379867553711
    3. ' éléments' → logprob: -2.555379867553711
    4. ' interv' → logprob: -3.180379867553711
    5. ' facteurs' → logprob: -3.492879867553711
    6. ' ' → logprob: -3.555379867553711
    7. '(' → logprob: -3.617879867553711
    8. ' couples' → logprob: -3.680379867553711
    9. ' valeurs' → logprob: -3.930379867553711
    10. ' (' → logprob: -4.055379867553711

Token 82: 'êtes' (ID: 23720)
  Prédit: 'êtes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êtes' → logprob: -0.037666723132133484
    2. 'cs' → logprob: -3.7876667976379395
    3. 'êts' → logprob: -5.0376667976379395
    4. 'ê' → logprob: -6.6626667976379395
    5. 'c' → logprob: -6.7876667976379395
    6. 'ètes' → logprob: -6.7876667976379395
    7. 'ch' → logprob: -6.9126667976379395
    8. 'êt' → logprob: -7.4126667976379395
    9. 'etes' → logprob: -7.9126667976379395
    10. 'r' → logprob: -8.162666320800781

Token 83: ' d' (ID: 272)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -1.2521611452102661
    2. ' ' → logprob: -1.3771611452102661
    3. '_edges' → logprob: -1.3771611452102661
    4. ' edges' → logprob: -2.3771610260009766
    5. ' des' → logprob: -3.6271610260009766
    6. '_' → logprob: -3.6271610260009766
    7. 's' → logprob: -4.127161026000977
    8. 'a' → logprob: -4.877161026000977
    9. 'ar' → logprob: -5.127161026000977
    10. 'e' → logprob: -5.377161026000977

Token 84: ''un' (ID: 9788)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.7495778799057007
    2. ''un' → logprob: -1.3745778799057007
    3. ''' → logprob: -3.1245779991149902
    4. 's' → logprob: -3.2495779991149902
    5. 'u' → logprob: -3.2495779991149902
    6. ' ' → logprob: -3.3745779991149902
    7. ' un' → logprob: -3.4995779991149902
    8. ' graph' → logprob: -3.8745779991149902
    9. 'a' → logprob: -3.8745779991149902
    10. ' l' → logprob: -4.87457799911499

Token 85: ' grap' (ID: 60955)
  Prédit: ' grap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grap' → logprob: -0.5446722507476807
    2. ' graph' → logprob: -1.4196722507476807
    3. ' ' → logprob: -1.9196722507476807
    4. 'graph' → logprob: -4.294672012329102
    5. ' espace' → logprob: -4.544672012329102
    6. ' graphique' → logprob: -6.169672012329102
    7. ''espace' → logprob: -7.169672012329102
    8. '  ' → logprob: -7.544672012329102
    9. ' ,' → logprob: -7.794672012329102
    10. '_' → logprob: -7.794672012329102

Token 86: 'he' (ID: 273)
  Prédit: 'aphe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aphe' → logprob: -0.00704190181568265
    2. 'he' → logprob: -5.757041931152344
    3. 'phe' → logprob: -5.757041931152344
    4. 'e' → logprob: -7.757041931152344
    5. 'h' → logprob: -9.257041931152344
    6. 'ph' → logprob: -10.007041931152344
    7. 'ophe' → logprob: -10.507041931152344
    8. 'aph' → logprob: -11.007041931152344
    9. 'raph' → logprob: -11.257041931152344
    10. '#' → logprob: -11.632041931152344

Token 87: '.
' (ID: 558)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.2161656767129898
    2. ' edges' → logprob: -2.466165781021118
    3. '_edges' → logprob: -3.341165781021118
    4. 'ar' → logprob: -3.716165781021118
    5. 'graph' → logprob: -3.966165781021118
    6. 'E' → logprob: -5.466165542602539
    7. ' graph' → logprob: -5.466165542602539
    8. 'a' → logprob: -5.591165542602539
    9. '(edges' → logprob: -5.841165542602539
    10. 's' → logprob: -6.216165542602539

Token 88: '#' (ID: 2)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.13111576437950134
    2. ' edges' → logprob: -2.756115674972534
    3. 'E' → logprob: -3.881115674972534
    4. 'ar' → logprob: -4.006115913391113
    5. 'graph' → logprob: -5.006115913391113
    6. 'A' → logprob: -5.631115913391113
    7. 'a' → logprob: -6.381115913391113
    8. 'G' → logprob: -6.381115913391113
    9. '```' → logprob: -6.381115913391113
    10. 'are' → logprob: -6.631115913391113

Token 89: ' Chaque' (ID: 94758)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.20237970352172852
    2. ' edges' → logprob: -2.0773797035217285
    3. 'E' → logprob: -3.7023797035217285
    4. 'ar' → logprob: -4.0773797035217285
    5. 'graph' → logprob: -5.0773797035217285
    6. 'A' → logprob: -5.8273797035217285
    7. 'are' → logprob: -6.5773797035217285
    8. ' graph' → logprob: -7.0773797035217285
    9. 'G' → logprob: -7.3273797035217285
    10. 'edge' → logprob: -7.5773797035217285

Token 90: ' élément' (ID: 99627)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.31876131892204285
    2. ' ar' → logprob: -1.8187613487243652
    3. '_' → logprob: -2.9437613487243652
    4. ' tuple' → logprob: -4.568761348724365
    5. ' (' → logprob: -4.693761348724365
    6. 's' → logprob: -5.068761348724365
    7. ' are' → logprob: -5.193761348724365
    8. 'ar' → logprob: -5.318761348724365
    9. 'a' → logprob: -5.693761348724365
    10. ' edge' → logprob: -5.943761348724365

Token 91: ' ajouté' (ID: 127784)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3477907180786133
    2. ' de' → logprob: -1.3477907180786133
    3. 's' → logprob: -4.472790718078613
    4. ' est' → logprob: -5.347790718078613
    5. 'de' → logprob: -5.847790718078613
    6. ' of' → logprob: -5.972790718078613
    7. ' représente' → logprob: -5.972790718078613
    8. ' (' → logprob: -6.097790718078613
    9. ' des' → logprob: -7.097790718078613
    10. ' is' → logprob: -7.222790718078613

Token 92: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.5329723954200745
    2. ' ' → logprob: -1.7829723358154297
    3. ' au' → logprob: -2.7829723358154297
    4. ' de' → logprob: -2.9079723358154297
    5. ' (' → logprob: -3.6579723358154297
    6. '<|end|>' → logprob: -3.6579723358154297
    7. ' =' → logprob: -4.65797233581543
    8. ' est' → logprob: -4.78297233581543
    9. 's' → logprob: -4.90797233581543
    10. ' sera' → logprob: -5.15797233581543

Token 93: ' '' (ID: 461)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.0077341580763459206
    2. ' cette' → logprob: -5.757734298706055
    3. 'la' → logprob: -6.257734298706055
    4. '_edges' → logprob: -8.007734298706055
    5. ' liste' → logprob: -8.007734298706055
    6. ' graph' → logprob: -8.007734298706055
    7. ' edges' → logprob: -8.132734298706055
    8. ' L' → logprob: -8.382734298706055
    9. ' ' → logprob: -8.632734298706055
    10. 'edges' → logprob: -8.882734298706055

Token 94: 'edges' (ID: 39127)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.575901985168457
    2. 'edges' → logprob: -1.700901985168457
    3. ' edges' → logprob: -2.700901985168457
    4. ' L' → logprob: -2.950901985168457
    5. 'graph' → logprob: -3.700901985168457
    6. 'liste' → logprob: -3.950901985168457
    7. 'ar' → logprob: -4.325901985168457
    8. ' liste' → logprob: -4.700901985168457
    9. 'list' → logprob: -4.950901985168457
    10. 'are' → logprob: -4.950901985168457

Token 95: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.148180291056633
    2. '_'' → logprob: -2.5231802463531494
    3. 's' → logprob: -3.6481802463531494
    4. ')'' → logprob: -4.3981804847717285
    5. ' '' → logprob: -4.6481804847717285
    6. '_' → logprob: -5.7731804847717285
    7. '_edges' → logprob: -6.0231804847717285
    8. '_list' → logprob: -6.6481804847717285
    9. ')' → logprob: -7.0231804847717285
    10. ' ='' → logprob: -8.14818000793457

Token 96: ' sera' (ID: 15511)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0743122547864914
    2. 's' → logprob: -3.699312210083008
    3. ' a' → logprob: -4.699312210083008
    4. ' )' → logprob: -4.699312210083008
    5. ' =' → logprob: -5.449312210083008
    6. ' edges' → logprob: -5.449312210083008
    7. ' ,' → logprob: -5.824312210083008
    8. ' est' → logprob: -6.074312210083008
    9. ' sera' → logprob: -6.199312210083008
    10. ')' → logprob: -6.324312210083008

Token 97: ' une' (ID: 2463)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.0053161741234362125
    2. ' une' → logprob: -5.880316257476807
    3. ' a' → logprob: -6.630316257476807
    4. 'un' → logprob: -7.130316257476807
    5. 'une' → logprob: -9.505315780639648
    6. '<|end|>' → logprob: -9.505315780639648
    7. 's' → logprob: -9.880315780639648
    8. ''un' → logprob: -10.380315780639648
    9. 'a' → logprob: -10.505315780639648
    10. ' de' → logprob: -10.505315780639648

Token 98: ' ar' (ID: 646)
  Prédit: ' tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tuple' → logprob: -0.11797850579023361
    2. ' paire' → logprob: -3.242978572845459
    3. ' (' → logprob: -3.492978572845459
    4. '(' → logprob: -3.992978572845459
    5. 'tuple' → logprob: -4.492978572845459
    6. '(tuple' → logprob: -4.867978572845459
    7. ' ar' → logprob: -7.117978572845459
    8. ' liste' → logprob: -7.117978572845459
    9. 'ar' → logprob: -8.1179780960083
    10. ' tuples' → logprob: -8.2429780960083

Token 99: 'ête' (ID: 16808)
  Prédit: 'ête'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ête' → logprob: -0.021356383338570595
    2. 'êt' → logprob: -5.021356582641602
    3. 'ê' → logprob: -5.146356582641602
    4. 'c' → logprob: -6.271356582641602
    5. 'e' → logprob: -7.021356582641602
    6. 'ète' → logprob: -7.146356582641602
    7. 'êtes' → logprob: -7.521356582641602
    8. 'âte' → logprob: -7.521356582641602
    9. 'être' → logprob: -7.646356582641602
    10. 'ç' → logprob: -7.896356582641602

Token 100: ' décr' (ID: 123041)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.593199610710144
    2. ' edges' → logprob: -1.468199610710144
    3. ' =' → logprob: -2.0931997299194336
    4. '_edges' → logprob: -3.2181997299194336
    5. '[]' → logprob: -3.9681997299194336
    6. '(edges' → logprob: -4.218199729919434
    7. 's' → logprob: -4.968199729919434
    8. '=[]' → logprob: -5.468199729919434
    9. ' (' → logprob: -5.968199729919434
    10. '=' → logprob: -6.468199729919434

Token 101: 'ite' (ID: 651)
  Prédit: 'ite'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ite' → logprob: -0.025487622246146202
    2. 'ivant' → logprob: -4.150487422943115
    3. 'ites' → logprob: -5.650487422943115
    4. 'iv' → logprob: -5.650487422943115
    5. 'ivée' → logprob: -7.025487422943115
    6. 'it' → logprob: -7.900487422943115
    7. 'ip' → logprob: -8.025487899780273
    8. 'ipt' → logprob: -8.900487899780273
    9. 'ivent' → logprob: -9.275487899780273
    10. 'ive' → logprob: -9.525487899780273

Token 102: ' par' (ID: 686)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 103: ' trois' (ID: 25564)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.5454525947570801
    2. ' (' → logprob: -1.79545259475708
    3. '(un' → logprob: -2.42045259475708
    4. ' une' → logprob: -3.17045259475708
    5. 'un' → logprob: -3.42045259475708
    6. 'une' → logprob: -3.54545259475708
    7. '(' → logprob: -3.79545259475708
    8. '(u' → logprob: -4.67045259475708
    9. '(de' → logprob: -4.67045259475708
    10. ''un' → logprob: -5.92045259475708

Token 104: ' ent' (ID: 1121)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 105: 'iers' (ID: 11012)
  Prédit: 'ières'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ières' → logprob: -0.5445243120193481
    2. 'ités' → logprob: -1.1695243120193481
    3. 'iers' → logprob: -3.0445241928100586
    4. 't' → logprob: -3.7945241928100586
    5. 'er' → logprob: -4.544524192810059
    6. 'êtes' → logprob: -5.044524192810059
    7. 'ères' → logprob: -5.419524192810059
    8. 'uples' → logprob: -6.044524192810059
    9. 'ité' → logprob: -6.169524192810059
    10. 'ities' → logprob: -6.294524192810059

Token 106: ' (' (ID: 350)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.48223677277565
    2. ' edges' → logprob: -0.9822367429733276
    3. '(edges' → logprob: -5.232236862182617
    4. ' (' → logprob: -6.982236862182617
    5. '_edges' → logprob: -7.607236862182617
    6. ' ,' → logprob: -7.732236862182617
    7. ',' → logprob: -7.857236862182617
    8. 's' → logprob: -9.357236862182617
    9. ' :' → logprob: -9.482236862182617
    10. ' )' → logprob: -9.607236862182617

Token 107: 'dé' (ID: 98340)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.33067798614501953
    2. ' node' → logprob: -1.9556779861450195
    3. ' ,' → logprob: -2.8306779861450195
    4. 'u' → logprob: -3.8306779861450195
    5. ' )' → logprob: -4.0806779861450195
    6. ' n' → logprob: -4.4556779861450195
    7. ' sommet' → logprob: -4.9556779861450195
    8. ',' → logprob: -5.0806779861450195
    9. ' source' → logprob: -5.4556779861450195
    10. ' (' → logprob: -5.8306779861450195

Token 108: 'part' (ID: 5815)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.032549627125263214
    2. ' ,' → logprob: -4.157549858093262
    3. ' edges' → logprob: -5.657549858093262
    4. 's' → logprob: -6.032549858093262
    5. 'f' → logprob: -6.407549858093262
    6. ')' → logprob: -6.782549858093262
    7. 'x' → logprob: -7.407549858093262
    8. 'c' → logprob: -7.407549858093262
    9. 'scription' → logprob: -7.532549858093262
    10. 'jà' → logprob: -7.782549858093262

Token 109: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002855755155906081
    2. ' ,' → logprob: -5.8778557777404785
    3. '<|end|>' → logprob: -10.87785530090332
    4. ',node' → logprob: -11.62785530090332
    5. ')' → logprob: -12.12785530090332
    6. ',n' → logprob: -12.62785530090332
    7. 'from' → logprob: -13.12785530090332
    8. 's' → logprob: -13.50285530090332
    9. ',)' → logprob: -13.75285530090332
    10. ',u' → logprob: -13.87785530090332

Token 110: ' arrivée' (ID: 117487)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7540739178657532
    2. ' ,' → logprob: -1.1290738582611084
    3. ' arrivée' → logprob: -2.3790738582611084
    4. ' arrivé' → logprob: -3.8790738582611084
    5. ' ' → logprob: -4.0040740966796875
    6. 'destination' → logprob: -4.1290740966796875
    7. ' destination' → logprob: -4.2540740966796875
    8. 'arr' → logprob: -4.3790740966796875
    9. ' arrival' → logprob: -5.1290740966796875
    10. 'arrival' → logprob: -5.1290740966796875

Token 111: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.015305552864447e-05
    2. ' ,' → logprob: -10.375060081481934
    3. ',)' → logprob: -11.000060081481934
    4. ')' → logprob: -11.500060081481934
    5. ',
' → logprob: -14.875060081481934
    6. ',n' → logprob: -15.375060081481934
    7. '<|end|>' → logprob: -15.500060081481934
    8. ',#' → logprob: -15.750060081481934
    9. '#' → logprob: -15.875060081481934
    10. ',num' → logprob: -16.12506103515625

Token 112: ' poids' (ID: 56058)
  Prédit: ' poids'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' poids' → logprob: -0.06205877289175987
    2. 'po' → logprob: -2.937058687210083
    3. ' po' → logprob: -5.312058925628662
    4. ' ' → logprob: -7.562058925628662
    5. ')' → logprob: -8.312058448791504
    6. ' ,' → logprob: -8.437058448791504
    7. ' weight' → logprob: -8.562058448791504
    8. ' Po' → logprob: -8.687058448791504
    9. ' coût' → logprob: -8.937058448791504
    10. ' )' → logprob: -8.937058448791504

Token 113: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010604646377032623
    2. 'edges' → logprob: -10.250105857849121
    3. ' )' → logprob: -10.375105857849121
    4. ').' → logprob: -10.875105857849121
    5. ')
' → logprob: -11.500105857849121
    6. '_edges' → logprob: -13.375105857849121
    7. 's' → logprob: -13.500105857849121
    8. '),' → logprob: -13.750105857849121
    9. 'e' → logprob: -14.000105857849121
    10. ' edges' → logprob: -14.250105857849121

Token 114: 'edges' (ID: 39127)
  Prédit: 'edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.023326190188527107
    2. '
' → logprob: -3.7733261585235596
    3. ' edges' → logprob: -10.14832592010498
    4. '
' → logprob: -10.39832592010498
    5. '(edges' → logprob: -13.02332592010498
    6. ' 
' → logprob: -13.14832592010498
    7. '.edges' → logprob: -13.39832592010498
    8. 'ed' → logprob: -13.52332592010498
    9. '_edges' → logprob: -13.64832592010498
    10. '```' → logprob: -14.27332592010498

Token 115: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0024874303489923477
    2. '=' → logprob: -6.002487659454346
    3. '=[]' → logprob: -11.877487182617188
    4. ' ' → logprob: -13.252487182617188
    5. 's' → logprob: -13.377487182617188
    6. '.' → logprob: -15.127487182617188
    7. ' =
' → logprob: -15.627487182617188
    8. ' ' → logprob: -15.627487182617188
    9. '.append' → logprob: -15.627487182617188
    10. '[:]' → logprob: -16.002487182617188

Token 116: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.3132636249065399
    2. ' []' → logprob: -1.3132636547088623
    3. '[]}' → logprob: -13.438263893127441
    4. '[' → logprob: -15.188263893127441
    5. '[]>' → logprob: -16.688262939453125
    6. '[])' → logprob: -17.313262939453125
    7. '=[]' → logprob: -17.563262939453125
    8. '[]"' → logprob: -17.813262939453125
    9. '[]

' → logprob: -18.063262939453125
    10. '[]=' → logprob: -18.188262939453125

Token 117: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10303281992673874
    2. 'n' → logprob: -2.8530328273773193
    3. 'i' → logprob: -3.9780328273773193
    4. ' for' → logprob: -4.47803258895874
    5. '
' → logprob: -5.47803258895874
    6. ' ' → logprob: -6.22803258895874
    7. ' 
' → logprob: -6.60303258895874
    8. '#' → logprob: -7.72803258895874
    9. 'f' → logprob: -7.72803258895874
    10. 'while' → logprob: -7.72803258895874

Token 118: ' Initialise' (ID: 179601)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.697315514087677
    2. 'for' → logprob: -0.697315514087677
    3. ' for' → logprob: -5.697315692901611
    4. 'while' → logprob: -8.197315216064453
    5. 'nb' → logprob: -9.322315216064453
    6. 'num' → logprob: -9.322315216064453
    7. ' n' → logprob: -9.322315216064453
    8. 'i' → logprob: -9.572315216064453
    9. 'nombre' → logprob: -9.697315216064453
    10. 'N' → logprob: -10.072315216064453

Token 119: ' deux' (ID: 10301)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.7124196887016296
    2. ' i' → logprob: -1.7124197483062744
    3. ' for' → logprob: -2.2124197483062744
    4. 'n' → logprob: -2.5874197483062744
    5. ' ' → logprob: -2.8374197483062744
    6. 'for' → logprob: -4.087419509887695
    7. ' un' → logprob: -4.337419509887695
    8. ' a' → logprob: -4.462419509887695
    9. 'i' → logprob: -4.587419509887695
    10. ' une' → logprob: -4.837419509887695

Token 120: ' variables' (ID: 13955)
  Prédit: ' variables'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' variables' → logprob: -0.2532392144203186
    2. ' ent' → logprob: -2.503239154815674
    3. ' ' → logprob: -2.628239154815674
    4. 'variables' → logprob: -4.128239154815674
    5. ' integers' → logprob: -4.253239154815674
    6. 'ent' → logprob: -4.378239154815674
    7. ' espaces' → logprob: -4.503239154815674
    8. ' ' → logprob: -6.378239154815674
    9. ' i' → logprob: -6.628239154815674
    10. ' entier' → logprob: -6.753239154815674

Token 121: ',' (ID: 11)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.8476875424385071
    2. 'u' → logprob: -1.4726874828338623
    3. ' i' → logprob: -1.4726874828338623
    4. ' node' → logprob: -3.8476874828338623
    5. 'n' → logprob: -4.347687721252441
    6. ' n' → logprob: -4.472687721252441
    7. 'i' → logprob: -4.472687721252441
    8. ' num' → logprob: -4.472687721252441
    9. ' max' → logprob: -4.722687721252441
    10. ' source' → logprob: -5.097687721252441

Token 122: ' p' (ID: 275)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -1.3801188468933105
    2. ' u' → logprob: -1.7551188468933105
    3. ' start' → logprob: -1.8801188468933105
    4. ' source' → logprob: -2.2551188468933105
    5. ' n' → logprob: -2.8801188468933105
    6. 'n' → logprob: -3.0051188468933105
    7. ' V' → logprob: -3.1301188468933105
    8. ' i' → logprob: -3.6301188468933105
    9. ' node' → logprob: -3.6301188468933105
    10. 'start' → logprob: -3.6301188468933105

Token 123: '2' (ID: 17)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.5798130035400391
    2. 'oints' → logprob: -2.579813003540039
    3. '1' → logprob: -2.829813003540039
    4. ' =' → logprob: -3.079813003540039
    5. 'art' → logprob: -3.329813003540039
    6. 'ar' → logprob: -3.454813003540039
    7. 'oint' → logprob: -3.954813003540039
    8. 'ivot' → logprob: -4.204813003540039
    9. 'riv' → logprob: -4.329813003540039
    10. 'osition' → logprob: -4.454813003540039

Token 124: ' et' (ID: 859)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.45071253180503845
    2. ',' → logprob: -2.0757124423980713
    3. 'oint' → logprob: -2.4507124423980713
    4. 'oints' → logprob: -3.5757124423980713
    5. 'os' → logprob: -3.8257124423980713
    6. '1' → logprob: -4.07571268081665
    7. 'osition' → logprob: -4.57571268081665
    8. ' ' → logprob: -4.82571268081665
    9. 'ivot' → logprob: -5.07571268081665
    10. ' ,' → logprob: -5.32571268081665

Token 125: ' N' (ID: 478)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.40770742297172546
    2. 'p' → logprob: -1.1577074527740479
    3. 'n' → logprob: -5.282707214355469
    4. ' n' → logprob: -5.407707214355469
    5. 'd' → logprob: -7.345207214355469
    6. ' ' → logprob: -7.345207214355469
    7. 'distance' → logprob: -7.532707214355469
    8. 'w' → logprob: -7.907707214355469
    9. ' d' → logprob: -7.907707214355469
    10. ' weight' → logprob: -7.970207214355469

Token 126: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03467240929603577
    2. '=' → logprob: -3.409672498703003
    3. ' ' → logprob: -7.534672260284424
    4. ',' → logprob: -8.034672737121582
    5. ' ,' → logprob: -9.159672737121582
    6. 'p' → logprob: -11.034672737121582
    7. ' p' → logprob: -11.159672737121582
    8. ' ' → logprob: -11.409672737121582
    9. '  ' → logprob: -12.284672737121582
    10. ' =
' → logprob: -12.784672737121582

Token 127: ' à' (ID: 1221)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.058941200375556946
    2. '0' → logprob: -3.308941125869751
    3. ' =' → logprob: -4.30894136428833
    4. '=' → logprob: -5.93394136428833
    5. '1' → logprob: -6.93394136428833
    6. ' p' → logprob: -7.18394136428833
    7. ' None' → logprob: -7.18394136428833
    8. 'p' → logprob: -7.43394136428833
    9. '2' → logprob: -8.183940887451172
    10. '10' → logprob: -8.433940887451172

Token 128: ' la' (ID: 557)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5519388318061829
    2. '0' → logprob: -0.9269388318061829
    3. ' int' → logprob: -4.676939010620117
    4. 'int' → logprob: -5.176939010620117
    5. ' None' → logprob: -5.301939010620117
    6. '1' → logprob: -5.676939010620117
    7. '10' → logprob: -6.301939010620117
    8. 'None' → logprob: -7.051939010620117
    9. '2' → logprob: -7.676939010620117
    10. '100' → logprob: -7.801939010620117

Token 129: ' valeur' (ID: 41664)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06498176604509354
    2. ' ' → logprob: -3.439981698989868
    3. ' None' → logprob: -4.064981937408447
    4. 'int' → logprob: -5.064981937408447
    5. 'None' → logprob: -5.689981937408447
    6. ' int' → logprob: -6.439981937408447
    7. ' même' → logprob: -8.064981460571289
    8. ' valeur' → logprob: -8.314981460571289
    9. '100' → logprob: -8.439981460571289
    10. '10' → logprob: -8.439981460571289

Token 130: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3929147720336914
    2. ' ' → logprob: -1.1429147720336914
    3. ' =' → logprob: -6.267914772033691
    4. '=' → logprob: -7.017914772033691
    5. 'int' → logprob: -7.392914772033691
    6. '1' → logprob: -7.517914772033691
    7. ' int' → logprob: -7.767914772033691
    8. '10' → logprob: -8.142914772033691
    9. 'L' → logprob: -8.267914772033691
    10. '100' → logprob: -8.517914772033691

Token 131: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.030619461089372635
    2. ' ' → logprob: -3.5306193828582764
    3. '1' → logprob: -7.9056196212768555
    4. '=' → logprob: -9.405619621276855
    5. ' =' → logprob: -9.655619621276855
    6. 'int' → logprob: -9.780619621276855
    7. '10' → logprob: -9.780619621276855
    8. '100' → logprob: -10.155619621276855
    9. '2' → logprob: -10.280619621276855
    10. '5' → logprob: -10.780619621276855

Token 132: '.
' (ID: 558)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.1662096381187439
    2. '
' → logprob: -2.0412096977233887
    3. '<|end|>' → logprob: -4.541209697723389
    4. ' p' → logprob: -4.666209697723389
    5. ',' → logprob: -6.291209697723389
    6. ' 
' → logprob: -7.916209697723389
    7. ' ' → logprob: -8.29120922088623
    8. '

' → logprob: -8.66620922088623
    9. '  
' → logprob: -9.29120922088623
    10. ' ,' → logprob: -9.29120922088623

Token 133: '#' (ID: 2)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.043870650231838226
    2. ' p' → logprob: -3.793870687484741
    3. '
' → logprob: -4.043870449066162
    4. ' 
' → logprob: -6.418870449066162
    5. ',' → logprob: -7.043870449066162
    6. ' ,' → logprob: -9.16887092590332
    7. '  
' → logprob: -10.04387092590332
    8. ',p' → logprob: -10.04387092590332
    9. '

' → logprob: -10.16887092590332
    10. ' =' → logprob: -10.16887092590332

Token 134: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.006893447134643793
    2. ' p' → logprob: -5.506893634796143
    3. '
' → logprob: -5.881893634796143
    4. ' 
' → logprob: -11.631893157958984
    5. 'N' → logprob: -12.256893157958984
    6. '

' → logprob: -12.881893157958984
    7. '```' → logprob: -13.756893157958984
    8. '
' → logprob: -14.006893157958984
    9. ',' → logprob: -14.131893157958984
    10. '  
' → logprob: -14.506893157958984

Token 135: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.847109812544659e-05
    2. ' =' → logprob: -10.875048637390137
    3. '=' → logprob: -11.375048637390137
    4. ' ' → logprob: -11.750048637390137
    5. '  ' → logprob: -13.125048637390137
    6. '#' → logprob: -13.500048637390137
    7. ',' → logprob: -14.000048637390137
    8. '
' → logprob: -14.125048637390137
    9. '```' → logprob: -14.875048637390137
    10. '   ' → logprob: -14.937548637390137

Token 136: ' serv' (ID: 2096)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2943689525127411
    2. ',' → logprob: -1.6693689823150635
    3. ' ,' → logprob: -3.4193689823150635
    4. '=' → logprob: -3.4193689823150635
    5. ' ' → logprob: -7.419368743896484
    6. ' *=' → logprob: -8.419368743896484
    7. ',p' → logprob: -8.669368743896484
    8. ' +=' → logprob: -9.919368743896484
    9. ',N' → logprob: -10.794368743896484
    10. '<|end|>' → logprob: -10.919368743896484

Token 137: 'ira' (ID: 2633)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.6837257146835327
    2. 'ira' → logprob: -1.1837257146835327
    3. 'ir' → logprob: -2.3087258338928223
    4. 'ant' → logprob: -3.8087258338928223
    5. 'ent' → logprob: -4.183725833892822
    6. 'ait' → logprob: -4.308725833892822
    7. '=' → logprob: -4.808725833892822
    8. 'ra' → logprob: -5.183725833892822
    9. 'er' → logprob: -5.183725833892822
    10. 'aient' → logprob: -6.433725833892822

Token 138: ' à' (ID: 1221)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9494561553001404
    2. '=' → logprob: -1.1994562149047852
    3. ' à' → logprob: -1.4494562149047852
    4. ' probablement' → logprob: -4.074456214904785
    5. 'à' → logprob: -4.324456214904785
    6. ' a' → logprob: -4.324456214904785
    7. ' to' → logprob: -5.074456214904785
    8. ' ' → logprob: -5.074456214904785
    9. ',' → logprob: -5.199456214904785
    10. '<|end|>' → logprob: -5.824456214904785

Token 139: ' conserver' (ID: 116877)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.09332452714443207
    2. '1' → logprob: -2.7183244228363037
    3. 'p' → logprob: -5.093324661254883
    4. '0' → logprob: -5.343324661254883
    5. '<|end|>' → logprob: -5.718324661254883
    6. ' multiplier' → logprob: -6.343324661254883
    7. 'mult' → logprob: -6.593324661254883
    8. ' ' → logprob: -6.843324661254883
    9. ' p' → logprob: -6.968324661254883
    10. '10' → logprob: -7.343324661254883

Token 140: ' une' (ID: 2463)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 141: ' puissance' (ID: 63494)
  Prédit: 'pu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pu' → logprob: -0.1771724969148636
    2. ' puissance' → logprob: -2.0521724224090576
    3. ' puiss' → logprob: -4.802172660827637
    4. 'pow' → logprob: -5.177172660827637
    5. 'val' → logprob: -5.552172660827637
    6. 'power' → logprob: -5.802172660827637
    7. 'e' → logprob: -6.552172660827637
    8. '=' → logprob: -6.677172660827637
    9. 'multip' → logprob: -6.927172660827637
    10. 'p' → logprob: -7.177172660827637

Token 142: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.48847028613090515
    2. '2' → logprob: -1.2384703159332275
    3. 'de' → logprob: -2.7384703159332275
    4. ' ' → logprob: -3.7384703159332275
    5. ' =' → logprob: -6.113470077514648
    6. '<|end|>' → logprob: -6.613470077514648
    7. ' of' → logprob: -7.363470077514648
    8. '=' → logprob: -7.363470077514648
    9. '_de' → logprob: -7.738470077514648
    10. ' p' → logprob: -7.863470077514648

Token 143: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.03014267235994339
    2. 'de' → logprob: -4.155142784118652
    3. ' ' → logprob: -4.280142784118652
    4. ' deux' → logprob: -8.905142784118652
    5. '```' → logprob: -11.655142784118652
    6. '  ' → logprob: -12.405142784118652
    7. ' two' → logprob: -12.530142784118652
    8. 'two' → logprob: -12.905142784118652
    9. '   ' → logprob: -13.030142784118652
    10. '...' → logprob: -13.592642784118652

Token 144: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.012599127367138863
    2. 'de' → logprob: -4.387598991394043
    3. ' ' → logprob: -9.387598991394043
    4. ' deux' → logprob: -13.387598991394043
    5. '```' → logprob: -13.762598991394043
    6. 'two' → logprob: -14.012598991394043
    7. '...' → logprob: -14.887598991394043
    8. '-' → logprob: -15.512598991394043
    9. 'p' → logprob: -15.512598991394043
    10. 'Deux' → logprob: -15.512598991394043

Token 145: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1507056951522827
    2. 'p' → logprob: -1.2757056951522827
    3. '<|end|>' → logprob: -1.4007056951522827
    4. ' p' → logprob: -2.9007058143615723
    5. ' ,' → logprob: -3.7757058143615723
    6. 'while' → logprob: -4.025705814361572
    7. '*' → logprob: -4.275705814361572
    8. '2' → logprob: -4.400705814361572
    9. ' while' → logprob: -5.150705814361572
    10. '#' → logprob: -5.400705814361572

Token 146: 'initial' (ID: 17493)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12372385710477829
    2. '2' → logprob: -2.7487237453460693
    3. ' )' → logprob: -3.6237237453460693
    4. 'p' → logprob: -4.998723983764648
    5. '),' → logprob: -5.498723983764648
    6. ',' → logprob: -5.498723983764648
    7. 'while' → logprob: -6.123723983764648
    8. ' ' → logprob: -6.248723983764648
    9. ' ,' → logprob: -6.998723983764648
    10. '<|end|>' → logprob: -7.123723983764648

Token 147: 'ement' (ID: 962)
  Prédit: 'isée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isée' → logprob: -0.18927735090255737
    2. 'isé' → logprob: -2.814277410507202
    3. '=' → logprob: -3.189277410507202
    4. 'isation' → logprob: -4.189277172088623
    5. 'ement' → logprob: -4.314277172088623
    6. 'iser' → logprob: -4.439277172088623
    7. ' =' → logprob: -4.689277172088623
    8. 'e' → logprob: -4.814277172088623
    9. ')' → logprob: -5.314277172088623
    10. '#' → logprob: -6.189277172088623

Token 148: ' ' (ID: 220)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.27029791474342346
    2. '1' → logprob: -1.645297884941101
    3. '=' → logprob: -3.6452980041503906
    4. '2' → logprob: -5.270298004150391
    5. ' ' → logprob: -5.645298004150391
    6. ' =' → logprob: -5.645298004150391
    7. ' )' → logprob: -6.395298004150391
    8. ' ég' → logprob: -7.145298004150391
    9. '),' → logprob: -7.270298004150391
    10. ',' → logprob: -7.395298004150391

Token 149: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1162538230419159
    2. '=' → logprob: -2.4912538528442383
    3. ')' → logprob: -3.7412538528442383
    4. ' =' → logprob: -6.991253852844238
    5. '),' → logprob: -7.116253852844238
    6. ',' → logprob: -7.866253852844238
    7. '**' → logprob: -8.616253852844238
    8. '2' → logprob: -8.741253852844238
    9. ').' → logprob: -8.866253852844238
    10. ' ' → logprob: -9.116253852844238

Token 150: '^' (ID: 61)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.029320869594812393
    2. '**' → logprob: -4.40432071685791
    3. ' )' → logprob: -4.40432071685791
    4. ')**' → logprob: -6.15432071685791
    5. '**)' → logprob: -6.52932071685791
    6. ' **' → logprob: -8.15432071685791
    7. '),' → logprob: -8.40432071685791
    8. ' **)' → logprob: -9.02932071685791
    9. ').' → logprob: -9.90432071685791
    10. '*)' → logprob: -10.15432071685791

Token 151: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009906532941386104
    2. '1' → logprob: -7.375990867614746
    3. ' ' → logprob: -8.000990867614746
    4. ')' → logprob: -11.875990867614746
    5. 'p' → logprob: -11.875990867614746
    6. '-' → logprob: -12.625990867614746
    7. '<|end|>' → logprob: -13.000990867614746
    8. '#' → logprob: -13.125990867614746
    9. '(' → logprob: -13.250990867614746
    10. '=' → logprob: -14.063490867614746

Token 152: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05529836565256119
    2. ' )' → logprob: -3.055298328399658
    3. '),' → logprob: -6.430298328399658
    4. ').' → logprob: -6.430298328399658
    5. '**' → logprob: -7.055298328399658
    6. ')
' → logprob: -7.430298328399658
    7. ' +' → logprob: -7.555298328399658
    8. '+' → logprob: -8.305298805236816
    9. ' ),' → logprob: -8.805298805236816
    10. ')**' → logprob: -8.930298805236816

Token 153: '#' (ID: 2)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.009911435656249523
    2. '
' → logprob: -4.88491153717041
    3. ' p' → logprob: -6.63491153717041
    4. 'N' → logprob: -7.13491153717041
    5. ',' → logprob: -9.75991153717041
    6. ' 
' → logprob: -9.88491153717041
    7. '  
' → logprob: -11.00991153717041
    8. ',
' → logprob: -11.50991153717041
    9. '<|end|>' → logprob: -11.75991153717041
    10. '

' → logprob: -12.00991153717041

Token 154: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.06209820881485939
    2. 'p' → logprob: -2.812098264694214
    3. ' N' → logprob: -9.937098503112793
    4. '#' → logprob: -10.062098503112793
    5. '
' → logprob: -10.937098503112793
    6. ' p' → logprob: -11.187098503112793
    7. '2' → logprob: -13.062098503112793
    8. 'n' → logprob: -13.312098503112793
    9. 'P' → logprob: -14.687098503112793
    10. '```' → logprob: -14.812098503112793

Token 155: ' va' (ID: 3423)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023626042529940605
    2. '=' → logprob: -3.7736260890960693
    3. ',' → logprob: -8.148626327514648
    4. ' ' → logprob: -9.523626327514648
    5. ' ,' → logprob: -11.398626327514648
    6. '=int' → logprob: -13.273626327514648
    7. ' ' → logprob: -13.898626327514648
    8. '  ' → logprob: -14.523626327514648
    9. 'p' → logprob: -14.523626327514648
    10. '2' → logprob: -14.523626327514648

Token 156: ' ind' (ID: 1383)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.48405247926712036
    2. '=' → logprob: -0.9840524792671204
    3. ' ' → logprob: -5.609052658081055
    4. ' continuer' → logprob: -6.734052658081055
    5. ' servir' → logprob: -7.484052658081055
    6. ' +=' → logprob: -7.734052658081055
    7. ' be' → logprob: -7.734052658081055
    8. '=int' → logprob: -7.859052658081055
    9. ' devenir' → logprob: -7.984052658081055
    10. ' être' → logprob: -8.109052658081055

Token 157: 'iquer' (ID: 63028)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.015295843593776226
    2. 'ent' → logprob: -4.89029598236084
    3. 'ef' → logprob: -5.51529598236084
    4. 'éf' → logprob: -7.01529598236084
    5. 'er' → logprob: -7.26529598236084
    6. 'et' → logprob: -7.26529598236084
    7. 'iquer' → logprob: -7.64029598236084
    8. 'é' → logprob: -8.14029598236084
    9. 'e' → logprob: -9.26529598236084
    10. 'enter' → logprob: -9.64029598236084

Token 158: ' le' (ID: 505)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.3838978409767151
    2. ' l' → logprob: -2.0088977813720703
    3. ' le' → logprob: -2.3838977813720703
    4. 'le' → logprob: -3.6338977813720703
    5. 'l' → logprob: -4.38389778137207
    6. ' ' → logprob: -4.50889778137207
    7. '<|end|>' → logprob: -4.88389778137207
    8. 'la' → logprob: -5.38389778137207
    9. ' un' → logprob: -5.38389778137207
    10. ' une' → logprob: -5.88389778137207

Token 159: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.22606275975704193
    2. ' nombre' → logprob: -1.6010627746582031
    3. 'n' → logprob: -8.226062774658203
    4. 'niveau' → logprob: -8.851062774658203
    5. 'nb' → logprob: -10.351062774658203
    6. 'num' → logprob: -10.476062774658203
    7. 'Nombre' → logprob: -10.726062774658203
    8. 'tail' → logprob: -10.851062774658203
    9. ' nombres' → logprob: -11.226062774658203
    10. 'number' → logprob: -11.476062774658203

Token 160: ' actuel' (ID: 113646)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.12496741116046906
    2. ' de' → logprob: -2.874967336654663
    3. ' des' → logprob: -3.874967336654663
    4. 'd' → logprob: -4.249967575073242
    5. ' maximal' → logprob: -5.124967575073242
    6. 'de' → logprob: -5.249967575073242
    7. ' ' → logprob: -5.874967575073242
    8. ' total' → logprob: -6.124967575073242
    9. 'total' → logprob: -6.374967575073242
    10. ' =' → logprob: -6.749967575073242

Token 161: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.2410062700510025
    2. ' de' → logprob: -1.8660062551498413
    3. ' des' → logprob: -3.241006374359131
    4. 'de' → logprob: -4.866006374359131
    5. 'd' → logprob: -4.991006374359131
    6. ' of' → logprob: -6.116006374359131
    7. ' ' → logprob: -7.116006374359131
    8. ' =' → logprob: -7.241006374359131
    9. 'des' → logprob: -7.491006374359131
    10. '=' → logprob: -8.241005897521973

Token 162: ' somm' (ID: 44830)
  Prédit: ' somm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' somm' → logprob: -0.5252583026885986
    2. ' noe' → logprob: -1.1502583026885986
    3. 's' → logprob: -3.6502583026885986
    4. 'n' → logprob: -4.7752580642700195
    5. ' bits' → logprob: -4.9002580642700195
    6. ' n' → logprob: -5.0252580642700195
    7. 'bits' → logprob: -5.1502580642700195
    8. 'som' → logprob: -5.1502580642700195
    9. ' niveaux' → logprob: -5.4002580642700195
    10. ' sommet' → logprob: -5.7752580642700195

Token 163: 'ets' (ID: 1719)
  Prédit: 'ets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ets' → logprob: -0.08615188300609589
    2. 'et' → logprob: -2.5861518383026123
    3. 'è' → logprob: -5.836152076721191
    4. 'e' → logprob: -6.711152076721191
    5. 'ètes' → logprob: -7.336152076721191
    6. 'it' → logprob: -7.461152076721191
    7. 'ètres' → logprob: -7.586152076721191
    8. 'ettes' → logprob: -8.211152076721191
    9. 'êts' → logprob: -8.336152076721191
    10. 'èt' → logprob: -8.461152076721191

Token 164: ' (' (ID: 350)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 165: 'no' (ID: 1750)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2892906069755554
    2. ' )' → logprob: -1.5392906665802002
    3. ' dans' → logprob: -3.4142906665802
    4. ').' → logprob: -6.539290428161621
    5. 'dans' → logprob: -7.289290428161621
    6. ',' → logprob: -7.539290428161621
    7. ' ).' → logprob: -8.414290428161621
    8. ' à' → logprob: -9.164290428161621
    9. ' )
' → logprob: -9.289290428161621
    10. ')
' → logprob: -9.289290428161621

Token 166: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.09519451856613159
    2. 'de' → logprob: -3.8451945781707764
    3. 'ud' → logprob: -4.470194339752197
    4. '#' → logprob: -4.470194339752197
    5. 'œ' → logprob: -4.720194339752197
    6. 'n' → logprob: -4.845194339752197
    7. 'uds' → logprob: -4.845194339752197
    8. 'ds' → logprob: -5.470194339752197
    9. 'des' → logprob: -5.720194339752197
    10. ')' → logprob: -5.970194339752197

Token 167: 'uds' (ID: 44387)
  Prédit: 'ud'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ud' → logprob: -0.2545544505119324
    2. 'uds' → logprob: -1.5045545101165771
    3. 'e' → logprob: -6.879554271697998
    4. ' ud' → logprob: -7.129554271697998
    5. 'ds' → logprob: -8.254554748535156
    6. ')' → logprob: -8.629554748535156
    7. 'd' → logprob: -9.004554748535156
    8. ' uds' → logprob: -9.754554748535156
    9. ' de' → logprob: -10.254554748535156
    10. ' ' → logprob: -11.004554748535156

Token 168: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0507953017950058
    2. ' )' → logprob: -3.800795316696167
    3. ' dans' → logprob: -3.800795316696167
    4. 'dans' → logprob: -6.050795078277588
    5. ' du' → logprob: -6.925795078277588
    6. ' présents' → logprob: -7.800795078277588
    7. ').' → logprob: -7.800795078277588
    8. ')
' → logprob: -8.175795555114746
    9. 'du' → logprob: -8.675795555114746
    10. ')d' → logprob: -10.425795555114746

Token 169: ' dans' (ID: 2671)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3004598021507263
    2. '<|end|>' → logprob: -1.800459861755371
    3. '=' → logprob: -3.175459861755371
    4. '
' → logprob: -4.550459861755371
    5. '.' → logprob: -4.550459861755371
    6. ' ' → logprob: -4.675459861755371
    7. ',' → logprob: -5.175459861755371
    8. ')' → logprob: -5.925459861755371
    9. '2' → logprob: -6.675459861755371
    10. '#' → logprob: -6.800459861755371

Token 170: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.5991683006286621
    2. 'le' → logprob: -1.724168300628662
    3. ' la' → logprob: -2.099168300628662
    4. ' p' → logprob: -2.474168300628662
    5. ' graph' → logprob: -4.349168300628662
    6. ' l' → logprob: -4.474168300628662
    7. ' grap' → logprob: -4.849168300628662
    8. 'l' → logprob: -4.974168300628662
    9. 'p' → logprob: -4.974168300628662
    10. 'la' → logprob: -5.349168300628662

Token 171: ' grap' (ID: 60955)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.6047686338424683
    2. ' grap' → logprob: -0.8547686338424683
    3. ' graph' → logprob: -4.104768753051758
    4. 'graph' → logprob: -4.479768753051758
    5. ' arbre' → logprob: -8.979768753051758
    6. ' ' → logprob: -9.854768753051758
    7. '	graph' → logprob: -9.917268753051758
    8. ' graphique' → logprob: -10.354768753051758
    9. ' gr' → logprob: -10.417268753051758
    10. 'g' → logprob: -10.542268753051758

Token 172: 'he' (ID: 273)
  Prédit: 'rap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rap' → logprob: -0.6771799921989441
    2. 'raph' → logprob: -0.8021799921989441
    3. 'aphe' → logprob: -3.927180051803589
    4. 'r' → logprob: -4.42717981338501
    5. '#' → logprob: -4.67717981338501
    6. 'raf' → logprob: -7.30217981338501
    7. 're' → logprob: -7.42717981338501
    8. 'aph' → logprob: -8.677180290222168
    9. 'ph' → logprob: -8.802180290222168
    10. 'he' → logprob: -8.927180290222168

Token 173: ',' (ID: 11)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.6454282999038696
    2. '
' → logprob: -1.0204282999038696
    3. 'p' → logprob: -3.02042818069458
    4. '<|end|>' → logprob: -3.52042818069458
    5. ')' → logprob: -4.14542818069458
    6. ' =' → logprob: -5.64542818069458
    7. ',' → logprob: -6.14542818069458
    8. '=' → logprob: -6.14542818069458
    9. '#' → logprob: -6.14542818069458
    10. ' p' → logprob: -6.27042818069458

Token 174: ' en' (ID: 469)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3296217620372772
    2. '#' → logprob: -2.5796217918395996
    3. ' )' → logprob: -3.2046217918395996
    4. '<|end|>' → logprob: -3.4546217918395996
    5. ' #' → logprob: -3.7046217918395996
    6. ' 
' → logprob: -3.7046217918395996
    7. ' N' → logprob: -4.2046217918396
    8. ')' → logprob: -4.4546217918396
    9. '1' → logprob: -4.5796217918396
    10. 'N' → logprob: -4.8296217918396

Token 175: ' part' (ID: 997)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.319694995880127
    2. ' ' → logprob: -1.444694995880127
    3. ' =' → logprob: -2.319694995880127
    4. '1' → logprob: -2.444694995880127
    5. '=' → logprob: -2.819694995880127
    6. 't' → logprob: -3.069694995880127
    7. 'itial' → logprob: -3.569694995880127
    8. 'range' → logprob: -3.569694995880127
    9. ' range' → logprob: -3.819694995880127
    10. ' +' → logprob: -4.069694995880127

Token 176: 'ant' (ID: 493)
  Prédit: 'ie'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.13898999989032745
    2. 'ant' → logprob: -2.5139899253845215
    3. 'out' → logprob: -4.2639899253845215
    4. '#' → logprob: -5.0139899253845215
    5. 'ance' → logprob: -5.2639899253845215
    6. 'e' → logprob: -5.5139899253845215
    7. 'icul' → logprob: -5.8889899253845215
    8. 'i' → logprob: -6.1389899253845215
    9. 'ir' → logprob: -6.1389899253845215
    10. 'icular' → logprob: -6.2639899253845215

Token 177: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.5362871885299683
    2. ' =' → logprob: -1.5362871885299683
    3. '=' → logprob: -1.9112871885299683
    4. ' d' → logprob: -3.286287307739258
    5. ' du' → logprob: -5.286287307739258
    6. 'de' → logprob: -5.536287307739258
    7. 'd' → logprob: -6.536287307739258
    8. ' des' → logprob: -6.661287307739258
    9. ' from' → logprob: -6.786287307739258
    10. ' à' → logprob: -7.161287307739258

Token 178: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01599530130624771
    2. ' ' → logprob: -4.265995502471924
    3. '2' → logprob: -6.390995502471924
    4. '0' → logprob: -9.390995025634766
    5. ' p' → logprob: -10.390995025634766
    6. 'p' → logprob: -10.765995025634766
    7. 'L' → logprob: -11.890995025634766
    8. ' L' → logprob: -12.515995025634766
    9. ' ' → logprob: -13.140995025634766
    10. 'l' → logprob: -13.640995025634766

Token 179: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0024204873479902744
    2. '2' → logprob: -6.252420425415039
    3. '0' → logprob: -7.752420425415039
    4. ' ' → logprob: -10.127420425415039
    5. 'p' → logprob: -11.377420425415039
    6. 'L' → logprob: -12.127420425415039
    7. 'l' → logprob: -13.502420425415039
    8. 'un' → logprob: -14.002420425415039
    9. '```' → logprob: -14.127420425415039
    10. 'le' → logprob: -14.377420425415039

Token 180: '.
' (ID: 558)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.44587159156799316
    2. ')' → logprob: -1.4458715915679932
    3. 'N' → logprob: -2.820871591567993
    4. '<|end|>' → logprob: -3.320871591567993
    5. 'p' → logprob: -5.070871353149414
    6. 'L' → logprob: -5.070871353149414
    7. '.' → logprob: -5.695871353149414
    8. ',' → logprob: -6.195871353149414
    9. '

' → logprob: -6.195871353149414
    10. '#' → logprob: -6.445871353149414

Token 181: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0004223323194310069
    2. 'N' → logprob: -8.000422477722168
    3. '
' → logprob: -9.625422477722168
    4. ' p' → logprob: -10.875422477722168
    5. 'for' → logprob: -15.000422477722168
    6. ' 
' → logprob: -15.000422477722168
    7. '
' → logprob: -15.500422477722168
    8. '' → logprob: -15.500422477722168
    9. '#' → logprob: -15.625422477722168
    10. ',' → logprob: -15.875422477722168

Token 182: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. '_' → logprob: -16.75
    4. '=' → logprob: -17.875
    5. ' =' → logprob: -17.875
    6. '₂' → logprob: -17.875
    7. '```' → logprob: -19.0
    8. '۲' → logprob: -19.625
    9. '  ' → logprob: -19.625
    10. '２' → logprob: -20.375

Token 183: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023497262969613075
    2. '=' → logprob: -3.7734973430633545
    3. ' ' → logprob: -9.148497581481934
    4. ',' → logprob: -9.148497581481934
    5. ' ,' → logprob: -10.523497581481934
    6. ' *=' → logprob: -12.148497581481934
    7. ' +=' → logprob: -12.523497581481934
    8. ' ' → logprob: -13.773497581481934
    9. ' =
' → logprob: -14.898497581481934
    10. ')' → logprob: -15.398497581481934

Token 184: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00861456897109747
    2. ' ' → logprob: -4.758614540100098
    3. '   ' → logprob: -17.758615493774414
    4. '  ' → logprob: -18.633615493774414
    5. '0' → logprob: -18.883615493774414
    6. ' ' → logprob: -19.633615493774414
    7. '2' → logprob: -19.883615493774414
    8. '=' → logprob: -20.321115493774414
    9. ' =' → logprob: -20.571115493774414
    10. '１' → logprob: -20.696115493774414

Token 185: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -12.87500286102295
    3. '   ' → logprob: -21.250001907348633
    4. '１' → logprob: -21.750001907348633
    5. '```' → logprob: -22.375001907348633
    6. '  ' → logprob: -22.500001907348633
    7. '۱' → logprob: -22.750001907348633
    8. '' → logprob: -23.125001907348633
    9. '
' → logprob: -23.250001907348633
    10. '2' → logprob: -23.375001907348633

Token 186: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14642702043056488
    2. 'N' → logprob: -2.0214269161224365
    3. '<|end|>' → logprob: -5.771427154541016
    4. '
' → logprob: -8.271427154541016
    5. '#' → logprob: -9.271427154541016
    6. 'n' → logprob: -9.521427154541016
    7. ' N' → logprob: -9.771427154541016
    8. 'L' → logprob: -10.521427154541016
    9. 'p' → logprob: -10.771427154541016
    10. ' 
' → logprob: -10.896427154541016

Token 187: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.012649614363908768
    2. '
' → logprob: -4.3876495361328125
    3. 'while' → logprob: -10.262649536132812
    4. '#' → logprob: -10.637649536132812
    5. 'n' → logprob: -10.887649536132812
    6. ',' → logprob: -11.137649536132812
    7. 'for' → logprob: -11.137649536132812
    8. ' N' → logprob: -11.512649536132812
    9. '<|end|>' → logprob: -12.387649536132812
    10. '
' → logprob: -12.387649536132812

Token 188: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12692999839782715
    2. '=' → logprob: -2.126929998397827
    3. ',' → logprob: -13.626930236816406
    4. ' ' → logprob: -14.751930236816406
    5. ' +=' → logprob: -15.751930236816406
    6. ' =
' → logprob: -16.751930236816406
    7. '=int' → logprob: -17.376930236816406
    8. ' ,' → logprob: -17.501930236816406
    9. '＝' → logprob: -17.501930236816406
    10. '.' → logprob: -17.876930236816406

Token 189: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.836499985889532e-05
    2. ' ' → logprob: -9.7500581741333
    3. '   ' → logprob: -17.625059127807617
    4. '0' → logprob: -17.750059127807617
    5. '  ' → logprob: -19.250059127807617
    6. '```' → logprob: -20.250059127807617
    7. '' → logprob: -21.312559127807617
    8. '2' → logprob: -21.500059127807617
    9. ' ' → logprob: -21.750059127807617
    10. '１' → logprob: -21.875059127807617

Token 190: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -14.375000953674316
    3. '0' → logprob: -15.000000953674316
    4. '2' → logprob: -18.125001907348633
    5. '```' → logprob: -18.187501907348633
    6. '' → logprob: -19.250001907348633
    7. '   ' → logprob: -19.312501907348633
    8. 'L' → logprob: -19.562501907348633
    9. '１' → logprob: -19.750001907348633
    10. '۱' → logprob: -20.187501907348633

Token 191: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 192: '#' (ID: 2)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.47719907760620117
    2. 'for' → logprob: -0.9771990776062012
    3. '<|end|>' → logprob: -6.352199077606201
    4. '#' → logprob: -7.102199077606201
    5. ' while' → logprob: -8.10219955444336
    6. ' for' → logprob: -9.35219955444336
    7. 'if' → logprob: -9.72719955444336
    8. 'i' → logprob: -10.22719955444336
    9. '
' → logprob: -10.60219955444336
    10. 'w' → logprob: -12.47719955444336

Token 193: ' La' (ID: 3038)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.030152391642332077
    2. 'for' → logprob: -3.5301523208618164
    3. 'i' → logprob: -8.905152320861816
    4. ' while' → logprob: -9.280152320861816
    5. '#' → logprob: -9.280152320861816
    6. 'w' → logprob: -10.530152320861816
    7. 'if' → logprob: -10.780152320861816
    8. 'wh' → logprob: -11.280152320861816
    9. 'import' → logprob: -12.155152320861816
    10. 'from' → logprob: -13.530152320861816

Token 194: ' chaîne' (ID: 89288)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.6419053077697754
    2. ' while' → logprob: -0.7669053077697754
    3. 'for' → logprob: -5.266905307769775
    4. ' for' → logprob: -5.891905307769775
    5. '#' → logprob: -7.516905307769775
    6. ' #' → logprob: -7.891905307769775
    7. ' ' → logprob: -8.641904830932617
    8. 'import' → logprob: -10.266904830932617
    9. 'i' → logprob: -10.766904830932617
    10. 'r' → logprob: -11.016904830932617

Token 195: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07482129335403442
    2. 's' → logprob: -3.0748212337493896
    3. '=' → logprob: -4.449821472167969
    4. ' s' → logprob: -5.574821472167969
    5. 'de' → logprob: -6.199821472167969
    6. 'for' → logprob: -6.699821472167969
    7. ' "' → logprob: -6.699821472167969
    8. '"' → logprob: -7.324821472167969
    9. ' de' → logprob: -7.324821472167969
    10. '="' → logprob: -7.949821472167969

Token 196: ' commentaire' (ID: 86011)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.4667065441608429
    2. 'comment' → logprob: -1.5917065143585205
    3. 'format' → logprob: -3.0917065143585205
    4. '#' → logprob: -3.7167065143585205
    5. 'f' → logprob: -3.9667065143585205
    6. 'code' → logprob: -4.4667067527771
    7. ' caractères' → logprob: -4.4667067527771
    8. 'for' → logprob: -4.9667067527771
    9. 'doc' → logprob: -4.9667067527771
    10. 's' → logprob: -5.0917067527771

Token 197: ' suivante' (ID: 107439)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5262891054153442
    2. ' suivante' → logprob: -1.1512891054153442
    3. 's' → logprob: -4.026288986206055
    4. ' #' → logprob: -4.151288986206055
    5. ' =' → logprob: -4.776288986206055
    6. ' :' → logprob: -5.026288986206055
    7. ':' → logprob: -5.151288986206055
    8. 'while' → logprob: -5.526288986206055
    9. ' continue' → logprob: -5.651288986206055
    10. '"' → logprob: -5.901288986206055

Token 198: ' décrit' (ID: 169431)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.0574793741106987
    2. 'while' → logprob: -3.9324793815612793
    3. ':' → logprob: -4.682479381561279
    4. '"""' → logprob: -5.182479381561279
    5. 'for' → logprob: -5.307479381561279
    6. 'expl' → logprob: -5.807479381561279
    7. 'continue' → logprob: -6.057479381561279
    8. 's' → logprob: -6.057479381561279
    9. '"""
' → logprob: -6.932479381561279
    10. ':#' → logprob: -7.307479381561279

Token 199: ',' (ID: 11)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.5837399363517761
    2. 'la' → logprob: -1.583739995956421
    3. '#' → logprob: -2.458739995956421
    4. 'le' → logprob: -2.583739995956421
    5. ' le' → logprob: -3.708739995956421
    6. ' l' → logprob: -4.083739757537842
    7. 'une' → logprob: -4.083739757537842
    8. ' une' → logprob: -4.958739757537842
    9. 'l' → logprob: -5.458739757537842
    10. ' #' → logprob: -5.958739757537842

Token 200: ' dans' (ID: 2671)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.09417257457971573
    2. 'for' → logprob: -3.094172477722168
    3. ' #' → logprob: -4.469172477722168
    4. 'en' → logprob: -4.844172477722168
    5. ' for' → logprob: -4.969172477722168
    6. 'pour' → logprob: -5.344172477722168
    7. ' en' → logprob: -5.719172477722168
    8. 'dans' → logprob: -5.844172477722168
    9. 'while' → logprob: -7.094172477722168
    10. 'au' → logprob: -7.219172477722168

Token 201: ' une' (ID: 2463)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.9956764578819275
    2. '#' → logprob: -1.2456765174865723
    3. 'la' → logprob: -1.7456765174865723
    4. 'une' → logprob: -2.9956765174865723
    5. 'les' → logprob: -3.2456765174865723
    6. 'plus' → logprob: -3.9956765174865723
    7. 'fr' → logprob: -3.9956765174865723
    8. 'un' → logprob: -4.495676517486572
    9. 'f' → logprob: -4.745676517486572
    10. 'd' → logprob: -4.995676517486572

Token 202: ' autre' (ID: 20278)
  Prédit: 'bou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bou' → logprob: -0.07745782285928726
    2. 'while' → logprob: -2.827457904815674
    3. ' boucle' → logprob: -4.827457904815674
    4. 'for' → logprob: -5.327457904815674
    5. '#' → logprob: -6.577457904815674
    6. ' bou' → logprob: -8.327457427978516
    7. 'b' → logprob: -8.827457427978516
    8. 'range' → logprob: -9.077457427978516
    9. ' while' → logprob: -9.327457427978516
    10. 'Bou' → logprob: -9.952457427978516

Token 203: ' langue' (ID: 62426)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.8786448240280151
    2. 'bou' → logprob: -1.0036448240280151
    3. 'part' → logprob: -2.2536449432373047
    4. 'comment' → logprob: -3.2536449432373047
    5. '#' → logprob: -3.2536449432373047
    6. 'for' → logprob: -4.128644943237305
    7. ' boucle' → logprob: -4.628644943237305
    8. 'while' → logprob: -6.128644943237305
    9. 'l' → logprob: -6.878644943237305
    10. 'fois' → logprob: -6.878644943237305

Token 204: ' (' (ID: 350)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.22698195278644562
    2. ':' → logprob: -2.4769818782806396
    3. ',' → logprob: -2.9769818782806396
    4. ' (' → logprob: -4.351982116699219
    5. ' en' → logprob: -4.601982116699219
    6. ' #' → logprob: -4.851982116699219
    7. 'for' → logprob: -5.101982116699219
    8. 's' → logprob: -5.351982116699219
    9. 'en' → logprob: -5.351982116699219
    10. ' :' → logprob: -5.726982116699219

Token 205: 'j' (ID: 73)
  Prédit: 'fr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fr' → logprob: -0.6891930103302002
    2. '#' → logprob: -1.4391930103302002
    3. 'anglais' → logprob: -2.4391930103302
    4. 'python' → logprob: -2.8141930103302
    5. 'le' → logprob: -3.5641930103302
    6. ')' → logprob: -3.6891930103302
    7. 'French' → logprob: -4.564192771911621
    8. 'la' → logprob: -4.564192771911621
    9. 'l' → logprob: -5.314192771911621
    10. 'english' → logprob: -5.439192771911621

Token 206: 'apon' (ID: 11518)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6722828149795532
    2. '#' → logprob: -0.7972828149795532
    3. 'apanese' → logprob: -4.422282695770264
    4. 'u' → logprob: -4.922282695770264
    5. 'avascript' → logprob: -5.047282695770264
    6. 'ap' → logprob: -6.172282695770264
    7. 'e' → logprob: -6.297282695770264
    8. ')' → logprob: -6.422282695770264
    9. 'upyter' → logprob: -6.547282695770264
    10. 'apon' → logprob: -6.797282695770264

Token 207: 'ais' (ID: 1873)
  Prédit: 'aise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aise' → logprob: -0.10674694925546646
    2. 'ais' → logprob: -2.4817469120025635
    3. '#' → logprob: -4.231747150421143
    4. '```' → logprob: -6.981747150421143
    5. 'a' → logprob: -7.231747150421143
    6. 'ai' → logprob: -7.731747150421143
    7. 'aises' → logprob: -7.981747150421143
    8. 'aire' → logprob: -8.981746673583984
    9. ')' → logprob: -9.231746673583984
    10. 'oise' → logprob: -9.856746673583984

Token 208: '),
' (ID: 2313)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.05677130073308945
    2. '#' → logprob: -3.0567712783813477
    3. '),
' → logprob: -5.556771278381348
    4. ')' → logprob: -6.181771278381348
    5. 'で' → logprob: -7.056771278381348
    6. ')、' → logprob: -7.556771278381348
    7. '
' → logprob: -8.431771278381348
    8. ',' → logprob: -8.931771278381348
    9. 'の' → logprob: -9.181771278381348
    10. 'が' → logprob: -9.556771278381348

Token 209: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.002417511073872447
    2. 'while' → logprob: -6.87741756439209
    3. ' #' → logprob: -7.25241756439209
    4. ' while' → logprob: -7.87741756439209
    5. '"""
' → logprob: -10.12741756439209
    6. 'for' → logprob: -10.25241756439209
    7. 'が' → logprob: -10.37741756439209
    8. 'の' → logprob: -10.87741756439209
    9. 's' → logprob: -11.00241756439209
    10. ''''
' → logprob: -11.25241756439209

Token 210: ' qu' (ID: 474)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.002100060461089015
    2. ' #' → logprob: -7.252099990844727
    3. 'pour' → logprob: -8.377099990844727
    4. 'for' → logprob: -8.502099990844727
    5. 'la' → logprob: -9.502099990844727
    6. 'def' → logprob: -9.627099990844727
    7. 'p' → logprob: -9.752099990844727
    8. 'while' → logprob: -10.002099990844727
    9. 'の' → logprob: -10.127099990844727
    10. 'une' → logprob: -10.127099990844727

Token 211: ''à' (ID: 33688)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.18298205733299255
    2. ''il' → logprob: -3.0579819679260254
    3. '#' → logprob: -3.5579819679260254
    4. 'ue' → logprob: -3.9329819679260254
    5. 'u' → logprob: -4.307981967926025
    6. 'une' → logprob: -4.557981967926025
    7. ''' → logprob: -4.682981967926025
    8. ''une' → logprob: -5.057981967926025
    9. 'i' → logprob: -5.432981967926025
    10. ''elle' → logprob: -5.557981967926025

Token 212: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -1.828812599182129
    2. 'la' → logprob: -2.203812599182129
    3. 'l' → logprob: -2.828812599182129
    4. 'この' → logprob: -2.828812599182129
    5. '#' → logprob: -3.078812599182129
    6. 'ここ' → logprob: -3.203812599182129
    7. 'cha' → logprob: -3.328812599182129
    8. 'while' → logprob: -3.453812599182129
    9. 'ch' → logprob: -3.453812599182129
    10. '続' → logprob: -3.453812599182129

Token 213: ' étape' (ID: 83661)
  Prédit: 'ル'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ル' → logprob: -0.5174742341041565
    2. 'while' → logprob: -2.5174741744995117
    3. 'for' → logprob: -2.6424741744995117
    4. 'iteration' → logprob: -3.2674741744995117
    5. 'bit' → logprob: -3.3924741744995117
    6. 'ステ' → logprob: -3.6424741744995117
    7. 'L' → logprob: -3.8924741744995117
    8. 'p' → logprob: -4.267474174499512
    9. '\xe7\xb9' → logprob: -4.517474174499512
    10. 'step' → logprob: -4.517474174499512

Token 214: ' pour' (ID: 1930)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3083142936229706
    2. ',' → logprob: -2.558314323425293
    3. 'p' → logprob: -2.558314323425293
    4. 'for' → logprob: -2.808314323425293
    5. 'の' → logprob: -4.058314323425293
    6. 'で' → logprob: -4.683314323425293
    7. ' for' → logprob: -5.308314323425293
    8. ' p' → logprob: -5.433314323425293
    9. ' #' → logprob: -5.808314323425293
    10. 'に' → logprob: -6.308314323425293

Token 215: ' chaque' (ID: 21194)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.38227444887161255
    2. ' i' → logprob: -1.2572743892669678
    3. '#' → logprob: -5.257274627685547
    4. 'p' → logprob: -5.632274627685547
    5. ' ' → logprob: -5.757274627685547
    6. '_' → logprob: -5.757274627685547
    7. ' chaque' → logprob: -6.507274627685547
    8. 'l' → logprob: -6.632274627685547
    9. '_i' → logprob: -6.882274627685547
    10. ' p' → logprob: -6.882274627685547

Token 216: ' puissance' (ID: 63494)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.468849778175354
    2. ' sommet' → logprob: -1.593849778175354
    3. ' i' → logprob: -2.2188496589660645
    4. 'bit' → logprob: -2.9688496589660645
    5. 'p' → logprob: -3.0938496589660645
    6. 'k' → logprob: -3.4688496589660645
    7. ' p' → logprob: -3.5938496589660645
    8. '2' → logprob: -3.7188496589660645
    9. 'ノ' → logprob: -3.8438496589660645
    10. '頂' → logprob: -3.8438496589660645

Token 217: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.5473445057868958
    2. '#' → logprob: -1.297344446182251
    3. ' de' → logprob: -2.047344446182251
    4. '2' → logprob: -4.67234468460083
    5. ' #' → logprob: -5.17234468460083
    6. 'の' → logprob: -6.92234468460083
    7. '   ' → logprob: -7.04734468460083
    8. ' ' → logprob: -7.54734468460083
    9. ' of' → logprob: -8.172344207763672
    10. '_de' → logprob: -8.297344207763672

Token 218: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.01983928494155407
    2. 'de' → logprob: -4.144839286804199
    3. '２' → logprob: -5.769839286804199
    4. 'p' → logprob: -8.2698392868042
    5. ' ' → logprob: -8.7698392868042
    6. '#' → logprob: -10.2698392868042
    7. ' deux' → logprob: -10.3948392868042
    8. '1' → logprob: -10.6448392868042
    9. '```' → logprob: -10.8323392868042
    10. ' p' → logprob: -10.9573392868042

Token 219: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00962493009865284
    2. 'de' → logprob: -4.75962495803833
    3. '２' → logprob: -7.50962495803833
    4. ' ' → logprob: -8.634624481201172
    5. 'p' → logprob: -8.759624481201172
    6. '#' → logprob: -10.259624481201172
    7. '```' → logprob: -10.884624481201172
    8. ' p' → logprob: -11.384624481201172
    9. ' deux' → logprob: -11.384624481201172
    10. '二' → logprob: -12.072124481201172

Token 220: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5574815273284912
    2. 'の' → logprob: -2.057481527328491
    3. 'p' → logprob: -2.182481527328491
    4. '#' → logprob: -2.307481527328491
    5. 'で' → logprob: -4.18248176574707
    6. 'を' → logprob: -4.30748176574707
    7. 'に' → logprob: -4.55748176574707
    8. '、' → logprob: -4.68248176574707
    9. 'が' → logprob: -5.18248176574707
    10. ',
' → logprob: -5.55748176574707

Token 221: ' des' (ID: 731)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.07256481796503067
    2. 'for' → logprob: -2.6975648403167725
    3. ' #' → logprob: -6.947564601898193
    4. ' for' → logprob: -7.572564601898193
    5. 'pour' → logprob: -8.197565078735352
    6. 'p' → logprob: -8.322565078735352
    7. 'le' → logprob: -9.072565078735352
    8. 'while' → logprob: -9.197565078735352
    9. 'j' → logprob: -9.947565078735352
    10. 'L' → logprob: -10.072565078735352

Token 222: ' ar' (ID: 646)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -1.5354938507080078
    2. '#' → logprob: -2.410493850708008
    3. 'for' → logprob: -2.410493850708008
    4. 's' → logprob: -3.285493850708008
    5. 'are' → logprob: -3.285493850708008
    6. '辺' → logprob: -3.410493850708008
    7. ' sommet' → logprob: -3.535493850708008
    8. ' ar' → logprob: -3.535493850708008
    9. '```' → logprob: -3.535493850708008
    10. 'som' → logprob: -3.660493850708008

Token 223: 'êtes' (ID: 23720)
  Prédit: 'êtes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êtes' → logprob: -0.017885815352201462
    2. 'ête' → logprob: -4.767885684967041
    3. 'êt' → logprob: -5.142885684967041
    4. 'ê' → logprob: -6.017885684967041
    5. 'êts' → logprob: -8.7678861618042
    6. 'e' → logprob: -9.1428861618042
    7. 'r' → logprob: -9.2678861618042
    8. 'cs' → logprob: -9.6428861618042
    9. 'es' → logprob: -9.7678861618042
    10. 'ètes' → logprob: -9.8928861618042

Token 224: ' multiples' (ID: 70720)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6457856297492981
    2. 'for' → logprob: -0.7707856297492981
    3. ' for' → logprob: -5.270785808563232
    4. 'pour' → logprob: -6.020785808563232
    5. ' #' → logprob: -6.895785808563232
    6. '追加' → logprob: -7.020785808563232
    7. 'aj' → logprob: -7.645785808563232
    8. ',' → logprob: -7.770785808563232
    9. 'を' → logprob: -7.770785808563232
    10. 's' → logprob: -8.020785331726074

Token 225: ' sont' (ID: 5242)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8514417409896851
    2. 'for' → logprob: -1.601441740989685
    3. 'を' → logprob: -2.1014418601989746
    4. ',' → logprob: -2.2264418601989746
    5. 'が' → logprob: -2.8514418601989746
    6. 'の' → logprob: -3.3514418601989746
    7. ' を' → logprob: -3.7264418601989746
    8. ' for' → logprob: -5.351441860198975
    9. '追加' → logprob: -5.601441860198975
    10. ' #' → logprob: -5.976441860198975

Token 226: ' constr' (ID: 32409)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6336817741394043
    2. 'aj' → logprob: -1.0086817741394043
    3. ' ajout' → logprob: -2.5086817741394043
    4. ' ajouté' → logprob: -4.633681774139404
    5. ' #' → logprob: -5.133681774139404
    6. '追加' → logprob: -6.133681774139404
    7. ' ' → logprob: -6.758681774139404
    8. 'for' → logprob: -7.508681774139404
    9. 'à' → logprob: -7.758681774139404
    10. ' aj' → logprob: -7.883681774139404

Token 227: 'uites' (ID: 93838)
  Prédit: 'ites'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ites' → logprob: -0.32773423194885254
    2. 'uites' → logprob: -1.5777342319488525
    3. 'it' → logprob: -3.2027342319488525
    4. 'ite' → logprob: -4.077733993530273
    5. 'its' → logprob: -5.702733993530273
    6. 'uit' → logprob: -5.827733993530273
    7. 'o' → logprob: -6.577733993530273
    8. 'oit' → logprob: -6.577733993530273
    9. '#' → logprob: -6.702733993530273
    10. 'u' → logprob: -6.952733993530273

Token 228: '.
' (ID: 558)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.028990432620048523
    2. '#' → logprob: -4.278990268707275
    3. ' for' → logprob: -4.903990268707275
    4. ',' → logprob: -5.653990268707275
    5. 'while' → logprob: -5.778990268707275
    6. ':' → logprob: -8.903990745544434
    7. 'pour' → logprob: -9.403990745544434
    8. ' while' → logprob: -9.778990745544434
    9. '.' → logprob: -9.903990745544434
    10. 'p' → logprob: -9.903990745544434

Token 229: '"""' (ID: 29376)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01045460905879736
    2. ' for' → logprob: -5.5104546546936035
    3. 'while' → logprob: -5.7604546546936035
    4. '#' → logprob: -6.0104546546936035
    5. 'i' → logprob: -8.510454177856445
    6. ',' → logprob: -8.760454177856445
    7. 'p' → logprob: -9.510454177856445
    8. 'f' → logprob: -9.760454177856445
    9. ':' → logprob: -9.760454177856445
    10. ' while' → logprob: -10.135454177856445

Token 230: ' ' (ID: 220)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0714927539229393
    2. 'while' → logprob: -2.6964926719665527
    3. '#' → logprob: -7.571492671966553
    4. ' for' → logprob: -7.821492671966553
    5. ' while' → logprob: -8.821493148803711
    6. 'p' → logprob: -8.946493148803711
    7. '次' → logprob: -9.446493148803711
    8. '現在' → logprob: -10.321493148803711
    9. 'pour' → logprob: -10.571493148803711
    10. 'Pour' → logprob: -10.696493148803711

Token 231: '2' (ID: 17)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8745554685592651
    2. '2' → logprob: -1.9995554685592651
    3. '次' → logprob: -2.7495555877685547
    4. '各' → logprob: -2.7495555877685547
    5. 'n' → logprob: -3.2495555877685547
    6. 'p' → logprob: -3.2495555877685547
    7. 'while' → logprob: -3.3745555877685547
    8. 'ある' → logprob: -3.4995555877685547
    9. 'ステ' → logprob: -3.7495555877685547
    10. '２' → logprob: -4.374555587768555

Token 232: 'べ' (ID: 55078)
  Prédit: 'の'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'の' → logprob: -0.5491421222686768
    2. '**' → logprob: -0.9241421222686768
    3. '^' → logprob: -5.049141883850098
    4. ' **' → logprob: -5.299141883850098
    5. '進' → logprob: -5.549141883850098
    6. 'つ' → logprob: -6.174141883850098
    7. ' の' → logprob: -6.299141883850098
    8. '倍' → logprob: -7.174141883850098
    9. '
' → logprob: -7.549141883850098
    10. '次' → logprob: -7.799141883850098

Token 233: 'き' (ID: 11852)
  Prédit: 'き'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'き' → logprob: -0.06185014173388481
    2. 'つ' → logprob: -3.561850070953369
    3. 'た' → logprob: -4.686850070953369
    4. '```' → logprob: -4.811850070953369
    5. 'の' → logprob: -6.061850070953369
    6. 'キ' → logprob: -6.436850070953369
    7. '乗' → logprob: -6.436850070953369
    8. 'きを' → logprob: -6.561850070953369
    9. 'ー' → logprob: -7.561850070953369
    10. '^' → logprob: -7.811850070953369

Token 234: 'の' (ID: 3385)
  Prédit: 'の'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'の' → logprob: -0.23404616117477417
    2. '"""' → logprob: -2.859046220779419
    3. 'ご' → logprob: -3.734046220779419
    4. 'で' → logprob: -3.734046220779419
    5. '乗' → logprob: -3.734046220779419
    6. 'に' → logprob: -4.48404598236084
    7. '」' → logprob: -4.60904598236084
    8. 'について' → logprob: -4.73404598236084
    9. 'を' → logprob: -4.98404598236084
    10. '数' → logprob: -5.10904598236084

Token 235: 'と' (ID: 5330)
  Prédit: '数'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '数' → logprob: -1.3367611169815063
    2. '段' → logprob: -2.336760997772217
    3. '#' → logprob: -2.711760997772217
    4. '増' → logprob: -2.711760997772217
    5. 'ステ' → logprob: -2.836760997772217
    6. 'た' → logprob: -3.086760997772217
    7. 'べ' → logprob: -3.336760997772217
    8. '指数' → logprob: -3.461760997772217
    9. '回' → logprob: -3.586760997772217
    10. 'n' → logprob: -3.586760997772217

Token 236: 'き' (ID: 11852)
  Prédit: 'き'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'き' → logprob: -0.7673341035842896
    2. 'う' → logprob: -1.3923341035842896
    3. 'と' → logprob: -2.392333984375
    4. 'り' → logprob: -3.017333984375
    5. '```' → logprob: -3.017333984375
    6. 'ころ' → logprob: -3.392333984375
    7. 'し' → logprob: -3.517333984375
    8. 'こ' → logprob: -5.017333984375
    9. 'して' → logprob: -5.267333984375
    10. 'ご' → logprob: -5.517333984375

Token 237: '多' (ID: 6183)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6516317129135132
    2. 'に' → logprob: -2.0266318321228027
    3. 'の' → logprob: -2.4016318321228027
    4. ',' → logprob: -2.9016318321228027
    5. '"""' → logprob: -3.0266318321228027
    6. 'まで' → logprob: -3.7766318321228027
    7. 'で' → logprob: -4.151631832122803
    8. '   ' → logprob: -4.526631832122803
    9. 'から' → logprob: -4.651631832122803
    10. ' for' → logprob: -4.651631832122803

Token 238: '重' (ID: 4948)
  Prédit: '数'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '数' → logprob: -0.34372568130493164
    2. 'く' → logprob: -1.9687256813049316
    3. '辺' → logprob: -3.0937256813049316
    4. 'い' → logprob: -3.2187256813049316
    5. '様' → logprob: -4.093725681304932
    6. '重' → logprob: -5.093725681304932
    7. '```' → logprob: -5.343725681304932
    8. '
' → logprob: -5.593725681304932
    9. '分' → logprob: -5.843725681304932
    10. '#' → logprob: -6.093725681304932

Token 239: '辺' (ID: 182980)
  Prédit: '辺'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '辺' → logprob: -0.17276501655578613
    2. '```' → logprob: -2.922765016555786
    3. '"""' → logprob: -3.547765016555786
    4. '#' → logprob: -3.922765016555786
    5. 'エ' → logprob: -4.047764778137207
    6. 'な' → logprob: -4.672764778137207
    7. 'edges' → logprob: -4.672764778137207
    8. 'の' → logprob: -5.547764778137207
    9. '枝' → logprob: -6.547764778137207
    10. 'edge' → logprob: -6.672764778137207

Token 240: '
' (ID: 198)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.06407193094491959
    2. 'for' → logprob: -3.5640718936920166
    3. 'を' → logprob: -4.314072132110596
    4. '"' → logprob: -5.064072132110596
    5. 'が' → logprob: -5.439072132110596
    6. ' """' → logprob: -5.689072132110596
    7. 'の' → logprob: -6.064072132110596
    8. '"""
' → logprob: -7.064072132110596
    9. '」' → logprob: -7.814072132110596
    10. '#' → logprob: -7.939072132110596

Token 241: '  ' (ID: 256)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.017559412866830826
    2. 'for' → logprob: -4.39255952835083
    3. ' """' → logprob: -5.64255952835083
    4. ' for' → logprob: -7.64255952835083
    5. '"' → logprob: -7.76755952835083
    6. '"""
' → logprob: -8.892559051513672
    7. '#' → logprob: -9.642559051513672
    8. 'の' → logprob: -9.892559051513672
    9. 'while' → logprob: -9.892559051513672
    10. 'を' → logprob: -10.142559051513672

Token 242: ' ' (ID: 220)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.1478469967842102
    2. 'for' → logprob: -2.0228469371795654
    3. 'while' → logprob: -6.5228471755981445
    4. ' """' → logprob: -6.6478471755981445
    5. ' for' → logprob: -6.7728471755981445
    6. '"' → logprob: -7.8978471755981445
    7. '"""
' → logprob: -8.147847175598145
    8. '""' → logprob: -8.772847175598145
    9. '#' → logprob: -9.772847175598145
    10. '```' → logprob: -9.772847175598145

Token 243: '0' (ID: 15)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.015319328755140305
    2. 'while' → logprob: -5.140319347381592
    3. ' for' → logprob: -5.265319347381592
    4. '"""' → logprob: -5.515319347381592
    5. ' while' → logprob: -9.890318870544434
    6. ' """' → logprob: -10.765318870544434
    7. '"""
' → logprob: -10.765318870544434
    8. '   ' → logprob: -10.890318870544434
    9. '```' → logprob: -11.265318870544434
    10. '""' → logprob: -12.015318870544434

Token 244: '    ' (ID: 257)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0329673290252686
    2. '"""' → logprob: -1.2829673290252686
    3. ' for' → logprob: -1.7829673290252686
    4. ' """' → logprob: -1.9079673290252686
    5. ' ' → logprob: -4.407967567443848
    6. 'から' → logprob: -4.907967567443848
    7. 'の' → logprob: -5.282967567443848
    8. '
' → logprob: -5.907967567443848
    9. ')' → logprob: -6.532967567443848
    10. '   ' → logprob: -6.532967567443848

Token 245: ' ' (ID: 220)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.3556349277496338
    2. ' """' → logprob: -2.355634927749634
    3. 'for' → logprob: -2.980634927749634
    4. 'から' → logprob: -3.855634927749634
    5. '"""
' → logprob: -3.980634927749634
    6. ' ' → logprob: -4.605634689331055
    7. 'の' → logprob: -4.605634689331055
    8. ',' → logprob: -4.730634689331055
    9. '
' → logprob: -4.730634689331055
    10. 'つ' → logprob: -4.855634689331055

Token 246: '0' (ID: 15)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.8491347432136536
    2. 'for' → logprob: -0.9741347432136536
    3. ' for' → logprob: -2.349134683609009
    4. ' """' → logprob: -3.099134683609009
    5. 'から' → logprob: -4.849134922027588
    6. '"""
' → logprob: -4.849134922027588
    7. ' ' → logprob: -4.849134922027588
    8. '   ' → logprob: -5.599134922027588
    9. 'の' → logprob: -5.724134922027588
    10. ':' → logprob: -5.724134922027588

Token 247: '    ' (ID: 257)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.25915566086769104
    2. ' """' → logprob: -2.384155750274658
    3. 'for' → logprob: -2.509155750274658
    4. ' for' → logprob: -3.884155750274658
    5. '"""
' → logprob: -4.759155750274658
    6. ' """
' → logprob: -5.384155750274658
    7. ' ' → logprob: -5.634155750274658
    8. '
' → logprob: -5.759155750274658
    9. '  ' → logprob: -5.884155750274658
    10. '   ' → logprob: -6.384155750274658

Token 248: ' ' (ID: 220)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.27717703580856323
    2. ' """' → logprob: -1.777177095413208
    3. ' ' → logprob: -3.652177095413208
    4. '  ' → logprob: -3.777177095413208
    5. '   ' → logprob: -5.152176856994629
    6. '
' → logprob: -5.777176856994629
    7. '"""
' → logprob: -6.402176856994629
    8. ')' → logprob: -6.527176856994629
    9. ' """
' → logprob: -6.777176856994629
    10. 'for' → logprob: -6.902176856994629

Token 249: '0' (ID: 15)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.10763795673847198
    2. 'for' → logprob: -3.107637882232666
    3. ' """' → logprob: -3.482637882232666
    4. '  ' → logprob: -4.982637882232666
    5. ' ' → logprob: -5.482637882232666
    6. '"""
' → logprob: -5.732637882232666
    7. '   ' → logprob: -5.857637882232666
    8. ' for' → logprob: -6.857637882232666
    9. ')' → logprob: -6.857637882232666
    10. '
' → logprob: -6.982637882232666

Token 250: '    ' (ID: 257)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.1598786562681198
    2. ' """' → logprob: -2.409878730773926
    3. '  ' → logprob: -3.659878730773926
    4. '   ' → logprob: -5.159878730773926
    5. ' ' → logprob: -5.159878730773926
    6. '"""
' → logprob: -5.284878730773926
    7. '
' → logprob: -5.284878730773926
    8. '"' → logprob: -5.909878730773926
    9. ' """
' → logprob: -6.159878730773926
    10. ')' → logprob: -6.909878730773926

Token 251: ' ' (ID: 220)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.17087377607822418
    2. ' """' → logprob: -2.5458738803863525
    3. '  ' → logprob: -3.1708738803863525
    4. ' ' → logprob: -4.420873641967773
    5. '   ' → logprob: -4.920873641967773
    6. 'for' → logprob: -5.545873641967773
    7. '"""
' → logprob: -5.670873641967773
    8. '"' → logprob: -6.295873641967773
    9. ')' → logprob: -6.795873641967773
    10. '
' → logprob: -6.920873641967773

Token 252: '0' (ID: 15)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.18019500374794006
    2. ' """' → logprob: -2.8051950931549072
    3. '  ' → logprob: -3.3051950931549072
    4. '"""
' → logprob: -3.6801950931549072
    5. ' ' → logprob: -4.305194854736328
    6. '   ' → logprob: -4.805194854736328
    7. ' """
' → logprob: -5.430194854736328
    8. '"' → logprob: -5.430194854736328
    9. '
' → logprob: -6.055194854736328
    10. 'for' → logprob: -6.680194854736328

Token 253: ' ' (ID: 220)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.9497847557067871
    2. '  ' → logprob: -1.074784755706787
    3. ' """' → logprob: -2.199784755706787
    4. '   ' → logprob: -2.324784755706787
    5. ' ' → logprob: -3.324784755706787
    6. '
' → logprob: -5.324784755706787
    7. ' "' → logprob: -5.449784755706787
    8. '"' → logprob: -5.824784755706787
    9. '"""
' → logprob: -6.449784755706787
    10. ')' → logprob: -6.574784755706787

Token 254: ' ...
' (ID: 12646)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.16066601872444153
    2. 'for' → logprob: -2.660665988922119
    3. ' """' → logprob: -3.285665988922119
    4. '  ' → logprob: -4.035665988922119
    5. ' for' → logprob: -4.910665988922119
    6. 'while' → logprob: -5.410665988922119
    7. '"' → logprob: -5.910665988922119
    8. ' while' → logprob: -6.535665988922119
    9. '   ' → logprob: -6.660665988922119
    10. '"""
' → logprob: -6.660665988922119

Token 255: '1' (ID: 16)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3288179337978363
    2. 'while' → logprob: -1.9538179636001587
    3. '"""' → logprob: -2.078817844390869
    4. ' for' → logprob: -5.203817844390869
    5. ' while' → logprob: -5.828817844390869
    6. '
' → logprob: -6.828817844390869
    7. '"""
' → logprob: -6.828817844390869
    8. '"' → logprob: -7.578817844390869
    9. '#' → logprob: -7.703817844390869
    10. '  ' → logprob: -8.203818321228027

Token 256: ' ===' (ID: 3530)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7235980033874512
    2. '  ' → logprob: -2.098598003387451
    3. ' for' → logprob: -2.473598003387451
    4. 'while' → logprob: -3.098598003387451
    5. ')' → logprob: -3.223598003387451
    6. ' ' → logprob: -3.348598003387451
    7. '   ' → logprob: -3.473598003387451
    8. '2' → logprob: -3.598598003387451
    9. '"""' → logprob: -3.598598003387451
    10. ' while' → logprob: -3.973598003387451

Token 257: ' ' (ID: 220)
  Prédit: ' ==='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ===' → logprob: -1.8984930515289307
    2. '===' → logprob: -1.8984930515289307
    3. ' ' → logprob: -2.2734930515289307
    4. '---' → logprob: -2.3984930515289307
    5. '--' → logprob: -2.5234930515289307
    6. ' --' → logprob: -2.7734930515289307
    7. '  ' → logprob: -2.8984930515289307
    8. '2' → logprob: -2.8984930515289307
    9. ' ---' → logprob: -3.1484930515289307
    10. '1' → logprob: -3.6484930515289307

Token 258: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2889783978462219
    2. '2' → logprob: -2.163978338241577
    3. ' ' → logprob: -2.288978338241577
    4. '0' → logprob: -3.663978338241577
    5. '>' → logprob: -6.163978576660156
    6. 'p' → logprob: -6.163978576660156
    7. ' p' → logprob: -6.413978576660156
    8. '--' → logprob: -6.788978576660156
    9. '=' → logprob: -7.038978576660156
    10. '---' → logprob: -8.413978576660156

Token 259: ' ===' (ID: 3530)
  Prédit: ' ==='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ===' → logprob: -0.7468154430389404
    2. '  ' → logprob: -1.7468154430389404
    3. '===' → logprob: -2.2468154430389404
    4. ' ' → logprob: -2.6218154430389404
    5. '    ' → logprob: -3.4968154430389404
    6. '==' → logprob: -3.4968154430389404
    7. '   ' → logprob: -3.6218154430389404
    8. ' ==' → logprob: -4.6218156814575195
    9. ' =' → logprob: -4.8718156814575195
    10. ' >' → logprob: -4.9968156814575195

Token 260: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03486998751759529
    2. '3' → logprob: -3.659869909286499
    3. '2' → logprob: -4.909870147705078
    4. '1' → logprob: -7.534870147705078
    5. '...' → logprob: -8.534870147705078
    6. ' ...' → logprob: -8.659870147705078
    7. '0' → logprob: -9.534870147705078
    8. '>' → logprob: -10.034870147705078
    9. ' N' → logprob: -10.284870147705078
    10. '4' → logprob: -10.847370147705078

Token 261: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.11117372661828995
    2. '4' → logprob: -2.361173629760742
    3. ' ' → logprob: -4.736173629760742
    4. '2' → logprob: -6.986173629760742
    5. '1' → logprob: -7.236173629760742
    6. '0' → logprob: -8.111173629760742
    7. '...' → logprob: -9.111173629760742
    8. '7' → logprob: -11.611173629760742
    9. '"""' → logprob: -11.861173629760742
    10. '>' → logprob: -11.861173629760742

Token 262: ' ===' (ID: 3530)
  Prédit: '  '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '  ' → logprob: -0.6678569316864014
    2. ' while' → logprob: -1.6678569316864014
    3. 'while' → logprob: -1.9178569316864014
    4. '"""' → logprob: -3.4178569316864014
    5. ' p' → logprob: -3.7928569316864014
    6. 'for' → logprob: -3.9178569316864014
    7. ' for' → logprob: -4.4178571701049805
    8. 'p' → logprob: -4.7928571701049805
    9. ' ' → logprob: -4.9178571701049805
    10. '#' → logprob: -5.0428571701049805

Token 263: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.4814472496509552
    2. ' ' → logprob: -0.9814472198486328
    3. '...' → logprob: -5.106447219848633
    4. '  ' → logprob: -7.481447219848633
    5. '<|end|>' → logprob: -8.356447219848633
    6. ' ...' → logprob: -8.606447219848633
    7. '2' → logprob: -9.606447219848633
    8. '```' → logprob: -9.981447219848633
    9. ' N' → logprob: -10.731447219848633
    10. '<|end|>' → logprob: -10.856447219848633

Token 264: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.005769276991486549
    2. ' ' → logprob: -5.7557692527771
    3. '...' → logprob: -6.0057692527771
    4. ' ...' → logprob: -10.505769729614258
    5. '…' → logprob: -11.068269729614258
    6. '<|end|>' → logprob: -11.255769729614258
    7. '  ' → logprob: -11.630769729614258
    8. '４' → logprob: -11.880769729614258
    9. '.' → logprob: -12.068269729614258
    10. '<|end|>' → logprob: -12.380769729614258

Token 265: ' ===' (ID: 3530)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -1.1037588119506836
    2. '  ' → logprob: -1.3537588119506836
    3. 'for' → logprob: -2.2287588119506836
    4. ' for' → logprob: -2.8537588119506836
    5. '"""
' → logprob: -2.8537588119506836
    6. ' """' → logprob: -3.1037588119506836
    7. '")' → logprob: -3.9787588119506836
    8. '#' → logprob: -4.228758811950684
    9. 'while' → logprob: -4.353758811950684
    10. ' """
' → logprob: -4.603758811950684

Token 266: ' ' (ID: 220)
  Prédit: '...'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '...' → logprob: -0.36838284134864807
    2. ' ...' → logprob: -1.7433828115463257
    3. '4' → logprob: -2.4933829307556152
    4. '5' → logprob: -3.4933829307556152
    5. ' ' → logprob: -3.9933829307556152
    6. '.' → logprob: -8.243382453918457
    7. '…' → logprob: -8.493382453918457
    8. '....' → logprob: -8.743382453918457
    9. '  ' → logprob: -8.743382453918457
    10. '#' → logprob: -8.993382453918457

Token 267: '5' (ID: 20)
  Prédit: '...'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '...' → logprob: -0.24182645976543427
    2. '5' → logprob: -1.6168264150619507
    3. '4' → logprob: -4.36682653427124
    4. ' ...' → logprob: -6.61682653427124
    5. ' ' → logprob: -6.74182653427124
    6. '…' → logprob: -7.86682653427124
    7. '....' → logprob: -8.866826057434082
    8. '```' → logprob: -9.366826057434082
    9. '"""' → logprob: -9.491826057434082
    10. '#' → logprob: -9.991826057434082

Token 268: ' ...
' (ID: 12646)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2855159342288971
    2. 'while' → logprob: -1.5355159044265747
    3. ' for' → logprob: -3.9105160236358643
    4. ' while' → logprob: -4.910515785217285
    5. '"""' → logprob: -5.660515785217285
    6. '#' → logprob: -7.285515785217285
    7. '  ' → logprob: -7.910515785217285
    8. '
' → logprob: -8.535515785217285
    9. ')' → logprob: -9.035515785217285
    10. ',' → logprob: -9.035515785217285

Token 269: '  ' (ID: 256)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.7972050905227661
    2. 'for' → logprob: -0.9222050905227661
    3. '"""' → logprob: -1.9222050905227661
    4. ' while' → logprob: -6.047204971313477
    5. ' for' → logprob: -6.422204971313477
    6. '#' → logprob: -7.547204971313477
    7. '"""
' → logprob: -7.672204971313477
    8. '""' → logprob: -8.922204971313477
    9. '```' → logprob: -8.922204971313477
    10. ' """' → logprob: -9.672204971313477

Token 270: ' ' (ID: 220)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.5630722045898438
    2. 'for' → logprob: -1.0630722045898438
    3. 'while' → logprob: -3.0630722045898438
    4. '"""
' → logprob: -4.438072204589844
    5. ' for' → logprob: -4.813072204589844
    6. '  ' → logprob: -5.438072204589844
    7. ' while' → logprob: -5.938072204589844
    8. ')' → logprob: -6.063072204589844
    9. ' """' → logprob: -6.188072204589844
    10. '#' → logprob: -6.313072204589844

Token 271: '1' (ID: 16)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.28207603096961975
    2. 'for' → logprob: -1.5320760011672974
    3. '"""' → logprob: -3.907076120376587
    4. ' while' → logprob: -4.907075881958008
    5. ' for' → logprob: -7.032075881958008
    6. '"""
' → logprob: -7.532075881958008
    7. '#' → logprob: -8.407075881958008
    8. ')' → logprob: -8.907075881958008
    9. '   ' → logprob: -9.907075881958008
    10. '```' → logprob: -9.907075881958008

Token 272: '    ' (ID: 257)
  Prédit: '  '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '  ' → logprob: -0.7205381989479065
    2. 'for' → logprob: -1.7205381393432617
    3. ' for' → logprob: -1.9705381393432617
    4. ' ' → logprob: -2.5955381393432617
    5. ' p' → logprob: -3.7205381393432617
    6. ',' → logprob: -3.9705381393432617
    7. ' while' → logprob: -4.470538139343262
    8. '   ' → logprob: -4.470538139343262
    9. 'while' → logprob: -4.970538139343262
    10. ' edges' → logprob: -5.095538139343262

Token 273: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.34965622425079346
    2. ' ' → logprob: -1.8496562242507935
    3. '0' → logprob: -2.599656105041504
    4. '1' → logprob: -3.099656105041504
    5. '  ' → logprob: -4.349656105041504
    6. ' p' → logprob: -5.974656105041504
    7. '    ' → logprob: -7.599656105041504
    8. '...' → logprob: -7.724656105041504
    9. 'p' → logprob: -7.849656105041504
    10. '   ' → logprob: -8.224656105041504

Token 274: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.1615960597991943
    2. '1' → logprob: -1.2865960597991943
    3. ' ' → logprob: -1.4115960597991943
    4. '  ' → logprob: -2.0365960597991943
    5. '0' → logprob: -4.036596298217773
    6. '   ' → logprob: -4.786596298217773
    7. '    ' → logprob: -5.661596298217773
    8. '     ' → logprob: -6.786596298217773
    9. '...' → logprob: -7.161596298217773
    10. '"""' → logprob: -7.661596298217773

Token 275: '    ' (ID: 257)
  Prédit: '  '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '  ' → logprob: -0.4986133575439453
    2. '   ' → logprob: -2.1236133575439453
    3. '    ' → logprob: -2.2486133575439453
    4. ' ' → logprob: -2.4986133575439453
    5. ' """' → logprob: -3.3736133575439453
    6. '"""' → logprob: -3.6236133575439453
    7. ' )' → logprob: -5.373613357543945
    8. ')' → logprob: -5.498613357543945
    9. '...' → logprob: -6.123613357543945
    10. ' p' → logprob: -6.373613357543945

Token 276: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.6066476702690125
    2. '4' → logprob: -1.2316477298736572
    3. ' ' → logprob: -1.9816477298736572
    4. '  ' → logprob: -4.106647491455078
    5. '   ' → logprob: -6.106647491455078
    6. '...' → logprob: -6.606647491455078
    7. '    ' → logprob: -6.606647491455078
    8. '6' → logprob: -6.731647491455078
    9. '1' → logprob: -7.106647491455078
    10. '2' → logprob: -7.231647491455078

Token 277: '4' (ID: 19)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.9778313040733337
    2. '3' → logprob: -1.4778313636779785
    3. '  ' → logprob: -1.9778313636779785
    4. ' ' → logprob: -2.1028313636779785
    5. '   ' → logprob: -2.1028313636779785
    6. '4' → logprob: -5.6028313636779785
    7. '     ' → logprob: -5.7278313636779785
    8. '1' → logprob: -6.7278313636779785
    9. ' p' → logprob: -6.9778313636779785
    10. '"""' → logprob: -7.3528313636779785

Token 278: '    ' (ID: 257)
  Prédit: '  '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '  ' → logprob: -0.20276200771331787
    2. '   ' → logprob: -3.0777621269226074
    3. ' ' → logprob: -3.3277621269226074
    4. ' """' → logprob: -3.3277621269226074
    5. '"""' → logprob: -3.8277621269226074
    6. ' )' → logprob: -4.327762126922607
    7. ')' → logprob: -4.327762126922607
    8. '    ' → logprob: -5.577762126922607
    9. ' edges' → logprob: -5.952762126922607
    10. ' p' → logprob: -6.827762126922607

Token 279: ' ' (ID: 220)
  Prédit: '8'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.018264319747686386
    2. '4' → logprob: -4.143264293670654
    3. ' ' → logprob: -6.143264293670654
    4. '...' → logprob: -9.893264770507812
    5. '0' → logprob: -12.268264770507812
    6. '7' → logprob: -12.518264770507812
    7. '3' → logprob: -12.518264770507812
    8. '2' → logprob: -12.893264770507812
    9. '  ' → logprob: -13.143264770507812
    10. '   ' → logprob: -13.330764770507812

Token 280: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.48386913537979126
    2. ' ' → logprob: -1.4838690757751465
    3. '4' → logprob: -2.2338690757751465
    4. '    ' → logprob: -3.9838690757751465
    5. '  ' → logprob: -4.2338690757751465
    6. '   ' → logprob: -4.4838690757751465
    7. '...' → logprob: -6.6088690757751465
    8. '"""' → logprob: -6.8588690757751465
    9. '0' → logprob: -7.4838690757751465
    10. '     ' → logprob: -7.8588690757751465

Token 281: ' ' (ID: 220)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.5462988615036011
    2. '  ' → logprob: -1.421298861503601
    3. ' """' → logprob: -2.0462989807128906
    4. 'for' → logprob: -4.296298980712891
    5. ' ' → logprob: -4.421298980712891
    6. '   ' → logprob: -5.046298980712891
    7. '"""
' → logprob: -5.796298980712891
    8. ' for' → logprob: -5.921298980712891
    9. ')' → logprob: -6.171298980712891
    10. '#' → logprob: -6.296298980712891

Token 282: ' ...
' (ID: 12646)
  Prédit: '  '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '  ' → logprob: -0.4184779226779938
    2. '"""' → logprob: -2.168478012084961
    3. '   ' → logprob: -2.668478012084961
    4. ' """' → logprob: -2.918478012084961
    5. ' ' → logprob: -3.043478012084961
    6. ' p' → logprob: -4.418478012084961
    7. '...' → logprob: -4.793478012084961
    8. 'p' → logprob: -5.043478012084961
    9. ')' → logprob: -5.168478012084961
    10. '    ' → logprob: -5.418478012084961

Token 283: '"""

' (ID: 34508)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6250791549682617
    2. 'while' → logprob: -1.2500791549682617
    3. '"""' → logprob: -1.7500791549682617
    4. '"""
' → logprob: -5.625079154968262
    5. ' for' → logprob: -8.250079154968262
    6. ' while' → logprob: -8.250079154968262
    7. '""' → logprob: -8.750079154968262
    8. '"' → logprob: -9.500079154968262
    9. '#' → logprob: -9.750079154968262
    10. '```' → logprob: -10.000079154968262

Token 284: '#' (ID: 2)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.20144541561603546
    2. 'for' → logprob: -1.701445460319519
    3. 'i' → logprob: -10.951445579528809
    4. ' while' → logprob: -11.701445579528809
    5. '#' → logprob: -13.076445579528809
    6. 'wh' → logprob: -13.951445579528809
    7. 'w' → logprob: -14.076445579528809
    8. ' for' → logprob: -14.201445579528809
    9. 'from' → logprob: -14.576445579528809
    10. 'if' → logprob: -15.076445579528809

Token 285: ' Cette' (ID: 27383)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.1269419640302658
    2. 'for' → logprob: -2.1269419193267822
    3. 'i' → logprob: -11.626941680908203
    4. 'import' → logprob: -12.751941680908203
    5. ' while' → logprob: -13.751941680908203
    6. 'from' → logprob: -14.376941680908203
    7. 'wh' → logprob: -15.501941680908203
    8. '#' → logprob: -16.126941680908203
    9. 'w' → logprob: -16.876941680908203
    10. ' for' → logprob: -17.251941680908203

Token 286: ' boucle' (ID: 174211)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.059600334614515305
    2. 'for' → logprob: -2.934600353240967
    3. ' while' → logprob: -5.559600353240967
    4. '#' → logprob: -8.684599876403809
    5. ' for' → logprob: -9.184599876403809
    6. 'ligne' → logprob: -9.309599876403809
    7. 'n' → logprob: -9.684599876403809
    8. '
' → logprob: -9.934599876403809
    9. 'range' → logprob: -10.434599876403809
    10. ' ' → logprob: -10.559599876403809

Token 287: ' ajouter' (ID: 78457)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.023373473435640335
    2. 'while' → logprob: -4.023373603820801
    3. ' for' → logprob: -5.273373603820801
    4. ' while' → logprob: -9.3983736038208
    5. 'pour' → logprob: -15.0233736038208
    6. 'range' → logprob: -16.023372650146484
    7. 'in' → logprob: -16.273372650146484
    8. '=' → logprob: -17.648372650146484
    9. ' pour' → logprob: -17.648372650146484
    10. ':' → logprob: -17.773372650146484

Token 288: 'a' (ID: 64)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6602327823638916
    2. ' for' → logprob: -0.7852327823638916
    3. ' p' → logprob: -4.4102325439453125
    4. ' i' → logprob: -5.0352325439453125
    5. 'while' → logprob: -6.2852325439453125
    6. 'i' → logprob: -6.5352325439453125
    7. ' ' → logprob: -6.9102325439453125
    8. ' while' → logprob: -7.0352325439453125
    9. 'e' → logprob: -7.4102325439453125
    10. ' L' → logprob: -7.5352325439453125

Token 289: ' des' (ID: 731)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4627460837364197
    2. 'while' → logprob: -1.9627461433410645
    3. 'p' → logprob: -2.0877461433410645
    4. ' p' → logprob: -3.0877461433410645
    5. ' for' → logprob: -3.8377461433410645
    6. 'edges' → logprob: -4.5877461433410645
    7. 'L' → logprob: -5.5877461433410645
    8. ' ' → logprob: -5.7127461433410645
    9. ' edges' → logprob: -5.7127461433410645
    10. ' L' → logprob: -5.8377461433410645

Token 290: ' ar' (ID: 646)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.45166701078414917
    2. 'while' → logprob: -2.326667070388794
    3. ' for' → logprob: -2.576667070388794
    4. ' edges' → logprob: -2.951667070388794
    5. 'edges' → logprob: -2.951667070388794
    6. ' p' → logprob: -3.826667070388794
    7. 'range' → logprob: -4.076666831970215
    8. 'p' → logprob: -4.701666831970215
    9. 'i' → logprob: -4.826666831970215
    10. ' while' → logprob: -4.951666831970215

Token 291: 'êtes' (ID: 23720)
  Prédit: 'êtes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êtes' → logprob: -0.0021795271895825863
    2. 'etes' → logprob: -6.6271796226501465
    3. 'tes' → logprob: -7.3771796226501465
    4. 'ête' → logprob: -9.502179145812988
    5. 'p' → logprob: -10.502179145812988
    6. 'r' → logprob: -10.627179145812988
    7. 'ètes' → logprob: -10.877179145812988
    8. 'edges' → logprob: -11.752179145812988
    9. 'ges' → logprob: -11.752179145812988
    10. 'êt' → logprob: -11.877179145812988

Token 292: ' correspondant' (ID: 146058)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5969470739364624
    2. 'while' → logprob: -0.8469470739364624
    3. ' for' → logprob: -4.221947193145752
    4. ' while' → logprob: -5.096947193145752
    5. 'pour' → logprob: -13.721946716308594
    6. ' pour' → logprob: -15.221946716308594
    7. 'range' → logprob: -15.471946716308594
    8. 'i' → logprob: -15.721946716308594
    9. ' in' → logprob: -15.971946716308594
    10. 's' → logprob: -15.971946716308594

Token 293: ' aux' (ID: 5850)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.09996755421161652
    2. ' for' → logprob: -3.3499674797058105
    3. 'for' → logprob: -4.0999674797058105
    4. ' a' → logprob: -4.5999674797058105
    5. ' au' → logprob: -5.0999674797058105
    6. ' p' → logprob: -5.3499674797058105
    7. 'à' → logprob: -5.5999674797058105
    8. ' ' → logprob: -5.5999674797058105
    9. ' aux' → logprob: -5.7249674797058105
    10. '   ' → logprob: -5.8499674797058105

Token 294: ' puiss' (ID: 102546)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8660061955451965
    2. 'p' → logprob: -1.8660061359405518
    3. 'while' → logprob: -1.9910061359405518
    4. 'range' → logprob: -2.2410061359405518
    5. 'for' → logprob: -2.2410061359405518
    6. ' p' → logprob: -4.241006374359131
    7. ' i' → logprob: -4.616006374359131
    8. '2' → logprob: -4.616006374359131
    9. '_' → logprob: -4.866006374359131
    10. ' range' → logprob: -4.866006374359131

Token 295: 'ances' (ID: 3528)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0303104929625988
    2. 'p' → logprob: -5.03031063079834
    3. 'for' → logprob: -5.03031063079834
    4. 'ité' → logprob: -5.28031063079834
    5. 'oc' → logprob: -6.15531063079834
    6. 'i' → logprob: -6.40531063079834
    7. 'ance' → logprob: -6.65531063079834
    8. 'o' → logprob: -7.28031063079834
    9. ' ' → logprob: -7.40531063079834
    10. 'que' → logprob: -7.53031063079834

Token 296: ' de' (ID: 334)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.22450076043605804
    2. ' de' → logprob: -2.0995006561279297
    3. 'de' → logprob: -3.0995006561279297
    4. ' for' → logprob: -3.4745006561279297
    5. ' of' → logprob: -6.59950065612793
    6. 'of' → logprob: -7.72450065612793
    7. ' ' → logprob: -8.59950065612793
    8. 'while' → logprob: -9.09950065612793
    9. 'range' → logprob: -9.59950065612793
    10. 'pour' → logprob: -9.59950065612793

Token 297: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.12213706225156784
    2. ' ' → logprob: -2.3721370697021484
    3. 'de' → logprob: -3.9971370697021484
    4. ' p' → logprob: -6.622137069702148
    5. ' deux' → logprob: -6.747137069702148
    6. ' two' → logprob: -7.372137069702148
    7. 'p' → logprob: -9.622137069702148
    8. 'two' → logprob: -9.872137069702148
    9. '```' → logprob: -10.247137069702148
    10. ' de' → logprob: -11.247137069702148

Token 298: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.004687987733632326
    2. 'de' → logprob: -5.379687786102295
    3. ' ' → logprob: -9.879688262939453
    4. '```' → logprob: -12.004688262939453
    5. ' deux' → logprob: -12.129688262939453
    6. 'two' → logprob: -13.129688262939453
    7. 'p' → logprob: -13.754688262939453
    8. 'Deux' → logprob: -14.254688262939453
    9. '２' → logprob: -15.004688262939453
    10. ' two' → logprob: -15.254688262939453

Token 299: ' <=' (ID: 5017)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.25936180353164673
    2. 'while' → logprob: -1.509361743927002
    3. ' for' → logprob: -5.134361743927002
    4. ' while' → logprob: -6.509361743927002
    5. 'pour' → logprob: -11.13436222076416
    6. '
' → logprob: -13.38436222076416
    7. ' pour' → logprob: -13.50936222076416
    8. 'i' → logprob: -13.50936222076416
    9. '```' → logprob: -14.00936222076416
    10. ':' → logprob: -14.13436222076416

Token 300: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.006716317031532526
    2. ' L' → logprob: -5.006716251373291
    3. ' ' → logprob: -14.75671672821045
    4. '	L' → logprob: -15.75671672821045
    5. ' ' → logprob: -15.88171672821045
    6. '(L' → logprob: -16.506715774536133
    7. '   ' → logprob: -17.006715774536133
    8. '>L' → logprob: -17.006715774536133
    9. '2' → logprob: -17.256715774536133
    10. 'l' → logprob: -17.569215774536133

Token 301: '.
' (ID: 558)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.0056176697835326195
    2. 'for' → logprob: -5.880617618560791
    3. ' while' → logprob: -5.880617618560791
    4. 'wh' → logprob: -11.75561809539795
    5. ' for' → logprob: -12.00561809539795
    6. '
' → logprob: -14.38061809539795
    7. ':' → logprob: -15.00561809539795
    8. 'w' → logprob: -15.50561809539795
    9. '	while' → logprob: -15.50561809539795
    10. ',' → logprob: -16.255617141723633

Token 302: '#' (ID: 2)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.00208721193484962
    2. ' while' → logprob: -6.252087116241455
    3. 'for' → logprob: -8.752087593078613
    4. 'wh' → logprob: -15.002087593078613
    5. ' for' → logprob: -15.752087593078613
    6. '	while' → logprob: -17.502086639404297
    7. 'w' → logprob: -18.127086639404297
    8. 'While' → logprob: -19.127086639404297
    9. '```' → logprob: -19.252086639404297
    10. '
' → logprob: -19.377086639404297

Token 303: ' La' (ID: 3038)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -2.4272752852994017e-05
    2. ' while' → logprob: -10.75002384185791
    3. 'for' → logprob: -12.87502384185791
    4. 'wh' → logprob: -15.25002384185791
    5. '```' → logprob: -17.000024795532227
    6. 'w' → logprob: -19.375024795532227
    7. '	while' → logprob: -19.375024795532227
    8. '
' → logprob: -19.375024795532227
    9. 'While' → logprob: -19.750024795532227
    10. 'from' → logprob: -20.375024795532227

Token 304: ' boucle' (ID: 174211)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.06196970492601395
    2. ' while' → logprob: -2.811969757080078
    3. 'for' → logprob: -13.436969757080078
    4. 'wh' → logprob: -15.686969757080078
    5. ' for' → logprob: -16.311969757080078
    6. 'While' → logprob: -16.436969757080078
    7. 'import' → logprob: -17.186969757080078
    8. 'w' → logprob: -17.811969757080078
    9. '	while' → logprob: -17.811969757080078
    10. '```' → logprob: -17.936969757080078

Token 305: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.01143187377601862
    2. ' while' → logprob: -4.511431694030762
    3. 'for' → logprob: -7.886431694030762
    4. ' for' → logprob: -11.761431694030762
    5. ' =' → logprob: -16.136432647705078
    6. '	while' → logprob: -16.386432647705078
    7. ':' → logprob: -17.011432647705078
    8. '```' → logprob: -17.636432647705078
    9. 'While' → logprob: -17.761432647705078
    10. '=' → logprob: -17.761432647705078

Token 306: ' continue' (ID: 4901)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.07063525915145874
    2. 'p' → logprob: -2.6956353187561035
    3. ' while' → logprob: -8.320634841918945
    4. ' L' → logprob: -9.070634841918945
    5. ' ' → logprob: -9.195634841918945
    6. 'L' → logprob: -9.445634841918945
    7. 'while' → logprob: -9.445634841918945
    8. '(p' → logprob: -10.570634841918945
    9. ':' → logprob: -11.320634841918945
    10. '  ' → logprob: -11.570634841918945

Token 307: ' tant' (ID: 16235)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.3486885726451874
    2. 'p' → logprob: -1.2236886024475098
    3. '(p' → logprob: -9.723688125610352
    4. ' ' → logprob: -9.723688125610352
    5. ' while' → logprob: -10.098688125610352
    6. 'while' → logprob: -10.723688125610352
    7. 'L' → logprob: -11.348688125610352
    8. ' L' → logprob: -11.348688125610352
    9. ' (' → logprob: -11.348688125610352
    10. '  ' → logprob: -11.973688125610352

Token 308: ' que' (ID: 661)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.6907538771629333
    2. ' que' → logprob: -0.9407538771629333
    3. 'p' → logprob: -2.315753936767578
    4. 'que' → logprob: -4.815753936767578
    5. '(p' → logprob: -6.440753936767578
    6. ' (' → logprob: -10.440753936767578
    7. ' ' → logprob: -10.690753936767578
    8. 'Que' → logprob: -11.690753936767578
    9. 'q' → logprob: -12.690753936767578
    10. 'e' → logprob: -12.690753936767578

Token 309: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.03145259991288185
    2. ' p' → logprob: -3.5314526557922363
    3. '2' → logprob: -6.406452655792236
    4. ' ' → logprob: -10.156452178955078
    5. '(p' → logprob: -11.781452178955078
    6. '   ' → logprob: -13.281452178955078
    7. '  ' → logprob: -14.781452178955078
    8. '	p' → logprob: -14.906452178955078
    9. ' (' → logprob: -15.156452178955078
    10. ' ' → logprob: -15.406452178955078

Token 310: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0003317705122753978
    2. ' <=' → logprob: -8.12533187866211
    3. '<=' → logprob: -11.00033187866211
    4. ' <' → logprob: -11.62533187866211
    5. ' ' → logprob: -12.25033187866211
    6. '２' → logprob: -13.12533187866211
    7. 'p' → logprob: -14.12533187866211
    8. '<' → logprob: -14.25033187866211
    9. '_' → logprob: -14.62533187866211
    10. '```' → logprob: -15.37533187866211

Token 311: ' *' (ID: 425)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.1156611517071724
    2. '<=' → logprob: -2.240661144256592
    3. '*' → logprob: -6.365661144256592
    4. ' *' → logprob: -6.990661144256592
    5. ' <' → logprob: -8.86566162109375
    6. '<' → logprob: -9.99066162109375
    7. ' ' → logprob: -12.36566162109375
    8. '<<' → logprob: -14.11566162109375
    9. ' <<=' → logprob: -14.11566162109375
    10. 'le' → logprob: -14.36566162109375

Token 312: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.003401094349101186
    2. ' ' → logprob: -5.753401279449463
    3. '<=' → logprob: -8.878400802612305
    4. ' <=' → logprob: -9.878400802612305
    5. '1' → logprob: -11.128400802612305
    6. '=' → logprob: -11.628400802612305
    7. '```' → logprob: -13.128400802612305
    8. '
' → logprob: -13.753400802612305
    9. '(' → logprob: -14.378400802612305
    10. '10' → logprob: -14.440900802612305

Token 313: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.3425219549390022e-05
    2. ' ' → logprob: -11.37501335144043
    3. '<=' → logprob: -14.12501335144043
    4. '２' → logprob: -15.00001335144043
    5. '=' → logprob: -15.75001335144043
    6. '
' → logprob: -15.75001335144043
    7. '```' → logprob: -16.37501335144043
    8. '+' → logprob: -16.50001335144043
    9. '10' → logprob: -16.81251335144043
    10. '(' → logprob: -17.00001335144043

Token 314: ' (' (ID: 350)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.04933847859501839
    2. '<=' → logprob: -3.0493385791778564
    3. ' <' → logprob: -7.799338340759277
    4. ' ' → logprob: -8.299338340759277
    5. '<' → logprob: -9.924338340759277
    6. ' ≤' → logprob: -11.299338340759277
    7. ' p' → logprob: -12.049338340759277
    8. ')<=' → logprob: -12.549338340759277
    9. ']<=' → logprob: -12.799338340759277
    10. 'p' → logprob: -12.799338340759277

Token 315: 'so' (ID: 786)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10661526769399643
    2. ' <=' → logprob: -2.7316153049468994
    3. '<=' → logprob: -3.7316153049468994
    4. ')<=' → logprob: -4.60661506652832
    5. ' )' → logprob: -6.23161506652832
    6. '）' → logprob: -10.85661506652832
    7. '<' → logprob: -11.10661506652832
    8. 'p' → logprob: -11.10661506652832
    9. ' ' → logprob: -11.48161506652832
    10. 'le' → logprob: -11.48161506652832

Token 316: 'it' (ID: 278)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.6583930253982544
    2. '<=' → logprob: -1.1583930253982544
    3. '<' → logprob: -2.283392906188965
    4. ' <' → logprob: -2.783392906188965
    5. ' ' → logprob: -6.783392906188965
    6. 'u' → logprob: -6.908392906188965
    7. 'le' → logprob: -7.408392906188965
    8. 'i' → logprob: -7.908392906188965
    9. ' )' → logprob: -8.158392906188965
    10. 'e' → logprob: -8.283392906188965

Token 317: ' la' (ID: 557)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.223502278327942
    2. ' <=' → logprob: -1.223502278327942
    3. ' p' → logprob: -1.473502278327942
    4. 'p' → logprob: -1.848502278327942
    5. '<=' → logprob: -4.348502159118652
    6. ' )' → logprob: -5.223502159118652
    7. '2' → logprob: -5.848502159118652
    8. ' ' → logprob: -6.473502159118652
    9. ')<=' → logprob: -6.723502159118652
    10. 'le' → logprob: -7.723502159118652

Token 318: ' prochaine' (ID: 78876)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.8650659918785095
    2. 'p' → logprob: -0.9900659918785095
    3. '2' → logprob: -1.7400660514831543
    4. ')' → logprob: -4.115066051483154
    5. ' ' → logprob: -5.490066051483154
    6. '<=' → logprob: -5.615066051483154
    7. ' <=' → logprob: -5.865066051483154
    8. ' )' → logprob: -6.240066051483154
    9. '<' → logprob: -6.615066051483154
    10. '<p' → logprob: -7.615066051483154

Token 319: ' puissance' (ID: 63494)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.259056031703949
    2. ' <=' → logprob: -2.2590560913085938
    3. ' )' → logprob: -2.2590560913085938
    4. '<=' → logprob: -5.134056091308594
    5. ')<=' → logprob: -5.259056091308594
    6. ' p' → logprob: -5.759056091308594
    7. ' ' → logprob: -5.884056091308594
    8. 'p' → logprob: -7.259056091308594
    9. '）' → logprob: -8.509056091308594
    10. '  ' → logprob: -8.634056091308594

Token 320: ' de' (ID: 334)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.3772607743740082
    2. '<=' → logprob: -1.5022608041763306
    3. ' de' → logprob: -2.502260684967041
    4. 'de' → logprob: -5.127260684967041
    5. 'p' → logprob: -7.377260684967041
    6. ' of' → logprob: -7.502260684967041
    7. 'of' → logprob: -7.627260684967041
    8. ' ' → logprob: -7.627260684967041
    9. '2' → logprob: -7.877260684967041
    10. ' p' → logprob: -8.3772611618042

Token 321: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00872944574803114
    2. ' ' → logprob: -4.758729457855225
    3. 'de' → logprob: -9.508728981018066
    4. ' p' → logprob: -11.008728981018066
    5. 'p' → logprob: -11.883728981018066
    6. ' deux' → logprob: -11.883728981018066
    7. '  ' → logprob: -12.383728981018066
    8. '   ' → logprob: -12.633728981018066
    9. ' two' → logprob: -14.008728981018066
    10. '```' → logprob: -14.258728981018066

Token 322: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00018446780450176448
    2. ' ' → logprob: -8.625184059143066
    3. 'de' → logprob: -13.500184059143066
    4. 'p' → logprob: -13.875184059143066
    5. 'two' → logprob: -14.125184059143066
    6. ' p' → logprob: -14.625184059143066
    7. '  ' → logprob: -15.125184059143066
    8. ' deux' → logprob: -15.125184059143066
    9. '２' → logprob: -15.375184059143066
    10. '```' → logprob: -15.500184059143066

Token 323: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01135325152426958
    2. '<=' → logprob: -5.386353015899658
    3. ' <=' → logprob: -5.761353015899658
    4. ' )' → logprob: -6.386353015899658
    5. ')<=' → logprob: -6.386353015899658
    6. '）' → logprob: -8.636353492736816
    7. ' ' → logprob: -12.761353492736816
    8. '<' → logprob: -13.386353492736816
    9. ')<' → logprob: -13.511353492736816
    10. 'p' → logprob: -13.511353492736816

Token 324: ' est' (ID: 893)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.10732340067625046
    2. '<=' → logprob: -2.357323408126831
    3. ' <' → logprob: -5.107323169708252
    4. '<' → logprob: -6.982323169708252
    5. '<p' → logprob: -9.73232364654541
    6. ' p' → logprob: -10.85732364654541
    7. 'p' → logprob: -11.35732364654541
    8. '*' → logprob: -11.85732364654541
    9. ' ' → logprob: -11.85732364654541
    10. ' *' → logprob: -13.10732364654541

Token 325: ' inférieur' (ID: 191498)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.12769567966461182
    2. '<=' → logprob: -2.1276955604553223
    3. ' p' → logprob: -8.00269603729248
    4. '<' → logprob: -8.75269603729248
    5. 'p' → logprob: -9.00269603729248
    6. ' <' → logprob: -9.25269603729248
    7. ' ' → logprob: -11.25269603729248
    8. '<p' → logprob: -11.50269603729248
    9. ' ≤' → logprob: -11.50269603729248
    10. '≤' → logprob: -12.12769603729248

Token 326: ' ou' (ID: 2031)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.4603950083255768
    2. ' to' → logprob: -2.210395097732544
    3. '=' → logprob: -3.085395097732544
    4. 'à' → logprob: -3.085395097732544
    5. ' <' → logprob: -3.585395097732544
    6. '<=' → logprob: -3.960395097732544
    7. ' <=' → logprob: -3.960395097732544
    8. '<' → logprob: -4.085394859313965
    9. ' =' → logprob: -4.085394859313965
    10. ' p' → logprob: -4.210394859313965

Token 327: ' égal' (ID: 15059)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.021709546446800232
    2. 'égal' → logprob: -4.646709442138672
    3. 'ou' → logprob: -5.271709442138672
    4. '<=' → logprob: -5.396709442138672
    5. 'equal' → logprob: -6.896709442138672
    6. '=L' → logprob: -7.271709442138672
    7. '==' → logprob: -9.146709442138672
    8. 'é' → logprob: -9.396709442138672
    9. ' égal' → logprob: -9.646709442138672
    10. 'ég' → logprob: -10.021709442138672

Token 328: ' à' (ID: 1221)
  Prédit: '(L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -0.30065035820007324
    2. 'L' → logprob: -1.8006503582000732
    3. '(' → logprob: -3.6756503582000732
    4. 'à' → logprob: -3.9256503582000732
    5. ' à' → logprob: -4.175650596618652
    6. '(p' → logprob: -4.425650596618652
    7. 'p' → logprob: -4.425650596618652
    8. 'to' → logprob: -4.925650596618652
    9. ' (' → logprob: -7.050650596618652
    10. ' L' → logprob: -7.550650596618652

Token 329: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.014164329506456852
    2. ' L' → logprob: -4.264164447784424
    3. ' ' → logprob: -14.639163970947266
    4. ' ' → logprob: -15.764163970947266
    5. '	L' → logprob: -16.014163970947266
    6. '   ' → logprob: -17.389163970947266
    7. '  ' → logprob: -17.639163970947266
    8. '```' → logprob: -18.389163970947266
    9. '>L' → logprob: -19.139163970947266
    10. '_L' → logprob: -19.389163970947266

Token 330: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10663744062185287
    2. 'while' → logprob: -2.356637477874756
    3. ' while' → logprob: -5.231637477874756
    4. ':
' → logprob: -6.981637477874756
    5. ' :' → logprob: -8.981637001037598
    6. ' :
' → logprob: -13.356637001037598
    7. ',' → logprob: -13.606637001037598
    8. '	while' → logprob: -13.606637001037598
    9. ':p' → logprob: -14.106637001037598
    10. 'While' → logprob: -14.231637001037598

Token 331: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.0022261450067162514
    2. ' while' → logprob: -6.50222635269165
    3. ':' → logprob: -7.25222635269165
    4. ':
' → logprob: -11.377225875854492
    5. '	while' → logprob: -13.502225875854492
    6. '```' → logprob: -14.127225875854492
    7. 'wh' → logprob: -14.502225875854492
    8. '
' → logprob: -15.752225875854492
    9. '   ' → logprob: -15.877225875854492
    10. '2' → logprob: -15.877225875854492

Token 332: ' L' (ID: 451)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.01253025233745575
    2. 'p' → logprob: -4.387530326843262
    3. ' ' → logprob: -11.137530326843262
    4. '(p' → logprob: -12.887530326843262
    5. ' (' → logprob: -13.137530326843262
    6. ' ' → logprob: -13.512530326843262
    7. '	p' → logprob: -16.262529373168945
    8. '  ' → logprob: -16.762529373168945
    9. '(' → logprob: -16.887529373168945
    10. '2' → logprob: -17.137529373168945

Token 333: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.7055428624153137
    2. '>=' → logprob: -0.7055428624153137
    3. '>' → logprob: -4.580543041229248
    4. ' >' → logprob: -7.330543041229248
    5. ' ' → logprob: -7.955543041229248
    6. ' p' → logprob: -7.955543041229248
    7. 'p' → logprob: -8.33054256439209
    8. '*' → logprob: -9.33054256439209
    9. ' *' → logprob: -9.58054256439209
    10. '2' → logprob: -9.58054256439209

Token 334: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.011754028499126434
    2. ' p' → logprob: -4.886754035949707
    3. '2' → logprob: -5.636754035949707
    4. ' ' → logprob: -7.886754035949707
    5. '(p' → logprob: -9.011754035949707
    6. '   ' → logprob: -9.886754035949707
    7. ' (' → logprob: -11.386754035949707
    8. '(' → logprob: -11.386754035949707
    9. '  ' → logprob: -13.261754035949707
    10. '	p' → logprob: -13.636754035949707

Token 335: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.141186450899113e-05
    2. ' ' → logprob: -10.875020980834961
    3. '_' → logprob: -13.625020980834961
    4. '*' → logprob: -14.875020980834961
    5. 'p' → logprob: -15.125020980834961
    6. '   ' → logprob: -15.625020980834961
    7. '２' → logprob: -16.56252098083496
    8. '₂' → logprob: -17.25002098083496
    9. '۲' → logprob: -17.25002098083496
    10. '```' → logprob: -17.31252098083496

Token 336: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.14304283261299133
    2. ' *' → logprob: -2.018042802810669
    3. '2' → logprob: -8.26804256439209
    4. ' ' → logprob: -9.64304256439209
    5. '<<' → logprob: -10.51804256439209
    6. ' ' → logprob: -11.64304256439209
    7. ' <<' → logprob: -12.51804256439209
    8. '   ' → logprob: -12.76804256439209
    9. '
' → logprob: -13.76804256439209
    10. '```' → logprob: -14.01804256439209

Token 337: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.011048170737922192
    2. ' ' → logprob: -4.511048316955566
    3. '   ' → logprob: -15.511048316955566
    4. '  ' → logprob: -16.38604736328125
    5. ' ' → logprob: -17.13604736328125
    6. '```' → logprob: -17.26104736328125
    7. '２' → logprob: -17.63604736328125
    8. '۲' → logprob: -18.19854736328125
    9. '
' → logprob: -18.38604736328125
    10. '	' → logprob: -19.07354736328125

Token 338: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.5491004129871726e-05
    2. ' ' → logprob: -10.000045776367188
    3. '   ' → logprob: -17.625045776367188
    4. '```' → logprob: -17.875045776367188
    5. '２' → logprob: -18.000045776367188
    6. '۲' → logprob: -18.375045776367188
    7. '  ' → logprob: -18.500045776367188
    8. '
' → logprob: -19.562545776367188
    9. ' ' → logprob: -20.250045776367188
    10. '	' → logprob: -20.562545776367188

Token 339: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0232830997556448
    2. ':
' → logprob: -3.773283004760742
    3. ' :' → logprob: -11.273283004760742
    4. '   ' → logprob: -11.273283004760742
    5. '):' → logprob: -12.148283004760742
    6. '):
' → logprob: -12.523283004760742
    7. ' :
' → logprob: -13.648283004760742
    8. ':
' → logprob: -14.648283004760742
    9. ')' → logprob: -15.148283004760742
    10. ':

' → logprob: -15.273283004760742

Token 340: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006644679233431816
    2. ' for' → logprob: -5.5066447257995605
    3. ' edges' → logprob: -7.1316447257995605
    4. 'for' → logprob: -7.3816447257995605
    5. ' p' → logprob: -7.8816447257995605
    6. 'edges' → logprob: -8.131644248962402
    7. 'p' → logprob: -8.256644248962402
    8. '#' → logprob: -10.256644248962402
    9. '```' → logprob: -10.506644248962402
    10. '   ' → logprob: -10.756644248962402

Token 341: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2476600855588913
    2. '   ' → logprob: -1.9976600408554077
    3. ' for' → logprob: -3.1226601600646973
    4. 'p' → logprob: -3.4976601600646973
    5. '#' (adapté à ' #') → logprob: -5.622660160064697
    6. 'edges' → logprob: -6.622660160064697
    7. ' p' → logprob: -7.247660160064697
    8. 'next' → logprob: -7.247660160064697
    9. 'q' → logprob: -7.872660160064697
    10. 'prev' → logprob: -7.997660160064697

Token 342: ' In' (ID: 730)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16144868731498718
    2. 'edges' → logprob: -2.0364487171173096
    3. 'u' → logprob: -5.4114484786987305
    4. 'p' → logprob: -5.4114484786987305
    5. '#' → logprob: -6.0364484786987305
    6. '   ' → logprob: -6.5364484786987305
    7. 'start' → logprob: -7.1614484786987305
    8. 'i' → logprob: -7.2864484786987305
    9. 'prev' → logprob: -7.4114484786987305
    10. 'next' → logprob: -7.5364484786987305

Token 343: 'cré' (ID: 125389)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -1.1811755895614624
    2. 'for' → logprob: -1.3061755895614624
    3. 'cr' → logprob: -2.181175708770752
    4. 'i' → logprob: -2.306175708770752
    5. 'crement' → logprob: -3.056175708770752
    6. 'ter' → logprob: -3.306175708770752
    7. 'crements' → logprob: -3.931175708770752
    8. '   ' → logprob: -4.181175708770752
    9. 'it' → logprob: -4.181175708770752
    10. 'p' → logprob: -4.431175708770752

Token 344: 'mente' (ID: 4186)
  Prédit: 'ment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ment' → logprob: -0.0026401029899716377
    2. 'mente' → logprob: -6.127640247344971
    3. '   ' → logprob: -9.002639770507812
    4. 'ments' → logprob: -9.127639770507812
    5. 'mentar' → logprob: -9.252639770507812
    6. 'm' → logprob: -9.877639770507812
    7. 'mentation' → logprob: -10.252639770507812
    8. 'mental' → logprob: -11.877639770507812
    9. 'mentor' → logprob: -12.002639770507812
    10. 'men' → logprob: -12.752639770507812

Token 345: ' N' (ID: 478)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.32588228583335876
    2. '   ' → logprob: -2.3258821964263916
    3. 'next' → logprob: -2.7008821964263916
    4. 'N' → logprob: -3.2008821964263916
    5. 'old' → logprob: -3.9508821964263916
    6. 'prev' → logprob: -4.325882434844971
    7. 'new' → logprob: -4.575882434844971
    8. ' p' → logprob: -5.450882434844971
    9. 'edges' → logprob: -5.575882434844971
    10. 'last' → logprob: -6.075882434844971

Token 346: ' de' (ID: 334)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.31347763538360596
    2. ' +=' → logprob: -1.313477635383606
    3. '   ' → logprob: -8.688477516174316
    4. ' *=' → logprob: -11.313477516174316
    5. ',' → logprob: -11.688477516174316
    6. '*=' → logprob: -11.938477516174316
    7. ' ' → logprob: -12.063477516174316
    8. '=' → logprob: -12.063477516174316
    9. '	' → logprob: -12.813477516174316
    10. '```' → logprob: -13.188477516174316

Token 347: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004563750233501196
    2. ' ' → logprob: -5.754563808441162
    3. '2' → logprob: -6.879563808441162
    4. 'p' → logprob: -8.004563331604004
    5. ' p' → logprob: -10.754563331604004
    6. '   ' → logprob: -14.504563331604004
    7. '  ' → logprob: -15.629563331604004
    8. '```' → logprob: -15.754563331604004
    9. '１' → logprob: -16.37956428527832
    10. '10' → logprob: -17.00456428527832

Token 348: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3152708113193512
    2. 'p' → logprob: -1.3152707815170288
    3. '2' → logprob: -6.315270900726318
    4. ' ' → logprob: -9.06527042388916
    5. ' p' → logprob: -9.44027042388916
    6. '(p' → logprob: -13.94027042388916
    7. '   ' → logprob: -14.19027042388916
    8. 'N' → logprob: -15.06527042388916
    9. '  ' → logprob: -15.31527042388916
    10. '	p' → logprob: -15.44027042388916

Token 349: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5838108658790588
    2. '
' → logprob: -0.8338108658790588
    3. 'N' → logprob: -5.583810806274414
    4. '    
' → logprob: -5.958810806274414
    5. '  
' → logprob: -7.958810806274414
    6. '
' → logprob: -8.458810806274414
    7. '   
' → logprob: -8.458810806274414
    8. ' N' → logprob: -8.583810806274414
    9. '```' → logprob: -8.958810806274414
    10. '<|end|>' → logprob: -8.958810806274414

Token 350: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.06689431518316269
    2. 'N' → logprob: -3.566894292831421
    3. '1' → logprob: -4.44189453125
    4. 'each' → logprob: -4.81689453125
    5. ' N' → logprob: -5.44189453125
    6. ' each' → logprob: -5.94189453125
    7. 'p' → logprob: -6.56689453125
    8. 'ch' → logprob: -6.69189453125
    9. 'Chaque' → logprob: -7.06689453125
    10. 'la' → logprob: -7.19189453125

Token 351: ' it' (ID: 480)
  Prédit: ' tour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tour' → logprob: -0.9524033069610596
    2. 'p' → logprob: -1.4524033069610596
    3. 'tour' → logprob: -2.0774033069610596
    4. 'iteration' → logprob: -2.3274033069610596
    5. ' it' → logprob: -2.9524033069610596
    6. ' iteration' → logprob: -3.8274033069610596
    7. '1' → logprob: -4.0774030685424805
    8. ' p' → logprob: -4.3274030685424805
    9. 'N' → logprob: -4.9524030685424805
    10. 'fois' → logprob: -4.9524030685424805

Token 352: 'ération' (ID: 24977)
  Prédit: 'ération'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ération' → logprob: -0.005257595330476761
    2. '   ' → logprob: -6.755257606506348
    3. 'er' → logprob: -6.880257606506348
    4. 'ér' → logprob: -7.505257606506348
    5. '1' → logprob: -7.755257606506348
    6. '+' → logprob: -8.005257606506348
    7. 'érieur' → logprob: -8.130257606506348
    8. 'é' → logprob: -8.130257606506348
    9. 'éré' → logprob: -8.505257606506348
    10. 'érations' → logprob: -8.755257606506348

Token 353: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0017544300062581897
    2. '
' → logprob: -6.626754283905029
    3. '    
' → logprob: -8.126754760742188
    4. 'N' → logprob: -9.376754760742188
    5. ',' → logprob: -11.376754760742188
    6. '   
' → logprob: -12.126754760742188
    7. '```' → logprob: -12.126754760742188
    8. '  
' → logprob: -12.501754760742188
    9. '<|end|>' → logprob: -12.501754760742188
    10. '	N' → logprob: -12.751754760742188

Token 354: ' ce' (ID: 2357)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19762448966503143
    2. 'N' → logprob: -2.072624444961548
    3. 'edges' → logprob: -3.822624444961548
    4. ' edges' → logprob: -4.072624683380127
    5. ' N' → logprob: -4.322624683380127
    6. 'p' → logprob: -7.447624683380127
    7. ' p' → logprob: -8.072624206542969
    8. '```' → logprob: -9.447624206542969
    9. 'n' → logprob: -9.572624206542969
    10. ' ' → logprob: -9.947624206542969

Token 355: ' qui' (ID: 2780)
  Prédit: ' qui'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' qui' → logprob: -0.02936219796538353
    2. 'qui' → logprob: -4.154362201690674
    3. 'n' → logprob: -5.029362201690674
    4. '   ' → logprob: -6.029362201690674
    5. 'N' → logprob: -7.029362201690674
    6. '#' → logprob: -7.029362201690674
    7. ' que' → logprob: -7.279362201690674
    8. ' that' → logprob: -7.529362201690674
    9. 'p' → logprob: -8.404361724853516
    10. ' n' → logprob: -8.654361724853516

Token 356: ' correspond' (ID: 11095)
  Prédit: ' augmente'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' augmente' → logprob: -0.8626102805137634
    2. ' ajoute' → logprob: -1.9876103401184082
    3. ' permet' → logprob: -2.112610340118408
    4. 'N' → logprob: -2.612610340118408
    5. 'aj' → logprob: -2.737610340118408
    6. '#' → logprob: -3.112610340118408
    7. ' ajouter' → logprob: -3.862610340118408
    8. ' augment' → logprob: -3.862610340118408
    9. ' signifie' → logprob: -3.987610340118408
    10. ' N' → logprob: -4.112610340118408

Token 357: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20766842365264893
    2. ' à' → logprob: -1.707668423652649
    3. 'à' → logprob: -5.457668304443359
    4. ' ' → logprob: -7.082668304443359
    5. '  ' → logprob: -7.332668304443359
    6. '    ' → logprob: -8.33266830444336
    7. ' to' → logprob: -9.33266830444336
    8. 'au' → logprob: -10.08266830444336
    9. ' au' → logprob: -10.58266830444336
    10. 'to' → logprob: -11.08266830444336

Token 358: ' ajouter' (ID: 78457)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.13250695168972015
    2. ' N' → logprob: -2.507506847381592
    3. ' ajouter' → logprob: -4.132506847381592
    4. ' la' → logprob: -4.257506847381592
    5. 'aj' → logprob: -5.757506847381592
    6. ' augmenter' → logprob: -6.507506847381592
    7. ' une' → logprob: -6.882506847381592
    8. 'la' → logprob: -6.882506847381592
    9. '#' → logprob: -7.132506847381592
    10. ' ' → logprob: -7.257506847381592

Token 359: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.024634499102830887
    2. ' une' → logprob: -4.02463436126709
    3. 'un' → logprob: -5.39963436126709
    4. ' ' → logprob: -6.77463436126709
    5. '1' → logprob: -7.77463436126709
    6. ' a' → logprob: -9.02463436126709
    7. 'une' → logprob: -9.27463436126709
    8. '   ' → logprob: -9.52463436126709
    9. 'a' → logprob: -10.02463436126709
    10. 'N' → logprob: -12.02463436126709

Token 360: ' nouveau' (ID: 23184)
  Prédit: ' sommet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sommet' → logprob: -0.5767084956169128
    2. 'nou' → logprob: -1.3267085552215576
    3. ' nouveau' → logprob: -2.0767085552215576
    4. 'som' → logprob: -3.7017085552215576
    5. 'n' → logprob: -4.7017083168029785
    6. ' noe' → logprob: -5.3267083168029785
    7. 'no' → logprob: -5.5767083168029785
    8. 'new' → logprob: -6.4517083168029785
    9. 's' → logprob: -6.8267083168029785
    10. ' nouvel' → logprob: -6.9517083168029785

Token 361: ' sommet' (ID: 130502)
  Prédit: ' sommet'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sommet' → logprob: -0.05967210605740547
    2. ' noe' → logprob: -3.1846721172332764
    3. 'som' → logprob: -4.809671878814697
    4. 'n' → logprob: -5.434671878814697
    5. 's' → logprob: -6.434671878814697
    6. 'no' → logprob: -6.559671878814697
    7. ' n' → logprob: -7.809671878814697
    8. 'node' → logprob: -8.559672355651855
    9. ' som' → logprob: -8.934672355651855
    10. ' node' → logprob: -9.184672355651855

Token 362: ' au' (ID: 2791)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00016086915275081992
    2. ',' → logprob: -9.250161170959473
    3. '    
' → logprob: -11.250161170959473
    4. ')' → logprob: -11.375161170959473
    5. '<|end|>' → logprob: -11.500161170959473
    6. 'N' → logprob: -11.625161170959473
    7. '.' → logprob: -12.125161170959473
    8. '
' → logprob: -12.625161170959473
    9. '  ' → logprob: -12.750161170959473
    10. ' N' → logprob: -12.875161170959473

Token 363: ' grap' (ID: 60955)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.0008450066088698804
    2. 'graph' → logprob: -7.500844955444336
    3. ' grap' → logprob: -8.250844955444336
    4. 'le' → logprob: -10.875844955444336
    5. '   ' → logprob: -12.000844955444336
    6. 'N' → logprob: -13.500844955444336
    7. '```' → logprob: -13.625844955444336
    8. 'la' → logprob: -13.875844955444336
    9. ' graph' → logprob: -14.500844955444336
    10. '#' → logprob: -15.125844955444336

Token 364: 'he' (ID: 273)
  Prédit: 'he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.8261418342590332
    2. 'N' → logprob: -1.5761418342590332
    3. '   ' → logprob: -2.326141834259033
    4. 'raph' → logprob: -2.576141834259033
    5. 'aphe' → logprob: -3.076141834259033
    6. 'rap' → logprob: -3.576141834259033
    7. '2' → logprob: -4.076141834259033
    8. ' N' → logprob: -4.201141834259033
    9. 're' → logprob: -4.201141834259033
    10. 'aph' → logprob: -4.326141834259033

Token 365: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0004778592265211046
    2. '
' → logprob: -8.37547779083252
    3. 'N' → logprob: -8.75047779083252
    4. '    
' → logprob: -10.00047779083252
    5. ',' → logprob: -10.50047779083252
    6. ' N' → logprob: -12.25047779083252
    7. ':' → logprob: -13.25047779083252
    8. ')' → logprob: -13.25047779083252
    9. '  ' → logprob: -14.00047779083252
    10. '.' → logprob: -14.00047779083252

Token 366: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0011771318968385458
    2. ' N' → logprob: -7.2511773109436035
    3. 'N' → logprob: -7.7511773109436035
    4. '    
' → logprob: -11.251176834106445
    5. '
' → logprob: -11.501176834106445
    6. 'n' → logprob: -12.501176834106445
    7. '	N' → logprob: -12.501176834106445
    8. '```' → logprob: -13.126176834106445
    9. ' 
' → logprob: -14.251176834106445
    10. '<|end|>' → logprob: -14.751176834106445

Token 367: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' (adapté à ' N') → logprob: -0.3351246118545532
    2. '   ' → logprob: -1.3351246118545532
    3. ' N' → logprob: -3.8351244926452637
    4. '	N' → logprob: -11.335124969482422
    5. 'n' → logprob: -11.835124969482422
    6. ' ' → logprob: -12.710124969482422
    7. '```' → logprob: -13.085124969482422
    8. '  ' → logprob: -13.710124969482422
    9. '       ' → logprob: -14.835124969482422
    10. '    ' → logprob: -14.835124969482422

Token 368: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.6931604743003845
    2. '+=' → logprob: -0.6931604743003845
    3. '+' → logprob: -12.068160057067871
    4. '=' → logprob: -12.193160057067871
    5. '   ' → logprob: -13.943160057067871
    6. ']+=' → logprob: -13.943160057067871
    7. '    ' → logprob: -15.943160057067871
    8. '+="' → logprob: -16.068161010742188
    9. '+='' → logprob: -16.068161010742188
    10. '+=(' → logprob: -16.318161010742188

Token 369: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0024756586644798517
    2. ' ' → logprob: -6.002475738525391
    3. '```' → logprob: -19.87747573852539
    4. '   ' → logprob: -20.25247573852539
    5. '<|end|>' → logprob: -20.62747573852539
    6. '2' → logprob: -21.12747573852539
    7. '  ' → logprob: -21.50247573852539
    8. '0' → logprob: -21.75247573852539
    9. ' ' → logprob: -21.87747573852539
    10. '１' → logprob: -22.50247573852539

Token 370: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '<|end|>' → logprob: -19.375001907348633
    4. '```' → logprob: -19.750001907348633
    5. '   ' → logprob: -20.125001907348633
    6. '１' → logprob: -20.500001907348633
    7. '  ' → logprob: -20.937501907348633
    8. '۱' → logprob: -21.062501907348633
    9. '2' → logprob: -21.312501907348633
    10. '১' → logprob: -21.625001907348633

Token 371: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00398258538916707
    2. ' edges' → logprob: -6.0039825439453125
    3. 'edges' → logprob: -7.6289825439453125
    4. '    
' → logprob: -8.128982543945312
    5. '  ' → logprob: -8.503982543945312
    6. '<|end|>' → logprob: -8.628982543945312
    7. '  
' → logprob: -9.253982543945312
    8. '
' → logprob: -9.628982543945312
    9. ' p' → logprob: -9.628982543945312
    10. '   
' → logprob: -10.003982543945312

Token 372: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02178291603922844
    2. ' edges' → logprob: -4.271782875061035
    3. 'edges' → logprob: -5.021782875061035
    4. '<|end|>' → logprob: -7.771782875061035
    5. '    
' → logprob: -8.521782875061035
    6. '  ' → logprob: -9.146782875061035
    7. '  
' → logprob: -9.521782875061035
    8. ' p' → logprob: -10.646782875061035
    9. '_edges' → logprob: -10.646782875061035
    10. '
' → logprob: -10.771782875061035

Token 373: ' #' (ID: 1069)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.28306081891059875
    2. ' edges' → logprob: -1.6580607891082764
    3. '   ' → logprob: -3.0330607891082764
    4. 'p' → logprob: -6.0330610275268555
    5. 'for' → logprob: -6.0330610275268555
    6. ' for' → logprob: -6.5330610275268555
    7. ' p' → logprob: -6.9080610275268555
    8. 'edge' → logprob: -9.283061027526855
    9. '(edges' → logprob: -9.283061027526855
    10. '#' (adapté à ' #') → logprob: -9.658061027526855

Token 374: ' Mult' (ID: 15431)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.03151809796690941
    2. 'for' → logprob: -3.90651798248291
    3. '#' → logprob: -5.65651798248291
    4. 'p' → logprob: -5.90651798248291
    5. ' edges' → logprob: -6.53151798248291
    6. 'u' → logprob: -6.78151798248291
    7. 'j' → logprob: -8.28151798248291
    8. 'i' → logprob: -8.40651798248291
    9. 'edge' → logprob: -8.53151798248291
    10. '   ' → logprob: -8.53151798248291

Token 375: 'ipl' (ID: 7840)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.6657417416572571
    2. '2' → logprob: -0.7907417416572571
    3. ' p' → logprob: -4.290741920471191
    4. '   ' → logprob: -4.790741920471191
    5. '=' → logprob: -5.415741920471191
    6. 'ipl' → logprob: -5.915741920471191
    7. 'ip' → logprob: -6.165741920471191
    8. 'iplier' → logprob: -7.665741920471191
    9. ' =' → logprob: -8.290741920471191
    10. ' ' → logprob: -8.540741920471191

Token 376: 'ie' (ID: 396)
  Prédit: 'ier'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ier' → logprob: -0.7783766388893127
    2. 'ies' → logprob: -1.278376579284668
    3. 'y' → logprob: -1.778376579284668
    4. 'er' → logprob: -2.903376579284668
    5. 'e' → logprob: -3.903376579284668
    6. 'yer' → logprob: -5.278376579284668
    7. 'es' → logprob: -5.278376579284668
    8. 'ie' → logprob: -5.528376579284668
    9. 'p' → logprob: -6.903376579284668
    10. 'iez' → logprob: -7.278376579284668

Token 377: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.01526334136724472
    2. 'edges' → logprob: -4.515263557434082
    3. '   ' → logprob: -5.890263557434082
    4. ' p' → logprob: -6.765263557434082
    5. ' edges' → logprob: -8.515263557434082
    6. '```' → logprob: -11.140263557434082
    7. '2' → logprob: -11.515263557434082
    8. '  ' → logprob: -11.765263557434082
    9. '(edges' → logprob: -11.765263557434082
    10. '_edges' → logprob: -11.890263557434082

Token 378: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.173704271830502e-06
    2. ' ' → logprob: -13.37500286102295
    3. 'p' → logprob: -14.75000286102295
    4. '_' → logprob: -14.87500286102295
    5. '=' → logprob: -14.87500286102295
    6. '   ' → logprob: -15.50000286102295
    7. ' p' → logprob: -16.500003814697266
    8. '₂' → logprob: -16.500003814697266
    9. '```' → logprob: -16.625003814697266
    10. '*' → logprob: -17.000003814697266

Token 379: ' par' (ID: 686)
  Prédit: ' *='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *=' → logprob: -0.6610782742500305
    2. '*=' → logprob: -0.7860782742500305
    3. '=' → logprob: -4.036078453063965
    4. '*' → logprob: -5.661078453063965
    5. 'by' → logprob: -5.786078453063965
    6. ' ' → logprob: -6.536078453063965
    7. '   ' → logprob: -6.536078453063965
    8. ' by' → logprob: -7.911078453063965
    9. ' =' → logprob: -8.411078453063965
    10. ' par' → logprob: -9.786078453063965

Token 380: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00029601677670143545
    2. ' ' → logprob: -8.125295639038086
    3. '   ' → logprob: -17.750295639038086
    4. '```' → logprob: -18.625295639038086
    5. '２' → logprob: -18.875295639038086
    6. ' ' → logprob: -19.125295639038086
    7. '  ' → logprob: -19.375295639038086
    8. '۲' → logprob: -19.750295639038086
    9. ' two' → logprob: -20.250295639038086
    10. '=' → logprob: -20.562795639038086

Token 381: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. '   ' → logprob: -21.125
    4. '```' → logprob: -21.5
    5. '２' → logprob: -21.625
    6. '۲' → logprob: -22.0
    7. '=' → logprob: -23.0
    8. '  ' → logprob: -23.25
    9. ' ' → logprob: -23.375
    10. '২' → logprob: -24.0

Token 382: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15340685844421387
    2. '*' → logprob: -2.528406858444214
    3. '*p' → logprob: -3.278406858444214
    4. 'p' → logprob: -4.778407096862793
    5. ' *' → logprob: -4.903407096862793
    6. ' *=' → logprob: -5.403407096862793
    7. ' p' → logprob: -5.653407096862793
    8. '*=' → logprob: -7.778407096862793
    9. '=' → logprob: -8.653407096862793
    10. ' ' → logprob: -9.278407096862793

Token 383: ' obtenir' (ID: 54423)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.19256806373596191
    2. 'p' → logprob: -2.692568063735962
    3. ' p' → logprob: -3.067568063735962
    4. ' continuer' → logprob: -4.192567825317383
    5. ' obtenir' → logprob: -4.567567825317383
    6. 'pass' → logprob: -4.567567825317383
    7. ' ' → logprob: -5.067567825317383
    8. ' augmenter' → logprob: -5.817567825317383
    9. '```' → logprob: -6.192567825317383
    10. ' passer' → logprob: -6.317567825317383

Token 384: ' la' (ID: 557)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -1.292931318283081
    2. ' la' → logprob: -1.292931318283081
    3. '2' → logprob: -1.542931318283081
    4. 'p' → logprob: -1.792931318283081
    5. 'la' → logprob: -3.042931318283081
    6. ' ' → logprob: -4.16793155670166
    7. 'le' → logprob: -6.04293155670166
    8. 'the' → logprob: -6.16793155670166
    9. ' the' → logprob: -6.29293155670166
    10. ' le' → logprob: -7.66793155670166

Token 385: ' prochaine' (ID: 78876)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.4774876534938812
    2. ' prochaine' → logprob: -1.1024876832962036
    3. 'next' → logprob: -3.852487564086914
    4. ' prochain' → logprob: -4.977487564086914
    5. 'nou' → logprob: -4.977487564086914
    6. '2' → logprob: -5.852487564086914
    7. 'su' → logprob: -5.852487564086914
    8. ' suivante' → logprob: -6.477487564086914
    9. 'p' → logprob: -6.727487564086914
    10. ' next' → logprob: -7.102487564086914

Token 386: ' puissance' (ID: 63494)
  Prédit: ' puissance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' puissance' → logprob: -0.1028159111738205
    2. 'pu' → logprob: -2.977815866470337
    3. 'p' → logprob: -3.977815866470337
    4. '2' → logprob: -4.477816104888916
    5. ' puiss' → logprob: -5.477816104888916
    6. ' p' → logprob: -5.852816104888916
    7. 'pow' → logprob: -5.977816104888916
    8. 'power' → logprob: -6.227816104888916
    9. '<|end|>' → logprob: -6.352816104888916
    10. ' power' → logprob: -6.352816104888916

Token 387: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.4287087917327881
    2. '   ' → logprob: -1.678708791732788
    3. '2' → logprob: -2.178708791732788
    4. ' ' → logprob: -3.553708791732788
    5. '*' → logprob: -4.553709030151367
    6. 'de' → logprob: -5.928709030151367
    7. ' *' → logprob: -6.053709030151367
    8. ' p' → logprob: -6.553709030151367
    9. ' of' → logprob: -6.803709030151367
    10. '  ' → logprob: -6.928709030151367

Token 388: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.01818951405584812
    2. ' ' → logprob: -4.018189430236816
    3. ' deux' → logprob: -10.768189430236816
    4. 'de' → logprob: -11.268189430236816
    5. ' two' → logprob: -13.393189430236816
    6. ' p' → logprob: -13.893189430236816
    7. 'p' → logprob: -14.018189430236816
    8. 'two' → logprob: -14.393189430236816
    9. '```' → logprob: -14.518189430236816
    10. ' ' → logprob: -15.518189430236816

Token 389: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0006322591798380017
    2. ' ' → logprob: -7.375632286071777
    3. 'p' → logprob: -12.750632286071777
    4. ' p' → logprob: -14.125632286071777
    5. 'de' → logprob: -14.625632286071777
    6. '```' → logprob: -14.875632286071777
    7. ' deux' → logprob: -14.875632286071777
    8. '  ' → logprob: -15.750632286071777
    9. '   ' → logprob: -16.12563133239746
    10. '
' → logprob: -16.50063133239746

Token 390: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013913251459598541
    2. 'p' → logprob: -5.263913154602051
    3. '*p' → logprob: -5.263913154602051
    4. ' p' → logprob: -6.513913154602051
    5. '*' → logprob: -6.513913154602051
    6. '=' → logprob: -8.76391315460205
    7. ' *' → logprob: -9.38891315460205
    8. '  ' → logprob: -9.88891315460205
    9. ' *=' → logprob: -10.01391315460205
    10. ',' → logprob: -10.38891315460205

Token 391: '   ' (ID: 271)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.35197433829307556
    2. 'p' → logprob: -1.601974368095398
    3. '   ' → logprob: -2.3519742488861084
    4. '*p' → logprob: -11.226974487304688
    5. '	p' → logprob: -12.476974487304688
    6. ',p' → logprob: -14.226974487304688
    7. '(p' → logprob: -14.226974487304688
    8. ' ' → logprob: -14.601974487304688
    9. '    
' → logprob: -14.601974487304688
    10. ' =' → logprob: -14.601974487304688

Token 392: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -0.0015023599844425917
    2. ' p' → logprob: -6.501502513885498
    3. '   ' → logprob: -16.376502990722656
    4. '	p' → logprob: -20.376502990722656
    5. '2' → logprob: -22.376502990722656
    6. '```' → logprob: -22.626502990722656
    7. '_p' → logprob: -23.376502990722656
    8. ' ' → logprob: -23.501502990722656
    9. '    
' → logprob: -23.626502990722656
    10. '*p' → logprob: -23.751502990722656

Token 393: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.696889623621246e-06
    2. 'p' → logprob: -13.62500286102295
    3. ' ' → logprob: -13.87500286102295
    4. '*' → logprob: -15.75000286102295
    5. '=' → logprob: -16.500001907348633
    6. '_' → logprob: -16.750001907348633
    7. ' p' → logprob: -16.875001907348633
    8. '```' → logprob: -17.000001907348633
    9. '   ' → logprob: -17.250001907348633
    10. '₂' → logprob: -17.500001907348633

Token 394: ' *=' (ID: 25253)
  Prédit: '*='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*=' → logprob: -0.3180845081806183
    2. ' *=' → logprob: -1.318084478378296
    3. '=' → logprob: -5.443084716796875
    4. ' =' → logprob: -7.693084716796875
    5. '*' → logprob: -10.818084716796875
    6. ' ' → logprob: -12.318084716796875
    7. ' <<=' → logprob: -12.943084716796875
    8. '   ' → logprob: -13.693084716796875
    9. ' ' → logprob: -14.193084716796875
    10. '  ' → logprob: -15.818084716796875

Token 395: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.026300642639398575
    2. ' ' → logprob: -3.6513006687164307
    3. '   ' → logprob: -15.401300430297852
    4. '```' → logprob: -16.90130043029785
    5. '  ' → logprob: -17.02630043029785
    6. ' ' → logprob: -18.02630043029785
    7. '۲' → logprob: -18.15130043029785
    8. '２' → logprob: -18.65130043029785
    9. '
' → logprob: -18.96380043029785
    10. '	' → logprob: -19.46380043029785

Token 396: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '```' → logprob: -17.625003814697266
    4. '۲' → logprob: -19.375003814697266
    5. '２' → logprob: -19.500003814697266
    6. '   ' → logprob: -19.500003814697266
    7. '  ' → logprob: -20.875003814697266
    8. '
' → logprob: -21.000003814697266
    9. '২' → logprob: -21.437503814697266
    10. '`' → logprob: -21.687503814697266

Token 397: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0014908155426383018
    2. 'edges' → logprob: -7.001490592956543
    3. 'for' → logprob: -8.126490592956543
    4. '    
' → logprob: -9.626490592956543
    5. ' edges' → logprob: -9.751490592956543
    6. '
' → logprob: -9.751490592956543
    7. ')' → logprob: -10.251490592956543
    8. '  ' → logprob: -11.376490592956543
    9. '<|end|>' → logprob: -11.376490592956543
    10. ',' → logprob: -11.626490592956543

Token 398: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3517487645149231
    2. 'edges' → logprob: -1.2267487049102783
    3. ' edges' → logprob: -5.851748943328857
    4. 'for' → logprob: -8.4767484664917
    5. '#' → logprob: -9.6017484664917
    6. '(edges' → logprob: -9.9767484664917
    7. '```' → logprob: -10.4767484664917
    8. '  ' → logprob: -10.9767484664917
    9. '.edges' → logprob: -11.3517484664917
    10. '    
' → logprob: -11.8517484664917

Token 399: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4128977656364441
    2. 'edges' → logprob: -1.1628978252410889
    3. 'for' → logprob: -3.912897825241089
    4. '#' (adapté à ' #') → logprob: -5.41289758682251
    5. ' edges' → logprob: -6.91289758682251
    6. 'edge' → logprob: -9.912898063659668
    7. ' for' → logprob: -9.912898063659668
    8. '(edges' → logprob: -10.662898063659668
    9. '```' → logprob: -10.662898063659668
    10. '  ' → logprob: -11.287898063659668

Token 400: ' Aj' (ID: 28294)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.28974226117134094
    2. 'for' → logprob: -1.4147422313690186
    3. '#' → logprob: -5.039742469787598
    4. 'j' → logprob: -7.164742469787598
    5. ' edges' → logprob: -8.539742469787598
    6. 'i' → logprob: -8.539742469787598
    7. '   ' → logprob: -8.664742469787598
    8. 'k' → logprob: -9.039742469787598
    9. 'edge' → logprob: -9.789742469787598
    10. 'a' → logprob: -9.789742469787598

Token 401: 'oute' (ID: 3509)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.11665542423725128
    2. '_edges' → logprob: -2.9916553497314453
    3. 'outes' → logprob: -3.9916553497314453
    4. '   ' → logprob: -4.491655349731445
    5. ' edges' → logprob: -4.491655349731445
    6. '(edges' → logprob: -4.741655349731445
    7. 'outer' → logprob: -5.116655349731445
    8. 'oints' → logprob: -6.866655349731445
    9. '#' → logprob: -7.741655349731445
    10. '.edges' → logprob: -7.866655349731445

Token 402: ' une' (ID: 2463)
  Prédit: '(edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(edges' → logprob: -0.003352259285748005
    2. '(' → logprob: -6.503352165222168
    3. ' (' → logprob: -6.503352165222168
    4. 'edges' → logprob: -8.753352165222168
    5. '(N' → logprob: -9.128352165222168
    6. '   ' → logprob: -10.378352165222168
    7. ' edges' → logprob: -10.628352165222168
    8. '(edge' → logprob: -12.003352165222168
    9. '(ed' → logprob: -12.003352165222168
    10. '(n' → logprob: -12.003352165222168

Token 403: ' ar' (ID: 646)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.5495684742927551
    2. 'edges' → logprob: -1.4245684146881104
    3. ' edge' → logprob: -2.5495684146881104
    4. 'tuple' → logprob: -3.7995684146881104
    5. ' tuple' → logprob: -3.7995684146881104
    6. 'ar' → logprob: -4.1745686531066895
    7. ' edges' → logprob: -4.1745686531066895
    8. '(edges' → logprob: -4.6745686531066895
    9. ' ar' → logprob: -5.4245686531066895
    10. '(edge' → logprob: -5.6745686531066895

Token 404: 'ête' (ID: 16808)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edge' → logprob: -1.329486608505249
    2. 'edges' → logprob: -1.579486608505249
    3. '(edges' → logprob: -1.829486608505249
    4. '   ' → logprob: -2.204486608505249
    5. '(' → logprob: -2.829486608505249
    6. 'ge' → logprob: -3.329486608505249
    7. 'es' → logprob: -3.829486608505249
    8. '.append' → logprob: -4.454486846923828
    9. '_edges' → logprob: -4.454486846923828
    10. 'e' → logprob: -4.579486846923828

Token 405: ' (' (ID: 350)
  Prédit: '(edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(edges' → logprob: -0.022077638655900955
    2. '.append' → logprob: -4.147077560424805
    3. '(' → logprob: -6.147077560424805
    4. 'edges' → logprob: -6.397077560424805
    5. ' (' → logprob: -6.522077560424805
    6. '   ' → logprob: -7.897077560424805
    7. '((' → logprob: -8.897077560424805
    8. ' edges' → logprob: -9.522077560424805
    9. '(n' → logprob: -10.147077560424805
    10. '(N' → logprob: -10.397077560424805

Token 406: 'N' (ID: 45)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.3952714204788208
    2. 'N' → logprob: -1.1452714204788208
    3. '1' → logprob: -5.395271301269531
    4. '(' → logprob: -5.770271301269531
    5. ' (' → logprob: -8.020271301269531
    6. '0' → logprob: -8.520271301269531
    7. '   ' → logprob: -9.395271301269531
    8. ' N' → logprob: -10.395271301269531
    9. ' ' → logprob: -11.270271301269531
    10. '[N' → logprob: -11.270271301269531

Token 407: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.030776377767324448
    2. ' -' → logprob: -3.530776262283325
    3. ',' → logprob: -6.905776500701904
    4. ' ,' → logprob: -11.780776023864746
    5. '```' → logprob: -11.780776023864746
    6. ' ' → logprob: -12.780776023864746
    7. '
' → logprob: -13.655776023864746
    8. '-,' → logprob: -13.905776023864746
    9. '   ' → logprob: -14.280776023864746
    10. ')' → logprob: -14.655776023864746

Token 408: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011075297370553017
    2. ' ' → logprob: -4.511075496673584
    3. '2' → logprob: -10.636075019836426
    4. ',' → logprob: -13.261075019836426
    5. '   ' → logprob: -14.386075019836426
    6. 'p' → logprob: -15.136075019836426
    7. ' p' → logprob: -15.636075019836426
    8. ' ' → logprob: -16.011075973510742
    9. ')' → logprob: -16.136075973510742
    10. '```' → logprob: -16.386075973510742

Token 409: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1756367712223437e-05
    2. '2' → logprob: -11.500011444091797
    3. ' ' → logprob: -13.625011444091797
    4. '   ' → logprob: -16.500011444091797
    5. ',' → logprob: -16.625011444091797
    6. '```' → logprob: -17.062511444091797
    7. ')' → logprob: -17.250011444091797
    8. 'p' → logprob: -17.875011444091797
    9. '  ' → logprob: -18.000011444091797
    10. '

' → logprob: -18.250011444091797

Token 410: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010711929644457996
    2. ' ,' → logprob: -9.750106811523438
    3. ',N' → logprob: -10.000106811523438
    4. ',p' → logprob: -13.625106811523438
    5. ',
' → logprob: -14.000106811523438
    6. '   ' → logprob: -14.625106811523438
    7. 'N' → logprob: -15.125106811523438
    8. '```' → logprob: -15.625106811523438
    9. ')' → logprob: -16.125106811523438
    10. ',n' → logprob: -16.125106811523438

Token 411: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0008062947308644652
    2. ' N' → logprob: -7.1258063316345215
    3. '   ' → logprob: -13.625805854797363
    4. '1' → logprob: -15.250805854797363
    5. ' ' → logprob: -15.250805854797363
    6. '2' → logprob: -16.37580680847168
    7. '	N' → logprob: -16.75080680847168
    8. '  ' → logprob: -17.62580680847168
    9. 'p' → logprob: -18.12580680847168
    10. '0' → logprob: -18.25080680847168

Token 412: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.9186317482963204e-05
    2. ' ,' → logprob: -10.125049591064453
    3. '1' → logprob: -12.500049591064453
    4. ')' → logprob: -13.375049591064453
    5. '   ' → logprob: -14.000049591064453
    6. '2' → logprob: -14.125049591064453
    7. '),' → logprob: -14.250049591064453
    8. '```' → logprob: -14.375049591064453
    9. '0' → logprob: -14.750049591064453
    10. ',
' → logprob: -15.500049591064453

Token 413: ' ' (ID: 220)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0019725270103663206
    2. ' p' → logprob: -6.376972675323486
    3. '1' → logprob: -8.501972198486328
    4. '0' → logprob: -9.876972198486328
    5. ')' → logprob: -12.001972198486328
    6. ' ' → logprob: -12.376972198486328
    7. '2' → logprob: -13.001972198486328
    8. '   ' → logprob: -13.751972198486328
    9. '  ' → logprob: -14.876972198486328
    10. ')p' → logprob: -15.376972198486328

Token 414: '0' (ID: 15)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.01307564228773117
    2. '0' → logprob: -4.388075828552246
    3. '1' → logprob: -8.388075828552246
    4. ' p' → logprob: -8.388075828552246
    5. '(p' → logprob: -10.638075828552246
    6. 'edges' → logprob: -10.638075828552246
    7. ')' → logprob: -11.513075828552246
    8. 'N' → logprob: -11.638075828552246
    9. '(' → logprob: -11.763075828552246
    10. 'L' → logprob: -11.888075828552246

Token 415: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0044263205491006374
    2. ',' → logprob: -5.5044264793396
    3. '),' → logprob: -8.754426002502441
    4. ' )' → logprob: -8.754426002502441
    5. ')
' → logprob: -11.004426002502441
    6. '))' → logprob: -12.379426002502441
    7. ' ,' → logprob: -12.504426002502441
    8. ',)' → logprob: -12.629426002502441
    9. ')
' → logprob: -14.004426002502441
    10. ')`' → logprob: -14.629426002502441

Token 416: ' :' (ID: 712)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020481623709201813
    2. 'edges' → logprob: -4.520481586456299
    3. ')' → logprob: -4.770481586456299
    4. ',' → logprob: -7.645481586456299
    5. ' edges' → logprob: -8.145482063293457
    6. '(edges' → logprob: -9.895482063293457
    7. ')
' → logprob: -10.270482063293457
    8. ').' → logprob: -11.145482063293457
    9. '),' → logprob: -11.270482063293457
    10. '.edges' → logprob: -11.520482063293457

Token 417: ' reliant' (ID: 156556)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.06837734580039978
    2. ' edges' → logprob: -2.9433772563934326
    3. '   ' → logprob: -4.318377494812012
    4. '(edges' → logprob: -9.693377494812012
    5. '.edges' → logprob: -12.193377494812012
    6. 'edge' → logprob: -12.318377494812012
    7. ')' → logprob: -12.568377494812012
    8. ',' → logprob: -13.443377494812012
    9. '```' → logprob: -13.818377494812012
    10. '_edges' → logprob: -13.818377494812012

Token 418: ' le' (ID: 505)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.6408809423446655
    2. '(N' → logprob: -0.7658809423446655
    3. ' (' → logprob: -5.390881061553955
    4. ' N' → logprob: -6.390881061553955
    5. '[N' → logprob: -7.515881061553955
    6. ',' → logprob: -7.765881061553955
    7. ')' → logprob: -8.015880584716797
    8. ' ' → logprob: -9.765880584716797
    9. '   ' → logprob: -9.890880584716797
    10. '(' → logprob: -10.015880584716797

Token 419: ' n' (ID: 297)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.004530757665634155
    2. '(N' → logprob: -5.504530906677246
    3. ' N' → logprob: -8.129530906677246
    4. 'previous' → logprob: -10.129530906677246
    5. ' (' → logprob: -10.504530906677246
    6. ' sommet' → logprob: -10.629530906677246
    7. '[N' → logprob: -11.004530906677246
    8. 'dern' → logprob: -11.254530906677246
    9. '(' → logprob: -11.754530906677246
    10. 'node' → logprob: -12.754530906677246

Token 420: 'œ' (ID: 15335)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.016715237870812416
    2. ' -' → logprob: -4.391715049743652
    3. ',' → logprob: -6.141715049743652
    4. ')' → logprob: -6.891715049743652
    5. 'ode' → logprob: -7.766715049743652
    6. 'e' → logprob: -9.391715049743652
    7. ' ' → logprob: -10.141715049743652
    8. 'odes' → logprob: -10.141715049743652
    9. 'o' → logprob: -10.266715049743652
    10. ' ,' → logprob: -10.266715049743652

Token 421: 'ud' (ID: 527)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.03394626826047897
    2. ' -' → logprob: -3.4089462757110596
    3. ',' → logprob: -9.40894603729248
    4. '1' → logprob: -10.28394603729248
    5. '   ' → logprob: -10.53394603729248
    6. ' ' → logprob: -10.65894603729248
    7. '−' → logprob: -10.65894603729248
    8. 'ombre' → logprob: -10.78394603729248
    9. 'œ' → logprob: -11.28394603729248
    10. 'um' → logprob: -11.78394603729248

Token 422: ' précédent' (ID: 128462)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.06596332788467407
    2. ' (' → logprob: -3.0659632682800293
    3. ',' → logprob: -4.440963268280029
    4. 'N' → logprob: -5.690963268280029
    5. '(' → logprob: -7.315963268280029
    6. ' ,' → logprob: -7.815963268280029
    7. '[N' → logprob: -7.815963268280029
    8. ' N' → logprob: -8.440963745117188
    9. '(
' → logprob: -9.565963745117188
    10. ',N' → logprob: -9.690963745117188

Token 423: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013902351493015885
    2. ' ,' → logprob: -6.87639045715332
    3. '   ' → logprob: -8.62639045715332
    4. ')' → logprob: -9.62639045715332
    5. 'edges' → logprob: -10.25139045715332
    6. ' edges' → logprob: -10.62639045715332
    7. '<|end|>' → logprob: -11.50139045715332
    8. '    ' → logprob: -12.50139045715332
    9. ' ' → logprob: -12.50139045715332
    10. ',
' → logprob: -12.62639045715332

Token 424: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.000915039679966867
    2. ' N' → logprob: -7.375915050506592
    3. ',' → logprob: -8.750914573669434
    4. ')' → logprob: -9.625914573669434
    5. '(N' → logprob: -10.500914573669434
    6. '   ' → logprob: -10.875914573669434
    7. ',N' → logprob: -12.750914573669434
    8. ' ,' → logprob: -13.000914573669434
    9. ' ' → logprob: -13.125914573669434
    10. '    ' → logprob: -13.375914573669434

Token 425: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.1269332468509674
    2. ' -' → logprob: -2.1269333362579346
    3. ' ' → logprob: -13.001933097839355
    4. ',' → logprob: -14.001933097839355
    5. '   ' → logprob: -14.751933097839355
    6. '
' → logprob: -14.876933097839355
    7. '```' → logprob: -15.251933097839355
    8. '1' → logprob: -15.501933097839355
    9. '−' → logprob: -15.626933097839355
    10. ' ' → logprob: -15.876933097839355

Token 426: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002498013898730278
    2. ' ' → logprob: -6.002498149871826
    3. '-' → logprob: -11.627497673034668
    4. '   ' → logprob: -11.752497673034668
    5. ')' → logprob: -12.877497673034668
    6. 'N' → logprob: -14.252497673034668
    7. ' -' → logprob: -14.377497673034668
    8. ',' → logprob: -14.502497673034668
    9. '  ' → logprob: -14.627497673034668
    10. '```' → logprob: -15.002497673034668

Token 427: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009711332386359572
    2. ' ,' → logprob: -7.37597131729126
    3. '   ' → logprob: -8.875970840454102
    4. ',N' → logprob: -9.250970840454102
    5. ')' → logprob: -9.875970840454102
    6. '),' → logprob: -10.250970840454102
    7. ',
' → logprob: -11.875970840454102
    8. ',n' → logprob: -12.875970840454102
    9. '```' → logprob: -12.875970840454102
    10. '  ' → logprob: -13.500970840454102

Token 428: ' au' (ID: 2791)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005265804938971996
    2. ',
' → logprob: -8.375526428222656
    3. ' ,' → logprob: -8.375526428222656
    4. '   ' → logprob: -10.500526428222656
    5. 'edges' → logprob: -11.125526428222656
    6. ',p' → logprob: -12.250526428222656
    7. ')' → logprob: -12.500526428222656
    8. ',n' → logprob: -12.875526428222656
    9. ',
' → logprob: -13.250526428222656
    10. ',",' → logprob: -13.375526428222656

Token 429: ' n' (ID: 297)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.000629279064014554
    2. ' N' → logprob: -7.375629425048828
    3. 'n' → logprob: -13.375629425048828
    4. '(N' → logprob: -14.625629425048828
    5. ' ' → logprob: -15.375629425048828
    6. '	N' → logprob: -16.375629425048828
    7. ',' → logprob: -16.375629425048828
    8. ')' → logprob: -16.625629425048828
    9. '   ' → logprob: -17.000629425048828
    10. ' ' → logprob: -17.125629425048828

Token 430: 'œ' (ID: 15335)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.06598609685897827
    2. '<|end|>' → logprob: -3.690986156463623
    3. 'ode' → logprob: -4.815986156463623
    4. ')' → logprob: -4.815986156463623
    5. '2' → logprob: -5.565986156463623
    6. 'odes' → logprob: -5.815986156463623
    7. '```' → logprob: -5.815986156463623
    8. ']' → logprob: -6.440986156463623
    9. '-' → logprob: -6.440986156463623
    10. '.' → logprob: -6.565986156463623

Token 431: 'ud' (ID: 527)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.1914006918668747
    2. 'ud' → logprob: -2.1914007663726807
    3. 'œ' → logprob: -3.3164007663726807
    4. '#' → logprob: -4.191400527954102
    5. 'e' → logprob: -5.066400527954102
    6. '1' → logprob: -6.566400527954102
    7. '\xc2' → logprob: -7.191400527954102
    8. 'de' → logprob: -7.191400527954102
    9. '```' → logprob: -7.941400527954102
    10. 'n' → logprob: -8.566400527954102

Token 432: ' courant' (ID: 74694)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0018593916902318597
    2. ' ,' → logprob: -6.626859188079834
    3. ',N' → logprob: -8.001859664916992
    4. '(N' → logprob: -9.876859664916992
    5. '```' → logprob: -10.876859664916992
    6. '0' → logprob: -10.876859664916992
    7. 'N' → logprob: -11.001859664916992
    8. '1' → logprob: -11.126859664916992
    9. '(' → logprob: -11.376859664916992
    10. ')' → logprob: -11.501859664916992

Token 433: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0018856844399124384
    2. ' ,' → logprob: -6.626885890960693
    3. 'edges' → logprob: -8.251885414123535
    4. ',
' → logprob: -8.626885414123535
    5. ' edges' → logprob: -10.251885414123535
    6. '(edges' → logprob: -10.251885414123535
    7. ')' → logprob: -10.876885414123535
    8. '   ' → logprob: -11.751885414123535
    9. ' ,
' → logprob: -12.251885414123535
    10. '),' → logprob: -13.126885414123535

Token 434: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.004948512185364962
    2. ' N' → logprob: -5.379948616027832
    3. ',' → logprob: -8.129948616027832
    4. ')' → logprob: -10.629948616027832
    5. ' ,' → logprob: -12.254948616027832
    6. ',N' → logprob: -13.254948616027832
    7. '```' → logprob: -14.254948616027832
    8. ' (' → logprob: -14.754948616027832
    9. ' )' → logprob: -14.754948616027832
    10. ' ' → logprob: -14.754948616027832

Token 435: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00261703971773386
    2. ')' → logprob: -6.502616882324219
    3. ' ,' → logprob: -7.002616882324219
    4. '),' → logprob: -9.002616882324219
    5. '   ' → logprob: -10.377616882324219
    6. ' avec' → logprob: -10.877616882324219
    7. ' )' → logprob: -11.502616882324219
    8. 'with' → logprob: -12.627616882324219
    9. 'avec' → logprob: -12.627616882324219
    10. '```' → logprob: -12.877616882324219

Token 436: ' avec' (ID: 3937)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3810528814792633
    2. 'edges' → logprob: -1.256052851676941
    3. ',' → logprob: -3.5060529708862305
    4. ' edges' → logprob: -6.6310529708862305
    5. '(edges' → logprob: -8.00605297088623
    6. ')' → logprob: -8.38105297088623
    7. '.edges' → logprob: -9.38105297088623
    8. ' ,' → logprob: -10.88105297088623
    9. ',
' → logprob: -11.00605297088623
    10. '),' → logprob: -11.50605297088623

Token 437: ' un' (ID: 537)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2873784303665161
    2. ' ' → logprob: -1.9123784303665161
    3. 'weight' → logprob: -3.1623783111572266
    4. ',' → logprob: -4.162378311157227
    5. ' ,' → logprob: -4.162378311157227
    6. ' weight' → logprob: -4.287378311157227
    7. ' poids' → logprob: -4.537378311157227
    8. 'po' → logprob: -6.162378311157227
    9. ' un' → logprob: -7.162378311157227
    10. ')' → logprob: -8.412378311157227

Token 438: ' poids' (ID: 56058)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.945869505405426
    2. ' poids' → logprob: -1.3208694458007812
    3. ' weight' → logprob: -1.6958694458007812
    4. ' ,' → logprob: -2.8208694458007812
    5. 'po' → logprob: -3.8208694458007812
    6. 'weight' → logprob: -3.9458694458007812
    7. ' )' → logprob: -4.070869445800781
    8. ' ' → logprob: -4.070869445800781
    9. ')' → logprob: -4.820869445800781
    10. ',' → logprob: -4.820869445800781

Token 439: ' ' (ID: 220)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.37609103322029114
    2. ' =' → logprob: -1.5010910034179688
    3. '0' → logprob: -2.8760910034179688
    4. ',' → logprob: -3.6260910034179688
    5. 'edges' → logprob: -6.001091003417969
    6. ' edges' → logprob: -6.876091003417969
    7. ' ,' → logprob: -6.876091003417969
    8. '_edges' → logprob: -6.876091003417969
    9. ' de' → logprob: -7.501091003417969
    10. ')' → logprob: -8.126091003417969

Token 440: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09192842990159988
    2. '=' → logprob: -2.841928482055664
    3. ' =' → logprob: -4.466928482055664
    4. ',' → logprob: -4.716928482055664
    5. ' ,' → logprob: -4.966928482055664
    6. ' ' → logprob: -6.216928482055664
    7. ' )' → logprob: -9.841928482055664
    8. ')' → logprob: -10.841928482055664
    9. ',
' → logprob: -11.341928482055664
    10. ' ,
' → logprob: -11.466928482055664

Token 441: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01486315205693245
    2. 'edges' → logprob: -4.764863014221191
    3. ')' → logprob: -5.264863014221191
    4. ',' → logprob: -7.639863014221191
    5. ')
' → logprob: -8.139863014221191
    6. ' edges' → logprob: -8.764863014221191
    7. '(edges' → logprob: -9.639863014221191
    8. '
' → logprob: -11.139863014221191
    9. ').' → logprob: -11.514863014221191
    10. '),' → logprob: -11.764863014221191

Token 442: '   ' (ID: 271)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.029813556000590324
    2. '   ' → logprob: -3.529813528060913
    3. ' edges' → logprob: -10.029813766479492
    4. '```' → logprob: -11.404813766479492
    5. '(edges' → logprob: -12.029813766479492
    6. '.edges' → logprob: -13.904813766479492
    7. '    
' → logprob: -15.654813766479492
    8. '
' → logprob: -15.779813766479492
    9. '  ' → logprob: -15.904813766479492
    10. '``' → logprob: -16.154813766479492

Token 443: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' (adapté à ' edges') → logprob: -9.043078898685053e-05
    2. '   ' → logprob: -9.375090599060059
    3. ' edges' → logprob: -12.125090599060059
    4. '(edges' → logprob: -15.750090599060059
    5. '.edges' → logprob: -16.875089645385742
    6. '```' → logprob: -17.375089645385742
    7. 'edge' → logprob: -19.000089645385742
    8. '  ' → logprob: -19.875089645385742
    9. '_edges' → logprob: -20.000089645385742
    10. 'Edges' → logprob: -20.000089645385742

Token 444: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -4.036524842376821e-05
    2. '.' → logprob: -10.125040054321289
    3. ' .' → logprob: -15.750040054321289
    4. '.extend' → logprob: -17.00004005432129
    5. '.add' → logprob: -17.12504005432129
    6. 'append' → logprob: -17.37504005432129
    7. ').' → logprob: -17.75004005432129
    8. '.app' → logprob: -17.87504005432129
    9. '.Append' → logprob: -18.12504005432129
    10. '   ' → logprob: -19.50004005432129

Token 445: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -2.3080716346157715e-05
    2. '(((' → logprob: -11.000022888183594
    3. '(' → logprob: -12.000022888183594
    4. ' ((' → logprob: -16.125022888183594
    5. '([(' → logprob: -18.750022888183594
    6. '(N' → logprob: -18.875022888183594
    7. '[(' → logprob: -19.000022888183594
    8. '(
' → logprob: -19.750022888183594
    9. ' ' → logprob: -19.750022888183594
    10. '   ' → logprob: -19.875022888183594

Token 446: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -3.7697225252486533e-06
    2. ' N' → logprob: -12.750003814697266
    3. '(N' → logprob: -14.125003814697266
    4. '   ' → logprob: -16.125003814697266
    5. '	N' → logprob: -17.125003814697266
    6. ' ' → logprob: -17.875003814697266
    7. ',N' → logprob: -20.375003814697266
    8. '  ' → logprob: -20.500003814697266
    9. '[N' → logprob: -20.500003814697266
    10. ' (' → logprob: -20.625003814697266

Token 447: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.12693199515342712
    2. ' -' → logprob: -2.12693190574646
    3. ' ' → logprob: -13.251932144165039
    4. '   ' → logprob: -14.001932144165039
    5. '1' → logprob: -14.751932144165039
    6. ',' → logprob: -14.876932144165039
    7. '  ' → logprob: -16.00193214416504
    8. '-
' → logprob: -16.12693214416504
    9. '−' → logprob: -16.37693214416504
    10. '	' → logprob: -17.50193214416504

Token 448: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.856408536899835e-05
    2. ' ' → logprob: -10.500028610229492
    3. ',' → logprob: -14.375028610229492
    4. '   ' → logprob: -15.875028610229492
    5. '<|end|>' → logprob: -16.625028610229492
    6. ' ,' → logprob: -16.937528610229492
    7. '```' → logprob: -17.312528610229492
    8. '  ' → logprob: -17.375028610229492
    9. '۱' → logprob: -18.000028610229492
    10. '2' → logprob: -18.125028610229492

Token 449: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.778209353797138e-05
    2. ' ' → logprob: -10.000067710876465
    3. '2' → logprob: -10.750067710876465
    4. '   ' → logprob: -14.875067710876465
    5. '  ' → logprob: -15.625067710876465
    6. '```' → logprob: -15.937567710876465
    7. ',' → logprob: -16.93756866455078
    8. '0' → logprob: -17.43756866455078
    9. '    ' → logprob: -17.50006866455078
    10. ')' → logprob: -17.68756866455078

Token 450: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00018244501552544534
    2. ' ,' → logprob: -9.250182151794434
    3. ',N' → logprob: -9.375182151794434
    4. ',
' → logprob: -13.750182151794434
    5. '   ' → logprob: -16.25018310546875
    6. ',n' → logprob: -16.75018310546875
    7. '',' → logprob: -17.00018310546875
    8. '```' → logprob: -17.00018310546875
    9. '‌,' → logprob: -17.50018310546875
    10. ')' → logprob: -18.00018310546875

Token 451: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0009115827269852161
    2. ' N' → logprob: -7.000911712646484
    3. ' ' → logprob: -17.625911712646484
    4. '<|end|>' → logprob: -17.750911712646484
    5. '	N' → logprob: -19.500911712646484
    6. '  ' → logprob: -20.250911712646484
    7. ')' → logprob: -20.625911712646484
    8. '   ' → logprob: -20.875911712646484
    9. ',N' → logprob: -20.875911712646484
    10. ',' → logprob: -21.125911712646484

Token 452: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.1318875446449965e-05
    2. ' ,' → logprob: -10.125041007995605
    3. '0' → logprob: -14.125041007995605
    4. ',
' → logprob: -14.875041007995605
    5. '```' → logprob: -16.625041961669922
    6. '   ' → logprob: -16.750041961669922
    7. '‌,' → logprob: -17.875041961669922
    8. ')' → logprob: -17.875041961669922
    9. ' ' → logprob: -18.125041961669922
    10. '1' → logprob: -18.125041961669922

Token 453: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.130576806142926e-05
    2. ' ' → logprob: -10.375031471252441
    3. ')' → logprob: -20.000030517578125
    4. '   ' → logprob: -20.375030517578125
    5. '```' → logprob: -21.250030517578125
    6. '  ' → logprob: -21.375030517578125
    7. '۰' → logprob: -22.000030517578125
    8. '1' → logprob: -22.250030517578125
    9. '[' → logprob: -23.125030517578125
    10. '<|end|>' → logprob: -23.125030517578125

Token 454: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. ')' → logprob: -19.750001907348633
    4. '   ' → logprob: -21.250001907348633
    5. '۰' → logprob: -21.500001907348633
    6. '```' → logprob: -21.625001907348633
    7. '1' → logprob: -22.000001907348633
    8. '<|end|>' → logprob: -22.625001907348633
    9. '  ' → logprob: -22.875001907348633
    10. '00' → logprob: -23.125001907348633

Token 455: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00010747690976131707
    2. '))
' → logprob: -9.375107765197754
    3. ')' → logprob: -10.750107765197754
    4. ' ))' → logprob: -14.125107765197754
    5. '));' → logprob: -16.125106811523438
    6. '   ' → logprob: -16.250106811523438
    7. ')))' → logprob: -16.625106811523438
    8. '),' → logprob: -16.875106811523438
    9. '))

' → logprob: -17.000106811523438
    10. '))
' → logprob: -17.125106811523438

Token 456: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11605788767337799
    2. '<|end|>' → logprob: -3.116057872772217
    3. 'while' → logprob: -3.741057872772217
    4. 'for' → logprob: -3.866057872772217
    5. 'edges' → logprob: -4.741057872772217
    6. '    
' → logprob: -5.741057872772217
    7. ')' → logprob: -6.116057872772217
    8. ' while' → logprob: -6.741057872772217
    9. ' edges' → logprob: -6.991057872772217
    10. '#' → logprob: -7.116057872772217

Token 457: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017621494829654694
    2. 'for' → logprob: -4.8926215171813965
    3. ')' → logprob: -6.0176215171813965
    4. 'edges' → logprob: -6.5176215171813965
    5. ' for' → logprob: -6.6426215171813965
    6. '<|end|>' → logprob: -6.6426215171813965
    7. '    
' → logprob: -7.2676215171813965
    8. ' edges' → logprob: -7.2676215171813965
    9. 'while' → logprob: -7.7676215171813965
    10. '#' (adapté à ' #') → logprob: -7.8926215171813965

Token 458: ' Aj' (ID: 28294)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.07528354972600937
    2. '   ' → logprob: -2.9502835273742676
    3. 'for' → logprob: -4.325283527374268
    4. ' edges' → logprob: -5.075283527374268
    5. ' ' → logprob: -8.825284004211426
    6. ' for' → logprob: -9.075284004211426
    7. '  ' → logprob: -9.200284004211426
    8. '(edges' → logprob: -9.575284004211426
    9. 'if' → logprob: -9.825284004211426
    10. '#' → logprob: -9.825284004211426

Token 459: 'oute' (ID: 3509)
  Prédit: 'oute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oute' → logprob: -0.0744328647851944
    2. 'outes' → logprob: -3.074432849884033
    3. 'outez' → logprob: -4.199432849884033
    4. 'out' → logprob: -5.199432849884033
    5. 'outer' → logprob: -5.324432849884033
    6. 'outs' → logprob: -9.199433326721191
    7. '#' → logprob: -12.324433326721191
    8. 'OUT' → logprob: -12.699433326721191
    9. 'edges' → logprob: -12.824433326721191
    10. 'ust' → logprob: -13.449433326721191

Token 460: ' également' (ID: 15488)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '((' → logprob: -0.01615777052938938
    2. '(N' → logprob: -4.141157627105713
    3. ' (' → logprob: -9.641158103942871
    4. '(' → logprob: -9.891158103942871
    5. ' ((' → logprob: -12.891158103942871
    6. '   ' → logprob: -13.391158103942871
    7. '(edges' → logprob: -13.891158103942871
    8. '(n' → logprob: -14.141158103942871
    9. ' ' → logprob: -14.766158103942871
    10. '[(' → logprob: -15.016158103942871

Token 461: ' une' (ID: 2463)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '((' → logprob: -0.07106559723615646
    2. '(N' → logprob: -2.696065664291382
    3. ' (' → logprob: -6.946065425872803
    4. '(' → logprob: -8.821065902709961
    5. ' ((' → logprob: -12.321065902709961
    6. '(edges' → logprob: -12.946065902709961
    7. ' ' → logprob: -13.196065902709961
    8. 'a' → logprob: -13.321065902709961
    9. '  ' → logprob: -13.571065902709961
    10. '(n' → logprob: -13.696065902709961

Token 462: ' ar' (ID: 646)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.03673132508993149
    2. '(' → logprob: -3.786731243133545
    3. ' (' → logprob: -4.411731243133545
    4. 'edges' → logprob: -7.286731243133545
    5. 'edge' → logprob: -8.036731719970703
    6. '(n' → logprob: -9.161731719970703
    7. '((' → logprob: -10.536731719970703
    8. 'de' → logprob: -10.911731719970703
    9. ' edges' → logprob: -10.911731719970703
    10. ' ' → logprob: -11.411731719970703

Token 463: 'ête' (ID: 16808)
  Prédit: 'ge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ge' → logprob: -0.20203864574432373
    2. 'edges' → logprob: -2.7020387649536133
    3. 'ges' → logprob: -2.8270387649536133
    4. 'dge' → logprob: -3.7020387649536133
    5. '(' → logprob: -4.202038764953613
    6. 'e' → logprob: -5.577038764953613
    7. 'edge' → logprob: -5.702038764953613
    8. '((' → logprob: -6.327038764953613
    9. 'ege' → logprob: -6.452038764953613
    10. 'ce' → logprob: -6.952038764953613

Token 464: ' (' (ID: 350)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.001603771117515862
    2. '(N' → logprob: -6.501603603363037
    3. '(' → logprob: -9.251604080200195
    4. ' (' → logprob: -12.626604080200195
    5. ' ((' → logprob: -13.876604080200195
    6. '(
' → logprob: -15.626604080200195
    7. '
' → logprob: -15.876604080200195
    8. '```' → logprob: -15.876604080200195
    9. '(n' → logprob: -16.001604080200195
    10. '[(' → logprob: -16.126604080200195

Token 465: 'N' (ID: 45)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.4276339113712311
    2. '(' → logprob: -1.5526338815689087
    3. '0' → logprob: -2.4276340007781982
    4. 'N' → logprob: -3.4276340007781982
    5. '1' → logprob: -4.177633762359619
    6. ' (' → logprob: -9.677634239196777
    7. ' ' → logprob: -9.927634239196777
    8. '(n' → logprob: -10.427634239196777
    9. '   ' → logprob: -10.677634239196777
    10. '2' → logprob: -11.927634239196777

Token 466: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.16524860262870789
    2. '-' → logprob: -1.9152486324310303
    3. ',' → logprob: -5.415248394012451
    4. ' ,' → logprob: -7.790248394012451
    5. ' -,' → logprob: -9.41524887084961
    6. ' ' → logprob: -10.29024887084961
    7. '   ' → logprob: -11.16524887084961
    8. '  ' → logprob: -11.66524887084961
    9. '-,' → logprob: -12.29024887084961
    10. '1' → logprob: -13.54024887084961

Token 467: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003214784199371934
    2. ' ' → logprob: -5.7532148361206055
    3. '2' → logprob: -10.753214836120605
    4. '   ' → logprob: -11.878214836120605
    5. ',' → logprob: -13.065714836120605
    6. '0' → logprob: -13.440714836120605
    7. '  ' → logprob: -13.628214836120605
    8. '
' → logprob: -13.940714836120605
    9. '```' → logprob: -14.253214836120605
    10. '１' → logprob: -15.003214836120605

Token 468: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010136376367881894
    2. ' ' → logprob: -7.00101375579834
    3. '2' → logprob: -9.37601375579834
    4. '0' → logprob: -11.81351375579834
    5. '(' → logprob: -13.37601375579834
    6. ',' → logprob: -13.43851375579834
    7. '   ' → logprob: -13.50101375579834
    8. '```' → logprob: -14.06351375579834
    9. '3' → logprob: -14.68851375579834
    10. 'N' → logprob: -14.87601375579834

Token 469: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003370118502061814
    2. ',N' → logprob: -8.125336647033691
    3. ' ,' → logprob: -10.250336647033691
    4. '(N' → logprob: -12.625336647033691
    5. ',
' → logprob: -14.125336647033691
    6. 'N' → logprob: -14.375336647033691
    7. ',n' → logprob: -15.250336647033691
    8. ')' → logprob: -15.750336647033691
    9. '```' → logprob: -16.000337600708008
    10. '   ' → logprob: -16.375337600708008

Token 470: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0019288709154352546
    2. ' N' → logprob: -6.251928806304932
    3. ',' → logprob: -16.751928329467773
    4. '(N' → logprob: -17.126928329467773
    5. ' ' → logprob: -17.501928329467773
    6. '<|end|>' → logprob: -17.751928329467773
    7. ',N' → logprob: -18.376928329467773
    8. '```' → logprob: -18.626928329467773
    9. '	N' → logprob: -18.751928329467773
    10. '   ' → logprob: -18.751928329467773

Token 471: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.833878508885391e-05
    2. ' ,' → logprob: -10.375038146972656
    3. ',N' → logprob: -12.625038146972656
    4. ',L' → logprob: -13.875038146972656
    5. ',
' → logprob: -14.125038146972656
    6. '(' → logprob: -14.875038146972656
    7. '2' → logprob: -15.125038146972656
    8. '```' → logprob: -15.375038146972656
    9. '<|end|>' → logprob: -15.500038146972656
    10. ',p' → logprob: -15.625038146972656

Token 472: ' ' (ID: 220)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0019308974733576179
    2. ' p' → logprob: -6.2519307136535645
    3. ' ' → logprob: -13.751931190490723
    4. '   ' → logprob: -14.126931190490723
    5. '(p' → logprob: -15.376931190490723
    6. '2' → logprob: -16.376930236816406
    7. '1' → logprob: -16.501930236816406
    8. '	p' → logprob: -16.626930236816406
    9. '$p' → logprob: -17.126930236816406
    10. '
' → logprob: -17.501930236816406

Token 473: '2' (ID: 17)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00016074994346126914
    2. ' p' → logprob: -8.750161170959473
    3. '   ' → logprob: -13.875161170959473
    4. '1' → logprob: -15.000161170959473
    5. ' ' → logprob: -15.000161170959473
    6. '(p' → logprob: -15.375161170959473
    7. '2' → logprob: -15.375161170959473
    8. '    
' → logprob: -15.875161170959473
    9. '
' → logprob: -16.750160217285156
    10. '    ' → logprob: -17.250160217285156

Token 474: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.04883318394422531
    2. 'p' → logprob: -3.298833131790161
    3. ' **' → logprob: -4.92383337020874
    4. '*' → logprob: -6.29883337020874
    5. '*p' → logprob: -7.42383337020874
    6. ',' → logprob: -8.048832893371582
    7. ')' → logprob: -8.673832893371582
    8. '
' → logprob: -9.173832893371582
    9. ' p' → logprob: -9.173832893371582
    10. '(p' → logprob: -9.298832893371582

Token 475: '(' (ID: 7)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.13056376576423645
    2. 'p' → logprob: -2.505563735961914
    3. '(' → logprob: -3.880563735961914
    4. '(p' → logprob: -4.130563735961914
    5. '((' → logprob: -6.880563735961914
    6. 'N' → logprob: -7.005563735961914
    7. '0' → logprob: -7.380563735961914
    8. ' (' → logprob: -7.755563735961914
    9. '(L' → logprob: -7.880563735961914
    10. '31' → logprob: -8.630563735961914

Token 476: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0634489506483078
    2. '(N' → logprob: -2.813448905944824
    3. 'len' → logprob: -7.313448905944824
    4. 'p' → logprob: -7.438448905944824
    5. '(' → logprob: -8.938448905944824
    6. '(len' → logprob: -10.188448905944824
    7. '(p' → logprob: -11.313448905944824
    8. 'n' → logprob: -11.813448905944824
    9. ' N' → logprob: -12.063448905944824
    10. ' (' → logprob: -12.188448905944824

Token 477: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.005349378567188978
    2. '(N' → logprob: -5.880349159240723
    3. ' -' → logprob: -6.255349159240723
    4. '1' → logprob: -8.005349159240723
    5. '(' → logprob: -9.255349159240723
    6. '2' → logprob: -10.005349159240723
    7. '(-' → logprob: -10.130349159240723
    8. ' (' → logprob: -11.005349159240723
    9. '-(' → logprob: -11.255349159240723
    10. '   ' → logprob: -11.505349159240723

Token 478: '2' (ID: 17)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.682617723941803
    2. '1' → logprob: -0.807617723941803
    3. '(' → logprob: -3.932617664337158
    4. '-' → logprob: -4.557617664337158
    5. 'p' → logprob: -4.932617664337158
    6. 'N' → logprob: -5.682617664337158
    7. '2' → logprob: -5.807617664337158
    8. '(p' → logprob: -6.307617664337158
    9. '0' → logprob: -7.182617664337158
    10. '```' → logprob: -7.557617664337158

Token 479: ')),' (ID: 12098)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.029553763568401337
    2. ')' → logprob: -4.0295538902282715
    3. '),' → logprob: -4.7795538902282715
    4. '-' → logprob: -6.1545538902282715
    5. ')))' → logprob: -7.7795538902282715
    6. ' ))' → logprob: -8.404553413391113
    7. ')),' → logprob: -10.029553413391113
    8. ' ' → logprob: -10.404553413391113
    9. ' -' → logprob: -10.529553413391113
    10. ',' → logprob: -11.154553413391113

Token 480: ' c' (ID: 274)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0890003442764282
    2. '   ' → logprob: -1.3390003442764282
    3. ' (' → logprob: -1.4640003442764282
    4. 'edges' → logprob: -2.0890002250671387
    5. ' edges' → logprob: -4.089000225067139
    6. '(edges' → logprob: -4.214000225067139
    7. '2' → logprob: -5.339000225067139
    8. '(N' → logprob: -5.714000225067139
    9. ')' → logprob: -6.589000225067139
    10. ' ' → logprob: -7.089000225067139

Token 481: ''est' (ID: 6616)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.42718595266342163
    2. '=' → logprob: -2.4271860122680664
    3. ')' → logprob: -2.9271860122680664
    4. 'om' → logprob: -3.0521860122680664
    5. ' (' → logprob: -3.5521860122680664
    6. '(
' → logprob: -4.177186012268066
    7. 'es' → logprob: -4.177186012268066
    8. 'o' → logprob: -4.802186012268066
    9. '('' → logprob: -4.802186012268066
    10. 'a' → logprob: -4.927186012268066

Token 482: '-à' (ID: 56297)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.39395150542259216
    2. '(' → logprob: -1.5189515352249146
    3. '(N' → logprob: -2.518951416015625
    4. '  ' → logprob: -4.518951416015625
    5. '   ' → logprob: -4.643951416015625
    6. ' ' → logprob: -6.268951416015625
    7. ')' → logprob: -7.143951416015625
    8. '((' → logprob: -7.268951416015625
    9. '(
' → logprob: -7.768951416015625
    10. 'à' → logprob: -7.893951416015625

Token 483: '-dire' (ID: 76064)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.2278159111738205
    2. '1' → logprob: -1.852815866470337
    3. '0' → logprob: -3.977815866470337
    4. '4' → logprob: -4.602816104888916
    5. '(' → logprob: -4.727816104888916
    6. '3' → logprob: -5.477816104888916
    7. '-' → logprob: -6.602816104888916
    8. '```' → logprob: -7.102816104888916
    9. 'N' → logprob: -8.477815628051758
    10. 'la' → logprob: -8.477815628051758

Token 484: ' une' (ID: 2463)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.16713598370552063
    2. '(' → logprob: -1.9171359539031982
    3. ' (' → logprob: -5.042136192321777
    4. '((' → logprob: -7.917136192321777
    5. '(
' → logprob: -10.542136192321777
    6. '(n' → logprob: -10.792136192321777
    7. '   ' → logprob: -12.167136192321777
    8. '2' → logprob: -13.292136192321777
    9. '(L' → logprob: -13.292136192321777
    10. '  ' → logprob: -13.542136192321777

Token 485: ' ar' (ID: 646)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.5458765029907227
    2. ' (' → logprob: -1.0458765029907227
    3. '(' → logprob: -2.6708765029907227
    4. '(n' → logprob: -10.170876502990723
    5. '(
' → logprob: -11.045876502990723
    6. ' ' → logprob: -11.420876502990723
    7. '0' → logprob: -12.295876502990723
    8. '2' → logprob: -12.545876502990723
    9. '  ' → logprob: -13.045876502990723
    10. 'space' → logprob: -13.170876502990723

Token 486: 'ête' (ID: 16808)
  Prédit: 'ête'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ête' → logprob: -0.02959703840315342
    2. '(' → logprob: -3.654597043991089
    3. '((' → logprob: -7.15459680557251
    4. 'te' → logprob: -7.52959680557251
    5. 'êtes' → logprob: -7.52959680557251
    6. 'ète' → logprob: -8.279597282409668
    7. 'edge' → logprob: -8.279597282409668
    8. 're' → logprob: -8.529597282409668
    9. 'être' → logprob: -9.404597282409668
    10. '2' → logprob: -9.529597282409668

Token 487: ' parallèle' (ID: 186552)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.46982070803642273
    2. ' (' → logprob: -1.0948207378387451
    3. ',' → logprob: -3.719820737838745
    4. '(' → logprob: -4.219820499420166
    5. '(n' → logprob: -7.969820499420166
    6. '((' → logprob: -8.594820976257324
    7. '   ' → logprob: -8.844820976257324
    8. ' ' → logprob: -8.969820976257324
    9. '
' → logprob: -8.969820976257324
    10. ' ,' → logprob: -9.219820976257324

Token 488: ' avec' (ID: 3937)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2562094032764435
    2. '(N' → logprob: -2.256209373474121
    3. '   ' → logprob: -2.381209373474121
    4. ' (' → logprob: -5.006209373474121
    5. '(' → logprob: -5.006209373474121
    6. ' ,' → logprob: -5.131209373474121
    7. ')' → logprob: -5.881209373474121
    8. ',(' → logprob: -6.131209373474121
    9. ',
' → logprob: -6.506209373474121
    10. '  ' → logprob: -7.381209373474121

Token 489: ' un' (ID: 537)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.31554970145225525
    2. '2' → logprob: -2.190549612045288
    3. '(N' → logprob: -2.190549612045288
    4. ' (' → logprob: -3.190549612045288
    5. ' ' → logprob: -5.815549850463867
    6. '((' → logprob: -7.440549850463867
    7. 'pow' → logprob: -7.440549850463867
    8. 'weight' → logprob: -7.815549850463867
    9. '1' → logprob: -7.815549850463867
    10. ')' → logprob: -8.065549850463867

Token 490: ' poids' (ID: 56058)
  Prédit: 'po'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'po' → logprob: -0.5548813939094543
    2. '2' → logprob: -1.4298813343048096
    3. 'weight' → logprob: -2.1798813343048096
    4. '(' → logprob: -3.1798813343048096
    5. 'pow' → logprob: -4.054881572723389
    6. '(N' → logprob: -5.304881572723389
    7. '1' → logprob: -5.804881572723389
    8. ' poids' → logprob: -6.804881572723389
    9. 'N' → logprob: -7.179881572723389
    10. ' (' → logprob: -7.179881572723389

Token 491: ' équ' (ID: 18899)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.049049317836761475
    2. '2' → logprob: -3.2990493774414062
    3. ' (' → logprob: -5.174049377441406
    4. '=' → logprob: -5.799049377441406
    5. '(
' → logprob: -6.799049377441406
    6. '(N' → logprob: -7.674049377441406
    7. ' =' → logprob: -8.049049377441406
    8. '((' → logprob: -9.299049377441406
    9. '**' → logprob: -9.424049377441406
    10. ' ' → logprob: -10.299049377441406

Token 492: 'ivalent' (ID: 19253)
  Prédit: 'ivalent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ivalent' → logprob: -0.014844715595245361
    2. 'al' → logprob: -4.76484489440918
    3. 'iv' → logprob: -5.51484489440918
    4. 'ival' → logprob: -6.76484489440918
    5. 'ivant' → logprob: -8.13984489440918
    6. '2' → logprob: -9.01484489440918
    7. 'a' → logprob: -9.13984489440918
    8. 'au' → logprob: -9.38984489440918
    9. '=' → logprob: -9.51484489440918
    10. 'ale' → logprob: -9.63984489440918

Token 493: ' à' (ID: 1221)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06123026832938194
    2. '(N' → logprob: -3.561230182647705
    3. '**' → logprob: -4.186230182647705
    4. '2' → logprob: -4.311230182647705
    5. ' (' → logprob: -6.561230182647705
    6. '((' → logprob: -7.936230182647705
    7. '(
' → logprob: -8.311230659484863
    8. '(pow' → logprob: -8.561230659484863
    9. '   ' → logprob: -9.561230659484863
    10. '=' → logprob: -10.811230659484863

Token 494: ' la' (ID: 557)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.004876977298408747
    2. ' ' → logprob: -5.379877090454102
    3. '(' → logprob: -9.004877090454102
    4. '1' → logprob: -9.629877090454102
    5. ' (' → logprob: -10.254877090454102
    6. '```' → logprob: -11.379877090454102
    7. 'p' → logprob: -12.129877090454102
    8. 'pow' → logprob: -12.254877090454102
    9. ' p' → logprob: -12.629877090454102
    10. '(p' → logprob: -12.754877090454102

Token 495: ' puissance' (ID: 63494)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.008029716089367867
    2. ' ' → logprob: -4.883029937744141
    3. '1' → logprob: -8.13302993774414
    4. 'p' → logprob: -9.50802993774414
    5. ' p' → logprob: -10.38302993774414
    6. '(' → logprob: -11.75802993774414
    7. ' (' → logprob: -12.25802993774414
    8. 'pow' → logprob: -12.50802993774414
    9. '```' → logprob: -12.88302993774414
    10. '  ' → logprob: -13.63302993774414

Token 496: ' de' (ID: 334)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' of' → logprob: -1.0047799348831177
    2. ' ' → logprob: -1.7547799348831177
    3. '2' → logprob: -2.004779815673828
    4. '(' → logprob: -2.129779815673828
    5. 'of' → logprob: -2.879779815673828
    6. '   ' → logprob: -3.254779815673828
    7. ' ,' → logprob: -3.254779815673828
    8. '    ' → logprob: -4.004779815673828
    9. ' (' → logprob: -4.254779815673828
    10. '  ' → logprob: -4.254779815673828

Token 497: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.005152754485607147
    2. ' ' → logprob: -5.505152702331543
    3. '(N' → logprob: -7.380152702331543
    4. '(' → logprob: -8.380152702331543
    5. ' (' → logprob: -8.880152702331543
    6. '1' → logprob: -10.005152702331543
    7. '```' → logprob: -11.755152702331543
    8. 'N' → logprob: -12.630152702331543
    9. '10' → logprob: -12.630152702331543
    10. ' two' → logprob: -12.880152702331543

Token 498: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00043949027894996107
    2. ' ' → logprob: -7.875439643859863
    3. '1' → logprob: -11.000439643859863
    4. '```' → logprob: -11.375439643859863
    5. 'p' → logprob: -11.750439643859863
    6. '(N' → logprob: -12.000439643859863
    7. ' p' → logprob: -12.625439643859863
    8. '(' → logprob: -12.625439643859863
    9. '   ' → logprob: -12.875439643859863
    10. '  ' → logprob: -13.125439643859863

Token 499: ' correspond' (ID: 11095)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7588552832603455
    2. '**' → logprob: -0.8838552832603455
    3. '(N' → logprob: -2.3838553428649902
    4. ',' → logprob: -4.75885534286499
    5. ' (' → logprob: -5.50885534286499
    6. '((' → logprob: -5.63385534286499
    7. '(
' → logprob: -6.00885534286499
    8. '   ' → logprob: -6.13385534286499
    9. '```' → logprob: -6.38385534286499
    10. '[' → logprob: -6.63385534286499

Token 500: 'ante' (ID: 2116)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.5213363766670227
    2. '2' → logprob: -1.896336317062378
    3. 'ent' → logprob: -2.021336317062378
    4. 'ente' → logprob: -3.146336317062378
    5. ')' → logprob: -3.521336317062378
    6. ')**' → logprob: -3.771336317062378
    7. 'ents' → logprob: -4.896336555480957
    8. ' à' → logprob: -5.396336555480957
    9. '   ' → logprob: -5.521336555480957
    10. '(' → logprob: -6.021336555480957

Token 501: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8233931660652161
    2. '(N' → logprob: -0.9483931660652161
    3. ',' → logprob: -2.4483931064605713
    4. '   ' → logprob: -2.8233931064605713
    5. '(' → logprob: -4.32339334487915
    6. '[N' → logprob: -5.32339334487915
    7. ' (' → logprob: -6.07339334487915
    8. ')
' → logprob: -6.57339334487915
    9. '((' → logprob: -6.82339334487915
    10. '[(' → logprob: -7.19839334487915

Token 502: '   ' (ID: 271)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.1076585054397583
    2. '(edges' → logprob: -2.3576583862304688
    3. '   ' → logprob: -5.732658386230469
    4. ' edges' → logprob: -6.232658386230469
    5. '.edges' → logprob: -6.982658386230469
    6. ',' → logprob: -7.607658386230469
    7. '(N' → logprob: -8.232658386230469
    8. '(' → logprob: -8.357658386230469
    9. '```' → logprob: -9.482658386230469
    10. ')' → logprob: -9.732658386230469

Token 503: ' #' (ID: 1069)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.7261654138565063
    2. '(N' → logprob: -0.9761654138565063
    3. '(edges' → logprob: -2.101165294647217
    4. '(' → logprob: -4.226165294647217
    5. ' edges' → logprob: -6.476165294647217
    6. '(
' → logprob: -7.476165294647217
    7. '.edges' → logprob: -8.726165771484375
    8. ',' → logprob: -8.976165771484375
    9. '((' → logprob: -9.601165771484375
    10. ' (' → logprob: -10.351165771484375

Token 504: ' ' (ID: 220)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.0007981925155036151
    2. ' edges' → logprob: -7.375798225402832
    3. '(edges' → logprob: -8.750798225402832
    4. '.edges' → logprob: -11.750798225402832
    5. '   ' → logprob: -12.500798225402832
    6. '(
' → logprob: -14.500798225402832
    7. ',' → logprob: -14.750798225402832
    8. '```' → logprob: -15.375798225402832
    9. '_edges' → logprob: -16.000797271728516
    10. ')' → logprob: -16.250797271728516

Token 505: '2' (ID: 17)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.004475696943700314
    2. ' edges' → logprob: -6.1294755935668945
    3. '(edges' → logprob: -6.7544755935668945
    4. '(' → logprob: -7.6294755935668945
    5. ',' → logprob: -8.004475593566895
    6. '(
' → logprob: -9.004475593566895
    7. '(N' → logprob: -9.254475593566895
    8. ')' → logprob: -10.379475593566895
    9. '.edges' → logprob: -11.004475593566895
    10. '   ' → logprob: -11.754475593566895

Token 506: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.0016055555315688252
    2. ' **' → logprob: -6.50160551071167
    3. '*' → logprob: -9.251605987548828
    4. ' *' → logprob: -12.501605987548828
    5. '**)' → logprob: -13.251605987548828
    6. '2' → logprob: -14.376605987548828
    7. '**,' → logprob: -14.876605987548828
    8. '*p' → logprob: -15.626605987548828
    9. ')**' → logprob: -15.876605987548828
    10. '*(' → logprob: -16.126605987548828

Token 507: '(' (ID: 7)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.01277096476405859
    2. '(' → logprob: -4.387771129608154
    3. '((' → logprob: -8.762770652770996
    4. ' (' → logprob: -9.262770652770996
    5. '(n' → logprob: -11.762770652770996
    6. '(
' → logprob: -14.262770652770996
    7. '2' → logprob: -14.762770652770996
    8. '{' → logprob: -15.387770652770996
    9. '（' → logprob: -15.762770652770996
    10. 'N' → logprob: -16.137771606445312

Token 508: 'N' (ID: 45)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.20236462354660034
    2. 'N' → logprob: -1.7023646831512451
    3. '(' → logprob: -7.077364444732666
    4. ' (' → logprob: -9.327364921569824
    5. ' N' → logprob: -11.827364921569824
    6. '(
' → logprob: -12.702364921569824
    7. '   ' → logprob: -13.202364921569824
    8. '	N' → logprob: -13.577364921569824
    9. '((' → logprob: -13.827364921569824
    10. '2' → logprob: -13.827364921569824

Token 509: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0889434963464737
    2. ' -' → logprob: -2.4639434814453125
    3. ' ' → logprob: -13.338943481445312
    4. '2' → logprob: -14.088943481445312
    5. ')' → logprob: -14.838943481445312
    6. '   ' → logprob: -14.838943481445312
    7. '```' → logprob: -15.213943481445312
    8. '−' → logprob: -15.713943481445312
    9. '[' → logprob: -15.963943481445312
    10. '1' → logprob: -15.963943481445312

Token 510: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.002424767706543207
    2. '-' → logprob: -6.252424716949463
    3. '1' → logprob: -8.002425193786621
    4. ' ' → logprob: -9.127425193786621
    5. '   ' → logprob: -10.877425193786621
    6. ' -' → logprob: -11.127425193786621
    7. '```' → logprob: -11.627425193786621
    8. '(' → logprob: -11.877425193786621
    9. '  ' → logprob: -13.502425193786621
    10. ')' → logprob: -14.377425193786621

Token 511: ')' (ID: 8)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.06069135665893555
    2. ')' → logprob: -2.9356913566589355
    3. '),' → logprob: -5.4356913566589355
    4. ')))' → logprob: -6.9356913566589355
    5. ')),' → logprob: -8.685691833496094
    6. ',' → logprob: -8.935691833496094
    7. '**' → logprob: -9.685691833496094
    8. ' ))' → logprob: -10.310691833496094
    9. '))
' → logprob: -10.560691833496094
    10. ')**' → logprob: -11.060691833496094

Token 512: ' :' (ID: 712)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004533142491709441
    2. '))' → logprob: -8.250452995300293
    3. ',' → logprob: -9.250452995300293
    4. ' )' → logprob: -10.250452995300293
    5. ',)' → logprob: -10.500452995300293
    6. ')
' → logprob: -11.125452995300293
    7. '),' → logprob: -12.375452995300293
    8. ')))' → logprob: -12.625452995300293
    9. '   ' → logprob: -12.625452995300293
    10. ')**' → logprob: -13.750452995300293

Token 513: ' car' (ID: 1669)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0023349744733422995
    2. ' ' → logprob: -6.127335071563721
    3. '1' → logprob: -9.377334594726562
    4. 'pow' → logprob: -10.502334594726562
    5. ')' → logprob: -11.377334594726562
    6. '(' → logprob: -11.502334594726562
    7. '   ' → logprob: -13.002334594726562
    8. '```' → logprob: -13.002334594726562
    9. 'edges' → logprob: -13.377334594726562
    10. '**' → logprob: -13.377334594726562

Token 514: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.21262705326080322
    2. '(N' → logprob: -1.7126270532608032
    3. ' N' → logprob: -4.962626934051514
    4. ' (' → logprob: -6.212626934051514
    5. '2' → logprob: -6.462626934051514
    6. '(' → logprob: -8.462627410888672
    7. ' ' → logprob: -9.212627410888672
    8. '`' → logprob: -9.587627410888672
    9. 'p' → logprob: -10.212627410888672
    10. '0' → logprob: -10.587627410888672

Token 515: ' a' (ID: 261)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.29160094261169434
    2. ' -' → logprob: -1.6666009426116943
    3. ')' → logprob: -3.1666009426116943
    4. '   ' → logprob: -5.041601181030273
    5. '**' → logprob: -5.291601181030273
    6. '==' → logprob: -6.541601181030273
    7. '```' → logprob: -7.041601181030273
    8. '#' → logprob: -7.291601181030273
    9. ' ==' → logprob: -7.291601181030273
    10. ' is' → logprob: -7.416601181030273

Token 516: ' été' (ID: 9799)
  Prédit: 'dé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dé' → logprob: -0.519548773765564
    2. ' commencé' → logprob: -2.6445488929748535
    3. '1' → logprob: -2.7695488929748535
    4. 'comm' → logprob: -3.0195488929748535
    5. 'été' → logprob: -3.1445488929748535
    6. '2' → logprob: -3.2695488929748535
    7. 'de' → logprob: -3.5195488929748535
    8. ' été' → logprob: -3.6445488929748535
    9. '-' → logprob: -4.2695488929748535
    10. 'd' → logprob: -4.2695488929748535

Token 517: ' incr' (ID: 52395)
  Prédit: 'increment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'increment' → logprob: -0.227434441447258
    2. 'in' → logprob: -2.2274343967437744
    3. 'augment' → logprob: -2.7274343967437744
    4. ' incr' → logprob: -4.4774346351623535
    5. ' augmenté' → logprob: -4.8524346351623535
    6. '1' → logprob: -5.8524346351623535
    7. ' increment' → logprob: -5.8524346351623535
    8. 'dé' → logprob: -6.6024346351623535
    9. ' ' → logprob: -7.1024346351623535
    10. 'aug' → logprob: -7.4774346351623535

Token 518: 'ément' (ID: 17645)
  Prédit: 'ément'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ément' → logprob: -0.060723334550857544
    2. 'ent' → logprob: -3.435723304748535
    3. 'ment' → logprob: -3.810723304748535
    4. '-' → logprob: -5.935723304748535
    5. 'ement' → logprob: -6.810723304748535
    6. 'é' → logprob: -7.810723304748535
    7. '2' → logprob: -9.435723304748535
    8. 'ented' → logprob: -9.810723304748535
    9. 'ént' → logprob: -9.935723304748535
    10. '   ' → logprob: -10.310723304748535

Token 519: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.07338952273130417
    2. '-' → logprob: -3.5733895301818848
    3. 'ée' → logprob: -4.073389530181885
    4. '   ' → logprob: -4.698389530181885
    5. '2' → logprob: -5.198389530181885
    6. 'ed' → logprob: -5.573389530181885
    7. ' ' → logprob: -6.073389530181885
    8. 'ent' → logprob: -6.948389530181885
    9. 'è' → logprob: -7.573389530181885
    10. '**' → logprob: -7.823389530181885

Token 520: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3596453070640564
    2. '   ' → logprob: -1.8596453666687012
    3. ')' → logprob: -1.9846453666687012
    4. ',
' → logprob: -5.734645366668701
    5. 'edges' → logprob: -5.859645366668701
    6. ')
' → logprob: -6.609645366668701
    7. ' ,' → logprob: -7.484645366668701
    8. '(edges' → logprob: -7.859645366668701
    9. ' edges' → logprob: -8.859644889831543
    10. '),' → logprob: -9.109644889831543

Token 521: ' pour' (ID: 1930)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.7601043581962585
    2. ')' → logprob: -1.5101044178009033
    3. ' )' → logprob: -1.5101044178009033
    4. '   ' → logprob: -3.0101044178009033
    5. 'N' → logprob: -4.635104179382324
    6. ' N' → logprob: -4.760104179382324
    7. ' ' → logprob: -4.760104179382324
    8. '1' → logprob: -4.885104179382324
    9. '  ' → logprob: -5.885104179382324
    10. ',' → logprob: -7.135104179382324

Token 522: ' correspond' (ID: 11095)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6312087774276733
    2. 'N' → logprob: -2.006208896636963
    3. 'le' → logprob: -3.506208896636963
    4. ' N' → logprob: -3.756208896636963
    5. ' i' → logprob: -3.881208896636963
    6. '(N' → logprob: -3.881208896636963
    7. '(' → logprob: -4.006208896636963
    8. '2' → logprob: -4.006208896636963
    9. 'calcul' → logprob: -4.006208896636963
    10. 'l' → logprob: -4.131208896636963

Token 523: 're' (ID: 264)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.8593819737434387
    2. 're' → logprob: -1.484381914138794
    3. ' à' → logprob: -1.734381914138794
    4. 'ance' → logprob: -3.109381914138794
    5. 'ant' → logprob: -3.359381914138794
    6. 'er' → logprob: -3.359381914138794
    7. 'a' → logprob: -4.109382152557373
    8. '=' → logprob: -4.234382152557373
    9. 'au' → logprob: -5.109382152557373
    10. ')' → logprob: -5.359382152557373

Token 524: ' à' (ID: 1221)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -1.1673917770385742
    2. ' à' → logprob: -1.2923917770385742
    3. '   ' → logprob: -1.7923917770385742
    4. ')' → logprob: -2.167391777038574
    5. '(N' → logprob: -3.167391777038574
    6. 'à' → logprob: -3.667391777038574
    7. ',' → logprob: -4.042391777038574
    8. ' to' → logprob: -4.292391777038574
    9. 'to' → logprob: -4.917391777038574
    10. '(' → logprob: -5.167391777038574

Token 525: ' la' (ID: 557)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.05290612205862999
    2. ' ' → logprob: -4.177906036376953
    3. 'p' → logprob: -4.427906036376953
    4. 'N' → logprob: -4.677906036376953
    5. '(N' → logprob: -5.302906036376953
    6. ' p' → logprob: -5.802906036376953
    7. ' N' → logprob: -6.302906036376953
    8. '**' → logprob: -6.927906036376953
    9. '1' → logprob: -7.177906036376953
    10. '(' → logprob: -7.427906036376953

Token 526: ' bonne' (ID: 24450)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.1740509569644928
    2. '(N' → logprob: -2.42405104637146
    3. 'p' → logprob: -2.79905104637146
    4. ' N' → logprob: -5.674050807952881
    5. ' (' → logprob: -6.049050807952881
    6. '2' → logprob: -6.049050807952881
    7. ' p' → logprob: -6.924050807952881
    8. ' ' → logprob: -8.299051284790039
    9. '`' → logprob: -8.924051284790039
    10. 'n' → logprob: -9.049051284790039

Token 527: ' puissance' (ID: 63494)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.21859924495220184
    2. '**' → logprob: -2.093599319458008
    3. '2' → logprob: -3.718599319458008
    4. ')' → logprob: -4.093599319458008
    5. 'exp' → logprob: -4.968599319458008
    6. ' )' → logprob: -5.218599319458008
    7. ' exponent' → logprob: -5.218599319458008
    8. 'pow' → logprob: -5.718599319458008
    9. '```' → logprob: -6.218599319458008
    10. '(' → logprob: -6.343599319458008

Token 528: ' de' (ID: 334)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.856383740901947
    2. ')' → logprob: -1.2313838005065918
    3. '   ' → logprob: -1.3563838005065918
    4. '(' → logprob: -4.856383800506592
    5. ')**' → logprob: -5.356383800506592
    6. '[' → logprob: -5.856383800506592
    7. '(N' → logprob: -6.106383800506592
    8. ' **' → logprob: -6.606383800506592
    9. ' of' → logprob: -6.981383800506592
    10. ' )' → logprob: -6.981383800506592

Token 529: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0005638765869662166
    2. ' ' → logprob: -7.500564098358154
    3. '1' → logprob: -12.375563621520996
    4. '```' → logprob: -13.500563621520996
    5. '(' → logprob: -13.625563621520996
    6. '(N' → logprob: -13.875563621520996
    7. ' deux' → logprob: -14.375563621520996
    8. 'de' → logprob: -14.375563621520996
    9. '`' → logprob: -14.750563621520996
    10. 'N' → logprob: -15.125563621520996

Token 530: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00025669054593890905
    2. ' ' → logprob: -8.375256538391113
    3. '1' → logprob: -11.375256538391113
    4. '```' → logprob: -11.375256538391113
    5. '   ' → logprob: -14.625256538391113
    6. '(' → logprob: -14.625256538391113
    7. '(N' → logprob: -15.125256538391113
    8. ' deux' → logprob: -15.375256538391113
    9. '  ' → logprob: -15.375256538391113
    10. '`' → logprob: -15.375256538391113

Token 531: ' on' (ID: 402)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009233342483639717
    2. ',' → logprob: -4.759233474731445
    3. ')
' → logprob: -8.509233474731445
    4. '   ' → logprob: -8.759233474731445
    5. ',)' → logprob: -9.509233474731445
    6. '),' → logprob: -9.634233474731445
    7. '))' → logprob: -10.634233474731445
    8. '(' → logprob: -11.134233474731445
    9. ' )' → logprob: -11.259233474731445
    10. ').' → logprob: -11.509233474731445

Token 532: ' utilise' (ID: 70283)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.31286928057670593
    2. '**' → logprob: -1.8128693103790283
    3. ' **' → logprob: -3.0628693103790283
    4. ' )' → logprob: -3.4378693103790283
    5. ' continue' → logprob: -4.687869071960449
    6. ')**' → logprob: -4.937869071960449
    7. ' ' → logprob: -5.812869071960449
    8. '*' → logprob: -6.312869071960449
    9. '   ' → logprob: -7.062869071960449
    10. '-' → logprob: -7.562869071960449

Token 533: ' N' (ID: 478)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.1160519123077393
    2. 'N' → logprob: -1.1160519123077393
    3. ' (' → logprob: -2.1160519123077393
    4. ' ' → logprob: -2.6160519123077393
    5. ' N' → logprob: -2.6160519123077393
    6. '(N' → logprob: -2.7410519123077393
    7. '(' → logprob: -4.74105167388916
    8. '   ' → logprob: -6.61605167388916
    9. '  ' → logprob: -6.86605167388916
    10. ')' → logprob: -7.36605167388916

Token 534: '-' (ID: 12)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.08283928781747818
    2. '-' → logprob: -2.582839250564575
    3. '   ' → logprob: -5.582839488983154
    4. ' ' → logprob: -9.332839012145996
    5. '  ' → logprob: -10.332839012145996
    6. '**' → logprob: -10.332839012145996
    7. ')' → logprob: -11.707839012145996
    8. '```' → logprob: -11.707839012145996
    9. ' **' → logprob: -13.332839012145996
    10. '    ' → logprob: -13.457839012145996

Token 535: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.53050296427682e-05
    2. ' ' → logprob: -9.37508487701416
    3. '   ' → logprob: -15.50008487701416
    4. '1' → logprob: -15.62508487701416
    5. '```' → logprob: -16.750085830688477
    6. '  ' → logprob: -17.875085830688477
    7. '
' → logprob: -19.375085830688477
    8. '۲' → logprob: -19.500085830688477
    9. '    ' → logprob: -19.625085830688477
    10. '	' → logprob: -19.875085830688477

Token 536: ' (' (ID: 350)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25970765948295593
    2. '   ' → logprob: -1.5097076892852783
    3. ')
' → logprob: -4.884707450866699
    4. ',' → logprob: -9.2597074508667
    5. 'edges' → logprob: -10.3847074508667
    6. ' )' → logprob: -10.6347074508667
    7. ')
' → logprob: -11.8847074508667
    8. '),' → logprob: -12.0097074508667
    9. '(edges' → logprob: -12.5097074508667
    10. ' edges' → logprob: -13.1347074508667

Token 537: 'ex' (ID: 490)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.004063797648996115
    2. ')' → logprob: -5.754063606262207
    3. ' ))' → logprob: -7.754063606262207
    4. ')))' → logprob: -8.379063606262207
    5. '))
' → logprob: -9.004063606262207
    6. '**' → logprob: -9.754063606262207
    7. '   ' → logprob: -11.629063606262207
    8. ' ' → logprob: -11.629063606262207
    9. ' )' → logprob: -12.254063606262207
    10. '))
' → logprob: -12.379063606262207

Token 538: 'emple' (ID: 55259)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5331323146820068
    2. 'ponent' → logprob: -1.6581323146820068
    3. 'p' → logprob: -2.283132314682007
    4. '2' → logprob: -2.783132314682007
    5. '**' → logprob: -3.408132314682007
    6. '```' → logprob: -5.033132553100586
    7. ' -' → logprob: -5.283132553100586
    8. ')**' → logprob: -5.783132553100586
    9. 'pl' → logprob: -6.533132553100586
    10. ')' → logprob: -6.658132553100586

Token 539: ' :' (ID: 712)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.6701447367668152
    2. ')' → logprob: -1.29514479637146
    3. ')**' → logprob: -2.04514479637146
    4. '))' → logprob: -2.67014479637146
    5. '```' → logprob: -5.545144557952881
    6. ' **' → logprob: -5.670144557952881
    7. '-' → logprob: -6.545144557952881
    8. ')))' → logprob: -6.545144557952881
    9. '**)' → logprob: -7.170144557952881
    10. ':' → logprob: -7.170144557952881

Token 540: ' pour' (ID: 1930)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.02061639539897442
    2. '1' → logprob: -5.02061653137207
    3. '(N' → logprob: -5.27061653137207
    4. ' N' → logprob: -6.14561653137207
    5. 'p' → logprob: -6.39561653137207
    6. ')' → logprob: -7.02061653137207
    7. '   ' → logprob: -7.02061653137207
    8. 'L' → logprob: -7.14561653137207
    9. ' ' → logprob: -7.52061653137207
    10. '0' → logprob: -7.52061653137207

Token 541: ' N' (ID: 478)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7296234965324402
    2. 'N' → logprob: -1.229623556137085
    3. '2' → logprob: -1.854623556137085
    4. 'p' → logprob: -3.479623556137085
    5. '0' → logprob: -3.604623556137085
    6. ' N' → logprob: -5.354623317718506
    7. ' ' → logprob: -5.854623317718506
    8. ' p' → logprob: -5.979623317718506
    9. ')' → logprob: -7.979623317718506
    10. 'L' → logprob: -8.854623794555664

Token 542: '=' (ID: 28)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.23086470365524292
    2. ' -' → logprob: -1.6058647632598877
    3. ')' → logprob: -6.230864524841309
    4. '   ' → logprob: -6.480864524841309
    5. '<|end|>' → logprob: -7.105864524841309
    6. '  ' → logprob: -7.480864524841309
    7. ' ' → logprob: -8.480864524841309
    8. ')-' → logprob: -9.855864524841309
    9. '```' → logprob: -9.980864524841309
    10. '#' → logprob: -10.105864524841309

Token 543: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.06308829039335251
    2. '3' → logprob: -2.8130881786346436
    3. ' ' → logprob: -6.938088417053223
    4. '1' → logprob: -9.438088417053223
    5. ')' → logprob: -10.313088417053223
    6. '   ' → logprob: -10.563088417053223
    7. '  ' → logprob: -13.188088417053223
    8. '4' → logprob: -13.313088417053223
    9. '```' → logprob: -13.563088417053223
    10. ' )' → logprob: -14.188088417053223

Token 544: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17447367310523987
    2. '))' → logprob: -2.299473762512207
    3. ')))' → logprob: -3.549473762512207
    4. ')**' → logprob: -4.049473762512207
    5. '**' → logprob: -4.924473762512207
    6. ',' → logprob: -5.924473762512207
    7. '   ' → logprob: -6.549473762512207
    8. '),' → logprob: -6.799473762512207
    9. ' ' → logprob: -8.424473762512207
    10. ' )' → logprob: -8.799473762512207

Token 545: ' poids' (ID: 56058)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.12749715149402618
    2. '**' → logprob: -2.8774971961975098
    3. '1' → logprob: -3.2524971961975098
    4. ' ' → logprob: -4.75249719619751
    5. 'N' → logprob: -5.87749719619751
    6. ')' → logprob: -6.00249719619751
    7. '   ' → logprob: -6.25249719619751
    8. '#' → logprob: -7.00249719619751
    9. '  ' → logprob: -7.00249719619751
    10. '(' → logprob: -7.25249719619751

Token 546: '=' (ID: 28)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.7520308494567871
    2. ')' → logprob: -1.002030849456787
    3. '   ' → logprob: -2.877030849456787
    4. '))' → logprob: -3.377030849456787
    5. ')**' → logprob: -3.877030849456787
    6. '=' → logprob: -4.627030849456787
    7. ')))' → logprob: -4.877030849456787
    8. ' ' → logprob: -5.127030849456787
    9. ',' → logprob: -5.252030849456787
    10. ' **' → logprob: -5.252030849456787

Token 547: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0018734284676611423
    2. '2' → logprob: -7.00187349319458
    3. ' ' → logprob: -7.00187349319458
    4. '0' → logprob: -10.126873016357422
    5. '   ' → logprob: -12.001873016357422
    6. '  ' → logprob: -13.251873016357422
    7. '4' → logprob: -14.001873016357422
    8. ')' → logprob: -14.501873016357422
    9. 'p' → logprob: -14.501873016357422
    10. '`' → logprob: -14.876873016357422

Token 548: ' ;' (ID: 4605)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.07958139479160309
    2. ')' → logprob: -2.5795814990997314
    3. '**' → logprob: -7.829581260681152
    4. '   ' → logprob: -8.579581260681152
    5. ')))' → logprob: -10.329581260681152
    6. ')**' → logprob: -10.579581260681152
    7. '+' → logprob: -11.079581260681152
    8. '))
' → logprob: -11.704581260681152
    9. ' ))' → logprob: -11.704581260681152
    10. '),' → logprob: -12.329581260681152

Token 549: ' pour' (ID: 1930)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0041872672736644745
    2. ' ' → logprob: -5.754187107086182
    3. '   ' → logprob: -7.254187107086182
    4. '  ' → logprob: -9.12918758392334
    5. 'for' → logprob: -10.75418758392334
    6. '       ' → logprob: -10.87918758392334
    7. 'N' → logprob: -10.87918758392334
    8. '    ' → logprob: -11.12918758392334
    9. '1' → logprob: -11.12918758392334
    10. '**' → logprob: -11.25418758392334

Token 550: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0001617035741219297
    2. ' N' → logprob: -8.750162124633789
    3. '2' → logprob: -13.750162124633789
    4. '3' → logprob: -14.875162124633789
    5. ' ' → logprob: -14.875162124633789
    6. 'for' → logprob: -15.000162124633789
    7. '   ' → logprob: -15.125162124633789
    8. '
' → logprob: -15.625162124633789
    9. '#' → logprob: -15.875162124633789
    10. '  ' → logprob: -16.00016212463379

Token 551: '=' (ID: 28)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3509453237056732
    2. '=' → logprob: -1.4759453535079956
    3. ' -' → logprob: -2.975945234298706
    4. '==' → logprob: -4.725945472717285
    5. ' ==' → logprob: -5.850945472717285
    6. ' =' → logprob: -6.100945472717285
    7. ' ' → logprob: -7.350945472717285
    8. '   ' → logprob: -7.350945472717285
    9. '2' → logprob: -7.975945472717285
    10. '#' → logprob: -8.475945472717285

Token 552: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0013171432074159384
    2. '2' → logprob: -7.001317024230957
    3. ' ' → logprob: -8.001317024230957
    4. '1' → logprob: -9.626317024230957
    5. '
' → logprob: -12.876317024230957
    6. ')' → logprob: -14.251317024230957
    7. '   ' → logprob: -14.626317024230957
    8. '  ' → logprob: -15.688817024230957
    9. '```' → logprob: -16.313817977905273
    10. '<|end|>' → logprob: -16.626317977905273

Token 553: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008404999040067196
    2. ' ,' → logprob: -5.0084052085876465
    3. ')' → logprob: -7.1334052085876465
    4. ' ' → logprob: -8.008404731750488
    5. '**' → logprob: -8.133404731750488
    6. ')**' → logprob: -9.133404731750488
    7. '),' → logprob: -9.883404731750488
    8. '2' → logprob: -10.508404731750488
    9. '   ' → logprob: -11.008404731750488
    10. '  ' → logprob: -11.508404731750488

Token 554: ' poids' (ID: 56058)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.2396838665008545
    2. ' ' → logprob: -2.2396838665008545
    3. 'N' → logprob: -2.9896838665008545
    4. '1' → logprob: -4.364684104919434
    5. ' N' → logprob: -4.489684104919434
    6. '(N' → logprob: -4.614684104919434
    7. '**' → logprob: -4.989684104919434
    8. 'weights' → logprob: -5.239684104919434
    9. 'p' → logprob: -6.239684104919434
    10. ' (' → logprob: -6.364684104919434

Token 555: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0647585466504097
    2. '2' → logprob: -2.939758539199829
    3. ',' → logprob: -5.939758777618408
    4. '   ' → logprob: -6.439758777618408
    5. ')' → logprob: -6.564758777618408
    6. ' =' → logprob: -6.814758777618408
    7. '**' → logprob: -6.939758777618408
    8. ' ' → logprob: -7.314758777618408
    9. '4' → logprob: -7.689758777618408
    10. '  ' → logprob: -7.939758777618408

Token 556: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.054500666621607e-06
    2. ' ' → logprob: -13.00000286102295
    3. '4' → logprob: -14.75000286102295
    4. '   ' → logprob: -15.87500286102295
    5. '```' → logprob: -16.000003814697266
    6. '
' → logprob: -16.875003814697266
    7. '1' → logprob: -17.625003814697266
    8. '  ' → logprob: -17.875003814697266
    9. '۲' → logprob: -18.000003814697266
    10. '`' → logprob: -18.875003814697266

Token 557: ',' (ID: 11)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0008434568881057203
    2. ')' → logprob: -7.625843524932861
    3. '   ' → logprob: -8.750843048095703
    4. '**' → logprob: -9.375843048095703
    5. '))
' → logprob: -9.750843048095703
    6. ' ))' → logprob: -10.500843048095703
    7. ')))' → logprob: -10.875843048095703
    8. ' ' → logprob: -13.500843048095703
    9. ')**' → logprob: -13.875843048095703
    10. '  ' → logprob: -14.250843048095703

Token 558: ' etc' (ID: 5178)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.035923976451158524
    2. '**' → logprob: -4.160923957824707
    3. ' ' → logprob: -4.785923957824707
    4. 'for' → logprob: -5.410923957824707
    5. ')' → logprob: -6.410923957824707
    6. '  ' → logprob: -6.535923957824707
    7. 'p' → logprob: -7.035923957824707
    8. ' p' → logprob: -7.410923957824707
    9. '   ' → logprob: -7.535923957824707
    10. ' for' → logprob: -7.910923957824707

Token 559: '.).
' (ID: 184676)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.052926354110240936
    2. ')' → logprob: -3.1779263019561768
    3. '**' → logprob: -4.677926540374756
    4. '))
' → logprob: -8.427926063537598
    5. '   ' → logprob: -8.677926063537598
    6. ')**' → logprob: -9.177926063537598
    7. ')))' → logprob: -10.677926063537598
    8. ' ))' → logprob: -11.052926063537598
    9. ')
' → logprob: -11.177926063537598
    10. '-' → logprob: -12.177926063537598

Token 560: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28289446234703064
    2. 'edges' → logprob: -1.407894492149353
    3. '(edges' → logprob: -6.907894611358643
    4. ' edges' → logprob: -7.657894611358643
    5. '```' → logprob: -8.657894134521484
    6. ')' → logprob: -10.407894134521484
    7. '.edges' → logprob: -10.907894134521484
    8. '(' → logprob: -12.157894134521484
    9. ',' → logprob: -12.282894134521484
    10. '    
' → logprob: -12.407894134521484

Token 561: ' edges' (ID: 22569)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3145299553871155
    2. 'edges' (adapté à ' edges') → logprob: -1.3145298957824707
    3. ' edges' → logprob: -7.064529895782471
    4. '```' → logprob: -7.939529895782471
    5. '(edges' → logprob: -10.689530372619629
    6. '       ' → logprob: -12.189530372619629
    7. '``' → logprob: -12.314530372619629
    8. '  ' → logprob: -12.314530372619629
    9. '   ' → logprob: -12.439530372619629
    10. '	' → logprob: -12.689530372619629

Token 562: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.002045817207545042
    2. '.' → logprob: -6.252045631408691
    3. '.extend' → logprob: -9.252045631408691
    4. '.app' → logprob: -11.752045631408691
    5. ').' → logprob: -12.002045631408691
    6. ' .' → logprob: -12.752045631408691
    7. '.add' → logprob: -13.627045631408691
    8. '.ap' → logprob: -13.752045631408691
    9. '.setdefault' → logprob: -13.752045631408691
    10. '   ' → logprob: -15.127045631408691

Token 563: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -5.200166469876422e-06
    2. '(' → logprob: -12.375004768371582
    3. ' ((' → logprob: -14.500004768371582
    4. '(N' → logprob: -15.875004768371582
    5. '(
' → logprob: -16.2500057220459
    6. '```' → logprob: -16.8750057220459
    7. '[(' → logprob: -17.6250057220459
    8. '   ' → logprob: -17.8750057220459
    9. '(((' → logprob: -18.3750057220459
    10. ' ' → logprob: -18.3750057220459

Token 564: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -7.896309739408025e-07
    2. '(N' → logprob: -14.750000953674316
    3. ' N' → logprob: -15.125000953674316
    4. '(' → logprob: -19.375
    5. '	N' → logprob: -19.5
    6. '   ' → logprob: -19.75
    7. ' (' → logprob: -20.5
    8. '[N' → logprob: -20.75
    9. ',N' → logprob: -22.25
    10. '  ' → logprob: -22.375

Token 565: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.575957179069519
    2. '-' → logprob: -0.825957179069519
    3. ' ' → logprob: -11.575957298278809
    4. ',' → logprob: -12.825957298278809
    5. '   ' → logprob: -12.825957298278809
    6. '  ' → logprob: -14.450957298278809
    7. '1' → logprob: -14.700957298278809
    8. '<|end|>' → logprob: -14.700957298278809
    9. ' -,' → logprob: -14.950957298278809
    10. '−' → logprob: -15.325957298278809

Token 566: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00017994173686020076
    2. ' ' → logprob: -8.6251802444458
    3. '   ' → logprob: -15.2501802444458
    4. '```' → logprob: -16.750179290771484
    5. '2' → logprob: -17.375179290771484
    6. '  ' → logprob: -18.250179290771484
    7. '
' → logprob: -19.062679290771484
    8. ',' → logprob: -19.312679290771484
    9. '１' → logprob: -19.437679290771484
    10. '	' → logprob: -19.750179290771484

Token 567: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.045823566731997e-05
    2. ' ' → logprob: -10.875020027160645
    3. '2' → logprob: -13.750020027160645
    4. '   ' → logprob: -16.06252098083496
    5. '```' → logprob: -16.56252098083496
    6. ',' → logprob: -17.06252098083496
    7. '
' → logprob: -17.18752098083496
    8. '<|end|>' → logprob: -17.25002098083496
    9. '  ' → logprob: -17.37502098083496
    10. '１' → logprob: -18.87502098083496

Token 568: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.273621405242011e-05
    2. ',N' → logprob: -10.625032424926758
    3. ' ,' → logprob: -11.750032424926758
    4. '   ' → logprob: -15.000032424926758
    5. ',
' → logprob: -16.000032424926758
    6. 'N' → logprob: -16.875032424926758
    7. '‌,' → logprob: -17.250032424926758
    8. ',n' → logprob: -17.250032424926758
    9. '<|end|>' → logprob: -17.375032424926758
    10. '```' → logprob: -18.125032424926758

Token 569: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0015024791937321424
    2. ' N' → logprob: -6.501502513885498
    3. '<|end|>' → logprob: -16.376502990722656
    4. '	N' → logprob: -17.501502990722656
    5. '```' → logprob: -18.001502990722656
    6. ' ' → logprob: -18.001502990722656
    7. '   ' → logprob: -19.751502990722656
    8. ' ' → logprob: -20.376502990722656
    9. '  ' → logprob: -20.376502990722656
    10. ',' → logprob: -20.501502990722656

Token 570: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.7954958821064793e-05
    2. ' ,' → logprob: -11.000018119812012
    3. ',
' → logprob: -14.500018119812012
    4. '2' → logprob: -14.625018119812012
    5. '   ' → logprob: -16.625017166137695
    6. '<|end|>' → logprob: -16.875017166137695
    7. ' ' → logprob: -17.125017166137695
    8. '‌,' → logprob: -17.250017166137695
    9. '  ' → logprob: -17.875017166137695
    10. ',

' → logprob: -18.375017166137695

Token 571: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.759734732331708e-05
    2. ' ' → logprob: -11.125017166137695
    3. '1' → logprob: -13.125017166137695
    4. 'pow' → logprob: -14.500017166137695
    5. '(' → logprob: -16.000017166137695
    6. '   ' → logprob: -16.250017166137695
    7. 'p' → logprob: -17.875017166137695
    8. '```' → logprob: -18.250017166137695
    9. '  ' → logprob: -19.500017166137695
    10. '
' → logprob: -19.625017166137695

Token 572: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.36574100604048e-06
    2. '1' → logprob: -12.875004768371582
    3. 'p' → logprob: -14.000004768371582
    4. 'pow' → logprob: -14.250004768371582
    5. '(' → logprob: -15.125004768371582
    6. ' ' → logprob: -15.750004768371582
    7. '(p' → logprob: -18.750003814697266
    8. '   ' → logprob: -19.375003814697266
    9. '```' → logprob: -19.500003814697266
    10. '`' → logprob: -21.375003814697266

Token 573: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.00012403888104017824
    2. ' **' → logprob: -9.000123977661133
    3. '*' → logprob: -14.750123977661133
    4. '**)' → logprob: -16.750123977661133
    5. ')**' → logprob: -17.125123977661133
    6. '*(' → logprob: -17.125123977661133
    7. '(N' → logprob: -18.000123977661133
    8. ' ' → logprob: -18.125123977661133
    9. '**
' → logprob: -18.250123977661133
    10. ' *' → logprob: -18.625123977661133

Token 574: ' (' (ID: 350)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0002096197713399306
    2. '(' → logprob: -8.50020980834961
    3. ' (' → logprob: -12.37520980834961
    4. '((' → logprob: -13.62520980834961
    5. '(n' → logprob: -14.62520980834961
    6. '(
' → logprob: -16.12520980834961
    7. '   ' → logprob: -18.50020980834961
    8. '（' → logprob: -19.62520980834961
    9. '{' → logprob: -20.00020980834961
    10. '
' → logprob: -20.12520980834961

Token 575: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.004081485792994499
    2. '(N' → logprob: -5.5040812492370605
    3. ' N' → logprob: -13.004081726074219
    4. '   ' → logprob: -15.254081726074219
    5. '	N' → logprob: -15.379081726074219
    6. ' (' → logprob: -15.629081726074219
    7. '(' → logprob: -15.629081726074219
    8. '(
' → logprob: -16.87908172607422
    9. '[N' → logprob: -17.50408172607422
    10. ' ' → logprob: -17.87908172607422

Token 576: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0003357006062287837
    2. ' -' → logprob: -8.000335693359375
    3. '   ' → logprob: -15.250335693359375
    4. ' ' → logprob: -18.125335693359375
    5. '  ' → logprob: -19.125335693359375
    6. '−' → logprob: -19.375335693359375
    7. '2' → logprob: -19.625335693359375
    8. '-
' → logprob: -20.125335693359375
    9. '```' → logprob: -20.375335693359375
    10. '–' → logprob: -20.500335693359375

Token 577: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.125001907348633
    3. '   ' → logprob: -16.062501907348633
    4. '```' → logprob: -17.312501907348633
    5. '২' → logprob: -17.562501907348633
    6. ')' → logprob: -17.625001907348633
    7. '۲' → logprob: -17.625001907348633
    8. '1' → logprob: -17.687501907348633
    9. '२' → logprob: -18.000001907348633
    10. '  ' → logprob: -18.062501907348633

Token 578: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.688212614681106e-05
    2. ' ' → logprob: -11.125017166137695
    3. '1' → logprob: -13.750017166137695
    4. '   ' → logprob: -14.125017166137695
    5. '```' → logprob: -16.375017166137695
    6. '  ' → logprob: -16.500017166137695
    7. '	' → logprob: -18.062517166137695
    8. '3' → logprob: -18.250017166137695
    9. '
' → logprob: -18.562517166137695
    10. '       ' → logprob: -19.125017166137695

Token 579: ')))

' (ID: 46526)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.003203019965440035
    2. ')' → logprob: -5.75320291519165
    3. '))' → logprob: -11.253203392028809
    4. ')))
' → logprob: -12.003203392028809
    5. ' ' → logprob: -12.628203392028809
    6. ')));' → logprob: -13.753203392028809
    7. ')))
' → logprob: -14.628203392028809
    8. '))))' → logprob: -15.378203392028809
    9. '),' → logprob: -15.378203392028809
    10. ' )' → logprob: -15.503203392028809

Token 580: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.12879271805286407
    2. 'while' → logprob: -2.6287927627563477
    3. '<|end|>' → logprob: -4.128792762756348
    4. 'L' → logprob: -4.253792762756348
    5. 'edges' → logprob: -5.253792762756348
    6. 'for' → logprob: -5.253792762756348
    7. 'if' → logprob: -5.628792762756348
    8. ' #' → logprob: -7.253792762756348
    9. 'pass' → logprob: -7.503792762756348
    10. ' while' → logprob: -7.628792762756348

Token 581: ' Une' (ID: 19758)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.2118600606918335
    2. 'if' → logprob: -1.3368600606918335
    3. 'current' → logprob: -2.211860179901123
    4. 'remaining' → logprob: -2.336860179901123
    5. 'while' → logprob: -2.461860179901123
    6. '#' → logprob: -3.711860179901123
    7. 'diff' → logprob: -3.711860179901123
    8. 'p' → logprob: -4.211860179901123
    9. 'remain' → logprob: -4.461860179901123
    10. 'rest' → logprob: -4.586860179901123

Token 582: ' fois' (ID: 14697)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6482921242713928
    2. 'if' → logprob: -1.898292064666748
    3. ' #' → logprob: -2.023292064666748
    4. ' if' → logprob: -2.648292064666748
    5. 'reste' → logprob: -3.523292064666748
    6. 'rest' → logprob: -4.023292064666748
    7. 'while' → logprob: -4.148292064666748
    8. 'r' → logprob: -4.398292064666748
    9. 'remaining' → logprob: -4.773292064666748
    10. 'rem' → logprob: -5.023292064666748

Token 583: ' la' (ID: 557)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.7894173264503479
    2. '#' → logprob: -1.1644172668457031
    3. 'le' → logprob: -2.289417266845703
    4. 'la' → logprob: -2.914417266845703
    5. 'p' → logprob: -4.414417266845703
    6. 'l' → logprob: -4.414417266845703
    7. ' L' → logprob: -4.414417266845703
    8. ' le' → logprob: -4.914417266845703
    9. ' la' → logprob: -5.164417266845703
    10. ' #' → logprob: -5.539417266845703

Token 584: ' boucle' (ID: 174211)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.8654412627220154
    2. 'while' → logprob: -1.7404413223266602
    3. 'p' → logprob: -1.9904413223266602
    4. '#' → logprob: -2.61544132232666
    5. ' p' → logprob: -3.36544132232666
    6. 'if' → logprob: -3.36544132232666
    7. 'N' → logprob: -3.36544132232666
    8. ' L' → logprob: -3.74044132232666
    9. ' #' → logprob: -4.49044132232666
    10. ' while' → logprob: -5.11544132232666

Token 585: ' termin' (ID: 18412)
  Prédit: 'termin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'termin' → logprob: -0.20931261777877808
    2. 'while' → logprob: -2.834312677383423
    3. ' termin' → logprob: -3.084312677383423
    4. 'fin' → logprob: -3.084312677383423
    5. '#' → logprob: -4.209312438964844
    6. 'for' → logprob: -4.334312438964844
    7. 'term' → logprob: -5.334312438964844
    8. 'continue' → logprob: -6.084312438964844
    9. 'faite' → logprob: -7.584312438964844
    10. 'compl' → logprob: -7.709312438964844

Token 586: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.18534216284751892
    2. '#' → logprob: -1.9353421926498413
    3. 'e' → logprob: -4.060342311859131
    4. 'é' → logprob: -5.060342311859131
    5. 'ee' → logprob: -8.435341835021973
    6. 'ue' → logprob: -8.435341835021973
    7. 'if' → logprob: -8.810341835021973
    8. 'ed' → logprob: -8.935341835021973
    9. 'ie' → logprob: -9.560341835021973
    10. '   ' → logprob: -9.685341835021973

Token 587: ',' (ID: 11)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0583566352725029
    2. '#' → logprob: -2.933356523513794
    3. ',' → logprob: -6.058356761932373
    4. ' if' → logprob: -7.683356761932373
    5. ':' → logprob: -8.183356285095215
    6. 'for' → logprob: -9.183356285095215
    7. 'remaining' → logprob: -9.433356285095215
    8. 'i' → logprob: -9.933356285095215
    9. 'rest' → logprob: -10.808356285095215
    10. 'reste' → logprob: -10.933356285095215

Token 588: ' p' (ID: 275)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6850295662879944
    2. 'reste' → logprob: -1.3100295066833496
    3. 'rest' → logprob: -2.3100295066833496
    4. 'remain' → logprob: -3.4350295066833496
    5. 'remaining' → logprob: -3.6850295066833496
    6. '#' → logprob: -3.8100295066833496
    7. 'rem' → logprob: -4.18502950668335
    8. 'diff' → logprob: -4.31002950668335
    9. 're' → logprob: -4.93502950668335
    10. 'r' → logprob: -5.31002950668335

Token 589: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.07736305147409439
    2. '#' → logprob: -3.4523630142211914
    3. 'if' → logprob: -3.4523630142211914
    4. 'r' → logprob: -4.577363014221191
    5. 'ro' → logprob: -8.202363014221191
    6. 'ow' → logprob: -9.202363014221191
    7. 'for' → logprob: -9.327363014221191
    8. ' if' → logprob: -9.577363014221191
    9. 'our' → logprob: -9.827363014221191
    10. 'o' → logprob: -9.827363014221191

Token 590: ' contient' (ID: 89067)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6516492366790771
    2. ' *' → logprob: -1.6516492366790771
    3. '<=' → logprob: -2.776649236679077
    4. ' <=' → logprob: -3.276649236679077
    5. '==' → logprob: -3.276649236679077
    6. ' ==' → logprob: -3.401649236679077
    7. '<|end|>' → logprob: -3.651649236679077
    8. '=' → logprob: -4.151649475097656
    9. ' *=' → logprob: -4.151649475097656
    10. '*=' → logprob: -4.401649475097656

Token 591: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.27167969942092896
    2. 'p' → logprob: -1.5216796398162842
    3. ' la' → logprob: -4.521679878234863
    4. 'the' → logprob: -4.896679878234863
    5. 'le' → logprob: -7.396679878234863
    6. ' p' → logprob: -8.521679878234863
    7. 'une' → logprob: -9.146679878234863
    8. 'l' → logprob: -9.396679878234863
    9. '<p' → logprob: -9.646679878234863
    10. 'exact' → logprob: -10.021679878234863

Token 592: ' plus' (ID: 2932)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.40515902638435364
    2. 'pu' → logprob: -1.1551589965820312
    3. 'value' → logprob: -4.905158996582031
    4. 'p' → logprob: -5.655158996582031
    5. '#' → logprob: -6.155158996582031
    6. 'plus' → logprob: -6.905158996582031
    7. 'power' → logprob: -7.155158996582031
    8. '2' → logprob: -7.280158996582031
    9. ' valeur' → logprob: -7.280158996582031
    10. ' puissance' → logprob: -8.280158996582031

Token 593: ' grande' (ID: 10094)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.641816258430481
    2. 'pro' → logprob: -0.766816258430481
    3. 'grand' → logprob: -5.016816139221191
    4. '```' → logprob: -7.141816139221191
    5. 'import' → logprob: -7.516816139221191
    6. 'pet' → logprob: -7.766816139221191
    7. '2' → logprob: -7.891816139221191
    8. 'large' → logprob: -9.266816139221191
    9. ' grande' → logprob: -9.641816139221191
    10. 'p' → logprob: -10.141816139221191

Token 594: ' puissance' (ID: 63494)
  Prédit: 'pu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pu' → logprob: -0.002292875200510025
    2. '2' → logprob: -6.127293109893799
    3. 'pow' → logprob: -10.50229263305664
    4. 'power' → logprob: -10.87729263305664
    5. '#' → logprob: -11.12729263305664
    6. ' puissance' → logprob: -11.12729263305664
    7. ' ' → logprob: -11.62729263305664
    8. '```' → logprob: -11.75229263305664
    9. 'p' → logprob: -12.25229263305664
    10. '   ' → logprob: -13.37729263305664

Token 595: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.28315800428390503
    2. ' de' → logprob: -1.4081580638885498
    3. 'of' → logprob: -7.408157825469971
    4. '2' → logprob: -7.783157825469971
    5. ' of' → logprob: -7.783157825469971
    6. '<|end|>' → logprob: -8.533158302307129
    7. '   ' → logprob: -9.533158302307129
    8. '_de' → logprob: -9.658158302307129
    9. '#' → logprob: -9.783158302307129
    10. '```' → logprob: -10.533158302307129

Token 596: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0008097442332655191
    2. 'de' → logprob: -7.250809669494629
    3. ' ' → logprob: -9.250809669494629
    4. 'two' → logprob: -13.125809669494629
    5. ' deux' → logprob: -13.875809669494629
    6. ' two' → logprob: -15.250809669494629
    7. '```' → logprob: -15.375809669494629
    8. '#' → logprob: -16.125810623168945
    9. '<|end|>' → logprob: -16.625810623168945
    10. 'Deux' → logprob: -16.875810623168945

Token 597: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.200166469876422e-06
    2. 'de' → logprob: -12.375004768371582
    3. ' ' → logprob: -14.375004768371582
    4. 'two' → logprob: -15.875004768371582
    5. '...' → logprob: -16.7500057220459
    6. '#' → logprob: -17.1250057220459
    7. ' deux' → logprob: -17.2500057220459
    8. '```' → logprob: -17.2500057220459
    9. '<=' → logprob: -18.2500057220459
    10. 'p' → logprob: -18.3750057220459

Token 598: ' telle' (ID: 70904)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 599: ' que' (ID: 661)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.015645060688257217
    2. '#' → logprob: -4.7656450271606445
    3. 'qu' → logprob: -5.0156450271606445
    4. 'that' → logprob: -8.890645027160645
    5. '```' → logprob: -8.890645027160645
    6. 'qui' → logprob: -10.015645027160645
    7. '   ' → logprob: -11.265645027160645
    8. ' que' → logprob: -11.390645027160645
    9. 'q' → logprob: -11.640645027160645
    10. '`' → logprob: -12.640645027160645

Token 600: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.676292231422849e-05
    2. ' p' → logprob: -11.000017166137695
    3. ' ' → logprob: -17.625017166137695
    4. '2' → logprob: -17.625017166137695
    5. '(p' → logprob: -18.375017166137695
    6. '   ' → logprob: -18.375017166137695
    7. '  ' → logprob: -18.375017166137695
    8. '
' → logprob: -19.000017166137695
    9. '<p' → logprob: -19.125017166137695
    10. '<=' → logprob: -19.875017166137695

Token 601: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.438573680294212e-06
    2. 'p' → logprob: -12.750005722045898
    3. ' p' → logprob: -14.250005722045898
    4. ' ' → logprob: -14.750005722045898
    5. '```' → logprob: -15.125005722045898
    6. '*' → logprob: -15.500005722045898
    7. '₂' → logprob: -15.750005722045898
    8. '   ' → logprob: -15.750005722045898
    9. '(p' → logprob: -16.3750057220459
    10. 'u' → logprob: -16.8750057220459

Token 602: ' <=' (ID: 5017)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5152368545532227
    2. ' <=' → logprob: -1.2652368545532227
    3. ' *' → logprob: -2.6402368545532227
    4. '<=' → logprob: -3.0152368545532227
    5. ' ==' → logprob: -10.140236854553223
    6. '==' → logprob: -10.890236854553223
    7. '```' → logprob: -12.015236854553223
    8. ' ' → logprob: -12.890236854553223
    9. '2' → logprob: -13.015236854553223
    10. 'le' → logprob: -13.140236854553223

Token 603: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.0002613358374219388
    2. ' L' → logprob: -8.250261306762695
    3. '	L' → logprob: -18.250261306762695
    4. ' ' → logprob: -19.125261306762695
    5. '```' → logprob: -19.375261306762695
    6. ' ' → logprob: -19.750261306762695
    7. '   ' → logprob: -20.250261306762695
    8. '>L' → logprob: -20.500261306762695
    9. '  ' → logprob: -21.750261306762695
    10. '<L' → logprob: -22.250261306762695

Token 604: '.
' (ID: 558)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.08426907658576965
    2. ' if' → logprob: -3.7092690467834473
    3. '<|end|>' → logprob: -3.9592690467834473
    4. '
' → logprob: -4.459269046783447
    5. '   ' → logprob: -4.584269046783447
    6. '#' → logprob: -5.209269046783447
    7. 'while' → logprob: -5.334269046783447
    8. '.' → logprob: -6.334269046783447
    9. ' 
' → logprob: -7.584269046783447
    10. ')' → logprob: -7.584269046783447

Token 605: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.024952329695224762
    2. 'for' → logprob: -5.024952411651611
    3. 'while' → logprob: -5.149952411651611
    4. '#' → logprob: -5.649952411651611
    5. 'remaining' → logprob: -5.774952411651611
    6. 'diff' → logprob: -6.274952411651611
    7. 'rem' → logprob: -7.024952411651611
    8. 'current' → logprob: -7.649952411651611
    9. 'rest' → logprob: -7.649952411651611
    10. 'i' → logprob: -7.774952411651611

Token 606: ' '' (ID: 461)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.037606798112392426
    2. 'while' → logprob: -4.287606716156006
    3. '#' → logprob: -4.412606716156006
    4. 'edges' → logprob: -5.912606716156006
    5. 'for' → logprob: -6.162606716156006
    6. 'remaining' → logprob: -6.412606716156006
    7. ' if' → logprob: -6.662606716156006
    8. 'rest' → logprob: -6.912606716156006
    9. 'diff' → logprob: -7.287606716156006
    10. 'rem' → logprob: -8.037607192993164

Token 607: 'rest' (ID: 7134)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.18215832114219666
    2. 'remaining' → logprob: -2.8071582317352295
    3. 'rest' → logprob: -3.0571582317352295
    4. '#' → logprob: -3.9321582317352295
    5. 're' → logprob: -4.432158470153809
    6. 'reste' → logprob: -4.682158470153809
    7. 'rem' → logprob: -5.182158470153809
    8. 'remain' → logprob: -5.307158470153809
    9. 'diff' → logprob: -5.932158470153809
    10. 'for' → logprob: -6.932158470153809

Token 608: ''' (ID: 6)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09143832325935364
    2. 'e' → logprob: -2.4664382934570312
    3. ''' → logprob: -6.591438293457031
    4. '=' → logprob: -7.216438293457031
    5. ' ='' → logprob: -8.716438293457031
    6. '_' → logprob: -10.341438293457031
    7. '_rest' → logprob: -10.591438293457031
    8. 'es' → logprob: -10.591438293457031
    9. '_of' → logprob: -10.841438293457031
    10. '_e' → logprob: -11.216438293457031

Token 609: ' est' (ID: 893)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519320547580719
    2. '=' → logprob: -1.5019320249557495
    3. ' ' → logprob: -13.501932144165039
    4. '＝' → logprob: -14.126932144165039
    5. ' ' → logprob: -14.501932144165039
    6. '_' → logprob: -16.62693214416504
    7. '	' → logprob: -16.75193214416504
    8. ')' → logprob: -16.87693214416504
    9. ',' → logprob: -17.00193214416504
    10. 's' → logprob: -17.00193214416504

Token 610: ' la' (ID: 557)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.10835789144039154
    2. ' L' → logprob: -2.3583579063415527
    3. '=' → logprob: -4.983357906341553
    4. ' =' → logprob: -6.858357906341553
    5. '=L' → logprob: -8.483357429504395
    6. ' ' → logprob: -12.358357429504395
    7. '	L' → logprob: -13.358357429504395
    8. '  ' → logprob: -13.483357429504395
    9. '   ' → logprob: -14.108357429504395
    10. 'rest' → logprob: -14.233357429504395

Token 611: ' quantité' (ID: 89219)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.0017035098280757666
    2. ' L' → logprob: -6.37670373916626
    3. 'rest' → logprob: -14.501703262329102
    4. ' ' → logprob: -15.501703262329102
    5. '   ' → logprob: -16.0017032623291
    6. 'int' → logprob: -16.2517032623291
    7. '  ' → logprob: -16.3767032623291
    8. '=L' → logprob: -16.6267032623291
    9. '	L' → logprob: -17.1267032623291
    10. '=' → logprob: -17.3767032623291

Token 612: ' qu' (ID: 474)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011048408225178719
    2. ' =' → logprob: -4.511048316955566
    3. '=
' → logprob: -15.511048316955566
    4. 'rest' → logprob: -15.636048316955566
    5. '=L' → logprob: -16.761049270629883
    6. '＝' → logprob: -16.886049270629883
    7. '```' → logprob: -17.511049270629883
    8. 's' → logprob: -17.636049270629883
    9. ' ' → logprob: -17.761049270629883
    10. '=

' → logprob: -18.386049270629883

Token 613: ''il' (ID: 14683)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1602325439453125
    2. ' =' → logprob: -1.9102325439453125
    3. ' ' → logprob: -13.535232543945312
    4. '＝' → logprob: -13.785232543945312
    5. '_rest' → logprob: -13.910232543945312
    6. '=int' → logprob: -14.035232543945312
    7. 'rest' → logprob: -14.035232543945312
    8. 'e' → logprob: -14.285232543945312
    9. ' rest' → logprob: -14.535232543945312
    10. 'à' → logprob: -15.160232543945312

Token 614: ' reste' (ID: 26769)
  Prédit: ' reste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' reste' → logprob: -0.6992307305335999
    2. ' faut' → logprob: -1.449230670928955
    3. 'rest' → logprob: -2.699230670928955
    4. 'f' → logprob: -3.199230670928955
    5. 'L' → logprob: -3.324230670928955
    6. ' rest' → logprob: -3.574230670928955
    7. 'reste' → logprob: -3.574230670928955
    8. ' remains' → logprob: -3.699230670928955
    9. ' manque' → logprob: -4.324230670928955
    10. '#' → logprob: -4.574230670928955

Token 615: ' à' (ID: 1221)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12699666619300842
    2. ' =' → logprob: -2.1269967555999756
    3. 'rest' → logprob: -9.626996994018555
    4. '_rest' → logprob: -13.751996994018555
    5. ' ' → logprob: -14.626996994018555
    6. ' rest' → logprob: -15.376996994018555
    7. '＝' → logprob: -15.626996994018555
    8. '   ' → logprob: -16.001996994018555
    9. '=
' → logprob: -16.126996994018555
    10. 'reste' → logprob: -16.251996994018555

Token 616: ' atteindre' (ID: 95734)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.00023739055905025452
    2. ' L' → logprob: -8.375237464904785
    3. 'aj' → logprob: -12.625237464904785
    4. 'rest' → logprob: -12.875237464904785
    5. '```' → logprob: -15.875237464904785
    6. 'p' → logprob: -16.25023651123047
    7. 'int' → logprob: -16.62523651123047
    8. '#' → logprob: -16.75023651123047
    9. 'cover' → logprob: -16.75023651123047
    10. ' ' → logprob: -16.87523651123047

Token 617: ' pour' (ID: 1930)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.23682481050491333
    2. '=' → logprob: -1.6118247509002686
    3. 'rest' → logprob: -4.486824989318848
    4. '_rest' → logprob: -10.111824989318848
    5. ' rest' → logprob: -10.486824989318848
    6. ' ' → logprob: -11.861824989318848
    7. '   ' → logprob: -12.736824989318848
    8. ' ' → logprob: -13.111824989318848
    9. '=
' → logprob: -13.986824989318848
    10. 'r' → logprob: -13.986824989318848

Token 618: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.001517834491096437
    2. ' L' → logprob: -6.5015177726745605
    3. 'rest' → logprob: -11.751518249511719
    4. 'p' → logprob: -11.876518249511719
    5. ' p' → logprob: -15.126518249511719
    6. 'atte' → logprob: -16.12651824951172
    7. ' ' → logprob: -16.25151824951172
    8. ' rest' → logprob: -16.37651824951172
    9. ' atteindre' → logprob: -16.62651824951172
    10. 'int' → logprob: -17.12651824951172

Token 619: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03948196396231651
    2. '=' → logprob: -3.4144818782806396
    3. 'rest' → logprob: -5.164482116699219
    4. ' rest' → logprob: -9.664482116699219
    5. '_rest' → logprob: -10.414482116699219
    6. ' ' → logprob: -12.914482116699219
    7. ' ' → logprob: -13.164482116699219
    8. ' =
' → logprob: -13.289482116699219
    9. ',' → logprob: -14.289482116699219
    10. '(rest' → logprob: -14.789482116699219

Token 620: ' soit' (ID: 17293)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.02340584434568882
    2. ' rest' → logprob: -3.7734057903289795
    3. ' =' → logprob: -9.148406028747559
    4. '=' → logprob: -10.273406028747559
    5. 'reste' → logprob: -12.398406028747559
    6. '_rest' → logprob: -12.648406028747559
    7. '   ' → logprob: -12.898406028747559
    8. '#' → logprob: -13.523406028747559
    9. '```' → logprob: -13.648406028747559
    10. 'Rest' → logprob: -14.148406028747559

Token 621: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.009917102754116058
    2. ' L' → logprob: -4.634917259216309
    3. 'rest' → logprob: -8.884917259216309
    4. '=' → logprob: -11.509917259216309
    5. '=L' → logprob: -11.759917259216309
    6. ' =' → logprob: -13.384917259216309
    7. ' rest' → logprob: -14.009917259216309
    8. ' ' → logprob: -14.384917259216309
    9. '   ' → logprob: -14.384917259216309
    10. '	L' → logprob: -15.259917259216309

Token 622: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.47407975792884827
    2. ' -' → logprob: -0.9740797281265259
    3. '-rest' → logprob: -13.474080085754395
    4. '-p' → logprob: -14.599080085754395
    5. ' ' → logprob: -15.599080085754395
    6. ' ' → logprob: -15.849080085754395
    7. '−' → logprob: -16.224079132080078
    8. '-
' → logprob: -16.599079132080078
    9. '#' → logprob: -16.724079132080078
    10. '-r' → logprob: -16.974079132080078

Token 623: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0004306692280806601
    2. ' p' → logprob: -7.750430583953857
    3. '```' → logprob: -20.500431060791016
    4. ' ' → logprob: -21.000431060791016
    5. '   ' → logprob: -21.250431060791016
    6. '	p' → logprob: -21.750431060791016
    7. '<p' → logprob: -22.500431060791016
    8. '(p' → logprob: -22.750431060791016
    9. '`' → logprob: -22.875431060791016
    10. '
' → logprob: -23.375431060791016

Token 624: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.4894986785948277e-05
    2. '_' → logprob: -10.750044822692871
    3. '_rest' → logprob: -11.500044822692871
    4. '₂' → logprob: -11.625044822692871
    5. 'rest' → logprob: -13.250044822692871
    6. '_p' → logprob: -14.750044822692871
    7. 'p' → logprob: -14.875044822692871
    8. '_r' → logprob: -14.875044822692871
    9. 'r' → logprob: -14.875044822692871
    10. '２' → logprob: -15.250044822692871

Token 625: '.
' (ID: 558)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rest' → logprob: -4.4894986785948277e-05
    2. '
' → logprob: -10.125044822692871
    3. ' rest' → logprob: -12.625044822692871
    4. '=' → logprob: -14.750044822692871
    5. ' =' → logprob: -14.750044822692871
    6. '```' → logprob: -15.375044822692871
    7. '_rest' → logprob: -15.875044822692871
    8. '(rest' → logprob: -16.250045776367188
    9. '
' → logprob: -16.875045776367188
    10. '.rest' → logprob: -17.125045776367188

Token 626: 'rest' (ID: 7134)
  Prédit: 'rest'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.0012617830652743578
    2. '
' → logprob: -6.7512617111206055
    3. ' rest' → logprob: -9.501261711120605
    4. ' 
' → logprob: -11.626261711120605
    5. ' =' → logprob: -12.501261711120605
    6. '_rest' → logprob: -13.376261711120605
    7. '
' → logprob: -14.001261711120605
    8. '  
' → logprob: -15.001261711120605
    9. '```' → logprob: -15.001261711120605
    10. '(rest' → logprob: -15.376261711120605

Token 627: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759397745132446
    2. '=' → logprob: -0.8259397745132446
    3. ' ' → logprob: -15.575940132141113
    4. '＝' → logprob: -15.950940132141113
    5. ' ' → logprob: -17.450939178466797
    6. '=int' → logprob: -18.825939178466797
    7. ',' → logprob: -18.825939178466797
    8. '=

' → logprob: -19.075939178466797
    9. ' =
' → logprob: -19.700939178466797
    10. '=
' → logprob: -19.825939178466797

Token 628: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.07888989895582199
    2. ' L' → logprob: -2.578889846801758
    3. ' ' → logprob: -16.953889846801758
    4. '	L' → logprob: -17.203889846801758
    5. ' ' → logprob: -17.453889846801758
    6. '(L' → logprob: -18.328889846801758
    7. '   ' → logprob: -18.453889846801758
    8. '  ' → logprob: -18.953889846801758
    9. ' (' → logprob: -19.953889846801758
    10. 'int' → logprob: -20.453889846801758

Token 629: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3484688997268677
    2. '-' → logprob: -1.2234688997268677
    3. '<|end|>' → logprob: -11.598468780517578
    4. '-
' → logprob: -12.348468780517578
    5. ' -
' → logprob: -12.973468780517578
    6. '
' → logprob: -13.473468780517578
    7. ' ' → logprob: -13.598468780517578
    8. ' ' → logprob: -13.598468780517578
    9. '-rest' → logprob: -14.348468780517578
    10. '–' → logprob: -14.348468780517578

Token 630: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -6.2729995988775045e-06
    2. ' p' → logprob: -12.000006675720215
    3. '	p' → logprob: -27.0000057220459
    4. '*p' → logprob: -27.0000057220459
    5. '<p' → logprob: -27.3750057220459
    6. '(p' → logprob: -27.7500057220459
    7. '$p' → logprob: -28.0000057220459
    8. '_p' → logprob: -28.1250057220459
    9. '   ' → logprob: -28.2500057220459
    10. ')p' → logprob: -28.6250057220459

Token 631: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.0722858102526516e-05
    2. 'p' → logprob: -10.125041007995605
    3. ' ' → logprob: -14.875041007995605
    4. ' p' → logprob: -16.12504005432129
    5. '₂' → logprob: -17.25004005432129
    6. '```' → logprob: -17.37504005432129
    7. 't' → logprob: -17.62504005432129
    8. 'o' → logprob: -18.00004005432129
    9. '２' → logprob: -18.12504005432129
    10. '۲' → logprob: -18.37504005432129

Token 632: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8958813548088074
    2. 'for' → logprob: -0.8958813548088074
    3. 'i' → logprob: -2.145881414413452
    4. 'current' → logprob: -3.645881414413452
    5. '#' → logprob: -4.520881175994873
    6. 'rest' → logprob: -4.770881175994873
    7. 'while' → logprob: -4.895881175994873
    8. 'edges' → logprob: -6.145881175994873
    9. '<|end|>' → logprob: -6.395881175994873
    10. 'N' → logprob: -7.020881175994873

Token 633: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2526128590106964
    2. 'current' → logprob: -1.752612829208374
    3. 'u' → logprob: -3.502612829208374
    4. 'while' → logprob: -4.877613067626953
    5. 'from' → logprob: -5.377613067626953
    6. 'cur' → logprob: -5.752613067626953
    7. 'curr' → logprob: -6.002613067626953
    8. 'i' → logprob: -6.752613067626953
    9. 'node' → logprob: -8.127613067626953
    10. 'start' → logprob: -9.002613067626953

Token 634: ' On' (ID: 2160)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.6679203510284424
    2. 'for' → logprob: -0.7929203510284424
    3. 'u' → logprob: -4.292920112609863
    4. 'cur' → logprob: -5.042920112609863
    5. 'from' → logprob: -5.167920112609863
    6. 'curr' → logprob: -5.167920112609863
    7. 'while' → logprob: -6.042920112609863
    8. '#' → logprob: -8.167920112609863
    9. 'last' → logprob: -8.167920112609863
    10. 'node' → logprob: -9.542920112609863

Token 635: ' crée' (ID: 102256)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12202479690313339
    2. 'current' → logprob: -2.9970247745513916
    3. 'while' → logprob: -3.4970247745513916
    4. ' for' → logprob: -4.247025012969971
    5. 'i' → logprob: -5.497025012969971
    6. ' current' → logprob: -5.747025012969971
    7. '#' → logprob: -5.747025012969971
    8. 'curr' → logprob: -5.872025012969971
    9. 'node' → logprob: -6.747025012969971
    10. '=' → logprob: -6.997025012969971

Token 636: ' une' (ID: 2463)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.7902102470397949
    2. '(' → logprob: -1.415210247039795
    3. 'cur' → logprob: -2.665210247039795
    4. 'curr' → logprob: -2.915210247039795
    5. '(N' → logprob: -3.290210247039795
    6. 'u' → logprob: -3.665210247039795
    7. '(current' → logprob: -4.040210247039795
    8. 'i' → logprob: -4.415210247039795
    9. 'node' → logprob: -4.540210247039795
    10. 'rest' → logprob: -4.665210247039795

Token 637: ' variable' (ID: 11076)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3675093650817871
    2. 'current' → logprob: -1.492509365081787
    3. 'i' → logprob: -3.367509365081787
    4. 'cur' → logprob: -3.867509365081787
    5. 'curr' → logprob: -3.992509365081787
    6. 'u' → logprob: -5.742509365081787
    7. 'node' → logprob: -6.492509365081787
    8. 'while' → logprob: -6.992509365081787
    9. 'c' → logprob: -7.867509365081787
    10. 'j' → logprob: -8.117509841918945

Token 638: ' tempora' (ID: 117509)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.640762984752655
    2. 'cur' → logprob: -1.5157630443572998
    3. 'start' → logprob: -3.1407630443573
    4. 'curr' → logprob: -3.2657630443573
    5. 'u' → logprob: -3.5157630443573
    6. 'last' → logprob: -4.140762805938721
    7. 'k' → logprob: -4.265762805938721
    8. 'i' → logprob: -4.265762805938721
    9. 'bit' → logprob: -4.390762805938721
    10. 'now' → logprob: -4.390762805938721

Token 639: 'ire' (ID: 594)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.0767693519592285
    2. '=' → logprob: -1.5767693519592285
    3. ' =' → logprob: -1.9517693519592285
    4. 'tmp' → logprob: -2.0767693519592285
    5. 'current' → logprob: -2.9517693519592285
    6. 'temp' → logprob: -3.5767693519592285
    7. 'p' → logprob: -4.5767693519592285
    8. ' i' → logprob: -4.7017693519592285
    9. 't' → logprob: -4.7017693519592285
    10. 's' → logprob: -4.8267693519592285

Token 640: ' '' (ID: 461)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.471565842628479
    2. 'temp' → logprob: -2.4715657234191895
    3. 'cur' → logprob: -2.5965657234191895
    4. 'u' → logprob: -2.5965657234191895
    5. 'current' → logprob: -2.5965657234191895
    6. 'j' → logprob: -4.2215657234191895
    7. 'i' → logprob: -4.2215657234191895
    8. 'curr' → logprob: -4.4715657234191895
    9. 't' → logprob: -4.9715657234191895
    10. 'v' → logprob: -5.7215657234191895

Token 641: 'tmp' (ID: 11669)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -1.1187465190887451
    2. 'current' → logprob: -1.3687465190887451
    3. 'u' → logprob: -2.118746519088745
    4. 'tmp' → logprob: -2.743746519088745
    5. 'start' → logprob: -3.243746519088745
    6. 'curr' → logprob: -3.368746519088745
    7. 'last' → logprob: -3.618746519088745
    8. 'v' → logprob: -3.993746519088745
    9. 'now' → logprob: -3.993746519088745
    10. 'node' → logprob: -4.118746757507324

Token 642: ''' (ID: 6)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14404846727848053
    2. '=' → logprob: -2.0190484523773193
    3. 'N' → logprob: -7.019048690795898
    4. 'tmp' → logprob: -8.769048690795898
    5. '=N' → logprob: -9.644048690795898
    6. '_tmp' → logprob: -9.769048690795898
    7. '_rest' → logprob: -9.769048690795898
    8. ',' → logprob: -9.894048690795898
    9. 'rest' → logprob: -10.769048690795898
    10. ' ' → logprob: -11.644048690795898

Token 643: ' initial' (ID: 4871)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0028364919126033783
    2. ' =' → logprob: -5.87783670425415
    3. 'tmp' → logprob: -10.877836227416992
    4. '=N' → logprob: -12.002836227416992
    5. '=
' → logprob: -12.252836227416992
    6. ',' → logprob: -14.127836227416992
    7. '+=' → logprob: -15.877836227416992
    8. 'N' → logprob: -16.002836227416992
    9. '_tmp' → logprob: -16.002836227416992
    10. ',tmp' → logprob: -16.002836227416992

Token 644: 'isée' (ID: 59331)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.007942913100123405
    2. ' =' → logprob: -4.8829426765441895
    3. 'tmp' → logprob: -8.257943153381348
    4. 'isée' → logprob: -10.882943153381348
    5. 'isé' → logprob: -11.382943153381348
    6. '_tmp' → logprob: -11.632943153381348
    7. '=temp' → logprob: -11.882943153381348
    8. 'e' → logprob: -12.507943153381348
    9. 'iser' → logprob: -13.132943153381348
    10. '=`' → logprob: -13.132943153381348

Token 645: ' à' (ID: 1221)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0005517214885912836
    2. ' =' → logprob: -8.2505521774292
    3. '=N' → logprob: -8.5005521774292
    4. 'tmp' → logprob: -9.6255521774292
    5. 'N' → logprob: -12.0005521774292
    6. 'à' → logprob: -12.1255521774292
    7. '=
' → logprob: -12.6255521774292
    8. 'au' → logprob: -12.7505521774292
    9. '=temp' → logprob: -14.7505521774292
    10. '(tmp' → logprob: -15.0005521774292

Token 646: ' p' (ID: 275)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.21627409756183624
    2. '1' → logprob: -1.7162741422653198
    3. 'p' → logprob: -4.841274261474609
    4. '0' → logprob: -5.216274261474609
    5. '2' → logprob: -7.091274261474609
    6. 'rest' → logprob: -7.966274261474609
    7. '(N' → logprob: -9.59127426147461
    8. 'L' → logprob: -9.84127426147461
    9. '[N' → logprob: -9.84127426147461
    10. '[]' → logprob: -10.84127426147461

Token 647: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.6895233531831764e-05
    2. 'tmp' → logprob: -10.62502670288086
    3. 'o' → logprob: -14.62502670288086
    4. 'p' → logprob: -14.75002670288086
    5. '```' → logprob: -15.25002670288086
    6. 'r' → logprob: -15.62502670288086
    7. '1' → logprob: -15.62502670288086
    8. 'ow' → logprob: -15.87502670288086
    9. '_tmp' → logprob: -15.87502670288086
    10. '(tmp' → logprob: -16.00002670288086

Token 648: '.
' (ID: 558)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.01826232671737671
    2. '
' → logprob: -4.0182623863220215
    3. ' tmp' → logprob: -9.518261909484863
    4. '
' → logprob: -10.893261909484863
    5. '_tmp' → logprob: -12.268261909484863
    6. '(tmp' → logprob: -12.768261909484863
    7. ' =' → logprob: -13.143261909484863
    8. ',tmp' → logprob: -13.143261909484863
    9. '$tmp' → logprob: -13.143261909484863
    10. '```' → logprob: -13.643261909484863

Token 649: '#' (ID: 2)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -4.320199877838604e-07
    2. '```' → logprob: -15.5
    3. ' tmp' → logprob: -16.875
    4. 'temp' → logprob: -17.625
    5. ',tmp' → logprob: -18.0
    6. '	tmp' → logprob: -18.25
    7. '
' → logprob: -18.5
    8. '_tmp' → logprob: -19.0
    9. '$tmp' → logprob: -20.125
    10. '(tmp' → logprob: -20.125

Token 650: ' Elle' (ID: 21300)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -1.9361264946837764e-07
    2. ' tmp' → logprob: -15.875
    3. 'temp' → logprob: -18.625
    4. '	tmp' → logprob: -18.75
    5. 't' → logprob: -18.875
    6. '```' → logprob: -19.25
    7. 'N' → logprob: -20.125
    8. '   ' → logprob: -20.125
    9. 'tp' → logprob: -20.5
    10. 'txt' → logprob: -20.75

Token 651: ' permettra' (ID: 77259)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02780449390411377
    2. 'tmp' → logprob: -4.902804374694824
    3. '//=' → logprob: -5.152804374694824
    4. ' =' → logprob: -5.277804374694824
    5. '*=' → logprob: -5.402804374694824
    6. ' >>=' → logprob: -6.527804374694824
    7. '+=' → logprob: -7.027804374694824
    8. '>>' → logprob: -7.652804374694824
    9. ',' → logprob: -7.652804374694824
    10. ' //' → logprob: -8.027804374694824

Token 652: ' de' (ID: 334)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.1543578952550888
    2. '=' → logprob: -2.02935791015625
    3. ' =' → logprob: -6.40435791015625
    4. 'de' → logprob: -6.52935791015625
    5. ' tmp' → logprob: -6.52935791015625
    6. '+=' → logprob: -6.52935791015625
    7. '*=' → logprob: -7.15435791015625
    8. 'd' → logprob: -7.40435791015625
    9. 'N' → logprob: -7.52935791015625
    10. '#' → logprob: -7.65435791015625

Token 653: ' calcul' (ID: 7559)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.2997947931289673
    2. 'p' → logprob: -1.7997947931289673
    3. 'tmp' → logprob: -2.4247946739196777
    4. '2' → logprob: -6.049794673919678
    5. '1' → logprob: -6.174794673919678
    6. 'pow' → logprob: -9.049795150756836
    7. 'rest' → logprob: -9.299795150756836
    8. '0' → logprob: -9.549795150756836
    9. ' N' → logprob: -9.549795150756836
    10. '```' → logprob: -9.799795150756836

Token 654: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.26960909366607666
    2. 'te' → logprob: -1.5196090936660767
    3. 'ter' → logprob: -4.644608974456787
    4. 'ate' → logprob: -6.144608974456787
    5. 'rer' → logprob: -6.519608974456787
    6. 'tmp' → logprob: -6.769608974456787
    7. 'e' → logprob: -6.769608974456787
    8. 't' → logprob: -8.019609451293945
    9. 'late' → logprob: -8.019609451293945
    10. 'r' → logprob: -8.144609451293945

Token 655: ' les' (ID: 1341)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.9810975790023804
    2. 'tmp' → logprob: -1.3560975790023804
    3. 'p' → logprob: -1.6060975790023804
    4. '1' → logprob: -2.23109769821167
    5. '2' → logprob: -3.73109769821167
    6. 'rest' → logprob: -4.10609769821167
    7. '0' → logprob: -4.98109769821167
    8. 'pow' → logprob: -5.98109769821167
    9. '#' → logprob: -6.23109769821167
    10. '=' → logprob: -6.23109769821167

Token 656: ' poids' (ID: 56058)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.6632973551750183
    2. 'N' → logprob: -1.288297414779663
    3. 'tmp' → logprob: -3.288297414779663
    4. 'p' → logprob: -3.538297414779663
    5. 'curr' → logprob: -3.538297414779663
    6. 'i' → logprob: -3.788297414779663
    7. '1' → logprob: -3.913297414779663
    8. 'cur' → logprob: -3.913297414779663
    9. '2' → logprob: -3.913297414779663
    10. 'j' → logprob: -5.538297176361084

Token 657: ' pour' (ID: 1930)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5788244605064392
    2. 'tmp' → logprob: -1.078824520111084
    3. '//=' → logprob: -3.203824520111084
    4. ' =' → logprob: -3.828824520111084
    5. '//' → logprob: -3.828824520111084
    6. ' //' → logprob: -4.953824520111084
    7. '*=' → logprob: -6.578824520111084
    8. '_tmp' → logprob: -7.078824520111084
    9. 'rest' → logprob: -7.078824520111084
    10. ' tmp' → logprob: -7.203824520111084

Token 658: ' construire' (ID: 92473)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.7305699586868286
    2. 'tmp' → logprob: -0.8555699586868286
    3. '1' → logprob: -3.855569839477539
    4. 'rest' → logprob: -4.105569839477539
    5. 'p' → logprob: -4.355569839477539
    6. 'i' → logprob: -4.480569839477539
    7. 'edges' → logprob: -4.605569839477539
    8. '#' → logprob: -5.105569839477539
    9. 'for' → logprob: -5.230569839477539
    10. 'j' → logprob: -6.480569839477539

Token 659: ' le' (ID: 505)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.6175537705421448
    2. 'des' → logprob: -1.4925537109375
    3. 'edges' → logprob: -2.8675537109375
    4. 'la' → logprob: -2.9925537109375
    5. 'rest' → logprob: -3.4925537109375
    6. 'le' → logprob: -3.4925537109375
    7. '#' → logprob: -3.9925537109375
    8. 'une' → logprob: -4.6175537109375
    9. 'N' → logprob: -4.6175537109375
    10. 'l' → logprob: -4.9925537109375

Token 660: ' reste' (ID: 26769)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.8237597942352295
    2. 'p' → logprob: -1.4487597942352295
    3. 'while' → logprob: -1.8237597942352295
    4. 'for' → logprob: -2.5737597942352295
    5. 'tmp' → logprob: -3.5737597942352295
    6. '#' → logprob: -4.323760032653809
    7. 'current' → logprob: -4.823760032653809
    8. '2' → logprob: -4.948760032653809
    9. 'rest' → logprob: -5.198760032653809
    10. 'i' → logprob: -5.323760032653809

Token 661: ' du' (ID: 1462)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.23057572543621063
    2. 'tmp' → logprob: -1.605575680732727
    3. ' =' → logprob: -5.3555755615234375
    4. '_tmp' → logprob: -8.355575561523438
    5. ',tmp' → logprob: -9.605575561523438
    6. ' tmp' → logprob: -10.105575561523438
    7. '$tmp' → logprob: -11.105575561523438
    8. '/tmp' → logprob: -11.230575561523438
    9. '	tmp' → logprob: -11.230575561523438
    10. '[tmp' → logprob: -11.605575561523438

Token 662: ' chemin' (ID: 45035)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -1.0115336179733276
    2. 'che' → logprob: -1.6365336179733276
    3. 'rest' → logprob: -1.7615336179733276
    4. 'edges' → logprob: -2.261533737182617
    5. 'tmp' → logprob: -3.136533737182617
    6. 'graph' → logprob: -3.386533737182617
    7. '```' → logprob: -3.761533737182617
    8. 'for' → logprob: -3.761533737182617
    9. 'N' → logprob: -4.386533737182617
    10. 'po' → logprob: -5.136533737182617

Token 663: '.
' (ID: 558)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.1290084719657898
    2. '=' → logprob: -2.1290085315704346
    3. ' =' → logprob: -6.2540082931518555
    4. ',tmp' → logprob: -9.254008293151855
    5. '_tmp' → logprob: -11.254008293151855
    6. '/tmp' → logprob: -11.504008293151855
    7. '[tmp' → logprob: -11.629008293151855
    8. ' tmp' → logprob: -12.004008293151855
    9. '=
' → logprob: -12.379008293151855
    10. '(tmp' → logprob: -12.379008293151855

Token 664: 'tmp' (ID: 11669)
  Prédit: 'tmp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -2.2200749754119897e-06
    2. '
' → logprob: -14.375001907348633
    3. ' tmp' → logprob: -14.750001907348633
    4. '```' → logprob: -14.750001907348633
    5. '=' → logprob: -15.875001907348633
    6. ',' → logprob: -15.875001907348633
    7. 't' → logprob: -16.375001907348633
    8. ',tmp' → logprob: -16.500001907348633
    9. '	tmp' → logprob: -16.625001907348633
    10. '
' → logprob: -16.750001907348633

Token 665: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02477836050093174
    2. ' =' → logprob: -3.774778366088867
    3. '=p' → logprob: -6.524778366088867
    4. '=N' → logprob: -10.274778366088867
    5. '//=' → logprob: -11.649778366088867
    6. '-=' → logprob: -12.524778366088867
    7. '*=' → logprob: -12.524778366088867
    8. '+=' → logprob: -13.149778366088867
    9. '/=' → logprob: -13.399778366088867
    10. '＝' → logprob: -13.399778366088867

Token 666: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.664371848164592e-05
    2. '1' → logprob: -11.750016212463379
    3. ' p' → logprob: -12.375016212463379
    4. 'N' → logprob: -13.250016212463379
    5. '2' → logprob: -13.250016212463379
    6. 'rest' → logprob: -14.750016212463379
    7. '0' → logprob: -16.625017166137695
    8. 'L' → logprob: -17.000017166137695
    9. 'pow' → logprob: -17.125017166137695
    10. '(p' → logprob: -17.625017166137695

Token 667: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.610702363715973e-06
    2. 'ow' → logprob: -12.750009536743164
    3. 'o' → logprob: -13.000009536743164
    4. ' ' → logprob: -13.500009536743164
    5. 'tmp' → logprob: -14.125009536743164
    6. '_' → logprob: -15.000009536743164
    7. '1' → logprob: -15.687509536743164
    8. '```' → logprob: -15.750009536743164
    9. '   ' → logprob: -15.875009536743164
    10. '２' → logprob: -15.937509536743164

Token 668: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.014187601394951344
    2. 'while' → logprob: -4.639187812805176
    3. '#' → logprob: -6.139187812805176
    4. 'i' → logprob: -7.264187812805176
    5. ' for' → logprob: -7.389187812805176
    6. 'current' → logprob: -7.764187812805176
    7. 'N' → logprob: -7.889187812805176
    8. '
' → logprob: -10.139187812805176
    9. 'prev' → logprob: -10.889187812805176
    10. 'print' → logprob: -11.014187812805176

Token 669: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05647707358002663
    2. 'while' → logprob: -2.9314770698547363
    3. 'i' → logprob: -7.431477069854736
    4. '#' → logprob: -7.556477069854736
    5. 'N' → logprob: -8.181477546691895
    6. ' for' → logprob: -9.431477546691895
    7. 'current' → logprob: -9.931477546691895
    8. '```' → logprob: -10.556477546691895
    9. ' while' → logprob: -11.556477546691895
    10. 'p' → logprob: -11.681477546691895

Token 670: ' Cette' (ID: 27383)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.006402000784873962
    2. 'while' → logprob: -5.631402015686035
    3. 'current' → logprob: -6.381402015686035
    4. 'i' → logprob: -7.006402015686035
    5. '#' → logprob: -9.506402015686035
    6. 'cur' → logprob: -10.381402015686035
    7. 'curr' → logprob: -10.506402015686035
    8. 'node' → logprob: -10.756402015686035
    9. 'j' → logprob: -11.631402015686035
    10. 'u' → logprob: -11.881402015686035

Token 671: ' boucle' (ID: 174211)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.3156017065048218
    2. 'for' → logprob: -1.5656017065048218
    3. ' while' → logprob: -3.0656018257141113
    4. ' for' → logprob: -4.815601825714111
    5. '#' → logprob: -6.190601825714111
    6. 'if' → logprob: -6.690601825714111
    7. 'rest' → logprob: -6.940601825714111
    8. ' #' → logprob: -7.065601825714111
    9. 'i' → logprob: -7.440601825714111
    10. '_' → logprob: -8.065601348876953

Token 672: ' for' (ID: 395)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.03619777038693428
    2. 'for' → logprob: -3.6611976623535156
    3. '>' → logprob: -5.536197662353516
    4. ' while' → logprob: -6.036197662353516
    5. '=' → logprob: -6.661197662353516
    6. '-=' → logprob: -7.161197662353516
    7. '>=' → logprob: -7.786197662353516
    8. '+=' → logprob: -8.286197662353516
    9. ' for' → logprob: -8.411197662353516
    10. 'in' → logprob: -8.786197662353516

Token 673: ' parc' (ID: 22138)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.20002400875091553
    2. 'for' → logprob: -2.200024127960205
    3. ' in' → logprob: -3.200024127960205
    4. 'i' → logprob: -3.825024127960205
    5. ' i' → logprob: -5.075024127960205
    6. ' for' → logprob: -6.450024127960205
    7. 'range' → logprob: -10.200023651123047
    8. '   ' → logprob: -10.700023651123047
    9. ' ' → logprob: -12.200023651123047
    10. ' range' → logprob: -12.325023651123047

Token 674: 'ourt' (ID: 38600)
  Prédit: 'ourt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ourt' → logprob: -0.0024202491622418165
    2. 'oure' → logprob: -6.252420425415039
    3. 'ours' → logprob: -7.877420425415039
    4. 'our' → logprob: -9.377420425415039
    5. 'ourse' → logprob: -11.127420425415039
    6. 'o' → logprob: -12.877420425415039
    7. 'court' → logprob: -13.252420425415039
    8. 't' → logprob: -13.377420425415039
    9. 'ore' → logprob: -13.752420425415039
    10. 'oit' → logprob: -13.877420425415039

Token 675: ' les' (ID: 1341)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.010322818532586098
    2. 'i' → logprob: -5.0103230476379395
    3. '_' → logprob: -6.1353230476379395
    4. 're' → logprob: -6.8853230476379395
    5. ' range' → logprob: -8.760322570800781
    6. 'N' → logprob: -9.135322570800781
    7. 'reverse' → logprob: -9.760322570800781
    8. 'in' → logprob: -10.510322570800781
    9. 'rang' → logprob: -10.760322570800781
    10. '_N' → logprob: -11.885322570800781

Token 676: ' puiss' (ID: 102546)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.4259644558478612e-05
    2. 're' → logprob: -11.500014305114746
    3. 'reverse' → logprob: -13.125014305114746
    4. ' range' → logprob: -14.125014305114746
    5. 'i' → logprob: -15.000014305114746
    6. 'N' → logprob: -15.250014305114746
    7. 'bin' → logprob: -15.750014305114746
    8. '(range' → logprob: -15.750014305114746
    9. 'rang' → logprob: -16.50001335144043
    10. '```' → logprob: -16.62501335144043

Token 677: 'ances' (ID: 3528)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0020692525431513786
    2. 'range' → logprob: -7.627069473266602
    3. 'es' → logprob: -7.752069473266602
    4. '```' → logprob: -8.752069473266602
    5. 'powers' → logprob: -9.502069473266602
    6. 'ances' → logprob: -9.627069473266602
    7. 'ex' → logprob: -9.752069473266602
    8. 'u' → logprob: -9.877069473266602
    9. 'ranges' → logprob: -10.002069473266602
    10. 'os' → logprob: -10.127069473266602

Token 678: ' de' (ID: 334)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -1.1059961318969727
    2. '(range' → logprob: -1.9809961318969727
    3. '(i' → logprob: -2.1059961318969727
    4. '(N' → logprob: -2.3559961318969727
    5. '(' → logprob: -2.4809961318969727
    6. 'for' → logprob: -2.6059961318969727
    7. 'range' → logprob: -2.9809961318969727
    8. 'de' → logprob: -3.8559961318969727
    9. 'of' → logprob: -3.9809961318969727
    10. 'i' → logprob: -4.230996131896973

Token 679: ' ' (ID: 220)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.08515448868274689
    2. '2' → logprob: -2.5851545333862305
    3. 'N' → logprob: -5.2101545333862305
    4. ' range' → logprob: -8.71015453338623
    5. '1' → logprob: -9.71015453338623
    6. '   ' → logprob: -9.96015453338623
    7. 're' → logprob: -9.96015453338623
    8. 'i' → logprob: -10.08515453338623
    9. ' ' → logprob: -10.08515453338623
    10. '
' → logprob: -10.21015453338623

Token 680: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.2544347643852234
    2. 'range' → logprob: -1.5044348239898682
    3. 'N' → logprob: -6.504434585571289
    4. '-' → logprob: -8.754434585571289
    5. ' ' → logprob: -8.879434585571289
    6. 'two' → logprob: -9.254434585571289
    7. '1' → logprob: -9.379434585571289
    8. '   ' → logprob: -9.504434585571289
    9. '
' → logprob: -9.629434585571289
    10. 'i' → logprob: -9.879434585571289

Token 681: ' de' (ID: 334)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.30066174268722534
    2. 'in' → logprob: -1.9256618022918701
    3. '(range' → logprob: -2.92566180229187
    4. 'range' → logprob: -3.05066180229187
    5. '(N' → logprob: -5.425661563873291
    6. '   ' → logprob: -5.550661563873291
    7. '(i' → logprob: -6.675661563873291
    8. 'i' → logprob: -6.800661563873291
    9. '(' → logprob: -7.425661563873291
    10. '
' → logprob: -7.675661563873291

Token 682: ' N' (ID: 478)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.011456967331469059
    2. 're' → logprob: -4.5114569664001465
    3. 'N' → logprob: -8.386457443237305
    4. 'reverse' → logprob: -8.886457443237305
    5. '
' → logprob: -11.011457443237305
    6. '#' → logprob: -12.636457443237305
    7. '```' → logprob: -12.636457443237305
    8. '1' → logprob: -12.761457443237305
    9. 'rang' → logprob: -12.761457443237305
    10. ' range' → logprob: -12.886457443237305

Token 683: ' vers' (ID: 3640)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2682689130306244
    2. 'range' → logprob: -1.8932689428329468
    3. 'for' → logprob: -3.5182688236236572
    4. ' -' → logprob: -3.8932688236236572
    5. 'in' → logprob: -4.018269062042236
    6. '
' → logprob: -5.518269062042236
    7. ' range' → logprob: -5.768269062042236
    8. '   ' → logprob: -5.768269062042236
    9. '(range' → logprob: -6.768269062042236
    10. '-range' → logprob: -7.018269062042236

Token 684: ' ' (ID: 220)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.25336623191833496
    2. '1' → logprob: -2.253366231918335
    3. 'N' → logprob: -2.753366231918335
    4. '0' → logprob: -3.753366231918335
    5. 're' → logprob: -4.378366470336914
    6. '2' → logprob: -4.628366470336914
    7. '   ' → logprob: -5.503366470336914
    8. ' range' → logprob: -6.253366470336914
    9. 'reverse' → logprob: -6.878366470336914
    10. '
' → logprob: -7.503366470336914

Token 685: '0' (ID: 15)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.30480247735977173
    2. '1' → logprob: -1.804802417755127
    3. '0' → logprob: -2.679802417755127
    4. 'N' → logprob: -3.804802417755127
    5. '2' → logprob: -5.304802417755127
    6. 're' → logprob: -6.804802417755127
    7. ' range' → logprob: -8.054802894592285
    8. '
' → logprob: -8.054802894592285
    9. 'reverse' → logprob: -8.054802894592285
    10. '-' → logprob: -9.804802894592285

Token 686: ',' (ID: 11)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5553387999534607
    2. 'for' → logprob: -1.0553388595581055
    3. 'range' → logprob: -3.1803388595581055
    4. '   ' → logprob: -3.8053388595581055
    5. ' in' → logprob: -5.0553388595581055
    6. ' range' → logprob: -6.1803388595581055
    7. ' for' → logprob: -6.1803388595581055
    8. '(range' → logprob: -6.3053388595581055
    9. 'i' → logprob: -7.4303388595581055
    10. 'reverse' → logprob: -7.9303388595581055

Token 687: ' c' (ID: 274)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09211663901805878
    2. 'range' → logprob: -2.592116594314575
    3. ' for' → logprob: -5.217116832733154
    4. 'reverse' → logprob: -5.717116832733154
    5. '   ' → logprob: -6.342116832733154
    6. ' range' → logprob: -6.592116832733154
    7. 'i' → logprob: -7.717116832733154
    8. '
' → logprob: -7.842116832733154
    9. '```' → logprob: -8.842116355895996
    10. ' reverse' → logprob: -9.092116355895996

Token 688: ''est' (ID: 6616)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.7409834265708923
    2. 'for' → logprob: -0.8659834265708923
    3. 'in' → logprob: -3.615983486175537
    4. ' range' → logprob: -3.865983486175537
    5. ':' → logprob: -4.240983486175537
    6. '#' → logprob: -4.990983486175537
    7. 'ont' → logprob: -4.990983486175537
    8. '   ' → logprob: -5.490983486175537
    9. '=' → logprob: -5.740983486175537
    10. 'on' → logprob: -6.115983486175537

Token 689: '-à' (ID: 56297)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.044698476791381836
    2. ' -' → logprob: -4.044698715209961
    3. 'N' → logprob: -5.044698715209961
    4. '0' → logprob: -5.169698715209961
    5. '   ' → logprob: -5.794698715209961
    6. '1' → logprob: -5.919698715209961
    7. 'range' → logprob: -6.044698715209961
    8. 'for' → logprob: -6.794698715209961
    9. '-N' → logprob: -7.294698715209961
    10. 'in' → logprob: -7.669698715209961

Token 690: '-dire' (ID: 76064)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2233603298664093
    2. 'N' → logprob: -2.098360300064087
    3. 'range' → logprob: -3.848360300064087
    4. '-' → logprob: -4.098360538482666
    5. '0' → logprob: -4.223360538482666
    6. '2' → logprob: -5.098360538482666
    7. '   ' → logprob: -5.098360538482666
    8. ' N' → logprob: -6.723360538482666
    9. 'i' → logprob: -6.723360538482666
    10. '#' → logprob: -6.973360538482666

Token 691: ' du' (ID: 1462)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.019326934590935707
    2. 'for' → logprob: -4.019327163696289
    3. 'N' → logprob: -7.769327163696289
    4. 're' → logprob: -7.894327163696289
    5. 'reverse' → logprob: -9.019327163696289
    6. 'i' → logprob: -9.144327163696289
    7. ' range' → logprob: -9.769327163696289
    8. '-' → logprob: -10.019327163696289
    9. 'in' → logprob: -11.019327163696289
    10. '0' → logprob: -12.019327163696289

Token 692: ' sommet' (ID: 130502)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.07314612716436386
    2. 'range' → logprob: -2.948146104812622
    3. 'for' → logprob: -4.323146343231201
    4. 'i' → logprob: -6.198146343231201
    5. '0' → logprob: -6.448146343231201
    6. ' range' → logprob: -8.448145866394043
    7. 'reverse' → logprob: -8.448145866394043
    8. '
' → logprob: -8.573145866394043
    9. '-' → logprob: -8.698145866394043
    10. '```' → logprob: -8.698145866394043

Token 693: ' N' (ID: 478)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.47584813833236694
    2. 'range' → logprob: -1.7258481979370117
    3. 'in' → logprob: -2.1008481979370117
    4. 'N' → logprob: -3.3508481979370117
    5. 'i' → logprob: -4.100848197937012
    6. '(N' → logprob: -4.475848197937012
    7. ' range' → logprob: -5.850848197937012
    8. 'reverse' → logprob: -5.975848197937012
    9. '   ' → logprob: -6.225848197937012
    10. ' for' → logprob: -6.600848197937012

Token 694: ' jusqu' (ID: 21961)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.012085512280464172
    2. 'for' → logprob: -5.012085437774658
    3. ' -' → logprob: -6.012085437774658
    4. 'in' → logprob: -6.137085437774658
    5. ',' → logprob: -8.262085914611816
    6. ' in' → logprob: -9.012085914611816
    7. '
' → logprob: -9.762085914611816
    8. '   ' → logprob: -9.762085914611816
    9. '-=' → logprob: -9.762085914611816
    10. ' for' → logprob: -9.887085914611816

Token 695: ''au' (ID: 63689)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.3929644525051117
    2. '-' → logprob: -1.642964482307434
    3. ' à' → logprob: -4.0179643630981445
    4. ' au' → logprob: -4.1429643630981445
    5. 'au' → logprob: -4.2679643630981445
    6. 'à' → logprob: -4.6429643630981445
    7. 'N' → logprob: -4.7679643630981445
    8. '   ' → logprob: -4.7679643630981445
    9. '0' → logprob: -5.0179643630981445
    10. ' to' → logprob: -5.1429643630981445

Token 696: ' sommet' (ID: 130502)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.015031433664262295
    2. '1' → logprob: -4.390031337738037
    3. '-' → logprob: -6.140031337738037
    4. 'N' → logprob: -8.265031814575195
    5. '```' → logprob: -9.765031814575195
    6. ' ' → logprob: -10.515031814575195
    7. ' -' → logprob: -11.515031814575195
    8. '
' → logprob: -12.390031814575195
    9. '2' → logprob: -13.140031814575195
    10. '#' → logprob: -13.515031814575195

Token 697: ' ' (ID: 220)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5487790107727051
    2. '0' → logprob: -1.048779010772705
    3. 'N' → logprob: -3.173779010772705
    4. '1' → logprob: -3.548779010772705
    5. ' -' → logprob: -6.798779010772705
    6. '```' → logprob: -8.798778533935547
    7. ' N' → logprob: -10.798778533935547
    8. '
' → logprob: -10.923778533935547
    9. 'range' → logprob: -11.298778533935547
    10. '-N' → logprob: -11.548778533935547

Token 698: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5257003903388977
    2. '1' → logprob: -0.9007003903388977
    3. '2' → logprob: -6.150700569152832
    4. '-' → logprob: -7.775700569152832
    5. '```' → logprob: -11.150700569152832
    6. 'N' → logprob: -12.650700569152832
    7. '#' → logprob: -13.650700569152832
    8. '
' → logprob: -14.025700569152832
    9. ' ' → logprob: -14.275700569152832
    10. ' -' → logprob: -14.400700569152832

Token 699: ' inclus' (ID: 11891)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.13387006521224976
    2. 'in' → logprob: -2.1338701248168945
    3. ' for' → logprob: -6.0088701248168945
    4. ' in' → logprob: -6.2588701248168945
    5. 'range' → logprob: -6.3838701248168945
    6. '   ' → logprob: -7.8838701248168945
    7. ',' → logprob: -8.758870124816895
    8. 'reverse' → logprob: -9.508870124816895
    9. 're' → logprob: -10.008870124816895
    10. 'i' → logprob: -10.258870124816895

Token 700: '.
' (ID: 558)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08587820827960968
    2. 'in' → logprob: -2.7108781337738037
    3. ' for' → logprob: -4.960878372192383
    4. 'range' → logprob: -5.210878372192383
    5. ' in' → logprob: -6.210878372192383
    6. '   ' → logprob: -7.960878372192383
    7. ',' → logprob: -8.335878372192383
    8. 'reverse' → logprob: -8.460878372192383
    9. ' range' → logprob: -9.210878372192383
    10. '(range' → logprob: -9.210878372192383

Token 701: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.001077110879123211
    2. 'range' → logprob: -7.501077175140381
    3. ' for' → logprob: -7.751077175140381
    4. 'in' → logprob: -9.876076698303223
    5. 'i' → logprob: -10.376076698303223
    6. '
' → logprob: -12.626076698303223
    7. 'reverse' → logprob: -13.251076698303223
    8. ' range' → logprob: -13.376076698303223
    9. '   ' → logprob: -13.751076698303223
    10. '```' → logprob: -13.876076698303223

Token 702: ' range' (ID: 3352)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -2.339278580620885e-06
    2. ' for' → logprob: -13.500001907348633
    3. 'range' → logprob: -14.750001907348633
    4. '
' → logprob: -15.250001907348633
    5. '   ' → logprob: -16.500001907348633
    6. 'i' → logprob: -16.625001907348633
    7. '```' → logprob: -18.125001907348633
    8. '	for' → logprob: -19.000001907348633
    9. 'while' → logprob: -19.125001907348633
    10. 'from' → logprob: -19.375001907348633

Token 703: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.00033939589047804475
    2. '(' → logprob: -8.00033950805664
    3. '(
' → logprob: -13.50033950805664
    4. '(L' → logprob: -14.00033950805664
    5. '(n' → logprob: -14.87533950805664
    6. '(start' → logprob: -14.87533950805664
    7. '(len' → logprob: -15.00033950805664
    8. ' (' → logprob: -15.37533950805664
    9. '(range' → logprob: -15.62533950805664
    10. '(M' → logprob: -16.12533950805664

Token 704: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004047767724841833
    2. '-' → logprob: -5.629047870635986
    3. ' ,' → logprob: -8.879047393798828
    4. ',-' → logprob: -8.879047393798828
    5. ' -' → logprob: -9.629047393798828
    6. '+' → logprob: -10.254047393798828
    7. ',N' → logprob: -10.379047393798828
    8. '(N' → logprob: -11.254047393798828
    9. ',
' → logprob: -11.879047393798828
    10. '```' → logprob: -12.879047393798828

Token 705: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.06505069136619568
    2. '0' → logprob: -2.8150506019592285
    3. ' -' → logprob: -5.8150506019592285
    4. ' ' → logprob: -9.315051078796387
    5. '
' → logprob: -13.440051078796387
    6. 'N' → logprob: -13.690051078796387
    7. '```' → logprob: -13.690051078796387
    8. '   ' → logprob: -14.190051078796387
    9. '  ' → logprob: -15.190051078796387
    10. '−' → logprob: -15.440051078796387

Token 706: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '2' → logprob: -16.75
    3. '
' → logprob: -16.875
    4. ' ' → logprob: -17.125
    5. '１' → logprob: -17.75
    6. '

' → logprob: -18.375
    7. '```' → logprob: -18.75
    8. '' → logprob: -19.5
    9. '   ' → logprob: -19.625
    10. '``' → logprob: -19.6875

Token 707: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.73052782076411e-05
    2. ' ,' → logprob: -10.250067710876465
    3. ',-' → logprob: -10.750067710876465
    4. '-' → logprob: -11.625067710876465
    5. ' -' → logprob: -14.250067710876465
    6. ',
' → logprob: -15.125067710876465
    7. ' ,-' → logprob: -15.375067710876465
    8. '```' → logprob: -16.25006675720215
    9. ')' → logprob: -16.87506675720215
    10. '-,' → logprob: -17.37506675720215

Token 708: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -8.494741632603109e-05
    2. ' -' → logprob: -9.37508487701416
    3. '-
' → logprob: -18.750085830688477
    4. '```' → logprob: -19.000085830688477
    5. '
' → logprob: -19.375085830688477
    6. '1' → logprob: -19.375085830688477
    7. ')' → logprob: -20.000085830688477
    8. '-)' → logprob: -20.250085830688477
    9. '﻿' → logprob: -20.250085830688477
    10. ' ' → logprob: -20.250085830688477

Token 709: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '
' → logprob: -18.5
    3. ' ' → logprob: -18.625
    4. '１' → logprob: -19.125
    5. '2' → logprob: -19.25
    6. '```' → logprob: -19.5
    7. '-' → logprob: -19.625
    8. '

' → logprob: -19.875
    9. '   ' → logprob: -20.25
    10. ')' → logprob: -20.375

Token 710: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0015905579784885049
    2. ')' → logprob: -6.501590728759766
    3. '):
' → logprob: -9.751590728759766
    4. ' ):' → logprob: -10.501590728759766
    5. ':' → logprob: -13.501590728759766
    6. ',' → logprob: -15.001590728759766
    7. ')：' → logprob: -15.626590728759766
    8. '):-' → logprob: -15.876590728759766
    9. '   ' → logprob: -16.001590728759766
    10. '):
' → logprob: -16.501590728759766

Token 711: ' produit' (ID: 29429)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0010560338851064444
    2. '):' → logprob: -7.75105619430542
    3. ':
' → logprob: -8.126055717468262
    4. ' :' → logprob: -8.876055717468262
    5. 'for' → logprob: -8.876055717468262
    6. ')' → logprob: -10.376055717468262
    7. ' for' → logprob: -11.501055717468262
    8. '):
' → logprob: -13.251055717468262
    9. ',' → logprob: -13.501055717468262
    10. 'in' → logprob: -13.501055717468262

Token 712: ' les' (ID: 1341)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.38390153646469116
    2. ' N' → logprob: -1.633901596069336
    3. 'range' → logprob: -3.383901596069336
    4. ')' → logprob: -3.383901596069336
    5. ' range' → logprob: -3.508901596069336
    6. '(N' → logprob: -4.258901596069336
    7. ' ' → logprob: -6.383901596069336
    8. ' (' → logprob: -6.383901596069336
    9. '0' → logprob: -6.508901596069336
    10. '):
' → logprob: -6.633901596069336

Token 713: ' valeurs' (ID: 73668)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.21347546577453613
    2. 'range' → logprob: -1.7134754657745361
    3. 'i' → logprob: -5.463475227355957
    4. ')' → logprob: -5.463475227355957
    5. ' range' → logprob: -6.588475227355957
    6. ' N' → logprob: -7.713475227355957
    7. 'reverse' → logprob: -7.838475227355957
    8. '[N' → logprob: -8.588475227355957
    9. 'for' → logprob: -8.713475227355957
    10. 're' → logprob: -8.963475227355957

Token 714: ' N' (ID: 478)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.03582541644573212
    2. ':' → logprob: -4.035825252532959
    3. '(' → logprob: -4.535825252532959
    4. 'N' → logprob: -5.660825252532959
    5. '):' → logprob: -7.660825252532959
    6. '(range' → logprob: -7.660825252532959
    7. '(-' → logprob: -8.285825729370117
    8. '[::-' → logprob: -8.410825729370117
    9. '():' → logprob: -8.660825729370117
    10. '(n' → logprob: -8.660825729370117

Token 715: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2581508159637451
    2. ')' → logprob: -2.383150815963745
    3. ',' → logprob: -2.633150815963745
    4. ':' → logprob: -3.383150815963745
    5. ' ):' → logprob: -5.008151054382324
    6. ' ,' → logprob: -5.383151054382324
    7. '-' → logprob: -5.383151054382324
    8. ' -' → logprob: -5.508151054382324
    9. '<|end|>' → logprob: -6.258151054382324
    10. ' :' → logprob: -6.508151054382324

Token 716: ' N' (ID: 478)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.10266552865505219
    2. 'N' → logprob: -2.602665424346924
    3. ' -' → logprob: -3.852665424346924
    4. ' N' → logprob: -6.227665424346924
    5. '<|end|>' → logprob: -8.977665901184082
    6. '-N' → logprob: -9.602665901184082
    7. ')' → logprob: -10.477665901184082
    8. ' ' → logprob: -10.602665901184082
    9. '...' → logprob: -11.602665901184082
    10. '```' → logprob: -11.852665901184082

Token 717: '-' (ID: 12)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08971381187438965
    2. '-' → logprob: -2.4647138118743896
    3. ',
' → logprob: -7.839714050292969
    4. ')' → logprob: -8.589714050292969
    5. '-,' → logprob: -9.589714050292969
    6. ' -' → logprob: -10.214714050292969
    7. ',-' → logprob: -10.339714050292969
    8. ' ,' → logprob: -10.839714050292969
    9. '```' → logprob: -11.464714050292969
    10. '),' → logprob: -12.214714050292969

Token 718: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2200749754119897e-06
    2. '2' → logprob: -14.000001907348633
    3. ' ' → logprob: -14.500001907348633
    4. '```' → logprob: -14.500001907348633
    5. '   ' → logprob: -16.000001907348633
    6. ',' → logprob: -16.375001907348633
    7. '
' → logprob: -16.500001907348633
    8. '１' → logprob: -16.750001907348633
    9. '``' → logprob: -18.312501907348633
    10. '  ' → logprob: -18.625001907348633

Token 719: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.013051759451627731
    2. '):' → logprob: -5.388051986694336
    3. ' ,' → logprob: -5.888051986694336
    4. ',-' → logprob: -6.013051986694336
    5. ':' → logprob: -6.388051986694336
    6. ' -' → logprob: -7.763051986694336
    7. ')' → logprob: -7.763051986694336
    8. '-' → logprob: -8.388051986694336
    9. '
' → logprob: -9.888051986694336
    10. ',
' → logprob: -9.888051986694336

Token 720: ' ...,' (ID: 126708)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0017637170385569334
    2. ' -' → logprob: -6.376763820648193
    3. '<|end|>' → logprob: -9.751763343811035
    4. '-N' → logprob: -13.876763343811035
    5. '0' → logprob: -14.126763343811035
    6. ' ' → logprob: -15.001763343811035
    7. ')' → logprob: -15.251763343811035
    8. '...' → logprob: -15.626763343811035
    9. '<|end|>' → logprob: -15.876763343811035
    10. 'N' → logprob: -15.876763343811035

Token 721: ' ' (ID: 220)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00012047011114191264
    2. '0' → logprob: -9.250120162963867
    3. ' -' → logprob: -10.625120162963867
    4. ' ' → logprob: -17.750120162963867
    5. '```' → logprob: -17.875120162963867
    6. '−' → logprob: -18.250120162963867
    7. '
' → logprob: -19.250120162963867
    8. '...' → logprob: -19.625120162963867
    9. '1' → logprob: -20.375120162963867
    10. '   ' → logprob: -20.750120162963867

Token 722: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00013357517309486866
    2. '0' → logprob: -9.000133514404297
    3. ' -' → logprob: -11.500133514404297
    4. ' ' → logprob: -18.500133514404297
    5. '1' → logprob: -19.875133514404297
    6. '```' → logprob: -20.000133514404297
    7. '
' → logprob: -20.125133514404297
    8. '−' → logprob: -20.625133514404297
    9. '   ' → logprob: -20.875133514404297
    10. '-N' → logprob: -21.375133514404297

Token 723: ' (' (ID: 350)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.19369105994701385
    2. ' for' → logprob: -2.3186910152435303
    3. ':' → logprob: -2.5686910152435303
    4. ')' → logprob: -7.943691253662109
    5. ':
' → logprob: -8.44369125366211
    6. '):' → logprob: -8.69369125366211
    7. ',' → logprob: -8.69369125366211
    8. ' :' → logprob: -10.31869125366211
    9. 'in' → logprob: -10.81869125366211
    10. '   ' → logprob: -10.94369125366211

Token 724: 'en' (ID: 262)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.500352680683136
    2. '):' → logprob: -1.7503526210784912
    3. ',' → logprob: -1.8753526210784912
    4. ')' → logprob: -3.750352621078491
    5. ' -' → logprob: -4.50035285949707
    6. ',-' → logprob: -5.00035285949707
    7. '-N' → logprob: -5.00035285949707
    8. 'N' → logprob: -5.50035285949707
    9. '):
' → logprob: -5.62535285949707
    10. '   ' → logprob: -5.87535285949707

Token 725: ' décr' (ID: 123041)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.1981726586818695
    2. ')' → logprob: -2.6981725692749023
    3. '):' → logprob: -2.8231725692749023
    4. '-N' → logprob: -3.5731725692749023
    5. ' -' → logprob: -4.698172569274902
    6. '1' → logprob: -5.323172569274902
    7. '-n' → logprob: -6.073172569274902
    8. '):
' → logprob: -6.448172569274902
    9. '-)' → logprob: -6.823172569274902
    10. ',' → logprob: -7.198172569274902

Token 726: 'ément' (ID: 17645)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.9671252965927124
    2. 'é' → logprob: -1.2171252965927124
    3. 'és' → logprob: -2.092125415802002
    4. 'ès' → logprob: -2.342125415802002
    5. 'ément' → logprob: -3.217125415802002
    6. 'endant' → logprob: -4.092125415802002
    7. 'et' → logprob: -4.717125415802002
    8. 'ement' → logprob: -4.842125415802002
    9. '```' → logprob: -5.217125415802002
    10. 'esc' → logprob: -6.092125415802002

Token 727: 'ant' (ID: 493)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.40466517210006714
    2. ',' → logprob: -1.654665231704712
    3. '1' → logprob: -3.154665231704712
    4. 'e' → logprob: -3.154665231704712
    5. 'ent' → logprob: -3.529665231704712
    6. '),' → logprob: -4.904664993286133
    7. '-' → logprob: -5.279664993286133
    8. 'ant' → logprob: -5.654664993286133
    9. 't' → logprob: -6.029664993286133
    10. 'é' → logprob: -6.154664993286133

Token 728: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.21070320904254913
    2. '):' → logprob: -1.8357032537460327
    3. '-' → logprob: -3.835703134536743
    4. ',' → logprob: -5.210703372955322
    5. '1' → logprob: -6.835703372955322
    6. '):
' → logprob: -7.210703372955322
    7. ' -' → logprob: -7.835703372955322
    8. ',-' → logprob: -8.085702896118164
    9. '```' → logprob: -8.710702896118164
    10. '):-' → logprob: -8.835702896118164

Token 729: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003209799760952592
    2. '-' → logprob: -5.753209590911865
    3. ' -' → logprob: -11.128210067749023
    4. ' ' → logprob: -11.503210067749023
    5. ')' → logprob: -12.503210067749023
    6. '```' → logprob: -13.003210067749023
    7. ',' → logprob: -14.128210067749023
    8. '
' → logprob: -15.253210067749023
    9. '   ' → logprob: -15.753210067749023
    10. '),' → logprob: -16.378210067749023

Token 730: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05494886264204979
    2. '-' → logprob: -2.9299488067626953
    3. ' -' → logprob: -9.804948806762695
    4. ' ' → logprob: -11.929948806762695
    5. '```' → logprob: -12.554948806762695
    6. ')' → logprob: -14.679948806762695
    7. '
' → logprob: -14.804948806762695
    8. '−' → logprob: -15.679948806762695
    9. '   ' → logprob: -16.429948806762695
    10. ',' → logprob: -16.804948806762695

Token 731: ' à' (ID: 1221)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.013879163190722466
    2. ')' → logprob: -4.638879299163818
    3. ',' → logprob: -6.388879299163818
    4. '):
' → logprob: -6.888879299163818
    5. ':' → logprob: -7.013879299163818
    6. ' ):' → logprob: -8.01387882232666
    7. '-' → logprob: -9.88887882232666
    8. '):-' → logprob: -10.26387882232666
    9. '[::-' → logprob: -11.51387882232666
    10. '   ' → logprob: -11.63887882232666

Token 732: ' chaque' (ID: 21194)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.1282626837491989
    2. '1' → logprob: -2.128262758255005
    3. ' -' → logprob: -7.003262519836426
    4. '-step' → logprob: -8.878262519836426
    5. ')' → logprob: -9.128262519836426
    6. '
' → logprob: -10.378262519836426
    7. '```' → logprob: -10.378262519836426
    8. ' ' → logprob: -10.753262519836426
    9. 'pas' → logprob: -11.003262519836426
    10. 'step' → logprob: -11.128262519836426

Token 733: ' étape' (ID: 83661)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5743058323860168
    2. '1' → logprob: -1.074305772781372
    3. ')' → logprob: -2.949305772781372
    4. ' -' → logprob: -3.699305772781372
    5. '   ' → logprob: -5.324306011199951
    6. ' ' → logprob: -5.699306011199951
    7. '-)' → logprob: -6.324306011199951
    8. '```' → logprob: -6.324306011199951
    9. '-
' → logprob: -6.824306011199951
    10. '-step' → logprob: -6.824306011199951

Token 734: ').
' (ID: 6294)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.009065003134310246
    2. '):
' → logprob: -5.2590651512146
    3. ':' → logprob: -6.0090651512146
    4. ')' → logprob: -6.8840651512146
    5. 'for' → logprob: -8.634064674377441
    6. ' ):' → logprob: -9.509064674377441
    7. ',' → logprob: -9.759064674377441
    8. '   ' → logprob: -11.634064674377441
    9. ' :' → logprob: -12.884064674377441
    10. ' for' → logprob: -12.884064674377441

Token 735: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.030042732134461403
    2. ' for' → logprob: -3.5300426483154297
    3. 'range' → logprob: -8.53004264831543
    4. '   ' → logprob: -9.65504264831543
    5. '```' → logprob: -11.78004264831543
    6. ' range' → logprob: -12.28004264831543
    7. 'in' → logprob: -12.65504264831543
    8. ')' → logprob: -12.90504264831543
    9. ':' → logprob: -13.03004264831543
    10. '	for' → logprob: -13.15504264831543

Token 736: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00886167585849762
    2. ' i' → logprob: -5.133861541748047
    3. 'x' → logprob: -6.883861541748047
    4. 'v' → logprob: -7.008861541748047
    5. 'k' → logprob: -7.383861541748047
    6. 'u' → logprob: -9.758861541748047
    7. 'd' → logprob: -10.008861541748047
    8. 'w' → logprob: -10.133861541748047
    9. 'node' → logprob: -10.133861541748047
    10. 'bit' → logprob: -10.383861541748047

Token 737: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1002255454659462
    2. 'in' → logprob: -2.3502254486083984
    3. ' ' → logprob: -11.725225448608398
    4. '	in' → logprob: -11.975225448608398
    5. ' i' → logprob: -13.100225448608398
    6. ',' → logprob: -14.850225448608398
    7. 'i' → logprob: -15.350225448608398
    8. '   ' → logprob: -15.475225448608398
    9. 'In' → logprob: -15.725225448608398
    10. '  ' → logprob: -15.725225448608398

Token 738: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.006726144813001156
    2. ' range' → logprob: -5.006726264953613
    3. 'N' → logprob: -11.506726264953613
    4. 're' → logprob: -15.006726264953613
    5. '(range' → logprob: -15.506726264953613
    6. ' N' → logprob: -17.131725311279297
    7. '	range' → logprob: -17.131725311279297
    8. ' ' → logprob: -17.256725311279297
    9. '   ' → logprob: -17.381725311279297
    10. 'reverse' → logprob: -18.381725311279297

Token 739: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -9.949026571121067e-05
    2. '(' → logprob: -9.250099182128906
    3. 'N' → logprob: -13.250099182128906
    4. '(L' → logprob: -14.125099182128906
    5. '(
' → logprob: -14.750099182128906
    6. ' (' → logprob: -15.375099182128906
    7. '(n' → logprob: -16.000099182128906
    8. '(i' → logprob: -16.500099182128906
    9. '((' → logprob: -17.625099182128906
    10. '(len' → logprob: -18.625099182128906

Token 740: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0365789420902729
    2. ' ,' → logprob: -4.161579132080078
    3. '-' → logprob: -4.286579132080078
    4. ' -' → logprob: -5.036579132080078
    5. ',
' → logprob: -10.411579132080078
    6. '-,' → logprob: -10.536579132080078
    7. ',-' → logprob: -11.036579132080078
    8. '   ' → logprob: -12.661579132080078
    9. ' ,-' → logprob: -13.161579132080078
    10. '1' → logprob: -13.411579132080078

Token 741: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00020890454470645636
    2. ' -' → logprob: -9.000208854675293
    3. '0' → logprob: -9.375208854675293
    4. ' ' → logprob: -14.250208854675293
    5. '```' → logprob: -18.37520980834961
    6. '−' → logprob: -18.62520980834961
    7. '   ' → logprob: -19.75020980834961
    8. '-
' → logprob: -20.00020980834961
    9. '  ' → logprob: -20.62520980834961
    10. '
' → logprob: -21.00020980834961

Token 742: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -15.000000953674316
    3. '
' → logprob: -15.875000953674316
    4. '

' → logprob: -16.625
    5. '2' → logprob: -16.75
    6. '   ' → logprob: -17.75
    7. '１' → logprob: -18.0
    8. '```' → logprob: -18.125
    9. '  ' → logprob: -18.9375
    10. '``' → logprob: -19.5625

Token 743: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0058855414390563965
    2. '-' → logprob: -5.380885601043701
    3. ' -' → logprob: -7.130885601043701
    4. ' ,' → logprob: -8.255885124206543
    5. ',-' → logprob: -9.255885124206543
    6. '1' → logprob: -9.630885124206543
    7. '-,' → logprob: -10.630885124206543
    8. ',
' → logprob: -11.630885124206543
    9. '   ' → logprob: -12.380885124206543
    10. ' ,-' → logprob: -13.005885124206543

Token 744: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0002613358374219388
    2. ' -' → logprob: -8.250261306762695
    3. '   ' → logprob: -18.750261306762695
    4. '1' → logprob: -18.750261306762695
    5. ' ' → logprob: -19.000261306762695
    6. '-
' → logprob: -19.125261306762695
    7. '```' → logprob: -19.125261306762695
    8. '-i' → logprob: -19.875261306762695
    9. '	' → logprob: -20.500261306762695
    10. '  ' → logprob: -20.750261306762695

Token 745: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.375
    3. '```' → logprob: -18.125
    4. '
' → logprob: -19.25
    5. '１' → logprob: -19.625
    6. '   ' → logprob: -19.875
    7. '2' → logprob: -20.0
    8. '

' → logprob: -20.125
    9. '۱' → logprob: -20.3125
    10. '﻿' → logprob: -20.5625

Token 746: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004202105570584536
    2. '):
' → logprob: -5.504201889038086
    3. ':' → logprob: -9.129201889038086
    4. ' ):' → logprob: -11.879201889038086
    5. '   ' → logprob: -13.254201889038086
    6. ')' → logprob: -13.254201889038086
    7. '):
' → logprob: -13.379201889038086
    8. ',' → logprob: -13.504201889038086
    9. '-' → logprob: -14.754201889038086
    10. ' :' → logprob: -14.879201889038086

Token 747: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001422495348379016
    2. ':' → logprob: -7.50142240524292
    3. '	if' → logprob: -7.62642240524292
    4. '<|end|>' → logprob: -8.376422882080078
    5. ' if' → logprob: -9.626422882080078
    6. '   ' → logprob: -10.251422882080078
    7. 'if' → logprob: -11.251422882080078
    8. '<|end|>' → logprob: -12.126422882080078
    9. '```' → logprob: -12.501422882080078
    10. ',' → logprob: -12.751422882080078

Token 748: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009741133544594049
    2. 'if' → logprob: -7.875974178314209
    3. ' if' → logprob: -8.12597370147705
    4. '	if' → logprob: -8.37597370147705
    5. '   ' → logprob: -9.75097370147705
    6. '       ' → logprob: -13.25097370147705
    7. '```' → logprob: -13.37597370147705
    8. '<|end|>' → logprob: -13.37597370147705
    9. '    ' → logprob: -14.50097370147705
    10. ':' → logprob: -14.62597370147705

Token 749: ' (' (ID: 350)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.002853851765394211
    2. '   ' → logprob: -6.502853870391846
    3. 'bit' → logprob: -7.002853870391846
    4. '#' → logprob: -8.877853393554688
    5. 'weight' → logprob: -9.752853393554688
    6. 'p' → logprob: -10.127853393554688
    7. 'prev' → logprob: -10.252853393554688
    8. 'node' → logprob: -10.502853393554688
    9. ' if' → logprob: -10.752853393554688
    10. 'b' → logprob: -10.877853393554688

Token 750: 'rest' (ID: 7134)
  Prédit: 'rest'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.1677664816379547
    2. 'if' → logprob: -2.792766571044922
    3. 'tmp' → logprob: -3.167766571044922
    4. '(rest' → logprob: -3.292766571044922
    5. '(tmp' → logprob: -5.167766571044922
    6. ' rest' → logprob: -5.542766571044922
    7. 'p' → logprob: -7.042766571044922
    8. '(i' → logprob: -7.292766571044922
    9. 'i' → logprob: -7.417766571044922
    10. ' tmp' → logprob: -8.042766571044922

Token 751: ' >>' (ID: 6832)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '&' → logprob: -0.47261476516723633
    2. '>>' → logprob: -1.5976147651672363
    3. '>' → logprob: -1.9726147651672363
    4. ' &' → logprob: -4.347614765167236
    5. ')' → logprob: -4.472614765167236
    6. '&gt' → logprob: -5.222614765167236
    7. '==' → logprob: -5.722614765167236
    8. ' ' → logprob: -8.222614288330078
    9. ' >' → logprob: -8.222614288330078
    10. '!=' → logprob: -8.472614288330078

Token 752: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.5213274309644476e-05
    2. ' i' → logprob: -11.125015258789062
    3. ')' → logprob: -16.500015258789062
    4. '   ' → logprob: -16.625015258789062
    5. '1' → logprob: -16.875015258789062
    6. '0' → logprob: -17.000015258789062
    7. ')i' → logprob: -17.000015258789062
    8. '	i' → logprob: -17.000015258789062
    9. '%i' → logprob: -17.750015258789062
    10. '
' → logprob: -17.875015258789062

Token 753: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009800514671951532
    2. ')&' → logprob: -7.000979900360107
    3. '&' → logprob: -9.875980377197266
    4. ' )' → logprob: -11.125980377197266
    5. '1' → logprob: -13.875980377197266
    6. '）' → logprob: -15.000980377197266
    7. '0' → logprob: -15.500980377197266
    8. '&)' → logprob: -15.625980377197266
    9. ')
' → logprob: -15.750980377197266
    10. ' &' → logprob: -16.000980377197266

Token 754: ' &' (ID: 827)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.033851198852062225
    2. ' &' → logprob: -3.408851146697998
    3. '&amp' → logprob: -8.908851623535156
    4. ')&' → logprob: -10.283851623535156
    5. '   ' → logprob: -11.908851623535156
    6. '&gt' → logprob: -11.908851623535156
    7. '&nbsp' → logprob: -12.283851623535156
    8. '&
' → logprob: -12.658851623535156
    9. '>&' → logprob: -12.783851623535156
    10. ')' → logprob: -12.783851623535156

Token 755: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010329303331673145
    2. ' ' → logprob: -6.876032829284668
    3. '```' → logprob: -17.001033782958984
    4. '   ' → logprob: -17.751033782958984
    5. '(' → logprob: -17.876033782958984
    6. ' ' → logprob: -18.501033782958984
    7. '`' → logprob: -18.876033782958984
    8. '  ' → logprob: -19.501033782958984
    9. '' → logprob: -19.501033782958984
    10. '１' → logprob: -19.626033782958984

Token 756: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -12.87500286102295
    3. '(' → logprob: -19.375001907348633
    4. '１' → logprob: -19.750001907348633
    5. '```' → logprob: -19.875001907348633
    6. '   ' → logprob: -20.250001907348633
    7. '01' → logprob: -20.500001907348633
    8. '' → logprob: -20.625001907348633
    9. '
' → logprob: -20.625001907348633
    10. '`' → logprob: -20.875001907348633

Token 757: ' permet' (ID: 11798)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.552167534828186
    2. '==' → logprob: -1.427167534828186
    3. ':' → logprob: -1.802167534828186
    4. ')' → logprob: -4.8021674156188965
    5. ' !=' → logprob: -5.5521674156188965
    6. '!=' → logprob: -6.3021674156188965
    7. '>' → logprob: -6.5521674156188965
    8. ')==' → logprob: -7.1771674156188965
    9. '   ' → logprob: -7.3021674156188965
    10. ' :' → logprob: -7.4271674156188965

Token 758: ' de' (ID: 334)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 759: ' vérifier' (ID: 93671)
  Prédit: ' vérifier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vérifier' → logprob: -0.1842382550239563
    2. '(rest' → logprob: -2.5592381954193115
    3. ' rest' → logprob: -3.9342381954193115
    4. '(' → logprob: -4.059238433837891
    5. 'rest' → logprob: -4.434238433837891
    6. '1' → logprob: -4.434238433837891
    7. '((' → logprob: -4.809238433837891
    8. ' (' → logprob: -4.934238433837891
    9. ' ' → logprob: -6.184238433837891
    10. ' check' → logprob: -6.184238433837891

Token 760: ' si' (ID: 1784)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8325021266937256
    2. '(rest' → logprob: -1.2075021266937256
    3. ' (' → logprob: -1.8325021266937256
    4. ' ' → logprob: -3.2075021266937256
    5. ' rest' → logprob: -3.4575021266937256
    6. '  ' → logprob: -4.832502365112305
    7. '(' → logprob: -4.957502365112305
    8. '   ' → logprob: -5.082502365112305
    9. ')' → logprob: -5.832502365112305
    10. 'rest' → logprob: -6.082502365112305

Token 761: ' le' (ID: 505)
  Prédit: '(rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(rest' → logprob: -0.6081030964851379
    2. ' (' → logprob: -1.2331030368804932
    3. ' rest' → logprob: -1.9831030368804932
    4. 'rest' → logprob: -3.733103036880493
    5. '((' → logprob: -7.108103275299072
    6. '(tmp' → logprob: -7.233103275299072
    7. '(' → logprob: -7.983103275299072
    8. ' ((' → logprob: -8.108102798461914
    9. ' ' → logprob: -8.858102798461914
    10. ' tmp' → logprob: -9.233102798461914

Token 762: ' i' (ID: 575)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.4516754746437073
    2. '(rest' → logprob: -1.0766754150390625
    3. ' rest' → logprob: -4.5766754150390625
    4. ' (' → logprob: -4.7016754150390625
    5. '((' → logprob: -6.9516754150390625
    6. '(' → logprob: -7.2016754150390625
    7. '(i' → logprob: -7.7016754150390625
    8. 'i' → logprob: -8.201675415039062
    9. 'tmp' → logprob: -8.326675415039062
    10. '(tmp' → logprob: -8.451675415039062

Token 763: '-' (ID: 12)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 764: 'ème' (ID: 9767)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6203857660293579
    2. 'th' → logprob: -1.495385766029358
    3. 'i' → logprob: -2.3703856468200684
    4. ' ' → logprob: -2.7453856468200684
    5. 'ième' → logprob: -2.9953856468200684
    6. ' bit' → logprob: -4.495385646820068
    7. '  ' → logprob: -5.870385646820068
    8. '```' → logprob: -5.870385646820068
    9. '   ' → logprob: -6.120385646820068
    10. ' ' → logprob: -6.245385646820068

Token 765: ' bit' (ID: 3546)
  Prédit: ' bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bit' → logprob: -0.16722947359085083
    2. ' ' → logprob: -2.792229413986206
    3. 'bit' → logprob: -3.042229413986206
    4. '1' → logprob: -4.042229652404785
    5. ' rest' → logprob: -4.417229652404785
    6. ' (' → logprob: -5.042229652404785
    7. 'rest' → logprob: -5.292229652404785
    8. ' i' → logprob: -6.667229652404785
    9. '  ' → logprob: -7.042229652404785
    10. '(rest' → logprob: -7.792229652404785

Token 766: ' de' (ID: 334)
  Prédit: '(rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(rest' → logprob: -0.6451608538627625
    2. ' rest' → logprob: -1.5201609134674072
    3. ' (' → logprob: -2.2701609134674072
    4. 'rest' → logprob: -2.8951609134674072
    5. '<|end|>' → logprob: -2.8951609134674072
    6. ' ' → logprob: -3.8951609134674072
    7. ')' → logprob: -5.145160675048828
    8. '   ' → logprob: -5.520160675048828
    9. '(' → logprob: -5.645160675048828
    10. '  ' → logprob: -5.895160675048828

Token 767: ' la' (ID: 557)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.005951671861112118
    2. ' rest' → logprob: -5.130951881408691
    3. '(rest' → logprob: -10.755951881408691
    4. 'reste' → logprob: -14.005951881408691
    5. 're' → logprob: -15.005951881408691
    6. ' ' → logprob: -15.630951881408691
    7. 'rep' → logprob: -16.005950927734375
    8. 'rests' → logprob: -16.505950927734375
    9. '_rest' → logprob: -16.880950927734375
    10. 'Rest' → logprob: -17.255950927734375

Token 768: ' variable' (ID: 11076)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rest' → logprob: -3.4285862057004124e-05
    2. ' rest' → logprob: -10.37503433227539
    3. 'reste' → logprob: -13.62503433227539
    4. 'res' → logprob: -15.12503433227539
    5. 'L' → logprob: -15.25003433227539
    6. 'rests' → logprob: -15.50003433227539
    7. 're' → logprob: -15.62503433227539
    8. 'r' → logprob: -16.00003433227539
    9. '(rest' → logprob: -16.00003433227539
    10. '```' → logprob: -16.00003433227539

Token 769: ' resta' (ID: 55968)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.0002973280206788331
    2. ' rest' → logprob: -8.125297546386719
    3. '(rest' → logprob: -14.000297546386719
    4. 'reste' → logprob: -15.375297546386719
    5. 'rests' → logprob: -17.25029754638672
    6. 're' → logprob: -17.37529754638672
    7. '
' → logprob: -17.50029754638672
    8. 'L' → logprob: -17.62529754638672
    9. 'r' → logprob: -17.87529754638672
    10. 'Rest' → logprob: -18.12529754638672

Token 770: ' est' (ID: 893)
  Prédit: 'nt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nt' → logprob: -0.012122494168579578
    2. 'nte' → logprob: -5.387122631072998
    3. 't' → logprob: -5.762122631072998
    4. 'n' → logprob: -6.262122631072998
    5. 'rest' → logprob: -7.262122631072998
    6. 'int' → logprob: -7.387122631072998
    7. 'ant' → logprob: -7.762122631072998
    8. 'ut' → logprob: -8.63712215423584
    9. 'ent' → logprob: -9.13712215423584
    10. 'nant' → logprob: -9.88712215423584

Token 771: ' à' (ID: 1221)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014696354046463966
    2. ' set' → logprob: -4.38969612121582
    3. ' ' → logprob: -6.26469612121582
    4. 'set' → logprob: -8.51469612121582
    5. '```' → logprob: -10.13969612121582
    6. '   ' → logprob: -11.26469612121582
    7. '_set' → logprob: -12.26469612121582
    8. ' True' → logprob: -12.51469612121582
    9. '=' → logprob: -12.63969612121582
    10. 'égal' → logprob: -13.01469612121582

Token 772: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00029720881138928235
    2. ' ' → logprob: -8.125297546386719
    3. '```' → logprob: -14.125297546386719
    4. '0' → logprob: -14.750297546386719
    5. '   ' → logprob: -17.75029754638672
    6. 'é' → logprob: -18.12529754638672
    7. 'un' → logprob: -18.12529754638672
    8. 'True' → logprob: -18.50029754638672
    9. '`' → logprob: -19.00029754638672
    10. 'éc' → logprob: -19.12529754638672

Token 773: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.8889261304575484e-06
    2. ' ' → logprob: -12.750003814697266
    3. '```' → logprob: -14.750003814697266
    4. 'un' → logprob: -15.125003814697266
    5. '0' → logprob: -15.250003814697266
    6. '`' → logprob: -17.250003814697266
    7. 'é' → logprob: -18.000003814697266
    8. 'l' → logprob: -18.500003814697266
    9. 'position' → logprob: -18.750003814697266
    10. 'd' → logprob: -19.125003814697266

Token 774: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6348437666893005
    2. ':' → logprob: -0.8848437666893005
    3. ' and' → logprob: -3.6348438262939453
    4. ' ==' → logprob: -4.259843826293945
    5. '==' → logprob: -5.634843826293945
    6. 'and' → logprob: -5.759843826293945
    7. '<|end|>' → logprob: -6.009843826293945
    8. ' :' → logprob: -6.134843826293945
    9. ':
' → logprob: -6.634843826293945
    10. ')' → logprob: -7.009843826293945

Token 775: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -8.637786231702194e-05
    2. ':' → logprob: -10.375086784362793
    3. '       ' → logprob: -11.125086784362793
    4. ' if' → logprob: -11.125086784362793
    5. '   ' → logprob: -12.000086784362793
    6. '    
' → logprob: -12.750086784362793
    7. '<|end|>' → logprob: -12.750086784362793
    8. '    ' → logprob: -12.750086784362793
    9. '  ' → logprob: -12.875086784362793
    10. 'if' → logprob: -13.125086784362793

Token 776: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06432268768548965
    2. ' if' → logprob: -2.9393227100372314
    3. 'if' → logprob: -4.814322471618652
    4. ' ' → logprob: -7.564322471618652
    5. '    ' → logprob: -8.314322471618652
    6. ' 
' → logprob: -8.564322471618652
    7. '  ' → logprob: -9.189322471618652
    8. '    
' → logprob: -9.814322471618652
    9. '       ' → logprob: -9.939322471618652
    10. '	if' → logprob: -10.689322471618652

Token 777: ' Cela' (ID: 44403)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8829408884048462
    2. ' if' → logprob: -1.0079408884048462
    3. 'if' → logprob: -1.5079408884048462
    4. '	if' → logprob: -9.382941246032715
    5. ' ' → logprob: -11.882941246032715
    6. '   ' → logprob: -13.007941246032715
    7. '  ' → logprob: -13.132941246032715
    8. '    ' → logprob: -13.382941246032715
    9. '       ' → logprob: -13.882941246032715
    10. 'If' → logprob: -14.132941246032715

Token 778: ' correspond' (ID: 11095)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4544481635093689
    2. 'if' → logprob: -1.9544482231140137
    3. ' if' → logprob: -2.4544482231140137
    4. ':' → logprob: -2.4544482231140137
    5. '==' → logprob: -3.8294482231140137
    6. ' ==' → logprob: -3.8294482231140137
    7. ' :' → logprob: -6.079448223114014
    8. '  ' → logprob: -6.829448223114014
    9. '>' → logprob: -7.079448223114014
    10. ' ' → logprob: -7.204448223114014

Token 779: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.1432892233133316
    2. '   ' → logprob: -2.26828932762146
    3. 'à' → logprob: -3.89328932762146
    4. ' a' → logprob: -5.643289089202881
    5. '    ' → logprob: -5.643289089202881
    6. '  ' → logprob: -6.893289089202881
    7. ' ' → logprob: -7.018289089202881
    8. '       ' → logprob: -9.268289566040039
    9. 'a' → logprob: -9.643289566040039
    10. ''à' → logprob: -9.893289566040039

Token 780: ' savoir' (ID: 22835)
  Prédit: '(rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(rest' → logprob: -1.1650022268295288
    2. ' (' → logprob: -1.5400022268295288
    3. ' rest' → logprob: -1.5400022268295288
    4. 'rest' → logprob: -1.7900022268295288
    5. '(tmp' → logprob: -3.0400023460388184
    6. ' tmp' → logprob: -4.540002346038818
    7. 'tmp' → logprob: -4.540002346038818
    8. '((' → logprob: -5.165002346038818
    9. ' edges' → logprob: -5.540002346038818
    10. 'edges' → logprob: -5.915002346038818

Token 781: ' si' (ID: 1784)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.1660974025726318
    2. '   ' → logprob: -1.2910974025726318
    3. ' si' → logprob: -1.6660974025726318
    4. 'si' → logprob: -2.291097402572632
    5. 'if' → logprob: -2.791097402572632
    6. ' à' → logprob: -3.791097402572632
    7. 'à' → logprob: -4.541097640991211
    8. ' ' → logprob: -4.666097640991211
    9. ' s' → logprob: -5.416097640991211
    10. '  ' → logprob: -5.541097640991211

Token 782: ' la' (ID: 557)
  Prédit: '(rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(rest' → logprob: -0.7451938986778259
    2. ' (' → logprob: -1.3701939582824707
    3. ' rest' → logprob: -1.6201939582824707
    4. 'rest' → logprob: -2.6201939582824707
    5. '(' → logprob: -8.495193481445312
    6. '(tmp' → logprob: -8.745193481445312
    7. '((' → logprob: -9.620193481445312
    8. ' ' → logprob: -9.870193481445312
    9. ' tmp' → logprob: -10.245193481445312
    10. 'tmp' → logprob: -10.495193481445312

Token 783: ' puissance' (ID: 63494)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.7938464283943176
    2. ' rest' → logprob: -1.0438463687896729
    3. 'if' → logprob: -2.543846368789673
    4. '(rest' → logprob: -3.043846368789673
    5. ' if' → logprob: -3.418846368789673
    6. ' (' → logprob: -4.293846607208252
    7. 'tmp' → logprob: -5.043846607208252
    8. '(tmp' → logprob: -5.168846607208252
    9. ' tmp' → logprob: -5.293846607208252
    10. '   ' → logprob: -5.418846607208252

Token 784: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.642250657081604
    2. ' i' → logprob: -1.392250657081604
    3. ' of' → logprob: -2.5172505378723145
    4. ' ' → logprob: -2.8922505378723145
    5. '   ' → logprob: -3.1422505378723145
    6. ' d' → logprob: -4.2672505378723145
    7. '_' → logprob: -4.7672505378723145
    8. '    ' → logprob: -5.6422505378723145
    9. '  ' → logprob: -5.7672505378723145
    10. ' _' → logprob: -5.8922505378723145

Token 785: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.652359664440155
    2. ' ' → logprob: -0.902359664440155
    3. ' i' → logprob: -3.2773597240448
    4. 'i' → logprob: -3.6523597240448
    5. 'de' → logprob: -5.027359485626221
    6. ' deux' → logprob: -5.902359485626221
    7. ' two' → logprob: -7.777359485626221
    8. '   ' → logprob: -9.402359962463379
    9. '```' → logprob: -10.027359962463379
    10. '  ' → logprob: -11.152359962463379

Token 786: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.2364957183599472
    2. ' ' → logprob: -2.1114957332611084
    3. 'i' → logprob: -2.6114957332611084
    4. ' i' → logprob: -4.486495494842529
    5. 'de' → logprob: -5.611495494842529
    6. '   ' → logprob: -7.361495494842529
    7. '1' → logprob: -8.236495971679688
    8. ' deux' → logprob: -9.111495971679688
    9. '```' → logprob: -9.736495971679688
    10. '  ' → logprob: -10.486495971679688

Token 787: '^' (ID: 61)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5294947624206543
    2. ' &' → logprob: -2.1544947624206543
    3. ' rest' → logprob: -2.6544947624206543
    4. ' ' → logprob: -3.1544947624206543
    5. ' est' → logprob: -3.6544947624206543
    6. ' tmp' → logprob: -3.9044947624206543
    7. '[i' → logprob: -3.9044947624206543
    8. ' (' → logprob: -3.9044947624206543
    9. '&' → logprob: -4.529494762420654
    10. ' suivante' → logprob: -4.529494762420654

Token 788: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5287685990333557
    2. ' i' → logprob: -0.9037685990333557
    3. '   ' → logprob: -5.528768539428711
    4. ' ' → logprob: -7.153768539428711
    5. '  ' → logprob: -7.778768539428711
    6. '    ' → logprob: -8.028768539428711
    7. '	i' → logprob: -9.903768539428711
    8. '```' → logprob: -10.528768539428711
    9. '     ' → logprob: -11.403768539428711
    10. '`' → logprob: -11.528768539428711

Token 789: ' doit' (ID: 21822)
  Prédit: ' &'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.44356465339660645
    2. ' est' → logprob: -2.0685646533966064
    3. '&' → logprob: -2.8185646533966064
    4. ')' → logprob: -3.1935646533966064
    5. ' is' → logprob: -3.4435646533966064
    6. ' ' → logprob: -3.5685646533966064
    7. ' rest' → logprob: -4.068564414978027
    8. ' continue' → logprob: -4.943564414978027
    9. ' )' → logprob: -5.068564414978027
    10. '```' → logprob: -5.443564414978027

Token 790: ' être' (ID: 9104)
  Prédit: 'être'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'être' → logprob: -0.5496898293495178
    2. ' être' → logprob: -1.049689769744873
    3. '   ' → logprob: -3.799689769744873
    4. ' be' → logprob: -3.924689769744873
    5. ' ' → logprob: -4.424689769744873
    6. ' etre' → logprob: -5.674689769744873
    7. 'êtres' → logprob: -5.924689769744873
    8. ''être' → logprob: -5.924689769744873
    9. 'êt' → logprob: -6.549689769744873
    10. 'etre' → logprob: -6.549689769744873

Token 791: ' incl' (ID: 11368)
  Prédit: 'aj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'aj' → logprob: -0.04407176002860069
    2. 'prise' → logprob: -4.544071674346924
    3. 'added' → logprob: -4.794071674346924
    4. 'included' → logprob: -5.794071674346924
    5. ' ajout' → logprob: -5.919071674346924
    6. 'incl' → logprob: -6.044071674346924
    7. ' ' → logprob: -6.044071674346924
    8. '1' → logprob: -6.294071674346924
    9. '```' → logprob: -6.294071674346924
    10. ' prise' → logprob: -6.544071674346924

Token 792: 'use' (ID: 1821)
  Prédit: 'cl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cl' → logprob: -0.8605905771255493
    2. 'cluded' → logprob: -0.9855905771255493
    3. 't' → logprob: -2.4855904579162598
    4. 'uée' → logprob: -3.7355904579162598
    5. 'clude' → logprob: -4.23559045791626
    6. 'u' → logprob: -4.23559045791626
    7. 'lu' → logprob: -4.48559045791626
    8. 'ue' → logprob: -4.61059045791626
    9. 'clud' → logprob: -4.61059045791626
    10. 'ud' → logprob: -4.98559045791626

Token 793: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.517193615436554
    2. ' dans' → logprob: -1.6421935558319092
    3. ' in' → logprob: -1.7671935558319092
    4. ':' → logprob: -4.267193794250488
    5. 'dans' → logprob: -4.392193794250488
    6. 'in' → logprob: -5.392193794250488
    7. ')' → logprob: -6.142193794250488
    8. '(tmp' → logprob: -7.017193794250488
    9. '    ' → logprob: -7.142193794250488
    10. ' à' → logprob: -7.517193794250488

Token 794: ' atteindre' (ID: 95734)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.10166177898645401
    2. 'edges' → logprob: -3.2266616821289062
    3. 'tmp' → logprob: -3.6016616821289062
    4. ' rest' → logprob: -4.101661682128906
    5. ' edges' → logprob: -5.476661682128906
    6. 'if' → logprob: -5.976661682128906
    7. 'aj' → logprob: -6.476661682128906
    8. ' tmp' → logprob: -6.851661682128906
    9. '(tmp' → logprob: -7.101661682128906
    10. '(edges' → logprob: -7.101661682128906

Token 795: ' la' (ID: 557)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.5447743535041809
    2. 'tmp' → logprob: -1.0447742938995361
    3. 'L' → logprob: -3.169774293899536
    4. ' tmp' → logprob: -4.794774532318115
    5. ' rest' → logprob: -5.044774532318115
    6. ' L' → logprob: -5.419774532318115
    7. 'le' → logprob: -5.669774532318115
    8. '   ' → logprob: -6.919774532318115
    9. ' le' → logprob: -8.294774055480957
    10. ' la' → logprob: -8.294774055480957

Token 796: ' somme' (ID: 64484)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.7869356274604797
    2. 'L' → logprob: -1.286935567855835
    3. ' L' → logprob: -2.161935567855835
    4. ' rest' → logprob: -2.911935567855835
    5. ' ' → logprob: -3.536935567855835
    6. 'r' → logprob: -3.661935567855835
    7. 'target' → logprob: -5.786935806274414
    8. 'reste' → logprob: -5.786935806274414
    9. ' reste' → logprob: -5.786935806274414
    10. '`' → logprob: -5.911935806274414

Token 797: ' L' (ID: 451)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22997574508190155
    2. '       ' → logprob: -3.354975700378418
    3. ' restante' → logprob: -3.479975700378418
    4. ' rest' → logprob: -3.729975700378418
    5. ' à' → logprob: -4.229975700378418
    6. 'rest' → logprob: -4.229975700378418
    7. '    ' → logprob: -4.604975700378418
    8. ' ' → logprob: -4.854975700378418
    9. '.' → logprob: -4.854975700378418
    10. ' suivante' → logprob: -4.979975700378418

Token 798: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04764987900853157
    2. ':' → logprob: -3.17264986038208
    3. ' ==' → logprob: -6.54764986038208
    4. ' :' → logprob: -7.29764986038208
    5. ')' → logprob: -7.54764986038208
    6. ':
' → logprob: -7.67264986038208
    7. ' and' → logprob: -7.92264986038208
    8. '==' → logprob: -8.172650337219238
    9. ' if' → logprob: -8.547650337219238
    10. '):' → logprob: -9.047650337219238

Token 799: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0016626816941425204
    2. ' if' → logprob: -6.751662731170654
    3. ':' → logprob: -8.001662254333496
    4. 'if' → logprob: -9.751662254333496
    5. '<|end|>' → logprob: -9.876662254333496
    6. ' :' → logprob: -11.626662254333496
    7. '  ' → logprob: -11.751662254333496
    8. '	if' → logprob: -11.751662254333496
    9. ' ' → logprob: -12.251662254333496
    10. ',' → logprob: -12.876662254333496

Token 800: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0040269880555570126
    2. ' if' → logprob: -5.754026889801025
    3. 'if' (adapté à ' if') → logprob: -7.129026889801025
    4. '	if' → logprob: -11.254027366638184
    5. ' ' → logprob: -12.129027366638184
    6. '   ' → logprob: -12.254027366638184
    7. '<|end|>' → logprob: -12.504027366638184
    8. '  ' → logprob: -12.504027366638184
    9. '    
' → logprob: -13.004027366638184
    10. '    ' → logprob: -13.129027366638184

Token 801: ' (' (ID: 350)
  Prédit: '(rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(rest' → logprob: -0.16062813997268677
    2. ' (' → logprob: -1.910628080368042
    3. '   ' → logprob: -8.910628318786621
    4. ' rest' → logprob: -9.035628318786621
    5. ' ' → logprob: -10.035628318786621
    6. 'rest' → logprob: -10.160628318786621
    7. '((' → logprob: -10.535628318786621
    8. '  ' → logprob: -10.785628318786621
    9. '(' → logprob: -11.660628318786621
    10. '(Rest' → logprob: -12.410628318786621

Token 802: 'rest' (ID: 7134)
  Prédit: 'rest'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.00015121731848921627
    2. '(rest' → logprob: -9.125151634216309
    3. ' rest' → logprob: -10.125151634216309
    4. '   ' → logprob: -13.375151634216309
    5. '  ' → logprob: -15.750151634216309
    6. 'res' → logprob: -16.750150680541992
    7. ' ' → logprob: -17.000150680541992
    8. 'L' → logprob: -17.250150680541992
    9. '.rest' → logprob: -17.250150680541992
    10. ' (' → logprob: -17.250150680541992

Token 803: ' >>' (ID: 6832)
  Prédit: ' >>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >>' → logprob: -0.038133636116981506
    2. '>>' → logprob: -3.2881336212158203
    3. ' ' → logprob: -9.78813362121582
    4. ' ' → logprob: -11.03813362121582
    5. '   ' → logprob: -12.28813362121582
    6. '	' → logprob: -12.41313362121582
    7. ' >>=' → logprob: -12.91313362121582
    8. '>>(' → logprob: -13.16313362121582
    9. '>>>' → logprob: -13.53813362121582
    10. ')>>' → logprob: -13.78813362121582

Token 804: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.676292231422849e-05
    2. ' i' → logprob: -11.000017166137695
    3. '	i' → logprob: -19.125017166137695
    4. ')i' → logprob: -20.125017166137695
    5. '   ' → logprob: -20.875017166137695
    6. '[i' → logprob: -21.500017166137695
    7. '```' → logprob: -22.875017166137695
    8. '(i' → logprob: -23.250017166137695
    9. '<|end|>' → logprob: -23.375017166137695
    10. '{i' → logprob: -23.375017166137695

Token 805: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.4881879400927573e-05
    2. ' )' → logprob: -10.750035285949707
    3. ')&' → logprob: -11.250035285949707
    4. '&' → logprob: -15.250035285949707
    5. '）' → logprob: -17.25003433227539
    6. '   ' → logprob: -18.75003433227539
    7. '&)' → logprob: -18.75003433227539
    8. '`)' → logprob: -18.87503433227539
    9. ' &' → logprob: -19.12503433227539
    10. ')
' → logprob: -20.12503433227539

Token 806: ' &' (ID: 827)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.34555554389953613
    2. ' &' → logprob: -1.3455555438995361
    3. ')' → logprob: -3.595555543899536
    4. ')&' → logprob: -5.470555305480957
    5. '&amp' → logprob: -9.720555305480957
    6. ' )' → logprob: -11.095555305480957
    7. '   ' → logprob: -11.470555305480957
    8. ' ' → logprob: -11.595555305480957
    9. '&
' → logprob: -12.095555305480957
    10. ' &)' → logprob: -12.345555305480957

Token 807: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01250989455729723
    2. ' ' → logprob: -4.387509822845459
    3. ' ' → logprob: -15.887510299682617
    4. '   ' → logprob: -16.762510299682617
    5. '```' → logprob: -16.762510299682617
    6. '  ' → logprob: -18.262510299682617
    7. '(' → logprob: -19.075010299682617
    8. '`' → logprob: -19.200010299682617
    9. '１' → logprob: -19.450010299682617
    10. '0' → logprob: -19.825010299682617

Token 808: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -11.875006675720215
    3. '   ' → logprob: -19.62500762939453
    4. '```' → logprob: -20.00000762939453
    5. '0' → logprob: -20.37500762939453
    6. '
' → logprob: -21.37500762939453
    7. '`' → logprob: -21.50000762939453
    8. '' → logprob: -21.56250762939453
    9. '

' → logprob: -21.81250762939453
    10. '01' → logprob: -21.87500762939453

Token 809: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.044914018362760544
    2. '==' → logprob: -3.7949140071868896
    3. ' ==' → logprob: -3.9199140071868896
    4. ':
' → logprob: -7.544914245605469
    5. '>' → logprob: -7.669914245605469
    6. ' !=' → logprob: -8.544914245605469
    7. ' :' → logprob: -9.044914245605469
    8. '!=' → logprob: -9.169914245605469
    9. '=' → logprob: -9.544914245605469
    10. ' >' → logprob: -10.044914245605469

Token 810: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04228844866156578
    2. '       ' → logprob: -3.7922885417938232
    3. 'edges' → logprob: -4.042288303375244
    4. ' edges' → logprob: -6.917288303375244
    5. '```' → logprob: -9.042288780212402
    6. '(edges' → logprob: -10.042288780212402
    7. ':' → logprob: -10.792288780212402
    8. '#' → logprob: -10.917288780212402
    9. '):
' → logprob: -11.042288780212402
    10. ':
' → logprob: -11.292288780212402

Token 811: ' #' (ID: 1069)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.02495953068137169
    2. '   ' → logprob: -3.7749595642089844
    3. ' edges' → logprob: -6.649959564208984
    4. '       ' → logprob: -8.774959564208984
    5. 'tmp' → logprob: -8.899959564208984
    6. '#' (adapté à ' #') → logprob: -9.899959564208984
    7. 'rest' → logprob: -10.899959564208984
    8. '```' → logprob: -11.399959564208984
    9. 'for' → logprob: -11.899959564208984
    10. 'edge' → logprob: -12.024959564208984

Token 812: ' Si' (ID: 7832)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.00030042731668800116
    2. '#' → logprob: -8.875300407409668
    3. 'tmp' → logprob: -9.625300407409668
    4. '   ' → logprob: -10.125300407409668
    5. '       ' → logprob: -11.125300407409668
    6. 'rest' → logprob: -11.375300407409668
    7. ' edges' → logprob: -11.375300407409668
    8. 'N' → logprob: -12.750300407409668
    9. 'u' → logprob: -12.750300407409668
    10. 'edge' → logprob: -13.250300407409668

Token 813: ' ce' (ID: 2357)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.2103157937526703
    2. ' edges' → logprob: -1.7103158235549927
    3. 'tmp' → logprob: -5.210315704345703
    4. '   ' → logprob: -6.835315704345703
    5. 'rest' → logprob: -6.835315704345703
    6. ' tmp' → logprob: -7.085315704345703
    7. ' rest' → logprob: -8.335315704345703
    8. '(edges' → logprob: -9.335315704345703
    9. '       ' → logprob: -11.210315704345703
    10. 'edge' → logprob: -11.710315704345703

Token 814: ' bit' (ID: 3546)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.773475706577301
    2. 'edges' → logprob: -1.7734756469726562
    3. '       ' → logprob: -2.1484756469726562
    4. ' edges' → logprob: -2.1484756469726562
    5. 'n' → logprob: -3.2734756469726562
    6. 'tmp' → logprob: -4.023475646972656
    7. '  ' → logprob: -4.398475646972656
    8. ' n' → logprob: -4.523475646972656
    9. ' tmp' → logprob: -4.773475646972656
    10. 'spaces' → logprob: -5.023475646972656

Token 815: ' est' (ID: 893)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -1.0485711097717285
    2. ' ==' → logprob: -1.0485711097717285
    3. ':' → logprob: -1.4235711097717285
    4. '!=' → logprob: -3.5485711097717285
    5. ' !=' → logprob: -3.7985711097717285
    6. '   ' → logprob: -5.9235711097717285
    7. '>' → logprob: -6.2985711097717285
    8. '=' → logprob: -7.1735711097717285
    9. ':
' → logprob: -7.5485711097717285
    10. ' :' → logprob: -7.9235711097717285

Token 816: ' présent' (ID: 24129)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000111768240458332
    2. ' ' → logprob: -9.12511157989502
    3. '```' → logprob: -14.00011157989502
    4. ' set' → logprob: -14.12511157989502
    5. 'set' → logprob: -14.25011157989502
    6. 'True' → logprob: -15.50011157989502
    7. '=' → logprob: -16.250112533569336
    8. 'v' → logprob: -16.625112533569336
    9. ' True' → logprob: -16.750112533569336
    10. '   ' → logprob: -16.875112533569336

Token 817: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02502673678100109
    2. '   ' → logprob: -4.150026798248291
    3. ':
' → logprob: -4.900026798248291
    4. ',' → logprob: -6.650026798248291
    5. ' :' → logprob: -9.775026321411133
    6. '       ' → logprob: -9.900026321411133
    7. '  ' → logprob: -10.900026321411133
    8. '):' → logprob: -11.275026321411133
    9. 'edges' → logprob: -11.400026321411133
    10. '==' → logprob: -11.525026321411133

Token 818: 'égal' (ID: 67940)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.09640498459339142
    2. ' True' → logprob: -3.096405029296875
    3. 'tmp' → logprob: -3.721405029296875
    4. 'rest' → logprob: -4.596405029296875
    5. 'edges' → logprob: -5.346405029296875
    6. ')' → logprob: -6.096405029296875
    7. ' tmp' → logprob: -6.846405029296875
    8. ' rest' → logprob: -6.971405029296875
    9. ' edges' → logprob: -7.221405029296875
    10. 'i' → logprob: -7.221405029296875

Token 819: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.6542598605155945
    2. '=' → logprob: -1.2792599201202393
    3. ' à' → logprob: -1.7792599201202393
    4. '==' → logprob: -3.6542599201202393
    5. '1' → logprob: -5.90425968170166
    6. '#' → logprob: -7.15425968170166
    7. '```' → logprob: -7.27925968170166
    8. '=True' → logprob: -7.52925968170166
    9. '   ' → logprob: -7.65425968170166
    10. ' =' → logprob: -7.77925968170166

Token 820: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.641841820150148e-05
    2. ' ' → logprob: -11.00002670288086
    3. 'True' → logprob: -11.62502670288086
    4. 'v' → logprob: -15.37502670288086
    5. ' True' → logprob: -15.50002670288086
    6. '```' → logprob: -16.00002670288086
    7. 'true' → logprob: -16.12502670288086
    8. '   ' → logprob: -17.75002670288086
    9. '0' → logprob: -18.00002670288086
    10. '１' → logprob: -19.62502670288086

Token 821: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.054500666621607e-06
    2. ' ' → logprob: -12.75000286102295
    3. 'True' → logprob: -15.75000286102295
    4. 'true' → logprob: -19.250003814697266
    5. ' True' → logprob: -19.625003814697266
    6. '   ' → logprob: -20.125003814697266
    7. '```' → logprob: -20.250003814697266
    8. '0' → logprob: -20.750003814697266
    9. ')' → logprob: -21.000003814697266
    10. '  ' → logprob: -21.000003814697266

Token 822: '),' (ID: 936)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6569701433181763
    2. '):
' → logprob: -1.1569701433181763
    3. ':' → logprob: -2.1569700241088867
    4. '   ' → logprob: -3.7819700241088867
    5. ':
' → logprob: -4.906970024108887
    6. '),' → logprob: -5.031970024108887
    7. ',' → logprob: -5.031970024108887
    8. '       ' → logprob: -5.156970024108887
    9. '           ' → logprob: -6.906970024108887
    10. ')' → logprob: -7.531970024108887

Token 823: ' on' (ID: 402)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.19180621206760406
    2. '   ' → logprob: -1.8168061971664429
    3. ' edges' → logprob: -4.441806316375732
    4. '       ' → logprob: -9.691805839538574
    5. 'for' → logprob: -9.816805839538574
    6. 'tmp' → logprob: -10.566805839538574
    7. '  ' → logprob: -11.066805839538574
    8. ' ' → logprob: -11.691805839538574
    9. '```' → logprob: -12.066805839538574
    10. '#' → logprob: -12.191805839538574

Token 824: ' ajoute' (ID: 91611)
  Prédit: ' edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.31605198979377747
    2. 'edges' → logprob: -1.316051959991455
    3. '   ' → logprob: -6.066051959991455
    4. '#' → logprob: -9.191052436828613
    5. '.edges' → logprob: -9.316052436828613
    6. '_edges' → logprob: -9.941052436828613
    7. '(edges' → logprob: -10.191052436828613
    8. 'aj' → logprob: -10.566052436828613
    9. ' add' → logprob: -10.691052436828613
    10. '.append' → logprob: -10.941052436828613

Token 825: ' une' (ID: 2463)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.2256654053926468
    2. '(edges' → logprob: -2.100665330886841
    3. '(' → logprob: -2.725665330886841
    4. 'edges' → logprob: -4.60066556930542
    5. ' (' → logprob: -5.85066556930542
    6. ' edges' → logprob: -7.47566556930542
    7. '((' → logprob: -7.97566556930542
    8. 'edge' → logprob: -9.725665092468262
    9. '   ' → logprob: -9.725665092468262
    10. '(n' → logprob: -9.975665092468262

Token 826: ' ar' (ID: 646)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.15337739884853363
    2. 'edge' → logprob: -2.0283772945404053
    3. 'ar' → logprob: -4.903377532958984
    4. ' edges' → logprob: -6.028377532958984
    5. ' edge' → logprob: -8.028377532958984
    6. '(edges' → logprob: -8.278377532958984
    7. 'are' → logprob: -9.528377532958984
    8. 'new' → logprob: -9.903377532958984
    9. '_edges' → logprob: -11.403377532958984
    10. ' ar' → logprob: -11.403377532958984

Token 827: 'ête' (ID: 16808)
  Prédit: 'ête'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ête' → logprob: -0.7123732566833496
    2. 'edges' → logprob: -1.8373732566833496
    3. 'êtes' → logprob: -1.8373732566833496
    4. 'edge' → logprob: -2.7123732566833496
    5. '   ' → logprob: -2.9623732566833496
    6. '(' → logprob: -3.2123732566833496
    7. '(edges' → logprob: -3.8373732566833496
    8. '_edges' → logprob: -5.96237325668335
    9. '(edge' → logprob: -6.58737325668335
    10. 'ète' → logprob: -6.96237325668335

Token 828: ' du' (ID: 1462)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.6639347672462463
    2. '(' → logprob: -0.7889347672462463
    3. '((' → logprob: -3.6639347076416016
    4. ' (' → logprob: -6.413934707641602
    5. '(edges' → logprob: -6.413934707641602
    6. 'edges' → logprob: -6.538934707641602
    7. '   ' → logprob: -8.913934707641602
    8. ' edges' → logprob: -9.288934707641602
    9. '
' → logprob: -9.538934707641602
    10. '(n' → logprob: -9.663934707641602

Token 829: ' sommet' (ID: 130502)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1012340784072876
    2. 'i' → logprob: -3.101233959197998
    3. '(' → logprob: -4.226233959197998
    4. '(N' → logprob: -4.226233959197998
    5. '1' → logprob: -4.851233959197998
    6. 'N' → logprob: -4.976233959197998
    7. '(i' → logprob: -4.976233959197998
    8. 'tmp' → logprob: -8.726234436035156
    9. ' (' → logprob: -9.726234436035156
    10. ' i' → logprob: -9.976234436035156

Token 830: ' i' (ID: 575)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.03118041343986988
    2. '(' → logprob: -3.5311803817749023
    3. '(i' → logprob: -6.906180381774902
    4. '((' → logprob: -8.781180381774902
    5. ' (' → logprob: -9.281180381774902
    6. '(
' → logprob: -9.656180381774902
    7. '(n' → logprob: -10.156180381774902
    8. '1' → logprob: -10.531180381774902
    9. '0' → logprob: -10.781180381774902
    10. '(tmp' → logprob: -11.406180381774902

Token 831: '+' (ID: 10)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.872776448726654
    2. ' -' → logprob: -0.997776448726654
    3. '-' → logprob: -1.6227765083312988
    4. ' ,' → logprob: -4.497776508331299
    5. '       ' → logprob: -5.997776508331299
    6. '   ' → logprob: -6.747776508331299
    7. '           ' → logprob: -8.37277603149414
    8. '```' → logprob: -8.49777603149414
    9. ' ' → logprob: -8.74777603149414
    10. ' (' → logprob: -8.87277603149414

Token 832: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00015955790877342224
    2. ' ' → logprob: -8.75015926361084
    3. '0' → logprob: -14.00015926361084
    4. '   ' → logprob: -16.125160217285156
    5. '2' → logprob: -16.750160217285156
    6. '```' → logprob: -16.875160217285156
    7. '[' → logprob: -17.125160217285156
    8. '(' → logprob: -17.875160217285156
    9. '+' → logprob: -18.000160217285156
    10. '１' → logprob: -18.250160217285156

Token 833: ' vers' (ID: 3640)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.015683086588978767
    2. ' ,' → logprob: -4.265683174133301
    3. '(N' → logprob: -8.1406831741333
    4. '-' → logprob: -8.2656831741333
    5. ' -' → logprob: -8.5156831741333
    6. '```' → logprob: -8.5156831741333
    7. '   ' → logprob: -8.6406831741333
    8. ' (' → logprob: -8.8906831741333
    9. '           ' → logprob: -9.5156831741333
    10. '       ' → logprob: -9.5156831741333

Token 834: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.02442418411374092
    2. '(N' → logprob: -4.274424076080322
    3. ' N' → logprob: -5.524424076080322
    4. 'tmp' → logprob: -5.649424076080322
    5. 'rest' → logprob: -7.024424076080322
    6. 'i' → logprob: -7.524424076080322
    7. ' (' → logprob: -8.02442455291748
    8. '(' → logprob: -8.14942455291748
    9. '(tmp' → logprob: -8.14942455291748
    10. '(i' → logprob: -8.77442455291748

Token 835: ' avec' (ID: 3937)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.013968157581984997
    2. ' ,' → logprob: -4.638967990875244
    3. '   ' → logprob: -6.388967990875244
    4. '       ' → logprob: -6.763967990875244
    5. '-' → logprob: -7.638967990875244
    6. ' -' → logprob: -8.263968467712402
    7. '+' → logprob: -8.638968467712402
    8. '```' → logprob: -9.263968467712402
    9. ' +' → logprob: -9.763968467712402
    10. '           ' → logprob: -9.763968467712402

Token 836: ' un' (ID: 537)
  Prédit: '(tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(tmp' → logprob: -0.17958475649356842
    2. 'tmp' → logprob: -3.1795847415924072
    3. '(N' → logprob: -3.3045847415924072
    4. '(' → logprob: -3.6795847415924072
    5. 'weight' → logprob: -3.8045847415924072
    6. 'po' → logprob: -4.304584980010986
    7. 'rest' → logprob: -5.179584980010986
    8. '1' → logprob: -5.679584980010986
    9. 'un' → logprob: -5.804584980010986
    10. 'le' → logprob: -6.179584980010986

Token 837: ' poids' (ID: 56058)
  Prédit: '(tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tmp' → logprob: -0.7889291048049927
    2. 'tmp' → logprob: -1.2889291048049927
    3. '(' → logprob: -2.663928985595703
    4. '0' → logprob: -2.788928985595703
    5. 'po' → logprob: -3.163928985595703
    6. 'weight' → logprob: -3.288928985595703
    7. ' poids' → logprob: -3.538928985595703
    8. '1' → logprob: -5.413928985595703
    9. 'rest' → logprob: -5.538928985595703
    10. '(N' → logprob: -5.538928985595703

Token 838: ' égal' (ID: 15059)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.17361123859882355
    2. '(tmp' → logprob: -2.0486111640930176
    3. '=' → logprob: -3.7986111640930176
    4. ' tmp' → logprob: -5.048611164093018
    5. '[tmp' → logprob: -7.048611164093018
    6. ' =' → logprob: -8.798611640930176
    7. ' (' → logprob: -8.798611640930176
    8. '```' → logprob: -9.298611640930176
    9. '/tmp' → logprob: -9.423611640930176
    10. '$tmp' → logprob: -9.673611640930176

Token 839: ' à' (ID: 1221)
  Prédit: '(tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tmp' → logprob: -0.2633601129055023
    2. 'tmp' → logprob: -1.6383601427078247
    3. 'à' → logprob: -4.263360023498535
    4. '[tmp' → logprob: -4.638360023498535
    5. '=' → logprob: -5.388360023498535
    6. ' tmp' → logprob: -5.638360023498535
    7. ' à' → logprob: -6.138360023498535
    8. '       ' → logprob: -6.763360023498535
    9. '/tmp' → logprob: -7.888360023498535
    10. '(' → logprob: -8.013360023498535

Token 840: ' la' (ID: 557)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -2.558399319241289e-05
    2. ' tmp' → logprob: -10.750025749206543
    3. '(tmp' → logprob: -13.375025749206543
    4. '$tmp' → logprob: -13.875025749206543
    5. '[tmp' → logprob: -14.625025749206543
    6. '/tmp' → logprob: -14.625025749206543
    7. '	tmp' → logprob: -14.875025749206543
    8. '
' → logprob: -16.250024795532227
    9. 'temp' → logprob: -16.750024795532227
    10. ',tmp' → logprob: -16.875024795532227

Token 841: ' valeur' (ID: 41664)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -3.5597102396423e-05
    2. ' tmp' → logprob: -10.750035285949707
    3. '(tmp' → logprob: -11.875035285949707
    4. '```' → logprob: -13.250035285949707
    5. 'rest' → logprob: -13.625035285949707
    6. '[tmp' → logprob: -13.750035285949707
    7. '
' → logprob: -14.375035285949707
    8. '/tmp' → logprob: -14.625035285949707
    9. 'L' → logprob: -14.875035285949707
    10. '$tmp' → logprob: -15.000035285949707

Token 842: ' de' (ID: 334)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.0765518844127655
    2. '(tmp' → logprob: -2.951551914215088
    3. ' tmp' → logprob: -4.701551914215088
    4. '[tmp' → logprob: -4.951551914215088
    5. '```' → logprob: -5.576551914215088
    6. '`' → logprob: -7.826551914215088
    7. '   ' → logprob: -8.07655143737793
    8. '       ' → logprob: -8.82655143737793
    9. '$tmp' → logprob: -9.20155143737793
    10. '/tmp' → logprob: -9.45155143737793

Token 843: ' '' (ID: 461)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -2.816093228830141e-06
    2. '(tmp' → logprob: -13.00000286102295
    3. ' tmp' → logprob: -15.50000286102295
    4. '```' → logprob: -16.375001907348633
    5. '[tmp' → logprob: -16.750001907348633
    6. '
' → logprob: -17.375001907348633
    7. '	tmp' → logprob: -17.375001907348633
    8. '$tmp' → logprob: -17.625001907348633
    9. 'temp' → logprob: -18.250001907348633
    10. '/tmp' → logprob: -18.500001907348633

Token 844: 'tmp' (ID: 11669)
  Prédit: 'tmp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -6.704273118884885e-07
    2. ' tmp' → logprob: -15.500000953674316
    3. '(tmp' → logprob: -16.625
    4. '[tmp' → logprob: -16.75
    5. '```' → logprob: -16.875
    6. '$tmp' → logprob: -17.0
    7. '	tmp' → logprob: -17.25
    8. '/tmp' → logprob: -18.375
    9. 'temp' → logprob: -18.875
    10. '`' → logprob: -18.875

Token 845: ''.
' (ID: 49980)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.48198243975639343
    2. ',' → logprob: -1.8569824695587158
    3. '):' → logprob: -2.856982469558716
    4. '):
' → logprob: -3.606982469558716
    5. ' edges' → logprob: -3.731982469558716
    6. 'edges' → logprob: -3.731982469558716
    7. ':' → logprob: -3.856982469558716
    8. ' )' → logprob: -4.356982231140137
    9. '),' → logprob: -4.356982231140137
    10. ' ,' → logprob: -4.606982231140137

Token 846: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6327108144760132
    2. 'edges' → logprob: -1.2577108144760132
    3. '       ' → logprob: -2.1327109336853027
    4. ' edges' → logprob: -3.1327109336853027
    5. '(edges' → logprob: -3.8827109336853027
    6. '.edges' → logprob: -7.132710933685303
    7. '```' → logprob: -7.507710933685303
    8. ',' → logprob: -9.507710456848145
    9. '	' → logprob: -9.507710456848145
    10. '           ' → logprob: -9.632710456848145

Token 847: ' #' (ID: 1069)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.06226814165711403
    2. ' edges' → logprob: -2.9372682571411133
    3. '       ' → logprob: -5.562268257141113
    4. '   ' → logprob: -5.687268257141113
    5. '(edges' → logprob: -9.312268257141113
    6. '.edges' → logprob: -10.562268257141113
    7. '```' → logprob: -12.562268257141113
    8. '           ' → logprob: -12.812268257141113
    9. '	' → logprob: -13.687268257141113
    10. ' ' → logprob: -13.937268257141113

Token 848: ' Cela' (ID: 44403)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.0008389271679334342
    2. '       ' → logprob: -7.375838756561279
    3. ' edges' → logprob: -8.625839233398438
    4. '   ' → logprob: -10.375839233398438
    5. '.edges' → logprob: -14.375839233398438
    6. '           ' → logprob: -14.875839233398438
    7. '(edges' → logprob: -15.250839233398438
    8. '```' → logprob: -15.875839233398438
    9. 'edge' → logprob: -16.125839233398438
    10. '	' → logprob: -16.500839233398438

Token 849: ' correspond' (ID: 11095)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.07047728449106216
    2. ' edges' → logprob: -3.445477247238159
    3. '.edges' → logprob: -4.195477485656738
    4. '   ' → logprob: -4.445477485656738
    5. '.' → logprob: -5.320477485656738
    6. '       ' → logprob: -6.445477485656738
    7. '_edges' → logprob: -6.695477485656738
    8. '.append' → logprob: -6.945477485656738
    9. '(edges' → logprob: -9.445477485656738
    10. '           ' → logprob: -9.820477485656738

Token 850: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.4726366698741913
    2. ' à' → logprob: -1.5976366996765137
    3. '       ' → logprob: -2.5976366996765137
    4. 'to' → logprob: -3.3476366996765137
    5. '(' → logprob: -3.4726366996765137
    6. ')' → logprob: -4.472636699676514
    7. '=' → logprob: -5.472636699676514
    8. ' to' → logprob: -5.597636699676514
    9. ' (' → logprob: -6.222636699676514
    10. '           ' → logprob: -6.222636699676514

Token 851: ' explo' (ID: 35916)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.002814982086420059
    2. ' edges' → logprob: -5.877814769744873
    3. '   ' → logprob: -12.752815246582031
    4. '(edges' → logprob: -12.752815246582031
    5. '.edges' → logprob: -13.627815246582031
    6. '       ' → logprob: -13.627815246582031
    7. 'edge' → logprob: -14.252815246582031
    8. '```' → logprob: -14.877815246582031
    9. '_edges' → logprob: -15.877815246582031
    10. 'weights' → logprob: -16.50281524658203

Token 852: 'iter' (ID: 2340)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.9661419987678528
    2. 'iter' → logprob: -0.9661419987678528
    3. 'itant' → logprob: -1.716141939163208
    4. 'ite' → logprob: -4.091142177581787
    5. '(' → logprob: -4.841142177581787
    6. 'i' → logprob: -5.216142177581787
    7. 'itent' → logprob: -5.591142177581787
    8. '(i' → logprob: -6.091142177581787
    9. 'ité' → logprob: -6.216142177581787
    10. 'oit' → logprob: -6.341142177581787

Token 853: ' la' (ID: 557)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.4553152918815613
    2. '(i' → logprob: -1.330315351486206
    3. ' (' → logprob: -2.830315351486206
    4. '(' → logprob: -4.080315113067627
    5. '(tmp' → logprob: -4.580315113067627
    6. '(edges' → logprob: -4.580315113067627
    7. ' edges' → logprob: -6.705315113067627
    8. 'edges' → logprob: -6.830315113067627
    9. '(rest' → logprob: -6.955315113067627
    10. '((' → logprob: -7.455315113067627

Token 854: ' route' (ID: 9656)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.17227354645729065
    2. ' edges' → logprob: -1.9222735166549683
    3. '(edges' → logprob: -4.922273635864258
    4. 'rest' → logprob: -6.547273635864258
    5. '(N' → logprob: -6.922273635864258
    6. ' (' → logprob: -7.547273635864258
    7. '(' → logprob: -7.922273635864258
    8. '(i' → logprob: -8.047273635864258
    9. 'tmp' → logprob: -8.422273635864258
    10. 'edge' → logprob: -9.172273635864258

Token 855: ' du' (ID: 1462)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.4474322199821472
    2. ' (' → logprob: -1.697432279586792
    3. '(' → logprob: -2.322432279586792
    4. '(i' → logprob: -2.822432279586792
    5. '((' → logprob: -4.572432041168213
    6. '   ' → logprob: -6.197432041168213
    7. ' des' → logprob: -6.322432041168213
    8. 'des' → logprob: -6.697432041168213
    9. '(n' → logprob: -7.197432041168213
    10. '(edges' → logprob: -7.197432041168213

Token 856: ' sommet' (ID: 130502)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.07059638202190399
    2. 'N' → logprob: -4.070596218109131
    3. 'rest' → logprob: -4.195596218109131
    4. '(' → logprob: -4.820596218109131
    5. 'tmp' → logprob: -4.820596218109131
    6. '(i' → logprob: -5.070596218109131
    7. '(N' → logprob: -5.820596218109131
    8. 'edges' → logprob: -6.070596218109131
    9. ' i' → logprob: -6.195596218109131
    10. ' sommet' → logprob: -6.570596218109131

Token 857: ' correspondant' (ID: 146058)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4217284619808197
    2. '(i' → logprob: -1.171728491783142
    3. ' (' → logprob: -4.421728610992432
    4. ' i' → logprob: -4.546728610992432
    5. '(' → logprob: -5.171728610992432
    6. '(N' → logprob: -5.296728610992432
    7. '[i' → logprob: -8.171728134155273
    8. '(
' → logprob: -9.421728134155273
    9. '1' → logprob: -9.796728134155273
    10. ',' → logprob: -9.921728134155273

Token 858: ' à' (ID: 1221)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.48407116532325745
    2. '(' → logprob: -2.1090712547302246
    3. '(i' → logprob: -2.2340712547302246
    4. ',' → logprob: -2.6090712547302246
    5. '(N' → logprob: -3.4840712547302246
    6. ' à' → logprob: -3.8590712547302246
    7. '   ' → logprob: -4.109071254730225
    8. ' ,' → logprob: -5.734071254730225
    9. '       ' → logprob: -5.984071254730225
    10. ')' → logprob: -6.234071254730225

Token 859: ' la' (ID: 557)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.012868884950876236
    2. 'l' → logprob: -5.512868881225586
    3. ' i' → logprob: -5.512868881225586
    4. 'tmp' → logprob: -6.637868881225586
    5. 'N' → logprob: -6.887868881225586
    6. 'rest' → logprob: -7.262868881225586
    7. '(i' → logprob: -7.262868881225586
    8. '```' → logprob: -9.012868881225586
    9. '(N' → logprob: -9.137868881225586
    10. '(' → logprob: -9.137868881225586

Token 860: ' puissance' (ID: 63494)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.035105157643556595
    2. 'tmp' → logprob: -3.6601052284240723
    3. ' i' → logprob: -5.410105228424072
    4. 'previous' → logprob: -7.535105228424072
    5. '(' → logprob: -7.785105228424072
    6. 'N' → logprob: -8.035104751586914
    7. 'p' → logprob: -8.160104751586914
    8. 'rest' → logprob: -8.285104751586914
    9. 'po' → logprob: -8.410104751586914
    10. '```' → logprob: -8.535104751586914

Token 861: ' de' (ID: 334)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6664839386940002
    2. '   ' → logprob: -1.5414838790893555
    3. ' +' → logprob: -2.4164838790893555
    4. ',' → logprob: -2.4164838790893555
    5. ' ,' → logprob: -3.0414838790893555
    6. 'i' → logprob: -4.5414838790893555
    7. '(i' → logprob: -5.1664838790893555
    8. '       ' → logprob: -5.4164838790893555
    9. ' de' → logprob: -5.4164838790893555
    10. ' i' → logprob: -5.5414838790893555

Token 862: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.008065667934715748
    2. 'i' → logprob: -5.258065700531006
    3. ' ' → logprob: -6.383065700531006
    4. '```' → logprob: -7.383065700531006
    5. ' i' → logprob: -8.383065223693848
    6. '`' → logprob: -8.883065223693848
    7. '(i' → logprob: -10.258065223693848
    8. 'de' → logprob: -10.258065223693848
    9. '1' → logprob: -10.383065223693848
    10. '(' → logprob: -11.758065223693848

Token 863: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.14703363180160522
    2. 'i' → logprob: -2.02203369140625
    3. '1' → logprob: -5.77203369140625
    4. ' i' → logprob: -7.64703369140625
    5. '```' → logprob: -8.14703369140625
    6. ' ' → logprob: -8.27203369140625
    7. '(i' → logprob: -9.14703369140625
    8. '`' → logprob: -10.14703369140625
    9. '(' → logprob: -11.02203369140625
    10. 'N' → logprob: -11.14703369140625

Token 864: '^' (ID: 61)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6764519214630127
    2. '+' → logprob: -1.3014519214630127
    3. ' +' → logprob: -2.0514519214630127
    4. ' ,' → logprob: -3.0514519214630127
    5. '(N' → logprob: -3.6764519214630127
    6. ' (' → logprob: -4.426451683044434
    7. '(' → logprob: -6.551451683044434
    8. '   ' → logprob: -7.176451683044434
    9. ')' → logprob: -7.176451683044434
    10. '```' → logprob: -7.176451683044434

Token 865: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8863274455070496
    2. '(N' → logprob: -1.6363275051116943
    3. ' (' → logprob: -1.8863275051116943
    4. ' i' → logprob: -2.0113275051116943
    5. '(i' → logprob: -2.8863275051116943
    6. '1' → logprob: -3.8863275051116943
    7. '(' → logprob: -4.636327266693115
    8. ' ' → logprob: -5.011327266693115
    9. 'N' → logprob: -5.136327266693115
    10. '2' → logprob: -5.761327266693115

Token 866: ' pour' (ID: 1930)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.055372919887304306
    2. '   ' → logprob: -4.055372714996338
    3. ' ,' → logprob: -4.305372714996338
    4. '+' → logprob: -4.805372714996338
    5. ',
' → logprob: -5.555372714996338
    6. ')' → logprob: -5.805372714996338
    7. ' +' → logprob: -6.055372714996338
    8. '       ' → logprob: -7.180372714996338
    9. '```' → logprob: -7.305372714996338
    10. ':' → logprob: -7.680372714996338

Token 867: ' faire' (ID: 8119)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.01819196529686451
    2. ' edges' → logprob: -4.018191814422607
    3. '(edges' → logprob: -10.518192291259766
    4. '_edges' → logprob: -12.643192291259766
    5. '.edges' → logprob: -12.643192291259766
    6. '```' → logprob: -13.143192291259766
    7. '   ' → logprob: -13.393192291259766
    8. ')' → logprob: -13.893192291259766
    9. '
' → logprob: -14.143192291259766
    10. 'add' → logprob: -14.393192291259766

Token 868: ' la' (ID: 557)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.3561878800392151
    2. 'edges' → logprob: -1.3561878204345703
    3. '(edges' → logprob: -3.7311878204345703
    4. 'tmp' → logprob: -5.35618782043457
    5. '(' → logprob: -5.98118782043457
    6. '(tmp' → logprob: -6.10618782043457
    7. '(i' → logprob: -6.35618782043457
    8. ' edges' → logprob: -6.48118782043457
    9. 'N' → logprob: -6.73118782043457
    10. 'i' → logprob: -7.60618782043457

Token 869: ' somme' (ID: 64484)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.010086231864988804
    2. ' edges' → logprob: -4.6350860595703125
    3. 'rest' → logprob: -8.760086059570312
    4. 'weights' → logprob: -10.635086059570312
    5. '   ' → logprob: -10.760086059570312
    6. '```' → logprob: -10.760086059570312
    7. 'che' → logprob: -11.010086059570312
    8. '(edges' → logprob: -11.135086059570312
    9. 'aj' → logprob: -11.260086059570312
    10. 'tmp' → logprob: -11.385086059570312

Token 870: ' vers' (ID: 3640)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.9769397974014282
    2. 'edges' → logprob: -1.3519397974014282
    3. ' (' → logprob: -1.9769397974014282
    4. '   ' → logprob: -2.3519396781921387
    5. '(edges' → logprob: -2.9769396781921387
    6. '(' → logprob: -3.2269396781921387
    7. '       ' → logprob: -3.9769396781921387
    8. ' edges' → logprob: -4.476939678192139
    9. ',' → logprob: -5.601939678192139
    10. '.append' → logprob: -6.101939678192139

Token 871: ' L' (ID: 451)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0015100972959771752
    2. 'L' → logprob: -7.251510143280029
    3. ' N' → logprob: -7.376510143280029
    4. 'i' → logprob: -10.001509666442871
    5. 'edges' → logprob: -10.126509666442871
    6. 'l' → logprob: -10.876509666442871
    7. ' edges' → logprob: -11.501509666442871
    8. 'rest' → logprob: -11.501509666442871
    9. '(N' → logprob: -11.626509666442871
    10. '```' → logprob: -12.001509666442871

Token 872: '.
' (ID: 558)
  Prédit: '(edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(edges' → logprob: -1.1383209228515625
    2. ' edges' → logprob: -1.6383209228515625
    3. 'edges' → logprob: -1.7633209228515625
    4. ':' → logprob: -3.2633209228515625
    5. '.append' → logprob: -3.2633209228515625
    6. '   ' → logprob: -3.2633209228515625
    7. '       ' → logprob: -3.3883209228515625
    8. ',' → logprob: -3.5133209228515625
    9. ':
' → logprob: -3.8883209228515625
    10. ' (' → logprob: -3.8883209228515625

Token 873: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08921676874160767
    2. 'edges' → logprob: -3.214216709136963
    3. ' edges' → logprob: -3.714216709136963
    4. '   ' → logprob: -3.964216709136963
    5. '(edges' → logprob: -6.589216709136963
    6. '.edges' → logprob: -8.964217185974121
    7. '	' → logprob: -9.464217185974121
    8. '```' → logprob: -9.964217185974121
    9. '           ' → logprob: -10.714217185974121
    10. '	   ' → logprob: -10.714217185974121

Token 874: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' (adapté à ' edges') → logprob: -0.0016050786944106221
    2. '   ' → logprob: -7.376605033874512
    3. ' edges' → logprob: -7.626605033874512
    4. '       ' → logprob: -7.626605033874512
    5. '(edges' → logprob: -13.501605033874512
    6. '.edges' → logprob: -13.751605033874512
    7. '           ' → logprob: -14.626605033874512
    8. '```' → logprob: -15.501605033874512
    9. '	' → logprob: -16.376605987548828
    10. '  ' → logprob: -16.626605987548828

Token 875: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -9.849109119386412e-06
    2. '.' → logprob: -11.625009536743164
    3. '.app' → logprob: -14.875009536743164
    4. 'append' → logprob: -15.625009536743164
    5. ' .' → logprob: -15.750009536743164
    6. '   ' → logprob: -16.375009536743164
    7. '.add' → logprob: -17.000009536743164
    8. ').' → logprob: -17.250009536743164
    9. '.extend' → logprob: -17.375009536743164
    10. '       ' → logprob: -17.750009536743164

Token 876: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0002319071936653927
    2. '(' → logprob: -8.375231742858887
    3. '(((' → logprob: -14.000231742858887
    4. '(
' → logprob: -15.000231742858887
    5. ' ((' → logprob: -16.375232696533203
    6. '(i' → logprob: -16.750232696533203
    7. '```' → logprob: -17.625232696533203
    8. '(('' → logprob: -18.000232696533203
    9. '(N' → logprob: -18.125232696533203
    10. '   ' → logprob: -18.250232696533203

Token 877: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -8.77627644513268e-06
    2. ' i' → logprob: -12.000008583068848
    3. '   ' → logprob: -13.500008583068848
    4. '(i' → logprob: -13.750008583068848
    5. '{i' → logprob: -17.250009536743164
    6. '	i' → logprob: -17.625009536743164
    7. '_i' → logprob: -17.625009536743164
    8. '       ' → logprob: -18.125009536743164
    9. '(' → logprob: -18.750009536743164
    10. '    ' → logprob: -18.875009536743164

Token 878: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5760963559150696
    2. '+' → logprob: -0.8260963559150696
    3. ',' → logprob: -9.076096534729004
    4. '   ' → logprob: -10.576096534729004
    5. ' ,' → logprob: -12.076096534729004
    6. '1' → logprob: -12.826096534729004
    7. '+,' → logprob: -12.951096534729004
    8. '[' → logprob: -13.576096534729004
    9. ' ' → logprob: -13.826096534729004
    10. '       ' → logprob: -14.076096534729004

Token 879: ' ' (ID: 220)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.031449947506189346
    2. '1' → logprob: -3.531450033187866
    3. ' N' → logprob: -7.031449794769287
    4. ',' → logprob: -7.156449794769287
    5. ' ' → logprob: -10.656450271606445
    6. ',N' → logprob: -11.906450271606445
    7. ' ,' → logprob: -13.156450271606445
    8. '   ' → logprob: -13.406450271606445
    9. '```' → logprob: -14.781450271606445
    10. '(N' → logprob: -16.406450271606445

Token 880: '1' (ID: 16)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0022845494095236063
    2. '1' → logprob: -6.127284526824951
    3. ' N' → logprob: -9.37728500366211
    4. ',' → logprob: -11.37728500366211
    5. ' ' → logprob: -13.37728500366211
    6. ',N' → logprob: -14.12728500366211
    7. '   ' → logprob: -15.00228500366211
    8. '(N' → logprob: -15.87728500366211
    9. '0' → logprob: -16.25228500366211
    10. '```' → logprob: -16.37728500366211

Token 881: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.41866585687967e-06
    2. ' ,' → logprob: -11.875008583068848
    3. ',N' → logprob: -13.625008583068848
    4. ',
' → logprob: -16.25000762939453
    5. ',n' → logprob: -18.37500762939453
    6. '       ' → logprob: -18.87500762939453
    7. '   ' → logprob: -19.12500762939453
    8. '```' → logprob: -19.12500762939453
    9. '‌,' → logprob: -19.62500762939453
    10. 'N' → logprob: -20.25000762939453

Token 882: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -9.13388703338569e-06
    2. ' N' → logprob: -11.625009536743164
    3. '   ' → logprob: -16.625009536743164
    4. '	N' → logprob: -20.250009536743164
    5. '       ' → logprob: -20.750009536743164
    6. '(N' → logprob: -20.750009536743164
    7. ',N' → logprob: -21.250009536743164
    8. '```' → logprob: -21.625009536743164
    9. '    ' → logprob: -21.875009536743164
    10. '  ' → logprob: -22.000009536743164

Token 883: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.6656825866666622e-05
    2. ' ,' → logprob: -10.62502670288086
    3. '       ' → logprob: -14.25002670288086
    4. '```' → logprob: -14.62502670288086
    5. ',
' → logprob: -15.00002670288086
    6. '‌,' → logprob: -15.62502670288086
    7. '   ' → logprob: -15.75002670288086
    8. '`,' → logprob: -15.87502670288086
    9. '<|end|>' → logprob: -16.00002670288086
    10. '),' → logprob: -16.87502670288086

Token 884: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -1.4855663721391466e-05
    2. ' tmp' → logprob: -11.125015258789062
    3. 'temp' → logprob: -16.875015258789062
    4. 'rest' → logprob: -18.375015258789062
    5. '	tmp' → logprob: -19.000015258789062
    6. 'txt' → logprob: -19.625015258789062
    7. '(tmp' → logprob: -19.750015258789062
    8. '   ' → logprob: -19.875015258789062
    9. '/tmp' → logprob: -19.875015258789062
    10. '[tmp' → logprob: -19.875015258789062

Token 885: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.06455840915441513
    2. ')' → logprob: -2.814558506011963
    3. '))
' → logprob: -6.189558506011963
    4. '+' → logprob: -7.814558506011963
    5. ')
' → logprob: -10.064558029174805
    6. ' ))' → logprob: -10.064558029174805
    7. ' )' → logprob: -11.314558029174805
    8. '))
' → logprob: -11.564558029174805
    9. ')))' → logprob: -12.064558029174805
    10. ' +' → logprob: -12.064558029174805

Token 886: '       ' (ID: 309)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.35276028513908386
    2. '       ' → logprob: -1.2277603149414062
    3. '	tmp' → logprob: -6.477760314941406
    4. '	' → logprob: -6.602760314941406
    5. '   ' → logprob: -7.727760314941406
    6. '[tmp' → logprob: -8.102760314941406
    7. ' tmp' → logprob: -8.602760314941406
    8. '	   ' → logprob: -8.852760314941406
    9. '```' → logprob: -9.852760314941406
    10. '$tmp' → logprob: -10.227760314941406

Token 887: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2520361840724945
    2. 'tmp' → logprob: -1.502036213874817
    3. ' tmp' → logprob: -10.127036094665527
    4. '   ' → logprob: -10.877036094665527
    5. '	tmp' → logprob: -11.127036094665527
    6. '$tmp' → logprob: -11.502036094665527
    7. 'temp' → logprob: -12.502036094665527
    8. ',tmp' → logprob: -12.752036094665527
    9. '/tmp' → logprob: -12.877036094665527
    10. '[tmp' → logprob: -12.877036094665527

Token 888: ' Aj' (ID: 28294)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.0015058133285492659
    2. '       ' → logprob: -6.7515058517456055
    3. 'rest' → logprob: -8.001505851745605
    4. '#' → logprob: -15.126505851745605
    5. '   ' → logprob: -15.376505851745605
    6. ' tmp' → logprob: -16.62650489807129
    7. '	tmp' → logprob: -16.87650489807129
    8. '/tmp' → logprob: -17.75150489807129
    9. 'temp' → logprob: -18.37650489807129
    10. 'Rest' → logprob: -18.75150489807129

Token 889: 'oute' (ID: 3509)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.769260585308075
    2. 'oute' → logprob: -1.0192606449127197
    3. 'outer' → logprob: -2.0192606449127197
    4. 'outez' → logprob: -3.3942606449127197
    5. 'out' → logprob: -5.769260406494141
    6. '+=' → logprob: -6.144260406494141
    7. 'outes' → logprob: -6.519260406494141
    8. ' tmp' → logprob: -7.644260406494141
    9. '#' → logprob: -7.894260406494141
    10. '=' → logprob: -8.01926040649414

Token 890: ' la' (ID: 557)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.20388419926166534
    2. '*=' → logprob: -2.5788841247558594
    3. 'tmp' → logprob: -2.5788841247558594
    4. ' +=' → logprob: -3.5788841247558594
    5. ' tmp' → logprob: -6.203884124755859
    6. ' *=' → logprob: -6.578884124755859
    7. '=' → logprob: -7.828884124755859
    8. '   ' → logprob: -8.32888412475586
    9. ' <<=' → logprob: -8.70388412475586
    10. '*' → logprob: -8.82888412475586

Token 891: ' puissance' (ID: 63494)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.001721115317195654
    2. '(tmp' → logprob: -6.626720905303955
    3. ' tmp' → logprob: -8.751721382141113
    4. 'edges' → logprob: -9.126721382141113
    5. '+=' → logprob: -10.126721382141113
    6. '(' → logprob: -10.501721382141113
    7. '[tmp' → logprob: -10.626721382141113
    8. ' +=' → logprob: -12.626721382141113
    9. '/tmp' → logprob: -12.751721382141113
    10. '+' → logprob: -12.751721382141113

Token 892: ' de' (ID: 334)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.706023097038269
    2. 'tmp' → logprob: -1.706023097038269
    3. '(' → logprob: -1.831023097038269
    4. '(tmp' → logprob: -2.9560232162475586
    5. 'of' → logprob: -3.2060232162475586
    6. '*' → logprob: -4.081023216247559
    7. ' de' → logprob: -4.706023216247559
    8. ' (' → logprob: -4.706023216247559
    9. ' tmp' → logprob: -5.081023216247559
    10. 'de' → logprob: -5.081023216247559

Token 893: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.1428775042295456
    2. 'tmp' → logprob: -2.0178775787353516
    3. ' ' → logprob: -9.142877578735352
    4. ' tmp' → logprob: -10.517877578735352
    5. '(tmp' → logprob: -11.017877578735352
    6. '```' → logprob: -11.767877578735352
    7. '[tmp' → logprob: -11.892877578735352
    8. '   ' → logprob: -11.892877578735352
    9. '/tmp' → logprob: -12.142877578735352
    10. '$tmp' → logprob: -12.517877578735352

Token 894: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.9292415749514475e-05
    2. ' ' → logprob: -10.750039100646973
    3. '```' → logprob: -12.125039100646973
    4. 'de' → logprob: -12.500039100646973
    5. 'two' → logprob: -12.750039100646973
    6. 'tmp' → logprob: -13.000039100646973
    7. '`' → logprob: -14.500039100646973
    8. '(' → logprob: -14.500039100646973
    9. '1' → logprob: -14.875039100646973
    10. ' deux' → logprob: -15.000039100646973

Token 895: '^' (ID: 61)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.8845192790031433
    2. '*=' → logprob: -0.8845192790031433
    3. ')' → logprob: -3.259519338607788
    4. '=' → logprob: -3.259519338607788
    5. ' +=' → logprob: -3.759519338607788
    6. '<|end|>' → logprob: -4.009519100189209
    7. 'tmp' → logprob: -4.134519100189209
    8. ' <<=' → logprob: -4.384519100189209
    9. '(tmp' → logprob: -4.884519100189209
    10. ' *=' → logprob: -5.259519100189209

Token 896: 'i' (ID: 72)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.599432647228241
    2. 'i' → logprob: -0.974432647228241
    3. '(N' → logprob: -3.5994327068328857
    4. '(tmp' → logprob: -3.7244327068328857
    5. '**' → logprob: -4.974432468414307
    6. 'tmp' → logprob: -5.224432468414307
    7. '(' → logprob: -5.224432468414307
    8. '`' → logprob: -7.349432468414307
    9. ' (' → logprob: -7.349432468414307
    10. ' i' → logprob: -7.599432468414307

Token 897: ' à' (ID: 1221)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.1149565726518631
    2. ' +=' → logprob: -2.9899566173553467
    3. ' <<=' → logprob: -3.6149566173553467
    4. '*=' → logprob: -3.6149566173553467
    5. '<<' → logprob: -6.239956378936768
    6. '=' → logprob: -6.489956378936768
    7. ' *=' → logprob: -8.114956855773926
    8. '```' → logprob: -8.364956855773926
    9. '*' → logprob: -8.739956855773926
    10. '<|end|>' → logprob: -9.739956855773926

Token 898: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -1.27099974633893e-05
    2. ' tmp' → logprob: -11.375012397766113
    3. '/tmp' → logprob: -15.250012397766113
    4. '(tmp' → logprob: -15.250012397766113
    5. '[tmp' → logprob: -15.375012397766113
    6. '	tmp' → logprob: -15.625012397766113
    7. '$tmp' → logprob: -16.62501335144043
    8. '```' → logprob: -16.87501335144043
    9. '
' → logprob: -17.25001335144043
    10. '`' → logprob: -18.12501335144043

Token 899: ' pour' (ID: 1930)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.47611314058303833
    2. ' +=' → logprob: -0.9761131405830383
    3. '       ' → logprob: -6.226113319396973
    4. '*=' → logprob: -10.976113319396973
    5. ' <<=' → logprob: -11.351113319396973
    6. '   ' → logprob: -11.726113319396973
    7. '=' → logprob: -12.351113319396973
    8. 'tmp' → logprob: -12.851113319396973
    9. '+' → logprob: -13.226113319396973
    10. ']+=' → logprob: -13.351113319396973

Token 900: ' les' (ID: 1341)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.011117145419120789
    2. ' tmp' → logprob: -4.511116981506348
    3. '(tmp' → logprob: -10.386116981506348
    4. '	tmp' → logprob: -11.011116981506348
    5. '/tmp' → logprob: -11.886116981506348
    6. '[tmp' → logprob: -12.636116981506348
    7. '   ' → logprob: -13.136116981506348
    8. ' ' → logprob: -13.261116981506348
    9. '       ' → logprob: -13.511116981506348
    10. ' augmenter' → logprob: -14.011116981506348

Token 901: ' prochaines' (ID: 166653)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.05995628982782364
    2. ' tmp' → logprob: -2.9349563121795654
    3. 'next' → logprob: -6.184956073760986
    4. ' next' → logprob: -6.809956073760986
    5. ' prochaines' → logprob: -8.059956550598145
    6. '/tmp' → logprob: -8.309956550598145
    7. ' edges' → logprob: -8.934956550598145
    8. '(tmp' → logprob: -8.934956550598145
    9. ' prochains' → logprob: -8.934956550598145
    10. 'edges' → logprob: -9.184956550598145

Token 902: ' ar' (ID: 646)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.8243423700332642
    2. '+' → logprob: -1.3243423700332642
    3. '+=' → logprob: -1.3243423700332642
    4. '2' → logprob: -5.199342250823975
    5. 'edges' → logprob: -5.449342250823975
    6. ' +' → logprob: -5.449342250823975
    7. ' edges' → logprob: -5.574342250823975
    8. ')' → logprob: -6.074342250823975
    9. '=' → logprob: -6.324342250823975
    10. 'tmp' → logprob: -6.449342250823975

Token 903: 'êtes' (ID: 23720)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.07440377026796341
    2. 'g' → logprob: -3.324403762817383
    3. 'edges' → logprob: -3.949403762817383
    4. ' edges' → logprob: -4.949403762817383
    5. 'ges' → logprob: -5.574403762817383
    6. '_edges' → logprob: -6.449403762817383
    7. ' +=' → logprob: -7.324403762817383
    8. 'gs' → logprob: -7.574403762817383
    9. '   ' → logprob: -8.074403762817383
    10. 'êtes' → logprob: -8.324403762817383

Token 904: ' évent' (ID: 80346)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.03812388703227043
    2. ' +=' → logprob: -3.288123846054077
    3. '+' → logprob: -9.538124084472656
    4. '=' → logprob: -12.288124084472656
    5. '*=' → logprob: -13.038124084472656
    6. '+="' → logprob: -13.788124084472656
    7. ' +' → logprob: -13.788124084472656
    8. '+='' → logprob: -14.788124084472656
    9. '+=(' → logprob: -15.038124084472656
    10. '```' → logprob: -15.538124084472656

Token 905: 'uelles' (ID: 60819)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.8939437866210938
    2. '   ' → logprob: -1.7689437866210938
    3. 'uler' → logprob: -2.3939437866210938
    4. 'tmp' → logprob: -2.8939437866210938
    5. '+=' → logprob: -3.0189437866210938
    6. 'urer' → logprob: -3.0189437866210938
    7. 'érer' → logprob: -3.8939437866210938
    8. '       ' → logprob: -4.268943786621094
    9. '```' → logprob: -4.393943786621094
    10. '++' → logprob: -4.393943786621094

Token 906: '.
' (ID: 558)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.4835854768753052
    2. ' +=' → logprob: -0.9835854768753052
    3. 'tmp' → logprob: -5.233585357666016
    4. '```' → logprob: -6.483585357666016
    5. '[tmp' → logprob: -6.983585357666016
    6. '<|end|>' → logprob: -7.983585357666016
    7. '(tmp' → logprob: -8.233585357666016
    8. '*=' → logprob: -8.358585357666016
    9. ' tmp' → logprob: -8.358585357666016
    10. '   ' → logprob: -8.733585357666016

Token 907: '       ' (ID: 309)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.34636440873146057
    2. ' +=' → logprob: -1.8463643789291382
    3. 'tmp' → logprob: -2.0963644981384277
    4. ' tmp' → logprob: -4.721364498138428
    5. '+' → logprob: -7.096364498138428
    6. '[tmp' → logprob: -7.221364498138428
    7. '   ' → logprob: -7.721364498138428
    8. '	tmp' → logprob: -8.22136402130127
    9. '       ' → logprob: -8.72136402130127
    10. '```' → logprob: -8.97136402130127

Token 908: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' (adapté à ' tmp') → logprob: -9.968312951968983e-06
    2. ' tmp' → logprob: -11.750009536743164
    3. '+=' → logprob: -13.250009536743164
    4. '/tmp' → logprob: -16.625009536743164
    5. '	tmp' → logprob: -16.875009536743164
    6. '[tmp' → logprob: -16.875009536743164
    7. '$tmp' → logprob: -17.750009536743164
    8. '(tmp' → logprob: -18.250009536743164
    9. 'temp' → logprob: -18.250009536743164
    10. '```' → logprob: -18.875009536743164

Token 909: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -5.991464786347933e-05
    2. ' +=' → logprob: -9.750060081481934
    3. '+' → logprob: -14.250060081481934
    4. '=' → logprob: -14.375060081481934
    5. '*=' → logprob: -15.500060081481934
    6. ']+=' → logprob: -17.875059127807617
    7. '```' → logprob: -18.125059127807617
    8. '   ' → logprob: -18.750059127807617
    9. '+=(' → logprob: -18.750059127807617
    10. '-=' → logprob: -18.750059127807617

Token 910: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.4378848391061183e-05
    2. '(' → logprob: -11.375014305114746
    3. '1' → logprob: -12.875014305114746
    4. ' ' → logprob: -15.125014305114746
    5. 'p' → logprob: -17.250015258789062
    6. '```' → logprob: -18.375015258789062
    7. '`' → logprob: -18.500015258789062
    8. 'pow' → logprob: -18.750015258789062
    9. '[' → logprob: -20.500015258789062
    10. '(p' → logprob: -20.625015258789062

Token 911: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0005140714929439127
    2. '1' → logprob: -7.625514030456543
    3. '(' → logprob: -10.625514030456543
    4. ' ' → logprob: -13.625514030456543
    5. 'p' → logprob: -14.750514030456543
    6. 'pow' → logprob: -16.00051498413086
    7. '```' → logprob: -17.12551498413086
    8. '[' → logprob: -17.75051498413086
    9. '`' → logprob: -18.00051498413086
    10. '   ' → logprob: -18.50051498413086

Token 912: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.0006280870293267071
    2. ' **' → logprob: -7.3756279945373535
    3. '*i' → logprob: -14.250628471374512
    4. '```' → logprob: -14.750628471374512
    5. '(i' → logprob: -15.750628471374512
    6. '[i' → logprob: -16.375627517700195
    7. '`' → logprob: -16.375627517700195
    8. 'i' → logprob: -16.875627517700195
    9. '*' → logprob: -18.000627517700195
    10. '^' → logprob: -18.125627517700195

Token 913: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -4.320199877838604e-07
    2. ' i' → logprob: -15.0
    3. '(i' → logprob: -16.5
    4. '(' → logprob: -17.375
    5. '	i' → logprob: -18.5
    6. '_i' → logprob: -20.625
    7. '```' → logprob: -21.0
    8. '*i' → logprob: -21.5
    9. '{i' → logprob: -22.0
    10. '\' → logprob: -22.25

Token 914: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 915: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7905305027961731
    2. 'print' → logprob: -0.7905305027961731
    3. 'for' → logprob: -2.4155304431915283
    4. '```' → logprob: -6.290530681610107
    5. '#print' → logprob: -6.540530681610107
    6. '<|end|>' → logprob: -9.41553020477295
    7. ')' → logprob: -10.41553020477295
    8. 'N' → logprob: -11.29053020477295
    9. '
' → logprob: -11.41553020477295
    10. ' for' → logprob: -11.54053020477295

Token 916: ' Dé' (ID: 27247)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.006759305950254202
    2. 'for' → logprob: -5.006759166717529
    3. 'N' → logprob: -11.131759643554688
    4. '#' → logprob: -11.256759643554688
    5. '#print' → logprob: -12.256759643554688
    6. 'pr' → logprob: -12.381759643554688
    7. ' print' → logprob: -13.006759643554688
    8. 'return' → logprob: -13.256759643554688
    9. 'edges' → logprob: -13.756759643554688
    10. ' for' → logprob: -14.381759643554688

Token 917: 'term' (ID: 8044)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.18838246166706085
    2. 'clare' → logprob: -1.9383825063705444
    3. '#' → logprob: -4.563382625579834
    4. 'fin' → logprob: -5.063382625579834
    5. 'print' → logprob: -6.063382625579834
    6. 'for' → logprob: -6.063382625579834
    7. '#print' → logprob: -7.063382625579834
    8. 'bug' → logprob: -7.188382625579834
    9. 'cl' → logprob: -7.438382625579834
    10. 'fi' → logprob: -7.563382625579834

Token 918: 'ine' (ID: 514)
  Prédit: 'ine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ine' → logprob: -0.009767306968569756
    2. 'ines' → logprob: -5.009767532348633
    3. 'inate' → logprob: -7.384767532348633
    4. 'inez' → logprob: -8.009767532348633
    5. 'in' → logprob: -8.259767532348633
    6. 're' → logprob: -8.384767532348633
    7. 'rine' → logprob: -8.384767532348633
    8. 'iner' → logprob: -8.384767532348633
    9. '#' → logprob: -8.509767532348633
    10. 'ire' → logprob: -8.634767532348633

Token 919: ' le' (ID: 505)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.008778835646808147
    2. '#' → logprob: -4.883779048919678
    3. 'le' → logprob: -7.008779048919678
    4. 'M' → logprob: -9.13377857208252
    5. ' print' → logprob: -10.38377857208252
    6. 'N' → logprob: -10.38377857208252
    7. 'max' → logprob: -10.75877857208252
    8. 'n' → logprob: -11.25877857208252
    9. '#print' → logprob: -11.25877857208252
    10. '```' → logprob: -12.00877857208252

Token 920: ' nombre' (ID: 9733)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.005090137477964163
    2. 'M' → logprob: -5.380090236663818
    3. '#' → logprob: -9.25508975982666
    4. 'nombre' → logprob: -9.25508975982666
    5. 'N' → logprob: -9.50508975982666
    6. 'max' → logprob: -9.63008975982666
    7. 'total' → logprob: -9.75508975982666
    8. '```' → logprob: -11.38008975982666
    9. ' print' → logprob: -11.63008975982666
    10. 'V' → logprob: -12.00508975982666

Token 921: ' total' (ID: 3609)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.16860052943229675
    2. 'd' → logprob: -2.918600559234619
    3. 'de' → logprob: -3.168600559234619
    4. '#' → logprob: -3.293600559234619
    5. 'des' → logprob: -4.918600559234619
    6. '_edges' → logprob: -5.293600559234619
    7. '_vertices' → logprob: -6.418600559234619
    8. 'of' → logprob: -6.543600559234619
    9. '=' → logprob: -7.043600559234619
    10. 'edges' → logprob: -7.168600559234619

Token 922: ' d' (ID: 272)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.6150623559951782
    2. 'print' → logprob: -1.6150623559951782
    3. 'de' → logprob: -1.6150623559951782
    4. 'd' → logprob: -1.8650623559951782
    5. '_edges' → logprob: -2.3650622367858887
    6. '_nodes' → logprob: -3.2400622367858887
    7. 'des' → logprob: -3.3650622367858887
    8. '=' → logprob: -4.240062236785889
    9. '_vertices' → logprob: -4.240062236785889
    10. '_s' → logprob: -4.490062236785889

Token 923: ''ar' (ID: 54307)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.41101235151290894
    2. 's' → logprob: -1.9110124111175537
    3. 'ar' → logprob: -2.2860124111175537
    4. '_' → logprob: -4.286012172698975
    5. ' somm' → logprob: -4.661012172698975
    6. 'u' → logprob: -4.786012172698975
    7. '#' → logprob: -4.911012172698975
    8. 'are' → logprob: -5.036012172698975
    9. '_nodes' → logprob: -5.161012172698975
    10. 'edges' → logprob: -5.411012172698975

Token 924: 'êtes' (ID: 23720)
  Prédit: 'êtes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êtes' → logprob: -0.009898217394948006
    2. 'tes' → logprob: -5.5098981857299805
    3. 'cs' → logprob: -6.0098981857299805
    4. '�' → logprob: -7.1348981857299805
    5. 'ê' → logprob: -7.3848981857299805
    6. 'etes' → logprob: -7.8848981857299805
    7. 'ètes' → logprob: -8.25989818572998
    8. 'c' → logprob: -8.63489818572998
    9. 'es' → logprob: -8.75989818572998
    10. '#' → logprob: -9.13489818572998

Token 925: ' cré' (ID: 12201)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.011374831199645996
    2. 'E' → logprob: -5.1363749504089355
    3. 'print' → logprob: -5.6363749504089355
    4. 'm' → logprob: -6.6363749504089355
    5. 'num' → logprob: -8.761374473571777
    6. 'edges' → logprob: -8.761374473571777
    7. 'edge' → logprob: -9.636374473571777
    8. '
' → logprob: -9.761374473571777
    9. 'count' → logprob: -10.261374473571777
    10. 'total' → logprob: -10.761374473571777

Token 926: 'ées' (ID: 5161)
  Prédit: 'tes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tes' → logprob: -0.23404106497764587
    2. 'ites' → logprob: -2.7340409755706787
    3. 'edges' → logprob: -2.9840409755706787
    4. 'ges' → logprob: -3.4840409755706787
    5. 'êtes' → logprob: -3.9840409755706787
    6. 't' → logprob: -4.234041213989258
    7. '_edges' → logprob: -4.984041213989258
    8. 'cies' → logprob: -5.984041213989258
    9. 'ties' → logprob: -6.109041213989258
    10. '(edges' → logprob: -6.109041213989258

Token 927: ' en' (ID: 469)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.14992129802703857
    2. 'print' → logprob: -2.024921417236328
    3. 'E' → logprob: -5.024921417236328
    4. 'm' → logprob: -8.274921417236328
    5. 'num' → logprob: -9.024921417236328
    6. '
' → logprob: -9.274921417236328
    7. 'edges' → logprob: -9.274921417236328
    8. 'edge' → logprob: -10.399921417236328
    9. 'total' → logprob: -11.274921417236328
    10. 'count' → logprob: -11.649921417236328

Token 928: ' prenant' (ID: 140375)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.10074196010828018
    2. 'len' → logprob: -2.3507418632507324
    3. 'edges' → logprob: -7.850741863250732
    4. '```' → logprob: -9.10074234008789
    5. '=len' → logprob: -11.60074234008789
    6. ' len' → logprob: -11.85074234008789
    7. ' print' → logprob: -12.35074234008789
    8. '(len' → logprob: -13.22574234008789
    9. '#' → logprob: -13.22574234008789
    10. ' edges' → logprob: -13.22574234008789

Token 929: ' la' (ID: 557)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -1.676292231422849e-05
    2. ' len' → logprob: -11.625017166137695
    3. '(len' → logprob: -12.000017166137695
    4. '=len' → logprob: -13.750017166137695
    5. '```' → logprob: -14.750017166137695
    6. '[len' → logprob: -16.375017166137695
    7. 'print' → logprob: -17.500017166137695
    8. '	len' → logprob: -17.875017166137695
    9. ',len' → logprob: -18.375017166137695
    10. '
' → logprob: -18.500017166137695

Token 930: ' longueur' (ID: 104613)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.001193798496387899
    2. 'length' → logprob: -6.751194000244141
    3. '```' → logprob: -11.25119400024414
    4. 'print' → logprob: -11.75119400024414
    5. 'leng' → logprob: -13.75119400024414
    6. ' len' → logprob: -14.37619400024414
    7. '(len' → logprob: -15.37619400024414
    8. 'total' → logprob: -15.50119400024414
    9. '=len' → logprob: -15.87619400024414
    10. 'le' → logprob: -16.00119400024414

Token 931: ' de' (ID: 334)
  Prédit: '(edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(edges' → logprob: -0.029798975214362144
    2. 'edges' → logprob: -3.529798984527588
    3. 'of' → logprob: -10.90479850769043
    4. '(' → logprob: -11.27979850769043
    5. '```' → logprob: -12.02979850769043
    6. ' edges' → logprob: -12.02979850769043
    7. '(
' → logprob: -13.40479850769043
    8. '_edges' → logprob: -13.40479850769043
    9. '.edges' → logprob: -14.40479850769043
    10. ' of' → logprob: -14.77979850769043

Token 932: ' la' (ID: 557)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -3.3451433409936726e-05
    2. ' edges' → logprob: -11.000033378601074
    3. '(edges' → logprob: -11.000033378601074
    4. '.edges' → logprob: -17.37503433227539
    5. '```' → logprob: -18.00003433227539
    6. '`' → logprob: -19.62503433227539
    7. '_edges' → logprob: -20.50003433227539
    8. 'Edges' → logprob: -21.37503433227539
    9. 'lines' → logprob: -21.50003433227539
    10. 'edge' → logprob: -22.25003433227539

Token 933: ' liste' (ID: 31719)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -1.664371848164592e-05
    2. ' edges' → logprob: -11.125016212463379
    3. '(edges' → logprob: -13.625016212463379
    4. '```' → logprob: -15.125016212463379
    5. '`' → logprob: -15.750016212463379
    6. '.edges' → logprob: -16.250017166137695
    7. 'list' → logprob: -17.500017166137695
    8. 'Edges' → logprob: -18.625017166137695
    9. '_edges' → logprob: -18.750017166137695
    10. 'lines' → logprob: -19.125017166137695

Token 934: ' d' (ID: 272)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.0789669007062912
    2. '(edges' → logprob: -2.5789668560028076
    3. ' edges' → logprob: -9.828967094421387
    4. '```' → logprob: -10.953967094421387
    5. '_edges' → logprob: -13.078967094421387
    6. '`' → logprob: -13.703967094421387
    7. '.edges' → logprob: -13.953967094421387
    8. 'of' → logprob: -14.078967094421387
    9. '(' → logprob: -15.453967094421387
    10. 'lines' → logprob: -15.578967094421387

Token 935: ''ar' (ID: 54307)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.005358856171369553
    2. '(edges' → logprob: -5.255358695983887
    3. ' edges' → logprob: -9.005358695983887
    4. 'e' → logprob: -14.005358695983887
    5. '`' → logprob: -14.630358695983887
    6. '_edges' → logprob: -14.880358695983887
    7. '.edges' → logprob: -15.005358695983887
    8. '```' → logprob: -15.130358695983887
    9. 'es' → logprob: -16.505359649658203
    10. 's' → logprob: -16.755359649658203

Token 936: 'êtes' (ID: 23720)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.3124580383300781
    2. 'êtes' → logprob: -1.9374580383300781
    3. 'es' → logprob: -2.937458038330078
    4. 'r' → logprob: -3.062458038330078
    5. 'ges' → logprob: -4.562458038330078
    6. 'e' → logprob: -5.312458038330078
    7. 'cs' → logprob: -5.687458038330078
    8. 'g' → logprob: -6.312458038330078
    9. '```' → logprob: -6.812458038330078
    10. 'tes' → logprob: -7.062458038330078

Token 937: '.
' (ID: 558)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.06193675845861435
    2. 'E' → logprob: -3.811936855316162
    3. 'm' → logprob: -4.061936855316162
    4. 'num' → logprob: -4.811936855316162
    5. 'edges' → logprob: -5.061936855316162
    6. 'edge' → logprob: -5.811936855316162
    7. 'len' → logprob: -7.061936855316162
    8. 'n' → logprob: -7.436936855316162
    9. 'total' → logprob: -7.561936855316162
    10. 'nb' → logprob: -8.061936378479004

Token 938: 'M' (ID: 44)
  Prédit: 'M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.7738436460494995
    2. 'm' → logprob: -1.7738436460494995
    3. 'E' → logprob: -2.398843765258789
    4. 'edges' → logprob: -2.648843765258789
    5. 'print' → logprob: -2.773843765258789
    6. 'num' → logprob: -3.023843765258789
    7. 'edge' → logprob: -3.023843765258789
    8. 'len' → logprob: -4.148843765258789
    9. 'count' → logprob: -4.523843765258789
    10. 'total' → logprob: -4.523843765258789

Token 939: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0789816603064537
    2. ' =' → logprob: -2.578981637954712
    3. '=len' → logprob: -9.328981399536133
    4. '=M' → logprob: -12.828981399536133
    5. '=edge' → logprob: -15.578981399536133
    6. '=int' → logprob: -16.453981399536133
    7. '＝' → logprob: -17.453981399536133
    8. '=
' → logprob: -17.703981399536133
    9. '=size' → logprob: -18.078981399536133
    10. '=m' → logprob: -18.578981399536133

Token 940: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -1.676292231422849e-05
    2. ' len' → logprob: -11.000017166137695
    3. '(len' → logprob: -18.250017166137695
    4. '	len' → logprob: -20.125017166137695
    5. '[len' → logprob: -20.500017166137695
    6. '=len' → logprob: -21.875017166137695
    7. '```' → logprob: -24.250017166137695
    8. 'Len' → logprob: -24.625017166137695
    9. ',len' → logprob: -24.875017166137695
    10. '<len' → logprob: -25.125017166137695

Token 941: '(edges' (ID: 185298)
  Prédit: '(edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(edges' → logprob: -0.0031821096781641245
    2. 'edges' → logprob: -5.7531819343566895
    3. ' edges' → logprob: -12.503182411193848
    4. '(' → logprob: -14.628182411193848
    5. '_edges' → logprob: -17.00318145751953
    6. '.edges' → logprob: -17.37818145751953
    7. '(
' → logprob: -17.50318145751953
    8. '(edge' → logprob: -18.50318145751953
    9. ' (' → logprob: -19.00318145751953
    10. 'Edges' → logprob: -19.00318145751953

Token 942: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.263011578586884e-05
    2. ')
' → logprob: -10.250042915344238
    3. ' )' → logprob: -12.500042915344238
    4. '#' → logprob: -13.500042915344238
    5. ')#' → logprob: -14.125042915344238
    6. '()' → logprob: -15.000042915344238
    7. '```' → logprob: -15.500042915344238
    8. ')

' → logprob: -15.625042915344238
    9. '),' → logprob: -16.125041961669922
    10. '())' → logprob: -16.125041961669922

Token 943: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00021224225929472595
    2. '#' → logprob: -8.750212669372559
    3. '```' → logprob: -10.875212669372559
    4. '
' → logprob: -11.125212669372559
    5. '#print' → logprob: -11.375212669372559
    6. 'M' → logprob: -13.000212669372559
    7. '\n' → logprob: -13.000212669372559
    8. '  
' → logprob: -14.000212669372559
    9. 'p' → logprob: -14.375212669372559
    10. ' print' → logprob: -14.375212669372559

Token 944: ' Les' (ID: 7029)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. ' print' → logprob: -19.125
    3. 'M' → logprob: -19.375
    4. '#' → logprob: -19.75
    5. 'pr' → logprob: -19.75
    6. '#print' → logprob: -20.5
    7. '```' → logprob: -21.125
    8. 'for' → logprob: -21.125
    9. '
' → logprob: -21.375
    10. 'output' → logprob: -21.75

Token 945: ' contraintes' (ID: 167366)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -5.633853652398102e-05
    2. ' print' → logprob: -9.875056266784668
    3. '#' → logprob: -12.500056266784668
    4. 'pr' → logprob: -14.250056266784668
    5. '
' → logprob: -15.750056266784668
    6. '#print' → logprob: -16.375057220458984
    7. ' ' → logprob: -17.000057220458984
    8. 'for' → logprob: -17.375057220458984
    9. '```' → logprob: -17.375057220458984
    10. 'p' → logprob: -17.500057220458984

Token 946: ' sont' (ID: 5242)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.03300439566373825
    2. '#' → logprob: -3.6580042839050293
    3. '
' → logprob: -5.283004283905029
    4. ' print' → logprob: -7.283004283905029
    5. 'M' → logprob: -8.408004760742188
    6. '<|end|>' → logprob: -8.783004760742188
    7. '  
' → logprob: -9.283004760742188
    8. ' #' → logprob: -9.408004760742188
    9. '#print' → logprob: -9.408004760742188
    10. ' 
' → logprob: -9.908004760742188

Token 947: ' telles' (ID: 83154)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.9040898880339228e-05
    2. '#' → logprob: -10.750028610229492
    3. 'M' → logprob: -12.875028610229492
    4. ' print' → logprob: -13.000028610229492
    5. '#print' → logprob: -13.250028610229492
    6. 'assert' → logprob: -15.125028610229492
    7. 'pr' → logprob: -15.500028610229492
    8. '(' → logprob: -16.375028610229492
    9. '```' → logprob: -16.375028610229492
    10. '   ' → logprob: -16.875028610229492

Token 948: ' que' (ID: 661)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0512637123465538
    2. '#' → logprob: -3.5512638092041016
    3. 'M' → logprob: -5.676263809204102
    4. '
' → logprob: -5.676263809204102
    5. ' print' → logprob: -5.676263809204102
    6. '<|end|>' → logprob: -5.676263809204102
    7. ':' → logprob: -5.801263809204102
    8. 'if' → logprob: -6.926263809204102
    9. ' M' → logprob: -7.301263809204102
    10. '.' → logprob: -7.926263809204102

Token 949: ' le' (ID: 505)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -5.5027299822540954e-05
    2. 'M' → logprob: -10.625055313110352
    3. ' print' → logprob: -10.750055313110352
    4. '#' → logprob: -12.750055313110352
    5. '
' → logprob: -13.125055313110352
    6. '```' → logprob: -13.125055313110352
    7. 'if' → logprob: -13.375055313110352
    8. 'for' → logprob: -14.250055313110352
    9. '#print' → logprob: -17.12505531311035
    10. 'pr' → logprob: -17.12505531311035

Token 950: ' nombre' (ID: 9733)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00010020548506872728
    2. ' print' → logprob: -9.875100135803223
    3. '#' → logprob: -10.625100135803223
    4. 'N' → logprob: -11.875100135803223
    5. '```' → logprob: -12.000100135803223
    6. 'M' → logprob: -12.125100135803223
    7. '   ' → logprob: -13.375100135803223
    8. 'if' → logprob: -13.375100135803223
    9. 'for' → logprob: -14.500100135803223
    10. 'pr' → logprob: -15.000100135803223

Token 951: ' de' (ID: 334)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1379011571407318
    2. '=' → logprob: -3.0129010677337646
    3. ' =' → logprob: -3.5129010677337646
    4. '_edges' → logprob: -4.262901306152344
    5. '#' → logprob: -4.387901306152344
    6. ' print' → logprob: -5.387901306152344
    7. '_print' → logprob: -5.637901306152344
    8. ' de' → logprob: -6.137901306152344
    9. '
' → logprob: -6.262901306152344
    10. 'M' → logprob: -6.262901306152344

Token 952: ' somm' (ID: 44830)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0001105762057704851
    2. 'for' → logprob: -10.750110626220703
    3. 'vertices' → logprob: -10.875110626220703
    4. 'edges' → logprob: -11.000110626220703
    5. '```' → logprob: -11.500110626220703
    6. '#' → logprob: -11.875110626220703
    7. 'prints' → logprob: -11.875110626220703
    8. 'N' → logprob: -12.125110626220703
    9. '#print' → logprob: -12.125110626220703
    10. 'pr' → logprob: -12.375110626220703

Token 953: 'ets' (ID: 1719)
  Prédit: 'eurs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eurs' → logprob: -0.8492363691329956
    2. 'ets' → logprob: -1.2242363691329956
    3. 'êtres' → logprob: -2.724236488342285
    4. 'êts' → logprob: -2.849236488342285
    5. 'ètres' → logprob: -4.224236488342285
    6. '_vertices' → logprob: -4.224236488342285
    7. 'ètes' → logprob: -4.349236488342285
    8. 'mits' → logprob: -4.349236488342285
    9. 'e' → logprob: -4.599236488342285
    10. 'vertices' → logprob: -4.724236488342285

Token 954: ' N' (ID: 478)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.8551719188690186
    2. ',' → logprob: -0.9801719188690186
    3. ' =' → logprob: -2.7301719188690186
    4. '=' → logprob: -2.7301719188690186
    5. '<|end|>' → logprob: -2.8551719188690186
    6. ' print' → logprob: -5.230172157287598
    7. ' ,' → logprob: -6.355172157287598
    8. '#' → logprob: -6.730172157287598
    9. '#print' → logprob: -7.480172157287598
    10. '```' → logprob: -7.855172157287598

Token 955: ' doit' (ID: 21822)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5383339524269104
    2. ',' → logprob: -2.1633338928222656
    3. '<=' → logprob: -2.4133338928222656
    4. '=' → logprob: -3.2883338928222656
    5. ' =' → logprob: -3.4133338928222656
    6. ' <=' → logprob: -3.5383338928222656
    7. '>' → logprob: -3.7883338928222656
    8. '#' → logprob: -3.9133338928222656
    9. '+' → logprob: -4.288333892822266
    10. '<|end|>' → logprob: -4.413333892822266

Token 956: ' être' (ID: 9104)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.17633375525474548
    2. ' <=' → logprob: -1.9263337850570679
    3. ' be' → logprob: -4.551333904266357
    4. 'print' → logprob: -5.801333904266357
    5. '#' → logprob: -7.301333904266357
    6. ' not' → logprob: -7.426333904266357
    7. ' print' → logprob: -7.926333904266357
    8. 'not' → logprob: -8.3013334274292
    9. 'le' → logprob: -9.4263334274292
    10. ' #' → logprob: -9.6763334274292

Token 957: ' inférieur' (ID: 191498)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.017857711762189865
    2. ' <=' → logprob: -4.267857551574707
    3. 'print' → logprob: -5.892857551574707
    4. '10' → logprob: -8.392857551574707
    5. '<' → logprob: -8.892857551574707
    6. '≤' → logprob: -9.017857551574707
    7. 'M' → logprob: -9.767857551574707
    8. '100' → logprob: -10.017857551574707
    9. 'N' → logprob: -10.392857551574707
    10. ' ' → logprob: -10.392857551574707

Token 958: ' ou' (ID: 2031)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4584119915962219
    2. 'à' → logprob: -1.7084119319915771
    3. 'ou' → logprob: -2.333411931991577
    4. 'or' → logprob: -3.708411931991577
    5. ' à' → logprob: -3.958411931991577
    6. ' ou' → logprob: -4.208412170410156
    7. ' or' → logprob: -4.708412170410156
    8. 'au' → logprob: -5.208412170410156
    9. '<=' → logprob: -5.208412170410156
    10. '```' → logprob: -5.833412170410156

Token 959: ' égal' (ID: 15059)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0023876605555415154
    2. 'égal' → logprob: -6.252387523651123
    3. ' ég' → logprob: -8.627388000488281
    4. ' égal' → logprob: -8.752388000488281
    5. 'egal' → logprob: -10.752388000488281
    6. '=#' → logprob: -10.752388000488281
    7. '=
' → logprob: -11.627388000488281
    8. '<=' → logprob: -11.627388000488281
    9. '=N' → logprob: -11.877388000488281
    10. 'equal' → logprob: -11.877388000488281

Token 960: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.0760318785905838
    2. 'à' → logprob: -2.9510319232940674
    3. '=' → logprob: -4.576031684875488
    4. '100' → logprob: -5.451031684875488
    5. ' ' → logprob: -6.076031684875488
    6. ' =' → logprob: -6.451031684875488
    7. '```' → logprob: -7.701031684875488
    8. '#' → logprob: -8.201031684875488
    9. ' to' → logprob: -8.451031684875488
    10. '50' → logprob: -8.701031684875488

Token 961: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.8301005959510803
    2. '10' → logprob: -1.0801005363464355
    3. '20' → logprob: -2.4551005363464355
    4. 'L' → logprob: -2.7051005363464355
    5. '200' → logprob: -3.4551005363464355
    6. '2' → logprob: -3.4551005363464355
    7. 'M' → logprob: -5.9551005363464355
    8. '500' → logprob: -6.0801005363464355
    9. '1' → logprob: -6.5801005363464355
    10. '
' → logprob: -7.7051005363464355

Token 962: '20' (ID: 455)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.41150107979774475
    2. '10' → logprob: -1.4115010499954224
    3. '20' → logprob: -3.286501169204712
    4. '200' → logprob: -3.411501169204712
    5. '500' → logprob: -4.786500930786133
    6. 'L' → logprob: -5.036500930786133
    7. '2' → logprob: -5.161500930786133
    8. '300' → logprob: -6.911500930786133
    9. '
' → logprob: -7.911500930786133
    10. 'M' → logprob: -8.286500930786133

Token 963: ' et' (ID: 859)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.19574719667434692
    2. 'and' → logprob: -1.8207471370697021
    3. 'if' → logprob: -4.570747375488281
    4. ' if' → logprob: -5.945747375488281
    5. '<|end|>' → logprob: -6.945747375488281
    6. '
' → logprob: -7.570747375488281
    7. '#' → logprob: -7.695747375488281
    8. 'assert' → logprob: -8.195747375488281
    9. '.' → logprob: -8.695747375488281
    10. ' ' → logprob: -8.820747375488281

Token 964: ' le' (ID: 505)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.13283662497997284
    2. ' M' → logprob: -2.1328365802764893
    3. '20' → logprob: -6.132836818695068
    4. 'N' → logprob: -6.132836818695068
    5. ' ' → logprob: -8.00783634185791
    6. ' N' → logprob: -8.50783634185791
    7. '10' → logprob: -8.75783634185791
    8. 'le' → logprob: -8.75783634185791
    9. ' le' → logprob: -9.13283634185791
    10. '100' → logprob: -9.88283634185791

Token 965: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.2956841289997101
    2. ' nombre' → logprob: -1.9206840991973877
    3. 'M' → logprob: -2.2956840991973877
    4. 'print' → logprob: -5.295684337615967
    5. 'N' → logprob: -5.920684337615967
    6. '#' → logprob: -8.170683860778809
    7. 'number' → logprob: -8.795683860778809
    8. ' M' → logprob: -8.920683860778809
    9. ' nombres' → logprob: -9.420683860778809
    10. 'Nombre' → logprob: -9.420683860778809

Token 966: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.3668890595436096
    2. 'd' → logprob: -1.4918889999389648
    3. '#' → logprob: -3.366888999938965
    4. 'M' → logprob: -3.866888999938965
    5. '_edges' → logprob: -4.366888999938965
    6. 'edges' → logprob: -5.366888999938965
    7. ' de' → logprob: -6.366888999938965
    8. '_d' → logprob: -6.616888999938965
    9. '(edges' → logprob: -6.991888999938965
    10. '
' → logprob: -7.366888999938965

Token 967: ''ar' (ID: 54307)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.704448401927948
    2. ''ar' → logprob: -0.829448401927948
    3. ' ar' → logprob: -2.8294484615325928
    4. '_ar' → logprob: -5.954448223114014
    5. 'e' → logprob: -6.329448223114014
    6. '’ar' → logprob: -6.329448223114014
    7. 'edges' → logprob: -6.579448223114014
    8. '#' → logprob: -7.329448223114014
    9. 'are' → logprob: -7.454448223114014
    10. 'arith' → logprob: -8.454448699951172

Token 968: 'êtes' (ID: 23720)
  Prédit: 'êtes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êtes' → logprob: -0.10932271182537079
    2. 's' → logprob: -2.9843227863311768
    3. 'ê' → logprob: -3.9843227863311768
    4. 'c' → logprob: -4.984322547912598
    5. '#' → logprob: -5.359322547912598
    6. 'ç' → logprob: -5.484322547912598
    7. 't' → logprob: -5.734322547912598
    8. 'g' → logprob: -6.234322547912598
    9. 'cs' → logprob: -6.359322547912598
    10. '�' → logprob: -6.609322547912598

Token 969: ' M' (ID: 391)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.01289089024066925
    2. '<=' → logprob: -4.387890815734863
    3. 'M' → logprob: -8.262890815734863
    4. ' #' → logprob: -10.762890815734863
    5. 'print' → logprob: -11.137890815734863
    6. '#' → logprob: -11.262890815734863
    7. ' =' → logprob: -11.262890815734863
    8. ' ≤' → logprob: -11.387890815734863
    9. 'N' → logprob: -12.012890815734863
    10. ',' → logprob: -12.012890815734863

Token 970: ' inférieur' (ID: 191498)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.638887345790863
    2. '<=' → logprob: -0.763887345790863
    3. ' =' → logprob: -5.513887405395508
    4. '=' → logprob: -6.763887405395508
    5. ',' → logprob: -7.388887405395508
    6. '#' → logprob: -8.638887405395508
    7. 'print' → logprob: -9.138887405395508
    8. ')<=' → logprob: -10.013887405395508
    9. '≤' → logprob: -10.263887405395508
    10. ' ≤' → logprob: -11.013887405395508

Token 971: ' ou' (ID: 2031)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04283394291996956
    2. 'or' → logprob: -3.7928340435028076
    3. 'ou' → logprob: -4.2928338050842285
    4. '<=' → logprob: -6.2928338050842285
    5. 'à' → logprob: -6.7928338050842285
    6. '```' → logprob: -6.7928338050842285
    7. ' =' → logprob: -7.0428338050842285
    8. ' or' → logprob: -8.542834281921387
    9. '#' → logprob: -9.167834281921387
    10. 'au' → logprob: -9.292834281921387

Token 972: ' égal' (ID: 15059)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0011015182826668024
    2. 'equal' → logprob: -7.876101493835449
    3. '100' → logprob: -8.00110149383545
    4. '20' → logprob: -10.12610149383545
    5. '#' → logprob: -10.25110149383545
    6. '10' → logprob: -10.25110149383545
    7. ' égal' → logprob: -10.37610149383545
    8. '==' → logprob: -10.37610149383545
    9. '```' → logprob: -10.50110149383545
    10. '500' → logprob: -10.75110149383545

Token 973: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.8750395774841309
    2. ' à' → logprob: -1.3750395774841309
    3. 'to' → logprob: -1.3750395774841309
    4. '=' → logprob: -4.250039577484131
    5. '```' → logprob: -4.250039577484131
    6. '20' → logprob: -4.375039577484131
    7. '100' → logprob: -4.625039577484131
    8. ' to' → logprob: -4.875039577484131
    9. ' ' → logprob: -5.125039577484131
    10. '(' → logprob: -5.750039577484131

Token 974: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.004056078847497702
    2. '200' → logprob: -6.504055976867676
    3. '10' → logprob: -6.754055976867676
    4. '600' → logprob: -7.004055976867676
    5. '500' → logprob: -8.504055976867676
    6. '400' → logprob: -9.004055976867676
    7. '300' → logprob: -9.504055976867676
    8. '60' → logprob: -10.379055976867676
    9. '120' → logprob: -11.004055976867676
    10. '250' → logprob: -12.879055976867676

Token 975: '60' (ID: 1910)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.024042300879955292
    2. '200' → logprob: -4.399042129516602
    3. '10' → logprob: -4.899042129516602
    4. '500' → logprob: -6.274042129516602
    5. '400' → logprob: -6.774042129516602
    6. '600' → logprob: -8.274042129516602
    7. '300' → logprob: -8.274042129516602
    8. '20' → logprob: -8.524042129516602
    9. '250' → logprob: -10.149042129516602
    10. '120' → logprob: -10.399042129516602

Token 976: ' (' (ID: 350)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2057831883430481
    2. '
' → logprob: -2.0807831287384033
    3. '#' → logprob: -3.3307831287384033
    4. 'if' → logprob: -3.9557831287384033
    5. '<|end|>' → logprob: -6.080783367156982
    6. 'assert' → logprob: -6.705783367156982
    7. '  
' → logprob: -7.330783367156982
    8. '```' → logprob: -7.830783367156982
    9. '#print' → logprob: -7.955783367156982
    10. ' 
' → logprob: -8.205782890319824

Token 977: 'sel' (ID: 4430)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12185215950012207
    2. 'print' → logprob: -2.621852159500122
    3. 'if' → logprob: -4.246851921081543
    4. '#' → logprob: -4.246851921081543
    5. ')
' → logprob: -4.996851921081543
    6. '.' → logprob: -5.621851921081543
    7. '
' → logprob: -6.746851921081543
    8. ',' → logprob: -7.871851921081543
    9. ' if' → logprob: -8.246851921081543
    10. 'assert' → logprob: -8.371851921081543

Token 978: 'on' (ID: 263)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.080955982208252
    2. 'e' → logprob: -1.955955982208252
    3. 'if' → logprob: -1.955955982208252
    4. '```' → logprob: -2.080955982208252
    5. 'import' → logprob: -3.080955982208252
    6. ':' → logprob: -3.205955982208252
    7. 'print' → logprob: -3.330955982208252
    8. ')' → logprob: -3.830955982208252
    9. '   ' → logprob: -4.830955982208252
    10. '=' → logprob: -5.080955982208252

Token 979: ' le' (ID: 505)
  Prédit: '20'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '20' → logprob: -0.8460789322853088
    2. 'N' → logprob: -1.346078872680664
    3. 'L' → logprob: -2.846078872680664
    4. '#' → logprob: -3.096078872680664
    5. 'the' → logprob: -3.346078872680664
    6. 'constraints' → logprob: -3.346078872680664
    7. 'range' → logprob: -3.471078872680664
    8. 'M' → logprob: -3.596078872680664
    9. ' ' → logprob: -3.846078872680664
    10. 'len' → logprob: -4.721078872680664

Token 980: ' commentaire' (ID: 86011)
  Prédit: 'constraints'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'constraints' → logprob: -0.2560541033744812
    2. 'prompt' → logprob: -2.631054162979126
    3. 'problem' → logprob: -3.256054162979126
    4. 'constraint' → logprob: -3.631054162979126
    5. 'en' → logprob: -4.506053924560547
    6. 'texte' → logprob: -4.631053924560547
    7. 'contra' → logprob: -4.756053924560547
    8. ' constraints' → logprob: -4.881053924560547
    9. 'statement' → logprob: -5.506053924560547
    10. 'text' → logprob: -5.506053924560547

Token 981: ' original' (ID: 4756)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.40323200821876526
    2. 'print' → logprob: -1.5282319784164429
    3. ')
' → logprob: -3.2782320976257324
    4. '
' → logprob: -3.2782320976257324
    5. '#' → logprob: -3.4032320976257324
    6. '.' → logprob: -6.528232097625732
    7. 'N' → logprob: -7.403232097625732
    8. '
' → logprob: -7.528232097625732
    9. '```' → logprob: -7.653232097625732
    10. ')

' → logprob: -7.778232097625732

Token 982: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08673452585935593
    2. 'print' → logprob: -2.7117345333099365
    3. ')
' → logprob: -4.836734294891357
    4. '#' → logprob: -4.836734294891357
    5. '
' → logprob: -7.586734294891357
    6. 'if' → logprob: -8.836734771728516
    7. '```' → logprob: -10.211734771728516
    8. '#print' → logprob: -10.961734771728516
    9. ')
' → logprob: -11.086734771728516
    10. ')

' → logprob: -11.586734771728516

Token 983: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.000933017407078296
    2. 'if' → logprob: -7.0009331703186035
    3. '#' → logprob: -11.500932693481445
    4. '```' → logprob: -12.250932693481445
    5. 'assert' → logprob: -12.750932693481445
    6. ' print' → logprob: -14.125932693481445
    7. '#print' → logprob: -14.125932693481445
    8. '
' → logprob: -14.375932693481445
    9. 'N' → logprob: -14.375932693481445
    10. 'pr' → logprob: -14.500932693481445

Token 984: ' Ici' (ID: 145754)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0022752697113901377
    2. 'if' → logprob: -6.252275466918945
    3. '#' → logprob: -8.252275466918945
    4. 'assert' → logprob: -9.752275466918945
    5. '```' → logprob: -11.377275466918945
    6. 'for' → logprob: -11.877275466918945
    7. '
' → logprob: -12.002275466918945
    8. '#print' → logprob: -13.752275466918945
    9. ' print' → logprob: -14.627275466918945
    10. 'pr' → logprob: -14.627275466918945

Token 985: ',' (ID: 11)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0419418029487133
    2. 'if' → logprob: -3.6669418811798096
    3. '#' → logprob: -4.5419416427612305
    4. ':' → logprob: -6.5419416427612305
    5. '
' → logprob: -6.9169416427612305
    6. ' print' → logprob: -7.1669416427612305
    7. ',' → logprob: -7.5419416427612305
    8. ' if' → logprob: -7.9169416427612305
    9. 'assert' → logprob: -8.16694164276123
    10. ':
' → logprob: -8.29194164276123

Token 986: ' rien' (ID: 23082)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0057044499553740025
    2. 'if' → logprob: -5.255704402923584
    3. '#' → logprob: -7.755704402923584
    4. 'assert' → logprob: -10.130704879760742
    5. ' print' → logprob: -14.130704879760742
    6. '#print' → logprob: -14.380704879760742
    7. ' if' → logprob: -15.255704879760742
    8. 'for' → logprob: -15.380704879760742
    9. '```' → logprob: -15.505704879760742
    10. 'pr' → logprob: -15.630704879760742

Token 987: ' n' (ID: 297)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.07645868510007858
    2. '#' → logprob: -3.201458692550659
    3. '=' → logprob: -4.07645845413208
    4. '#print' → logprob: -5.20145845413208
    5. 'for' → logprob: -5.45145845413208
    6. '   ' → logprob: -6.07645845413208
    7. ':' → logprob: -6.95145845413208
    8. ' print' → logprob: -8.076458930969238
    9. ' =' → logprob: -8.201458930969238
    10. '.print' → logprob: -8.326458930969238

Token 988: ''emp' (ID: 140539)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.07267311960458755
    2. '#' → logprob: -2.8226730823516846
    3. '=' → logprob: -5.822673320770264
    4. ' print' → logprob: -5.947673320770264
    5. 'if' → logprob: -6.572673320770264
    6. 'n' → logprob: -7.197673320770264
    7. 'for' → logprob: -7.572673320770264
    8. '#print' → logprob: -7.822673320770264
    9. ' =' → logprob: -8.072672843933105
    10. ' n' → logprob: -8.322672843933105

Token 989: 'êche' (ID: 63993)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.03722348436713219
    2. 'print' → logprob: -5.0372233390808105
    3. 'êche' → logprob: -5.0372233390808105
    4. 'ro' → logprob: -5.6622233390808105
    5. '#' → logprob: -5.7872233390808105
    6. '```' → logprob: -5.9122233390808105
    7. 're' → logprob: -6.0372233390808105
    8. 'ort' → logprob: -6.1622233390808105
    9. 'ré' → logprob: -6.6622233390808105
    10. 'ê' → logprob: -6.7872233390808105

Token 990: ' cela' (ID: 17542)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00037383107701316476
    2. ' print' → logprob: -8.500373840332031
    3. '#' → logprob: -9.500373840332031
    4. '```' → logprob: -9.750373840332031
    5. 'for' → logprob: -10.875373840332031
    6. 'from' → logprob: -12.750373840332031
    7. 'N' → logprob: -12.750373840332031
    8. '#print' → logprob: -13.125373840332031
    9. '	print' → logprob: -13.375373840332031
    10. '   ' → logprob: -13.500373840332031

Token 991: ' mais' (ID: 2899)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.005513111595064402
    2. '#' → logprob: -5.5055131912231445
    3. '
' → logprob: -6.6305131912231445
    4. '#print' → logprob: -10.130513191223145
    5. '```' → logprob: -10.880513191223145
    6. 'for' → logprob: -10.880513191223145
    7. ' print' → logprob: -11.130513191223145
    8. '  
' → logprob: -12.005513191223145
    9. 'M' → logprob: -12.755513191223145
    10. '
' → logprob: -12.880513191223145

Token 992: ' une' (ID: 2463)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.018229426816105843
    2. '#' → logprob: -4.0182294845581055
    3. 'for' → logprob: -9.768229484558105
    4. '```' → logprob: -11.518229484558105
    5. ' print' → logprob: -12.643229484558105
    6. 'if' → logprob: -12.643229484558105
    7. '#print' → logprob: -13.268229484558105
    8. 'pass' → logprob: -13.893229484558105
    9. '
' → logprob: -13.893229484558105
    10. 'M' → logprob: -13.893229484558105

Token 993: ' assertion' (ID: 54959)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.18470114469528198
    2. 'if' → logprob: -2.4347012042999268
    3. '#' → logprob: -2.8097012042999268
    4. 'assert' → logprob: -4.309700965881348
    5. '#print' → logprob: -5.684700965881348
    6. 'for' → logprob: -6.934700965881348
    7. ' print' → logprob: -6.934700965881348
    8. ' if' → logprob: -7.059700965881348
    9. '```' → logprob: -7.559700965881348
    10. '
' → logprob: -8.559700965881348

Token 994: ' aurait' (ID: 48306)
  Prédit: 'assert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'assert' → logprob: -0.050978150218725204
    2. 'N' → logprob: -3.175978183746338
    3. ' assert' → logprob: -5.925978183746338
    4. ' N' → logprob: -6.175978183746338
    5. 'M' → logprob: -6.925978183746338
    6. 'L' → logprob: -6.925978183746338
    7. '.assert' → logprob: -7.425978183746338
    8. '_assert' → logprob: -8.42597770690918
    9. ' L' → logprob: -9.30097770690918
    10. ' M' → logprob: -9.67597770690918

Token 995: ' pu' (ID: 2923)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.2691967487335205
    2. ' été' → logprob: -1.8941967487335205
    3. 'être' → logprob: -2.6441967487335205
    4. 'pu' → logprob: -2.8941967487335205
    5. 'log' → logprob: -3.1441967487335205
    6. ' être' → logprob: -3.3941967487335205
    7. ' be' → logprob: -3.3941967487335205
    8. ' been' → logprob: -3.7691967487335205
    9. 'été' → logprob: -3.7691967487335205
    10. 'assert' → logprob: -4.019196510314941

Token 996: ' être' (ID: 9104)
  Prédit: 'être'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'être' → logprob: -0.6564585566520691
    2. '#' → logprob: -1.5314586162567139
    3. 'assert' → logprob: -2.281458616256714
    4. ' be' → logprob: -2.781458616256714
    5. ' être' → logprob: -2.781458616256714
    6. 'be' → logprob: -4.031458377838135
    7. 'aj' → logprob: -5.281458377838135
    8. 'é' → logprob: -6.281458377838135
    9. 'êtres' → logprob: -6.281458377838135
    10. 'mettre' → logprob: -7.281458377838135

Token 997: ' utilisée' (ID: 106548)
  Prédit: 'aj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'aj' → logprob: -0.3672632575035095
    2. '#' → logprob: -1.3672633171081543
    3. 'faite' → logprob: -3.8672633171081543
    4. 'mise' → logprob: -4.867263317108154
    5. 'placed' → logprob: -5.117263317108154
    6. 'assert' → logprob: -5.492263317108154
    7. 'print' → logprob: -5.992263317108154
    8. 'plac' → logprob: -6.742263317108154
    9. ' ajout' → logprob: -6.867263317108154
    10. 'added' → logprob: -6.867263317108154

Token 998: ' pour' (ID: 1930)
  Prédit: 'assert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'assert' → logprob: -0.009006763808429241
    2. '#' → logprob: -5.009006977081299
    3. 'print' → logprob: -6.384006977081299
    4. '
' → logprob: -8.75900650024414
    5. '<|end|>' → logprob: -9.13400650024414
    6. '#print' → logprob: -9.38400650024414
    7. '.assert' → logprob: -9.50900650024414
    8. '```' → logprob: -9.75900650024414
    9. '(assert' → logprob: -10.38400650024414
    10. 'N' → logprob: -10.50900650024414

Token 999: ' vérifier' (ID: 93671)
  Prédit: 'assert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'assert' → logprob: -0.2521844208240509
    2. '#' → logprob: -1.5021843910217285
    3. 'pass' → logprob: -9.002184867858887
    4. 'print' → logprob: -9.752184867858887
    5. ' assert' → logprob: -10.877184867858887
    6. ' #' → logprob: -11.002184867858887
    7. 'continue' → logprob: -11.627184867858887
    8. '```' → logprob: -12.252184867858887
    9. '.assert' → logprob: -12.377184867858887
    10. 'raise' → logprob: -12.752184867858887

Token 1000: '.

' (ID: 364)
  Prédit: 'assert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'assert' → logprob: -0.04567743092775345
    2. '#' → logprob: -3.170677423477173
    3. '.assert' → logprob: -7.170677661895752
    4. 'N' → logprob: -7.170677661895752
    5. '(assert' → logprob: -7.795677661895752
    6. '<|end|>' → logprob: -8.420677185058594
    7. '(N' → logprob: -9.045677185058594
    8. '#print' → logprob: -9.045677185058594
    9. '#if' → logprob: -9.670677185058594
    10. 'M' → logprob: -10.045677185058594

Token 1001: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0004920298233628273
    2. '#' → logprob: -7.625492095947266
    3. 'for' → logprob: -13.500492095947266
    4. '```' → logprob: -13.625492095947266
    5. '
' → logprob: -14.125492095947266
    6. '#print' → logprob: -14.500492095947266
    7. ' print' → logprob: -16.000492095947266
    8. 'pr' → logprob: -17.125492095947266
    9. 'M' → logprob: -18.000492095947266
    10. 'N' → logprob: -18.125492095947266

Token 1002: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. '#' → logprob: -16.75
    3. ' print' → logprob: -19.375
    4. '#print' → logprob: -20.125
    5. '```' → logprob: -20.5
    6. '
' → logprob: -22.75
    7. 'import' → logprob: -23.0
    8. 'output' → logprob: -23.75
    9. 'for' → logprob: -23.75
    10. 'Print' → logprob: -23.875

Token 1003: 'iche' (ID: 7509)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.15671254694461823
    2. 'for' → logprob: -2.906712532043457
    3. 'f' → logprob: -3.406712532043457
    4. '#' → logprob: -3.531712532043457
    5. 'iche' → logprob: -4.156712532043457
    6. 'ich' → logprob: -4.656712532043457
    7. 'icher' → logprob: -6.406712532043457
    8. 'ichage' → logprob: -8.156712532043457
    9. '```' → logprob: -8.906712532043457
    10. 'r' → logprob: -9.031712532043457

Token 1004: ' le' (ID: 505)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1031242311000824
    2. 'N' → logprob: -2.3531241416931152
    3. '(N' → logprob: -5.853124141693115
    4. ' print' → logprob: -10.478124618530273
    5. ' N' → logprob: -12.353124618530273
    6. 'f' → logprob: -12.728124618530273
    7. '   ' → logprob: -12.728124618530273
    8. '(print' → logprob: -13.853124618530273
    9. '(f' → logprob: -14.603124618530273
    10. '(' → logprob: -14.603124618530273

Token 1005: ' nombre' (ID: 9733)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.07961410284042358
    2. 'N' → logprob: -2.5796141624450684
    3. '(N' → logprob: -7.329614162445068
    4. ' print' → logprob: -11.07961368560791
    5. ' N' → logprob: -11.70461368560791
    6. 'f' → logprob: -11.82961368560791
    7. 'pr' → logprob: -12.20461368560791
    8. 'p' → logprob: -12.57961368560791
    9. 'prin' → logprob: -12.57961368560791
    10. '```' → logprob: -12.95461368560791

Token 1006: ' total' (ID: 3609)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.05957147851586342
    2. '(' → logprob: -3.4345715045928955
    3. 'print' → logprob: -3.6845715045928955
    4. 'N' → logprob: -8.434571266174316
    5. ' (' → logprob: -9.184571266174316
    6. '(M' → logprob: -9.559571266174316
    7. '()' → logprob: -10.434571266174316
    8. '("' → logprob: -11.184571266174316
    9. '(
' → logprob: -11.684571266174316
    10. '   ' → logprob: -11.684571266174316

Token 1007: ' de' (ID: 334)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00469913799315691
    2. '(' → logprob: -5.754699230194092
    3. '(N' → logprob: -7.129699230194092
    4. '(M' → logprob: -7.629699230194092
    5. ' print' → logprob: -9.379698753356934
    6. 'M' → logprob: -10.254698753356934
    7. '(print' → logprob: -10.254698753356934
    8. '()' → logprob: -10.504698753356934
    9. 'of' → logprob: -11.379698753356934
    10. 'N' → logprob: -12.004698753356934

Token 1008: ' somm' (ID: 44830)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.060205597430467606
    2. 'som' → logprob: -3.0602056980133057
    3. ' somm' → logprob: -4.935205459594727
    4. 'N' → logprob: -6.810205459594727
    5. ' noe' → logprob: -6.810205459594727
    6. 'nodes' → logprob: -6.810205459594727
    7. 'vertices' → logprob: -8.435205459594727
    8. 'summ' → logprob: -8.560205459594727
    9. 'points' → logprob: -9.060205459594727
    10. 'n' → logprob: -9.060205459594727

Token 1009: 'ets' (ID: 1719)
  Prédit: 'ets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ets' → logprob: -0.12028967589139938
    2. 'êts' → logprob: -2.7452895641326904
    3. 'e' → logprob: -3.3702895641326904
    4. 'è' → logprob: -5.2452898025512695
    5. 'et' → logprob: -5.7452898025512695
    6. '#' → logprob: -6.6202898025512695
    7. 'ts' → logprob: -7.1202898025512695
    8. 'ètres' → logprob: -7.3702898025512695
    9. '�' → logprob: -7.3702898025512695
    10. 's' → logprob: -8.12028980255127

Token 1010: ' N' (ID: 478)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0025599722284823656
    2. ',' → logprob: -6.002560138702393
    3. '(N' → logprob: -10.127559661865234
    4. ' print' → logprob: -10.252559661865234
    5. '(' → logprob: -12.377559661865234
    6. 'N' → logprob: -13.502559661865234
    7. '(print' → logprob: -13.752559661865234
    8. '```' → logprob: -14.127559661865234
    9. ',N' → logprob: -14.502559661865234
    10. '   ' → logprob: -14.627559661865234

Token 1011: ' suivi' (ID: 60370)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.2664456789934775e-06
    2. '```' → logprob: -13.750000953674316
    3. ' print' → logprob: -15.625000953674316
    4. '``' → logprob: -19.500001907348633
    5. ',' → logprob: -20.125001907348633
    6. '.print' → logprob: -20.500001907348633
    7. '
' → logprob: -20.625001907348633
    8. '(print' → logprob: -21.500001907348633
    9. '#print' → logprob: -21.625001907348633
    10. '`' → logprob: -22.250001907348633

Token 1012: ' du' (ID: 1462)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4212822914123535
    2. '"' → logprob: -1.9212822914123535
    3. ''' → logprob: -2.7962822914123535
    4. 'et' → logprob: -2.7962822914123535
    5. ' ' → logprob: -3.0462822914123535
    6. '   ' → logprob: -5.2962822914123535
    7. '  ' → logprob: -5.4212822914123535
    8. '(' → logprob: -5.5462822914123535
    9. 'print' → logprob: -5.9212822914123535
    10. '(N' → logprob: -6.4212822914123535

Token 1013: ' nombre' (ID: 9733)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'M' → logprob: -1.2775497436523438
    2. ' M' → logprob: -1.4025497436523438
    3. '"' → logprob: -1.5275497436523438
    4. ''' → logprob: -1.7775497436523438
    5. ' ' → logprob: -3.2775497436523438
    6. ',' → logprob: -3.7775497436523438
    7. ' ,' → logprob: -4.777549743652344
    8. ''M' → logprob: -5.027549743652344
    9. 'print' → logprob: -5.652549743652344
    10. '  ' → logprob: -6.277549743652344

Token 1014: ' total' (ID: 3609)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -1.0794509649276733
    2. ' ' → logprob: -2.079451084136963
    3. ' de' → logprob: -2.079451084136963
    4. ' d' → logprob: -2.204451084136963
    5. ' M' → logprob: -2.204451084136963
    6. ',' → logprob: -3.454451084136963
    7. '    ' → logprob: -3.704451084136963
    8. '```' → logprob: -3.829451084136963
    9. 'des' → logprob: -4.454451084136963
    10. '  ' → logprob: -4.454451084136963

Token 1015: ' d' (ID: 272)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.35430628061294556
    2. 'des' → logprob: -2.104306221008301
    3. ' de' → logprob: -2.229306221008301
    4. ' ' → logprob: -4.229306221008301
    5. 'de' → logprob: -4.229306221008301
    6. ',' → logprob: -4.479306221008301
    7. ' d' → logprob: -4.604306221008301
    8. ' ,' → logprob: -5.729306221008301
    9. '    ' → logprob: -5.854306221008301
    10. 'print' → logprob: -5.979306221008301

Token 1016: ''ar' (ID: 54307)
  Prédit: ' ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ar' → logprob: -0.8097330331802368
    2. 'ar' → logprob: -1.0597330331802368
    3. ' edges' → logprob: -2.8097329139709473
    4. ' ' → logprob: -2.9347329139709473
    5. 'edges' → logprob: -3.1847329139709473
    6. '_edges' → logprob: -4.059732913970947
    7. ''ar' → logprob: -4.309732913970947
    8. 'arest' → logprob: -5.184732913970947
    9. '(edges' → logprob: -5.684732913970947
    10. '_' → logprob: -6.059732913970947

Token 1017: 'êtes' (ID: 23720)
  Prédit: 'êtes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êtes' → logprob: -0.001160100451670587
    2. 'tes' → logprob: -7.251160144805908
    3. '�' → logprob: -8.62615966796875
    4. 'ê' → logprob: -9.50115966796875
    5. 'cs' → logprob: -10.12615966796875
    6. 's' → logprob: -10.75115966796875
    7. 'îtes' → logprob: -10.75115966796875
    8. 'î' → logprob: -10.87615966796875
    9. 'êts' → logprob: -11.00115966796875
    10. 'c' → logprob: -11.75115966796875

Token 1018: ' M' (ID: 391)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0077456324361264706
    2. ',' → logprob: -4.882745742797852
    3. '(N' → logprob: -10.007745742797852
    4. '(' → logprob: -10.007745742797852
    5. '```' → logprob: -10.257745742797852
    6. '()' → logprob: -12.632745742797852
    7. '(print' → logprob: -12.632745742797852
    8. ' print' → logprob: -13.632745742797852
    9. ',N' → logprob: -13.882745742797852
    10. ')' → logprob: -14.007745742797852

Token 1019: ' sur' (ID: 1512)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -8.061054359131958e-06
    2. ',' → logprob: -12.250007629394531
    3. '```' → logprob: -13.125007629394531
    4. ' print' → logprob: -13.875007629394531
    5. '
' → logprob: -15.500007629394531
    6. '``' → logprob: -18.37500762939453
    7. '#print' → logprob: -19.25000762939453
    8. '`' → logprob: -19.75000762939453
    9. '.print' → logprob: -20.25000762939453
    10. '#' → logprob: -20.37500762939453

Token 1020: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.7995007038116455
    2. 'la' → logprob: -2.0495007038116455
    3. 'une' → logprob: -2.0495007038116455
    4. 'print' → logprob: -2.6745007038116455
    5. '"' → logprob: -2.7995007038116455
    6. ' la' → logprob: -2.9245007038116455
    7. 'f' → logprob: -3.2995007038116455
    8. ' f' → logprob: -4.049500465393066
    9. 'un' → logprob: -4.424500465393066
    10. 'le' → logprob: -4.549500465393066

Token 1021: ' même' (ID: 9679)
  Prédit: ' single'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' single' → logprob: -0.06579245626926422
    2. 'single' → logprob: -2.8157925605773926
    3. 'print' → logprob: -6.940792560577393
    4. 'space' → logprob: -7.440792560577393
    5. ' print' → logprob: -7.940792560577393
    6. ' ' → logprob: -7.940792560577393
    7. ' unique' → logprob: -8.065792083740234
    8. ' space' → logprob: -8.190792083740234
    9. ' seul' → logprob: -8.315792083740234
    10. ' seule' → logprob: -8.815792083740234

Token 1022: ' ligne' (ID: 19583)
  Prédit: ' ligne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.042447272688150406
    2. 'ligne' → logprob: -3.542447328567505
    3. ' line' → logprob: -4.417447090148926
    4. ' ' → logprob: -8.167447090148926
    5. 'line' → logprob: -9.542447090148926
    6. ' print' → logprob: -9.917447090148926
    7. ' ' → logprob: -10.042447090148926
    8. 'print' → logprob: -10.292447090148926
    9. ' Ligne' → logprob: -10.917447090148926
    10. '   ' → logprob: -10.917447090148926

Token 1023: ',' (ID: 11)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0027705247048288584
    2. ',' → logprob: -6.37777042388916
    3. ' print' → logprob: -6.87777042388916
    4. '
' → logprob: -10.87777042388916
    5. '```' → logprob: -11.75277042388916
    6. '.print' → logprob: -13.12777042388916
    7. ')' → logprob: -13.25277042388916
    8. ' ,' → logprob: -13.50277042388916
    9. '   ' → logprob: -13.75277042388916
    10. '#print' → logprob: -14.37777042388916

Token 1024: ' sépar' (ID: 97160)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00043102685594931245
    2. ' print' → logprob: -7.750431060791016
    3. 'f' → logprob: -15.125431060791016
    4. '```' → logprob: -18.125431060791016
    5. ' f' → logprob: -19.000431060791016
    6. '   ' → logprob: -19.000431060791016
    7. 'end' → logprob: -20.250431060791016
    8. '"' → logprob: -20.500431060791016
    9. 'printf' → logprob: -20.500431060791016
    10. ',' → logprob: -20.875431060791016

Token 1025: 'és' (ID: 1756)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.11523280292749405
    2. 'és' → logprob: -2.4902327060699463
    3. 'e' → logprob: -3.7402327060699463
    4. ' par' → logprob: -6.740232944488525
    5. 'er' → logprob: -8.115232467651367
    6. 'ée' → logprob: -8.740232467651367
    7. 'es' → logprob: -8.865232467651367
    8. 'space' → logprob: -9.365232467651367
    9. '#' → logprob: -9.740232467651367
    10. 'par' → logprob: -9.990232467651367

Token 1026: ' par' (ID: 686)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.151088148355484
    2. ' par' → logprob: -2.026088237762451
    3. 'by' → logprob: -5.026088237762451
    4. 'b' → logprob: -7.526088237762451
    5. '#' → logprob: -8.776087760925293
    6. '_par' → logprob: -8.901087760925293
    7. '(par' → logprob: -9.151087760925293
    8. 'au' → logprob: -9.401087760925293
    9. 'print' → logprob: -9.526087760925293
    10. ')' → logprob: -9.526087760925293

Token 1027: ' un' (ID: 537)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.4065564274787903
    2. 'un' → logprob: -1.9065563678741455
    3. ''un' → logprob: -2.4065563678741455
    4. ' un' → logprob: -2.5315563678741455
    5. '"' → logprob: -5.281556606292725
    6. 'l' → logprob: -5.406556606292725
    7. 'space' → logprob: -5.406556606292725
    8. ''espace' → logprob: -7.531556606292725
    9. ' ' → logprob: -8.781556129455566
    10. 'es' → logprob: -8.781556129455566

Token 1028: ' espace' (ID: 66004)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'space' → logprob: -0.8987466096878052
    2. ' espace' → logprob: -1.1487466096878052
    3. ''espace' → logprob: -2.1487464904785156
    4. ' space' → logprob: -2.6487464904785156
    5. ''' → logprob: -3.0237464904785156
    6. 'es' → logprob: -4.273746490478516
    7. ' ' → logprob: -4.773746490478516
    8. '’espace' → logprob: -4.898746490478516
    9. 'sp' → logprob: -5.523746490478516
    10. '"' → logprob: -6.273746490478516

Token 1029: '.
' (ID: 558)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -5.200166469876422e-06
    2. '
' → logprob: -12.750004768371582
    3. ' print' → logprob: -13.625004768371582
    4. '```' → logprob: -13.875004768371582
    5. '``' → logprob: -18.5000057220459
    6. '
' → logprob: -19.1250057220459
    7. '.print' → logprob: -20.8750057220459
    8. '#print' → logprob: -20.8750057220459
    9. '  
' → logprob: -21.3750057220459
    10. '(print' → logprob: -21.6250057220459

Token 1030: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.320199877838604e-07
    2. '```' → logprob: -14.75
    3. ' print' → logprob: -19.0
    4. '``' → logprob: -22.625
    5. '`' → logprob: -23.875
    6. '#print' → logprob: -25.125
    7. '
' → logprob: -25.25
    8. 'Print' → logprob: -25.5
    9. '#' → logprob: -25.625
    10. '	print' → logprob: -26.0

Token 1031: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.00525747612118721
    2. '(f' → logprob: -5.255257606506348
    3. '(' → logprob: -10.880257606506348
    4. 'f' → logprob: -12.505257606506348
    5. '(F' → logprob: -15.005257606506348
    6. '("{}' → logprob: -15.005257606506348
    7. 'N' → logprob: -15.755257606506348
    8. ' (' → logprob: -16.00525665283203
    9. '((' → logprob: -16.25525665283203
    10. '(n' → logprob: -17.00525665283203

Token 1032: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004885728703811765
    2. ' ,' → logprob: -7.625488758087158
    3. ',M' → logprob: -15.25048828125
    4. ',end' → logprob: -15.37548828125
    5. ',m' → logprob: -17.62548828125
    6. '```' → logprob: -17.87548828125
    7. ' ' → logprob: -18.62548828125
    8. ' ' → logprob: -18.87548828125
    9. '   ' → logprob: -19.00048828125
    10. ',p' → logprob: -19.12548828125

Token 1033: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -7.636475493200123e-05
    2. ' M' → logprob: -9.500076293945312
    3. ')' → logprob: -13.750076293945312
    4. 'end' → logprob: -14.750076293945312
    5. '"' → logprob: -17.500076293945312
    6. ''' → logprob: -17.750076293945312
    7. ' ' → logprob: -18.375076293945312
    8. ''M' → logprob: -18.625076293945312
    9. '    ' → logprob: -19.000076293945312
    10. '   ' → logprob: -19.375076293945312

Token 1034: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.630610641877865e-06
    2. ')
' → logprob: -12.000006675720215
    3. ' )' → logprob: -15.000006675720215
    4. '),' → logprob: -16.6250057220459
    5. ')`' → logprob: -17.3750057220459
    6. ')
' → logprob: -18.2500057220459
    7. '))' → logprob: -19.1250057220459
    8. ').' → logprob: -19.5000057220459
    9. '")' → logprob: -19.6250057220459
    10. ')

' → logprob: -19.6250057220459

Token 1035: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0009748285519890487
    2. 'print' → logprob: -7.625974655151367
    3. ' for' → logprob: -8.000974655151367
    4. 'edges' → logprob: -9.375974655151367
    5. '<|end|>' → logprob: -10.500974655151367
    6. '#' → logprob: -10.875974655151367
    7. '```' → logprob: -11.125974655151367
    8. '
' → logprob: -13.625974655151367
    9. '  
' → logprob: -14.000974655151367
    10. ' 
' → logprob: -14.500974655151367

Token 1036: ' Pour' (ID: 13931)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: 0.0
    2. ' for' → logprob: -18.75
    3. '	for' → logprob: -22.25
    4. 'print' → logprob: -22.5
    5. '#' → logprob: -23.875
    6. '```' → logprob: -24.375
    7. 'For' → logprob: -26.0
    8. '
' → logprob: -26.625
    9. '   ' → logprob: -26.625
    10. 'from' → logprob: -27.0

Token 1037: ' chaque' (ID: 21194)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.5341746211051941
    2. ' edge' → logprob: -1.0341746807098389
    3. 'e' → logprob: -3.034174680709839
    4. 'u' → logprob: -5.53417444229126
    5. ' e' → logprob: -6.03417444229126
    6. '(edge' → logprob: -6.15917444229126
    7. ' u' → logprob: -7.40917444229126
    8. '(u' → logprob: -7.78417444229126
    9. '(e' → logprob: -7.90917444229126
    10. 'a' → logprob: -9.034174919128418

Token 1038: ' ar' (ID: 646)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.39190953969955444
    2. 'u' → logprob: -1.2669095993041992
    3. 'e' → logprob: -3.766909599304199
    4. '(u' → logprob: -4.391909599304199
    5. ' edge' → logprob: -5.141909599304199
    6. ' u' → logprob: -7.641909599304199
    7. '(edge' → logprob: -7.891909599304199
    8. 'a' → logprob: -9.3919095993042
    9. 's' → logprob: -9.6419095993042
    10. 'x' → logprob: -10.5169095993042

Token 1039: 'ête' (ID: 16808)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.024662526324391365
    2. 'e' → logprob: -3.774662494659424
    3. 'ge' → logprob: -7.274662494659424
    4. 'dge' → logprob: -8.024662971496582
    5. ' edge' → logprob: -9.024662971496582
    6. '(edge' → logprob: -9.649662971496582
    7. 'ege' → logprob: -10.149662971496582
    8. 'egde' → logprob: -10.274662971496582
    9. 'ed' → logprob: -10.899662971496582
    10. '_edge' → logprob: -11.024662971496582

Token 1040: ' stock' (ID: 6546)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6889336705207825
    2. ' in' → logprob: -0.8139336705207825
    3. 'for' → logprob: -2.9389336109161377
    4. 'edge' → logprob: -6.813933849334717
    5. 'e' → logprob: -7.938933849334717
    6. ' for' → logprob: -8.063933372497559
    7. ' edge' → logprob: -10.938933372497559
    8. '```' → logprob: -11.063933372497559
    9. 'i' → logprob: -11.438933372497559
    10. 'en' → logprob: -11.688933372497559

Token 1041: 'ée' (ID: 2894)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.11416182667016983
    2. ' in' → logprob: -2.239161729812622
    3. ',' → logprob: -8.489161491394043
    4. 'e' → logprob: -8.614161491394043
    5. 'for' → logprob: -8.739161491394043
    6. 'es' → logprob: -8.989161491394043
    7. 'dans' → logprob: -9.364161491394043
    8. ')' → logprob: -9.489161491394043
    9. 's' → logprob: -9.614161491394043
    10. '_' → logprob: -9.614161491394043

Token 1042: ' dans' (ID: 2671)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.006729337852448225
    2. ' in' → logprob: -5.0067291259765625
    3. 'edge' → logprob: -12.256729125976562
    4. 'e' → logprob: -12.631729125976562
    5. 'for' → logprob: -13.381729125976562
    6. 'edges' → logprob: -14.006729125976562
    7. 's' → logprob: -14.506729125976562
    8. 'dans' → logprob: -14.506729125976562
    9. '	in' → logprob: -14.881729125976562
    10. '(edges' → logprob: -15.131729125976562

Token 1043: ' la' (ID: 557)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.0027512614615261555
    2. 'edge' → logprob: -6.252751350402832
    3. ' edges' → logprob: -7.127751350402832
    4. 'e' → logprob: -11.002751350402832
    5. '(edges' → logprob: -13.002751350402832
    6. ' edge' → logprob: -15.127751350402832
    7. '   ' → logprob: -15.377751350402832
    8. '```' → logprob: -16.252750396728516
    9. 'ed' → logprob: -16.752750396728516
    10. '.edges' → logprob: -16.877750396728516

Token 1044: ' liste' (ID: 31719)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -7.5649528298527e-05
    2. ' edges' → logprob: -9.500075340270996
    3. 'edge' → logprob: -14.500075340270996
    4. '
' → logprob: -16.500076293945312
    5. '(edges' → logprob: -16.500076293945312
    6. '.edges' → logprob: -17.000076293945312
    7. '```' → logprob: -17.125076293945312
    8. '_edges' → logprob: -17.375076293945312
    9. '   ' → logprob: -18.375076293945312
    10. '[
' → logprob: -18.625076293945312

Token 1045: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.4435255229473114
    2. ' edges' → logprob: -1.0685255527496338
    3. 'edge' → logprob: -4.568525314331055
    4. ' edge' → logprob: -6.318525314331055
    5. '(edges' → logprob: -6.443525314331055
    6. 'in' → logprob: -8.193525314331055
    7. ' in' → logprob: -8.193525314331055
    8. 'for' → logprob: -8.943525314331055
    9. '(edge' → logprob: -9.568525314331055
    10. '_edges' → logprob: -9.568525314331055

Token 1046: ' :
' (ID: 10039)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6335959434509277
    2. ':
' → logprob: -0.8835959434509277
    3. 'for' → logprob: -3.1335959434509277
    4. 'in' → logprob: -4.758595943450928
    5. ',' → logprob: -6.258595943450928
    6. ' in' → logprob: -7.508595943450928
    7. 'edges' → logprob: -8.008596420288086
    8. '_edges' → logprob: -8.133596420288086
    9. ' for' → logprob: -8.258596420288086
    10. '```' → logprob: -8.758596420288086

Token 1047: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.9361264946837764e-07
    2. ' for' → logprob: -16.5
    3. '```' → logprob: -19.875
    4. '   ' → logprob: -22.375
    5. '	for' → logprob: -23.375
    6. '
' → logprob: -23.5
    7. 'print' → logprob: -25.75
    8. '_for' → logprob: -27.0
    9. '``' → logprob: -27.5
    10. 'from' → logprob: -27.5

Token 1048: ' edge' (ID: 11165)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.02079353667795658
    2. '(u' → logprob: -4.020793437957764
    3. 'edge' → logprob: -6.395793437957764
    4. 'e' → logprob: -7.770793437957764
    5. ' u' → logprob: -8.645793914794922
    6. 'start' → logprob: -9.145793914794922
    7. 's' → logprob: -9.270793914794922
    8. 'a' → logprob: -9.645793914794922
    9. 'from' → logprob: -10.145793914794922
    10. '(' → logprob: -11.395793914794922

Token 1049: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.22551926970481873
    2. 'in' → logprob: -1.6005192995071411
    3. '_in' → logprob: -9.975519180297852
    4. '1' → logprob: -11.350519180297852
    5. '	in' → logprob: -11.725519180297852
    6. '_' → logprob: -11.725519180297852
    7. ' (' → logprob: -12.350519180297852
    8. ' ' → logprob: -12.475519180297852
    9. 's' → logprob: -12.475519180297852
    10. '(' → logprob: -12.850519180297852

Token 1050: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.0001584850688232109
    2. ' edges' → logprob: -8.750158309936523
    3. '(edges' → logprob: -17.375158309936523
    4. '.edges' → logprob: -18.875158309936523
    5. 'edge' → logprob: -19.125158309936523
    6. '_edges' → logprob: -20.125158309936523
    7. '   ' → logprob: -21.125158309936523
    8. 'Edges' → logprob: -22.500158309936523
    9. ' ' → logprob: -23.125158309936523
    10. 'ed' → logprob: -23.875158309936523

Token 1051: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009773205034434795
    2. ':
' → logprob: -4.634773254394531
    3. 'print' → logprob: -11.759773254394531
    4. ' :' → logprob: -12.884773254394531
    5. '   ' → logprob: -13.134773254394531
    6. '):' → logprob: -13.509773254394531
    7. ' print' → logprob: -13.634773254394531
    8. ',' → logprob: -14.134773254394531
    9. '):
' → logprob: -14.634773254394531
    10. ':
' → logprob: -15.259773254394531

Token 1052: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16184167563915253
    2. ' print' → logprob: -2.411841630935669
    3. ':' → logprob: -3.286841630935669
    4. 'print' → logprob: -3.911841630935669
    5. ',' → logprob: -6.786841869354248
    6. ':
' → logprob: -7.411841869354248
    7. '```' → logprob: -7.911841869354248
    8. ' :' → logprob: -9.16184139251709
    9. '	print' → logprob: -9.78684139251709
    10. ' ,' → logprob: -10.78684139251709

Token 1053: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.006400342099368572
    2. ' print' → logprob: -5.756400108337402
    3. '   ' → logprob: -5.756400108337402
    4. 'u' → logprob: -10.256400108337402
    5. 'a' → logprob: -11.006400108337402
    6. '```' → logprob: -13.631400108337402
    7. ' u' → logprob: -13.756400108337402
    8. '	print' → logprob: -15.006400108337402
    9. 'v' → logprob: -15.131400108337402
    10. 'x' → logprob: -15.256400108337402

Token 1054: ' Dé' (ID: 27247)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0002941095153801143
    2. 'u' → logprob: -8.250293731689453
    3. '   ' → logprob: -11.125293731689453
    4. 'a' → logprob: -11.500293731689453
    5. ' print' → logprob: -11.750293731689453
    6. 'x' → logprob: -17.000293731689453
    7. ' u' → logprob: -17.125293731689453
    8. 'v' → logprob: -17.375293731689453
    9. '    
' → logprob: -17.875293731689453
    10. '```' → logprob: -18.000293731689453

Token 1055: 'compact' (ID: 82805)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.5806125998497009
    2. 'print' → logprob: -0.8306125998497009
    3. '   ' → logprob: -5.955612659454346
    4. 'parts' → logprob: -6.330612659454346
    5. 'parte' → logprob: -9.830612182617188
    6. 'par' → logprob: -9.830612182617188
    7. '    ' → logprob: -10.330612182617188
    8. ' print' → logprob: -10.330612182617188
    9. '  ' → logprob: -10.705612182617188
    10. 'pr' → logprob: -11.205612182617188

Token 1056: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.35156309604644775
    2. 'edge' → logprob: -1.7265630960464478
    3. '(edge' → logprob: -2.726562976837158
    4. 'age' → logprob: -3.226562976837158
    5. 'le' → logprob: -4.601562976837158
    6. '(e' → logprob: -6.726562976837158
    7. 'er' → logprob: -7.726562976837158
    8. '   ' → logprob: -7.851562976837158
    9. '(' → logprob: -8.226563453674316
    10. ' edge' → logprob: -8.476563453674316

Token 1057: ' le' (ID: 505)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.034637290984392166
    2. 'edge' → logprob: -3.784637212753296
    3. 'a' → logprob: -5.409637451171875
    4. 'start' → logprob: -6.159637451171875
    5. '*u' → logprob: -7.159637451171875
    6. '(u' → logprob: -7.284637451171875
    7. 'from' → logprob: -7.409637451171875
    8. 'src' → logprob: -7.534637451171875
    9. '*' → logprob: -7.534637451171875
    10. 's' → logprob: -8.284637451171875

Token 1058: ' tuple' (ID: 31311)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.01870303601026535
    2. 'start' → logprob: -4.268702983856201
    3. 'a' → logprob: -5.893702983856201
    4. 'edge' → logprob: -7.518702983856201
    5. 'src' → logprob: -8.14370346069336
    6. 'from' → logprob: -8.51870346069336
    7. 'depart' → logprob: -8.51870346069336
    8. 'frm' → logprob: -8.76870346069336
    9. '(u' → logprob: -8.89370346069336
    10. 's' → logprob: -9.01870346069336

Token 1059: ' '' (ID: 461)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.05410302057862282
    2. '(u' → logprob: -3.054103136062622
    3. 'start' → logprob: -5.804102897644043
    4. 'a' → logprob: -6.929102897644043
    5. 'from' → logprob: -7.679102897644043
    6. 'edge' → logprob: -7.804102897644043
    7. 'src' → logprob: -8.929102897644043
    8. 'depart' → logprob: -9.304102897644043
    9. 's' → logprob: -9.554102897644043
    10. '(de' → logprob: -10.054102897644043

Token 1060: 'edge' (ID: 13457)
  Prédit: 'edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.005864682607352734
    2. 'u' → logprob: -5.50586462020874
    3. 'start' → logprob: -7.38086462020874
    4. '(edge' → logprob: -8.005865097045898
    5. '(u' → logprob: -8.880865097045898
    6. '(*' → logprob: -8.880865097045898
    7. '*' → logprob: -8.880865097045898
    8. '*u' → logprob: -9.380865097045898
    9. 'src' → logprob: -9.505865097045898
    10. 'a' → logprob: -9.630865097045898

Token 1061: ''' (ID: 6)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.5910451412200928
    2. '   ' → logprob: -2.9660451412200928
    3. '(u' → logprob: -3.2160451412200928
    4. 'from' → logprob: -3.3410451412200928
    5. ' =' → logprob: -3.5910451412200928
    6. 'start' → logprob: -3.7160451412200928
    7. 'src' → logprob: -3.8410451412200928
    8. 'de' → logprob: -3.9660451412200928
    9. 'depart' → logprob: -3.9660451412200928
    10. '_depart' → logprob: -3.9660451412200928

Token 1062: ' et' (ID: 859)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.06546825170516968
    2. '(u' → logprob: -3.9404683113098145
    3. '   ' → logprob: -4.3154683113098145
    4. 'start' → logprob: -4.4404683113098145
    5. 'src' → logprob: -5.0654683113098145
    6. 'a' → logprob: -6.0654683113098145
    7. ',' → logprob: -6.3154683113098145
    8. 'from' → logprob: -6.5654683113098145
    9. ' u' → logprob: -7.1904683113098145
    10. ',u' → logprob: -7.3154683113098145

Token 1063: ' affiche' (ID: 127479)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.030632173642516136
    2. 'u' → logprob: -3.905632257461548
    3. 'start' → logprob: -5.280632019042969
    4. '(u' → logprob: -6.405632019042969
    5. 'a' → logprob: -7.030632019042969
    6. 'for' → logprob: -7.280632019042969
    7. 'src' → logprob: -8.030632019042969
    8. '   ' → logprob: -8.155632019042969
    9. 'from' → logprob: -8.405632019042969
    10. 's' → logprob: -8.655632019042969

Token 1064: ' ses' (ID: 6707)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.2224494367837906
    2. '(*' → logprob: -1.9724494218826294
    3. '(edge' → logprob: -2.972449541091919
    4. '*' → logprob: -4.84744930267334
    5. 'f' → logprob: -7.47244930267334
    6. ' edge' → logprob: -7.72244930267334
    7. '(f' → logprob: -8.84744930267334
    8. '*f' → logprob: -9.34744930267334
    9. '=edge' → logprob: -10.72244930267334
    10. 'print' → logprob: -11.34744930267334

Token 1065: ' trois' (ID: 25564)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.1377803534269333
    2. '*' → logprob: -2.1377804279327393
    3. 'components' → logprob: -6.26278018951416
    4. 'elements' → logprob: -6.38778018951416
    5. ' edge' → logprob: -6.38778018951416
    6. 'f' → logprob: -6.63778018951416
    7. '*f' → logprob: -6.63778018951416
    8. '(edge' → logprob: -7.13778018951416
    9. '(*' → logprob: -7.76278018951416
    10. 'e' → logprob: -8.38778018951416

Token 1066: ' compos' (ID: 14635)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.2123575508594513
    2. 'edge' → logprob: -2.212357521057129
    3. 'elements' → logprob: -2.837357521057129
    4. 'values' → logprob: -4.837357521057129
    5. 'components' → logprob: -5.462357521057129
    6. '(edge' → logprob: -5.712357521057129
    7. ' elements' → logprob: -6.337357521057129
    8. ' edge' → logprob: -6.337357521057129
    9. 'élé' → logprob: -7.462357521057129
    10. ' values' → logprob: -7.462357521057129

Token 1067: 'antes' (ID: 5193)
  Prédit: 'ponents'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ponents' → logprob: -1.0345168113708496
    2. 'pos' → logprob: -1.1595168113708496
    3. 'ents' → logprob: -1.4095168113708496
    4. 'antes' → logprob: -3.1595168113708496
    5. 'ants' → logprob: -3.2845168113708496
    6. 'on' → logprob: -6.65951681137085
    7. 'nts' → logprob: -6.65951681137085
    8. 'pon' → logprob: -7.40951681137085
    9. 'n' → logprob: -7.40951681137085
    10. '(' → logprob: -7.40951681137085

Token 1068: ' sur' (ID: 1512)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7129789590835571
    2. '(*' → logprob: -0.7129789590835571
    3. '(edge' → logprob: -4.712978839874268
    4. 'edge' → logprob: -4.837978839874268
    5. ',' → logprob: -7.087978839874268
    6. '   ' → logprob: -7.962978839874268
    7. 'for' → logprob: -8.087979316711426
    8. '*' → logprob: -8.212979316711426
    9. '()' → logprob: -8.337979316711426
    10. '(' → logprob: -8.462979316711426

Token 1069: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.1828366070985794
    2. 'une' → logprob: -2.3078365325927734
    3. 'print' → logprob: -4.182836532592773
    4. ' la' → logprob: -4.432836532592773
    5. '1' → logprob: -4.807836532592773
    6. '   ' → logprob: -4.807836532592773
    7. 'la' → logprob: -5.057836532592773
    8. 'l' → logprob: -5.557836532592773
    9. 'le' → logprob: -6.182836532592773
    10. ')' → logprob: -6.432836532592773

Token 1070: ' même' (ID: 9679)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.03639871999621391
    2. ' print' → logprob: -3.4113986492156982
    3. '```' → logprob: -6.786398887634277
    4. '   ' → logprob: -7.536398887634277
    5. 'ligne' → logprob: -8.036398887634277
    6. '1' → logprob: -8.411398887634277
    7. '`' → logprob: -8.661398887634277
    8. ' une' → logprob: -9.286398887634277
    9. ''' → logprob: -10.286398887634277
    10. 'line' → logprob: -10.536398887634277

Token 1071: ' ligne' (ID: 19583)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3425999879837036
    2. 'ligne' → logprob: -1.3425999879837036
    3. ' ligne' → logprob: -3.967599868774414
    4. 'line' → logprob: -4.967599868774414
    5. ' print' → logprob: -6.842599868774414
    6. ' line' → logprob: -7.217599868774414
    7. ' ' → logprob: -8.342599868774414
    8. '   ' → logprob: -8.342599868774414
    9. 'l' → logprob: -8.467599868774414
    10. '```' → logprob: -8.967599868774414

Token 1072: ',' (ID: 11)
  Prédit: '(*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.05322866141796112
    2. '   ' → logprob: -3.4282286167144775
    3. 'print' → logprob: -4.178228855133057
    4. ',' → logprob: -6.178228855133057
    5. '()' → logprob: -7.053228855133057
    6. '*' → logprob: -7.178228855133057
    7. ' print' → logprob: -9.303228378295898
    8. 'for' → logprob: -9.428228378295898
    9. '(' → logprob: -10.053228378295898
    10. '```' → logprob: -10.053228378295898

Token 1073: ' sépar' (ID: 97160)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.10145103186368942
    2. 'edge' → logprob: -2.8514509201049805
    3. 'print' → logprob: -4.1014509201049805
    4. ' *' → logprob: -4.3514509201049805
    5. ' edge' → logprob: -5.3514509201049805
    6. '*f' → logprob: -5.6014509201049805
    7. 'f' → logprob: -8.35145092010498
    8. ' print' → logprob: -8.85145092010498
    9. '(*' → logprob: -8.85145092010498
    10. '   ' → logprob: -9.22645092010498

Token 1074: 'ées' (ID: 5161)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.44765686988830566
    2. 'ées' → logprob: -1.6976568698883057
    3. 'és' → logprob: -2.4476568698883057
    4. 'ée' → logprob: -3.3226568698883057
    5. 'es' → logprob: -3.5726568698883057
    6. ' par' → logprob: -4.322656631469727
    7. 'e' → logprob: -4.947656631469727
    8. 'er' → logprob: -6.197656631469727
    9. 'ément' → logprob: -7.572656631469727
    10. 'par' → logprob: -7.697656631469727

Token 1075: ' par' (ID: 686)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.6438486576080322
    2. 'by' → logprob: -0.7688486576080322
    3. ' par' → logprob: -5.143848419189453
    4. 'print' → logprob: -6.393848419189453
    5. '('' → logprob: -6.768848419189453
    6. '```' → logprob: -8.143848419189453
    7. ' by' → logprob: -8.268848419189453
    8. 'de' → logprob: -8.518848419189453
    9. 'au' → logprob: -8.518848419189453
    10. ''' → logprob: -8.643848419189453

Token 1076: ' des' (ID: 731)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.46582895517349243
    2. 'es' → logprob: -2.2158288955688477
    3. '"' → logprob: -2.4658288955688477
    4. 'un' → logprob: -2.8408288955688477
    5. 'spaces' → logprob: -3.3408288955688477
    6. 'space' → logprob: -3.5908288955688477
    7. ''espace' → logprob: -4.215828895568848
    8. '```' → logprob: -4.340828895568848
    9. ''un' → logprob: -5.215828895568848
    10. 'des' → logprob: -5.215828895568848

Token 1077: ' espaces' (ID: 98361)
  Prédit: ' espaces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espaces' → logprob: -0.911047101020813
    2. 'es' → logprob: -1.786047101020813
    3. 'space' → logprob: -1.911047101020813
    4. ' espace' → logprob: -2.5360469818115234
    5. 'esp' → logprob: -2.9110469818115234
    6. ''espace' → logprob: -3.0360469818115234
    7. 'spaces' → logprob: -3.2860469818115234
    8. ''' → logprob: -3.5360469818115234
    9. ' ' → logprob: -5.161046981811523
    10. ''esp' → logprob: -5.411046981811523

Token 1078: '.
' (ID: 558)
  Prédit: '(*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.351639062166214
    2. '   ' → logprob: -1.6016390323638916
    3. ',' → logprob: -3.1016390323638916
    4. 'print' → logprob: -3.3516390323638916
    5. '```' → logprob: -5.851639270782471
    6. '(' → logprob: -6.101639270782471
    7. '(edge' → logprob: -6.226639270782471
    8. '()
' → logprob: -6.226639270782471
    9. ':' → logprob: -6.601639270782471
    10. '    
' → logprob: -6.851639270782471

Token 1079: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.000491672137286514
    2. '   ' → logprob: -8.500492095947266
    3. '```' → logprob: -8.625492095947266
    4. ' print' → logprob: -9.750492095947266
    5. '    
' → logprob: -10.500492095947266
    6. 'f' → logprob: -11.875492095947266
    7. '  
' → logprob: -12.375492095947266
    8. '`' → logprob: -13.000492095947266
    9. '``' → logprob: -13.000492095947266
    10. '{' → logprob: -13.250492095947266

Token 1080: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0025541423819959164
    2. 'u' → logprob: -6.002553939819336
    3. '   ' → logprob: -10.252553939819336
    4. ' print' → logprob: -10.502553939819336
    5. 'a' → logprob: -11.252553939819336
    6. ' u' → logprob: -13.002553939819336
    7. 'v' → logprob: -15.877553939819336
    8. 'start' → logprob: -16.127553939819336
    9. 'x' → logprob: -16.252553939819336
    10. '```' → logprob: -16.627553939819336

Token 1081: ' L' (ID: 451)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.01360519602894783
    2. 'u' → logprob: -5.388605117797852
    3. ' print' → logprob: -5.388605117797852
    4. '   ' → logprob: -5.638605117797852
    5. ' u' → logprob: -7.138605117797852
    6. 'a' → logprob: -11.513605117797852
    7. '```' → logprob: -12.138605117797852
    8. 'v' → logprob: -13.388605117797852
    9. 'x' → logprob: -13.388605117797852
    10. 's' → logprob: -13.888605117797852

Token 1082: ''é' (ID: 12728)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6802395582199097
    2. 'e' → logprob: -1.5552395582199097
    3. 'print' → logprob: -1.6802395582199097
    4. '=' → logprob: -3.305239677429199
    5. ',' → logprob: -4.180239677429199
    6. 'for' → logprob: -4.430239677429199
    7. '   ' → logprob: -5.180239677429199
    8. '1' → logprob: -5.555239677429199
    9. ' print' → logprob: -5.555239677429199
    10. 'et' → logprob: -5.805239677429199

Token 1083: 'to' (ID: 935)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.43051162362098694
    2. '=' → logprob: -1.9305115938186646
    3. 'e' → logprob: -1.9305115938186646
    4. ' =' → logprob: -3.680511713027954
    5. 'for' → logprob: -4.305511474609375
    6. '#' → logprob: -5.430511474609375
    7. '```' → logprob: -5.555511474609375
    8. 'a' → logprob: -6.180511474609375
    9. '=end' → logprob: -6.930511474609375
    10. '=edge' → logprob: -7.055511474609375

Token 1084: 'ile' (ID: 554)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.11289822310209274
    2. 'for' → logprob: -2.987898111343384
    3. '*' → logprob: -3.112898111343384
    4. 'r' → logprob: -5.862898349761963
    5. 'p' → logprob: -6.237898349761963
    6. '=' → logprob: -6.612898349761963
    7. 'end' → logprob: -7.112898349761963
    8. 's' → logprob: -7.362898349761963
    9. '   ' → logprob: -7.987898349761963
    10. 'nd' → logprob: -7.987898349761963

Token 1085: ' (*)' (ID: 77997)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.10202731192111969
    2. 'print' → logprob: -2.352027416229248
    3. 'edge' → logprob: -7.102027416229248
    4. '(*' → logprob: -7.227027416229248
    5. '   ' → logprob: -9.10202693939209
    6. ' *' → logprob: -9.85202693939209
    7. '(edge' → logprob: -10.72702693939209
    8. 'for' → logprob: -11.60202693939209
    9. '*
' → logprob: -11.85202693939209
    10. 'un' → logprob: -11.97702693939209

Token 1086: ' permet' (ID: 11798)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.005205294117331505
    2. 'edge' → logprob: -5.880205154418945
    3. '*' → logprob: -6.880205154418945
    4. ',' → logprob: -7.130205154418945
    5. '=edge' → logprob: -8.255205154418945
    6. '(edge' → logprob: -9.255205154418945
    7. ')' → logprob: -9.630205154418945
    8. ' print' → logprob: -10.505205154418945
    9. '=' → logprob: -11.005205154418945
    10. '(*' → logprob: -11.130205154418945

Token 1087: ' d' (ID: 272)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.06313865631818771
    2. '*' → logprob: -2.813138723373413
    3. '   ' → logprob: -7.438138484954834
    4. 'edge' → logprob: -7.563138484954834
    5. '```' → logprob: -11.063138961791992
    6. 'for' → logprob: -11.563138961791992
    7. ' print' → logprob: -11.813138961791992
    8. '
' → logprob: -11.938138961791992
    9. '    
' → logprob: -11.938138961791992
    10. '#' → logprob: -12.438138961791992

Token 1088: ''ét' (ID: 23771)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0034338808618485928
    2. '*' → logprob: -5.753433704376221
    3. 'edge' → logprob: -8.753434181213379
    4. 'r' → logprob: -10.003434181213379
    5. 'un' → logprob: -10.503434181213379
    6. ' print' → logprob: -11.878434181213379
    7. '```' → logprob: -12.253434181213379
    8. 'printf' → logprob: -13.378434181213379
    9. 'expand' → logprob: -13.503434181213379
    10. 'pr' → logprob: -13.503434181213379

Token 1089: 'endre' (ID: 9574)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -1.439330816268921
    2. 'endre' → logprob: -1.439330816268921
    3. 'ailer' → logprob: -1.939330816268921
    4. 'oyer' → logprob: -2.689330816268921
    5. 'irer' → logprob: -2.939330816268921
    6. 'iler' → logprob: -3.189330816268921
    7. 'er' → logprob: -3.314330816268921
    8. 'print' → logprob: -3.939330816268921
    9. 'iter' → logprob: -4.0643310546875
    10. 'crire' → logprob: -4.5643310546875

Token 1090: ' le' (ID: 505)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.0006347587914206088
    2. ' edge' → logprob: -7.375634670257568
    3. '(edge' → logprob: -12.000635147094727
    4. '*' → logprob: -13.375635147094727
    5. '=edge' → logprob: -15.750635147094727
    6. 'print' → logprob: -16.125635147094727
    7. 'edges' → logprob: -16.750635147094727
    8. '-edge' → logprob: -16.875635147094727
    9. '_edge' → logprob: -17.000635147094727
    10. ')' → logprob: -18.125635147094727

Token 1091: ' tuple' (ID: 31311)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edge' → logprob: -2.5107177862082608e-05
    2. ' edge' → logprob: -10.625024795532227
    3. '(edge' → logprob: -14.625024795532227
    4. 'tuple' → logprob: -15.375024795532227
    5. '*' → logprob: -17.500024795532227
    6. 'edges' → logprob: -17.625024795532227
    7. '=edge' → logprob: -17.750024795532227
    8. '-edge' → logprob: -17.875024795532227
    9. '_edge' → logprob: -18.750024795532227
    10. '.edge' → logprob: -19.000024795532227

Token 1092: ' pour' (ID: 1930)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.20830920338630676
    2. '*' → logprob: -2.2083091735839844
    3. 'print' → logprob: -3.0833091735839844
    4. ' edge' → logprob: -3.4583091735839844
    5. '(edge' → logprob: -7.833309173583984
    6. ' print' → logprob: -8.333309173583984
    7. '(*' → logprob: -9.333309173583984
    8. '   ' → logprob: -9.708309173583984
    9. '=edge' → logprob: -10.333309173583984
    10. ',' → logprob: -10.708309173583984

Token 1093: ' que' (ID: 661)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.001198562909848988
    2. 'edge' → logprob: -6.751198768615723
    3. ' print' → logprob: -10.751198768615723
    4. '*' → logprob: -12.001198768615723
    5. ' edge' → logprob: -14.376198768615723
    6. '   ' → logprob: -16.251197814941406
    7. 'printf' → logprob: -17.376197814941406
    8. ' ' → logprob: -18.126197814941406
    9. '  ' → logprob: -18.376197814941406
    10. 'end' → logprob: -18.501197814941406

Token 1094: ' chaque' (ID: 21194)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.030308065935969353
    2. '*' → logprob: -3.7803080081939697
    3. 'edge' → logprob: -5.030308246612549
    4. ' print' → logprob: -7.655308246612549
    5. ' edge' → logprob: -10.65530776977539
    6. '(*' → logprob: -14.15530776977539
    7. ' *' → logprob: -14.28030776977539
    8. '   ' → logprob: -14.28030776977539
    9. '
' → logprob: -14.53030776977539
    10. '```' → logprob: -14.78030776977539

Token 1095: ' valeur' (ID: 41664)
  Prédit: 'element'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'element' → logprob: -0.4280042052268982
    2. '*' → logprob: -1.428004264831543
    3. 'edge' → logprob: -3.178004264831543
    4. 'value' → logprob: -3.178004264831543
    5. 'component' → logprob: -4.053004264831543
    6. 'elem' → logprob: -5.553004264831543
    7. 'print' → logprob: -6.178004264831543
    8. 'item' → logprob: -6.803004264831543
    9. 'val' → logprob: -8.178004264831543
    10. ' element' → logprob: -9.428004264831543

Token 1096: ' soit' (ID: 17293)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.4399941563606262
    2. 'print' → logprob: -1.0649940967559814
    3. ' print' → logprob: -4.8149943351745605
    4. ')' → logprob: -6.6899943351745605
    5. ' *' → logprob: -7.3149943351745605
    6. '   ' → logprob: -8.564993858337402
    7. '=edge' → logprob: -8.564993858337402
    8. 'edge' → logprob: -8.689993858337402
    9. '=' → logprob: -8.814993858337402
    10. ',' → logprob: -9.439993858337402

Token 1097: ' un' (ID: 537)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.001992755103856325
    2. ' print' → logprob: -6.376992702484131
    3. 'printed' → logprob: -8.751993179321289
    4. 'edge' → logprob: -9.501993179321289
    5. ' printed' → logprob: -10.376993179321289
    6. ' edge' → logprob: -11.001993179321289
    7. 'aff' → logprob: -13.626993179321289
    8. '_print' → logprob: -13.751993179321289
    9. 'prin' → logprob: -13.751993179321289
    10. 'output' → logprob: -13.876993179321289

Token 1098: ' argument' (ID: 10383)
  Prédit: 'argument'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'argument' → logprob: -0.8498880863189697
    2. 'élé' → logprob: -1.0998880863189697
    3. 'print' → logprob: -2.4748880863189697
    4. 'str' → logprob: -2.7248880863189697
    5. 'element' → logprob: -3.3498880863189697
    6. 'arg' → logprob: -3.4748880863189697
    7. 'edge' → logprob: -4.099887847900391
    8. 'param' → logprob: -6.599887847900391
    9. '```' → logprob: -6.599887847900391
    10. 'val' → logprob: -6.974887847900391

Token 1099: ' individuel' (ID: 178936)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1612175852060318
    2. '*' → logprob: -1.9112175703048706
    3. ' print' → logprob: -7.91121768951416
    4. '(*' → logprob: -8.28621768951416
    5. 'edge' → logprob: -8.53621768951416
    6. '   ' → logprob: -8.91121768951416
    7. ')' → logprob: -11.16121768951416
    8. 'printf' → logprob: -12.66121768951416
    9. '(edge' → logprob: -12.78621768951416
    10. 'for' → logprob: -12.91121768951416

Token 1100: ' pour' (ID: 1930)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.13154664635658264
    2. '*' → logprob: -2.75654673576355
    3. ',' → logprob: -3.13154673576355
    4. '(*' → logprob: -4.881546497344971
    5. ')' → logprob: -5.131546497344971
    6. '   ' → logprob: -6.381546497344971
    7. ',*' → logprob: -7.631546497344971
    8. 'edge' → logprob: -8.506546974182129
    9. ' print' → logprob: -9.381546974182129
    10. 'for' → logprob: -10.506546974182129

Token 1101: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. ' print' → logprob: -18.5
    3. '```' → logprob: -19.625
    4. 'printf' → logprob: -21.625
    5. 'prin' → logprob: -23.25
    6. '#print' → logprob: -23.25
    7. '   ' → logprob: -23.875
    8. 'pr' → logprob: -24.0
    9. '
' → logprob: -25.375
    10. '(print' → logprob: -25.5

Token 1102: '(),' (ID: 2547)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6683712005615234
    2. 'print' → logprob: -0.7933712005615234
    3. '(*' → logprob: -3.5433712005615234
    4. '   ' → logprob: -6.043371200561523
    5. ')' → logprob: -6.418371200561523
    6. 'edge' → logprob: -6.543371200561523
    7. ',' → logprob: -7.543371200561523
    8. ',*' → logprob: -10.168371200561523
    9. ' print' → logprob: -10.543371200561523
    10. '(edge' → logprob: -10.668371200561523

Token 1103: ' produ' (ID: 2443)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.00013679367839358747
    2. 'print' → logprob: -9.125136375427246
    3. ' *' → logprob: -11.250136375427246
    4. '(*' → logprob: -11.625136375427246
    5. '   ' → logprob: -12.625136375427246
    6. '*p' → logprob: -14.375136375427246
    7. '*out' → logprob: -14.500136375427246
    8. '```' → logprob: -15.125136375427246
    9. 'edge' → logprob: -15.125136375427246
    10. '*a' → logprob: -16.000137329101562

Token 1104: 'isant' (ID: 56111)
  Prédit: 'ise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ise' → logprob: -0.18390415608882904
    2. 'it' → logprob: -1.9339041709899902
    3. 'isant' → logprob: -4.43390417098999
    4. 'ite' → logprob: -4.55890417098999
    5. 'isent' → logprob: -7.55890417098999
    6. 'is' → logprob: -8.308903694152832
    7. 'i' → logprob: -10.308903694152832
    8. 'its' → logprob: -10.558903694152832
    9. 'ire' → logprob: -10.683903694152832
    10. 'isit' → logprob: -10.683903694152832

Token 1105: ' ainsi' (ID: 16371)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.0246173944324255
    2. 'edge' → logprob: -3.7746174335479736
    3. ' edge' → logprob: -7.1496171951293945
    4. ' *' → logprob: -7.8996171951293945
    5. 'end' → logprob: -9.774617195129395
    6. '(*' → logprob: -9.774617195129395
    7. '(edge' → logprob: -11.024617195129395
    8. '*a' → logprob: -11.399617195129395
    9. 'print' → logprob: -11.399617195129395
    10. ' ' → logprob: -11.774617195129395

Token 1106: ' '' (ID: 461)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.010737106204032898
    2. 'edge' → logprob: -4.63573694229126
    3. ' *' → logprob: -7.51073694229126
    4. ' edge' → logprob: -8.135737419128418
    5. '(*' → logprob: -10.260737419128418
    6. 'print' → logprob: -11.385737419128418
    7. 'end' → logprob: -11.385737419128418
    8. '(edge' → logprob: -11.635737419128418
    9. '   ' → logprob: -11.885737419128418
    10. '```' → logprob: -11.885737419128418

Token 1107: 'dé' (ID: 98340)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.0017132589127868414
    2. '(*' → logprob: -6.751713275909424
    3. ' *' → logprob: -8.376712799072266
    4. '*N' → logprob: -8.751712799072266
    5. 'edge' → logprob: -9.876712799072266
    6. '*f' → logprob: -10.501712799072266
    7. '*p' → logprob: -10.626712799072266
    8. '*n' → logprob: -11.751712799072266
    9. '*s' → logprob: -11.751712799072266
    10. '*a' → logprob: -12.251712799072266

Token 1108: 'part' (ID: 5815)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.49897149205207825
    2. '*' → logprob: -0.9989714622497559
    3. 'f' → logprob: -4.873971462249756
    4. 'part' → logprob: -5.373971462249756
    5. 'nt' → logprob: -5.748971462249756
    6. '(*' → logprob: -6.373971462249756
    7. 'edge' → logprob: -6.373971462249756
    8. '*f' → logprob: -6.373971462249756
    9. 'par' → logprob: -7.373971462249756
    10. 'r' → logprob: -7.498971462249756

Token 1109: ' arrivée' (ID: 117487)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008089910261332989
    2. ',*' → logprob: -5.508090019226074
    3. '*' → logprob: -6.008090019226074
    4. ',end' → logprob: -7.258090019226074
    5. ' ,' → logprob: -8.133090019226074
    6. '*,' → logprob: -8.383090019226074
    7. '(*' → logprob: -8.383090019226074
    8. '   ' → logprob: -10.883090019226074
    9. ')' → logprob: -11.008090019226074
    10. 'end' → logprob: -11.883090019226074

Token 1110: ' poids' (ID: 56058)
  Prédit: ' poids'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' poids' → logprob: -0.09143049269914627
    2. ' edge' → logprob: -3.591430425643921
    3. ' weight' → logprob: -3.841430425643921
    4. ',' → logprob: -4.3414306640625
    5. 'po' → logprob: -4.4664306640625
    6. ' ,' → logprob: -5.7164306640625
    7. '*' → logprob: -5.7164306640625
    8. 'weight' → logprob: -6.3414306640625
    9. ' po' → logprob: -6.7164306640625
    10. ' *' → logprob: -6.7164306640625

Token 1111: ''.
' (ID: 49980)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6070358753204346
    2. '(*' → logprob: -1.3570358753204346
    3. ')' → logprob: -1.7320358753204346
    4. ',*' → logprob: -4.7320356369018555
    5. '*' → logprob: -5.1070356369018555
    6. '(edge' → logprob: -5.7320356369018555
    7. '*)' → logprob: -7.3570356369018555
    8. ')*' → logprob: -7.6070356369018555
    9. '   ' → logprob: -7.9820356369018555
    10. ' ,' → logprob: -8.607035636901855

Token 1112: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.02326306514441967
    2. '   ' → logprob: -3.7732629776000977
    3. ' print' → logprob: -12.023262977600098
    4. '```' → logprob: -12.148262977600098
    5. '    
' → logprob: -12.273262977600098
    6. '
' → logprob: -14.773262977600098
    7. 'for' → logprob: -14.773262977600098
    8. '  ' → logprob: -15.148262977600098
    9. '	print' → logprob: -16.273263931274414
    10. '(*' → logprob: -16.398263931274414

Token 1113: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.735893965815194e-05
    2. '   ' → logprob: -11.000017166137695
    3. ' print' → logprob: -14.500017166137695
    4. '```' → logprob: -16.125017166137695
    5. '	print' → logprob: -20.875017166137695
    6. '  ' → logprob: -21.750017166137695
    7. '#print' → logprob: -22.125017166137695
    8. '    
' → logprob: -22.125017166137695
    9. '(print' → logprob: -22.875017166137695
    10. '
' → logprob: -23.000017166137695

Token 1114: '(*' (ID: 9000)
  Prédit: '(*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -5.512236498361744e-07
    2. '*' → logprob: -15.250000953674316
    3. '(' → logprob: -15.500000953674316
    4. '(*)' → logprob: -17.5
    5. ' (*' → logprob: -21.5
    6. '((*' → logprob: -21.625
    7. '(*(' → logprob: -23.125
    8. '(
' → logprob: -23.5
    9. '(**' → logprob: -24.125
    10. '()' → logprob: -24.5

Token 1115: 'edge' (ID: 13457)
  Prédit: 'edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: 0.0
    2. ' edge' → logprob: -16.75
    3. '(edge' → logprob: -20.5
    4. 'edges' → logprob: -21.625
    5. '=edge' → logprob: -22.125
    6. '.edge' → logprob: -23.875
    7. 'tuple' → logprob: -24.0
    8. ')' → logprob: -24.625
    9. '_edge' → logprob: -24.625
    10. 'Edge' → logprob: -25.25

Token 1116: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. ' )' → logprob: -15.25
    3. ')
' → logprob: -16.0
    4. ')}' → logprob: -17.375
    5. '))' → logprob: -18.0
    6. ')#' → logprob: -18.5
    7. '),' → logprob: -18.75
    8. ')`' → logprob: -19.0
    9. '())' → logprob: -19.25
    10. '   ' → logprob: -20.0


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1114
Tokens correctement prédits (1ère position, stricte): 235
Tokens correctement prédits (1ère position, avec adaptation): 241
Tokens correctement prédits (top 10): 574
Précision stricte (1ère position): 21.10%
Précision adaptée (1ère position): 21.63%
Précision (top 10): 51.53%
================================================================================
