================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:51:24
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def s0():
    return input()

def s1():
    return input().split()

def s2(n):
    return [input() for _ in range(n)]

def s3(n):
    return [input().split() for _ in range(n)]

def s4(n):
    return [[x for x in s] for s in s2(n)]

def n0():
    return int(input())

def n1():
    return [int(x) for x in input().split()]

def n2(n):
    return [int(input()) for _ in range(n)]

def n3(n):
    return [[int(x) for x in input().split()] for _ in range(n)]

def t3(n):
    return [tuple(int(x) for x in input().split()) for _ in range(n)]

def p0(b, yes="Yes", no="No"):
    print(yes if b else no)

# from sys import setrecursionlimit
# setrecursionlimit(1000000)
# from collections import Counter, deque, defaultdict
# import itertools
# import math
# import networkx
# from bisect import bisect_left, bisect_right
# from heapq import heapify, heappush, heappop

n = n0()
a = n2(n)
b = sorted(a)
m1 = b[-1]
m2 = b[-2]

for i in a:
    p0(i == m1, m2, m1)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' s' (ID: 265)
  → Token d'amorce (pas de prédiction)

Token 2: '0' (ID: 15)
  → Token d'amorce (pas de prédiction)

Token 3: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.025050457566976547
    2. '_' → logprob: -4.775050640106201
    3. '(:' → logprob: -5.025050640106201
    4. '(a' → logprob: -5.525050640106201
    5. '```' → logprob: -6.900050640106201
    6. '(_:' → logprob: -7.025050640106201
    7. 'a' → logprob: -7.400050640106201
    8. '():' → logprob: -7.525050640106201
    9. '[' → logprob: -7.650050640106201
    10. '(n' → logprob: -8.275050163269043

Token 4: '   ' (ID: 271)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.06403626501560211
    2. '\' → logprob: -3.1890363693237305
    3. ':' → logprob: -5.1890363693237305
    4. '   ' → logprob: -5.4390363693237305
    5. '```' → logprob: -5.6890363693237305
    6. ''\' → logprob: -6.3140363693237305
    7. '
' → logprob: -6.5640363693237305
    8. '(' → logprob: -6.9390363693237305
    9. '    
' → logprob: -7.1890363693237305
    10. '    ' → logprob: -8.18903636932373

Token 5: ' return' (ID: 622)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.2222716361284256
    2. 'return' (adapté à ' return') → logprob: -2.597271680831909
    3. '   ' → logprob: -3.222271680831909
    4. 'a' → logprob: -4.22227144241333
    5. '\' → logprob: -4.34727144241333
    6. 'pass' → logprob: -4.34727144241333
    7. 'r' → logprob: -4.47227144241333
    8. 'n' → logprob: -5.34727144241333
    9. '\r' → logprob: -5.34727144241333
    10. 'print' → logprob: -6.09727144241333

Token 6: ' input' (ID: 3422)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.17116251587867737
    2. ''' → logprob: -2.1711626052856445
    3. '"' → logprob: -3.4211626052856445
    4. ' True' → logprob: -6.1711626052856445
    5. ' None' → logprob: -6.2961626052856445
    6. '1' → logprob: -6.9211626052856445
    7. '  ' → logprob: -6.9211626052856445
    8. 'None' → logprob: -7.2961626052856445
    9. '0' → logprob: -7.4211626052856445
    10. '32' → logprob: -7.5461626052856445

Token 7: '()

' (ID: 5874)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0036282234359532595
    2. ''' → logprob: -6.878628253936768
    3. '.' → logprob: -7.128628253936768
    4. '('' → logprob: -7.253628253936768
    5. '(
' → logprob: -8.50362777709961
    6. '()' → logprob: -8.50362777709961
    7. '"' → logprob: -8.62862777709961
    8. '("("' → logprob: -8.87862777709961
    9. ' (' → logprob: -9.37862777709961
    10. '('.')' → logprob: -9.87862777709961

Token 8: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.20131820440292358
    2. '(' → logprob: -2.0763182640075684
    3. '+' → logprob: -4.201318264007568
    4. '()' → logprob: -4.576318264007568
    5. '(
' → logprob: -5.701318264007568
    6. '[' → logprob: -5.951318264007568
    7. '```' → logprob: -6.076318264007568
    8. '#' → logprob: -6.201318264007568
    9. 'def' → logprob: -6.201318264007568
    10. '<|end|>' → logprob: -6.326318264007568

Token 9: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.12700317800045013
    2. 's' → logprob: -2.1270031929016113
    3. ' ' → logprob: -9.752002716064453
    4. ' ' → logprob: -11.877002716064453
    5. '_s' → logprob: -12.377002716064453
    6. '_' → logprob: -13.127002716064453
    7. 'space' → logprob: -13.752002716064453
    8. ' space' → logprob: -14.502002716064453
    9. '	s' → logprob: -15.377002716064453
    10. '```' → logprob: -15.377002716064453

Token 10: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.22610649466514587
    2. '0' → logprob: -1.6011065244674683
    3. 't' → logprob: -7.851106643676758
    4. 'o' → logprob: -9.976106643676758
    5. 'a' → logprob: -10.226106643676758
    6. '2' → logprob: -10.351106643676758
    7. 'q' → logprob: -10.851106643676758
    8. '()' → logprob: -11.038606643676758
    9. 's' → logprob: -11.351106643676758
    10. 'p' → logprob: -11.351106643676758

Token 11: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04859134554862976
    2. '()' → logprob: -3.173591375350952
    3. '():' → logprob: -5.673591136932373
    4. '_' → logprob: -7.673591136932373
    5. 's' → logprob: -7.798591136932373
    6. '('' → logprob: -7.923591136932373
    7. '("")' → logprob: -8.673591613769531
    8. ' (' → logprob: -8.798591613769531
    9. ':' → logprob: -8.923591613769531
    10. '("("' → logprob: -9.048591613769531

Token 12: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4618205726146698
    2. ' return' → logprob: -1.5868206024169922
    3. ' input' → logprob: -2.836820602416992
    4. 'input' → logprob: -3.086820602416992
    5. 'return' → logprob: -3.086820602416992
    6. ' s' → logprob: -5.461820602416992
    7. ' ' → logprob: -5.586820602416992
    8. 's' → logprob: -5.836820602416992
    9. '(' → logprob: -6.336820602416992
    10. '    ' → logprob: -6.836820602416992

Token 13: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.07962466776371002
    2. '   ' → logprob: -3.329624652862549
    3. 'return' (adapté à ' return') → logprob: -3.329624652862549
    4. ' input' → logprob: -5.954624652862549
    5. ' s' → logprob: -6.829624652862549
    6. 's' → logprob: -7.454624652862549
    7. 'input' → logprob: -8.079625129699707
    8. ' ' → logprob: -8.954625129699707
    9. '    ' → logprob: -9.204625129699707
    10. '```' → logprob: -10.954625129699707

Token 14: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.0945330336689949
    2. ' s' → logprob: -2.8445329666137695
    3. 'input' → logprob: -4.3445329666137695
    4. ' ' → logprob: -4.5945329666137695
    5. 's' → logprob: -5.4695329666137695
    6. '"' → logprob: -5.7195329666137695
    7. ' int' → logprob: -7.4695329666137695
    8. ''' → logprob: -7.8445329666137695
    9. '  ' → logprob: -9.09453296661377
    10. ' ' → logprob: -9.46953296661377

Token 15: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.018872084096074104
    2. '(' → logprob: -4.018872261047363
    3. ')' → logprob: -8.643872261047363
    4. '`()' → logprob: -9.268872261047363
    5. '().' → logprob: -9.643872261047363
    6. '.' → logprob: -9.643872261047363
    7. '```' → logprob: -9.768872261047363
    8. ' ()' → logprob: -9.893872261047363
    9. '"' → logprob: -10.268872261047363
    10. ' ' → logprob: -10.393872261047363

Token 16: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.029206719249486923
    2. 'split' → logprob: -3.6542067527770996
    3. 'lower' → logprob: -6.0292067527771
    4. 'startswith' → logprob: -8.654206275939941
    5. 'rstrip' → logprob: -8.654206275939941
    6. 'capitalize' → logprob: -9.779206275939941
    7. 'upper' → logprob: -10.529206275939941
    8. 'isdigit' → logprob: -10.654206275939941
    9. 'replace' → logprob: -10.779206275939941
    10. 'l' → logprob: -11.404206275939941

Token 17: '()

' (ID: 5874)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20451012253761292
    2. '()' → logprob: -1.8295100927352905
    3. '('' → logprob: -3.82951021194458
    4. '("("' → logprob: -5.95451021194458
    5. '("' → logprob: -9.829509735107422
    6. '('.')' → logprob: -11.204509735107422
    7. '(\' → logprob: -11.329509735107422
    8. '(`' → logprob: -11.329509735107422
    9. '(

' → logprob: -11.954509735107422
    10. ''' → logprob: -11.954509735107422

Token 18: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1529669463634491
    2. '(' → logprob: -3.0279669761657715
    3. 'd' → logprob: -3.1529669761657715
    4. '[' → logprob: -4.2779669761657715
    5. '()' → logprob: -4.4029669761657715
    6. '#' → logprob: -4.6529669761657715
    7. '\' → logprob: -5.6529669761657715
    8. '(
' → logprob: -6.0279669761657715
    9. '```' → logprob: -6.4029669761657715
    10. '<|end|>' → logprob: -6.6529669761657715

Token 19: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.08916671574115753
    2. ' s' → logprob: -2.4641666412353516
    3. '_s' → logprob: -9.214166641235352
    4. '2' → logprob: -9.339166641235352
    5. '_' → logprob: -11.589166641235352
    6. ' ' → logprob: -11.839166641235352
    7. 'def' → logprob: -12.339166641235352
    8. '(s' → logprob: -12.464166641235352
    9. '0' → logprob: -12.839166641235352
    10. 'a' → logprob: -13.964166641235352

Token 20: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.1054253011243418e-05
    2. '0' → logprob: -11.375020980834961
    3. '3' → logprob: -13.000020980834961
    4. '_' → logprob: -13.250020980834961
    5. '1' → logprob: -13.375020980834961
    6. ' ' → logprob: -14.000020980834961
    7. '4' → logprob: -14.312520980834961
    8. '23' → logprob: -14.562520980834961
    9. 's' → logprob: -15.125020980834961
    10. '(' → logprob: -15.812520980834961

Token 21: '(n' (ID: 2406)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.03508961945772171
    2. '()' → logprob: -3.4100897312164307
    3. 'def' → logprob: -7.410089492797852
    4. '(' → logprob: -8.785089492797852
    5. '()[' → logprob: -8.785089492797852
    6. '():
' → logprob: -9.285089492797852
    7. '[]' → logprob: -9.285089492797852
    8. '=' → logprob: -9.785089492797852
    9. ' ():' → logprob: -9.785089492797852
    10. '*' → logprob: -10.160089492797852

Token 22: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.12808683514595032
    2. ')' → logprob: -2.128086805343628
    3. ',' → logprob: -7.253087043762207
    4. '=' → logprob: -8.628087043762207
    5. ' ):' → logprob: -9.003087043762207
    6. ':' → logprob: -9.628087043762207
    7. '*' → logprob: -11.003087043762207
    8. ' )' → logprob: -11.503087043762207
    9. ')=' → logprob: -11.753087043762207
    10. '>' → logprob: -12.128087043762207

Token 23: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019988516345620155
    2. ' for' → logprob: -4.644988536834717
    3. ' return' → logprob: -5.519988536834717
    4. 'for' → logprob: -5.769988536834717
    5. 'return' → logprob: -7.019988536834717
    6. ' range' → logprob: -7.269988536834717
    7. '[' → logprob: -8.519988059997559
    8. '    
' → logprob: -8.519988059997559
    9. 'range' → logprob: -8.644988059997559
    10. '[]' → logprob: -9.019988059997559

Token 24: ' return' (ID: 622)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3093324303627014
    2. 'for' → logprob: -1.8093323707580566
    3. ' return' → logprob: -2.8093323707580566
    4. 'return' (adapté à ' return') → logprob: -4.434332370758057
    5. ' range' → logprob: -4.559332370758057
    6. ' [' → logprob: -5.434332370758057
    7. 'range' → logprob: -5.559332370758057
    8. 'r' → logprob: -5.809332370758057
    9. '[' → logprob: -5.934332370758057
    10. '   ' → logprob: -6.434332370758057

Token 25: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.19567298889160156
    2. ' list' → logprob: -2.5706729888916016
    3. ' ' → logprob: -3.6956729888916016
    4. '[' → logprob: -3.8206729888916016
    5. '[n' → logprob: -4.695672988891602
    6. ' ['' → logprob: -4.820672988891602
    7. ' range' → logprob: -5.070672988891602
    8. ' n' → logprob: -5.445672988891602
    9. 'list' → logprob: -5.445672988891602
    10. 'range' → logprob: -5.570672988891602

Token 26: 'input' (ID: 2586)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.18559964001178741
    2. 'input' → logprob: -1.810599684715271
    3. '0' → logprob: -6.0605998039245605
    4. ' int' → logprob: -6.6855998039245605
    5. 'i' → logprob: -7.0605998039245605
    6. ' input' → logprob: -7.4355998039245605
    7. 'n' → logprob: -8.560599327087402
    8. '_' → logprob: -8.685599327087402
    9. 'list' → logprob: -8.935599327087402
    10. 'str' → logprob: -9.560599327087402

Token 27: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0003464289184194058
    2. '()]' → logprob: -8.250346183776855
    3. '(' → logprob: -9.625346183776855
    4. '().' → logprob: -11.125346183776855
    5. ' ()' → logprob: -13.250346183776855
    6. '())' → logprob: -14.375346183776855
    7. '()"' → logprob: -15.000346183776855
    8. '(f' → logprob: -15.250346183776855
    9. '()`' → logprob: -15.500346183776855
    10. 'for' → logprob: -15.750346183776855

Token 28: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.400365948677063
    2. 'for' → logprob: -1.150365948677063
    3. '()' → logprob: -4.525365829467773
    4. ')' → logprob: -6.275365829467773
    5. ' ' → logprob: -7.650365829467773
    6. '	for' → logprob: -9.400365829467773
    7. '   ' → logprob: -9.900365829467773
    8. ' ()' → logprob: -10.650365829467773
    9. ' f' → logprob: -11.525365829467773
    10. ']' → logprob: -12.025365829467773

Token 29: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.018248043954372406
    2. '_' → logprob: -4.143248081207275
    3. ' ' → logprob: -6.143248081207275
    4. ' range' → logprob: -10.018247604370117
    5. ' i' → logprob: -11.143247604370117
    6. ' ' → logprob: -13.018247604370117
    7. ' in' → logprob: -14.268247604370117
    8. '_range' → logprob: -14.393247604370117
    9. 'range' → logprob: -14.768247604370117
    10. ' __' → logprob: -16.018247604370117

Token 30: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.002558422740548849
    2. 'in' → logprob: -6.00255823135376
    3. ' ' → logprob: -10.127558708190918
    4. 'range' → logprob: -10.502558708190918
    5. ' range' → logprob: -11.627558708190918
    6. 'n' → logprob: -12.627558708190918
    7. ' _' → logprob: -14.127558708190918
    8. '_' → logprob: -14.627558708190918
    9. ' n' → logprob: -14.752558708190918
    10. '	in' → logprob: -15.002558708190918

Token 31: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.3868745267391205
    2. 'range' → logprob: -1.1368745565414429
    3. ' ' → logprob: -13.386874198913574
    4. '	range' → logprob: -13.636874198913574
    5. '(range' → logprob: -16.26187515258789
    6. '_range' → logprob: -16.26187515258789
    7. 'rang' → logprob: -16.26187515258789
    8. '  ' → logprob: -16.26187515258789
    9. ' ran' → logprob: -16.88687515258789
    10. ' xrange' → logprob: -17.01187515258789

Token 32: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.018240783363580704
    2. '(' → logprob: -4.018240928649902
    3. ' n' → logprob: -9.643240928649902
    4. ' (' → logprob: -10.768240928649902
    5. 'n' → logprob: -12.268240928649902
    6. ' ' → logprob: -15.768240928649902
    7. '(
' → logprob: -17.393239974975586
    8. '	n' → logprob: -17.768239974975586
    9. '(int' → logprob: -17.768239974975586
    10. '(s' → logprob: -18.143239974975586

Token 33: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -1.0921942703134846e-05
    2. ']' → logprob: -12.00001049041748
    3. ')' → logprob: -12.75001049041748
    4. ')]
' → logprob: -14.00001049041748
    5. ' )' → logprob: -14.37501049041748
    6. '   ' → logprob: -16.000011444091797
    7. '')]' → logprob: -16.875011444091797
    8. ' ' → logprob: -17.125011444091797
    9. '}]' → logprob: -17.125011444091797
    10. ')]

' → logprob: -17.125011444091797

Token 34: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03126648813486099
    2. 'd' → logprob: -3.656266450881958
    3. '
' → logprob: -6.156266689300537
    4. '#' → logprob: -6.531266689300537
    5. '<|end|>' → logprob: -7.656266689300537
    6. '\' → logprob: -8.406266212463379
    7. 'n' → logprob: -9.031266212463379
    8. '```' → logprob: -9.406266212463379
    9. '\n' → logprob: -9.781266212463379
    10. '[' → logprob: -9.781266212463379

Token 35: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.13271678984165192
    2. ' main' → logprob: -2.5077168941497803
    3. 's' → logprob: -4.007716655731201
    4. ' t' → logprob: -4.882716655731201
    5. ' p' → logprob: -6.132716655731201
    6. ' a' → logprob: -6.257716655731201
    7. ' i' → logprob: -6.382716655731201
    8. ' ' → logprob: -6.757716655731201
    9. ' m' → logprob: -7.132716655731201
    10. ' v' → logprob: -7.132716655731201

Token 36: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -2.45848218582978e-06
    2. '2' → logprob: -13.12500286102295
    3. '0' → logprob: -15.50000286102295
    4. 'n' → logprob: -16.500001907348633
    5. ' ' → logprob: -17.875001907348633
    6. '(n' → logprob: -17.875001907348633
    7. '1' → logprob: -18.562501907348633
    8. 'a' → logprob: -18.687501907348633
    9. 's' → logprob: -18.750001907348633
    10. 'g' → logprob: -18.750001907348633

Token 37: '(n' (ID: 2406)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.012423708103597164
    2. '()' → logprob: -4.887423515319824
    3. '(n' → logprob: -5.512423515319824
    4. '():
' → logprob: -7.887423515319824
    5. '(' → logprob: -8.887423515319824
    6. ' ():' → logprob: -9.512423515319824
    7. 's' → logprob: -10.512423515319824
    8. ' ()' → logprob: -10.637423515319824
    9. '()(' → logprob: -10.887423515319824
    10. '().' → logprob: -11.012423515319824

Token 38: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00016504127415828407
    2. ')' → logprob: -9.750164985656738
    3. '):
' → logprob: -9.875164985656738
    4. ',' → logprob: -10.875164985656738
    5. ' ):' → logprob: -11.000164985656738
    6. '():' → logprob: -11.750164985656738
    7. ':' → logprob: -12.750164985656738
    8. '*' → logprob: -13.125164985656738
    9. '   ' → logprob: -13.125164985656738
    10. '=' → logprob: -13.500164985656738

Token 39: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2559293210506439
    2. 'return' → logprob: -1.6309293508529663
    3. ' return' → logprob: -3.5059292316436768
    4. 'for' → logprob: -11.630928993225098
    5. '	return' → logprob: -12.005928993225098
    6. ' for' → logprob: -12.755928993225098
    7. 'input' → logprob: -12.755928993225098
    8. ' ' → logprob: -13.380928993225098
    9. 'def' → logprob: -13.505928993225098
    10. '[]' → logprob: -13.505928993225098

Token 40: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.002186426194384694
    2. 'range' → logprob: -7.377186298370361
    3. '[input' → logprob: -7.752186298370361
    4. '[int' → logprob: -7.877186298370361
    5. '[' → logprob: -8.25218677520752
    6. 'for' → logprob: -8.75218677520752
    7. 'input' → logprob: -8.75218677520752
    8. ' return' → logprob: -9.75218677520752
    9. '[]' → logprob: -9.87718677520752
    10. '[i' → logprob: -10.37718677520752

Token 41: ' [' (ID: 723)
  Prédit: '[input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[input' → logprob: -0.49038776755332947
    2. ' [' → logprob: -1.2403877973556519
    3. '[int' → logprob: -2.7403876781463623
    4. '[' → logprob: -4.615387916564941
    5. 'input' → logprob: -5.115387916564941
    6. 'list' → logprob: -5.115387916564941
    7. ' input' → logprob: -5.365387916564941
    8. ' list' → logprob: -5.490387916564941
    9. '[list' → logprob: -6.865387916564941
    10. 'range' → logprob: -7.615387916564941

Token 42: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.8470070958137512
    2. 'int' → logprob: -0.9720070958137512
    3. 'list' → logprob: -1.7220070362091064
    4. 'tuple' → logprob: -4.3470072746276855
    5. 'map' → logprob: -6.8470072746276855
    6. ' input' → logprob: -9.847006797790527
    7. ' list' → logprob: -9.972006797790527
    8. ' int' → logprob: -10.222006797790527
    9. '[int' → logprob: -10.597006797790527
    10. ' tuple' → logprob: -10.722006797790527

Token 43: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.38689208030700684
    2. '()' → logprob: -1.1368920803070068
    3. '(' → logprob: -11.636892318725586
    4. '.' → logprob: -12.886892318725586
    5. '()[' → logprob: -13.386892318725586
    6. '.split' → logprob: -13.511892318725586
    7. '())' → logprob: -13.636892318725586
    8. 'for' → logprob: -14.011892318725586
    9. ' for' → logprob: -14.261892318725586
    10. '()
' → logprob: -14.386892318725586

Token 44: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.2521466314792633
    2. 'strip' → logprob: -1.502146601676941
    3. 'rstrip' → logprob: -8.50214672088623
    4. ' split' → logprob: -11.37714672088623
    5. ' strip' → logprob: -13.62714672088623
    6. ' ' → logprob: -14.25214672088623
    7. 's' → logprob: -15.75214672088623
    8. 'str' → logprob: -15.87714672088623
    9. 'repeat' → logprob: -15.87714672088623
    10. 'spl' → logprob: -16.002145767211914

Token 45: '()' (ID: 416)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.7280005812644958
    2. '()' → logprob: -0.9780005812644958
    3. '()]' → logprob: -1.9780006408691406
    4. '(' → logprob: -6.103000640869141
    5. ')' → logprob: -8.35300064086914
    6. '(n' → logprob: -9.10300064086914
    7. '()))' → logprob: -10.85300064086914
    8. ' ()' → logprob: -11.22800064086914
    9. ' ())' → logprob: -11.35300064086914
    10. '()),' → logprob: -11.47800064086914

Token 46: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13594648241996765
    2. '()' → logprob: -2.26094651222229
    3. ' for' → logprob: -4.635946273803711
    4. '(n' → logprob: -5.260946273803711
    5. 'for' → logprob: -5.760946273803711
    6. '())' → logprob: -6.010946273803711
    7. ')]' → logprob: -6.385946273803711
    8. '()]' → logprob: -8.510946273803711
    9. ')n' → logprob: -8.885946273803711
    10. ']' → logprob: -9.635946273803711

Token 47: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.20735107362270355
    2. ' range' → logprob: -1.9573510885238647
    3. '_' → logprob: -3.082350969314575
    4. 'range' → logprob: -9.332350730895996
    5. ' n' → logprob: -9.957350730895996
    6. '_range' → logprob: -10.582350730895996
    7. ' in' → logprob: -11.582350730895996
    8. ' ' → logprob: -11.832350730895996
    9. ' ' → logprob: -13.332350730895996
    10. '(range' → logprob: -13.582350730895996

Token 48: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2718092203140259
    2. 'in' → logprob: -1.6468092203140259
    3. ' range' → logprob: -3.5218091011047363
    4. ' in' → logprob: -4.396809101104736
    5. '<|end|>' → logprob: -5.896809101104736
    6. '(range' → logprob: -8.271809577941895
    7. ' ' → logprob: -9.146809577941895
    8. '_range' → logprob: -9.271809577941895
    9. '	range' → logprob: -9.396809577941895
    10. '_' → logprob: -9.771809577941895

Token 49: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.029750952497124672
    2. ' range' → logprob: -3.5297510623931885
    3. '(range' → logprob: -15.15475082397461
    4. '	range' → logprob: -15.77975082397461
    5. 'n' → logprob: -16.65475082397461
    6. '_range' → logprob: -18.40475082397461
    7. 'rang' → logprob: -19.02975082397461
    8. ' ' → logprob: -19.40475082397461
    9. '.range' → logprob: -20.02975082397461
    10. 'ran' → logprob: -20.02975082397461

Token 50: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.002458771923556924
    2. '(' → logprob: -6.627458572387695
    3. ' (' → logprob: -7.627458572387695
    4. 'n' → logprob: -7.627458572387695
    5. ' n' → logprob: -8.752458572387695
    6. ' ' → logprob: -15.877458572387695
    7. ')n' → logprob: -16.377458572387695
    8. '(
' → logprob: -16.752458572387695
    9. ')' → logprob: -16.752458572387695
    10. '	n' → logprob: -16.877458572387695

Token 51: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00032235344406217337
    2. ')' → logprob: -8.250322341918945
    3. ']' → logprob: -9.750322341918945
    4. ' )' → logprob: -13.625322341918945
    5. ')])' → logprob: -14.875322341918945
    6. '   ' → logprob: -15.125322341918945
    7. '')]' → logprob: -15.250322341918945
    8. '))' → logprob: -15.750322341918945
    9. ')}' → logprob: -15.875322341918945
    10. '])]' → logprob: -16.500322341918945

Token 52: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.09676064550876617
    2. 'd' → logprob: -2.4717607498168945
    3. '#' → logprob: -4.9717607498168945
    4. '```' → logprob: -8.096760749816895
    5. '\' → logprob: -8.471760749816895
    6. 'a' → logprob: -9.221760749816895
    7. '*' → logprob: -9.846760749816895
    8. '(' → logprob: -9.971760749816895
    9. '
' → logprob: -10.346760749816895
    10. 'de' → logprob: -10.721760749816895

Token 53: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.11677178740501404
    2. 's' → logprob: -2.241771697998047
    3. ' ' → logprob: -6.366771697998047
    4. '_' → logprob: -6.491771697998047
    5. '_s' → logprob: -8.366771697998047
    6. '  ' → logprob: -9.116771697998047
    7. ' ' → logprob: -9.741771697998047
    8. ' _' → logprob: -9.866771697998047
    9. '4' → logprob: -10.241771697998047
    10. 'a' → logprob: -10.991771697998047

Token 54: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.0015943651087582111
    2. '0' → logprob: -7.126594543457031
    3. '2' → logprob: -7.376594543457031
    4. '3' → logprob: -8.876594543457031
    5. '1' → logprob: -11.376594543457031
    6. '5' → logprob: -12.251594543457031
    7. '7' → logprob: -14.251594543457031
    8. 'uffix' → logprob: -14.501594543457031
    9. '6' → logprob: -14.626594543457031
    10. '_' → logprob: -15.001594543457031

Token 55: '(n' (ID: 2406)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.27445483207702637
    2. '():' → logprob: -1.6494548320770264
    3. '(n' → logprob: -3.1494548320770264
    4. '()(' → logprob: -6.5244550704956055
    5. '_' → logprob: -6.7744550704956055
    6. 's' → logprob: -7.1494550704956055
    7. '(' → logprob: -7.1494550704956055
    8. '():
' → logprob: -8.149455070495605
    9. ' ()' → logprob: -9.274455070495605
    10. '_str' → logprob: -9.774455070495605

Token 56: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00015741224342491478
    2. ')' → logprob: -9.250157356262207
    3. '):
' → logprob: -10.375157356262207
    4. ' ):' → logprob: -11.125157356262207
    5. '=' → logprob: -12.125157356262207
    6. ':' → logprob: -12.125157356262207
    7. ',' → logprob: -13.000157356262207
    8. '():' → logprob: -14.625157356262207
    9. '*' → logprob: -14.875157356262207
    10. '   ' → logprob: -15.250157356262207

Token 57: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9197728037834167
    2. 'return' → logprob: -1.1697728633880615
    3. '[int' → logprob: -2.2947728633880615
    4. ' return' → logprob: -2.7947728633880615
    5. '[' → logprob: -2.7947728633880615
    6. '[]' → logprob: -3.1697728633880615
    7. ' [' → logprob: -4.794772624969482
    8. '[input' → logprob: -5.044772624969482
    9. ' []' → logprob: -6.169772624969482
    10. '[n' → logprob: -6.419772624969482

Token 58: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.11340942978858948
    2. ' return' → logprob: -2.2384095191955566
    3. '   ' → logprob: -7.613409519195557
    4. 'for' → logprob: -10.988409042358398
    5. ' for' → logprob: -11.363409042358398
    6. '[' → logprob: -11.488409042358398
    7. '[]' → logprob: -11.738409042358398
    8. 'def' → logprob: -11.863409042358398
    9. 'ret' → logprob: -12.238409042358398
    10. '	return' → logprob: -12.613409042358398

Token 59: ' [[' (ID: 9237)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.08688153326511383
    2. '[input' → logprob: -2.961881637573242
    3. '[int' → logprob: -3.586881637573242
    4. '[' → logprob: -6.336881637573242
    5. '[list' → logprob: -6.586881637573242
    6. '[n' → logprob: -8.586881637573242
    7. ' list' → logprob: -9.461881637573242
    8. ' []' → logprob: -9.586881637573242
    9. ' [[' → logprob: -9.711881637573242
    10. '[s' → logprob: -10.086881637573242

Token 60: 'x' (ID: 87)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.31357601284980774
    2. 'input' → logprob: -1.3135759830474854
    3. '0' → logprob: -9.563575744628906
    4. 'i' → logprob: -9.813575744628906
    5. ' int' → logprob: -9.938575744628906
    6. ' input' → logprob: -10.063575744628906
    7. '*' → logprob: -10.563575744628906
    8. 'in' → logprob: -10.563575744628906
    9. ']int' → logprob: -11.938575744628906
    10. '
' → logprob: -12.063575744628906

Token 61: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2038937211036682
    2. 'for' → logprob: -1.8288936614990234
    3. '()' → logprob: -3.8288936614990234
    4. 'int' → logprob: -7.453893661499023
    5. ')' → logprob: -8.328893661499023
    6. ']' → logprob: -8.328893661499023
    7. '(int' → logprob: -8.453893661499023
    8. '.split' → logprob: -8.578893661499023
    9. ' ' → logprob: -9.203893661499023
    10. '.strip' → logprob: -9.453893661499023

Token 62: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.4148649573326111
    2. ' input' → logprob: -1.9148650169372559
    3. 'x' → logprob: -2.164865016937256
    4. '_' → logprob: -3.289865016937256
    5. 'input' → logprob: -4.039865016937256
    6. ' _' → logprob: -4.414865016937256
    7. ' range' → logprob: -5.414865016937256
    8. ' in' → logprob: -6.664865016937256
    9. ' map' → logprob: -7.164865016937256
    10. 'range' → logprob: -7.164865016937256

Token 63: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012594765052199364
    2. 'in' → logprob: -4.387594699859619
    3. 'input' → logprob: -9.762595176696777
    4. ' input' → logprob: -11.512595176696777
    5. ' ' → logprob: -12.012595176696777
    6. '	in' → logprob: -12.387595176696777
    7. '<|end|>' → logprob: -13.512595176696777
    8. 's' → logprob: -14.262595176696777
    9. 'import' → logprob: -14.387595176696777
    10. 'range' → logprob: -14.575095176696777

Token 64: ' s' (ID: 265)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.09837544709444046
    2. ' input' → logprob: -2.4733755588531494
    3. 'range' → logprob: -4.97337532043457
    4. ' range' → logprob: -6.34837532043457
    5. 'map' → logprob: -8.22337532043457
    6. ' map' → logprob: -8.84837532043457
    7. 's' → logprob: -9.09837532043457
    8. ' ' → logprob: -9.97337532043457
    9. 'list' → logprob: -10.97337532043457
    10. '  ' → logprob: -11.09837532043457

Token 65: ']' (ID: 60)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.48643630743026733
    2. '(input' → logprob: -1.486436367034912
    3. '4' → logprob: -2.111436367034912
    4. 'plit' → logprob: -4.361436367034912
    5. '1' → logprob: -4.611436367034912
    6. 'input' → logprob: -5.236436367034912
    7. '(s' → logprob: -6.236436367034912
    8. '(i' → logprob: -6.486436367034912
    9. '0' → logprob: -6.486436367034912
    10. '(' → logprob: -6.861436367034912

Token 66: ' for' (ID: 395)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04341430589556694
    2. '()]' → logprob: -3.293414354324341
    3. ' ]' → logprob: -5.418414115905762
    4. ' in' → logprob: -7.918414115905762
    5. '.split' → logprob: -8.293414115905762
    6. ')]' → logprob: -9.543414115905762
    7. ']()' → logprob: -9.918414115905762
    8. ' for' → logprob: -10.543414115905762
    9. 's' → logprob: -10.543414115905762
    10. 'in' → logprob: -10.668414115905762

Token 67: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.02463577315211296
    2. ' range' → logprob: -4.3996357917785645
    3. 's' → logprob: -4.7746357917785645
    4. '_' → logprob: -6.6496357917785645
    5. 'range' → logprob: -6.6496357917785645
    6. ' _' → logprob: -7.2746357917785645
    7. ' ' → logprob: -8.899635314941406
    8. ' n' → logprob: -9.274635314941406
    9. '_s' → logprob: -10.274635314941406
    10. ' input' → logprob: -10.774635314941406

Token 68: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3322307765483856
    2. 'in' → logprob: -2.332230806350708
    3. '(range' → logprob: -2.707230806350708
    4. 'range' → logprob: -3.332230806350708
    5. 's' → logprob: -3.582230806350708
    6. ' range' → logprob: -3.707230806350708
    7. '(s' → logprob: -4.832230567932129
    8. ' s' → logprob: -5.332230567932129
    9. '(' → logprob: -5.332230567932129
    10. '(n' → logprob: -5.832230567932129

Token 69: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.18681944906711578
    2. 'range' → logprob: -2.436819553375244
    3. ' s' → logprob: -2.686819553375244
    4. ' range' → logprob: -4.311819553375244
    5. '[s' → logprob: -7.936819553375244
    6. '[' → logprob: -8.311819076538086
    7. '(s' → logprob: -8.311819076538086
    8. '(range' → logprob: -8.936819076538086
    9. 'n' → logprob: -9.186819076538086
    10. ' [' → logprob: -9.561819076538086

Token 70: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.7973204255104065
    2. '3' → logprob: -1.0473203659057617
    3. '4' → logprob: -1.7973203659057617
    4. '(n' → logprob: -3.4223203659057617
    5. '(' → logprob: -9.172320365905762
    6. ' (' → logprob: -10.297320365905762
    7. 'range' → logprob: -10.797320365905762
    8. 's' → logprob: -11.547320365905762
    9. 'n' → logprob: -11.797320365905762
    10. '```' → logprob: -12.297320365905762

Token 71: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0028645433485507965
    2. '(' → logprob: -5.877864360809326
    3. ' (' → logprob: -9.752864837646484
    4. '](' → logprob: -14.002864837646484
    5. '(
' → logprob: -15.377864837646484
    6. ')' → logprob: -15.502864837646484
    7. ']' → logprob: -16.002864837646484
    8. ')(' → logprob: -16.252864837646484
    9. '((' → logprob: -16.877864837646484
    10. ' ' → logprob: -17.002864837646484

Token 72: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0015540247550234199
    2. ')' → logprob: -6.751554012298584
    3. ']' → logprob: -7.876554012298584
    4. '()]' → logprob: -13.751554489135742
    5. '))' → logprob: -14.251554489135742
    6. ')])' → logprob: -14.501554489135742
    7. ')]
' → logprob: -14.626554489135742
    8. ' )' → logprob: -15.126554489135742
    9. '])]' → logprob: -15.251554489135742
    10. '   ' → logprob: -15.751554489135742

Token 73: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.014080529101192951
    2. '(' → logprob: -5.13908052444458
    3. '(n' → logprob: -5.88908052444458
    4. '<|end|>' → logprob: -6.76408052444458
    5. ' def' → logprob: -7.01408052444458
    6. '```' → logprob: -7.13908052444458
    7. '
' → logprob: -7.51408052444458
    8. '(def' → logprob: -7.88908052444458
    9. '(
' → logprob: -8.014081001281738
    10. '#' → logprob: -8.014081001281738

Token 74: ' n' (ID: 297)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.06554139405488968
    2. 's' → logprob: -2.8155415058135986
    3. ' ' → logprob: -6.6905412673950195
    4. '_' → logprob: -7.9405412673950195
    5. '_s' → logprob: -8.06554126739502
    6. '4' → logprob: -9.00304126739502
    7. 'space' → logprob: -9.00304126739502
    8. '  ' → logprob: -9.19054126739502
    9. ' space' → logprob: -9.25304126739502
    10. '5' → logprob: -9.25304126739502

Token 75: '0' (ID: 15)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4365011751651764
    2. '(' → logprob: -1.561501145362854
    3. '_' → logprob: -2.9365012645721436
    4. '=' → logprob: -4.0615010261535645
    5. 'a' → logprob: -4.1865010261535645
    6. '():' → logprob: -4.4365010261535645
    7. 'u' → logprob: -4.8115010261535645
    8. '4' → logprob: -4.8115010261535645
    9. ' =' → logprob: -5.5615010261535645
    10. '(a' → logprob: -5.9365010261535645

Token 76: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.04358116164803505
    2. '()' → logprob: -3.168581247329712
    3. ' ()' → logprob: -8.543581008911133
    4. '():
' → logprob: -8.793581008911133
    5. ' ():' → logprob: -9.043581008911133
    6. '()>' → logprob: -9.918581008911133
    7. '(' → logprob: -10.918581008911133
    8. 's' → logprob: -11.793581008911133
    9. 'a' → logprob: -12.293581008911133
    10. '()">' → logprob: -12.668581008911133

Token 77: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6454002261161804
    2. 'int' → logprob: -1.1454002857208252
    3. '   ' → logprob: -2.395400285720825
    4. ' return' → logprob: -2.770400285720825
    5. ' int' → logprob: -5.770400047302246
    6. 's' → logprob: -8.145400047302246
    7. ' ' → logprob: -9.770400047302246
    8. '  ' → logprob: -10.145400047302246
    9. '=int' → logprob: -10.145400047302246
    10. ' s' → logprob: -10.895400047302246

Token 78: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.20874284207820892
    2. 'int' → logprob: -1.7087428569793701
    3. 's' → logprob: -5.333742618560791
    4. ' return' → logprob: -6.583742618560791
    5. 'ret' → logprob: -7.458742618560791
    6. 'r' → logprob: -8.45874309539795
    7. 'i' → logprob: -9.58374309539795
    8. ' int' → logprob: -9.70874309539795
    9. 'n' → logprob: -9.95874309539795
    10. '   ' → logprob: -10.45874309539795

Token 79: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.003463936736807227
    2. 'int' → logprob: -6.0034637451171875
    3. ' ' → logprob: -7.0034637451171875
    4. ' list' → logprob: -10.503463745117188
    5. ' map' → logprob: -11.253463745117188
    6. ' input' → logprob: -11.253463745117188
    7. '  ' → logprob: -12.003463745117188
    8. ' in' → logprob: -12.128463745117188
    9. ' len' → logprob: -12.503463745117188
    10. '(int' → logprob: -12.878463745117188

Token 80: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.20199726521968842
    2. '(' → logprob: -1.7019972801208496
    3. '(s' → logprob: -7.70199728012085
    4. '(
' → logprob: -9.201996803283691
    5. 'input' → logprob: -10.951996803283691
    6. '(

' → logprob: -12.326996803283691
    7. '(in' → logprob: -12.576996803283691
    8. ' (' → logprob: -13.701996803283691
    9. '()' → logprob: -14.326996803283691
    10. '(open' → logprob: -14.701996803283691

Token 81: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0011765359668061137
    2. '()' → logprob: -6.751176357269287
    3. ' ())' → logprob: -12.626176834106445
    4. '())
' → logprob: -14.126176834106445
    5. '()))' → logprob: -14.251176834106445
    6. ')' → logprob: -14.376176834106445
    7. '().' → logprob: -14.876176834106445
    8. '();)' → logprob: -15.001176834106445
    9. '()]' → logprob: -15.876176834106445
    10. '(' → logprob: -16.251176834106445

Token 82: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00011355629976605996
    2. '()' → logprob: -10.500113487243652
    3. '<|end|>' → logprob: -10.750113487243652
    4. '
' → logprob: -11.125113487243652
    5. '```' → logprob: -11.125113487243652
    6. '\' → logprob: -12.000113487243652
    7. 'ndef' → logprob: -12.375113487243652
    8. 'n' → logprob: -12.375113487243652
    9. ' def' → logprob: -12.750113487243652
    10. '<|end|>' → logprob: -12.750113487243652

Token 83: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.0720132365822792
    2. 'n' → logprob: -2.6970131397247314
    3. ' ' → logprob: -6.6970133781433105
    4. ' f' → logprob: -8.447012901306152
    5. 's' → logprob: -8.822012901306152
    6. 'f' → logprob: -8.947012901306152
    7. ' i' → logprob: -9.697012901306152
    8. ' s' → logprob: -9.947012901306152
    9. ' m' → logprob: -10.072012901306152
    10. 'i' → logprob: -10.197012901306152

Token 84: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009326597792096436
    2. '0' → logprob: -7.250932693481445
    3. '4' → logprob: -8.625932693481445
    4. '2' → logprob: -10.625932693481445
    5. '3' → logprob: -11.750932693481445
    6. '6' → logprob: -13.625932693481445
    7. '()' → logprob: -13.625932693481445
    8. '5' → logprob: -13.750932693481445
    9. '_' → logprob: -13.875932693481445
    10. 'def' → logprob: -14.000932693481445

Token 85: '():
' (ID: 8595)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.16141438484191895
    2. '():' → logprob: -1.911414384841919
    3. ' ()' → logprob: -8.03641414642334
    4. '():
' → logprob: -8.28641414642334
    5. '()(' → logprob: -8.91141414642334
    6. '0' → logprob: -9.16141414642334
    7. '()*' → logprob: -9.78641414642334
    8. '`()' → logprob: -9.91141414642334
    9. '()">' → logprob: -10.28641414642334
    10. 'def' → logprob: -10.53641414642334

Token 86: '   ' (ID: 271)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6794006824493408
    2. 'int' → logprob: -0.8044006824493408
    3. 'return' → logprob: -3.804400682449341
    4. '()
' → logprob: -4.429400444030762
    5. ')' → logprob: -5.554400444030762
    6. '(int' → logprob: -6.054400444030762
    7. 'def' → logprob: -6.679400444030762
    8. ' return' → logprob: -6.804400444030762
    9. '=int' → logprob: -6.929400444030762
    10. '   ' → logprob: -7.179400444030762

Token 87: ' return' (ID: 622)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0006050990778021514
    2. '[int' → logprob: -8.250604629516602
    3. ' int' → logprob: -8.500604629516602
    4. '(int' → logprob: -9.625604629516602
    5. 'return' (adapté à ' return') → logprob: -10.875604629516602
    6. 'def' → logprob: -11.250604629516602
    7. '[]' → logprob: -11.750604629516602
    8. '   ' → logprob: -11.750604629516602
    9. 'n' → logprob: -12.000604629516602
    10. '=int' → logprob: -12.750604629516602

Token 88: ' [' (ID: 723)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0932791456580162
    2. ' int' → logprob: -2.5932791233062744
    3. '[int' → logprob: -4.9682793617248535
    4. 'list' → logprob: -5.8432793617248535
    5. '(int' → logprob: -6.0932793617248535
    6. ' list' → logprob: -6.5932793617248535
    7. 'input' → logprob: -8.968278884887695
    8. '[]' → logprob: -9.218278884887695
    9. '[' → logprob: -9.718278884887695
    10. ' input' → logprob: -9.843278884887695

Token 89: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.011450957506895065
    2. 'i' → logprob: -4.51145076751709
    3. 'in' → logprob: -9.01145076751709
    4. ' int' → logprob: -9.13645076751709
    5. 'n' → logprob: -10.01145076751709
    6. ']int' → logprob: -10.38645076751709
    7. ' ' → logprob: -11.01145076751709
    8. '*' → logprob: -11.26145076751709
    9. '  ' → logprob: -11.63645076751709
    10. 'map' → logprob: -11.63645076751709

Token 90: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.034740693867206573
    2. '(i' → logprob: -3.409740686416626
    3. '()' → logprob: -6.909740924835205
    4. '(s' → logprob: -10.034740447998047
    5. '(' → logprob: -11.159740447998047
    6. '()(' → logprob: -11.534740447998047
    7. '(input' → logprob: -11.784740447998047
    8. ' (' → logprob: -12.159740447998047
    9. '()]' → logprob: -12.409740447998047
    10. '(y' → logprob: -13.284740447998047

Token 91: ')' (ID: 8)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.001093903905712068
    2. ')' → logprob: -7.126093864440918
    3. ' ()' → logprob: -8.876093864440918
    4. ' for' → logprob: -10.001093864440918
    5. 'for' → logprob: -10.126093864440918
    6. '()]' → logprob: -10.251093864440918
    7. '())' → logprob: -11.626093864440918
    8. '(' → logprob: -12.251093864440918
    9. '()
' → logprob: -12.376093864440918
    10. '   ' → logprob: -12.751093864440918

Token 92: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.04620853438973427
    2. ' for' → logprob: -3.171208620071411
    3. 'for' → logprob: -6.046208381652832
    4. '(x' → logprob: -7.921208381652832
    5. ' ()' → logprob: -8.546208381652832
    6. ')' → logprob: -8.546208381652832
    7. '()]' → logprob: -10.671208381652832
    8. 'in' → logprob: -11.171208381652832
    9. '(i' → logprob: -11.171208381652832
    10. '	for' → logprob: -11.671208381652832

Token 93: ' x' (ID: 1215)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.00024858469259925187
    2. 'input' → logprob: -8.500248908996582
    3. ' ' → logprob: -10.250248908996582
    4. '(input' → logprob: -12.250248908996582
    5. ' ' → logprob: -13.375248908996582
    6. '<|end|>' → logprob: -14.000248908996582
    7. ' space' → logprob: -14.625248908996582
    8. ' in' → logprob: -14.750248908996582
    9. '  ' → logprob: -14.750248908996582
    10. '=input' → logprob: -15.125248908996582

Token 94: ' in' (ID: 306)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.028122926130890846
    2. '(' → logprob: -4.403122901916504
    3. '(input' → logprob: -4.903122901916504
    4. ' ()' → logprob: -5.903122901916504
    5. '()]' → logprob: -5.903122901916504
    6. '().' → logprob: -6.403122901916504
    7. '()>' → logprob: -8.528122901916504
    8. 'input' → logprob: -9.028122901916504
    9. '=input' → logprob: -9.403122901916504
    10. ' in' → logprob: -9.528122901916504

Token 95: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.12700413167476654
    2. ' input' → logprob: -2.1270041465759277
    3. '(input' → logprob: -9.87700366973877
    4. 's' → logprob: -11.50200366973877
    5. ' ' → logprob: -12.37700366973877
    6. ' s' → logprob: -12.50200366973877
    7. '   ' → logprob: -13.00200366973877
    8. '	input' → logprob: -13.62700366973877
    9. '<input' → logprob: -14.37700366973877
    10. '=input' → logprob: -14.50200366973877

Token 96: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -8.64970643306151e-05
    2. '()' → logprob: -9.375086784362793
    3. '()]' → logprob: -13.750086784362793
    4. ' ().' → logprob: -15.000086784362793
    5. '.' → logprob: -16.125085830688477
    6. '()].' → logprob: -16.375085830688477
    7. '(' → logprob: -17.750085830688477
    8. '.split' → logprob: -17.750085830688477
    9. '().'' → logprob: -19.500085830688477
    10. ' ()' → logprob: -20.375085830688477

Token 97: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.759734732331708e-05
    2. ' split' → logprob: -11.250017166137695
    3. 'strip' → logprob: -12.500017166137695
    4. 'spl' → logprob: -14.625017166137695
    5. 'rstrip' → logprob: -15.250017166137695
    6. ' ' → logprob: -16.375017166137695
    7. '(split' → logprob: -17.250017166137695
    8. '.split' → logprob: -17.625017166137695
    9. 'plit' → logprob: -18.125017166137695
    10. 's' → logprob: -19.125017166137695

Token 98: '()' (ID: 416)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -4.6087021473795176e-05
    2. '()' → logprob: -10.000045776367188
    3. '())' → logprob: -15.250045776367188
    4. ']' → logprob: -15.250045776367188
    5. '()]
' → logprob: -16.375045776367188
    6. ']()' → logprob: -17.750045776367188
    7. '(' → logprob: -18.125045776367188
    8. '()][' → logprob: -18.375045776367188
    9. ')]' → logprob: -18.750045776367188
    10. '()],' → logprob: -18.750045776367188

Token 99: ']

' (ID: 3144)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.00014537633978761733
    2. '()' → logprob: -9.375144958496094
    3. ']' → logprob: -9.750144958496094
    4. ']()' → logprob: -13.750144958496094
    5. '()]
' → logprob: -14.500144958496094
    6. '(' → logprob: -14.750144958496094
    7. ')]' → logprob: -16.250144958496094
    8. '()
' → logprob: -16.875144958496094
    9. ' ]' → logprob: -17.125144958496094
    10. '`]' → logprob: -17.250144958496094

Token 100: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10879390686750412
    2. '()' → logprob: -2.3587939739227295
    3. '(' → logprob: -5.48379373550415
    4. '()
' → logprob: -5.60879373550415
    5. '```' → logprob: -8.108794212341309
    6. '()

' → logprob: -8.358794212341309
    7. '(
' → logprob: -9.483794212341309
    8. '()\' → logprob: -10.608794212341309
    9. '(def' → logprob: -11.233794212341309
    10. '(n' → logprob: -11.358794212341309

Token 101: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.3487814962863922
    2. 'n' → logprob: -1.2237814664840698
    3. ' ' → logprob: -9.22378158569336
    4. '2' → logprob: -9.84878158569336
    5. '_n' → logprob: -10.84878158569336
    6. '1' → logprob: -10.97378158569336
    7. '0' → logprob: -10.97378158569336
    8. 'l' → logprob: -11.09878158569336
    9. 's' → logprob: -11.22378158569336
    10. ' s' → logprob: -11.91128158569336

Token 102: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0005006087594665587
    2. '0' → logprob: -7.875500679016113
    3. '1' → logprob: -9.875500679016113
    4. '4' → logprob: -10.000500679016113
    5. '3' → logprob: -10.875500679016113
    6. '5' → logprob: -12.500500679016113
    7. '_' → logprob: -15.563000679016113
    8. '6' → logprob: -15.750500679016113
    9. '```' → logprob: -15.938000679016113
    10. '9' → logprob: -16.312999725341797

Token 103: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0004965558764524758
    2. '(' → logprob: -7.6254963874816895
    3. ' (' → logprob: -11.750496864318848
    4. 'n' → logprob: -15.375496864318848
    5. '()' → logprob: -15.750496864318848
    6. '(
' → logprob: -15.875496864318848
    7. '(N' → logprob: -16.75049591064453
    8. '(nn' → logprob: -17.25049591064453
    9. ' ' → logprob: -17.50049591064453
    10. '(s' → logprob: -18.00049591064453

Token 104: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0003291480534244329
    2. '):
' → logprob: -8.37532901763916
    3. ')' → logprob: -9.37532901763916
    4. ' ):' → logprob: -12.00032901763916
    5. ':' → logprob: -12.50032901763916
    6. '(n' → logprob: -13.25032901763916
    7. '():' → logprob: -13.75032901763916
    8. 'n' → logprob: -15.37532901763916
    9. ']:' → logprob: -15.50032901763916
    10. ''):' → logprob: -16.000329971313477

Token 105: '   ' (ID: 271)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.4257790744304657
    2. '   ' → logprob: -1.800779104232788
    3. '[' → logprob: -2.050779104232788
    4. ' [' → logprob: -3.050779104232788
    5. '[
' → logprob: -6.175778865814209
    6. '[i' → logprob: -6.675778865814209
    7. '[n' → logprob: -6.800778865814209
    8. '[x' → logprob: -8.300779342651367
    9. ' return' → logprob: -8.425779342651367
    10. 'return' → logprob: -8.800779342651367

Token 106: ' return' (ID: 622)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.040822163224220276
    2. '[' → logprob: -3.2908222675323486
    3. 'return' (adapté à ' return') → logprob: -6.4158220291137695
    4. '[
' → logprob: -7.9158220291137695
    5. '[n' → logprob: -8.66582202911377
    6. '[i' → logprob: -8.66582202911377
    7. ' [' → logprob: -8.91582202911377
    8. '[x' → logprob: -9.41582202911377
    9. '   ' → logprob: -9.54082202911377
    10. '[r' → logprob: -9.91582202911377

Token 107: ' [' (ID: 723)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.3871996998786926
    2. ' [' → logprob: -1.1371996402740479
    3. '[n' → logprob: -8.762199401855469
    4. '[' → logprob: -8.887199401855469
    5. '[Int' → logprob: -10.887199401855469
    6. ' ' → logprob: -12.137199401855469
    7. '[i' → logprob: -12.637199401855469
    8. '[input' → logprob: -13.387199401855469
    9. '[x' → logprob: -13.637199401855469
    10. '[a' → logprob: -13.762199401855469

Token 108: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.002206047298386693
    2. '[int' → logprob: -6.127205848693848
    3. ' int' → logprob: -11.627205848693848
    4. '(int' → logprob: -11.877205848693848
    5. '   ' → logprob: -13.002205848693848
    6. '<int' → logprob: -13.752205848693848
    7. ']int' → logprob: -14.752205848693848
    8. '[' → logprob: -14.752205848693848
    9. 'n' → logprob: -15.377205848693848
    10. '=int' → logprob: -15.752205848693848

Token 109: '(input' (ID: 10054)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -9.245724504580721e-05
    2. '(input' → logprob: -9.375092506408691
    3. 'x' → logprob: -12.125092506408691
    4. '(' → logprob: -14.250092506408691
    5. 'input' → logprob: -14.500092506408691
    6. ' (' → logprob: -15.000092506408691
    7. ']' → logprob: -16.125091552734375
    8. '   ' → logprob: -16.125091552734375
    9. '(i' → logprob: -16.375091552734375
    10. '
' → logprob: -16.375091552734375

Token 110: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.016168443486094475
    2. '()' → logprob: -4.141168594360352
    3. ')' → logprob: -9.391168594360352
    4. ' ())' → logprob: -10.391168594360352
    5. '`()' → logprob: -12.266168594360352
    6. ' ' → logprob: -12.391168594360352
    7. '())
' → logprob: -13.141168594360352
    8. '   ' → logprob: -13.391168594360352
    9. '"' → logprob: -13.516168594360352
    10. '(' → logprob: -13.641168594360352

Token 111: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -4.704065213445574e-05
    2. 'for' → logprob: -10.750046730041504
    3. ' ()' → logprob: -11.000046730041504
    4. ')' → logprob: -12.250046730041504
    5. ' for' → logprob: -13.125046730041504
    6. '()]' → logprob: -14.125046730041504
    7. '()
' → logprob: -14.250046730041504
    8. '   ' → logprob: -15.250046730041504
    9. '(' → logprob: -15.375046730041504
    10. '())' → logprob: -16.00004768371582

Token 112: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00019328886992298067
    2. ' _' → logprob: -9.12519359588623
    3. ' range' → logprob: -9.87519359588623
    4. ' in' → logprob: -10.62519359588623
    5. 'range' → logprob: -11.75019359588623
    6. '_range' → logprob: -14.87519359588623
    7. 'in' → logprob: -16.000192642211914
    8. ' ' → logprob: -17.000192642211914
    9. 'n' → logprob: -17.250192642211914
    10. '_n' → logprob: -17.625192642211914

Token 113: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12729237973690033
    2. 'in' → logprob: -2.1272923946380615
    3. 'range' → logprob: -8.00229263305664
    4. ' ' → logprob: -10.87729263305664
    5. '  ' → logprob: -12.75229263305664
    6. 'n' → logprob: -13.00229263305664
    7. '   ' → logprob: -13.12729263305664
    8. ' range' → logprob: -13.12729263305664
    9. 'import' → logprob: -15.00229263305664
    10. 'i' → logprob: -15.00229263305664

Token 114: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0040785204619169235
    2. ' range' → logprob: -5.504078388214111
    3. 'n' → logprob: -17.379077911376953
    4. ' ' → logprob: -17.754077911376953
    5. '(range' → logprob: -17.879077911376953
    6. '	range' → logprob: -18.129077911376953
    7. 'rang' → logprob: -18.754077911376953
    8. 'ran' → logprob: -20.254077911376953
    9. '_range' → logprob: -20.379077911376953
    10. 'r' → logprob: -20.879077911376953

Token 115: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0012785687576979399
    2. 'n' → logprob: -6.751278400421143
    3. '(' → logprob: -9.2512788772583
    4. ' (' → logprob: -11.8762788772583
    5. ' n' → logprob: -12.1262788772583
    6. '	n' → logprob: -18.126277923583984
    7. '(
' → logprob: -18.376277923583984
    8. ')n' → logprob: -20.251277923583984
    9. '(nn' → logprob: -20.626277923583984
    10. '<n' → logprob: -21.126277923583984

Token 116: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -2.141186450899113e-05
    2. ']' → logprob: -11.250020980834961
    3. ')' → logprob: -12.000020980834961
    4. ')]
' → logprob: -13.750020980834961
    5. '()]' → logprob: -15.000020980834961
    6. ' )' → logprob: -15.375020980834961
    7. '(n' → logprob: -16.37502098083496
    8. ' ]' → logprob: -16.62502098083496
    9. '')]' → logprob: -16.75002098083496
    10. '}]' → logprob: -16.87502098083496

Token 117: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.007070539984852076
    2. '(' → logprob: -5.007070541381836
    3. '(def' → logprob: -9.007070541381836
    4. '(
' → logprob: -9.257070541381836
    5. '(n' → logprob: -10.257070541381836
    6. '```' → logprob: -10.632070541381836
    7. 'n' → logprob: -10.757070541381836
    8. '[' → logprob: -11.132070541381836
    9. ' def' → logprob: -11.382070541381836
    10. 'd' → logprob: -11.382070541381836

Token 118: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.04342274367809296
    2. 'n' → logprob: -3.1684226989746094
    3. '_' → logprob: -8.66842269897461
    4. '_n' → logprob: -8.91842269897461
    5. ' ' → logprob: -9.66842269897461
    6. '1' → logprob: -10.29342269897461
    7. ' _' → logprob: -11.29342269897461
    8. '2' → logprob: -12.54342269897461
    9. '3' → logprob: -13.29342269897461
    10. '   ' → logprob: -14.04342269897461

Token 119: '3' (ID: 18)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01432415097951889
    2. '3' → logprob: -4.264324188232422
    3. '2' → logprob: -8.764324188232422
    4. '
' → logprob: -13.764324188232422
    5. '```' → logprob: -13.889324188232422
    6. '4' → logprob: -14.139324188232422
    7. ' ' → logprob: -14.639324188232422
    8. '0' → logprob: -14.764324188232422
    9. '12' → logprob: -15.451824188232422
    10. '11' → logprob: -15.576824188232422

Token 120: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -8.637786231702194e-05
    2. '(' → logprob: -9.375086784362793
    3. ' (' → logprob: -13.500086784362793
    4. '()' → logprob: -17.500085830688477
    5. '(
' → logprob: -17.500085830688477
    6. 'n' → logprob: -17.875085830688477
    7. '(N' → logprob: -18.500085830688477
    8. '
' → logprob: -19.375085830688477
    9. '```' → logprob: -19.750085830688477
    10. ' ' → logprob: -20.000085830688477

Token 121: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01469330582767725
    2. '(n' → logprob: -4.889693260192871
    3. ')' → logprob: -5.139693260192871
    4. '):
' → logprob: -6.764693260192871
    5. ']:' → logprob: -10.889693260192871
    6. ' ):' → logprob: -11.514693260192871
    7. ':' → logprob: -11.764693260192871
    8. '(' → logprob: -12.389693260192871
    9. '   ' → logprob: -13.514693260192871
    10. ']' → logprob: -14.264693260192871

Token 122: '   ' (ID: 271)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.4329741895198822
    2. '[' → logprob: -1.4329742193222046
    3. '   ' → logprob: -2.557974100112915
    4. '[n' → logprob: -3.807974100112915
    5. '[
' → logprob: -5.307974338531494
    6. 'return' → logprob: -6.182974338531494
    7. '[x' → logprob: -6.307974338531494
    8. ' [' → logprob: -7.057974338531494
    9. '[Int' → logprob: -7.057974338531494
    10. '[i' → logprob: -7.182974338531494

Token 123: ' return' (ID: 622)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.01126120239496231
    2. '[' → logprob: -4.511260986328125
    3. '[Int' → logprob: -9.511260986328125
    4. 'return' (adapté à ' return') → logprob: -10.136260986328125
    5. '[x' → logprob: -10.511260986328125
    6. '[i' → logprob: -10.636260986328125
    7. ' [' → logprob: -11.011260986328125
    8. '[
' → logprob: -11.761260986328125
    9. '[n' → logprob: -11.761260986328125
    10. '   ' → logprob: -12.011260986328125

Token 124: ' [[' (ID: 9237)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[int' → logprob: -3.5597102396423e-05
    2. '[n' → logprob: -10.875035285949707
    3. '[Int' → logprob: -11.750035285949707
    4. '   ' → logprob: -12.625035285949707
    5. '[' → logprob: -12.625035285949707
    6. '[x' → logprob: -13.875035285949707
    7. ' [' → logprob: -14.375035285949707
    8. '[input' → logprob: -15.125035285949707
    9. '[[' → logprob: -16.250036239624023
    10. '[i' → logprob: -16.375036239624023

Token 125: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -2.2200749754119897e-06
    2. '[int' → logprob: -13.500001907348633
    3. ']int' → logprob: -15.625001907348633
    4. ' int' → logprob: -15.875001907348633
    5. '   ' → logprob: -16.000001907348633
    6. 'map' → logprob: -16.250001907348633
    7. '
' → logprob: -16.500001907348633
    8. '	int' → logprob: -16.625001907348633
    9. '  ' → logprob: -16.875001907348633
    10. 'ints' → logprob: -17.500001907348633

Token 126: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -1.4498052223643754e-05
    2. '(' → logprob: -11.250014305114746
    3. 'x' → logprob: -14.375014305114746
    4. '(y' → logprob: -15.375014305114746
    5. '(
' → logprob: -15.625014305114746
    6. '(int' → logprob: -16.125015258789062
    7. ' (' → logprob: -16.625015258789062
    8. ']' → logprob: -16.750015258789062
    9. '(i' → logprob: -16.750015258789062
    10. '(s' → logprob: -17.250015258789062

Token 127: ')' (ID: 8)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.26154476404190063
    2. ')' → logprob: -1.5115447044372559
    3. 'for' → logprob: -5.761544704437256
    4. '()' → logprob: -5.886544704437256
    5. ' for' → logprob: -6.261544704437256
    6. ' in' → logprob: -7.386544704437256
    7. ' )' → logprob: -8.261545181274414
    8. ')x' → logprob: -8.511545181274414
    9. '   ' → logprob: -8.886545181274414
    10. 'x' → logprob: -9.386545181274414

Token 128: ' for' (ID: 395)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.11532968282699585
    2. 'for' → logprob: -2.8653297424316406
    3. ' for' → logprob: -2.9903297424316406
    4. ' in' → logprob: -7.240329742431641
    5. 'in' → logprob: -8.36532974243164
    6. ')' → logprob: -8.61532974243164
    7. 'x' → logprob: -8.99032974243164
    8. '()' → logprob: -9.36532974243164
    9. 'y' → logprob: -9.36532974243164
    10. '(' → logprob: -9.49032974243164

Token 129: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.009538374841213226
    2. 'x' → logprob: -4.884538173675537
    3. ' input' → logprob: -6.509538173675537
    4. ' ' → logprob: -8.259538650512695
    5. 'input' → logprob: -9.384538650512695
    6. '<|end|>' → logprob: -9.384538650512695
    7. 's' → logprob: -12.134538650512695
    8. ' s' → logprob: -12.884538650512695
    9. ' in' → logprob: -13.009538650512695
    10. '(x' → logprob: -13.759538650512695

Token 130: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.38721388578414917
    2. 'in' → logprob: -1.137213945388794
    3. 's' → logprob: -8.887213706970215
    4. 'input' → logprob: -9.637213706970215
    5. '()' → logprob: -9.762213706970215
    6. '(input' → logprob: -10.637213706970215
    7. '(x' → logprob: -11.387213706970215
    8. 'x' → logprob: -11.887213706970215
    9. '	in' → logprob: -12.012213706970215
    10. 'import' → logprob: -12.262213706970215

Token 131: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.16023863852024078
    2. ' input' → logprob: -1.9102386236190796
    3. '(input' → logprob: -11.660238265991211
    4. 's' → logprob: -13.035238265991211
    5. ' ' → logprob: -14.035238265991211
    6. '<input' → logprob: -14.535238265991211
    7. '<|end|>' → logprob: -14.535238265991211
    8. '=input' → logprob: -14.785238265991211
    9. '	input' → logprob: -14.910238265991211
    10. ' s' → logprob: -15.285238265991211

Token 132: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -6.704273118884885e-07
    2. '()' → logprob: -14.500000953674316
    3. ' ().' → logprob: -16.0
    4. '.' → logprob: -19.5
    5. '(' → logprob: -19.625
    6. '.split' → logprob: -19.875
    7. '()].' → logprob: -20.125
    8. ' .' → logprob: -21.625
    9. 'split' → logprob: -21.625
    10. '()
' → logprob: -22.125

Token 133: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.2200749754119897e-06
    2. 'plit' → logprob: -13.875001907348633
    3. ' split' → logprob: -14.000001907348633
    4. ' ' → logprob: -16.125001907348633
    5. 'strip' → logprob: -16.125001907348633
    6. '(split' → logprob: -16.375001907348633
    7. 'spl' → logprob: -16.750001907348633
    8. 'rstrip' → logprob: -17.750001907348633
    9. '.split' → logprob: -18.000001907348633
    10. '```' → logprob: -18.125001907348633

Token 134: '()]' (ID: 59063)
  Prédit: '()]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.006721417419612408
    2. '()' → logprob: -5.006721496582031
    3. '()]
' → logprob: -13.256721496582031
    4. ']' → logprob: -13.256721496582031
    5. '(' → logprob: -13.506721496582031
    6. ' ()' → logprob: -14.631721496582031
    7. '())' → logprob: -15.131721496582031
    8. '()
' → logprob: -15.881721496582031
    9. '().' → logprob: -16.25672149658203
    10. ')]' → logprob: -17.13172149658203

Token 135: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7180761098861694
    2. 'for' → logprob: -0.7180761098861694
    3. '()' → logprob: -3.718076229095459
    4. '   ' → logprob: -8.7180757522583
    5. ' ()' → logprob: -10.0930757522583
    6. '(n' → logprob: -10.3430757522583
    7. '()]' → logprob: -10.4680757522583
    8. ')' → logprob: -10.4680757522583
    9. ' ' → logprob: -11.3430757522583
    10. ']' → logprob: -11.3430757522583

Token 136: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.018009578809142113
    2. '_' → logprob: -4.268009662628174
    3. 'range' → logprob: -5.768009662628174
    4. ' _' → logprob: -7.268009662628174
    5. '_range' → logprob: -11.143009185791016
    6. ' n' → logprob: -15.268009185791016
    7. ' in' → logprob: -15.518009185791016
    8. ' ' → logprob: -16.268009185791016
    9. '(range' → logprob: -16.643009185791016
    10. ' xrange' → logprob: -16.643009185791016

Token 137: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6410282850265503
    2. ' in' → logprob: -0.8910282850265503
    3. 'range' → logprob: -2.76602840423584
    4. ' range' → logprob: -9.26602840423584
    5. 'n' → logprob: -12.26602840423584
    6. ' ' → logprob: -13.64102840423584
    7. '(range' → logprob: -14.01602840423584
    8. 'ange' → logprob: -14.01602840423584
    9. 'i' → logprob: -14.39102840423584
    10. '  ' → logprob: -15.39102840423584

Token 138: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0040793512016534805
    2. ' range' → logprob: -5.504079341888428
    3. '(range' → logprob: -14.004079818725586
    4. 'n' → logprob: -16.129079818725586
    5. '	range' → logprob: -17.504079818725586
    6. 'ange' → logprob: -17.754079818725586
    7. '(n' → logprob: -19.129079818725586
    8. 'rang' → logprob: -19.504079818725586
    9. ' xrange' → logprob: -19.879079818725586
    10. ' n' → logprob: -20.254079818725586

Token 139: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -4.453737710718997e-05
    2. 'n' → logprob: -10.375044822692871
    3. '(' → logprob: -11.250044822692871
    4. ' (' → logprob: -15.750044822692871
    5. ' n' → logprob: -17.000043869018555
    6. '(
' → logprob: -19.500043869018555
    7. '(nn' → logprob: -21.375043869018555
    8. '	n' → logprob: -21.625043869018555
    9. '<|end|>' → logprob: -22.500043869018555
    10. '(num' → logprob: -22.500043869018555

Token 140: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -4.704065213445574e-05
    2. ']' → logprob: -10.250046730041504
    3. ')' → logprob: -12.125046730041504
    4. '()]' → logprob: -12.375046730041504
    5. ')]
' → logprob: -13.875046730041504
    6. '(n' → logprob: -15.500046730041504
    7. '()' → logprob: -16.25004768371582
    8. '))' → logprob: -16.37504768371582
    9. ')}' → logprob: -16.37504768371582
    10. '}]' → logprob: -16.62504768371582

Token 141: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04752324894070625
    2. 'd' → logprob: -3.797523260116577
    3. '#' → logprob: -4.172523021697998
    4. '(' → logprob: -6.047523021697998
    5. '
' → logprob: -6.047523021697998
    6. '<|end|>' → logprob: -7.047523021697998
    7. '```' → logprob: -7.172523021697998
    8. ':' → logprob: -7.422523021697998
    9. '\' → logprob: -8.297523498535156
    10. '()' → logprob: -8.547523498535156

Token 142: ' t' (ID: 260)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.6279939413070679
    2. 'n' → logprob: -1.3779939413070679
    3. 'a' → logprob: -3.8779940605163574
    4. ' main' → logprob: -3.8779940605163574
    5. ' m' → logprob: -4.002994060516357
    6. 'm' → logprob: -4.127994060516357
    7. ' s' → logprob: -4.127994060516357
    8. ' a' → logprob: -4.252994060516357
    9. ' t' → logprob: -4.502994060516357
    10. 's' → logprob: -4.752994060516357

Token 143: '3' (ID: 18)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0015484257601201534
    2. '1' → logprob: -7.6265482902526855
    3. 'o' → logprob: -8.251548767089844
    4. '()' → logprob: -8.626548767089844
    5. '2' → logprob: -9.126548767089844
    6. '4' → logprob: -9.251548767089844
    7. '3' → logprob: -9.626548767089844
    8. 'uple' → logprob: -9.751548767089844
    9. '(n' → logprob: -10.126548767089844
    10. 's' → logprob: -10.126548767089844

Token 144: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -5.32392441527918e-05
    2. '(' → logprob: -10.000053405761719
    3. '0' → logprob: -13.000053405761719
    4. 'n' → logprob: -13.750053405761719
    5. '():' → logprob: -14.125053405761719
    6. ' (' → logprob: -14.500053405761719
    7. '()' → logprob: -14.625053405761719
    8. 'def' → logprob: -14.750053405761719
    9. '(s' → logprob: -14.875053405761719
    10. '3' → logprob: -15.125053405761719

Token 145: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.014195243827998638
    2. '(n' → logprob: -4.889195442199707
    3. '):
' → logprob: -5.139195442199707
    4. ')' → logprob: -7.389195442199707
    5. ' ):' → logprob: -10.139195442199707
    6. ']:' → logprob: -11.139195442199707
    7. 'n' → logprob: -11.514195442199707
    8. ')]' → logprob: -11.639195442199707
    9. ')n' → logprob: -12.514195442199707
    10. ':' → logprob: -13.264195442199707

Token 146: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4581172466278076
    2. 'return' → logprob: -1.2081172466278076
    3. ' return' → logprob: -3.2081172466278076
    4. '[' → logprob: -4.083117485046387
    5. '[[' → logprob: -5.708117485046387
    6. '[]' → logprob: -6.333117485046387
    7. ' [' → logprob: -6.583117485046387
    8. '[t' → logprob: -7.083117485046387
    9. '[int' → logprob: -7.208117485046387
    10. '\t' → logprob: -7.708117485046387

Token 147: ' return' (ID: 622)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8852983117103577
    2. 'tuple' → logprob: -1.010298252105713
    3. '[int' → logprob: -2.010298252105713
    4. '[t' → logprob: -3.135298252105713
    5. '[[' → logprob: -3.760298252105713
    6. '[(' → logprob: -5.260298252105713
    7. 'return' (adapté à ' return') → logprob: -5.385298252105713
    8. '[str' → logprob: -5.635298252105713
    9. '(tuple' → logprob: -5.760298252105713
    10. '[n' → logprob: -6.510298252105713

Token 148: ' [' (ID: 723)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.2395252287387848
    2. '[' → logprob: -2.239525318145752
    3. '[[' → logprob: -3.614525318145752
    4. '(tuple' → logprob: -3.739525318145752
    5. '[(' → logprob: -3.989525318145752
    6. '[input' → logprob: -4.739525318145752
    7. '[t' → logprob: -4.739525318145752
    8. '[int' → logprob: -5.114525318145752
    9. ' tuple' → logprob: -5.364525318145752
    10. '[n' → logprob: -5.614525318145752

Token 149: 'tuple' (ID: 52834)
  Prédit: 'tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.0005346827092580497
    2. '(tuple' → logprob: -7.625534534454346
    3. ' tuple' → logprob: -10.500535011291504
    4. '[' → logprob: -12.375535011291504
    5. '(int' → logprob: -12.375535011291504
    6. 'int' → logprob: -12.875535011291504
    7. 'float' → logprob: -13.375535011291504
    8. 'input' → logprob: -13.500535011291504
    9. '[int' → logprob: -13.625535011291504
    10. 'list' → logprob: -14.375535011291504

Token 150: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.17223943769931793
    2. '(input' → logprob: -2.0472395420074463
    3. '(x' → logprob: -3.6722395420074463
    4. '(map' → logprob: -5.922239303588867
    5. '(' → logprob: -7.797239303588867
    6. '(s' → logprob: -8.547239303588867
    7. '[int' → logprob: -8.547239303588867
    8. ' (' → logprob: -9.422239303588867
    9. '([' → logprob: -9.797239303588867
    10. '(n' → logprob: -10.672239303588867

Token 151: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -8.537868779967539e-06
    2. '(' → logprob: -12.250008583068848
    3. ' (' → logprob: -13.000008583068848
    4. 'x' → logprob: -13.625008583068848
    5. '(i' → logprob: -16.75000762939453
    6. '(
' → logprob: -16.75000762939453
    7. '(s' → logprob: -17.00000762939453
    8. '   ' → logprob: -17.75000762939453
    9. 's' → logprob: -18.00000762939453
    10. '```' → logprob: -18.00000762939453

Token 152: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.023053867742419243
    2. '()' → logprob: -3.8980538845062256
    3. '(x' → logprob: -6.0230536460876465
    4. '())' → logprob: -10.523054122924805
    5. ' )' → logprob: -11.148054122924805
    6. 'for' → logprob: -11.273054122924805
    7. '   ' → logprob: -12.023054122924805
    8. ' ()' → logprob: -12.273054122924805
    9. ' for' → logprob: -12.273054122924805
    10. ' in' → logprob: -13.023054122924805

Token 153: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.591363251209259
    2. ')' → logprob: -1.4663631916046143
    3. ' for' → logprob: -1.7163631916046143
    4. 'for' → logprob: -3.4663631916046143
    5. '(x' → logprob: -5.716363430023193
    6. ' )' → logprob: -8.466362953186035
    7. ' ' → logprob: -8.591362953186035
    8. '<|end|>' → logprob: -8.716362953186035
    9. ' ()' → logprob: -8.841362953186035
    10. '(input' → logprob: -8.966362953186035

Token 154: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.020630409941077232
    2. 'x' → logprob: -3.895630359649658
    3. ' ' → logprob: -9.645630836486816
    4. ' input' → logprob: -11.895630836486816
    5. ' in' → logprob: -12.020630836486816
    6. 's' → logprob: -13.020630836486816
    7. '(x' → logprob: -13.270630836486816
    8. ' _' → logprob: -13.270630836486816
    9. '_' → logprob: -13.520630836486816
    10. 'input' → logprob: -14.020630836486816

Token 155: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012709764763712883
    2. 'in' → logprob: -4.387709617614746
    3. 'input' → logprob: -8.762709617614746
    4. 's' → logprob: -10.887709617614746
    5. ' input' → logprob: -11.512709617614746
    6. ' ' → logprob: -12.012709617614746
    7. ')' → logprob: -13.387709617614746
    8. 'import' → logprob: -13.387709617614746
    9. 'x' → logprob: -14.137709617614746
    10. '_' → logprob: -14.512709617614746

Token 156: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.38688093423843384
    2. ' input' → logprob: -1.136880874633789
    3. '(input' → logprob: -12.136880874633789
    4. ' ' → logprob: -12.886880874633789
    5. '<input' → logprob: -14.511880874633789
    6. '	input' → logprob: -14.886880874633789
    7. '=input' → logprob: -15.386880874633789
    8. '  ' → logprob: -15.761880874633789
    9. '_input' → logprob: -15.761880874633789
    10. 's' → logprob: -15.761880874633789

Token 157: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.5776860184123507e-06
    2. '()' → logprob: -13.00000286102295
    3. '.' → logprob: -16.125001907348633
    4. ' ().' → logprob: -16.375001907348633
    5. '(' → logprob: -17.250001907348633
    6. ' .' → logprob: -17.875001907348633
    7. '.split' → logprob: -19.000001907348633
    8. '()).' → logprob: -19.750001907348633
    9. ').' → logprob: -20.250001907348633
    10. '()
' → logprob: -21.000001907348633

Token 158: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -6.2729995988775045e-06
    2. 'strip' → logprob: -12.875006675720215
    3. ' split' → logprob: -12.875006675720215
    4. ' ' → logprob: -14.625006675720215
    5. 'plit' → logprob: -15.000006675720215
    6. '.split' → logprob: -15.625006675720215
    7. '   ' → logprob: -17.3750057220459
    8. '(split' → logprob: -17.3750057220459
    9. '```' → logprob: -18.1250057220459
    10. 'spl' → logprob: -18.2500057220459

Token 159: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.022173715755343437
    2. '()' → logprob: -4.022173881530762
    3. '()]' → logprob: -5.522173881530762
    4. '()))' → logprob: -12.272173881530762
    5. '(' → logprob: -12.522173881530762
    6. '()
' → logprob: -12.897173881530762
    7. '())
' → logprob: -13.147173881530762
    8. ' ())' → logprob: -13.272173881530762
    9. '()[' → logprob: -14.147173881530762
    10. ')]' → logprob: -14.647173881530762

Token 160: ' for' (ID: 395)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.9256370067596436
    2. ' for' → logprob: -1.4256370067596436
    3. 'for' → logprob: -1.4256370067596436
    4. ')' → logprob: -2.9256370067596436
    5. '()' → logprob: -3.1756370067596436
    6. '(' → logprob: -4.425637245178223
    7. ']' → logprob: -4.800637245178223
    8. '   ' → logprob: -5.800637245178223
    9. '()]' → logprob: -6.050637245178223
    10. ')]' → logprob: -6.425637245178223

Token 161: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.16105838119983673
    2. ' _' → logprob: -1.9110584259033203
    3. ' range' → logprob: -7.16105842590332
    4. '_range' → logprob: -10.53605842590332
    5. 'range' → logprob: -10.53605842590332
    6. ' in' → logprob: -12.41105842590332
    7. ' ' → logprob: -15.03605842590332
    8. '_in' → logprob: -16.91105842590332
    9. ' ' → logprob: -17.03605842590332
    10. ' xrange' → logprob: -18.16105842590332

Token 162: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5760703682899475
    2. 'in' → logprob: -0.8260703682899475
    3. 'range' → logprob: -9.201070785522461
    4. ' ' → logprob: -11.076070785522461
    5. '  ' → logprob: -12.076070785522461
    6. '   ' → logprob: -12.201070785522461
    7. ' range' → logprob: -14.076070785522461
    8. '    ' → logprob: -14.326070785522461
    9. 'inx' → logprob: -14.701070785522461
    10. 'n' → logprob: -15.076070785522461

Token 163: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.01417080033570528
    2. ' range' → logprob: -4.2641706466674805
    3. '(range' → logprob: -11.88917064666748
    4. '	range' → logprob: -15.76417064666748
    5. ' ' → logprob: -16.764171600341797
    6. 'n' → logprob: -17.139171600341797
    7. 'rang' → logprob: -17.264171600341797
    8. 'ange' → logprob: -17.389171600341797
    9. '   ' → logprob: -17.639171600341797
    10. 'r' → logprob: -17.639171600341797

Token 164: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0005073997308500111
    2. ' (' → logprob: -7.750507354736328
    3. '(' → logprob: -9.500507354736328
    4. ' n' → logprob: -13.750507354736328
    5. 'n' → logprob: -14.000507354736328
    6. '(
' → logprob: -17.125507354736328
    7. ' ' → logprob: -19.375507354736328
    8. '   ' → logprob: -20.000507354736328
    9. ')n' → logprob: -20.375507354736328
    10. ')' → logprob: -20.500507354736328

Token 165: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -5.490809417096898e-05
    2. '()]' → logprob: -10.500055313110352
    3. ']' → logprob: -11.375055313110352
    4. ')]
' → logprob: -12.000055313110352
    5. ')' → logprob: -12.000055313110352
    6. '()' → logprob: -13.375055313110352
    7. '())' → logprob: -14.125055313110352
    8. ' )' → logprob: -14.625055313110352
    9. '')]' → logprob: -15.250055313110352
    10. '   ' → logprob: -15.875055313110352

Token 166: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.02652263641357422
    2. 'd' → logprob: -4.276522636413574
    3. '#' → logprob: -4.901522636413574
    4. '(' → logprob: -5.526522636413574
    5. ':' → logprob: -7.651522636413574
    6. 'a' → logprob: -9.651522636413574
    7. '[' → logprob: -9.651522636413574
    8. '()' → logprob: -10.026522636413574
    9. '```' → logprob: -10.026522636413574
    10. 'n' → logprob: -10.151522636413574

Token 167: ' p' (ID: 275)
  Prédit: ' t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.5102669596672058
    2. 't' → logprob: -1.6352670192718506
    3. ' n' → logprob: -2.5102670192718506
    4. 'n' → logprob: -3.1352670192718506
    5. ' s' → logprob: -3.1352670192718506
    6. 's' → logprob: -3.7602670192718506
    7. '0' → logprob: -5.7602667808532715
    8. ' main' → logprob: -6.8852667808532715
    9. ' p' → logprob: -7.1352667808532715
    10. ' d' → logprob: -7.1352667808532715

Token 168: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5620839595794678
    2. 'r' → logprob: -1.0620839595794678
    3. '3' → logprob: -3.5620839595794678
    4. 'def' → logprob: -4.312084197998047
    5. '1' → logprob: -4.562084197998047
    6. 'erm' → logprob: -5.062084197998047
    7. 'ass' → logprob: -5.562084197998047
    8. 'ar' → logprob: -5.812084197998047
    9. 'as' → logprob: -6.562084197998047
    10. '4' → logprob: -6.812084197998047

Token 169: '(b' (ID: 3229)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0003168737457599491
    2. '():
' → logprob: -8.875316619873047
    3. '()' → logprob: -9.500316619873047
    4. 'def' → logprob: -10.000316619873047
    5. '0' → logprob: -10.250316619873047
    6. ' ():' → logprob: -11.250316619873047
    7. '_' → logprob: -12.875316619873047
    8. 's' → logprob: -13.125316619873047
    9. 'a' → logprob: -14.500316619873047
    10. '(' → logprob: -14.500316619873047

Token 170: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.013913490809500217
    2. ')' → logprob: -5.388913631439209
    3. 'y' → logprob: -5.638913631439209
    4. 'oolean' → logprob: -6.013913631439209
    5. '):
' → logprob: -6.263913631439209
    6. 'ool' → logprob: -7.888913631439209
    7. '[]):' → logprob: -8.76391315460205
    8. '=' → logprob: -8.88891315460205
    9. ':' → logprob: -9.01391315460205
    10. 'r' → logprob: -9.76391315460205

Token 171: ' yes' (ID: 14531)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.4424529075622559
    2. 's' → logprob: -1.4424529075622559
    3. 'x' → logprob: -1.6924529075622559
    4. 'a' → logprob: -2.317452907562256
    5. 'i' → logprob: -3.067452907562256
    6. 'l' → logprob: -3.567452907562256
    7. 'v' → logprob: -3.692452907562256
    8. 'c' → logprob: -3.942452907562256
    9. 'e' → logprob: -3.942452907562256
    10. 'sep' → logprob: -4.067452907562256

Token 172: '="' (ID: 580)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0543096587061882
    2. ',' → logprob: -4.179309844970703
    3. '=True' → logprob: -4.304309844970703
    4. '=None' → logprob: -5.304309844970703
    5. '='' → logprob: -5.304309844970703
    6. '=',' → logprob: -5.304309844970703
    7. '=",' → logprob: -6.429309844970703
    8. '_str' → logprob: -6.554309844970703
    9. ':' → logprob: -6.554309844970703
    10. ' =' → logprob: -6.679309844970703

Token 173: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.02214433066546917
    2. 'YES' → logprob: -4.522144317626953
    3. '")' → logprob: -5.397144317626953
    4. 'yes' → logprob: -6.272144317626953
    5. 'Y' → logprob: -6.397144317626953
    6. ' Yes' → logprob: -6.522144317626953
    7. '",' → logprob: -8.022144317626953
    8. ' yes' → logprob: -8.022144317626953
    9. 'y' → logprob: -8.147144317626953
    10. '"' → logprob: -8.522144317626953

Token 174: '",' (ID: 672)
  Prédit: '",'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.00013381359167397022
    2. '"):
' → logprob: -9.875133514404297
    3. ',' → logprob: -10.500133514404297
    4. '"):' → logprob: -10.625133514404297
    5. '",
' → logprob: -11.625133514404297
    6. ' ",' → logprob: -11.750133514404297
    7. '"' → logprob: -11.750133514404297
    8. 'Yes' → logprob: -13.250133514404297
    9. '',' → logprob: -13.625133514404297
    10. '")' → logprob: -14.000133514404297

Token 175: ' no' (ID: 860)
  Prédit: ' no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' no' → logprob: -0.5759839415550232
    2. 'no' → logprob: -0.8259839415550232
    3. ' ' → logprob: -10.575984001159668
    4. '	no' → logprob: -11.825984001159668
    5. '   ' → logprob: -11.950984001159668
    6. '  ' → logprob: -13.575984001159668
    7. '    ' → logprob: -14.200984001159668
    8. 'n' → logprob: -14.325984001159668
    9. 'No' → logprob: -14.700984001159668
    10. ' noo' → logprob: -15.575984001159668

Token 176: '="' (ID: 580)
  Prédit: '="'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '="' → logprob: -0.0019651511684060097
    2. '=' → logprob: -6.251965045928955
    3. '=",' → logprob: -11.251965522766113
    4. '=None' → logprob: -12.001965522766113
    5. '"' → logprob: -12.251965522766113
    6. '="_' → logprob: -12.876965522766113
    7. ')="' → logprob: -13.251965522766113
    8. '=""' → logprob: -13.251965522766113
    9. '="",' → logprob: -13.751965522766113
    10. '=True' → logprob: -13.751965522766113

Token 177: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.002915311371907592
    2. ' No' → logprob: -5.877915382385254
    3. ' ' → logprob: -10.002915382385254
    4. '"No' → logprob: -10.752915382385254
    5. 'NO' → logprob: -10.877915382385254
    6. '"' → logprob: -11.377915382385254
    7. '")' → logprob: -12.127915382385254
    8. ' no' → logprob: -13.377915382385254
    9. ' NO' → logprob: -14.252915382385254
    10. '  ' → logprob: -14.252915382385254

Token 178: '"):
' (ID: 33645)
  Prédit: '"):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"):' → logprob: -0.38957878947257996
    2. '"):
' → logprob: -1.1395788192749023
    3. '")' → logprob: -7.014578819274902
    4. '):' → logprob: -7.139578819274902
    5. '):
' → logprob: -7.389578819274902
    6. ')' → logprob: -8.139578819274902
    7. '"):
' → logprob: -9.764578819274902
    8. '"' → logprob: -10.264578819274902
    9. '",' → logprob: -13.139578819274902
    10. ''):' → logprob: -13.264578819274902

Token 179: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001277257571928203
    2. '
' → logprob: -7.501277446746826
    3. ' return' → logprob: -7.501277446746826
    4. ':
' → logprob: -9.501276969909668
    5. 'return' → logprob: -10.501276969909668
    6. ':return' → logprob: -10.626276969909668
    7. ':' → logprob: -11.001276969909668
    8. '    
' → logprob: -11.251276969909668
    9. '	return' → logprob: -12.251276969909668
    10. '):
' → logprob: -12.501276969909668

Token 180: ' print' (ID: 2123)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.12355329096317291
    2. 'print' (adapté à ' print') → logprob: -2.3735532760620117
    3. ' return' → logprob: -4.373553276062012
    4. '   ' → logprob: -4.998553276062012
    5. 'if' → logprob: -5.623553276062012
    6. ' print' → logprob: -9.373553276062012
    7. ' if' → logprob: -10.623553276062012
    8. '	return' → logprob: -15.748553276062012
    9. '```' → logprob: -15.748553276062012
    10. ' ' → logprob: -15.873553276062012

Token 181: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00010330478107789531
    2. '(f' → logprob: -9.750102996826172
    3. '((' → logprob: -10.250102996826172
    4. 'yes' → logprob: -12.625102996826172
    5. '(
' → logprob: -13.250102996826172
    6. '("' → logprob: -13.875102996826172
    7. '(y' → logprob: -14.000102996826172
    8. '(b' → logprob: -14.250102996826172
    9. '('' → logprob: -14.875102996826172
    10. '(if' → logprob: -15.000102996826172

Token 182: 'yes' (ID: 6763)
  Prédit: 'yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yes' → logprob: -0.0019287518225610256
    2. ' yes' → logprob: -6.251928806304932
    3. '(' → logprob: -16.376928329467773
    4. ' ' → logprob: -17.001928329467773
    5. 'Yes' → logprob: -17.501928329467773
    6. 'b' → logprob: -18.501928329467773
    7. 'ye' → logprob: -18.626928329467773
    8. '_yes' → logprob: -18.626928329467773
    9. '   ' → logprob: -19.126928329467773
    10. '=yes' → logprob: -19.251928329467773

Token 183: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2018686830997467
    2. ' if' → logprob: -1.7018686532974243
    3. ')' → logprob: -7.701868534088135
    4. 'b' → logprob: -13.826869010925293
    5. '"' → logprob: -14.826869010925293
    6. '()' → logprob: -14.951869010925293
    7. 'p' → logprob: -14.951869010925293
    8. 'i' → logprob: -15.201869010925293
    9. ' ' → logprob: -15.326869010925293
    10. ')
' → logprob: -15.701869010925293

Token 184: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.008615515194833279
    2. ' b' → logprob: -4.758615493774414
    3. '   ' → logprob: -14.383615493774414
    4. '(b' → logprob: -14.758615493774414
    5. ')b' → logprob: -16.883615493774414
    6. '	b' → logprob: -17.383615493774414
    7. ' ' → logprob: -17.883615493774414
    8. '(' → logprob: -18.383615493774414
    9. '    ' → logprob: -19.008615493774414
    10. 'bool' → logprob: -19.508615493774414

Token 185: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.023246875032782555
    2. 'else' → logprob: -3.7732467651367188
    3. ' els' → logprob: -13.523246765136719
    4. ' ' → logprob: -17.14824676513672
    5. '	else' → logprob: -17.14824676513672
    6. ')' → logprob: -18.89824676513672
    7. '```' → logprob: -18.89824676513672
    8. '_else' → logprob: -19.02324676513672
    9. ' el' → logprob: -19.27324676513672
    10. '()' → logprob: -19.39824676513672

Token 186: ' no' (ID: 860)
  Prédit: ' no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' no' → logprob: -0.20142270624637604
    2. 'no' → logprob: -1.7014226913452148
    3. '	no' → logprob: -12.826422691345215
    4. ' ' → logprob: -13.201422691345215
    5. '(no' → logprob: -13.201422691345215
    6. 'f' → logprob: -13.576422691345215
    7. ' f' → logprob: -14.451422691345215
    8. 'n' → logprob: -14.951422691345215
    9. '   ' → logprob: -15.326422691345215
    10. ')' → logprob: -15.951422691345215

Token 187: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1472419600977446e-06
    2. ')
' → logprob: -13.875000953674316
    3. ' )' → logprob: -16.375001907348633
    4. ')`' → logprob: -17.750001907348633
    5. '))' → logprob: -18.125001907348633
    6. '()' → logprob: -18.750001907348633
    7. ')}' → logprob: -18.875001907348633
    8. '),' → logprob: -19.500001907348633
    9. '`)' → logprob: -19.625001907348633
    10. '())' → logprob: -19.625001907348633

Token 188: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00018113377154804766
    2. 'd' → logprob: -8.750181198120117
    3. '#' → logprob: -11.125181198120117
    4. 'p' → logprob: -12.375181198120117
    5. ' def' → logprob: -14.250181198120117
    6. 'from' → logprob: -14.375181198120117
    7. 'b' → logprob: -14.625181198120117
    8. 'de' → logprob: -15.250181198120117
    9. '<|end|>' → logprob: -15.500181198120117
    10. '```' → logprob: -15.500181198120117

Token 189: ' from' (ID: 591)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2648014724254608
    2. 'd' → logprob: -1.5148015022277832
    3. '#' → logprob: -5.889801502227783
    4. 's' → logprob: -6.014801502227783
    5. 'p' → logprob: -6.264801502227783
    6. 'D' → logprob: -6.514801502227783
    7. 'n' → logprob: -6.889801502227783
    8. 'from' → logprob: -7.264801502227783
    9. '_' → logprob: -7.389801502227783
    10. 'import' → logprob: -7.639801502227783

Token 190: ' sys' (ID: 12228)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.5946996808052063
    2. 'typing' → logprob: -1.8446996212005615
    3. 'math' → logprob: -1.9696996212005615
    4. ' typing' → logprob: -2.7196996212005615
    5. ' collections' → logprob: -3.9696996212005615
    6. ' itertools' → logprob: -4.094699859619141
    7. 'it' → logprob: -4.344699859619141
    8. 'copy' → logprob: -5.094699859619141
    9. ' math' → logprob: -5.344699859619141
    10. 'sys' → logprob: -5.469699859619141

Token 191: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.16023732721805573
    2. 'import' → logprob: -1.9102373123168945
    3. '<|end|>' → logprob: -12.035237312316895
    4. '	import' → logprob: -12.535237312316895
    5. ' ' → logprob: -14.160237312316895
    6. ' imports' → logprob: -14.285237312316895
    7. '.stdin' → logprob: -14.410237312316895
    8. '_import' → logprob: -15.160237312316895
    9. ' im' → logprob: -15.410237312316895
    10. '
' → logprob: -15.660237312316895

Token 192: ' set' (ID: 920)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.006037815939635038
    2. ' stdin' → logprob: -6.006037712097168
    3. 'import' → logprob: -6.256037712097168
    4. 'exit' → logprob: -7.381037712097168
    5. 'stdout' → logprob: -8.006037712097168
    6. 'stdlib' → logprob: -8.631037712097168
    7. 'stderr' → logprob: -9.006037712097168
    8. 'argv' → logprob: -9.006037712097168
    9. '<|end|>' → logprob: -9.631037712097168
    10. ' exit' → logprob: -10.006037712097168

Token 193: 'rec' (ID: 9285)
  Prédit: 'rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.0016673270147293806
    2. 'stdin' → logprob: -6.501667499542236
    3. 'set' → logprob: -9.626667022705078
    4. 'import' → logprob: -10.126667022705078
    5. 'exit' → logprob: -10.376667022705078
    6. 'input' → logprob: -12.376667022705078
    7. 'stdout' → logprob: -12.376667022705078
    8. 're' → logprob: -12.376667022705078
    9. 'argv' → logprob: -12.626667022705078
    10. '_rec' → logprob: -13.001667022705078

Token 194: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -3.011373155459296e-05
    2. 'ursive' → logprob: -10.875030517578125
    3. 'ursor' → logprob: -11.875030517578125
    4. 'usion' → logprob: -13.750030517578125
    5. 'urs' → logprob: -14.500030517578125
    6. 'limit' → logprob: -14.750030517578125
    7. 'ur' → logprob: -14.875030517578125
    8. 'import' → logprob: -15.375030517578125
    9. '   ' → logprob: -15.375030517578125
    10. '[' → logprob: -15.500030517578125

Token 195: 'limit' (ID: 19698)
  Prédit: 'ursion'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.002017144113779068
    2. 'limit' → logprob: -6.252017021179199
    3. 'usion' → logprob: -10.6270170211792
    4. 'ursor' → logprob: -10.6270170211792
    5. 'ursive' → logprob: -11.2520170211792
    6. 'ision' → logprob: -11.3770170211792
    7. 'u' → logprob: -12.3770170211792
    8. 'urs' → logprob: -12.8770170211792
    9. 'ur' → logprob: -12.8770170211792
    10. 'def' → logprob: -13.3770170211792

Token 196: '
' (ID: 198)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.7894155383110046
    2. '
' → logprob: -1.1644155979156494
    3. '#' → logprob: -2.7894155979156494
    4. '<|end|>' → logprob: -2.7894155979156494
    5. 's' → logprob: -3.2894155979156494
    6. 'import' → logprob: -4.03941535949707
    7. '\n' → logprob: -4.28941535949707
    8. '  
' → logprob: -5.03941535949707
    9. 'def' → logprob: -5.03941535949707
    10. ' 
' → logprob: -5.03941535949707

Token 197: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.05270473286509514
    2. '<|end|>' → logprob: -3.5527048110961914
    3. '
' → logprob: -4.802704811096191
    4. 's' → logprob: -6.052704811096191
    5. 'def' → logprob: -6.177704811096191
    6. 'import' → logprob: -6.552704811096191
    7. '#set' → logprob: -6.677704811096191
    8. ' ' → logprob: -6.927704811096191
    9. '\n' → logprob: -6.927704811096191
    10. '#
' → logprob: -6.927704811096191

Token 198: ' set' (ID: 920)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.28681036829948425
    2. 'import' → logprob: -1.9118103981018066
    3. '#set' → logprob: -2.7868103981018066
    4. 'set' → logprob: -3.6618103981018066
    5. 'def' → logprob: -5.036810398101807
    6. 's' → logprob: -5.411810398101807
    7. '#import' → logprob: -6.661810398101807
    8. '...' → logprob: -7.661810398101807
    9. 'from' → logprob: -7.911810398101807
    10. '#__' → logprob: -9.286809921264648

Token 199: 'rec' (ID: 9285)
  Prédit: 'rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.048806965351104736
    2. '_rec' → logprob: -3.04880690574646
    3. '_' → logprob: -8.798807144165039
    4. '(rec' → logprob: -11.048807144165039
    5. '	rec' → logprob: -11.423807144165039
    6. 're' → logprob: -11.673807144165039
    7. '_re' → logprob: -11.798807144165039
    8. 'reci' → logprob: -12.048807144165039
    9. 'ec' → logprob: -12.298807144165039
    10. 'r' → logprob: -12.548807144165039

Token 200: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.0005032312474213541
    2. 'urs' → logprob: -7.625503063201904
    3. 'ursive' → logprob: -12.375503540039062
    4. 'ursor' → logprob: -12.750503540039062
    5. '   ' → logprob: -13.500503540039062
    6. ' ' → logprob: -14.000503540039062
    7. 'usion' → logprob: -14.000503540039062
    8. '...' → logprob: -14.500503540039062
    9. '**' → logprob: -14.500503540039062
    10. '[' → logprob: -14.625503540039062

Token 201: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -2.629921436891891e-05
    2. '_limit' → logprob: -11.00002670288086
    3. 'imit' → logprob: -11.62502670288086
    4. '(limit' → logprob: -15.37502670288086
    5. ' limit' → logprob: -15.50002670288086
    6. 'lim' → logprob: -16.62502670288086
    7. 'Limit' → logprob: -17.00002670288086
    8. '```' → logprob: -17.50002670288086
    9. '-limit' → logprob: -17.62502670288086
    10. '.limit' → logprob: -18.37502670288086

Token 202: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.404745439183898e-05
    2. '()' → logprob: -11.12503433227539
    3. '(int' → logprob: -11.50003433227539
    4. ' (' → logprob: -12.62503433227539
    5. '((' → logprob: -13.25003433227539
    6. '100' → logprob: -13.50003433227539
    7. '10' → logprob: -13.50003433227539
    8. '(
' → logprob: -14.12503433227539
    9. ' ' → logprob: -17.12503433227539
    10. '(pow' → logprob: -17.12503433227539

Token 203: '100' (ID: 1353)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0012155943550169468
    2. '100' → logprob: -6.75121545791626
    3. ' ' → logprob: -11.251215934753418
    4. '1' → logprob: -11.376215934753418
    5. 'pow' → logprob: -12.001215934753418
    6. '500' → logprob: -12.876215934753418
    7. '300' → logprob: -12.876215934753418
    8. '200' → logprob: -12.876215934753418
    9. '(' → logprob: -13.001215934753418
    10. '2' → logprob: -13.376215934753418

Token 204: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.16037625074386597
    2. '00' → logprob: -1.9103763103485107
    3. '0' → logprob: -8.91037654876709
    4. '_' → logprob: -11.41037654876709
    5. ')' → logprob: -13.03537654876709
    6. '10' → logprob: -13.91037654876709
    7. '07' → logprob: -14.03537654876709
    8. '001' → logprob: -14.03537654876709
    9. '007' → logprob: -14.41037654876709
    10. '010' → logprob: -14.91037654876709

Token 205: '0' (ID: 15)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0183526873588562
    2. '0' → logprob: -4.018352508544922
    3. ')
' → logprob: -9.268352508544922
    4. '#' → logprob: -10.018352508544922
    5. '()' → logprob: -10.768352508544922
    6. '())' → logprob: -11.393352508544922
    7. ')#' → logprob: -12.018352508544922
    8. ')

' → logprob: -12.018352508544922
    9. '
' → logprob: -12.393352508544922
    10. '00' → logprob: -12.768352508544922

Token 206: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.743758760625497e-05
    2. '#' → logprob: -9.875077247619629
    3. ')
' → logprob: -11.125077247619629
    4. ')#' → logprob: -12.000077247619629
    5. '()' → logprob: -13.250077247619629
    6. '())' → logprob: -13.625077247619629
    7. '))' → logprob: -14.250077247619629
    8. '')' → logprob: -14.750077247619629
    9. ' )' → logprob: -14.875077247619629
    10. ')

' → logprob: -15.625077247619629

Token 207: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07324904948472977
    2. '<|end|>' → logprob: -3.073249101638794
    3. '
' → logprob: -4.323248863220215
    4. '#' → logprob: -5.823248863220215
    5. 'n' → logprob: -6.698248863220215
    6. '\' → logprob: -6.823248863220215
    7. '<|end|>' → logprob: -6.823248863220215
    8. 'import' → logprob: -7.323248863220215
    9. 'a' → logprob: -7.448248863220215
    10. ' ' → logprob: -7.698248863220215

Token 208: ' from' (ID: 591)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.008755200542509556
    2. 'from' → logprob: -5.133755207061768
    3. 'import' → logprob: -6.383755207061768
    4. '#' → logprob: -7.008755207061768
    5. 'class' → logprob: -9.38375473022461
    6. '<|end|>' → logprob: -9.50875473022461
    7. '...' → logprob: -11.25875473022461
    8. 's' → logprob: -11.63375473022461
    9. 'n' → logprob: -12.00875473022461
    10. '<|end|>' → logprob: -12.13375473022461

Token 209: ' collections' (ID: 22690)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.13265426456928253
    2. 'math' → logprob: -2.3826541900634766
    3. ' collections' → logprob: -3.7576541900634766
    4. 'sys' → logprob: -5.382654190063477
    5. ' math' → logprob: -6.507654190063477
    6. ' itertools' → logprob: -6.757654190063477
    7. 'bis' → logprob: -7.382654190063477
    8. 'heap' → logprob: -8.007654190063477
    9. 'it' → logprob: -8.882654190063477
    10. ' sys' → logprob: -9.382654190063477

Token 210: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.004907585214823484
    2. ' import' → logprob: -6.004907608032227
    3. 'from' → logprob: -6.254907608032227
    4. '<|end|>' → logprob: -8.754907608032227
    5. '.import' → logprob: -9.129907608032227
    6. '#import' → logprob: -9.629907608032227
    7. '_import' → logprob: -9.754907608032227
    8. '	import' → logprob: -10.629907608032227
    9. 'collections' → logprob: -10.879907608032227
    10. '-import' → logprob: -11.379907608032227

Token 211: ' Counter' (ID: 32251)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.059098873287439346
    2. ' deque' → logprob: -3.059098958969116
    3. ' defaultdict' → logprob: -4.684098720550537
    4. 'default' → logprob: -7.309098720550537
    5. 'collections' → logprob: -7.559098720550537
    6. 'de' → logprob: -11.559099197387695
    7. 'Counter' → logprob: -12.184099197387695
    8. ' collections' → logprob: -12.809099197387695
    9. ' Counter' → logprob: -13.309099197387695
    10. 'counter' → logprob: -13.309099197387695

Token 212: ',' (ID: 11)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.17492464184761047
    2. 'def' → logprob: -2.424924612045288
    3. '<|end|>' → logprob: -3.174924612045288
    4. '#' → logprob: -4.424924850463867
    5. '
' → logprob: -4.799924850463867
    6. 'import' → logprob: -5.174924850463867
    7. '<|end|>' → logprob: -7.049924850463867
    8. ')' → logprob: -7.174924850463867
    9. ',' → logprob: -7.299924850463867
    10. '```' → logprob: -7.799924850463867

Token 213: ' deque' (ID: 90347)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.16417644917964935
    2. 'deque' → logprob: -1.9141764640808105
    3. ' defaultdict' → logprob: -5.5391764640808105
    4. ' deque' → logprob: -11.289175987243652
    5. 'Default' → logprob: -14.539175987243652
    6. 'named' → logprob: -14.914175987243652
    7. 'Deque' → logprob: -15.164175987243652
    8. 'de' → logprob: -15.289175987243652
    9. '.default' → logprob: -15.539175987243652
    10. 'collections' → logprob: -15.914175987243652

Token 214: ',' (ID: 11)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.4611850380897522
    2. 'def' → logprob: -1.2111849784851074
    3. '#' → logprob: -3.4611849784851074
    4. 'import' → logprob: -3.9611849784851074
    5. '<|end|>' → logprob: -4.461184978485107
    6. '
' → logprob: -4.961184978485107
    7. '<|end|>' → logprob: -7.086184978485107
    8. 'class' → logprob: -7.961184978485107
    9. 'deque' → logprob: -8.086185455322266
    10. ' from' → logprob: -8.336185455322266

Token 215: ' defaultdict' (ID: 107098)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.0019044855143874884
    2. ' defaultdict' → logprob: -6.376904487609863
    3. 'it' → logprob: -9.126904487609863
    4. 'heap' → logprob: -10.001904487609863
    5. 'named' → logprob: -10.376904487609863
    6. 'bis' → logprob: -12.251904487609863
    7. 'Ordered' → logprob: -12.251904487609863
    8. 'Counter' → logprob: -12.376904487609863
    9. 'Default' → logprob: -14.001904487609863
    10. 'deque' → logprob: -14.251904487609863

Token 216: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1408834606409073
    2. 'from' → logprob: -2.390883445739746
    3. '#' → logprob: -3.515883445739746
    4. 'import' → logprob: -5.140883445739746
    5. '
' → logprob: -6.140883445739746
    6. 'class' → logprob: -6.890883445739746
    7. 'n' → logprob: -8.015883445739746
    8. 'd' → logprob: -8.890883445739746
    9. '<|end|>' → logprob: -9.265883445739746
    10. '

' → logprob: -9.640883445739746

Token 217: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.08870464563369751
    2. 'from' → logprob: -2.5887045860290527
    3. 'def' → logprob: -5.713704586029053
    4. 'import' → logprob: -5.713704586029053
    5. '<|end|>' → logprob: -6.838704586029053
    6. '```' → logprob: -7.463704586029053
    7. '[]' → logprob: -7.588704586029053
    8. '...' → logprob: -8.963705062866211
    9. 'pass' → logprob: -9.088705062866211
    10. '<|end|>' → logprob: -9.463705062866211

Token 218: ' import' (ID: 1588)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.03576870262622833
    2. '#' → logprob: -3.910768747329712
    3. 'import' → logprob: -4.285768508911133
    4. 'sys' → logprob: -7.910768508911133
    5. '#from' → logprob: -8.035768508911133
    6. 'Counter' → logprob: -8.285768508911133
    7. 'heap' → logprob: -8.910768508911133
    8. '...' → logprob: -9.910768508911133
    9. '#import' → logprob: -10.160768508911133
    10. 'it' → logprob: -10.160768508911133

Token 219: ' itertools' (ID: 103178)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.8099996447563171
    2. 'heap' → logprob: -0.8099996447563171
    3. 'bis' → logprob: -3.059999704360962
    4. 'math' → logprob: -3.434999704360962
    5. ' heap' → logprob: -4.184999465942383
    6. ' sys' → logprob: -4.434999465942383
    7. ' itertools' → logprob: -5.934999465942383
    8. ' math' → logprob: -7.184999465942383
    9. 'it' → logprob: -8.184999465942383
    10. 're' → logprob: -8.809999465942383

Token 220: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.02705778181552887
    2. 'import' → logprob: -4.902057647705078
    3. '#' → logprob: -5.277057647705078
    4. 'from' → logprob: -5.277057647705078
    5. '<|end|>' → logprob: -5.277057647705078
    6. 'n' → logprob: -6.027057647705078
    7. '\' → logprob: -8.402057647705078
    8. '
' → logprob: -8.402057647705078
    9. 'd' → logprob: -8.527057647705078
    10. '<|end|>' → logprob: -8.652057647705078

Token 221: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4102497100830078
    2. '#' → logprob: -1.5352497100830078
    3. 'from' → logprob: -2.410249710083008
    4. 'import' → logprob: -3.910249710083008
    5. 'for' → logprob: -5.910249710083008
    6. '\' → logprob: -6.285249710083008
    7. '<|end|>' → logprob: -6.785249710083008
    8. '```' → logprob: -7.035249710083008
    9. 'pass' → logprob: -7.285249710083008
    10. '...' → logprob: -7.535249710083008

Token 222: ' import' (ID: 1588)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.42237746715545654
    2. 'import' → logprob: -1.1723774671554565
    3. '#' → logprob: -3.797377586364746
    4. 'def' → logprob: -4.797377586364746
    5. 'math' → logprob: -6.672377586364746
    6. 'for' → logprob: -6.797377586364746
    7. ' from' → logprob: -7.297377586364746
    8. 'range' → logprob: -8.172377586364746
    9. 'sys' → logprob: -8.547377586364746
    10. ' import' → logprob: -8.672377586364746

Token 223: ' math' (ID: 13324)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.05789773911237717
    2. ' math' → logprob: -3.0578978061676025
    3. 'sys' → logprob: -5.307897567749023
    4. 'bis' → logprob: -5.682897567749023
    5. ' sys' → logprob: -8.057897567749023
    6. 'heap' → logprob: -8.182897567749023
    7. 'operator' → logprob: -9.057897567749023
    8. ' bis' → logprob: -9.682897567749023
    9. 're' → logprob: -9.807897567749023
    10. ' heap' → logprob: -10.182897567749023

Token 224: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.024430233985185623
    2. '#' → logprob: -4.399430274963379
    3. '<|end|>' → logprob: -5.274430274963379
    4. 'from' → logprob: -5.899430274963379
    5. 'import' → logprob: -6.399430274963379
    6. 'n' → logprob: -7.399430274963379
    7. 'class' → logprob: -7.649430274963379
    8. 'a' → logprob: -8.399430274963379
    9. '<|end|>' → logprob: -8.899430274963379
    10. '...' → logprob: -9.024430274963379

Token 225: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.30869606137275696
    2. '#' → logprob: -1.8086960315704346
    3. '<|end|>' → logprob: -2.5586960315704346
    4. 'import' → logprob: -4.433696269989014
    5. 'from' → logprob: -5.183696269989014
    6. ' ' → logprob: -6.433696269989014
    7. '<|end|>' → logprob: -6.433696269989014
    8. '\' → logprob: -7.558696269989014
    9. 'n' → logprob: -8.058695793151855
    10. '.' → logprob: -8.308695793151855

Token 226: ' import' (ID: 1588)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3502979576587677
    2. 'from' → logprob: -1.4752979278564453
    3. '#' → logprob: -2.8502979278564453
    4. 'import' → logprob: -4.850297927856445
    5. 'class' → logprob: -8.475297927856445
    6. 'MOD' → logprob: -8.475297927856445
    7. 'n' → logprob: -8.600297927856445
    8. 'a' → logprob: -9.725297927856445
    9. 'N' → logprob: -9.975297927856445
    10. 'mod' → logprob: -10.100297927856445

Token 227: ' network' (ID: 5402)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.46483173966407776
    2. 'bis' → logprob: -1.2148317098617554
    3. ' sys' → logprob: -3.589831829071045
    4. 'heap' → logprob: -4.089831829071045
    5. ' bis' → logprob: -4.839831829071045
    6. 'operator' → logprob: -4.839831829071045
    7. 'fra' → logprob: -5.464831829071045
    8. ' heap' → logprob: -5.589831829071045
    9. 'collections' → logprob: -5.964831829071045
    10. ' operator' → logprob: -6.839831829071045

Token 228: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: 0.0
    2. 'it' → logprob: -17.875
    3. 'import' → logprob: -19.75
    4. '
' → logprob: -20.75
    5. 'a' → logprob: -22.5
    6. 's' → logprob: -22.75
    7. '```' → logprob: -22.75
    8. 'from' → logprob: -22.875
    9. 'X' → logprob: -23.125
    10. 'd' → logprob: -23.625

Token 229: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 230: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.1795976161956787
    2. '<|end|>' → logprob: -1.1795976161956787
    3. '#' → logprob: -1.4295976161956787
    4. '
' → logprob: -2.4295976161956787
    5. '<|end|>' → logprob: -4.054597854614258
    6. 'import' → logprob: -4.179597854614258
    7. 'from' → logprob: -5.429597854614258
    8. '```' → logprob: -5.554597854614258
    9. 'n' → logprob: -5.804597854614258
    10. '\n' → logprob: -6.304597854614258

Token 231: ' from' (ID: 591)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.9411789774894714
    2. 'def' → logprob: -1.1911790370941162
    3. 'from' → logprob: -1.5661790370941162
    4. '#' → logprob: -2.441179037094116
    5. 'n' → logprob: -6.566178798675537
    6. 'class' → logprob: -6.566178798675537
    7. '<|end|>' → logprob: -7.066178798675537
    8. '
' → logprob: -7.566178798675537
    9. '.' → logprob: -7.816178798675537
    10. ')' → logprob: -7.941178798675537

Token 232: ' bis' (ID: 7204)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.7919911742210388
    2. 'collections' → logprob: -1.4169912338256836
    3. ' heap' → logprob: -1.6669912338256836
    4. ' collections' → logprob: -2.7919912338256836
    5. 'sys' → logprob: -3.0419912338256836
    6. 'bis' → logprob: -5.791991233825684
    7. ' sys' → logprob: -6.166991233825684
    8. 'queue' → logprob: -7.666991233825684
    9. ' typing' → logprob: -8.041991233825684
    10. 'typing' → logprob: -8.666991233825684

Token 233: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -5.512236498361744e-07
    2. 'ected' → logprob: -15.625000953674316
    3. 'ec' → logprob: -15.750000953674316
    4. 'e' → logprob: -17.0
    5. 'ector' → logprob: -17.0
    6. 'ectl' → logprob: -17.75
    7. '
' → logprob: -18.0
    8. 'ex' → logprob: -18.625
    9. 'ection' → logprob: -18.75
    10. 'import' → logprob: -19.0

Token 234: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.14272445440292358
    2. ' import' → logprob: -2.0177245140075684
    3. '	import' → logprob: -11.01772403717041
    4. ' ' → logprob: -11.64272403717041
    5. '_import' → logprob: -11.89272403717041
    6. '<|end|>' → logprob: -12.39272403717041
    7. 'from' → logprob: -12.51772403717041
    8. 'm' → logprob: -12.64272403717041
    9. 'ort' → logprob: -13.64272403717041
    10. '```' → logprob: -13.89272403717041

Token 235: ' bis' (ID: 7204)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bis' → logprob: -0.5780631303787231
    2. ' bis' → logprob: -1.0780631303787231
    3. 'ins' → logprob: -2.3280630111694336
    4. ' ins' → logprob: -6.828063011169434
    5. 'import' → logprob: -9.203063011169434
    6. '_left' → logprob: -9.578063011169434
    7. '_ins' → logprob: -11.953063011169434
    8. '_right' → logprob: -12.328063011169434
    9. 'left' → logprob: -12.328063011169434
    10. 'b' → logprob: -12.703063011169434

Token 236: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -1.3425219549390022e-05
    2. 'ec' → logprob: -11.37501335144043
    3. 'e' → logprob: -13.75001335144043
    4. 'ected' → logprob: -14.87501335144043
    5. 'ectl' → logprob: -15.62501335144043
    6. 'earch' → logprob: -16.25001335144043
    7. 'ector' → logprob: -16.62501335144043
    8. 'ecta' → logprob: -16.87501335144043
    9. 't' → logprob: -17.37501335144043
    10. 'ectin' → logprob: -18.37501335144043

Token 237: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.24402959644794464
    2. '<|end|>' → logprob: -2.1190295219421387
    3. '_right' → logprob: -2.4940295219421387
    4. 'import' → logprob: -4.869029521942139
    5. '_' → logprob: -5.869029521942139
    6. '#' → logprob: -7.244029521942139
    7. '<|end|>' → logprob: -7.744029521942139
    8. 'left' → logprob: -7.869029521942139
    9. 'def' → logprob: -7.994029521942139
    10. '```' → logprob: -8.494029998779297

Token 238: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03016037680208683
    2. 'from' → logprob: -3.780160427093506
    3. '#' → logprob: -5.280160427093506
    4. 'n' → logprob: -6.905160427093506
    5. 'a' → logprob: -9.155159950256348
    6. 'import' → logprob: -9.280159950256348
    7. 'class' → logprob: -9.405159950256348
    8. 'd' → logprob: -9.780159950256348
    9. '<|end|>' → logprob: -9.905159950256348
    10. 's' → logprob: -9.905159950256348

Token 239: ' bis' (ID: 7204)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bis' → logprob: -0.0008183232857845724
    2. ' bis' → logprob: -7.125818252563477
    3. 'ins' → logprob: -11.250818252563477
    4. 'b' → logprob: -14.625818252563477
    5. '```' → logprob: -16.375818252563477
    6. 'import' → logprob: -16.375818252563477
    7. ' ins' → logprob: -16.875818252563477
    8. '	b' → logprob: -17.125818252563477
    9. 'binary' → logprob: -17.875818252563477
    10. '
' → logprob: -18.000818252563477

Token 240: 'ect' (ID: 534)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ct' → logprob: -0.22109739482402802
    2. 'ect' → logprob: -1.7210973501205444
    3. 'sect' → logprob: -3.971097469329834
    4. 'n' → logprob: -7.971097469329834
    5. 's' → logprob: -9.346096992492676
    6. 'c' → logprob: -9.846096992492676
    7. '```' → logprob: -9.846096992492676
    8. 'x' → logprob: -11.221096992492676
    9. 't' → logprob: -11.346096992492676
    10. 'cut' → logprob: -12.096096992492676

Token 241: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -0.012553217820823193
    2. 'right' → logprob: -4.3875532150268555
    3. 'ight' → logprob: -11.012553215026855
    4. 'Right' → logprob: -11.262553215026855
    5. '_RIGHT' → logprob: -12.637553215026855
    6. '_' → logprob: -12.637553215026855
    7. ' right' → logprob: -13.512553215026855
    8. ',right' → logprob: -14.012553215026855
    9. ')' → logprob: -14.262553215026855
    10. '_left' → logprob: -14.512553215026855

Token 242: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.027080640196800232
    2. '#' → logprob: -5.027080535888672
    3. 'import' → logprob: -5.152080535888672
    4. '<|end|>' → logprob: -5.527080535888672
    5. 'n' → logprob: -5.777080535888672
    6. 'from' → logprob: -6.152080535888672
    7. '
' → logprob: -6.402080535888672
    8. 'class' → logprob: -7.277080535888672
    9. 'a' → logprob: -7.527080535888672
    10. '\' → logprob: -8.027080535888672

Token 243: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3557429611682892
    2. '<|end|>' → logprob: -1.4807429313659668
    3. '#' → logprob: -3.355742931365967
    4. '<|end|>' → logprob: -4.230742931365967
    5. '```' → logprob: -4.980742931365967
    6. 'from' → logprob: -5.480742931365967
    7. 'import' → logprob: -5.855742931365967
    8. '...' → logprob: -6.230742931365967
    9. '\' → logprob: -6.605742931365967
    10. 'n' → logprob: -6.980742931365967

Token 244: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.18876749277114868
    2. 'def' → logprob: -2.188767433166504
    3. '#' → logprob: -3.063767433166504
    4. 'import' → logprob: -4.438767433166504
    5. '```' → logprob: -8.813767433166504
    6. 'n' → logprob: -9.188767433166504
    7. 'sys' → logprob: -9.313767433166504
    8. '"""' → logprob: -9.438767433166504
    9. ' from' → logprob: -9.438767433166504
    10. '#!/' → logprob: -9.563767433166504

Token 245: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.1280653327703476
    2. 'collections' → logprob: -2.378065347671509
    3. ' heap' → logprob: -3.878065347671509
    4. 'bis' → logprob: -5.37806510925293
    5. 'math' → logprob: -6.87806510925293
    6. ' collections' → logprob: -7.00306510925293
    7. 'typing' → logprob: -9.37806510925293
    8. 'operator' → logprob: -9.87806510925293
    9. 'sys' → logprob: -10.50306510925293
    10. ' typing' → logprob: -10.87806510925293

Token 246: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -8.061054359131958e-06
    2. '_' → logprob: -12.000007629394531
    3. 'import' → logprob: -13.375007629394531
    4. 'dict' → logprob: -15.625007629394531
    5. 'queue' → logprob: -16.12500762939453
    6. '_queue' → logprob: -18.12500762939453
    7. 'n' → logprob: -18.37500762939453
    8. '_q' → logprob: -18.37500762939453
    9. '=' → logprob: -18.87500762939453
    10. '<|end|>' → logprob: -19.00000762939453

Token 247: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.07012460380792618
    2. 'import' → logprob: -2.695124626159668
    3. '<|end|>' → logprob: -9.070124626159668
    4. ' ' → logprob: -9.695124626159668
    5. '	import' → logprob: -11.945124626159668
    6. '_import' → logprob: -13.320124626159668
    7. ' ' → logprob: -13.820124626159668
    8. ' imports' → logprob: -14.320124626159668
    9. '<|end|>' → logprob: -14.320124626159668
    10. ' im' → logprob: -15.445124626159668

Token 248: ' heap' (ID: 37237)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.005344517063349485
    2. 'heap' → logprob: -5.255344390869141
    3. ' he' → logprob: -9.13034439086914
    4. '.he' → logprob: -13.38034439086914
    5. 'import' → logprob: -15.00534439086914
    6. ' heap' → logprob: -15.13034439086914
    7. '```' → logprob: -16.63034439086914
    8. '.heap' → logprob: -16.75534439086914
    9. '_he' → logprob: -17.38034439086914
    10. '(heap' → logprob: -17.38034439086914

Token 249: 'ify' (ID: 1985)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.017249085009098053
    2. 'ify' → logprob: -4.39224910736084
    3. 'replace' → logprob: -5.76724910736084
    4. 'push' → logprob: -6.89224910736084
    5. 'queue' → logprob: -8.51724910736084
    6. '_push' → logprob: -9.01724910736084
    7. 'ush' → logprob: -9.64224910736084
    8. '_' → logprob: -9.89224910736084
    9. '_replace' → logprob: -10.51724910736084
    10. '<|end|>' → logprob: -10.64224910736084

Token 250: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.025042442604899406
    2. 'from' → logprob: -3.9000425338745117
    3. 'import' → logprob: -6.025042533874512
    4. 'heap' → logprob: -7.275042533874512
    5. '#' → logprob: -8.650042533874512
    6. ',p' → logprob: -8.775042533874512
    7. ',
' → logprob: -8.775042533874512
    8. ' ,' → logprob: -8.900042533874512
    9. 'he' → logprob: -9.025042533874512
    10. '<|end|>' → logprob: -9.150042533874512

Token 251: ' he' (ID: 501)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.0012577339075505733
    2. ' he' → logprob: -6.75125789642334
    3. 'heap' → logprob: -9.37625789642334
    4. '.he' → logprob: -12.87625789642334
    5. '_he' → logprob: -15.50125789642334
    6. ' heap' → logprob: -17.001256942749023
    7. 'h' → logprob: -18.501256942749023
    8. '```' → logprob: -19.626256942749023
    9. '.heap' → logprob: -20.126256942749023
    10. '-he' → logprob: -20.126256942749023

Token 252: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.004110815469175577
    2. 'ap' → logprob: -5.504110813140869
    3. 'a' → logprob: -10.379111289978027
    4. 'aq' → logprob: -13.879111289978027
    5. 'ап' → logprob: -16.75411033630371
    6. 'aps' → logprob: -17.12911033630371
    7. 'appen' → logprob: -17.12911033630371
    8. '[' → logprob: -17.25411033630371
    9. ' app' → logprob: -17.50411033630371
    10. 'appi' → logprob: -17.50411033630371

Token 253: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.03804194927215576
    2. 'op' → logprob: -3.2880420684814453
    3. 'o' → logprob: -15.663042068481445
    4. '[' → logprob: -16.788042068481445
    5. '

' → logprob: -17.038042068481445
    6. '
' → logprob: -17.413042068481445
    7. 'u' → logprob: -17.538042068481445
    8. 'us' → logprob: -17.663042068481445
    9. '```' → logprob: -17.663042068481445
    10. 'opleft' → logprob: -17.663042068481445

Token 254: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0028191357851028442
    2. '#' → logprob: -6.502819061279297
    3. 'from' → logprob: -7.252819061279297
    4. 'he' → logprob: -8.127819061279297
    5. ' ,' → logprob: -9.502819061279297
    6. 'import' → logprob: -9.877819061279297
    7. ',
' → logprob: -10.377819061279297
    8. '<|end|>' → logprob: -10.627819061279297
    9. ',#' → logprob: -10.752819061279297
    10. 'def' → logprob: -11.377819061279297

Token 255: ' he' (ID: 501)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.0019329203059896827
    2. ' he' → logprob: -6.2519330978393555
    3. 'heap' → logprob: -12.376933097839355
    4. '.he' → logprob: -16.37693214416504
    5. 'h' → logprob: -18.12693214416504
    6. 'hev' → logprob: -18.37693214416504
    7. ' heap' → logprob: -18.37693214416504
    8. '_he' → logprob: -18.50193214416504
    9. ' ' → logprob: -19.00193214416504
    10. '
' → logprob: -19.37693214416504

Token 256: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.001170460251159966
    2. 'ap' → logprob: -6.751170635223389
    3. 'a' → logprob: -16.501171112060547
    4. 'appen' → logprob: -17.126171112060547
    5. 'ап' → logprob: -17.876171112060547
    6. 'pp' → logprob: -17.876171112060547
    7. 'appt' → logprob: -17.876171112060547
    8. 'apps' → logprob: -18.251171112060547
    9. '(app' → logprob: -18.501171112060547
    10. '
' → logprob: -18.626171112060547

Token 257: 'op' (ID: 467)
  Prédit: 'ush'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.10021066665649414
    2. 'op' → logprob: -2.350210666656494
    3. 'opp' → logprob: -13.975210189819336
    4. '```' → logprob: -14.350210189819336
    5. '   ' → logprob: -14.600210189819336
    6. 'o' → logprob: -14.725210189819336
    7. 'q' → logprob: -15.350210189819336
    8. 'osh' → logprob: -15.475210189819336
    9. 'opleft' → logprob: -15.475210189819336
    10. 'p' → logprob: -15.600210189819336

Token 258: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03524016588926315
    2. '#' → logprob: -4.160240173339844
    3. '<|end|>' → logprob: -4.160240173339844
    4. 'from' → logprob: -7.035240173339844
    5. 'n' → logprob: -7.535240173339844
    6. 'import' → logprob: -7.660240173339844
    7. '
' → logprob: -8.035240173339844
    8. '<|end|>' → logprob: -8.285240173339844
    9. '...' → logprob: -8.785240173339844
    10. 'pass' → logprob: -9.160240173339844

Token 259: 'n' (ID: 77)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07535220682621002
    2. 'd' → logprob: -3.075352191925049
    3. 'n' → logprob: -3.825352191925049
    4. 'a' → logprob: -6.200352191925049
    5. 's' → logprob: -7.450352191925049
    6. '#' → logprob: -7.825352191925049
    7. 'N' → logprob: -8.325352668762207
    8. 't' → logprob: -8.450352668762207
    9. 'x' → logprob: -8.575352668762207
    10. 'l' → logprob: -9.200352668762207

Token 260: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16297687590122223
    2. '=' → logprob: -1.912976861000061
    3. ',' → logprob: -6.1629767417907715
    4. '=int' → logprob: -8.66297721862793
    5. '3' → logprob: -8.91297721862793
    6. ' ' → logprob: -9.28797721862793
    7. '0' → logprob: -9.41297721862793
    8. '1' → logprob: -9.66297721862793
    9. '=n' → logprob: -10.53797721862793
    10. ' =
' → logprob: -11.03797721862793

Token 261: ' n' (ID: 297)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.693436861038208
    2. 'n' → logprob: -0.818436861038208
    3. ' int' → logprob: -3.568436861038208
    4. ' n' → logprob: -3.818436861038208
    5. 's' → logprob: -5.068436622619629
    6. '10' → logprob: -7.443436622619629
    7. ' ' → logprob: -7.568436622619629
    8. ' s' → logprob: -7.693436622619629
    9. '0' → logprob: -7.818436622619629
    10. '5' → logprob: -8.443436622619629

Token 262: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0016322131268680096
    2. '()' → logprob: -6.751632213592529
    3. '3' → logprob: -8.376631736755371
    4. '1' → logprob: -8.626631736755371
    5. '(' → logprob: -10.626631736755371
    6. '()
' → logprob: -11.626631736755371
    7. '(n' → logprob: -12.126631736755371
    8. '())' → logprob: -12.376631736755371
    9. '2' → logprob: -13.251631736755371
    10. '()]' → logprob: -13.626631736755371

Token 263: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00015943869948387146
    2. '()
' → logprob: -8.75015926361084
    3. '()

' → logprob: -14.12515926361084
    4. ' ()' → logprob: -15.75015926361084
    5. '()]' → logprob: -17.500160217285156
    6. '()
' → logprob: -17.625160217285156
    7. '(' → logprob: -18.000160217285156
    8. '()<' → logprob: -18.625160217285156
    9. '()`' → logprob: -18.625160217285156
    10. '()\' → logprob: -18.875160217285156

Token 264: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.046735286712646484
    2. 's' → logprob: -3.7967352867126465
    3. 'arr' → logprob: -5.0467352867126465
    4. 'A' → logprob: -5.4217352867126465
    5. 'l' → logprob: -6.0467352867126465
    6. 'p' → logprob: -6.1717352867126465
    7. 'lst' → logprob: -6.1717352867126465
    8. 'x' → logprob: -6.6717352867126465
    9. 't' → logprob: -7.1717352867126465
    10. 'c' → logprob: -7.5467352867126465

Token 265: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5761162042617798
    2. '=' → logprob: -0.8261162042617798
    3. '3' → logprob: -9.826116561889648
    4. ',' → logprob: -9.951116561889648
    5. '=n' → logprob: -10.826116561889648
    6. 's' → logprob: -10.951116561889648
    7. '1' → logprob: -12.326116561889648
    8. '0' → logprob: -12.451116561889648
    9. '=[]' → logprob: -12.576116561889648
    10. 'a' → logprob: -12.576116561889648

Token 266: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0007235141238197684
    2. 's' → logprob: -7.875723361968994
    3. 't' → logprob: -9.125723838806152
    4. ' n' → logprob: -9.375723838806152
    5. '[n' → logprob: -9.500723838806152
    6. '[' → logprob: -11.000723838806152
    7. '[]' → logprob: -11.125723838806152
    8. '[]
' → logprob: -11.250723838806152
    9. 'list' → logprob: -11.500723838806152
    10. '(n' → logprob: -11.875723838806152

Token 267: '2' (ID: 17)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.9263824224472046
    2. '()' → logprob: -1.1763824224472046
    3. 'n' → logprob: -1.9263824224472046
    4. '1' → logprob: -3.426382541656494
    5. '<|end|>' → logprob: -3.801382541656494
    6. 's' → logprob: -3.926382541656494
    7. '+' → logprob: -4.176382541656494
    8. '%' → logprob: -4.426382541656494
    9. '3' → logprob: -4.551382541656494
    10. '(n' → logprob: -5.176382541656494

Token 268: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -6.706686690449715e-05
    2. '(' → logprob: -9.625066757202148
    3. '(
' → logprob: -14.125066757202148
    4. ' (' → logprob: -15.625066757202148
    5. 'n' → logprob: -16.75006675720215
    6. '(a' → logprob: -18.12506675720215
    7. '((' → logprob: -18.25006675720215
    8. '()' → logprob: -18.50006675720215
    9. '(nn' → logprob: -19.25006675720215
    10. 'a' → logprob: -20.00006675720215

Token 269: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15838240087032318
    2. '(n' → logprob: -2.1583824157714844
    3. '(' → logprob: -3.9083824157714844
    4. '())' → logprob: -4.658382415771484
    5. '()' → logprob: -6.658382415771484
    6. '(a' → logprob: -10.033382415771484
    7. 'n' → logprob: -10.783382415771484
    8. ')
' → logprob: -11.158382415771484
    9. ')n' → logprob: -11.283382415771484
    10. '(
' → logprob: -11.408382415771484

Token 270: 'b' (ID: 65)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.42595335841178894
    2. 's' → logprob: -1.6759533882141113
    3. 'c' → logprob: -2.6759533882141113
    4. 'm' → logprob: -3.9259533882141113
    5. 'print' → logprob: -4.300953388214111
    6. 'ans' → logprob: -4.675953388214111
    7. 'b' → logprob: -4.800953388214111
    8. 'cnt' → logprob: -4.925953388214111
    9. 'dp' → logprob: -4.925953388214111
    10. 'sum' → logprob: -5.175953388214111

Token 271: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07031529396772385
    2. ' =' → logprob: -2.695315361022949
    3. '(' → logprob: -8.19531536102295
    4. '_' → logprob: -10.44531536102295
    5. 'a' → logprob: -10.82031536102295
    6. '(n' → logprob: -11.07031536102295
    7. '=n' → logprob: -11.69531536102295
    8. ',' → logprob: -12.07031536102295
    9. '=a' → logprob: -12.32031536102295
    10. '(a' → logprob: -12.57031536102295

Token 272: ' sorted' (ID: 20099)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.05256234109401703
    2. ' n' → logprob: -3.1775622367858887
    3. '[n' → logprob: -5.177562236785889
    4. ' [' → logprob: -6.802562236785889
    5. '[' → logprob: -7.427562236785889
    6. 'sorted' → logprob: -7.427562236785889
    7. 's' → logprob: -7.552562236785889
    8. 'a' → logprob: -8.552562713623047
    9. 't' → logprob: -8.927562713623047
    10. ' sorted' → logprob: -9.302562713623047

Token 273: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -5.5577775128767826e-06
    2. 'a' → logprob: -12.500005722045898
    3. '(' → logprob: -13.500005722045898
    4. '(n' → logprob: -16.0000057220459
    5. '(b' → logprob: -17.0000057220459
    6. '([' → logprob: -17.1250057220459
    7. '(set' → logprob: -17.2500057220459
    8. '((' → logprob: -17.5000057220459
    9. '(list' → logprob: -17.7500057220459
    10. '(s' → logprob: -18.7500057220459

Token 274: ')
' (ID: 446)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.10777892172336578
    2. ')' → logprob: -2.482779026031494
    3. '()' → logprob: -4.232779026031494
    4. '(),' → logprob: -5.607779026031494
    5. '(' → logprob: -7.982779026031494
    6. '(reverse' → logprob: -10.107778549194336
    7. '())
' → logprob: -10.232778549194336
    8. ' ())' → logprob: -10.857778549194336
    9. '()
' → logprob: -11.607778549194336
    10. ',' → logprob: -11.732778549194336

Token 275: 'm' (ID: 76)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.9826229214668274
    2. 'c' → logprob: -2.1076228618621826
    3. 'for' → logprob: -2.1076228618621826
    4. 'ans' → logprob: -2.3576228618621826
    5. 'diff' → logprob: -2.7326228618621826
    6. 'p' → logprob: -2.8576228618621826
    7. 'if' → logprob: -2.9826228618621826
    8. 'm' → logprob: -3.9826228618621826
    9. 'cnt' → logprob: -4.232623100280762
    10. 'd' → logprob: -4.482623100280762

Token 276: '1' (ID: 16)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6933688521385193
    2. ' =' → logprob: -0.6933688521385193
    3. 'a' → logprob: -9.443368911743164
    4. 'ax' → logprob: -9.693368911743164
    5. '0' → logprob: -10.693368911743164
    6. '=int' → logprob: -11.443368911743164
    7. '=a' → logprob: -11.943368911743164
    8. '=[]' → logprob: -12.443368911743164
    9. '=b' → logprob: -12.818368911743164
    10. '=
' → logprob: -12.818368911743164

Token 277: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1110500767827034
    2. '=' → logprob: -3.3610501289367676
    3. 'in' → logprob: -3.4860501289367676
    4. '1' → logprob: -4.111050128936768
    5. 'ax' → logprob: -4.236050128936768
    6. '=max' → logprob: -6.736050128936768
    7. '=m' → logprob: -6.861050128936768
    8. 'a' → logprob: -6.861050128936768
    9. '=b' → logprob: -6.986050128936768
    10. 'm' → logprob: -7.236050128936768

Token 278: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.06738098710775375
    2. 'max' → logprob: -3.317380905151367
    3. 'float' → logprob: -4.692380905151367
    4. 'a' → logprob: -4.942380905151367
    5. '0' → logprob: -5.567380905151367
    6. 'min' → logprob: -6.442380905151367
    7. 'len' → logprob: -6.442380905151367
    8. '-' → logprob: -6.567380905151367
    9. '1' → logprob: -7.192380905151367
    10. '(b' → logprob: -7.317380905151367

Token 279: '[-' (ID: 17503)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5563695430755615
    2. '[-' → logprob: -0.9313695430755615
    3. '[n' → logprob: -3.4313695430755615
    4. '0' → logprob: -9.05636978149414
    5. '[int' → logprob: -9.93136978149414
    6. '[len' → logprob: -9.93136978149414
    7. '1' → logprob: -10.30636978149414
    8. '[m' → logprob: -10.55636978149414
    9. '.index' → logprob: -10.80636978149414
    10. 'n' → logprob: -11.93136978149414

Token 280: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.523456871509552
    2. '1' → logprob: -0.898456871509552
    3. '3' → logprob: -8.023456573486328
    4. 'k' → logprob: -13.148456573486328
    5. ' ' → logprob: -13.273456573486328
    6. '4' → logprob: -14.398456573486328
    7. '-' → logprob: -15.148456573486328
    8. '5' → logprob: -15.398456573486328
    9. '   ' → logprob: -15.523456573486328
    10. 'm' → logprob: -15.585956573486328

Token 281: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2575682997703552
    2. ']
' → logprob: -1.507568359375
    3. ']-' → logprob: -5.257568359375
    4. ']+' → logprob: -8.757568359375
    5. ']

' → logprob: -8.882568359375
    6. ']
' → logprob: -10.257568359375
    7. ']*' → logprob: -11.257568359375
    8. '-' → logprob: -11.257568359375
    9. '];' → logprob: -11.507568359375
    10. ' ]' → logprob: -11.632568359375

Token 282: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.005902845878154039
    2. 'if' → logprob: -6.3809027671813965
    3. 'c' → logprob: -6.6309027671813965
    4. 'print' → logprob: -7.5059027671813965
    5. 's' → logprob: -7.5059027671813965
    6. 'cnt' → logprob: -8.005903244018555
    7. 'for' → logprob: -8.505903244018555
    8. 'ans' → logprob: -8.630903244018555
    9. '
' → logprob: -8.880903244018555
    10. 'count' → logprob: -9.005903244018555

Token 283: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0017674085684120655
    2. '_' → logprob: -6.501767635345459
    3. '-' → logprob: -8.7517671585083
    4. '1' → logprob: -9.8767671585083
    5. '
' → logprob: -11.0017671585083
    6. '0' → logprob: -11.1267671585083
    7. ' =' → logprob: -11.8767671585083
    8. '=' → logprob: -12.0017671585083
    9. 'm' → logprob: -13.2517671585083
    10. '```' → logprob: -13.6267671585083

Token 284: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889397442340851
    2. '=' → logprob: -2.5788938999176025
    3. '=b' → logprob: -13.078893661499023
    4. ',' → logprob: -13.578893661499023
    5. ' ' → logprob: -14.453893661499023
    6. 'b' → logprob: -16.203893661499023
    7. ' =
' → logprob: -16.453893661499023
    8. 'm' → logprob: -17.078893661499023
    9. ' b' → logprob: -17.453893661499023
    10. '=m' → logprob: -17.703893661499023

Token 285: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0052342405542731285
    2. ' b' → logprob: -5.255234241485596
    3. ' next' → logprob: -16.255233764648438
    4. '0' → logprob: -16.380233764648438
    5. '	b' → logprob: -17.005233764648438
    6. 'next' → logprob: -17.005233764648438
    7. 'a' → logprob: -17.005233764648438
    8. ' ' → logprob: -17.255233764648438
    9. 'max' → logprob: -17.380233764648438
    10. '(b' → logprob: -17.380233764648438

Token 286: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.03044070303440094
    2. '[:-' → logprob: -3.5304408073425293
    3. '[' → logprob: -7.780440807342529
    4. '[n' → logprob: -8.530440330505371
    5. '[m' → logprob: -10.780440330505371
    6. '[:' → logprob: -11.405440330505371
    7. '[::-' → logprob: -11.530440330505371
    8. '-' → logprob: -11.530440330505371
    9. 'n' → logprob: -12.280440330505371
    10. 'sorted' → logprob: -12.655440330505371

Token 287: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. '3' → logprob: -16.875
    3. ' ' → logprob: -18.125
    4. '1' → logprob: -18.625
    5. '２' → logprob: -19.5
    6. '-' → logprob: -19.5
    7. '```' → logprob: -20.0
    8. '4' → logprob: -20.3125
    9. '
' → logprob: -21.3125
    10. '22' → logprob: -21.4375

Token 288: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.016544301062822342
    2. ')' → logprob: -4.141544342041016
    3. 'if' → logprob: -8.516544342041016
    4. 'm' → logprob: -9.516544342041016
    5. ']
' → logprob: -9.891544342041016
    6. '<|end|>' → logprob: -9.891544342041016
    7. ' if' → logprob: -10.141544342041016
    8. '+' → logprob: -11.141544342041016
    9. ')]' → logprob: -11.141544342041016
    10. 'def' → logprob: -11.516544342041016

Token 289: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -4.263011578586884e-05
    2. '
' → logprob: -10.250042915344238
    3. ' for' → logprob: -12.000042915344238
    4. 'i' → logprob: -15.375042915344238
    5. '```' → logprob: -15.375042915344238
    6. '<|end|>' → logprob: -15.500042915344238
    7. '	for' → logprob: -16.000041961669922
    8. 'result' → logprob: -16.625041961669922
    9. '[' → logprob: -16.875041961669922
    10. 'def' → logprob: -17.000041961669922

Token 290: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.4193153977394104
    2. ' x' → logprob: -1.4193153381347656
    3. 'i' → logprob: -2.9193153381347656
    4. 'x' → logprob: -4.044315338134766
    5. ' ai' → logprob: -4.169315338134766
    6. 'ai' → logprob: -5.044315338134766
    7. ' a' → logprob: -5.919315338134766
    8. ' _' → logprob: -6.794315338134766
    9. ' ' → logprob: -7.169315338134766
    10. '_' → logprob: -7.294315338134766

Token 291: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.16187675297260284
    2. 'in' → logprob: -1.9118767976760864
    3. ' ' → logprob: -6.911876678466797
    4. ',' → logprob: -7.411876678466797
    5. 'n' → logprob: -10.786876678466797
    6. ' ,' → logprob: -11.411876678466797
    7. ' i' → logprob: -12.161876678466797
    8. 'i' → logprob: -12.911876678466797
    9. '	in' → logprob: -13.036876678466797
    10. '  ' → logprob: -13.161876678466797

Token 292: ' a' (ID: 261)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0011796315666288137
    2. ' range' → logprob: -7.3761796951293945
    3. 'a' → logprob: -7.5011796951293945
    4. 'r' → logprob: -15.376179695129395
    5. 'b' → logprob: -16.501178741455078
    6. ' a' → logprob: -16.501178741455078
    7. '   ' → logprob: -16.876178741455078
    8. 'ra' → logprob: -17.376178741455078
    9. '	range' → logprob: -17.376178741455078
    10. '(range' → logprob: -17.501178741455078

Token 293: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0010931886499747634
    2. ':
' → logprob: -6.87609338760376
    3. ' :' → logprob: -9.751092910766602
    4. ' in' → logprob: -14.251092910766602
    5. '):' → logprob: -14.626092910766602
    6. ' :
' → logprob: -15.376092910766602
    7. 'in' → logprob: -15.501092910766602
    8. '():' → logprob: -15.626092910766602
    9. ':

' → logprob: -16.5010929107666
    10. ',' → logprob: -16.5010929107666

Token 294: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17077700793743134
    2. ' if' → logprob: -2.1707770824432373
    3. ' print' → logprob: -3.1707770824432373
    4. ' p' → logprob: -7.670776844024658
    5. 'print' → logprob: -8.545777320861816
    6. 'if' → logprob: -8.920777320861816
    7. '(p' → logprob: -10.795777320861816
    8. '.print' → logprob: -10.920777320861816
    9. '
' → logprob: -11.045777320861816
    10. ':' → logprob: -11.295777320861816

Token 295: ' p' (ID: 275)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.34512948989868164
    2. '   ' → logprob: -1.3451294898986816
    3. 'if' → logprob: -3.4701294898986816
    4. ' p' → logprob: -8.470129013061523
    5. ' print' → logprob: -10.720129013061523
    6. 'print' → logprob: -11.845129013061523
    7. '	if' → logprob: -12.970129013061523
    8. ' ' → logprob: -12.970129013061523
    9. '       ' → logprob: -13.095129013061523
    10. '  ' → logprob: -13.095129013061523

Token 296: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5048530030981055e-06
    2. 'r' → logprob: -13.500001907348633
    3. '(r' → logprob: -17.750001907348633
    4. '(' → logprob: -19.375001907348633
    5. '1' → logprob: -20.500001907348633
    6. '```' → logprob: -20.750001907348633
    7. ' ' → logprob: -21.500001907348633
    8. '#' → logprob: -21.750001907348633
    9. '
' → logprob: -22.625001907348633
    10. '2' → logprob: -23.250001907348633

Token 297: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0005120449932292104
    2. '(m' → logprob: -7.75051212310791
    3. 'i' → logprob: -9.62551212310791
    4. '(' → logprob: -11.37551212310791
    5. 'm' → logprob: -12.62551212310791
    6. '((' → logprob: -15.75051212310791
    7. '(
' → logprob: -16.375511169433594
    8. '(True' → logprob: -16.500511169433594
    9. '(False' → logprob: -17.125511169433594
    10. '   ' → logprob: -17.250511169433594

Token 298: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3136098086833954
    2. ' ==' → logprob: -1.3136098384857178
    3. '>=' → logprob: -8.813610076904297
    4. ' >=' → logprob: -9.313610076904297
    5. ' ' → logprob: -9.938610076904297
    6. ' !=' → logprob: -11.063610076904297
    7. '!=' → logprob: -11.688610076904297
    8. '==
' → logprob: -11.688610076904297
    9. '=' → logprob: -12.063610076904297
    10. ')' → logprob: -12.313610076904297

Token 299: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -7.941850526549388e-06
    2. ' m' → logprob: -12.125007629394531
    3. '   ' → logprob: -13.125007629394531
    4. '	m' → logprob: -15.500007629394531
    5. '  ' → logprob: -16.12500762939453
    6. ' ' → logprob: -17.12500762939453
    7. '[m' → logprob: -17.50000762939453
    8. '    ' → logprob: -17.62500762939453
    9. '<m' → logprob: -17.75000762939453
    10. '```' → logprob: -17.87500762939453

Token 300: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.130576806142926e-05
    2. '2' → logprob: -10.375031471252441
    3. 'ax' → logprob: -17.750030517578125
    4. '１' → logprob: -18.000030517578125
    5. 'a' → logprob: -18.437530517578125
    6. ' ' → logprob: -18.437530517578125
    7. 'm' → logprob: -18.562530517578125
    8. 'l' → logprob: -19.000030517578125
    9. '   ' → logprob: -19.437530517578125
    10. 'i' → logprob: -19.500030517578125

Token 301: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007666840683668852
    2. ',' → logprob: -5.257667064666748
    3. ' or' → logprob: -6.382667064666748
    4. ' and' → logprob: -7.882667064666748
    5. 'or' → logprob: -9.50766658782959
    6. 'and' → logprob: -9.50766658782959
    7. ',"' → logprob: -9.50766658782959
    8. '<|end|>' → logprob: -10.25766658782959
    9. ' )' → logprob: -10.50766658782959
    10. '"' → logprob: -10.88266658782959

Token 302: ' m' (ID: 284)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.674440324306488
    2. 'yes' → logprob: -0.799440324306488
    3. ' yes' → logprob: -3.299440383911133
    4. ''' → logprob: -6.049440383911133
    5. ' "' → logprob: -6.924440383911133
    6. ')' → logprob: -8.924440383911133
    7. ' ' → logprob: -9.424440383911133
    8. '""' → logprob: -9.424440383911133
    9. '"\' → logprob: -9.424440383911133
    10. '  
' → logprob: -10.049440383911133

Token 303: '2' (ID: 17)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.2473665475845337
    2. 'ax' → logprob: -1.6223665475845337
    3. 'a' → logprob: -4.497366428375244
    4. '1' → logprob: -5.122366428375244
    5. ''' → logprob: -5.872366428375244
    6. 'o' → logprob: -8.122366905212402
    7. 'y' → logprob: -8.372366905212402
    8. 'e' → logprob: -8.622366905212402
    9. 'Yes' → logprob: -8.747366905212402
    10. 'x' → logprob: -8.872366905212402

Token 304: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02946707047522068
    2. '"' → logprob: -4.7794671058654785
    3. ')' → logprob: -5.1544671058654785
    4. ' ,' → logprob: -5.5294671058654785
    5. ',m' → logprob: -5.5294671058654785
    6. ',i' → logprob: -6.6544671058654785
    7. ',f' → logprob: -7.1544671058654785
    8. ',"' → logprob: -7.4044671058654785
    9. '=' → logprob: -7.6544671058654785
    10. '   ' → logprob: -7.7794671058654785

Token 305: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.00021748353901784867
    2. 'i' → logprob: -8.75021743774414
    3. ' m' → logprob: -10.00021743774414
    4. 'str' → logprob: -12.12521743774414
    5. '"' → logprob: -13.00021743774414
    6. ')' → logprob: -13.37521743774414
    7. ' ' → logprob: -13.75021743774414
    8. '-' → logprob: -14.12521743774414
    9. ' i' → logprob: -14.75021743774414
    10. '   ' → logprob: -14.75021743774414

Token 306: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. '<|end|>' → logprob: -15.125000953674316
    3. ')' → logprob: -15.250000953674316
    4. '2' → logprob: -15.500000953674316
    5. '```' → logprob: -16.75
    6. 'i' → logprob: -17.625
    7. '<|end|>' → logprob: -17.875
    8. 'str' → logprob: -18.0
    9. ' ' → logprob: -18.0625
    10. 'r' → logprob: -18.0625

Token 307: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.372294698550832e-06
    2. ' )' → logprob: -11.750009536743164
    3. '))' → logprob: -14.250009536743164
    4. ')
' → logprob: -14.250009536743164
    5. '())' → logprob: -16.875009536743164
    6. ')

' → logprob: -17.500009536743164
    7. '')' → logprob: -18.250009536743164
    8. ',)' → logprob: -18.875009536743164
    9. ')}' → logprob: -18.875009536743164
    10. ')`' → logprob: -18.875009536743164


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 305
Tokens correctement prédits (1ère position, stricte): 135
Tokens correctement prédits (1ère position, avec adaptation): 138
Tokens correctement prédits (top 10): 255
Précision stricte (1ère position): 44.26%
Précision adaptée (1ère position): 45.25%
Précision (top 10): 83.61%
================================================================================
